; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?current_modem@@3PAUMODEM_NAMES@@A		; current_modem
PUBLIC	?modem_state@@3W4MODEM_INITIALISE_VALUES@@A	; modem_state
PUBLIC	?current_active_service@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A ; current_active_service
_BSS	SEGMENT
?current_modem@@3PAUMODEM_NAMES@@A DD 01H DUP (?)	; current_modem
?modem_state@@3W4MODEM_INITIALISE_VALUES@@A DD 01H DUP (?) ; modem_state
?current_active_service@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A DD 01H DUP (?) ; current_active_service
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?validate_modem_connection@@YGXXZ		; validate_modem_connection
PUBLIC	?set_serial_connection_status@@YGXXZ		; set_serial_connection_status
PUBLIC	?notify_multi_player_setup@@YGXXZ		; notify_multi_player_setup
PUBLIC	?notify_modem_cancel_function@@YGXPAUUI_OBJECT@@PAX@Z ; notify_modem_cancel_function
PUBLIC	?notify_modem_dial_function@@YGXPAUUI_OBJECT@@PAX@Z ; notify_modem_dial_function
PUBLIC	?notify_modem_answer_function@@YGXPAUUI_OBJECT@@PAX@Z ; notify_modem_answer_function
PUBLIC	?start_service_provider@@YGXPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z ; start_service_provider
PUBLIC	?notify_connection_type_button@@YGXPAUUI_OBJECT@@PAX@Z ; notify_connection_type_button
PUBLIC	?install_global_options_service_provider@@YGXXZ	; install_global_options_service_provider
PUBLIC	?store_multiplayer_options@@YGXXZ		; store_multiplayer_options
PUBLIC	?initialise_service_provider_connection@@YGXXZ	; initialise_service_provider_connection
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0N@GHHPHBFB@MP_CONNECTED@			; `string'
PUBLIC	??_C@_09NGFKAJIO@MP_STATUS@			; `string'
PUBLIC	??_C@_06DJHOIPC@?$CFs?3?5?$CFs@			; `string'
PUBLIC	??_C@_0BG@HNHNDLOK@MP_INVALID_PROPERTIES@	; `string'
PUBLIC	??_C@_0M@ENPANIEJ@MP_INTERNET@			; `string'
PUBLIC	??_C@_09ENJGLPJC@MP_SERIAL@			; `string'
PUBLIC	??_C@_08PIAFACLK@MP_MODEM@			; `string'
PUBLIC	??_C@_06JEAIKIO@MP_IPX@				; `string'
PUBLIC	??_C@_0BH@FHHJHLIC@MP_NO_SERVICE_PROVIDER@	; `string'
PUBLIC	??_C@_0BD@CJDKJGAI@No?5Modem?5Installed@	; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_0P@INKGIJFC@MP_UNCONNECTED@		; `string'
PUBLIC	??_C@_0BE@HOBDPNNO@MP_WAITING_FOR_CALL@		; `string'
PUBLIC	??_C@_0BB@CMENCCMM@MP_FINDING_GAMES@		; `string'
PUBLIC	??_C@_0BB@DAGKNNDH@MP_JOINING_GAMES@		; `string'
PUBLIC	??_C@_0BA@KHABAAKJ@MP_CONNECTED_AT@		; `string'
PUBLIC	??_C@_09NBKJFNCI@?$CFs?3?5?$CFs?5?$CFd@		; `string'
PUBLIC	??_C@_0DO@MLELIGKJ@SESSION?3?5Server?5has?5got?5a?5probl@ ; `string'
PUBLIC	??_C@_0DI@BECOOMCC@Server?5has?5got?5a?5problem?0?5reque@ ; `string'
PUBLIC	??_C@_0O@OEHCPNLP@MP_CONNECTING@		; `string'
PUBLIC	??_C@_0DH@LBDAIGEB@How?5can?5you?5exit?5this?5screen?5wi@ ; `string'
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?set_delta_time@@YGXXZ:PROC			; set_delta_time
EXTRN	?get_system_time@@YGIXZ:PROC			; get_system_time
EXTRN	?blit_front_buffer_to_render_buffer@@YGXXZ:PROC	; blit_front_buffer_to_render_buffer
EXTRN	?direct_play_close_session@@YGHXZ:PROC		; direct_play_close_session
EXTRN	?direct_play_create_interface@@YGHPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z:PROC ; direct_play_create_interface
EXTRN	?direct_play_destroy_interface@@YGHXZ:PROC	; direct_play_destroy_interface
EXTRN	?direct_play_interface_capabilities@@YGHXZ:PROC	; direct_play_interface_capabilities
EXTRN	?direct_play_enumerate_sessions@@YGHXZ:PROC	; direct_play_enumerate_sessions
EXTRN	?direct_play_create_session@@YGHH@Z:PROC	; direct_play_create_session
EXTRN	?direct_play_join_session@@YGHXZ:PROC		; direct_play_join_session
EXTRN	?direct_play_session_capabilities@@YGHXZ:PROC	; direct_play_session_capabilities
EXTRN	?direct_play_get_session_capabilities@@YGPAUDPSESSIONDESC2@@XZ:PROC ; direct_play_get_session_capabilities
EXTRN	?direct_play_enumerate_groups@@YGHXZ:PROC	; direct_play_enumerate_groups
EXTRN	?direct_play_create_group@@YGHXZ:PROC		; direct_play_create_group
EXTRN	?direct_play_destroy_group@@YGHXZ:PROC		; direct_play_destroy_group
EXTRN	?direct_play_join_group@@YGHXZ:PROC		; direct_play_join_group
EXTRN	?direct_play_leave_group@@YGHXZ:PROC		; direct_play_leave_group
EXTRN	?direct_play_create_player@@YGHXZ:PROC		; direct_play_create_player
EXTRN	?direct_play_destroy_player@@YGHXZ:PROC		; direct_play_destroy_player
EXTRN	?direct_play_get_service_provider_table@@YGPAUSERVICE_PROVIDER_TABLE_TYPE@@XZ:PROC ; direct_play_get_service_provider_table
EXTRN	?direct_play_get_session_table@@YGPAUSESSION_TABLE_TYPE@@XZ:PROC ; direct_play_get_session_table
EXTRN	?direct_play_get_group_table@@YGPAUGROUP_TABLE_TYPE@@XZ:PROC ; direct_play_get_group_table
EXTRN	?direct_play_get_player_id@@YGHXZ:PROC		; direct_play_get_player_id
EXTRN	?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ:PROC ; direct_play_get_connection_data
EXTRN	?direct_play_get_connection_baudrate@@YGHXZ:PROC ; direct_play_get_connection_baudrate
EXTRN	?direct_play_destroy_modem@@YGXXZ:PROC		; direct_play_destroy_modem
EXTRN	?direct_play_dial_modem@@YGHPBD0@Z:PROC		; direct_play_dial_modem
EXTRN	?direct_play_dial_modem_status@@YGJXZ:PROC	; direct_play_dial_modem_status
EXTRN	?direct_play_answer_modem@@YGHPBDH@Z:PROC	; direct_play_answer_modem
EXTRN	?set_direct_play_inet_address@@YGXPBD@Z:PROC	; set_direct_play_inet_address
EXTRN	?set_direct_play_serial_address@@YGXHHHHH@Z:PROC ; set_direct_play_serial_address
EXTRN	?ui_set_user_function@@YGXP6GXXZ@Z:PROC		; ui_set_user_function
EXTRN	?reset_time_values@@YGXPAUUI_OBJECT@@@Z:PROC	; reset_time_values
EXTRN	?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z:PROC ; set_toggle_button_off
EXTRN	?save_global_options_data@@YGXXZ:PROC		; save_global_options_data
EXTRN	?set_comms_model@@YGXW4COMMS_MODEL_TYPES@@@Z:PROC ; set_comms_model
EXTRN	?reset_comms_data@@YGXXZ:PROC			; reset_comms_data
EXTRN	?initialise_comms_manager@@YGXXZ:PROC		; initialise_comms_manager
EXTRN	?deinitialise_comms_manager@@YGXXZ:PROC		; deinitialise_comms_manager
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?display_options_page@@YGXW4OPTIONS_PAGES@@@Z:PROC ; display_options_page
EXTRN	?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z:PROC ; preprocess_translation_object_size
EXTRN	_DPSPGUID_IPX:BYTE
EXTRN	_DPSPGUID_TCPIP:BYTE
EXTRN	_DPSPGUID_SERIAL:BYTE
EXTRN	_DPSPGUID_MODEM:BYTE
EXTRN	?modem_name_list@@3PAUMODEM_NAMES@@A:DWORD	; modem_name_list
EXTRN	?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_drawable
EXTRN	?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_highlightable
EXTRN	?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_text
EXTRN	?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text
EXTRN	?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_font_colour_end
EXTRN	?ui_option_text_default_colour@@3UREAL_COLOUR@@A:DWORD ; ui_option_text_default_colour
EXTRN	?command_line_max_game_update_rate@@3HA:DWORD	; command_line_max_game_update_rate
EXTRN	?command_line_max_game_update_rate_set@@3HA:DWORD ; command_line_max_game_update_rate_set
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_server_id@@3KA:DWORD			; system_server_id
EXTRN	?connection_type_bdrop@@3PAUUI_OBJECT@@A:DWORD	; connection_type_bdrop
EXTRN	?connection_type_button@@3PAUUI_OBJECT@@A:DWORD	; connection_type_button
EXTRN	?serial_parameters_area@@3PAUUI_OBJECT@@A:DWORD	; serial_parameters_area
EXTRN	?modem_parameters_area@@3PAUUI_OBJECT@@A:DWORD	; modem_parameters_area
EXTRN	?tcpip_parameters_area@@3PAUUI_OBJECT@@A:DWORD	; tcpip_parameters_area
EXTRN	?ip_address_text_obj@@3PAUUI_OBJECT@@A:DWORD	; ip_address_text_obj
EXTRN	?com_port_button@@3PAUUI_OBJECT@@A:DWORD	; com_port_button
EXTRN	?baud_rate_button@@3PAUUI_OBJECT@@A:DWORD	; baud_rate_button
EXTRN	?stop_bits_button@@3PAUUI_OBJECT@@A:DWORD	; stop_bits_button
EXTRN	?parity_button@@3PAUUI_OBJECT@@A:DWORD		; parity_button
EXTRN	?flow_button@@3PAUUI_OBJECT@@A:DWORD		; flow_button
EXTRN	?serial_status_text@@3PAUUI_OBJECT@@A:DWORD	; serial_status_text
EXTRN	?modem_type_button@@3PAUUI_OBJECT@@A:DWORD	; modem_type_button
EXTRN	?ghost_multiplayer_modem_area@@3PAUUI_OBJECT@@A:DWORD ; ghost_multiplayer_modem_area
EXTRN	?ghost_multiplayer_modem_area2@@3PAUUI_OBJECT@@A:DWORD ; ghost_multiplayer_modem_area2
EXTRN	?phone_number_text_obj@@3PAUUI_OBJECT@@A:DWORD	; phone_number_text_obj
EXTRN	?modem_answer_button@@3PAUUI_OBJECT@@A:DWORD	; modem_answer_button
EXTRN	?modem_dial_button@@3PAUUI_OBJECT@@A:DWORD	; modem_dial_button
EXTRN	?modem_status_text@@3PAUUI_OBJECT@@A:DWORD	; modem_status_text
EXTRN	?baud_rate_text@@3PAPBDA:BYTE			; baud_rate_text
EXTRN	?stop_bits_text@@3PAPBDA:BYTE			; stop_bits_text
EXTRN	?parity_text@@3PAPBDA:BYTE			; parity_text
EXTRN	?flow_text@@3PAPBDA:BYTE			; flow_text
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	?option_page_ok_button@@3PAUUI_OBJECT@@A:DWORD	; option_page_ok_button
EXTRN	?options_page@@3PAPAUUI_OBJECT@@A:BYTE		; options_page
EXTRN	?options_page_buttons@@3PAPAUUI_OBJECT@@A:BYTE	; options_page_buttons
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?update_ticks@?1??multiplayer_modem_dial_update_function@@YGXXZ@4IA DD 01H DUP (?) ; `multiplayer_modem_dial_update_function'::`2'::update_ticks
?update_ticks@?1??multiplayer_modem_answer_update_function@@YGXXZ@4IA DD 01H DUP (?) ; `multiplayer_modem_answer_update_function'::`2'::update_ticks
?update_ticks@?1??multiplayer_modem_connection_update_function@@YGXXZ@4IA DD 01H DUP (?) ; `multiplayer_modem_connection_update_function'::`2'::update_ticks
_BSS	ENDS
;	COMDAT ??_C@_0DH@LBDAIGEB@How?5can?5you?5exit?5this?5screen?5wi@
CONST	SEGMENT
??_C@_0DH@LBDAIGEB@How?5can?5you?5exit?5this?5screen?5wi@ DB 'How can you'
	DB	' exit this screen without a button to exit?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OEHCPNLP@MP_CONNECTING@
CONST	SEGMENT
??_C@_0O@OEHCPNLP@MP_CONNECTING@ DB 'MP_CONNECTING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@BECOOMCC@Server?5has?5got?5a?5problem?0?5reque@
CONST	SEGMENT
??_C@_0DI@BECOOMCC@Server?5has?5got?5a?5problem?0?5reque@ DB 'Server has '
	DB	'got a problem, request campaing restart.  %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@MLELIGKJ@SESSION?3?5Server?5has?5got?5a?5probl@
CONST	SEGMENT
??_C@_0DO@MLELIGKJ@SESSION?3?5Server?5has?5got?5a?5probl@ DB 'SESSION: Se'
	DB	'rver has got a problem, request campaing restart. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NBKJFNCI@?$CFs?3?5?$CFs?5?$CFd@
CONST	SEGMENT
??_C@_09NBKJFNCI@?$CFs?3?5?$CFs?5?$CFd@ DB '%s: %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KHABAAKJ@MP_CONNECTED_AT@
CONST	SEGMENT
??_C@_0BA@KHABAAKJ@MP_CONNECTED_AT@ DB 'MP_CONNECTED_AT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DAGKNNDH@MP_JOINING_GAMES@
CONST	SEGMENT
??_C@_0BB@DAGKNNDH@MP_JOINING_GAMES@ DB 'MP_JOINING_GAMES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CMENCCMM@MP_FINDING_GAMES@
CONST	SEGMENT
??_C@_0BB@CMENCCMM@MP_FINDING_GAMES@ DB 'MP_FINDING_GAMES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HOBDPNNO@MP_WAITING_FOR_CALL@
CONST	SEGMENT
??_C@_0BE@HOBDPNNO@MP_WAITING_FOR_CALL@ DB 'MP_WAITING_FOR_CALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@INKGIJFC@MP_UNCONNECTED@
CONST	SEGMENT
??_C@_0P@INKGIJFC@MP_UNCONNECTED@ DB 'MP_UNCONNECTED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CJDKJGAI@No?5Modem?5Installed@
CONST	SEGMENT
??_C@_0BD@CJDKJGAI@No?5Modem?5Installed@ DB 'No Modem Installed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FHHJHLIC@MP_NO_SERVICE_PROVIDER@
CONST	SEGMENT
??_C@_0BH@FHHJHLIC@MP_NO_SERVICE_PROVIDER@ DB 'MP_NO_SERVICE_PROVIDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JEAIKIO@MP_IPX@
CONST	SEGMENT
??_C@_06JEAIKIO@MP_IPX@ DB 'MP_IPX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PIAFACLK@MP_MODEM@
CONST	SEGMENT
??_C@_08PIAFACLK@MP_MODEM@ DB 'MP_MODEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09ENJGLPJC@MP_SERIAL@
CONST	SEGMENT
??_C@_09ENJGLPJC@MP_SERIAL@ DB 'MP_SERIAL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ENPANIEJ@MP_INTERNET@
CONST	SEGMENT
??_C@_0M@ENPANIEJ@MP_INTERNET@ DB 'MP_INTERNET', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HNHNDLOK@MP_INVALID_PROPERTIES@
CONST	SEGMENT
??_C@_0BG@HNHNDLOK@MP_INVALID_PROPERTIES@ DB 'MP_INVALID_PROPERTIES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
CONST	SEGMENT
??_C@_06DJHOIPC@?$CFs?3?5?$CFs@ DB '%s: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NGFKAJIO@MP_STATUS@
CONST	SEGMENT
??_C@_09NGFKAJIO@MP_STATUS@ DB 'MP_STATUS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GHHPHBFB@MP_CONNECTED@
CONST	SEGMENT
??_C@_0N@GHHPHBFB@MP_CONNECTED@ DB 'MP_CONNECTED', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_obj$ = 8						; size = 4
_flag$ = 12						; size = 4
?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z PROC	; ghost_ui_objects_for_modem, COMDAT

; 1230 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1231 : 	int
; 1232 : 		i;
; 1233 : 
; 1234 : 	// activate ghosting
; 1235 : 	if (flag == TRUE)

  00009	83 7d 0c 01	 cmp	 DWORD PTR _flag$[ebp], 1
  0000d	0f 85 fe 01 00
	00		 jne	 $LN8@ghost_ui_o

; 1236 : 	{
; 1237 : 		// disable common object items
; 1238 : 		for (i = 0; i < NUM_OPTIONS_PAGES; i++)

  00013	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@ghost_ui_o
$LN2@ghost_ui_o:
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN4@ghost_ui_o:
  00025	83 7d fc 07	 cmp	 DWORD PTR _i$[ebp], 7
  00029	7d 24		 jge	 SHORT $LN3@ghost_ui_o

; 1239 : 		{
; 1240 : 			set_ui_object_drawable (options_page_buttons [i], FALSE);

  0002b	6a 00		 push	 0
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00030	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?options_page_buttons@@3PAPAUUI_OBJECT@@A[eax*4]
  00037	51		 push	 ecx
  00038	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  0003b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?options_page_buttons@@3PAPAUUI_OBJECT@@A[edx*4]
  00042	8b 08		 mov	 ecx, DWORD PTR [eax]
  00044	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  0004b	ff d2		 call	 edx

; 1241 : 		}

  0004d	eb cd		 jmp	 SHORT $LN2@ghost_ui_o
$LN3@ghost_ui_o:

; 1242 : 
; 1243 : 		set_ui_object_drawable (option_page_ok_button, FALSE);

  0004f	6a 00		 push	 0
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?option_page_ok_button@@3PAUUI_OBJECT@@A ; option_page_ok_button
  00056	50		 push	 eax
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?option_page_ok_button@@3PAUUI_OBJECT@@A ; option_page_ok_button
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00066	ff d0		 call	 eax

; 1244 : 
; 1245 : 		// disable modem objects
; 1246 : 		set_ui_object_highlightable (connection_type_button, FALSE);

  00068	6a 00		 push	 0
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  0006f	50		 push	 eax
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0007f	ff d0		 call	 eax

; 1247 : 
; 1248 : 		set_ui_object_font_colour_end (connection_type_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 127);

  00081	6a 7f		 push	 127			; 0000007fH
  00083	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  0008a	50		 push	 eax
  0008b	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00092	51		 push	 ecx
  00093	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  0009a	52		 push	 edx
  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  000a0	50		 push	 eax
  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  000b0	ff d0		 call	 eax

; 1249 : 
; 1250 : 		set_ui_object_highlightable (phone_number_text_obj, FALSE);

  000b2	6a 00		 push	 0
  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  000b9	50		 push	 eax
  000ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  000c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000c9	ff d0		 call	 eax

; 1251 : 
; 1252 : 		set_ui_object_font_colour_end (phone_number_text_obj, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 127);

  000cb	6a 7f		 push	 127			; 0000007fH
  000cd	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  000d4	50		 push	 eax
  000d5	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  000dc	51		 push	 ecx
  000dd	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  000e4	52		 push	 edx
  000e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  000ea	50		 push	 eax
  000eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  000fa	ff d0		 call	 eax

; 1253 : 
; 1254 : 		set_ui_object_highlightable (modem_type_button, FALSE);

  000fc	6a 00		 push	 0
  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  00103	50		 push	 eax
  00104	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  0010a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00113	ff d0		 call	 eax

; 1255 : 
; 1256 : 		set_ui_object_font_colour_end (modem_type_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 127);

  00115	6a 7f		 push	 127			; 0000007fH
  00117	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  0011e	50		 push	 eax
  0011f	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00126	51		 push	 ecx
  00127	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  0012e	52		 push	 edx
  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  00134	50		 push	 eax
  00135	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  0013b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  00144	ff d0		 call	 eax

; 1257 : 
; 1258 : 		set_ui_object_highlightable (modem_answer_button, FALSE);

  00146	6a 00		 push	 0
  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  0014d	50		 push	 eax
  0014e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  00154	8b 11		 mov	 edx, DWORD PTR [ecx]
  00156	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0015d	ff d0		 call	 eax

; 1259 : 
; 1260 : 		set_ui_object_font_colour_end (modem_answer_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 127);

  0015f	6a 7f		 push	 127			; 0000007fH
  00161	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00168	50		 push	 eax
  00169	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00170	51		 push	 ecx
  00171	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00178	52		 push	 edx
  00179	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  0017e	50		 push	 eax
  0017f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  00185	8b 11		 mov	 edx, DWORD PTR [ecx]
  00187	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  0018e	ff d0		 call	 eax

; 1261 : 
; 1262 : 		set_ui_object_highlightable (modem_dial_button, FALSE);

  00190	6a 00		 push	 0
  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  00197	50		 push	 eax
  00198	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  0019e	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001a7	ff d0		 call	 eax

; 1263 : 
; 1264 : 		set_ui_object_font_colour_end (modem_dial_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 127);

  001a9	6a 7f		 push	 127			; 0000007fH
  001ab	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  001b2	50		 push	 eax
  001b3	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  001ba	51		 push	 ecx
  001bb	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  001c2	52		 push	 edx
  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  001c8	50		 push	 eax
  001c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  001cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  001d8	ff d0		 call	 eax

; 1265 : 
; 1266 : 		// enable ghosting overlay
; 1267 : 		set_ui_object_drawable (ghost_multiplayer_modem_area, TRUE);

  001da	6a 01		 push	 1
  001dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghost_multiplayer_modem_area@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area
  001e1	50		 push	 eax
  001e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghost_multiplayer_modem_area@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area
  001e8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001ea	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001f1	ff d0		 call	 eax

; 1268 : 
; 1269 : 		set_ui_object_drawable (ghost_multiplayer_modem_area2, TRUE);

  001f3	6a 01		 push	 1
  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghost_multiplayer_modem_area2@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area2
  001fa	50		 push	 eax
  001fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghost_multiplayer_modem_area2@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area2
  00201	8b 11		 mov	 edx, DWORD PTR [ecx]
  00203	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0020a	ff d0		 call	 eax

; 1270 : 	}
; 1271 : 	// deactivate ghosting
; 1272 : 	else

  0020c	e9 08 02 00 00	 jmp	 $LN9@ghost_ui_o
$LN8@ghost_ui_o:

; 1273 : 	{
; 1274 : 		// enable common object items
; 1275 : 		for (i = 0; i < NUM_OPTIONS_PAGES; i++)

  00211	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00218	eb 09		 jmp	 SHORT $LN7@ghost_ui_o
$LN5@ghost_ui_o:
  0021a	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0021d	83 c0 01	 add	 eax, 1
  00220	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN7@ghost_ui_o:
  00223	83 7d fc 07	 cmp	 DWORD PTR _i$[ebp], 7
  00227	7d 24		 jge	 SHORT $LN6@ghost_ui_o

; 1276 : 		{
; 1277 : 			set_ui_object_drawable (options_page_buttons [i], TRUE);

  00229	6a 01		 push	 1
  0022b	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0022e	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?options_page_buttons@@3PAPAUUI_OBJECT@@A[eax*4]
  00235	51		 push	 ecx
  00236	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00239	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?options_page_buttons@@3PAPAUUI_OBJECT@@A[edx*4]
  00240	8b 08		 mov	 ecx, DWORD PTR [eax]
  00242	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  00249	ff d2		 call	 edx

; 1278 : 		}

  0024b	eb cd		 jmp	 SHORT $LN5@ghost_ui_o
$LN6@ghost_ui_o:

; 1279 : 
; 1280 : 		set_ui_object_drawable (option_page_ok_button, TRUE);

  0024d	6a 01		 push	 1
  0024f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?option_page_ok_button@@3PAUUI_OBJECT@@A ; option_page_ok_button
  00254	50		 push	 eax
  00255	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?option_page_ok_button@@3PAUUI_OBJECT@@A ; option_page_ok_button
  0025b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0025d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00264	ff d0		 call	 eax

; 1281 : 
; 1282 : 		// enable modem objects
; 1283 : 		set_ui_object_highlightable (connection_type_button, TRUE);

  00266	6a 01		 push	 1
  00268	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  0026d	50		 push	 eax
  0026e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  00274	8b 11		 mov	 edx, DWORD PTR [ecx]
  00276	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0027d	ff d0		 call	 eax

; 1284 : 
; 1285 : 		set_ui_object_font_colour_end (connection_type_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255);

  0027f	68 ff 00 00 00	 push	 255			; 000000ffH
  00284	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  0028b	50		 push	 eax
  0028c	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00293	51		 push	 ecx
  00294	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  0029b	52		 push	 edx
  0029c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  002a1	50		 push	 eax
  002a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  002a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  002aa	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  002b1	ff d0		 call	 eax

; 1286 : 
; 1287 : 		set_ui_object_highlightable (phone_number_text_obj, TRUE);

  002b3	6a 01		 push	 1
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  002ba	50		 push	 eax
  002bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  002c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  002c3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  002ca	ff d0		 call	 eax

; 1288 : 
; 1289 : 		set_ui_object_font_colour_end (phone_number_text_obj, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255);

  002cc	68 ff 00 00 00	 push	 255			; 000000ffH
  002d1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  002d8	50		 push	 eax
  002d9	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  002e0	51		 push	 ecx
  002e1	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  002e8	52		 push	 edx
  002e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  002ee	50		 push	 eax
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  002f5	8b 11		 mov	 edx, DWORD PTR [ecx]
  002f7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  002fe	ff d0		 call	 eax

; 1290 : 
; 1291 : 		set_ui_object_highlightable (modem_type_button, TRUE);

  00300	6a 01		 push	 1
  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  00307	50		 push	 eax
  00308	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  0030e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00310	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00317	ff d0		 call	 eax

; 1292 : 
; 1293 : 		set_ui_object_font_colour_end (modem_type_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255);

  00319	68 ff 00 00 00	 push	 255			; 000000ffH
  0031e	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00325	50		 push	 eax
  00326	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0032d	51		 push	 ecx
  0032e	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00335	52		 push	 edx
  00336	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  0033b	50		 push	 eax
  0033c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  00342	8b 11		 mov	 edx, DWORD PTR [ecx]
  00344	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  0034b	ff d0		 call	 eax

; 1294 : 
; 1295 : 		set_ui_object_highlightable (modem_answer_button, TRUE);

  0034d	6a 01		 push	 1
  0034f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  00354	50		 push	 eax
  00355	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  0035b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0035d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00364	ff d0		 call	 eax

; 1296 : 
; 1297 : 		set_ui_object_font_colour_end (modem_answer_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255);

  00366	68 ff 00 00 00	 push	 255			; 000000ffH
  0036b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00372	50		 push	 eax
  00373	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0037a	51		 push	 ecx
  0037b	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00382	52		 push	 edx
  00383	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  00388	50		 push	 eax
  00389	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_answer_button@@3PAUUI_OBJECT@@A ; modem_answer_button
  0038f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00391	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  00398	ff d0		 call	 eax

; 1298 : 
; 1299 : 		set_ui_object_highlightable (modem_dial_button, TRUE);

  0039a	6a 01		 push	 1
  0039c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  003a1	50		 push	 eax
  003a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  003a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  003aa	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  003b1	ff d0		 call	 eax

; 1300 : 
; 1301 : 		set_ui_object_font_colour_end (modem_dial_button, ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255);

  003b3	68 ff 00 00 00	 push	 255			; 000000ffH
  003b8	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  003bf	50		 push	 eax
  003c0	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  003c7	51		 push	 ecx
  003c8	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  003cf	52		 push	 edx
  003d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  003d5	50		 push	 eax
  003d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_dial_button@@3PAUUI_OBJECT@@A ; modem_dial_button
  003dc	8b 11		 mov	 edx, DWORD PTR [ecx]
  003de	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[edx*4]
  003e5	ff d0		 call	 eax

; 1302 : 
; 1303 : 		// disable ghosting overlay
; 1304 : 		set_ui_object_drawable (ghost_multiplayer_modem_area, FALSE);

  003e7	6a 00		 push	 0
  003e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghost_multiplayer_modem_area@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area
  003ee	50		 push	 eax
  003ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghost_multiplayer_modem_area@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area
  003f5	8b 11		 mov	 edx, DWORD PTR [ecx]
  003f7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  003fe	ff d0		 call	 eax

; 1305 : 
; 1306 : 		set_ui_object_drawable (ghost_multiplayer_modem_area2, FALSE);

  00400	6a 00		 push	 0
  00402	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghost_multiplayer_modem_area2@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area2
  00407	50		 push	 eax
  00408	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghost_multiplayer_modem_area2@@3PAUUI_OBJECT@@A ; ghost_multiplayer_modem_area2
  0040e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00410	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00417	ff d0		 call	 eax
$LN9@ghost_ui_o:

; 1307 : 	}
; 1308 : 
; 1309 : 	// don't leave text selected
; 1310 : 	if (obj)

  00419	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0041d	74 09		 je	 SHORT $LN1@ghost_ui_o

; 1311 : 	{
; 1312 : 		set_toggle_button_off (obj);

  0041f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00422	50		 push	 eax
  00423	e8 00 00 00 00	 call	 ?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_off
$LN1@ghost_ui_o:

; 1313 : 	}
; 1314 : 
; 1315 : //	ui_force_update ();
; 1316 : }

  00428	5f		 pop	 edi
  00429	5e		 pop	 esi
  0042a	5b		 pop	 ebx
  0042b	8b e5		 mov	 esp, ebp
  0042d	5d		 pop	 ebp
  0042e	c2 08 00	 ret	 8
?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ENDP	; ghost_ui_objects_for_modem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?break_modem_connection@@YGXXZ
_TEXT	SEGMENT
tv65 = -328						; size = 4
_this_connection$ = -260				; size = 4
_text_buffer$ = -256					; size = 256
?break_modem_connection@@YGXXZ PROC			; break_modem_connection, COMDAT

; 342  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 343  : 
; 344  : 	char
; 345  : 		text_buffer [256];
; 346  : 
; 347  : 	connection_data_type
; 348  : 		*this_connection;
; 349  : 
; 350  : 	ui_set_user_function ( NULL );

  0000c	6a 00		 push	 0
  0000e	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function

; 351  : 
; 352  : 	switch ( modem_state )

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A ; modem_state
  00018	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  0001e	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00024	83 e9 01	 sub	 ecx, 1
  00027	89 8d b8 fe ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  0002d	83 bd b8 fe ff
	ff 03		 cmp	 DWORD PTR tv65[ebp], 3
  00034	77 32		 ja	 SHORT $LN2@break_mode
  00036	8b 95 b8 fe ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  0003c	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN8@break_mode[edx*4]
$LN4@break_mode:

; 353  : 	{
; 354  : 
; 355  : 		case MODEM_DIALING:
; 356  : 		case MODEM_DIALLED_CONNECTED:
; 357  : 		{
; 358  : 
; 359  : 			//
; 360  : 			// We can't destroy groups, or sessions.
; 361  : 			//
; 362  : 
; 363  : 			direct_play_leave_group ();

  00043	e8 00 00 00 00	 call	 ?direct_play_leave_group@@YGHXZ ; direct_play_leave_group

; 364  : 
; 365  : 			direct_play_destroy_player ();

  00048	e8 00 00 00 00	 call	 ?direct_play_destroy_player@@YGHXZ ; direct_play_destroy_player

; 366  : 
; 367  : 			direct_play_close_session ();

  0004d	e8 00 00 00 00	 call	 ?direct_play_close_session@@YGHXZ ; direct_play_close_session

; 368  : 
; 369  : 			break;

  00052	eb 14		 jmp	 SHORT $LN2@break_mode
$LN5@break_mode:

; 370  : 		}
; 371  : 
; 372  : 		case MODEM_ANSWERING:
; 373  : 		case MODEM_ANSWERED_CONNECTED:
; 374  : 		{
; 375  : 
; 376  : 			direct_play_leave_group ();

  00054	e8 00 00 00 00	 call	 ?direct_play_leave_group@@YGHXZ ; direct_play_leave_group

; 377  : 
; 378  : 			direct_play_destroy_player ();

  00059	e8 00 00 00 00	 call	 ?direct_play_destroy_player@@YGHXZ ; direct_play_destroy_player

; 379  : 
; 380  : 			direct_play_destroy_group ();

  0005e	e8 00 00 00 00	 call	 ?direct_play_destroy_group@@YGHXZ ; direct_play_destroy_group

; 381  : 
; 382  : 			direct_play_close_session ();

  00063	e8 00 00 00 00	 call	 ?direct_play_close_session@@YGHXZ ; direct_play_close_session
$LN2@break_mode:

; 383  : 
; 384  : 			break;
; 385  : 		}
; 386  : 	}
; 387  : 
; 388  : 	sprintf ( text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans("MP_UNCONNECTED"));

  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0P@INKGIJFC@MP_UNCONNECTED@
  0006d	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  00078	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0007d	50		 push	 eax
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  00083	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 _sprintf
  0008f	83 c4 10	 add	 esp, 16			; 00000010H

; 389  : 
; 390  : 	set_ui_object_text (modem_status_text, text_buffer);

  00092	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00098	50		 push	 eax
  00099	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  0009f	51		 push	 ecx
  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  000a6	8b 02		 mov	 eax, DWORD PTR [edx]
  000a8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  000af	ff d1		 call	 ecx

; 391  : 
; 392  : //	set_ui_object_drawable ( multi_player_back_button, UI_OBJECT_STATE_ON );
; 393  : 
; 394  : 	direct_play_destroy_modem ();

  000b1	e8 00 00 00 00	 call	 ?direct_play_destroy_modem@@YGXXZ ; direct_play_destroy_modem

; 395  : 
; 396  : 	this_connection = direct_play_get_connection_data ();

  000b6	e8 00 00 00 00	 call	 ?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ; direct_play_get_connection_data
  000bb	89 85 fc fe ff
	ff		 mov	 DWORD PTR _this_connection$[ebp], eax

; 397  : 
; 398  : 	if ( this_connection )

  000c1	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _this_connection$[ebp], 0
  000c8	74 37		 je	 SHORT $LN6@break_mode

; 399  : 	{
; 400  : 
; 401  : 		this_connection->one_way_hosting_setup = TRUE;

  000ca	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$[ebp]
  000d0	c7 40 38 01 00
	00 00		 mov	 DWORD PTR [eax+56], 1

; 402  : 		this_connection->is_initialised = FALSE;

  000d7	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$[ebp]
  000dd	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000e0	83 e1 fe	 and	 ecx, -2			; fffffffeH
  000e3	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _this_connection$[ebp]
  000e9	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 403  : 		this_connection->is_hosting = FALSE;

  000ec	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$[ebp]
  000f2	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000f5	83 e1 fd	 and	 ecx, -3			; fffffffdH
  000f8	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _this_connection$[ebp]
  000fe	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
$LN6@break_mode:

; 404  : 	}
; 405  : 
; 406  : 	modem_state = MODEM_NOT_CONNECTED;

  00101	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 0 ; modem_state

; 407  : }

  0010b	5f		 pop	 edi
  0010c	5e		 pop	 esi
  0010d	5b		 pop	 ebx
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c3		 ret	 0
  00112	66 90		 npad	 2
$LN8@break_mode:
  00114	00 00 00 00	 DD	 $LN4@break_mode
  00118	00 00 00 00	 DD	 $LN5@break_mode
  0011c	00 00 00 00	 DD	 $LN4@break_mode
  00120	00 00 00 00	 DD	 $LN5@break_mode
?break_modem_connection@@YGXXZ ENDP			; break_modem_connection
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?multiplayer_modem_connection_update_function@@YGXXZ
_TEXT	SEGMENT
_update_time$ = -4					; size = 4
?multiplayer_modem_connection_update_function@@YGXXZ PROC ; multiplayer_modem_connection_update_function, COMDAT

; 814  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 815  : 
; 816  : 	int
; 817  : 		update_time;
; 818  : 
; 819  : 	static unsigned int
; 820  : 		update_ticks = 0;
; 821  : 
; 822  : 	update_time = TIME_1_SECOND;

  00009	c7 45 fc e8 03
	00 00		 mov	 DWORD PTR _update_time$[ebp], 1000 ; 000003e8H

; 823  : 
; 824  : 	if ( update_ticks < get_system_time () )

  00010	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  00015	39 05 00 00 00
	00		 cmp	 DWORD PTR ?update_ticks@?1??multiplayer_modem_connection_update_function@@YGXXZ@4IA, eax
  0001b	73 17		 jae	 SHORT $LN1@multiplaye

; 825  : 	{
; 826  : 
; 827  : 		validate_modem_connection ();

  0001d	e8 00 00 00 00	 call	 ?validate_modem_connection@@YGXXZ ; validate_modem_connection

; 828  : 
; 829  : 		update_ticks = get_system_time () + update_time;

  00022	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  00027	03 45 fc	 add	 eax, DWORD PTR _update_time$[ebp]
  0002a	a3 00 00 00 00	 mov	 DWORD PTR ?update_ticks@?1??multiplayer_modem_connection_update_function@@YGXXZ@4IA, eax

; 830  : 
; 831  : 		set_delta_time ();

  0002f	e8 00 00 00 00	 call	 ?set_delta_time@@YGXXZ	; set_delta_time
$LN1@multiplaye:

; 832  : 	}
; 833  : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?multiplayer_modem_connection_update_function@@YGXXZ ENDP ; multiplayer_modem_connection_update_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?multiplayer_modem_answer_update_function@@YGXXZ
_TEXT	SEGMENT
_text_buffer$1 = -268					; size = 256
_baudrate$2 = -12					; size = 4
_caps$3 = -8						; size = 4
_game_update_time$ = -4					; size = 4
?multiplayer_modem_answer_update_function@@YGXXZ PROC	; multiplayer_modem_answer_update_function, COMDAT

; 754  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 4c 01 00
	00		 sub	 esp, 332		; 0000014cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 755  : 
; 756  : 	int
; 757  : 		game_update_time;
; 758  : 
; 759  : 	static unsigned int
; 760  : 		update_ticks = 0;
; 761  : 
; 762  : 	game_update_time = TIME_1_SECOND;

  0000c	c7 45 fc e8 03
	00 00		 mov	 DWORD PTR _game_update_time$[ebp], 1000 ; 000003e8H

; 763  : 
; 764  : 	if ( update_ticks < get_system_time () )

  00013	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  00018	39 05 00 00 00
	00		 cmp	 DWORD PTR ?update_ticks@?1??multiplayer_modem_answer_update_function@@YGXXZ@4IA, eax
  0001e	0f 83 a1 00 00
	00		 jae	 $LN1@multiplaye

; 765  : 	{
; 766  : 
; 767  : 		LPDPSESSIONDESC2
; 768  : 			caps;
; 769  : 
; 770  : 		direct_play_session_capabilities ();

  00024	e8 00 00 00 00	 call	 ?direct_play_session_capabilities@@YGHXZ ; direct_play_session_capabilities

; 771  : 
; 772  : 		caps = direct_play_get_session_capabilities ();

  00029	e8 00 00 00 00	 call	 ?direct_play_get_session_capabilities@@YGPAUDPSESSIONDESC2@@XZ ; direct_play_get_session_capabilities
  0002e	89 45 f8	 mov	 DWORD PTR _caps$3[ebp], eax

; 773  : 
; 774  : 		if ( caps )

  00031	83 7d f8 00	 cmp	 DWORD PTR _caps$3[ebp], 0
  00035	74 7c		 je	 SHORT $LN3@multiplaye

; 775  : 		{
; 776  : 
; 777  : 			if ( caps->dwCurrentPlayers == 2 )

  00037	8b 45 f8	 mov	 eax, DWORD PTR _caps$3[ebp]
  0003a	83 78 2c 02	 cmp	 DWORD PTR [eax+44], 2
  0003e	75 73		 jne	 SHORT $LN3@multiplaye

; 778  : 			{
; 779  : 
; 780  : 				int
; 781  : 					baudrate;
; 782  : 
; 783  : 				char
; 784  : 					text_buffer[256];
; 785  : 
; 786  : 				baudrate = direct_play_get_connection_baudrate ();

  00040	e8 00 00 00 00	 call	 ?direct_play_get_connection_baudrate@@YGHXZ ; direct_play_get_connection_baudrate
  00045	89 45 f4	 mov	 DWORD PTR _baudrate$2[ebp], eax

; 787  : 
; 788  : 
; 789  : 				sprintf (text_buffer, "%s: %s %d", get_trans ("MP_STATUS"), get_trans ("MP_CONNECTED_AT"), baudrate * 100);

  00048	6b 45 f4 64	 imul	 eax, DWORD PTR _baudrate$2[ebp], 100
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KHABAAKJ@MP_CONNECTED_AT@
  00052	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00057	50		 push	 eax
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  0005d	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_09NBKJFNCI@?$CFs?3?5?$CFs?5?$CFd@
  00068	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _text_buffer$1[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 _sprintf
  00074	83 c4 14	 add	 esp, 20			; 00000014H

; 790  : 
; 791  : 				set_ui_object_text (modem_status_text, text_buffer);

  00077	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _text_buffer$1[ebp]
  0007d	50		 push	 eax
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  00084	51		 push	 ecx
  00085	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  0008b	8b 02		 mov	 eax, DWORD PTR [edx]
  0008d	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  00094	ff d1		 call	 ecx

; 792  : 
; 793  : //				set_ui_object_drawable ( multi_player_back_button, UI_OBJECT_STATE_ON );
; 794  : 
; 795  : 				ghost_ui_objects_for_modem (NULL, FALSE);

  00096	6a 00		 push	 0
  00098	6a 00		 push	 0
  0009a	e8 00 00 00 00	 call	 ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ; ghost_ui_objects_for_modem

; 796  : 
; 797  : 				modem_state = MODEM_ANSWERED_CONNECTED;

  0009f	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 4 ; modem_state

; 798  : 
; 799  : 				ui_set_user_function ( multiplayer_modem_connection_update_function );

  000a9	68 00 00 00 00	 push	 OFFSET ?multiplayer_modem_connection_update_function@@YGXXZ ; multiplayer_modem_connection_update_function
  000ae	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function
$LN3@multiplaye:

; 800  : 			}
; 801  : 		}
; 802  : 
; 803  : 		update_ticks = get_system_time () + game_update_time;

  000b3	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  000b8	03 45 fc	 add	 eax, DWORD PTR _game_update_time$[ebp]
  000bb	a3 00 00 00 00	 mov	 DWORD PTR ?update_ticks@?1??multiplayer_modem_answer_update_function@@YGXXZ@4IA, eax

; 804  : 
; 805  : 		set_delta_time ();

  000c0	e8 00 00 00 00	 call	 ?set_delta_time@@YGXXZ	; set_delta_time
$LN1@multiplaye:

; 806  : 	}
; 807  : }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
?multiplayer_modem_answer_update_function@@YGXXZ ENDP	; multiplayer_modem_answer_update_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?multiplayer_modem_dial_update_function@@YGXXZ
_TEXT	SEGMENT
_baudrate$1 = -276					; size = 4
_connection_code$2 = -272				; size = 4
_this_connection$3 = -268				; size = 4
_this_session$4 = -264					; size = 4
_game_update_time$ = -260				; size = 4
_text_buffer$ = -256					; size = 256
?multiplayer_modem_dial_update_function@@YGXXZ PROC	; multiplayer_modem_dial_update_function, COMDAT

; 601  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 602  : 
; 603  : 	char
; 604  : 		text_buffer [256];
; 605  : 
; 606  : 	int
; 607  : 		game_update_time;
; 608  : 
; 609  : 	static unsigned int
; 610  : 		update_ticks = 0;
; 611  : 
; 612  : 	game_update_time = TIME_1_SECOND;

  0000c	c7 85 fc fe ff
	ff e8 03 00 00	 mov	 DWORD PTR _game_update_time$[ebp], 1000 ; 000003e8H

; 613  : 
; 614  : 	if ( update_ticks < get_system_time () )

  00016	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  0001b	39 05 00 00 00
	00		 cmp	 DWORD PTR ?update_ticks@?1??multiplayer_modem_dial_update_function@@YGXXZ@4IA, eax
  00021	0f 83 b4 02 00
	00		 jae	 $LN1@multiplaye

; 615  : 	{
; 616  : 
; 617  : 		session_table_type
; 618  : 			*this_session;
; 619  : 
; 620  : 		connection_data_type
; 621  : 			*this_connection;
; 622  : 
; 623  : 		HRESULT
; 624  : 			connection_code;
; 625  : 
; 626  : 		connection_code = direct_play_dial_modem_status ();

  00027	e8 00 00 00 00	 call	 ?direct_play_dial_modem_status@@YGJXZ ; direct_play_dial_modem_status
  0002c	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _connection_code$2[ebp], eax

; 627  : 
; 628  : 		if ( connection_code == DP_OK )

  00032	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _connection_code$2[ebp], 0
  00039	0f 85 cd 01 00
	00		 jne	 $LN3@multiplaye

; 629  : 		{
; 630  : 
; 631  : 			//
; 632  : 			// Need to do the final enumeration
; 633  : 			//
; 634  : 
; 635  : 			sprintf (text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans ("MP_FINDING_GAMES"));

  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CMENCCMM@MP_FINDING_GAMES@
  00044	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00049	50		 push	 eax
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  0004f	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00054	50		 push	 eax
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  0005a	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 _sprintf
  00066	83 c4 10	 add	 esp, 16			; 00000010H

; 636  : 
; 637  : 			if ( direct_play_enumerate_sessions () )

  00069	e8 00 00 00 00	 call	 ?direct_play_enumerate_sessions@@YGHXZ ; direct_play_enumerate_sessions
  0006e	85 c0		 test	 eax, eax
  00070	0f 84 91 01 00
	00		 je	 $LN5@multiplaye

; 638  : 			{
; 639  : 
; 640  : 				set_comms_model ( COMMS_MODEL_CLIENT );

  00076	6a 01		 push	 1
  00078	e8 00 00 00 00	 call	 ?set_comms_model@@YGXW4COMMS_MODEL_TYPES@@@Z ; set_comms_model

; 641  : 
; 642  : 				this_session = direct_play_get_session_table ();

  0007d	e8 00 00 00 00	 call	 ?direct_play_get_session_table@@YGPAUSESSION_TABLE_TYPE@@XZ ; direct_play_get_session_table
  00082	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _this_session$4[ebp], eax

; 643  : 
; 644  : 				if ( this_session )

  00088	83 bd f8 fe ff
	ff 00		 cmp	 DWORD PTR _this_session$4[ebp], 0
  0008f	0f 84 72 01 00
	00		 je	 $LN5@multiplaye

; 645  : 				{
; 646  : 
; 647  : 					int
; 648  : 						baudrate;
; 649  : 
; 650  : 					this_connection = direct_play_get_connection_data ();

  00095	e8 00 00 00 00	 call	 ?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ; direct_play_get_connection_data
  0009a	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _this_connection$3[ebp], eax

; 651  : 
; 652  : 					this_connection->this_session.session = this_session->session;

  000a0	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$3[ebp]
  000a6	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this_session$4[ebp]
  000ac	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000af	89 50 2c	 mov	 DWORD PTR [eax+44], edx

; 653  : 
; 654  : 					sprintf (text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans ("MP_JOINING_GAMES"));

  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DAGKNNDH@MP_JOINING_GAMES@
  000b7	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000bc	50		 push	 eax
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  000c2	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000c7	50		 push	 eax
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  000cd	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 _sprintf
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 655  : 
; 656  : 
; 657  : 					if ( //schorpp "fatal" errhdl , maybe outdated, who uses modem to modem nowadays?
; 658  : 
; 659  : 					direct_play_join_session () &&
; 660  : 
; 661  : 					direct_play_session_capabilities () &&

  000dc	e8 00 00 00 00	 call	 ?direct_play_join_session@@YGHXZ ; direct_play_join_session
  000e1	85 c0		 test	 eax, eax
  000e3	0f 84 b9 00 00
	00		 je	 $LN7@multiplaye
  000e9	e8 00 00 00 00	 call	 ?direct_play_session_capabilities@@YGHXZ ; direct_play_session_capabilities
  000ee	85 c0		 test	 eax, eax
  000f0	0f 84 ac 00 00
	00		 je	 $LN7@multiplaye
  000f6	e8 00 00 00 00	 call	 ?direct_play_enumerate_groups@@YGHXZ ; direct_play_enumerate_groups
  000fb	85 c0		 test	 eax, eax
  000fd	0f 84 9f 00 00
	00		 je	 $LN7@multiplaye

; 662  : 
; 663  : 					direct_play_enumerate_groups () )
; 664  : 					{
; 665  : 
; 666  : 						this_connection->this_group = direct_play_get_group_table ();

  00103	e8 00 00 00 00	 call	 ?direct_play_get_group_table@@YGPAUGROUP_TABLE_TYPE@@XZ ; direct_play_get_group_table
  00108	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this_connection$3[ebp]
  0010e	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 667  : 
; 668  : 						if (
; 669  : 
; 670  : 						direct_play_create_player () &&

  00111	e8 00 00 00 00	 call	 ?direct_play_create_player@@YGHXZ ; direct_play_create_player
  00116	85 c0		 test	 eax, eax
  00118	0f 84 82 00 00
	00		 je	 $LN9@multiplaye
  0011e	e8 00 00 00 00	 call	 ?direct_play_join_group@@YGHXZ ; direct_play_join_group
  00123	85 c0		 test	 eax, eax
  00125	74 79		 je	 SHORT $LN9@multiplaye

; 671  : 
; 672  : 						direct_play_join_group () )
; 673  : 						{
; 674  : 
; 675  : 						baudrate = direct_play_get_connection_baudrate ();

  00127	e8 00 00 00 00	 call	 ?direct_play_get_connection_baudrate@@YGHXZ ; direct_play_get_connection_baudrate
  0012c	89 85 ec fe ff
	ff		 mov	 DWORD PTR _baudrate$1[ebp], eax

; 676  : 
; 677  : 						sprintf (text_buffer, "%s: %s %d", get_trans ("MP_STATUS"), get_trans ("MP_CONNECTED_AT"), baudrate * 100);

  00132	6b 85 ec fe ff
	ff 64		 imul	 eax, DWORD PTR _baudrate$1[ebp], 100
  00139	50		 push	 eax
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KHABAAKJ@MP_CONNECTED_AT@
  0013f	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00144	50		 push	 eax
  00145	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  0014a	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0014f	50		 push	 eax
  00150	68 00 00 00 00	 push	 OFFSET ??_C@_09NBKJFNCI@?$CFs?3?5?$CFs?5?$CFd@
  00155	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _text_buffer$[ebp]
  0015b	51		 push	 ecx
  0015c	e8 00 00 00 00	 call	 _sprintf
  00161	83 c4 14	 add	 esp, 20			; 00000014H

; 678  : 
; 679  : 						set_ui_object_text (modem_status_text, text_buffer);

  00164	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  0016a	50		 push	 eax
  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  00171	51		 push	 ecx
  00172	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  00178	8b 02		 mov	 eax, DWORD PTR [edx]
  0017a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  00181	ff d1		 call	 ecx

; 680  : 
; 681  : 	//					set_ui_object_drawable ( multi_player_back_button, UI_OBJECT_STATE_ON );
; 682  : 
; 683  : 						ghost_ui_objects_for_modem (NULL, FALSE);

  00183	6a 00		 push	 0
  00185	6a 00		 push	 0
  00187	e8 00 00 00 00	 call	 ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ; ghost_ui_objects_for_modem

; 684  : 
; 685  : 						modem_state = MODEM_DIALLED_CONNECTED;

  0018c	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 3 ; modem_state

; 686  : 
; 687  : 						ui_set_user_function ( multiplayer_modem_connection_update_function );

  00196	68 00 00 00 00	 push	 OFFSET ?multiplayer_modem_connection_update_function@@YGXXZ ; multiplayer_modem_connection_update_function
  0019b	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function
$LN9@multiplaye:

; 688  : 
; 689  : 						}
; 690  : 
; 691  : 					}
; 692  : 					else

  001a0	eb 65		 jmp	 SHORT $LN5@multiplaye
$LN7@multiplaye:

; 693  : 					{
; 694  : 
; 695  : 
; 696  : 					// schorpp mp errhd01 "fatal" 7/17/03
; 697  : 					debug_log ("SESSION: Server has got a problem, request campaing restart. ");

  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@MLELIGKJ@SESSION?3?5Server?5has?5got?5a?5probl@
  001a7	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001ac	83 c4 04	 add	 esp, 4

; 698  : 					sprintf (text_buffer, "Server has got a problem, request campaing restart.  %s", get_trans ("MP_UNCONNECTED"));

  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0P@INKGIJFC@MP_UNCONNECTED@
  001b4	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  001b9	50		 push	 eax
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@BECOOMCC@Server?5has?5got?5a?5problem?0?5reque@
  001bf	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  001c5	50		 push	 eax
  001c6	e8 00 00 00 00	 call	 _sprintf
  001cb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 699  : 
; 700  : 					set_ui_object_text ( modem_status_text, text_buffer );

  001ce	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  001d4	50		 push	 eax
  001d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  001db	51		 push	 ecx
  001dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  001e2	8b 02		 mov	 eax, DWORD PTR [edx]
  001e4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  001eb	ff d1		 call	 ecx

; 701  : 
; 702  : 					modem_state = MODEM_NOT_CONNECTED;

  001ed	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 0 ; modem_state

; 703  : 
; 704  : 	//				set_ui_object_drawable ( multi_player_back_button, UI_OBJECT_STATE_ON );
; 705  : 
; 706  : 					ghost_ui_objects_for_modem (NULL, FALSE);

  001f7	6a 00		 push	 0
  001f9	6a 00		 push	 0
  001fb	e8 00 00 00 00	 call	 ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ; ghost_ui_objects_for_modem

; 707  : 
; 708  : 					ui_set_user_function ( NULL );

  00200	6a 00		 push	 0
  00202	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function
$LN5@multiplaye:

; 709  : 
; 710  : 
; 711  : 					}
; 712  : 				}
; 713  : 			}
; 714  : 		}
; 715  : 		else

  00207	e9 ba 00 00 00	 jmp	 $LN4@multiplaye
$LN3@multiplaye:

; 716  : 		{
; 717  : 
; 718  : 			if ( connection_code == DPERR_CONNECTING )

  0020c	81 bd f0 fe ff
	ff 5e 01 77 88	 cmp	 DWORD PTR _connection_code$2[ebp], -2005466786 ; 8877015eH
  00216	75 4b		 jne	 SHORT $LN10@multiplaye

; 719  : 			{
; 720  : 
; 721  : 
; 722  : 				sprintf (text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans ("MP_CONNECTING"));

  00218	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OEHCPNLP@MP_CONNECTING@
  0021d	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00222	50		 push	 eax
  00223	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  00228	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0022d	50		 push	 eax
  0022e	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  00233	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 _sprintf
  0023f	83 c4 10	 add	 esp, 16			; 00000010H

; 723  : 
; 724  : 				set_ui_object_text ( modem_status_text, text_buffer );

  00242	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00248	50		 push	 eax
  00249	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  0024f	51		 push	 ecx
  00250	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  00256	8b 02		 mov	 eax, DWORD PTR [edx]
  00258	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  0025f	ff d1		 call	 ecx

; 725  : 			}
; 726  : 			else

  00261	eb 63		 jmp	 SHORT $LN4@multiplaye
$LN10@multiplaye:

; 727  : 			{
; 728  : 
; 729  : 				sprintf (text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans ("MP_UNCONNECTED"));

  00263	68 00 00 00 00	 push	 OFFSET ??_C@_0P@INKGIJFC@MP_UNCONNECTED@
  00268	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0026d	50		 push	 eax
  0026e	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  00273	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00278	50		 push	 eax
  00279	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  0027e	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 _sprintf
  0028a	83 c4 10	 add	 esp, 16			; 00000010H

; 730  : 
; 731  : 				set_ui_object_text ( modem_status_text, text_buffer );

  0028d	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00293	50		 push	 eax
  00294	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  0029a	51		 push	 ecx
  0029b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  002a1	8b 02		 mov	 eax, DWORD PTR [edx]
  002a3	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  002aa	ff d1		 call	 ecx

; 732  : 
; 733  : 				modem_state = MODEM_NOT_CONNECTED;

  002ac	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 0 ; modem_state

; 734  : 
; 735  : //				set_ui_object_drawable ( multi_player_back_button, UI_OBJECT_STATE_ON );
; 736  : 
; 737  : 				ghost_ui_objects_for_modem (NULL, FALSE);

  002b6	6a 00		 push	 0
  002b8	6a 00		 push	 0
  002ba	e8 00 00 00 00	 call	 ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ; ghost_ui_objects_for_modem

; 738  : 
; 739  : 				ui_set_user_function ( NULL );

  002bf	6a 00		 push	 0
  002c1	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function
$LN4@multiplaye:

; 740  : 			}
; 741  : 		}
; 742  : 
; 743  : 		update_ticks = get_system_time () + game_update_time;

  002c6	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  002cb	03 85 fc fe ff
	ff		 add	 eax, DWORD PTR _game_update_time$[ebp]
  002d1	a3 00 00 00 00	 mov	 DWORD PTR ?update_ticks@?1??multiplayer_modem_dial_update_function@@YGXXZ@4IA, eax

; 744  : 
; 745  : 		set_delta_time ();

  002d6	e8 00 00 00 00	 call	 ?set_delta_time@@YGXXZ	; set_delta_time
$LN1@multiplaye:

; 746  : 	}
; 747  : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c3		 ret	 0
?multiplayer_modem_dial_update_function@@YGXXZ ENDP	; multiplayer_modem_dial_update_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?set_multiplayer_options_display@@YGXXZ
_TEXT	SEGMENT
_this_connection$ = -4					; size = 4
?set_multiplayer_options_display@@YGXXZ PROC		; set_multiplayer_options_display, COMDAT

; 1158 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1159 : 
; 1160 : 	connection_data_type
; 1161 : 		*this_connection;
; 1162 : 
; 1163 : 	// Set options areas themselves
; 1164 : 
; 1165 : 	this_connection = direct_play_get_connection_data ();

  00009	e8 00 00 00 00	 call	 ?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ; direct_play_get_connection_data
  0000e	89 45 fc	 mov	 DWORD PTR _this_connection$[ebp], eax

; 1166 : 
; 1167 : 	set_ui_object_drawable ( tcpip_parameters_area, UI_OBJECT_STATE_OFF );

  00011	6a 00		 push	 0
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tcpip_parameters_area@@3PAUUI_OBJECT@@A ; tcpip_parameters_area
  00018	50		 push	 eax
  00019	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tcpip_parameters_area@@3PAUUI_OBJECT@@A ; tcpip_parameters_area
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00028	ff d0		 call	 eax

; 1168 : 
; 1169 : 	set_ui_object_drawable ( serial_parameters_area, UI_OBJECT_STATE_OFF );

  0002a	6a 00		 push	 0
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?serial_parameters_area@@3PAUUI_OBJECT@@A ; serial_parameters_area
  00031	50		 push	 eax
  00032	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?serial_parameters_area@@3PAUUI_OBJECT@@A ; serial_parameters_area
  00038	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00041	ff d0		 call	 eax

; 1170 : 
; 1171 : 	set_ui_object_drawable ( modem_parameters_area, UI_OBJECT_STATE_OFF );

  00043	6a 00		 push	 0
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_parameters_area@@3PAUUI_OBJECT@@A ; modem_parameters_area
  0004a	50		 push	 eax
  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_parameters_area@@3PAUUI_OBJECT@@A ; modem_parameters_area
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0005a	ff d0		 call	 eax

; 1172 : 
; 1173 : 	if ( ( this_connection ) && ( this_connection->service_provider.guid ) )

  0005c	83 7d fc 00	 cmp	 DWORD PTR _this_connection$[ebp], 0
  00060	0f 84 aa 00 00
	00		 je	 $LN1@set_multip
  00066	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00069	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0006d	0f 84 9d 00 00
	00		 je	 $LN1@set_multip

; 1174 : 	{
; 1175 : 
; 1176 : 		if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_TCPIP, sizeof ( GUID ) ) == 0 )

  00073	6a 10		 push	 16			; 00000010H
  00075	68 00 00 00 00	 push	 OFFSET _DPSPGUID_TCPIP
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  0007d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 _memcmp
  00086	83 c4 0c	 add	 esp, 12			; 0000000cH
  00089	85 c0		 test	 eax, eax
  0008b	75 1b		 jne	 SHORT $LN3@set_multip

; 1177 : 		{
; 1178 : 			set_ui_object_drawable ( tcpip_parameters_area, UI_OBJECT_STATE_ON );

  0008d	6a 01		 push	 1
  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tcpip_parameters_area@@3PAUUI_OBJECT@@A ; tcpip_parameters_area
  00094	50		 push	 eax
  00095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tcpip_parameters_area@@3PAUUI_OBJECT@@A ; tcpip_parameters_area
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000a4	ff d0		 call	 eax
  000a6	eb 68		 jmp	 SHORT $LN1@set_multip
$LN3@set_multip:

; 1179 : 		}
; 1180 : 		else if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_SERIAL, sizeof ( GUID ) ) == 0 )

  000a8	6a 10		 push	 16			; 00000010H
  000aa	68 00 00 00 00	 push	 OFFSET _DPSPGUID_SERIAL
  000af	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  000b2	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000b5	51		 push	 ecx
  000b6	e8 00 00 00 00	 call	 _memcmp
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000be	85 c0		 test	 eax, eax
  000c0	75 1b		 jne	 SHORT $LN5@set_multip

; 1181 : 		{
; 1182 : 			set_ui_object_drawable ( serial_parameters_area, UI_OBJECT_STATE_ON );

  000c2	6a 01		 push	 1
  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?serial_parameters_area@@3PAUUI_OBJECT@@A ; serial_parameters_area
  000c9	50		 push	 eax
  000ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?serial_parameters_area@@3PAUUI_OBJECT@@A ; serial_parameters_area
  000d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000d9	ff d0		 call	 eax
  000db	eb 33		 jmp	 SHORT $LN1@set_multip
$LN5@set_multip:

; 1183 : 		}
; 1184 : 		else if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_MODEM, sizeof ( GUID ) ) == 0 )

  000dd	6a 10		 push	 16			; 00000010H
  000df	68 00 00 00 00	 push	 OFFSET _DPSPGUID_MODEM
  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  000e7	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 _memcmp
  000f0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f3	85 c0		 test	 eax, eax
  000f5	75 19		 jne	 SHORT $LN1@set_multip

; 1185 : 		{
; 1186 : 			set_ui_object_drawable ( modem_parameters_area, UI_OBJECT_STATE_ON );

  000f7	6a 01		 push	 1
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_parameters_area@@3PAUUI_OBJECT@@A ; modem_parameters_area
  000fe	50		 push	 eax
  000ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_parameters_area@@3PAUUI_OBJECT@@A ; modem_parameters_area
  00105	8b 11		 mov	 edx, DWORD PTR [ecx]
  00107	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0010e	ff d0		 call	 eax
$LN1@set_multip:

; 1187 : 		}
; 1188 : 	}
; 1189 : }

  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
?set_multiplayer_options_display@@YGXXZ ENDP		; set_multiplayer_options_display
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?initialise_service_provider_connection@@YGXXZ
_TEXT	SEGMENT
tv139 = -72						; size = 4
_this_connection$ = -4					; size = 4
?initialise_service_provider_connection@@YGXXZ PROC	; initialise_service_provider_connection, COMDAT

; 840  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 841  : 
; 842  : 	connection_data_type
; 843  : 		*this_connection;
; 844  : 
; 845  : 	this_connection = direct_play_get_connection_data ();

  00009	e8 00 00 00 00	 call	 ?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ; direct_play_get_connection_data
  0000e	89 45 fc	 mov	 DWORD PTR _this_connection$[ebp], eax

; 846  : 
; 847  : 	if ( ( this_connection ) && ( this_connection->service_provider.guid ) )

  00011	83 7d fc 00	 cmp	 DWORD PTR _this_connection$[ebp], 0
  00015	0f 84 a3 01 00
	00		 je	 $LN1@initialise
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  0001e	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00022	0f 84 96 01 00
	00		 je	 $LN1@initialise

; 848  : 	{
; 849  : 
; 850  : 		//
; 851  : 		// Set default values for session opening / enumeration
; 852  : 		//
; 853  : 
; 854  : 		this_connection->one_way_hosting_setup = FALSE;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  0002b	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 855  : 		this_connection->is_initialised = TRUE;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00035	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00038	83 c9 01	 or	 ecx, 1
  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this_connection$[ebp]
  0003e	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 856  : 		this_connection->is_hosting = FALSE;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00044	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00047	83 e1 fd	 and	 ecx, -3			; fffffffdH
  0004a	8b 55 fc	 mov	 edx, DWORD PTR _this_connection$[ebp]
  0004d	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 857  : 
; 858  : 		//
; 859  : 		// Only initialise TCP/IP and serial connections.
; 860  : 		//  IPX doesn't need initialising at all, and
; 861  : 		//  modem should be initialised elsewhere ( when the user clicks dial/answer/canel ).
; 862  : 		//
; 863  : 
; 864  : 		reset_comms_data ();

  00050	e8 00 00 00 00	 call	 ?reset_comms_data@@YGXXZ ; reset_comms_data

; 865  : 
; 866  : 		deinitialise_comms_manager ();

  00055	e8 00 00 00 00	 call	 ?deinitialise_comms_manager@@YGXXZ ; deinitialise_comms_manager

; 867  : 
; 868  : 		if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_TCPIP, sizeof ( GUID ) ) == 0 )

  0005a	6a 10		 push	 16			; 00000010H
  0005c	68 00 00 00 00	 push	 OFFSET _DPSPGUID_TCPIP
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00064	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 _memcmp
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	85 c0		 test	 eax, eax
  00072	75 22		 jne	 SHORT $LN5@initialise

; 869  : 		{
; 870  : 
; 871  : 			// need good way to restore default values without overwritting commandline params
; 872  : 			//command_line_comms_resend_list_size						= 1000;
; 873  : 			//command_line_comms_packet_data_size						= 512;
; 874  : 			//command_line_comms_packet_rerequest_limit				= 100;
; 875  : 			//command_line_comms_connection_receive_size			= (32 * 1024);
; 876  : 			//command_line_comms_data_record_size						= (200 * 1024);
; 877  : 			//command_line_comms_timeout									= (2.0 * 60.0);
; 878  : 			//command_line_comms_pack_buffer_size						= (200 * 1024);
; 879  : 			//command_line_comms_initial_sleep_time					= 500;
; 880  : 			//command_line_max_frame_rate								= 30;
; 881  : 
; 882  : 			if (!command_line_max_game_update_rate_set)

  00074	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_max_game_update_rate_set@@3HA, 0 ; command_line_max_game_update_rate_set
  0007b	75 0a		 jne	 SHORT $LN7@initialise

; 883  : 			{
; 884  : 
; 885  : 				command_line_max_game_update_rate						= 5;

  0007d	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?command_line_max_game_update_rate@@3HA, 5 ; command_line_max_game_update_rate
$LN7@initialise:

; 886  : 			}
; 887  : 
; 888  : 			//command_line_comms_resend_timeout						= 10.0;
; 889  : 			//command_line_comms_packet_resend_timer 				= 2.0;
; 890  : 
; 891  : 			set_direct_play_inet_address ( global_options.ip_address );

  00087	68 94 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+148
  0008c	e8 00 00 00 00	 call	 ?set_direct_play_inet_address@@YGXPBD@Z ; set_direct_play_inet_address
  00091	e9 23 01 00 00	 jmp	 $LN6@initialise
$LN5@initialise:

; 892  : 		}
; 893  : 		else if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_SERIAL, sizeof ( GUID ) ) == 0 )

  00096	6a 10		 push	 16			; 00000010H
  00098	68 00 00 00 00	 push	 OFFSET _DPSPGUID_SERIAL
  0009d	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  000a0	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 _memcmp
  000a9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ac	85 c0		 test	 eax, eax
  000ae	75 43		 jne	 SHORT $LN8@initialise

; 894  : 		{
; 895  : 
; 896  : 			//command_line_comms_resend_list_size						= 1000;
; 897  : 			//command_line_comms_packet_data_size						= 512;
; 898  : 			//command_line_comms_packet_rerequest_limit				= 100;
; 899  : 			//command_line_comms_connection_receive_size			= (32 * 1024);
; 900  : 			//command_line_comms_data_record_size						= (200 * 1024);
; 901  : 			//command_line_comms_timeout									= (2.0 * 60.0);
; 902  : 			//command_line_comms_pack_buffer_size						= (200 * 1024);
; 903  : 			//command_line_comms_initial_sleep_time					= 500;
; 904  : 			//command_line_max_frame_rate								= 30;
; 905  : 			if (!command_line_max_game_update_rate_set)

  000b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_max_game_update_rate_set@@3HA, 0 ; command_line_max_game_update_rate_set
  000b7	75 0a		 jne	 SHORT $LN10@initialise

; 906  : 			{
; 907  : 
; 908  : 				command_line_max_game_update_rate						= 15;

  000b9	c7 05 00 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?command_line_max_game_update_rate@@3HA, 15 ; command_line_max_game_update_rate, 0000000fH
$LN10@initialise:

; 909  : 			}
; 910  : 			//command_line_comms_resend_timeout						= 10.0;
; 911  : 			//command_line_comms_packet_resend_timer 				= 2.0;
; 912  : 
; 913  : 			set_direct_play_serial_address ( get_global_comms_port (), get_global_baud_rate (), get_global_stop_bits (), get_global_parity (), get_global_flow () );

  000c3	a1 88 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+136
  000c8	50		 push	 eax
  000c9	8b 0d 84 00 00
	00		 mov	 ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+132
  000cf	51		 push	 ecx
  000d0	8b 15 80 00 00
	00		 mov	 edx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+128
  000d6	52		 push	 edx
  000d7	a1 7c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+124
  000dc	50		 push	 eax
  000dd	8b 0d 78 00 00
	00		 mov	 ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+120
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ?set_direct_play_serial_address@@YGXHHHHH@Z ; set_direct_play_serial_address

; 914  : 
; 915  : 			set_serial_connection_status ();

  000e9	e8 00 00 00 00	 call	 ?set_serial_connection_status@@YGXXZ ; set_serial_connection_status
  000ee	e9 c6 00 00 00	 jmp	 $LN6@initialise
$LN8@initialise:

; 916  : 		}
; 917  : 		else if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_MODEM, sizeof ( GUID ) ) == 0 )

  000f3	6a 10		 push	 16			; 00000010H
  000f5	68 00 00 00 00	 push	 OFFSET _DPSPGUID_MODEM
  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  000fd	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00100	51		 push	 ecx
  00101	e8 00 00 00 00	 call	 _memcmp
  00106	83 c4 0c	 add	 esp, 12			; 0000000cH
  00109	85 c0		 test	 eax, eax
  0010b	0f 85 95 00 00
	00		 jne	 $LN11@initialise

; 918  : 		{
; 919  : 
; 920  : 			//command_line_comms_resend_list_size						= 1000;
; 921  : 			//command_line_comms_packet_data_size						= 512;
; 922  : 			//command_line_comms_packet_rerequest_limit				= 100;
; 923  : 			//command_line_comms_connection_receive_size			= (32 * 1024);
; 924  : 			//command_line_comms_data_record_size						= (200 * 1024);
; 925  : 			//command_line_comms_timeout									= (2.0 * 60.0);
; 926  : 			//command_line_comms_pack_buffer_size						= (200 * 1024);
; 927  : 			//command_line_comms_initial_sleep_time					= 500;
; 928  : 			//command_line_max_frame_rate								= 30;
; 929  : 			if (!command_line_max_game_update_rate_set)

  00111	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_max_game_update_rate_set@@3HA, 0 ; command_line_max_game_update_rate_set
  00118	75 0a		 jne	 SHORT $LN13@initialise

; 930  : 			{
; 931  : 
; 932  : 				command_line_max_game_update_rate						= 5;

  0011a	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?command_line_max_game_update_rate@@3HA, 5 ; command_line_max_game_update_rate
$LN13@initialise:

; 933  : 			}
; 934  : 			//command_line_comms_resend_timeout						= 10.0;
; 935  : 			//command_line_comms_packet_resend_timer 				= 2.0;
; 936  : 
; 937  : 			this_connection->one_way_hosting_setup = TRUE;

  00124	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00127	c7 40 38 01 00
	00 00		 mov	 DWORD PTR [eax+56], 1

; 938  : 
; 939  : 			switch ( modem_state )

  0012e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A ; modem_state
  00133	89 45 b8	 mov	 DWORD PTR tv139[ebp], eax
  00136	83 7d b8 04	 cmp	 DWORD PTR tv139[ebp], 4
  0013a	77 68		 ja	 SHORT $LN2@initialise
  0013c	8b 4d b8	 mov	 ecx, DWORD PTR tv139[ebp]
  0013f	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@initialise[ecx*4]
$LN14@initialise:

; 940  : 			{
; 941  : 
; 942  : 				case MODEM_NOT_CONNECTED:
; 943  : 				{
; 944  : 
; 945  : 					this_connection->is_initialised = FALSE;

  00146	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00149	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0014c	83 e1 fe	 and	 ecx, -2			; fffffffeH
  0014f	8b 55 fc	 mov	 edx, DWORD PTR _this_connection$[ebp]
  00152	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 946  : 
; 947  : 					break;

  00155	eb 4d		 jmp	 SHORT $LN2@initialise
$LN15@initialise:

; 948  : 				}
; 949  : 
; 950  : 				case MODEM_DIALING:
; 951  : 				case MODEM_ANSWERING:
; 952  : 				{
; 953  : 
; 954  : 					debug_fatal ( "How can you exit this screen without a button to exit?" );

  00157	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@LBDAIGEB@How?5can?5you?5exit?5this?5screen?5wi@
  0015c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00161	83 c4 04	 add	 esp, 4

; 955  : 
; 956  : 					break;

  00164	eb 3e		 jmp	 SHORT $LN2@initialise
$LN16@initialise:

; 957  : 				}
; 958  : 
; 959  : 				case MODEM_DIALLED_CONNECTED:
; 960  : 				{
; 961  : 
; 962  : 					this_connection->is_initialised = TRUE;

  00166	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00169	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0016c	83 c9 01	 or	 ecx, 1
  0016f	8b 55 fc	 mov	 edx, DWORD PTR _this_connection$[ebp]
  00172	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 963  : 
; 964  : 					this_connection->is_hosting = FALSE;

  00175	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00178	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0017b	83 e1 fd	 and	 ecx, -3			; fffffffdH
  0017e	8b 55 fc	 mov	 edx, DWORD PTR _this_connection$[ebp]
  00181	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 965  : 
; 966  : 					break;

  00184	eb 1e		 jmp	 SHORT $LN2@initialise
$LN17@initialise:

; 967  : 				}
; 968  : 
; 969  : 				case MODEM_ANSWERED_CONNECTED:
; 970  : 				{
; 971  : 
; 972  : 					this_connection->is_initialised = TRUE;

  00186	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00189	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0018c	83 c9 01	 or	 ecx, 1
  0018f	8b 55 fc	 mov	 edx, DWORD PTR _this_connection$[ebp]
  00192	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 973  : 
; 974  : 					this_connection->is_hosting = TRUE;

  00195	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00198	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0019b	83 c9 02	 or	 ecx, 2
  0019e	8b 55 fc	 mov	 edx, DWORD PTR _this_connection$[ebp]
  001a1	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
$LN2@initialise:

; 975  : 
; 976  : 					break;
; 977  : 				}
; 978  : 			}
; 979  : 		}
; 980  : 		else

  001a4	eb 13		 jmp	 SHORT $LN6@initialise
$LN11@initialise:

; 981  : 		{
; 982  : 
; 983  : 			//command_line_comms_resend_list_size						= 1000;
; 984  : 			//command_line_comms_packet_data_size						= 512;
; 985  : 			//command_line_comms_packet_rerequest_limit				= 10;
; 986  : 			//command_line_comms_connection_receive_size			= (32 * 1024);
; 987  : 			//command_line_comms_data_record_size						= (16 * 1024);
; 988  : 			//command_line_comms_timeout									= (2.0 * 60.0);
; 989  : 			//command_line_comms_pack_buffer_size						= (200 * 1024);
; 990  : 			//command_line_comms_initial_sleep_time					= 500;
; 991  : 			//command_line_max_frame_rate								= 30;
; 992  : 			if (!command_line_max_game_update_rate_set)

  001a6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_max_game_update_rate_set@@3HA, 0 ; command_line_max_game_update_rate_set
  001ad	75 0a		 jne	 SHORT $LN6@initialise

; 993  : 			{
; 994  : 
; 995  : 				command_line_max_game_update_rate						= 15;

  001af	c7 05 00 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?command_line_max_game_update_rate@@3HA, 15 ; command_line_max_game_update_rate, 0000000fH
$LN6@initialise:

; 996  : 			}
; 997  : 			//command_line_comms_resend_timeout						= 1.0;
; 998  : 			//command_line_comms_packet_resend_timer 				= 5.0;
; 999  : 		}
; 1000 : 
; 1001 : 		initialise_comms_manager ();

  001b9	e8 00 00 00 00	 call	 ?initialise_comms_manager@@YGXXZ ; initialise_comms_manager
$LN1@initialise:

; 1002 : 	}
; 1003 : }

  001be	5f		 pop	 edi
  001bf	5e		 pop	 esi
  001c0	5b		 pop	 ebx
  001c1	8b e5		 mov	 esp, ebp
  001c3	5d		 pop	 ebp
  001c4	c3		 ret	 0
  001c5	0f 1f 00	 npad	 3
$LN20@initialise:
  001c8	00 00 00 00	 DD	 $LN14@initialise
  001cc	00 00 00 00	 DD	 $LN15@initialise
  001d0	00 00 00 00	 DD	 $LN15@initialise
  001d4	00 00 00 00	 DD	 $LN16@initialise
  001d8	00 00 00 00	 DD	 $LN17@initialise
?initialise_service_provider_connection@@YGXXZ ENDP	; initialise_service_provider_connection
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?store_multiplayer_options@@YGXXZ
_TEXT	SEGMENT
?store_multiplayer_options@@YGXXZ PROC			; store_multiplayer_options, COMDAT

; 1196 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1197 : 
; 1198 : 	// Set the tcp/ip address to the one in the text area
; 1199 : 
; 1200 : 	strncpy ( global_options.ip_address, get_ui_object_text ( ip_address_text_obj ), 127 );

  00009	6a 7f		 push	 127			; 0000007fH
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ip_address_text_obj@@3PAUUI_OBJECT@@A ; ip_address_text_obj
  00010	50		 push	 eax
  00011	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ip_address_text_obj@@3PAUUI_OBJECT@@A ; ip_address_text_obj
  00017	8b 11		 mov	 edx, DWORD PTR [ecx]
  00019	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00020	ff d0		 call	 eax
  00022	50		 push	 eax
  00023	68 94 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+148
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1201 : 
; 1202 : 	global_options.ip_address[127] = '\0';

  00031	b8 01 00 00 00	 mov	 eax, 1
  00036	6b c8 7f	 imul	 ecx, eax, 127
  00039	c6 81 94 00 00
	00 00		 mov	 BYTE PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A[ecx+148], 0

; 1203 : 
; 1204 : 	// Set the phone number to the one in the text area
; 1205 : 
; 1206 : 	strncpy ( global_options.phone_number, get_ui_object_text ( phone_number_text_obj ), 127 );

  00040	6a 7f		 push	 127			; 0000007fH
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  00047	50		 push	 eax
  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  0004e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00050	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00057	ff d0		 call	 eax
  00059	50		 push	 eax
  0005a	68 14 01 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+276
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1207 : 
; 1208 : 	global_options.phone_number[127] = '\0';

  00068	b8 01 00 00 00	 mov	 eax, 1
  0006d	6b c8 7f	 imul	 ecx, eax, 127
  00070	c6 81 14 01 00
	00 00		 mov	 BYTE PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A[ecx+276], 0

; 1209 : 
; 1210 : 	// Try to give the service provider all the information it needs
; 1211 : 
; 1212 : 	if (!get_current_game_session ())

  00077	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A, 0 ; current_game_session
  0007e	75 05		 jne	 SHORT $LN2@store_mult

; 1213 : 	{
; 1214 : 
; 1215 : 		initialise_service_provider_connection ();

  00080	e8 00 00 00 00	 call	 ?initialise_service_provider_connection@@YGXXZ ; initialise_service_provider_connection
$LN2@store_mult:

; 1216 : 	}
; 1217 : 
; 1218 : 	ui_set_user_function ( NULL );

  00085	6a 00		 push	 0
  00087	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function

; 1219 : 
; 1220 : 	// Save the global options data
; 1221 : 
; 1222 : 	save_global_options_data ();

  0008c	e8 00 00 00 00	 call	 ?save_global_options_data@@YGXXZ ; save_global_options_data

; 1223 : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
?store_multiplayer_options@@YGXXZ ENDP			; store_multiplayer_options
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?install_global_options_service_provider@@YGXXZ
_TEXT	SEGMENT
_this_service$ = -4					; size = 4
?install_global_options_service_provider@@YGXXZ PROC	; install_global_options_service_provider, COMDAT

; 1127 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1128 : 
; 1129 : 	//
; 1130 : 	// Install service provider
; 1131 : 	//
; 1132 : 
; 1133 :    service_provider_table_type
; 1134 :       *this_service;
; 1135 : 
; 1136 :    this_service = direct_play_get_service_provider_table ();

  00009	e8 00 00 00 00	 call	 ?direct_play_get_service_provider_table@@YGPAUSERVICE_PROVIDER_TABLE_TYPE@@XZ ; direct_play_get_service_provider_table
  0000e	89 45 fc	 mov	 DWORD PTR _this_service$[ebp], eax
$LN2@install_gl:

; 1137 : 
; 1138 :    while ( this_service )

  00011	83 7d fc 00	 cmp	 DWORD PTR _this_service$[ebp], 0
  00015	74 2d		 je	 SHORT $LN1@install_gl

; 1139 :    {
; 1140 : 
; 1141 : 		if ( memcmp ( this_service->guid, &global_options.service_provider_guid, sizeof ( GUID ) ) == 0 )

  00017	6a 10		 push	 16			; 00000010H
  00019	68 3c 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+60
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 _memcmp
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002c	85 c0		 test	 eax, eax
  0002e	75 09		 jne	 SHORT $LN4@install_gl

; 1142 : 		{
; 1143 : 
; 1144 : 			start_service_provider ( this_service );

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?start_service_provider@@YGXPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z ; start_service_provider
$LN4@install_gl:

; 1145 : 
; 1146 : //			add_service_provider_to_connection_message_list ( this_service->name );
; 1147 : 		}
; 1148 : 
; 1149 :       this_service = this_service->next;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  0003c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003f	89 4d fc	 mov	 DWORD PTR _this_service$[ebp], ecx

; 1150 :    }

  00042	eb cd		 jmp	 SHORT $LN2@install_gl
$LN1@install_gl:

; 1151 : }

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?install_global_options_service_provider@@YGXXZ ENDP	; install_global_options_service_provider
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?notify_connection_type_button@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_this_service$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_connection_type_button@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_connection_type_button, COMDAT

; 1010 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1011 : 
; 1012 :    service_provider_table_type
; 1013 :       *this_service = NULL;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _this_service$[ebp], 0

; 1014 : 
; 1015 : 	this_service = direct_play_get_service_provider_table ();

  00010	e8 00 00 00 00	 call	 ?direct_play_get_service_provider_table@@YGPAUSERVICE_PROVIDER_TABLE_TYPE@@XZ ; direct_play_get_service_provider_table
  00015	89 45 fc	 mov	 DWORD PTR _this_service$[ebp], eax

; 1016 : 
; 1017 : 	if (current_active_service)

  00018	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_active_service@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, 0 ; current_active_service
  0001f	74 35		 je	 SHORT $LN4@notify_con
$LN2@notify_con:

; 1018 : 	{
; 1019 : 		while (this_service)

  00021	83 7d fc 00	 cmp	 DWORD PTR _this_service$[ebp], 0
  00025	74 2f		 je	 SHORT $LN4@notify_con

; 1020 : 		{
; 1021 : 			if (memcmp (&global_options.service_provider_guid, this_service->guid, sizeof (GUID)) == 0)

  00027	6a 10		 push	 16			; 00000010H
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	51		 push	 ecx
  0002f	68 3c 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+60
  00034	e8 00 00 00 00	 call	 _memcmp
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	85 c0		 test	 eax, eax
  0003e	75 0b		 jne	 SHORT $LN5@notify_con

; 1022 : 			{
; 1023 : 				this_service = this_service->next;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00043	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00046	89 4d fc	 mov	 DWORD PTR _this_service$[ebp], ecx

; 1024 : 
; 1025 : 				break;

  00049	eb 0b		 jmp	 SHORT $LN4@notify_con
$LN5@notify_con:

; 1026 : 			}
; 1027 : 
; 1028 : 			this_service = this_service->next;

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  0004e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00051	89 4d fc	 mov	 DWORD PTR _this_service$[ebp], ecx

; 1029 : 		}

  00054	eb cb		 jmp	 SHORT $LN2@notify_con
$LN4@notify_con:

; 1030 : 	}
; 1031 : 
; 1032 : 	start_service_provider ( this_service );

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?start_service_provider@@YGXPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z ; start_service_provider

; 1033 : 
; 1034 : 	if ( this_service )

  0005f	83 7d fc 00	 cmp	 DWORD PTR _this_service$[ebp], 0
  00063	0f 84 2c 01 00
	00		 je	 $LN6@notify_con

; 1035 : 	{
; 1036 : 
; 1037 : 		// set the conection type text
; 1038 : 		if ( memcmp ( this_service->guid, &DPSPGUID_TCPIP, sizeof ( GUID ) ) == 0 )

  00069	6a 10		 push	 16			; 00000010H
  0006b	68 00 00 00 00	 push	 OFFSET _DPSPGUID_TCPIP
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 _memcmp
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007e	85 c0		 test	 eax, eax
  00080	75 22		 jne	 SHORT $LN8@notify_con

; 1039 : 		{
; 1040 : 			set_ui_object_text (obj, get_trans("MP_INTERNET"));

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ENPANIEJ@MP_INTERNET@
  00087	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0008c	50		 push	 eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00090	50		 push	 eax
  00091	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00094	8b 11		 mov	 edx, DWORD PTR [ecx]
  00096	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  0009d	ff d0		 call	 eax
  0009f	e9 c4 00 00 00	 jmp	 $LN9@notify_con
$LN8@notify_con:

; 1041 : 		}
; 1042 : 		else if ( memcmp ( this_service->guid, &DPSPGUID_SERIAL, sizeof ( GUID ) ) == 0 )

  000a4	6a 10		 push	 16			; 00000010H
  000a6	68 00 00 00 00	 push	 OFFSET _DPSPGUID_SERIAL
  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	51		 push	 ecx
  000b1	e8 00 00 00 00	 call	 _memcmp
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b9	85 c0		 test	 eax, eax
  000bb	75 22		 jne	 SHORT $LN10@notify_con

; 1043 : 		{
; 1044 : 			set_ui_object_text (obj, get_trans("MP_SERIAL"));

  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_09ENJGLPJC@MP_SERIAL@
  000c2	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000c7	50		 push	 eax
  000c8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  000d8	ff d0		 call	 eax
  000da	e9 89 00 00 00	 jmp	 $LN9@notify_con
$LN10@notify_con:

; 1045 : 		}
; 1046 : 		else if ( memcmp ( this_service->guid, &DPSPGUID_MODEM, sizeof ( GUID ) ) == 0 )

  000df	6a 10		 push	 16			; 00000010H
  000e1	68 00 00 00 00	 push	 OFFSET _DPSPGUID_MODEM
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  000e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 _memcmp
  000f1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f4	85 c0		 test	 eax, eax
  000f6	75 1f		 jne	 SHORT $LN12@notify_con

; 1047 : 		{
; 1048 : 			set_ui_object_text (obj, get_trans("MP_MODEM"));

  000f8	68 00 00 00 00	 push	 OFFSET ??_C@_08PIAFACLK@MP_MODEM@
  000fd	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00102	50		 push	 eax
  00103	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00106	50		 push	 eax
  00107	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0010a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  00113	ff d0		 call	 eax
  00115	eb 51		 jmp	 SHORT $LN9@notify_con
$LN12@notify_con:

; 1049 : 		}
; 1050 : 		else if ( memcmp ( this_service->guid, &DPSPGUID_IPX, sizeof ( GUID ) ) == 0 )

  00117	6a 10		 push	 16			; 00000010H
  00119	68 00 00 00 00	 push	 OFFSET _DPSPGUID_IPX
  0011e	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00121	8b 08		 mov	 ecx, DWORD PTR [eax]
  00123	51		 push	 ecx
  00124	e8 00 00 00 00	 call	 _memcmp
  00129	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012c	85 c0		 test	 eax, eax
  0012e	75 1f		 jne	 SHORT $LN14@notify_con

; 1051 : 		{
; 1052 : 			set_ui_object_text (obj, get_trans("MP_IPX"));

  00130	68 00 00 00 00	 push	 OFFSET ??_C@_06JEAIKIO@MP_IPX@
  00135	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0013a	50		 push	 eax
  0013b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0013e	50		 push	 eax
  0013f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00142	8b 11		 mov	 edx, DWORD PTR [ecx]
  00144	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  0014b	ff d0		 call	 eax

; 1053 : 		}
; 1054 : 		else

  0014d	eb 19		 jmp	 SHORT $LN9@notify_con
$LN14@notify_con:

; 1055 : 		{
; 1056 : 			set_ui_object_text (obj, this_service->name);

  0014f	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00152	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00155	51		 push	 ecx
  00156	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00159	52		 push	 edx
  0015a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0015d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  00166	ff d2		 call	 edx
$LN9@notify_con:

; 1057 : 		}
; 1058 : 
; 1059 : 		preprocess_translation_object_size (connection_type_bdrop, obj, NULL, 0, RESIZE_OPTION_BOX_TITLE);

  00168	6a 00		 push	 0
  0016a	6a 00		 push	 0
  0016c	6a 00		 push	 0
  0016e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00171	50		 push	 eax
  00172	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_bdrop@@3PAUUI_OBJECT@@A ; connection_type_bdrop
  00178	51		 push	 ecx
  00179	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 1060 : 
; 1061 : 		memcpy ( &global_options.service_provider_guid, this_service->guid, sizeof ( GUID ) );

  0017e	6a 10		 push	 16			; 00000010H
  00180	8b 45 fc	 mov	 eax, DWORD PTR _this_service$[ebp]
  00183	8b 08		 mov	 ecx, DWORD PTR [eax]
  00185	51		 push	 ecx
  00186	68 3c 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+60
  0018b	e8 00 00 00 00	 call	 _memcpy
  00190	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}
; 1063 : 	else

  00193	eb 44		 jmp	 SHORT $LN7@notify_con
$LN6@notify_con:

; 1064 : 	{
; 1065 : 		set_ui_object_text (obj, get_trans ("MP_NO_SERVICE_PROVIDER"));

  00195	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FHHJHLIC@MP_NO_SERVICE_PROVIDER@
  0019a	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0019f	50		 push	 eax
  001a0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001a3	50		 push	 eax
  001a4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  001b0	ff d0		 call	 eax

; 1066 : 
; 1067 : 		memset ( &global_options.service_provider_guid, 0, sizeof ( GUID ) );

  001b2	6a 10		 push	 16			; 00000010H
  001b4	6a 00		 push	 0
  001b6	68 3c 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+60
  001bb	e8 00 00 00 00	 call	 _memset
  001c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1068 : 
; 1069 : 		preprocess_translation_object_size (connection_type_bdrop, obj, NULL, 0, RESIZE_OPTION_BOX_TITLE);

  001c3	6a 00		 push	 0
  001c5	6a 00		 push	 0
  001c7	6a 00		 push	 0
  001c9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001cc	50		 push	 eax
  001cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_bdrop@@3PAUUI_OBJECT@@A ; connection_type_bdrop
  001d3	51		 push	 ecx
  001d4	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size
$LN7@notify_con:

; 1070 : 	}
; 1071 : 
; 1072 : 	set_toggle_button_off (obj);

  001d9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 ?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_off

; 1073 : 
; 1074 : 	reset_time_values (options_page [OPTIONS_PAGE_MULTIPLAYER]);

  001e2	b8 04 00 00 00	 mov	 eax, 4
  001e7	6b c8 06	 imul	 ecx, eax, 6
  001ea	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?options_page@@3PAPAUUI_OBJECT@@A[ecx]
  001f0	52		 push	 edx
  001f1	e8 00 00 00 00	 call	 ?reset_time_values@@YGXPAUUI_OBJECT@@@Z ; reset_time_values

; 1075 : 
; 1076 : 	set_multiplayer_options_display ();

  001f6	e8 00 00 00 00	 call	 ?set_multiplayer_options_display@@YGXXZ ; set_multiplayer_options_display

; 1077 : }

  001fb	5f		 pop	 edi
  001fc	5e		 pop	 esi
  001fd	5b		 pop	 ebx
  001fe	8b e5		 mov	 esp, ebp
  00200	5d		 pop	 ebp
  00201	c2 08 00	 ret	 8
?notify_connection_type_button@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_connection_type_button
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?start_service_provider@@YGXPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z
_TEXT	SEGMENT
_this_service$ = 8					; size = 4
?start_service_provider@@YGXPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z PROC ; start_service_provider, COMDAT

; 1084 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1085 : 
; 1086 : 	if ( this_service != current_active_service )

  00009	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  0000c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?current_active_service@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A ; current_active_service
  00012	74 3f		 je	 SHORT $LN1@start_serv

; 1087 : 	{
; 1088 : 
; 1089 : 		if ( modem_state != MODEM_NOT_CONNECTED )

  00014	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 0 ; modem_state
  0001b	74 05		 je	 SHORT $LN3@start_serv

; 1090 : 		{
; 1091 : 
; 1092 : 			break_modem_connection ();

  0001d	e8 00 00 00 00	 call	 ?break_modem_connection@@YGXXZ ; break_modem_connection
$LN3@start_serv:

; 1093 : 		}
; 1094 : 
; 1095 : 		direct_play_close_session ();

  00022	e8 00 00 00 00	 call	 ?direct_play_close_session@@YGHXZ ; direct_play_close_session

; 1096 : 
; 1097 : 		current_active_service = this_service;

  00027	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  0002a	a3 00 00 00 00	 mov	 DWORD PTR ?current_active_service@@3PAUSERVICE_PROVIDER_TABLE_TYPE@@A, eax ; current_active_service

; 1098 : 
; 1099 : 		if ( this_service )

  0002f	83 7d 08 00	 cmp	 DWORD PTR _this_service$[ebp], 0
  00033	74 19		 je	 SHORT $LN4@start_serv

; 1100 : 		{
; 1101 : 
; 1102 : 			if ( direct_play_create_interface ( this_service ) )

  00035	8b 45 08	 mov	 eax, DWORD PTR _this_service$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?direct_play_create_interface@@YGHPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z ; direct_play_create_interface
  0003e	85 c0		 test	 eax, eax
  00040	74 0a		 je	 SHORT $LN6@start_serv

; 1103 : 			{
; 1104 : 
; 1105 : 				direct_play_interface_capabilities ();

  00042	e8 00 00 00 00	 call	 ?direct_play_interface_capabilities@@YGHXZ ; direct_play_interface_capabilities

; 1106 : 
; 1107 : 				//
; 1108 : 				// Set the override values for the service provider here.
; 1109 : 				//
; 1110 : 
; 1111 : 				initialise_service_provider_connection ();

  00047	e8 00 00 00 00	 call	 ?initialise_service_provider_connection@@YGXXZ ; initialise_service_provider_connection
$LN6@start_serv:

; 1112 : 			}
; 1113 : 		}
; 1114 : 		else

  0004c	eb 05		 jmp	 SHORT $LN1@start_serv
$LN4@start_serv:

; 1115 : 		{
; 1116 : 
; 1117 : 			direct_play_destroy_interface ();

  0004e	e8 00 00 00 00	 call	 ?direct_play_destroy_interface@@YGHXZ ; direct_play_destroy_interface
$LN1@start_serv:

; 1118 : 		}
; 1119 : 	}
; 1120 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?start_service_provider@@YGXPAUSERVICE_PROVIDER_TABLE_TYPE@@@Z ENDP ; start_service_provider
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?notify_modem_answer_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv66 = -328						; size = 4
_modem$1 = -260						; size = 4
_text_buffer$ = -256					; size = 256
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_modem_answer_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_modem_answer_function, COMDAT

; 499  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 500  : 	char
; 501  : 		text_buffer [256];
; 502  : 
; 503  : 	ghost_ui_objects_for_modem (obj, TRUE);

  0000c	6a 01		 push	 1
  0000e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ; ghost_ui_objects_for_modem

; 504  : 
; 505  : 	switch ( modem_state )

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A ; modem_state
  0001c	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv66[ebp], eax
  00022	83 bd b8 fe ff
	ff 00		 cmp	 DWORD PTR tv66[ebp], 0
  00029	74 05		 je	 SHORT $LN4@notify_mod
  0002b	e9 a2 00 00 00	 jmp	 $LN2@notify_mod
$LN4@notify_mod:

; 506  : 	{
; 507  : 
; 508  : 		case MODEM_NOT_CONNECTED:
; 509  : 		{
; 510  : 
; 511  : 			char
; 512  : 				*modem;
; 513  : 
; 514  : 			modem = current_modem->name;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_modem@@3PAUMODEM_NAMES@@A ; current_modem
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 8d fc fe ff
	ff		 mov	 DWORD PTR _modem$1[ebp], ecx

; 515  : 
; 516  : 			if ( modem )

  0003d	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _modem$1[ebp], 0
  00044	0f 84 88 00 00
	00		 je	 $LN2@notify_mod

; 517  : 			{
; 518  : 
; 519  : 				//
; 520  : 				// Have to call create session to get the phone to answer
; 521  : 				//
; 522  : 
; 523  : 				if ( direct_play_answer_modem ( modem, GAME_TYPE_INVALID ) )

  0004a	6a 00		 push	 0
  0004c	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _modem$1[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?direct_play_answer_modem@@YGHPBDH@Z ; direct_play_answer_modem
  00058	85 c0		 test	 eax, eax
  0005a	74 76		 je	 SHORT $LN2@notify_mod

; 524  : 				{
; 525  : 
; 526  : 					direct_play_session_capabilities ();

  0005c	e8 00 00 00 00	 call	 ?direct_play_session_capabilities@@YGHXZ ; direct_play_session_capabilities

; 527  : 
; 528  : 					direct_play_create_group ();

  00061	e8 00 00 00 00	 call	 ?direct_play_create_group@@YGHXZ ; direct_play_create_group

; 529  : 
; 530  : 					direct_play_create_player ();

  00066	e8 00 00 00 00	 call	 ?direct_play_create_player@@YGHXZ ; direct_play_create_player

; 531  : 
; 532  : 					set_server_id (direct_play_get_player_id ());

  0006b	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  00070	a3 00 00 00 00	 mov	 DWORD PTR ?system_server_id@@3KA, eax ; system_server_id

; 533  : 
; 534  : 					//
; 535  : 					// Turn off the back button while we connect
; 536  : 					//
; 537  : 
; 538  : //					set_ui_object_drawable ( multi_player_back_button, UI_OBJECT_STATE_OFF );
; 539  : 
; 540  : 					sprintf (text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans ("MP_WAITING_FOR_CALL"));

  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HOBDPNNO@MP_WAITING_FOR_CALL@
  0007a	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0007f	50		 push	 eax
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  00085	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0008a	50		 push	 eax
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  00090	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 _sprintf
  0009c	83 c4 10	 add	 esp, 16			; 00000010H

; 541  : 
; 542  : 					set_ui_object_text (modem_status_text, text_buffer);

  0009f	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  000a5	50		 push	 eax
  000a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  000ac	51		 push	 ecx
  000ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_status_text@@3PAUUI_OBJECT@@A ; modem_status_text
  000b3	8b 02		 mov	 eax, DWORD PTR [edx]
  000b5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  000bc	ff d1		 call	 ecx

; 543  : 
; 544  : 					modem_state = MODEM_ANSWERING;

  000be	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 2 ; modem_state

; 545  : 
; 546  : 					ui_set_user_function ( multiplayer_modem_answer_update_function );

  000c8	68 00 00 00 00	 push	 OFFSET ?multiplayer_modem_answer_update_function@@YGXXZ ; multiplayer_modem_answer_update_function
  000cd	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function
$LN2@notify_mod:

; 547  : 				}
; 548  : 			}
; 549  : 
; 550  : 			break;
; 551  : 		}
; 552  : 	}
; 553  : 
; 554  : 	// don't leave text selected
; 555  : 
; 556  : 	set_toggle_button_off (obj);

  000d2	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_off

; 557  : }

  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 08 00	 ret	 8
?notify_modem_answer_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_modem_answer_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?notify_modem_dial_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv66 = -76						; size = 4
_phone$1 = -8						; size = 4
_modem$2 = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_modem_dial_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_modem_dial_function, COMDAT

; 430  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 431  : 	ghost_ui_objects_for_modem (obj, TRUE);

  00009	6a 01		 push	 1
  0000b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ; ghost_ui_objects_for_modem

; 432  : 
; 433  : 	switch ( modem_state )

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A ; modem_state
  00019	89 45 b4	 mov	 DWORD PTR tv66[ebp], eax
  0001c	83 7d b4 00	 cmp	 DWORD PTR tv66[ebp], 0
  00020	74 02		 je	 SHORT $LN4@notify_mod
  00022	eb 7a		 jmp	 SHORT $LN1@notify_mod
$LN4@notify_mod:

; 434  : 	{
; 435  : 
; 436  : 		case MODEM_NOT_CONNECTED:
; 437  : 		{
; 438  : 
; 439  : 			const char
; 440  : 				*modem,
; 441  : 				*phone;
; 442  : 
; 443  : 			modem = current_modem->name;

  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_modem@@3PAUMODEM_NAMES@@A ; current_modem
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d fc	 mov	 DWORD PTR _modem$2[ebp], ecx

; 444  : 
; 445  : 			phone = NULL;

  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _phone$1[ebp], 0

; 446  : 
; 447  : 			if ( modem )

  00035	83 7d fc 00	 cmp	 DWORD PTR _modem$2[ebp], 0
  00039	74 63		 je	 SHORT $LN1@notify_mod

; 448  : 			{
; 449  : 
; 450  : 				if ( strlen ( get_ui_object_text ( phone_number_text_obj ) ) > 0 )

  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  00040	50		 push	 eax
  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  00047	8b 11		 mov	 edx, DWORD PTR [ecx]
  00049	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00050	ff d0		 call	 eax
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 _strlen
  00058	83 c4 04	 add	 esp, 4
  0005b	85 c0		 test	 eax, eax
  0005d	76 3f		 jbe	 SHORT $LN1@notify_mod

; 451  : 				{
; 452  : 
; 453  : 					phone = get_ui_object_text ( phone_number_text_obj );

  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  00064	50		 push	 eax
  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  0006b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00074	ff d0		 call	 eax
  00076	89 45 f8	 mov	 DWORD PTR _phone$1[ebp], eax

; 454  : 
; 455  : 					modem_state = MODEM_DIALING;

  00079	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A, 1 ; modem_state

; 456  : 
; 457  : 					//
; 458  : 					// Have to call enum sessions to get the phone to dial out
; 459  : 					//
; 460  : 
; 461  : 					if ( direct_play_dial_modem ( modem, phone ) )

  00083	8b 45 f8	 mov	 eax, DWORD PTR _phone$1[ebp]
  00086	50		 push	 eax
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _modem$2[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 ?direct_play_dial_modem@@YGHPBD0@Z ; direct_play_dial_modem
  00090	85 c0		 test	 eax, eax
  00092	74 0a		 je	 SHORT $LN1@notify_mod

; 462  : 					{
; 463  : 
; 464  : 						//
; 465  : 						// Remove the back button while we connect
; 466  : 						//
; 467  : 
; 468  : //						set_ui_object_drawable ( multi_player_back_button, UI_OBJECT_STATE_OFF );
; 469  : 
; 470  : 						ui_set_user_function ( multiplayer_modem_dial_update_function );

  00094	68 00 00 00 00	 push	 OFFSET ?multiplayer_modem_dial_update_function@@YGXXZ ; multiplayer_modem_dial_update_function
  00099	e8 00 00 00 00	 call	 ?ui_set_user_function@@YGXP6GXXZ@Z ; ui_set_user_function
$LN1@notify_mod:

; 471  : 					}
; 472  : 					else
; 473  : 					{
; 474  : 
; 475  : 						//
; 476  : 						// Report connection failed
; 477  : 						//
; 478  : 					}
; 479  : 				}
; 480  : 				else
; 481  : 				{
; 482  : 
; 483  : 					//
; 484  : 					// Report no phone number typed in
; 485  : 					//
; 486  : 				}
; 487  : 			}
; 488  : 
; 489  : 			break;
; 490  : 		}
; 491  : 	}
; 492  : }

  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 08 00	 ret	 8
?notify_modem_dial_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_modem_dial_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?notify_modem_cancel_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_modem_cancel_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_modem_cancel_function, COMDAT

; 414  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 415  : 
; 416  : 	break_modem_connection ();

  00009	e8 00 00 00 00	 call	 ?break_modem_connection@@YGXXZ ; break_modem_connection

; 417  : 
; 418  : 	ghost_ui_objects_for_modem (obj, FALSE);

  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?ghost_ui_objects_for_modem@@YGXPAUUI_OBJECT@@H@Z ; ghost_ui_objects_for_modem

; 419  : 
; 420  : 	// don't leave text selected
; 421  : 
; 422  : 	set_toggle_button_off (obj);

  00019	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_off

; 423  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?notify_modem_cancel_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_modem_cancel_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?notify_multi_player_setup@@YGXXZ
_TEXT	SEGMENT
_text$ = -16						; size = 10
_this_connection$ = -4					; size = 4
?notify_multi_player_setup@@YGXXZ PROC			; notify_multi_player_setup, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 169  : 
; 170  : 	connection_data_type
; 171  : 		*this_connection;
; 172  : 
; 173  : 	char
; 174  : 		text [10];
; 175  : 
; 176  : //	if ( get_ui_object_drawable ( obj ) )
; 177  : //	{
; 178  : 
; 179  : 		this_connection = direct_play_get_connection_data ();

  00009	e8 00 00 00 00	 call	 ?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ; direct_play_get_connection_data
  0000e	89 45 fc	 mov	 DWORD PTR _this_connection$[ebp], eax

; 180  : 
; 181  : 		blit_front_buffer_to_render_buffer ();

  00011	e8 00 00 00 00	 call	 ?blit_front_buffer_to_render_buffer@@YGXXZ ; blit_front_buffer_to_render_buffer

; 182  : 
; 183  : 
; 184  : 		// Setup the service provider cycle button
; 185  : 
; 186  : 		if ( this_connection->service_provider.name )

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  00019	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0001d	0f 84 fb 00 00
	00		 je	 $LN2@notify_mul

; 187  : 		{
; 188  : 			if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_TCPIP, sizeof ( GUID ) ) == 0 )

  00023	6a 10		 push	 16			; 00000010H
  00025	68 00 00 00 00	 push	 OFFSET _DPSPGUID_TCPIP
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  0002d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 _memcmp
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	85 c0		 test	 eax, eax
  0003b	75 27		 jne	 SHORT $LN4@notify_mul

; 189  : 			{
; 190  : 				set_ui_object_text (connection_type_button, get_trans("MP_INTERNET"));

  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ENPANIEJ@MP_INTERNET@
  00042	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00047	50		 push	 eax
  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  0004d	50		 push	 eax
  0004e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  0005d	ff d0		 call	 eax
  0005f	e9 b8 00 00 00	 jmp	 $LN5@notify_mul
$LN4@notify_mul:

; 191  : 			}
; 192  : 			else if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_SERIAL, sizeof ( GUID ) ) == 0 )

  00064	6a 10		 push	 16			; 00000010H
  00066	68 00 00 00 00	 push	 OFFSET _DPSPGUID_SERIAL
  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  0006e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 _memcmp
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	85 c0		 test	 eax, eax
  0007c	75 24		 jne	 SHORT $LN6@notify_mul

; 193  : 			{
; 194  : 				set_ui_object_text (connection_type_button, get_trans("MP_SERIAL"));

  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_09ENJGLPJC@MP_SERIAL@
  00083	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00088	50		 push	 eax
  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  0008e	50		 push	 eax
  0008f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  00095	8b 11		 mov	 edx, DWORD PTR [ecx]
  00097	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  0009e	ff d0		 call	 eax
  000a0	eb 7a		 jmp	 SHORT $LN5@notify_mul
$LN6@notify_mul:

; 195  : 			}
; 196  : 			else if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_MODEM, sizeof ( GUID ) ) == 0 )

  000a2	6a 10		 push	 16			; 00000010H
  000a4	68 00 00 00 00	 push	 OFFSET _DPSPGUID_MODEM
  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  000ac	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000af	51		 push	 ecx
  000b0	e8 00 00 00 00	 call	 _memcmp
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b8	85 c0		 test	 eax, eax
  000ba	75 24		 jne	 SHORT $LN8@notify_mul

; 197  : 			{
; 198  : 				set_ui_object_text (connection_type_button, get_trans("MP_MODEM"));

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_08PIAFACLK@MP_MODEM@
  000c1	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000c6	50		 push	 eax
  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  000cc	50		 push	 eax
  000cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  000d3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  000dc	ff d0		 call	 eax
  000de	eb 3c		 jmp	 SHORT $LN5@notify_mul
$LN8@notify_mul:

; 199  : 			}
; 200  : 			else if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_IPX, sizeof ( GUID ) ) == 0 )

  000e0	6a 10		 push	 16			; 00000010H
  000e2	68 00 00 00 00	 push	 OFFSET _DPSPGUID_IPX
  000e7	8b 45 fc	 mov	 eax, DWORD PTR _this_connection$[ebp]
  000ea	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 _memcmp
  000f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f6	85 c0		 test	 eax, eax
  000f8	75 22		 jne	 SHORT $LN5@notify_mul

; 201  : 			{
; 202  : 				set_ui_object_text (connection_type_button, get_trans("MP_IPX"));

  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_06JEAIKIO@MP_IPX@
  000ff	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00104	50		 push	 eax
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  0010a	50		 push	 eax
  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  0011a	ff d0		 call	 eax
$LN5@notify_mul:

; 203  : 			}
; 204  : 		}
; 205  : 		else

  0011c	eb 22		 jmp	 SHORT $LN3@notify_mul
$LN2@notify_mul:

; 206  : 		{
; 207  : 			set_ui_object_text (connection_type_button, get_trans ("MP_NO_SERVICE_PROVIDER"));

  0011e	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FHHJHLIC@MP_NO_SERVICE_PROVIDER@
  00123	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00128	50		 push	 eax
  00129	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  0012e	50		 push	 eax
  0012f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  00135	8b 11		 mov	 edx, DWORD PTR [ecx]
  00137	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  0013e	ff d0		 call	 eax
$LN3@notify_mul:

; 208  : 		}
; 209  : 
; 210  : 		preprocess_translation_object_size (connection_type_bdrop, connection_type_button, NULL, 0, RESIZE_OPTION_BOX_TITLE);

  00140	6a 00		 push	 0
  00142	6a 00		 push	 0
  00144	6a 00		 push	 0
  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?connection_type_button@@3PAUUI_OBJECT@@A ; connection_type_button
  0014b	50		 push	 eax
  0014c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?connection_type_bdrop@@3PAUUI_OBJECT@@A ; connection_type_bdrop
  00152	51		 push	 ecx
  00153	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 211  : 
; 212  : 		// initialise modem to first in list (? Shouldn't we store the current modem elsewhere - ie globally ?)
; 213  : 
; 214  : 		current_modem = modem_name_list;

  00158	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_name_list@@3PAUMODEM_NAMES@@A ; modem_name_list
  0015d	a3 00 00 00 00	 mov	 DWORD PTR ?current_modem@@3PAUMODEM_NAMES@@A, eax ; current_modem

; 215  : 
; 216  : 		if (!current_modem)

  00162	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_modem@@3PAUMODEM_NAMES@@A, 0 ; current_modem
  00169	75 1e		 jne	 SHORT $LN11@notify_mul

; 217  : 		{
; 218  : 			set_ui_object_text (modem_type_button, "No Modem Installed");

  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CJDKJGAI@No?5Modem?5Installed@
  00170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  00175	50		 push	 eax
  00176	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  0017c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  00185	ff d0		 call	 eax

; 219  : 		}
; 220  : 		else

  00187	eb 1f		 jmp	 SHORT $LN12@notify_mul
$LN11@notify_mul:

; 221  : 		{
; 222  : 			set_ui_object_text (modem_type_button, current_modem->name);

  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_modem@@3PAUMODEM_NAMES@@A ; current_modem
  0018e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00190	51		 push	 ecx
  00191	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  00197	52		 push	 edx
  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_type_button@@3PAUUI_OBJECT@@A ; modem_type_button
  0019d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  001a6	ff d2		 call	 edx
$LN12@notify_mul:

; 223  : 		}
; 224  : 
; 225  : 		// Com port button
; 226  : 
; 227  : 		sprintf (text, "%d", get_global_comms_port ());

  001a8	a1 78 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+120
  001ad	50		 push	 eax
  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  001b3	8d 4d f0	 lea	 ecx, DWORD PTR _text$[ebp]
  001b6	51		 push	 ecx
  001b7	e8 00 00 00 00	 call	 _sprintf
  001bc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 228  : 
; 229  : 		set_ui_object_text (com_port_button, text);

  001bf	8d 45 f0	 lea	 eax, DWORD PTR _text$[ebp]
  001c2	50		 push	 eax
  001c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?com_port_button@@3PAUUI_OBJECT@@A ; com_port_button
  001c9	51		 push	 ecx
  001ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?com_port_button@@3PAUUI_OBJECT@@A ; com_port_button
  001d0	8b 02		 mov	 eax, DWORD PTR [edx]
  001d2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  001d9	ff d1		 call	 ecx

; 230  : 
; 231  : 		// Baud rate
; 232  : 
; 233  : 		set_ui_object_text (baud_rate_button, baud_rate_text [get_global_baud_rate () - 1]);

  001db	a1 7c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+124
  001e0	8b 0c 85 fc ff
	ff ff		 mov	 ecx, DWORD PTR ?baud_rate_text@@3PAPBDA[eax*4-4]
  001e7	51		 push	 ecx
  001e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?baud_rate_button@@3PAUUI_OBJECT@@A ; baud_rate_button
  001ee	52		 push	 edx
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?baud_rate_button@@3PAUUI_OBJECT@@A ; baud_rate_button
  001f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f6	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  001fd	ff d2		 call	 edx

; 234  : 
; 235  : 		// Stop bits
; 236  : 
; 237  : 		set_ui_object_text (stop_bits_button, stop_bits_text [get_global_stop_bits () - 1]);

  001ff	a1 80 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+128
  00204	8b 0c 85 fc ff
	ff ff		 mov	 ecx, DWORD PTR ?stop_bits_text@@3PAPBDA[eax*4-4]
  0020b	51		 push	 ecx
  0020c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?stop_bits_button@@3PAUUI_OBJECT@@A ; stop_bits_button
  00212	52		 push	 edx
  00213	a1 00 00 00 00	 mov	 eax, DWORD PTR ?stop_bits_button@@3PAUUI_OBJECT@@A ; stop_bits_button
  00218	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021a	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  00221	ff d2		 call	 edx

; 238  : 
; 239  : 		// Parity
; 240  : 
; 241  : 		set_ui_object_text (parity_button, parity_text [get_global_parity () - 1]);

  00223	a1 84 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+132
  00228	8b 0c 85 fc ff
	ff ff		 mov	 ecx, DWORD PTR ?parity_text@@3PAPBDA[eax*4-4]
  0022f	51		 push	 ecx
  00230	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parity_button@@3PAUUI_OBJECT@@A ; parity_button
  00236	52		 push	 edx
  00237	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parity_button@@3PAUUI_OBJECT@@A ; parity_button
  0023c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023e	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  00245	ff d2		 call	 edx

; 242  : 
; 243  : 		// Flow
; 244  : 
; 245  : 		set_ui_object_text (flow_button, flow_text [get_global_flow () - 1]);

  00247	a1 88 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+136
  0024c	8b 0c 85 fc ff
	ff ff		 mov	 ecx, DWORD PTR ?flow_text@@3PAPBDA[eax*4-4]
  00253	51		 push	 ecx
  00254	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?flow_button@@3PAUUI_OBJECT@@A ; flow_button
  0025a	52		 push	 edx
  0025b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?flow_button@@3PAUUI_OBJECT@@A ; flow_button
  00260	8b 08		 mov	 ecx, DWORD PTR [eax]
  00262	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  00269	ff d2		 call	 edx

; 246  : 
; 247  : 		// Phone Number
; 248  : 
; 249  : 		set_ui_object_text (phone_number_text_obj, global_options.phone_number);

  0026b	68 14 01 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+276
  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  00275	50		 push	 eax
  00276	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?phone_number_text_obj@@3PAUUI_OBJECT@@A ; phone_number_text_obj
  0027c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  00285	ff d0		 call	 eax

; 250  : 
; 251  : 		// IP Address
; 252  : 
; 253  : 		set_ui_object_text (ip_address_text_obj, global_options.ip_address);

  00287	68 94 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+148
  0028c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ip_address_text_obj@@3PAUUI_OBJECT@@A ; ip_address_text_obj
  00291	50		 push	 eax
  00292	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ip_address_text_obj@@3PAUUI_OBJECT@@A ; ip_address_text_obj
  00298	8b 11		 mov	 edx, DWORD PTR [ecx]
  0029a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  002a1	ff d0		 call	 eax

; 254  : 
; 255  : 
; 256  : 		// Now setup the connection type areas
; 257  : 
; 258  : 		set_multiplayer_options_display ();

  002a3	e8 00 00 00 00	 call	 ?set_multiplayer_options_display@@YGXXZ ; set_multiplayer_options_display

; 259  : 
; 260  : 
; 261  : 		// Lastly load in the stuff for the screen
; 262  : /*
; 263  : 		if ( multiplayer_screen_graphic )
; 264  : 		{
; 265  : 
; 266  : 			destroy_texture_graphic ( multiplayer_screen_graphic );
; 267  : 
; 268  : 			multiplayer_screen_graphic = NULL;
; 269  : 		}
; 270  : 
; 271  : 		multiplayer_screen_graphic = create_texture_graphic ( "graphics\\ui\\cohokum\\multi.psd" );
; 272  : 
; 273  : 		set_ui_object_texture_graphic ( multi_player_setup_area, multiplayer_screen_graphic );
; 274  : 
; 275  : 		blit_front_buffer_to_render_buffer ();
; 276  : 
; 277  : 		reset_time_values ( options_screen );
; 278  : */
; 279  : //	}
; 280  : //	else
; 281  : //	{
; 282  : /*
; 283  : 		if ( multiplayer_screen_graphic )
; 284  : 		{
; 285  : 
; 286  : 			destroy_texture_graphic ( multiplayer_screen_graphic );
; 287  : 
; 288  : 			multiplayer_screen_graphic = NULL;
; 289  : 		}
; 290  : */
; 291  : //	}
; 292  : 
; 293  : 	display_options_page (OPTIONS_PAGE_MULTIPLAYER);

  002a8	6a 06		 push	 6
  002aa	e8 00 00 00 00	 call	 ?display_options_page@@YGXW4OPTIONS_PAGES@@@Z ; display_options_page

; 294  : }

  002af	5f		 pop	 edi
  002b0	5e		 pop	 esi
  002b1	5b		 pop	 ebx
  002b2	8b e5		 mov	 esp, ebp
  002b4	5d		 pop	 ebp
  002b5	c3		 ret	 0
?notify_multi_player_setup@@YGXXZ ENDP			; notify_multi_player_setup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?set_serial_connection_status@@YGXXZ
_TEXT	SEGMENT
_this_connection$ = -260				; size = 4
_text_buffer$ = -256					; size = 256
?set_serial_connection_status@@YGXXZ PROC		; set_serial_connection_status, COMDAT

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 122  : 
; 123  : 	char
; 124  : 		text_buffer [256];
; 125  : 
; 126  : 	connection_data_type
; 127  : 		*this_connection;
; 128  : 
; 129  : 	this_connection = direct_play_get_connection_data ();

  0000c	e8 00 00 00 00	 call	 ?direct_play_get_connection_data@@YGPAUCONNECTION_DATA_TYPE@@XZ ; direct_play_get_connection_data
  00011	89 85 fc fe ff
	ff		 mov	 DWORD PTR _this_connection$[ebp], eax

; 130  : 
; 131  : 	if ( ( this_connection ) && ( this_connection->service_provider.guid ) )

  00017	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _this_connection$[ebp], 0
  0001e	0f 84 26 01 00
	00		 je	 $LN1@set_serial
  00024	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$[ebp]
  0002a	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0002e	0f 84 16 01 00
	00		 je	 $LN1@set_serial

; 132  : 	{
; 133  : 
; 134  : 		if ( memcmp ( this_connection->service_provider.guid, &DPSPGUID_SERIAL, sizeof ( GUID ) ) == TRUE )

  00034	6a 10		 push	 16			; 00000010H
  00036	68 00 00 00 00	 push	 OFFSET _DPSPGUID_SERIAL
  0003b	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$[ebp]
  00041	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 _memcmp
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004d	83 f8 01	 cmp	 eax, 1
  00050	0f 85 f4 00 00
	00		 jne	 $LN1@set_serial

; 135  : 		{
; 136  : 
; 137  : 			set_direct_play_serial_address ( get_global_comms_port (), get_global_baud_rate (), get_global_stop_bits (), get_global_parity (), get_global_flow () );

  00056	a1 88 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+136
  0005b	50		 push	 eax
  0005c	8b 0d 84 00 00
	00		 mov	 ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+132
  00062	51		 push	 ecx
  00063	8b 15 80 00 00
	00		 mov	 edx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+128
  00069	52		 push	 edx
  0006a	a1 7c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+124
  0006f	50		 push	 eax
  00070	8b 0d 78 00 00
	00		 mov	 ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+120
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?set_direct_play_serial_address@@YGXHHHHH@Z ; set_direct_play_serial_address

; 138  : 
; 139  : 			if ( direct_play_create_session ( 0 ) )

  0007c	6a 00		 push	 0
  0007e	e8 00 00 00 00	 call	 ?direct_play_create_session@@YGHH@Z ; direct_play_create_session
  00083	85 c0		 test	 eax, eax
  00085	74 65		 je	 SHORT $LN4@set_serial

; 140  : 			{
; 141  : 
; 142  : 				sprintf (text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans ("MP_CONNECTED"));

  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GHHPHBFB@MP_CONNECTED@
  0008c	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00091	50		 push	 eax
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  00097	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0009c	50		 push	 eax
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  000a2	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 _sprintf
  000ae	83 c4 10	 add	 esp, 16			; 00000010H

; 143  : 
; 144  : 				set_ui_object_text (serial_status_text, text_buffer);

  000b1	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  000b7	50		 push	 eax
  000b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?serial_status_text@@3PAUUI_OBJECT@@A ; serial_status_text
  000be	51		 push	 ecx
  000bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?serial_status_text@@3PAUUI_OBJECT@@A ; serial_status_text
  000c5	8b 02		 mov	 eax, DWORD PTR [edx]
  000c7	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  000ce	ff d1		 call	 ecx

; 145  : 
; 146  : 				direct_play_close_session ();

  000d0	e8 00 00 00 00	 call	 ?direct_play_close_session@@YGHXZ ; direct_play_close_session

; 147  : 
; 148  : 				this_connection->is_initialised = TRUE;

  000d5	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$[ebp]
  000db	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000de	83 c9 01	 or	 ecx, 1
  000e1	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _this_connection$[ebp]
  000e7	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 149  : 			}
; 150  : 			else

  000ea	eb 5e		 jmp	 SHORT $LN1@set_serial
$LN4@set_serial:

; 151  : 			{
; 152  : 
; 153  : 				sprintf (text_buffer, "%s: %s", get_trans ("MP_STATUS"), get_trans ("MP_INVALID_PROPERTIES"));

  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HNHNDLOK@MP_INVALID_PROPERTIES@
  000f1	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000f6	50		 push	 eax
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_09NGFKAJIO@MP_STATUS@
  000fc	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00101	50		 push	 eax
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  00107	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 _sprintf
  00113	83 c4 10	 add	 esp, 16			; 00000010H

; 154  : 
; 155  : 				set_ui_object_text (serial_status_text, text_buffer);

  00116	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _text_buffer$[ebp]
  0011c	50		 push	 eax
  0011d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?serial_status_text@@3PAUUI_OBJECT@@A ; serial_status_text
  00123	51		 push	 ecx
  00124	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?serial_status_text@@3PAUUI_OBJECT@@A ; serial_status_text
  0012a	8b 02		 mov	 eax, DWORD PTR [edx]
  0012c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  00133	ff d1		 call	 ecx

; 156  : 
; 157  : 				this_connection->is_initialised = FALSE;

  00135	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this_connection$[ebp]
  0013b	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0013e	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00141	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _this_connection$[ebp]
  00147	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
$LN1@set_serial:

; 158  : 			}
; 159  : 		}
; 160  : 	}
; 161  : }

  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c3		 ret	 0
?set_serial_connection_status@@YGXXZ ENDP		; set_serial_connection_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\multiop\mult_fn.c
;	COMDAT ?validate_modem_connection@@YGXXZ
_TEXT	SEGMENT
tv64 = -72						; size = 4
_caps$1 = -4						; size = 4
?validate_modem_connection@@YGXXZ PROC			; validate_modem_connection, COMDAT

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 302  : 
; 303  : 	switch ( modem_state )

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modem_state@@3W4MODEM_INITIALISE_VALUES@@A ; modem_state
  0000e	89 45 b8	 mov	 DWORD PTR tv64[ebp], eax
  00011	83 7d b8 03	 cmp	 DWORD PTR tv64[ebp], 3
  00015	7c 30		 jl	 SHORT $LN1@validate_m
  00017	83 7d b8 04	 cmp	 DWORD PTR tv64[ebp], 4
  0001b	7e 02		 jle	 SHORT $LN4@validate_m
  0001d	eb 28		 jmp	 SHORT $LN1@validate_m
$LN4@validate_m:

; 304  : 	{
; 305  : 
; 306  : 		case MODEM_DIALLED_CONNECTED:
; 307  : 		case MODEM_ANSWERED_CONNECTED:
; 308  : 		{
; 309  : 
; 310  : 			LPDPSESSIONDESC2
; 311  : 				caps;
; 312  : 
; 313  : 			direct_play_session_capabilities ();

  0001f	e8 00 00 00 00	 call	 ?direct_play_session_capabilities@@YGHXZ ; direct_play_session_capabilities

; 314  : 
; 315  : 			caps = direct_play_get_session_capabilities ();

  00024	e8 00 00 00 00	 call	 ?direct_play_get_session_capabilities@@YGPAUDPSESSIONDESC2@@XZ ; direct_play_get_session_capabilities
  00029	89 45 fc	 mov	 DWORD PTR _caps$1[ebp], eax

; 316  : 
; 317  : 			if ( caps )

  0002c	83 7d fc 00	 cmp	 DWORD PTR _caps$1[ebp], 0
  00030	74 10		 je	 SHORT $LN5@validate_m

; 318  : 			{
; 319  : 
; 320  : 				if ( caps->dwCurrentPlayers != 2 )

  00032	8b 45 fc	 mov	 eax, DWORD PTR _caps$1[ebp]
  00035	83 78 2c 02	 cmp	 DWORD PTR [eax+44], 2
  00039	74 05		 je	 SHORT $LN7@validate_m

; 321  : 				{
; 322  : 
; 323  : 					break_modem_connection ();

  0003b	e8 00 00 00 00	 call	 ?break_modem_connection@@YGXXZ ; break_modem_connection
$LN7@validate_m:

; 324  : 				}
; 325  : 			}
; 326  : 			else

  00040	eb 05		 jmp	 SHORT $LN1@validate_m
$LN5@validate_m:

; 327  : 			{
; 328  : 
; 329  : 				break_modem_connection ();

  00042	e8 00 00 00 00	 call	 ?break_modem_connection@@YGXXZ ; break_modem_connection
$LN1@validate_m:

; 330  : 			}
; 331  : 
; 332  : 			break;
; 333  : 		}
; 334  : 	}
; 335  : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?validate_modem_connection@@YGXXZ ENDP			; validate_modem_connection
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
