; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\pilot\pi_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_pilot_pack_functions@@YGXXZ		; overload_pilot_pack_functions
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@GMBNIPBI@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; pack_list_link
EXTRN	?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; unpack_list_link
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PBD@Z:PROC ; pack_string
EXTRN	?unpack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PAD@Z:PROC ; unpack_string
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 0bbH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@GMBNIPBI@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@GMBNIPBI@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\pilot\pi_pack'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pi_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv208 = -84						; size = 4
tv163 = -84						; size = 4
tv154 = -84						; size = 4
tv70 = -84						; size = 4
_raw$1 = -16						; size = 4
_index$2 = -12						; size = 4
_raw$3 = -8						; size = 4
_index$4 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 188  :    ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@GMBNIPBI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 189  : 
; 190  :    switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 ac	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d ac 01	 cmp	 DWORD PTR tv70[ebp], 1
  00037	74 14		 je	 SHORT $LN7@unpack_loc
  00039	83 7d ac 02	 cmp	 DWORD PTR tv70[ebp], 2
  0003d	0f 84 71 01 00
	00		 je	 $LN8@unpack_loc
  00043	e9 64 02 00 00	 jmp	 $LN1@unpack_loc

; 191  :    {
; 192  :       ////////////////////////////////////////
; 193  :       case PACK_MODE_SERVER_SESSION:
; 194  :       ////////////////////////////////////////
; 195  : 		{
; 196  : 			break;

  00048	e9 5f 02 00 00	 jmp	 $LN1@unpack_loc
$LN7@unpack_loc:

; 197  : 		}
; 198  :       ////////////////////////////////////////
; 199  :       case PACK_MODE_CLIENT_SESSION:
; 200  :       ////////////////////////////////////////
; 201  :       {
; 202  :          int
; 203  :             index;
; 204  : 
; 205  :          pilot
; 206  :             *raw;
; 207  : 
; 208  :          //
; 209  :          // create entity
; 210  :          //
; 211  : 
; 212  :          index = unpack_entity_safe_index ();

  0004d	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  00052	89 45 fc	 mov	 DWORD PTR _index$4[ebp], eax

; 213  : 
; 214  :          en = get_free_entity (index);

  00055	8b 45 fc	 mov	 eax, DWORD PTR _index$4[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  0005e	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 215  : 
; 216  :          set_local_entity_type (en, type);

  00061	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00067	89 08		 mov	 DWORD PTR [eax], ecx

; 217  : 
; 218  :          raw = (pilot *) malloc_fast_mem (sizeof (pilot));

  00069	68 44 01 00 00	 push	 324			; 00000144H
  0006e	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00073	89 45 f8	 mov	 DWORD PTR _raw$3[ebp], eax

; 219  : 
; 220  :          set_local_entity_data (en, raw);

  00076	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0007c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 221  : 
; 222  :          memset (raw, 0, sizeof (pilot));

  0007f	68 44 01 00 00	 push	 324			; 00000144H
  00084	6a 00		 push	 0
  00086	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 _memset
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 223  : 
; 224  :          //
; 225  :          // unpack data (in exactly the same order as the data was packed)
; 226  :          //
; 227  : 
; 228  :          raw->sub_type = unpack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00092	6a 34		 push	 52			; 00000034H
  00094	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0009d	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  000a0	89 01		 mov	 DWORD PTR [ecx], eax

; 229  : 
; 230  :          unpack_string (en, STRING_TYPE_PILOTS_NAME, raw->pilots_name);

  000a2	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000a5	83 c0 04	 add	 eax, 4
  000a8	50		 push	 eax
  000a9	6a 0a		 push	 10			; 0000000aH
  000ab	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ae	51		 push	 ecx
  000af	e8 00 00 00 00	 call	 ?unpack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PAD@Z ; unpack_string

; 231  : 
; 232  :          raw->rank = unpack_int_value (en, INT_TYPE_PILOT_RANK);

  000b4	68 9a 00 00 00	 push	 154			; 0000009aH
  000b9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000c2	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  000c5	89 81 08 01 00
	00		 mov	 DWORD PTR [ecx+264], eax

; 233  : 
; 234  :          raw->kills = unpack_int_value (en, INT_TYPE_KILLS);

  000cb	6a 72		 push	 114			; 00000072H
  000cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000d6	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  000d9	89 81 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], eax

; 235  : 
; 236  :          raw->unique_id = unpack_int_value (en, INT_TYPE_UNIQUE_ID);

  000df	68 ed 00 00 00	 push	 237			; 000000edH
  000e4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  000f0	89 81 10 01 00
	00		 mov	 DWORD PTR [ecx+272], eax

; 237  : 
; 238  : 			raw->crew_role = CREW_ROLE_PILOT;

  000f6	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000f9	c7 80 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+276], 0

; 239  : 
; 240  :          unpack_list_root (en, LIST_TYPE_PILOT_LOCK, &raw->pilot_lock_root);

  00103	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00106	05 18 01 00 00	 add	 eax, 280		; 00000118H
  0010b	50		 push	 eax
  0010c	6a 1d		 push	 29			; 0000001dH
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00111	51		 push	 ecx
  00112	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 241  : 
; 242  :          unpack_list_link (en, LIST_TYPE_AIRCREW, &raw->aircrew_link);

  00117	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0011a	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  0011f	50		 push	 eax
  00120	6a 01		 push	 1
  00122	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00125	51		 push	 ecx
  00126	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 243  : 
; 244  :          unpack_list_link (en, LIST_TYPE_PILOT, &raw->pilot_link);

  0012b	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0012e	05 28 01 00 00	 add	 eax, 296		; 00000128H
  00133	50		 push	 eax
  00134	6a 1c		 push	 28			; 0000001cH
  00136	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00139	51		 push	 ecx
  0013a	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 245  : 
; 246  :          unpack_list_link (en, LIST_TYPE_PLAYER_TASK, &raw->player_task_link);

  0013f	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00142	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00147	50		 push	 eax
  00148	6a 1e		 push	 30			; 0000001eH
  0014a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0014d	51		 push	 ecx
  0014e	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 247  : 
; 248  :          raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  00153	68 bb 00 00 00	 push	 187			; 000000bbH
  00158	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00161	89 45 ac	 mov	 DWORD PTR tv154[ebp], eax
  00164	8b 4d ac	 mov	 ecx, DWORD PTR tv154[ebp]
  00167	83 e1 03	 and	 ecx, 3
  0016a	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  0016d	8b 82 40 01 00
	00		 mov	 eax, DWORD PTR [edx+320]
  00173	83 e0 fc	 and	 eax, -4			; fffffffcH
  00176	0b c1		 or	 eax, ecx
  00178	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0017b	89 81 40 01 00
	00		 mov	 DWORD PTR [ecx+320], eax

; 249  : 
; 250  : 			raw->difficulty_level = unpack_int_value (en, INT_TYPE_DIFFICULTY_LEVEL);

  00181	6a 2f		 push	 47			; 0000002fH
  00183	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0018c	89 45 ac	 mov	 DWORD PTR tv163[ebp], eax
  0018f	8b 4d ac	 mov	 ecx, DWORD PTR tv163[ebp]
  00192	83 e1 03	 and	 ecx, 3
  00195	c1 e1 02	 shl	 ecx, 2
  00198	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  0019b	8b 82 40 01 00
	00		 mov	 eax, DWORD PTR [edx+320]
  001a1	83 e0 f3	 and	 eax, -13		; fffffff3H
  001a4	0b c1		 or	 eax, ecx
  001a6	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  001a9	89 81 40 01 00
	00		 mov	 DWORD PTR [ecx+320], eax

; 251  : 
; 252  :          break;

  001af	e9 f8 00 00 00	 jmp	 $LN1@unpack_loc
$LN8@unpack_loc:

; 253  :       }
; 254  :       ////////////////////////////////////////
; 255  :       case PACK_MODE_BROWSE_SESSION:
; 256  :       ////////////////////////////////////////
; 257  :       {
; 258  :          int
; 259  :             index;
; 260  : 
; 261  :          pilot
; 262  :             *raw;
; 263  : 
; 264  :          //
; 265  :          // create entity
; 266  :          //
; 267  : 
; 268  :          index = unpack_entity_safe_index ();

  001b4	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  001b9	89 45 f4	 mov	 DWORD PTR _index$2[ebp], eax

; 269  : 
; 270  :          en = get_free_entity (index);

  001bc	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  001c5	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 271  : 
; 272  :          set_local_entity_type (en, type);

  001c8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001cb	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  001ce	89 08		 mov	 DWORD PTR [eax], ecx

; 273  : 
; 274  :          raw = (pilot *) malloc_fast_mem (sizeof (pilot));

  001d0	68 44 01 00 00	 push	 324			; 00000144H
  001d5	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  001da	89 45 f0	 mov	 DWORD PTR _raw$1[ebp], eax

; 275  : 
; 276  :          set_local_entity_data (en, raw);

  001dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001e0	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  001e3	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 277  : 
; 278  :          memset (raw, 0, sizeof (pilot));

  001e6	68 44 01 00 00	 push	 324			; 00000144H
  001eb	6a 00		 push	 0
  001ed	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 _memset
  001f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 279  : 
; 280  :          //
; 281  :          // unpack data (in exactly the same order as the data was packed)
; 282  :          //
; 283  : 
; 284  :          raw->sub_type = unpack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  001f9	6a 34		 push	 52			; 00000034H
  001fb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00204	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00207	89 01		 mov	 DWORD PTR [ecx], eax

; 285  : 
; 286  :          unpack_string (en, STRING_TYPE_PILOTS_NAME, raw->pilots_name);

  00209	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  0020c	83 c0 04	 add	 eax, 4
  0020f	50		 push	 eax
  00210	6a 0a		 push	 10			; 0000000aH
  00212	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00215	51		 push	 ecx
  00216	e8 00 00 00 00	 call	 ?unpack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PAD@Z ; unpack_string

; 287  : 
; 288  :          raw->rank = unpack_int_value (en, INT_TYPE_PILOT_RANK);

  0021b	68 9a 00 00 00	 push	 154			; 0000009aH
  00220	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00229	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0022c	89 81 08 01 00
	00		 mov	 DWORD PTR [ecx+264], eax

; 289  : 
; 290  :          raw->kills = unpack_int_value (en, INT_TYPE_KILLS);

  00232	6a 72		 push	 114			; 00000072H
  00234	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0023d	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00240	89 81 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], eax

; 291  : 
; 292  :          raw->unique_id = unpack_int_value (en, INT_TYPE_UNIQUE_ID);

  00246	68 ed 00 00 00	 push	 237			; 000000edH
  0024b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00254	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00257	89 81 10 01 00
	00		 mov	 DWORD PTR [ecx+272], eax

; 293  : 
; 294  : 			raw->crew_role = CREW_ROLE_PILOT;

  0025d	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00260	c7 80 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+276], 0

; 295  : 
; 296  : 			// aircrew_link
; 297  : 
; 298  :          unpack_list_link (en, LIST_TYPE_PILOT, &raw->pilot_link);

  0026a	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  0026d	05 28 01 00 00	 add	 eax, 296		; 00000128H
  00272	50		 push	 eax
  00273	6a 1c		 push	 28			; 0000001cH
  00275	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00278	51		 push	 ecx
  00279	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 299  : 
; 300  :          raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  0027e	68 bb 00 00 00	 push	 187			; 000000bbH
  00283	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00286	50		 push	 eax
  00287	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0028c	89 45 ac	 mov	 DWORD PTR tv208[ebp], eax
  0028f	8b 4d ac	 mov	 ecx, DWORD PTR tv208[ebp]
  00292	83 e1 03	 and	 ecx, 3
  00295	8b 55 f0	 mov	 edx, DWORD PTR _raw$1[ebp]
  00298	8b 82 40 01 00
	00		 mov	 eax, DWORD PTR [edx+320]
  0029e	83 e0 fc	 and	 eax, -4			; fffffffcH
  002a1	0b c1		 or	 eax, ecx
  002a3	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  002a6	89 81 40 01 00
	00		 mov	 DWORD PTR [ecx+320], eax
$LN1@unpack_loc:

; 301  : 
; 302  :          break;
; 303  :       }
; 304  :       ////////////////////////////////////////
; 305  :       case PACK_MODE_UPDATE_ENTITY:
; 306  :       ////////////////////////////////////////
; 307  :       {
; 308  :          //
; 309  :          // always use access functions to set the data
; 310  :          //
; 311  : 
; 312  :          break;
; 313  :       }
; 314  :    }
; 315  : }

  002ac	5f		 pop	 edi
  002ad	5e		 pop	 esi
  002ae	5b		 pop	 ebx
  002af	8b e5		 mov	 esp, ebp
  002b1	5d		 pop	 ebp
  002b2	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pi_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv167 = -76						; size = 4
tv78 = -76						; size = 4
tv70 = -76						; size = 4
_raw$1 = -8						; size = 4
_raw$2 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   :    ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@GMBNIPBI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   :    switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b4	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b4 01	 cmp	 DWORD PTR tv70[ebp], 1
  00037	74 14		 je	 SHORT $LN7@pack_local
  00039	83 7d b4 02	 cmp	 DWORD PTR tv70[ebp], 2
  0003d	0f 84 49 01 00
	00		 je	 $LN8@pack_local
  00043	e9 27 02 00 00	 jmp	 $LN1@pack_local

; 84   :    {
; 85   :       ////////////////////////////////////////
; 86   :       case PACK_MODE_SERVER_SESSION:
; 87   :       ////////////////////////////////////////
; 88   : 		{
; 89   : 			break;

  00048	e9 22 02 00 00	 jmp	 $LN1@pack_local
$LN7@pack_local:

; 90   : 		}
; 91   :       ////////////////////////////////////////
; 92   :       case PACK_MODE_CLIENT_SESSION:
; 93   :       ////////////////////////////////////////
; 94   :       {
; 95   :          pilot
; 96   :             *raw;
; 97   : 
; 98   :          raw = (pilot *) get_local_entity_data (en);

  0004d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00050	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00053	89 4d fc	 mov	 DWORD PTR _raw$2[ebp], ecx

; 99   : 
; 100  :          pack_entity_type (get_local_entity_type (en));

  00056	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005a	74 0a		 je	 SHORT $LN11@pack_local
  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00061	89 4d b4	 mov	 DWORD PTR tv78[ebp], ecx
  00064	eb 21		 jmp	 SHORT $LN12@pack_local
$LN11@pack_local:
  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0006c	83 c2 14	 add	 edx, 20			; 00000014H
  0006f	52		 push	 edx
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@GMBNIPBI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00080	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN12@pack_local:
  00087	8b 4d b4	 mov	 ecx, DWORD PTR tv78[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 101  : 
; 102  :          pack_entity_safe_ptr (en);

  00090	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 103  : 
; 104  :          //
; 105  :          // pack data
; 106  :          //
; 107  : 
; 108  :          pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->sub_type);

  00099	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0009c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009e	51		 push	 ecx
  0009f	6a 34		 push	 52			; 00000034H
  000a1	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000a4	52		 push	 edx
  000a5	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 109  : 
; 110  :          pack_string (en, STRING_TYPE_PILOTS_NAME, raw->pilots_name);

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000ad	83 c0 04	 add	 eax, 4
  000b0	50		 push	 eax
  000b1	6a 0a		 push	 10			; 0000000aH
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b6	51		 push	 ecx
  000b7	e8 00 00 00 00	 call	 ?pack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PBD@Z ; pack_string

; 111  : 
; 112  :          pack_int_value (en, INT_TYPE_PILOT_RANK, raw->rank);

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000bf	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  000c5	51		 push	 ecx
  000c6	68 9a 00 00 00	 push	 154			; 0000009aH
  000cb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000ce	52		 push	 edx
  000cf	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 113  : 
; 114  :          pack_int_value (en, INT_TYPE_KILLS, raw->kills);

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000d7	8b 88 0c 01 00
	00		 mov	 ecx, DWORD PTR [eax+268]
  000dd	51		 push	 ecx
  000de	6a 72		 push	 114			; 00000072H
  000e0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000e3	52		 push	 edx
  000e4	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 115  : 
; 116  :          pack_int_value (en, INT_TYPE_UNIQUE_ID, raw->unique_id);

  000e9	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000ec	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  000f2	51		 push	 ecx
  000f3	68 ed 00 00 00	 push	 237			; 000000edH
  000f8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000fb	52		 push	 edx
  000fc	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 117  : 
; 118  : 			// crew_role
; 119  : 
; 120  :          pack_list_root (en, LIST_TYPE_PILOT_LOCK, &raw->pilot_lock_root);

  00101	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00104	05 18 01 00 00	 add	 eax, 280		; 00000118H
  00109	50		 push	 eax
  0010a	6a 1d		 push	 29			; 0000001dH
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0010f	51		 push	 ecx
  00110	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 121  : 
; 122  :          pack_list_link (en, LIST_TYPE_AIRCREW, &raw->aircrew_link);

  00115	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00118	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  0011d	50		 push	 eax
  0011e	6a 01		 push	 1
  00120	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00123	51		 push	 ecx
  00124	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 123  : 
; 124  :          pack_list_link (en, LIST_TYPE_PILOT, &raw->pilot_link);

  00129	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0012c	05 28 01 00 00	 add	 eax, 296		; 00000128H
  00131	50		 push	 eax
  00132	6a 1c		 push	 28			; 0000001cH
  00134	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00137	51		 push	 ecx
  00138	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 125  : 
; 126  :          pack_list_link (en, LIST_TYPE_PLAYER_TASK, &raw->player_task_link);

  0013d	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00140	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00145	50		 push	 eax
  00146	6a 1e		 push	 30			; 0000001eH
  00148	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0014b	51		 push	 ecx
  0014c	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 127  : 
; 128  :          pack_int_value (en, INT_TYPE_SIDE, raw->side);

  00151	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00154	8b 88 40 01 00
	00		 mov	 ecx, DWORD PTR [eax+320]
  0015a	83 e1 03	 and	 ecx, 3
  0015d	51		 push	 ecx
  0015e	68 bb 00 00 00	 push	 187			; 000000bbH
  00163	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00166	52		 push	 edx
  00167	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 129  : 
; 130  : 			pack_int_value (en, INT_TYPE_DIFFICULTY_LEVEL, raw->difficulty_level);

  0016c	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0016f	8b 88 40 01 00
	00		 mov	 ecx, DWORD PTR [eax+320]
  00175	c1 e9 02	 shr	 ecx, 2
  00178	83 e1 03	 and	 ecx, 3
  0017b	51		 push	 ecx
  0017c	6a 2f		 push	 47			; 0000002fH
  0017e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00181	52		 push	 edx
  00182	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 131  : 
; 132  :          break;

  00187	e9 e3 00 00 00	 jmp	 $LN1@pack_local
$LN8@pack_local:

; 133  :       }
; 134  :       ////////////////////////////////////////
; 135  :       case PACK_MODE_BROWSE_SESSION:
; 136  :       ////////////////////////////////////////
; 137  :       {
; 138  :          pilot
; 139  :             *raw;
; 140  : 
; 141  :          raw = (pilot *) get_local_entity_data (en);

  0018c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00192	89 4d f8	 mov	 DWORD PTR _raw$1[ebp], ecx

; 142  : 
; 143  :          pack_entity_type (get_local_entity_type (en));

  00195	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00199	74 0a		 je	 SHORT $LN13@pack_local
  0019b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0019e	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a0	89 4d b4	 mov	 DWORD PTR tv167[ebp], ecx
  001a3	eb 21		 jmp	 SHORT $LN14@pack_local
$LN13@pack_local:
  001a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  001ab	83 c2 3f	 add	 edx, 63			; 0000003fH
  001ae	52		 push	 edx
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@GMBNIPBI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001b9	50		 push	 eax
  001ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001bf	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN14@pack_local:
  001c6	8b 4d b4	 mov	 ecx, DWORD PTR tv167[ebp]
  001c9	51		 push	 ecx
  001ca	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 144  : 
; 145  :          pack_entity_safe_ptr (en);

  001cf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 146  : 
; 147  :          //
; 148  :          // pack data
; 149  :          //
; 150  : 
; 151  :          pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->sub_type);

  001d8	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	51		 push	 ecx
  001de	6a 34		 push	 52			; 00000034H
  001e0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 152  : 
; 153  :          pack_string (en, STRING_TYPE_PILOTS_NAME, raw->pilots_name);

  001e9	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  001ec	83 c0 04	 add	 eax, 4
  001ef	50		 push	 eax
  001f0	6a 0a		 push	 10			; 0000000aH
  001f2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001f5	51		 push	 ecx
  001f6	e8 00 00 00 00	 call	 ?pack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PBD@Z ; pack_string

; 154  : 
; 155  :          pack_int_value (en, INT_TYPE_PILOT_RANK, raw->rank);

  001fb	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  001fe	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  00204	51		 push	 ecx
  00205	68 9a 00 00 00	 push	 154			; 0000009aH
  0020a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0020d	52		 push	 edx
  0020e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 156  : 
; 157  :          pack_int_value (en, INT_TYPE_KILLS, raw->kills);

  00213	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00216	8b 88 0c 01 00
	00		 mov	 ecx, DWORD PTR [eax+268]
  0021c	51		 push	 ecx
  0021d	6a 72		 push	 114			; 00000072H
  0021f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00222	52		 push	 edx
  00223	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 158  : 
; 159  :          pack_int_value (en, INT_TYPE_UNIQUE_ID, raw->unique_id);

  00228	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  0022b	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  00231	51		 push	 ecx
  00232	68 ed 00 00 00	 push	 237			; 000000edH
  00237	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0023a	52		 push	 edx
  0023b	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 160  : 
; 161  : 			// crew_role
; 162  : 
; 163  : 			// aircrew_link
; 164  : 
; 165  :          pack_list_link (en, LIST_TYPE_PILOT, &raw->pilot_link);

  00240	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00243	05 28 01 00 00	 add	 eax, 296		; 00000128H
  00248	50		 push	 eax
  00249	6a 1c		 push	 28			; 0000001cH
  0024b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0024e	51		 push	 ecx
  0024f	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 166  : 
; 167  :          pack_int_value (en, INT_TYPE_SIDE, raw->side);

  00254	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00257	8b 88 40 01 00
	00		 mov	 ecx, DWORD PTR [eax+320]
  0025d	83 e1 03	 and	 ecx, 3
  00260	51		 push	 ecx
  00261	68 bb 00 00 00	 push	 187			; 000000bbH
  00266	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00269	52		 push	 edx
  0026a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN1@pack_local:

; 168  : 
; 169  : 			// difficulty level
; 170  : 
; 171  :          break;
; 172  :       }
; 173  :       ////////////////////////////////////////
; 174  :       case PACK_MODE_UPDATE_ENTITY:
; 175  :       ////////////////////////////////////////
; 176  :       {
; 177  :          break;
; 178  :       }
; 179  :    }
; 180  : }

  0026f	5f		 pop	 edi
  00270	5e		 pop	 esi
  00271	5b		 pop	 ebx
  00272	8b e5		 mov	 esp, ebp
  00274	5d		 pop	 ebp
  00275	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\pilot\pi_pack.c
;	COMDAT ?overload_pilot_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_pilot_pack_functions@@YGXXZ PROC		; overload_pilot_pack_functions, COMDAT

; 322  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 323  :    fn_pack_local_entity_data[ENTITY_TYPE_PILOT]    = pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 14	 imul	 ecx, eax, 20
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 324  : 
; 325  :    fn_unpack_local_entity_data[ENTITY_TYPE_PILOT]  = unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 14	 imul	 ecx, eax, 20
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 326  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_pilot_pack_functions@@YGXXZ ENDP		; overload_pilot_pack_functions
_TEXT	ENDS
END
