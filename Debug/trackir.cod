; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\system\trackir.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?InitTrackIR@@YAXXZ				; InitTrackIR
PUBLIC	?ExitTrackIR@@YAXXZ				; ExitTrackIR
PUBLIC	?query_TIR_active@@YAHXZ			; query_TIR_active
PUBLIC	?TIR_SetTimeout@@YGXI@Z				; TIR_SetTimeout
PUBLIC	?TIR_Poll@@YGXXZ				; TIR_Poll
PUBLIC	?TIR_GetYaw@@YGMXZ				; TIR_GetYaw
PUBLIC	?TIR_GetPitch@@YGMXZ				; TIR_GetPitch
PUBLIC	?TIR_GetRoll@@YGMXZ				; TIR_GetRoll
PUBLIC	?TIR_GetX@@YGMXZ				; TIR_GetX
PUBLIC	?TIR_GetY@@YGMXZ				; TIR_GetY
PUBLIC	?TIR_GetZ@@YGMXZ				; TIR_GetZ
PUBLIC	?TIR_SetMaxXY@@YGXI@Z				; TIR_SetMaxXY
PUBLIC	?TIR_GetMaxXY@@YGMXZ				; TIR_GetMaxXY
PUBLIC	?GetYaw@@YAHXZ					; GetYaw
PUBLIC	?GetPitch@@YAHXZ				; GetPitch
PUBLIC	??_C@_0M@KGALACBF@TRACKIR?4DLL@			; `string'
PUBLIC	??_C@_0M@HLPKAGL@InitTrackIR@			; `string'
PUBLIC	??_C@_0M@EEPGODGC@ExitTrackIR@			; `string'
PUBLIC	??_C@_0P@MNGJLOFF@TIR_GetVersion@		; `string'
PUBLIC	??_C@_0BB@KCEKBPJJ@query_TIR_active@		; `string'
PUBLIC	??_C@_08JKNLFOCA@TIR_Poll@			; `string'
PUBLIC	??_C@_0L@KELLNJFK@TIR_GetYaw@			; `string'
PUBLIC	??_C@_0N@FNCEFKCE@TIR_GetPitch@			; `string'
PUBLIC	??_C@_0M@MFCOCNCL@TIR_GetRoll@			; `string'
PUBLIC	??_C@_08IOLJPEOJ@TIR_GetX@			; `string'
PUBLIC	??_C@_08JHKCMFKI@TIR_GetY@			; `string'
PUBLIC	??_C@_08LMIPJGGL@TIR_GetZ@			; `string'
PUBLIC	??_C@_0P@MPBEDFNI@TIR_SetTimeout@		; `string'
PUBLIC	??_C@_0N@IHIFKBKG@TIR_SetMaxXY@			; `string'
PUBLIC	??_C@_0N@HGKJLCNL@TIR_GetMaxXY@			; `string'
PUBLIC	__real@00000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	?application_window@@3PAUHWND__@@A:DWORD	; application_window
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?gpfNP_InitTrackIR@@3P6AHPAUHWND__@@@ZA DD 01H DUP (?)	; gpfNP_InitTrackIR
?gpfNP_ExitTrackIR@@3P6AXXZA DD 01H DUP (?)		; gpfNP_ExitTrackIR
?gpfNP_GetVersion@@3P6AHXZA DD 01H DUP (?)		; gpfNP_GetVersion
?gpfNP_QueryTIRActive@@3P6AHXZA DD 01H DUP (?)		; gpfNP_QueryTIRActive
?gpfNP_Poll@@3P6AXXZA DD 01H DUP (?)			; gpfNP_Poll
?gpfNP_GetYaw@@3P6AHXZA DD 01H DUP (?)			; gpfNP_GetYaw
?gpfNP_GetPitch@@3P6AHXZA DD 01H DUP (?)		; gpfNP_GetPitch
?gpfNP_GetRoll@@3P6AHXZA DD 01H DUP (?)			; gpfNP_GetRoll
?gpfNP_GetX@@3P6AHXZA DD 01H DUP (?)			; gpfNP_GetX
?gpfNP_GetY@@3P6AHXZA DD 01H DUP (?)			; gpfNP_GetY
?gpfNP_GetZ@@3P6AHXZA DD 01H DUP (?)			; gpfNP_GetZ
?gpfNP_SetMaxXY@@3P6AXI@ZA DD 01H DUP (?)		; gpfNP_SetMaxXY
?gpfNP_GetMaxXY@@3P6AIXZA DD 01H DUP (?)		; gpfNP_GetMaxXY
?gpfNP_SetTimeout@@3P6AXI@ZA DD 01H DUP (?)		; gpfNP_SetTimeout
?modTrackIR@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; modTrackIR
?dllLoadedOK@@3HA DD 01H DUP (?)			; dllLoadedOK
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0N@HGKJLCNL@TIR_GetMaxXY@
CONST	SEGMENT
??_C@_0N@HGKJLCNL@TIR_GetMaxXY@ DB 'TIR_GetMaxXY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHIFKBKG@TIR_SetMaxXY@
CONST	SEGMENT
??_C@_0N@IHIFKBKG@TIR_SetMaxXY@ DB 'TIR_SetMaxXY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MPBEDFNI@TIR_SetTimeout@
CONST	SEGMENT
??_C@_0P@MPBEDFNI@TIR_SetTimeout@ DB 'TIR_SetTimeout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LMIPJGGL@TIR_GetZ@
CONST	SEGMENT
??_C@_08LMIPJGGL@TIR_GetZ@ DB 'TIR_GetZ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JHKCMFKI@TIR_GetY@
CONST	SEGMENT
??_C@_08JHKCMFKI@TIR_GetY@ DB 'TIR_GetY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IOLJPEOJ@TIR_GetX@
CONST	SEGMENT
??_C@_08IOLJPEOJ@TIR_GetX@ DB 'TIR_GetX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MFCOCNCL@TIR_GetRoll@
CONST	SEGMENT
??_C@_0M@MFCOCNCL@TIR_GetRoll@ DB 'TIR_GetRoll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNCEFKCE@TIR_GetPitch@
CONST	SEGMENT
??_C@_0N@FNCEFKCE@TIR_GetPitch@ DB 'TIR_GetPitch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KELLNJFK@TIR_GetYaw@
CONST	SEGMENT
??_C@_0L@KELLNJFK@TIR_GetYaw@ DB 'TIR_GetYaw', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JKNLFOCA@TIR_Poll@
CONST	SEGMENT
??_C@_08JKNLFOCA@TIR_Poll@ DB 'TIR_Poll', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KCEKBPJJ@query_TIR_active@
CONST	SEGMENT
??_C@_0BB@KCEKBPJJ@query_TIR_active@ DB 'query_TIR_active', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MNGJLOFF@TIR_GetVersion@
CONST	SEGMENT
??_C@_0P@MNGJLOFF@TIR_GetVersion@ DB 'TIR_GetVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EEPGODGC@ExitTrackIR@
CONST	SEGMENT
??_C@_0M@EEPGODGC@ExitTrackIR@ DB 'ExitTrackIR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HLPKAGL@InitTrackIR@
CONST	SEGMENT
??_C@_0M@HLPKAGL@InitTrackIR@ DB 'InitTrackIR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KGALACBF@TRACKIR?4DLL@
CONST	SEGMENT
??_C@_0M@KGALACBF@TRACKIR?4DLL@ DB 'TRACKIR.DLL', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?GetPitch@@YAHXZ
_TEXT	SEGMENT
?GetPitch@@YAHXZ PROC					; GetPitch, COMDAT

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 384  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@GetPitch

; 385  : 		return 0;

  00012	33 c0		 xor	 eax, eax
  00014	eb 0c		 jmp	 SHORT $LN1@GetPitch
$LN2@GetPitch:

; 386  : 
; 387  : 	gpfNP_Poll();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_Poll@@3P6AXXZA

; 388  : 	return gpfNP_GetPitch();

  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetPitch@@3P6AHXZA
$LN1@GetPitch:

; 389  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?GetPitch@@YAHXZ ENDP					; GetPitch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?GetYaw@@YAHXZ
_TEXT	SEGMENT
?GetYaw@@YAHXZ PROC					; GetYaw, COMDAT

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 367  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@GetYaw

; 368  : 		return 0;

  00012	33 c0		 xor	 eax, eax
  00014	eb 0c		 jmp	 SHORT $LN1@GetYaw
$LN2@GetYaw:

; 369  : 
; 370  : 	gpfNP_Poll();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_Poll@@3P6AXXZA

; 371  : 	return gpfNP_GetYaw();

  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetYaw@@3P6AHXZA
$LN1@GetYaw:

; 372  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?GetYaw@@YAHXZ ENDP					; GetYaw
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_GetMaxXY@@YGMXZ
_TEXT	SEGMENT
tv78 = -80						; size = 4
tv73 = -76						; size = 8
tv70 = -68						; size = 4
?TIR_GetMaxXY@@YGMXZ PROC				; TIR_GetMaxXY, COMDAT

; 302  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 303  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@TIR_GetMax

; 304  : 		return 0.f;

  00012	d9 ee		 fldz
  00014	eb 2f		 jmp	 SHORT $LN1@TIR_GetMax
$LN2@TIR_GetMax:

; 305  : 
; 306  : 	return (float)gpfNP_GetMaxXY();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetMaxXY@@3P6AIXZA
  0001c	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax
  0001f	f2 0f 2a 45 bc	 cvtsi2sd xmm0, DWORD PTR tv70[ebp]
  00024	8b 45 bc	 mov	 eax, DWORD PTR tv70[ebp]
  00027	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002a	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00033	f2 0f 11 45 b4	 movsd	 QWORD PTR tv73[ebp], xmm0
  00038	f2 0f 5a 45 b4	 cvtsd2ss xmm0, QWORD PTR tv73[ebp]
  0003d	f3 0f 11 45 b0	 movss	 DWORD PTR tv78[ebp], xmm0
  00042	d9 45 b0	 fld	 DWORD PTR tv78[ebp]
$LN1@TIR_GetMax:

; 307  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?TIR_GetMaxXY@@YGMXZ ENDP				; TIR_GetMaxXY
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_SetMaxXY@@YGXI@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?TIR_SetMaxXY@@YGXI@Z PROC				; TIR_SetMaxXY, COMDAT

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 287  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 02		 jne	 SHORT $LN2@TIR_SetMax

; 288  : 		return;

  00012	eb 0d		 jmp	 SHORT $LN1@TIR_SetMax
$LN2@TIR_SetMax:

; 289  : 
; 290  : 	gpfNP_SetMaxXY(value);

  00014	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00017	50		 push	 eax
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_SetMaxXY@@3P6AXI@ZA
  0001e	83 c4 04	 add	 esp, 4
$LN1@TIR_SetMax:

; 291  : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?TIR_SetMaxXY@@YGXI@Z ENDP				; TIR_SetMaxXY
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_GetZ@@YGMXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
tv69 = -68						; size = 4
?TIR_GetZ@@YGMXZ PROC					; TIR_GetZ, COMDAT

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 351  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@TIR_GetZ

; 352  : 		return 0.f;

  00012	d9 ee		 fldz
  00014	eb 12		 jmp	 SHORT $LN1@TIR_GetZ
$LN2@TIR_GetZ:

; 353  : 
; 354  : 	return (float)gpfNP_GetZ();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetZ@@3P6AHXZA
  0001c	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0001f	db 45 bc	 fild	 DWORD PTR tv69[ebp]
  00022	d9 5d b8	 fstp	 DWORD PTR tv70[ebp]
  00025	d9 45 b8	 fld	 DWORD PTR tv70[ebp]
$LN1@TIR_GetZ:

; 355  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?TIR_GetZ@@YGMXZ ENDP					; TIR_GetZ
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_GetY@@YGMXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
tv69 = -68						; size = 4
?TIR_GetY@@YGMXZ PROC					; TIR_GetY, COMDAT

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 335  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@TIR_GetY

; 336  : 		return 0.f;

  00012	d9 ee		 fldz
  00014	eb 12		 jmp	 SHORT $LN1@TIR_GetY
$LN2@TIR_GetY:

; 337  : 
; 338  : 	return (float)gpfNP_GetY();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetY@@3P6AHXZA
  0001c	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0001f	db 45 bc	 fild	 DWORD PTR tv69[ebp]
  00022	d9 5d b8	 fstp	 DWORD PTR tv70[ebp]
  00025	d9 45 b8	 fld	 DWORD PTR tv70[ebp]
$LN1@TIR_GetY:

; 339  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?TIR_GetY@@YGMXZ ENDP					; TIR_GetY
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_GetX@@YGMXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
tv69 = -68						; size = 4
?TIR_GetX@@YGMXZ PROC					; TIR_GetX, COMDAT

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 319  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@TIR_GetX

; 320  : 		return 0.f;

  00012	d9 ee		 fldz
  00014	eb 12		 jmp	 SHORT $LN1@TIR_GetX
$LN2@TIR_GetX:

; 321  : 
; 322  : 	return (float)gpfNP_GetX();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetX@@3P6AHXZA
  0001c	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0001f	db 45 bc	 fild	 DWORD PTR tv69[ebp]
  00022	d9 5d b8	 fstp	 DWORD PTR tv70[ebp]
  00025	d9 45 b8	 fld	 DWORD PTR tv70[ebp]
$LN1@TIR_GetX:

; 323  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?TIR_GetX@@YGMXZ ENDP					; TIR_GetX
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_GetRoll@@YGMXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
tv69 = -68						; size = 4
?TIR_GetRoll@@YGMXZ PROC				; TIR_GetRoll, COMDAT

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 265  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@TIR_GetRol

; 266  : 		return 0.f;

  00012	d9 ee		 fldz
  00014	eb 12		 jmp	 SHORT $LN1@TIR_GetRol
$LN2@TIR_GetRol:

; 267  : 
; 268  : 	return (float)gpfNP_GetRoll();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetRoll@@3P6AHXZA
  0001c	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0001f	db 45 bc	 fild	 DWORD PTR tv69[ebp]
  00022	d9 5d b8	 fstp	 DWORD PTR tv70[ebp]
  00025	d9 45 b8	 fld	 DWORD PTR tv70[ebp]
$LN1@TIR_GetRol:

; 269  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?TIR_GetRoll@@YGMXZ ENDP				; TIR_GetRoll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_GetPitch@@YGMXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
tv69 = -68						; size = 4
?TIR_GetPitch@@YGMXZ PROC				; TIR_GetPitch, COMDAT

; 248  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 249  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@TIR_GetPit

; 250  : 		return 0.f;

  00012	d9 ee		 fldz
  00014	eb 12		 jmp	 SHORT $LN1@TIR_GetPit
$LN2@TIR_GetPit:

; 251  : 
; 252  : 	return (float)gpfNP_GetPitch();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetPitch@@3P6AHXZA
  0001c	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0001f	db 45 bc	 fild	 DWORD PTR tv69[ebp]
  00022	d9 5d b8	 fstp	 DWORD PTR tv70[ebp]
  00025	d9 45 b8	 fld	 DWORD PTR tv70[ebp]
$LN1@TIR_GetPit:

; 253  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?TIR_GetPitch@@YGMXZ ENDP				; TIR_GetPitch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_GetYaw@@YGMXZ
_TEXT	SEGMENT
tv70 = -72						; size = 4
tv69 = -68						; size = 4
?TIR_GetYaw@@YGMXZ PROC					; TIR_GetYaw, COMDAT

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 233  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@TIR_GetYaw

; 234  : 		return 0.f;

  00012	d9 ee		 fldz
  00014	eb 12		 jmp	 SHORT $LN1@TIR_GetYaw
$LN2@TIR_GetYaw:

; 235  : 
; 236  : 	return (float)gpfNP_GetYaw();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_GetYaw@@3P6AHXZA
  0001c	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0001f	db 45 bc	 fild	 DWORD PTR tv69[ebp]
  00022	d9 5d b8	 fstp	 DWORD PTR tv70[ebp]
  00025	d9 45 b8	 fld	 DWORD PTR tv70[ebp]
$LN1@TIR_GetYaw:

; 237  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?TIR_GetYaw@@YGMXZ ENDP					; TIR_GetYaw
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_Poll@@YGXXZ
_TEXT	SEGMENT
?TIR_Poll@@YGXXZ PROC					; TIR_Poll, COMDAT

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 217  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 02		 jne	 SHORT $LN2@TIR_Poll

; 218  : 		return;

  00012	eb 06		 jmp	 SHORT $LN1@TIR_Poll
$LN2@TIR_Poll:

; 219  : 
; 220  : 	gpfNP_Poll();

  00014	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_Poll@@3P6AXXZA
$LN1@TIR_Poll:

; 221  : }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?TIR_Poll@@YGXXZ ENDP					; TIR_Poll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?TIR_SetTimeout@@YGXI@Z
_TEXT	SEGMENT
_frames$ = 8						; size = 4
?TIR_SetTimeout@@YGXI@Z PROC				; TIR_SetTimeout, COMDAT

; 200  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 201  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 02		 jne	 SHORT $LN2@TIR_SetTim

; 202  : 		return;

  00012	eb 0d		 jmp	 SHORT $LN1@TIR_SetTim
$LN2@TIR_SetTim:

; 203  : 
; 204  : 	gpfNP_SetTimeout(frames);

  00014	8b 45 08	 mov	 eax, DWORD PTR _frames$[ebp]
  00017	50		 push	 eax
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_SetTimeout@@3P6AXI@ZA
  0001e	83 c4 04	 add	 esp, 4
$LN1@TIR_SetTim:

; 205  : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?TIR_SetTimeout@@YGXI@Z ENDP				; TIR_SetTimeout
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?query_TIR_active@@YAHXZ
_TEXT	SEGMENT
?query_TIR_active@@YAHXZ PROC				; query_TIR_active, COMDAT

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 181  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 04		 jne	 SHORT $LN2@query_TIR_

; 182  : 		return 0;

  00012	33 c0		 xor	 eax, eax
  00014	eb 06		 jmp	 SHORT $LN1@query_TIR_
$LN2@query_TIR_:

; 183  : 
; 184  : 	return gpfNP_QueryTIRActive();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_QueryTIRActive@@3P6AHXZA
$LN1@query_TIR_:

; 185  : }

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?query_TIR_active@@YAHXZ ENDP				; query_TIR_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?ExitTrackIR@@YAXXZ
_TEXT	SEGMENT
?ExitTrackIR@@YAXXZ PROC				; ExitTrackIR, COMDAT

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 156  : 	if (dllLoadedOK == FALSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dllLoadedOK@@3HA, 0
  00010	75 02		 jne	 SHORT $LN2@ExitTrackI

; 157  : 		return;

  00012	eb 1c		 jmp	 SHORT $LN1@ExitTrackI
$LN2@ExitTrackI:

; 158  : 
; 159  : 	gpfNP_ExitTrackIR();

  00014	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_ExitTrackIR@@3P6AXXZA

; 160  : 	FreeLibrary(modTrackIR);

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  0001f	50		 push	 eax
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4

; 161  : 
; 162  : 	dllLoadedOK = FALSE;

  00026	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?dllLoadedOK@@3HA, 0
$LN1@ExitTrackI:

; 163  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?ExitTrackIR@@YAXXZ ENDP				; ExitTrackIR
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\trackir.c
;	COMDAT ?InitTrackIR@@YAXXZ
_TEXT	SEGMENT
?InitTrackIR@@YAXXZ PROC				; InitTrackIR, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   : 	modTrackIR = LoadLibrary("TRACKIR.DLL");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KGALACBF@TRACKIR?4DLL@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  00014	a3 00 00 00 00	 mov	 DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A, eax

; 98   : 
; 99   : 	gpfNP_InitTrackIR  =	(PF_NP_INITTRACKIR)GetProcAddress( modTrackIR, "InitTrackIR" );

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HLPKAGL@InitTrackIR@
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0002a	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_InitTrackIR@@3P6AHPAUHWND__@@@ZA, eax

; 100  : 	gpfNP_ExitTrackIR =		(PF_NP_EXITTRACKIR)GetProcAddress( modTrackIR, "ExitTrackIR" );

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EEPGODGC@ExitTrackIR@
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  00039	50		 push	 eax
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00040	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_ExitTrackIR@@3P6AXXZA, eax

; 101  : 
; 102  : 	gpfNP_GetVersion =		(PF_NP_GETVERSION)GetProcAddress( modTrackIR, "TIR_GetVersion" );

  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MNGJLOFF@TIR_GetVersion@
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  0004f	50		 push	 eax
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00056	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetVersion@@3P6AHXZA, eax

; 103  : 
; 104  : 	gpfNP_QueryTIRActive =	(PF_NP_QUERYTIRACTIVE)GetProcAddress( modTrackIR, "query_TIR_active" );

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KCEKBPJJ@query_TIR_active@
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  00065	50		 push	 eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0006c	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_QueryTIRActive@@3P6AHXZA, eax

; 105  : 	gpfNP_Poll =			(PF_NP_POLL)GetProcAddress( modTrackIR, "TIR_Poll" );

  00071	68 00 00 00 00	 push	 OFFSET ??_C@_08JKNLFOCA@TIR_Poll@
  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  0007b	50		 push	 eax
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00082	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_Poll@@3P6AXXZA, eax

; 106  : 
; 107  : 	gpfNP_GetYaw =			(PF_NP_GETYAW)GetProcAddress( modTrackIR, "TIR_GetYaw" );

  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KELLNJFK@TIR_GetYaw@
  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  00091	50		 push	 eax
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00098	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetYaw@@3P6AHXZA, eax

; 108  : 	gpfNP_GetPitch =		(PF_NP_GETPITCH)GetProcAddress( modTrackIR, "TIR_GetPitch" );

  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FNCEFKCE@TIR_GetPitch@
  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  000a7	50		 push	 eax
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000ae	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetPitch@@3P6AHXZA, eax

; 109  : 	gpfNP_GetRoll =			(PF_NP_GETROLL)GetProcAddress( modTrackIR, "TIR_GetRoll" );

  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MFCOCNCL@TIR_GetRoll@
  000b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  000bd	50		 push	 eax
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000c4	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetRoll@@3P6AHXZA, eax

; 110  : 	gpfNP_GetX =			(PF_NP_GETX)GetProcAddress( modTrackIR, "TIR_GetX" );

  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_08IOLJPEOJ@TIR_GetX@
  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  000d3	50		 push	 eax
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000da	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetX@@3P6AHXZA, eax

; 111  : 	gpfNP_GetY =			(PF_NP_GETY)GetProcAddress( modTrackIR, "TIR_GetY" );

  000df	68 00 00 00 00	 push	 OFFSET ??_C@_08JHKCMFKI@TIR_GetY@
  000e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  000e9	50		 push	 eax
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000f0	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetY@@3P6AHXZA, eax

; 112  : 	gpfNP_GetZ =			(PF_NP_GETZ)GetProcAddress( modTrackIR, "TIR_GetZ" );

  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_08LMIPJGGL@TIR_GetZ@
  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  000ff	50		 push	 eax
  00100	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00106	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetZ@@3P6AHXZA, eax

; 113  : 	gpfNP_SetTimeout =		(PF_NP_SETTIMEOUT)GetProcAddress( modTrackIR, "TIR_SetTimeout" );

  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MPBEDFNI@TIR_SetTimeout@
  00110	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  00115	50		 push	 eax
  00116	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0011c	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_SetTimeout@@3P6AXI@ZA, eax

; 114  : 
; 115  : 	gpfNP_SetMaxXY =		(PF_NP_SETMAXXY)GetProcAddress( modTrackIR, "TIR_SetMaxXY" );

  00121	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IHIFKBKG@TIR_SetMaxXY@
  00126	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  0012b	50		 push	 eax
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00132	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_SetMaxXY@@3P6AXI@ZA, eax

; 116  : 	gpfNP_GetMaxXY =		(PF_NP_GETMAXXY)GetProcAddress( modTrackIR, "TIR_GetMaxXY" );

  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HGKJLCNL@TIR_GetMaxXY@
  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  00141	50		 push	 eax
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00148	a3 00 00 00 00	 mov	 DWORD PTR ?gpfNP_GetMaxXY@@3P6AIXZA, eax

; 117  : 
; 118  : 	// Yuck..
; 119  : 	if ((gpfNP_InitTrackIR == NULL)||(gpfNP_ExitTrackIR == NULL)||
; 120  : 		(gpfNP_GetVersion == NULL)||
; 121  : 		(gpfNP_QueryTIRActive == NULL)||(gpfNP_Poll == NULL)||
; 122  : 		(gpfNP_GetYaw == NULL)||(gpfNP_GetPitch == NULL)||(gpfNP_GetRoll == NULL)||
; 123  : 		(gpfNP_GetX == NULL)||(gpfNP_GetY == NULL)||(gpfNP_GetZ == NULL)||
; 124  : 		(gpfNP_SetTimeout == NULL)||
; 125  : 		(gpfNP_SetMaxXY == NULL)||(gpfNP_GetMaxXY == NULL))

  0014d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_InitTrackIR@@3P6AHPAUHWND__@@@ZA, 0
  00154	74 75		 je	 SHORT $LN3@InitTrackI
  00156	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_ExitTrackIR@@3P6AXXZA, 0
  0015d	74 6c		 je	 SHORT $LN3@InitTrackI
  0015f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetVersion@@3P6AHXZA, 0
  00166	74 63		 je	 SHORT $LN3@InitTrackI
  00168	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_QueryTIRActive@@3P6AHXZA, 0
  0016f	74 5a		 je	 SHORT $LN3@InitTrackI
  00171	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_Poll@@3P6AXXZA, 0
  00178	74 51		 je	 SHORT $LN3@InitTrackI
  0017a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetYaw@@3P6AHXZA, 0
  00181	74 48		 je	 SHORT $LN3@InitTrackI
  00183	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetPitch@@3P6AHXZA, 0
  0018a	74 3f		 je	 SHORT $LN3@InitTrackI
  0018c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetRoll@@3P6AHXZA, 0
  00193	74 36		 je	 SHORT $LN3@InitTrackI
  00195	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetX@@3P6AHXZA, 0
  0019c	74 2d		 je	 SHORT $LN3@InitTrackI
  0019e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetY@@3P6AHXZA, 0
  001a5	74 24		 je	 SHORT $LN3@InitTrackI
  001a7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetZ@@3P6AHXZA, 0
  001ae	74 1b		 je	 SHORT $LN3@InitTrackI
  001b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_SetTimeout@@3P6AXI@ZA, 0
  001b7	74 12		 je	 SHORT $LN3@InitTrackI
  001b9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_SetMaxXY@@3P6AXI@ZA, 0
  001c0	74 09		 je	 SHORT $LN3@InitTrackI
  001c2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gpfNP_GetMaxXY@@3P6AIXZA, 0
  001c9	75 0e		 jne	 SHORT $LN2@InitTrackI
$LN3@InitTrackI:

; 126  : 	{
; 127  : 		FreeLibrary(modTrackIR);

  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  001d0	50		 push	 eax
  001d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4

; 128  : 		return;

  001d7	eb 39		 jmp	 SHORT $LN1@InitTrackI
$LN2@InitTrackI:

; 129  : 	}
; 130  : 
; 131  : 	//
; 132  : 	// Returns FALSE if NP Gui not started, path to NP DLL not found etc..
; 133  : 	//
; 134  : 
; 135  : 	if (gpfNP_InitTrackIR(application_window) == FALSE)

  001d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?application_window@@3PAUHWND__@@A ; application_window
  001de	50		 push	 eax
  001df	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_InitTrackIR@@3P6AHPAUHWND__@@@ZA
  001e5	83 c4 04	 add	 esp, 4
  001e8	85 c0		 test	 eax, eax
  001ea	75 0e		 jne	 SHORT $LN4@InitTrackI

; 136  : 	{
; 137  : 		FreeLibrary(modTrackIR);

  001ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?modTrackIR@@3PAUHINSTANCE__@@A
  001f1	50		 push	 eax
  001f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4

; 138  : 		return;

  001f8	eb 18		 jmp	 SHORT $LN1@InitTrackI
$LN4@InitTrackI:

; 139  : 	}
; 140  : 
; 141  : 	gpfNP_SetTimeout(300);	// 300 frames without TIR input will cause it to disable itself.. this is 10 seconds @ 30fps..

  001fa	68 2c 01 00 00	 push	 300			; 0000012cH
  001ff	ff 15 00 00 00
	00		 call	 DWORD PTR ?gpfNP_SetTimeout@@3P6AXI@ZA
  00205	83 c4 04	 add	 esp, 4

; 142  : 
; 143  : 	dllLoadedOK = TRUE;

  00208	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?dllLoadedOK@@3HA, 1
$LN1@InitTrackI:

; 144  : }

  00212	5f		 pop	 edi
  00213	5e		 pop	 esi
  00214	5b		 pop	 ebx
  00215	8b e5		 mov	 esp, ebp
  00217	5d		 pop	 ebp
  00218	c3		 ret	 0
?InitTrackIR@@YAXXZ ENDP				; InitTrackIR
_TEXT	ENDS
END
