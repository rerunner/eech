; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\vh_tgt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?update_vehicle_target_scan@@YGXPAUENTITY@@@Z	; update_vehicle_target_scan
PUBLIC	?get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ; get_vehicle_surface_to_air_scan_group_targets
PUBLIC	?get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ; get_vehicle_surface_to_surface_scan_group_targets
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z@4JA ; `check_vehicle_target_scan_valid'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA ; `vehicle_target_scan'::`1'::__LINE__Var
PUBLIC	??_C@_04GGKLLKOO@task@				; `string'
PUBLIC	??_C@_03PCBNCGFH@pos@				; `string'
PUBLIC	?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA ; `get_vehicle_surface_to_air_scan_group_targets'::`1'::__LINE__Var
PUBLIC	??_C@_06OEKOLKIL@source@			; `string'
PUBLIC	??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@ ; `string'
PUBLIC	?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA ; `get_vehicle_surface_to_surface_scan_group_targets'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff199999999999a
PUBLIC	__real@4014000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@41a00000
PUBLIC	__real@42200000
PUBLIC	__real@42700000
PUBLIC	__real@42b40000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?get_approx_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_approx_3d_range
EXTRN	?check_entity_line_of_sight@@YGHPAUENTITY@@0W4MOBILE_LOS_CHECK_CRITERIA@@@Z:PROC ; check_entity_line_of_sight
EXTRN	?play_client_server_speech@@YAHPAUENTITY@@0W4ENTITY_SIDES@@HW4SOUND_LOCALITY_TYPES@@MMMW4speech_originator_types@@W4speech_category_types@@MZZ:PROC ; play_client_server_speech
EXTRN	?get_speech_sector_coordinates@@YGPAHPAUVEC3D@@@Z:PROC ; get_speech_sector_coordinates
EXTRN	?engage_targets_in_group@@YGHPAUENTITY@@0H@Z:PROC ; engage_targets_in_group
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_pred
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?vehicle_database@@3PAUVEHICLE_DATA@@A:BYTE	; vehicle_database
EXTRN	?speech_sector_coordinates@@3PAHA:BYTE		; speech_sector_coordinates
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@3ff199999999999a
CONST	SEGMENT
__real@3ff199999999999a DQ 03ff199999999999ar	; 1.1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA DD 031bH ; `get_vehicle_surface_to_surface_scan_group_targets'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@
CONST	SEGMENT
??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@ DB 'sector_inside'
	DB	'_map_area (x_sec_org, z_sec_org)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OEKOLKIL@source@
CONST	SEGMENT
??_C@_06OEKOLKIL@source@ DB 'source', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA DD 018fH ; `get_vehicle_surface_to_air_scan_group_targets'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03PCBNCGFH@pos@
CONST	SEGMENT
??_C@_03PCBNCGFH@pos@ DB 'pos', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGKLLKOO@task@
CONST	SEGMENT
??_C@_04GGKLLKOO@task@ DB 'task', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA DD 09aH ; `vehicle_target_scan'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\vh_tgt'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z@4JA DD 05eH ; `check_vehicle_target_scan_valid'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\vh_tgt.c
;	COMDAT ?check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv197 = -84						; size = 8
tv168 = -76						; size = 4
tv149 = -76						; size = 4
tv95 = -76						; size = 4
tv76 = -76						; size = 4
tv161 = -72						; size = 4
tv141 = -72						; size = 4
tv88 = -72						; size = 4
tv69 = -72						; size = 4
_group$ = -4						; size = 4
_en$ = 8						; size = 4
?check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z PROC	; check_vehicle_target_scan_valid, COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 95   : 	entity
; 96   : 		*group;
; 97   : 
; 98   : 	//
; 99   : 	// Is entity allowed to scan for targets
; 100  : 	//
; 101  : 
; 102  : 	if (!get_local_entity_int_value (en, INT_TYPE_OFFENSIVE_CAPABILITY))

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN7@check_vehi
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b8	 mov	 DWORD PTR tv69[ebp], ecx
  00017	eb 1a		 jmp	 SHORT $LN8@check_vehi
$LN7@check_vehi:
  00019	6a 66		 push	 102			; 00000066H
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0002c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN8@check_vehi:
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	85 c0		 test	 eax, eax
  0003a	74 09		 je	 SHORT $LN9@check_vehi
  0003c	c7 45 b4 96 00
	00 00		 mov	 DWORD PTR tv76[ebp], 150 ; 00000096H
  00043	eb 1a		 jmp	 SHORT $LN10@check_vehi
$LN9@check_vehi:
  00045	6a 66		 push	 102			; 00000066H
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00058	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN10@check_vehi:
  0005f	68 96 00 00 00	 push	 150			; 00000096H
  00064	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00067	52		 push	 edx
  00068	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  0006f	8b 4d b4	 mov	 ecx, DWORD PTR tv76[ebp]
  00072	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00079	ff d2		 call	 edx
  0007b	85 c0		 test	 eax, eax
  0007d	75 07		 jne	 SHORT $LN2@check_vehi

; 103  : 	{
; 104  : 		return FALSE;

  0007f	33 c0		 xor	 eax, eax
  00081	e9 95 01 00 00	 jmp	 $LN1@check_vehi
$LN2@check_vehi:

; 105  : 	}
; 106  : 
; 107  : 	if (get_local_entity_float_value (en, FLOAT_TYPE_TARGET_SCAN_DELAY) == 0.0)

  00086	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0008a	74 0a		 je	 SHORT $LN11@check_vehi
  0008c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	89 4d b8	 mov	 DWORD PTR tv88[ebp], ecx
  00094	eb 1a		 jmp	 SHORT $LN12@check_vehi
$LN11@check_vehi:
  00096	6a 6b		 push	 107			; 0000006bH
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@check_vehi:
  000b0	b8 01 00 00 00	 mov	 eax, 1
  000b5	85 c0		 test	 eax, eax
  000b7	74 09		 je	 SHORT $LN13@check_vehi
  000b9	c7 45 b4 86 00
	00 00		 mov	 DWORD PTR tv95[ebp], 134 ; 00000086H
  000c0	eb 1a		 jmp	 SHORT $LN14@check_vehi
$LN13@check_vehi:
  000c2	6a 6b		 push	 107			; 0000006bH
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000cf	51		 push	 ecx
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN14@check_vehi:
  000dc	68 86 00 00 00	 push	 134			; 00000086H
  000e1	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000e4	52		 push	 edx
  000e5	69 45 b8 bc 02
	00 00		 imul	 eax, DWORD PTR tv88[ebp], 700
  000ec	8b 4d b4	 mov	 ecx, DWORD PTR tv95[ebp]
  000ef	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  000f6	ff d2		 call	 edx
  000f8	dd 5d ac	 fstp	 QWORD PTR tv197[ebp]
  000fb	f2 0f 10 45 ac	 movsd	 xmm0, QWORD PTR tv197[ebp]
  00100	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00108	9f		 lahf
  00109	f6 c4 44	 test	 ah, 68			; 00000044H
  0010c	7a 07		 jp	 SHORT $LN3@check_vehi

; 108  : 	{
; 109  : 		return FALSE;

  0010e	33 c0		 xor	 eax, eax
  00110	e9 06 01 00 00	 jmp	 $LN1@check_vehi
$LN3@check_vehi:

; 110  : 	}
; 111  : 
; 112  : 	//
; 113  : 	// Is group allowed to engage (by default or overridden by force)
; 114  : 	//
; 115  : 
; 116  : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00115	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00119	74 0a		 je	 SHORT $LN15@check_vehi
  0011b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00120	89 4d b8	 mov	 DWORD PTR tv141[ebp], ecx
  00123	eb 21		 jmp	 SHORT $LN16@check_vehi
$LN15@check_vehi:
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z@4JA
  0012b	83 c2 16	 add	 edx, 22			; 00000016H
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN16@check_vehi:
  00146	b9 01 00 00 00	 mov	 ecx, 1
  0014b	85 c9		 test	 ecx, ecx
  0014d	74 09		 je	 SHORT $LN17@check_vehi
  0014f	c7 45 b4 19 00
	00 00		 mov	 DWORD PTR tv149[ebp], 25 ; 00000019H
  00156	eb 21		 jmp	 SHORT $LN18@check_vehi
$LN17@check_vehi:
  00158	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z@4JA
  0015e	83 c2 16	 add	 edx, 22			; 00000016H
  00161	52		 push	 edx
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00172	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
$LN18@check_vehi:
  00179	6a 19		 push	 25			; 00000019H
  0017b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0017e	51		 push	 ecx
  0017f	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv141[ebp], 180
  00186	8b 45 b4	 mov	 eax, DWORD PTR tv149[ebp]
  00189	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00190	ff d1		 call	 ecx
  00192	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 117  : 
; 118  : 	if (!group)

  00195	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00199	75 04		 jne	 SHORT $LN4@check_vehi

; 119  : 	{
; 120  : 		return FALSE;

  0019b	33 c0		 xor	 eax, eax
  0019d	eb 7c		 jmp	 SHORT $LN1@check_vehi
$LN4@check_vehi:

; 121  : 	}
; 122  : 
; 123  : 	if (!get_local_entity_int_value (group, INT_TYPE_ENGAGE_ENEMY))

  0019f	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  001a3	74 0a		 je	 SHORT $LN19@check_vehi
  001a5	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  001a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001aa	89 4d b8	 mov	 DWORD PTR tv161[ebp], ecx
  001ad	eb 1a		 jmp	 SHORT $LN20@check_vehi
$LN19@check_vehi:
  001af	6a 7b		 push	 123			; 0000007bH
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001bc	52		 push	 edx
  001bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c2	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN20@check_vehi:
  001c9	b8 01 00 00 00	 mov	 eax, 1
  001ce	85 c0		 test	 eax, eax
  001d0	74 09		 je	 SHORT $LN21@check_vehi
  001d2	c7 45 b4 33 00
	00 00		 mov	 DWORD PTR tv168[ebp], 51 ; 00000033H
  001d9	eb 1a		 jmp	 SHORT $LN22@check_vehi
$LN21@check_vehi:
  001db	6a 7b		 push	 123			; 0000007bH
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001e8	51		 push	 ecx
  001e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ee	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN22@check_vehi:
  001f5	6a 33		 push	 51			; 00000033H
  001f7	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  001fa	52		 push	 edx
  001fb	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv161[ebp], 1116
  00202	8b 4d b4	 mov	 ecx, DWORD PTR tv168[ebp]
  00205	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0020c	ff d2		 call	 edx
  0020e	85 c0		 test	 eax, eax
  00210	75 04		 jne	 SHORT $LN5@check_vehi

; 124  : 	{
; 125  : 		#if DEBUG_MODULE
; 126  : 
; 127  : 		debug_log ("VH_TGT: group %s not allowed to engage enemy", entity_sub_type_group_names [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)]);
; 128  : 
; 129  : 		#endif
; 130  : 
; 131  : 		return FALSE;

  00212	33 c0		 xor	 eax, eax
  00214	eb 05		 jmp	 SHORT $LN1@check_vehi
$LN5@check_vehi:

; 132  : 	}
; 133  : 
; 134  : 	return TRUE;

  00216	b8 01 00 00 00	 mov	 eax, 1
$LN1@check_vehi:

; 135  : }

  0021b	5f		 pop	 edi
  0021c	5e		 pop	 esi
  0021d	5b		 pop	 ebx
  0021e	8b e5		 mov	 esp, ebp
  00220	5d		 pop	 ebp
  00221	c2 04 00	 ret	 4
?check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z ENDP	; check_vehicle_target_scan_valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\vh_tgt.c
;	COMDAT ?vehicle_target_scan@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv366 = -108						; size = 4
tv339 = -108						; size = 4
tv267 = -108						; size = 4
tv240 = -108						; size = 4
tv221 = -108						; size = 4
tv196 = -108						; size = 4
tv175 = -108						; size = 4
tv155 = -108						; size = 4
tv135 = -108						; size = 4
tv358 = -104						; size = 4
tv332 = -104						; size = 4
tv259 = -104						; size = 4
tv233 = -104						; size = 4
tv227 = -104						; size = 4
tv213 = -104						; size = 4
tv188 = -104						; size = 4
tv167 = -104						; size = 4
tv147 = -104						; size = 4
tv95 = -104						; size = 4
_pos$ = -36						; size = 4
_target_source$ = -32					; size = 4
_target_count$ = -28					; size = 4
_current_target$ = -24					; size = 4
_target_group$ = -20					; size = 4
_group$ = -16						; size = 4
_guide$ = -12						; size = 4
_task$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?vehicle_target_scan@@YGXPAUENTITY@@@Z PROC		; vehicle_target_scan, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 155  : 	vehicle
; 156  : 		*raw;
; 157  : 
; 158  : 	entity
; 159  : 		*task,
; 160  : 		*guide,
; 161  : 		*group,
; 162  : 		*target_group,
; 163  : 		*current_target;
; 164  : 
; 165  : 	int
; 166  : 		target_count;
; 167  : 
; 168  : 	task_target_source_types
; 169  : 		target_source;
; 170  : 
; 171  : 	vec3d
; 172  : 		*pos;
; 173  : 
; 174  : 	raw = (vehicle *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 175  : 
; 176  : 	raw->target_scan_timer -= get_delta_time (); 

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	f3 0f 10 80 f8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+248]
  0001d	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00028	f3 0f 11 81 f8
	00 00 00	 movss	 DWORD PTR [ecx+248], xmm0

; 177  : 		
; 178  : 	if (raw->target_scan_timer > 0.0)

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	f3 0f 5a 80 f8
	00 00 00	 cvtss2sd xmm0, DWORD PTR [eax+248]
  0003b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00043	76 05		 jbe	 SHORT $LN4@vehicle_ta

; 179  : 	{
; 180  : 		return;

  00045	e9 9b 07 00 00	 jmp	 $LN1@vehicle_ta
$LN4@vehicle_ta:

; 181  : 	}
; 182  : 
; 183  : 	//
; 184  : 	// reset target_scan_timer (okay to use a random number as this is a server only variable)
; 185  : 	//
; 186  : 		
; 187  : 	raw->target_scan_timer = vehicle_database[raw->mob.sub_type].target_scan_delay * (1.0 + (sfrand1 () * 0.5));

  0004a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00054	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00059	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00064	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00067	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0006d	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00073	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00077	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  0007f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00087	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0008f	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00092	69 02 bc 00 00
	00		 imul	 eax, DWORD PTR [edx], 188
  00098	f3 0f 5a 88 78
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+120]
  000a0	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  000a4	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000ab	f3 0f 11 81 f8
	00 00 00	 movss	 DWORD PTR [ecx+248], xmm0

; 188  : 		
; 189  : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  000b3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b7	74 0a		 je	 SHORT $LN20@vehicle_ta
  000b9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	89 4d 98	 mov	 DWORD PTR tv95[ebp], ecx
  000c1	eb 21		 jmp	 SHORT $LN21@vehicle_ta
$LN20@vehicle_ta:
  000c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  000c9	83 c2 23	 add	 edx, 35			; 00000023H
  000cc	52		 push	 edx
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000dd	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN21@vehicle_ta:
  000e4	b9 01 00 00 00	 mov	 ecx, 1
  000e9	85 c9		 test	 ecx, ecx
  000eb	74 09		 je	 SHORT $LN22@vehicle_ta
  000ed	c7 45 94 19 00
	00 00		 mov	 DWORD PTR tv135[ebp], 25 ; 00000019H
  000f4	eb 21		 jmp	 SHORT $LN23@vehicle_ta
$LN22@vehicle_ta:
  000f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  000fc	83 c2 23	 add	 edx, 35			; 00000023H
  000ff	52		 push	 edx
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00110	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN23@vehicle_ta:
  00117	6a 19		 push	 25			; 00000019H
  00119	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0011c	51		 push	 ecx
  0011d	69 55 98 b4 00
	00 00		 imul	 edx, DWORD PTR tv95[ebp], 180
  00124	8b 45 94	 mov	 eax, DWORD PTR tv135[ebp]
  00127	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0012e	ff d1		 call	 ecx
  00130	89 45 f0	 mov	 DWORD PTR _group$[ebp], eax

; 190  : 
; 191  : 	current_target = get_local_entity_parent (en, LIST_TYPE_TARGET);

  00133	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00137	74 0a		 je	 SHORT $LN24@vehicle_ta
  00139	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013e	89 4d 98	 mov	 DWORD PTR tv147[ebp], ecx
  00141	eb 21		 jmp	 SHORT $LN25@vehicle_ta
$LN24@vehicle_ta:
  00143	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  00149	83 c2 25	 add	 edx, 37			; 00000025H
  0014c	52		 push	 edx
  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015d	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN25@vehicle_ta:
  00164	b9 01 00 00 00	 mov	 ecx, 1
  00169	85 c9		 test	 ecx, ecx
  0016b	74 09		 je	 SHORT $LN26@vehicle_ta
  0016d	c7 45 94 26 00
	00 00		 mov	 DWORD PTR tv155[ebp], 38 ; 00000026H
  00174	eb 21		 jmp	 SHORT $LN27@vehicle_ta
$LN26@vehicle_ta:
  00176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  0017c	83 c2 25	 add	 edx, 37			; 00000025H
  0017f	52		 push	 edx
  00180	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00185	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00190	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN27@vehicle_ta:
  00197	6a 26		 push	 38			; 00000026H
  00199	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0019c	51		 push	 ecx
  0019d	69 55 98 b4 00
	00 00		 imul	 edx, DWORD PTR tv147[ebp], 180
  001a4	8b 45 94	 mov	 eax, DWORD PTR tv155[ebp]
  001a7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001ae	ff d1		 call	 ecx
  001b0	89 45 e8	 mov	 DWORD PTR _current_target$[ebp], eax

; 192  : 
; 193  : 	//
; 194  : 	// What type of target does task allow 
; 195  : 	//
; 196  : 
; 197  : 	target_source = TASK_TARGET_SOURCE_SCAN_ALL;

  001b3	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _target_source$[ebp], 1

; 198  : 
; 199  : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  001ba	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001be	74 0a		 je	 SHORT $LN28@vehicle_ta
  001c0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c5	89 4d 98	 mov	 DWORD PTR tv167[ebp], ecx
  001c8	eb 21		 jmp	 SHORT $LN29@vehicle_ta
$LN28@vehicle_ta:
  001ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  001d0	83 c2 2d	 add	 edx, 45			; 0000002dH
  001d3	52		 push	 edx
  001d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e4	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN29@vehicle_ta:
  001eb	b9 01 00 00 00	 mov	 ecx, 1
  001f0	85 c9		 test	 ecx, ecx
  001f2	74 09		 je	 SHORT $LN30@vehicle_ta
  001f4	c7 45 94 0d 00
	00 00		 mov	 DWORD PTR tv175[ebp], 13 ; 0000000dH
  001fb	eb 21		 jmp	 SHORT $LN31@vehicle_ta
$LN30@vehicle_ta:
  001fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  00203	83 c2 2d	 add	 edx, 45			; 0000002dH
  00206	52		 push	 edx
  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00217	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN31@vehicle_ta:
  0021e	6a 0d		 push	 13			; 0000000dH
  00220	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00223	51		 push	 ecx
  00224	69 55 98 b4 00
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 180
  0022b	8b 45 94	 mov	 eax, DWORD PTR tv175[ebp]
  0022e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00235	ff d1		 call	 ecx
  00237	89 45 f4	 mov	 DWORD PTR _guide$[ebp], eax

; 200  : 
; 201  : 	if (guide)

  0023a	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0023e	0f 84 21 01 00
	00		 je	 $LN5@vehicle_ta

; 202  : 	{
; 203  : 		task = get_local_entity_parent (guide, LIST_TYPE_GUIDE);

  00244	83 7d f4 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00248	74 0a		 je	 SHORT $LN32@vehicle_ta
  0024a	8b 45 f4	 mov	 eax, DWORD PTR _guide$[ebp]
  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	89 4d 98	 mov	 DWORD PTR tv188[ebp], ecx
  00252	eb 21		 jmp	 SHORT $LN33@vehicle_ta
$LN32@vehicle_ta:
  00254	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  0025a	83 c2 31	 add	 edx, 49			; 00000031H
  0025d	52		 push	 edx
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00263	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0026e	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN33@vehicle_ta:
  00275	b9 01 00 00 00	 mov	 ecx, 1
  0027a	85 c9		 test	 ecx, ecx
  0027c	74 09		 je	 SHORT $LN34@vehicle_ta
  0027e	c7 45 94 10 00
	00 00		 mov	 DWORD PTR tv196[ebp], 16 ; 00000010H
  00285	eb 21		 jmp	 SHORT $LN35@vehicle_ta
$LN34@vehicle_ta:
  00287	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  0028d	83 c2 31	 add	 edx, 49			; 00000031H
  00290	52		 push	 edx
  00291	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00296	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0029b	50		 push	 eax
  0029c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a1	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN35@vehicle_ta:
  002a8	6a 10		 push	 16			; 00000010H
  002aa	8b 4d f4	 mov	 ecx, DWORD PTR _guide$[ebp]
  002ad	51		 push	 ecx
  002ae	69 55 98 b4 00
	00 00		 imul	 edx, DWORD PTR tv188[ebp], 180
  002b5	8b 45 94	 mov	 eax, DWORD PTR tv196[ebp]
  002b8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002bf	ff d1		 call	 ecx
  002c1	89 45 f8	 mov	 DWORD PTR _task$[ebp], eax

; 204  : 
; 205  : 		ASSERT (task);

  002c4	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  002c8	75 18		 jne	 SHORT $LN6@vehicle_ta
  002ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  002cf	83 c0 33	 add	 eax, 51			; 00000033H
  002d2	50		 push	 eax
  002d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d8	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  002dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@vehicle_ta:

; 206  : 		
; 207  : 		target_source = (task_target_source_types) get_local_entity_int_value (task, INT_TYPE_TASK_TARGET_SOURCE);

  002e2	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  002e6	74 0a		 je	 SHORT $LN36@vehicle_ta
  002e8	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  002eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ed	89 4d 98	 mov	 DWORD PTR tv213[ebp], ecx
  002f0	eb 21		 jmp	 SHORT $LN37@vehicle_ta
$LN36@vehicle_ta:
  002f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  002f8	83 c2 35	 add	 edx, 53			; 00000035H
  002fb	52		 push	 edx
  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00301	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00306	50		 push	 eax
  00307	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030c	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv213[ebp], 0
$LN37@vehicle_ta:
  00313	b9 01 00 00 00	 mov	 ecx, 1
  00318	85 c9		 test	 ecx, ecx
  0031a	74 09		 je	 SHORT $LN38@vehicle_ta
  0031c	c7 45 94 e5 00
	00 00		 mov	 DWORD PTR tv221[ebp], 229 ; 000000e5H
  00323	eb 21		 jmp	 SHORT $LN39@vehicle_ta
$LN38@vehicle_ta:
  00325	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  0032b	83 c2 35	 add	 edx, 53			; 00000035H
  0032e	52		 push	 edx
  0032f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00339	50		 push	 eax
  0033a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033f	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv221[ebp], 0
$LN39@vehicle_ta:
  00346	68 e5 00 00 00	 push	 229			; 000000e5H
  0034b	8b 4d f8	 mov	 ecx, DWORD PTR _task$[ebp]
  0034e	51		 push	 ecx
  0034f	69 55 98 5c 04
	00 00		 imul	 edx, DWORD PTR tv213[ebp], 1116
  00356	8b 45 94	 mov	 eax, DWORD PTR tv221[ebp]
  00359	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00360	ff d1		 call	 ecx
  00362	89 45 e0	 mov	 DWORD PTR _target_source$[ebp], eax
$LN5@vehicle_ta:

; 208  : 	}
; 209  : 
; 210  : 	//
; 211  : 	//
; 212  : 	//
; 213  : 
; 214  : 	switch (target_source)

  00365	8b 45 e0	 mov	 eax, DWORD PTR _target_source$[ebp]
  00368	89 45 98	 mov	 DWORD PTR tv227[ebp], eax
  0036b	83 7d 98 05	 cmp	 DWORD PTR tv227[ebp], 5
  0036f	0f 87 70 04 00
	00		 ja	 $LN2@vehicle_ta
  00375	8b 4d 98	 mov	 ecx, DWORD PTR tv227[ebp]
  00378	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN56@vehicle_ta[ecx*4]
$LN7@vehicle_ta:

; 215  : 	{
; 216  : 		case TASK_TARGET_SOURCE_TASK_OBJECTIVE:
; 217  : 		{
; 218  : 			return;

  0037f	e9 61 04 00 00	 jmp	 $LN1@vehicle_ta
$LN8@vehicle_ta:

; 219  : 		}
; 220  : 
; 221  : 		case TASK_TARGET_SOURCE_NONE:
; 222  : 		case TASK_TARGET_SOURCE_SCAN_ALL:
; 223  : 		case TASK_TARGET_SOURCE_SCAN_AIR:
; 224  : 		{
; 225  : 			//
; 226  : 			// Only first member in a group to do targetting
; 227  : 			//
; 228  : 
; 229  : 			if (get_local_entity_child_pred (en, LIST_TYPE_MEMBER))

  00384	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00388	74 0a		 je	 SHORT $LN40@vehicle_ta
  0038a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0038d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038f	89 4d 98	 mov	 DWORD PTR tv233[ebp], ecx
  00392	eb 1d		 jmp	 SHORT $LN41@vehicle_ta
$LN40@vehicle_ta:
  00394	68 e5 00 00 00	 push	 229			; 000000e5H
  00399	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a4	52		 push	 edx
  003a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003aa	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv233[ebp], 0
$LN41@vehicle_ta:
  003b1	b8 01 00 00 00	 mov	 eax, 1
  003b6	85 c0		 test	 eax, eax
  003b8	74 09		 je	 SHORT $LN42@vehicle_ta
  003ba	c7 45 94 19 00
	00 00		 mov	 DWORD PTR tv240[ebp], 25 ; 00000019H
  003c1	eb 1d		 jmp	 SHORT $LN43@vehicle_ta
$LN42@vehicle_ta:
  003c3	68 e5 00 00 00	 push	 229			; 000000e5H
  003c8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003d3	51		 push	 ecx
  003d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d9	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv240[ebp], 0
$LN43@vehicle_ta:
  003e0	6a 19		 push	 25			; 00000019H
  003e2	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  003e5	52		 push	 edx
  003e6	69 45 98 b4 00
	00 00		 imul	 eax, DWORD PTR tv233[ebp], 180
  003ed	8b 4d 94	 mov	 ecx, DWORD PTR tv240[ebp]
  003f0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  003f7	ff d2		 call	 edx
  003f9	85 c0		 test	 eax, eax
  003fb	74 05		 je	 SHORT $LN9@vehicle_ta

; 230  : 			{
; 231  : 				return;

  003fd	e9 e3 03 00 00	 jmp	 $LN1@vehicle_ta
$LN9@vehicle_ta:

; 232  : 			}
; 233  : 
; 234  : 			//
; 235  : 			// Just notify force entity of targets
; 236  : 			//
; 237  : 
; 238  : 			target_group = get_vehicle_surface_to_air_scan_group_targets (en, &target_count);

  00402	8d 45 e4	 lea	 eax, DWORD PTR _target_count$[ebp]
  00405	50		 push	 eax
  00406	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00409	51		 push	 ecx
  0040a	e8 00 00 00 00	 call	 ?get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ; get_vehicle_surface_to_air_scan_group_targets
  0040f	89 45 ec	 mov	 DWORD PTR _target_group$[ebp], eax

; 239  : 
; 240  : 			if ((target_group) && (target_count > 0))

  00412	83 7d ec 00	 cmp	 DWORD PTR _target_group$[ebp], 0
  00416	0f 84 8f 01 00
	00		 je	 $LN10@vehicle_ta
  0041c	83 7d e4 00	 cmp	 DWORD PTR _target_count$[ebp], 0
  00420	0f 8e 85 01 00
	00		 jle	 $LN10@vehicle_ta

; 241  : 			{
; 242  : 
; 243  : 				#if TEXT_DEBUG_MODULE
; 244  : 
; 245  : 				debug_log ("VH_TGT: %s(%d) Scanned %d air group targets", get_local_entity_string (en, STRING_TYPE_SHORT_DISPLAY_NAME), get_local_entity_index (en), target_count);
; 246  : 
; 247  : 				#endif
; 248  : 
; 249  : 				/////////////////////////////////////////////////////////////////
; 250  : 				//
; 251  : 				// SPECIAL_EFFECT_HOOK FOR AIR TARGETS SIGHTED
; 252  : 				//
; 253  : 				/////////////////////////////////////////////////////////////////
; 254  : 				
; 255  : 				if (!current_target)

  00426	83 7d e8 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  0042a	0f 85 6c 01 00
	00		 jne	 $LN11@vehicle_ta

; 256  : 				{
; 257  : 					// PLAY_SPEECH (GC)
; 258  : 					//
; 259  : 					// [GC Introduction],
; 260  : 					// We have incoming enemy aircraft
; 261  : 	
; 262  : 					pos = get_local_entity_vec3d_ptr (target_group, VEC3D_TYPE_POSITION); 

  00430	83 7d ec 00	 cmp	 DWORD PTR _target_group$[ebp], 0
  00434	74 0a		 je	 SHORT $LN44@vehicle_ta
  00436	8b 45 ec	 mov	 eax, DWORD PTR _target_group$[ebp]
  00439	8b 08		 mov	 ecx, DWORD PTR [eax]
  0043b	89 4d 98	 mov	 DWORD PTR tv259[ebp], ecx
  0043e	eb 21		 jmp	 SHORT $LN45@vehicle_ta
$LN44@vehicle_ta:
  00440	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  00446	83 c2 6c	 add	 edx, 108		; 0000006cH
  00449	52		 push	 edx
  0044a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0044f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00454	50		 push	 eax
  00455	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045a	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv259[ebp], 0
$LN45@vehicle_ta:
  00461	b9 01 00 00 00	 mov	 ecx, 1
  00466	85 c9		 test	 ecx, ecx
  00468	74 09		 je	 SHORT $LN46@vehicle_ta
  0046a	c7 45 94 08 00
	00 00		 mov	 DWORD PTR tv267[ebp], 8
  00471	eb 21		 jmp	 SHORT $LN47@vehicle_ta
$LN46@vehicle_ta:
  00473	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  00479	83 c2 6c	 add	 edx, 108		; 0000006cH
  0047c	52		 push	 edx
  0047d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00482	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00487	50		 push	 eax
  00488	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0048d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv267[ebp], 0
$LN47@vehicle_ta:
  00494	6a 08		 push	 8
  00496	8b 4d ec	 mov	 ecx, DWORD PTR _target_group$[ebp]
  00499	51		 push	 ecx
  0049a	6b 55 98 60	 imul	 edx, DWORD PTR tv259[ebp], 96
  0049e	8b 45 94	 mov	 eax, DWORD PTR tv267[ebp]
  004a1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  004a8	ff d1		 call	 ecx
  004aa	89 45 dc	 mov	 DWORD PTR _pos$[ebp], eax

; 263  : 
; 264  : 					ASSERT (pos);

  004ad	83 7d dc 00	 cmp	 DWORD PTR _pos$[ebp], 0
  004b1	75 18		 jne	 SHORT $LN12@vehicle_ta
  004b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  004b8	83 c0 6e	 add	 eax, 110		; 0000006eH
  004bb	50		 push	 eax
  004bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c1	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  004c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@vehicle_ta:

; 265  : 
; 266  : 					get_speech_sector_coordinates (pos);

  004cb	8b 45 dc	 mov	 eax, DWORD PTR _pos$[ebp]
  004ce	50		 push	 eax
  004cf	e8 00 00 00 00	 call	 ?get_speech_sector_coordinates@@YGPAHPAUVEC3D@@@Z ; get_speech_sector_coordinates

; 267  : 
; 268  : 					play_client_server_speech

  004d4	6a ff		 push	 -1
  004d6	b8 04 00 00 00	 mov	 eax, 4
  004db	6b c8 05	 imul	 ecx, eax, 5
  004de	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?speech_sector_coordinates@@3PAHA[ecx]
  004e4	52		 push	 edx
  004e5	6a 00		 push	 0
  004e7	b8 04 00 00 00	 mov	 eax, 4
  004ec	c1 e0 02	 shl	 eax, 2
  004ef	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?speech_sector_coordinates@@3PAHA[eax]
  004f5	51		 push	 ecx
  004f6	6a 00		 push	 0
  004f8	ba 04 00 00 00	 mov	 edx, 4
  004fd	6b c2 03	 imul	 eax, edx, 3
  00500	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?speech_sector_coordinates@@3PAHA[eax]
  00506	51		 push	 ecx
  00507	6a 00		 push	 0
  00509	ba 04 00 00 00	 mov	 edx, 4
  0050e	d1 e2		 shl	 edx, 1
  00510	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?speech_sector_coordinates@@3PAHA[edx]
  00516	50		 push	 eax
  00517	6a 00		 push	 0
  00519	b9 04 00 00 00	 mov	 ecx, 4
  0051e	c1 e1 00	 shl	 ecx, 0
  00521	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?speech_sector_coordinates@@3PAHA[ecx]
  00527	52		 push	 edx
  00528	6a 00		 push	 0
  0052a	b8 04 00 00 00	 mov	 eax, 4
  0052f	6b c8 00	 imul	 ecx, eax, 0
  00532	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?speech_sector_coordinates@@3PAHA[ecx]
  00538	52		 push	 edx
  00539	6a 00		 push	 0
  0053b	6a 05		 push	 5
  0053d	6a 05		 push	 5
  0053f	6a 00		 push	 0
  00541	6a 05		 push	 5
  00543	51		 push	 ecx
  00544	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42700000
  0054c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00551	6a 0e		 push	 14			; 0000000eH
  00553	6a 06		 push	 6
  00555	51		 push	 ecx
  00556	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  0055e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00563	51		 push	 ecx
  00564	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0056c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00571	51		 push	 ecx
  00572	0f 57 c0	 xorps	 xmm0, xmm0
  00575	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0057a	6a 00		 push	 0
  0057c	6a 1e		 push	 30			; 0000001eH
  0057e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00581	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00584	d1 e9		 shr	 ecx, 1
  00586	83 e1 03	 and	 ecx, 3
  00589	51		 push	 ecx
  0058a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0058d	52		 push	 edx
  0058e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00593	50		 push	 eax
  00594	e8 00 00 00 00	 call	 ?play_client_server_speech@@YAHPAUENTITY@@0W4ENTITY_SIDES@@HW4SOUND_LOCALITY_TYPES@@MMMW4speech_originator_types@@W4speech_category_types@@MZZ ; play_client_server_speech
  00599	83 c4 70	 add	 esp, 112		; 00000070H
$LN11@vehicle_ta:

; 269  : 					(
; 270  : 						get_session_entity (),
; 271  : 						en,
; 272  : 						(entity_sides) raw->mob.side,
; 273  : 						ENTITY_SUB_TYPE_EFFECT_SOUND_RADIO_MESSAGE,
; 274  : 						SOUND_LOCALITY_RADIO,
; 275  : 						0.0,
; 276  : 						1.0,
; 277  : 						20.0,
; 278  : 						SPEECH_ORIGINATOR_GROUND_CONTROLLER,
; 279  : 						SPEECH_CATEGORY_SIGHTED_TARGETS,
; 280  : 						60.0,
; 281  : 						SPEECH_ARRAY_GC_MESSAGES, SPEECH_GC_INTRODUCTION,
; 282  : 						SPEECH_ARRAY_GC_MESSAGES, SPEECH_GC_INCOMING_ENEMY_AIRCRAFT_HEADING,
; 283  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [0],
; 284  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [1],
; 285  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [2],
; 286  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [3],
; 287  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [4],
; 288  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [5],
; 289  : 						-1
; 290  : 					);
; 291  : 				}
; 292  : 				
; 293  : 				/////////////////////////////////////////////////////////////////
; 294  : 				//
; 295  : 				//
; 296  : 				/////////////////////////////////////////////////////////////////
; 297  : 
; 298  : 				engage_targets_in_group (group, target_group, TRUE);

  0059c	6a 01		 push	 1
  0059e	8b 45 ec	 mov	 eax, DWORD PTR _target_group$[ebp]
  005a1	50		 push	 eax
  005a2	8b 4d f0	 mov	 ecx, DWORD PTR _group$[ebp]
  005a5	51		 push	 ecx
  005a6	e8 00 00 00 00	 call	 ?engage_targets_in_group@@YGHPAUENTITY@@0H@Z ; engage_targets_in_group
$LN10@vehicle_ta:

; 299  : 			}
; 300  : 
; 301  : 			if (target_source == TASK_TARGET_SOURCE_SCAN_AIR)

  005ab	83 7d e0 00	 cmp	 DWORD PTR _target_source$[ebp], 0
  005af	75 05		 jne	 SHORT $LN13@vehicle_ta

; 302  : 			{
; 303  : 
; 304  : 				break;

  005b1	e9 2f 02 00 00	 jmp	 $LN2@vehicle_ta
$LN13@vehicle_ta:

; 305  : 			}
; 306  : 		}
; 307  : 
; 308  : 		case TASK_TARGET_SOURCE_SCAN_GROUND:
; 309  : 		{
; 310  : 			//
; 311  : 			// Only first member in a group to do targetting
; 312  : 			//
; 313  : 
; 314  : 			if (get_local_entity_child_pred (en, LIST_TYPE_MEMBER))

  005b6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  005ba	74 0a		 je	 SHORT $LN48@vehicle_ta
  005bc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  005c1	89 4d 98	 mov	 DWORD PTR tv332[ebp], ecx
  005c4	eb 1d		 jmp	 SHORT $LN49@vehicle_ta
$LN48@vehicle_ta:
  005c6	68 3a 01 00 00	 push	 314			; 0000013aH
  005cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005d6	52		 push	 edx
  005d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005dc	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv332[ebp], 0
$LN49@vehicle_ta:
  005e3	b8 01 00 00 00	 mov	 eax, 1
  005e8	85 c0		 test	 eax, eax
  005ea	74 09		 je	 SHORT $LN50@vehicle_ta
  005ec	c7 45 94 19 00
	00 00		 mov	 DWORD PTR tv339[ebp], 25 ; 00000019H
  005f3	eb 1d		 jmp	 SHORT $LN51@vehicle_ta
$LN50@vehicle_ta:
  005f5	68 3a 01 00 00	 push	 314			; 0000013aH
  005fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00605	51		 push	 ecx
  00606	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060b	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv339[ebp], 0
$LN51@vehicle_ta:
  00612	6a 19		 push	 25			; 00000019H
  00614	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00617	52		 push	 edx
  00618	69 45 98 b4 00
	00 00		 imul	 eax, DWORD PTR tv332[ebp], 180
  0061f	8b 4d 94	 mov	 ecx, DWORD PTR tv339[ebp]
  00622	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00629	ff d2		 call	 edx
  0062b	85 c0		 test	 eax, eax
  0062d	74 05		 je	 SHORT $LN15@vehicle_ta

; 315  : 			{
; 316  : 
; 317  : 				return;

  0062f	e9 b1 01 00 00	 jmp	 $LN1@vehicle_ta
$LN15@vehicle_ta:

; 318  : 			}
; 319  : 
; 320  : 			//
; 321  : 			// Just notify force entity of targets
; 322  : 			//
; 323  : 
; 324  : 			target_group = get_vehicle_surface_to_surface_scan_group_targets (en, &target_count);

  00634	8d 45 e4	 lea	 eax, DWORD PTR _target_count$[ebp]
  00637	50		 push	 eax
  00638	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0063b	51		 push	 ecx
  0063c	e8 00 00 00 00	 call	 ?get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ; get_vehicle_surface_to_surface_scan_group_targets
  00641	89 45 ec	 mov	 DWORD PTR _target_group$[ebp], eax

; 325  : 
; 326  : 			if ((target_group) && (target_count > 0))

  00644	83 7d ec 00	 cmp	 DWORD PTR _target_group$[ebp], 0
  00648	0f 84 97 01 00
	00		 je	 $LN16@vehicle_ta
  0064e	83 7d e4 00	 cmp	 DWORD PTR _target_count$[ebp], 0
  00652	0f 8e 8d 01 00
	00		 jle	 $LN16@vehicle_ta

; 327  : 			{
; 328  : 	
; 329  : 				#if TEXT_DEBUG_MODULE
; 330  : 	
; 331  : 				debug_log ("VH_TGT: %s(%d) Scanned %d ground group targets", get_local_entity_string (en, STRING_TYPE_SHORT_DISPLAY_NAME), get_local_entity_index (en), target_count);
; 332  : 	
; 333  : 				#endif
; 334  : 
; 335  : 				/////////////////////////////////////////////////////////////////
; 336  : 				//
; 337  : 				// SPECIAL_EFFECT_HOOK FOR GROUND TARGETS SIGHTED
; 338  : 				//
; 339  : 				/////////////////////////////////////////////////////////////////
; 340  : 				
; 341  : 				// PLAY_SPEECH (GC)
; 342  : 				//
; 343  : 				// [GC Introduction],
; 344  : 				// We have incoming enemy ground units
; 345  : 
; 346  : 				if (!current_target)

  00658	83 7d e8 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  0065c	0f 85 74 01 00
	00		 jne	 $LN17@vehicle_ta

; 347  : 				{
; 348  : 					pos = get_local_entity_vec3d_ptr (target_group, VEC3D_TYPE_POSITION); 

  00662	83 7d ec 00	 cmp	 DWORD PTR _target_group$[ebp], 0
  00666	74 0a		 je	 SHORT $LN52@vehicle_ta
  00668	8b 45 ec	 mov	 eax, DWORD PTR _target_group$[ebp]
  0066b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0066d	89 4d 98	 mov	 DWORD PTR tv358[ebp], ecx
  00670	eb 24		 jmp	 SHORT $LN53@vehicle_ta
$LN52@vehicle_ta:
  00672	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  00678	81 c2 c2 00 00
	00		 add	 edx, 194		; 000000c2H
  0067e	52		 push	 edx
  0067f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00684	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00689	50		 push	 eax
  0068a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0068f	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv358[ebp], 0
$LN53@vehicle_ta:
  00696	b9 01 00 00 00	 mov	 ecx, 1
  0069b	85 c9		 test	 ecx, ecx
  0069d	74 09		 je	 SHORT $LN54@vehicle_ta
  0069f	c7 45 94 08 00
	00 00		 mov	 DWORD PTR tv366[ebp], 8
  006a6	eb 24		 jmp	 SHORT $LN55@vehicle_ta
$LN54@vehicle_ta:
  006a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  006ae	81 c2 c2 00 00
	00		 add	 edx, 194		; 000000c2H
  006b4	52		 push	 edx
  006b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  006ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  006bf	50		 push	 eax
  006c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006c5	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv366[ebp], 0
$LN55@vehicle_ta:
  006cc	6a 08		 push	 8
  006ce	8b 4d ec	 mov	 ecx, DWORD PTR _target_group$[ebp]
  006d1	51		 push	 ecx
  006d2	6b 55 98 60	 imul	 edx, DWORD PTR tv358[ebp], 96
  006d6	8b 45 94	 mov	 eax, DWORD PTR tv366[ebp]
  006d9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  006e0	ff d1		 call	 ecx
  006e2	89 45 dc	 mov	 DWORD PTR _pos$[ebp], eax

; 349  : 
; 350  : 					ASSERT (pos);

  006e5	83 7d dc 00	 cmp	 DWORD PTR _pos$[ebp], 0
  006e9	75 1a		 jne	 SHORT $LN18@vehicle_ta
  006eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??vehicle_target_scan@@YGXPAUENTITY@@@Z@4JA
  006f0	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  006f5	50		 push	 eax
  006f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  006fb	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00700	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@vehicle_ta:

; 351  : 
; 352  : 					get_speech_sector_coordinates (pos);

  00705	8b 45 dc	 mov	 eax, DWORD PTR _pos$[ebp]
  00708	50		 push	 eax
  00709	e8 00 00 00 00	 call	 ?get_speech_sector_coordinates@@YGPAHPAUVEC3D@@@Z ; get_speech_sector_coordinates

; 353  : 
; 354  : 					play_client_server_speech

  0070e	6a ff		 push	 -1
  00710	b8 04 00 00 00	 mov	 eax, 4
  00715	6b c8 05	 imul	 ecx, eax, 5
  00718	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?speech_sector_coordinates@@3PAHA[ecx]
  0071e	52		 push	 edx
  0071f	6a 00		 push	 0
  00721	b8 04 00 00 00	 mov	 eax, 4
  00726	c1 e0 02	 shl	 eax, 2
  00729	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?speech_sector_coordinates@@3PAHA[eax]
  0072f	51		 push	 ecx
  00730	6a 00		 push	 0
  00732	ba 04 00 00 00	 mov	 edx, 4
  00737	6b c2 03	 imul	 eax, edx, 3
  0073a	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?speech_sector_coordinates@@3PAHA[eax]
  00740	51		 push	 ecx
  00741	6a 00		 push	 0
  00743	ba 04 00 00 00	 mov	 edx, 4
  00748	d1 e2		 shl	 edx, 1
  0074a	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?speech_sector_coordinates@@3PAHA[edx]
  00750	50		 push	 eax
  00751	6a 00		 push	 0
  00753	b9 04 00 00 00	 mov	 ecx, 4
  00758	c1 e1 00	 shl	 ecx, 0
  0075b	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?speech_sector_coordinates@@3PAHA[ecx]
  00761	52		 push	 edx
  00762	6a 00		 push	 0
  00764	b8 04 00 00 00	 mov	 eax, 4
  00769	6b c8 00	 imul	 ecx, eax, 0
  0076c	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?speech_sector_coordinates@@3PAHA[ecx]
  00772	52		 push	 edx
  00773	6a 00		 push	 0
  00775	6a 06		 push	 6
  00777	6a 05		 push	 5
  00779	6a 00		 push	 0
  0077b	6a 05		 push	 5
  0077d	51		 push	 ecx
  0077e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42b40000
  00786	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0078b	6a 0e		 push	 14			; 0000000eH
  0078d	6a 06		 push	 6
  0078f	51		 push	 ecx
  00790	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42200000
  00798	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0079d	51		 push	 ecx
  0079e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  007a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ab	51		 push	 ecx
  007ac	0f 57 c0	 xorps	 xmm0, xmm0
  007af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b4	6a 00		 push	 0
  007b6	6a 1e		 push	 30			; 0000001eH
  007b8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007bb	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  007be	d1 e9		 shr	 ecx, 1
  007c0	83 e1 03	 and	 ecx, 3
  007c3	51		 push	 ecx
  007c4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  007c7	52		 push	 edx
  007c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  007cd	50		 push	 eax
  007ce	e8 00 00 00 00	 call	 ?play_client_server_speech@@YAHPAUENTITY@@0W4ENTITY_SIDES@@HW4SOUND_LOCALITY_TYPES@@MMMW4speech_originator_types@@W4speech_category_types@@MZZ ; play_client_server_speech
  007d3	83 c4 70	 add	 esp, 112		; 00000070H
$LN17@vehicle_ta:

; 355  : 					(
; 356  : 						get_session_entity (),
; 357  : 						en,
; 358  : 						(entity_sides) raw->mob.side,
; 359  : 						ENTITY_SUB_TYPE_EFFECT_SOUND_RADIO_MESSAGE,
; 360  : 						SOUND_LOCALITY_RADIO,
; 361  : 						0.0,
; 362  : 						0.8,
; 363  : 						40.0,
; 364  : 						SPEECH_ORIGINATOR_GROUND_CONTROLLER,
; 365  : 						SPEECH_CATEGORY_SIGHTED_TARGETS,
; 366  : 						90.0,
; 367  : 						SPEECH_ARRAY_GC_MESSAGES, SPEECH_GC_INTRODUCTION,
; 368  : 						SPEECH_ARRAY_GC_MESSAGES, SPEECH_GC_INCOMING_ENEMY_GROUND_UNITS_AT,
; 369  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [0],
; 370  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [1],
; 371  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [2],
; 372  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [3],
; 373  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [4],
; 374  : 						SPEECH_ARRAY_NUMBERS, speech_sector_coordinates [5],
; 375  : 						-1
; 376  : 					);
; 377  : 				}
; 378  : 
; 379  : 				/////////////////////////////////////////////////////////////////
; 380  : 				//
; 381  : 				//
; 382  : 				/////////////////////////////////////////////////////////////////
; 383  : 
; 384  : 				engage_targets_in_group (group, target_group, TRUE);

  007d6	6a 01		 push	 1
  007d8	8b 45 ec	 mov	 eax, DWORD PTR _target_group$[ebp]
  007db	50		 push	 eax
  007dc	8b 4d f0	 mov	 ecx, DWORD PTR _group$[ebp]
  007df	51		 push	 ecx
  007e0	e8 00 00 00 00	 call	 ?engage_targets_in_group@@YGHPAUENTITY@@0H@Z ; engage_targets_in_group
$LN16@vehicle_ta:
$LN2@vehicle_ta:
$LN1@vehicle_ta:

; 385  : 			}
; 386  : 
; 387  : 			break;
; 388  : 		}
; 389  : 	}
; 390  : 
; 391  : 	return;
; 392  : }

  007e5	5f		 pop	 edi
  007e6	5e		 pop	 esi
  007e7	5b		 pop	 ebx
  007e8	8b e5		 mov	 esp, ebp
  007ea	5d		 pop	 ebp
  007eb	c2 04 00	 ret	 4
  007ee	66 90		 npad	 2
$LN56@vehicle_ta:
  007f0	00 00 00 00	 DD	 $LN8@vehicle_ta
  007f4	00 00 00 00	 DD	 $LN8@vehicle_ta
  007f8	00 00 00 00	 DD	 $LN13@vehicle_ta
  007fc	00 00 00 00	 DD	 $LN2@vehicle_ta
  00800	00 00 00 00	 DD	 $LN7@vehicle_ta
  00804	00 00 00 00	 DD	 $LN8@vehicle_ta
?vehicle_target_scan@@YGXPAUENTITY@@@Z ENDP		; vehicle_target_scan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\vh_tgt.c
;	COMDAT ?get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z
_TEXT	SEGMENT
tv807 = -172						; size = 8
tv531 = -164						; size = 4
tv506 = -164						; size = 4
tv474 = -164						; size = 4
tv452 = -164						; size = 4
tv433 = -164						; size = 4
tv413 = -164						; size = 4
tv392 = -164						; size = 4
tv373 = -164						; size = 4
tv354 = -164						; size = 4
tv335 = -164						; size = 4
tv315 = -164						; size = 4
tv223 = -164						; size = 4
tv203 = -164						; size = 4
tv181 = -164						; size = 4
tv158 = -164						; size = 4
tv136 = -164						; size = 4
tv83 = -164						; size = 4
tv523 = -160						; size = 4
tv498 = -160						; size = 4
tv466 = -160						; size = 4
tv445 = -160						; size = 4
tv426 = -160						; size = 4
tv405 = -160						; size = 4
tv385 = -160						; size = 4
tv366 = -160						; size = 4
tv347 = -160						; size = 4
tv328 = -160						; size = 4
tv307 = -160						; size = 4
tv300 = -160						; size = 4
tv215 = -160						; size = 4
tv195 = -160						; size = 4
tv173 = -160						; size = 4
tv150 = -160						; size = 4
tv128 = -160						; size = 4
tv75 = -160						; size = 4
$T1 = -156						; size = 4
_weighting$ = -88					; size = 4
_best_target_select_criteria$ = -84			; size = 4
_target_select_criteria$ = -80				; size = 4
_target_range$ = -76					; size = 4
_source_surface_scan_range$ = -72			; size = 4
_target_position$ = -68					; size = 4
_source_position$ = -64					; size = 4
_source_side$ = -60					; size = 4
_best_target$ = -56					; size = 4
_best_group$ = -52					; size = 4
_sec$ = -48						; size = 4
_member$ = -44						; size = 4
_target$ = -40						; size = 4
_group$ = -36						; size = 4
_z_sec$ = -32						; size = 4
_x_sec$ = -28						; size = 4
_z_sec_max$ = -24					; size = 4
_x_sec_max$ = -20					; size = 4
_z_sec_min$ = -16					; size = 4
_x_sec_min$ = -12					; size = 4
_z_sec_org$ = -8					; size = 4
_x_sec_org$ = -4					; size = 4
_source$ = 8						; size = 4
_target_count$ = 12					; size = 4
?get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z PROC ; get_vehicle_surface_to_surface_scan_group_targets, COMDAT

; 795  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 796  : 	int
; 797  : 		x_sec_org,
; 798  : 		z_sec_org,
; 799  : 		x_sec_min,
; 800  : 		z_sec_min,
; 801  : 		x_sec_max,
; 802  : 		z_sec_max,
; 803  : 		x_sec,
; 804  : 		z_sec;
; 805  : 
; 806  : 	#if TEXT_DEBUG_MODULE
; 807  : 
; 808  : 	int
; 809  : 		debug;
; 810  : 
; 811  : 	#endif
; 812  : 
; 813  : 	entity
; 814  : 		*group,
; 815  : 		*target,
; 816  : 		*member,
; 817  : 		*sec,
; 818  : 		*best_group,
; 819  : 		*best_target;
; 820  : 
; 821  : 	entity_sides
; 822  : 		source_side;
; 823  : 
; 824  : 	vec3d
; 825  : 		*source_position,
; 826  : 		*target_position;
; 827  : 
; 828  : 	float
; 829  : 		source_surface_scan_range,
; 830  : 		target_range,
; 831  : 		target_select_criteria,
; 832  : 		best_target_select_criteria,
; 833  : 		weighting;
; 834  : 
; 835  : 	ASSERT (source);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00010	75 18		 jne	 SHORT $LN13@get_vehicl
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00017	83 c0 28	 add	 eax, 40			; 00000028H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_vehicl:

; 836  : 
; 837  : 	*target_count = 0;

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 838  : 
; 839  : 	#if TEXT_DEBUG_MODULE
; 840  : 
; 841  : 	debug = source == get_external_view_entity ();
; 842  : 
; 843  : 	#endif
; 844  : 
; 845  : 	//
; 846  : 	// find best scan range
; 847  : 	//
; 848  : 
; 849  : 	group = get_local_entity_parent (source, LIST_TYPE_MEMBER);

  00033	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00037	74 0d		 je	 SHORT $LN32@get_vehicl
  00039	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00044	eb 24		 jmp	 SHORT $LN33@get_vehicl
$LN32@get_vehicl:
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0004c	83 c2 36	 add	 edx, 54			; 00000036H
  0004f	52		 push	 edx
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00060	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN33@get_vehicl:
  0006a	b9 01 00 00 00	 mov	 ecx, 1
  0006f	85 c9		 test	 ecx, ecx
  00071	74 0c		 je	 SHORT $LN34@get_vehicl
  00073	c7 85 5c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv83[ebp], 25	; 00000019H
  0007d	eb 24		 jmp	 SHORT $LN35@get_vehicl
$LN34@get_vehicl:
  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00085	83 c2 36	 add	 edx, 54			; 00000036H
  00088	52		 push	 edx
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00099	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN35@get_vehicl:
  000a3	6a 19		 push	 25			; 00000019H
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  000a8	51		 push	 ecx
  000a9	69 95 60 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv75[ebp], 180
  000b3	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c0	ff d1		 call	 ecx
  000c2	89 45 dc	 mov	 DWORD PTR _group$[ebp], eax

; 850  : 
; 851  : 	if (!group)

  000c5	83 7d dc 00	 cmp	 DWORD PTR _group$[ebp], 0
  000c9	75 07		 jne	 SHORT $LN14@get_vehicl

; 852  : 	{
; 853  : 		return NULL;

  000cb	33 c0		 xor	 eax, eax
  000cd	e9 c3 0c 00 00	 jmp	 $LN1@get_vehicl
$LN14@get_vehicl:

; 854  : 	}
; 855  : 
; 856  : 	source_surface_scan_range = 0.0;

  000d2	0f 57 c0	 xorps	 xmm0, xmm0
  000d5	f3 0f 11 45 b8	 movss	 DWORD PTR _source_surface_scan_range$[ebp], xmm0

; 857  : 	
; 858  : 	member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  000da	83 7d dc 00	 cmp	 DWORD PTR _group$[ebp], 0
  000de	74 0d		 je	 SHORT $LN36@get_vehicl
  000e0	8b 45 dc	 mov	 eax, DWORD PTR _group$[ebp]
  000e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e5	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv128[ebp], ecx
  000eb	eb 24		 jmp	 SHORT $LN37@get_vehicl
$LN36@get_vehicl:
  000ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  000f3	83 c2 3f	 add	 edx, 63			; 0000003fH
  000f6	52		 push	 edx
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00107	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv128[ebp], 0
$LN37@get_vehicl:
  00111	b9 01 00 00 00	 mov	 ecx, 1
  00116	85 c9		 test	 ecx, ecx
  00118	74 0c		 je	 SHORT $LN38@get_vehicl
  0011a	c7 85 5c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv136[ebp], 25 ; 00000019H
  00124	eb 24		 jmp	 SHORT $LN39@get_vehicl
$LN38@get_vehicl:
  00126	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0012c	83 c2 3f	 add	 edx, 63			; 0000003fH
  0012f	52		 push	 edx
  00130	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00135	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00140	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN39@get_vehicl:
  0014a	6a 19		 push	 25			; 00000019H
  0014c	8b 4d dc	 mov	 ecx, DWORD PTR _group$[ebp]
  0014f	51		 push	 ecx
  00150	69 95 60 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv128[ebp], 180
  0015a	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv136[ebp]
  00160	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00167	ff d1		 call	 ecx
  00169	89 45 d4	 mov	 DWORD PTR _member$[ebp], eax
$LN2@get_vehicl:

; 859  : 
; 860  : 	while (member)

  0016c	83 7d d4 00	 cmp	 DWORD PTR _member$[ebp], 0
  00170	0f 84 45 01 00
	00		 je	 $LN3@get_vehicl

; 861  : 	{
; 862  : 		source_surface_scan_range = max (source_surface_scan_range, get_local_entity_float_value (member, FLOAT_TYPE_SURFACE_SCAN_RANGE));

  00176	83 7d d4 00	 cmp	 DWORD PTR _member$[ebp], 0
  0017a	74 0d		 je	 SHORT $LN40@get_vehicl
  0017c	8b 45 d4	 mov	 eax, DWORD PTR _member$[ebp]
  0017f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00181	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv150[ebp], ecx
  00187	eb 24		 jmp	 SHORT $LN41@get_vehicl
$LN40@get_vehicl:
  00189	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0018f	83 c2 43	 add	 edx, 67			; 00000043H
  00192	52		 push	 edx
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a3	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN41@get_vehicl:
  001ad	b9 01 00 00 00	 mov	 ecx, 1
  001b2	85 c9		 test	 ecx, ecx
  001b4	74 0c		 je	 SHORT $LN42@get_vehicl
  001b6	c7 85 5c ff ff
	ff 7f 00 00 00	 mov	 DWORD PTR tv158[ebp], 127 ; 0000007fH
  001c0	eb 24		 jmp	 SHORT $LN43@get_vehicl
$LN42@get_vehicl:
  001c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  001c8	83 c2 43	 add	 edx, 67			; 00000043H
  001cb	52		 push	 edx
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001dc	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN43@get_vehicl:
  001e6	6a 7f		 push	 127			; 0000007fH
  001e8	8b 4d d4	 mov	 ecx, DWORD PTR _member$[ebp]
  001eb	51		 push	 ecx
  001ec	69 95 60 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv150[ebp], 700
  001f6	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv158[ebp]
  001fc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00203	ff d1		 call	 ecx
  00205	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR $T1[ebp]
  0020b	8d 95 64 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00211	52		 push	 edx
  00212	8d 45 b8	 lea	 eax, DWORD PTR _source_surface_scan_range$[ebp]
  00215	50		 push	 eax
  00216	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0021b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0021f	f3 0f 11 45 b8	 movss	 DWORD PTR _source_surface_scan_range$[ebp], xmm0

; 863  : 
; 864  : 		member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  00224	83 7d d4 00	 cmp	 DWORD PTR _member$[ebp], 0
  00228	74 0d		 je	 SHORT $LN44@get_vehicl
  0022a	8b 45 d4	 mov	 eax, DWORD PTR _member$[ebp]
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv173[ebp], ecx
  00235	eb 24		 jmp	 SHORT $LN45@get_vehicl
$LN44@get_vehicl:
  00237	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0023d	83 c2 45	 add	 edx, 69			; 00000045H
  00240	52		 push	 edx
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0024b	50		 push	 eax
  0024c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00251	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv173[ebp], 0
$LN45@get_vehicl:
  0025b	b9 01 00 00 00	 mov	 ecx, 1
  00260	85 c9		 test	 ecx, ecx
  00262	74 0c		 je	 SHORT $LN46@get_vehicl
  00264	c7 85 5c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv181[ebp], 25 ; 00000019H
  0026e	eb 24		 jmp	 SHORT $LN47@get_vehicl
$LN46@get_vehicl:
  00270	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00276	83 c2 45	 add	 edx, 69			; 00000045H
  00279	52		 push	 edx
  0027a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028a	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
$LN47@get_vehicl:
  00294	6a 19		 push	 25			; 00000019H
  00296	8b 4d d4	 mov	 ecx, DWORD PTR _member$[ebp]
  00299	51		 push	 ecx
  0029a	69 95 60 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv173[ebp], 180
  002a4	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv181[ebp]
  002aa	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002b1	ff d1		 call	 ecx
  002b3	89 45 d4	 mov	 DWORD PTR _member$[ebp], eax

; 865  : 	}

  002b6	e9 b1 fe ff ff	 jmp	 $LN2@get_vehicl
$LN3@get_vehicl:

; 866  : 
; 867  : 	best_target = NULL;

  002bb	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _best_target$[ebp], 0

; 868  : 
; 869  : 	best_group = NULL;

  002c2	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _best_group$[ebp], 0

; 870  : 
; 871  : 	group = NULL;

  002c9	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _group$[ebp], 0

; 872  : 
; 873  : 	if (source_surface_scan_range > 0.0)

  002d0	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  002d5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  002dd	0f 86 af 0a 00
	00		 jbe	 $LN15@get_vehicl

; 874  : 	{
; 875  : 		#if TEXT_DEBUG_MODULE
; 876  : 
; 877  : 		if (debug)
; 878  : 		{
; 879  : 			debug_log ("SURFACE TO SURFACE ->SOURCE: %s (index = %d), RANGE %.1f", get_local_entity_string (source, STRING_TYPE_FULL_NAME), get_local_entity_index (source), source_surface_scan_range);
; 880  : 		}
; 881  : 
; 882  : 		#endif
; 883  : 
; 884  : 		source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  002e3	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  002e7	74 0d		 je	 SHORT $LN48@get_vehicl
  002e9	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  002ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ee	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv195[ebp], ecx
  002f4	eb 24		 jmp	 SHORT $LN49@get_vehicl
$LN48@get_vehicl:
  002f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  002fc	83 c2 59	 add	 edx, 89			; 00000059H
  002ff	52		 push	 edx
  00300	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00305	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0030a	50		 push	 eax
  0030b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00310	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN49@get_vehicl:
  0031a	b9 01 00 00 00	 mov	 ecx, 1
  0031f	85 c9		 test	 ecx, ecx
  00321	74 0c		 je	 SHORT $LN50@get_vehicl
  00323	c7 85 5c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv203[ebp], 8
  0032d	eb 24		 jmp	 SHORT $LN51@get_vehicl
$LN50@get_vehicl:
  0032f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00335	83 c2 59	 add	 edx, 89			; 00000059H
  00338	52		 push	 edx
  00339	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00349	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv203[ebp], 0
$LN51@get_vehicl:
  00353	6a 08		 push	 8
  00355	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00358	51		 push	 ecx
  00359	6b 95 60 ff ff
	ff 60		 imul	 edx, DWORD PTR tv195[ebp], 96
  00360	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv203[ebp]
  00366	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0036d	ff d1		 call	 ecx
  0036f	89 45 c0	 mov	 DWORD PTR _source_position$[ebp], eax

; 885  : 
; 886  : 		source_side = (entity_sides) get_local_entity_int_value (source, INT_TYPE_SIDE);

  00372	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00376	74 0d		 je	 SHORT $LN52@get_vehicl
  00378	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0037b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037d	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv215[ebp], ecx
  00383	eb 24		 jmp	 SHORT $LN53@get_vehicl
$LN52@get_vehicl:
  00385	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0038b	83 c2 5b	 add	 edx, 91			; 0000005bH
  0038e	52		 push	 edx
  0038f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00394	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00399	50		 push	 eax
  0039a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039f	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv215[ebp], 0
$LN53@get_vehicl:
  003a9	b9 01 00 00 00	 mov	 ecx, 1
  003ae	85 c9		 test	 ecx, ecx
  003b0	74 0c		 je	 SHORT $LN54@get_vehicl
  003b2	c7 85 5c ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv223[ebp], 187 ; 000000bbH
  003bc	eb 24		 jmp	 SHORT $LN55@get_vehicl
$LN54@get_vehicl:
  003be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  003c4	83 c2 5b	 add	 edx, 91			; 0000005bH
  003c7	52		 push	 edx
  003c8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003d2	50		 push	 eax
  003d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d8	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv223[ebp], 0
$LN55@get_vehicl:
  003e2	68 bb 00 00 00	 push	 187			; 000000bbH
  003e7	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  003ea	51		 push	 ecx
  003eb	69 95 60 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv215[ebp], 1116
  003f5	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv223[ebp]
  003fb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00402	ff d1		 call	 ecx
  00404	89 45 c4	 mov	 DWORD PTR _source_side$[ebp], eax

; 887  : 
; 888  : 		////////////////////////////////////////
; 889  : 		//
; 890  : 		// get sector scan area
; 891  : 		//
; 892  : 		////////////////////////////////////////
; 893  : 
; 894  : 		//DEBUG// cull down given field of view?
; 895  : 
; 896  : 		get_x_sector (x_sec_org, source_position->x);

  00407	8d 45 fc	 lea	 eax, DWORD PTR _x_sec_org$[ebp]
  0040a	50		 push	 eax
  0040b	8b 4d c0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0040e	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00412	51		 push	 ecx
  00413	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00418	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0041d	8b 45 fc	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  00420	99		 cdq
  00421	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00427	89 45 fc	 mov	 DWORD PTR _x_sec_org$[ebp], eax

; 897  : 		get_z_sector (z_sec_org, source_position->z);

  0042a	8d 45 f8	 lea	 eax, DWORD PTR _z_sec_org$[ebp]
  0042d	50		 push	 eax
  0042e	8b 4d c0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00431	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00436	51		 push	 ecx
  00437	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043c	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00441	8b 45 f8	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  00444	99		 cdq
  00445	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0044b	89 45 f8	 mov	 DWORD PTR _z_sec_org$[ebp], eax

; 898  : 
; 899  : 		ASSERT (sector_inside_map_area (x_sec_org, z_sec_org));

  0044e	8b 45 fc	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  00451	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  00457	7c 21		 jl	 SHORT $LN18@get_vehicl
  00459	8b 45 fc	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  0045c	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  00462	7f 16		 jg	 SHORT $LN18@get_vehicl
  00464	8b 45 f8	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  00467	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  0046d	7c 0b		 jl	 SHORT $LN18@get_vehicl
  0046f	8b 45 f8	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  00472	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  00478	7e 18		 jle	 SHORT $LN17@get_vehicl
$LN18@get_vehicl:
  0047a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0047f	83 c0 68	 add	 eax, 104		; 00000068H
  00482	50		 push	 eax
  00483	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00488	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@
  0048d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@get_vehicl:

; 900  : 
; 901  : 		get_x_sector (x_sec_min, source_position->x - source_surface_scan_range);

  00492	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  00495	50		 push	 eax
  00496	8b 4d c0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00499	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0049d	f3 0f 5c 45 b8	 subss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  004a2	51		 push	 ecx
  004a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a8	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  004ad	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  004b0	99		 cdq
  004b1	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  004b7	89 45 f4	 mov	 DWORD PTR _x_sec_min$[ebp], eax

; 902  : 		get_z_sector (z_sec_min, source_position->z - source_surface_scan_range);

  004ba	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  004bd	50		 push	 eax
  004be	8b 4d c0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  004c1	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  004c6	f3 0f 5c 45 b8	 subss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  004cb	51		 push	 ecx
  004cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d1	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  004d6	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  004d9	99		 cdq
  004da	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  004e0	89 45 f0	 mov	 DWORD PTR _z_sec_min$[ebp], eax

; 903  : 
; 904  : 		get_x_sector (x_sec_max, source_position->x + source_surface_scan_range);

  004e3	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  004e6	50		 push	 eax
  004e7	8b 4d c0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  004ea	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  004ee	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  004f3	51		 push	 ecx
  004f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f9	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  004fe	8b 45 ec	 mov	 eax, DWORD PTR _x_sec_max$[ebp]
  00501	99		 cdq
  00502	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00508	89 45 ec	 mov	 DWORD PTR _x_sec_max$[ebp], eax

; 905  : 		get_z_sector (z_sec_max, source_position->z + source_surface_scan_range);

  0050b	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  0050e	50		 push	 eax
  0050f	8b 4d c0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00512	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00517	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  0051c	51		 push	 ecx
  0051d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00522	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00527	8b 45 e8	 mov	 eax, DWORD PTR _z_sec_max$[ebp]
  0052a	99		 cdq
  0052b	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00531	89 45 e8	 mov	 DWORD PTR _z_sec_max$[ebp], eax

; 906  : 
; 907  : 		x_sec_min = max (x_sec_min, MIN_MAP_X_SECTOR);

  00534	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  00539	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  0053c	50		 push	 eax
  0053d	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00542	8b 08		 mov	 ecx, DWORD PTR [eax]
  00544	89 4d f4	 mov	 DWORD PTR _x_sec_min$[ebp], ecx

; 908  : 		z_sec_min = max (z_sec_min, MIN_MAP_Z_SECTOR);

  00547	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  0054c	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  0054f	50		 push	 eax
  00550	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00555	8b 08		 mov	 ecx, DWORD PTR [eax]
  00557	89 4d f0	 mov	 DWORD PTR _z_sec_min$[ebp], ecx

; 909  : 
; 910  : 		x_sec_max = min (x_sec_max, MAX_MAP_X_SECTOR);

  0055a	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  0055f	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  00562	50		 push	 eax
  00563	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00568	8b 08		 mov	 ecx, DWORD PTR [eax]
  0056a	89 4d ec	 mov	 DWORD PTR _x_sec_max$[ebp], ecx

; 911  : 		z_sec_max = min (z_sec_max, MAX_MAP_Z_SECTOR);

  0056d	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  00572	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  00575	50		 push	 eax
  00576	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  0057b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0057d	89 4d e8	 mov	 DWORD PTR _z_sec_max$[ebp], ecx

; 912  : 
; 913  : 		////////////////////////////////////////
; 914  : 		//
; 915  : 		// sector scan
; 916  : 		//
; 917  : 		////////////////////////////////////////
; 918  : 
; 919  : 		best_target_select_criteria = 0.0;

  00580	0f 57 c0	 xorps	 xmm0, xmm0
  00583	f3 0f 11 45 ac	 movss	 DWORD PTR _best_target_select_criteria$[ebp], xmm0

; 920  : 
; 921  : 		for (z_sec = z_sec_min; z_sec <= z_sec_max; z_sec++)

  00588	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  0058b	89 45 e0	 mov	 DWORD PTR _z_sec$[ebp], eax
  0058e	eb 09		 jmp	 SHORT $LN6@get_vehicl
$LN4@get_vehicl:
  00590	8b 45 e0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00593	83 c0 01	 add	 eax, 1
  00596	89 45 e0	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN6@get_vehicl:
  00599	8b 45 e0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0059c	3b 45 e8	 cmp	 eax, DWORD PTR _z_sec_max$[ebp]
  0059f	0f 8f ed 07 00
	00		 jg	 $LN5@get_vehicl

; 922  : 		{
; 923  : 			for (x_sec = x_sec_min; x_sec <= x_sec_max; x_sec++)

  005a5	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  005a8	89 45 e4	 mov	 DWORD PTR _x_sec$[ebp], eax
  005ab	eb 09		 jmp	 SHORT $LN9@get_vehicl
$LN7@get_vehicl:
  005ad	8b 45 e4	 mov	 eax, DWORD PTR _x_sec$[ebp]
  005b0	83 c0 01	 add	 eax, 1
  005b3	89 45 e4	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN9@get_vehicl:
  005b6	8b 45 e4	 mov	 eax, DWORD PTR _x_sec$[ebp]
  005b9	3b 45 ec	 cmp	 eax, DWORD PTR _x_sec_max$[ebp]
  005bc	0f 8f cb 07 00
	00		 jg	 $LN8@get_vehicl

; 924  : 			{
; 925  : 				sec = get_local_raw_sector_entity (x_sec, z_sec);

  005c2	8b 45 e0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  005c5	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  005cc	03 45 e4	 add	 eax, DWORD PTR _x_sec$[ebp]
  005cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  005d5	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  005d9	74 1d		 je	 SHORT $LN56@get_vehicl
  005db	8b 55 e0	 mov	 edx, DWORD PTR _z_sec$[ebp]
  005de	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  005e5	03 55 e4	 add	 edx, DWORD PTR _x_sec$[ebp]
  005e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  005ed	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  005f0	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv300[ebp], ecx
  005f6	eb 27		 jmp	 SHORT $LN57@get_vehicl
$LN56@get_vehicl:
  005f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  005fe	81 c2 82 00 00
	00		 add	 edx, 130		; 00000082H
  00604	52		 push	 edx
  00605	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0060a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0060f	50		 push	 eax
  00610	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00615	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv300[ebp], 0
$LN57@get_vehicl:
  0061f	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv300[ebp]
  00625	89 4d d0	 mov	 DWORD PTR _sec$[ebp], ecx

; 926  : 
; 927  : 				target = get_local_entity_first_child (sec, LIST_TYPE_SECTOR);

  00628	83 7d d0 00	 cmp	 DWORD PTR _sec$[ebp], 0
  0062c	74 0d		 je	 SHORT $LN58@get_vehicl
  0062e	8b 45 d0	 mov	 eax, DWORD PTR _sec$[ebp]
  00631	8b 08		 mov	 ecx, DWORD PTR [eax]
  00633	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv307[ebp], ecx
  00639	eb 27		 jmp	 SHORT $LN59@get_vehicl
$LN58@get_vehicl:
  0063b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00641	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00647	52		 push	 edx
  00648	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0064d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00652	50		 push	 eax
  00653	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00658	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv307[ebp], 0
$LN59@get_vehicl:
  00662	b9 01 00 00 00	 mov	 ecx, 1
  00667	85 c9		 test	 ecx, ecx
  00669	74 0c		 je	 SHORT $LN60@get_vehicl
  0066b	c7 85 5c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv315[ebp], 33 ; 00000021H
  00675	eb 27		 jmp	 SHORT $LN61@get_vehicl
$LN60@get_vehicl:
  00677	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0067d	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00683	52		 push	 edx
  00684	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00689	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0068e	50		 push	 eax
  0068f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00694	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv315[ebp], 0
$LN61@get_vehicl:
  0069e	6a 21		 push	 33			; 00000021H
  006a0	8b 4d d0	 mov	 ecx, DWORD PTR _sec$[ebp]
  006a3	51		 push	 ecx
  006a4	69 95 60 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv307[ebp], 180
  006ae	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv315[ebp]
  006b4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  006bb	ff d1		 call	 ecx
  006bd	89 45 d8	 mov	 DWORD PTR _target$[ebp], eax

; 928  : 
; 929  : 				if (target)

  006c0	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  006c4	0f 84 be 06 00
	00		 je	 $LN11@get_vehicl
$LN12@get_vehicl:

; 930  : 				{
; 931  : 					do
; 932  : 					{
; 933  : 						////////////////////////////////////////
; 934  : 						//
; 935  : 						// simple target select criteria
; 936  : 						//
; 937  : 						////////////////////////////////////////
; 938  : 
; 939  : 						if (target == source)

  006ca	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  006cd	3b 45 08	 cmp	 eax, DWORD PTR _source$[ebp]
  006d0	75 05		 jne	 SHORT $LN20@get_vehicl

; 940  : 						{
; 941  : 							continue;

  006d2	e9 0f 06 00 00	 jmp	 $LN30@get_vehicl
$LN20@get_vehicl:

; 942  : 						}
; 943  : 
; 944  : 						//
; 945  : 						// Allow vehicles and aircraft....
; 946  : 						//
; 947  : 						
; 948  : 						if ((!get_local_entity_int_value (target, INT_TYPE_IDENTIFY_AIRCRAFT)) && 

  006d7	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  006db	74 0d		 je	 SHORT $LN62@get_vehicl
  006dd	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  006e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  006e2	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv328[ebp], ecx
  006e8	eb 20		 jmp	 SHORT $LN63@get_vehicl
$LN62@get_vehicl:
  006ea	68 b4 03 00 00	 push	 948			; 000003b4H
  006ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  006f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006fa	52		 push	 edx
  006fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00700	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv328[ebp], 0
$LN63@get_vehicl:
  0070a	b8 01 00 00 00	 mov	 eax, 1
  0070f	85 c0		 test	 eax, eax
  00711	74 0c		 je	 SHORT $LN64@get_vehicl
  00713	c7 85 5c ff ff
	ff 57 00 00 00	 mov	 DWORD PTR tv335[ebp], 87 ; 00000057H
  0071d	eb 20		 jmp	 SHORT $LN65@get_vehicl
$LN64@get_vehicl:
  0071f	68 b4 03 00 00	 push	 948			; 000003b4H
  00724	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00729	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0072f	51		 push	 ecx
  00730	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00735	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv335[ebp], 0
$LN65@get_vehicl:
  0073f	6a 57		 push	 87			; 00000057H
  00741	8b 55 d8	 mov	 edx, DWORD PTR _target$[ebp]
  00744	52		 push	 edx
  00745	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv328[ebp], 1116
  0074f	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv335[ebp]
  00755	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0075c	ff d2		 call	 edx
  0075e	85 c0		 test	 eax, eax
  00760	0f 85 90 00 00
	00		 jne	 $LN21@get_vehicl
  00766	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  0076a	74 0d		 je	 SHORT $LN66@get_vehicl
  0076c	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  0076f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00771	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv347[ebp], ecx
  00777	eb 20		 jmp	 SHORT $LN67@get_vehicl
$LN66@get_vehicl:
  00779	68 b5 03 00 00	 push	 949			; 000003b5H
  0077e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00783	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00789	52		 push	 edx
  0078a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0078f	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv347[ebp], 0
$LN67@get_vehicl:
  00799	b8 01 00 00 00	 mov	 eax, 1
  0079e	85 c0		 test	 eax, eax
  007a0	74 0c		 je	 SHORT $LN68@get_vehicl
  007a2	c7 85 5c ff ff
	ff 60 00 00 00	 mov	 DWORD PTR tv354[ebp], 96 ; 00000060H
  007ac	eb 20		 jmp	 SHORT $LN69@get_vehicl
$LN68@get_vehicl:
  007ae	68 b5 03 00 00	 push	 949			; 000003b5H
  007b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007be	51		 push	 ecx
  007bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007c4	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv354[ebp], 0
$LN69@get_vehicl:
  007ce	6a 60		 push	 96			; 00000060H
  007d0	8b 55 d8	 mov	 edx, DWORD PTR _target$[ebp]
  007d3	52		 push	 edx
  007d4	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv347[ebp], 1116
  007de	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv354[ebp]
  007e4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  007eb	ff d2		 call	 edx
  007ed	85 c0		 test	 eax, eax
  007ef	75 05		 jne	 SHORT $LN21@get_vehicl

; 949  : 								(!get_local_entity_int_value (target, INT_TYPE_IDENTIFY_VEHICLE)))
; 950  : 						{
; 951  : 							continue;

  007f1	e9 f0 04 00 00	 jmp	 $LN30@get_vehicl
$LN21@get_vehicl:

; 952  : 						}
; 953  : 
; 954  : 						//
; 955  : 						// ... But only aircraft that are on the ground
; 956  : 						//
; 957  : 
; 958  : 						if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  007f6	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  007fa	74 0d		 je	 SHORT $LN70@get_vehicl
  007fc	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  007ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00801	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv366[ebp], ecx
  00807	eb 20		 jmp	 SHORT $LN71@get_vehicl
$LN70@get_vehicl:
  00809	68 be 03 00 00	 push	 958			; 000003beH
  0080e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00813	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00819	52		 push	 edx
  0081a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0081f	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv366[ebp], 0
$LN71@get_vehicl:
  00829	b8 01 00 00 00	 mov	 eax, 1
  0082e	85 c0		 test	 eax, eax
  00830	74 0c		 je	 SHORT $LN72@get_vehicl
  00832	c7 85 5c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv373[ebp], 4
  0083c	eb 20		 jmp	 SHORT $LN73@get_vehicl
$LN72@get_vehicl:
  0083e	68 be 03 00 00	 push	 958			; 000003beH
  00843	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00848	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0084e	51		 push	 ecx
  0084f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00854	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv373[ebp], 0
$LN73@get_vehicl:
  0085e	6a 04		 push	 4
  00860	8b 55 d8	 mov	 edx, DWORD PTR _target$[ebp]
  00863	52		 push	 edx
  00864	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv366[ebp], 1116
  0086e	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv373[ebp]
  00874	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0087b	ff d2		 call	 edx
  0087d	85 c0		 test	 eax, eax
  0087f	74 05		 je	 SHORT $LN22@get_vehicl

; 959  : 						{
; 960  : 							continue;

  00881	e9 60 04 00 00	 jmp	 $LN30@get_vehicl
$LN22@get_vehicl:

; 961  : 						}
; 962  : 
; 963  : 						if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) == TARGET_TYPE_INVALID)

  00886	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  0088a	74 0d		 je	 SHORT $LN74@get_vehicl
  0088c	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  0088f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00891	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv385[ebp], ecx
  00897	eb 20		 jmp	 SHORT $LN75@get_vehicl
$LN74@get_vehicl:
  00899	68 c3 03 00 00	 push	 963			; 000003c3H
  0089e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  008a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008a9	52		 push	 edx
  008aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008af	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv385[ebp], 0
$LN75@get_vehicl:
  008b9	b8 01 00 00 00	 mov	 eax, 1
  008be	85 c0		 test	 eax, eax
  008c0	74 0c		 je	 SHORT $LN76@get_vehicl
  008c2	c7 85 5c ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv392[ebp], 214 ; 000000d6H
  008cc	eb 20		 jmp	 SHORT $LN77@get_vehicl
$LN76@get_vehicl:
  008ce	68 c3 03 00 00	 push	 963			; 000003c3H
  008d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  008d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008de	51		 push	 ecx
  008df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e4	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv392[ebp], 0
$LN77@get_vehicl:
  008ee	68 d6 00 00 00	 push	 214			; 000000d6H
  008f3	8b 55 d8	 mov	 edx, DWORD PTR _target$[ebp]
  008f6	52		 push	 edx
  008f7	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv385[ebp], 1116
  00901	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv392[ebp]
  00907	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0090e	ff d2		 call	 edx
  00910	85 c0		 test	 eax, eax
  00912	75 05		 jne	 SHORT $LN23@get_vehicl

; 964  : 						{
; 965  : 							continue;

  00914	e9 cd 03 00 00	 jmp	 $LN30@get_vehicl
$LN23@get_vehicl:

; 966  : 						}
; 967  : 
; 968  : 						group = get_local_entity_parent (target, LIST_TYPE_MEMBER);

  00919	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  0091d	74 0d		 je	 SHORT $LN78@get_vehicl
  0091f	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  00922	8b 08		 mov	 ecx, DWORD PTR [eax]
  00924	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv405[ebp], ecx
  0092a	eb 27		 jmp	 SHORT $LN79@get_vehicl
$LN78@get_vehicl:
  0092c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00932	81 c2 ad 00 00
	00		 add	 edx, 173		; 000000adH
  00938	52		 push	 edx
  00939	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0093e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00943	50		 push	 eax
  00944	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00949	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv405[ebp], 0
$LN79@get_vehicl:
  00953	b9 01 00 00 00	 mov	 ecx, 1
  00958	85 c9		 test	 ecx, ecx
  0095a	74 0c		 je	 SHORT $LN80@get_vehicl
  0095c	c7 85 5c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv413[ebp], 25 ; 00000019H
  00966	eb 27		 jmp	 SHORT $LN81@get_vehicl
$LN80@get_vehicl:
  00968	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0096e	81 c2 ad 00 00
	00		 add	 edx, 173		; 000000adH
  00974	52		 push	 edx
  00975	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0097a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0097f	50		 push	 eax
  00980	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00985	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv413[ebp], 0
$LN81@get_vehicl:
  0098f	6a 19		 push	 25			; 00000019H
  00991	8b 4d d8	 mov	 ecx, DWORD PTR _target$[ebp]
  00994	51		 push	 ecx
  00995	69 95 60 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv405[ebp], 180
  0099f	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv413[ebp]
  009a5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  009ac	ff d1		 call	 ecx
  009ae	89 45 dc	 mov	 DWORD PTR _group$[ebp], eax

; 969  : 
; 970  : 						if (!group)

  009b1	83 7d dc 00	 cmp	 DWORD PTR _group$[ebp], 0
  009b5	75 05		 jne	 SHORT $LN24@get_vehicl

; 971  : 						{
; 972  : 							continue;

  009b7	e9 2a 03 00 00	 jmp	 $LN30@get_vehicl
$LN24@get_vehicl:

; 973  : 						}
; 974  : 
; 975  : 						if (group == best_group)

  009bc	8b 45 dc	 mov	 eax, DWORD PTR _group$[ebp]
  009bf	3b 45 cc	 cmp	 eax, DWORD PTR _best_group$[ebp]
  009c2	75 05		 jne	 SHORT $LN25@get_vehicl

; 976  : 						{
; 977  : 							continue;

  009c4	e9 1d 03 00 00	 jmp	 $LN30@get_vehicl
$LN25@get_vehicl:

; 978  : 						}
; 979  : 
; 980  : 						if (!get_local_entity_int_value (target, INT_TYPE_ALIVE))

  009c9	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  009cd	74 0d		 je	 SHORT $LN82@get_vehicl
  009cf	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  009d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  009d4	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv426[ebp], ecx
  009da	eb 20		 jmp	 SHORT $LN83@get_vehicl
$LN82@get_vehicl:
  009dc	68 d4 03 00 00	 push	 980			; 000003d4H
  009e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  009e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009ec	52		 push	 edx
  009ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f2	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv426[ebp], 0
$LN83@get_vehicl:
  009fc	b8 01 00 00 00	 mov	 eax, 1
  00a01	85 c0		 test	 eax, eax
  00a03	74 0c		 je	 SHORT $LN84@get_vehicl
  00a05	c7 85 5c ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv433[ebp], 7
  00a0f	eb 20		 jmp	 SHORT $LN85@get_vehicl
$LN84@get_vehicl:
  00a11	68 d4 03 00 00	 push	 980			; 000003d4H
  00a16	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a1b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a21	51		 push	 ecx
  00a22	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a27	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv433[ebp], 0
$LN85@get_vehicl:
  00a31	6a 07		 push	 7
  00a33	8b 55 d8	 mov	 edx, DWORD PTR _target$[ebp]
  00a36	52		 push	 edx
  00a37	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv426[ebp], 1116
  00a41	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv433[ebp]
  00a47	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a4e	ff d2		 call	 edx
  00a50	85 c0		 test	 eax, eax
  00a52	75 05		 jne	 SHORT $LN26@get_vehicl

; 981  : 						{
; 982  : 							continue;

  00a54	e9 8d 02 00 00	 jmp	 $LN30@get_vehicl
$LN26@get_vehicl:

; 983  : 						}
; 984  : 
; 985  : 						if (get_local_entity_int_value (target, INT_TYPE_SIDE) == source_side)

  00a59	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  00a5d	74 0d		 je	 SHORT $LN86@get_vehicl
  00a5f	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  00a62	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a64	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv445[ebp], ecx
  00a6a	eb 20		 jmp	 SHORT $LN87@get_vehicl
$LN86@get_vehicl:
  00a6c	68 d9 03 00 00	 push	 985			; 000003d9H
  00a71	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a76	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a7c	52		 push	 edx
  00a7d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a82	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv445[ebp], 0
$LN87@get_vehicl:
  00a8c	b8 01 00 00 00	 mov	 eax, 1
  00a91	85 c0		 test	 eax, eax
  00a93	74 0c		 je	 SHORT $LN88@get_vehicl
  00a95	c7 85 5c ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv452[ebp], 187 ; 000000bbH
  00a9f	eb 20		 jmp	 SHORT $LN89@get_vehicl
$LN88@get_vehicl:
  00aa1	68 d9 03 00 00	 push	 985			; 000003d9H
  00aa6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ab1	51		 push	 ecx
  00ab2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ab7	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv452[ebp], 0
$LN89@get_vehicl:
  00ac1	68 bb 00 00 00	 push	 187			; 000000bbH
  00ac6	8b 55 d8	 mov	 edx, DWORD PTR _target$[ebp]
  00ac9	52		 push	 edx
  00aca	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv445[ebp], 1116
  00ad4	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv452[ebp]
  00ada	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ae1	ff d2		 call	 edx
  00ae3	3b 45 c4	 cmp	 eax, DWORD PTR _source_side$[ebp]
  00ae6	75 05		 jne	 SHORT $LN27@get_vehicl

; 986  : 						{
; 987  : 							continue;

  00ae8	e9 f9 01 00 00	 jmp	 $LN30@get_vehicl
$LN27@get_vehicl:

; 988  : 						}
; 989  : 
; 990  : 						(*target_count) ++;

  00aed	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  00af0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00af2	83 c1 01	 add	 ecx, 1
  00af5	8b 55 0c	 mov	 edx, DWORD PTR _target_count$[ebp]
  00af8	89 0a		 mov	 DWORD PTR [edx], ecx

; 991  : 
; 992  : 						////////////////////////////////////////
; 993  : 						//
; 994  : 						// Source specific target selection
; 995  : 						//
; 996  : 						////////////////////////////////////////
; 997  : 
; 998  : 						//DEBUG// use squared range (faster and more accurate, weapons need to store squared min/max ranges)
; 999  : 
; 1000 : 						target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  00afa	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  00afe	74 0d		 je	 SHORT $LN90@get_vehicl
  00b00	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  00b03	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b05	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv466[ebp], ecx
  00b0b	eb 27		 jmp	 SHORT $LN91@get_vehicl
$LN90@get_vehicl:
  00b0d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00b13	81 c2 cd 00 00
	00		 add	 edx, 205		; 000000cdH
  00b19	52		 push	 edx
  00b1a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b24	50		 push	 eax
  00b25	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b2a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv466[ebp], 0
$LN91@get_vehicl:
  00b34	b9 01 00 00 00	 mov	 ecx, 1
  00b39	85 c9		 test	 ecx, ecx
  00b3b	74 0c		 je	 SHORT $LN92@get_vehicl
  00b3d	c7 85 5c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv474[ebp], 8
  00b47	eb 27		 jmp	 SHORT $LN93@get_vehicl
$LN92@get_vehicl:
  00b49	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00b4f	81 c2 cd 00 00
	00		 add	 edx, 205		; 000000cdH
  00b55	52		 push	 edx
  00b56	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b5b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00b60	50		 push	 eax
  00b61	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b66	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv474[ebp], 0
$LN93@get_vehicl:
  00b70	6a 08		 push	 8
  00b72	8b 4d d8	 mov	 ecx, DWORD PTR _target$[ebp]
  00b75	51		 push	 ecx
  00b76	6b 95 60 ff ff
	ff 60		 imul	 edx, DWORD PTR tv466[ebp], 96
  00b7d	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv474[ebp]
  00b83	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00b8a	ff d1		 call	 ecx
  00b8c	89 45 bc	 mov	 DWORD PTR _target_position$[ebp], eax

; 1001 : 
; 1002 : 						target_range = get_approx_3d_range (source_position, target_position);

  00b8f	8b 45 bc	 mov	 eax, DWORD PTR _target_position$[ebp]
  00b92	50		 push	 eax
  00b93	8b 4d c0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00b96	51		 push	 ecx
  00b97	e8 00 00 00 00	 call	 ?get_approx_3d_range@@YGMPBUVEC3D@@0@Z ; get_approx_3d_range
  00b9c	d9 5d b4	 fstp	 DWORD PTR _target_range$[ebp]

; 1003 : 
; 1004 : 						if (target_range > source_surface_scan_range)

  00b9f	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00ba4	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  00ba8	76 05		 jbe	 SHORT $LN28@get_vehicl

; 1005 : 						{
; 1006 : 							continue;

  00baa	e9 37 01 00 00	 jmp	 $LN30@get_vehicl
$LN28@get_vehicl:

; 1007 : 						}
; 1008 : 
; 1009 : 						//DEBUG// use weapon lock (min/max range etc.)
; 1010 : 
; 1011 : 						if (target_range < 100.0)

  00baf	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  00bb4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  00bbc	66 0f 2f c8	 comisd	 xmm1, xmm0
  00bc0	76 05		 jbe	 SHORT $LN29@get_vehicl

; 1012 : 						{
; 1013 : 							continue;

  00bc2	e9 1f 01 00 00	 jmp	 $LN30@get_vehicl
$LN29@get_vehicl:

; 1014 : 						}
; 1015 : 
; 1016 : 						////////////////////////////////////////
; 1017 : 						//
; 1018 : 						// weighted target select criteria
; 1019 : 						//
; 1020 : 						////////////////////////////////////////
; 1021 : 
; 1022 : 						#if TEXT_DEBUG_MODULE
; 1023 : 
; 1024 : 						if (debug)
; 1025 : 						{
; 1026 : 							debug_log ("--->TARGET: %s (index = %d)", get_local_entity_type_name (target), get_local_entity_index (target));
; 1027 : 						}
; 1028 : 
; 1029 : 						#endif
; 1030 : 
; 1031 : 						////////////////////////////////////////
; 1032 : 
; 1033 : 						target_select_criteria = 0.0;

  00bc7	0f 57 c0	 xorps	 xmm0, xmm0
  00bca	f3 0f 11 45 b0	 movss	 DWORD PTR _target_select_criteria$[ebp], xmm0

; 1034 : 
; 1035 : 						////////////////////////////////////////
; 1036 : 
; 1037 : 						weighting = ((source_surface_scan_range - target_range) / source_surface_scan_range) * TARGET_RANGE_WEIGHTING;

  00bcf	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  00bd4	f3 0f 5c 45 b4	 subss	 xmm0, DWORD PTR _target_range$[ebp]
  00bd9	f3 0f 5e 45 b8	 divss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  00bde	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00be2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00bea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bee	f3 0f 11 45 a8	 movss	 DWORD PTR _weighting$[ebp], xmm0

; 1038 : 
; 1039 : 						#if TEXT_DEBUG_MODULE
; 1040 : 
; 1041 : 						if (debug)
; 1042 : 						{
; 1043 : 							debug_log ("----->target range weighting = %.2f", weighting);
; 1044 : 						}
; 1045 : 
; 1046 : 						#endif
; 1047 : 
; 1048 : 						target_select_criteria += weighting;

  00bf3	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  00bf8	f3 0f 58 45 a8	 addss	 xmm0, DWORD PTR _weighting$[ebp]
  00bfd	f3 0f 11 45 b0	 movss	 DWORD PTR _target_select_criteria$[ebp], xmm0

; 1049 : 
; 1050 : 						////////////////////////////////////////
; 1051 : 
; 1052 : 						weighting = get_local_entity_float_value (target, FLOAT_TYPE_POTENTIAL_SURFACE_TO_SURFACE_THREAT) * TARGET_POTENTIAL_THREAT_WEIGHTING;

  00c02	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  00c06	74 0d		 je	 SHORT $LN94@get_vehicl
  00c08	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  00c0b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c0d	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv498[ebp], ecx
  00c13	eb 27		 jmp	 SHORT $LN95@get_vehicl
$LN94@get_vehicl:
  00c15	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00c1b	81 c2 01 01 00
	00		 add	 edx, 257		; 00000101H
  00c21	52		 push	 edx
  00c22	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c27	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c2c	50		 push	 eax
  00c2d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c32	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv498[ebp], 0
$LN95@get_vehicl:
  00c3c	b9 01 00 00 00	 mov	 ecx, 1
  00c41	85 c9		 test	 ecx, ecx
  00c43	74 0c		 je	 SHORT $LN96@get_vehicl
  00c45	c7 85 5c ff ff
	ff 60 00 00 00	 mov	 DWORD PTR tv506[ebp], 96 ; 00000060H
  00c4f	eb 27		 jmp	 SHORT $LN97@get_vehicl
$LN96@get_vehicl:
  00c51	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00c57	81 c2 01 01 00
	00		 add	 edx, 257		; 00000101H
  00c5d	52		 push	 edx
  00c5e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00c68	50		 push	 eax
  00c69	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c6e	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv506[ebp], 0
$LN97@get_vehicl:
  00c78	6a 60		 push	 96			; 00000060H
  00c7a	8b 4d d8	 mov	 ecx, DWORD PTR _target$[ebp]
  00c7d	51		 push	 ecx
  00c7e	69 95 60 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv498[ebp], 700
  00c88	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv506[ebp]
  00c8e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00c95	ff d1		 call	 ecx
  00c97	dd 9d 54 ff ff
	ff		 fstp	 QWORD PTR tv807[ebp]
  00c9d	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv807[ebp]
  00ca5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00cad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cb1	f3 0f 11 45 a8	 movss	 DWORD PTR _weighting$[ebp], xmm0

; 1053 : 
; 1054 : 						#if TEXT_DEBUG_MODULE
; 1055 : 
; 1056 : 						if (debug)
; 1057 : 						{
; 1058 : 							debug_log ("----->target potential threat weighting = %.2f", weighting);
; 1059 : 						}
; 1060 : 
; 1061 : 						#endif
; 1062 : 
; 1063 : 						target_select_criteria += weighting;

  00cb6	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  00cbb	f3 0f 58 45 a8	 addss	 xmm0, DWORD PTR _weighting$[ebp]
  00cc0	f3 0f 11 45 b0	 movss	 DWORD PTR _target_select_criteria$[ebp], xmm0

; 1064 : 
; 1065 : 						////////////////////////////////////////
; 1066 : 
; 1067 : 						//DEBUG// target/source aspect (target looking at source)
; 1068 : 
; 1069 : 						//DEBUG// target is targeting source
; 1070 : 
; 1071 : 						//DEBUG// target already target (persuers - possibly check if persuer ok to fire, check incoming weapons)
; 1072 : 
; 1073 : 						//DEBUG// weapon/target suitablity
; 1074 : 
; 1075 : 						//DEBUG// weapon lock ok (min range, max range, etc.)
; 1076 : 
; 1077 : 						//DEBUG// frand1 () * (1.0 - SOURCE force_morale?) * FORCE_MORALE_WEIGHTING?
; 1078 : 
; 1079 : 						////////////////////////////////////////
; 1080 : 
; 1081 : 						#if TEXT_DEBUG_MODULE
; 1082 : 
; 1083 : 						if (debug)
; 1084 : 						{
; 1085 : 							debug_log ("----->target select criteria = %.2f", target_select_criteria);
; 1086 : 						}
; 1087 : 
; 1088 : 						#endif
; 1089 : 
; 1090 : 						////////////////////////////////////////
; 1091 : 
; 1092 : 						if (target_select_criteria > best_target_select_criteria)

  00cc5	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  00cca	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _best_target_select_criteria$[ebp]
  00cce	76 16		 jbe	 SHORT $LN30@get_vehicl

; 1093 : 						{
; 1094 : 							best_target_select_criteria = target_select_criteria;

  00cd0	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  00cd5	f3 0f 11 45 ac	 movss	 DWORD PTR _best_target_select_criteria$[ebp], xmm0

; 1095 : 
; 1096 : 							best_target = target;

  00cda	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  00cdd	89 45 c8	 mov	 DWORD PTR _best_target$[ebp], eax

; 1097 : 
; 1098 : 							best_group = group;

  00ce0	8b 45 dc	 mov	 eax, DWORD PTR _group$[ebp]
  00ce3	89 45 cc	 mov	 DWORD PTR _best_group$[ebp], eax
$LN30@get_vehicl:

; 1099 : 						}
; 1100 : 					}
; 1101 : 					while (target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR));

  00ce6	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  00cea	74 0d		 je	 SHORT $LN98@get_vehicl
  00cec	8b 45 d8	 mov	 eax, DWORD PTR _target$[ebp]
  00cef	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cf1	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv523[ebp], ecx
  00cf7	eb 27		 jmp	 SHORT $LN99@get_vehicl
$LN98@get_vehicl:
  00cf9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00cff	81 c2 32 01 00
	00		 add	 edx, 306		; 00000132H
  00d05	52		 push	 edx
  00d06	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d0b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d10	50		 push	 eax
  00d11	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d16	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv523[ebp], 0
$LN99@get_vehicl:
  00d20	b9 01 00 00 00	 mov	 ecx, 1
  00d25	85 c9		 test	 ecx, ecx
  00d27	74 0c		 je	 SHORT $LN100@get_vehicl
  00d29	c7 85 5c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv531[ebp], 33 ; 00000021H
  00d33	eb 27		 jmp	 SHORT $LN101@get_vehicl
$LN100@get_vehicl:
  00d35	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00d3b	81 c2 32 01 00
	00		 add	 edx, 306		; 00000132H
  00d41	52		 push	 edx
  00d42	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d47	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00d4c	50		 push	 eax
  00d4d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d52	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv531[ebp], 0
$LN101@get_vehicl:
  00d5c	6a 21		 push	 33			; 00000021H
  00d5e	8b 4d d8	 mov	 ecx, DWORD PTR _target$[ebp]
  00d61	51		 push	 ecx
  00d62	69 95 60 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv523[ebp], 180
  00d6c	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv531[ebp]
  00d72	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00d79	ff d1		 call	 ecx
  00d7b	89 45 d8	 mov	 DWORD PTR _target$[ebp], eax
  00d7e	83 7d d8 00	 cmp	 DWORD PTR _target$[ebp], 0
  00d82	0f 85 42 f9 ff
	ff		 jne	 $LN12@get_vehicl
$LN11@get_vehicl:

; 1102 : 				}
; 1103 : 			}

  00d88	e9 20 f8 ff ff	 jmp	 $LN7@get_vehicl
$LN8@get_vehicl:

; 1104 : 		}

  00d8d	e9 fe f7 ff ff	 jmp	 $LN4@get_vehicl
$LN5@get_vehicl:
$LN15@get_vehicl:

; 1105 : 	}
; 1106 : 	else
; 1107 : 	{
; 1108 : 		#if TEXT_DEBUG_MODULE
; 1109 : 
; 1110 : 		if (debug)
; 1111 : 		{
; 1112 : 			debug_log (" NO SCAN - SURFACE TO SURFACE ->SOURCE: %s (index = %d)", get_local_entity_string (source, STRING_TYPE_FULL_NAME), get_local_entity_index (source));
; 1113 : 		}
; 1114 : 
; 1115 : 		#endif
; 1116 : 	}
; 1117 : 
; 1118 : 	return (best_group);

  00d92	8b 45 cc	 mov	 eax, DWORD PTR _best_group$[ebp]
$LN1@get_vehicl:

; 1119 : }

  00d95	5f		 pop	 edi
  00d96	5e		 pop	 esi
  00d97	5b		 pop	 ebx
  00d98	8b e5		 mov	 esp, ebp
  00d9a	5d		 pop	 ebp
  00d9b	c2 08 00	 ret	 8
?get_vehicle_surface_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ENDP ; get_vehicle_surface_to_surface_scan_group_targets
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\vh_tgt.c
;	COMDAT ?get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z
_TEXT	SEGMENT
tv1156 = -200						; size = 8
tv1118 = -196						; size = 4
tv766 = -192						; size = 4
tv741 = -192						; size = 4
tv672 = -192						; size = 4
tv649 = -192						; size = 4
tv627 = -192						; size = 4
tv605 = -192						; size = 4
tv583 = -192						; size = 4
tv564 = -192						; size = 4
tv543 = -192						; size = 4
tv507 = -192						; size = 4
tv486 = -192						; size = 4
tv466 = -192						; size = 4
tv445 = -192						; size = 4
tv426 = -192						; size = 4
tv407 = -192						; size = 4
tv388 = -192						; size = 4
tv368 = -192						; size = 4
tv276 = -192						; size = 4
tv254 = -192						; size = 4
tv229 = -192						; size = 4
tv206 = -192						; size = 4
tv182 = -192						; size = 4
tv158 = -192						; size = 4
tv136 = -192						; size = 4
tv83 = -192						; size = 4
tv758 = -188						; size = 4
tv701 = -188						; size = 4
tv665 = -188						; size = 4
tv642 = -188						; size = 4
tv620 = -188						; size = 4
tv598 = -188						; size = 4
tv576 = -188						; size = 4
tv557 = -188						; size = 4
tv535 = -188						; size = 4
tv499 = -188						; size = 4
tv479 = -188						; size = 4
tv458 = -188						; size = 4
tv438 = -188						; size = 4
tv419 = -188						; size = 4
tv400 = -188						; size = 4
tv381 = -188						; size = 4
tv360 = -188						; size = 4
tv353 = -188						; size = 4
tv268 = -188						; size = 4
tv246 = -188						; size = 4
tv221 = -188						; size = 4
tv198 = -188						; size = 4
tv174 = -188						; size = 4
tv150 = -188						; size = 4
tv128 = -188						; size = 4
tv75 = -188						; size = 4
$T1 = -184						; size = 4
$T2 = -180						; size = 4
$T3 = -176						; size = 4
_adj_range$4 = -108					; size = 4
_weighting$ = -104					; size = 4
_best_target_select_criteria$ = -100			; size = 4
_target_select_criteria$ = -96				; size = 4
_target_radar_altitude$ = -92				; size = 4
_target_range$ = -88					; size = 4
_source_air_scan_ceiling$ = -84				; size = 4
_source_air_scan_floor$ = -80				; size = 4
_source_air_scan_range$ = -76				; size = 4
_target_position$ = -72					; size = 4
_source_position$ = -68					; size = 4
_source_side$ = -64					; size = 4
_best_target$ = -60					; size = 4
_best_group$ = -56					; size = 4
_sec$ = -52						; size = 4
_member$ = -48						; size = 4
_target$ = -44						; size = 4
_group$ = -40						; size = 4
_seed$ = -36						; size = 4
_z_sec$ = -32						; size = 4
_x_sec$ = -28						; size = 4
_z_sec_max$ = -24					; size = 4
_x_sec_max$ = -20					; size = 4
_z_sec_min$ = -16					; size = 4
_x_sec_min$ = -12					; size = 4
_z_sec_org$ = -8					; size = 4
_x_sec_org$ = -4					; size = 4
_source$ = 8						; size = 4
_target_count$ = 12					; size = 4
?get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z PROC ; get_vehicle_surface_to_air_scan_group_targets, COMDAT

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 400  : 	int
; 401  : 		x_sec_org,
; 402  : 		z_sec_org,
; 403  : 		x_sec_min,
; 404  : 		z_sec_min,
; 405  : 		x_sec_max,
; 406  : 		z_sec_max,
; 407  : 		x_sec,
; 408  : 		z_sec,
; 409  : 		seed;
; 410  : 
; 411  : 	#if TEXT_DEBUG_MODULE
; 412  : 
; 413  : 	int
; 414  : 		debug;
; 415  : 
; 416  : 	#endif
; 417  : 
; 418  : 	entity
; 419  : 		*group,
; 420  : 		*target,
; 421  : 		*member,
; 422  : 		*sec,
; 423  : 		*best_group,
; 424  : 		*best_target;
; 425  : 
; 426  : 	entity_sides
; 427  : 		source_side;
; 428  : 
; 429  : 	vec3d
; 430  : 		*source_position,
; 431  : 		*target_position;
; 432  : 
; 433  : 	float
; 434  : 		source_air_scan_range,
; 435  : 		source_air_scan_floor,
; 436  : 		source_air_scan_ceiling,
; 437  : 		target_range,
; 438  : 		target_radar_altitude,
; 439  : 		target_select_criteria,
; 440  : 		best_target_select_criteria,
; 441  : 		weighting;
; 442  : 
; 443  : 	ASSERT (source);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00010	75 18		 jne	 SHORT $LN13@get_vehicl
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00017	83 c0 2c	 add	 eax, 44			; 0000002cH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_vehicl:

; 444  : 
; 445  : 	(*target_count) = 0;

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 446  : 
; 447  : 	#if TEXT_DEBUG_MODULE
; 448  : 
; 449  : 	debug = get_local_entity_parent (source, LIST_TYPE_MEMBER) == get_local_entity_parent (get_external_view_entity (), LIST_TYPE_MEMBER);
; 450  : 
; 451  : 	#endif
; 452  : 
; 453  : 	//
; 454  : 	// find best scan range
; 455  : 	//
; 456  : 
; 457  : 	group = get_local_entity_parent (source, LIST_TYPE_MEMBER);

  00033	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00037	74 0d		 je	 SHORT $LN42@get_vehicl
  00039	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00044	eb 24		 jmp	 SHORT $LN43@get_vehicl
$LN42@get_vehicl:
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0004c	83 c2 3a	 add	 edx, 58			; 0000003aH
  0004f	52		 push	 edx
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00060	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN43@get_vehicl:
  0006a	b9 01 00 00 00	 mov	 ecx, 1
  0006f	85 c9		 test	 ecx, ecx
  00071	74 0c		 je	 SHORT $LN44@get_vehicl
  00073	c7 85 40 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv83[ebp], 25	; 00000019H
  0007d	eb 24		 jmp	 SHORT $LN45@get_vehicl
$LN44@get_vehicl:
  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00085	83 c2 3a	 add	 edx, 58			; 0000003aH
  00088	52		 push	 edx
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00099	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN45@get_vehicl:
  000a3	6a 19		 push	 25			; 00000019H
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  000a8	51		 push	 ecx
  000a9	69 95 44 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv75[ebp], 180
  000b3	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c0	ff d1		 call	 ecx
  000c2	89 45 d8	 mov	 DWORD PTR _group$[ebp], eax

; 458  : 
; 459  : 	if (!group)

  000c5	83 7d d8 00	 cmp	 DWORD PTR _group$[ebp], 0
  000c9	75 07		 jne	 SHORT $LN14@get_vehicl

; 460  : 	{
; 461  : 		return NULL;

  000cb	33 c0		 xor	 eax, eax
  000cd	e9 c0 12 00 00	 jmp	 $LN1@get_vehicl
$LN14@get_vehicl:

; 462  : 	}
; 463  : 
; 464  : 	source_air_scan_range = 0.0;

  000d2	0f 57 c0	 xorps	 xmm0, xmm0
  000d5	f3 0f 11 45 b4	 movss	 DWORD PTR _source_air_scan_range$[ebp], xmm0

; 465  : 	source_air_scan_ceiling = 0.0;

  000da	0f 57 c0	 xorps	 xmm0, xmm0
  000dd	f3 0f 11 45 ac	 movss	 DWORD PTR _source_air_scan_ceiling$[ebp], xmm0

; 466  : 	source_air_scan_floor = 0.0;

  000e2	0f 57 c0	 xorps	 xmm0, xmm0
  000e5	f3 0f 11 45 b0	 movss	 DWORD PTR _source_air_scan_floor$[ebp], xmm0

; 467  : 	
; 468  : 	member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  000ea	83 7d d8 00	 cmp	 DWORD PTR _group$[ebp], 0
  000ee	74 0d		 je	 SHORT $LN46@get_vehicl
  000f0	8b 45 d8	 mov	 eax, DWORD PTR _group$[ebp]
  000f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f5	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv128[ebp], ecx
  000fb	eb 24		 jmp	 SHORT $LN47@get_vehicl
$LN46@get_vehicl:
  000fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00103	83 c2 45	 add	 edx, 69			; 00000045H
  00106	52		 push	 edx
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00117	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv128[ebp], 0
$LN47@get_vehicl:
  00121	b9 01 00 00 00	 mov	 ecx, 1
  00126	85 c9		 test	 ecx, ecx
  00128	74 0c		 je	 SHORT $LN48@get_vehicl
  0012a	c7 85 40 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv136[ebp], 25 ; 00000019H
  00134	eb 24		 jmp	 SHORT $LN49@get_vehicl
$LN48@get_vehicl:
  00136	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0013c	83 c2 45	 add	 edx, 69			; 00000045H
  0013f	52		 push	 edx
  00140	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00145	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00150	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN49@get_vehicl:
  0015a	6a 19		 push	 25			; 00000019H
  0015c	8b 4d d8	 mov	 ecx, DWORD PTR _group$[ebp]
  0015f	51		 push	 ecx
  00160	69 95 44 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv128[ebp], 180
  0016a	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv136[ebp]
  00170	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00177	ff d1		 call	 ecx
  00179	89 45 d0	 mov	 DWORD PTR _member$[ebp], eax
$LN2@get_vehicl:

; 469  : 
; 470  : 	while (member)

  0017c	83 7d d0 00	 cmp	 DWORD PTR _member$[ebp], 0
  00180	0f 84 a1 02 00
	00		 je	 $LN3@get_vehicl

; 471  : 	{
; 472  : 		source_air_scan_range = max (source_air_scan_range, get_local_entity_float_value (member, FLOAT_TYPE_AIR_SCAN_RANGE));

  00186	83 7d d0 00	 cmp	 DWORD PTR _member$[ebp], 0
  0018a	74 0d		 je	 SHORT $LN50@get_vehicl
  0018c	8b 45 d0	 mov	 eax, DWORD PTR _member$[ebp]
  0018f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00191	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv150[ebp], ecx
  00197	eb 24		 jmp	 SHORT $LN51@get_vehicl
$LN50@get_vehicl:
  00199	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0019f	83 c2 49	 add	 edx, 73			; 00000049H
  001a2	52		 push	 edx
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b3	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN51@get_vehicl:
  001bd	b9 01 00 00 00	 mov	 ecx, 1
  001c2	85 c9		 test	 ecx, ecx
  001c4	74 0c		 je	 SHORT $LN52@get_vehicl
  001c6	c7 85 40 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR tv158[ebp], 5
  001d0	eb 24		 jmp	 SHORT $LN53@get_vehicl
$LN52@get_vehicl:
  001d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  001d8	83 c2 49	 add	 edx, 73			; 00000049H
  001db	52		 push	 edx
  001dc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ec	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN53@get_vehicl:
  001f6	6a 05		 push	 5
  001f8	8b 4d d0	 mov	 ecx, DWORD PTR _member$[ebp]
  001fb	51		 push	 ecx
  001fc	69 95 44 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv150[ebp], 700
  00206	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv158[ebp]
  0020c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00213	ff d1		 call	 ecx
  00215	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR $T3[ebp]
  0021b	8d 95 50 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00221	52		 push	 edx
  00222	8d 45 b4	 lea	 eax, DWORD PTR _source_air_scan_range$[ebp]
  00225	50		 push	 eax
  00226	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0022b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0022f	f3 0f 11 45 b4	 movss	 DWORD PTR _source_air_scan_range$[ebp], xmm0

; 473  : 		source_air_scan_ceiling = max (source_air_scan_ceiling, get_local_entity_float_value (member, FLOAT_TYPE_AIR_SCAN_CEILING));

  00234	83 7d d0 00	 cmp	 DWORD PTR _member$[ebp], 0
  00238	74 0d		 je	 SHORT $LN54@get_vehicl
  0023a	8b 45 d0	 mov	 eax, DWORD PTR _member$[ebp]
  0023d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023f	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv174[ebp], ecx
  00245	eb 24		 jmp	 SHORT $LN55@get_vehicl
$LN54@get_vehicl:
  00247	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0024d	83 c2 4a	 add	 edx, 74			; 0000004aH
  00250	52		 push	 edx
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00256	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0025b	50		 push	 eax
  0025c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00261	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv174[ebp], 0
$LN55@get_vehicl:
  0026b	b9 01 00 00 00	 mov	 ecx, 1
  00270	85 c9		 test	 ecx, ecx
  00272	74 0c		 je	 SHORT $LN56@get_vehicl
  00274	c7 85 40 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv182[ebp], 3
  0027e	eb 24		 jmp	 SHORT $LN57@get_vehicl
$LN56@get_vehicl:
  00280	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00286	83 c2 4a	 add	 edx, 74			; 0000004aH
  00289	52		 push	 edx
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00294	50		 push	 eax
  00295	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029a	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN57@get_vehicl:
  002a4	6a 03		 push	 3
  002a6	8b 4d d0	 mov	 ecx, DWORD PTR _member$[ebp]
  002a9	51		 push	 ecx
  002aa	69 95 44 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv174[ebp], 700
  002b4	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv182[ebp]
  002ba	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002c1	ff d1		 call	 ecx
  002c3	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR $T2[ebp]
  002c9	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  002cf	52		 push	 edx
  002d0	8d 45 ac	 lea	 eax, DWORD PTR _source_air_scan_ceiling$[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  002d9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002dd	f3 0f 11 45 ac	 movss	 DWORD PTR _source_air_scan_ceiling$[ebp], xmm0

; 474  : 		source_air_scan_floor = max (source_air_scan_floor, get_local_entity_float_value (member, FLOAT_TYPE_AIR_SCAN_FLOOR));

  002e2	83 7d d0 00	 cmp	 DWORD PTR _member$[ebp], 0
  002e6	74 0d		 je	 SHORT $LN58@get_vehicl
  002e8	8b 45 d0	 mov	 eax, DWORD PTR _member$[ebp]
  002eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ed	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv198[ebp], ecx
  002f3	eb 24		 jmp	 SHORT $LN59@get_vehicl
$LN58@get_vehicl:
  002f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  002fb	83 c2 4b	 add	 edx, 75			; 0000004bH
  002fe	52		 push	 edx
  002ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00304	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00309	50		 push	 eax
  0030a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030f	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv198[ebp], 0
$LN59@get_vehicl:
  00319	b9 01 00 00 00	 mov	 ecx, 1
  0031e	85 c9		 test	 ecx, ecx
  00320	74 0c		 je	 SHORT $LN60@get_vehicl
  00322	c7 85 40 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv206[ebp], 4
  0032c	eb 24		 jmp	 SHORT $LN61@get_vehicl
$LN60@get_vehicl:
  0032e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00334	83 c2 4b	 add	 edx, 75			; 0000004bH
  00337	52		 push	 edx
  00338	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00342	50		 push	 eax
  00343	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00348	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
$LN61@get_vehicl:
  00352	6a 04		 push	 4
  00354	8b 4d d0	 mov	 ecx, DWORD PTR _member$[ebp]
  00357	51		 push	 ecx
  00358	69 95 44 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv198[ebp], 700
  00362	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv206[ebp]
  00368	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0036f	ff d1		 call	 ecx
  00371	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR $T1[ebp]
  00377	8d 95 48 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  0037d	52		 push	 edx
  0037e	8d 45 b0	 lea	 eax, DWORD PTR _source_air_scan_floor$[ebp]
  00381	50		 push	 eax
  00382	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00387	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0038b	f3 0f 11 45 b0	 movss	 DWORD PTR _source_air_scan_floor$[ebp], xmm0

; 475  : 
; 476  : 		member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  00390	83 7d d0 00	 cmp	 DWORD PTR _member$[ebp], 0
  00394	74 0d		 je	 SHORT $LN62@get_vehicl
  00396	8b 45 d0	 mov	 eax, DWORD PTR _member$[ebp]
  00399	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039b	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv221[ebp], ecx
  003a1	eb 24		 jmp	 SHORT $LN63@get_vehicl
$LN62@get_vehicl:
  003a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  003a9	83 c2 4d	 add	 edx, 77			; 0000004dH
  003ac	52		 push	 edx
  003ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b7	50		 push	 eax
  003b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003bd	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv221[ebp], 0
$LN63@get_vehicl:
  003c7	b9 01 00 00 00	 mov	 ecx, 1
  003cc	85 c9		 test	 ecx, ecx
  003ce	74 0c		 je	 SHORT $LN64@get_vehicl
  003d0	c7 85 40 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv229[ebp], 25 ; 00000019H
  003da	eb 24		 jmp	 SHORT $LN65@get_vehicl
$LN64@get_vehicl:
  003dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  003e2	83 c2 4d	 add	 edx, 77			; 0000004dH
  003e5	52		 push	 edx
  003e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003f0	50		 push	 eax
  003f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f6	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv229[ebp], 0
$LN65@get_vehicl:
  00400	6a 19		 push	 25			; 00000019H
  00402	8b 4d d0	 mov	 ecx, DWORD PTR _member$[ebp]
  00405	51		 push	 ecx
  00406	69 95 44 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv221[ebp], 180
  00410	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv229[ebp]
  00416	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0041d	ff d1		 call	 ecx
  0041f	89 45 d0	 mov	 DWORD PTR _member$[ebp], eax

; 477  : 	}

  00422	e9 55 fd ff ff	 jmp	 $LN2@get_vehicl
$LN3@get_vehicl:

; 478  : 
; 479  : 	group = NULL;

  00427	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _group$[ebp], 0

; 480  : 
; 481  : 	best_target = NULL;

  0042e	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _best_target$[ebp], 0

; 482  : 
; 483  : 	best_group = NULL;

  00435	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _best_group$[ebp], 0

; 484  : 
; 485  : 	if ((source_air_scan_range > 0.0) && ((source_air_scan_ceiling - source_air_scan_floor) > 0.0))

  0043c	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _source_air_scan_range$[ebp]
  00441	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00449	0f 86 40 0f 00
	00		 jbe	 $LN15@get_vehicl
  0044f	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _source_air_scan_ceiling$[ebp]
  00454	f3 0f 5c 45 b0	 subss	 xmm0, DWORD PTR _source_air_scan_floor$[ebp]
  00459	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0045d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00465	0f 86 24 0f 00
	00		 jbe	 $LN15@get_vehicl

; 486  : 	{
; 487  : 		#if TEXT_DEBUG_MODULE
; 488  : 
; 489  : 		if (debug)
; 490  : 		{
; 491  : 			debug_log ("SURFACE TO AIR SCAN ->SOURCE: %s (index = %d) RANGE %.1f", get_local_entity_string (source, STRING_TYPE_FULL_NAME), get_local_entity_index (source), source_air_scan_range);
; 492  : 		}
; 493  : 
; 494  : 		#endif
; 495  : 
; 496  : 		source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  0046b	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0046f	74 0d		 je	 SHORT $LN66@get_vehicl
  00471	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00474	8b 08		 mov	 ecx, DWORD PTR [eax]
  00476	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv246[ebp], ecx
  0047c	eb 24		 jmp	 SHORT $LN67@get_vehicl
$LN66@get_vehicl:
  0047e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00484	83 c2 61	 add	 edx, 97			; 00000061H
  00487	52		 push	 edx
  00488	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0048d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00498	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv246[ebp], 0
$LN67@get_vehicl:
  004a2	b9 01 00 00 00	 mov	 ecx, 1
  004a7	85 c9		 test	 ecx, ecx
  004a9	74 0c		 je	 SHORT $LN68@get_vehicl
  004ab	c7 85 40 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv254[ebp], 8
  004b5	eb 24		 jmp	 SHORT $LN69@get_vehicl
$LN68@get_vehicl:
  004b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  004bd	83 c2 61	 add	 edx, 97			; 00000061H
  004c0	52		 push	 edx
  004c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  004cb	50		 push	 eax
  004cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d1	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv254[ebp], 0
$LN69@get_vehicl:
  004db	6a 08		 push	 8
  004dd	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  004e0	51		 push	 ecx
  004e1	6b 95 44 ff ff
	ff 60		 imul	 edx, DWORD PTR tv246[ebp], 96
  004e8	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv254[ebp]
  004ee	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  004f5	ff d1		 call	 ecx
  004f7	89 45 bc	 mov	 DWORD PTR _source_position$[ebp], eax

; 497  : 
; 498  : 		source_air_scan_ceiling += source_position->y;

  004fa	8b 45 bc	 mov	 eax, DWORD PTR _source_position$[ebp]
  004fd	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _source_air_scan_ceiling$[ebp]
  00502	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  00507	f3 0f 11 45 ac	 movss	 DWORD PTR _source_air_scan_ceiling$[ebp], xmm0

; 499  : 
; 500  : 		source_side = (entity_sides) get_local_entity_int_value (source, INT_TYPE_SIDE);

  0050c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00510	74 0d		 je	 SHORT $LN70@get_vehicl
  00512	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00515	8b 08		 mov	 ecx, DWORD PTR [eax]
  00517	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv268[ebp], ecx
  0051d	eb 24		 jmp	 SHORT $LN71@get_vehicl
$LN70@get_vehicl:
  0051f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00525	83 c2 65	 add	 edx, 101		; 00000065H
  00528	52		 push	 edx
  00529	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00533	50		 push	 eax
  00534	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00539	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv268[ebp], 0
$LN71@get_vehicl:
  00543	b9 01 00 00 00	 mov	 ecx, 1
  00548	85 c9		 test	 ecx, ecx
  0054a	74 0c		 je	 SHORT $LN72@get_vehicl
  0054c	c7 85 40 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv276[ebp], 187 ; 000000bbH
  00556	eb 24		 jmp	 SHORT $LN73@get_vehicl
$LN72@get_vehicl:
  00558	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0055e	83 c2 65	 add	 edx, 101		; 00000065H
  00561	52		 push	 edx
  00562	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00567	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0056c	50		 push	 eax
  0056d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00572	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv276[ebp], 0
$LN73@get_vehicl:
  0057c	68 bb 00 00 00	 push	 187			; 000000bbH
  00581	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00584	51		 push	 ecx
  00585	69 95 44 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv268[ebp], 1116
  0058f	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv276[ebp]
  00595	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0059c	ff d1		 call	 ecx
  0059e	89 45 c0	 mov	 DWORD PTR _source_side$[ebp], eax

; 501  : 
; 502  : 		////////////////////////////////////////
; 503  : 		//
; 504  : 		// get sector scan area
; 505  : 		//
; 506  : 		////////////////////////////////////////
; 507  : 
; 508  : 		//DEBUG// cull down given field of view?
; 509  : 
; 510  : 		get_x_sector (x_sec_org, source_position->x);

  005a1	8d 45 fc	 lea	 eax, DWORD PTR _x_sec_org$[ebp]
  005a4	50		 push	 eax
  005a5	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  005a8	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  005ac	51		 push	 ecx
  005ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b2	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  005b7	8b 45 fc	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  005ba	99		 cdq
  005bb	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  005c1	89 45 fc	 mov	 DWORD PTR _x_sec_org$[ebp], eax

; 511  : 		get_z_sector (z_sec_org, source_position->z);

  005c4	8d 45 f8	 lea	 eax, DWORD PTR _z_sec_org$[ebp]
  005c7	50		 push	 eax
  005c8	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  005cb	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  005d0	51		 push	 ecx
  005d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d6	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  005db	8b 45 f8	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  005de	99		 cdq
  005df	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  005e5	89 45 f8	 mov	 DWORD PTR _z_sec_org$[ebp], eax

; 512  : 
; 513  : 		ASSERT (sector_inside_map_area (x_sec_org, z_sec_org));

  005e8	8b 45 fc	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  005eb	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  005f1	7c 21		 jl	 SHORT $LN18@get_vehicl
  005f3	8b 45 fc	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  005f6	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  005fc	7f 16		 jg	 SHORT $LN18@get_vehicl
  005fe	8b 45 f8	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  00601	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  00607	7c 0b		 jl	 SHORT $LN18@get_vehicl
  00609	8b 45 f8	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  0060c	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  00612	7e 18		 jle	 SHORT $LN17@get_vehicl
$LN18@get_vehicl:
  00614	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00619	83 c0 72	 add	 eax, 114		; 00000072H
  0061c	50		 push	 eax
  0061d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00622	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@
  00627	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@get_vehicl:

; 514  : 
; 515  : 		get_x_sector (x_sec_min, source_position->x - source_air_scan_range);

  0062c	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  0062f	50		 push	 eax
  00630	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00633	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00637	f3 0f 5c 45 b4	 subss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  0063c	51		 push	 ecx
  0063d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00642	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00647	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  0064a	99		 cdq
  0064b	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00651	89 45 f4	 mov	 DWORD PTR _x_sec_min$[ebp], eax

; 516  : 		get_z_sector (z_sec_min, source_position->z - source_air_scan_range);

  00654	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  00657	50		 push	 eax
  00658	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0065b	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00660	f3 0f 5c 45 b4	 subss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  00665	51		 push	 ecx
  00666	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00670	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  00673	99		 cdq
  00674	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0067a	89 45 f0	 mov	 DWORD PTR _z_sec_min$[ebp], eax

; 517  : 
; 518  : 		get_x_sector (x_sec_max, source_position->x + source_air_scan_range);

  0067d	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  00680	50		 push	 eax
  00681	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00684	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00688	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  0068d	51		 push	 ecx
  0068e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00693	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00698	8b 45 ec	 mov	 eax, DWORD PTR _x_sec_max$[ebp]
  0069b	99		 cdq
  0069c	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  006a2	89 45 ec	 mov	 DWORD PTR _x_sec_max$[ebp], eax

; 519  : 		get_z_sector (z_sec_max, source_position->z + source_air_scan_range);

  006a5	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  006a8	50		 push	 eax
  006a9	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  006ac	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  006b1	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  006b6	51		 push	 ecx
  006b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006bc	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  006c1	8b 45 e8	 mov	 eax, DWORD PTR _z_sec_max$[ebp]
  006c4	99		 cdq
  006c5	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  006cb	89 45 e8	 mov	 DWORD PTR _z_sec_max$[ebp], eax

; 520  : 
; 521  : 		x_sec_min = max (x_sec_min, MIN_MAP_X_SECTOR);

  006ce	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  006d3	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  006d6	50		 push	 eax
  006d7	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  006dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  006de	89 4d f4	 mov	 DWORD PTR _x_sec_min$[ebp], ecx

; 522  : 		z_sec_min = max (z_sec_min, MIN_MAP_Z_SECTOR);

  006e1	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  006e6	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  006e9	50		 push	 eax
  006ea	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  006ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f1	89 4d f0	 mov	 DWORD PTR _z_sec_min$[ebp], ecx

; 523  : 
; 524  : 		x_sec_max = min (x_sec_max, MAX_MAP_X_SECTOR);

  006f4	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  006f9	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  006fc	50		 push	 eax
  006fd	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00702	8b 08		 mov	 ecx, DWORD PTR [eax]
  00704	89 4d ec	 mov	 DWORD PTR _x_sec_max$[ebp], ecx

; 525  : 		z_sec_max = min (z_sec_max, MAX_MAP_Z_SECTOR);

  00707	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  0070c	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  0070f	50		 push	 eax
  00710	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00715	8b 08		 mov	 ecx, DWORD PTR [eax]
  00717	89 4d e8	 mov	 DWORD PTR _z_sec_max$[ebp], ecx

; 526  : 
; 527  : 		////////////////////////////////////////
; 528  : 		//
; 529  : 		// sector scan
; 530  : 		//
; 531  : 		////////////////////////////////////////
; 532  : 
; 533  : 		best_target_select_criteria = 0.0;

  0071a	0f 57 c0	 xorps	 xmm0, xmm0
  0071d	f3 0f 11 45 9c	 movss	 DWORD PTR _best_target_select_criteria$[ebp], xmm0

; 534  : 
; 535  : 		for (z_sec = z_sec_min; z_sec <= z_sec_max; z_sec++)

  00722	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  00725	89 45 e0	 mov	 DWORD PTR _z_sec$[ebp], eax
  00728	eb 09		 jmp	 SHORT $LN6@get_vehicl
$LN4@get_vehicl:
  0072a	8b 45 e0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0072d	83 c0 01	 add	 eax, 1
  00730	89 45 e0	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN6@get_vehicl:
  00733	8b 45 e0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00736	3b 45 e8	 cmp	 eax, DWORD PTR _z_sec_max$[ebp]
  00739	0f 8f 50 0c 00
	00		 jg	 $LN5@get_vehicl

; 536  : 		{
; 537  : 			for (x_sec = x_sec_min; x_sec <= x_sec_max; x_sec++)

  0073f	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  00742	89 45 e4	 mov	 DWORD PTR _x_sec$[ebp], eax
  00745	eb 09		 jmp	 SHORT $LN9@get_vehicl
$LN7@get_vehicl:
  00747	8b 45 e4	 mov	 eax, DWORD PTR _x_sec$[ebp]
  0074a	83 c0 01	 add	 eax, 1
  0074d	89 45 e4	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN9@get_vehicl:
  00750	8b 45 e4	 mov	 eax, DWORD PTR _x_sec$[ebp]
  00753	3b 45 ec	 cmp	 eax, DWORD PTR _x_sec_max$[ebp]
  00756	0f 8f 2e 0c 00
	00		 jg	 $LN8@get_vehicl

; 538  : 			{
; 539  : 				sec = get_local_raw_sector_entity (x_sec, z_sec);

  0075c	8b 45 e0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0075f	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00766	03 45 e4	 add	 eax, DWORD PTR _x_sec$[ebp]
  00769	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0076f	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00773	74 1d		 je	 SHORT $LN74@get_vehicl
  00775	8b 55 e0	 mov	 edx, DWORD PTR _z_sec$[ebp]
  00778	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0077f	03 55 e4	 add	 edx, DWORD PTR _x_sec$[ebp]
  00782	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00787	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0078a	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv353[ebp], ecx
  00790	eb 27		 jmp	 SHORT $LN75@get_vehicl
$LN74@get_vehicl:
  00792	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00798	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  0079e	52		 push	 edx
  0079f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  007a9	50		 push	 eax
  007aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007af	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv353[ebp], 0
$LN75@get_vehicl:
  007b9	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR tv353[ebp]
  007bf	89 4d cc	 mov	 DWORD PTR _sec$[ebp], ecx

; 540  : 
; 541  : 				target = get_local_entity_first_child (sec, LIST_TYPE_SECTOR);

  007c2	83 7d cc 00	 cmp	 DWORD PTR _sec$[ebp], 0
  007c6	74 0d		 je	 SHORT $LN76@get_vehicl
  007c8	8b 45 cc	 mov	 eax, DWORD PTR _sec$[ebp]
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv360[ebp], ecx
  007d3	eb 27		 jmp	 SHORT $LN77@get_vehicl
$LN76@get_vehicl:
  007d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  007db	81 c2 8e 00 00
	00		 add	 edx, 142		; 0000008eH
  007e1	52		 push	 edx
  007e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ec	50		 push	 eax
  007ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007f2	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv360[ebp], 0
$LN77@get_vehicl:
  007fc	b9 01 00 00 00	 mov	 ecx, 1
  00801	85 c9		 test	 ecx, ecx
  00803	74 0c		 je	 SHORT $LN78@get_vehicl
  00805	c7 85 40 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv368[ebp], 33 ; 00000021H
  0080f	eb 27		 jmp	 SHORT $LN79@get_vehicl
$LN78@get_vehicl:
  00811	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00817	81 c2 8e 00 00
	00		 add	 edx, 142		; 0000008eH
  0081d	52		 push	 edx
  0081e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00823	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00828	50		 push	 eax
  00829	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0082e	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv368[ebp], 0
$LN79@get_vehicl:
  00838	6a 21		 push	 33			; 00000021H
  0083a	8b 4d cc	 mov	 ecx, DWORD PTR _sec$[ebp]
  0083d	51		 push	 ecx
  0083e	69 95 44 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv360[ebp], 180
  00848	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv368[ebp]
  0084e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00855	ff d1		 call	 ecx
  00857	89 45 d4	 mov	 DWORD PTR _target$[ebp], eax

; 542  : 
; 543  : 				if (target)

  0085a	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0085e	0f 84 21 0b 00
	00		 je	 $LN11@get_vehicl
$LN12@get_vehicl:

; 544  : 				{
; 545  : 					do
; 546  : 					{
; 547  : 						////////////////////////////////////////
; 548  : 						//
; 549  : 						// simple target select criteria
; 550  : 						//
; 551  : 						////////////////////////////////////////
; 552  : 
; 553  : 						if (target == source)

  00864	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00867	3b 45 08	 cmp	 eax, DWORD PTR _source$[ebp]
  0086a	75 05		 jne	 SHORT $LN20@get_vehicl

; 554  : 						{
; 555  : 							continue;

  0086c	e9 72 0a 00 00	 jmp	 $LN40@get_vehicl
$LN20@get_vehicl:

; 556  : 						}
; 557  : 
; 558  : 						if (!get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  00871	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00875	74 0d		 je	 SHORT $LN80@get_vehicl
  00877	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  0087a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0087c	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv381[ebp], ecx
  00882	eb 20		 jmp	 SHORT $LN81@get_vehicl
$LN80@get_vehicl:
  00884	68 2e 02 00 00	 push	 558			; 0000022eH
  00889	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0088e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00894	52		 push	 edx
  00895	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0089a	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv381[ebp], 0
$LN81@get_vehicl:
  008a4	b8 01 00 00 00	 mov	 eax, 1
  008a9	85 c0		 test	 eax, eax
  008ab	74 0c		 je	 SHORT $LN82@get_vehicl
  008ad	c7 85 40 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv388[ebp], 4
  008b7	eb 20		 jmp	 SHORT $LN83@get_vehicl
$LN82@get_vehicl:
  008b9	68 2e 02 00 00	 push	 558			; 0000022eH
  008be	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  008c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008c9	51		 push	 ecx
  008ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008cf	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv388[ebp], 0
$LN83@get_vehicl:
  008d9	6a 04		 push	 4
  008db	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  008de	52		 push	 edx
  008df	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv381[ebp], 1116
  008e9	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv388[ebp]
  008ef	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  008f6	ff d2		 call	 edx
  008f8	85 c0		 test	 eax, eax
  008fa	75 05		 jne	 SHORT $LN21@get_vehicl

; 559  : 						{
; 560  : 							continue;

  008fc	e9 e2 09 00 00	 jmp	 $LN40@get_vehicl
$LN21@get_vehicl:

; 561  : 						}
; 562  : 
; 563  : 						if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) == TARGET_TYPE_INVALID)

  00901	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00905	74 0d		 je	 SHORT $LN84@get_vehicl
  00907	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  0090a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0090c	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv400[ebp], ecx
  00912	eb 20		 jmp	 SHORT $LN85@get_vehicl
$LN84@get_vehicl:
  00914	68 33 02 00 00	 push	 563			; 00000233H
  00919	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0091e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00924	52		 push	 edx
  00925	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0092a	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv400[ebp], 0
$LN85@get_vehicl:
  00934	b8 01 00 00 00	 mov	 eax, 1
  00939	85 c0		 test	 eax, eax
  0093b	74 0c		 je	 SHORT $LN86@get_vehicl
  0093d	c7 85 40 ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv407[ebp], 214 ; 000000d6H
  00947	eb 20		 jmp	 SHORT $LN87@get_vehicl
$LN86@get_vehicl:
  00949	68 33 02 00 00	 push	 563			; 00000233H
  0094e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00953	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00959	51		 push	 ecx
  0095a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0095f	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv407[ebp], 0
$LN87@get_vehicl:
  00969	68 d6 00 00 00	 push	 214			; 000000d6H
  0096e	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  00971	52		 push	 edx
  00972	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv400[ebp], 1116
  0097c	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv407[ebp]
  00982	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00989	ff d2		 call	 edx
  0098b	85 c0		 test	 eax, eax
  0098d	75 05		 jne	 SHORT $LN22@get_vehicl

; 564  : 						{
; 565  : 							continue;

  0098f	e9 4f 09 00 00	 jmp	 $LN40@get_vehicl
$LN22@get_vehicl:

; 566  : 						}
; 567  : 
; 568  : 						if (!get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00994	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00998	74 0d		 je	 SHORT $LN88@get_vehicl
  0099a	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  0099d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0099f	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv419[ebp], ecx
  009a5	eb 20		 jmp	 SHORT $LN89@get_vehicl
$LN88@get_vehicl:
  009a7	68 38 02 00 00	 push	 568			; 00000238H
  009ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  009b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009b7	52		 push	 edx
  009b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009bd	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv419[ebp], 0
$LN89@get_vehicl:
  009c7	b8 01 00 00 00	 mov	 eax, 1
  009cc	85 c0		 test	 eax, eax
  009ce	74 0c		 je	 SHORT $LN90@get_vehicl
  009d0	c7 85 40 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv426[ebp], 7
  009da	eb 20		 jmp	 SHORT $LN91@get_vehicl
$LN90@get_vehicl:
  009dc	68 38 02 00 00	 push	 568			; 00000238H
  009e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  009e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009ec	51		 push	 ecx
  009ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f2	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv426[ebp], 0
$LN91@get_vehicl:
  009fc	6a 07		 push	 7
  009fe	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  00a01	52		 push	 edx
  00a02	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv419[ebp], 1116
  00a0c	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv426[ebp]
  00a12	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a19	ff d2		 call	 edx
  00a1b	85 c0		 test	 eax, eax
  00a1d	75 05		 jne	 SHORT $LN23@get_vehicl

; 569  : 						{
; 570  : 							continue;

  00a1f	e9 bf 08 00 00	 jmp	 $LN40@get_vehicl
$LN23@get_vehicl:

; 571  : 						}
; 572  : 
; 573  : 						if (get_local_entity_int_value (target, INT_TYPE_SIDE) == source_side)

  00a24	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00a28	74 0d		 je	 SHORT $LN92@get_vehicl
  00a2a	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00a2d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a2f	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv438[ebp], ecx
  00a35	eb 20		 jmp	 SHORT $LN93@get_vehicl
$LN92@get_vehicl:
  00a37	68 3d 02 00 00	 push	 573			; 0000023dH
  00a3c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a41	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a47	52		 push	 edx
  00a48	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a4d	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv438[ebp], 0
$LN93@get_vehicl:
  00a57	b8 01 00 00 00	 mov	 eax, 1
  00a5c	85 c0		 test	 eax, eax
  00a5e	74 0c		 je	 SHORT $LN94@get_vehicl
  00a60	c7 85 40 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv445[ebp], 187 ; 000000bbH
  00a6a	eb 20		 jmp	 SHORT $LN95@get_vehicl
$LN94@get_vehicl:
  00a6c	68 3d 02 00 00	 push	 573			; 0000023dH
  00a71	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a76	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a7c	51		 push	 ecx
  00a7d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a82	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv445[ebp], 0
$LN95@get_vehicl:
  00a8c	68 bb 00 00 00	 push	 187			; 000000bbH
  00a91	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  00a94	52		 push	 edx
  00a95	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv438[ebp], 1116
  00a9f	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv445[ebp]
  00aa5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00aac	ff d2		 call	 edx
  00aae	3b 45 c0	 cmp	 eax, DWORD PTR _source_side$[ebp]
  00ab1	75 05		 jne	 SHORT $LN24@get_vehicl

; 574  : 						{
; 575  : 							continue;

  00ab3	e9 2b 08 00 00	 jmp	 $LN40@get_vehicl
$LN24@get_vehicl:

; 576  : 						}
; 577  : 
; 578  : 						group = get_local_entity_parent (target, LIST_TYPE_MEMBER);

  00ab8	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00abc	74 0d		 je	 SHORT $LN96@get_vehicl
  00abe	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00ac1	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ac3	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv458[ebp], ecx
  00ac9	eb 27		 jmp	 SHORT $LN97@get_vehicl
$LN96@get_vehicl:
  00acb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00ad1	81 c2 b3 00 00
	00		 add	 edx, 179		; 000000b3H
  00ad7	52		 push	 edx
  00ad8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00add	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ae2	50		 push	 eax
  00ae3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ae8	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv458[ebp], 0
$LN97@get_vehicl:
  00af2	b9 01 00 00 00	 mov	 ecx, 1
  00af7	85 c9		 test	 ecx, ecx
  00af9	74 0c		 je	 SHORT $LN98@get_vehicl
  00afb	c7 85 40 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv466[ebp], 25 ; 00000019H
  00b05	eb 27		 jmp	 SHORT $LN99@get_vehicl
$LN98@get_vehicl:
  00b07	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00b0d	81 c2 b3 00 00
	00		 add	 edx, 179		; 000000b3H
  00b13	52		 push	 edx
  00b14	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b19	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b1e	50		 push	 eax
  00b1f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b24	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv466[ebp], 0
$LN99@get_vehicl:
  00b2e	6a 19		 push	 25			; 00000019H
  00b30	8b 4d d4	 mov	 ecx, DWORD PTR _target$[ebp]
  00b33	51		 push	 ecx
  00b34	69 95 44 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv458[ebp], 180
  00b3e	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv466[ebp]
  00b44	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b4b	ff d1		 call	 ecx
  00b4d	89 45 d8	 mov	 DWORD PTR _group$[ebp], eax

; 579  : 
; 580  : 						if (!group)

  00b50	83 7d d8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00b54	75 05		 jne	 SHORT $LN25@get_vehicl

; 581  : 						{
; 582  : 							continue;

  00b56	e9 88 07 00 00	 jmp	 $LN40@get_vehicl
$LN25@get_vehicl:

; 583  : 						}
; 584  : 
; 585  : 						if ((group == best_group) && (get_local_entity_int_value (target, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI))

  00b5b	8b 45 d8	 mov	 eax, DWORD PTR _group$[ebp]
  00b5e	3b 45 c8	 cmp	 eax, DWORD PTR _best_group$[ebp]
  00b61	0f 85 93 00 00
	00		 jne	 $LN26@get_vehicl
  00b67	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b6b	74 0d		 je	 SHORT $LN100@get_vehicl
  00b6d	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00b70	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b72	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv479[ebp], ecx
  00b78	eb 20		 jmp	 SHORT $LN101@get_vehicl
$LN100@get_vehicl:
  00b7a	68 49 02 00 00	 push	 585			; 00000249H
  00b7f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b84	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b8a	52		 push	 edx
  00b8b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b90	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv479[ebp], 0
$LN101@get_vehicl:
  00b9a	b8 01 00 00 00	 mov	 eax, 1
  00b9f	85 c0		 test	 eax, eax
  00ba1	74 0c		 je	 SHORT $LN102@get_vehicl
  00ba3	c7 85 40 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv486[ebp], 156 ; 0000009cH
  00bad	eb 20		 jmp	 SHORT $LN103@get_vehicl
$LN102@get_vehicl:
  00baf	68 49 02 00 00	 push	 585			; 00000249H
  00bb4	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bb9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00bbf	51		 push	 ecx
  00bc0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bc5	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv486[ebp], 0
$LN103@get_vehicl:
  00bcf	68 9c 00 00 00	 push	 156			; 0000009cH
  00bd4	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  00bd7	52		 push	 edx
  00bd8	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv479[ebp], 1116
  00be2	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv486[ebp]
  00be8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00bef	ff d2		 call	 edx
  00bf1	85 c0		 test	 eax, eax
  00bf3	75 05		 jne	 SHORT $LN26@get_vehicl

; 586  : 						{
; 587  : 							continue;

  00bf5	e9 e9 06 00 00	 jmp	 $LN40@get_vehicl
$LN26@get_vehicl:

; 588  : 						}
; 589  : 
; 590  : 						////////////////////////////////////////
; 591  : 						//
; 592  : 						// Source specific target selection
; 593  : 						//
; 594  : 						////////////////////////////////////////
; 595  : 
; 596  : 						//
; 597  : 						// Check target altitude
; 598  : 						//
; 599  : 
; 600  : 						target_radar_altitude = get_local_entity_float_value (target, FLOAT_TYPE_RADAR_ALTITUDE);

  00bfa	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00bfe	74 0d		 je	 SHORT $LN104@get_vehicl
  00c00	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00c03	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c05	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv499[ebp], ecx
  00c0b	eb 27		 jmp	 SHORT $LN105@get_vehicl
$LN104@get_vehicl:
  00c0d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00c13	81 c2 c9 00 00
	00		 add	 edx, 201		; 000000c9H
  00c19	52		 push	 edx
  00c1a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c24	50		 push	 eax
  00c25	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c2a	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv499[ebp], 0
$LN105@get_vehicl:
  00c34	b9 01 00 00 00	 mov	 ecx, 1
  00c39	85 c9		 test	 ecx, ecx
  00c3b	74 0c		 je	 SHORT $LN106@get_vehicl
  00c3d	c7 85 40 ff ff
	ff 68 00 00 00	 mov	 DWORD PTR tv507[ebp], 104 ; 00000068H
  00c47	eb 27		 jmp	 SHORT $LN107@get_vehicl
$LN106@get_vehicl:
  00c49	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00c4f	81 c2 c9 00 00
	00		 add	 edx, 201		; 000000c9H
  00c55	52		 push	 edx
  00c56	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c5b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00c60	50		 push	 eax
  00c61	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c66	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv507[ebp], 0
$LN107@get_vehicl:
  00c70	6a 68		 push	 104			; 00000068H
  00c72	8b 4d d4	 mov	 ecx, DWORD PTR _target$[ebp]
  00c75	51		 push	 ecx
  00c76	69 95 44 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv499[ebp], 700
  00c80	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv507[ebp]
  00c86	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00c8d	ff d1		 call	 ecx
  00c8f	d9 5d a4	 fstp	 DWORD PTR _target_radar_altitude$[ebp]

; 601  : 
; 602  : 						if ((target_radar_altitude < source_air_scan_floor) || (target_radar_altitude > source_air_scan_ceiling))

  00c92	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _source_air_scan_floor$[ebp]
  00c97	0f 2f 45 a4	 comiss	 xmm0, DWORD PTR _target_radar_altitude$[ebp]
  00c9b	77 0b		 ja	 SHORT $LN28@get_vehicl
  00c9d	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _target_radar_altitude$[ebp]
  00ca2	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _source_air_scan_ceiling$[ebp]
  00ca6	76 05		 jbe	 SHORT $LN27@get_vehicl
$LN28@get_vehicl:

; 603  : 						{
; 604  : 							continue;

  00ca8	e9 36 06 00 00	 jmp	 $LN40@get_vehicl
$LN27@get_vehicl:

; 605  : 						}
; 606  : 
; 607  : 						//
; 608  : 						// allow for random tolerance
; 609  : 						//
; 610  : 
; 611  : 						seed = get_client_server_entity_random_number_seed (source);

  00cad	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00cb0	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00cb6	c1 f8 04	 sar	 eax, 4
  00cb9	89 45 dc	 mov	 DWORD PTR _seed$[ebp], eax

; 612  : 
; 613  : 						if (target_radar_altitude < (source_air_scan_floor * (1.0 + (0.5 * frand1x (&seed)))))

  00cbc	69 45 dc 6d 4e
	c6 41		 imul	 eax, DWORD PTR _seed$[ebp], 1103515245
  00cc3	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00cc8	89 45 dc	 mov	 DWORD PTR _seed$[ebp], eax
  00ccb	8b 4d dc	 mov	 ecx, DWORD PTR _seed$[ebp]
  00cce	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00cd1	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00cd7	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00cdb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00ce3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00ceb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00cf3	f3 0f 5a 4d b0	 cvtss2sd xmm1, DWORD PTR _source_air_scan_floor$[ebp]
  00cf8	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00cfc	f3 0f 5a 45 a4	 cvtss2sd xmm0, DWORD PTR _target_radar_altitude$[ebp]
  00d01	66 0f 2f c8	 comisd	 xmm1, xmm0
  00d05	76 05		 jbe	 SHORT $LN29@get_vehicl

; 614  : 						{
; 615  : 							continue;

  00d07	e9 d7 05 00 00	 jmp	 $LN40@get_vehicl
$LN29@get_vehicl:

; 616  : 						}
; 617  : 
; 618  : 						//
; 619  : 						// Target range
; 620  : 						//
; 621  : 						
; 622  : 						target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  00d0c	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00d10	74 0d		 je	 SHORT $LN108@get_vehicl
  00d12	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00d15	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d17	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv535[ebp], ecx
  00d1d	eb 27		 jmp	 SHORT $LN109@get_vehicl
$LN108@get_vehicl:
  00d1f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00d25	81 c2 df 00 00
	00		 add	 edx, 223		; 000000dfH
  00d2b	52		 push	 edx
  00d2c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d31	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d36	50		 push	 eax
  00d37	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d3c	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv535[ebp], 0
$LN109@get_vehicl:
  00d46	b9 01 00 00 00	 mov	 ecx, 1
  00d4b	85 c9		 test	 ecx, ecx
  00d4d	74 0c		 je	 SHORT $LN110@get_vehicl
  00d4f	c7 85 40 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv543[ebp], 8
  00d59	eb 27		 jmp	 SHORT $LN111@get_vehicl
$LN110@get_vehicl:
  00d5b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00d61	81 c2 df 00 00
	00		 add	 edx, 223		; 000000dfH
  00d67	52		 push	 edx
  00d68	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00d72	50		 push	 eax
  00d73	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d78	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv543[ebp], 0
$LN111@get_vehicl:
  00d82	6a 08		 push	 8
  00d84	8b 4d d4	 mov	 ecx, DWORD PTR _target$[ebp]
  00d87	51		 push	 ecx
  00d88	6b 95 44 ff ff
	ff 60		 imul	 edx, DWORD PTR tv535[ebp], 96
  00d8f	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv543[ebp]
  00d95	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00d9c	ff d1		 call	 ecx
  00d9e	89 45 b8	 mov	 DWORD PTR _target_position$[ebp], eax

; 623  : 
; 624  : 						target_range = get_approx_3d_range (source_position, target_position);

  00da1	8b 45 b8	 mov	 eax, DWORD PTR _target_position$[ebp]
  00da4	50		 push	 eax
  00da5	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00da8	51		 push	 ecx
  00da9	e8 00 00 00 00	 call	 ?get_approx_3d_range@@YGMPBUVEC3D@@0@Z ; get_approx_3d_range
  00dae	d9 5d a8	 fstp	 DWORD PTR _target_range$[ebp]

; 625  : 
; 626  : 						//
; 627  : 						// adjust range if target is player - each jammer / radar turned off allows player to fly 10% closer
; 628  : 						//
; 629  : 						{
; 630  : 							float
; 631  : 								adj_range;
; 632  : 
; 633  : 							adj_range = target_range;

  00db1	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00db6	f3 0f 11 45 94	 movss	 DWORD PTR _adj_range$4[ebp], xmm0

; 634  : 
; 635  : 							if (get_local_entity_int_value (target, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00dbb	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00dbf	74 0d		 je	 SHORT $LN112@get_vehicl
  00dc1	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00dc4	8b 08		 mov	 ecx, DWORD PTR [eax]
  00dc6	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv557[ebp], ecx
  00dcc	eb 20		 jmp	 SHORT $LN113@get_vehicl
$LN112@get_vehicl:
  00dce	68 7b 02 00 00	 push	 635			; 0000027bH
  00dd3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dd8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00dde	52		 push	 edx
  00ddf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00de4	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv557[ebp], 0
$LN113@get_vehicl:
  00dee	b8 01 00 00 00	 mov	 eax, 1
  00df3	85 c0		 test	 eax, eax
  00df5	74 0c		 je	 SHORT $LN114@get_vehicl
  00df7	c7 85 40 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv564[ebp], 156 ; 0000009cH
  00e01	eb 20		 jmp	 SHORT $LN115@get_vehicl
$LN114@get_vehicl:
  00e03	68 7b 02 00 00	 push	 635			; 0000027bH
  00e08	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e0d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e13	51		 push	 ecx
  00e14	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e19	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv564[ebp], 0
$LN115@get_vehicl:
  00e23	68 9c 00 00 00	 push	 156			; 0000009cH
  00e28	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  00e2b	52		 push	 edx
  00e2c	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv557[ebp], 1116
  00e36	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv564[ebp]
  00e3c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00e43	ff d2		 call	 edx
  00e45	85 c0		 test	 eax, eax
  00e47	0f 84 e9 01 00
	00		 je	 $LN33@get_vehicl

; 636  : 							{
; 637  : 								if (!get_local_entity_int_value (target, INT_TYPE_RADAR_ON))

  00e4d	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00e51	74 0d		 je	 SHORT $LN116@get_vehicl
  00e53	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00e56	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e58	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv576[ebp], ecx
  00e5e	eb 20		 jmp	 SHORT $LN117@get_vehicl
$LN116@get_vehicl:
  00e60	68 7d 02 00 00	 push	 637			; 0000027dH
  00e65	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e6a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e70	52		 push	 edx
  00e71	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e76	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv576[ebp], 0
$LN117@get_vehicl:
  00e80	b8 01 00 00 00	 mov	 eax, 1
  00e85	85 c0		 test	 eax, eax
  00e87	74 0c		 je	 SHORT $LN118@get_vehicl
  00e89	c7 85 40 ff ff
	ff a9 00 00 00	 mov	 DWORD PTR tv583[ebp], 169 ; 000000a9H
  00e93	eb 20		 jmp	 SHORT $LN119@get_vehicl
$LN118@get_vehicl:
  00e95	68 7d 02 00 00	 push	 637			; 0000027dH
  00e9a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e9f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ea5	51		 push	 ecx
  00ea6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00eab	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv583[ebp], 0
$LN119@get_vehicl:
  00eb5	68 a9 00 00 00	 push	 169			; 000000a9H
  00eba	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  00ebd	52		 push	 edx
  00ebe	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv576[ebp], 1116
  00ec8	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv583[ebp]
  00ece	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ed5	ff d2		 call	 edx
  00ed7	85 c0		 test	 eax, eax
  00ed9	75 16		 jne	 SHORT $LN31@get_vehicl

; 638  : 								{
; 639  : 									adj_range *= 1.1;

  00edb	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _adj_range$4[ebp]
  00ee0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff199999999999a
  00ee8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00eec	f3 0f 11 45 94	 movss	 DWORD PTR _adj_range$4[ebp], xmm0
$LN31@get_vehicl:

; 640  : 								}
; 641  : 								if (!get_local_entity_int_value (target, INT_TYPE_RADAR_JAMMER_ON))

  00ef1	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00ef5	74 0d		 je	 SHORT $LN120@get_vehicl
  00ef7	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00efa	8b 08		 mov	 ecx, DWORD PTR [eax]
  00efc	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv598[ebp], ecx
  00f02	eb 20		 jmp	 SHORT $LN121@get_vehicl
$LN120@get_vehicl:
  00f04	68 81 02 00 00	 push	 641			; 00000281H
  00f09	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f0e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f14	52		 push	 edx
  00f15	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f1a	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv598[ebp], 0
$LN121@get_vehicl:
  00f24	b8 01 00 00 00	 mov	 eax, 1
  00f29	85 c0		 test	 eax, eax
  00f2b	74 0c		 je	 SHORT $LN122@get_vehicl
  00f2d	c7 85 40 ff ff
	ff a8 00 00 00	 mov	 DWORD PTR tv605[ebp], 168 ; 000000a8H
  00f37	eb 20		 jmp	 SHORT $LN123@get_vehicl
$LN122@get_vehicl:
  00f39	68 81 02 00 00	 push	 641			; 00000281H
  00f3e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f43	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00f49	51		 push	 ecx
  00f4a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f4f	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv605[ebp], 0
$LN123@get_vehicl:
  00f59	68 a8 00 00 00	 push	 168			; 000000a8H
  00f5e	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  00f61	52		 push	 edx
  00f62	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv598[ebp], 1116
  00f6c	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv605[ebp]
  00f72	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00f79	ff d2		 call	 edx
  00f7b	85 c0		 test	 eax, eax
  00f7d	75 16		 jne	 SHORT $LN32@get_vehicl

; 642  : 								{
; 643  : 									adj_range *= 1.1;

  00f7f	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _adj_range$4[ebp]
  00f84	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff199999999999a
  00f8c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00f90	f3 0f 11 45 94	 movss	 DWORD PTR _adj_range$4[ebp], xmm0
$LN32@get_vehicl:

; 644  : 								}
; 645  : 								if (!get_local_entity_int_value (target, INT_TYPE_INFRA_RED_JAMMER_ON))

  00f95	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00f99	74 0d		 je	 SHORT $LN124@get_vehicl
  00f9b	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  00f9e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fa0	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv620[ebp], ecx
  00fa6	eb 20		 jmp	 SHORT $LN125@get_vehicl
$LN124@get_vehicl:
  00fa8	68 85 02 00 00	 push	 645			; 00000285H
  00fad	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fb2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00fb8	52		 push	 edx
  00fb9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fbe	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv620[ebp], 0
$LN125@get_vehicl:
  00fc8	b8 01 00 00 00	 mov	 eax, 1
  00fcd	85 c0		 test	 eax, eax
  00fcf	74 0c		 je	 SHORT $LN126@get_vehicl
  00fd1	c7 85 40 ff ff
	ff 68 00 00 00	 mov	 DWORD PTR tv627[ebp], 104 ; 00000068H
  00fdb	eb 20		 jmp	 SHORT $LN127@get_vehicl
$LN126@get_vehicl:
  00fdd	68 85 02 00 00	 push	 645			; 00000285H
  00fe2	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fe7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00fed	51		 push	 ecx
  00fee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ff3	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv627[ebp], 0
$LN127@get_vehicl:
  00ffd	6a 68		 push	 104			; 00000068H
  00fff	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  01002	52		 push	 edx
  01003	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv620[ebp], 1116
  0100d	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv627[ebp]
  01013	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0101a	ff d2		 call	 edx
  0101c	85 c0		 test	 eax, eax
  0101e	75 16		 jne	 SHORT $LN33@get_vehicl

; 646  : 								{
; 647  : 									adj_range *= 1.1;

  01020	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _adj_range$4[ebp]
  01025	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff199999999999a
  0102d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01031	f3 0f 11 45 94	 movss	 DWORD PTR _adj_range$4[ebp], xmm0
$LN33@get_vehicl:

; 648  : 								}
; 649  : 							}
; 650  : 
; 651  : 							if (adj_range > (source_air_scan_range * get_local_entity_float_value (target, FLOAT_TYPE_RADAR_STEALTH_FACTOR)))

  01036	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0103a	74 0d		 je	 SHORT $LN128@get_vehicl
  0103c	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  0103f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01041	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv642[ebp], ecx
  01047	eb 20		 jmp	 SHORT $LN129@get_vehicl
$LN128@get_vehicl:
  01049	68 8b 02 00 00	 push	 651			; 0000028bH
  0104e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01053	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01059	52		 push	 edx
  0105a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0105f	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv642[ebp], 0
$LN129@get_vehicl:
  01069	b8 01 00 00 00	 mov	 eax, 1
  0106e	85 c0		 test	 eax, eax
  01070	74 0c		 je	 SHORT $LN130@get_vehicl
  01072	c7 85 40 ff ff
	ff 6a 00 00 00	 mov	 DWORD PTR tv649[ebp], 106 ; 0000006aH
  0107c	eb 20		 jmp	 SHORT $LN131@get_vehicl
$LN130@get_vehicl:
  0107e	68 8b 02 00 00	 push	 651			; 0000028bH
  01083	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0108e	51		 push	 ecx
  0108f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01094	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv649[ebp], 0
$LN131@get_vehicl:
  0109e	6a 6a		 push	 106			; 0000006aH
  010a0	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  010a3	52		 push	 edx
  010a4	69 85 44 ff ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv642[ebp], 700
  010ae	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv649[ebp]
  010b4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  010bb	ff d2		 call	 edx
  010bd	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR tv1118[ebp]
  010c3	f3 0f 10 85 3c
	ff ff ff	 movss	 xmm0, DWORD PTR tv1118[ebp]
  010cb	f3 0f 59 45 b4	 mulss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  010d0	f3 0f 10 4d 94	 movss	 xmm1, DWORD PTR _adj_range$4[ebp]
  010d5	0f 2f c8	 comiss	 xmm1, xmm0
  010d8	76 05		 jbe	 SHORT $LN34@get_vehicl

; 652  : 							{
; 653  : 								continue;

  010da	e9 04 02 00 00	 jmp	 $LN40@get_vehicl
$LN34@get_vehicl:

; 654  : 							}
; 655  : 						}
; 656  : 
; 657  : 						//DEBUG// use weapon lock (min/max range etc.)
; 658  : 
; 659  : 						if (target_range < 100.0)

  010df	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  010e4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  010ec	66 0f 2f c8	 comisd	 xmm1, xmm0
  010f0	76 05		 jbe	 SHORT $LN35@get_vehicl

; 660  : 						{
; 661  : 							continue;

  010f2	e9 ec 01 00 00	 jmp	 $LN40@get_vehicl
$LN35@get_vehicl:

; 662  : 						}
; 663  : 
; 664  : 						(*target_count) ++;

  010f7	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  010fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  010fc	83 c1 01	 add	 ecx, 1
  010ff	8b 55 0c	 mov	 edx, DWORD PTR _target_count$[ebp]
  01102	89 0a		 mov	 DWORD PTR [edx], ecx

; 665  : 
; 666  : 						////////////////////////////////////////////////////////////////
; 667  : 						// Line of sight check
; 668  : 						////////////////////////////////////////////////////////////////
; 669  : 
; 670  : 						if (get_local_entity_int_value (target, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  01104	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  01108	74 0d		 je	 SHORT $LN132@get_vehicl
  0110a	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  0110d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0110f	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv665[ebp], ecx
  01115	eb 20		 jmp	 SHORT $LN133@get_vehicl
$LN132@get_vehicl:
  01117	68 9e 02 00 00	 push	 670			; 0000029eH
  0111c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01121	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01127	52		 push	 edx
  01128	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0112d	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv665[ebp], 0
$LN133@get_vehicl:
  01137	b8 01 00 00 00	 mov	 eax, 1
  0113c	85 c0		 test	 eax, eax
  0113e	74 0c		 je	 SHORT $LN134@get_vehicl
  01140	c7 85 40 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv672[ebp], 156 ; 0000009cH
  0114a	eb 20		 jmp	 SHORT $LN135@get_vehicl
$LN134@get_vehicl:
  0114c	68 9e 02 00 00	 push	 670			; 0000029eH
  01151	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01156	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0115c	51		 push	 ecx
  0115d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01162	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv672[ebp], 0
$LN135@get_vehicl:
  0116c	68 9c 00 00 00	 push	 156			; 0000009cH
  01171	8b 55 d4	 mov	 edx, DWORD PTR _target$[ebp]
  01174	52		 push	 edx
  01175	69 85 44 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv665[ebp], 1116
  0117f	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR tv672[ebp]
  01185	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0118c	ff d2		 call	 edx
  0118e	85 c0		 test	 eax, eax
  01190	74 1a		 je	 SHORT $LN36@get_vehicl

; 671  : 						{
; 672  : 							if (!check_entity_line_of_sight (source, target, (mobile_los_check_criteria) MOBILE_LOS_CHECK_ALL))

  01192	6a 1f		 push	 31			; 0000001fH
  01194	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  01197	50		 push	 eax
  01198	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0119b	51		 push	 ecx
  0119c	e8 00 00 00 00	 call	 ?check_entity_line_of_sight@@YGHPAUENTITY@@0W4MOBILE_LOS_CHECK_CRITERIA@@@Z ; check_entity_line_of_sight
  011a1	85 c0		 test	 eax, eax
  011a3	75 05		 jne	 SHORT $LN38@get_vehicl

; 673  : 							{
; 674  : 								continue;

  011a5	e9 39 01 00 00	 jmp	 $LN40@get_vehicl
$LN38@get_vehicl:

; 675  : 							}
; 676  : 						}
; 677  : 						else

  011aa	eb 18		 jmp	 SHORT $LN39@get_vehicl
$LN36@get_vehicl:

; 678  : 						{
; 679  : 							if (!check_entity_line_of_sight (source, target, MOBILE_LOS_CHECK_COURSE_TERRAIN))

  011ac	6a 01		 push	 1
  011ae	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  011b1	50		 push	 eax
  011b2	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  011b5	51		 push	 ecx
  011b6	e8 00 00 00 00	 call	 ?check_entity_line_of_sight@@YGHPAUENTITY@@0W4MOBILE_LOS_CHECK_CRITERIA@@@Z ; check_entity_line_of_sight
  011bb	85 c0		 test	 eax, eax
  011bd	75 05		 jne	 SHORT $LN39@get_vehicl

; 680  : 							{
; 681  : 								continue;

  011bf	e9 1f 01 00 00	 jmp	 $LN40@get_vehicl
$LN39@get_vehicl:

; 682  : 							}
; 683  : 						}
; 684  : 
; 685  : 						////////////////////////////////////////
; 686  : 						//
; 687  : 						// weighted target select criteria
; 688  : 						//
; 689  : 						////////////////////////////////////////
; 690  : 
; 691  : 						#if TEXT_DEBUG_MODULE
; 692  : 
; 693  : 						if (debug)
; 694  : 						{
; 695  : 							debug_log ("--->TARGET: %s (index = %d)", get_local_entity_type_name (target), get_local_entity_index (target));
; 696  : 						}
; 697  : 
; 698  : 						#endif
; 699  : 
; 700  : 						////////////////////////////////////////
; 701  : 
; 702  : 						target_select_criteria = 0.0;

  011c4	0f 57 c0	 xorps	 xmm0, xmm0
  011c7	f3 0f 11 45 a0	 movss	 DWORD PTR _target_select_criteria$[ebp], xmm0

; 703  : 
; 704  : 						////////////////////////////////////////
; 705  : 
; 706  : 						weighting = ((source_air_scan_range - target_range) / source_air_scan_range) * TARGET_RANGE_WEIGHTING;

  011cc	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  011d1	f3 0f 5c 45 a8	 subss	 xmm0, DWORD PTR _target_range$[ebp]
  011d6	f3 0f 5e 45 b4	 divss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  011db	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  011df	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  011e7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  011eb	f3 0f 11 45 98	 movss	 DWORD PTR _weighting$[ebp], xmm0

; 707  : 
; 708  : 						#if TEXT_DEBUG_MODULE
; 709  : 
; 710  : 						if (debug)
; 711  : 						{
; 712  : 							debug_log ("----->target range weighting = %.2f", weighting);
; 713  : 						}
; 714  : 
; 715  : 						#endif
; 716  : 
; 717  : 						target_select_criteria += weighting;

  011f0	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  011f5	f3 0f 58 45 98	 addss	 xmm0, DWORD PTR _weighting$[ebp]
  011fa	f3 0f 11 45 a0	 movss	 DWORD PTR _target_select_criteria$[ebp], xmm0

; 718  : 
; 719  : 						////////////////////////////////////////
; 720  : 
; 721  : 						weighting = get_local_entity_float_value (target, FLOAT_TYPE_POTENTIAL_AIR_TO_SURFACE_THREAT) * TARGET_POTENTIAL_THREAT_WEIGHTING;

  011ff	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  01203	74 0d		 je	 SHORT $LN136@get_vehicl
  01205	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  01208	8b 08		 mov	 ecx, DWORD PTR [eax]
  0120a	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv701[ebp], ecx
  01210	eb 27		 jmp	 SHORT $LN137@get_vehicl
$LN136@get_vehicl:
  01212	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  01218	81 c2 42 01 00
	00		 add	 edx, 322		; 00000142H
  0121e	52		 push	 edx
  0121f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01229	50		 push	 eax
  0122a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0122f	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv701[ebp], 0
$LN137@get_vehicl:
  01239	b9 01 00 00 00	 mov	 ecx, 1
  0123e	85 c9		 test	 ecx, ecx
  01240	74 0c		 je	 SHORT $LN138@get_vehicl
  01242	c7 85 40 ff ff
	ff 5d 00 00 00	 mov	 DWORD PTR tv741[ebp], 93 ; 0000005dH
  0124c	eb 27		 jmp	 SHORT $LN139@get_vehicl
$LN138@get_vehicl:
  0124e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  01254	81 c2 42 01 00
	00		 add	 edx, 322		; 00000142H
  0125a	52		 push	 edx
  0125b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01265	50		 push	 eax
  01266	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0126b	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv741[ebp], 0
$LN139@get_vehicl:
  01275	6a 5d		 push	 93			; 0000005dH
  01277	8b 4d d4	 mov	 ecx, DWORD PTR _target$[ebp]
  0127a	51		 push	 ecx
  0127b	69 95 44 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv701[ebp], 700
  01285	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv741[ebp]
  0128b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  01292	ff d1		 call	 ecx
  01294	dd 9d 38 ff ff
	ff		 fstp	 QWORD PTR tv1156[ebp]
  0129a	f2 0f 10 85 38
	ff ff ff	 movsd	 xmm0, QWORD PTR tv1156[ebp]
  012a2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  012aa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  012ae	f3 0f 11 45 98	 movss	 DWORD PTR _weighting$[ebp], xmm0

; 722  : 
; 723  : 						#if TEXT_DEBUG_MODULE
; 724  : 
; 725  : 						if (debug)
; 726  : 						{
; 727  : 							debug_log ("----->target potential threat weighting = %.2f", weighting);
; 728  : 						}
; 729  : 
; 730  : 						#endif
; 731  : 
; 732  : 						target_select_criteria += weighting;

  012b3	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  012b8	f3 0f 58 45 98	 addss	 xmm0, DWORD PTR _weighting$[ebp]
  012bd	f3 0f 11 45 a0	 movss	 DWORD PTR _target_select_criteria$[ebp], xmm0

; 733  : 
; 734  : 						////////////////////////////////////////
; 735  : 
; 736  : 						//DEBUG// target/source aspect (target looking at source)
; 737  : 
; 738  : 						//DEBUG// target is targeting source
; 739  : 
; 740  : 						//DEBUG// target already target (persuers - possibly check if persuer ok to fire, check incoming weapons)
; 741  : 
; 742  : 						//DEBUG// weapon/target suitablity
; 743  : 
; 744  : 						//DEBUG// weapon lock ok (min range, max range, etc.)
; 745  : 
; 746  : 						//DEBUG// frand1 () * (1.0 - SOURCE force_morale?) * FORCE_MORALE_WEIGHTING?
; 747  : 
; 748  : 						////////////////////////////////////////
; 749  : 
; 750  : 						#if TEXT_DEBUG_MODULE
; 751  : 
; 752  : 						if (debug)
; 753  : 						{
; 754  : 							debug_log ("----->target select criteria = %.2f", target_select_criteria);
; 755  : 						}
; 756  : 
; 757  : 						#endif
; 758  : 
; 759  : 						////////////////////////////////////////
; 760  : 
; 761  : 						if (target_select_criteria > best_target_select_criteria)

  012c2	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  012c7	0f 2f 45 9c	 comiss	 xmm0, DWORD PTR _best_target_select_criteria$[ebp]
  012cb	76 16		 jbe	 SHORT $LN40@get_vehicl

; 762  : 						{
; 763  : 							best_target_select_criteria = target_select_criteria;

  012cd	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _target_select_criteria$[ebp]
  012d2	f3 0f 11 45 9c	 movss	 DWORD PTR _best_target_select_criteria$[ebp], xmm0

; 764  : 
; 765  : 							best_target = target;

  012d7	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  012da	89 45 c4	 mov	 DWORD PTR _best_target$[ebp], eax

; 766  : 
; 767  : 							best_group = group;

  012dd	8b 45 d8	 mov	 eax, DWORD PTR _group$[ebp]
  012e0	89 45 c8	 mov	 DWORD PTR _best_group$[ebp], eax
$LN40@get_vehicl:

; 768  : 						}
; 769  : 					}
; 770  : 					while (target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR));

  012e3	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  012e7	74 0d		 je	 SHORT $LN140@get_vehicl
  012e9	8b 45 d4	 mov	 eax, DWORD PTR _target$[ebp]
  012ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  012ee	89 8d 44 ff ff
	ff		 mov	 DWORD PTR tv758[ebp], ecx
  012f4	eb 27		 jmp	 SHORT $LN141@get_vehicl
$LN140@get_vehicl:
  012f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  012fc	81 c2 73 01 00
	00		 add	 edx, 371		; 00000173H
  01302	52		 push	 edx
  01303	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01308	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0130d	50		 push	 eax
  0130e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01313	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv758[ebp], 0
$LN141@get_vehicl:
  0131d	b9 01 00 00 00	 mov	 ecx, 1
  01322	85 c9		 test	 ecx, ecx
  01324	74 0c		 je	 SHORT $LN142@get_vehicl
  01326	c7 85 40 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv766[ebp], 33 ; 00000021H
  01330	eb 27		 jmp	 SHORT $LN143@get_vehicl
$LN142@get_vehicl:
  01332	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  01338	81 c2 73 01 00
	00		 add	 edx, 371		; 00000173H
  0133e	52		 push	 edx
  0133f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@FDPICPJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01349	50		 push	 eax
  0134a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0134f	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv766[ebp], 0
$LN143@get_vehicl:
  01359	6a 21		 push	 33			; 00000021H
  0135b	8b 4d d4	 mov	 ecx, DWORD PTR _target$[ebp]
  0135e	51		 push	 ecx
  0135f	69 95 44 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv758[ebp], 180
  01369	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv766[ebp]
  0136f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01376	ff d1		 call	 ecx
  01378	89 45 d4	 mov	 DWORD PTR _target$[ebp], eax
  0137b	83 7d d4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0137f	0f 85 df f4 ff
	ff		 jne	 $LN12@get_vehicl
$LN11@get_vehicl:

; 771  : 				}
; 772  : 			}

  01385	e9 bd f3 ff ff	 jmp	 $LN7@get_vehicl
$LN8@get_vehicl:

; 773  : 		}

  0138a	e9 9b f3 ff ff	 jmp	 $LN4@get_vehicl
$LN5@get_vehicl:
$LN15@get_vehicl:

; 774  : 	}
; 775  : 	else
; 776  : 	{
; 777  : 		#if TEXT_DEBUG_MODULE
; 778  : 
; 779  : 		if (debug)
; 780  : 		{
; 781  : 			debug_log (" NO SCAN - SURFACE TO AIR ->SOURCE: %s (index = %d)", get_local_entity_string (source, STRING_TYPE_FULL_NAME), get_local_entity_index (source));
; 782  : 		}
; 783  : 
; 784  : 		#endif
; 785  : 	}
; 786  : 
; 787  : 	return (best_group);

  0138f	8b 45 c8	 mov	 eax, DWORD PTR _best_group$[ebp]
$LN1@get_vehicl:

; 788  : }

  01392	5f		 pop	 edi
  01393	5e		 pop	 esi
  01394	5b		 pop	 ebx
  01395	8b e5		 mov	 esp, ebp
  01397	5d		 pop	 ebp
  01398	c2 08 00	 ret	 8
?get_vehicle_surface_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ENDP ; get_vehicle_surface_to_air_scan_group_targets
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\vh_tgt.c
;	COMDAT ?update_vehicle_target_scan@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
?update_vehicle_target_scan@@YGXPAUENTITY@@@Z PROC	; update_vehicle_target_scan, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 143  : 	if (check_vehicle_target_scan_valid (en))

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?check_vehicle_target_scan_valid@@YGHPAUENTITY@@@Z ; check_vehicle_target_scan_valid
  00012	85 c0		 test	 eax, eax
  00014	74 09		 je	 SHORT $LN1@update_veh

; 144  : 	{
; 145  : 		vehicle_target_scan (en);

  00016	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?vehicle_target_scan@@YGXPAUENTITY@@@Z ; vehicle_target_scan
$LN1@update_veh:

; 146  : 	}
; 147  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?update_vehicle_target_scan@@YGXPAUENTITY@@@Z ENDP	; update_vehicle_target_scan
_TEXT	ENDS
END
