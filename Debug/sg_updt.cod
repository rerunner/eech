; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\fixed\segment\sg_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_segment_update_functions@@YGXXZ	; overload_segment_update_functions
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4024000000000000
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; delete_local_entity_from_parents_child_list
EXTRN	?create_client_server_object_hit_ground_explosion_effect@@YGXPAUENTITY@@H@Z:PROC ; create_client_server_object_hit_ground_explosion_effect
EXTRN	?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z:PROC ; get_terrain_type_class
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_pred
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	__fltused:DWORD
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\fixed\segment\sg_updt'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 050H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\segment\sg_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv204 = -140						; size = 4
tv183 = -140						; size = 4
tv159 = -140						; size = 4
tv135 = -140						; size = 4
tv78 = -140						; size = 4
tv196 = -136						; size = 4
tv175 = -136						; size = 4
tv151 = -136						; size = 4
tv95 = -136						; size = 4
tv70 = -136						; size = 4
_terrain_info$ = -68					; size = 44
_terrain_height$ = -24					; size = 4
_pos$ = -20						; size = 4
_sub_type$ = -16					; size = 4
_prev_segment$ = -12					; size = 4
_next_segment$ = -8					; size = 4
_parent$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 81   : 	entity
; 82   : 		*parent,
; 83   : 		*next_segment,
; 84   : 		*prev_segment;
; 85   : 
; 86   : 	entity_sub_types
; 87   : 		sub_type;
; 88   : 
; 89   : 	vec3d
; 90   : 		*pos;
; 91   : 
; 92   : 	float
; 93   : 		terrain_height;
; 94   : 
; 95   : 	terrain_3d_point_data
; 96   : 		terrain_info;
; 97   : 
; 98   : 	//
; 99   : 	// notify the segments neighbours as applicable
; 100  : 	//
; 101  : 
; 102  : 	parent = get_local_entity_parent (en, LIST_TYPE_SEGMENT);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	74 0d		 je	 SHORT $LN11@update_ser
  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  0001d	eb 24		 jmp	 SHORT $LN12@update_ser
$LN11@update_ser:
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00025	83 c2 16	 add	 edx, 22			; 00000016H
  00028	52		 push	 edx
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00039	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN12@update_ser:
  00043	b9 01 00 00 00	 mov	 ecx, 1
  00048	85 c9		 test	 ecx, ecx
  0004a	74 0c		 je	 SHORT $LN13@update_ser
  0004c	c7 85 74 ff ff
	ff 23 00 00 00	 mov	 DWORD PTR tv78[ebp], 35	; 00000023H
  00056	eb 24		 jmp	 SHORT $LN14@update_ser
$LN13@update_ser:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0005e	83 c2 16	 add	 edx, 22			; 00000016H
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN14@update_ser:
  0007c	6a 23		 push	 35			; 00000023H
  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00081	51		 push	 ecx
  00082	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv70[ebp], 180
  0008c	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00092	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00099	ff d1		 call	 ecx
  0009b	89 45 fc	 mov	 DWORD PTR _parent$[ebp], eax

; 103  : 
; 104  : 	ASSERT (parent);

  0009e	83 7d fc 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000a2	75 18		 jne	 SHORT $LN2@update_ser
  000a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  000a9	83 c0 18	 add	 eax, 24			; 00000018H
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  000b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_ser:

; 105  : 
; 106  : 	next_segment = get_local_entity_child_succ (en, LIST_TYPE_SEGMENT);

  000bc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c0	74 0d		 je	 SHORT $LN15@update_ser
  000c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000cd	eb 24		 jmp	 SHORT $LN16@update_ser
$LN15@update_ser:
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  000d5	83 c2 1a	 add	 edx, 26			; 0000001aH
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e9	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN16@update_ser:
  000f3	b9 01 00 00 00	 mov	 ecx, 1
  000f8	85 c9		 test	 ecx, ecx
  000fa	74 0c		 je	 SHORT $LN17@update_ser
  000fc	c7 85 74 ff ff
	ff 23 00 00 00	 mov	 DWORD PTR tv135[ebp], 35 ; 00000023H
  00106	eb 24		 jmp	 SHORT $LN18@update_ser
$LN17@update_ser:
  00108	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0010e	83 c2 1a	 add	 edx, 26			; 0000001aH
  00111	52		 push	 edx
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00122	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN18@update_ser:
  0012c	6a 23		 push	 35			; 00000023H
  0012e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00131	51		 push	 ecx
  00132	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv95[ebp], 180
  0013c	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  00142	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00149	ff d1		 call	 ecx
  0014b	89 45 f8	 mov	 DWORD PTR _next_segment$[ebp], eax

; 107  : 
; 108  : 	if (next_segment)

  0014e	83 7d f8 00	 cmp	 DWORD PTR _next_segment$[ebp], 0
  00152	74 12		 je	 SHORT $LN3@update_ser

; 109  : 	{
; 110  : 		notify_local_entity (ENTITY_MESSAGE_COLLISION, parent, next_segment);

  00154	8b 45 f8	 mov	 eax, DWORD PTR _next_segment$[ebp]
  00157	50		 push	 eax
  00158	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  0015b	51		 push	 ecx
  0015c	6a 07		 push	 7
  0015e	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00163	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@update_ser:

; 111  : 	}
; 112  : 
; 113  : 	prev_segment = get_local_entity_child_pred (en, LIST_TYPE_SEGMENT);

  00166	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0016a	74 0d		 je	 SHORT $LN19@update_ser
  0016c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00171	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv151[ebp], ecx
  00177	eb 24		 jmp	 SHORT $LN20@update_ser
$LN19@update_ser:
  00179	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0017f	83 c2 21	 add	 edx, 33			; 00000021H
  00182	52		 push	 edx
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00188	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0018d	50		 push	 eax
  0018e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00193	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv151[ebp], 0
$LN20@update_ser:
  0019d	b9 01 00 00 00	 mov	 ecx, 1
  001a2	85 c9		 test	 ecx, ecx
  001a4	74 0c		 je	 SHORT $LN21@update_ser
  001a6	c7 85 74 ff ff
	ff 23 00 00 00	 mov	 DWORD PTR tv159[ebp], 35 ; 00000023H
  001b0	eb 24		 jmp	 SHORT $LN22@update_ser
$LN21@update_ser:
  001b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  001b8	83 c2 21	 add	 edx, 33			; 00000021H
  001bb	52		 push	 edx
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv159[ebp], 0
$LN22@update_ser:
  001d6	6a 23		 push	 35			; 00000023H
  001d8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001db	51		 push	 ecx
  001dc	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv151[ebp], 180
  001e6	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv159[ebp]
  001ec	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001f3	ff d1		 call	 ecx
  001f5	89 45 f4	 mov	 DWORD PTR _prev_segment$[ebp], eax

; 114  : 
; 115  : 	if (prev_segment)

  001f8	83 7d f4 00	 cmp	 DWORD PTR _prev_segment$[ebp], 0
  001fc	74 12		 je	 SHORT $LN4@update_ser

; 116  : 	{
; 117  : 		notify_local_entity (ENTITY_MESSAGE_COLLISION, parent, prev_segment);

  001fe	8b 45 f4	 mov	 eax, DWORD PTR _prev_segment$[ebp]
  00201	50		 push	 eax
  00202	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  00205	51		 push	 ecx
  00206	6a 07		 push	 7
  00208	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0020d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@update_ser:

; 118  : 	}
; 119  : 
; 120  : 	sub_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00210	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00214	74 0d		 je	 SHORT $LN23@update_ser
  00216	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00219	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021b	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv175[ebp], ecx
  00221	eb 24		 jmp	 SHORT $LN24@update_ser
$LN23@update_ser:
  00223	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00229	83 c2 28	 add	 edx, 40			; 00000028H
  0022c	52		 push	 edx
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00232	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023d	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv175[ebp], 0
$LN24@update_ser:
  00247	b9 01 00 00 00	 mov	 ecx, 1
  0024c	85 c9		 test	 ecx, ecx
  0024e	74 0c		 je	 SHORT $LN25@update_ser
  00250	c7 85 74 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv183[ebp], 52 ; 00000034H
  0025a	eb 24		 jmp	 SHORT $LN26@update_ser
$LN25@update_ser:
  0025c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00262	83 c2 28	 add	 edx, 40			; 00000028H
  00265	52		 push	 edx
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00270	50		 push	 eax
  00271	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00276	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN26@update_ser:
  00280	6a 34		 push	 52			; 00000034H
  00282	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00285	51		 push	 ecx
  00286	69 95 78 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv175[ebp], 1116
  00290	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv183[ebp]
  00296	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0029d	ff d1		 call	 ecx
  0029f	89 45 f0	 mov	 DWORD PTR _sub_type$[ebp], eax

; 121  : 
; 122  : 	if (sub_type == ENTITY_SUB_TYPE_FIXED_BRIDGE_UNSUPPORTED_MID_SECTION)

  002a2	83 7d f0 03	 cmp	 DWORD PTR _sub_type$[ebp], 3
  002a6	0f 85 50 01 00
	00		 jne	 $LN5@update_ser

; 123  : 	{
; 124  : 		//
; 125  : 		// make the segment drop to the floor ( removing it from the update list when it hits )
; 126  : 		//
; 127  : 	
; 128  : 		pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  002ac	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002b0	74 0d		 je	 SHORT $LN27@update_ser
  002b2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b7	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv196[ebp], ecx
  002bd	eb 24		 jmp	 SHORT $LN28@update_ser
$LN27@update_ser:
  002bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  002c5	83 c2 30	 add	 edx, 48			; 00000030H
  002c8	52		 push	 edx
  002c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d9	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv196[ebp], 0
$LN28@update_ser:
  002e3	b9 01 00 00 00	 mov	 ecx, 1
  002e8	85 c9		 test	 ecx, ecx
  002ea	74 0c		 je	 SHORT $LN29@update_ser
  002ec	c7 85 74 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv204[ebp], 8
  002f6	eb 24		 jmp	 SHORT $LN30@update_ser
$LN29@update_ser:
  002f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  002fe	83 c2 30	 add	 edx, 48			; 00000030H
  00301	52		 push	 edx
  00302	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BJLGDGJO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00307	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0030c	50		 push	 eax
  0030d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00312	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv204[ebp], 0
$LN30@update_ser:
  0031c	6a 08		 push	 8
  0031e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00321	51		 push	 ecx
  00322	6b 95 78 ff ff
	ff 60		 imul	 edx, DWORD PTR tv196[ebp], 96
  00329	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv204[ebp]
  0032f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00336	ff d1		 call	 ecx
  00338	89 45 ec	 mov	 DWORD PTR _pos$[ebp], eax

; 129  : 	
; 130  : 		pos->y -= ( 10.0 * get_delta_time() );

  0033b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00343	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4024000000000000
  0034b	8b 45 ec	 mov	 eax, DWORD PTR _pos$[ebp]
  0034e	f3 0f 5a 48 04	 cvtss2sd xmm1, DWORD PTR [eax+4]
  00353	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00357	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0035b	8b 4d ec	 mov	 ecx, DWORD PTR _pos$[ebp]
  0035e	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 131  : 	
; 132  : 		memset (&terrain_info, 0, sizeof (terrain_3d_point_data));

  00363	6a 2c		 push	 44			; 0000002cH
  00365	6a 00		 push	 0
  00367	8d 45 bc	 lea	 eax, DWORD PTR _terrain_info$[ebp]
  0036a	50		 push	 eax
  0036b	e8 00 00 00 00	 call	 _memset
  00370	83 c4 0c	 add	 esp, 12			; 0000000cH

; 133  : 	
; 134  : 		terrain_height = get_3d_terrain_point_data (pos->x, pos->z, &terrain_info);

  00373	8d 45 bc	 lea	 eax, DWORD PTR _terrain_info$[ebp]
  00376	50		 push	 eax
  00377	8b 4d ec	 mov	 ecx, DWORD PTR _pos$[ebp]
  0037a	51		 push	 ecx
  0037b	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00380	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00385	8b 55 ec	 mov	 edx, DWORD PTR _pos$[ebp]
  00388	51		 push	 ecx
  00389	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0038d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00392	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00397	d9 5d e8	 fstp	 DWORD PTR _terrain_height$[ebp]

; 135  : 
; 136  : 		if (get_terrain_type_class (terrain_info.terrain_type) == TERRAIN_CLASS_WATER)

  0039a	8b 45 d8	 mov	 eax, DWORD PTR _terrain_info$[ebp+28]
  0039d	50		 push	 eax
  0039e	e8 00 00 00 00	 call	 ?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z ; get_terrain_type_class
  003a3	83 f8 01	 cmp	 eax, 1
  003a6	75 16		 jne	 SHORT $LN7@update_ser

; 137  : 		{
; 138  : 			terrain_height -= 1.0;

  003a8	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _terrain_height$[ebp]
  003ad	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  003b5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003b9	f3 0f 11 45 e8	 movss	 DWORD PTR _terrain_height$[ebp], xmm0
$LN7@update_ser:

; 139  : 		}
; 140  : 	
; 141  : 		if ( pos->y <= terrain_height )

  003be	8b 45 ec	 mov	 eax, DWORD PTR _pos$[ebp]
  003c1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _terrain_height$[ebp]
  003c6	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  003ca	72 2e		 jb	 SHORT $LN9@update_ser

; 142  : 		{
; 143  : 			pos->y = terrain_height;

  003cc	8b 45 ec	 mov	 eax, DWORD PTR _pos$[ebp]
  003cf	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _terrain_height$[ebp]
  003d4	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 144  : 	
; 145  : 			delete_local_entity_from_parents_child_list (en, LIST_TYPE_UPDATE);

  003d9	6a 29		 push	 41			; 00000029H
  003db	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003de	50		 push	 eax
  003df	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list

; 146  : 	
; 147  : 			if (get_comms_model () == COMMS_MODEL_SERVER)

  003e4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  003eb	75 0d		 jne	 SHORT $LN9@update_ser

; 148  : 			{
; 149  : 				create_client_server_object_hit_ground_explosion_effect (en, terrain_info.terrain_type);

  003ed	8b 45 d8	 mov	 eax, DWORD PTR _terrain_info$[ebp+28]
  003f0	50		 push	 eax
  003f1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003f4	51		 push	 ecx
  003f5	e8 00 00 00 00	 call	 ?create_client_server_object_hit_ground_explosion_effect@@YGXPAUENTITY@@H@Z ; create_client_server_object_hit_ground_explosion_effect
$LN9@update_ser:

; 150  : 			}
; 151  : 		}
; 152  : 	}
; 153  : 	else

  003fa	eb 0b		 jmp	 SHORT $LN6@update_ser
$LN5@update_ser:

; 154  : 	{
; 155  : 		//
; 156  : 		// segment is supported, and so should be instantly removed from the update list
; 157  : 		// ( only put there in the first place so that neighbours would be notified )
; 158  : 		//
; 159  : 
; 160  : 		delete_local_entity_from_parents_child_list (en, LIST_TYPE_UPDATE);

  003fc	6a 29		 push	 41			; 00000029H
  003fe	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00401	50		 push	 eax
  00402	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list
$LN6@update_ser:

; 161  : 	}
; 162  : }

  00407	5f		 pop	 edi
  00408	5e		 pop	 esi
  00409	5b		 pop	 ebx
  0040a	8b e5		 mov	 esp, ebp
  0040c	5d		 pop	 ebp
  0040d	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\segment\sg_updt.c
;	COMDAT ?overload_segment_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_segment_update_functions@@YGXXZ PROC		; overload_segment_update_functions, COMDAT

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 170  : 	fn_update_client_server_entity[ENTITY_TYPE_SEGMENT][COMMS_MODEL_SERVER]	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 1a	 imul	 ecx, eax, 26
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 171  : 
; 172  : 	fn_update_client_server_entity[ENTITY_TYPE_SEGMENT][COMMS_MODEL_CLIENT]	= update_server;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 1a	 imul	 ecx, eax, 26
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 173  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_segment_update_functions@@YGXXZ ENDP		; overload_segment_update_functions
_TEXT	ENDS
END
