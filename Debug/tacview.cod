; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\tacview\tacview.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?tacview_log_file@@3PAU_iobuf@@A		; tacview_log_file
_BSS	SEGMENT
?tacview_log_file@@3PAU_iobuf@@A DD 01H DUP (?)		; tacview_log_file
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vsnprintf_l
PUBLIC	_vsnprintf
PUBLIC	__vsprintf_l
PUBLIC	__vsprintf_s_l
PUBLIC	_sprintf
PUBLIC	_sprintf_s
PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	_ceilf
PUBLIC	_cosf
PUBLIC	_fabsf
PUBLIC	_floorf
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?ceil@@YGMM@Z					; ceil
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?floor@@YGMM@Z					; floor
PUBLIC	?start_tacview_logging@@YGXPAUENTITY@@@Z	; start_tacview_logging
PUBLIC	?close_tacview_log@@YGXXZ			; close_tacview_log
PUBLIC	?write_tacview_header@@YGXPAUENTITY@@0@Z	; write_tacview_header
PUBLIC	?write_tacview_town_names@@YGXXZ		; write_tacview_town_names
PUBLIC	?write_tacview_frame_header@@YGXXZ		; write_tacview_frame_header
PUBLIC	?write_tacview_new_unit@@YGXPAUENTITY@@@Z	; write_tacview_new_unit
PUBLIC	?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z ; write_tacview_unit_event
PUBLIC	?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z	; write_tacview_unit_update
PUBLIC	?write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ	; write_tacview_debug_event
PUBLIC	?tacview_reset_frame@@YGHXZ			; tacview_reset_frame
PUBLIC	?tacview_update_gunship@@YGXXZ			; tacview_update_gunship
PUBLIC	?write_tacview_coordinate@@YGXPAUENTITY@@PAUVEC3D@@@Z ; write_tacview_coordinate
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA ; `start_tacview_logging'::`1'::__LINE__Var
PUBLIC	??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??open_tacview_log@@YGXXZ@4JA	; `open_tacview_log'::`1'::__LINE__Var
PUBLIC	??_C@_0DC@LHOACOOL@tacview?9logs?2eech?9?$CF4d?9?$CF02d?9?$CF02d@ ; `string'
PUBLIC	??_C@_05MAJJAKPI@FALSE@				; `string'
PUBLIC	??_C@_02GMLFBBN@wb@				; `string'
PUBLIC	?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA ; `write_tacview_header'::`1'::__LINE__Var
PUBLIC	??_C@_0II@HMEBLPGF@Current?5map?5has?5no?5longitude?5an@ ; `string'
PUBLIC	??_C@_0BM@IDLOJHJH@FileType?$DNtext?1acmi?1tacview?6@ ; `string'
PUBLIC	??_C@_0BB@BPELCIOC@FileVersion?$DN1?43?6@	; `string'
PUBLIC	??_C@_0BG@CCFEHBNC@Source?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@ ; `string'
PUBLIC	??_C@_0BI@ECDNAKMB@Recorder?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@ ; `string'
PUBLIC	??_C@_0CO@EEJNKGK@RecordingTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF0@ ; `string'
PUBLIC	??_C@_07KGJDHNOH@Author?$DN@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_09CHKLMOO@Title?$DN?$CFs?6@		; `string'
PUBLIC	??_C@_0N@DOBIFEPD@Category?$DN?$CFs?6@		; `string'
PUBLIC	??_C@_0CM@BGBLNDMJ@MissionTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF02d@ ; `string'
PUBLIC	??_C@_0BD@EKEELAEJ@LatitudeOffset?$DN?$CFf?6@	; `string'
PUBLIC	??_C@_0BE@EODBOJHK@LongitudeOffset?$DN?$CFf?6@	; `string'
PUBLIC	??_C@_0BJ@KPAINJOL@Coalition?$DNNeutral?0Green?6@ ; `string'
PUBLIC	??_C@_0BF@DFMMMFMH@Coalition?$DNBlue?0Blue?6@	; `string'
PUBLIC	??_C@_0BD@LJPHBPI@Coalition?$DNRed?0Red?6@	; `string'
PUBLIC	??_C@_0DD@IDLEDENM@ProvidedEvents?$DNTakeoff?0Landing?0@ ; `string'
PUBLIC	??_C@_0BD@DMDAFCLD@MainAircraftID?$DN?$CFx?6@	; `string'
PUBLIC	?__LINE__Var@?0??write_tacview_frame_header@@YGXXZ@4JA ; `write_tacview_frame_header'::`1'::__LINE__Var
PUBLIC	??_C@_02BOGAIONP@ab@				; `string'
PUBLIC	??_C@_06FJMBGJFC@?$CD?$CF?42f?6@		; `string'
PUBLIC	?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA ; `write_tacview_new_unit'::`1'::__LINE__Var
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0BJ@LGHHLICI@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?$CFs?0?$CFs?0?$CFd?6@ ; `string'
PUBLIC	??_C@_03LEIBKMN@?0?$CFd@			; `string'
PUBLIC	??_C@_0BI@LKCOOCIL@?$CL?$CFx?0?0?$CFx?0?$CFd?0?0?$CFs?0?$CFd?0?$CFd?$CFs?6@ ; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP@				; `string'
PUBLIC	??_C@_02NJNOFBBI@?$CFx@				; `string'
PUBLIC	??_C@_0BD@EIFJNJNF@?$CL?$CFx?0?$CFs?0?$CFx?0?0?0?$CFs?0?0?0?6@ ; `string'
PUBLIC	??_C@_0BD@LGKNJPPG@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?0?0?6@ ; `string'
PUBLIC	?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA ; `write_tacview_unit_event'::`1'::__LINE__Var
PUBLIC	??_C@_07ELAEDPIO@?$CB28?0?$CFx?6@		; `string'
PUBLIC	??_C@_0L@NGJIBFLI@?$CB?$CFx?0?$CFx?0?$CFx?6@	; `string'
PUBLIC	??_C@_09KCNLIEGM@?$CB?$CFx?0?$CFx?0?$DP?6@	; `string'
PUBLIC	??_C@_0L@HBNCEFPN@?$CBf8?0?$CFx?0?$CFs?6@	; `string'
PUBLIC	??_C@_08EOJPFJHP@?$CBf8?0?0?$CFs?6@		; `string'
PUBLIC	?__LINE__Var@?0??hidden_unit@@YGHPAUENTITY@@@Z@4JA ; `hidden_unit'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z@4JA ; `write_tacview_unit_update'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@CBKIMPIA@command_line_tacview_logging@ ; `string'
PUBLIC	??_C@_03CKIECNKJ@?$CFx?0@			; `string'
PUBLIC	??_C@_0P@BMINEFDE@?$CF?46f?0?$CF?46f?0?$CF?42f@	; `string'
PUBLIC	??_C@_02INIPCMH@?0?0@				; `string'
PUBLIC	??_C@_0BB@FGLBBJNO@?0?$CF?41f?0?$CF?41f?0?$CF?41f?6@ ; `string'
PUBLIC	??_C@_04BMLAINGP@?0?0?0?6@			; `string'
PUBLIC	??_C@_0BJ@GLAHLGKB@?$CFx?0?$CF?46f?0?$CF?46f?0?$CF?42f?00?00?00?6@ ; `string'
PUBLIC	??_C@_0BB@KMIHPHNJ@?$CFc?$CF02d?$CFc?$CF03d?4hgt@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c8efa35
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fefae147ae147ae
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff2cccccccccccd
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@4092c00000000000
PUBLIC	__real@40fb21ceb851eb85
PUBLIC	__real@40fb334d70a3d70a
PUBLIC	__real@42652ee0
PUBLIC	__real@c057600000000000
PUBLIC	__real@c0817e8f5c28f5c3
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fputs:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsprintf_s:PROC
EXTRN	_abs:PROC
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__imp__floor:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_system_time_of_day@@YGHXZ:PROC		; get_system_time_of_day
EXTRN	?get_system_date@@YGXPAH00@Z:PROC		; get_system_date
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?safe_fclose@@YGHPAU_iobuf@@@Z:PROC		; safe_fclose
EXTRN	?latin1_to_utf8@@YGXPBDPADIH@Z:PROC		; latin1_to_utf8
EXTRN	?get_current_map_latitude_offset@@YGMXZ:PROC	; get_current_map_latitude_offset
EXTRN	?get_current_map_longitude_offset@@YGMXZ:PROC	; get_current_map_longitude_offset
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_player_task@@YGPAUENTITY@@PAU1@@Z:PROC	; get_player_task
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_sector_fog_of_war_value
EXTRN	?get_digital_clock_int_values@@YGXMPAH00@Z:PROC	; get_digital_clock_int_values
EXTRN	__ftol2_sse:PROC
EXTRN	_memset:PROC
EXTRN	?command_line_tacview_logging@@3HA:DWORD	; command_line_tacview_logging
EXTRN	?command_line_tacview_generate_srtm_height_data@@3HA:DWORD ; command_line_tacview_generate_srtm_height_data
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?gunship_current_sector@@3PAUSECTOR@@A:DWORD	; gunship_current_sector
EXTRN	?vehicle_database@@3PAUVEHICLE_DATA@@A:BYTE	; vehicle_database
EXTRN	?pilot_entity@@3PAUENTITY@@A:DWORD		; pilot_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	?update_succ@@3PAUENTITY@@A:DWORD		; update_succ
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?latitude_offset@@3MA DD 01H DUP (?)			; latitude_offset
?longitude_offset@@3MA DD 01H DUP (?)			; longitude_offset
?latitude_scale@@3MA DD 01H DUP (?)			; latitude_scale
?tacview_starttime@@3MA DD 01H DUP (?)			; tacview_starttime
?friendly_side@@3HA DD 01H DUP (?)			; friendly_side
?update_group@@3HA DD 01H DUP (?)			; update_group
?slow_update_group@@3HA DD 01H DUP (?)			; slow_update_group
?medium_update_group@@3HA DD 01H DUP (?)		; medium_update_group
?frequent_update_group@@3HA DD 01H DUP (?)		; frequent_update_group
?log_filename@@3PADA DB 0100H DUP (?)			; log_filename
?reopen_timer@?1??write_tacview_frame_header@@YGXXZ@4IA DD 01H DUP (?) ; `write_tacview_frame_header'::`2'::reopen_timer
?message@?1??write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ@4PADA DB 03e8H DUP (?) ; `write_tacview_debug_event'::`2'::message
?buffer@?1??write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ@4PADA DB 03e8H DUP (?) ; `write_tacview_debug_event'::`2'::buffer
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0817e8f5c28f5c3
CONST	SEGMENT
__real@c0817e8f5c28f5c3 DQ 0c0817e8f5c28f5c3r	; -559.82
CONST	ENDS
;	COMDAT __real@c057600000000000
CONST	SEGMENT
__real@c057600000000000 DQ 0c057600000000000r	; -93.5
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@40fb334d70a3d70a
CONST	SEGMENT
__real@40fb334d70a3d70a DQ 040fb334d70a3d70ar	; 111413
CONST	ENDS
;	COMDAT __real@40fb21ceb851eb85
CONST	SEGMENT
__real@40fb21ceb851eb85 DQ 040fb21ceb851eb85r	; 111133
CONST	ENDS
;	COMDAT __real@4092c00000000000
CONST	SEGMENT
__real@4092c00000000000 DQ 04092c00000000000r	; 1200
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff2cccccccccccd
CONST	SEGMENT
__real@3ff2cccccccccccd DQ 03ff2cccccccccccdr	; 1.175
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fefae147ae147ae
CONST	SEGMENT
__real@3fefae147ae147ae DQ 03fefae147ae147aer	; 0.99
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0BB@KMIHPHNJ@?$CFc?$CF02d?$CFc?$CF03d?4hgt@
CONST	SEGMENT
??_C@_0BB@KMIHPHNJ@?$CFc?$CF02d?$CFc?$CF03d?4hgt@ DB '%c%02d%c%03d.hgt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GLAHLGKB@?$CFx?0?$CF?46f?0?$CF?46f?0?$CF?42f?00?00?00?6@
CONST	SEGMENT
??_C@_0BJ@GLAHLGKB@?$CFx?0?$CF?46f?0?$CF?46f?0?$CF?42f?00?00?00?6@ DB '%x'
	DB	',%.6f,%.6f,%.2f,0,0,0', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BMLAINGP@?0?0?0?6@
CONST	SEGMENT
??_C@_04BMLAINGP@?0?0?0?6@ DB ',,,', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FGLBBJNO@?0?$CF?41f?0?$CF?41f?0?$CF?41f?6@
CONST	SEGMENT
??_C@_0BB@FGLBBJNO@?0?$CF?41f?0?$CF?41f?0?$CF?41f?6@ DB ',%.1f,%.1f,%.1f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_02INIPCMH@?0?0@
CONST	SEGMENT
??_C@_02INIPCMH@?0?0@ DB ',,', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BMINEFDE@?$CF?46f?0?$CF?46f?0?$CF?42f@
CONST	SEGMENT
??_C@_0P@BMINEFDE@?$CF?46f?0?$CF?46f?0?$CF?42f@ DB '%.6f,%.6f,%.2f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03CKIECNKJ@?$CFx?0@
CONST	SEGMENT
??_C@_03CKIECNKJ@?$CFx?0@ DB '%x,', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CBKIMPIA@command_line_tacview_logging@
CONST	SEGMENT
??_C@_0BN@CBKIMPIA@command_line_tacview_logging@ DB 'command_line_tacview'
	DB	'_logging', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z@4JA DD 0290H ; `write_tacview_unit_update'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??hidden_unit@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??hidden_unit@@YGHPAUENTITY@@@Z@4JA DD 027cH ; `hidden_unit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08EOJPFJHP@?$CBf8?0?0?$CFs?6@
CONST	SEGMENT
??_C@_08EOJPFJHP@?$CBf8?0?0?$CFs?6@ DB '!f8,,%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HBNCEFPN@?$CBf8?0?$CFx?0?$CFs?6@
CONST	SEGMENT
??_C@_0L@HBNCEFPN@?$CBf8?0?$CFx?0?$CFs?6@ DB '!f8,%x,%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KCNLIEGM@?$CB?$CFx?0?$CFx?0?$DP?6@
CONST	SEGMENT
??_C@_09KCNLIEGM@?$CB?$CFx?0?$CFx?0?$DP?6@ DB '!%x,%x,?', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NGJIBFLI@?$CB?$CFx?0?$CFx?0?$CFx?6@
CONST	SEGMENT
??_C@_0L@NGJIBFLI@?$CB?$CFx?0?$CFx?0?$CFx?6@ DB '!%x,%x,%x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ELAEDPIO@?$CB28?0?$CFx?6@
CONST	SEGMENT
??_C@_07ELAEDPIO@?$CB28?0?$CFx?6@ DB '!28,%x', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA DD 0229H ; `write_tacview_unit_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BD@LGKNJPPG@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?0?0?6@
CONST	SEGMENT
??_C@_0BD@LGKNJPPG@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?0?0?6@ DB '+%x,,%'
	DB	'x,%x,,%s,,,', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EIFJNJNF@?$CL?$CFx?0?$CFs?0?$CFx?0?0?0?$CFs?0?0?0?6@
CONST	SEGMENT
??_C@_0BD@EIFJNJNF@?$CL?$CFx?0?$CFs?0?$CFx?0?0?0?$CFs?0?0?0?6@ DB '+%x,%s'
	DB	',%x,,,%s,,,', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NJNOFBBI@?$CFx@
CONST	SEGMENT
??_C@_02NJNOFBBI@?$CFx@ DB '%x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKCOOCIL@?$CL?$CFx?0?0?$CFx?0?$CFd?0?0?$CFs?0?$CFd?0?$CFd?$CFs?6@
CONST	SEGMENT
??_C@_0BI@LKCOOCIL@?$CL?$CFx?0?0?$CFx?0?$CFd?0?0?$CFs?0?$CFd?0?$CFd?$CFs?6@ DB '+'
	DB	'%x,,%x,%d,,%s,%d,%d%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LEIBKMN@?0?$CFd@
CONST	SEGMENT
??_C@_03LEIBKMN@?0?$CFd@ DB ',%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LGHHLICI@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?$CFs?0?$CFs?0?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@LGHHLICI@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?$CFs?0?$CFs?0?$CFd?6@ DB '+'
	DB	'%x,,%x,%x,,%s,%s,%s,%d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA DD 0fbH ; `write_tacview_new_unit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06FJMBGJFC@?$CD?$CF?42f?6@
CONST	SEGMENT
??_C@_06FJMBGJFC@?$CD?$CF?42f?6@ DB '#%.2f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02BOGAIONP@ab@
CONST	SEGMENT
??_C@_02BOGAIONP@ab@ DB 'ab', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??write_tacview_frame_header@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??write_tacview_frame_header@@YGXXZ@4JA DD 0e9H ; `write_tacview_frame_header'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BD@DMDAFCLD@MainAircraftID?$DN?$CFx?6@
CONST	SEGMENT
??_C@_0BD@DMDAFCLD@MainAircraftID?$DN?$CFx?6@ DB 'MainAircraftID=%x', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@IDLEDENM@ProvidedEvents?$DNTakeoff?0Landing?0@
CONST	SEGMENT
??_C@_0DD@IDLEDENM@ProvidedEvents?$DNTakeoff?0Landing?0@ DB 'ProvidedEven'
	DB	'ts=Takeoff,Landing,Destroyed,LeftArea', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LJPHBPI@Coalition?$DNRed?0Red?6@
CONST	SEGMENT
??_C@_0BD@LJPHBPI@Coalition?$DNRed?0Red?6@ DB 'Coalition=Red,Red', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DFMMMFMH@Coalition?$DNBlue?0Blue?6@
CONST	SEGMENT
??_C@_0BF@DFMMMFMH@Coalition?$DNBlue?0Blue?6@ DB 'Coalition=Blue,Blue', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KPAINJOL@Coalition?$DNNeutral?0Green?6@
CONST	SEGMENT
??_C@_0BJ@KPAINJOL@Coalition?$DNNeutral?0Green?6@ DB 'Coalition=Neutral,G'
	DB	'reen', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EODBOJHK@LongitudeOffset?$DN?$CFf?6@
CONST	SEGMENT
??_C@_0BE@EODBOJHK@LongitudeOffset?$DN?$CFf?6@ DB 'LongitudeOffset=%f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EKEELAEJ@LatitudeOffset?$DN?$CFf?6@
CONST	SEGMENT
??_C@_0BD@EKEELAEJ@LatitudeOffset?$DN?$CFf?6@ DB 'LatitudeOffset=%f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BGBLNDMJ@MissionTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF02d@
CONST	SEGMENT
??_C@_0CM@BGBLNDMJ@MissionTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF02d@ DB 'M'
	DB	'issionTime=%04d-%02d-%02dT%02d:%02d:%02dZ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DOBIFEPD@Category?$DN?$CFs?6@
CONST	SEGMENT
??_C@_0N@DOBIFEPD@Category?$DN?$CFs?6@ DB 'Category=%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CHKLMOO@Title?$DN?$CFs?6@
CONST	SEGMENT
??_C@_09CHKLMOO@Title?$DN?$CFs?6@ DB 'Title=%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07KGJDHNOH@Author?$DN@
CONST	SEGMENT
??_C@_07KGJDHNOH@Author?$DN@ DB 'Author=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EEJNKGK@RecordingTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF0@
CONST	SEGMENT
??_C@_0CO@EEJNKGK@RecordingTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF0@ DB 'R'
	DB	'ecordingTime=%04d-%02d-%02dT%02d:%02d:%02dZ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ECDNAKMB@Recorder?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@
CONST	SEGMENT
??_C@_0BI@ECDNAKMB@Recorder?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@ DB 'Recorder='
	DB	'EECH %d.%d.%d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CCFEHBNC@Source?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@
CONST	SEGMENT
??_C@_0BG@CCFEHBNC@Source?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@ DB 'Source=EECH'
	DB	' %d.%d.%d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BPELCIOC@FileVersion?$DN1?43?6@
CONST	SEGMENT
??_C@_0BB@BPELCIOC@FileVersion?$DN1?43?6@ DB 'FileVersion=1.3', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IDLOJHJH@FileType?$DNtext?1acmi?1tacview?6@
CONST	SEGMENT
??_C@_0BM@IDLOJHJH@FileType?$DNtext?1acmi?1tacview?6@ DB 'FileType=text/a'
	DB	'cmi/tacview', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0II@HMEBLPGF@Current?5map?5has?5no?5longitude?5an@
CONST	SEGMENT
??_C@_0II@HMEBLPGF@Current?5map?5has?5no?5longitude?5an@ DB 'Current map '
	DB	'has no longitude and latitude which is needed by tacview.  Ad'
	DB	'd this information in mapinfo.txt as e.g. coordinate=10.0,20.'
	DB	'1', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA DD 08eH ; `write_tacview_header'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb@
CONST	SEGMENT
??_C@_02GMLFBBN@wb@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MAJJAKPI@FALSE@
CONST	SEGMENT
??_C@_05MAJJAKPI@FALSE@ DB 'FALSE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@LHOACOOL@tacview?9logs?2eech?9?$CF4d?9?$CF02d?9?$CF02d@
CONST	SEGMENT
??_C@_0DC@LHOACOOL@tacview?9logs?2eech?9?$CF4d?9?$CF02d?9?$CF02d@ DB 'tac'
	DB	'view-logs\eech-%4d-%02d-%02dT%02d%02d.txt.acmi', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??open_tacview_log@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??open_tacview_log@@YGXXZ@4JA DD 064H	; `open_tacview_log'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\tacview\tacview.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA DD 03cH ; `start_tacview_logging'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?last_xsector@@3HA DD 0ffffffffH			; last_xsector
?last_zsector@@3HA DD 0ffffffffH			; last_zsector
?changed_sector@@3HA DD 01H				; changed_sector
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?htons@@YGFF@Z
_TEXT	SEGMENT
_tmp$ = -5						; size = 1
_swapper$ = -4						; size = 2
_input$ = 8						; size = 2
?htons@@YGFF@Z PROC					; htons, COMDAT

; 770  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 771  : 	union {
; 772  : 		short s;
; 773  : 		char  bytes[2];
; 774  : 	} swapper;
; 775  : 
; 776  : 	char tmp;
; 777  : 
; 778  : 	swapper.s = input;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _input$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _swapper$[ebp], ax

; 779  : 	tmp = swapper.bytes[0];

  00011	b8 01 00 00 00	 mov	 eax, 1
  00016	6b c8 00	 imul	 ecx, eax, 0
  00019	8a 54 0d fc	 mov	 dl, BYTE PTR _swapper$[ebp+ecx]
  0001d	88 55 fb	 mov	 BYTE PTR _tmp$[ebp], dl

; 780  : 	swapper.bytes[0] = swapper.bytes[1];

  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	c1 e0 00	 shl	 eax, 0
  00028	b9 01 00 00 00	 mov	 ecx, 1
  0002d	6b d1 00	 imul	 edx, ecx, 0
  00030	8a 44 05 fc	 mov	 al, BYTE PTR _swapper$[ebp+eax]
  00034	88 44 15 fc	 mov	 BYTE PTR _swapper$[ebp+edx], al

; 781  : 	swapper.bytes[1] = tmp;

  00038	b8 01 00 00 00	 mov	 eax, 1
  0003d	c1 e0 00	 shl	 eax, 0
  00040	8a 4d fb	 mov	 cl, BYTE PTR _tmp$[ebp]
  00043	88 4c 05 fc	 mov	 BYTE PTR _swapper$[ebp+eax], cl

; 782  : 
; 783  : 	return swapper.s;

  00047	66 8b 45 fc	 mov	 ax, WORD PTR _swapper$[ebp]

; 784  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?htons@@YGFF@Z ENDP					; htons
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?get_latitude_longitude_length@@YGXMPAM0@Z
_TEXT	SEGMENT
tv165 = -116						; size = 8
tv171 = -108						; size = 8
tv157 = -100						; size = 8
tv147 = -92						; size = 8
tv169 = -84						; size = 8
tv139 = -76						; size = 8
tv132 = -72						; size = 4
_lat$ = -4						; size = 4
_latitude$ = 8						; size = 4
_lat_length$ = 12					; size = 4
_long_length$ = 16					; size = 4
?get_latitude_longitude_length@@YGXMPAM0@Z PROC		; get_latitude_longitude_length, COMDAT

; 737  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 738  : 	float
; 739  : 		lat = rad(fabs(latitude));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _latitude$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00019	d9 5d b8	 fstp	 DWORD PTR tv132[ebp]
  0001c	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv132[ebp]
  00021	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00029	f3 0f 11 45 fc	 movss	 DWORD PTR _lat$[ebp], xmm0

; 740  : 
; 741  : 	*lat_length = (M1 + (M2 * cos(2 * lat) + (M3 * cos(4 * lat)))),

  0002e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00036	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _lat$[ebp]
  0003b	51		 push	 ecx
  0003c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00041	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00046	dd 5d b4	 fstp	 QWORD PTR tv139[ebp]
  00049	f2 0f 10 45 b4	 movsd	 xmm0, QWORD PTR tv139[ebp]
  0004e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c0817e8f5c28f5c3
  00056	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40800000
  0005e	f3 0f 59 4d fc	 mulss	 xmm1, DWORD PTR _lat$[ebp]
  00063	51		 push	 ecx
  00064	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00069	f2 0f 11 45 ac	 movsd	 QWORD PTR tv169[ebp], xmm0
  0006e	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00073	dd 5d a4	 fstp	 QWORD PTR tv147[ebp]
  00076	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv147[ebp]
  0007b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff2cccccccccccd
  00083	f2 0f 10 4d ac	 movsd	 xmm1, QWORD PTR tv169[ebp]
  00088	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0008c	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@40fb21ceb851eb85
  00094	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00098	8b 45 0c	 mov	 eax, DWORD PTR _lat_length$[ebp]
  0009b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0009f	51		 push	 ecx
  000a0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _lat$[ebp]
  000a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000aa	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  000af	dd 5d 9c	 fstp	 QWORD PTR tv157[ebp]
  000b2	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv157[ebp]
  000b7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40fb334d70a3d70a
  000bf	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40400000
  000c7	f3 0f 59 4d fc	 mulss	 xmm1, DWORD PTR _lat$[ebp]
  000cc	51		 push	 ecx
  000cd	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000d2	f2 0f 11 45 94	 movsd	 QWORD PTR tv171[ebp], xmm0
  000d7	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  000dc	dd 5d 8c	 fstp	 QWORD PTR tv165[ebp]
  000df	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv165[ebp]
  000e4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c057600000000000
  000ec	f2 0f 10 4d 94	 movsd	 xmm1, QWORD PTR tv171[ebp]
  000f1	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000f5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000f9	8b 4d 10	 mov	 ecx, DWORD PTR _long_length$[ebp]
  000fc	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 742  : 	*long_length = (P1 * cos(lat)) + (P2 * cos(3 * lat));
; 743  : }

  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 0c 00	 ret	 12			; 0000000cH
?get_latitude_longitude_length@@YGXMPAM0@Z ENDP		; get_latitude_longitude_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_coordinate@@YGXPAUENTITY@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv153 = -104						; size = 8
tv165 = -96						; size = 8
tv145 = -88						; size = 8
tv94 = -84						; size = 4
_longitude$ = -16					; size = 4
_longitude_length$ = -12				; size = 4
_abs_lat$ = -8						; size = 4
_latitude$ = -4						; size = 4
_en$ = 8						; size = 4
_pos$ = 12						; size = 4
?write_tacview_coordinate@@YGXPAUENTITY@@PAUVEC3D@@@Z PROC ; write_tacview_coordinate, COMDAT

; 725  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 726  : 	float
; 727  : 		latitude = (pos->z * latitude_scale),

  00009	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0000c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00011	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?latitude_scale@@3MA
  00019	f3 0f 11 45 fc	 movss	 DWORD PTR _latitude$[ebp], xmm0

; 728  : 		abs_lat = fabs(latitude_offset + rad(latitude)),

  0001e	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _latitude$[ebp]
  00023	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0002b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  00033	51		 push	 ecx
  00034	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00039	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0003e	d9 5d f8	 fstp	 DWORD PTR _abs_lat$[ebp]

; 729  : 		longitude_length = (P1 * cos(abs_lat)) + (P2 * cos(3 * abs_lat)),

  00041	51		 push	 ecx
  00042	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _abs_lat$[ebp]
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00051	dd 5d a8	 fstp	 QWORD PTR tv145[ebp]
  00054	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv145[ebp]
  00059	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40fb334d70a3d70a
  00061	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40400000
  00069	f3 0f 59 4d f8	 mulss	 xmm1, DWORD PTR _abs_lat$[ebp]
  0006e	51		 push	 ecx
  0006f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00074	f2 0f 11 45 a0	 movsd	 QWORD PTR tv165[ebp], xmm0
  00079	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0007e	dd 5d 98	 fstp	 QWORD PTR tv153[ebp]
  00081	f2 0f 10 45 98	 movsd	 xmm0, QWORD PTR tv153[ebp]
  00086	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c057600000000000
  0008e	f2 0f 10 4d a0	 movsd	 xmm1, QWORD PTR tv165[ebp]
  00093	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00097	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0009b	f3 0f 11 45 f4	 movss	 DWORD PTR _longitude_length$[ebp], xmm0

; 730  : 		longitude = (pos->x / longitude_length);

  000a0	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000a3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000a7	f3 0f 5e 45 f4	 divss	 xmm0, DWORD PTR _longitude_length$[ebp]
  000ac	f3 0f 11 45 f0	 movss	 DWORD PTR _longitude$[ebp], xmm0

; 731  : 
; 732  : 	fprintf(tacview_log_file, "%x,%.6f,%.6f,%.2f,0,0,0\n", tacview_id(en) + 0x80000, latitude, longitude, pos->y);

  000b1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b5	74 11		 je	 SHORT $LN3@write_tacv
  000b7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ba	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000c0	c1 f8 04	 sar	 eax, 4
  000c3	89 45 ac	 mov	 DWORD PTR tv94[ebp], eax
  000c6	eb 07		 jmp	 SHORT $LN4@write_tacv
$LN3@write_tacv:
  000c8	c7 45 ac ff ff
	ff ff		 mov	 DWORD PTR tv94[ebp], -1
$LN4@write_tacv:
  000cf	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  000d2	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  000d7	83 ec 08	 sub	 esp, 8
  000da	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000df	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _longitude$[ebp]
  000e4	83 ec 08	 sub	 esp, 8
  000e7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ec	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _latitude$[ebp]
  000f1	83 ec 08	 sub	 esp, 8
  000f4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f9	8b 55 ac	 mov	 edx, DWORD PTR tv94[ebp]
  000fc	81 c2 02 00 08
	00		 add	 edx, 524290		; 00080002H
  00102	52		 push	 edx
  00103	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GLAHLGKB@?$CFx?0?$CF?46f?0?$CF?46f?0?$CF?42f?00?00?00?6@
  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 _fprintf
  00113	83 c4 24	 add	 esp, 36			; 00000024H

; 733  : }

  00116	5f		 pop	 edi
  00117	5e		 pop	 esi
  00118	5b		 pop	 ebx
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c2 08 00	 ret	 8
?write_tacview_coordinate@@YGXPAUENTITY@@PAUVEC3D@@@Z ENDP ; write_tacview_coordinate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?hidden_unit@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv194 = -80						; size = 8
tv166 = -80						; size = 4
tv141 = -80						; size = 4
tv78 = -80						; size = 4
tv159 = -76						; size = 4
tv134 = -76						; size = 4
tv70 = -76						; size = 4
_sec$ = -8						; size = 4
_pos$ = -4						; size = 4
_en$ = 8						; size = 4
?hidden_unit@@YGHPAUENTITY@@@Z PROC			; hidden_unit, COMDAT

; 636  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 637  : 	vec3d* pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN7@hidden_uni
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN8@hidden_uni
$LN7@hidden_uni:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??hidden_unit@@YGHPAUENTITY@@@Z@4JA
  0001f	83 c2 01	 add	 edx, 1
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN8@hidden_uni:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN9@hidden_uni
  00043	c7 45 b0 08 00
	00 00		 mov	 DWORD PTR tv78[ebp], 8
  0004a	eb 21		 jmp	 SHORT $LN10@hidden_uni
$LN9@hidden_uni:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??hidden_unit@@YGHPAUENTITY@@@Z@4JA
  00052	83 c2 01	 add	 edx, 1
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN10@hidden_uni:
  0006d	6a 08		 push	 8
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00072	51		 push	 ecx
  00073	6b 55 b4 60	 imul	 edx, DWORD PTR tv70[ebp], 96
  00077	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  0007a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00081	ff d1		 call	 ecx
  00083	89 45 fc	 mov	 DWORD PTR _pos$[ebp], eax

; 638  : 	entity* sec = get_local_sector_entity(pos);

  00086	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  0008f	89 45 f8	 mov	 DWORD PTR _sec$[ebp], eax

; 639  : 
; 640  : 	if (command_line_tacview_logging == 1 && get_sector_fog_of_war_value (sec, (entity_sides) friendly_side) <= 0.25)

  00092	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 1 ; command_line_tacview_logging
  00099	75 2b		 jne	 SHORT $LN2@hidden_uni
  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?friendly_side@@3HA
  000a0	50		 push	 eax
  000a1	8b 4d f8	 mov	 ecx, DWORD PTR _sec$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_sector_fog_of_war_value
  000aa	dd 5d b0	 fstp	 QWORD PTR tv194[ebp]
  000ad	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd0000000000000
  000b5	66 0f 2f 45 b0	 comisd	 xmm0, QWORD PTR tv194[ebp]
  000ba	72 0a		 jb	 SHORT $LN2@hidden_uni

; 641  : 		return TRUE;

  000bc	b8 01 00 00 00	 mov	 eax, 1
  000c1	e9 54 01 00 00	 jmp	 $LN1@hidden_uni
$LN2@hidden_uni:

; 642  : 
; 643  : 	if (!gunship_current_sector)

  000c6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A, 0 ; gunship_current_sector
  000cd	75 0a		 jne	 SHORT $LN3@hidden_uni

; 644  : 		return TRUE;

  000cf	b8 01 00 00 00	 mov	 eax, 1
  000d4	e9 41 01 00 00	 jmp	 $LN1@hidden_uni
$LN3@hidden_uni:

; 645  : 
; 646  : 	if ((abs((int) gunship_current_sector->x_sector - get_local_entity_int_value(sec, INT_TYPE_X_SECTOR)) >= LIMITED_SECTORS
; 647  : 		 || abs((int) gunship_current_sector->z_sector - get_local_entity_int_value(sec, INT_TYPE_Z_SECTOR)) >= LIMITED_SECTORS))

  000d9	83 7d f8 00	 cmp	 DWORD PTR _sec$[ebp], 0
  000dd	74 0a		 je	 SHORT $LN11@hidden_uni
  000df	8b 45 f8	 mov	 eax, DWORD PTR _sec$[ebp]
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	89 4d b4	 mov	 DWORD PTR tv134[ebp], ecx
  000e7	eb 1d		 jmp	 SHORT $LN12@hidden_uni
$LN11@hidden_uni:
  000e9	68 86 02 00 00	 push	 646			; 00000286H
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f9	52		 push	 edx
  000fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ff	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN12@hidden_uni:
  00106	b8 01 00 00 00	 mov	 eax, 1
  0010b	85 c0		 test	 eax, eax
  0010d	74 09		 je	 SHORT $LN13@hidden_uni
  0010f	c7 45 b0 15 01
	00 00		 mov	 DWORD PTR tv141[ebp], 277 ; 00000115H
  00116	eb 1d		 jmp	 SHORT $LN14@hidden_uni
$LN13@hidden_uni:
  00118	68 86 02 00 00	 push	 646			; 00000286H
  0011d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00122	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00128	51		 push	 ecx
  00129	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN14@hidden_uni:
  00135	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A ; gunship_current_sector
  0013b	8b 72 0c	 mov	 esi, DWORD PTR [edx+12]
  0013e	c1 ee 08	 shr	 esi, 8
  00141	81 e6 ff 00 00
	00		 and	 esi, 255		; 000000ffH
  00147	68 15 01 00 00	 push	 277			; 00000115H
  0014c	8b 45 f8	 mov	 eax, DWORD PTR _sec$[ebp]
  0014f	50		 push	 eax
  00150	69 4d b4 5c 04
	00 00		 imul	 ecx, DWORD PTR tv134[ebp], 1116
  00157	8b 55 b0	 mov	 edx, DWORD PTR tv141[ebp]
  0015a	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  00161	ff d0		 call	 eax
  00163	2b f0		 sub	 esi, eax
  00165	56		 push	 esi
  00166	e8 00 00 00 00	 call	 _abs
  0016b	83 c4 04	 add	 esp, 4
  0016e	83 f8 05	 cmp	 eax, 5
  00171	0f 8d 9a 00 00
	00		 jge	 $LN5@hidden_uni
  00177	83 7d f8 00	 cmp	 DWORD PTR _sec$[ebp], 0
  0017b	74 0a		 je	 SHORT $LN15@hidden_uni
  0017d	8b 45 f8	 mov	 eax, DWORD PTR _sec$[ebp]
  00180	8b 08		 mov	 ecx, DWORD PTR [eax]
  00182	89 4d b4	 mov	 DWORD PTR tv159[ebp], ecx
  00185	eb 1d		 jmp	 SHORT $LN16@hidden_uni
$LN15@hidden_uni:
  00187	68 87 02 00 00	 push	 647			; 00000287H
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00191	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00197	52		 push	 edx
  00198	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN16@hidden_uni:
  001a4	b8 01 00 00 00	 mov	 eax, 1
  001a9	85 c0		 test	 eax, eax
  001ab	74 09		 je	 SHORT $LN17@hidden_uni
  001ad	c7 45 b0 16 01
	00 00		 mov	 DWORD PTR tv166[ebp], 278 ; 00000116H
  001b4	eb 1d		 jmp	 SHORT $LN18@hidden_uni
$LN17@hidden_uni:
  001b6	68 87 02 00 00	 push	 647			; 00000287H
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001c6	51		 push	 ecx
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN18@hidden_uni:
  001d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A ; gunship_current_sector
  001d9	8b 72 0c	 mov	 esi, DWORD PTR [edx+12]
  001dc	c1 ee 10	 shr	 esi, 16			; 00000010H
  001df	81 e6 ff 00 00
	00		 and	 esi, 255		; 000000ffH
  001e5	68 16 01 00 00	 push	 278			; 00000116H
  001ea	8b 45 f8	 mov	 eax, DWORD PTR _sec$[ebp]
  001ed	50		 push	 eax
  001ee	69 4d b4 5c 04
	00 00		 imul	 ecx, DWORD PTR tv159[ebp], 1116
  001f5	8b 55 b0	 mov	 edx, DWORD PTR tv166[ebp]
  001f8	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  001ff	ff d0		 call	 eax
  00201	2b f0		 sub	 esi, eax
  00203	56		 push	 esi
  00204	e8 00 00 00 00	 call	 _abs
  00209	83 c4 04	 add	 esp, 4
  0020c	83 f8 05	 cmp	 eax, 5
  0020f	7c 07		 jl	 SHORT $LN4@hidden_uni
$LN5@hidden_uni:

; 648  : 	{
; 649  : 		return TRUE;

  00211	b8 01 00 00 00	 mov	 eax, 1
  00216	eb 02		 jmp	 SHORT $LN1@hidden_uni
$LN4@hidden_uni:

; 650  : 	}
; 651  : 
; 652  : 	return FALSE;

  00218	33 c0		 xor	 eax, eax
$LN1@hidden_uni:

; 653  : }

  0021a	5f		 pop	 edi
  0021b	5e		 pop	 esi
  0021c	5b		 pop	 ebx
  0021d	8b e5		 mov	 esp, ebp
  0021f	5d		 pop	 ebp
  00220	c2 04 00	 ret	 4
?hidden_unit@@YGHPAUENTITY@@@Z ENDP			; hidden_unit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?open_tacview_log@@YGXXZ
_TEXT	SEGMENT
_year$ = -24						; size = 4
_month$ = -20						; size = 4
_day$ = -16						; size = 4
_minute$ = -12						; size = 4
_hour$ = -8						; size = 4
_tod$ = -4						; size = 4
?open_tacview_log@@YGXXZ PROC				; open_tacview_log, COMDAT

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 101  : 	int
; 102  : 		tod = get_system_time_of_day(),

  00009	e8 00 00 00 00	 call	 ?get_system_time_of_day@@YGHXZ ; get_system_time_of_day
  0000e	89 45 fc	 mov	 DWORD PTR _tod$[ebp], eax

; 103  : 		hour = tod / 3600,

  00011	8b 45 fc	 mov	 eax, DWORD PTR _tod$[ebp]
  00014	99		 cdq
  00015	b9 10 0e 00 00	 mov	 ecx, 3600		; 00000e10H
  0001a	f7 f9		 idiv	 ecx
  0001c	89 45 f8	 mov	 DWORD PTR _hour$[ebp], eax

; 104  : 		minute = (tod % 3600) / 60,

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _tod$[ebp]
  00022	99		 cdq
  00023	b9 10 0e 00 00	 mov	 ecx, 3600		; 00000e10H
  00028	f7 f9		 idiv	 ecx
  0002a	8b c2		 mov	 eax, edx
  0002c	99		 cdq
  0002d	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00032	f7 f9		 idiv	 ecx
  00034	89 45 f4	 mov	 DWORD PTR _minute$[ebp], eax

; 105  : 		day,
; 106  : 		month,
; 107  : 		year;
; 108  : 
; 109  : 	// init variables
; 110  : 	last_xsector = last_zsector = -1;

  00037	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?last_zsector@@3HA, -1
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_zsector@@3HA
  00046	a3 00 00 00 00	 mov	 DWORD PTR ?last_xsector@@3HA, eax

; 111  : 	changed_sector = TRUE;

  0004b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?changed_sector@@3HA, 1

; 112  : 	friendly_side = 0;

  00055	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?friendly_side@@3HA, 0

; 113  : 	update_group = 0;

  0005f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?update_group@@3HA, 0

; 114  : 	slow_update_group = 0;

  00069	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slow_update_group@@3HA, 0

; 115  : 	medium_update_group = 0;

  00073	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?medium_update_group@@3HA, 0

; 116  : 	frequent_update_group = 0;

  0007d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?frequent_update_group@@3HA, 0

; 117  : 
; 118  : 	// EECH doesn't have a specific date in game, so use real life date
; 119  : 	get_system_date(&day, &month, &year);

  00087	8d 45 e8	 lea	 eax, DWORD PTR _year$[ebp]
  0008a	50		 push	 eax
  0008b	8d 4d ec	 lea	 ecx, DWORD PTR _month$[ebp]
  0008e	51		 push	 ecx
  0008f	8d 55 f0	 lea	 edx, DWORD PTR _day$[ebp]
  00092	52		 push	 edx
  00093	e8 00 00 00 00	 call	 ?get_system_date@@YGXPAH00@Z ; get_system_date

; 120  : 	year += 2000;

  00098	8b 45 e8	 mov	 eax, DWORD PTR _year$[ebp]
  0009b	05 d0 07 00 00	 add	 eax, 2000		; 000007d0H
  000a0	89 45 e8	 mov	 DWORD PTR _year$[ebp], eax

; 121  : 	snprintf(log_filename, ARRAY_LENGTH(log_filename), "tacview-logs\\eech-%4d-%02d-%02dT%02d%02d.txt.acmi", year, month, day, hour, minute);

  000a3	8b 45 f4	 mov	 eax, DWORD PTR _minute$[ebp]
  000a6	50		 push	 eax
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _hour$[ebp]
  000aa	51		 push	 ecx
  000ab	8b 55 f0	 mov	 edx, DWORD PTR _day$[ebp]
  000ae	52		 push	 edx
  000af	8b 45 ec	 mov	 eax, DWORD PTR _month$[ebp]
  000b2	50		 push	 eax
  000b3	8b 4d e8	 mov	 ecx, DWORD PTR _year$[ebp]
  000b6	51		 push	 ecx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@LHOACOOL@tacview?9logs?2eech?9?$CF4d?9?$CF02d?9?$CF02d@
  000bc	68 00 01 00 00	 push	 256			; 00000100H
  000c1	68 00 00 00 00	 push	 OFFSET ?log_filename@@3PADA
  000c6	e8 00 00 00 00	 call	 _sprintf_s
  000cb	83 c4 20	 add	 esp, 32			; 00000020H

; 122  : 
; 123  : 	if (tacview_log_file)

  000ce	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  000d5	74 26		 je	 SHORT $LN2@open_tacvi

; 124  : 	{
; 125  : 		ASSERT(FALSE);

  000d7	b8 01 00 00 00	 mov	 eax, 1
  000dc	85 c0		 test	 eax, eax
  000de	74 18		 je	 SHORT $LN3@open_tacvi
  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??open_tacview_log@@YGXXZ@4JA
  000e5	83 c0 19	 add	 eax, 25			; 00000019H
  000e8	50		 push	 eax
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_05MAJJAKPI@FALSE@
  000f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@open_tacvi:

; 126  : 		close_tacview_log();

  000f8	e8 00 00 00 00	 call	 ?close_tacview_log@@YGXXZ ; close_tacview_log
$LN2@open_tacvi:

; 127  : 	}
; 128  : 
; 129  : 	tacview_log_file = safe_fopen(log_filename, "wb");

  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_02GMLFBBN@wb@
  00102	68 00 00 00 00	 push	 OFFSET ?log_filename@@3PADA
  00107	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  0010c	a3 00 00 00 00	 mov	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, eax ; tacview_log_file

; 130  : }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
?open_tacview_log@@YGXXZ ENDP				; open_tacview_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?tacview_log_this_frame@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv65 = -68						; size = 4
_en$ = 8						; size = 4
?tacview_log_this_frame@@YGHPAUENTITY@@@Z PROC		; tacview_log_this_frame, COMDAT

; 853  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 854  : 	// We only update some objects each frame to save FPS and filesize.
; 855  : 	// We update every N object each frame, and by changing which object is first logged
; 856  : 	// we cycle through them so that after N frames all objects have been updated.
; 857  : 	//
; 858  : 	// In addition there are separate update frequencies for different types of objects
; 859  : 	// Objects which move slower, or have more predictable flight paths require less
; 860  : 	// updates
; 861  : 	switch (en->type)

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d bc	 mov	 DWORD PTR tv65[ebp], ecx
  00011	83 7d bc 0a	 cmp	 DWORD PTR tv65[ebp], 10	; 0000000aH
  00015	74 31		 je	 SHORT $LN6@tacview_lo
  00017	83 7d bc 0e	 cmp	 DWORD PTR tv65[ebp], 14	; 0000000eH
  0001b	74 02		 je	 SHORT $LN4@tacview_lo
  0001d	eb 52		 jmp	 SHORT $LN8@tacview_lo
$LN4@tacview_lo:

; 862  : 	{
; 863  : 	case ENTITY_TYPE_HELICOPTER:
; 864  : 		if (++frequent_update_group == FAST_UPDATE_FREQ)

  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?frequent_update_group@@3HA
  00024	83 c0 01	 add	 eax, 1
  00027	a3 00 00 00 00	 mov	 DWORD PTR ?frequent_update_group@@3HA, eax
  0002c	83 3d 00 00 00
	00 04		 cmp	 DWORD PTR ?frequent_update_group@@3HA, 4
  00033	75 11		 jne	 SHORT $LN5@tacview_lo

; 865  : 		{
; 866  : 			frequent_update_group = 0;

  00035	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?frequent_update_group@@3HA, 0

; 867  : 			return TRUE;

  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	eb 54		 jmp	 SHORT $LN1@tacview_lo
$LN5@tacview_lo:

; 868  : 		}
; 869  : 		break;

  00046	eb 50		 jmp	 SHORT $LN2@tacview_lo
$LN6@tacview_lo:

; 870  : 	case ENTITY_TYPE_FIXED_WING:
; 871  : 		if (++medium_update_group == MEDIUM_UPDATE_FREQ)

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?medium_update_group@@3HA
  0004d	83 c0 01	 add	 eax, 1
  00050	a3 00 00 00 00	 mov	 DWORD PTR ?medium_update_group@@3HA, eax
  00055	83 3d 00 00 00
	00 08		 cmp	 DWORD PTR ?medium_update_group@@3HA, 8
  0005c	75 11		 jne	 SHORT $LN7@tacview_lo

; 872  : 		{
; 873  : 			medium_update_group = 0;

  0005e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?medium_update_group@@3HA, 0

; 874  : 			return TRUE;

  00068	b8 01 00 00 00	 mov	 eax, 1
  0006d	eb 2b		 jmp	 SHORT $LN1@tacview_lo
$LN7@tacview_lo:

; 875  : 		}
; 876  : 		break;

  0006f	eb 27		 jmp	 SHORT $LN2@tacview_lo
$LN8@tacview_lo:

; 877  : 	default:
; 878  : #if 0
; 879  : 	case ENTITY_TYPE_WEAPON:
; 880  : 	case ENTITY_TYPE_ROUTED_VEHICLE:
; 881  : 	case ENTITY_TYPE_ANTI_AIRCRAFT:
; 882  : 	case ENTITY_TYPE_CARGO:
; 883  : 	case ENTITY_TYPE_SHIP_VEHICLE:
; 884  : #endif
; 885  : 		if (++slow_update_group == SLOW_UPDATE_FREQ)

  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?slow_update_group@@3HA
  00076	83 c0 01	 add	 eax, 1
  00079	a3 00 00 00 00	 mov	 DWORD PTR ?slow_update_group@@3HA, eax
  0007e	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?slow_update_group@@3HA, 16 ; 00000010H
  00085	75 11		 jne	 SHORT $LN2@tacview_lo

; 886  : 		{
; 887  : 			slow_update_group = 0;

  00087	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slow_update_group@@3HA, 0

; 888  : 			return TRUE;

  00091	b8 01 00 00 00	 mov	 eax, 1
  00096	eb 02		 jmp	 SHORT $LN1@tacview_lo
$LN2@tacview_lo:

; 889  : 		}
; 890  : 		break;
; 891  : 	}
; 892  : 
; 893  : 	return FALSE;

  00098	33 c0		 xor	 eax, eax
$LN1@tacview_lo:

; 894  : }

  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 04 00	 ret	 4
?tacview_log_this_frame@@YGHPAUENTITY@@@Z ENDP		; tacview_log_this_frame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_srtm3_terrain_elevation@@YGXXZ
_TEXT	SEGMENT
_longitude_length$ = -32				; size = 4
_latitude_length$ = -28					; size = 4
_end_longitude$ = -24					; size = 4
_start_longitude$ = -20					; size = 4
_end_latitude$ = -16					; size = 4
_start_latitude$ = -12					; size = 4
_lng$ = -8						; size = 4
_lat$ = -4						; size = 4
?write_srtm3_terrain_elevation@@YGXXZ PROC		; write_srtm3_terrain_elevation, COMDAT

; 746  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 747  : 	int
; 748  : 		lat,
; 749  : 		lng,
; 750  : 		start_latitude = (int)floor(deg(latitude_offset)),

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  00011	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00019	51		 push	 ecx
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 ?floor@@YGMM@Z		; floor
  00024	e8 00 00 00 00	 call	 __ftol2_sse
  00029	89 45 f4	 mov	 DWORD PTR _start_latitude$[ebp], eax

; 751  : 		end_latitude,
; 752  : 		start_longitude = (int)floor(deg(longitude_offset)),

  0002c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?longitude_offset@@3MA
  00034	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0003c	51		 push	 ecx
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	e8 00 00 00 00	 call	 ?floor@@YGMM@Z		; floor
  00047	e8 00 00 00 00	 call	 __ftol2_sse
  0004c	89 45 ec	 mov	 DWORD PTR _start_longitude$[ebp], eax

; 753  : 		end_longitude;
; 754  : 
; 755  : 	float
; 756  : 		latitude_length,
; 757  : 		longitude_length;
; 758  : 
; 759  : 	get_latitude_longitude_length(deg(latitude_offset), &latitude_length, &longitude_length);

  0004f	8d 45 e0	 lea	 eax, DWORD PTR _longitude_length$[ebp]
  00052	50		 push	 eax
  00053	8d 4d e4	 lea	 ecx, DWORD PTR _latitude_length$[ebp]
  00056	51		 push	 ecx
  00057	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  0005f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00067	51		 push	 ecx
  00068	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006d	e8 00 00 00 00	 call	 ?get_latitude_longitude_length@@YGXMPAM0@Z ; get_latitude_longitude_length

; 760  : 
; 761  : 	end_latitude = (int)ceil(deg(latitude_offset) + (MAX_MAP_Z / latitude_length));

  00072	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  0007a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00082	f3 0f 10 0d 44
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0008a	f3 0f 5e 4d e4	 divss	 xmm1, DWORD PTR _latitude_length$[ebp]
  0008f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00093	51		 push	 ecx
  00094	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00099	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0009e	e8 00 00 00 00	 call	 __ftol2_sse
  000a3	89 45 f0	 mov	 DWORD PTR _end_latitude$[ebp], eax

; 762  : 	end_longitude = (int)ceil(deg(longitude_offset) + (MAX_MAP_X / longitude_length));

  000a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?longitude_offset@@3MA
  000ae	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  000b6	f3 0f 10 0d 3c
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  000be	f3 0f 5e 4d e0	 divss	 xmm1, DWORD PTR _longitude_length$[ebp]
  000c3	f3 0f 58 c1	 addss	 xmm0, xmm1
  000c7	51		 push	 ecx
  000c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cd	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  000d2	e8 00 00 00 00	 call	 __ftol2_sse
  000d7	89 45 e8	 mov	 DWORD PTR _end_longitude$[ebp], eax

; 763  : 
; 764  : 	for (lat = start_latitude; lat <= end_latitude; lat++)

  000da	8b 45 f4	 mov	 eax, DWORD PTR _start_latitude$[ebp]
  000dd	89 45 fc	 mov	 DWORD PTR _lat$[ebp], eax
  000e0	eb 09		 jmp	 SHORT $LN4@write_srtm
$LN2@write_srtm:
  000e2	8b 45 fc	 mov	 eax, DWORD PTR _lat$[ebp]
  000e5	83 c0 01	 add	 eax, 1
  000e8	89 45 fc	 mov	 DWORD PTR _lat$[ebp], eax
$LN4@write_srtm:
  000eb	8b 45 fc	 mov	 eax, DWORD PTR _lat$[ebp]
  000ee	3b 45 f0	 cmp	 eax, DWORD PTR _end_latitude$[ebp]
  000f1	7f 2a		 jg	 SHORT $LN3@write_srtm

; 765  : 		for (lng = start_longitude; lng <= end_longitude; lng++)

  000f3	8b 45 ec	 mov	 eax, DWORD PTR _start_longitude$[ebp]
  000f6	89 45 f8	 mov	 DWORD PTR _lng$[ebp], eax
  000f9	eb 09		 jmp	 SHORT $LN7@write_srtm
$LN5@write_srtm:
  000fb	8b 45 f8	 mov	 eax, DWORD PTR _lng$[ebp]
  000fe	83 c0 01	 add	 eax, 1
  00101	89 45 f8	 mov	 DWORD PTR _lng$[ebp], eax
$LN7@write_srtm:
  00104	8b 45 f8	 mov	 eax, DWORD PTR _lng$[ebp]
  00107	3b 45 e8	 cmp	 eax, DWORD PTR _end_longitude$[ebp]
  0010a	7f 0f		 jg	 SHORT $LN6@write_srtm

; 766  : 			write_srtm3_grid(lat, lng);

  0010c	8b 45 f8	 mov	 eax, DWORD PTR _lng$[ebp]
  0010f	50		 push	 eax
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _lat$[ebp]
  00113	51		 push	 ecx
  00114	e8 00 00 00 00	 call	 ?write_srtm3_grid@@YGXHH@Z ; write_srtm3_grid
  00119	eb e0		 jmp	 SHORT $LN5@write_srtm
$LN6@write_srtm:
  0011b	eb c5		 jmp	 SHORT $LN2@write_srtm
$LN3@write_srtm:

; 767  : }

  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c3		 ret	 0
?write_srtm3_terrain_elevation@@YGXXZ ENDP		; write_srtm3_terrain_elevation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_srtm3_grid@@YGXHH@Z
_TEXT	SEGMENT
tv76 = -370						; size = 1
tv69 = -369						; size = 1
_elevation$1 = -304					; size = 2
_int_elevation$2 = -300					; size = 4
_pos$3 = -296						; size = 12
_lng$4 = -284						; size = 4
_longitude_length$5 = -280				; size = 4
_latitude_length$6 = -276				; size = 4
_lat$7 = -272						; size = 4
_column$ = -268						; size = 4
_row$ = -264						; size = 4
_srtm$ = -260						; size = 4
_filename$ = -256					; size = 256
_latitude$ = 8						; size = 4
_longitude$ = 12					; size = 4
?write_srtm3_grid@@YGXHH@Z PROC				; write_srtm3_grid, COMDAT

; 787  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 01 00
	00		 sub	 esp, 372		; 00000174H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 788  : 	char filename[256];
; 789  : 	FILE* srtm = NULL;

  0000c	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _srtm$[ebp], 0

; 790  : 	int row, column;
; 791  : 
; 792  : 	sprintf(filename, "%c%02d%c%03d.hgt", (latitude >= 0) ? 'N' : 'S', abs(latitude), (longitude >= 0) ? 'E' : 'W', abs(longitude));

  00016	83 7d 0c 00	 cmp	 DWORD PTR _longitude$[ebp], 0
  0001a	7c 09		 jl	 SHORT $LN10@write_srtm
  0001c	c6 85 8f fe ff
	ff 45		 mov	 BYTE PTR tv69[ebp], 69	; 00000045H
  00023	eb 07		 jmp	 SHORT $LN11@write_srtm
$LN10@write_srtm:
  00025	c6 85 8f fe ff
	ff 57		 mov	 BYTE PTR tv69[ebp], 87	; 00000057H
$LN11@write_srtm:
  0002c	83 7d 08 00	 cmp	 DWORD PTR _latitude$[ebp], 0
  00030	7c 09		 jl	 SHORT $LN12@write_srtm
  00032	c6 85 8e fe ff
	ff 4e		 mov	 BYTE PTR tv76[ebp], 78	; 0000004eH
  00039	eb 07		 jmp	 SHORT $LN13@write_srtm
$LN12@write_srtm:
  0003b	c6 85 8e fe ff
	ff 53		 mov	 BYTE PTR tv76[ebp], 83	; 00000053H
$LN13@write_srtm:
  00042	8b 45 0c	 mov	 eax, DWORD PTR _longitude$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _abs
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	0f b6 8d 8f fe
	ff ff		 movzx	 ecx, BYTE PTR tv69[ebp]
  00056	51		 push	 ecx
  00057	8b 55 08	 mov	 edx, DWORD PTR _latitude$[ebp]
  0005a	52		 push	 edx
  0005b	e8 00 00 00 00	 call	 _abs
  00060	83 c4 04	 add	 esp, 4
  00063	50		 push	 eax
  00064	0f b6 85 8e fe
	ff ff		 movzx	 eax, BYTE PTR tv76[ebp]
  0006b	50		 push	 eax
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KMIHPHNJ@?$CFc?$CF02d?$CFc?$CF03d?4hgt@
  00071	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _filename$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 _sprintf
  0007d	83 c4 18	 add	 esp, 24			; 00000018H

; 793  : 	srtm = safe_fopen(filename, "wb");

  00080	68 00 00 00 00	 push	 OFFSET ??_C@_02GMLFBBN@wb@
  00085	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00091	89 85 fc fe ff
	ff		 mov	 DWORD PTR _srtm$[ebp], eax

; 794  : 
; 795  : 	for (row = 0; row < 1201; row++)

  00097	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _row$[ebp], 0
  000a1	eb 0f		 jmp	 SHORT $LN4@write_srtm
$LN2@write_srtm:
  000a3	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _row$[ebp]
  000a9	83 c0 01	 add	 eax, 1
  000ac	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _row$[ebp], eax
$LN4@write_srtm:
  000b2	81 bd f8 fe ff
	ff b1 04 00 00	 cmp	 DWORD PTR _row$[ebp], 1201 ; 000004b1H
  000bc	0f 8d fa 01 00
	00		 jge	 $LN3@write_srtm

; 796  : 	{
; 797  : 		float
; 798  : 			lat = (latitude + 1) - (row / 1200.0),

  000c2	8b 45 08	 mov	 eax, DWORD PTR _latitude$[ebp]
  000c5	83 c0 01	 add	 eax, 1
  000c8	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000cc	f2 0f 2a 8d f8
	fe ff ff	 cvtsi2sd xmm1, DWORD PTR _row$[ebp]
  000d4	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4092c00000000000
  000dc	f2 0f 5c c1	 subsd	 xmm0, xmm1
  000e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e4	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _lat$7[ebp], xmm0

; 799  : 			latitude_length, //= (M1 + (M2 * cos(2 * rad(lat)) + (M3 * cos(4 * rad(lat))))),
; 800  : 			longitude_length; //= (P1 * cos(fabs(rad(lat)))) + (P2 * cos(3 * fabs(rad(lat))));
; 801  : 
; 802  : 		get_latitude_longitude_length(lat, &latitude_length, &longitude_length);

  000ec	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _longitude_length$5[ebp]
  000f2	50		 push	 eax
  000f3	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _latitude_length$6[ebp]
  000f9	51		 push	 ecx
  000fa	51		 push	 ecx
  000fb	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _lat$7[ebp]
  00103	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00108	e8 00 00 00 00	 call	 ?get_latitude_longitude_length@@YGXMPAM0@Z ; get_latitude_longitude_length

; 803  : 
; 804  : 		for (column = 0; column < 1201; column++)

  0010d	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _column$[ebp], 0
  00117	eb 0f		 jmp	 SHORT $LN7@write_srtm
$LN5@write_srtm:
  00119	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _column$[ebp]
  0011f	83 c0 01	 add	 eax, 1
  00122	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _column$[ebp], eax
$LN7@write_srtm:
  00128	81 bd f4 fe ff
	ff b1 04 00 00	 cmp	 DWORD PTR _column$[ebp], 1201 ; 000004b1H
  00132	0f 8d 7f 01 00
	00		 jge	 $LN6@write_srtm

; 805  : 		{
; 806  : 			float
; 807  : 				lng = longitude + (column / 1200.0);

  00138	f2 0f 2a 45 0c	 cvtsi2sd xmm0, DWORD PTR _longitude$[ebp]
  0013d	f2 0f 2a 8d f4
	fe ff ff	 cvtsi2sd xmm1, DWORD PTR _column$[ebp]
  00145	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4092c00000000000
  0014d	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _lng$4[ebp], xmm0

; 808  : 
; 809  : 			vec3d
; 810  : 				pos;
; 811  : 
; 812  : 			int
; 813  : 				int_elevation;
; 814  : 
; 815  : 			short
; 816  : 				elevation;
; 817  : 
; 818  : 			pos.x = (lng - deg(longitude_offset)) * longitude_length,

  0015d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?longitude_offset@@3MA
  00165	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0016d	f3 0f 10 8d e4
	fe ff ff	 movss	 xmm1, DWORD PTR _lng$4[ebp]
  00175	f3 0f 5c c8	 subss	 xmm1, xmm0
  00179	f3 0f 59 8d e8
	fe ff ff	 mulss	 xmm1, DWORD PTR _longitude_length$5[ebp]
  00181	f3 0f 11 8d d8
	fe ff ff	 movss	 DWORD PTR _pos$3[ebp], xmm1
  00189	0f 57 c0	 xorps	 xmm0, xmm0
  0018c	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _pos$3[ebp+4], xmm0

; 819  : 			pos.y = 0.0;
; 820  : 			pos.z = (lat - deg(latitude_offset)) * latitude_length;

  00194	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  0019c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  001a4	f3 0f 10 8d f0
	fe ff ff	 movss	 xmm1, DWORD PTR _lat$7[ebp]
  001ac	f3 0f 5c c8	 subss	 xmm1, xmm0
  001b0	f3 0f 59 8d ec
	fe ff ff	 mulss	 xmm1, DWORD PTR _latitude_length$6[ebp]
  001b8	f3 0f 11 8d e0
	fe ff ff	 movss	 DWORD PTR _pos$3[ebp+8], xmm1

; 821  : 
; 822  : 			if (point_inside_map_volume(&pos))

  001c0	f3 0f 10 85 d8
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$3[ebp]
  001c8	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  001cf	72 7e		 jb	 SHORT $LN8@write_srtm
  001d1	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001d9	0f 2f 85 d8 fe
	ff ff		 comiss	 xmm0, DWORD PTR _pos$3[ebp]
  001e0	72 6d		 jb	 SHORT $LN8@write_srtm
  001e2	f3 0f 10 85 dc
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$3[ebp+4]
  001ea	0f 2f 05 28 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  001f1	72 5c		 jb	 SHORT $LN8@write_srtm
  001f3	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  001fb	0f 2f 85 dc fe
	ff ff		 comiss	 xmm0, DWORD PTR _pos$3[ebp+4]
  00202	72 4b		 jb	 SHORT $LN8@write_srtm
  00204	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$3[ebp+8]
  0020c	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00213	72 3a		 jb	 SHORT $LN8@write_srtm
  00215	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0021d	0f 2f 85 e0 fe
	ff ff		 comiss	 xmm0, DWORD PTR _pos$3[ebp+8]
  00224	72 29		 jb	 SHORT $LN8@write_srtm

; 823  : 				pos.y = get_3d_terrain_elevation(pos.x, pos.z);

  00226	6a 00		 push	 0
  00228	51		 push	 ecx
  00229	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$3[ebp+8]
  00231	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00236	51		 push	 ecx
  00237	f3 0f 10 85 d8
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$3[ebp]
  0023f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00244	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00249	d9 9d dc fe ff
	ff		 fstp	 DWORD PTR _pos$3[ebp+4]
$LN8@write_srtm:

; 824  : 
; 825  : 			convert_float_to_int(pos.y + 0.99, &int_elevation);

  0024f	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _int_elevation$2[ebp]
  00255	50		 push	 eax
  00256	f3 0f 5a 85 dc
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _pos$3[ebp+4]
  0025e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fefae147ae147ae
  00266	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0026a	51		 push	 ecx
  0026b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00270	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 826  : 			elevation = (short)int_elevation;

  00275	66 8b 85 d4 fe
	ff ff		 mov	 ax, WORD PTR _int_elevation$2[ebp]
  0027c	66 89 85 d0 fe
	ff ff		 mov	 WORD PTR _elevation$1[ebp], ax

; 827  : 			elevation = htons(elevation);

  00283	0f b7 85 d0 fe
	ff ff		 movzx	 eax, WORD PTR _elevation$1[ebp]
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?htons@@YGFF@Z		; htons
  00290	66 89 85 d0 fe
	ff ff		 mov	 WORD PTR _elevation$1[ebp], ax

; 828  : 
; 829  : 			fwrite(&elevation, sizeof(short), 1, srtm);

  00297	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _srtm$[ebp]
  0029d	50		 push	 eax
  0029e	6a 01		 push	 1
  002a0	6a 02		 push	 2
  002a2	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _elevation$1[ebp]
  002a8	51		 push	 ecx
  002a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  002af	83 c4 10	 add	 esp, 16			; 00000010H

; 830  : 		}

  002b2	e9 62 fe ff ff	 jmp	 $LN5@write_srtm
$LN6@write_srtm:

; 831  : 	}

  002b7	e9 e7 fd ff ff	 jmp	 $LN2@write_srtm
$LN3@write_srtm:

; 832  : 
; 833  : 	safe_fclose(srtm);

  002bc	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _srtm$[ebp]
  002c2	50		 push	 eax
  002c3	e8 00 00 00 00	 call	 ?safe_fclose@@YGHPAU_iobuf@@@Z ; safe_fclose

; 834  : }

  002c8	5f		 pop	 edi
  002c9	5e		 pop	 esi
  002ca	5b		 pop	 ebx
  002cb	8b e5		 mov	 esp, ebp
  002cd	5d		 pop	 ebp
  002ce	c2 08 00	 ret	 8
?write_srtm3_grid@@YGXHH@Z ENDP				; write_srtm3_grid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?tacview_update_gunship@@YGXXZ
_TEXT	SEGMENT
?tacview_update_gunship@@YGXXZ PROC			; tacview_update_gunship, COMDAT

; 623  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  : 	if (gunship_current_sector->x_sector != last_xsector ||

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A ; gunship_current_sector
  0000e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00011	c1 e9 08	 shr	 ecx, 8
  00014	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0001a	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?last_xsector@@3HA
  00020	75 19		 jne	 SHORT $LN4@tacview_up
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A ; gunship_current_sector
  00027	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0002a	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0002d	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00033	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?last_zsector@@3HA
  00039	74 3a		 je	 SHORT $LN2@tacview_up
$LN4@tacview_up:

; 625  : 		gunship_current_sector->z_sector != last_zsector)
; 626  : 	{
; 627  : 		last_xsector = gunship_current_sector->x_sector;

  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A ; gunship_current_sector
  00040	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00043	c1 e9 08	 shr	 ecx, 8
  00046	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0004c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?last_xsector@@3HA, ecx

; 628  : 		last_zsector = gunship_current_sector->z_sector;

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A ; gunship_current_sector
  00057	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0005a	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0005d	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00063	89 0d 00 00 00
	00		 mov	 DWORD PTR ?last_zsector@@3HA, ecx

; 629  : 		changed_sector = TRUE;

  00069	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?changed_sector@@3HA, 1

; 630  : 	}
; 631  : 	else

  00073	eb 0a		 jmp	 SHORT $LN1@tacview_up
$LN2@tacview_up:

; 632  : 		changed_sector = FALSE;

  00075	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?changed_sector@@3HA, 0
$LN1@tacview_up:

; 633  : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?tacview_update_gunship@@YGXXZ ENDP			; tacview_update_gunship
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?tacview_reset_frame@@YGHXZ
_TEXT	SEGMENT
?tacview_reset_frame@@YGHXZ PROC			; tacview_reset_frame, COMDAT

; 837  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 838  : 	if (!tacview_log_file)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00010	75 04		 jne	 SHORT $LN2@tacview_re

; 839  : 		return FALSE;

  00012	33 c0		 xor	 eax, eax
  00014	eb 49		 jmp	 SHORT $LN1@tacview_re
$LN2@tacview_re:

; 840  : 
; 841  : 	if (++update_group == SLOW_UPDATE_FREQ)

  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_group@@3HA
  0001b	83 c0 01	 add	 eax, 1
  0001e	a3 00 00 00 00	 mov	 DWORD PTR ?update_group@@3HA, eax
  00023	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?update_group@@3HA, 16 ; 00000010H
  0002a	75 0a		 jne	 SHORT $LN3@tacview_re

; 842  : 		update_group = 0;

  0002c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?update_group@@3HA, 0
$LN3@tacview_re:

; 843  : 
; 844  : 	frequent_update_group = update_group & (FAST_UPDATE_FREQ - 1);

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_group@@3HA
  0003b	83 e0 03	 and	 eax, 3
  0003e	a3 00 00 00 00	 mov	 DWORD PTR ?frequent_update_group@@3HA, eax

; 845  : 	medium_update_group = update_group & (MEDIUM_UPDATE_FREQ - 1);

  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_group@@3HA
  00048	83 e0 07	 and	 eax, 7
  0004b	a3 00 00 00 00	 mov	 DWORD PTR ?medium_update_group@@3HA, eax

; 846  : 	slow_update_group = update_group;

  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_group@@3HA
  00055	a3 00 00 00 00	 mov	 DWORD PTR ?slow_update_group@@3HA, eax

; 847  : 
; 848  : 	return TRUE; // frequent_update_group == 0;

  0005a	b8 01 00 00 00	 mov	 eax, 1
$LN1@tacview_re:

; 849  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?tacview_reset_frame@@YGHXZ ENDP			; tacview_reset_frame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ
_TEXT	SEGMENT
tv80 = -76						; size = 4
_args$ = -4						; size = 4
_en$ = 8						; size = 4
_format$ = 12						; size = 4
?write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ PROC	; write_tacview_debug_event, COMDAT

; 599  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 600  : 	static char
; 601  : 		message[1000],
; 602  : 		buffer[1000];
; 603  : 
; 604  : 	va_list
; 605  : 		args;
; 606  : 
; 607  : 	if (!tacview_log_file)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00010	75 05		 jne	 SHORT $LN2@write_tacv

; 608  : 		return;

  00012	e9 9b 00 00 00	 jmp	 $LN1@write_tacv
$LN2@write_tacv:

; 609  : 
; 610  : 	va_start (args, format);

  00017	8d 45 10	 lea	 eax, DWORD PTR _format$[ebp+4]
  0001a	89 45 fc	 mov	 DWORD PTR _args$[ebp], eax

; 611  : 	vsnprintf (buffer, sizeof(buffer), format, args);

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _args$[ebp]
  00020	50		 push	 eax
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _format$[ebp]
  00024	51		 push	 ecx
  00025	68 e8 03 00 00	 push	 1000			; 000003e8H
  0002a	68 00 00 00 00	 push	 OFFSET ?buffer@?1??write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ@4PADA
  0002f	e8 00 00 00 00	 call	 _vsnprintf
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 612  : 	va_end(args);

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _args$[ebp], 0

; 613  : 
; 614  : 	latin1_to_utf8(buffer, message, sizeof(message), TRUE);

  0003e	6a 01		 push	 1
  00040	68 e8 03 00 00	 push	 1000			; 000003e8H
  00045	68 00 00 00 00	 push	 OFFSET ?message@?1??write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ@4PADA
  0004a	68 00 00 00 00	 push	 OFFSET ?buffer@?1??write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ@4PADA
  0004f	e8 00 00 00 00	 call	 ?latin1_to_utf8@@YGXPBDPADIH@Z ; latin1_to_utf8

; 615  : 
; 616  : 	if (en)

  00054	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00058	74 40		 je	 SHORT $LN3@write_tacv

; 617  : 		fprintf(tacview_log_file, "!f8,%x,%s\n", tacview_id(en), message);

  0005a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005e	74 11		 je	 SHORT $LN6@write_tacv
  00060	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00063	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00069	c1 f8 04	 sar	 eax, 4
  0006c	89 45 b4	 mov	 DWORD PTR tv80[ebp], eax
  0006f	eb 07		 jmp	 SHORT $LN7@write_tacv
$LN6@write_tacv:
  00071	c7 45 b4 ff ff
	ff ff		 mov	 DWORD PTR tv80[ebp], -1
$LN7@write_tacv:
  00078	68 00 00 00 00	 push	 OFFSET ?message@?1??write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ@4PADA
  0007d	8b 4d b4	 mov	 ecx, DWORD PTR tv80[ebp]
  00080	83 c1 02	 add	 ecx, 2
  00083	51		 push	 ecx
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HBNCEFPN@?$CBf8?0?$CFx?0?$CFs?6@
  00089	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 _fprintf
  00095	83 c4 10	 add	 esp, 16			; 00000010H

; 618  : 	else

  00098	eb 18		 jmp	 SHORT $LN1@write_tacv
$LN3@write_tacv:

; 619  : 		fprintf(tacview_log_file, "!f8,,%s\n", message);

  0009a	68 00 00 00 00	 push	 OFFSET ?message@?1??write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ@4PADA
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_08EOJPFJHP@?$CBf8?0?0?$CFs?6@
  000a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 _fprintf
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@write_tacv:

; 620  : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
?write_tacview_debug_event@@YAXPAUENTITY@@PBDZZ ENDP	; write_tacview_debug_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z
_TEXT	SEGMENT
tv323 = -112						; size = 8
tv381 = -104						; size = 8
tv374 = -100						; size = 4
tv359 = -96						; size = 4
tv315 = -96						; size = 8
tv171 = -96						; size = 4
tv86 = -96						; size = 4
tv349 = -92						; size = 4
tv163 = -92						; size = 4
tv153 = -92						; size = 4
tv79 = -92						; size = 4
_raw$1 = -24						; size = 4
_longitude$2 = -20					; size = 4
_longitude_length$3 = -16				; size = 4
_abs_lat$4 = -12					; size = 4
_latitude$5 = -8					; size = 4
_pos$6 = -4						; size = 4
_en$ = 8						; size = 4
_moved$ = 12						; size = 4
_rotated$ = 16						; size = 4
_force$ = 20						; size = 4
?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z PROC	; write_tacview_unit_update, COMDAT

; 656  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 657  : 	ASSERT(command_line_tacview_logging);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 0 ; command_line_tacview_logging
  00010	75 18		 jne	 SHORT $LN2@write_tacv
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z@4JA
  00017	83 c0 01	 add	 eax, 1
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@CBKIMPIA@command_line_tacview_logging@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@write_tacv:

; 658  : 
; 659  : 	if (!force)

  0002a	83 7d 14 00	 cmp	 DWORD PTR _force$[ebp], 0
  0002e	0f 85 20 01 00
	00		 jne	 $LN3@write_tacv

; 660  : 	{
; 661  : 		if (!tacview_log_this_frame(en))

  00034	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?tacview_log_this_frame@@YGHPAUENTITY@@@Z ; tacview_log_this_frame
  0003d	85 c0		 test	 eax, eax
  0003f	75 05		 jne	 SHORT $LN5@write_tacv

; 662  : 			return;

  00041	e9 23 04 00 00	 jmp	 $LN1@write_tacv
$LN5@write_tacv:

; 663  : 
; 664  : 		if (command_line_tacview_logging < 3)

  00046	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  0004d	0f 8d ee 00 00
	00		 jge	 $LN11@write_tacv

; 665  : 		{
; 666  : 			// start logging if in mission mode and inside area/FoW
; 667  : 			if (!get_local_entity_int_value(en, INT_TYPE_TACVIEW_LOGGING))

  00053	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00057	74 0a		 je	 SHORT $LN21@write_tacv
  00059	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d a4	 mov	 DWORD PTR tv79[ebp], ecx
  00061	eb 1d		 jmp	 SHORT $LN22@write_tacv
$LN21@write_tacv:
  00063	68 9b 02 00 00	 push	 667			; 0000029bH
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00079	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN22@write_tacv:
  00080	b8 01 00 00 00	 mov	 eax, 1
  00085	85 c0		 test	 eax, eax
  00087	74 09		 je	 SHORT $LN23@write_tacv
  00089	c7 45 a0 d1 00
	00 00		 mov	 DWORD PTR tv86[ebp], 209 ; 000000d1H
  00090	eb 1d		 jmp	 SHORT $LN24@write_tacv
$LN23@write_tacv:
  00092	68 9b 02 00 00	 push	 667			; 0000029bH
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a8	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN24@write_tacv:
  000af	68 d1 00 00 00	 push	 209			; 000000d1H
  000b4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000b7	52		 push	 edx
  000b8	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv79[ebp], 1116
  000bf	8b 4d a0	 mov	 ecx, DWORD PTR tv86[ebp]
  000c2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000c9	ff d2		 call	 edx
  000cb	85 c0		 test	 eax, eax
  000cd	75 34		 jne	 SHORT $LN7@write_tacv

; 668  : 			{
; 669  : 				if (en->type != ENTITY_TYPE_WEAPON && (moved || changed_sector) && !hidden_unit(en))

  000cf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d2	83 38 25	 cmp	 DWORD PTR [eax], 37	; 00000025H
  000d5	74 25		 je	 SHORT $LN9@write_tacv
  000d7	83 7d 0c 00	 cmp	 DWORD PTR _moved$[ebp], 0
  000db	75 09		 jne	 SHORT $LN10@write_tacv
  000dd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?changed_sector@@3HA, 0
  000e4	74 16		 je	 SHORT $LN9@write_tacv
$LN10@write_tacv:
  000e6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?hidden_unit@@YGHPAUENTITY@@@Z ; hidden_unit
  000ef	85 c0		 test	 eax, eax
  000f1	75 09		 jne	 SHORT $LN9@write_tacv

; 670  : 					write_tacview_new_unit(en);

  000f3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?write_tacview_new_unit@@YGXPAUENTITY@@@Z ; write_tacview_new_unit
$LN9@write_tacv:

; 671  : 
; 672  : 				return;

  000fc	e9 68 03 00 00	 jmp	 $LN1@write_tacv
  00101	eb 3e		 jmp	 SHORT $LN11@write_tacv
$LN7@write_tacv:

; 673  : 			}
; 674  : 			// remove aircraft which have left mission area (don't bother about ground units, they move so slow)
; 675  : 			// and missiles and projectile live too short
; 676  : 			else if ((en->type == ENTITY_TYPE_FIXED_WING || en->type == ENTITY_TYPE_HELICOPTER) && (moved || changed_sector) && hidden_unit(en))

  00103	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00106	83 38 0a	 cmp	 DWORD PTR [eax], 10	; 0000000aH
  00109	74 08		 je	 SHORT $LN12@write_tacv
  0010b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0010e	83 38 0e	 cmp	 DWORD PTR [eax], 14	; 0000000eH
  00111	75 2e		 jne	 SHORT $LN11@write_tacv
$LN12@write_tacv:
  00113	83 7d 0c 00	 cmp	 DWORD PTR _moved$[ebp], 0
  00117	75 09		 jne	 SHORT $LN13@write_tacv
  00119	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?changed_sector@@3HA, 0
  00120	74 1f		 je	 SHORT $LN11@write_tacv
$LN13@write_tacv:
  00122	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ?hidden_unit@@YGHPAUENTITY@@@Z ; hidden_unit
  0012b	85 c0		 test	 eax, eax
  0012d	74 12		 je	 SHORT $LN11@write_tacv

; 677  : 			{
; 678  : 				write_tacview_unit_event(en, TACVIEW_UNIT_LEFT_AREA, NULL);

  0012f	6a 00		 push	 0
  00131	6a 00		 push	 0
  00133	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z ; write_tacview_unit_event

; 679  : 				return;

  0013c	e9 28 03 00 00	 jmp	 $LN1@write_tacv
$LN11@write_tacv:

; 680  : 			}
; 681  : 		}
; 682  : 
; 683  : 		if (!moved && !rotated)

  00141	83 7d 0c 00	 cmp	 DWORD PTR _moved$[ebp], 0
  00145	75 0b		 jne	 SHORT $LN14@write_tacv
  00147	83 7d 10 00	 cmp	 DWORD PTR _rotated$[ebp], 0
  0014b	75 05		 jne	 SHORT $LN14@write_tacv

; 684  : 			return;

  0014d	e9 17 03 00 00	 jmp	 $LN1@write_tacv
$LN14@write_tacv:

; 685  : 	}

  00152	eb 11		 jmp	 SHORT $LN15@write_tacv
$LN3@write_tacv:

; 686  : 	else if (!moved && !rotated)

  00154	83 7d 0c 00	 cmp	 DWORD PTR _moved$[ebp], 0
  00158	75 0b		 jne	 SHORT $LN15@write_tacv
  0015a	83 7d 10 00	 cmp	 DWORD PTR _rotated$[ebp], 0
  0015e	75 05		 jne	 SHORT $LN15@write_tacv

; 687  : 		return;

  00160	e9 04 03 00 00	 jmp	 $LN1@write_tacv
$LN15@write_tacv:

; 688  : 
; 689  : 	fprintf(tacview_log_file, "%x,", tacview_id(en));

  00165	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00169	74 11		 je	 SHORT $LN25@write_tacv
  0016b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016e	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00174	c1 f8 04	 sar	 eax, 4
  00177	89 45 a4	 mov	 DWORD PTR tv153[ebp], eax
  0017a	eb 07		 jmp	 SHORT $LN26@write_tacv
$LN25@write_tacv:
  0017c	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv153[ebp], -1
$LN26@write_tacv:
  00183	8b 4d a4	 mov	 ecx, DWORD PTR tv153[ebp]
  00186	83 c1 02	 add	 ecx, 2
  00189	51		 push	 ecx
  0018a	68 00 00 00 00	 push	 OFFSET ??_C@_03CKIECNKJ@?$CFx?0@
  0018f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00195	52		 push	 edx
  00196	e8 00 00 00 00	 call	 _fprintf
  0019b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 690  : 
; 691  : 	{
; 692  : 		vec3d
; 693  : 			*pos = get_local_entity_vec3d_ptr(en, VEC3D_TYPE_POSITION);

  0019e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001a2	74 0a		 je	 SHORT $LN27@write_tacv
  001a4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a9	89 4d a4	 mov	 DWORD PTR tv163[ebp], ecx
  001ac	eb 21		 jmp	 SHORT $LN28@write_tacv
$LN27@write_tacv:
  001ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z@4JA
  001b4	83 c2 25	 add	 edx, 37			; 00000025H
  001b7	52		 push	 edx
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c8	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN28@write_tacv:
  001cf	b9 01 00 00 00	 mov	 ecx, 1
  001d4	85 c9		 test	 ecx, ecx
  001d6	74 09		 je	 SHORT $LN29@write_tacv
  001d8	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv171[ebp], 8
  001df	eb 21		 jmp	 SHORT $LN30@write_tacv
$LN29@write_tacv:
  001e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z@4JA
  001e7	83 c2 25	 add	 edx, 37			; 00000025H
  001ea	52		 push	 edx
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fb	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN30@write_tacv:
  00202	6a 08		 push	 8
  00204	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00207	51		 push	 ecx
  00208	6b 55 a4 60	 imul	 edx, DWORD PTR tv163[ebp], 96
  0020c	8b 45 a0	 mov	 eax, DWORD PTR tv171[ebp]
  0020f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00216	ff d1		 call	 ecx
  00218	89 45 fc	 mov	 DWORD PTR _pos$6[ebp], eax

; 694  : 		float
; 695  : 			latitude = (pos->z * latitude_scale),

  0021b	8b 45 fc	 mov	 eax, DWORD PTR _pos$6[ebp]
  0021e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00223	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?latitude_scale@@3MA
  0022b	f3 0f 11 45 f8	 movss	 DWORD PTR _latitude$5[ebp], xmm0

; 696  : 			abs_lat = fabs(latitude_offset + rad(latitude)),

  00230	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _latitude$5[ebp]
  00235	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0023d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  00245	51		 push	 ecx
  00246	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00250	d9 5d f4	 fstp	 DWORD PTR _abs_lat$4[ebp]

; 697  : 			longitude_length = (P1 * cos(abs_lat)) + (P2 * cos(3 * abs_lat)),

  00253	51		 push	 ecx
  00254	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _abs_lat$4[ebp]
  00259	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025e	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00263	dd 5d a0	 fstp	 QWORD PTR tv315[ebp]
  00266	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv315[ebp]
  0026b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40fb334d70a3d70a
  00273	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40400000
  0027b	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _abs_lat$4[ebp]
  00280	51		 push	 ecx
  00281	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00286	f2 0f 11 45 98	 movsd	 QWORD PTR tv381[ebp], xmm0
  0028b	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00290	dd 5d 90	 fstp	 QWORD PTR tv323[ebp]
  00293	f2 0f 10 45 90	 movsd	 xmm0, QWORD PTR tv323[ebp]
  00298	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c057600000000000
  002a0	f2 0f 10 4d 98	 movsd	 xmm1, QWORD PTR tv381[ebp]
  002a5	f2 0f 58 c8	 addsd	 xmm1, xmm0
  002a9	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002ad	f3 0f 11 45 f0	 movss	 DWORD PTR _longitude_length$3[ebp], xmm0

; 698  : 			longitude = (pos->x / longitude_length);

  002b2	8b 45 fc	 mov	 eax, DWORD PTR _pos$6[ebp]
  002b5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b9	f3 0f 5e 45 f0	 divss	 xmm0, DWORD PTR _longitude_length$3[ebp]
  002be	f3 0f 11 45 ec	 movss	 DWORD PTR _longitude$2[ebp], xmm0

; 699  : 
; 700  : 		if (moved)

  002c3	83 7d 0c 00	 cmp	 DWORD PTR _moved$[ebp], 0
  002c7	74 40		 je	 SHORT $LN16@write_tacv

; 701  : 		{
; 702  : 			fprintf(tacview_log_file, "%.6f,%.6f,%.2f", latitude, longitude, pos->y);

  002c9	8b 45 fc	 mov	 eax, DWORD PTR _pos$6[ebp]
  002cc	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  002d1	83 ec 08	 sub	 esp, 8
  002d4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002d9	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _longitude$2[ebp]
  002de	83 ec 08	 sub	 esp, 8
  002e1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002e6	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _latitude$5[ebp]
  002eb	83 ec 08	 sub	 esp, 8
  002ee	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BMINEFDE@?$CF?46f?0?$CF?46f?0?$CF?42f@
  002f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  002fe	51		 push	 ecx
  002ff	e8 00 00 00 00	 call	 _fprintf
  00304	83 c4 20	 add	 esp, 32			; 00000020H

; 703  : 		}
; 704  : 		else

  00307	eb 14		 jmp	 SHORT $LN17@write_tacv
$LN16@write_tacv:

; 705  : 		{
; 706  : 			fputs(",,", tacview_log_file);

  00309	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0030e	50		 push	 eax
  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_02INIPCMH@?0?0@
  00314	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  0031a	83 c4 08	 add	 esp, 8
$LN17@write_tacv:

; 707  : 		}
; 708  : 
; 709  : 		if (rotated)

  0031d	83 7d 10 00	 cmp	 DWORD PTR _rotated$[ebp], 0
  00321	0f 84 2f 01 00
	00		 je	 $LN18@write_tacv

; 710  : 		{
; 711  : 			mobile* raw = (mobile *) get_local_entity_data(en);

  00327	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0032a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0032d	89 4d e8	 mov	 DWORD PTR _raw$1[ebp], ecx

; 712  : 			fprintf(tacview_log_file, ",%.1f,%.1f,%.1f\n",

  00330	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00335	d1 e0		 shl	 eax, 1
  00337	8b 4d e8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0033a	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  0033e	b8 04 00 00 00	 mov	 eax, 4
  00343	d1 e0		 shl	 eax, 1
  00345	51		 push	 ecx
  00346	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0034b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00350	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00355	d1 e1		 shl	 ecx, 1
  00357	8b 55 e8	 mov	 edx, DWORD PTR _raw$1[ebp]
  0035a	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  0035e	b9 04 00 00 00	 mov	 ecx, 4
  00363	6b d1 00	 imul	 edx, ecx, 0
  00366	51		 push	 ecx
  00367	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0036c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00371	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00376	d9 5d a4	 fstp	 DWORD PTR tv349[ebp]
  00379	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv349[ebp]
  0037e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00386	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0038a	83 ec 08	 sub	 esp, 8
  0038d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00392	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00397	d1 e0		 shl	 eax, 1
  00399	8b 4d e8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0039c	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  003a0	b8 04 00 00 00	 mov	 eax, 4
  003a5	c1 e0 00	 shl	 eax, 0
  003a8	51		 push	 ecx
  003a9	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  003ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b3	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  003b8	d9 5d a0	 fstp	 DWORD PTR tv359[ebp]
  003bb	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv359[ebp]
  003c0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  003c8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003cc	83 ec 08	 sub	 esp, 8
  003cf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003d4	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003d9	c1 e1 00	 shl	 ecx, 0
  003dc	8b 55 e8	 mov	 edx, DWORD PTR _raw$1[ebp]
  003df	8d 44 0a 10	 lea	 eax, DWORD PTR [edx+ecx+16]
  003e3	b9 04 00 00 00	 mov	 ecx, 4
  003e8	c1 e1 00	 shl	 ecx, 0
  003eb	51		 push	 ecx
  003ec	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  003f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f6	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  003fb	6b c2 00	 imul	 eax, edx, 0
  003fe	8b 4d e8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00401	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  00405	b8 04 00 00 00	 mov	 eax, 4
  0040a	c1 e0 00	 shl	 eax, 0
  0040d	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00412	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00419	51		 push	 ecx
  0041a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041f	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00424	d9 5d 9c	 fstp	 DWORD PTR tv374[ebp]
  00427	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv374[ebp]
  0042c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00434	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00438	83 ec 08	 sub	 esp, 8
  0043b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00440	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FGLBBJNO@?0?$CF?41f?0?$CF?41f?0?$CF?41f?6@
  00445	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0044b	51		 push	 ecx
  0044c	e8 00 00 00 00	 call	 _fprintf
  00451	83 c4 20	 add	 esp, 32			; 00000020H

; 713  : 					deg(get_roll_from_attitude_matrix(raw->attitude)),
; 714  : 					deg(get_pitch_from_attitude_matrix(raw->attitude)),
; 715  : 					deg(get_heading_from_attitude_matrix(raw->attitude)));
; 716  : 		}
; 717  : 		else

  00454	eb 13		 jmp	 SHORT $LN19@write_tacv
$LN18@write_tacv:

; 718  : 		{
; 719  : 			fprintf(tacview_log_file, ",,,\n");

  00456	68 00 00 00 00	 push	 OFFSET ??_C@_04BMLAINGP@?0?0?0?6@
  0045b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00460	50		 push	 eax
  00461	e8 00 00 00 00	 call	 _fprintf
  00466	83 c4 08	 add	 esp, 8
$LN19@write_tacv:
$LN1@write_tacv:

; 720  : 		}
; 721  : 	}
; 722  : }

  00469	5f		 pop	 edi
  0046a	5e		 pop	 esi
  0046b	5b		 pop	 ebx
  0046c	8b e5		 mov	 esp, ebp
  0046e	5d		 pop	 ebp
  0046f	c2 10 00	 ret	 16			; 00000010H
?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ENDP	; write_tacview_unit_update
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z
_TEXT	SEGMENT
tv186 = -76						; size = 4
tv163 = -76						; size = 4
tv139 = -76						; size = 4
tv77 = -76						; size = 4
tv195 = -72						; size = 4
tv180 = -72						; size = 4
tv155 = -72						; size = 4
tv131 = -72						; size = 4
tv89 = -72						; size = 4
tv84 = -72						; size = 4
tv70 = -72						; size = 4
_event_type$ = -4					; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_related$ = 16						; size = 4
?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z PROC ; write_tacview_unit_event, COMDAT

; 553  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 554  : 	int event_type;
; 555  : 
; 556  : 	if (!tacview_log_file || !get_local_entity_int_value(en, INT_TYPE_TACVIEW_LOGGING))

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00010	74 7c		 je	 SHORT $LN5@write_tacv
  00012	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00016	74 0a		 je	 SHORT $LN15@write_tacv
  00018	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  00020	eb 1d		 jmp	 SHORT $LN16@write_tacv
$LN15@write_tacv:
  00022	68 2c 02 00 00	 push	 556			; 0000022cH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00038	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN16@write_tacv:
  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	85 c0		 test	 eax, eax
  00046	74 09		 je	 SHORT $LN17@write_tacv
  00048	c7 45 b4 d1 00
	00 00		 mov	 DWORD PTR tv77[ebp], 209 ; 000000d1H
  0004f	eb 1d		 jmp	 SHORT $LN18@write_tacv
$LN17@write_tacv:
  00051	68 2c 02 00 00	 push	 556			; 0000022cH
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00067	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN18@write_tacv:
  0006e	68 d1 00 00 00	 push	 209			; 000000d1H
  00073	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00076	52		 push	 edx
  00077	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv70[ebp], 1116
  0007e	8b 4d b4	 mov	 ecx, DWORD PTR tv77[ebp]
  00081	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00088	ff d2		 call	 edx
  0008a	85 c0		 test	 eax, eax
  0008c	75 05		 jne	 SHORT $LN4@write_tacv
$LN5@write_tacv:

; 557  : 		return;

  0008e	e9 52 02 00 00	 jmp	 $LN1@write_tacv
$LN4@write_tacv:

; 558  : 
; 559  : 	switch(type)

  00093	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00096	89 45 b8	 mov	 DWORD PTR tv84[ebp], eax
  00099	83 7d b8 03	 cmp	 DWORD PTR tv84[ebp], 3
  0009d	0f 87 76 01 00
	00		 ja	 $LN10@write_tacv
  000a3	8b 4d b8	 mov	 ecx, DWORD PTR tv84[ebp]
  000a6	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN35@write_tacv[ecx*4]
$LN6@write_tacv:

; 560  : 	{
; 561  : 	case TACVIEW_UNIT_LEFT_AREA:
; 562  : 		fprintf(tacview_log_file, "!28,%x\n", tacview_id(en));

  000ad	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b1	74 11		 je	 SHORT $LN19@write_tacv
  000b3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b6	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000bc	c1 f8 04	 sar	 eax, 4
  000bf	89 45 b8	 mov	 DWORD PTR tv89[ebp], eax
  000c2	eb 07		 jmp	 SHORT $LN20@write_tacv
$LN19@write_tacv:
  000c4	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv89[ebp], -1
$LN20@write_tacv:
  000cb	8b 4d b8	 mov	 ecx, DWORD PTR tv89[ebp]
  000ce	83 c1 02	 add	 ecx, 2
  000d1	51		 push	 ecx
  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_07ELAEDPIO@?$CB28?0?$CFx?6@
  000d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  000dd	52		 push	 edx
  000de	e8 00 00 00 00	 call	 _fprintf
  000e3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 563  : 
; 564  : 		set_local_entity_int_value(en, INT_TYPE_TACVIEW_LOGGING, FALSE);

  000e6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ea	74 0a		 je	 SHORT $LN21@write_tacv
  000ec	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	89 4d b8	 mov	 DWORD PTR tv131[ebp], ecx
  000f4	eb 21		 jmp	 SHORT $LN22@write_tacv
$LN21@write_tacv:
  000f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA
  000fc	83 c2 0b	 add	 edx, 11			; 0000000bH
  000ff	52		 push	 edx
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00110	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN22@write_tacv:
  00117	b9 01 00 00 00	 mov	 ecx, 1
  0011c	85 c9		 test	 ecx, ecx
  0011e	74 09		 je	 SHORT $LN23@write_tacv
  00120	c7 45 b4 d1 00
	00 00		 mov	 DWORD PTR tv139[ebp], 209 ; 000000d1H
  00127	eb 21		 jmp	 SHORT $LN24@write_tacv
$LN23@write_tacv:
  00129	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA
  0012f	83 c2 0b	 add	 edx, 11			; 0000000bH
  00132	52		 push	 edx
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0013d	50		 push	 eax
  0013e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00143	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN24@write_tacv:
  0014a	6a 00		 push	 0
  0014c	68 d1 00 00 00	 push	 209			; 000000d1H
  00151	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00154	51		 push	 ecx
  00155	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv131[ebp], 1116
  0015c	8b 45 b4	 mov	 eax, DWORD PTR tv139[ebp]
  0015f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00166	ff d1		 call	 ecx

; 565  : 
; 566  : 		return;

  00168	e9 78 01 00 00	 jmp	 $LN1@write_tacv
$LN7@write_tacv:

; 567  : 	case TACVIEW_UNIT_DESTROYED:
; 568  : 		event_type = 0x2c;

  0016d	c7 45 fc 2c 00
	00 00		 mov	 DWORD PTR _event_type$[ebp], 44 ; 0000002cH

; 569  : 
; 570  : 		// write a last position update, so that the destroyed position will be accurate
; 571  : 		write_tacview_unit_update(en, TRUE, TRUE, TRUE);

  00174	6a 01		 push	 1
  00176	6a 01		 push	 1
  00178	6a 01		 push	 1
  0017a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update

; 572  : 
; 573  : 		// don't log this unit anymore
; 574  : 		set_local_entity_int_value(en, INT_TYPE_TACVIEW_LOGGING, FALSE);

  00183	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00187	74 0a		 je	 SHORT $LN25@write_tacv
  00189	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018e	89 4d b8	 mov	 DWORD PTR tv155[ebp], ecx
  00191	eb 21		 jmp	 SHORT $LN26@write_tacv
$LN25@write_tacv:
  00193	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA
  00199	83 c2 15	 add	 edx, 21			; 00000015H
  0019c	52		 push	 edx
  0019d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a7	50		 push	 eax
  001a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ad	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN26@write_tacv:
  001b4	b9 01 00 00 00	 mov	 ecx, 1
  001b9	85 c9		 test	 ecx, ecx
  001bb	74 09		 je	 SHORT $LN27@write_tacv
  001bd	c7 45 b4 d1 00
	00 00		 mov	 DWORD PTR tv163[ebp], 209 ; 000000d1H
  001c4	eb 21		 jmp	 SHORT $LN28@write_tacv
$LN27@write_tacv:
  001c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA
  001cc	83 c2 15	 add	 edx, 21			; 00000015H
  001cf	52		 push	 edx
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001da	50		 push	 eax
  001db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN28@write_tacv:
  001e7	6a 00		 push	 0
  001e9	68 d1 00 00 00	 push	 209			; 000000d1H
  001ee	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001f1	51		 push	 ecx
  001f2	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv155[ebp], 1116
  001f9	8b 45 b4	 mov	 eax, DWORD PTR tv163[ebp]
  001fc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00203	ff d1		 call	 ecx

; 575  : 
; 576  : 		break;

  00205	eb 38		 jmp	 SHORT $LN2@write_tacv
$LN8@write_tacv:

; 577  : 	case TACVIEW_UNIT_TOOK_OFF:
; 578  : 		event_type = 0x40;

  00207	c7 45 fc 40 00
	00 00		 mov	 DWORD PTR _event_type$[ebp], 64 ; 00000040H

; 579  : 		break;

  0020e	eb 2f		 jmp	 SHORT $LN2@write_tacv
$LN9@write_tacv:

; 580  : 	case TACVIEW_UNIT_LANDED:
; 581  : 		event_type = 0x41;

  00210	c7 45 fc 41 00
	00 00		 mov	 DWORD PTR _event_type$[ebp], 65 ; 00000041H

; 582  : 		break;

  00217	eb 26		 jmp	 SHORT $LN2@write_tacv
$LN10@write_tacv:

; 583  : 	default:
; 584  : 		ASSERT(FALSE);

  00219	b8 01 00 00 00	 mov	 eax, 1
  0021e	85 c0		 test	 eax, eax
  00220	74 18		 je	 SHORT $LN11@write_tacv
  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z@4JA
  00227	83 c0 1f	 add	 eax, 31			; 0000001fH
  0022a	50		 push	 eax
  0022b	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00230	68 00 00 00 00	 push	 OFFSET ??_C@_05MAJJAKPI@FALSE@
  00235	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@write_tacv:

; 585  : 		return;

  0023a	e9 a6 00 00 00	 jmp	 $LN1@write_tacv
$LN2@write_tacv:

; 586  : 	}
; 587  : 
; 588  : 	if (related)

  0023f	83 7d 10 00	 cmp	 DWORD PTR _related$[ebp], 0
  00243	74 64		 je	 SHORT $LN12@write_tacv

; 589  : 	{
; 590  : 		fprintf(tacview_log_file, "!%x,%x,%x\n", event_type, tacview_id(en), tacview_id(related));

  00245	83 7d 10 00	 cmp	 DWORD PTR _related$[ebp], 0
  00249	74 11		 je	 SHORT $LN29@write_tacv
  0024b	8b 45 10	 mov	 eax, DWORD PTR _related$[ebp]
  0024e	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00254	c1 f8 04	 sar	 eax, 4
  00257	89 45 b8	 mov	 DWORD PTR tv180[ebp], eax
  0025a	eb 07		 jmp	 SHORT $LN30@write_tacv
$LN29@write_tacv:
  0025c	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv180[ebp], -1
$LN30@write_tacv:
  00263	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00267	74 11		 je	 SHORT $LN31@write_tacv
  00269	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0026c	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00272	c1 f9 04	 sar	 ecx, 4
  00275	89 4d b4	 mov	 DWORD PTR tv186[ebp], ecx
  00278	eb 07		 jmp	 SHORT $LN32@write_tacv
$LN31@write_tacv:
  0027a	c7 45 b4 ff ff
	ff ff		 mov	 DWORD PTR tv186[ebp], -1
$LN32@write_tacv:
  00281	8b 55 b8	 mov	 edx, DWORD PTR tv180[ebp]
  00284	83 c2 02	 add	 edx, 2
  00287	52		 push	 edx
  00288	8b 45 b4	 mov	 eax, DWORD PTR tv186[ebp]
  0028b	83 c0 02	 add	 eax, 2
  0028e	50		 push	 eax
  0028f	8b 4d fc	 mov	 ecx, DWORD PTR _event_type$[ebp]
  00292	51		 push	 ecx
  00293	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NGJIBFLI@?$CB?$CFx?0?$CFx?0?$CFx?6@
  00298	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0029e	52		 push	 edx
  0029f	e8 00 00 00 00	 call	 _fprintf
  002a4	83 c4 14	 add	 esp, 20			; 00000014H

; 591  : 	}
; 592  : 	else

  002a7	eb 3c		 jmp	 SHORT $LN1@write_tacv
$LN12@write_tacv:

; 593  : 	{
; 594  : 		fprintf(tacview_log_file, "!%x,%x,?\n", event_type, tacview_id(en));

  002a9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002ad	74 11		 je	 SHORT $LN33@write_tacv
  002af	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b2	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  002b8	c1 f8 04	 sar	 eax, 4
  002bb	89 45 b8	 mov	 DWORD PTR tv195[ebp], eax
  002be	eb 07		 jmp	 SHORT $LN34@write_tacv
$LN33@write_tacv:
  002c0	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv195[ebp], -1
$LN34@write_tacv:
  002c7	8b 4d b8	 mov	 ecx, DWORD PTR tv195[ebp]
  002ca	83 c1 02	 add	 ecx, 2
  002cd	51		 push	 ecx
  002ce	8b 55 fc	 mov	 edx, DWORD PTR _event_type$[ebp]
  002d1	52		 push	 edx
  002d2	68 00 00 00 00	 push	 OFFSET ??_C@_09KCNLIEGM@?$CB?$CFx?0?$CFx?0?$DP?6@
  002d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  002dc	50		 push	 eax
  002dd	e8 00 00 00 00	 call	 _fprintf
  002e2	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@write_tacv:

; 595  : 	}
; 596  : }

  002e5	5f		 pop	 edi
  002e6	5e		 pop	 esi
  002e7	5b		 pop	 ebx
  002e8	8b e5		 mov	 esp, ebp
  002ea	5d		 pop	 ebp
  002eb	c2 0c 00	 ret	 12			; 0000000cH
  002ee	66 90		 npad	 2
$LN35@write_tacv:
  002f0	00 00 00 00	 DD	 $LN6@write_tacv
  002f4	00 00 00 00	 DD	 $LN7@write_tacv
  002f8	00 00 00 00	 DD	 $LN8@write_tacv
  002fc	00 00 00 00	 DD	 $LN9@write_tacv
?write_tacview_unit_event@@YGXPAUENTITY@@W4tacview_event_type@@0@Z ENDP ; write_tacview_unit_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_new_unit@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv337 = -312						; size = 4
tv326 = -308						; size = 4
tv426 = -304						; size = 4
tv318 = -304						; size = 4
tv415 = -300						; size = 4
tv306 = -300						; size = 4
tv567 = -296						; size = 4
tv407 = -296						; size = 4
tv303 = -296						; size = 4
tv588 = -292						; size = 4
tv556 = -292						; size = 4
tv472 = -292						; size = 4
tv453 = -292						; size = 4
tv394 = -292						; size = 4
tv355 = -292						; size = 4
tv295 = -292						; size = 4
tv274 = -292						; size = 4
tv253 = -292						; size = 4
tv228 = -292						; size = 4
tv207 = -292						; size = 4
tv188 = -292						; size = 4
tv168 = -292						; size = 4
tv147 = -292						; size = 4
tv84 = -292						; size = 4
tv580 = -288						; size = 4
tv548 = -288						; size = 4
tv517 = -288						; size = 4
tv512 = -288						; size = 4
tv488 = -288						; size = 4
tv483 = -288						; size = 4
tv465 = -288						; size = 4
tv445 = -288						; size = 4
tv386 = -288						; size = 4
tv366 = -288						; size = 4
tv347 = -288						; size = 4
tv287 = -288						; size = 4
tv266 = -288						; size = 4
tv245 = -288						; size = 4
tv220 = -288						; size = 4
tv200 = -288						; size = 4
tv180 = -288						; size = 4
tv160 = -288						; size = 4
tv140 = -288						; size = 4
tv94 = -288						; size = 4
tv91 = -288						; size = 4
tv76 = -288						; size = 4
_name$1 = -220						; size = 4
_type$2 = -216						; size = 4
_parent_str$3 = -212					; size = 16
_parent$4 = -196					; size = 4
_name$5 = -192						; size = 4
_type$6 = -188						; size = 4
_height_str$7 = -184					; size = 10
_type$8 = -172						; size = 4
_height$9 = -168					; size = 4
_width$10 = -164					; size = 4
_length$11 = -160					; size = 4
_raw_pilot$12 = -156					; size = 4
_aircrew$13 = -152					; size = 4
_pilot$14 = -148					; size = 128
_callsign$15 = -20					; size = 4
_group$16 = -16						; size = 4
_type$17 = -12						; size = 4
_is_mobile$ = -8					; size = 4
_sub_type$ = -4						; size = 4
_en$ = 8						; size = 4
?write_tacview_new_unit@@YGXPAUENTITY@@@Z PROC		; write_tacview_new_unit, COMDAT

; 251  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 38 01 00
	00		 sub	 esp, 312		; 00000138H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 252  : 	entity_sub_types sub_type;
; 253  : 	int is_mobile = TRUE;

  0000c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _is_mobile$[ebp], 1

; 254  : 
; 255  : 	if (!en || !tacview_log_file)

  00013	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00017	74 09		 je	 SHORT $LN14@write_tacv
  00019	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00020	75 05		 jne	 SHORT $LN13@write_tacv
$LN14@write_tacv:

; 256  : 		return;

  00022	e9 29 10 00 00	 jmp	 $LN1@write_tacv
$LN13@write_tacv:

; 257  : 
; 258  : 	if (command_line_tacview_logging < 3 && hidden_unit(en))

  00027	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  0002e	7d 12		 jge	 SHORT $LN15@write_tacv
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?hidden_unit@@YGHPAUENTITY@@@Z ; hidden_unit
  00039	85 c0		 test	 eax, eax
  0003b	74 05		 je	 SHORT $LN15@write_tacv

; 259  : 		return;

  0003d	e9 0e 10 00 00	 jmp	 $LN1@write_tacv
$LN15@write_tacv:

; 260  : 
; 261  : 	sub_type = get_local_entity_int_value(en, INT_TYPE_ENTITY_SUB_TYPE);

  00042	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00046	74 0d		 je	 SHORT $LN62@write_tacv
  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004d	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv76[ebp], ecx
  00053	eb 24		 jmp	 SHORT $LN63@write_tacv
$LN62@write_tacv:
  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  0005b	83 c2 0a	 add	 edx, 10			; 0000000aH
  0005e	52		 push	 edx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006f	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN63@write_tacv:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 0c		 je	 SHORT $LN64@write_tacv
  00082	c7 85 dc fe ff
	ff 34 00 00 00	 mov	 DWORD PTR tv84[ebp], 52	; 00000034H
  0008c	eb 24		 jmp	 SHORT $LN65@write_tacv
$LN64@write_tacv:
  0008e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00094	83 c2 0a	 add	 edx, 10			; 0000000aH
  00097	52		 push	 edx
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a8	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN65@write_tacv:
  000b2	6a 34		 push	 52			; 00000034H
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b7	51		 push	 ecx
  000b8	69 95 e0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv76[ebp], 1116
  000c2	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv84[ebp]
  000c8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000cf	ff d1		 call	 ecx
  000d1	89 45 fc	 mov	 DWORD PTR _sub_type$[ebp], eax

; 262  : 
; 263  : 	switch (en->type)

  000d4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv91[ebp], ecx
  000df	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR tv91[ebp]
  000e5	83 ea 01	 sub	 edx, 1
  000e8	89 95 e0 fe ff
	ff		 mov	 DWORD PTR tv91[ebp], edx
  000ee	83 bd e0 fe ff
	ff 24		 cmp	 DWORD PTR tv91[ebp], 36	; 00000024H
  000f5	0f 87 9d 0e 00
	00		 ja	 $LN59@write_tacv
  000fb	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv91[ebp]
  00101	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN146@write_tacv[eax]
  00108	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN148@write_tacv[ecx*4]
$LN16@write_tacv:

; 264  : 	{
; 265  : 	case ENTITY_TYPE_HELICOPTER:
; 266  : 	case ENTITY_TYPE_FIXED_WING:
; 267  : 		{
; 268  : 			int
; 269  : 				type = (en->type == ENTITY_TYPE_HELICOPTER) ? 0x18 : 0x10;

  0010f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00112	83 38 0e	 cmp	 DWORD PTR [eax], 14	; 0000000eH
  00115	75 0c		 jne	 SHORT $LN66@write_tacv
  00117	c7 85 e0 fe ff
	ff 18 00 00 00	 mov	 DWORD PTR tv94[ebp], 24	; 00000018H
  00121	eb 0a		 jmp	 SHORT $LN67@write_tacv
$LN66@write_tacv:
  00123	c7 85 e0 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR tv94[ebp], 16	; 00000010H
$LN67@write_tacv:
  0012d	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  00133	89 4d f4	 mov	 DWORD PTR _type$17[ebp], ecx

; 270  : 			entity
; 271  : 				*group = NULL;

  00136	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _group$16[ebp], 0

; 272  : 			const char
; 273  : 				*callsign = NULL;

  0013d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _callsign$15[ebp], 0

; 274  : 			char
; 275  : 				pilot[128] = "";

  00144	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00149	88 85 6c ff ff
	ff		 mov	 BYTE PTR _pilot$14[ebp], al
  0014f	6a 7f		 push	 127			; 0000007fH
  00151	6a 00		 push	 0
  00153	8d 85 6d ff ff
	ff		 lea	 eax, DWORD PTR _pilot$14[ebp+1]
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 _memset
  0015f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 276  : 
; 277  : 			if (get_local_entity_int_value(en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00162	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00166	74 0d		 je	 SHORT $LN68@write_tacv
  00168	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016d	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv140[ebp], ecx
  00173	eb 20		 jmp	 SHORT $LN69@write_tacv
$LN68@write_tacv:
  00175	68 15 01 00 00	 push	 277			; 00000115H
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00185	52		 push	 edx
  00186	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018b	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN69@write_tacv:
  00195	b8 01 00 00 00	 mov	 eax, 1
  0019a	85 c0		 test	 eax, eax
  0019c	74 0c		 je	 SHORT $LN70@write_tacv
  0019e	c7 85 dc fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv147[ebp], 156 ; 0000009cH
  001a8	eb 20		 jmp	 SHORT $LN71@write_tacv
$LN70@write_tacv:
  001aa	68 15 01 00 00	 push	 277			; 00000115H
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001ba	51		 push	 ecx
  001bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c0	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], 0
$LN71@write_tacv:
  001ca	68 9c 00 00 00	 push	 156			; 0000009cH
  001cf	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001d2	52		 push	 edx
  001d3	69 85 e0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv140[ebp], 1116
  001dd	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv147[ebp]
  001e3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001ea	ff d2		 call	 edx
  001ec	85 c0		 test	 eax, eax
  001ee	0f 84 a2 02 00
	00		 je	 $LN17@write_tacv

; 278  : 			{
; 279  : 				entity* aircrew = get_local_entity_first_child(en, LIST_TYPE_AIRCREW);

  001f4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001f8	74 0d		 je	 SHORT $LN72@write_tacv
  001fa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ff	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv160[ebp], ecx
  00205	eb 24		 jmp	 SHORT $LN73@write_tacv
$LN72@write_tacv:
  00207	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  0020d	83 c2 1c	 add	 edx, 28			; 0000001cH
  00210	52		 push	 edx
  00211	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00216	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0021b	50		 push	 eax
  0021c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00221	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv160[ebp], 0
$LN73@write_tacv:
  0022b	b9 01 00 00 00	 mov	 ecx, 1
  00230	85 c9		 test	 ecx, ecx
  00232	74 0c		 je	 SHORT $LN74@write_tacv
  00234	c7 85 dc fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv168[ebp], 1
  0023e	eb 24		 jmp	 SHORT $LN75@write_tacv
$LN74@write_tacv:
  00240	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00246	83 c2 1c	 add	 edx, 28			; 0000001cH
  00249	52		 push	 edx
  0024a	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00254	50		 push	 eax
  00255	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025a	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv168[ebp], 0
$LN75@write_tacv:
  00264	6a 01		 push	 1
  00266	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00269	51		 push	 ecx
  0026a	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv160[ebp], 180
  00274	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv168[ebp]
  0027a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00281	ff d1		 call	 ecx
  00283	89 85 68 ff ff
	ff		 mov	 DWORD PTR _aircrew$13[ebp], eax

; 280  : 				for (; aircrew; aircrew = get_local_entity_child_succ(aircrew, LIST_TYPE_AIRCREW))

  00289	e9 9e 00 00 00	 jmp	 $LN6@write_tacv
$LN4@write_tacv:
  0028e	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _aircrew$13[ebp], 0
  00295	74 10		 je	 SHORT $LN76@write_tacv
  00297	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _aircrew$13[ebp]
  0029d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0029f	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv180[ebp], ecx
  002a5	eb 24		 jmp	 SHORT $LN77@write_tacv
$LN76@write_tacv:
  002a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  002ad	83 c2 1d	 add	 edx, 29			; 0000001dH
  002b0	52		 push	 edx
  002b1	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002bb	50		 push	 eax
  002bc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c1	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN77@write_tacv:
  002cb	b9 01 00 00 00	 mov	 ecx, 1
  002d0	85 c9		 test	 ecx, ecx
  002d2	74 0c		 je	 SHORT $LN78@write_tacv
  002d4	c7 85 dc fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv188[ebp], 1
  002de	eb 24		 jmp	 SHORT $LN79@write_tacv
$LN78@write_tacv:
  002e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  002e6	83 c2 1d	 add	 edx, 29			; 0000001dH
  002e9	52		 push	 edx
  002ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002fa	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv188[ebp], 0
$LN79@write_tacv:
  00304	6a 01		 push	 1
  00306	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _aircrew$13[ebp]
  0030c	51		 push	 ecx
  0030d	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv180[ebp], 180
  00317	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv188[ebp]
  0031d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00324	ff d1		 call	 ecx
  00326	89 85 68 ff ff
	ff		 mov	 DWORD PTR _aircrew$13[ebp], eax
$LN6@write_tacv:
  0032c	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _aircrew$13[ebp], 0
  00333	0f 84 5d 01 00
	00		 je	 $LN17@write_tacv

; 281  : 				{
; 282  : 					if (get_local_entity_int_value(aircrew, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_PILOT_PILOT)

  00339	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _aircrew$13[ebp], 0
  00340	74 10		 je	 SHORT $LN80@write_tacv
  00342	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _aircrew$13[ebp]
  00348	8b 08		 mov	 ecx, DWORD PTR [eax]
  0034a	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv200[ebp], ecx
  00350	eb 20		 jmp	 SHORT $LN81@write_tacv
$LN80@write_tacv:
  00352	68 1a 01 00 00	 push	 282			; 0000011aH
  00357	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0035c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00362	52		 push	 edx
  00363	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00368	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
$LN81@write_tacv:
  00372	b8 01 00 00 00	 mov	 eax, 1
  00377	85 c0		 test	 eax, eax
  00379	74 0c		 je	 SHORT $LN82@write_tacv
  0037b	c7 85 dc fe ff
	ff 34 00 00 00	 mov	 DWORD PTR tv207[ebp], 52 ; 00000034H
  00385	eb 20		 jmp	 SHORT $LN83@write_tacv
$LN82@write_tacv:
  00387	68 1a 01 00 00	 push	 282			; 0000011aH
  0038c	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00391	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00397	51		 push	 ecx
  00398	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039d	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv207[ebp], 0
$LN83@write_tacv:
  003a7	6a 34		 push	 52			; 00000034H
  003a9	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _aircrew$13[ebp]
  003af	52		 push	 edx
  003b0	69 85 e0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv200[ebp], 1116
  003ba	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv207[ebp]
  003c0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003c7	ff d2		 call	 edx
  003c9	85 c0		 test	 eax, eax
  003cb	0f 85 c0 00 00
	00		 jne	 $LN18@write_tacv

; 283  : 					{
; 284  : 						const char* raw_pilot = get_local_entity_string(aircrew, STRING_TYPE_PILOTS_NAME);

  003d1	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _aircrew$13[ebp], 0
  003d8	74 10		 je	 SHORT $LN84@write_tacv
  003da	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _aircrew$13[ebp]
  003e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e2	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv220[ebp], ecx
  003e8	eb 24		 jmp	 SHORT $LN85@write_tacv
$LN84@write_tacv:
  003ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  003f0	83 c2 21	 add	 edx, 33			; 00000021H
  003f3	52		 push	 edx
  003f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003fe	50		 push	 eax
  003ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00404	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv220[ebp], 0
$LN85@write_tacv:
  0040e	b9 01 00 00 00	 mov	 ecx, 1
  00413	85 c9		 test	 ecx, ecx
  00415	74 0c		 je	 SHORT $LN86@write_tacv
  00417	c7 85 dc fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv228[ebp], 10 ; 0000000aH
  00421	eb 24		 jmp	 SHORT $LN87@write_tacv
$LN86@write_tacv:
  00423	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00429	83 c2 21	 add	 edx, 33			; 00000021H
  0042c	52		 push	 edx
  0042d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00432	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043d	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv228[ebp], 0
$LN87@write_tacv:
  00447	6a 0a		 push	 10			; 0000000aH
  00449	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _aircrew$13[ebp]
  0044f	51		 push	 ecx
  00450	6b 95 e0 fe ff
	ff 34		 imul	 edx, DWORD PTR tv220[ebp], 52
  00457	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv228[ebp]
  0045d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00464	ff d1		 call	 ecx
  00466	89 85 64 ff ff
	ff		 mov	 DWORD PTR _raw_pilot$12[ebp], eax

; 285  : 						if (raw_pilot)

  0046c	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _raw_pilot$12[ebp], 0
  00473	74 1a		 je	 SHORT $LN19@write_tacv

; 286  : 							latin1_to_utf8(raw_pilot, pilot, sizeof(pilot), TRUE);

  00475	6a 01		 push	 1
  00477	68 80 00 00 00	 push	 128			; 00000080H
  0047c	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pilot$14[ebp]
  00482	50		 push	 eax
  00483	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _raw_pilot$12[ebp]
  00489	51		 push	 ecx
  0048a	e8 00 00 00 00	 call	 ?latin1_to_utf8@@YGXPBDPADIH@Z ; latin1_to_utf8
$LN19@write_tacv:

; 287  : 
; 288  : 						break;

  0048f	eb 05		 jmp	 SHORT $LN17@write_tacv
$LN18@write_tacv:

; 289  : 					}
; 290  : 				}

  00491	e9 f8 fd ff ff	 jmp	 $LN4@write_tacv
$LN17@write_tacv:

; 291  : 			}
; 292  : 
; 293  : 			group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00496	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0049a	74 0d		 je	 SHORT $LN88@write_tacv
  0049c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0049f	8b 08		 mov	 ecx, DWORD PTR [eax]
  004a1	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv245[ebp], ecx
  004a7	eb 24		 jmp	 SHORT $LN89@write_tacv
$LN88@write_tacv:
  004a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  004af	83 c2 2a	 add	 edx, 42			; 0000002aH
  004b2	52		 push	 edx
  004b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004bd	50		 push	 eax
  004be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004c3	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv245[ebp], 0
$LN89@write_tacv:
  004cd	b9 01 00 00 00	 mov	 ecx, 1
  004d2	85 c9		 test	 ecx, ecx
  004d4	74 0c		 je	 SHORT $LN90@write_tacv
  004d6	c7 85 dc fe ff
	ff 19 00 00 00	 mov	 DWORD PTR tv253[ebp], 25 ; 00000019H
  004e0	eb 24		 jmp	 SHORT $LN91@write_tacv
$LN90@write_tacv:
  004e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  004e8	83 c2 2a	 add	 edx, 42			; 0000002aH
  004eb	52		 push	 edx
  004ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004f6	50		 push	 eax
  004f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004fc	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv253[ebp], 0
$LN91@write_tacv:
  00506	6a 19		 push	 25			; 00000019H
  00508	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0050b	51		 push	 ecx
  0050c	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv245[ebp], 180
  00516	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv253[ebp]
  0051c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00523	ff d1		 call	 ecx
  00525	89 45 f0	 mov	 DWORD PTR _group$16[ebp], eax

; 294  : 			if (group)

  00528	83 7d f0 00	 cmp	 DWORD PTR _group$16[ebp], 0
  0052c	0f 84 8f 00 00
	00		 je	 $LN20@write_tacv

; 295  : 				callsign = get_local_entity_string (group, STRING_TYPE_GROUP_CALLSIGN);

  00532	83 7d f0 00	 cmp	 DWORD PTR _group$16[ebp], 0
  00536	74 0d		 je	 SHORT $LN92@write_tacv
  00538	8b 45 f0	 mov	 eax, DWORD PTR _group$16[ebp]
  0053b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0053d	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv266[ebp], ecx
  00543	eb 24		 jmp	 SHORT $LN93@write_tacv
$LN92@write_tacv:
  00545	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  0054b	83 c2 2c	 add	 edx, 44			; 0000002cH
  0054e	52		 push	 edx
  0054f	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00554	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00559	50		 push	 eax
  0055a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0055f	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv266[ebp], 0
$LN93@write_tacv:
  00569	b9 01 00 00 00	 mov	 ecx, 1
  0056e	85 c9		 test	 ecx, ecx
  00570	74 0c		 je	 SHORT $LN94@write_tacv
  00572	c7 85 dc fe ff
	ff 04 00 00 00	 mov	 DWORD PTR tv274[ebp], 4
  0057c	eb 24		 jmp	 SHORT $LN95@write_tacv
$LN94@write_tacv:
  0057e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00584	83 c2 2c	 add	 edx, 44			; 0000002cH
  00587	52		 push	 edx
  00588	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0058d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00598	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv274[ebp], 0
$LN95@write_tacv:
  005a2	6a 04		 push	 4
  005a4	8b 4d f0	 mov	 ecx, DWORD PTR _group$16[ebp]
  005a7	51		 push	 ecx
  005a8	6b 95 e0 fe ff
	ff 34		 imul	 edx, DWORD PTR tv266[ebp], 52
  005af	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv274[ebp]
  005b5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  005bc	ff d1		 call	 ecx
  005be	89 45 ec	 mov	 DWORD PTR _callsign$15[ebp], eax
$LN20@write_tacv:

; 296  : 
; 297  : 			// id, parent (empty), object type, coalition, country(empty), name, pilot, group, rank
; 298  : 			fprintf(tacview_log_file, "+%x,,%x,%x,,%s,%s,%s,%d\n",

  005c1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  005c5	74 0d		 je	 SHORT $LN96@write_tacv
  005c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  005cc	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv287[ebp], ecx
  005d2	eb 24		 jmp	 SHORT $LN97@write_tacv
$LN96@write_tacv:
  005d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  005da	83 c2 36	 add	 edx, 54			; 00000036H
  005dd	52		 push	 edx
  005de	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005e8	50		 push	 eax
  005e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ee	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv287[ebp], 0
$LN97@write_tacv:
  005f8	b9 01 00 00 00	 mov	 ecx, 1
  005fd	85 c9		 test	 ecx, ecx
  005ff	74 0c		 je	 SHORT $LN98@write_tacv
  00601	c7 85 dc fe ff
	ff 4a 00 00 00	 mov	 DWORD PTR tv295[ebp], 74 ; 0000004aH
  0060b	eb 24		 jmp	 SHORT $LN99@write_tacv
$LN98@write_tacv:
  0060d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00613	83 c2 36	 add	 edx, 54			; 00000036H
  00616	52		 push	 edx
  00617	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0061c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00621	50		 push	 eax
  00622	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00627	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv295[ebp], 0
$LN99@write_tacv:
  00631	83 7d ec 00	 cmp	 DWORD PTR _callsign$15[ebp], 0
  00635	74 0b		 je	 SHORT $LN100@write_tacv
  00637	8b 4d ec	 mov	 ecx, DWORD PTR _callsign$15[ebp]
  0063a	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv303[ebp], ecx
  00640	eb 0a		 jmp	 SHORT $LN101@write_tacv
$LN100@write_tacv:
  00642	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv303[ebp], OFFSET ??_C@_00CNPNBAHC@@
$LN101@write_tacv:
  0064c	8d 95 6c ff ff
	ff		 lea	 edx, DWORD PTR _pilot$14[ebp]
  00652	85 d2		 test	 edx, edx
  00654	74 0e		 je	 SHORT $LN102@write_tacv
  00656	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pilot$14[ebp]
  0065c	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv306[ebp], eax
  00662	eb 0a		 jmp	 SHORT $LN103@write_tacv
$LN102@write_tacv:
  00664	c7 85 d4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv306[ebp], OFFSET ??_C@_00CNPNBAHC@@
$LN103@write_tacv:
  0066e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00672	74 0d		 je	 SHORT $LN104@write_tacv
  00674	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00677	8b 11		 mov	 edx, DWORD PTR [ecx]
  00679	89 95 d0 fe ff
	ff		 mov	 DWORD PTR tv318[ebp], edx
  0067f	eb 24		 jmp	 SHORT $LN105@write_tacv
$LN104@write_tacv:
  00681	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00686	83 c0 32	 add	 eax, 50			; 00000032H
  00689	50		 push	 eax
  0068a	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0068f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00695	51		 push	 ecx
  00696	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0069b	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv318[ebp], 0
$LN105@write_tacv:
  006a5	ba 01 00 00 00	 mov	 edx, 1
  006aa	85 d2		 test	 edx, edx
  006ac	74 0c		 je	 SHORT $LN106@write_tacv
  006ae	c7 85 cc fe ff
	ff bb 00 00 00	 mov	 DWORD PTR tv326[ebp], 187 ; 000000bbH
  006b8	eb 24		 jmp	 SHORT $LN107@write_tacv
$LN106@write_tacv:
  006ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  006bf	83 c0 32	 add	 eax, 50			; 00000032H
  006c2	50		 push	 eax
  006c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006ce	51		 push	 ecx
  006cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006d4	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv326[ebp], 0
$LN107@write_tacv:
  006de	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  006e2	74 14		 je	 SHORT $LN108@write_tacv
  006e4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  006e7	2b 15 00 00 00
	00		 sub	 edx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  006ed	c1 fa 04	 sar	 edx, 4
  006f0	89 95 c8 fe ff
	ff		 mov	 DWORD PTR tv337[ebp], edx
  006f6	eb 0a		 jmp	 SHORT $LN109@write_tacv
$LN108@write_tacv:
  006f8	c7 85 c8 fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv337[ebp], -1
$LN109@write_tacv:
  00702	6a 4a		 push	 74			; 0000004aH
  00704	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00707	50		 push	 eax
  00708	69 8d e0 fe ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv287[ebp], 1116
  00712	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv295[ebp]
  00718	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  0071f	ff d0		 call	 eax
  00721	50		 push	 eax
  00722	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv303[ebp]
  00728	51		 push	 ecx
  00729	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR tv306[ebp]
  0072f	52		 push	 edx
  00730	69 45 fc f4 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 244
  00737	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax]
  0073d	51		 push	 ecx
  0073e	68 bb 00 00 00	 push	 187			; 000000bbH
  00743	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00746	52		 push	 edx
  00747	69 85 d0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv318[ebp], 1116
  00751	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv326[ebp]
  00757	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0075e	ff d2		 call	 edx
  00760	50		 push	 eax
  00761	8b 45 f4	 mov	 eax, DWORD PTR _type$17[ebp]
  00764	50		 push	 eax
  00765	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR tv337[ebp]
  0076b	83 c1 02	 add	 ecx, 2
  0076e	51		 push	 ecx
  0076f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LGHHLICI@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?$CFs?0?$CFs?0?$CFd?6@
  00774	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0077a	52		 push	 edx
  0077b	e8 00 00 00 00	 call	 _fprintf
  00780	83 c4 24	 add	 esp, 36			; 00000024H

; 299  : 					tacview_id(en),
; 300  : 					type,
; 301  : 					get_local_entity_int_value(en, INT_TYPE_SIDE),
; 302  : 					aircraft_database[sub_type].full_name,
; 303  : 					pilot ? pilot : "",
; 304  : 					callsign ? callsign : "",
; 305  : 					get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_ID));
; 306  : 
; 307  : 			set_local_entity_int_value(en, INT_TYPE_TACVIEW_LOGGING, TRUE);

  00783	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00787	74 0d		 je	 SHORT $LN110@write_tacv
  00789	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0078c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0078e	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv347[ebp], ecx
  00794	eb 24		 jmp	 SHORT $LN111@write_tacv
$LN110@write_tacv:
  00796	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  0079c	83 c2 38	 add	 edx, 56			; 00000038H
  0079f	52		 push	 edx
  007a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007aa	50		 push	 eax
  007ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007b0	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv347[ebp], 0
$LN111@write_tacv:
  007ba	b9 01 00 00 00	 mov	 ecx, 1
  007bf	85 c9		 test	 ecx, ecx
  007c1	74 0c		 je	 SHORT $LN112@write_tacv
  007c3	c7 85 dc fe ff
	ff d1 00 00 00	 mov	 DWORD PTR tv355[ebp], 209 ; 000000d1H
  007cd	eb 24		 jmp	 SHORT $LN113@write_tacv
$LN112@write_tacv:
  007cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  007d5	83 c2 38	 add	 edx, 56			; 00000038H
  007d8	52		 push	 edx
  007d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  007de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007e3	50		 push	 eax
  007e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007e9	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv355[ebp], 0
$LN113@write_tacv:
  007f3	6a 01		 push	 1
  007f5	68 d1 00 00 00	 push	 209			; 000000d1H
  007fa	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  007fd	51		 push	 ecx
  007fe	69 95 e0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv347[ebp], 1116
  00808	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv355[ebp]
  0080e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00815	ff d1		 call	 ecx

; 308  : 			break;

  00817	e9 81 07 00 00	 jmp	 $LN2@write_tacv
$LN21@write_tacv:

; 309  : 		}
; 310  : 	case ENTITY_TYPE_KEYSITE:
; 311  : 		{
; 312  : 			// Needs a size of the box representing site in tacview
; 313  : 			int
; 314  : 				length = 50,

  0081c	c7 85 60 ff ff
	ff 32 00 00 00	 mov	 DWORD PTR _length$11[ebp], 50 ; 00000032H

; 315  : 				width = 50,

  00826	c7 85 5c ff ff
	ff 32 00 00 00	 mov	 DWORD PTR _width$10[ebp], 50 ; 00000032H

; 316  : 				height = 20,

  00830	c7 85 58 ff ff
	ff 14 00 00 00	 mov	 DWORD PTR _height$9[ebp], 20 ; 00000014H

; 317  : 				type = 0x88;

  0083a	c7 85 54 ff ff
	ff 88 00 00 00	 mov	 DWORD PTR _type$8[ebp], 136 ; 00000088H

; 318  : 
; 319  : 			char
; 320  : 				height_str[10] = "";

  00844	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00849	88 85 48 ff ff
	ff		 mov	 BYTE PTR _height_str$7[ebp], al
  0084f	33 c0		 xor	 eax, eax
  00851	89 85 49 ff ff
	ff		 mov	 DWORD PTR _height_str$7[ebp+1], eax
  00857	89 85 4d ff ff
	ff		 mov	 DWORD PTR _height_str$7[ebp+5], eax
  0085d	88 85 51 ff ff
	ff		 mov	 BYTE PTR _height_str$7[ebp+9], al

; 321  : 
; 322  : 			switch (sub_type)

  00863	8b 45 fc	 mov	 eax, DWORD PTR _sub_type$[ebp]
  00866	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv366[ebp], eax
  0086c	83 bd e0 fe ff
	ff 08		 cmp	 DWORD PTR tv366[ebp], 8
  00873	77 68		 ja	 SHORT $LN7@write_tacv
  00875	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv366[ebp]
  0087b	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN149@write_tacv[ecx*4]
$LN22@write_tacv:

; 323  : 			{
; 324  : 			case ENTITY_SUB_TYPE_KEYSITE_AIRBASE:
; 325  : 			{
; 326  : 				length = 1000,

  00882	c7 85 60 ff ff
	ff e8 03 00 00	 mov	 DWORD PTR _length$11[ebp], 1000 ; 000003e8H
  0088c	c7 85 54 ff ff
	ff 80 00 00 00	 mov	 DWORD PTR _type$8[ebp], 128 ; 00000080H

; 327  : 				type = 0x80;
; 328  : 				break;

  00896	eb 45		 jmp	 SHORT $LN7@write_tacv
$LN23@write_tacv:

; 329  : 			}
; 330  : 			case ENTITY_SUB_TYPE_KEYSITE_FARP:
; 331  : 			{
; 332  : 				length = 100,

  00898	c7 85 60 ff ff
	ff 64 00 00 00	 mov	 DWORD PTR _length$11[ebp], 100 ; 00000064H
  008a2	c7 85 5c ff ff
	ff 64 00 00 00	 mov	 DWORD PTR _width$10[ebp], 100 ; 00000064H
  008ac	c7 85 54 ff ff
	ff 80 00 00 00	 mov	 DWORD PTR _type$8[ebp], 128 ; 00000080H

; 333  : 				width = 100,
; 334  : 				type = 0x80;
; 335  : 				break;

  008b6	eb 25		 jmp	 SHORT $LN7@write_tacv
$LN24@write_tacv:

; 336  : 			}
; 337  : 			case ENTITY_SUB_TYPE_KEYSITE_RADIO_TRANSMITTER:
; 338  : 			{
; 339  : 				length = 10;

  008b8	c7 85 60 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR _length$11[ebp], 10 ; 0000000aH

; 340  : 				width = 10;

  008c2	c7 85 5c ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR _width$10[ebp], 10 ; 0000000aH

; 341  : 				height = 100;

  008cc	c7 85 58 ff ff
	ff 64 00 00 00	 mov	 DWORD PTR _height$9[ebp], 100 ; 00000064H

; 342  : 				break;

  008d6	eb 05		 jmp	 SHORT $LN7@write_tacv
$LN25@write_tacv:

; 343  : 			}
; 344  : 			case ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE:
; 345  : //				type = 0x34;
; 346  : //				length = width = height = 0;
; 347  : 				// carriers have a ship entity too, so use that for tacview
; 348  : 				return;

  008d8	e9 73 07 00 00	 jmp	 $LN1@write_tacv
$LN7@write_tacv:

; 349  : //				break;
; 350  : 			default:
; 351  : 				break;
; 352  : 			}
; 353  : 
; 354  : 			if (type == 0x88)

  008dd	81 bd 54 ff ff
	ff 88 00 00 00	 cmp	 DWORD PTR _type$8[ebp], 136 ; 00000088H
  008e7	75 1d		 jne	 SHORT $LN27@write_tacv

; 355  : 				snprintf(height_str, sizeof(height_str), ",%d", height);

  008e9	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _height$9[ebp]
  008ef	50		 push	 eax
  008f0	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  008f5	6a 0a		 push	 10			; 0000000aH
  008f7	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _height_str$7[ebp]
  008fd	51		 push	 ecx
  008fe	e8 00 00 00 00	 call	 _sprintf_s
  00903	83 c4 10	 add	 esp, 16			; 00000010H
$LN27@write_tacv:

; 356  : 
; 357  : #if 0
; 358  : 			if (type == 0x34)  // carrier, add as object
; 359  : 				// id, parent (empty), object type, coalition, country(empty), name, pilot(empty), group(empty), rank(empty)
; 360  : 				fprintf(tacview_log_file, "+%x,,%x,%x,,%s,,,\n",
; 361  : 						tacview_id(en),
; 362  : 						type,
; 363  : 						get_local_entity_int_value(en, INT_TYPE_SIDE),
; 364  : 						get_local_entity_string(en, STRING_TYPE_KEYSITE_NAME));
; 365  : 			else
; 366  : #endif
; 367  : 				// id,, type, coalition, country(empty), name, length, width, height(for type 88)
; 368  : 				fprintf(tacview_log_file, "+%x,,%x,%d,,%s,%d,%d%s\n",

  00906	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0090a	74 0d		 je	 SHORT $LN114@write_tacv
  0090c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0090f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00911	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv386[ebp], ecx
  00917	eb 24		 jmp	 SHORT $LN115@write_tacv
$LN114@write_tacv:
  00919	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  0091f	83 c2 79	 add	 edx, 121		; 00000079H
  00922	52		 push	 edx
  00923	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00928	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0092d	50		 push	 eax
  0092e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00933	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv386[ebp], 0
$LN115@write_tacv:
  0093d	b9 01 00 00 00	 mov	 ecx, 1
  00942	85 c9		 test	 ecx, ecx
  00944	74 0c		 je	 SHORT $LN116@write_tacv
  00946	c7 85 dc fe ff
	ff 07 00 00 00	 mov	 DWORD PTR tv394[ebp], 7
  00950	eb 24		 jmp	 SHORT $LN117@write_tacv
$LN116@write_tacv:
  00952	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00958	83 c2 79	 add	 edx, 121		; 00000079H
  0095b	52		 push	 edx
  0095c	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00961	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00966	50		 push	 eax
  00967	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0096c	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv394[ebp], 0
$LN117@write_tacv:
  00976	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0097a	74 0d		 je	 SHORT $LN118@write_tacv
  0097c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0097f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00981	89 95 d8 fe ff
	ff		 mov	 DWORD PTR tv407[ebp], edx
  00987	eb 24		 jmp	 SHORT $LN119@write_tacv
$LN118@write_tacv:
  00989	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  0098e	83 c0 78	 add	 eax, 120		; 00000078H
  00991	50		 push	 eax
  00992	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00997	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0099d	51		 push	 ecx
  0099e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a3	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv407[ebp], 0
$LN119@write_tacv:
  009ad	ba 01 00 00 00	 mov	 edx, 1
  009b2	85 d2		 test	 edx, edx
  009b4	74 0c		 je	 SHORT $LN120@write_tacv
  009b6	c7 85 d4 fe ff
	ff bb 00 00 00	 mov	 DWORD PTR tv415[ebp], 187 ; 000000bbH
  009c0	eb 24		 jmp	 SHORT $LN121@write_tacv
$LN120@write_tacv:
  009c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  009c7	83 c0 78	 add	 eax, 120		; 00000078H
  009ca	50		 push	 eax
  009cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  009d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009d6	51		 push	 ecx
  009d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009dc	c7 85 d4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv415[ebp], 0
$LN121@write_tacv:
  009e6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  009ea	74 14		 je	 SHORT $LN122@write_tacv
  009ec	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  009ef	2b 15 00 00 00
	00		 sub	 edx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  009f5	c1 fa 04	 sar	 edx, 4
  009f8	89 95 d0 fe ff
	ff		 mov	 DWORD PTR tv426[ebp], edx
  009fe	eb 0a		 jmp	 SHORT $LN123@write_tacv
$LN122@write_tacv:
  00a00	c7 85 d0 fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv426[ebp], -1
$LN123@write_tacv:
  00a0a	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _height_str$7[ebp]
  00a10	50		 push	 eax
  00a11	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _width$10[ebp]
  00a17	51		 push	 ecx
  00a18	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _length$11[ebp]
  00a1e	52		 push	 edx
  00a1f	6a 07		 push	 7
  00a21	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00a24	50		 push	 eax
  00a25	6b 8d e0 fe ff
	ff 34		 imul	 ecx, DWORD PTR tv386[ebp], 52
  00a2c	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv394[ebp]
  00a32	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  00a39	ff d0		 call	 eax
  00a3b	50		 push	 eax
  00a3c	68 bb 00 00 00	 push	 187			; 000000bbH
  00a41	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00a44	51		 push	 ecx
  00a45	69 95 d8 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv407[ebp], 1116
  00a4f	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR tv415[ebp]
  00a55	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00a5c	ff d1		 call	 ecx
  00a5e	50		 push	 eax
  00a5f	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _type$8[ebp]
  00a65	52		 push	 edx
  00a66	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR tv426[ebp]
  00a6c	83 c0 02	 add	 eax, 2
  00a6f	50		 push	 eax
  00a70	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LKCOOCIL@?$CL?$CFx?0?0?$CFx?0?$CFd?0?0?$CFs?0?$CFd?0?$CFd?$CFs?6@
  00a75	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00a7b	51		 push	 ecx
  00a7c	e8 00 00 00 00	 call	 _fprintf
  00a81	83 c4 24	 add	 esp, 36			; 00000024H

; 369  : 						tacview_id(en),
; 370  : 						type,
; 371  : 						get_local_entity_int_value(en, INT_TYPE_SIDE),
; 372  : 						get_local_entity_string(en, STRING_TYPE_KEYSITE_NAME),
; 373  : 						length,
; 374  : 						width,
; 375  : 						height_str);
; 376  : 
; 377  : 			is_mobile = FALSE;

  00a84	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _is_mobile$[ebp], 0

; 378  : 			break;

  00a8b	e9 0d 05 00 00	 jmp	 $LN2@write_tacv
$LN28@write_tacv:

; 379  : 		}
; 380  : 	case ENTITY_TYPE_WEAPON:
; 381  : 		{
; 382  : 			int type = 0;

  00a90	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _type$6[ebp], 0

; 383  : 			const char* name = "";

  00a9a	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _name$5[ebp], OFFSET ??_C@_00CNPNBAHC@@

; 384  : 			entity* parent = NULL;

  00aa4	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _parent$4[ebp], 0

; 385  : 			char parent_str[16] = "?";

  00aae	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01OGPIMHDM@?$DP@
  00ab4	66 89 85 2c ff
	ff ff		 mov	 WORD PTR _parent_str$3[ebp], ax
  00abb	33 c0		 xor	 eax, eax
  00abd	89 85 2e ff ff
	ff		 mov	 DWORD PTR _parent_str$3[ebp+2], eax
  00ac3	89 85 32 ff ff
	ff		 mov	 DWORD PTR _parent_str$3[ebp+6], eax
  00ac9	89 85 36 ff ff
	ff		 mov	 DWORD PTR _parent_str$3[ebp+10], eax
  00acf	66 89 85 3a ff
	ff ff		 mov	 WORD PTR _parent_str$3[ebp+14], ax

; 386  : 
; 387  : 			// gun rounds
; 388  : 			if (sub_type <= ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00ad6	83 7d fc 00	 cmp	 DWORD PTR _sub_type$[ebp], 0
  00ada	7f 05		 jg	 SHORT $LN29@write_tacv

; 389  : 				return;

  00adc	e9 6f 05 00 00	 jmp	 $LN1@write_tacv
$LN29@write_tacv:

; 390  : 
; 391  : 			parent = get_local_entity_parent(en, LIST_TYPE_LAUNCHED_WEAPON);

  00ae1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00ae5	74 0d		 je	 SHORT $LN124@write_tacv
  00ae7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00aea	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aec	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv445[ebp], ecx
  00af2	eb 27		 jmp	 SHORT $LN125@write_tacv
$LN124@write_tacv:
  00af4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00afa	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  00b00	52		 push	 edx
  00b01	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b0b	50		 push	 eax
  00b0c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b11	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv445[ebp], 0
$LN125@write_tacv:
  00b1b	b9 01 00 00 00	 mov	 ecx, 1
  00b20	85 c9		 test	 ecx, ecx
  00b22	74 0c		 je	 SHORT $LN126@write_tacv
  00b24	c7 85 dc fe ff
	ff 18 00 00 00	 mov	 DWORD PTR tv453[ebp], 24 ; 00000018H
  00b2e	eb 27		 jmp	 SHORT $LN127@write_tacv
$LN126@write_tacv:
  00b30	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00b36	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  00b3c	52		 push	 edx
  00b3d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b42	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b47	50		 push	 eax
  00b48	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b4d	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv453[ebp], 0
$LN127@write_tacv:
  00b57	6a 18		 push	 24			; 00000018H
  00b59	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00b5c	51		 push	 ecx
  00b5d	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv445[ebp], 180
  00b67	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv453[ebp]
  00b6d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b74	ff d1		 call	 ecx
  00b76	89 85 3c ff ff
	ff		 mov	 DWORD PTR _parent$4[ebp], eax

; 392  : 			if (parent && get_local_entity_int_value(parent, INT_TYPE_TACVIEW_LOGGING))

  00b7c	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR _parent$4[ebp], 0
  00b83	0f 84 df 00 00
	00		 je	 $LN30@write_tacv
  00b89	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR _parent$4[ebp], 0
  00b90	74 10		 je	 SHORT $LN128@write_tacv
  00b92	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _parent$4[ebp]
  00b98	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b9a	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv465[ebp], ecx
  00ba0	eb 20		 jmp	 SHORT $LN129@write_tacv
$LN128@write_tacv:
  00ba2	68 88 01 00 00	 push	 392			; 00000188H
  00ba7	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00bb2	52		 push	 edx
  00bb3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bb8	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv465[ebp], 0
$LN129@write_tacv:
  00bc2	b8 01 00 00 00	 mov	 eax, 1
  00bc7	85 c0		 test	 eax, eax
  00bc9	74 0c		 je	 SHORT $LN130@write_tacv
  00bcb	c7 85 dc fe ff
	ff d1 00 00 00	 mov	 DWORD PTR tv472[ebp], 209 ; 000000d1H
  00bd5	eb 20		 jmp	 SHORT $LN131@write_tacv
$LN130@write_tacv:
  00bd7	68 88 01 00 00	 push	 392			; 00000188H
  00bdc	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00be1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00be7	51		 push	 ecx
  00be8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bed	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv472[ebp], 0
$LN131@write_tacv:
  00bf7	68 d1 00 00 00	 push	 209			; 000000d1H
  00bfc	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _parent$4[ebp]
  00c02	52		 push	 edx
  00c03	69 85 e0 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv465[ebp], 1116
  00c0d	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv472[ebp]
  00c13	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00c1a	ff d2		 call	 edx
  00c1c	85 c0		 test	 eax, eax
  00c1e	74 48		 je	 SHORT $LN30@write_tacv

; 393  : 				sprintf(parent_str, "%x", tacview_id(parent));

  00c20	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR _parent$4[ebp], 0
  00c27	74 17		 je	 SHORT $LN132@write_tacv
  00c29	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _parent$4[ebp]
  00c2f	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00c35	c1 f8 04	 sar	 eax, 4
  00c38	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv483[ebp], eax
  00c3e	eb 0a		 jmp	 SHORT $LN133@write_tacv
$LN132@write_tacv:
  00c40	c7 85 e0 fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv483[ebp], -1
$LN133@write_tacv:
  00c4a	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv483[ebp]
  00c50	83 c1 02	 add	 ecx, 2
  00c53	51		 push	 ecx
  00c54	68 00 00 00 00	 push	 OFFSET ??_C@_02NJNOFBBI@?$CFx@
  00c59	8d 95 2c ff ff
	ff		 lea	 edx, DWORD PTR _parent_str$3[ebp]
  00c5f	52		 push	 edx
  00c60	e8 00 00 00 00	 call	 _sprintf
  00c65	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN30@write_tacv:

; 394  : 
; 395  : 			if (sub_type <= ENTITY_SUB_TYPE_WEAPON_2A65_152MM_ROUND)

  00c68	83 7d fc 1d	 cmp	 DWORD PTR _sub_type$[ebp], 29 ; 0000001dH
  00c6c	7f 7b		 jg	 SHORT $LN31@write_tacv

; 396  : 			{
; 397  : 				switch (sub_type)

  00c6e	8b 45 fc	 mov	 eax, DWORD PTR _sub_type$[ebp]
  00c71	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv488[ebp], eax
  00c77	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv488[ebp]
  00c7d	83 e9 01	 sub	 ecx, 1
  00c80	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv488[ebp], ecx
  00c86	83 bd e0 fe ff
	ff 1c		 cmp	 DWORD PTR tv488[ebp], 28 ; 0000001cH
  00c8d	77 4b		 ja	 SHORT $LN36@write_tacv
  00c8f	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR tv488[ebp]
  00c95	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN147@write_tacv[edx]
  00c9c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN150@write_tacv[eax*4]
$LN33@write_tacv:

; 398  : 				{
; 399  : 				case ENTITY_SUB_TYPE_WEAPON_M2_12P7MM_ROUND:
; 400  : 				case ENTITY_SUB_TYPE_WEAPON_NSV_12P7MM_ROUND:
; 401  : 				case ENTITY_SUB_TYPE_WEAPON_9A642_12P7MM_ROUND:
; 402  : 				case ENTITY_SUB_TYPE_WEAPON_KPV_14P5MM_ROUND:
; 403  : 					type = 0x49;  // bullets

  00ca3	c7 85 44 ff ff
	ff 49 00 00 00	 mov	 DWORD PTR _type$6[ebp], 73 ; 00000049H

; 404  : 					break;

  00cad	eb 35		 jmp	 SHORT $LN9@write_tacv
$LN34@write_tacv:

; 405  : 				case ENTITY_SUB_TYPE_WEAPON_M75_76MM_ROUND:
; 406  : 				case ENTITY_SUB_TYPE_WEAPON_M284_155MM_ROUND:
; 407  : 				case ENTITY_SUB_TYPE_WEAPON_CIS_NAVAL_100MM_ROUND:
; 408  : 				case ENTITY_SUB_TYPE_WEAPON_2A65_152MM_ROUND:
; 409  : 					type = 0x4a;  // artillery

  00caf	c7 85 44 ff ff
	ff 4a 00 00 00	 mov	 DWORD PTR _type$6[ebp], 74 ; 0000004aH

; 410  : 					break;

  00cb9	eb 29		 jmp	 SHORT $LN9@write_tacv
$LN35@write_tacv:

; 411  : 				case ENTITY_SUB_TYPE_WEAPON_BM21_122MM_ROCKET:
; 412  : 				case ENTITY_SUB_TYPE_WEAPON_M270_227MM_ROCKET:
; 413  : 					// these are actually rockets, despite being in the projectile section
; 414  : 					name = weapon_database[sub_type].full_name;

  00cbb	69 45 fc e0 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 224
  00cc2	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax]
  00cc8	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _name$5[ebp], ecx

; 415  : 					type = 0x44;

  00cce	c7 85 44 ff ff
	ff 44 00 00 00	 mov	 DWORD PTR _type$6[ebp], 68 ; 00000044H

; 416  : 					break;

  00cd8	eb 0a		 jmp	 SHORT $LN9@write_tacv
$LN36@write_tacv:

; 417  : 				default:
; 418  : 					type = 0x48;  // shell

  00cda	c7 85 44 ff ff
	ff 48 00 00 00	 mov	 DWORD PTR _type$6[ebp], 72 ; 00000048H
$LN9@write_tacv:

; 419  : 					break;
; 420  : 				}
; 421  : 			}
; 422  : 			// rockets
; 423  : 			else if (sub_type <= ENTITY_SUB_TYPE_WEAPON_S13)

  00ce4	e9 8a 00 00 00	 jmp	 $LN32@write_tacv
$LN31@write_tacv:
  00ce9	83 7d fc 23	 cmp	 DWORD PTR _sub_type$[ebp], 35 ; 00000023H
  00ced	7f 1f		 jg	 SHORT $LN37@write_tacv

; 424  : 			{
; 425  : 				type = 0x44;

  00cef	c7 85 44 ff ff
	ff 44 00 00 00	 mov	 DWORD PTR _type$6[ebp], 68 ; 00000044H

; 426  : 				name = weapon_database[sub_type].full_name;

  00cf9	69 45 fc e0 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 224
  00d00	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax]
  00d06	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _name$5[ebp], ecx
  00d0c	eb 65		 jmp	 SHORT $LN32@write_tacv
$LN37@write_tacv:

; 427  : 			}
; 428  : 			// missiles
; 429  : 			else if (sub_type <= ENTITY_SUB_TYPE_WEAPON_AT11_SNIPER)

  00d0e	83 7d fc 42	 cmp	 DWORD PTR _sub_type$[ebp], 66 ; 00000042H
  00d12	7f 1f		 jg	 SHORT $LN39@write_tacv

; 430  : 			{
; 431  : 				type = 0x40;

  00d14	c7 85 44 ff ff
	ff 40 00 00 00	 mov	 DWORD PTR _type$6[ebp], 64 ; 00000040H

; 432  : 				name = weapon_database[sub_type].full_name;

  00d1e	69 45 fc e0 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 224
  00d25	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax]
  00d2b	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _name$5[ebp], ecx
  00d31	eb 40		 jmp	 SHORT $LN32@write_tacv
$LN39@write_tacv:

; 433  : 			}
; 434  : 			else if (sub_type == ENTITY_SUB_TYPE_WEAPON_CHAFF)

  00d33	83 7d fc 43	 cmp	 DWORD PTR _sub_type$[ebp], 67 ; 00000043H
  00d37	75 0c		 jne	 SHORT $LN41@write_tacv

; 435  : 			{
; 436  : 				type = 0x50;

  00d39	c7 85 44 ff ff
	ff 50 00 00 00	 mov	 DWORD PTR _type$6[ebp], 80 ; 00000050H
  00d43	eb 2e		 jmp	 SHORT $LN32@write_tacv
$LN41@write_tacv:

; 437  : 			}
; 438  : 			else if (sub_type == ENTITY_SUB_TYPE_WEAPON_FLARE)

  00d45	83 7d fc 44	 cmp	 DWORD PTR _sub_type$[ebp], 68 ; 00000044H
  00d49	75 0c		 jne	 SHORT $LN43@write_tacv

; 439  : 			{
; 440  : 				type = 0x54;

  00d4b	c7 85 44 ff ff
	ff 54 00 00 00	 mov	 DWORD PTR _type$6[ebp], 84 ; 00000054H
  00d55	eb 1c		 jmp	 SHORT $LN32@write_tacv
$LN43@write_tacv:

; 441  : 			}
; 442  : 			else if (sub_type == ENTITY_SUB_TYPE_WEAPON_SMOKE_GRENADE)

  00d57	83 7d fc 45	 cmp	 DWORD PTR _sub_type$[ebp], 69 ; 00000045H
  00d5b	75 0c		 jne	 SHORT $LN45@write_tacv

; 443  : 			{
; 444  : 				type = 0x58;

  00d5d	c7 85 44 ff ff
	ff 58 00 00 00	 mov	 DWORD PTR _type$6[ebp], 88 ; 00000058H

; 445  : 			}
; 446  : 			else  // crates, debris etc.

  00d67	eb 0a		 jmp	 SHORT $LN32@write_tacv
$LN45@write_tacv:

; 447  : 			{
; 448  : 				type = 0x46;

  00d69	c7 85 44 ff ff
	ff 46 00 00 00	 mov	 DWORD PTR _type$6[ebp], 70 ; 00000046H
$LN32@write_tacv:

; 449  : 			}
; 450  : 
; 451  : 			// id, parent (empty), object type, coalition(empty), country(empty), name, pilot(empty), group(empty), rank(empty)
; 452  : 			fprintf(tacview_log_file, "+%x,%s,%x,,,%s,,,\n",

  00d73	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00d77	74 14		 je	 SHORT $LN134@write_tacv
  00d79	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d7c	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00d82	c1 f8 04	 sar	 eax, 4
  00d85	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv512[ebp], eax
  00d8b	eb 0a		 jmp	 SHORT $LN135@write_tacv
$LN134@write_tacv:
  00d8d	c7 85 e0 fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv512[ebp], -1
$LN135@write_tacv:
  00d97	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _name$5[ebp]
  00d9d	51		 push	 ecx
  00d9e	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _type$6[ebp]
  00da4	52		 push	 edx
  00da5	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _parent_str$3[ebp]
  00dab	50		 push	 eax
  00dac	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv512[ebp]
  00db2	83 c1 02	 add	 ecx, 2
  00db5	51		 push	 ecx
  00db6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EIFJNJNF@?$CL?$CFx?0?$CFs?0?$CFx?0?0?0?$CFs?0?0?0?6@
  00dbb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00dc1	52		 push	 edx
  00dc2	e8 00 00 00 00	 call	 _fprintf
  00dc7	83 c4 18	 add	 esp, 24			; 00000018H

; 453  : 					tacview_id(en),
; 454  : 					parent_str,
; 455  : 					type,
; 456  : 					name);
; 457  : 
; 458  : 			break;

  00dca	e9 ce 01 00 00	 jmp	 $LN2@write_tacv
$LN47@write_tacv:

; 459  : 		}
; 460  : 	case ENTITY_TYPE_ANTI_AIRCRAFT:
; 461  : 	case ENTITY_TYPE_ROUTED_VEHICLE:
; 462  : 	case ENTITY_TYPE_SHIP_VEHICLE:
; 463  : 		{
; 464  : 			int type;
; 465  : 			const char* name = "";

  00dcf	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _name$1[ebp], OFFSET ??_C@_00CNPNBAHC@@

; 466  : 
; 467  : 			switch (en->type)

  00dd9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00ddc	8b 08		 mov	 ecx, DWORD PTR [eax]
  00dde	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv517[ebp], ecx
  00de4	83 bd e0 fe ff
	ff 01		 cmp	 DWORD PTR tv517[ebp], 1
  00deb	74 17		 je	 SHORT $LN48@write_tacv
  00ded	83 bd e0 fe ff
	ff 17		 cmp	 DWORD PTR tv517[ebp], 23 ; 00000017H
  00df4	74 1d		 je	 SHORT $LN49@write_tacv
  00df6	83 bd e0 fe ff
	ff 1c		 cmp	 DWORD PTR tv517[ebp], 28 ; 0000001cH
  00dfd	74 58		 je	 SHORT $LN54@write_tacv
  00dff	e9 95 00 00 00	 jmp	 $LN11@write_tacv
$LN48@write_tacv:

; 468  : 			{
; 469  : 			case ENTITY_TYPE_ANTI_AIRCRAFT:
; 470  : 				type = 0x20;

  00e04	c7 85 28 ff ff
	ff 20 00 00 00	 mov	 DWORD PTR _type$2[ebp], 32 ; 00000020H

; 471  : 				break;

  00e0e	e9 86 00 00 00	 jmp	 $LN11@write_tacv
$LN49@write_tacv:

; 472  : 			case ENTITY_TYPE_ROUTED_VEHICLE:
; 473  : 				// moving anti aircraft are vehicles, not ANTI_AIRCRAFT, so be sure to detect them here
; 474  : 				if (vehicle_database[sub_type].target_symbol_type == TARGET_SYMBOL_AIR_DEFENCE_UNIT)

  00e13	69 45 fc bc 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 188
  00e1a	83 b8 2c 00 00
	00 03		 cmp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+44], 3
  00e21	75 0c		 jne	 SHORT $LN50@write_tacv

; 475  : 					type = 0x20;

  00e23	c7 85 28 ff ff
	ff 20 00 00 00	 mov	 DWORD PTR _type$2[ebp], 32 ; 00000020H
  00e2d	eb 26		 jmp	 SHORT $LN51@write_tacv
$LN50@write_tacv:

; 476  : 				else if (vehicle_database[sub_type].default_weapon_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00e2f	69 45 fc bc 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 188
  00e36	83 b8 24 00 00
	00 00		 cmp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+36], 0
  00e3d	75 0c		 jne	 SHORT $LN52@write_tacv

; 477  : 					type = 0x28;  // unarmed vehicle

  00e3f	c7 85 28 ff ff
	ff 28 00 00 00	 mov	 DWORD PTR _type$2[ebp], 40 ; 00000028H

; 478  : 				else

  00e49	eb 0a		 jmp	 SHORT $LN51@write_tacv
$LN52@write_tacv:

; 479  : 					type = 0x24;

  00e4b	c7 85 28 ff ff
	ff 24 00 00 00	 mov	 DWORD PTR _type$2[ebp], 36 ; 00000024H
$LN51@write_tacv:

; 480  : 				break;

  00e55	eb 42		 jmp	 SHORT $LN11@write_tacv
$LN54@write_tacv:

; 481  : 			case ENTITY_TYPE_SHIP_VEHICLE:
; 482  : 				if (vehicle_database[sub_type].map_icon == MAP_ICON_CARRIER)

  00e57	69 45 fc bc 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 188
  00e5e	83 b8 44 00 00
	00 07		 cmp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+68], 7
  00e65	75 0c		 jne	 SHORT $LN55@write_tacv

; 483  : 					type = 0x34;

  00e67	c7 85 28 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR _type$2[ebp], 52 ; 00000034H
  00e71	eb 26		 jmp	 SHORT $LN11@write_tacv
$LN55@write_tacv:

; 484  : 				else if (vehicle_database[sub_type].force_info_catagory == FORCE_INFO_CATAGORY_ARMED_SHIP_VEHICLE)

  00e73	69 45 fc bc 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 188
  00e7a	83 b8 34 00 00
	00 06		 cmp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+52], 6
  00e81	75 0c		 jne	 SHORT $LN57@write_tacv

; 485  : 					type = 0x30;

  00e83	c7 85 28 ff ff
	ff 30 00 00 00	 mov	 DWORD PTR _type$2[ebp], 48 ; 00000030H

; 486  : 				else

  00e8d	eb 0a		 jmp	 SHORT $LN11@write_tacv
$LN57@write_tacv:

; 487  : 					type = 0x38;

  00e8f	c7 85 28 ff ff
	ff 38 00 00 00	 mov	 DWORD PTR _type$2[ebp], 56 ; 00000038H
$LN11@write_tacv:

; 488  : 
; 489  : 				break;
; 490  : 			}
; 491  : 			name = vehicle_database[sub_type].full_name;

  00e99	69 45 fc bc 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 188
  00ea0	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  00ea6	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _name$1[ebp], ecx

; 492  : 
; 493  : 			// id, parent (empty), object type, coalition, country(empty), name, pilot, group, rank
; 494  : 			fprintf(tacview_log_file, "+%x,,%x,%x,,%s,,,\n",

  00eac	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00eb0	74 0d		 je	 SHORT $LN136@write_tacv
  00eb2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00eb5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00eb7	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv548[ebp], ecx
  00ebd	eb 27		 jmp	 SHORT $LN137@write_tacv
$LN136@write_tacv:
  00ebf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00ec5	81 c2 f6 00 00
	00		 add	 edx, 246		; 000000f6H
  00ecb	52		 push	 edx
  00ecc	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ed1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ed6	50		 push	 eax
  00ed7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00edc	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv548[ebp], 0
$LN137@write_tacv:
  00ee6	b9 01 00 00 00	 mov	 ecx, 1
  00eeb	85 c9		 test	 ecx, ecx
  00eed	74 0c		 je	 SHORT $LN138@write_tacv
  00eef	c7 85 dc fe ff
	ff bb 00 00 00	 mov	 DWORD PTR tv556[ebp], 187 ; 000000bbH
  00ef9	eb 27		 jmp	 SHORT $LN139@write_tacv
$LN138@write_tacv:
  00efb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00f01	81 c2 f6 00 00
	00		 add	 edx, 246		; 000000f6H
  00f07	52		 push	 edx
  00f08	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00f12	50		 push	 eax
  00f13	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f18	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv556[ebp], 0
$LN139@write_tacv:
  00f22	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00f26	74 14		 je	 SHORT $LN140@write_tacv
  00f28	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00f2b	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00f31	c1 f9 04	 sar	 ecx, 4
  00f34	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv567[ebp], ecx
  00f3a	eb 0a		 jmp	 SHORT $LN141@write_tacv
$LN140@write_tacv:
  00f3c	c7 85 d8 fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv567[ebp], -1
$LN141@write_tacv:
  00f46	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _name$1[ebp]
  00f4c	52		 push	 edx
  00f4d	68 bb 00 00 00	 push	 187			; 000000bbH
  00f52	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00f55	50		 push	 eax
  00f56	69 8d e0 fe ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv548[ebp], 1116
  00f60	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv556[ebp]
  00f66	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  00f6d	ff d0		 call	 eax
  00f6f	50		 push	 eax
  00f70	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _type$2[ebp]
  00f76	51		 push	 ecx
  00f77	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR tv567[ebp]
  00f7d	83 c2 02	 add	 edx, 2
  00f80	52		 push	 edx
  00f81	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LGKNJPPG@?$CL?$CFx?0?0?$CFx?0?$CFx?0?0?$CFs?0?0?0?6@
  00f86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00f8b	50		 push	 eax
  00f8c	e8 00 00 00 00	 call	 _fprintf
  00f91	83 c4 18	 add	 esp, 24			; 00000018H

; 495  : 					tacview_id(en),
; 496  : 					type,
; 497  : 					get_local_entity_int_value(en, INT_TYPE_SIDE),
; 498  : 					name);
; 499  : 
; 500  : 			break;

  00f94	eb 07		 jmp	 SHORT $LN2@write_tacv

; 501  : 		}
; 502  : 
; 503  : 		break;

  00f96	eb 05		 jmp	 SHORT $LN2@write_tacv
$LN59@write_tacv:

; 504  : #if 0
; 505  : 	// Currently don't log these types
; 506  : 	case ENTITY_TYPE_BRIDGE:
; 507  : 	case ENTITY_TYPE_CARGO:
; 508  : 	case ENTITY_TYPE_CITY:
; 509  : 	case ENTITY_TYPE_CITY_BUILDING:
; 510  : 	case ENTITY_TYPE_OBJECT:
; 511  : 	case ENTITY_TYPE_SCENIC:
; 512  : 	case ENTITY_TYPE_SITE:
; 513  : 	case ENTITY_TYPE_SITE_UPDATABLE:
; 514  : #endif
; 515  : 	default:
; 516  : 		return;

  00f98	e9 b3 00 00 00	 jmp	 $LN1@write_tacv
$LN2@write_tacv:

; 517  : 	}
; 518  : 
; 519  : 	if (is_mobile)

  00f9d	83 7d f8 00	 cmp	 DWORD PTR _is_mobile$[ebp], 0
  00fa1	0f 84 9a 00 00
	00		 je	 $LN60@write_tacv

; 520  : 		set_local_entity_int_value(en, INT_TYPE_TACVIEW_LOGGING, TRUE);

  00fa7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00fab	74 0d		 je	 SHORT $LN142@write_tacv
  00fad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00fb0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fb2	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv580[ebp], ecx
  00fb8	eb 27		 jmp	 SHORT $LN143@write_tacv
$LN142@write_tacv:
  00fba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00fc0	81 c2 0d 01 00
	00		 add	 edx, 269		; 0000010dH
  00fc6	52		 push	 edx
  00fc7	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fcc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00fd1	50		 push	 eax
  00fd2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fd7	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv580[ebp], 0
$LN143@write_tacv:
  00fe1	b9 01 00 00 00	 mov	 ecx, 1
  00fe6	85 c9		 test	 ecx, ecx
  00fe8	74 0c		 je	 SHORT $LN144@write_tacv
  00fea	c7 85 dc fe ff
	ff d1 00 00 00	 mov	 DWORD PTR tv588[ebp], 209 ; 000000d1H
  00ff4	eb 27		 jmp	 SHORT $LN145@write_tacv
$LN144@write_tacv:
  00ff6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_new_unit@@YGXPAUENTITY@@@Z@4JA
  00ffc	81 c2 0d 01 00
	00		 add	 edx, 269		; 0000010dH
  01002	52		 push	 edx
  01003	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  01008	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0100d	50		 push	 eax
  0100e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01013	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv588[ebp], 0
$LN145@write_tacv:
  0101d	6a 01		 push	 1
  0101f	68 d1 00 00 00	 push	 209			; 000000d1H
  01024	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  01027	51		 push	 ecx
  01028	69 95 e0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv580[ebp], 1116
  01032	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv588[ebp]
  01038	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  0103f	ff d1		 call	 ecx
$LN60@write_tacv:

; 521  : 
; 522  : 	write_tacview_unit_update(en, TRUE, TRUE, TRUE);

  01041	6a 01		 push	 1
  01043	6a 01		 push	 1
  01045	6a 01		 push	 1
  01047	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0104a	50		 push	 eax
  0104b	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN1@write_tacv:

; 523  : }

  01050	5f		 pop	 edi
  01051	5e		 pop	 esi
  01052	5b		 pop	 ebx
  01053	8b e5		 mov	 esp, ebp
  01055	5d		 pop	 ebp
  01056	c2 04 00	 ret	 4
  01059	0f 1f 00	 npad	 3
$LN148@write_tacv:
  0105c	00 00 00 00	 DD	 $LN47@write_tacv
  01060	00 00 00 00	 DD	 $LN16@write_tacv
  01064	00 00 00 00	 DD	 $LN21@write_tacv
  01068	00 00 00 00	 DD	 $LN28@write_tacv
  0106c	00 00 00 00	 DD	 $LN59@write_tacv
$LN146@write_tacv:
  01070	00		 DB	 0
  01071	04		 DB	 4
  01072	04		 DB	 4
  01073	04		 DB	 4
  01074	04		 DB	 4
  01075	04		 DB	 4
  01076	04		 DB	 4
  01077	04		 DB	 4
  01078	04		 DB	 4
  01079	01		 DB	 1
  0107a	04		 DB	 4
  0107b	04		 DB	 4
  0107c	04		 DB	 4
  0107d	01		 DB	 1
  0107e	02		 DB	 2
  0107f	04		 DB	 4
  01080	04		 DB	 4
  01081	04		 DB	 4
  01082	04		 DB	 4
  01083	04		 DB	 4
  01084	04		 DB	 4
  01085	04		 DB	 4
  01086	00		 DB	 0
  01087	04		 DB	 4
  01088	04		 DB	 4
  01089	04		 DB	 4
  0108a	04		 DB	 4
  0108b	00		 DB	 0
  0108c	04		 DB	 4
  0108d	04		 DB	 4
  0108e	04		 DB	 4
  0108f	04		 DB	 4
  01090	04		 DB	 4
  01091	04		 DB	 4
  01092	04		 DB	 4
  01093	04		 DB	 4
  01094	03		 DB	 3
  01095	0f 1f 00	 npad	 3
$LN149@write_tacv:
  01098	00 00 00 00	 DD	 $LN22@write_tacv
  0109c	00 00 00 00	 DD	 $LN25@write_tacv
  010a0	00 00 00 00	 DD	 $LN7@write_tacv
  010a4	00 00 00 00	 DD	 $LN23@write_tacv
  010a8	00 00 00 00	 DD	 $LN7@write_tacv
  010ac	00 00 00 00	 DD	 $LN7@write_tacv
  010b0	00 00 00 00	 DD	 $LN7@write_tacv
  010b4	00 00 00 00	 DD	 $LN7@write_tacv
  010b8	00 00 00 00	 DD	 $LN24@write_tacv
$LN150@write_tacv:
  010bc	00 00 00 00	 DD	 $LN33@write_tacv
  010c0	00 00 00 00	 DD	 $LN34@write_tacv
  010c4	00 00 00 00	 DD	 $LN35@write_tacv
  010c8	00 00 00 00	 DD	 $LN36@write_tacv
$LN147@write_tacv:
  010cc	00		 DB	 0
  010cd	03		 DB	 3
  010ce	03		 DB	 3
  010cf	03		 DB	 3
  010d0	03		 DB	 3
  010d1	03		 DB	 3
  010d2	03		 DB	 3
  010d3	01		 DB	 1
  010d4	03		 DB	 3
  010d5	01		 DB	 1
  010d6	02		 DB	 2
  010d7	00		 DB	 0
  010d8	00		 DB	 0
  010d9	00		 DB	 0
  010da	03		 DB	 3
  010db	03		 DB	 3
  010dc	03		 DB	 3
  010dd	03		 DB	 3
  010de	03		 DB	 3
  010df	03		 DB	 3
  010e0	03		 DB	 3
  010e1	03		 DB	 3
  010e2	03		 DB	 3
  010e3	03		 DB	 3
  010e4	01		 DB	 1
  010e5	03		 DB	 3
  010e6	02		 DB	 2
  010e7	03		 DB	 3
  010e8	01		 DB	 1
?write_tacview_new_unit@@YGXPAUENTITY@@@Z ENDP		; write_tacview_new_unit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_frame_header@@YGXXZ
_TEXT	SEGMENT
tv78 = -76						; size = 4
tv70 = -72						; size = 4
_time$ = -4						; size = 4
?write_tacview_frame_header@@YGXXZ PROC			; write_tacview_frame_header, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 234  : 	static unsigned reopen_timer = 0;
; 235  : 	float time = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_TIME_OF_DAY);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	74 0c		 je	 SHORT $LN3@write_tacv
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  0001c	eb 21		 jmp	 SHORT $LN4@write_tacv
$LN3@write_tacv:
  0001e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_frame_header@@YGXXZ@4JA
  00024	83 c2 02	 add	 edx, 2
  00027	52		 push	 edx
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00038	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@write_tacv:
  0003f	b9 01 00 00 00	 mov	 ecx, 1
  00044	85 c9		 test	 ecx, ecx
  00046	74 09		 je	 SHORT $LN5@write_tacv
  00048	c7 45 b4 8e 00
	00 00		 mov	 DWORD PTR tv78[ebp], 142 ; 0000008eH
  0004f	eb 21		 jmp	 SHORT $LN6@write_tacv
$LN5@write_tacv:
  00051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_frame_header@@YGXXZ@4JA
  00057	83 c2 02	 add	 edx, 2
  0005a	52		 push	 edx
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN6@write_tacv:
  00072	68 8e 00 00 00	 push	 142			; 0000008eH
  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0007d	51		 push	 ecx
  0007e	69 55 b8 bc 02
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 700
  00085	8b 45 b4	 mov	 eax, DWORD PTR tv78[ebp]
  00088	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0008f	ff d1		 call	 ecx
  00091	d9 5d fc	 fstp	 DWORD PTR _time$[ebp]

; 236  : 
; 237  : 	// periodicly close and reopen log file to avoid it being closed by OS
; 238  : 	// shouldn't really be necessary, but after a while writing will start failing if we don't...
; 239  : 	// happens consistently at lebanon campaign after 30 min game time.
; 240  : 	{
; 241  : 		fclose(tacview_log_file);

  00094	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00099	50		 push	 eax
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  000a0	83 c4 04	 add	 esp, 4

; 242  : 		tacview_log_file = NULL;

  000a3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file

; 243  : 		tacview_log_file = safe_fopen(log_filename, "ab");

  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_02BOGAIONP@ab@
  000b2	68 00 00 00 00	 push	 OFFSET ?log_filename@@3PADA
  000b7	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  000bc	a3 00 00 00 00	 mov	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, eax ; tacview_log_file

; 244  : 		reopen_timer = 0;

  000c1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?reopen_timer@?1??write_tacview_frame_header@@YGXXZ@4IA, 0

; 245  : 	}
; 246  : 
; 247  : 	fprintf(tacview_log_file, "#%.2f\n", time - tacview_starttime);

  000cb	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _time$[ebp]
  000d0	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?tacview_starttime@@3MA
  000d8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000dc	83 ec 08	 sub	 esp, 8
  000df	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_06FJMBGJFC@?$CD?$CF?42f?6@
  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 _fprintf
  000f4	83 c4 10	 add	 esp, 16			; 00000010H

; 248  : }

  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5b		 pop	 ebx
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c3		 ret	 0
?write_tacview_frame_header@@YGXXZ ENDP			; write_tacview_frame_header
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_town_names@@YGXXZ
_TEXT	SEGMENT
?write_tacview_town_names@@YGXXZ PROC			; write_tacview_town_names, COMDAT

; 526  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 527  : #if 0
; 528  : 	population_name_database_type
; 529  : 		*item;
; 530  : 
; 531  : 	for (item = population_name_database; item; item = item->next)
; 532  : 		if (item->type == POPULATION_TYPE_TOWN)
; 533  : 		{
; 534  : 			float
; 535  : 				latitude = (item->z * latitude_scale),
; 536  : 				abs_lat = fabs(latitude_offset + rad(latitude)),
; 537  : 				longitude_length = (P1 * cos(abs_lat)) + (P2 * cos(3 * abs_lat)),
; 538  : 				longitude = (item->x / longitude_length);
; 539  : 
; 540  : 			fprintf(tacview_log_file, "+%x,,88,0,,%s,%d,%d%,%ds\n",
; 541  : 					item,  // have no real id, but that's ok because we're not going to reference it
; 542  : 					item->name,
; 543  : 					0,
; 544  : 					0,
; 545  : 					0));
; 546  : 
; 547  : 			fprintf(tacview_log_file, "%x,%.6f,%.6f,%.2f,0,0,0\n", item, latitude, longitude, get_3d_terrain_elevation(item->x, item->z)));
; 548  : 		}
; 549  : #endif
; 550  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?write_tacview_town_names@@YGXXZ ENDP			; write_tacview_town_names
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?write_tacview_header@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv430 = -404						; size = 8
tv523 = -396						; size = 8
tv421 = -388						; size = 8
tv277 = -388						; size = 4
tv238 = -388						; size = 4
tv218 = -388						; size = 4
tv139 = -388						; size = 4
tv83 = -388						; size = 4
tv352 = -384						; size = 4
tv269 = -384						; size = 4
tv230 = -384						; size = 4
tv210 = -384						; size = 4
tv131 = -384						; size = 4
tv92 = -384						; size = 4
tv75 = -384						; size = 4
_pilot_name$1 = -316					; size = 4
_player_task$ = -312					; size = 4
_session$ = -308					; size = 4
_game_second$ = -304					; size = 4
_game_minute$ = -300					; size = 4
_game_hour$ = -296					; size = 4
_game_day$ = -292					; size = 4
_year$ = -288						; size = 4
_month$ = -284						; size = 4
_day$ = -280						; size = 4
_second$ = -276						; size = 4
_minute$ = -272						; size = 4
_hour$ = -268						; size = 4
_tod$ = -264						; size = 4
_byte_order_mark$ = -260				; size = 4
_cleaned_variable$ = -256				; size = 256
_pilot$ = 8						; size = 4
_player_gunship$ = 12					; size = 4
?write_tacview_header@@YGXPAUENTITY@@0@Z PROC		; write_tacview_header, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 01 00
	00		 sub	 esp, 404		; 00000194H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 143  : 	char
; 144  : 		cleaned_variable[256],
; 145  : 		byte_order_mark[] = {0xEF, 0xBB, 0xBF, 0};

  0000c	c6 85 fc fe ff
	ff ef		 mov	 BYTE PTR _byte_order_mark$[ebp], 239 ; 000000efH
  00013	c6 85 fd fe ff
	ff bb		 mov	 BYTE PTR _byte_order_mark$[ebp+1], 187 ; 000000bbH
  0001a	c6 85 fe fe ff
	ff bf		 mov	 BYTE PTR _byte_order_mark$[ebp+2], 191 ; 000000bfH
  00021	c6 85 ff fe ff
	ff 00		 mov	 BYTE PTR _byte_order_mark$[ebp+3], 0

; 146  : 
; 147  : 	int
; 148  : 		tod = get_system_time_of_day(),

  00028	e8 00 00 00 00	 call	 ?get_system_time_of_day@@YGHXZ ; get_system_time_of_day
  0002d	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _tod$[ebp], eax

; 149  : 		hour = tod / 3600,

  00033	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _tod$[ebp]
  00039	99		 cdq
  0003a	b9 10 0e 00 00	 mov	 ecx, 3600		; 00000e10H
  0003f	f7 f9		 idiv	 ecx
  00041	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _hour$[ebp], eax

; 150  : 		minute = (tod % 3600) / 60,

  00047	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _tod$[ebp]
  0004d	99		 cdq
  0004e	b9 10 0e 00 00	 mov	 ecx, 3600		; 00000e10H
  00053	f7 f9		 idiv	 ecx
  00055	8b c2		 mov	 eax, edx
  00057	99		 cdq
  00058	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0005d	f7 f9		 idiv	 ecx
  0005f	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _minute$[ebp], eax

; 151  : 		second = tod % 60,

  00065	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _tod$[ebp]
  0006b	99		 cdq
  0006c	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00071	f7 f9		 idiv	 ecx
  00073	89 95 ec fe ff
	ff		 mov	 DWORD PTR _second$[ebp], edx

; 152  : 		day,
; 153  : 		month,
; 154  : 		year,
; 155  : 		game_day = get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY),

  00079	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00080	74 0f		 je	 SHORT $LN10@write_tacv
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00087	8b 08		 mov	 ecx, DWORD PTR [eax]
  00089	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0008f	eb 24		 jmp	 SHORT $LN11@write_tacv
$LN10@write_tacv:
  00091	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  00097	83 c2 0d	 add	 edx, 13			; 0000000dH
  0009a	52		 push	 edx
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ab	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN11@write_tacv:
  000b5	b9 01 00 00 00	 mov	 ecx, 1
  000ba	85 c9		 test	 ecx, ecx
  000bc	74 0c		 je	 SHORT $LN12@write_tacv
  000be	c7 85 7c fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv83[ebp], 38	; 00000026H
  000c8	eb 24		 jmp	 SHORT $LN13@write_tacv
$LN12@write_tacv:
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  000d0	83 c2 0d	 add	 edx, 13			; 0000000dH
  000d3	52		 push	 edx
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e4	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN13@write_tacv:
  000ee	6a 26		 push	 38			; 00000026H
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000f6	51		 push	 ecx
  000f7	69 95 80 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  00101	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  00107	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0010e	ff d1		 call	 ecx
  00110	89 85 dc fe ff
	ff		 mov	 DWORD PTR _game_day$[ebp], eax

; 156  : 		game_hour,
; 157  : 		game_minute,
; 158  : 		game_second;
; 159  : 
; 160  : 	session_list_data_type
; 161  : 		*session = get_current_game_session();

  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  0011b	89 85 cc fe ff
	ff		 mov	 DWORD PTR _session$[ebp], eax

; 162  : 
; 163  : 	entity
; 164  : 		*player_task = pilot ? get_player_task(pilot) : NULL;

  00121	83 7d 08 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00125	74 11		 je	 SHORT $LN14@write_tacv
  00127	8b 45 08	 mov	 eax, DWORD PTR _pilot$[ebp]
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 ?get_player_task@@YGPAUENTITY@@PAU1@@Z ; get_player_task
  00130	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  00136	eb 0a		 jmp	 SHORT $LN15@write_tacv
$LN14@write_tacv:
  00138	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN15@write_tacv:
  00142	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  00148	89 8d c8 fe ff
	ff		 mov	 DWORD PTR _player_task$[ebp], ecx

; 165  : 
; 166  : 	tacview_starttime = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_TIME_OF_DAY);

  0014e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00155	74 0f		 je	 SHORT $LN16@write_tacv
  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0015c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015e	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv131[ebp], ecx
  00164	eb 24		 jmp	 SHORT $LN17@write_tacv
$LN16@write_tacv:
  00166	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  0016c	83 c2 18	 add	 edx, 24			; 00000018H
  0016f	52		 push	 edx
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00180	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv131[ebp], 0
$LN17@write_tacv:
  0018a	b9 01 00 00 00	 mov	 ecx, 1
  0018f	85 c9		 test	 ecx, ecx
  00191	74 0c		 je	 SHORT $LN18@write_tacv
  00193	c7 85 7c fe ff
	ff 8e 00 00 00	 mov	 DWORD PTR tv139[ebp], 142 ; 0000008eH
  0019d	eb 24		 jmp	 SHORT $LN19@write_tacv
$LN18@write_tacv:
  0019f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  001a5	83 c2 18	 add	 edx, 24			; 00000018H
  001a8	52		 push	 edx
  001a9	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b9	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv139[ebp], 0
$LN19@write_tacv:
  001c3	68 8e 00 00 00	 push	 142			; 0000008eH
  001c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  001ce	51		 push	 ecx
  001cf	69 95 80 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv131[ebp], 700
  001d9	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR tv139[ebp]
  001df	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001e6	ff d1		 call	 ecx
  001e8	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?tacview_starttime@@3MA

; 167  : 
; 168  : 	if (!session)

  001ee	83 bd cc fe ff
	ff 00		 cmp	 DWORD PTR _session$[ebp], 0
  001f5	75 05		 jne	 SHORT $LN2@write_tacv

; 169  : 		return;

  001f7	e9 c3 05 00 00	 jmp	 $LN1@write_tacv
$LN2@write_tacv:

; 170  : 
; 171  : 	latitude_offset = get_current_map_latitude_offset();

  001fc	e8 00 00 00 00	 call	 ?get_current_map_latitude_offset@@YGMXZ ; get_current_map_latitude_offset
  00201	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?latitude_offset@@3MA

; 172  : 	longitude_offset = get_current_map_longitude_offset();

  00207	e8 00 00 00 00	 call	 ?get_current_map_longitude_offset@@YGMXZ ; get_current_map_longitude_offset
  0020c	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?longitude_offset@@3MA

; 173  : 
; 174  : 	if (longitude_offset == 0.0 && latitude_offset == 0.0)

  00212	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?longitude_offset@@3MA
  0021a	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00222	9f		 lahf
  00223	f6 c4 44	 test	 ah, 68			; 00000044H
  00226	7a 23		 jp	 SHORT $LN3@write_tacv
  00228	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?latitude_offset@@3MA
  00230	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00238	9f		 lahf
  00239	f6 c4 44	 test	 ah, 68			; 00000044H
  0023c	7a 0d		 jp	 SHORT $LN3@write_tacv

; 175  : 		debug_fatal("Current map has no longitude and latitude which is needed by tacview.  Add this information in mapinfo.txt as e.g. coordinate=10.0,20.1");

  0023e	68 00 00 00 00	 push	 OFFSET ??_C@_0II@HMEBLPGF@Current?5map?5has?5no?5longitude?5an@
  00243	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00248	83 c4 04	 add	 esp, 4
$LN3@write_tacv:

; 176  : 
; 177  : 	latitude_scale = 1.0 / (M1 + (M2 * cos(2 * rad(latitude_offset)) + (M3 * cos(4 * rad(latitude_offset)))));

  0024b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  00253	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0025b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00263	51		 push	 ecx
  00264	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00269	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0026e	dd 9d 7c fe ff
	ff		 fstp	 QWORD PTR tv421[ebp]
  00274	f2 0f 10 85 7c
	fe ff ff	 movsd	 xmm0, QWORD PTR tv421[ebp]
  0027c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c0817e8f5c28f5c3
  00284	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?latitude_offset@@3MA
  0028c	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  00294	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@40800000
  0029c	51		 push	 ecx
  0029d	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  002a2	f2 0f 11 85 74
	fe ff ff	 movsd	 QWORD PTR tv523[ebp], xmm0
  002aa	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  002af	dd 9d 6c fe ff
	ff		 fstp	 QWORD PTR tv430[ebp]
  002b5	f2 0f 10 85 6c
	fe ff ff	 movsd	 xmm0, QWORD PTR tv430[ebp]
  002bd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff2cccccccccccd
  002c5	f2 0f 10 8d 74
	fe ff ff	 movsd	 xmm1, QWORD PTR tv523[ebp]
  002cd	f2 0f 58 c8	 addsd	 xmm1, xmm0
  002d1	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@40fb21ceb851eb85
  002d9	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  002e1	f2 0f 5e c1	 divsd	 xmm0, xmm1
  002e5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?latitude_scale@@3MA, xmm0

; 178  : 
; 179  : 	get_system_date(&day, &month, &year);

  002f1	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _year$[ebp]
  002f7	50		 push	 eax
  002f8	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _month$[ebp]
  002fe	51		 push	 ecx
  002ff	8d 95 e8 fe ff
	ff		 lea	 edx, DWORD PTR _day$[ebp]
  00305	52		 push	 edx
  00306	e8 00 00 00 00	 call	 ?get_system_date@@YGXPAH00@Z ; get_system_date

; 180  : 	year += 2000;

  0030b	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _year$[ebp]
  00311	05 d0 07 00 00	 add	 eax, 2000		; 000007d0H
  00316	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _year$[ebp], eax

; 181  : 	get_digital_clock_int_values (tacview_starttime, &game_hour, &game_minute, &game_second);

  0031c	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _game_second$[ebp]
  00322	50		 push	 eax
  00323	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _game_minute$[ebp]
  00329	51		 push	 ecx
  0032a	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR _game_hour$[ebp]
  00330	52		 push	 edx
  00331	51		 push	 ecx
  00332	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?tacview_starttime@@3MA
  0033a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033f	e8 00 00 00 00	 call	 ?get_digital_clock_int_values@@YGXMPAH00@Z ; get_digital_clock_int_values

; 182  : 
; 183  : 	fputs(byte_order_mark, tacview_log_file);

  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00349	50		 push	 eax
  0034a	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _byte_order_mark$[ebp]
  00350	51		 push	 ecx
  00351	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  00357	83 c4 08	 add	 esp, 8

; 184  : 
; 185  : 	// CORE HEADER
; 186  : 
; 187  : 	fputs("FileType=text/acmi/tacview\n", tacview_log_file);

  0035a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0035f	50		 push	 eax
  00360	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IDLOJHJH@FileType?$DNtext?1acmi?1tacview?6@
  00365	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  0036b	83 c4 08	 add	 esp, 8

; 188  : 	fputs("FileVersion=1.3\n", tacview_log_file);

  0036e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00373	50		 push	 eax
  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BPELCIOC@FileVersion?$DN1?43?6@
  00379	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  0037f	83 c4 08	 add	 esp, 8

; 189  : 	fprintf(tacview_log_file, "Source=EECH %d.%d.%d\n", MAJOR_VERSION, DATA_VERSION, MINOR_VERSION);

  00382	6a 00		 push	 0
  00384	6a 0f		 push	 15			; 0000000fH
  00386	6a 01		 push	 1
  00388	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CCFEHBNC@Source?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@
  0038d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00392	50		 push	 eax
  00393	e8 00 00 00 00	 call	 _fprintf
  00398	83 c4 14	 add	 esp, 20			; 00000014H

; 190  : 	fprintf(tacview_log_file, "Recorder=EECH %d.%d.%d\n", MAJOR_VERSION, DATA_VERSION, MINOR_VERSION);

  0039b	6a 00		 push	 0
  0039d	6a 0f		 push	 15			; 0000000fH
  0039f	6a 01		 push	 1
  003a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@ECDNAKMB@Recorder?$DNEECH?5?$CFd?4?$CFd?4?$CFd?6@
  003a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  003ab	50		 push	 eax
  003ac	e8 00 00 00 00	 call	 _fprintf
  003b1	83 c4 14	 add	 esp, 20			; 00000014H

; 191  : 	fprintf(tacview_log_file, "RecordingTime=%04d-%02d-%02dT%02d:%02d:%02dZ\n", year, month, day, hour, minute, second);

  003b4	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _second$[ebp]
  003ba	50		 push	 eax
  003bb	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _minute$[ebp]
  003c1	51		 push	 ecx
  003c2	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _hour$[ebp]
  003c8	52		 push	 edx
  003c9	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _day$[ebp]
  003cf	50		 push	 eax
  003d0	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _month$[ebp]
  003d6	51		 push	 ecx
  003d7	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _year$[ebp]
  003dd	52		 push	 edx
  003de	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@EEJNKGK@RecordingTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF0@
  003e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  003e8	50		 push	 eax
  003e9	e8 00 00 00 00	 call	 _fprintf
  003ee	83 c4 20	 add	 esp, 32			; 00000020H

; 192  : 	fputs("Author=", tacview_log_file);

  003f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  003f6	50		 push	 eax
  003f7	68 00 00 00 00	 push	 OFFSET ??_C@_07KGJDHNOH@Author?$DN@
  003fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  00402	83 c4 08	 add	 esp, 8

; 193  : 	if (pilot)

  00405	83 7d 08 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00409	0f 84 62 01 00
	00		 je	 $LN5@write_tacv

; 194  : 	{
; 195  : 		const char* pilot_name = get_local_entity_string(pilot, STRING_TYPE_PILOTS_NAME);

  0040f	83 7d 08 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00413	74 0d		 je	 SHORT $LN20@write_tacv
  00415	8b 45 08	 mov	 eax, DWORD PTR _pilot$[ebp]
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv210[ebp], ecx
  00420	eb 24		 jmp	 SHORT $LN21@write_tacv
$LN20@write_tacv:
  00422	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  00428	83 c2 35	 add	 edx, 53			; 00000035H
  0042b	52		 push	 edx
  0042c	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00431	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00436	50		 push	 eax
  00437	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043c	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv210[ebp], 0
$LN21@write_tacv:
  00446	b9 01 00 00 00	 mov	 ecx, 1
  0044b	85 c9		 test	 ecx, ecx
  0044d	74 0c		 je	 SHORT $LN22@write_tacv
  0044f	c7 85 7c fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv218[ebp], 10 ; 0000000aH
  00459	eb 24		 jmp	 SHORT $LN23@write_tacv
$LN22@write_tacv:
  0045b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  00461	83 c2 35	 add	 edx, 53			; 00000035H
  00464	52		 push	 edx
  00465	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0046a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0046f	50		 push	 eax
  00470	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00475	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv218[ebp], 0
$LN23@write_tacv:
  0047f	6a 0a		 push	 10			; 0000000aH
  00481	8b 4d 08	 mov	 ecx, DWORD PTR _pilot$[ebp]
  00484	51		 push	 ecx
  00485	6b 95 80 fe ff
	ff 34		 imul	 edx, DWORD PTR tv210[ebp], 52
  0048c	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR tv218[ebp]
  00492	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00499	ff d1		 call	 ecx
  0049b	89 85 c4 fe ff
	ff		 mov	 DWORD PTR _pilot_name$1[ebp], eax

; 196  : 
; 197  : 		friendly_side = get_local_entity_int_value(pilot, INT_TYPE_SIDE);

  004a1	83 7d 08 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  004a5	74 0d		 je	 SHORT $LN24@write_tacv
  004a7	8b 45 08	 mov	 eax, DWORD PTR _pilot$[ebp]
  004aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ac	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv230[ebp], ecx
  004b2	eb 24		 jmp	 SHORT $LN25@write_tacv
$LN24@write_tacv:
  004b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  004ba	83 c2 37	 add	 edx, 55			; 00000037H
  004bd	52		 push	 edx
  004be	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004c8	50		 push	 eax
  004c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ce	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv230[ebp], 0
$LN25@write_tacv:
  004d8	b9 01 00 00 00	 mov	 ecx, 1
  004dd	85 c9		 test	 ecx, ecx
  004df	74 0c		 je	 SHORT $LN26@write_tacv
  004e1	c7 85 7c fe ff
	ff bb 00 00 00	 mov	 DWORD PTR tv238[ebp], 187 ; 000000bbH
  004eb	eb 24		 jmp	 SHORT $LN27@write_tacv
$LN26@write_tacv:
  004ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  004f3	83 c2 37	 add	 edx, 55			; 00000037H
  004f6	52		 push	 edx
  004f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00501	50		 push	 eax
  00502	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00507	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv238[ebp], 0
$LN27@write_tacv:
  00511	68 bb 00 00 00	 push	 187			; 000000bbH
  00516	8b 4d 08	 mov	 ecx, DWORD PTR _pilot$[ebp]
  00519	51		 push	 ecx
  0051a	69 95 80 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv230[ebp], 1116
  00524	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR tv238[ebp]
  0052a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00531	ff d1		 call	 ecx
  00533	a3 00 00 00 00	 mov	 DWORD PTR ?friendly_side@@3HA, eax

; 198  : 
; 199  : 		if (pilot_name)

  00538	83 bd c4 fe ff
	ff 00		 cmp	 DWORD PTR _pilot_name$1[ebp], 0
  0053f	74 30		 je	 SHORT $LN5@write_tacv

; 200  : 		{
; 201  : 			latin1_to_utf8(pilot_name, cleaned_variable, sizeof(cleaned_variable), TRUE);

  00541	6a 01		 push	 1
  00543	68 00 01 00 00	 push	 256			; 00000100H
  00548	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _cleaned_variable$[ebp]
  0054e	50		 push	 eax
  0054f	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _pilot_name$1[ebp]
  00555	51		 push	 ecx
  00556	e8 00 00 00 00	 call	 ?latin1_to_utf8@@YGXPBDPADIH@Z ; latin1_to_utf8

; 202  : 			fputs(cleaned_variable, tacview_log_file);

  0055b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00560	50		 push	 eax
  00561	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _cleaned_variable$[ebp]
  00567	51		 push	 ecx
  00568	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  0056e	83 c4 08	 add	 esp, 8
$LN5@write_tacv:

; 203  : 		}
; 204  : 	}
; 205  : 	fputs("\n", tacview_log_file);

  00571	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00576	50		 push	 eax
  00577	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0057c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  00582	83 c4 08	 add	 esp, 8

; 206  : 
; 207  : 	// DECLARATIONS
; 208  : 
; 209  : 	latin1_to_utf8(session->displayed_title, cleaned_variable, sizeof(cleaned_variable), TRUE);

  00585	6a 01		 push	 1
  00587	68 00 01 00 00	 push	 256			; 00000100H
  0058c	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _cleaned_variable$[ebp]
  00592	50		 push	 eax
  00593	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _session$[ebp]
  00599	8b 11		 mov	 edx, DWORD PTR [ecx]
  0059b	52		 push	 edx
  0059c	e8 00 00 00 00	 call	 ?latin1_to_utf8@@YGXPBDPADIH@Z ; latin1_to_utf8

; 210  : 	fprintf(tacview_log_file, "Title=%s\n", cleaned_variable);

  005a1	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _cleaned_variable$[ebp]
  005a7	50		 push	 eax
  005a8	68 00 00 00 00	 push	 OFFSET ??_C@_09CHKLMOO@Title?$DN?$CFs?6@
  005ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  005b3	51		 push	 ecx
  005b4	e8 00 00 00 00	 call	 _fprintf
  005b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 211  : 	if (player_task)

  005bc	83 bd c8 fe ff
	ff 00		 cmp	 DWORD PTR _player_task$[ebp], 0
  005c3	0f 84 aa 00 00
	00		 je	 $LN6@write_tacv

; 212  : 		fprintf(tacview_log_file, "Category=%s\n", get_local_entity_string(player_task, STRING_TYPE_SHORT_DISPLAY_NAME));

  005c9	83 bd c8 fe ff
	ff 00		 cmp	 DWORD PTR _player_task$[ebp], 0
  005d0	74 10		 je	 SHORT $LN28@write_tacv
  005d2	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _player_task$[ebp]
  005d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  005da	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv269[ebp], ecx
  005e0	eb 24		 jmp	 SHORT $LN29@write_tacv
$LN28@write_tacv:
  005e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  005e8	83 c2 46	 add	 edx, 70			; 00000046H
  005eb	52		 push	 edx
  005ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005f6	50		 push	 eax
  005f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005fc	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv269[ebp], 0
$LN29@write_tacv:
  00606	b9 01 00 00 00	 mov	 ecx, 1
  0060b	85 c9		 test	 ecx, ecx
  0060d	74 0c		 je	 SHORT $LN30@write_tacv
  0060f	c7 85 7c fe ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv277[ebp], 12 ; 0000000cH
  00619	eb 24		 jmp	 SHORT $LN31@write_tacv
$LN30@write_tacv:
  0061b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??write_tacview_header@@YGXPAUENTITY@@0@Z@4JA
  00621	83 c2 46	 add	 edx, 70			; 00000046H
  00624	52		 push	 edx
  00625	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0062f	50		 push	 eax
  00630	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00635	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv277[ebp], 0
$LN31@write_tacv:
  0063f	6a 0c		 push	 12			; 0000000cH
  00641	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR _player_task$[ebp]
  00647	51		 push	 ecx
  00648	6b 95 80 fe ff
	ff 34		 imul	 edx, DWORD PTR tv269[ebp], 52
  0064f	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR tv277[ebp]
  00655	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  0065c	ff d1		 call	 ecx
  0065e	50		 push	 eax
  0065f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DOBIFEPD@Category?$DN?$CFs?6@
  00664	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0066a	52		 push	 edx
  0066b	e8 00 00 00 00	 call	 _fprintf
  00670	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@write_tacv:

; 213  : 	fprintf(tacview_log_file, "MissionTime=%04d-%02d-%02dT%02d:%02d:%02dZ\n", year, month, day + game_day - 1, game_hour, game_minute, game_second);

  00673	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _game_second$[ebp]
  00679	50		 push	 eax
  0067a	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _game_minute$[ebp]
  00680	51		 push	 ecx
  00681	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR _game_hour$[ebp]
  00687	52		 push	 edx
  00688	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR _game_day$[ebp]
  0068e	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _day$[ebp]
  00694	8d 54 01 ff	 lea	 edx, DWORD PTR [ecx+eax-1]
  00698	52		 push	 edx
  00699	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _month$[ebp]
  0069f	50		 push	 eax
  006a0	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _year$[ebp]
  006a6	51		 push	 ecx
  006a7	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@BGBLNDMJ@MissionTime?$DN?$CF04d?9?$CF02d?9?$CF02dT?$CF02d@
  006ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  006b2	52		 push	 edx
  006b3	e8 00 00 00 00	 call	 _fprintf
  006b8	83 c4 20	 add	 esp, 32			; 00000020H

; 214  : 
; 215  : 	fprintf(tacview_log_file, "LatitudeOffset=%f\n", deg(latitude_offset));

  006bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?latitude_offset@@3MA
  006c3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  006cb	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006cf	83 ec 08	 sub	 esp, 8
  006d2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EKEELAEJ@LatitudeOffset?$DN?$CFf?6@
  006dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  006e1	50		 push	 eax
  006e2	e8 00 00 00 00	 call	 _fprintf
  006e7	83 c4 10	 add	 esp, 16			; 00000010H

; 216  : 	fprintf(tacview_log_file, "LongitudeOffset=%f\n", deg(longitude_offset));

  006ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?longitude_offset@@3MA
  006f2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  006fa	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006fe	83 ec 08	 sub	 esp, 8
  00701	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00706	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EODBOJHK@LongitudeOffset?$DN?$CFf?6@
  0070b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00710	50		 push	 eax
  00711	e8 00 00 00 00	 call	 _fprintf
  00716	83 c4 10	 add	 esp, 16			; 00000010H

; 217  : 
; 218  : 	fputs("Coalition=Neutral,Green\n", tacview_log_file);

  00719	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0071e	50		 push	 eax
  0071f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KPAINJOL@Coalition?$DNNeutral?0Green?6@
  00724	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  0072a	83 c4 08	 add	 esp, 8

; 219  : 	fputs("Coalition=Blue,Blue\n", tacview_log_file);

  0072d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00732	50		 push	 eax
  00733	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DFMMMFMH@Coalition?$DNBlue?0Blue?6@
  00738	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  0073e	83 c4 08	 add	 esp, 8

; 220  : 	fputs("Coalition=Red,Red\n", tacview_log_file);

  00741	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00746	50		 push	 eax
  00747	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LJPHBPI@Coalition?$DNRed?0Red?6@
  0074c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  00752	83 c4 08	 add	 esp, 8

; 221  : 	fputs("ProvidedEvents=Takeoff,Landing,Destroyed,LeftArea\n", tacview_log_file);

  00755	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  0075a	50		 push	 eax
  0075b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@IDLEDENM@ProvidedEvents?$DNTakeoff?0Landing?0@
  00760	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  00766	83 c4 08	 add	 esp, 8

; 222  : 
; 223  : 	// ADDITIONAL INFO
; 224  : 
; 225  : 	if (player_gunship)

  00769	83 7d 0c 00	 cmp	 DWORD PTR _player_gunship$[ebp], 0
  0076d	74 42		 je	 SHORT $LN7@write_tacv

; 226  : 		fprintf(tacview_log_file, "MainAircraftID=%x\n", tacview_id(player_gunship));

  0076f	83 7d 0c 00	 cmp	 DWORD PTR _player_gunship$[ebp], 0
  00773	74 14		 je	 SHORT $LN32@write_tacv
  00775	8b 45 0c	 mov	 eax, DWORD PTR _player_gunship$[ebp]
  00778	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  0077e	c1 f8 04	 sar	 eax, 4
  00781	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv352[ebp], eax
  00787	eb 0a		 jmp	 SHORT $LN33@write_tacv
$LN32@write_tacv:
  00789	c7 85 80 fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv352[ebp], -1
$LN33@write_tacv:
  00793	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv352[ebp]
  00799	83 c1 02	 add	 ecx, 2
  0079c	51		 push	 ecx
  0079d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DMDAFCLD@MainAircraftID?$DN?$CFx?6@
  007a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  007a8	52		 push	 edx
  007a9	e8 00 00 00 00	 call	 _fprintf
  007ae	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@write_tacv:

; 227  : 
; 228  : 	if (command_line_tacview_generate_srtm_height_data)

  007b1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_tacview_generate_srtm_height_data@@3HA, 0 ; command_line_tacview_generate_srtm_height_data
  007b8	74 05		 je	 SHORT $LN8@write_tacv

; 229  : 		write_srtm3_terrain_elevation();

  007ba	e8 00 00 00 00	 call	 ?write_srtm3_terrain_elevation@@YGXXZ ; write_srtm3_terrain_elevation
$LN8@write_tacv:
$LN1@write_tacv:

; 230  : }

  007bf	5f		 pop	 edi
  007c0	5e		 pop	 esi
  007c1	5b		 pop	 ebx
  007c2	8b e5		 mov	 esp, ebp
  007c4	5d		 pop	 ebp
  007c5	c2 08 00	 ret	 8
?write_tacview_header@@YGXPAUENTITY@@0@Z ENDP		; write_tacview_header
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?close_tacview_log@@YGXXZ
_TEXT	SEGMENT
?close_tacview_log@@YGXXZ PROC				; close_tacview_log, COMDAT

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 134  : 	if (tacview_log_file)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00010	74 15		 je	 SHORT $LN1@close_tacv

; 135  : 	{
; 136  : 		safe_fclose(tacview_log_file);

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A ; tacview_log_file
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?safe_fclose@@YGHPAU_iobuf@@@Z ; safe_fclose

; 137  : 		tacview_log_file = NULL;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
$LN1@close_tacv:

; 138  : 	}
; 139  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?close_tacview_log@@YGXXZ ENDP				; close_tacview_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\tacview\tacview.c
;	COMDAT ?start_tacview_logging@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv179 = -76						; size = 4
tv155 = -76						; size = 4
tv133 = -76						; size = 4
tv80 = -76						; size = 4
tv172 = -72						; size = 4
tv147 = -72						; size = 4
tv140 = -72						; size = 4
tv93 = -72						; size = 4
tv72 = -72						; size = 4
_en$ = -4						; size = 4
_gunship$ = 8						; size = 4
?start_tacview_logging@@YGXPAUENTITY@@@Z PROC		; start_tacview_logging, COMDAT

; 60   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 61   : 	entity* en;
; 62   : 
; 63   : 	open_tacview_log();

  00009	e8 00 00 00 00	 call	 ?open_tacview_log@@YGXXZ ; open_tacview_log

; 64   : 	write_tacview_header(get_pilot_entity(), gunship);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _gunship$[ebp]
  00011	50		 push	 eax
  00012	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ?write_tacview_header@@YGXPAUENTITY@@0@Z ; write_tacview_header

; 65   : 	write_tacview_frame_header();

  0001e	e8 00 00 00 00	 call	 ?write_tacview_frame_header@@YGXXZ ; write_tacview_frame_header

; 66   : 
; 67   : //		write_tacview_town_names();
; 68   : 
; 69   : 	// add initially visible tacview unites
; 70   : 	en = get_local_entity_first_child (get_update_entity (), LIST_TYPE_UPDATE);

  00023	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?update_entity@@3PAUENTITY@@A, 0 ; update_entity
  0002a	74 0c		 je	 SHORT $LN13@start_tacv
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	89 4d b8	 mov	 DWORD PTR tv72[ebp], ecx
  00036	eb 21		 jmp	 SHORT $LN14@start_tacv
$LN13@start_tacv:
  00038	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA
  0003e	83 c2 0a	 add	 edx, 10			; 0000000aH
  00041	52		 push	 edx
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00052	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN14@start_tacv:
  00059	b9 01 00 00 00	 mov	 ecx, 1
  0005e	85 c9		 test	 ecx, ecx
  00060	74 09		 je	 SHORT $LN15@start_tacv
  00062	c7 45 b4 29 00
	00 00		 mov	 DWORD PTR tv80[ebp], 41	; 00000029H
  00069	eb 21		 jmp	 SHORT $LN16@start_tacv
$LN15@start_tacv:
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA
  00071	83 c2 0a	 add	 edx, 10			; 0000000aH
  00074	52		 push	 edx
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN16@start_tacv:
  0008c	6a 29		 push	 41			; 00000029H
  0008e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  00094	51		 push	 ecx
  00095	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv72[ebp], 180
  0009c	8b 45 b4	 mov	 eax, DWORD PTR tv80[ebp]
  0009f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a6	ff d1		 call	 ecx
  000a8	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@start_tacv:

; 71   : 
; 72   : 	while (en)

  000ab	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000af	0f 84 fe 01 00
	00		 je	 $LN3@start_tacv

; 73   : 	{
; 74   : 		set_update_succ (get_local_entity_child_succ (en, LIST_TYPE_UPDATE));

  000b5	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b9	74 0a		 je	 SHORT $LN17@start_tacv
  000bb	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	89 4d b8	 mov	 DWORD PTR tv93[ebp], ecx
  000c3	eb 21		 jmp	 SHORT $LN18@start_tacv
$LN17@start_tacv:
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA
  000cb	83 c2 0e	 add	 edx, 14			; 0000000eH
  000ce	52		 push	 edx
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000df	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN18@start_tacv:
  000e6	b9 01 00 00 00	 mov	 ecx, 1
  000eb	85 c9		 test	 ecx, ecx
  000ed	74 09		 je	 SHORT $LN19@start_tacv
  000ef	c7 45 b4 29 00
	00 00		 mov	 DWORD PTR tv133[ebp], 41 ; 00000029H
  000f6	eb 21		 jmp	 SHORT $LN20@start_tacv
$LN19@start_tacv:
  000f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA
  000fe	83 c2 0e	 add	 edx, 14			; 0000000eH
  00101	52		 push	 edx
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00107	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00112	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN20@start_tacv:
  00119	6a 29		 push	 41			; 00000029H
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0011e	51		 push	 ecx
  0011f	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv93[ebp], 180
  00126	8b 45 b4	 mov	 eax, DWORD PTR tv133[ebp]
  00129	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00130	ff d1		 call	 ecx
  00132	a3 00 00 00 00	 mov	 DWORD PTR ?update_succ@@3PAUENTITY@@A, eax ; update_succ

; 75   : 		switch (en->type)

  00137	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0013a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013c	89 4d b8	 mov	 DWORD PTR tv140[ebp], ecx
  0013f	8b 55 b8	 mov	 edx, DWORD PTR tv140[ebp]
  00142	83 ea 01	 sub	 edx, 1
  00145	89 55 b8	 mov	 DWORD PTR tv140[ebp], edx
  00148	83 7d b8 24	 cmp	 DWORD PTR tv140[ebp], 36 ; 00000024H
  0014c	0f 87 54 01 00
	00		 ja	 $LN4@start_tacv
  00152	8b 45 b8	 mov	 eax, DWORD PTR tv140[ebp]
  00155	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN29@start_tacv[eax]
  0015c	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN30@start_tacv[ecx*4]
$LN6@start_tacv:

; 76   : 		{
; 77   : 		case ENTITY_TYPE_HELICOPTER:
; 78   : 		case ENTITY_TYPE_FIXED_WING:
; 79   : 		case ENTITY_TYPE_WEAPON:
; 80   : 		case ENTITY_TYPE_ANTI_AIRCRAFT:
; 81   : 		case ENTITY_TYPE_ROUTED_VEHICLE:
; 82   : 		case ENTITY_TYPE_SHIP_VEHICLE:
; 83   : 			set_local_entity_int_value(en, INT_TYPE_TACVIEW_LOGGING, FALSE);

  00163	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00167	74 0a		 je	 SHORT $LN21@start_tacv
  00169	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0016c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016e	89 4d b8	 mov	 DWORD PTR tv147[ebp], ecx
  00171	eb 21		 jmp	 SHORT $LN22@start_tacv
$LN21@start_tacv:
  00173	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA
  00179	83 c2 17	 add	 edx, 23			; 00000017H
  0017c	52		 push	 edx
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00182	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN22@start_tacv:
  00194	b9 01 00 00 00	 mov	 ecx, 1
  00199	85 c9		 test	 ecx, ecx
  0019b	74 09		 je	 SHORT $LN23@start_tacv
  0019d	c7 45 b4 d1 00
	00 00		 mov	 DWORD PTR tv155[ebp], 209 ; 000000d1H
  001a4	eb 21		 jmp	 SHORT $LN24@start_tacv
$LN23@start_tacv:
  001a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??start_tacview_logging@@YGXPAUENTITY@@@Z@4JA
  001ac	83 c2 17	 add	 edx, 23			; 00000017H
  001af	52		 push	 edx
  001b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN24@start_tacv:
  001c7	6a 00		 push	 0
  001c9	68 d1 00 00 00	 push	 209			; 000000d1H
  001ce	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  001d1	51		 push	 ecx
  001d2	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv147[ebp], 1116
  001d9	8b 45 b4	 mov	 eax, DWORD PTR tv155[ebp]
  001dc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  001e3	ff d1		 call	 ecx

; 84   : 			if (command_line_tacview_logging == 3 || !hidden_unit(en))

  001e5	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  001ec	74 0d		 je	 SHORT $LN8@start_tacv
  001ee	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 ?hidden_unit@@YGHPAUENTITY@@@Z ; hidden_unit
  001f7	85 c0		 test	 eax, eax
  001f9	75 09		 jne	 SHORT $LN7@start_tacv
$LN8@start_tacv:

; 85   : 				write_tacview_new_unit(en);

  001fb	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 ?write_tacview_new_unit@@YGXPAUENTITY@@@Z ; write_tacview_new_unit
$LN7@start_tacv:

; 86   : 			break;

  00204	e9 9d 00 00 00	 jmp	 $LN4@start_tacv
$LN9@start_tacv:

; 87   : 		case ENTITY_TYPE_KEYSITE:
; 88   : 			if (command_line_tacview_logging == 3 || get_local_entity_int_value(en, INT_TYPE_SIDE) == friendly_side || !hidden_unit(en))

  00209	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  00210	0f 84 87 00 00
	00		 je	 $LN11@start_tacv
  00216	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0021a	74 0a		 je	 SHORT $LN25@start_tacv
  0021c	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0021f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00221	89 4d b8	 mov	 DWORD PTR tv172[ebp], ecx
  00224	eb 1a		 jmp	 SHORT $LN26@start_tacv
$LN25@start_tacv:
  00226	6a 58		 push	 88			; 00000058H
  00228	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00233	52		 push	 edx
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN26@start_tacv:
  00240	b8 01 00 00 00	 mov	 eax, 1
  00245	85 c0		 test	 eax, eax
  00247	74 09		 je	 SHORT $LN27@start_tacv
  00249	c7 45 b4 bb 00
	00 00		 mov	 DWORD PTR tv179[ebp], 187 ; 000000bbH
  00250	eb 1a		 jmp	 SHORT $LN28@start_tacv
$LN27@start_tacv:
  00252	6a 58		 push	 88			; 00000058H
  00254	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LGMKJCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00259	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0025f	51		 push	 ecx
  00260	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00265	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN28@start_tacv:
  0026c	68 bb 00 00 00	 push	 187			; 000000bbH
  00271	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00274	52		 push	 edx
  00275	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv172[ebp], 1116
  0027c	8b 4d b4	 mov	 ecx, DWORD PTR tv179[ebp]
  0027f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00286	ff d2		 call	 edx
  00288	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?friendly_side@@3HA
  0028e	74 0d		 je	 SHORT $LN11@start_tacv
  00290	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?hidden_unit@@YGHPAUENTITY@@@Z ; hidden_unit
  00299	85 c0		 test	 eax, eax
  0029b	75 09		 jne	 SHORT $LN4@start_tacv
$LN11@start_tacv:

; 89   : 				write_tacview_new_unit(en);

  0029d	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  002a0	50		 push	 eax
  002a1	e8 00 00 00 00	 call	 ?write_tacview_new_unit@@YGXPAUENTITY@@@Z ; write_tacview_new_unit
$LN4@start_tacv:

; 90   : 			break;
; 91   : 		}
; 92   : 		en = get_update_succ ();

  002a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_succ@@3PAUENTITY@@A ; update_succ
  002ab	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 93   : 	}

  002ae	e9 f8 fd ff ff	 jmp	 $LN2@start_tacv
$LN3@start_tacv:

; 94   : 
; 95   : 	set_update_succ (NULL);

  002b3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?update_succ@@3PAUENTITY@@A, 0 ; update_succ

; 96   : }

  002bd	5f		 pop	 edi
  002be	5e		 pop	 esi
  002bf	5b		 pop	 ebx
  002c0	8b e5		 mov	 esp, ebp
  002c2	5d		 pop	 ebp
  002c3	c2 04 00	 ret	 4
  002c6	66 90		 npad	 2
$LN30@start_tacv:
  002c8	00 00 00 00	 DD	 $LN6@start_tacv
  002cc	00 00 00 00	 DD	 $LN9@start_tacv
  002d0	00 00 00 00	 DD	 $LN4@start_tacv
$LN29@start_tacv:
  002d4	00		 DB	 0
  002d5	02		 DB	 2
  002d6	02		 DB	 2
  002d7	02		 DB	 2
  002d8	02		 DB	 2
  002d9	02		 DB	 2
  002da	02		 DB	 2
  002db	02		 DB	 2
  002dc	02		 DB	 2
  002dd	00		 DB	 0
  002de	02		 DB	 2
  002df	02		 DB	 2
  002e0	02		 DB	 2
  002e1	00		 DB	 0
  002e2	01		 DB	 1
  002e3	02		 DB	 2
  002e4	02		 DB	 2
  002e5	02		 DB	 2
  002e6	02		 DB	 2
  002e7	02		 DB	 2
  002e8	02		 DB	 2
  002e9	02		 DB	 2
  002ea	00		 DB	 0
  002eb	02		 DB	 2
  002ec	02		 DB	 2
  002ed	02		 DB	 2
  002ee	02		 DB	 2
  002ef	00		 DB	 0
  002f0	02		 DB	 2
  002f1	02		 DB	 2
  002f2	02		 DB	 2
  002f3	02		 DB	 2
  002f4	02		 DB	 2
  002f5	02		 DB	 2
  002f6	02		 DB	 2
  002f7	02		 DB	 2
  002f8	00		 DB	 0
?start_tacview_logging@@YGXPAUENTITY@@@Z ENDP		; start_tacview_logging
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?floor@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?floor@@YGMM@Z PROC					; floor, COMDAT

; 122  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 123  : 	return (_CSTD floorf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _floorf
  00019	83 c4 04	 add	 esp, 4

; 124  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?floor@@YGMM@Z ENDP					; floor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?ceil@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?ceil@@YGMM@Z PROC					; ceil, COMDAT

; 66   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 67   : 	return (_CSTD ceilf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _ceilf
  00019	83 c4 04	 add	 esp, 4

; 68   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?ceil@@YGMM@Z ENDP					; ceil
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _floorf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_floorf	PROC						; COMDAT

; 685  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 686  :             return (float)floor(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__floor
  0001c	83 c4 08	 add	 esp, 8
  0001f	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00022	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 687  :         }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_floorf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _ceilf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT

; 643  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 644  :             return (float)ceil(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  0001c	83 c4 08	 add	 esp, 8
  0001f	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00022	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 645  :         }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_ceilf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_sprintf_s PROC						; COMDAT

; 1841 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1842 :             int _Result;
; 1843 :             va_list _ArgList;
; 1844 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1845 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vsprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1846 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1847 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1848 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsprintf_s_l PROC					; COMDAT

; 1497 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1498 :         int const _Result = __stdio_common_vsprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1499 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1500 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1501 : 
; 1502 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vsprintf_s
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vsprintf_s:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1503 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsnprintf
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
_vsnprintf PROC						; COMDAT

; 1439 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1440 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	83 c9 02	 or	 ecx, 2
  00025	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00028	52		 push	 edx
  00029	51		 push	 ecx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00030	83 c4 1c	 add	 esp, 28			; 0000001cH
  00033	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1441 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1442 :             _Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1443 : 
; 1444 :         return _Result < 0 ? -1 : _Result;

  00036	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003a	7d 09		 jge	 SHORT $LN3@vsnprintf
  0003c	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00043	eb 06		 jmp	 SHORT $LN4@vsnprintf
$LN3@vsnprintf:
  00045	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00048	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf:
  0004b	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1445 :     }

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
_vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 835  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Stream$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vfprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 840  :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 841  :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 842  :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	52		 push	 edx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  0002b	83 c4 18	 add	 esp, 24			; 00000018H

; 644  :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
