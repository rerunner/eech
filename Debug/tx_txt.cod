; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\text\tx_txt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_text_ui_object_text_functions@@YGXH@Z	; overload_text_ui_object_text_functions
PUBLIC	__real@40a00000
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?get_ui_font_type@@YG?AW4FONT_TYPES@@XZ:PROC	; get_ui_font_type
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_set_ui_object_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_text
EXTRN	?fn_set_ui_object_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA:BYTE ; fn_set_ui_object_font_type
EXTRN	__fltused:DWORD
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_txt.c
;	COMDAT ?set_text_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z
_TEXT	SEGMENT
_area$ = -8						; size = 4
_this_font$ = -4					; size = 4
_obj$ = 8						; size = 4
_font_id$ = 12						; size = 4
?set_text_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z PROC ; set_text_ui_object_font_type, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 166  : 
; 167  : 	font_types
; 168  : 		this_font;
; 169  : 
; 170  : 	area_ui_object
; 171  : 		*area;
; 172  : 
; 173  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _area$[ebp], ecx

; 174  : 
; 175  : 	area->font_type = font_id;

  00012	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _font_id$[ebp]
  00018	89 48 64	 mov	 DWORD PTR [eax+100], ecx

; 176  : 
; 177  : 	this_font = get_ui_font_type ();

  0001b	e8 00 00 00 00	 call	 ?get_ui_font_type@@YG?AW4FONT_TYPES@@XZ ; get_ui_font_type
  00020	89 45 fc	 mov	 DWORD PTR _this_font$[ebp], eax

; 178  : 
; 179  : 	set_ui_font_type (font_id);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _font_id$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 180  : 
; 181  : 	set_ui_object_y_size (obj, ui_get_font_height ());

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00031	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  00036	51		 push	 ecx
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003f	51		 push	 ecx
  00040	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4]
  0004c	ff d1		 call	 ecx

; 182  : 
; 183  : 	set_ui_font_type (this_font);

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this_font$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 184  : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
?set_text_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ENDP ; set_text_ui_object_font_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_txt.c
;	COMDAT ?set_text_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z
_TEXT	SEGMENT
tv232 = -88						; size = 4
tv222 = -88						; size = 4
_parent$ = -20						; size = 4
_area$ = -16						; size = 4
_pixel_length$ = -12					; size = 4
_length$ = -8						; size = 4
_old_font$ = -4						; size = 4
_obj$ = 8						; size = 4
_text$ = 12						; size = 4
?set_text_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z PROC	; set_text_ui_object_text, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	font_types
; 77   : 		old_font;
; 78   : 
; 79   : 	int
; 80   : 		length;
; 81   : 
; 82   : 	float
; 83   : 		pixel_length;
; 84   : 
; 85   : 	area_ui_object
; 86   : 		*area;
; 87   : 
; 88   : 	ui_object
; 89   : 		*parent;
; 90   : 
; 91   : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f0	 mov	 DWORD PTR _area$[ebp], ecx

; 92   : 
; 93   : 	if (area->text)

  00012	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  00015	83 78 68 00	 cmp	 DWORD PTR [eax+104], 0
  00019	74 0c		 je	 SHORT $LN4@set_text_u

; 94   : 	{
; 95   : 
; 96   : 		safe_free (area->text);

  0001b	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  0001e	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN4@set_text_u:

; 97   : 	}
; 98   : 
; 99   : 	area->text = NULL;

  00027	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  0002a	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [eax+104], 0

; 100  : 
; 101  : 	old_font = get_ui_font_type ();

  00031	e8 00 00 00 00	 call	 ?get_ui_font_type@@YG?AW4FONT_TYPES@@XZ ; get_ui_font_type
  00036	89 45 fc	 mov	 DWORD PTR _old_font$[ebp], eax

; 102  : 
; 103  : 	if (area->font_type != -1)

  00039	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  0003c	83 78 64 ff	 cmp	 DWORD PTR [eax+100], -1
  00040	74 0c		 je	 SHORT $LN5@set_text_u

; 104  : 	{
; 105  : 
; 106  : 		set_ui_font_type ((font_types) area->font_type);

  00042	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  00045	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00048	51		 push	 ecx
  00049	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type
$LN5@set_text_u:

; 107  : 	}
; 108  : 
; 109  : 	parent = get_ui_object_parent (obj);

  0004e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0005e	ff d0		 call	 eax
  00060	89 45 ec	 mov	 DWORD PTR _parent$[ebp], eax

; 110  : 
; 111  : 	if (text)

  00063	83 7d 0c 00	 cmp	 DWORD PTR _text$[ebp], 0
  00067	0f 84 d4 00 00
	00		 je	 $LN6@set_text_u

; 112  : 	{
; 113  : 
; 114  : 		length = strlen (text);

  0006d	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 _strlen
  00076	83 c4 04	 add	 esp, 4
  00079	89 45 f8	 mov	 DWORD PTR _length$[ebp], eax

; 115  : 	
; 116  : 		pixel_length = ui_get_string_length (text);

  0007c	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00085	d9 5d f4	 fstp	 DWORD PTR _pixel_length$[ebp]

; 117  : 		
; 118  : 		area->x_size_start = pixel_length + 5;

  00088	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pixel_length$[ebp]
  0008d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40a00000
  00095	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  00098	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 119  : 		
; 120  : 		area->y_size_start = ui_get_font_height () + LIST_ITEM_SPACING;

  0009d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  000a2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000a5	83 c1 04	 add	 ecx, 4
  000a8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000ac	8b 55 f0	 mov	 edx, DWORD PTR _area$[ebp]
  000af	f3 0f 11 42 1c	 movss	 DWORD PTR [edx+28], xmm0

; 121  : 
; 122  : 		if ((area->virtual_coords) && (parent))

  000b4	8b 45 f0	 mov	 eax, DWORD PTR _area$[ebp]
  000b7	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  000ba	c1 e9 02	 shr	 ecx, 2
  000bd	83 e1 01	 and	 ecx, 1
  000c0	74 5a		 je	 SHORT $LN7@set_text_u
  000c2	83 7d ec 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000c6	74 54		 je	 SHORT $LN7@set_text_u

; 123  : 		{
; 124  : 
; 125  : 			area->x_size_start /= get_ui_object_x_size (parent);

  000c8	8b 45 ec	 mov	 eax, DWORD PTR _parent$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d ec	 mov	 ecx, DWORD PTR _parent$[ebp]
  000cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000d8	ff d0		 call	 eax
  000da	d9 5d a8	 fstp	 DWORD PTR tv222[ebp]
  000dd	8b 4d f0	 mov	 ecx, DWORD PTR _area$[ebp]
  000e0	f3 0f 10 41 18	 movss	 xmm0, DWORD PTR [ecx+24]
  000e5	f3 0f 5e 45 a8	 divss	 xmm0, DWORD PTR tv222[ebp]
  000ea	8b 55 f0	 mov	 edx, DWORD PTR _area$[ebp]
  000ed	f3 0f 11 42 18	 movss	 DWORD PTR [edx+24], xmm0

; 126  : 			area->y_size_start /= get_ui_object_y_size (parent);

  000f2	8b 45 ec	 mov	 eax, DWORD PTR _parent$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d ec	 mov	 ecx, DWORD PTR _parent$[ebp]
  000f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00102	ff d0		 call	 eax
  00104	d9 5d a8	 fstp	 DWORD PTR tv232[ebp]
  00107	8b 4d f0	 mov	 ecx, DWORD PTR _area$[ebp]
  0010a	f3 0f 10 41 1c	 movss	 xmm0, DWORD PTR [ecx+28]
  0010f	f3 0f 5e 45 a8	 divss	 xmm0, DWORD PTR tv232[ebp]
  00114	8b 55 f0	 mov	 edx, DWORD PTR _area$[ebp]
  00117	f3 0f 11 42 1c	 movss	 DWORD PTR [edx+28], xmm0
$LN7@set_text_u:

; 127  : 		}
; 128  : 		
; 129  : 		area->text = (char *) safe_malloc ((sizeof (char) * length) + 1);

  0011c	8b 45 f8	 mov	 eax, DWORD PTR _length$[ebp]
  0011f	83 c0 01	 add	 eax, 1
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00128	8b 4d f0	 mov	 ecx, DWORD PTR _area$[ebp]
  0012b	89 41 68	 mov	 DWORD PTR [ecx+104], eax

; 130  : 	
; 131  : 		strcpy (area->text, text);

  0012e	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  00131	50		 push	 eax
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _area$[ebp]
  00135	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 _strcpy
  0013e	83 c4 08	 add	 esp, 8
$LN6@set_text_u:

; 132  : 	}
; 133  : 
; 134  :   	if (parent)

  00141	83 7d ec 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00145	74 63		 je	 SHORT $LN8@set_text_u

; 135  : 	{
; 136  : 
; 137  : 		set_ui_object_redraw (parent, TRUE);

  00147	6a 01		 push	 1
  00149	8b 45 ec	 mov	 eax, DWORD PTR _parent$[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d ec	 mov	 ecx, DWORD PTR _parent$[ebp]
  00150	8b 11		 mov	 edx, DWORD PTR [ecx]
  00152	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00159	ff d0		 call	 eax
$LN2@set_text_u:

; 138  : 
; 139  : 		while ((parent) && (get_ui_object_clear (parent)))

  0015b	83 7d ec 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0015f	74 47		 je	 SHORT $LN3@set_text_u
  00161	8b 45 ec	 mov	 eax, DWORD PTR _parent$[ebp]
  00164	50		 push	 eax
  00165	8b 4d ec	 mov	 ecx, DWORD PTR _parent$[ebp]
  00168	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00171	ff d0		 call	 eax
  00173	85 c0		 test	 eax, eax
  00175	74 31		 je	 SHORT $LN3@set_text_u

; 140  : 		{
; 141  : 
; 142  : 			parent = get_ui_object_parent (parent);

  00177	8b 45 ec	 mov	 eax, DWORD PTR _parent$[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d ec	 mov	 ecx, DWORD PTR _parent$[ebp]
  0017e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00180	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00187	ff d0		 call	 eax
  00189	89 45 ec	 mov	 DWORD PTR _parent$[ebp], eax

; 143  : 
; 144  : 			if (parent)

  0018c	83 7d ec 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00190	74 14		 je	 SHORT $LN10@set_text_u

; 145  : 			{
; 146  : 
; 147  : 				set_ui_object_redraw (parent, TRUE);

  00192	6a 01		 push	 1
  00194	8b 45 ec	 mov	 eax, DWORD PTR _parent$[ebp]
  00197	50		 push	 eax
  00198	8b 4d ec	 mov	 ecx, DWORD PTR _parent$[ebp]
  0019b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001a4	ff d0		 call	 eax
$LN10@set_text_u:

; 148  : 			}
; 149  : 		}

  001a6	eb b3		 jmp	 SHORT $LN2@set_text_u
$LN3@set_text_u:

; 150  : 	}
; 151  : 	else

  001a8	eb 14		 jmp	 SHORT $LN9@set_text_u
$LN8@set_text_u:

; 152  : 	{
; 153  : 
; 154  : 		set_ui_object_redraw (obj, TRUE);

  001aa	6a 01		 push	 1
  001ac	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001af	50		 push	 eax
  001b0	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001bc	ff d0		 call	 eax
$LN9@set_text_u:

; 155  : 	}
; 156  : 
; 157  : 	set_ui_font_type (old_font);

  001be	8b 45 fc	 mov	 eax, DWORD PTR _old_font$[ebp]
  001c1	50		 push	 eax
  001c2	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 158  : }

  001c7	5f		 pop	 edi
  001c8	5e		 pop	 esi
  001c9	5b		 pop	 ebx
  001ca	8b e5		 mov	 esp, ebp
  001cc	5d		 pop	 ebp
  001cd	c2 08 00	 ret	 8
?set_text_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z ENDP	; set_text_ui_object_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_txt.c
;	COMDAT ?overload_text_ui_object_text_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_text_ui_object_text_functions@@YGXH@Z PROC	; overload_text_ui_object_text_functions, COMDAT

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 192  : 
; 193  : 	fn_set_ui_object_text [type] = set_text_ui_object_text;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4], OFFSET ?set_text_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z ; set_text_ui_object_text

; 194  : 
; 195  : 	fn_set_ui_object_font_type [type] = set_text_ui_object_font_type;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA[eax*4], OFFSET ?set_text_ui_object_font_type@@YGXPAUUI_OBJECT@@W4FONT_TYPES@@@Z ; set_text_ui_object_font_type

; 196  : }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?overload_text_ui_object_text_functions@@YGXH@Z ENDP	; overload_text_ui_object_text_functions
_TEXT	ENDS
END
