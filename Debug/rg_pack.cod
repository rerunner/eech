; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\regen\rg_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_regen_pack_functions@@YGXXZ		; overload_regen_pack_functions
PUBLIC	?pack_local_regen_data@@YGXW4PACK_MODES@@@Z	; pack_local_regen_data
PUBLIC	?unpack_local_regen_data@@YGXW4PACK_MODES@@@Z	; unpack_local_regen_data
PUBLIC	?__LINE__Var@?0??pack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA ; `pack_local_regen_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@PBDHFAGG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA ; `unpack_local_regen_data'::`1'::__LINE__Var
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?first_used_entity@@3PAUENTITY@@A:DWORD		; first_used_entity
EXTRN	?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A:BYTE ; regen_queue
EXTRN	?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A:BYTE ; regen_manager
EXTRN	__fltused:DWORD
;	COMDAT ?__LINE__Var@?0??unpack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA DD 0aeH ; `unpack_local_regen_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
CONST	SEGMENT
??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@ DB 'mode != P'
	DB	'ACK_MODE_UPDATE_ENTITY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@PBDHFAGG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@PBDHFAGG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\regen\rg_pack'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA DD 06bH ; `pack_local_regen_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\regen\rg_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 89   : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\regen\rg_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\regen\rg_pack.c
;	COMDAT ?unpack_local_regen_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv129 = -92						; size = 4
tv88 = -92						; size = 4
tv76 = -92						; size = 4
_index$ = -24						; size = 4
_k$ = -20						; size = 4
_j$ = -16						; size = 4
_i$ = -12						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_local_regen_data@@YGXW4PACK_MODES@@@Z PROC	; unpack_local_regen_data, COMDAT

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 175  :    entity
; 176  :       *en;
; 177  : 
; 178  :    regen
; 179  :       *raw;
; 180  : 
; 181  : 	int
; 182  : 		i,
; 183  : 		j,
; 184  : 		k,
; 185  : 		index;
; 186  : 
; 187  :    ASSERT (mode != PACK_MODE_UPDATE_ENTITY);

  00009	83 7d 08 03	 cmp	 DWORD PTR _mode$[ebp], 3
  0000d	75 18		 jne	 SHORT $LN13@unpack_loc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA
  00014	83 c0 0d	 add	 eax, 13			; 0000000dH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@PBDHFAGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@unpack_loc:

; 188  : 
; 189  :    if (mode != PACK_MODE_SERVER_SESSION)

  00027	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0002b	74 05		 je	 SHORT $LN14@unpack_loc

; 190  :    {
; 191  :       return;

  0002d	e9 1a 02 00 00	 jmp	 $LN1@unpack_loc
$LN14@unpack_loc:

; 192  :    }
; 193  : 
; 194  : 	en = get_local_entity_list ();

  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  00037	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@unpack_loc:

; 195  : 
; 196  : 	while (en)

  0003a	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0003e	0f 84 b5 00 00
	00		 je	 $LN3@unpack_loc

; 197  : 	{
; 198  : 		if (get_local_entity_type (en) == ENTITY_TYPE_REGEN)

  00044	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00048	74 0a		 je	 SHORT $LN17@unpack_loc
  0004a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0004d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004f	89 4d a4	 mov	 DWORD PTR tv76[ebp], ecx
  00052	eb 1d		 jmp	 SHORT $LN18@unpack_loc
$LN17@unpack_loc:
  00054	68 c6 00 00 00	 push	 198			; 000000c6H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@PBDHFAGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN18@unpack_loc:
  00071	83 7d a4 16	 cmp	 DWORD PTR tv76[ebp], 22	; 00000016H
  00075	75 74		 jne	 SHORT $LN15@unpack_loc

; 199  : 		{
; 200  : 			index = unpack_entity_safe_index ();

  00077	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0007c	89 45 e8	 mov	 DWORD PTR _index$[ebp], eax

; 201  : 
; 202  : 			raw = (regen *) get_local_entity_data (en);

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00082	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00085	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 203  : 
; 204  : 			raw->sleep = unpack_float_value (en, FLOAT_TYPE_SLEEP);

  00088	6a 75		 push	 117			; 00000075H
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00096	d9 59 38	 fstp	 DWORD PTR [ecx+56]

; 205  : 
; 206  : 			raw->alive = unpack_int_value (en, INT_TYPE_ALIVE);

  00099	6a 07		 push	 7
  0009b	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000a4	89 45 a4	 mov	 DWORD PTR tv88[ebp], eax
  000a7	8b 4d a4	 mov	 ecx, DWORD PTR tv88[ebp]
  000aa	83 e1 01	 and	 ecx, 1
  000ad	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  000b0	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000b3	83 e0 fe	 and	 eax, -2			; fffffffeH
  000b6	0b c1		 or	 eax, ecx
  000b8	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000bb	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 207  : 
; 208  : 			raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  000be	68 bb 00 00 00	 push	 187			; 000000bbH
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000cc	89 45 a4	 mov	 DWORD PTR tv129[ebp], eax
  000cf	8b 4d a4	 mov	 ecx, DWORD PTR tv129[ebp]
  000d2	83 e1 03	 and	 ecx, 3
  000d5	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  000d8	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  000db	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000de	25 ff e7 ff ff	 and	 eax, -6145		; ffffe7ffH
  000e3	0b c1		 or	 eax, ecx
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000e8	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
$LN15@unpack_loc:

; 209  : 		}
; 210  : 
; 211  : 		en = get_local_entity_succ (en);

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000ee	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f1	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 212  : 	}

  000f4	e9 41 ff ff ff	 jmp	 $LN2@unpack_loc
$LN3@unpack_loc:

; 213  : 
; 214  : 	for (i = 0; i < NUM_ENTITY_SIDES; i++)

  000f9	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00100	eb 09		 jmp	 SHORT $LN6@unpack_loc
$LN4@unpack_loc:
  00102	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  00105	83 c0 01	 add	 eax, 1
  00108	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$LN6@unpack_loc:
  0010b	83 7d f4 03	 cmp	 DWORD PTR _i$[ebp], 3
  0010f	0f 8d 37 01 00
	00		 jge	 $LN5@unpack_loc

; 215  : 	{
; 216  : 		for (j = 0; j < NUM_ENTITY_SUB_TYPE_REGENS; j++)

  00115	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  0011c	eb 09		 jmp	 SHORT $LN9@unpack_loc
$LN7@unpack_loc:
  0011e	8b 45 f0	 mov	 eax, DWORD PTR _j$[ebp]
  00121	83 c0 01	 add	 eax, 1
  00124	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
$LN9@unpack_loc:
  00127	83 7d f0 06	 cmp	 DWORD PTR _j$[ebp], 6
  0012b	0f 8d 16 01 00
	00		 jge	 $LN8@unpack_loc

; 217  : 		{
; 218  : 			regen_manager [i][j].size = unpack_int_value (en, INT_TYPE_VALUE);

  00131	68 f2 00 00 00	 push	 242			; 000000f2H
  00136	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0013f	6b 4d f4 48	 imul	 ecx, DWORD PTR _i$[ebp], 72
  00143	6b 55 f0 0c	 imul	 edx, DWORD PTR _j$[ebp], 12
  00147	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[ecx+edx], eax

; 219  : 			regen_manager [i][j].count = unpack_int_value (en, INT_TYPE_VALUE);

  0014e	68 f2 00 00 00	 push	 242			; 000000f2H
  00153	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0015c	6b 4d f4 48	 imul	 ecx, DWORD PTR _i$[ebp], 72
  00160	6b 55 f0 0c	 imul	 edx, DWORD PTR _j$[ebp], 12
  00164	89 84 11 04 00
	00 00		 mov	 DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[ecx+edx+4], eax

; 220  : 			regen_manager [i][j].front = unpack_int_value (en, INT_TYPE_VALUE);

  0016b	68 f2 00 00 00	 push	 242			; 000000f2H
  00170	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00173	50		 push	 eax
  00174	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00179	6b 4d f4 48	 imul	 ecx, DWORD PTR _i$[ebp], 72
  0017d	6b 55 f0 0c	 imul	 edx, DWORD PTR _j$[ebp], 12
  00181	89 84 11 08 00
	00 00		 mov	 DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[ecx+edx+8], eax

; 221  : 
; 222  : 			regen_queue [i][j] = (regen_list_element *) safe_malloc (sizeof (regen_list_element) * regen_manager [i][j].size);

  00188	6b 45 f4 48	 imul	 eax, DWORD PTR _i$[ebp], 72
  0018c	6b 4d f0 0c	 imul	 ecx, DWORD PTR _j$[ebp], 12
  00190	6b 94 08 00 00
	00 00 0c	 imul	 edx, DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[eax+ecx], 12
  00198	52		 push	 edx
  00199	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0019e	6b 4d f4 18	 imul	 ecx, DWORD PTR _i$[ebp], 24
  001a2	8b 55 f0	 mov	 edx, DWORD PTR _j$[ebp]
  001a5	89 84 91 00 00
	00 00		 mov	 DWORD PTR ?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A[ecx+edx*4], eax

; 223  : 
; 224  : 			for (k = 0; k < regen_manager [i][j].size; k++)

  001ac	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _k$[ebp], 0
  001b3	eb 09		 jmp	 SHORT $LN12@unpack_loc
$LN10@unpack_loc:
  001b5	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  001b8	83 c0 01	 add	 eax, 1
  001bb	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN12@unpack_loc:
  001be	6b 45 f4 48	 imul	 eax, DWORD PTR _i$[ebp], 72
  001c2	6b 4d f0 0c	 imul	 ecx, DWORD PTR _j$[ebp], 12
  001c6	8b 55 ec	 mov	 edx, DWORD PTR _k$[ebp]
  001c9	3b 94 08 00 00
	00 00		 cmp	 edx, DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[eax+ecx]
  001d0	7d 70		 jge	 SHORT $LN11@unpack_loc

; 225  : 			{
; 226  : 				regen_queue [i][j][k].type = unpack_int_value (en, INT_TYPE_VALUE);

  001d2	68 f2 00 00 00	 push	 242			; 000000f2H
  001d7	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001da	50		 push	 eax
  001db	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001e0	6b 4d f4 18	 imul	 ecx, DWORD PTR _i$[ebp], 24
  001e4	6b 55 ec 0c	 imul	 edx, DWORD PTR _k$[ebp], 12
  001e8	8b 75 f0	 mov	 esi, DWORD PTR _j$[ebp]
  001eb	8b 8c b1 00 00
	00 00		 mov	 ecx, DWORD PTR ?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A[ecx+esi*4]
  001f2	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 227  : 				regen_queue [i][j][k].sub_type = unpack_int_value (en, INT_TYPE_VALUE);

  001f5	68 f2 00 00 00	 push	 242			; 000000f2H
  001fa	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001fd	50		 push	 eax
  001fe	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00203	6b 4d f4 18	 imul	 ecx, DWORD PTR _i$[ebp], 24
  00207	6b 55 ec 0c	 imul	 edx, DWORD PTR _k$[ebp], 12
  0020b	8b 75 f0	 mov	 esi, DWORD PTR _j$[ebp]
  0020e	8b 8c b1 00 00
	00 00		 mov	 ecx, DWORD PTR ?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A[ecx+esi*4]
  00215	89 44 11 04	 mov	 DWORD PTR [ecx+edx+4], eax

; 228  : 				regen_queue [i][j][k].group = unpack_int_value (en, INT_TYPE_VALUE);

  00219	68 f2 00 00 00	 push	 242			; 000000f2H
  0021e	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00221	50		 push	 eax
  00222	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00227	6b 4d f4 18	 imul	 ecx, DWORD PTR _i$[ebp], 24
  0022b	6b 55 ec 0c	 imul	 edx, DWORD PTR _k$[ebp], 12
  0022f	8b 75 f0	 mov	 esi, DWORD PTR _j$[ebp]
  00232	8b 8c b1 00 00
	00 00		 mov	 ecx, DWORD PTR ?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A[ecx+esi*4]
  00239	89 44 11 08	 mov	 DWORD PTR [ecx+edx+8], eax

; 229  : 			}

  0023d	e9 73 ff ff ff	 jmp	 $LN10@unpack_loc
$LN11@unpack_loc:

; 230  : 		}

  00242	e9 d7 fe ff ff	 jmp	 $LN7@unpack_loc
$LN8@unpack_loc:

; 231  : 	}

  00247	e9 b6 fe ff ff	 jmp	 $LN4@unpack_loc
$LN5@unpack_loc:
$LN1@unpack_loc:

; 232  : }

  0024c	5f		 pop	 edi
  0024d	5e		 pop	 esi
  0024e	5b		 pop	 ebx
  0024f	8b e5		 mov	 esp, ebp
  00251	5d		 pop	 ebp
  00252	c2 04 00	 ret	 4
?unpack_local_regen_data@@YGXW4PACK_MODES@@@Z ENDP	; unpack_local_regen_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\regen\rg_pack.c
;	COMDAT ?pack_local_regen_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv76 = -88						; size = 4
_k$ = -20						; size = 4
_j$ = -16						; size = 4
_i$ = -12						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_local_regen_data@@YGXW4PACK_MODES@@@Z PROC	; pack_local_regen_data, COMDAT

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 108  :    entity
; 109  :       *en;
; 110  : 
; 111  :  	regen
; 112  :       *raw;
; 113  : 
; 114  : 	int
; 115  : 		i,
; 116  : 		j,
; 117  : 		k;
; 118  : 		
; 119  :    ASSERT (mode != PACK_MODE_UPDATE_ENTITY);

  00009	83 7d 08 03	 cmp	 DWORD PTR _mode$[ebp], 3
  0000d	75 18		 jne	 SHORT $LN13@pack_local
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_regen_data@@YGXW4PACK_MODES@@@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@PBDHFAGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@pack_local:

; 120  : 
; 121  :    if (mode != PACK_MODE_SERVER_SESSION)

  00027	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0002b	74 05		 je	 SHORT $LN14@pack_local

; 122  :    {
; 123  :       return;

  0002d	e9 e3 01 00 00	 jmp	 $LN1@pack_local
$LN14@pack_local:

; 124  :    }
; 125  : 
; 126  : 	en = get_local_entity_list ();

  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  00037	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@pack_local:

; 127  : 
; 128  : 	while (en)

  0003a	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0003e	0f 84 9c 00 00
	00		 je	 $LN3@pack_local

; 129  : 	{
; 130  : 		if (get_local_entity_type (en) == ENTITY_TYPE_REGEN)

  00044	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00048	74 0a		 je	 SHORT $LN17@pack_local
  0004a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0004d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004f	89 4d a8	 mov	 DWORD PTR tv76[ebp], ecx
  00052	eb 1d		 jmp	 SHORT $LN18@pack_local
$LN17@pack_local:
  00054	68 82 00 00 00	 push	 130			; 00000082H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@PBDHFAGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN18@pack_local:
  00071	83 7d a8 16	 cmp	 DWORD PTR tv76[ebp], 22	; 00000016H
  00075	75 5b		 jne	 SHORT $LN15@pack_local

; 131  : 		{
; 132  : 			//
; 133  : 			// pack regen data
; 134  : 			//
; 135  : 
; 136  : 			pack_entity_safe_ptr (en);

  00077	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 137  : 
; 138  : 			raw = (regen *) get_local_entity_data (en);

  00080	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 139  : 
; 140  : 			pack_float_value (en, FLOAT_TYPE_SLEEP, raw->sleep);

  00089	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0008c	51		 push	 ecx
  0008d	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00092	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00097	6a 75		 push	 117			; 00000075H
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 141  : 
; 142  : 			pack_int_value (en, INT_TYPE_ALIVE, raw->alive);

  000a2	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000a5	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000a8	83 e1 01	 and	 ecx, 1
  000ab	51		 push	 ecx
  000ac	6a 07		 push	 7
  000ae	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  000b1	52		 push	 edx
  000b2	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 143  : 
; 144  : 			pack_int_value (en, INT_TYPE_SIDE, raw->side);

  000b7	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000ba	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000bd	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  000c0	83 e1 03	 and	 ecx, 3
  000c3	51		 push	 ecx
  000c4	68 bb 00 00 00	 push	 187			; 000000bbH
  000c9	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN15@pack_local:

; 145  : 		}
; 146  : 
; 147  : 		en = get_local_entity_succ (en);

  000d2	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000d5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000d8	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 148  : 	}

  000db	e9 5a ff ff ff	 jmp	 $LN2@pack_local
$LN3@pack_local:

; 149  : 
; 150  : 	for (i = 0; i < NUM_ENTITY_SIDES; i++)

  000e0	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  000e7	eb 09		 jmp	 SHORT $LN6@pack_local
$LN4@pack_local:
  000e9	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  000ec	83 c0 01	 add	 eax, 1
  000ef	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$LN6@pack_local:
  000f2	83 7d f4 03	 cmp	 DWORD PTR _i$[ebp], 3
  000f6	0f 8d 19 01 00
	00		 jge	 $LN5@pack_local

; 151  : 	{
; 152  : 		for (j = 0; j < NUM_ENTITY_SUB_TYPE_REGENS; j++)

  000fc	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  00103	eb 09		 jmp	 SHORT $LN9@pack_local
$LN7@pack_local:
  00105	8b 45 f0	 mov	 eax, DWORD PTR _j$[ebp]
  00108	83 c0 01	 add	 eax, 1
  0010b	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
$LN9@pack_local:
  0010e	83 7d f0 06	 cmp	 DWORD PTR _j$[ebp], 6
  00112	0f 8d f8 00 00
	00		 jge	 $LN8@pack_local

; 153  : 		{
; 154  : 			pack_int_value (en, INT_TYPE_VALUE, regen_manager[i][j].size);

  00118	6b 45 f4 48	 imul	 eax, DWORD PTR _i$[ebp], 72
  0011c	6b 4d f0 0c	 imul	 ecx, DWORD PTR _j$[ebp], 12
  00120	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[eax+ecx]
  00127	52		 push	 edx
  00128	68 f2 00 00 00	 push	 242			; 000000f2H
  0012d	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 155  : 			pack_int_value (en, INT_TYPE_VALUE, regen_manager[i][j].count);

  00136	6b 45 f4 48	 imul	 eax, DWORD PTR _i$[ebp], 72
  0013a	6b 4d f0 0c	 imul	 ecx, DWORD PTR _j$[ebp], 12
  0013e	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[eax+ecx+4]
  00145	52		 push	 edx
  00146	68 f2 00 00 00	 push	 242			; 000000f2H
  0014b	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 156  : 			pack_int_value (en, INT_TYPE_VALUE, regen_manager[i][j].front);

  00154	6b 45 f4 48	 imul	 eax, DWORD PTR _i$[ebp], 72
  00158	6b 4d f0 0c	 imul	 ecx, DWORD PTR _j$[ebp], 12
  0015c	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[eax+ecx+8]
  00163	52		 push	 edx
  00164	68 f2 00 00 00	 push	 242			; 000000f2H
  00169	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 157  : 
; 158  : 			for (k = 0; k < regen_manager[i][j].size; k++)

  00172	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _k$[ebp], 0
  00179	eb 09		 jmp	 SHORT $LN12@pack_local
$LN10@pack_local:
  0017b	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  0017e	83 c0 01	 add	 eax, 1
  00181	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN12@pack_local:
  00184	6b 45 f4 48	 imul	 eax, DWORD PTR _i$[ebp], 72
  00188	6b 4d f0 0c	 imul	 ecx, DWORD PTR _j$[ebp], 12
  0018c	8b 55 ec	 mov	 edx, DWORD PTR _k$[ebp]
  0018f	3b 94 08 00 00
	00 00		 cmp	 edx, DWORD PTR ?regen_manager@@3PAY05UREGEN_MANAGEMENT_ELEMENT@@A[eax+ecx]
  00196	7d 73		 jge	 SHORT $LN11@pack_local

; 159  : 			{
; 160  : 				pack_int_value (en, INT_TYPE_VALUE, regen_queue [i][j][k].type);

  00198	6b 45 f4 18	 imul	 eax, DWORD PTR _i$[ebp], 24
  0019c	6b 4d ec 0c	 imul	 ecx, DWORD PTR _k$[ebp], 12
  001a0	8b 55 f0	 mov	 edx, DWORD PTR _j$[ebp]
  001a3	8b 84 90 00 00
	00 00		 mov	 eax, DWORD PTR ?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A[eax+edx*4]
  001aa	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  001ad	51		 push	 ecx
  001ae	68 f2 00 00 00	 push	 242			; 000000f2H
  001b3	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  001b6	52		 push	 edx
  001b7	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 161  : 				pack_int_value (en, INT_TYPE_VALUE, regen_queue [i][j][k].sub_type);

  001bc	6b 45 f4 18	 imul	 eax, DWORD PTR _i$[ebp], 24
  001c0	6b 4d ec 0c	 imul	 ecx, DWORD PTR _k$[ebp], 12
  001c4	8b 55 f0	 mov	 edx, DWORD PTR _j$[ebp]
  001c7	8b 84 90 00 00
	00 00		 mov	 eax, DWORD PTR ?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A[eax+edx*4]
  001ce	8b 4c 08 04	 mov	 ecx, DWORD PTR [eax+ecx+4]
  001d2	51		 push	 ecx
  001d3	68 f2 00 00 00	 push	 242			; 000000f2H
  001d8	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  001db	52		 push	 edx
  001dc	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 162  : 				pack_int_value (en, INT_TYPE_VALUE, regen_queue [i][j][k].group);

  001e1	6b 45 f4 18	 imul	 eax, DWORD PTR _i$[ebp], 24
  001e5	6b 4d ec 0c	 imul	 ecx, DWORD PTR _k$[ebp], 12
  001e9	8b 55 f0	 mov	 edx, DWORD PTR _j$[ebp]
  001ec	8b 84 90 00 00
	00 00		 mov	 eax, DWORD PTR ?regen_queue@@3PAY05PAUREGEN_LIST_ELEMENT@@A[eax+edx*4]
  001f3	8b 4c 08 08	 mov	 ecx, DWORD PTR [eax+ecx+8]
  001f7	51		 push	 ecx
  001f8	68 f2 00 00 00	 push	 242			; 000000f2H
  001fd	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00200	52		 push	 edx
  00201	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 163  : 			}

  00206	e9 70 ff ff ff	 jmp	 $LN10@pack_local
$LN11@pack_local:

; 164  : 		}

  0020b	e9 f5 fe ff ff	 jmp	 $LN7@pack_local
$LN8@pack_local:

; 165  : 	}

  00210	e9 d4 fe ff ff	 jmp	 $LN4@pack_local
$LN5@pack_local:
$LN1@pack_local:

; 166  : 
; 167  : }

  00215	5f		 pop	 edi
  00216	5e		 pop	 esi
  00217	5b		 pop	 ebx
  00218	8b e5		 mov	 esp, ebp
  0021a	5d		 pop	 ebp
  0021b	c2 04 00	 ret	 4
?pack_local_regen_data@@YGXW4PACK_MODES@@@Z ENDP	; pack_local_regen_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\regen\rg_pack.c
;	COMDAT ?overload_regen_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_regen_pack_functions@@YGXXZ PROC		; overload_regen_pack_functions, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   : 	fn_pack_local_entity_data[ENTITY_TYPE_REGEN]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 16	 imul	 ecx, eax, 22
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 98   : 
; 99   : 	fn_unpack_local_entity_data[ENTITY_TYPE_REGEN]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 16	 imul	 ecx, eax, 22
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 100  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_regen_pack_functions@@YGXXZ ENDP		; overload_regen_pack_functions
_TEXT	ENDS
END
