; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ai\taskgen\croute.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?assign_create_waypoint_route@@3HA		; assign_create_waypoint_route
PUBLIC	?debug_flag@@3HA				; debug_flag
PUBLIC	?best_vec3d_route@@3PAUVEC3D@@A			; best_vec3d_route
PUBLIC	?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A ; route_biasing_database
PUBLIC	?best_point_terrain_elevations@@3PAMA		; best_point_terrain_elevations
PUBLIC	?fast_route@@3PAUROUTE_NODE@@A			; fast_route
_BSS	SEGMENT
?assign_create_waypoint_route@@3HA DD 01H DUP (?)	; assign_create_waypoint_route
?debug_flag@@3HA DD 01H DUP (?)				; debug_flag
?best_vec3d_route@@3PAUVEC3D@@A DB 04b0H DUP (?)	; best_vec3d_route
?best_point_terrain_elevations@@3PAMA DD 01H DUP (?)	; best_point_terrain_elevations
?fast_route@@3PAUROUTE_NODE@@A DD 01H DUP (?)		; fast_route
_BSS	ENDS
_DATA	SEGMENT
?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A DD 03f800000r ; 1 ; route_biasing_database
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0459c4000r			; 5000
	DD	040400000r			; 3
	DD	041000000r			; 8
	DD	03f70a3d7r			; 0.94
	DD	040a00000r			; 5
	DD	03f000000r			; 0.5
	DD	03f800000r			; 1
	DD	0459c4000r			; 5000
	DD	040400000r			; 3
	DD	041000000r			; 8
	DD	03f70a3d7r			; 0.94
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0459c4000r			; 5000
	DD	040400000r			; 3
	DD	041000000r			; 8
	DD	03f70a3d7r			; 0.94
	DD	0461c3c00r			; 9999
	DD	03dcccccdr			; 0.1
	DD	03f800000r			; 1
	DD	0459c4000r			; 5000
	DD	040000000r			; 2
	DD	040c00000r			; 6
	DD	03f70a3d7r			; 0.94
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0459c4000r			; 5000
	DD	040400000r			; 3
	DD	041000000r			; 8
	DD	03f70a3d7r			; 0.94
_DATA	ENDS
PUBLIC	_ceilf
PUBLIC	_fabsf
PUBLIC	?ceil@@YGMM@Z					; ceil
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z ; create_generic_waypoint_route
PUBLIC	?generate_route_check_sum@@YGEPAUROUTE_NODE@@@Z	; generate_route_check_sum
PUBLIC	?initialise_route_generator@@YGXXZ		; initialise_route_generator
PUBLIC	?generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU1@HW4MOVEMENT_TYPES@@@Z ; generate_biased_vec3d_route
PUBLIC	?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z	; destroy_fast_route
PUBLIC	?temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z ; temp_create_generic_waypoint_route
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA ; `create_generic_waypoint_route'::`1'::__LINE__Var
PUBLIC	??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	??_C@_07NKFOJBII@task_en@			; `string'
PUBLIC	??_C@_06HDFDANIG@member@			; `string'
PUBLIC	??_C@_0EI@BKIHFALC@CROUTE?3?5WARNING?3?5checksums?5diff@ ; `string'
PUBLIC	??_C@_0BO@LBFAINEO@CROUTE?3?5?5?5?5?$CFs?5?$CFs?5?$FL?$CFf?0?5?$CFf?0?5?$CFf?$FN@ ; `string'
PUBLIC	??_C@_0BL@EBKCOBAC@node_count?5?$DM?5indices_count@ ; `string'
PUBLIC	?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA ; `parser_task_waypoint_route'::`1'::__LINE__Var
PUBLIC	??_C@_0BP@DMNHGEHG@task?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_TASK@ ; `string'
PUBLIC	??_C@_0HB@OOPFLFPL@CROUTE?3?5Limiting?5waypoint?5spaci@ ; `string'
PUBLIC	??_C@_0HG@MDOJFBHB@CROUTE?3?5Limiting?5waypoint?5spaci@ ; `string'
PUBLIC	?__LINE__Var@?0??generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU2@HW4MOVEMENT_TYPES@@@Z@4JA ; `generate_biased_vec3d_route'::`1'::__LINE__Var
PUBLIC	??_C@_0M@GBJGAGEL@route_start@			; `string'
PUBLIC	?__LINE__Var@?0??get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z@4JA ; `get_route_point_rating'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA ; `temp_create_generic_waypoint_route'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@42480000
PUBLIC	__real@497423f0
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_fabs:PROC
EXTRN	__imp__ceil:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_2d_range
EXTRN	?get_approx_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_approx_3d_range
EXTRN	?get_inverse_square_root@@YGMM@Z:PROC		; get_inverse_square_root
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_adjusted_map_volume
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ:PROC ; create_local_entity
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?get_local_entity_landing_entity@@YGPAUENTITY@@PAU1@H@Z:PROC ; get_local_entity_landing_entity
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?reset_waypoint_tags@@YGXXZ:PROC		; reset_waypoint_tags
EXTRN	?get_waypoint_database_position_type_value@@YGHHW4ENTITY_TYPES@@@Z:PROC ; get_waypoint_database_position_type_value
EXTRN	?get_waypoint_database_minimum_previous_waypoint_distance@@YGMHW4ENTITY_TYPES@@@Z:PROC ; get_waypoint_database_minimum_previous_waypoint_distance
EXTRN	?get_closest_road_node@@YGHPAUVEC3D@@M@Z:PROC	; get_closest_road_node
EXTRN	__ftoui3:PROC
EXTRN	?entity_sub_type_waypoint_names@@3PAPBDA:BYTE	; entity_sub_type_waypoint_names
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?formation_names@@3PAPBDA:BYTE			; formation_names
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A:DWORD ; system_comms_data_flow
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?force_local_entity_create_stack_attributes@@3HA:DWORD ; force_local_entity_create_stack_attributes
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	?task_database@@3PAUTASK_DATA@@A:BYTE		; task_database
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@497423f0
CONST	SEGMENT
__real@497423f0 DD 0497423f0r			; 999999
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA DD 069eH ; `temp_create_generic_waypoint_route'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z@4JA DD 05dcH ; `get_route_point_rating'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@GBJGAGEL@route_start@
CONST	SEGMENT
??_C@_0M@GBJGAGEL@route_start@ DB 'route_start', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU2@HW4MOVEMENT_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU2@HW4MOVEMENT_TYPES@@@Z@4JA DD 046bH ; `generate_biased_vec3d_route'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0HG@MDOJFBHB@CROUTE?3?5Limiting?5waypoint?5spaci@
CONST	SEGMENT
??_C@_0HG@MDOJFBHB@CROUTE?3?5Limiting?5waypoint?5spaci@ DB 'CROUTE: Limit'
	DB	'ing waypoint spacing... wp %s [%f, %f, %f] is limited to %f f'
	DB	'rom wp %s [%f, %f, %f], (next -> next_next)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@OOPFLFPL@CROUTE?3?5Limiting?5waypoint?5spaci@
CONST	SEGMENT
??_C@_0HB@OOPFLFPL@CROUTE?3?5Limiting?5waypoint?5spaci@ DB 'CROUTE: Limit'
	DB	'ing waypoint spacing... wp %s [%f, %f, %f] is limited to %f f'
	DB	'rom wp %s [%f, %f, %f], (this -> next)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DMNHGEHG@task?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_TASK@
CONST	SEGMENT
??_C@_0BP@DMNHGEHG@task?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_TASK@ DB 'task->'
	DB	'type == ENTITY_TYPE_TASK', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA DD 0340H ; `parser_task_waypoint_route'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@EBKCOBAC@node_count?5?$DM?5indices_count@
CONST	SEGMENT
??_C@_0BL@EBKCOBAC@node_count?5?$DM?5indices_count@ DB 'node_count < indi'
	DB	'ces_count', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LBFAINEO@CROUTE?3?5?5?5?5?$CFs?5?$CFs?5?$FL?$CFf?0?5?$CFf?0?5?$CFf?$FN@
CONST	SEGMENT
??_C@_0BO@LBFAINEO@CROUTE?3?5?5?5?5?$CFs?5?$CFs?5?$FL?$CFf?0?5?$CFf?0?5?$CFf?$FN@ DB 'C'
	DB	'ROUTE:    %s %s [%f, %f, %f]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@BKIHFALC@CROUTE?3?5WARNING?3?5checksums?5diff@
CONST	SEGMENT
??_C@_0EI@BKIHFALC@CROUTE?3?5WARNING?3?5checksums?5diff@ DB 'CROUTE: WARN'
	DB	'ING: checksums differ... server %d, client %d (task %s, %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06HDFDANIG@member@
CONST	SEGMENT
??_C@_06HDFDANIG@member@ DB 'member', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NKFOJBII@task_en@
CONST	SEGMENT
??_C@_07NKFOJBII@task_en@ DB 'task_en', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ai\taskgen\croute.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA DD 0c9H ; `create_generic_waypoint_route'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?parser_task_waypoint_route@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv705 = -164						; size = 4
tv626 = -164						; size = 4
tv440 = -164						; size = 4
tv361 = -164						; size = 4
tv248 = -164						; size = 4
tv697 = -160						; size = 4
tv618 = -160						; size = 4
tv432 = -160						; size = 4
tv353 = -160						; size = 4
tv240 = -160						; size = 4
tv748 = -156						; size = 4
tv728 = -156						; size = 4
tv673 = -156						; size = 4
tv570 = -156						; size = 4
tv521 = -156						; size = 4
tv501 = -156						; size = 4
tv480 = -156						; size = 4
tv462 = -156						; size = 4
tv408 = -156						; size = 4
tv337 = -156						; size = 4
tv288 = -156						; size = 4
tv270 = -156						; size = 4
tv224 = -156						; size = 4
tv200 = -156						; size = 4
tv180 = -156						; size = 4
tv158 = -156						; size = 4
tv137 = -156						; size = 4
tv84 = -156						; size = 4
tv740 = -152						; size = 4
tv720 = -152						; size = 4
tv665 = -152						; size = 4
tv562 = -152						; size = 4
tv513 = -152						; size = 4
tv493 = -152						; size = 4
tv473 = -152						; size = 4
tv454 = -152						; size = 4
tv400 = -152						; size = 4
tv329 = -152						; size = 4
tv281 = -152						; size = 4
tv262 = -152						; size = 4
tv216 = -152						; size = 4
tv192 = -152						; size = 4
tv172 = -152						; size = 4
tv150 = -152						; size = 4
tv129 = -152						; size = 4
tv76 = -152						; size = 4
_delta_position$1 = -84					; size = 12
_min_range$2 = -72					; size = 4
_range$3 = -68						; size = 4
_delta_position$4 = -64					; size = 12
_this_wp$ = -52						; size = 4
_next_wp$ = -48						; size = 4
_last_wp$ = -44						; size = 4
_next_next_wp$ = -40					; size = 4
_next_pos$ = -36					; size = 4
_this_pos$ = -32					; size = 4
_last_pos$ = -28					; size = 4
_next_next_pos$ = -24					; size = 4
_new_pos$ = -20						; size = 12
_min_range$ = -8					; size = 4
_range$ = -4						; size = 4
_group$ = 8						; size = 4
_task$ = 12						; size = 4
?parser_task_waypoint_route@@YGXPAUENTITY@@0@Z PROC	; parser_task_waypoint_route, COMDAT

; 832  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 833  : 
; 834  : 	float
; 835  : 		range,
; 836  : 		min_range;
; 837  : 
; 838  : 	vec3d
; 839  : 		new_pos,
; 840  : 		*next_next_pos,
; 841  : 		*last_pos,
; 842  : 		*this_pos,
; 843  : 		*next_pos;
; 844  : 
; 845  : 	entity
; 846  : 		*next_next_wp,
; 847  : 		*last_wp,
; 848  : 		*next_wp,
; 849  : 		*this_wp;
; 850  : 
; 851  : 	ASSERT (task->type == ENTITY_TYPE_TASK);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  0000f	83 38 22	 cmp	 DWORD PTR [eax], 34	; 00000022H
  00012	74 18		 je	 SHORT $LN4@parser_tas
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00019	83 c0 13	 add	 eax, 19			; 00000013H
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@DMNHGEHG@task?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_TASK@
  00027	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@parser_tas:

; 852  : 
; 853  : 	last_wp = get_local_entity_first_child (task, LIST_TYPE_WAYPOINT);

  0002c	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  00030	74 0d		 je	 SHORT $LN16@parser_tas
  00032	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv76[ebp], ecx
  0003d	eb 24		 jmp	 SHORT $LN17@parser_tas
$LN16@parser_tas:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00045	83 c2 15	 add	 edx, 21			; 00000015H
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN17@parser_tas:
  00063	b9 01 00 00 00	 mov	 ecx, 1
  00068	85 c9		 test	 ecx, ecx
  0006a	74 0c		 je	 SHORT $LN18@parser_tas
  0006c	c7 85 64 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv84[ebp], 44	; 0000002cH
  00076	eb 24		 jmp	 SHORT $LN19@parser_tas
$LN18@parser_tas:
  00078	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0007e	83 c2 15	 add	 edx, 21			; 00000015H
  00081	52		 push	 edx
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00092	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN19@parser_tas:
  0009c	6a 2c		 push	 44			; 0000002cH
  0009e	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  000a1	51		 push	 ecx
  000a2	69 95 68 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv76[ebp], 180
  000ac	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv84[ebp]
  000b2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000b9	ff d1		 call	 ecx
  000bb	89 45 d4	 mov	 DWORD PTR _last_wp$[ebp], eax

; 854  : 
; 855  : 	if (!last_wp)

  000be	83 7d d4 00	 cmp	 DWORD PTR _last_wp$[ebp], 0
  000c2	75 05		 jne	 SHORT $LN5@parser_tas

; 856  : 	{
; 857  : 
; 858  : 		return;

  000c4	e9 91 10 00 00	 jmp	 $LN1@parser_tas
$LN5@parser_tas:

; 859  : 	}
; 860  : 
; 861  : 	this_wp = get_local_entity_child_succ (last_wp, LIST_TYPE_WAYPOINT);

  000c9	83 7d d4 00	 cmp	 DWORD PTR _last_wp$[ebp], 0
  000cd	74 0d		 je	 SHORT $LN20@parser_tas
  000cf	8b 45 d4	 mov	 eax, DWORD PTR _last_wp$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv129[ebp], ecx
  000da	eb 24		 jmp	 SHORT $LN21@parser_tas
$LN20@parser_tas:
  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  000e2	83 c2 1d	 add	 edx, 29			; 0000001dH
  000e5	52		 push	 edx
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f6	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN21@parser_tas:
  00100	b9 01 00 00 00	 mov	 ecx, 1
  00105	85 c9		 test	 ecx, ecx
  00107	74 0c		 je	 SHORT $LN22@parser_tas
  00109	c7 85 64 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv137[ebp], 44 ; 0000002cH
  00113	eb 24		 jmp	 SHORT $LN23@parser_tas
$LN22@parser_tas:
  00115	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0011b	83 c2 1d	 add	 edx, 29			; 0000001dH
  0011e	52		 push	 edx
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN23@parser_tas:
  00139	6a 2c		 push	 44			; 0000002cH
  0013b	8b 4d d4	 mov	 ecx, DWORD PTR _last_wp$[ebp]
  0013e	51		 push	 ecx
  0013f	69 95 68 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv129[ebp], 180
  00149	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  0014f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00156	ff d1		 call	 ecx
  00158	89 45 cc	 mov	 DWORD PTR _this_wp$[ebp], eax

; 862  : 
; 863  : 	if (!this_wp)

  0015b	83 7d cc 00	 cmp	 DWORD PTR _this_wp$[ebp], 0
  0015f	75 05		 jne	 SHORT $LN6@parser_tas

; 864  : 	{
; 865  : 
; 866  : 		return;

  00161	e9 f4 0f 00 00	 jmp	 $LN1@parser_tas
$LN6@parser_tas:

; 867  : 	}
; 868  : 
; 869  : 	next_wp = get_local_entity_child_succ (this_wp, LIST_TYPE_WAYPOINT);

  00166	83 7d cc 00	 cmp	 DWORD PTR _this_wp$[ebp], 0
  0016a	74 0d		 je	 SHORT $LN24@parser_tas
  0016c	8b 45 cc	 mov	 eax, DWORD PTR _this_wp$[ebp]
  0016f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00171	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv150[ebp], ecx
  00177	eb 24		 jmp	 SHORT $LN25@parser_tas
$LN24@parser_tas:
  00179	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0017f	83 c2 25	 add	 edx, 37			; 00000025H
  00182	52		 push	 edx
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00188	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0018d	50		 push	 eax
  0018e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00193	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN25@parser_tas:
  0019d	b9 01 00 00 00	 mov	 ecx, 1
  001a2	85 c9		 test	 ecx, ecx
  001a4	74 0c		 je	 SHORT $LN26@parser_tas
  001a6	c7 85 64 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv158[ebp], 44 ; 0000002cH
  001b0	eb 24		 jmp	 SHORT $LN27@parser_tas
$LN26@parser_tas:
  001b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  001b8	83 c2 25	 add	 edx, 37			; 00000025H
  001bb	52		 push	 edx
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN27@parser_tas:
  001d6	6a 2c		 push	 44			; 0000002cH
  001d8	8b 4d cc	 mov	 ecx, DWORD PTR _this_wp$[ebp]
  001db	51		 push	 ecx
  001dc	69 95 68 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv150[ebp], 180
  001e6	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv158[ebp]
  001ec	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001f3	ff d1		 call	 ecx
  001f5	89 45 d0	 mov	 DWORD PTR _next_wp$[ebp], eax

; 870  : 
; 871  : 	if (!next_wp)

  001f8	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  001fc	75 05		 jne	 SHORT $LN7@parser_tas

; 872  : 	{
; 873  : 
; 874  : 		return;

  001fe	e9 57 0f 00 00	 jmp	 $LN1@parser_tas
$LN7@parser_tas:

; 875  : 	}
; 876  : 
; 877  : 	while (next_wp)

  00203	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  00207	0f 84 4d 0f 00
	00		 je	 $LN3@parser_tas

; 878  : 	{
; 879  : 	
; 880  : 		this_pos = get_local_entity_vec3d_ptr (this_wp, VEC3D_TYPE_POSITION);

  0020d	83 7d cc 00	 cmp	 DWORD PTR _this_wp$[ebp], 0
  00211	74 0d		 je	 SHORT $LN28@parser_tas
  00213	8b 45 cc	 mov	 eax, DWORD PTR _this_wp$[ebp]
  00216	8b 08		 mov	 ecx, DWORD PTR [eax]
  00218	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv172[ebp], ecx
  0021e	eb 24		 jmp	 SHORT $LN29@parser_tas
$LN28@parser_tas:
  00220	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00226	83 c2 30	 add	 edx, 48			; 00000030H
  00229	52		 push	 edx
  0022a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00234	50		 push	 eax
  00235	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023a	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN29@parser_tas:
  00244	b9 01 00 00 00	 mov	 ecx, 1
  00249	85 c9		 test	 ecx, ecx
  0024b	74 0c		 je	 SHORT $LN30@parser_tas
  0024d	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv180[ebp], 8
  00257	eb 24		 jmp	 SHORT $LN31@parser_tas
$LN30@parser_tas:
  00259	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0025f	83 c2 30	 add	 edx, 48			; 00000030H
  00262	52		 push	 edx
  00263	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00268	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0026d	50		 push	 eax
  0026e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00273	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN31@parser_tas:
  0027d	6a 08		 push	 8
  0027f	8b 4d cc	 mov	 ecx, DWORD PTR _this_wp$[ebp]
  00282	51		 push	 ecx
  00283	6b 95 68 ff ff
	ff 60		 imul	 edx, DWORD PTR tv172[ebp], 96
  0028a	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv180[ebp]
  00290	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00297	ff d1		 call	 ecx
  00299	89 45 e0	 mov	 DWORD PTR _this_pos$[ebp], eax

; 881  : 
; 882  : 		next_pos = get_local_entity_vec3d_ptr (next_wp, VEC3D_TYPE_POSITION);

  0029c	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  002a0	74 0d		 je	 SHORT $LN32@parser_tas
  002a2	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  002a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a7	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv192[ebp], ecx
  002ad	eb 24		 jmp	 SHORT $LN33@parser_tas
$LN32@parser_tas:
  002af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  002b5	83 c2 32	 add	 edx, 50			; 00000032H
  002b8	52		 push	 edx
  002b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c9	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv192[ebp], 0
$LN33@parser_tas:
  002d3	b9 01 00 00 00	 mov	 ecx, 1
  002d8	85 c9		 test	 ecx, ecx
  002da	74 0c		 je	 SHORT $LN34@parser_tas
  002dc	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv200[ebp], 8
  002e6	eb 24		 jmp	 SHORT $LN35@parser_tas
$LN34@parser_tas:
  002e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  002ee	83 c2 32	 add	 edx, 50			; 00000032H
  002f1	52		 push	 edx
  002f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002fc	50		 push	 eax
  002fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00302	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
$LN35@parser_tas:
  0030c	6a 08		 push	 8
  0030e	8b 4d d0	 mov	 ecx, DWORD PTR _next_wp$[ebp]
  00311	51		 push	 ecx
  00312	6b 95 68 ff ff
	ff 60		 imul	 edx, DWORD PTR tv192[ebp], 96
  00319	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv200[ebp]
  0031f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00326	ff d1		 call	 ecx
  00328	89 45 dc	 mov	 DWORD PTR _next_pos$[ebp], eax

; 883  : 	
; 884  : 		//
; 885  : 		// check if this_wp is on top off next_wp
; 886  : 		//
; 887  : 
; 888  : 
; 889  : 		range = get_approx_3d_range (next_pos, this_pos);

  0032b	8b 45 e0	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0032e	50		 push	 eax
  0032f	8b 4d dc	 mov	 ecx, DWORD PTR _next_pos$[ebp]
  00332	51		 push	 ecx
  00333	e8 00 00 00 00	 call	 ?get_approx_3d_range@@YGMPBUVEC3D@@0@Z ; get_approx_3d_range
  00338	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 890  : 
; 891  : 		min_range = get_waypoint_database_minimum_previous_waypoint_distance (get_local_entity_int_value (next_wp, INT_TYPE_ENTITY_SUB_TYPE), group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].default_entity_type);

  0033b	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  0033f	74 0d		 je	 SHORT $LN36@parser_tas
  00341	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  00344	8b 08		 mov	 ecx, DWORD PTR [eax]
  00346	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv216[ebp], ecx
  0034c	eb 24		 jmp	 SHORT $LN37@parser_tas
$LN36@parser_tas:
  0034e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00354	83 c2 3b	 add	 edx, 59			; 0000003bH
  00357	52		 push	 edx
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0035d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00362	50		 push	 eax
  00363	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00368	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv216[ebp], 0
$LN37@parser_tas:
  00372	b9 01 00 00 00	 mov	 ecx, 1
  00377	85 c9		 test	 ecx, ecx
  00379	74 0c		 je	 SHORT $LN38@parser_tas
  0037b	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv224[ebp], 52 ; 00000034H
  00385	eb 24		 jmp	 SHORT $LN39@parser_tas
$LN38@parser_tas:
  00387	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0038d	83 c2 3b	 add	 edx, 59			; 0000003bH
  00390	52		 push	 edx
  00391	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00396	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0039b	50		 push	 eax
  0039c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a1	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv224[ebp], 0
$LN39@parser_tas:
  003ab	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  003af	74 0d		 je	 SHORT $LN40@parser_tas
  003b1	8b 4d d0	 mov	 ecx, DWORD PTR _next_wp$[ebp]
  003b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  003b6	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv240[ebp], edx
  003bc	eb 24		 jmp	 SHORT $LN41@parser_tas
$LN40@parser_tas:
  003be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  003c3	83 c0 3b	 add	 eax, 59			; 0000003bH
  003c6	50		 push	 eax
  003c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003d2	51		 push	 ecx
  003d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d8	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv240[ebp], 0
$LN41@parser_tas:
  003e2	ba 01 00 00 00	 mov	 edx, 1
  003e7	85 d2		 test	 edx, edx
  003e9	74 0c		 je	 SHORT $LN42@parser_tas
  003eb	c7 85 5c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv248[ebp], 52 ; 00000034H
  003f5	eb 24		 jmp	 SHORT $LN43@parser_tas
$LN42@parser_tas:
  003f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  003fc	83 c0 3b	 add	 eax, 59			; 0000003bH
  003ff	50		 push	 eax
  00400	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00405	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0040b	51		 push	 ecx
  0040c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00411	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp], 0
$LN43@parser_tas:
  0041b	6a 34		 push	 52			; 00000034H
  0041d	8b 55 08	 mov	 edx, DWORD PTR _group$[ebp]
  00420	52		 push	 edx
  00421	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv216[ebp], 1116
  0042b	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv224[ebp]
  00431	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00438	ff d2		 call	 edx
  0043a	6b c0 64	 imul	 eax, eax, 100
  0043d	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+28]
  00443	51		 push	 ecx
  00444	6a 34		 push	 52			; 00000034H
  00446	8b 55 d0	 mov	 edx, DWORD PTR _next_wp$[ebp]
  00449	52		 push	 edx
  0044a	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv240[ebp], 1116
  00454	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv248[ebp]
  0045a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00461	ff d2		 call	 edx
  00463	50		 push	 eax
  00464	e8 00 00 00 00	 call	 ?get_waypoint_database_minimum_previous_waypoint_distance@@YGMHW4ENTITY_TYPES@@@Z ; get_waypoint_database_minimum_previous_waypoint_distance
  00469	d9 5d f8	 fstp	 DWORD PTR _min_range$[ebp]

; 892  : 
; 893  : 		//if ((memncmp ((unsigned char *) this_pos, (unsigned char *) next_pos, sizeof (vec3d))))
; 894  : 		if (range < min_range)

  0046c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _min_range$[ebp]
  00471	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _range$[ebp]
  00475	0f 86 36 0c 00
	00		 jbe	 $LN13@parser_tas

; 895  : 		{
; 896  : 
; 897  : 			last_pos = get_local_entity_vec3d_ptr (last_wp, VEC3D_TYPE_POSITION);

  0047b	83 7d d4 00	 cmp	 DWORD PTR _last_wp$[ebp], 0
  0047f	74 0d		 je	 SHORT $LN44@parser_tas
  00481	8b 45 d4	 mov	 eax, DWORD PTR _last_wp$[ebp]
  00484	8b 08		 mov	 ecx, DWORD PTR [eax]
  00486	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv262[ebp], ecx
  0048c	eb 24		 jmp	 SHORT $LN45@parser_tas
$LN44@parser_tas:
  0048e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00494	83 c2 41	 add	 edx, 65			; 00000041H
  00497	52		 push	 edx
  00498	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004a2	50		 push	 eax
  004a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a8	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv262[ebp], 0
$LN45@parser_tas:
  004b2	b9 01 00 00 00	 mov	 ecx, 1
  004b7	85 c9		 test	 ecx, ecx
  004b9	74 0c		 je	 SHORT $LN46@parser_tas
  004bb	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv270[ebp], 8
  004c5	eb 24		 jmp	 SHORT $LN47@parser_tas
$LN46@parser_tas:
  004c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  004cd	83 c2 41	 add	 edx, 65			; 00000041H
  004d0	52		 push	 edx
  004d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  004db	50		 push	 eax
  004dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e1	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv270[ebp], 0
$LN47@parser_tas:
  004eb	6a 08		 push	 8
  004ed	8b 4d d4	 mov	 ecx, DWORD PTR _last_wp$[ebp]
  004f0	51		 push	 ecx
  004f1	6b 95 68 ff ff
	ff 60		 imul	 edx, DWORD PTR tv262[ebp], 96
  004f8	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv270[ebp]
  004fe	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00505	ff d1		 call	 ecx
  00507	89 45 e4	 mov	 DWORD PTR _last_pos$[ebp], eax

; 898  : 
; 899  : 			//
; 900  : 			// move this waypoint if its a navigation one
; 901  : 			//
; 902  : 
; 903  : 			if (get_local_entity_int_value (this_wp, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION)

  0050a	83 7d cc 00	 cmp	 DWORD PTR _this_wp$[ebp], 0
  0050e	74 0d		 je	 SHORT $LN48@parser_tas
  00510	8b 45 cc	 mov	 eax, DWORD PTR _this_wp$[ebp]
  00513	8b 08		 mov	 ecx, DWORD PTR [eax]
  00515	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv281[ebp], ecx
  0051b	eb 20		 jmp	 SHORT $LN49@parser_tas
$LN48@parser_tas:
  0051d	68 87 03 00 00	 push	 903			; 00000387H
  00522	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00527	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0052d	52		 push	 edx
  0052e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00533	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], 0
$LN49@parser_tas:
  0053d	b8 01 00 00 00	 mov	 eax, 1
  00542	85 c0		 test	 eax, eax
  00544	74 0c		 je	 SHORT $LN50@parser_tas
  00546	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv288[ebp], 52 ; 00000034H
  00550	eb 20		 jmp	 SHORT $LN51@parser_tas
$LN50@parser_tas:
  00552	68 87 03 00 00	 push	 903			; 00000387H
  00557	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0055c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00562	51		 push	 ecx
  00563	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00568	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv288[ebp], 0
$LN51@parser_tas:
  00572	6a 34		 push	 52			; 00000034H
  00574	8b 55 cc	 mov	 edx, DWORD PTR _this_wp$[ebp]
  00577	52		 push	 edx
  00578	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv281[ebp], 1116
  00582	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv288[ebp]
  00588	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0058f	ff d2		 call	 edx
  00591	83 f8 11	 cmp	 eax, 17			; 00000011H
  00594	0f 85 9f 04 00
	00		 jne	 $LN9@parser_tas

; 904  : 			{
; 905  : 
; 906  : 				vec3d
; 907  : 					delta_position;
; 908  : 
; 909  : 				delta_position.x = (next_pos->x - last_pos->x) / 2.0;

  0059a	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  0059d	8b 4d e4	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  005a0	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005a4	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  005a8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  005ac	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  005b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b8	f3 0f 11 45 c0	 movss	 DWORD PTR _delta_position$4[ebp], xmm0

; 910  : 				delta_position.y = 0.0;

  005bd	0f 57 c0	 xorps	 xmm0, xmm0
  005c0	f3 0f 11 45 c4	 movss	 DWORD PTR _delta_position$4[ebp+4], xmm0

; 911  : 				delta_position.z = (next_pos->z - last_pos->z) / 2.0;

  005c5	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  005c8	8b 4d e4	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  005cb	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  005d0	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  005d5	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  005d9	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  005e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005e5	f3 0f 11 45 c8	 movss	 DWORD PTR _delta_position$4[ebp+8], xmm0

; 912  : 	
; 913  : 				new_pos.x = ceil (last_pos->x + delta_position.x);

  005ea	8b 45 e4	 mov	 eax, DWORD PTR _last_pos$[ebp]
  005ed	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005f1	f3 0f 58 45 c0	 addss	 xmm0, DWORD PTR _delta_position$4[ebp]
  005f6	51		 push	 ecx
  005f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fc	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00601	d9 5d ec	 fstp	 DWORD PTR _new_pos$[ebp]

; 914  : 				new_pos.y = ceil (this_pos->y + delta_position.y);

  00604	8b 45 e0	 mov	 eax, DWORD PTR _this_pos$[ebp]
  00607	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0060c	f3 0f 58 45 c4	 addss	 xmm0, DWORD PTR _delta_position$4[ebp+4]
  00611	51		 push	 ecx
  00612	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00617	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0061c	d9 5d f0	 fstp	 DWORD PTR _new_pos$[ebp+4]

; 915  : 				new_pos.z = ceil (last_pos->z + delta_position.z);

  0061f	8b 45 e4	 mov	 eax, DWORD PTR _last_pos$[ebp]
  00622	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00627	f3 0f 58 45 c8	 addss	 xmm0, DWORD PTR _delta_position$4[ebp+8]
  0062c	51		 push	 ecx
  0062d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00632	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00637	d9 5d f4	 fstp	 DWORD PTR _new_pos$[ebp+8]

; 916  : 
; 917  : 				range = get_approx_3d_range (next_pos, &new_pos);

  0063a	8d 45 ec	 lea	 eax, DWORD PTR _new_pos$[ebp]
  0063d	50		 push	 eax
  0063e	8b 4d dc	 mov	 ecx, DWORD PTR _next_pos$[ebp]
  00641	51		 push	 ecx
  00642	e8 00 00 00 00	 call	 ?get_approx_3d_range@@YGMPBUVEC3D@@0@Z ; get_approx_3d_range
  00647	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 918  : 
; 919  : 				min_range = get_waypoint_database_minimum_previous_waypoint_distance (get_local_entity_int_value (next_wp, INT_TYPE_ENTITY_SUB_TYPE), group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].default_entity_type);

  0064a	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  0064e	74 0d		 je	 SHORT $LN52@parser_tas
  00650	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  00653	8b 08		 mov	 ecx, DWORD PTR [eax]
  00655	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv329[ebp], ecx
  0065b	eb 24		 jmp	 SHORT $LN53@parser_tas
$LN52@parser_tas:
  0065d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00663	83 c2 57	 add	 edx, 87			; 00000057H
  00666	52		 push	 edx
  00667	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0066c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00671	50		 push	 eax
  00672	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00677	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv329[ebp], 0
$LN53@parser_tas:
  00681	b9 01 00 00 00	 mov	 ecx, 1
  00686	85 c9		 test	 ecx, ecx
  00688	74 0c		 je	 SHORT $LN54@parser_tas
  0068a	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv337[ebp], 52 ; 00000034H
  00694	eb 24		 jmp	 SHORT $LN55@parser_tas
$LN54@parser_tas:
  00696	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0069c	83 c2 57	 add	 edx, 87			; 00000057H
  0069f	52		 push	 edx
  006a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006aa	50		 push	 eax
  006ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006b0	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv337[ebp], 0
$LN55@parser_tas:
  006ba	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  006be	74 0d		 je	 SHORT $LN56@parser_tas
  006c0	8b 4d d0	 mov	 ecx, DWORD PTR _next_wp$[ebp]
  006c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  006c5	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv353[ebp], edx
  006cb	eb 24		 jmp	 SHORT $LN57@parser_tas
$LN56@parser_tas:
  006cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  006d2	83 c0 57	 add	 eax, 87			; 00000057H
  006d5	50		 push	 eax
  006d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006e1	51		 push	 ecx
  006e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006e7	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv353[ebp], 0
$LN57@parser_tas:
  006f1	ba 01 00 00 00	 mov	 edx, 1
  006f6	85 d2		 test	 edx, edx
  006f8	74 0c		 je	 SHORT $LN58@parser_tas
  006fa	c7 85 5c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv361[ebp], 52 ; 00000034H
  00704	eb 24		 jmp	 SHORT $LN59@parser_tas
$LN58@parser_tas:
  00706	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0070b	83 c0 57	 add	 eax, 87			; 00000057H
  0070e	50		 push	 eax
  0070f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00714	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0071a	51		 push	 ecx
  0071b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00720	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv361[ebp], 0
$LN59@parser_tas:
  0072a	6a 34		 push	 52			; 00000034H
  0072c	8b 55 08	 mov	 edx, DWORD PTR _group$[ebp]
  0072f	52		 push	 edx
  00730	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv329[ebp], 1116
  0073a	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv337[ebp]
  00740	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00747	ff d2		 call	 edx
  00749	6b c0 64	 imul	 eax, eax, 100
  0074c	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+28]
  00752	51		 push	 ecx
  00753	6a 34		 push	 52			; 00000034H
  00755	8b 55 d0	 mov	 edx, DWORD PTR _next_wp$[ebp]
  00758	52		 push	 edx
  00759	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv353[ebp], 1116
  00763	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv361[ebp]
  00769	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00770	ff d2		 call	 edx
  00772	50		 push	 eax
  00773	e8 00 00 00 00	 call	 ?get_waypoint_database_minimum_previous_waypoint_distance@@YGMHW4ENTITY_TYPES@@@Z ; get_waypoint_database_minimum_previous_waypoint_distance
  00778	d9 5d f8	 fstp	 DWORD PTR _min_range$[ebp]

; 920  : 
; 921  : 				if (range < min_range)

  0077b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _min_range$[ebp]
  00780	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _range$[ebp]
  00784	0f 86 1a 02 00
	00		 jbe	 $LN11@parser_tas

; 922  : 				{
; 923  : 
; 924  : 					normalise_3d_vector (&delta_position);

  0078a	8d 45 c0	 lea	 eax, DWORD PTR _delta_position$4[ebp]
  0078d	50		 push	 eax
  0078e	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  00793	dd d8		 fstp	 ST(0)

; 925  : 
; 926  : 					//invert_3d_vector (&delta_position);
; 927  : 
; 928  : 					delta_position.x *= min_range;

  00795	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _delta_position$4[ebp]
  0079a	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _min_range$[ebp]
  0079f	f3 0f 11 45 c0	 movss	 DWORD PTR _delta_position$4[ebp], xmm0

; 929  : 					delta_position.y *= min_range;

  007a4	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _delta_position$4[ebp+4]
  007a9	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _min_range$[ebp]
  007ae	f3 0f 11 45 c4	 movss	 DWORD PTR _delta_position$4[ebp+4], xmm0

; 930  : 					delta_position.z *= min_range;

  007b3	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _delta_position$4[ebp+8]
  007b8	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _min_range$[ebp]
  007bd	f3 0f 11 45 c8	 movss	 DWORD PTR _delta_position$4[ebp+8], xmm0

; 931  : 	
; 932  : 					new_pos.x = ceil (next_pos->x - delta_position.x);

  007c2	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  007c5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  007c9	f3 0f 5c 45 c0	 subss	 xmm0, DWORD PTR _delta_position$4[ebp]
  007ce	51		 push	 ecx
  007cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007d4	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  007d9	d9 5d ec	 fstp	 DWORD PTR _new_pos$[ebp]

; 933  : 					new_pos.y = ceil (next_pos->y - delta_position.y);

  007dc	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  007df	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  007e4	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _delta_position$4[ebp+4]
  007e9	51		 push	 ecx
  007ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ef	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  007f4	d9 5d f0	 fstp	 DWORD PTR _new_pos$[ebp+4]

; 934  : 					new_pos.z = ceil (next_pos->z - delta_position.z);

  007f7	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  007fa	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  007ff	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _delta_position$4[ebp+8]
  00804	51		 push	 ecx
  00805	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0080a	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0080f	d9 5d f4	 fstp	 DWORD PTR _new_pos$[ebp+8]

; 935  : 
; 936  : 					debug_log ("CROUTE: Limiting waypoint spacing... wp %s [%f, %f, %f] is limited to %f from wp %s [%f, %f, %f], (this -> next)",

  00812	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  00816	74 0d		 je	 SHORT $LN60@parser_tas
  00818	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  0081b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0081d	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv400[ebp], ecx
  00823	eb 24		 jmp	 SHORT $LN61@parser_tas
$LN60@parser_tas:
  00825	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0082b	83 c2 6c	 add	 edx, 108		; 0000006cH
  0082e	52		 push	 edx
  0082f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00834	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00839	50		 push	 eax
  0083a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0083f	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv400[ebp], 0
$LN61@parser_tas:
  00849	b9 01 00 00 00	 mov	 ecx, 1
  0084e	85 c9		 test	 ecx, ecx
  00850	74 0c		 je	 SHORT $LN62@parser_tas
  00852	c7 85 64 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv408[ebp], 3
  0085c	eb 24		 jmp	 SHORT $LN63@parser_tas
$LN62@parser_tas:
  0085e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00864	83 c2 6c	 add	 edx, 108		; 0000006cH
  00867	52		 push	 edx
  00868	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0086d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00872	50		 push	 eax
  00873	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00878	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv408[ebp], 0
$LN63@parser_tas:
  00882	83 7d cc 00	 cmp	 DWORD PTR _this_wp$[ebp], 0
  00886	74 0d		 je	 SHORT $LN64@parser_tas
  00888	8b 4d cc	 mov	 ecx, DWORD PTR _this_wp$[ebp]
  0088b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0088d	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv432[ebp], edx
  00893	eb 24		 jmp	 SHORT $LN65@parser_tas
$LN64@parser_tas:
  00895	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  0089a	83 c0 69	 add	 eax, 105		; 00000069H
  0089d	50		 push	 eax
  0089e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  008a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008a9	51		 push	 ecx
  008aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008af	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv432[ebp], 0
$LN65@parser_tas:
  008b9	ba 01 00 00 00	 mov	 edx, 1
  008be	85 d2		 test	 edx, edx
  008c0	74 0c		 je	 SHORT $LN66@parser_tas
  008c2	c7 85 5c ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv440[ebp], 3
  008cc	eb 24		 jmp	 SHORT $LN67@parser_tas
$LN66@parser_tas:
  008ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  008d3	83 c0 69	 add	 eax, 105		; 00000069H
  008d6	50		 push	 eax
  008d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  008dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  008e2	51		 push	 ecx
  008e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e8	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv440[ebp], 0
$LN67@parser_tas:
  008f2	8b 55 dc	 mov	 edx, DWORD PTR _next_pos$[ebp]
  008f5	f3 0f 5a 42 08	 cvtss2sd xmm0, DWORD PTR [edx+8]
  008fa	83 ec 08	 sub	 esp, 8
  008fd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00902	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  00905	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  0090a	83 ec 08	 sub	 esp, 8
  0090d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00912	8b 4d dc	 mov	 ecx, DWORD PTR _next_pos$[ebp]
  00915	f3 0f 5a 01	 cvtss2sd xmm0, DWORD PTR [ecx]
  00919	83 ec 08	 sub	 esp, 8
  0091c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00921	6a 03		 push	 3
  00923	8b 55 d0	 mov	 edx, DWORD PTR _next_wp$[ebp]
  00926	52		 push	 edx
  00927	6b 85 68 ff ff
	ff 34		 imul	 eax, DWORD PTR tv400[ebp], 52
  0092e	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv408[ebp]
  00934	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  0093b	ff d2		 call	 edx
  0093d	50		 push	 eax
  0093e	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _min_range$[ebp]
  00943	83 ec 08	 sub	 esp, 8
  00946	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0094b	8b 45 e0	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0094e	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00953	83 ec 08	 sub	 esp, 8
  00956	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0095b	8b 4d e0	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  0095e	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  00963	83 ec 08	 sub	 esp, 8
  00966	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0096b	8b 55 e0	 mov	 edx, DWORD PTR _this_pos$[ebp]
  0096e	f3 0f 5a 02	 cvtss2sd xmm0, DWORD PTR [edx]
  00972	83 ec 08	 sub	 esp, 8
  00975	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0097a	6a 03		 push	 3
  0097c	8b 45 cc	 mov	 eax, DWORD PTR _this_wp$[ebp]
  0097f	50		 push	 eax
  00980	6b 8d 60 ff ff
	ff 34		 imul	 ecx, DWORD PTR tv432[ebp], 52
  00987	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv440[ebp]
  0098d	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  00994	ff d0		 call	 eax
  00996	50		 push	 eax
  00997	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@OOPFLFPL@CROUTE?3?5Limiting?5waypoint?5spaci@
  0099c	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  009a1	83 c4 44	 add	 esp, 68			; 00000044H
$LN11@parser_tas:

; 937  : 									get_local_entity_string (this_wp, STRING_TYPE_FULL_NAME),
; 938  : 									this_pos->x, this_pos->y, this_pos->z,
; 939  : 									min_range,
; 940  : 									get_local_entity_string (next_wp, STRING_TYPE_FULL_NAME),
; 941  : 									next_pos->x, next_pos->y, next_pos->z);
; 942  : 				}
; 943  : 	
; 944  : 				#if DEBUG_MODULE
; 945  : 				if (debug_flag)
; 946  : 				{
; 947  : 	
; 948  : 					debug_log ("CROUTE: PARSING WAYPOINT ROUTE.... spacing this_waypoint");
; 949  : 				}
; 950  : 				#endif
; 951  : 	
; 952  : 				set_local_entity_vec3d (this_wp, VEC3D_TYPE_POSITION, &new_pos);

  009a4	83 7d cc 00	 cmp	 DWORD PTR _this_wp$[ebp], 0
  009a8	74 0d		 je	 SHORT $LN68@parser_tas
  009aa	8b 45 cc	 mov	 eax, DWORD PTR _this_wp$[ebp]
  009ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  009af	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv454[ebp], ecx
  009b5	eb 24		 jmp	 SHORT $LN69@parser_tas
$LN68@parser_tas:
  009b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  009bd	83 c2 78	 add	 edx, 120		; 00000078H
  009c0	52		 push	 edx
  009c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  009c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009cb	50		 push	 eax
  009cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009d1	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv454[ebp], 0
$LN69@parser_tas:
  009db	b9 01 00 00 00	 mov	 ecx, 1
  009e0	85 c9		 test	 ecx, ecx
  009e2	74 0c		 je	 SHORT $LN70@parser_tas
  009e4	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv462[ebp], 8
  009ee	eb 24		 jmp	 SHORT $LN71@parser_tas
$LN70@parser_tas:
  009f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  009f6	83 c2 78	 add	 edx, 120		; 00000078H
  009f9	52		 push	 edx
  009fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  009ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00a04	50		 push	 eax
  00a05	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a0a	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv462[ebp], 0
$LN71@parser_tas:
  00a14	8d 4d ec	 lea	 ecx, DWORD PTR _new_pos$[ebp]
  00a17	51		 push	 ecx
  00a18	6a 08		 push	 8
  00a1a	8b 55 cc	 mov	 edx, DWORD PTR _this_wp$[ebp]
  00a1d	52		 push	 edx
  00a1e	6b 85 68 ff ff
	ff 60		 imul	 eax, DWORD PTR tv454[ebp], 96
  00a25	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv462[ebp]
  00a2b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00a32	ff d2		 call	 edx
  00a34	e9 78 06 00 00	 jmp	 $LN13@parser_tas
$LN9@parser_tas:

; 953  : 			}
; 954  : 			else if (get_local_entity_int_value (next_wp, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION)

  00a39	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  00a3d	74 0d		 je	 SHORT $LN72@parser_tas
  00a3f	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  00a42	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a44	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv473[ebp], ecx
  00a4a	eb 20		 jmp	 SHORT $LN73@parser_tas
$LN72@parser_tas:
  00a4c	68 ba 03 00 00	 push	 954			; 000003baH
  00a51	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a56	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a5c	52		 push	 edx
  00a5d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a62	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv473[ebp], 0
$LN73@parser_tas:
  00a6c	b8 01 00 00 00	 mov	 eax, 1
  00a71	85 c0		 test	 eax, eax
  00a73	74 0c		 je	 SHORT $LN74@parser_tas
  00a75	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv480[ebp], 52 ; 00000034H
  00a7f	eb 20		 jmp	 SHORT $LN75@parser_tas
$LN74@parser_tas:
  00a81	68 ba 03 00 00	 push	 954			; 000003baH
  00a86	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a8b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a91	51		 push	 ecx
  00a92	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a97	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv480[ebp], 0
$LN75@parser_tas:
  00aa1	6a 34		 push	 52			; 00000034H
  00aa3	8b 55 d0	 mov	 edx, DWORD PTR _next_wp$[ebp]
  00aa6	52		 push	 edx
  00aa7	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv473[ebp], 1116
  00ab1	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv480[ebp]
  00ab7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00abe	ff d2		 call	 edx
  00ac0	83 f8 11	 cmp	 eax, 17			; 00000011H
  00ac3	0f 85 e8 05 00
	00		 jne	 $LN13@parser_tas

; 955  : 			{
; 956  : 
; 957  : 				next_next_wp = get_local_entity_child_succ (next_wp, LIST_TYPE_WAYPOINT);

  00ac9	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  00acd	74 0d		 je	 SHORT $LN76@parser_tas
  00acf	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  00ad2	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ad4	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv493[ebp], ecx
  00ada	eb 24		 jmp	 SHORT $LN77@parser_tas
$LN76@parser_tas:
  00adc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00ae2	83 c2 7d	 add	 edx, 125		; 0000007dH
  00ae5	52		 push	 edx
  00ae6	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aeb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00af0	50		 push	 eax
  00af1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00af6	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv493[ebp], 0
$LN77@parser_tas:
  00b00	b9 01 00 00 00	 mov	 ecx, 1
  00b05	85 c9		 test	 ecx, ecx
  00b07	74 0c		 je	 SHORT $LN78@parser_tas
  00b09	c7 85 64 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv501[ebp], 44 ; 0000002cH
  00b13	eb 24		 jmp	 SHORT $LN79@parser_tas
$LN78@parser_tas:
  00b15	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00b1b	83 c2 7d	 add	 edx, 125		; 0000007dH
  00b1e	52		 push	 edx
  00b1f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b24	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b29	50		 push	 eax
  00b2a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b2f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv501[ebp], 0
$LN79@parser_tas:
  00b39	6a 2c		 push	 44			; 0000002cH
  00b3b	8b 4d d0	 mov	 ecx, DWORD PTR _next_wp$[ebp]
  00b3e	51		 push	 ecx
  00b3f	69 95 68 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv493[ebp], 180
  00b49	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv501[ebp]
  00b4f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b56	ff d1		 call	 ecx
  00b58	89 45 d8	 mov	 DWORD PTR _next_next_wp$[ebp], eax

; 958  : 	
; 959  : 				next_next_pos = get_local_entity_vec3d_ptr (next_next_wp, VEC3D_TYPE_POSITION);

  00b5b	83 7d d8 00	 cmp	 DWORD PTR _next_next_wp$[ebp], 0
  00b5f	74 0d		 je	 SHORT $LN80@parser_tas
  00b61	8b 45 d8	 mov	 eax, DWORD PTR _next_next_wp$[ebp]
  00b64	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b66	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv513[ebp], ecx
  00b6c	eb 24		 jmp	 SHORT $LN81@parser_tas
$LN80@parser_tas:
  00b6e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00b74	83 c2 7f	 add	 edx, 127		; 0000007fH
  00b77	52		 push	 edx
  00b78	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b7d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b82	50		 push	 eax
  00b83	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b88	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv513[ebp], 0
$LN81@parser_tas:
  00b92	b9 01 00 00 00	 mov	 ecx, 1
  00b97	85 c9		 test	 ecx, ecx
  00b99	74 0c		 je	 SHORT $LN82@parser_tas
  00b9b	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv521[ebp], 8
  00ba5	eb 24		 jmp	 SHORT $LN83@parser_tas
$LN82@parser_tas:
  00ba7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00bad	83 c2 7f	 add	 edx, 127		; 0000007fH
  00bb0	52		 push	 edx
  00bb1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bb6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00bbb	50		 push	 eax
  00bbc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bc1	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv521[ebp], 0
$LN83@parser_tas:
  00bcb	6a 08		 push	 8
  00bcd	8b 4d d8	 mov	 ecx, DWORD PTR _next_next_wp$[ebp]
  00bd0	51		 push	 ecx
  00bd1	6b 95 68 ff ff
	ff 60		 imul	 edx, DWORD PTR tv513[ebp], 96
  00bd8	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv521[ebp]
  00bde	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00be5	ff d1		 call	 ecx
  00be7	89 45 e8	 mov	 DWORD PTR _next_next_pos$[ebp], eax

; 960  : 
; 961  : 				if (next_next_wp)

  00bea	83 7d d8 00	 cmp	 DWORD PTR _next_next_wp$[ebp], 0
  00bee	0f 84 bd 04 00
	00		 je	 $LN13@parser_tas

; 962  : 				{
; 963  : 
; 964  : 					float
; 965  : 						range,
; 966  : 						min_range;
; 967  : 
; 968  : 					vec3d
; 969  : 						delta_position;
; 970  : 
; 971  : 					//
; 972  : 					// move the next one towards the next_next
; 973  : 					//
; 974  : 
; 975  : 					delta_position.x = (next_next_pos->x - this_pos->x) / 2.0;

  00bf4	8b 45 e8	 mov	 eax, DWORD PTR _next_next_pos$[ebp]
  00bf7	8b 4d e0	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  00bfa	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00bfe	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00c02	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00c06	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00c0e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c12	f3 0f 11 45 ac	 movss	 DWORD PTR _delta_position$1[ebp], xmm0

; 976  : 					delta_position.y = 0.0;

  00c17	0f 57 c0	 xorps	 xmm0, xmm0
  00c1a	f3 0f 11 45 b0	 movss	 DWORD PTR _delta_position$1[ebp+4], xmm0

; 977  : 					delta_position.z = (next_next_pos->z - this_pos->z) / 2.0;

  00c1f	8b 45 e8	 mov	 eax, DWORD PTR _next_next_pos$[ebp]
  00c22	8b 4d e0	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  00c25	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00c2a	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00c2f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00c33	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00c3b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c3f	f3 0f 11 45 b4	 movss	 DWORD PTR _delta_position$1[ebp+8], xmm0

; 978  : 	
; 979  : 					new_pos.x = ceil (this_pos->x + delta_position.x);

  00c44	8b 45 e0	 mov	 eax, DWORD PTR _this_pos$[ebp]
  00c47	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00c4b	f3 0f 58 45 ac	 addss	 xmm0, DWORD PTR _delta_position$1[ebp]
  00c50	51		 push	 ecx
  00c51	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c56	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00c5b	d9 5d ec	 fstp	 DWORD PTR _new_pos$[ebp]

; 980  : 					new_pos.y = ceil (next_pos->y + delta_position.y);

  00c5e	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  00c61	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00c66	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _delta_position$1[ebp+4]
  00c6b	51		 push	 ecx
  00c6c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c71	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00c76	d9 5d f0	 fstp	 DWORD PTR _new_pos$[ebp+4]

; 981  : 					new_pos.z = ceil (this_pos->z + delta_position.z);

  00c79	8b 45 e0	 mov	 eax, DWORD PTR _this_pos$[ebp]
  00c7c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00c81	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _delta_position$1[ebp+8]
  00c86	51		 push	 ecx
  00c87	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c8c	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00c91	d9 5d f4	 fstp	 DWORD PTR _new_pos$[ebp+8]

; 982  : 
; 983  : 					range = get_approx_3d_range (next_next_pos, &new_pos);

  00c94	8d 45 ec	 lea	 eax, DWORD PTR _new_pos$[ebp]
  00c97	50		 push	 eax
  00c98	8b 4d e8	 mov	 ecx, DWORD PTR _next_next_pos$[ebp]
  00c9b	51		 push	 ecx
  00c9c	e8 00 00 00 00	 call	 ?get_approx_3d_range@@YGMPBUVEC3D@@0@Z ; get_approx_3d_range
  00ca1	d9 5d bc	 fstp	 DWORD PTR _range$3[ebp]

; 984  : 
; 985  : 					min_range = get_waypoint_database_minimum_previous_waypoint_distance (get_local_entity_int_value (next_next_wp, INT_TYPE_ENTITY_SUB_TYPE), group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].default_entity_type);

  00ca4	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00ca8	74 0d		 je	 SHORT $LN84@parser_tas
  00caa	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  00cad	8b 08		 mov	 ecx, DWORD PTR [eax]
  00caf	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv562[ebp], ecx
  00cb5	eb 27		 jmp	 SHORT $LN85@parser_tas
$LN84@parser_tas:
  00cb7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00cbd	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00cc3	52		 push	 edx
  00cc4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cc9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00cce	50		 push	 eax
  00ccf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cd4	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv562[ebp], 0
$LN85@parser_tas:
  00cde	b9 01 00 00 00	 mov	 ecx, 1
  00ce3	85 c9		 test	 ecx, ecx
  00ce5	74 0c		 je	 SHORT $LN86@parser_tas
  00ce7	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv570[ebp], 52 ; 00000034H
  00cf1	eb 27		 jmp	 SHORT $LN87@parser_tas
$LN86@parser_tas:
  00cf3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00cf9	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00cff	52		 push	 edx
  00d00	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d05	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00d0a	50		 push	 eax
  00d0b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d10	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv570[ebp], 0
$LN87@parser_tas:
  00d1a	83 7d d8 00	 cmp	 DWORD PTR _next_next_wp$[ebp], 0
  00d1e	74 0d		 je	 SHORT $LN88@parser_tas
  00d20	8b 4d d8	 mov	 ecx, DWORD PTR _next_next_wp$[ebp]
  00d23	8b 11		 mov	 edx, DWORD PTR [ecx]
  00d25	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv618[ebp], edx
  00d2b	eb 26		 jmp	 SHORT $LN89@parser_tas
$LN88@parser_tas:
  00d2d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00d32	05 99 00 00 00	 add	 eax, 153		; 00000099H
  00d37	50		 push	 eax
  00d38	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d3d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d43	51		 push	 ecx
  00d44	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d49	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv618[ebp], 0
$LN89@parser_tas:
  00d53	ba 01 00 00 00	 mov	 edx, 1
  00d58	85 d2		 test	 edx, edx
  00d5a	74 0c		 je	 SHORT $LN90@parser_tas
  00d5c	c7 85 5c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv626[ebp], 52 ; 00000034H
  00d66	eb 26		 jmp	 SHORT $LN91@parser_tas
$LN90@parser_tas:
  00d68	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00d6d	05 99 00 00 00	 add	 eax, 153		; 00000099H
  00d72	50		 push	 eax
  00d73	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d78	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00d7e	51		 push	 ecx
  00d7f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d84	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv626[ebp], 0
$LN91@parser_tas:
  00d8e	6a 34		 push	 52			; 00000034H
  00d90	8b 55 08	 mov	 edx, DWORD PTR _group$[ebp]
  00d93	52		 push	 edx
  00d94	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv562[ebp], 1116
  00d9e	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv570[ebp]
  00da4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00dab	ff d2		 call	 edx
  00dad	6b c0 64	 imul	 eax, eax, 100
  00db0	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+28]
  00db6	51		 push	 ecx
  00db7	6a 34		 push	 52			; 00000034H
  00db9	8b 55 d8	 mov	 edx, DWORD PTR _next_next_wp$[ebp]
  00dbc	52		 push	 edx
  00dbd	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv618[ebp], 1116
  00dc7	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv626[ebp]
  00dcd	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00dd4	ff d2		 call	 edx
  00dd6	50		 push	 eax
  00dd7	e8 00 00 00 00	 call	 ?get_waypoint_database_minimum_previous_waypoint_distance@@YGMHW4ENTITY_TYPES@@@Z ; get_waypoint_database_minimum_previous_waypoint_distance
  00ddc	d9 5d b8	 fstp	 DWORD PTR _min_range$2[ebp]

; 986  : 
; 987  : 					if (range < min_range)

  00ddf	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _min_range$2[ebp]
  00de4	0f 2f 45 bc	 comiss	 xmm0, DWORD PTR _range$3[ebp]
  00de8	0f 86 24 02 00
	00		 jbe	 $LN14@parser_tas

; 988  : 					{
; 989  : 
; 990  : 						normalise_3d_vector (&delta_position);

  00dee	8d 45 ac	 lea	 eax, DWORD PTR _delta_position$1[ebp]
  00df1	50		 push	 eax
  00df2	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  00df7	dd d8		 fstp	 ST(0)

; 991  : 
; 992  : 						//invert_3d_vector (&delta_position);
; 993  : 
; 994  : 						delta_position.x *= min_range;

  00df9	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _delta_position$1[ebp]
  00dfe	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _min_range$2[ebp]
  00e03	f3 0f 11 45 ac	 movss	 DWORD PTR _delta_position$1[ebp], xmm0

; 995  : 						delta_position.y *= min_range;

  00e08	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _delta_position$1[ebp+4]
  00e0d	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _min_range$2[ebp]
  00e12	f3 0f 11 45 b0	 movss	 DWORD PTR _delta_position$1[ebp+4], xmm0

; 996  : 						delta_position.z *= min_range;

  00e17	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _delta_position$1[ebp+8]
  00e1c	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _min_range$2[ebp]
  00e21	f3 0f 11 45 b4	 movss	 DWORD PTR _delta_position$1[ebp+8], xmm0

; 997  : 	
; 998  : 						new_pos.x = ceil (next_next_pos->x - delta_position.x);

  00e26	8b 45 e8	 mov	 eax, DWORD PTR _next_next_pos$[ebp]
  00e29	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00e2d	f3 0f 5c 45 ac	 subss	 xmm0, DWORD PTR _delta_position$1[ebp]
  00e32	51		 push	 ecx
  00e33	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e38	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00e3d	d9 5d ec	 fstp	 DWORD PTR _new_pos$[ebp]

; 999  : 						new_pos.y = ceil (next_next_pos->y - delta_position.y);

  00e40	8b 45 e8	 mov	 eax, DWORD PTR _next_next_pos$[ebp]
  00e43	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00e48	f3 0f 5c 45 b0	 subss	 xmm0, DWORD PTR _delta_position$1[ebp+4]
  00e4d	51		 push	 ecx
  00e4e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e53	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00e58	d9 5d f0	 fstp	 DWORD PTR _new_pos$[ebp+4]

; 1000 : 						new_pos.z = ceil (next_next_pos->z - delta_position.z);

  00e5b	8b 45 e8	 mov	 eax, DWORD PTR _next_next_pos$[ebp]
  00e5e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00e63	f3 0f 5c 45 b4	 subss	 xmm0, DWORD PTR _delta_position$1[ebp+8]
  00e68	51		 push	 ecx
  00e69	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e6e	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00e73	d9 5d f4	 fstp	 DWORD PTR _new_pos$[ebp+8]

; 1001 : 
; 1002 : 						debug_log ("CROUTE: Limiting waypoint spacing... wp %s [%f, %f, %f] is limited to %f from wp %s [%f, %f, %f], (next -> next_next)",

  00e76	83 7d d8 00	 cmp	 DWORD PTR _next_next_wp$[ebp], 0
  00e7a	74 0d		 je	 SHORT $LN92@parser_tas
  00e7c	8b 45 d8	 mov	 eax, DWORD PTR _next_next_wp$[ebp]
  00e7f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e81	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv665[ebp], ecx
  00e87	eb 27		 jmp	 SHORT $LN93@parser_tas
$LN92@parser_tas:
  00e89	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00e8f	81 c2 ae 00 00
	00		 add	 edx, 174		; 000000aeH
  00e95	52		 push	 edx
  00e96	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e9b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ea0	50		 push	 eax
  00ea1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ea6	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv665[ebp], 0
$LN93@parser_tas:
  00eb0	b9 01 00 00 00	 mov	 ecx, 1
  00eb5	85 c9		 test	 ecx, ecx
  00eb7	74 0c		 je	 SHORT $LN94@parser_tas
  00eb9	c7 85 64 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv673[ebp], 3
  00ec3	eb 27		 jmp	 SHORT $LN95@parser_tas
$LN94@parser_tas:
  00ec5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00ecb	81 c2 ae 00 00
	00		 add	 edx, 174		; 000000aeH
  00ed1	52		 push	 edx
  00ed2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ed7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00edc	50		 push	 eax
  00edd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ee2	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv673[ebp], 0
$LN95@parser_tas:
  00eec	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  00ef0	74 0d		 je	 SHORT $LN96@parser_tas
  00ef2	8b 4d d0	 mov	 ecx, DWORD PTR _next_wp$[ebp]
  00ef5	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ef7	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv697[ebp], edx
  00efd	eb 26		 jmp	 SHORT $LN97@parser_tas
$LN96@parser_tas:
  00eff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00f04	05 ab 00 00 00	 add	 eax, 171		; 000000abH
  00f09	50		 push	 eax
  00f0a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f0f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f15	51		 push	 ecx
  00f16	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f1b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv697[ebp], 0
$LN97@parser_tas:
  00f25	ba 01 00 00 00	 mov	 edx, 1
  00f2a	85 d2		 test	 edx, edx
  00f2c	74 0c		 je	 SHORT $LN98@parser_tas
  00f2e	c7 85 5c ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv705[ebp], 3
  00f38	eb 26		 jmp	 SHORT $LN99@parser_tas
$LN98@parser_tas:
  00f3a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  00f3f	05 ab 00 00 00	 add	 eax, 171		; 000000abH
  00f44	50		 push	 eax
  00f45	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f4a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00f50	51		 push	 ecx
  00f51	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f56	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv705[ebp], 0
$LN99@parser_tas:
  00f60	8b 55 e8	 mov	 edx, DWORD PTR _next_next_pos$[ebp]
  00f63	f3 0f 5a 42 08	 cvtss2sd xmm0, DWORD PTR [edx+8]
  00f68	83 ec 08	 sub	 esp, 8
  00f6b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00f70	8b 45 e8	 mov	 eax, DWORD PTR _next_next_pos$[ebp]
  00f73	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  00f78	83 ec 08	 sub	 esp, 8
  00f7b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00f80	8b 4d e8	 mov	 ecx, DWORD PTR _next_next_pos$[ebp]
  00f83	f3 0f 5a 01	 cvtss2sd xmm0, DWORD PTR [ecx]
  00f87	83 ec 08	 sub	 esp, 8
  00f8a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00f8f	6a 03		 push	 3
  00f91	8b 55 d8	 mov	 edx, DWORD PTR _next_next_wp$[ebp]
  00f94	52		 push	 edx
  00f95	6b 85 68 ff ff
	ff 34		 imul	 eax, DWORD PTR tv665[ebp], 52
  00f9c	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv673[ebp]
  00fa2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  00fa9	ff d2		 call	 edx
  00fab	50		 push	 eax
  00fac	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _min_range$2[ebp]
  00fb1	83 ec 08	 sub	 esp, 8
  00fb4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00fb9	8b 45 dc	 mov	 eax, DWORD PTR _next_pos$[ebp]
  00fbc	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00fc1	83 ec 08	 sub	 esp, 8
  00fc4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00fc9	8b 4d dc	 mov	 ecx, DWORD PTR _next_pos$[ebp]
  00fcc	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  00fd1	83 ec 08	 sub	 esp, 8
  00fd4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00fd9	8b 55 dc	 mov	 edx, DWORD PTR _next_pos$[ebp]
  00fdc	f3 0f 5a 02	 cvtss2sd xmm0, DWORD PTR [edx]
  00fe0	83 ec 08	 sub	 esp, 8
  00fe3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00fe8	6a 03		 push	 3
  00fea	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  00fed	50		 push	 eax
  00fee	6b 8d 60 ff ff
	ff 34		 imul	 ecx, DWORD PTR tv697[ebp], 52
  00ff5	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv705[ebp]
  00ffb	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  01002	ff d0		 call	 eax
  01004	50		 push	 eax
  01005	68 00 00 00 00	 push	 OFFSET ??_C@_0HG@MDOJFBHB@CROUTE?3?5Limiting?5waypoint?5spaci@
  0100a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0100f	83 c4 44	 add	 esp, 68			; 00000044H
$LN14@parser_tas:

; 1003 : 									get_local_entity_string (next_wp, STRING_TYPE_FULL_NAME),
; 1004 : 									next_pos->x, next_pos->y, next_pos->z,
; 1005 : 									min_range,
; 1006 : 									get_local_entity_string (next_next_wp, STRING_TYPE_FULL_NAME),
; 1007 : 									next_next_pos->x, next_next_pos->y, next_next_pos->z);
; 1008 : 					}
; 1009 : 
; 1010 : 					#if DEBUG_MODULE
; 1011 : 					if (debug_flag)
; 1012 : 					{
; 1013 : 			
; 1014 : 						debug_log ("CROUTE: PARSING WAYPOINT ROUTE.... spacing next waypoint");
; 1015 : 				
; 1016 : 					}
; 1017 : 					#endif
; 1018 : 
; 1019 : 					bound_position_to_adjusted_map_volume (&new_pos);

  01012	8d 45 ec	 lea	 eax, DWORD PTR _new_pos$[ebp]
  01015	50		 push	 eax
  01016	e8 00 00 00 00	 call	 ?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_volume

; 1020 : 		
; 1021 : 					set_local_entity_vec3d (next_wp, VEC3D_TYPE_POSITION, &new_pos);

  0101b	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  0101f	74 0d		 je	 SHORT $LN100@parser_tas
  01021	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  01024	8b 08		 mov	 ecx, DWORD PTR [eax]
  01026	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv720[ebp], ecx
  0102c	eb 27		 jmp	 SHORT $LN101@parser_tas
$LN100@parser_tas:
  0102e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  01034	81 c2 bd 00 00
	00		 add	 edx, 189		; 000000bdH
  0103a	52		 push	 edx
  0103b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  01040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01045	50		 push	 eax
  01046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0104b	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv720[ebp], 0
$LN101@parser_tas:
  01055	b9 01 00 00 00	 mov	 ecx, 1
  0105a	85 c9		 test	 ecx, ecx
  0105c	74 0c		 je	 SHORT $LN102@parser_tas
  0105e	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv728[ebp], 8
  01068	eb 27		 jmp	 SHORT $LN103@parser_tas
$LN102@parser_tas:
  0106a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  01070	81 c2 bd 00 00
	00		 add	 edx, 189		; 000000bdH
  01076	52		 push	 edx
  01077	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0107c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  01081	50		 push	 eax
  01082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01087	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv728[ebp], 0
$LN103@parser_tas:
  01091	8d 4d ec	 lea	 ecx, DWORD PTR _new_pos$[ebp]
  01094	51		 push	 ecx
  01095	6a 08		 push	 8
  01097	8b 55 d0	 mov	 edx, DWORD PTR _next_wp$[ebp]
  0109a	52		 push	 edx
  0109b	6b 85 68 ff ff
	ff 60		 imul	 eax, DWORD PTR tv720[ebp], 96
  010a2	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv728[ebp]
  010a8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  010af	ff d2		 call	 edx
$LN13@parser_tas:

; 1022 : 				}
; 1023 : 			}
; 1024 : 		}
; 1025 : 
; 1026 : 		last_wp = this_wp;

  010b1	8b 45 cc	 mov	 eax, DWORD PTR _this_wp$[ebp]
  010b4	89 45 d4	 mov	 DWORD PTR _last_wp$[ebp], eax

; 1027 : 
; 1028 : 		this_wp = next_wp;

  010b7	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  010ba	89 45 cc	 mov	 DWORD PTR _this_wp$[ebp], eax

; 1029 : 
; 1030 : 		next_wp = get_local_entity_child_succ (next_wp, LIST_TYPE_WAYPOINT);

  010bd	83 7d d0 00	 cmp	 DWORD PTR _next_wp$[ebp], 0
  010c1	74 0d		 je	 SHORT $LN104@parser_tas
  010c3	8b 45 d0	 mov	 eax, DWORD PTR _next_wp$[ebp]
  010c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  010c8	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv740[ebp], ecx
  010ce	eb 27		 jmp	 SHORT $LN105@parser_tas
$LN104@parser_tas:
  010d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  010d6	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  010dc	52		 push	 edx
  010dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  010e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010e7	50		 push	 eax
  010e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010ed	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv740[ebp], 0
$LN105@parser_tas:
  010f7	b9 01 00 00 00	 mov	 ecx, 1
  010fc	85 c9		 test	 ecx, ecx
  010fe	74 0c		 je	 SHORT $LN106@parser_tas
  01100	c7 85 64 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv748[ebp], 44 ; 0000002cH
  0110a	eb 27		 jmp	 SHORT $LN107@parser_tas
$LN106@parser_tas:
  0110c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_task_waypoint_route@@YGXPAUENTITY@@0@Z@4JA
  01112	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  01118	52		 push	 edx
  01119	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0111e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01123	50		 push	 eax
  01124	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01129	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv748[ebp], 0
$LN107@parser_tas:
  01133	6a 2c		 push	 44			; 0000002cH
  01135	8b 4d d0	 mov	 ecx, DWORD PTR _next_wp$[ebp]
  01138	51		 push	 ecx
  01139	69 95 68 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv740[ebp], 180
  01143	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv748[ebp]
  01149	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01150	ff d1		 call	 ecx
  01152	89 45 d0	 mov	 DWORD PTR _next_wp$[ebp], eax

; 1031 : 	}

  01155	e9 a9 f0 ff ff	 jmp	 $LN7@parser_tas
$LN3@parser_tas:
$LN1@parser_tas:

; 1032 : }

  0115a	5f		 pop	 edi
  0115b	5e		 pop	 esi
  0115c	5b		 pop	 ebx
  0115d	8b e5		 mov	 esp, ebp
  0115f	5d		 pop	 ebp
  01160	c2 08 00	 ret	 8
?parser_task_waypoint_route@@YGXPAUENTITY@@0@Z ENDP	; parser_task_waypoint_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z
_TEXT	SEGMENT
tv215 = -132						; size = 8
tv246 = -124						; size = 8
tv169 = -124						; size = 4
tv248 = -120						; size = 4
tv244 = -120						; size = 4
tv179 = -120						; size = 4
tv161 = -120						; size = 4
$T1 = -116						; size = 4
$T2 = -112						; size = 4
$T3 = -108						; size = 4
$T4 = -104						; size = 4
$T5 = -100						; size = 4
$T6 = -96						; size = 4
_sector_side$ = -28					; size = 4
_sector_en$ = -24					; size = 4
_rating$ = -20						; size = 4
_range_bias$ = -16					; size = 4
_elevation$ = -12					; size = 4
_side_bias$ = -8					; size = 4
_average_terrain_elevation$ = -4			; size = 4
_sample_number$ = 8					; size = 4
_test_point$ = 12					; size = 4
_side$ = 16						; size = 4
_movement_type$ = 20					; size = 4
?get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z PROC ; get_route_point_rating, COMDAT

; 1500 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1501 : 
; 1502 : 	float
; 1503 : 		average_terrain_elevation,
; 1504 : 		side_bias,
; 1505 : 		elevation,
; 1506 : 		range_bias,
; 1507 : 		rating;
; 1508 : 
; 1509 : 	entity
; 1510 : 		*sector_en;
; 1511 : 
; 1512 : 	entity_sides
; 1513 : 		sector_side;
; 1514 : 
; 1515 : 	// minimum height of 1.0m to allow biasing
; 1516 : 
; 1517 : 	average_terrain_elevation = best_point_terrain_elevations [(int) sample_number] +

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00014	f3 0f 11 45 a0	 movss	 DWORD PTR $T6[ebp], xmm0
  00019	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _sample_number$[ebp]
  0001e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00026	f3 0f 11 45 9c	 movss	 DWORD PTR $T5[ebp], xmm0
  0002b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _sample_number$[ebp]
  00030	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00038	f3 0f 11 45 98	 movss	 DWORD PTR $T4[ebp], xmm0
  0003d	f3 0f 2c 75 08	 cvttss2si esi, DWORD PTR _sample_number$[ebp]
  00042	8d 45 a0	 lea	 eax, DWORD PTR $T6[ebp]
  00045	50		 push	 eax
  00046	8d 4d 9c	 lea	 ecx, DWORD PTR $T5[ebp]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0004f	f3 0f 2c 10	 cvttss2si edx, DWORD PTR [eax]
  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?best_point_terrain_elevations@@3PAMA ; best_point_terrain_elevations
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?best_point_terrain_elevations@@3PAMA ; best_point_terrain_elevations
  0005e	f3 0f 10 04 b0	 movss	 xmm0, DWORD PTR [eax+esi*4]
  00063	f3 0f 58 04 91	 addss	 xmm0, DWORD PTR [ecx+edx*4]
  00068	6b 55 14 1c	 imul	 edx, DWORD PTR _movement_type$[ebp], 28
  0006c	81 c2 14 00 00
	00		 add	 edx, OFFSET ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A+20
  00072	52		 push	 edx
  00073	8d 45 98	 lea	 eax, DWORD PTR $T4[ebp]
  00076	50		 push	 eax
  00077	f3 0f 11 45 88	 movss	 DWORD PTR tv244[ebp], xmm0
  0007c	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00081	f3 0f 2c 08	 cvttss2si ecx, DWORD PTR [eax]
  00085	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?best_point_terrain_elevations@@3PAMA ; best_point_terrain_elevations
  0008b	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv244[ebp]
  00090	f3 0f 58 04 8a	 addss	 xmm0, DWORD PTR [edx+ecx*4]
  00095	f3 0f 11 45 fc	 movss	 DWORD PTR _average_terrain_elevation$[ebp], xmm0

; 1518 : 										best_point_terrain_elevations [(int) (max ((sample_number - 1.0f), 1.0f))] +
; 1519 : 										best_point_terrain_elevations [(int) (min ((sample_number + 1.0f), route_biasing_database [movement_type].num_route_samples))];
; 1520 : 
; 1521 : 	average_terrain_elevation /= 3.0;

  0009a	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _average_terrain_elevation$[ebp]
  0009f	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4008000000000000
  000a7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ab	f3 0f 11 45 fc	 movss	 DWORD PTR _average_terrain_elevation$[ebp], xmm0

; 1522 : 
; 1523 : 	average_terrain_elevation = max (average_terrain_elevation, 0.0f);

  000b0	0f 57 c0	 xorps	 xmm0, xmm0
  000b3	f3 0f 11 45 94	 movss	 DWORD PTR $T3[ebp], xmm0
  000b8	8d 45 94	 lea	 eax, DWORD PTR $T3[ebp]
  000bb	50		 push	 eax
  000bc	8d 4d fc	 lea	 ecx, DWORD PTR _average_terrain_elevation$[ebp]
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000c5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000c9	f3 0f 11 45 fc	 movss	 DWORD PTR _average_terrain_elevation$[ebp], xmm0

; 1524 : 
; 1525 : 	elevation = route_biasing_database [movement_type].elevation_bias * average_terrain_elevation;

  000ce	6b 45 14 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  000d2	f3 0f 10 80 00
	00 00 00	 movss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax]
  000da	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _average_terrain_elevation$[ebp]
  000df	f3 0f 11 45 f4	 movss	 DWORD PTR _elevation$[ebp], xmm0

; 1526 : 
; 1527 : 	range_bias = route_biasing_database [movement_type].range_bias *

  000e4	6b 45 14 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  000e8	f3 0f 5a 80 04
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+4]
  000f0	f3 0f 5a 4d 08	 cvtss2sd xmm1, DWORD PTR _sample_number$[ebp]
  000f5	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  000fd	6b 4d 14 1c	 imul	 ecx, DWORD PTR _movement_type$[ebp], 28
  00101	f3 0f 5a 91 14
	00 00 00	 cvtss2sd xmm2, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[ecx+20]
  00109	f2 0f 5c ca	 subsd	 xmm1, xmm2
  0010d	83 ec 08	 sub	 esp, 8
  00110	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  00115	f2 0f 11 45 84	 movsd	 QWORD PTR tv246[ebp], xmm0
  0011a	e8 00 00 00 00	 call	 _fabs
  0011f	83 c4 08	 add	 esp, 8
  00122	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv215[ebp]
  00128	f2 0f 10 45 84	 movsd	 xmm0, QWORD PTR tv246[ebp]
  0012d	f2 0f 59 85 7c
	ff ff ff	 mulsd	 xmm0, QWORD PTR tv215[ebp]
  00135	6b 55 14 1c	 imul	 edx, DWORD PTR _movement_type$[ebp], 28
  00139	f3 0f 5a 8a 14
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[edx+20]
  00141	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00149	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0014d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00151	f3 0f 11 45 f0	 movss	 DWORD PTR _range_bias$[ebp], xmm0

; 1528 : 						fabs ((2.0 * sample_number) - route_biasing_database [movement_type].num_route_samples) /
; 1529 : 						(route_biasing_database [movement_type].num_route_samples * 2.0);
; 1530 : 
; 1531 : 	sector_en = get_local_sector_entity (test_point);

  00156	8b 45 0c	 mov	 eax, DWORD PTR _test_point$[ebp]
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  0015f	89 45 e8	 mov	 DWORD PTR _sector_en$[ebp], eax

; 1532 : 
; 1533 : 	sector_side = (entity_sides) get_local_entity_int_value (sector_en, INT_TYPE_SECTOR_SIDE);

  00162	83 7d e8 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  00166	74 0a		 je	 SHORT $LN3@get_route_
  00168	8b 45 e8	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0016b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016d	89 4d 88	 mov	 DWORD PTR tv161[ebp], ecx
  00170	eb 21		 jmp	 SHORT $LN4@get_route_
$LN3@get_route_:
  00172	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z@4JA
  00178	83 c2 21	 add	 edx, 33			; 00000021H
  0017b	52		 push	 edx
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00181	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018c	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN4@get_route_:
  00193	b9 01 00 00 00	 mov	 ecx, 1
  00198	85 c9		 test	 ecx, ecx
  0019a	74 09		 je	 SHORT $LN5@get_route_
  0019c	c7 45 84 b7 00
	00 00		 mov	 DWORD PTR tv169[ebp], 183 ; 000000b7H
  001a3	eb 21		 jmp	 SHORT $LN6@get_route_
$LN5@get_route_:
  001a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z@4JA
  001ab	83 c2 21	 add	 edx, 33			; 00000021H
  001ae	52		 push	 edx
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001b9	50		 push	 eax
  001ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001bf	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN6@get_route_:
  001c6	68 b7 00 00 00	 push	 183			; 000000b7H
  001cb	8b 4d e8	 mov	 ecx, DWORD PTR _sector_en$[ebp]
  001ce	51		 push	 ecx
  001cf	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv161[ebp], 1116
  001d6	8b 45 84	 mov	 eax, DWORD PTR tv169[ebp]
  001d9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001e0	ff d1		 call	 ecx
  001e2	89 45 e4	 mov	 DWORD PTR _sector_side$[ebp], eax

; 1534 : 
; 1535 : 	side_bias = route_biasing_database [movement_type].side_bias * (sector_side != side);

  001e5	8b 45 e4	 mov	 eax, DWORD PTR _sector_side$[ebp]
  001e8	3b 45 10	 cmp	 eax, DWORD PTR _side$[ebp]
  001eb	74 09		 je	 SHORT $LN7@get_route_
  001ed	c7 45 88 01 00
	00 00		 mov	 DWORD PTR tv179[ebp], 1
  001f4	eb 07		 jmp	 SHORT $LN8@get_route_
$LN7@get_route_:
  001f6	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN8@get_route_:
  001fd	6b 4d 14 1c	 imul	 ecx, DWORD PTR _movement_type$[ebp], 28
  00201	f3 0f 2a 45 88	 cvtsi2ss xmm0, DWORD PTR tv179[ebp]
  00206	f3 0f 59 81 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[ecx+8]
  0020e	f3 0f 11 45 f8	 movss	 DWORD PTR _side_bias$[ebp], xmm0

; 1536 : 
; 1537 : 	rating = elevation +

  00213	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0021b	f3 0f 11 45 90	 movss	 DWORD PTR $T2[ebp], xmm0
  00220	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00228	f3 0f 11 45 8c	 movss	 DWORD PTR $T1[ebp], xmm0
  0022d	8d 45 90	 lea	 eax, DWORD PTR $T2[ebp]
  00230	50		 push	 eax
  00231	8d 4d fc	 lea	 ecx, DWORD PTR _average_terrain_elevation$[ebp]
  00234	51		 push	 ecx
  00235	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0023a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _range_bias$[ebp]
  0023f	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  00243	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _elevation$[ebp]
  00248	8d 55 8c	 lea	 edx, DWORD PTR $T1[ebp]
  0024b	52		 push	 edx
  0024c	8d 45 fc	 lea	 eax, DWORD PTR _average_terrain_elevation$[ebp]
  0024f	50		 push	 eax
  00250	f3 0f 11 45 88	 movss	 DWORD PTR tv248[ebp], xmm0
  00255	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0025a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _side_bias$[ebp]
  0025f	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  00263	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR tv248[ebp]
  00268	f3 0f 58 c8	 addss	 xmm1, xmm0
  0026c	f3 0f 11 4d ec	 movss	 DWORD PTR _rating$[ebp], xmm1

; 1538 : 				(range_bias * max (average_terrain_elevation, 1.0f)) +
; 1539 : 				(side_bias * max (average_terrain_elevation, 1.0f));
; 1540 : 
; 1541 : 	#if DEBUG_MODULE
; 1542 : 	if (debug_flag)
; 1543 : 	{
; 1544 : 
; 1545 : 		debug_log ("ROUTEGEN: point rating %f, elevation %f, range %f, side %f", rating, elevation, range_bias, side_bias);
; 1546 : 	}
; 1547 : 	#endif
; 1548 : 
; 1549 : 	return rating;

  00271	d9 45 ec	 fld	 DWORD PTR _rating$[ebp]

; 1550 : }

  00274	5f		 pop	 edi
  00275	5e		 pop	 esi
  00276	5b		 pop	 ebx
  00277	8b e5		 mov	 esp, ebp
  00279	5d		 pop	 ebp
  0027a	c2 10 00	 ret	 16			; 00000010H
?get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ENDP ; get_route_point_rating
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?second_past_route@@YGXPAUROUTE_NODE@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z
_TEXT	SEGMENT
_next_node$ = -24					; size = 4
_node$ = -20						; size = 4
_prev_node$ = -16					; size = 4
_best_point$ = -12					; size = 12
_route$ = 8						; size = 4
_side$ = 12						; size = 4
_movement_type$ = 16					; size = 4
?second_past_route@@YGXPAUROUTE_NODE@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z PROC ; second_past_route, COMDAT

; 1462 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1463 : 
; 1464 : 	vec3d
; 1465 : 		best_point;
; 1466 : 
; 1467 : 	route_node
; 1468 : 		*prev_node,
; 1469 : 		*node,
; 1470 : 		*next_node;
; 1471 : 
; 1472 : 	prev_node = route;

  00009	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  0000c	89 45 f0	 mov	 DWORD PTR _prev_node$[ebp], eax

; 1473 : 
; 1474 : 	node = prev_node->next;

  0000f	8b 45 f0	 mov	 eax, DWORD PTR _prev_node$[ebp]
  00012	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00015	89 4d ec	 mov	 DWORD PTR _node$[ebp], ecx

; 1475 : 
; 1476 : 	next_node = node->next;

  00018	8b 45 ec	 mov	 eax, DWORD PTR _node$[ebp]
  0001b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001e	89 4d e8	 mov	 DWORD PTR _next_node$[ebp], ecx
$LN2@second_pas:

; 1477 : 
; 1478 : 	while (next_node)

  00021	83 7d e8 00	 cmp	 DWORD PTR _next_node$[ebp], 0
  00025	74 7e		 je	 SHORT $LN3@second_pas

; 1479 : 	{
; 1480 : 
; 1481 : 		get_best_point (&prev_node->position, &next_node->position, &best_point, side, movement_type);

  00027	8b 45 10	 mov	 eax, DWORD PTR _movement_type$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  0002e	51		 push	 ecx
  0002f	8d 55 f4	 lea	 edx, DWORD PTR _best_point$[ebp]
  00032	52		 push	 edx
  00033	8b 45 e8	 mov	 eax, DWORD PTR _next_node$[ebp]
  00036	83 c0 0c	 add	 eax, 12			; 0000000cH
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _prev_node$[ebp]
  0003d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?get_best_point@@YGHPAUVEC3D@@00W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; get_best_point

; 1482 : 
; 1483 : 		node->position.x = ceil (best_point.x);

  00046	51		 push	 ecx
  00047	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _best_point$[ebp]
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00056	8b 45 ec	 mov	 eax, DWORD PTR _node$[ebp]
  00059	d9 58 0c	 fstp	 DWORD PTR [eax+12]

; 1484 : 		node->position.y = ceil (best_point.y);

  0005c	51		 push	 ecx
  0005d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _best_point$[ebp+4]
  00062	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00067	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0006c	8b 45 ec	 mov	 eax, DWORD PTR _node$[ebp]
  0006f	d9 58 10	 fstp	 DWORD PTR [eax+16]

; 1485 : 		node->position.z = ceil (best_point.z);

  00072	51		 push	 ecx
  00073	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _best_point$[ebp+8]
  00078	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007d	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00082	8b 45 ec	 mov	 eax, DWORD PTR _node$[ebp]
  00085	d9 58 14	 fstp	 DWORD PTR [eax+20]

; 1486 : 
; 1487 : 		prev_node = node;

  00088	8b 45 ec	 mov	 eax, DWORD PTR _node$[ebp]
  0008b	89 45 f0	 mov	 DWORD PTR _prev_node$[ebp], eax

; 1488 : 
; 1489 : 		node = prev_node->next;

  0008e	8b 45 f0	 mov	 eax, DWORD PTR _prev_node$[ebp]
  00091	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00094	89 4d ec	 mov	 DWORD PTR _node$[ebp], ecx

; 1490 : 
; 1491 : 		next_node = node->next;

  00097	8b 45 ec	 mov	 eax, DWORD PTR _node$[ebp]
  0009a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0009d	89 4d e8	 mov	 DWORD PTR _next_node$[ebp], ecx

; 1492 : 	}

  000a0	e9 7c ff ff ff	 jmp	 $LN2@second_pas
$LN3@second_pas:

; 1493 : }

  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 0c 00	 ret	 12			; 0000000cH
?second_past_route@@YGXPAUROUTE_NODE@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ENDP ; second_past_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?get_best_point@@YGHPAUVEC3D@@00W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z
_TEXT	SEGMENT
tv292 = -184						; size = 4
tv282 = -184						; size = 4
tv253 = -184						; size = 4
tv243 = -184						; size = 4
tv546 = -180						; size = 4
tv525 = -180						; size = 4
tv480 = -180						; size = 4
tv459 = -180						; size = 4
tv293 = -176						; size = 4
tv283 = -176						; size = 4
tv254 = -176						; size = 4
tv244 = -176						; size = 4
tv212 = -176						; size = 4
tv208 = -176						; size = 4
tv538 = -172						; size = 4
tv517 = -172						; size = 4
tv472 = -172						; size = 4
tv451 = -172						; size = 4
tv438 = -172						; size = 4
tv213 = -172						; size = 4
tv209 = -172						; size = 4
_loop$1 = -104						; size = 4
_test_direction_z_inc$ = -100				; size = 4
_test_direction_x_inc$ = -96				; size = 4
_best_point_rating$ = -92				; size = 4
_point_rating$ = -88					; size = 4
_best_loop$ = -84					; size = 4
_range$ = -80						; size = 4
_loop$ = -76						; size = 4
_route_direction$ = -72					; size = 12
_test_direction$ = -60					; size = 12
_start_point$ = -48					; size = 12
_test_point$ = -36					; size = 12
_end_point$ = -24					; size = 12
_mid_point$ = -12					; size = 12
_start$ = 8						; size = 4
_end$ = 12						; size = 4
_best_point$ = 16					; size = 4
_side$ = 20						; size = 4
_movement_type$ = 24					; size = 4
?get_best_point@@YGHPAUVEC3D@@00W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z PROC ; get_best_point, COMDAT

; 1314 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1315 : 
; 1316 : 	vec3d
; 1317 : 		mid_point,
; 1318 : 		end_point,
; 1319 : 		test_point,
; 1320 : 		start_point,
; 1321 : 		test_direction,
; 1322 : 		route_direction;
; 1323 : 
; 1324 : 	float
; 1325 : 		loop,
; 1326 : 		range,
; 1327 : 		best_loop,
; 1328 : 		point_rating,
; 1329 : 		best_point_rating,
; 1330 : 		test_direction_x_inc,
; 1331 : 		test_direction_z_inc;
; 1332 : 
; 1333 : 	// Quantize points
; 1334 : 
; 1335 : 	start_point.x = ceil (start->x);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _start$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00014	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00019	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0001e	d9 5d d0	 fstp	 DWORD PTR _start_point$[ebp]

; 1336 : 	start_point.y = ceil (start->y);

  00021	8b 45 08	 mov	 eax, DWORD PTR _start$[ebp]
  00024	51		 push	 ecx
  00025	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0002a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002f	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00034	d9 5d d4	 fstp	 DWORD PTR _start_point$[ebp+4]

; 1337 : 	start_point.z = ceil (start->z);

  00037	8b 45 08	 mov	 eax, DWORD PTR _start$[ebp]
  0003a	51		 push	 ecx
  0003b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0004a	d9 5d d8	 fstp	 DWORD PTR _start_point$[ebp+8]

; 1338 : 
; 1339 : 	end_point.x = ceil (end->x);

  0004d	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  00050	51		 push	 ecx
  00051	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00055	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005a	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0005f	d9 5d e8	 fstp	 DWORD PTR _end_point$[ebp]

; 1340 : 	end_point.y = ceil (end->y);

  00062	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  00065	51		 push	 ecx
  00066	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0006b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00070	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00075	d9 5d ec	 fstp	 DWORD PTR _end_point$[ebp+4]

; 1341 : 	end_point.z = ceil (end->z);

  00078	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  0007b	51		 push	 ecx
  0007c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0008b	d9 5d f0	 fstp	 DWORD PTR _end_point$[ebp+8]

; 1342 : 
; 1343 : 	range = get_sqr_2d_range (&start_point, &end_point);

  0008e	8d 45 e8	 lea	 eax, DWORD PTR _end_point$[ebp]
  00091	50		 push	 eax
  00092	8d 4d d0	 lea	 ecx, DWORD PTR _start_point$[ebp]
  00095	51		 push	 ecx
  00096	e8 00 00 00 00	 call	 ?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_2d_range
  0009b	d9 5d b0	 fstp	 DWORD PTR _range$[ebp]

; 1344 : 
; 1345 : 	if (range > (route_biasing_database [movement_type].min_route_range * route_biasing_database [movement_type].min_route_range))

  0009e	6b 45 18 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  000a2	6b 4d 18 1c	 imul	 ecx, DWORD PTR _movement_type$[ebp], 28
  000a6	f3 0f 10 80 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+12]
  000ae	f3 0f 59 81 0c
	00 00 00	 mulss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[ecx+12]
  000b6	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _range$[ebp]
  000bb	0f 2f c8	 comiss	 xmm1, xmm0
  000be	0f 86 87 06 00
	00		 jbe	 $LN8@get_best_p

; 1346 : 	{
; 1347 : 	
; 1348 : 		route_direction.x = end_point.x - start_point.x;

  000c4	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _end_point$[ebp]
  000c9	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _start_point$[ebp]
  000ce	f3 0f 11 45 b8	 movss	 DWORD PTR _route_direction$[ebp], xmm0

; 1349 : 		route_direction.y = 0.0;

  000d3	0f 57 c0	 xorps	 xmm0, xmm0
  000d6	f3 0f 11 45 bc	 movss	 DWORD PTR _route_direction$[ebp+4], xmm0

; 1350 : 		route_direction.z = end_point.z - start_point.z;

  000db	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _end_point$[ebp+8]
  000e0	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _start_point$[ebp+8]
  000e5	f3 0f 11 45 c0	 movss	 DWORD PTR _route_direction$[ebp+8], xmm0

; 1351 : 	
; 1352 : 		test_direction.x = route_direction.z;

  000ea	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _route_direction$[ebp+8]
  000ef	f3 0f 11 45 c4	 movss	 DWORD PTR _test_direction$[ebp], xmm0

; 1353 : 		test_direction.y = 0.0;

  000f4	0f 57 c0	 xorps	 xmm0, xmm0
  000f7	f3 0f 11 45 c8	 movss	 DWORD PTR _test_direction$[ebp+4], xmm0

; 1354 : 		test_direction.z = -route_direction.x;

  000fc	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _route_direction$[ebp]
  00101	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00108	f3 0f 11 45 cc	 movss	 DWORD PTR _test_direction$[ebp+8], xmm0

; 1355 : 
; 1356 : 		// test increments
; 1357 : 		test_direction_x_inc = test_direction.x / (route_biasing_database [movement_type].num_route_samples * route_biasing_database [movement_type].route_deviation_size);

  0010d	6b 45 18 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  00111	6b 4d 18 1c	 imul	 ecx, DWORD PTR _movement_type$[ebp], 28
  00115	f3 0f 10 80 14
	00 00 00	 movss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+20]
  0011d	f3 0f 59 81 10
	00 00 00	 mulss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[ecx+16]
  00125	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _test_direction$[ebp]
  0012a	f3 0f 5e c8	 divss	 xmm1, xmm0
  0012e	f3 0f 11 4d a0	 movss	 DWORD PTR _test_direction_x_inc$[ebp], xmm1

; 1358 : 		test_direction_z_inc = test_direction.z / (route_biasing_database [movement_type].num_route_samples * route_biasing_database [movement_type].route_deviation_size);

  00133	6b 45 18 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  00137	6b 4d 18 1c	 imul	 ecx, DWORD PTR _movement_type$[ebp], 28
  0013b	f3 0f 10 80 14
	00 00 00	 movss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+20]
  00143	f3 0f 59 81 10
	00 00 00	 mulss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[ecx+16]
  0014b	f3 0f 10 4d cc	 movss	 xmm1, DWORD PTR _test_direction$[ebp+8]
  00150	f3 0f 5e c8	 divss	 xmm1, xmm0
  00154	f3 0f 11 4d 9c	 movss	 DWORD PTR _test_direction_z_inc$[ebp], xmm1

; 1359 : 	
; 1360 : 		// route mid point
; 1361 : 		mid_point.x = (start_point.x + (route_direction.x * 0.5));

  00159	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _start_point$[ebp]
  0015e	f3 0f 5a 4d b8	 cvtss2sd xmm1, DWORD PTR _route_direction$[ebp]
  00163	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0016b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0016f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00173	f3 0f 11 45 f4	 movss	 DWORD PTR _mid_point$[ebp], xmm0

; 1362 : 		mid_point.y = 0.0;

  00178	0f 57 c0	 xorps	 xmm0, xmm0
  0017b	f3 0f 11 45 f8	 movss	 DWORD PTR _mid_point$[ebp+4], xmm0

; 1363 : 		mid_point.z = (start_point.z + (route_direction.z * 0.5));

  00180	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _start_point$[ebp+8]
  00185	f3 0f 5a 4d c0	 cvtss2sd xmm1, DWORD PTR _route_direction$[ebp+8]
  0018a	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00192	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	f3 0f 11 45 fc	 movss	 DWORD PTR _mid_point$[ebp+8], xmm0

; 1364 : 
; 1365 : 		// test point start
; 1366 : 		start_point.x = mid_point.x - test_direction_x_inc * (route_biasing_database [movement_type].num_route_samples * 0.5);

  0019f	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _mid_point$[ebp]
  001a4	f3 0f 5a 4d a0	 cvtss2sd xmm1, DWORD PTR _test_direction_x_inc$[ebp]
  001a9	6b 45 18 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  001ad	f3 0f 5a 90 14
	00 00 00	 cvtss2sd xmm2, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+20]
  001b5	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fe0000000000000
  001bd	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  001c1	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001c5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c9	f3 0f 11 45 d0	 movss	 DWORD PTR _start_point$[ebp], xmm0

; 1367 : 		start_point.z = mid_point.z - test_direction_z_inc * (route_biasing_database [movement_type].num_route_samples * 0.5);

  001ce	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _mid_point$[ebp+8]
  001d3	f3 0f 5a 4d 9c	 cvtss2sd xmm1, DWORD PTR _test_direction_z_inc$[ebp]
  001d8	6b 45 18 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  001dc	f3 0f 5a 90 14
	00 00 00	 cvtss2sd xmm2, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+20]
  001e4	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fe0000000000000
  001ec	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  001f0	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001f8	f3 0f 11 45 d8	 movss	 DWORD PTR _start_point$[ebp+8], xmm0

; 1368 : 	
; 1369 : 		start_point.x = bound (start_point.x, MIN_MAP_X, MAX_MAP_X);

  001fd	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00205	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _start_point$[ebp]
  00209	76 12		 jbe	 SHORT $LN13@get_best_p
  0020b	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00213	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR tv209[ebp], xmm0
  0021b	eb 3d		 jmp	 SHORT $LN14@get_best_p
$LN13@get_best_p:
  0021d	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _start_point$[ebp]
  00222	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00229	76 12		 jbe	 SHORT $LN11@get_best_p
  0022b	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00233	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv208[ebp], xmm0
  0023b	eb 0d		 jmp	 SHORT $LN12@get_best_p
$LN11@get_best_p:
  0023d	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _start_point$[ebp]
  00242	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv208[ebp], xmm0
$LN12@get_best_p:
  0024a	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv208[ebp]
  00252	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR tv209[ebp], xmm0
$LN14@get_best_p:
  0025a	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR tv209[ebp]
  00262	f3 0f 11 45 d0	 movss	 DWORD PTR _start_point$[ebp], xmm0

; 1370 : 		start_point.y = 0.0;

  00267	0f 57 c0	 xorps	 xmm0, xmm0
  0026a	f3 0f 11 45 d4	 movss	 DWORD PTR _start_point$[ebp+4], xmm0

; 1371 : 		start_point.z = bound (start_point.z, MIN_MAP_Z, MAX_MAP_Z);

  0026f	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00277	0f 2f 45 d8	 comiss	 xmm0, DWORD PTR _start_point$[ebp+8]
  0027b	76 12		 jbe	 SHORT $LN17@get_best_p
  0027d	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00285	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR tv213[ebp], xmm0
  0028d	eb 3d		 jmp	 SHORT $LN18@get_best_p
$LN17@get_best_p:
  0028f	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _start_point$[ebp+8]
  00294	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0029b	76 12		 jbe	 SHORT $LN15@get_best_p
  0029d	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  002a5	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv212[ebp], xmm0
  002ad	eb 0d		 jmp	 SHORT $LN16@get_best_p
$LN15@get_best_p:
  002af	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _start_point$[ebp+8]
  002b4	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv212[ebp], xmm0
$LN16@get_best_p:
  002bc	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv212[ebp]
  002c4	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR tv213[ebp], xmm0
$LN18@get_best_p:
  002cc	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR tv213[ebp]
  002d4	f3 0f 11 45 d8	 movss	 DWORD PTR _start_point$[ebp+8], xmm0

; 1372 : 	
; 1373 : 		// get terrain elevations across sample area
; 1374 : 		{
; 1375 : 
; 1376 : 			int
; 1377 : 				loop;
; 1378 : 
; 1379 : 			// test point start
; 1380 : 			test_point.x = ceil (start_point.x);

  002d9	51		 push	 ecx
  002da	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _start_point$[ebp]
  002df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e4	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  002e9	d9 5d dc	 fstp	 DWORD PTR _test_point$[ebp]

; 1381 : 			test_point.z = ceil (start_point.z);

  002ec	51		 push	 ecx
  002ed	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _start_point$[ebp+8]
  002f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f7	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  002fc	d9 5d e4	 fstp	 DWORD PTR _test_point$[ebp+8]

; 1382 : 		
; 1383 : 			for (loop = 1; loop <= route_biasing_database [movement_type].num_route_samples; loop ++)

  002ff	c7 45 98 01 00
	00 00		 mov	 DWORD PTR _loop$1[ebp], 1
  00306	eb 09		 jmp	 SHORT $LN4@get_best_p
$LN2@get_best_p:
  00308	8b 45 98	 mov	 eax, DWORD PTR _loop$1[ebp]
  0030b	83 c0 01	 add	 eax, 1
  0030e	89 45 98	 mov	 DWORD PTR _loop$1[ebp], eax
$LN4@get_best_p:
  00311	f3 0f 2a 45 98	 cvtsi2ss xmm0, DWORD PTR _loop$1[ebp]
  00316	6b 45 18 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  0031a	f3 0f 10 88 14
	00 00 00	 movss	 xmm1, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+20]
  00322	0f 2f c8	 comiss	 xmm1, xmm0
  00325	0f 82 af 01 00
	00		 jb	 $LN3@get_best_p

; 1384 : 			{
; 1385 : 	
; 1386 : 				best_point_terrain_elevations [loop] = ceil (get_3d_terrain_elevation (test_point.x, test_point.z));

  0032b	6a 00		 push	 0
  0032d	51		 push	 ecx
  0032e	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  00333	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00338	51		 push	 ecx
  00339	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  0033e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00343	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00348	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv438[ebp]
  0034e	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR tv438[ebp]
  00356	51		 push	 ecx
  00357	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035c	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00361	8b 45 98	 mov	 eax, DWORD PTR _loop$1[ebp]
  00364	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?best_point_terrain_elevations@@3PAMA ; best_point_terrain_elevations
  0036a	d9 1c 81	 fstp	 DWORD PTR [ecx+eax*4]

; 1387 : 		
; 1388 : 				// next test point
; 1389 : 				test_point.x += test_direction_x_inc;

  0036d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  00372	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _test_direction_x_inc$[ebp]
  00377	f3 0f 11 45 dc	 movss	 DWORD PTR _test_point$[ebp], xmm0

; 1390 : 				test_point.z += test_direction_z_inc;

  0037c	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  00381	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR _test_direction_z_inc$[ebp]
  00386	f3 0f 11 45 e4	 movss	 DWORD PTR _test_point$[ebp+8], xmm0

; 1391 : 		
; 1392 : 				test_point.x = bound (ceil (test_point.x), MIN_MAP_X, MAX_MAP_X);

  0038b	51		 push	 ecx
  0038c	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  00391	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00396	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0039b	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv451[ebp]
  003a1	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  003a9	0f 2f 85 54 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv451[ebp]
  003b0	76 12		 jbe	 SHORT $LN21@get_best_p
  003b2	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  003ba	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv244[ebp], xmm0
  003c2	eb 5f		 jmp	 SHORT $LN22@get_best_p
$LN21@get_best_p:
  003c4	51		 push	 ecx
  003c5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  003ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cf	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  003d4	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv459[ebp]
  003da	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv459[ebp]
  003e2	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  003e9	76 12		 jbe	 SHORT $LN19@get_best_p
  003eb	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  003f3	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv243[ebp], xmm0
  003fb	eb 16		 jmp	 SHORT $LN20@get_best_p
$LN19@get_best_p:
  003fd	51		 push	 ecx
  003fe	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  00403	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00408	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0040d	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv243[ebp]
$LN20@get_best_p:
  00413	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv243[ebp]
  0041b	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv244[ebp], xmm0
$LN22@get_best_p:
  00423	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv244[ebp]
  0042b	f3 0f 11 45 dc	 movss	 DWORD PTR _test_point$[ebp], xmm0

; 1393 : 				test_point.z = bound (ceil (test_point.z), MIN_MAP_Z, MAX_MAP_Z);

  00430	51		 push	 ecx
  00431	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  00436	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043b	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00440	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv472[ebp]
  00446	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0044e	0f 2f 85 54 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv472[ebp]
  00455	76 12		 jbe	 SHORT $LN25@get_best_p
  00457	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0045f	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv254[ebp], xmm0
  00467	eb 5f		 jmp	 SHORT $LN26@get_best_p
$LN25@get_best_p:
  00469	51		 push	 ecx
  0046a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  0046f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00474	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00479	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv480[ebp]
  0047f	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv480[ebp]
  00487	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0048e	76 12		 jbe	 SHORT $LN23@get_best_p
  00490	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00498	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv253[ebp], xmm0
  004a0	eb 16		 jmp	 SHORT $LN24@get_best_p
$LN23@get_best_p:
  004a2	51		 push	 ecx
  004a3	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  004a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ad	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  004b2	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv253[ebp]
$LN24@get_best_p:
  004b8	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv253[ebp]
  004c0	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv254[ebp], xmm0
$LN26@get_best_p:
  004c8	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv254[ebp]
  004d0	f3 0f 11 45 e4	 movss	 DWORD PTR _test_point$[ebp+8], xmm0

; 1394 : 			}

  004d5	e9 2e fe ff ff	 jmp	 $LN2@get_best_p
$LN3@get_best_p:

; 1395 : 		}
; 1396 : 	
; 1397 :   		// test point start
; 1398 : 		test_point.x = ceil (start_point.x);

  004da	51		 push	 ecx
  004db	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _start_point$[ebp]
  004e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e5	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  004ea	d9 5d dc	 fstp	 DWORD PTR _test_point$[ebp]

; 1399 : 		test_point.y = 0.0;

  004ed	0f 57 c0	 xorps	 xmm0, xmm0
  004f0	f3 0f 11 45 e0	 movss	 DWORD PTR _test_point$[ebp+4], xmm0

; 1400 : 		test_point.z = ceil (start_point.z);

  004f5	51		 push	 ecx
  004f6	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _start_point$[ebp+8]
  004fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00500	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00505	d9 5d e4	 fstp	 DWORD PTR _test_point$[ebp+8]

; 1401 : 	
; 1402 : 		// best so far
; 1403 : 		best_point_rating = get_route_point_rating (1.0, &test_point, side, movement_type);

  00508	8b 45 18	 mov	 eax, DWORD PTR _movement_type$[ebp]
  0050b	50		 push	 eax
  0050c	8b 4d 14	 mov	 ecx, DWORD PTR _side$[ebp]
  0050f	51		 push	 ecx
  00510	8d 55 dc	 lea	 edx, DWORD PTR _test_point$[ebp]
  00513	52		 push	 edx
  00514	51		 push	 ecx
  00515	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0051d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00522	e8 00 00 00 00	 call	 ?get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; get_route_point_rating
  00527	d9 5d a4	 fstp	 DWORD PTR _best_point_rating$[ebp]

; 1404 : 		memcpy (best_point, &test_point, sizeof (vec3d));

  0052a	6a 0c		 push	 12			; 0000000cH
  0052c	8d 45 dc	 lea	 eax, DWORD PTR _test_point$[ebp]
  0052f	50		 push	 eax
  00530	8b 4d 10	 mov	 ecx, DWORD PTR _best_point$[ebp]
  00533	51		 push	 ecx
  00534	e8 00 00 00 00	 call	 _memcpy
  00539	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1405 : 		best_loop = 0.0;

  0053c	0f 57 c0	 xorps	 xmm0, xmm0
  0053f	f3 0f 11 45 ac	 movss	 DWORD PTR _best_loop$[ebp], xmm0

; 1406 : 	
; 1407 :   		// test points along perpendicular line
; 1408 : 		for (loop = 1.0; loop < route_biasing_database [movement_type].num_route_samples; loop ++)

  00544	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0054c	f3 0f 11 45 b4	 movss	 DWORD PTR _loop$[ebp], xmm0
  00551	eb 12		 jmp	 SHORT $LN7@get_best_p
$LN5@get_best_p:
  00553	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _loop$[ebp]
  00558	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00560	f3 0f 11 45 b4	 movss	 DWORD PTR _loop$[ebp], xmm0
$LN7@get_best_p:
  00565	6b 45 18 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  00569	f3 0f 10 80 14
	00 00 00	 movss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+20]
  00571	0f 2f 45 b4	 comiss	 xmm0, DWORD PTR _loop$[ebp]
  00575	0f 86 c9 01 00
	00		 jbe	 $LN6@get_best_p

; 1409 : 		{
; 1410 : 	
; 1411 :   			// next test point
; 1412 : 			test_point.x += test_direction_x_inc;

  0057b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  00580	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _test_direction_x_inc$[ebp]
  00585	f3 0f 11 45 dc	 movss	 DWORD PTR _test_point$[ebp], xmm0

; 1413 : 			test_point.z += test_direction_z_inc;

  0058a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  0058f	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR _test_direction_z_inc$[ebp]
  00594	f3 0f 11 45 e4	 movss	 DWORD PTR _test_point$[ebp+8], xmm0

; 1414 : 	
; 1415 : 			test_point.x = bound (ceil (test_point.x), MIN_MAP_X, MAX_MAP_X);

  00599	51		 push	 ecx
  0059a	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  0059f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a4	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  005a9	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv517[ebp]
  005af	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  005b7	0f 2f 85 54 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv517[ebp]
  005be	76 12		 jbe	 SHORT $LN29@get_best_p
  005c0	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  005c8	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv283[ebp], xmm0
  005d0	eb 5f		 jmp	 SHORT $LN30@get_best_p
$LN29@get_best_p:
  005d2	51		 push	 ecx
  005d3	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  005d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005dd	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  005e2	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv525[ebp]
  005e8	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv525[ebp]
  005f0	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  005f7	76 12		 jbe	 SHORT $LN27@get_best_p
  005f9	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00601	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv282[ebp], xmm0
  00609	eb 16		 jmp	 SHORT $LN28@get_best_p
$LN27@get_best_p:
  0060b	51		 push	 ecx
  0060c	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _test_point$[ebp]
  00611	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00616	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0061b	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv282[ebp]
$LN28@get_best_p:
  00621	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv282[ebp]
  00629	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv283[ebp], xmm0
$LN30@get_best_p:
  00631	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv283[ebp]
  00639	f3 0f 11 45 dc	 movss	 DWORD PTR _test_point$[ebp], xmm0

; 1416 : 			test_point.z = bound (ceil (test_point.z), MIN_MAP_Z, MAX_MAP_Z);

  0063e	51		 push	 ecx
  0063f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  00644	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00649	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0064e	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv538[ebp]
  00654	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0065c	0f 2f 85 54 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv538[ebp]
  00663	76 12		 jbe	 SHORT $LN33@get_best_p
  00665	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0066d	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv293[ebp], xmm0
  00675	eb 5f		 jmp	 SHORT $LN34@get_best_p
$LN33@get_best_p:
  00677	51		 push	 ecx
  00678	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  0067d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00682	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00687	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv546[ebp]
  0068d	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv546[ebp]
  00695	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0069c	76 12		 jbe	 SHORT $LN31@get_best_p
  0069e	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  006a6	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv292[ebp], xmm0
  006ae	eb 16		 jmp	 SHORT $LN32@get_best_p
$LN31@get_best_p:
  006b0	51		 push	 ecx
  006b1	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _test_point$[ebp+8]
  006b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006bb	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  006c0	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv292[ebp]
$LN32@get_best_p:
  006c6	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv292[ebp]
  006ce	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv293[ebp], xmm0
$LN34@get_best_p:
  006d6	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv293[ebp]
  006de	f3 0f 11 45 e4	 movss	 DWORD PTR _test_point$[ebp+8], xmm0

; 1417 : 	
; 1418 :   			// best so far
; 1419 : 			point_rating = get_route_point_rating (loop + 1.0, &test_point, side, movement_type);

  006e3	8b 45 18	 mov	 eax, DWORD PTR _movement_type$[ebp]
  006e6	50		 push	 eax
  006e7	8b 4d 14	 mov	 ecx, DWORD PTR _side$[ebp]
  006ea	51		 push	 ecx
  006eb	8d 55 dc	 lea	 edx, DWORD PTR _test_point$[ebp]
  006ee	52		 push	 edx
  006ef	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _loop$[ebp]
  006f4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  006fc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00700	51		 push	 ecx
  00701	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00706	e8 00 00 00 00	 call	 ?get_route_point_rating@@YGMMPAUVEC3D@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; get_route_point_rating
  0070b	d9 5d a8	 fstp	 DWORD PTR _point_rating$[ebp]

; 1420 : 
; 1421 : 			#if DEBUG_MODULE
; 1422 : 			if (debug_flag)
; 1423 : 			{
; 1424 : 
; 1425 : 				debug_log ("GENROUTE: test point %f = %f, %f, %f... rating %f (best point %f)", loop, test_point.x, test_point.y, test_point.z, point_rating, best_point_rating);
; 1426 : 			}
; 1427 : 			#endif
; 1428 : 	
; 1429 : 			if (point_rating < best_point_rating)

  0070e	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _best_point_rating$[ebp]
  00713	0f 2f 45 a8	 comiss	 xmm0, DWORD PTR _point_rating$[ebp]
  00717	76 26		 jbe	 SHORT $LN9@get_best_p

; 1430 : 			{
; 1431 : 	
; 1432 :   				best_loop = loop;

  00719	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _loop$[ebp]
  0071e	f3 0f 11 45 ac	 movss	 DWORD PTR _best_loop$[ebp], xmm0

; 1433 : 				best_point_rating = point_rating;

  00723	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _point_rating$[ebp]
  00728	f3 0f 11 45 a4	 movss	 DWORD PTR _best_point_rating$[ebp], xmm0

; 1434 : 				memcpy (best_point, &test_point, sizeof (vec3d));

  0072d	6a 0c		 push	 12			; 0000000cH
  0072f	8d 45 dc	 lea	 eax, DWORD PTR _test_point$[ebp]
  00732	50		 push	 eax
  00733	8b 4d 10	 mov	 ecx, DWORD PTR _best_point$[ebp]
  00736	51		 push	 ecx
  00737	e8 00 00 00 00	 call	 _memcpy
  0073c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@get_best_p:

; 1435 : 			}
; 1436 : 		}

  0073f	e9 0f fe ff ff	 jmp	 $LN5@get_best_p
$LN6@get_best_p:

; 1437 : 
; 1438 : 		#if DEBUG_MODULE
; 1439 : 		if (debug_flag)
; 1440 : 		{
; 1441 : 	
; 1442 : 			debug_log ("GENROUTE: generating node at [%0.2f, %0.2f, %0.2f] between [%0.2f, %0.2f, %0.2f] and [%0.2f, %0.2f, %0.2f], range %f",
; 1443 : 							best_point->x, best_point->y, best_point->z,
; 1444 : 							ceil (start->x), ceil (start->y), ceil (start->z),
; 1445 : 							ceil (end->x), ceil (end->y), ceil (end->z),
; 1446 : 							get_2d_range (start, end));
; 1447 : 	
; 1448 : 		}
; 1449 : 		#endif
; 1450 : 
; 1451 : 		return TRUE;

  00744	b8 01 00 00 00	 mov	 eax, 1
  00749	eb 02		 jmp	 SHORT $LN1@get_best_p
$LN8@get_best_p:

; 1452 : 	}
; 1453 : 
; 1454 : 	return FALSE;

  0074b	33 c0		 xor	 eax, eax
$LN1@get_best_p:

; 1455 : }

  0074d	5f		 pop	 edi
  0074e	5e		 pop	 esi
  0074f	5b		 pop	 ebx
  00750	8b e5		 mov	 esp, ebp
  00752	5d		 pop	 ebp
  00753	c2 14 00	 ret	 20			; 00000014H
?get_best_point@@YGHPAUVEC3D@@00W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ENDP ; get_best_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?generate_best_mid_point@@YGHPAUROUTE_NODE@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z
_TEXT	SEGMENT
_best_point$ = -16					; size = 12
_new_node$ = -4						; size = 4
_start_node$ = 8					; size = 4
_end_node$ = 12						; size = 4
_side$ = 16						; size = 4
_movement_type$ = 20					; size = 4
?generate_best_mid_point@@YGHPAUROUTE_NODE@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z PROC ; generate_best_mid_point, COMDAT

; 1274 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1275 : 
; 1276 : 	route_node
; 1277 : 		*new_node;
; 1278 : 
; 1279 : 	vec3d
; 1280 : 		best_point;
; 1281 : 
; 1282 : 	if (get_best_point (&start_node->position, &end_node->position, &best_point, side, movement_type))

  00009	8b 45 14	 mov	 eax, DWORD PTR _movement_type$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _side$[ebp]
  00010	51		 push	 ecx
  00011	8d 55 f0	 lea	 edx, DWORD PTR _best_point$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR _end_node$[ebp]
  00018	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _start_node$[ebp]
  0001f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?get_best_point@@YGHPAUVEC3D@@00W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; get_best_point
  00028	85 c0		 test	 eax, eax
  0002a	0f 84 ba 00 00
	00		 je	 $LN2@generate_b

; 1283 : 	{
; 1284 : 
; 1285 : 		new_node = (route_node *) malloc_fast_mem (sizeof (route_node));

  00030	6a 20		 push	 32			; 00000020H
  00032	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00037	89 45 fc	 mov	 DWORD PTR _new_node$[ebp], eax

; 1286 : 		memset (new_node, 0, sizeof (route_node));

  0003a	6a 20		 push	 32			; 00000020H
  0003c	6a 00		 push	 0
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 _memset
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1287 : 
; 1288 : 		new_node->type = ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  0004d	c7 00 11 00 00
	00		 mov	 DWORD PTR [eax], 17	; 00000011H

; 1289 : 		new_node->position.x = ceil (best_point.x);

  00053	51		 push	 ecx
  00054	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _best_point$[ebp]
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00063	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00066	d9 58 0c	 fstp	 DWORD PTR [eax+12]

; 1290 : 		new_node->position.y = ceil (best_point.y);

  00069	51		 push	 ecx
  0006a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _best_point$[ebp+4]
  0006f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00074	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00079	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  0007c	d9 58 10	 fstp	 DWORD PTR [eax+16]

; 1291 : 		new_node->position.z = ceil (best_point.z);

  0007f	51		 push	 ecx
  00080	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _best_point$[ebp+8]
  00085	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008a	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0008f	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00092	d9 58 14	 fstp	 DWORD PTR [eax+20]

; 1292 : 
; 1293 : 		new_node->next = end_node;

  00095	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00098	8b 4d 0c	 mov	 ecx, DWORD PTR _end_node$[ebp]
  0009b	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1294 : 		new_node->prev = start_node;

  0009e	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  000a1	8b 4d 08	 mov	 ecx, DWORD PTR _start_node$[ebp]
  000a4	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1295 : 
; 1296 : 		start_node->next = new_node;

  000a7	8b 45 08	 mov	 eax, DWORD PTR _start_node$[ebp]
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  000ad	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1297 : 		end_node->prev = new_node;

  000b0	8b 45 0c	 mov	 eax, DWORD PTR _end_node$[ebp]
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  000b6	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1298 : 
; 1299 : 		generate_best_mid_point (start_node, new_node, side, movement_type);

  000b9	8b 45 14	 mov	 eax, DWORD PTR _movement_type$[ebp]
  000bc	50		 push	 eax
  000bd	8b 4d 10	 mov	 ecx, DWORD PTR _side$[ebp]
  000c0	51		 push	 ecx
  000c1	8b 55 fc	 mov	 edx, DWORD PTR _new_node$[ebp]
  000c4	52		 push	 edx
  000c5	8b 45 08	 mov	 eax, DWORD PTR _start_node$[ebp]
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?generate_best_mid_point@@YGHPAUROUTE_NODE@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; generate_best_mid_point

; 1300 : 
; 1301 : 		generate_best_mid_point (new_node, end_node, side, movement_type);

  000ce	8b 45 14	 mov	 eax, DWORD PTR _movement_type$[ebp]
  000d1	50		 push	 eax
  000d2	8b 4d 10	 mov	 ecx, DWORD PTR _side$[ebp]
  000d5	51		 push	 ecx
  000d6	8b 55 0c	 mov	 edx, DWORD PTR _end_node$[ebp]
  000d9	52		 push	 edx
  000da	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?generate_best_mid_point@@YGHPAUROUTE_NODE@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; generate_best_mid_point

; 1302 : 
; 1303 : 		return TRUE;

  000e3	b8 01 00 00 00	 mov	 eax, 1
  000e8	eb 02		 jmp	 SHORT $LN1@generate_b
$LN2@generate_b:

; 1304 : 	}
; 1305 : 
; 1306 : 	return FALSE;

  000ea	33 c0		 xor	 eax, eax
$LN1@generate_b:

; 1307 : }

  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 10 00	 ret	 16			; 00000010H
?generate_best_mid_point@@YGHPAUROUTE_NODE@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ENDP ; generate_best_mid_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?optimise_route@@YGXPAUROUTE_NODE@@W4MOVEMENT_TYPES@@@Z
_TEXT	SEGMENT
tv194 = -116						; size = 8
tv179 = -116						; size = 8
tv218 = -112						; size = 4
_square$1 = -44						; size = 4
_vec2$ = -40						; size = 12
_vec1$ = -28						; size = 12
_angle$ = -16						; size = 4
_remove_node$ = -12					; size = 4
_next_node$ = -8					; size = 4
_prev_node$ = -4					; size = 4
_node$ = 8						; size = 4
_movement_type$ = 12					; size = 4
?optimise_route@@YGXPAUROUTE_NODE@@W4MOVEMENT_TYPES@@@Z PROC ; optimise_route, COMDAT

; 1557 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1558 : 
; 1559 : 	route_node
; 1560 : 		*prev_node,
; 1561 : 		*next_node;
; 1562 : 
; 1563 : 	int
; 1564 : 		remove_node;
; 1565 : 
; 1566 : 	float
; 1567 : 		angle;
; 1568 : 
; 1569 : 	vec3d
; 1570 : 		vec1,
; 1571 : 		vec2;
; 1572 : 
; 1573 : 	node = node->next;

  00009	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  0000c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0000f	89 4d 08	 mov	 DWORD PTR _node$[ebp], ecx

; 1574 : 	prev_node = node->prev;

  00012	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00015	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00018	89 4d fc	 mov	 DWORD PTR _prev_node$[ebp], ecx

; 1575 : 	next_node = node->next;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  0001e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00021	89 4d f8	 mov	 DWORD PTR _next_node$[ebp], ecx
$LN2@optimise_r:

; 1576 : 
; 1577 : 	while (next_node)

  00024	83 7d f8 00	 cmp	 DWORD PTR _next_node$[ebp], 0
  00028	0f 84 e4 01 00
	00		 je	 $LN3@optimise_r

; 1578 : 	{
; 1579 : 
; 1580 : 		remove_node = FALSE;

  0002e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _remove_node$[ebp], 0

; 1581 : 
; 1582 : 		vec1.x = node->position.x - prev_node->position.x;

  00035	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _prev_node$[ebp]
  0003b	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00040	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00045	f3 0f 11 45 e4	 movss	 DWORD PTR _vec1$[ebp], xmm0

; 1583 : 		vec1.y = 0.0;

  0004a	0f 57 c0	 xorps	 xmm0, xmm0
  0004d	f3 0f 11 45 e8	 movss	 DWORD PTR _vec1$[ebp+4], xmm0

; 1584 : 		vec1.z = node->position.z - prev_node->position.z;

  00052	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _prev_node$[ebp]
  00058	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0005d	f3 0f 5c 41 14	 subss	 xmm0, DWORD PTR [ecx+20]
  00062	f3 0f 11 45 ec	 movss	 DWORD PTR _vec1$[ebp+8], xmm0

; 1585 : 
; 1586 : 		if (check_zero_3d_vector (&vec1))

  00067	8d 45 e4	 lea	 eax, DWORD PTR _vec1$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00070	dd 5d 8c	 fstp	 QWORD PTR tv179[ebp]
  00073	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv179[ebp]
  00078	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00080	9f		 lahf
  00081	f6 c4 44	 test	 ah, 68			; 00000044H
  00084	7a 0c		 jp	 SHORT $LN4@optimise_r

; 1587 : 		{
; 1588 : 
; 1589 : 			remove_node = TRUE;

  00086	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _remove_node$[ebp], 1

; 1590 : 		}
; 1591 : 		else

  0008d	e9 2e 01 00 00	 jmp	 $LN8@optimise_r
$LN4@optimise_r:

; 1592 : 		{
; 1593 : 	
; 1594 : 			vec2.x = next_node->position.x - node->position.x;

  00092	8b 45 f8	 mov	 eax, DWORD PTR _next_node$[ebp]
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _node$[ebp]
  00098	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0009d	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  000a2	f3 0f 11 45 d8	 movss	 DWORD PTR _vec2$[ebp], xmm0

; 1595 : 			vec2.y = 0.0;

  000a7	0f 57 c0	 xorps	 xmm0, xmm0
  000aa	f3 0f 11 45 dc	 movss	 DWORD PTR _vec2$[ebp+4], xmm0

; 1596 : 			vec2.z = next_node->position.z - node->position.z;

  000af	8b 45 f8	 mov	 eax, DWORD PTR _next_node$[ebp]
  000b2	8b 4d 08	 mov	 ecx, DWORD PTR _node$[ebp]
  000b5	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  000ba	f3 0f 5c 41 14	 subss	 xmm0, DWORD PTR [ecx+20]
  000bf	f3 0f 11 45 e0	 movss	 DWORD PTR _vec2$[ebp+8], xmm0

; 1597 : 	
; 1598 : 			if (check_zero_3d_vector (&vec2))

  000c4	8d 45 d8	 lea	 eax, DWORD PTR _vec2$[ebp]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  000cd	dd 5d 8c	 fstp	 QWORD PTR tv194[ebp]
  000d0	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv194[ebp]
  000d5	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000dd	9f		 lahf
  000de	f6 c4 44	 test	 ah, 68			; 00000044H
  000e1	7a 0c		 jp	 SHORT $LN6@optimise_r

; 1599 : 			{
; 1600 : 	
; 1601 : 				remove_node = TRUE;

  000e3	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _remove_node$[ebp], 1

; 1602 : 			}
; 1603 : 			else

  000ea	e9 d1 00 00 00	 jmp	 $LN8@optimise_r
$LN6@optimise_r:

; 1604 : 			{
; 1605 : 
; 1606 : 				float
; 1607 : 					square;
; 1608 : 
; 1609 : 				square = get_inverse_square_root ( vec1.x * vec1.x + vec1.z * vec1.z );

  000ef	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _vec1$[ebp]
  000f4	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _vec1$[ebp]
  000f9	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _vec1$[ebp+8]
  000fe	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _vec1$[ebp+8]
  00103	f3 0f 58 c1	 addss	 xmm0, xmm1
  00107	51		 push	 ecx
  00108	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010d	e8 00 00 00 00	 call	 ?get_inverse_square_root@@YGMM@Z ; get_inverse_square_root
  00112	d9 5d d4	 fstp	 DWORD PTR _square$1[ebp]

; 1610 : 				vec1.x *= square;

  00115	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _vec1$[ebp]
  0011a	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _square$1[ebp]
  0011f	f3 0f 11 45 e4	 movss	 DWORD PTR _vec1$[ebp], xmm0

; 1611 : 				vec1.z *= square;

  00124	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _vec1$[ebp+8]
  00129	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _square$1[ebp]
  0012e	f3 0f 11 45 ec	 movss	 DWORD PTR _vec1$[ebp+8], xmm0

; 1612 : 
; 1613 : 				square = get_inverse_square_root ( vec2.x * vec2.x + vec2.z * vec2.z );

  00133	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _vec2$[ebp]
  00138	f3 0f 59 45 d8	 mulss	 xmm0, DWORD PTR _vec2$[ebp]
  0013d	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _vec2$[ebp+8]
  00142	f3 0f 59 4d e0	 mulss	 xmm1, DWORD PTR _vec2$[ebp+8]
  00147	f3 0f 58 c1	 addss	 xmm0, xmm1
  0014b	51		 push	 ecx
  0014c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00151	e8 00 00 00 00	 call	 ?get_inverse_square_root@@YGMM@Z ; get_inverse_square_root
  00156	d9 5d d4	 fstp	 DWORD PTR _square$1[ebp]

; 1614 : 				vec2.x *= square;

  00159	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _vec2$[ebp]
  0015e	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _square$1[ebp]
  00163	f3 0f 11 45 d8	 movss	 DWORD PTR _vec2$[ebp], xmm0

; 1615 : 				vec2.z *= square;

  00168	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _vec2$[ebp+8]
  0016d	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _square$1[ebp]
  00172	f3 0f 11 45 e0	 movss	 DWORD PTR _vec2$[ebp+8], xmm0

; 1616 : 
; 1617 : //				normalise_any_3d_vector (&vec1);
; 1618 : 	
; 1619 : //				normalise_any_3d_vector (&vec2);
; 1620 : 
; 1621 : 				angle = ((vec1.x * vec2.x) + (vec1.z * vec2.z));

  00177	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _vec1$[ebp]
  0017c	f3 0f 59 45 d8	 mulss	 xmm0, DWORD PTR _vec2$[ebp]
  00181	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _vec1$[ebp+8]
  00186	f3 0f 59 4d e0	 mulss	 xmm1, DWORD PTR _vec2$[ebp+8]
  0018b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0018f	f3 0f 11 45 f0	 movss	 DWORD PTR _angle$[ebp], xmm0

; 1622 : 
; 1623 : 				if (fabs (angle) > route_biasing_database [movement_type].optimise_tolerance)

  00194	51		 push	 ecx
  00195	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _angle$[ebp]
  0019a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019f	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  001a4	d9 5d 90	 fstp	 DWORD PTR tv218[ebp]
  001a7	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv218[ebp]
  001ac	6b 45 0c 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  001b0	0f 2f 80 18 00
	00 00		 comiss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+24]
  001b7	76 07		 jbe	 SHORT $LN8@optimise_r

; 1624 : 				{
; 1625 : 
; 1626 : 					remove_node = TRUE;

  001b9	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _remove_node$[ebp], 1
$LN8@optimise_r:

; 1627 : 				}
; 1628 : 			}
; 1629 : 		}
; 1630 : 
; 1631 : 		if (remove_node)

  001c0	83 7d f4 00	 cmp	 DWORD PTR _remove_node$[ebp], 0
  001c4	74 2c		 je	 SHORT $LN9@optimise_r

; 1632 : 		{
; 1633 : 
; 1634 : 			// delete node
; 1635 : 
; 1636 : 			#if DEBUG_MODULE
; 1637 : 			if (debug_flag)
; 1638 : 			{
; 1639 : 	
; 1640 : 				debug_log ("GENROUTE: removing node, within optimise tolerance");
; 1641 : 			}
; 1642 : 			#endif
; 1643 : 
; 1644 : 			prev_node->next = next_node;

  001c6	8b 45 fc	 mov	 eax, DWORD PTR _prev_node$[ebp]
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _next_node$[ebp]
  001cc	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1645 : 
; 1646 : 			next_node->prev = prev_node;

  001cf	8b 45 f8	 mov	 eax, DWORD PTR _next_node$[ebp]
  001d2	8b 4d fc	 mov	 ecx, DWORD PTR _prev_node$[ebp]
  001d5	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1647 : 
; 1648 : 			free_mem (node);

  001d8	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  001db	50		 push	 eax
  001dc	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 1649 : 
; 1650 : 			node = next_node;

  001e1	8b 45 f8	 mov	 eax, DWORD PTR _next_node$[ebp]
  001e4	89 45 08	 mov	 DWORD PTR _node$[ebp], eax

; 1651 : 
; 1652 : 			next_node = next_node->next;

  001e7	8b 45 f8	 mov	 eax, DWORD PTR _next_node$[ebp]
  001ea	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001ed	89 4d f8	 mov	 DWORD PTR _next_node$[ebp], ecx

; 1653 : 		}
; 1654 : 		else

  001f0	eb 1b		 jmp	 SHORT $LN10@optimise_r
$LN9@optimise_r:

; 1655 : 		{
; 1656 : 	
; 1657 : 			// advance links (careful cause node could be freed)
; 1658 : 	
; 1659 : 			prev_node = prev_node->next;

  001f2	8b 45 fc	 mov	 eax, DWORD PTR _prev_node$[ebp]
  001f5	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001f8	89 4d fc	 mov	 DWORD PTR _prev_node$[ebp], ecx

; 1660 : 	
; 1661 : 			node = prev_node->next;

  001fb	8b 45 fc	 mov	 eax, DWORD PTR _prev_node$[ebp]
  001fe	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00201	89 4d 08	 mov	 DWORD PTR _node$[ebp], ecx

; 1662 : 	
; 1663 : 			next_node = node->next;

  00204	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00207	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0020a	89 4d f8	 mov	 DWORD PTR _next_node$[ebp], ecx
$LN10@optimise_r:

; 1664 : 		}
; 1665 : 	}

  0020d	e9 12 fe ff ff	 jmp	 $LN2@optimise_r
$LN3@optimise_r:

; 1666 : }

  00212	5f		 pop	 edi
  00213	5e		 pop	 esi
  00214	5b		 pop	 ebx
  00215	8b e5		 mov	 esp, ebp
  00217	5d		 pop	 ebp
  00218	c2 08 00	 ret	 8
?optimise_route@@YGXPAUROUTE_NODE@@W4MOVEMENT_TYPES@@@Z ENDP ; optimise_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?create_route@@YGPAUROUTE_NODE@@PAUVEC3D@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z
_TEXT	SEGMENT
_end_node$ = -8						; size = 4
_start_node$ = -4					; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
_side$ = 16						; size = 4
_movement_type$ = 20					; size = 4
?create_route@@YGPAUROUTE_NODE@@PAUVEC3D@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z PROC ; create_route, COMDAT

; 1241 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1242 : 
; 1243 : 	route_node
; 1244 : 		*start_node,
; 1245 : 		*end_node;
; 1246 : 
; 1247 : 	start_node = (route_node *) malloc_fast_mem (sizeof (route_node));

  00009	6a 20		 push	 32			; 00000020H
  0000b	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00010	89 45 fc	 mov	 DWORD PTR _start_node$[ebp], eax

; 1248 : 	memset (start_node, 0, sizeof (route_node));

  00013	6a 20		 push	 32			; 00000020H
  00015	6a 00		 push	 0
  00017	8b 45 fc	 mov	 eax, DWORD PTR _start_node$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 _memset
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1249 : 	start_node->type = ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _start_node$[ebp]
  00026	c7 00 11 00 00
	00		 mov	 DWORD PTR [eax], 17	; 00000011H

; 1250 : 	start_node->position.x = ceil (start->x);

  0002c	8b 45 08	 mov	 eax, DWORD PTR _start$[ebp]
  0002f	51		 push	 ecx
  00030	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00034	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00039	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _start_node$[ebp]
  00041	d9 59 0c	 fstp	 DWORD PTR [ecx+12]

; 1251 : 	start_node->position.y = ceil (start->y);

  00044	8b 45 08	 mov	 eax, DWORD PTR _start$[ebp]
  00047	51		 push	 ecx
  00048	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0004d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00052	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _start_node$[ebp]
  0005a	d9 59 10	 fstp	 DWORD PTR [ecx+16]

; 1252 : 	start_node->position.z = ceil (start->z);

  0005d	8b 45 08	 mov	 eax, DWORD PTR _start$[ebp]
  00060	51		 push	 ecx
  00061	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _start_node$[ebp]
  00073	d9 59 14	 fstp	 DWORD PTR [ecx+20]

; 1253 : 
; 1254 : 	end_node = (route_node *) malloc_fast_mem (sizeof (route_node));

  00076	6a 20		 push	 32			; 00000020H
  00078	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0007d	89 45 f8	 mov	 DWORD PTR _end_node$[ebp], eax

; 1255 : 	memset (end_node, 0, sizeof (route_node));

  00080	6a 20		 push	 32			; 00000020H
  00082	6a 00		 push	 0
  00084	8b 45 f8	 mov	 eax, DWORD PTR _end_node$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 _memset
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1256 : 	end_node->type = ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION;

  00090	8b 45 f8	 mov	 eax, DWORD PTR _end_node$[ebp]
  00093	c7 00 11 00 00
	00		 mov	 DWORD PTR [eax], 17	; 00000011H

; 1257 : 	end_node->position.x = ceil (end->x);

  00099	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  0009c	51		 push	 ecx
  0009d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  000ab	8b 4d f8	 mov	 ecx, DWORD PTR _end_node$[ebp]
  000ae	d9 59 0c	 fstp	 DWORD PTR [ecx+12]

; 1258 : 	end_node->position.y = ceil (end->y);

  000b1	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  000b4	51		 push	 ecx
  000b5	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  000c4	8b 4d f8	 mov	 ecx, DWORD PTR _end_node$[ebp]
  000c7	d9 59 10	 fstp	 DWORD PTR [ecx+16]

; 1259 : 	end_node->position.z = ceil (end->z);

  000ca	8b 45 0c	 mov	 eax, DWORD PTR _end$[ebp]
  000cd	51		 push	 ecx
  000ce	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d8	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  000dd	8b 4d f8	 mov	 ecx, DWORD PTR _end_node$[ebp]
  000e0	d9 59 14	 fstp	 DWORD PTR [ecx+20]

; 1260 : 
; 1261 : 	start_node->next = end_node;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _start_node$[ebp]
  000e6	8b 4d f8	 mov	 ecx, DWORD PTR _end_node$[ebp]
  000e9	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1262 : 	end_node->prev = start_node;

  000ec	8b 45 f8	 mov	 eax, DWORD PTR _end_node$[ebp]
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _start_node$[ebp]
  000f2	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1263 : 
; 1264 : 	generate_best_mid_point (start_node, end_node, side, movement_type);

  000f5	8b 45 14	 mov	 eax, DWORD PTR _movement_type$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d 10	 mov	 ecx, DWORD PTR _side$[ebp]
  000fc	51		 push	 ecx
  000fd	8b 55 f8	 mov	 edx, DWORD PTR _end_node$[ebp]
  00100	52		 push	 edx
  00101	8b 45 fc	 mov	 eax, DWORD PTR _start_node$[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?generate_best_mid_point@@YGHPAUROUTE_NODE@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; generate_best_mid_point

; 1265 : 
; 1266 : 	return start_node;

  0010a	8b 45 fc	 mov	 eax, DWORD PTR _start_node$[ebp]

; 1267 : }

  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	5b		 pop	 ebx
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 10 00	 ret	 16			; 00000010H
?create_route@@YGPAUROUTE_NODE@@PAUVEC3D@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ENDP ; create_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z
_TEXT	SEGMENT
tv428 = -160						; size = 4
tv384 = -160						; size = 4
tv364 = -160						; size = 4
tv304 = -160						; size = 4
tv284 = -160						; size = 4
tv264 = -160						; size = 4
tv244 = -160						; size = 4
tv224 = -160						; size = 4
tv200 = -160						; size = 4
tv175 = -160						; size = 4
tv155 = -160						; size = 4
tv135 = -160						; size = 4
tv81 = -160						; size = 4
tv420 = -156						; size = 4
tv376 = -156						; size = 4
tv356 = -156						; size = 4
tv296 = -156						; size = 4
tv276 = -156						; size = 4
tv256 = -156						; size = 4
tv236 = -156						; size = 4
tv216 = -156						; size = 4
tv192 = -156						; size = 4
tv167 = -156						; size = 4
tv147 = -156						; size = 4
tv95 = -156						; size = 4
tv74 = -156						; size = 4
_start_keysite$1 = -88					; size = 4
_route_formation_types_ptr$ = -84			; size = 4
_route_waypoint_types_ptr$ = -80			; size = 4
_route_dependents_ptr$ = -76				; size = 4
_landing_entity$ = -72					; size = 4
_height$ = -68						; size = 4
_mb_vel$ = -64						; size = 4
_side$ = -60						; size = 4
_create_stack_attributes$ = -56				; size = 4
_start_point_count$ = -52				; size = 4
_generate_route$ = -48					; size = 4
_route_length$ = -44					; size = 4
_loop$ = -40						; size = 4
_route_points_ptr$ = -36				; size = 4
_start$ = -32						; size = 4
_stop$ = -28						; size = 4
_landing_type$ = -24					; size = 4
_movement_type$ = -20					; size = 4
_last_specified_node$ = -16				; size = 4
_specified_route$ = -12					; size = 4
_new_route$ = -8					; size = 4
_new_node$ = -4						; size = 4
_group$ = 8						; size = 4
_task_en$ = 12						; size = 4
_return_keysite$ = 16					; size = 4
_waypoint_indices$ = 20					; size = 4
_indices_count$ = 24					; size = 4
?temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z PROC ; temp_create_generic_waypoint_route, COMDAT

; 1694 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1695 : 
; 1696 : 	route_node
; 1697 : 		*new_node,
; 1698 : 		*new_route,
; 1699 : 		//*temp_new_route,
; 1700 : 		*specified_route,
; 1701 : 		//*specified_route_ptr,
; 1702 : 		*last_specified_node;
; 1703 : 
; 1704 : 	movement_types
; 1705 : 		movement_type;
; 1706 : 
; 1707 : 	entity_sub_types
; 1708 : 		landing_type;
; 1709 : 
; 1710 : 	vec3d
; 1711 : 		*stop,
; 1712 : 		*start,
; 1713 : 		//*waypoint_pos,
; 1714 : 		*route_points_ptr;
; 1715 : 
; 1716 : 	int
; 1717 : 		loop,
; 1718 : 		route_length,
; 1719 : 		generate_route,
; 1720 : 		start_point_count,
; 1721 : 		create_stack_attributes;
; 1722 : 	
; 1723 : 	entity_sides
; 1724 : 		side;
; 1725 :   	
; 1726 : 	float
; 1727 : 		mb_vel,
; 1728 : 		height;
; 1729 : 
; 1730 : 	entity
; 1731 : 		*landing_entity,
; 1732 : 		**route_dependents_ptr;
; 1733 : 
; 1734 : 	entity_sub_types
; 1735 : 		*route_waypoint_types_ptr;
; 1736 : 
; 1737 : 	formation_types
; 1738 : 		*route_formation_types_ptr;
; 1739 : 
; 1740 : 	ASSERT (task_en);

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN7@temp_creat
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00017	83 c0 2e	 add	 eax, 46			; 0000002eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_07NKFOJBII@task_en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@temp_creat:

; 1741 : 
; 1742 : 	#if DEBUG_MODULE
; 1743 : 	if (debug_flag)
; 1744 : 	{
; 1745 : 	
; 1746 : 		debug_log ("CROUTE: ===================================================================================");
; 1747 : 	
; 1748 : 		debug_log ("CROUTE: Creating route for task %s (%d), movement type %s",
; 1749 : 						get_local_entity_string (task_en, STRING_TYPE_FULL_NAME),
; 1750 : 						get_local_entity_index (task_en),
; 1751 : 						movement_names [get_local_entity_int_value (task_en, INT_TYPE_MOVEMENT_TYPE)]);
; 1752 : 	
; 1753 : 	}
; 1754 : 	#endif
; 1755 : 
; 1756 : 	reset_waypoint_tags ();

  0002a	e8 00 00 00 00	 call	 ?reset_waypoint_tags@@YGXXZ ; reset_waypoint_tags

; 1757 : 
; 1758 : 	if (get_local_entity_first_child (task_en, LIST_TYPE_WAYPOINT))

  0002f	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00033	74 0d		 je	 SHORT $LN18@temp_creat
  00035	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  00040	eb 20		 jmp	 SHORT $LN19@temp_creat
$LN18@temp_creat:
  00042	68 de 06 00 00	 push	 1758			; 000006deH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00052	52		 push	 edx
  00053	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00058	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN19@temp_creat:
  00062	b8 01 00 00 00	 mov	 eax, 1
  00067	85 c0		 test	 eax, eax
  00069	74 0c		 je	 SHORT $LN20@temp_creat
  0006b	c7 85 60 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv81[ebp], 44	; 0000002cH
  00075	eb 20		 jmp	 SHORT $LN21@temp_creat
$LN20@temp_creat:
  00077	68 de 06 00 00	 push	 1758			; 000006deH
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00087	51		 push	 ecx
  00088	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008d	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN21@temp_creat:
  00097	6a 2c		 push	 44			; 0000002cH
  00099	8b 55 0c	 mov	 edx, DWORD PTR _task_en$[ebp]
  0009c	52		 push	 edx
  0009d	69 85 64 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv74[ebp], 180
  000a7	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv81[ebp]
  000ad	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  000b4	ff d2		 call	 edx
  000b6	85 c0		 test	 eax, eax
  000b8	74 07		 je	 SHORT $LN8@temp_creat

; 1759 : 	{
; 1760 : 
; 1761 : 		#if DEBUG_MODULE
; 1762 : 		if (debug_flag)
; 1763 : 		{
; 1764 : 
; 1765 : 			debug_log ("CROUTE:     Task %s already has waypoint route", get_local_entity_string (task_en, STRING_TYPE_FULL_NAME));
; 1766 : 			
; 1767 : 			debug_log ("CROUTE: ===================================================================================");
; 1768 : 		}
; 1769 : 		#endif
; 1770 : 
; 1771 : 		return NULL;

  000ba	33 c0		 xor	 eax, eax
  000bc	e9 e6 09 00 00	 jmp	 $LN1@temp_creat
$LN8@temp_creat:

; 1772 : 	}
; 1773 : 
; 1774 : 	// set stack attirbutes
; 1775 : 
; 1776 : 	create_stack_attributes = force_local_entity_create_stack_attributes;

  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?force_local_entity_create_stack_attributes@@3HA ; force_local_entity_create_stack_attributes
  000c6	89 45 c8	 mov	 DWORD PTR _create_stack_attributes$[ebp], eax

; 1777 : 
; 1778 : 	if (get_comms_data_flow () == COMMS_DATA_FLOW_RX)

  000c9	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A, 1 ; system_comms_data_flow
  000d0	75 0a		 jne	 SHORT $LN9@temp_creat

; 1779 : 	{
; 1780 : 
; 1781 : 		set_force_local_entity_create_stack_attributes (TRUE);

  000d2	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?force_local_entity_create_stack_attributes@@3HA, 1 ; force_local_entity_create_stack_attributes
$LN9@temp_creat:

; 1782 : 	}
; 1783 : 	
; 1784 : 	//////////////////////////////////////////////////////////////////
; 1785 : 	//
; 1786 : 	// Sort route generation type
; 1787 : 	//
; 1788 : 	//////////////////////////////////////////////////////////////////
; 1789 : 
; 1790 : 	//member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);
; 1791 : 
; 1792 : 	//ASSERT (member);
; 1793 : 
; 1794 : 	side = (entity_sides) get_local_entity_int_value (task_en, INT_TYPE_SIDE);

  000dc	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  000e0	74 0d		 je	 SHORT $LN22@temp_creat
  000e2	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000ed	eb 24		 jmp	 SHORT $LN23@temp_creat
$LN22@temp_creat:
  000ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  000f5	83 c2 64	 add	 edx, 100		; 00000064H
  000f8	52		 push	 edx
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00109	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN23@temp_creat:
  00113	b9 01 00 00 00	 mov	 ecx, 1
  00118	85 c9		 test	 ecx, ecx
  0011a	74 0c		 je	 SHORT $LN24@temp_creat
  0011c	c7 85 60 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv135[ebp], 187 ; 000000bbH
  00126	eb 24		 jmp	 SHORT $LN25@temp_creat
$LN24@temp_creat:
  00128	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  0012e	83 c2 64	 add	 edx, 100		; 00000064H
  00131	52		 push	 edx
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00142	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN25@temp_creat:
  0014c	68 bb 00 00 00	 push	 187			; 000000bbH
  00151	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00154	51		 push	 ecx
  00155	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv95[ebp], 1116
  0015f	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  00165	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0016c	ff d1		 call	 ecx
  0016e	89 45 c4	 mov	 DWORD PTR _side$[ebp], eax

; 1795 : 
; 1796 : 	//mb_vel = get_local_entity_float_value (member, FLOAT_TYPE_CRUISE_VELOCITY);
; 1797 : 	mb_vel = 50.0;

  00171	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  00179	f3 0f 11 45 c0	 movss	 DWORD PTR _mb_vel$[ebp], xmm0

; 1798 : 
; 1799 : 	//height = get_local_entity_float_value (member, FLOAT_TYPE_CRUISE_ALTITUDE);
; 1800 : 	height = 50.0;

  0017e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  00186	f3 0f 11 45 bc	 movss	 DWORD PTR _height$[ebp], xmm0

; 1801 : 
; 1802 : 	//movement_type = group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].movement_type;
; 1803 : 	movement_type = (movement_types) get_local_entity_int_value (task_en, INT_TYPE_MOVEMENT_TYPE);

  0018b	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0018f	74 0d		 je	 SHORT $LN26@temp_creat
  00191	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00194	8b 08		 mov	 ecx, DWORD PTR [eax]
  00196	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  0019c	eb 24		 jmp	 SHORT $LN27@temp_creat
$LN26@temp_creat:
  0019e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  001a4	83 c2 6d	 add	 edx, 109		; 0000006dH
  001a7	52		 push	 edx
  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b8	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], 0
$LN27@temp_creat:
  001c2	b9 01 00 00 00	 mov	 ecx, 1
  001c7	85 c9		 test	 ecx, ecx
  001c9	74 0c		 je	 SHORT $LN28@temp_creat
  001cb	c7 85 60 ff ff
	ff 90 00 00 00	 mov	 DWORD PTR tv155[ebp], 144 ; 00000090H
  001d5	eb 24		 jmp	 SHORT $LN29@temp_creat
$LN28@temp_creat:
  001d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  001dd	83 c2 6d	 add	 edx, 109		; 0000006dH
  001e0	52		 push	 edx
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001eb	50		 push	 eax
  001ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f1	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv155[ebp], 0
$LN29@temp_creat:
  001fb	68 90 00 00 00	 push	 144			; 00000090H
  00200	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00203	51		 push	 ecx
  00204	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv147[ebp], 1116
  0020e	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv155[ebp]
  00214	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0021b	ff d1		 call	 ecx
  0021d	89 45 ec	 mov	 DWORD PTR _movement_type$[ebp], eax

; 1804 : 
; 1805 : 	//landing_type = group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].default_landing_type;
; 1806 : 	landing_type = ENTITY_SUB_TYPE_LANDING_HELICOPTER;

  00220	c7 45 e8 02 00
	00 00		 mov	 DWORD PTR _landing_type$[ebp], 2

; 1807 : 
; 1808 : 	generate_route = task_database [get_local_entity_int_value (task_en, INT_TYPE_ENTITY_SUB_TYPE)].task_route_search;

  00227	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0022b	74 0d		 je	 SHORT $LN30@temp_creat
  0022d	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00230	8b 08		 mov	 ecx, DWORD PTR [eax]
  00232	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv167[ebp], ecx
  00238	eb 24		 jmp	 SHORT $LN31@temp_creat
$LN30@temp_creat:
  0023a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00240	83 c2 72	 add	 edx, 114		; 00000072H
  00243	52		 push	 edx
  00244	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00249	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00254	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv167[ebp], 0
$LN31@temp_creat:
  0025e	b9 01 00 00 00	 mov	 ecx, 1
  00263	85 c9		 test	 ecx, ecx
  00265	74 0c		 je	 SHORT $LN32@temp_creat
  00267	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv175[ebp], 52 ; 00000034H
  00271	eb 24		 jmp	 SHORT $LN33@temp_creat
$LN32@temp_creat:
  00273	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00279	83 c2 72	 add	 edx, 114		; 00000072H
  0027c	52		 push	 edx
  0027d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028d	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv175[ebp], 0
$LN33@temp_creat:
  00297	6a 34		 push	 52			; 00000034H
  00299	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  0029c	51		 push	 ecx
  0029d	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv167[ebp], 1116
  002a7	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv175[ebp]
  002ad	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002b4	ff d1		 call	 ecx
  002b6	6b d0 50	 imul	 edx, eax, 80
  002b9	8b 82 28 00 00
	00		 mov	 eax, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+40]
  002bf	c1 e8 08	 shr	 eax, 8
  002c2	83 e0 01	 and	 eax, 1
  002c5	89 45 d0	 mov	 DWORD PTR _generate_route$[ebp], eax

; 1809 : 
; 1810 : 	start_point_count = task_database [get_local_entity_int_value (task_en, INT_TYPE_ENTITY_SUB_TYPE)].add_start_waypoint;

  002c8	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  002cc	74 0d		 je	 SHORT $LN34@temp_creat
  002ce	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  002d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d3	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv192[ebp], ecx
  002d9	eb 24		 jmp	 SHORT $LN35@temp_creat
$LN34@temp_creat:
  002db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  002e1	83 c2 74	 add	 edx, 116		; 00000074H
  002e4	52		 push	 edx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f5	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv192[ebp], 0
$LN35@temp_creat:
  002ff	b9 01 00 00 00	 mov	 ecx, 1
  00304	85 c9		 test	 ecx, ecx
  00306	74 0c		 je	 SHORT $LN36@temp_creat
  00308	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv200[ebp], 52 ; 00000034H
  00312	eb 24		 jmp	 SHORT $LN37@temp_creat
$LN36@temp_creat:
  00314	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  0031a	83 c2 74	 add	 edx, 116		; 00000074H
  0031d	52		 push	 edx
  0031e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00323	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00328	50		 push	 eax
  00329	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032e	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
$LN37@temp_creat:
  00338	6a 34		 push	 52			; 00000034H
  0033a	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  0033d	51		 push	 ecx
  0033e	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv192[ebp], 1116
  00348	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv200[ebp]
  0034e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00355	ff d1		 call	 ecx
  00357	6b d0 50	 imul	 edx, eax, 80
  0035a	8b 82 28 00 00
	00		 mov	 eax, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+40]
  00360	83 e0 01	 and	 eax, 1
  00363	89 45 cc	 mov	 DWORD PTR _start_point_count$[ebp], eax

; 1811 : 
; 1812 : 	//////////////////////////////////////////////////////////////////
; 1813 : 	//
; 1814 : 	// Generate list of Specified route
; 1815 : 	//
; 1816 : 	//////////////////////////////////////////////////////////////////
; 1817 : 
; 1818 : 	route_points_ptr = (vec3d *) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_NODE);

  00366	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0036a	74 0d		 je	 SHORT $LN38@temp_creat
  0036c	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0036f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00371	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv216[ebp], ecx
  00377	eb 24		 jmp	 SHORT $LN39@temp_creat
$LN38@temp_creat:
  00379	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  0037f	83 c2 7c	 add	 edx, 124		; 0000007cH
  00382	52		 push	 edx
  00383	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00388	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0038d	50		 push	 eax
  0038e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00393	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv216[ebp], 0
$LN39@temp_creat:
  0039d	b9 01 00 00 00	 mov	 ecx, 1
  003a2	85 c9		 test	 ecx, ecx
  003a4	74 0c		 je	 SHORT $LN40@temp_creat
  003a6	c7 85 60 ff ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv224[ebp], 11 ; 0000000bH
  003b0	eb 24		 jmp	 SHORT $LN41@temp_creat
$LN40@temp_creat:
  003b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  003b8	83 c2 7c	 add	 edx, 124		; 0000007cH
  003bb	52		 push	 edx
  003bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  003c6	50		 push	 eax
  003c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003cc	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv224[ebp], 0
$LN41@temp_creat:
  003d6	6a 0b		 push	 11			; 0000000bH
  003d8	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  003db	51		 push	 ecx
  003dc	6b 95 64 ff ff
	ff 50		 imul	 edx, DWORD PTR tv216[ebp], 80
  003e3	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv224[ebp]
  003e9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  003f0	ff d1		 call	 ecx
  003f2	89 45 dc	 mov	 DWORD PTR _route_points_ptr$[ebp], eax

; 1819 : 
; 1820 : 	route_dependents_ptr = (entity **) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_DEPENDENTS);

  003f5	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  003f9	74 0d		 je	 SHORT $LN42@temp_creat
  003fb	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv236[ebp], ecx
  00406	eb 24		 jmp	 SHORT $LN43@temp_creat
$LN42@temp_creat:
  00408	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  0040e	83 c2 7e	 add	 edx, 126		; 0000007eH
  00411	52		 push	 edx
  00412	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00417	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0041c	50		 push	 eax
  0041d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00422	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv236[ebp], 0
$LN43@temp_creat:
  0042c	b9 01 00 00 00	 mov	 ecx, 1
  00431	85 c9		 test	 ecx, ecx
  00433	74 0c		 je	 SHORT $LN44@temp_creat
  00435	c7 85 60 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv244[ebp], 9
  0043f	eb 24		 jmp	 SHORT $LN45@temp_creat
$LN44@temp_creat:
  00441	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00447	83 c2 7e	 add	 edx, 126		; 0000007eH
  0044a	52		 push	 edx
  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00450	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00455	50		 push	 eax
  00456	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv244[ebp], 0
$LN45@temp_creat:
  00465	6a 09		 push	 9
  00467	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  0046a	51		 push	 ecx
  0046b	6b 95 64 ff ff
	ff 50		 imul	 edx, DWORD PTR tv236[ebp], 80
  00472	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv244[ebp]
  00478	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0047f	ff d1		 call	 ecx
  00481	89 45 b4	 mov	 DWORD PTR _route_dependents_ptr$[ebp], eax

; 1821 : 
; 1822 : 	route_waypoint_types_ptr = (entity_sub_types *) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_WAYPOINT_TYPES);

  00484	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00488	74 0d		 je	 SHORT $LN46@temp_creat
  0048a	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0048d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0048f	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv256[ebp], ecx
  00495	eb 27		 jmp	 SHORT $LN47@temp_creat
$LN46@temp_creat:
  00497	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  0049d	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  004a3	52		 push	 edx
  004a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ae	50		 push	 eax
  004af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004b4	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv256[ebp], 0
$LN47@temp_creat:
  004be	b9 01 00 00 00	 mov	 ecx, 1
  004c3	85 c9		 test	 ecx, ecx
  004c5	74 0c		 je	 SHORT $LN48@temp_creat
  004c7	c7 85 60 ff ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv264[ebp], 12 ; 0000000cH
  004d1	eb 27		 jmp	 SHORT $LN49@temp_creat
$LN48@temp_creat:
  004d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  004d9	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  004df	52		 push	 edx
  004e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  004ea	50		 push	 eax
  004eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f0	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN49@temp_creat:
  004fa	6a 0c		 push	 12			; 0000000cH
  004fc	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  004ff	51		 push	 ecx
  00500	6b 95 64 ff ff
	ff 50		 imul	 edx, DWORD PTR tv256[ebp], 80
  00507	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv264[ebp]
  0050d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00514	ff d1		 call	 ecx
  00516	89 45 b0	 mov	 DWORD PTR _route_waypoint_types_ptr$[ebp], eax

; 1823 : 
; 1824 : 	route_formation_types_ptr = (formation_types *) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_FORMATION_TYPES);

  00519	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0051d	74 0d		 je	 SHORT $LN50@temp_creat
  0051f	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00522	8b 08		 mov	 ecx, DWORD PTR [eax]
  00524	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv276[ebp], ecx
  0052a	eb 27		 jmp	 SHORT $LN51@temp_creat
$LN50@temp_creat:
  0052c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00532	81 c2 82 00 00
	00		 add	 edx, 130		; 00000082H
  00538	52		 push	 edx
  00539	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00543	50		 push	 eax
  00544	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00549	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv276[ebp], 0
$LN51@temp_creat:
  00553	b9 01 00 00 00	 mov	 ecx, 1
  00558	85 c9		 test	 ecx, ecx
  0055a	74 0c		 je	 SHORT $LN52@temp_creat
  0055c	c7 85 60 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv284[ebp], 10 ; 0000000aH
  00566	eb 27		 jmp	 SHORT $LN53@temp_creat
$LN52@temp_creat:
  00568	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  0056e	81 c2 82 00 00
	00		 add	 edx, 130		; 00000082H
  00574	52		 push	 edx
  00575	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0057a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  0057f	50		 push	 eax
  00580	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00585	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv284[ebp], 0
$LN53@temp_creat:
  0058f	6a 0a		 push	 10			; 0000000aH
  00591	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00594	51		 push	 ecx
  00595	6b 95 64 ff ff
	ff 50		 imul	 edx, DWORD PTR tv276[ebp], 80
  0059c	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv284[ebp]
  005a2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  005a9	ff d1		 call	 ecx
  005ab	89 45 ac	 mov	 DWORD PTR _route_formation_types_ptr$[ebp], eax

; 1825 : 
; 1826 : 	route_length = get_local_entity_int_value (task_en, INT_TYPE_ROUTE_LENGTH);

  005ae	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  005b2	74 0d		 je	 SHORT $LN54@temp_creat
  005b4	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  005b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b9	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv296[ebp], ecx
  005bf	eb 27		 jmp	 SHORT $LN55@temp_creat
$LN54@temp_creat:
  005c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  005c7	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  005cd	52		 push	 edx
  005ce	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005d8	50		 push	 eax
  005d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005de	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv296[ebp], 0
$LN55@temp_creat:
  005e8	b9 01 00 00 00	 mov	 ecx, 1
  005ed	85 c9		 test	 ecx, ecx
  005ef	74 0c		 je	 SHORT $LN56@temp_creat
  005f1	c7 85 60 ff ff
	ff b3 00 00 00	 mov	 DWORD PTR tv304[ebp], 179 ; 000000b3H
  005fb	eb 27		 jmp	 SHORT $LN57@temp_creat
$LN56@temp_creat:
  005fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00603	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00609	52		 push	 edx
  0060a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0060f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00614	50		 push	 eax
  00615	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0061a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv304[ebp], 0
$LN57@temp_creat:
  00624	68 b3 00 00 00	 push	 179			; 000000b3H
  00629	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  0062c	51		 push	 ecx
  0062d	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv296[ebp], 1116
  00637	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv304[ebp]
  0063d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00644	ff d1		 call	 ecx
  00646	89 45 d4	 mov	 DWORD PTR _route_length$[ebp], eax

; 1827 : 
; 1828 : 	last_specified_node = NULL;

  00649	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _last_specified_node$[ebp], 0

; 1829 : 
; 1830 : 	for (loop = route_length - 1; loop >= 0; loop --)

  00650	8b 45 d4	 mov	 eax, DWORD PTR _route_length$[ebp]
  00653	83 e8 01	 sub	 eax, 1
  00656	89 45 d8	 mov	 DWORD PTR _loop$[ebp], eax
  00659	eb 09		 jmp	 SHORT $LN4@temp_creat
$LN2@temp_creat:
  0065b	8b 45 d8	 mov	 eax, DWORD PTR _loop$[ebp]
  0065e	83 e8 01	 sub	 eax, 1
  00661	89 45 d8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@temp_creat:
  00664	83 7d d8 00	 cmp	 DWORD PTR _loop$[ebp], 0
  00668	0f 8c bc 00 00
	00		 jl	 $LN3@temp_creat

; 1831 : 	{
; 1832 : 
; 1833 : 		specified_route = (route_node *) malloc_fast_mem (sizeof (route_node));

  0066e	6a 20		 push	 32			; 00000020H
  00670	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00675	89 45 f4	 mov	 DWORD PTR _specified_route$[ebp], eax

; 1834 : 
; 1835 : 		// position
; 1836 : 		specified_route->position.x = ceil (route_points_ptr [loop].x);

  00678	6b 45 d8 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  0067c	8b 4d dc	 mov	 ecx, DWORD PTR _route_points_ptr$[ebp]
  0067f	51		 push	 ecx
  00680	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00685	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068a	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0068f	8b 55 f4	 mov	 edx, DWORD PTR _specified_route$[ebp]
  00692	d9 5a 0c	 fstp	 DWORD PTR [edx+12]

; 1837 : 		specified_route->position.y = ceil (route_points_ptr [loop].y);

  00695	6b 45 d8 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  00699	8b 4d dc	 mov	 ecx, DWORD PTR _route_points_ptr$[ebp]
  0069c	51		 push	 ecx
  0069d	f3 0f 10 44 01
	04		 movss	 xmm0, DWORD PTR [ecx+eax+4]
  006a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a8	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  006ad	8b 55 f4	 mov	 edx, DWORD PTR _specified_route$[ebp]
  006b0	d9 5a 10	 fstp	 DWORD PTR [edx+16]

; 1838 : 		specified_route->position.z = ceil (route_points_ptr [loop].z);

  006b3	6b 45 d8 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  006b7	8b 4d dc	 mov	 ecx, DWORD PTR _route_points_ptr$[ebp]
  006ba	51		 push	 ecx
  006bb	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  006c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c6	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  006cb	8b 55 f4	 mov	 edx, DWORD PTR _specified_route$[ebp]
  006ce	d9 5a 14	 fstp	 DWORD PTR [edx+20]

; 1839 : 
; 1840 : 		// dependent
; 1841 : 		specified_route->dependent = route_dependents_ptr [loop];

  006d1	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  006d4	8b 4d d8	 mov	 ecx, DWORD PTR _loop$[ebp]
  006d7	8b 55 b4	 mov	 edx, DWORD PTR _route_dependents_ptr$[ebp]
  006da	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  006dd	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1842 : 
; 1843 : 		// waypoint_type
; 1844 : 		specified_route->type = route_waypoint_types_ptr [loop];

  006e0	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  006e3	8b 4d d8	 mov	 ecx, DWORD PTR _loop$[ebp]
  006e6	8b 55 b0	 mov	 edx, DWORD PTR _route_waypoint_types_ptr$[ebp]
  006e9	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  006ec	89 08		 mov	 DWORD PTR [eax], ecx

; 1845 : 
; 1846 : 		// formation_type
; 1847 : 		specified_route->formation = route_formation_types_ptr [loop];

  006ee	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  006f1	8b 4d d8	 mov	 ecx, DWORD PTR _loop$[ebp]
  006f4	8b 55 ac	 mov	 edx, DWORD PTR _route_formation_types_ptr$[ebp]
  006f7	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  006fa	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1848 : 
; 1849 : 		specified_route->next = last_specified_node;

  006fd	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00700	8b 4d f0	 mov	 ecx, DWORD PTR _last_specified_node$[ebp]
  00703	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1850 : 		specified_route->prev = NULL;

  00706	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00709	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 1851 : 
; 1852 : 		if (last_specified_node)

  00710	83 7d f0 00	 cmp	 DWORD PTR _last_specified_node$[ebp], 0
  00714	74 09		 je	 SHORT $LN10@temp_creat

; 1853 : 		{
; 1854 : 
; 1855 : 			last_specified_node->prev = specified_route;

  00716	8b 45 f0	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00719	8b 4d f4	 mov	 ecx, DWORD PTR _specified_route$[ebp]
  0071c	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN10@temp_creat:

; 1856 : 		}
; 1857 : 
; 1858 : 		last_specified_node = specified_route;

  0071f	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00722	89 45 f0	 mov	 DWORD PTR _last_specified_node$[ebp], eax

; 1859 : 	}

  00725	e9 31 ff ff ff	 jmp	 $LN2@temp_creat
$LN3@temp_creat:

; 1860 : 
; 1861 : 	#if DEBUG_MODULE
; 1862 : 	if (debug_flag)
; 1863 : 	{
; 1864 : 	
; 1865 : 		debug_log ("CROUTE:   Route specified =");
; 1866 : 	
; 1867 : 		for (loop = 0; loop < route_length; loop ++)
; 1868 : 		{
; 1869 : 	
; 1870 : 			debug_log ("CROUTE:         Wp %d = %s %s %s [%f, %f, %f]",
; 1871 : 							loop,
; 1872 : 							entity_sub_type_waypoint_names [route_waypoint_types_ptr [loop]],
; 1873 : 							formation_names [route_formation_types_ptr [loop]],
; 1874 : 							((route_dependents_ptr [loop]) ? get_local_entity_string (route_dependents_ptr [loop], STRING_TYPE_FULL_NAME) : "None"),
; 1875 : 							route_points_ptr [loop].x, route_points_ptr [loop].y, route_points_ptr [loop].z);
; 1876 : 		}
; 1877 : 	}
; 1878 : 	#endif
; 1879 : 
; 1880 : 	if (start_point_count > 0)

  0072a	83 7d cc 00	 cmp	 DWORD PTR _start_point_count$[ebp], 0
  0072e	0f 8e 1b 03 00
	00		 jle	 $LN12@temp_creat

; 1881 : 	{
; 1882 : 
; 1883 : 		entity
; 1884 : 			*start_keysite;
; 1885 : 
; 1886 : 		//
; 1887 : 		// Add start waypoint
; 1888 : 		//
; 1889 : 
; 1890 : 		start_keysite = get_local_entity_parent (task_en, LIST_TYPE_UNASSIGNED_TASK);

  00734	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00738	74 0d		 je	 SHORT $LN58@temp_creat
  0073a	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0073d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0073f	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv356[ebp], ecx
  00745	eb 27		 jmp	 SHORT $LN59@temp_creat
$LN58@temp_creat:
  00747	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  0074d	81 c2 c4 00 00
	00		 add	 edx, 196		; 000000c4H
  00753	52		 push	 edx
  00754	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00759	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0075e	50		 push	 eax
  0075f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00764	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv356[ebp], 0
$LN59@temp_creat:
  0076e	b9 01 00 00 00	 mov	 ecx, 1
  00773	85 c9		 test	 ecx, ecx
  00775	74 0c		 je	 SHORT $LN60@temp_creat
  00777	c7 85 60 ff ff
	ff 28 00 00 00	 mov	 DWORD PTR tv364[ebp], 40 ; 00000028H
  00781	eb 27		 jmp	 SHORT $LN61@temp_creat
$LN60@temp_creat:
  00783	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00789	81 c2 c4 00 00
	00		 add	 edx, 196		; 000000c4H
  0078f	52		 push	 edx
  00790	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00795	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0079a	50		 push	 eax
  0079b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007a0	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv364[ebp], 0
$LN61@temp_creat:
  007aa	6a 28		 push	 40			; 00000028H
  007ac	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  007af	51		 push	 ecx
  007b0	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv356[ebp], 180
  007ba	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv364[ebp]
  007c0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  007c7	ff d1		 call	 ecx
  007c9	89 45 a8	 mov	 DWORD PTR _start_keysite$1[ebp], eax

; 1891 : 	
; 1892 : 		start = get_local_entity_vec3d_ptr (start_keysite, VEC3D_TYPE_POSITION);

  007cc	83 7d a8 00	 cmp	 DWORD PTR _start_keysite$1[ebp], 0
  007d0	74 0d		 je	 SHORT $LN62@temp_creat
  007d2	8b 45 a8	 mov	 eax, DWORD PTR _start_keysite$1[ebp]
  007d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  007d7	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv376[ebp], ecx
  007dd	eb 27		 jmp	 SHORT $LN63@temp_creat
$LN62@temp_creat:
  007df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  007e5	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  007eb	52		 push	 edx
  007ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  007f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007f6	50		 push	 eax
  007f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007fc	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv376[ebp], 0
$LN63@temp_creat:
  00806	b9 01 00 00 00	 mov	 ecx, 1
  0080b	85 c9		 test	 ecx, ecx
  0080d	74 0c		 je	 SHORT $LN64@temp_creat
  0080f	c7 85 60 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv384[ebp], 8
  00819	eb 27		 jmp	 SHORT $LN65@temp_creat
$LN64@temp_creat:
  0081b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00821	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  00827	52		 push	 edx
  00828	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0082d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00832	50		 push	 eax
  00833	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00838	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv384[ebp], 0
$LN65@temp_creat:
  00842	6a 08		 push	 8
  00844	8b 4d a8	 mov	 ecx, DWORD PTR _start_keysite$1[ebp]
  00847	51		 push	 ecx
  00848	6b 95 64 ff ff
	ff 60		 imul	 edx, DWORD PTR tv376[ebp], 96
  0084f	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv384[ebp]
  00855	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0085c	ff d1		 call	 ecx
  0085e	89 45 e0	 mov	 DWORD PTR _start$[ebp], eax

; 1893 : 
; 1894 : 		new_node = (route_node *) malloc_fast_mem (sizeof (route_node));

  00861	6a 20		 push	 32			; 00000020H
  00863	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00868	89 45 fc	 mov	 DWORD PTR _new_node$[ebp], eax

; 1895 : 
; 1896 : 		// position
; 1897 : 		new_node->position.x = ceil (start->x);

  0086b	8b 45 e0	 mov	 eax, DWORD PTR _start$[ebp]
  0086e	51		 push	 ecx
  0086f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00873	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00878	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  0087d	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  00880	d9 59 0c	 fstp	 DWORD PTR [ecx+12]

; 1898 : 		new_node->position.y = ceil (start->y);

  00883	8b 45 e0	 mov	 eax, DWORD PTR _start$[ebp]
  00886	51		 push	 ecx
  00887	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0088c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00891	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00896	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  00899	d9 59 10	 fstp	 DWORD PTR [ecx+16]

; 1899 : 		new_node->position.z = ceil (start->z);

  0089c	8b 45 e0	 mov	 eax, DWORD PTR _start$[ebp]
  0089f	51		 push	 ecx
  008a0	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  008a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008aa	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  008af	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  008b2	d9 59 14	 fstp	 DWORD PTR [ecx+20]

; 1900 : 
; 1901 : 		// dependent
; 1902 : 		new_node->dependent = NULL;

  008b5	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  008b8	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 1903 : 
; 1904 : 		// waypoint_type
; 1905 : 		new_node->type = ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION;

  008bf	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  008c2	c7 00 11 00 00
	00		 mov	 DWORD PTR [eax], 17	; 00000011H

; 1906 : 
; 1907 : 		// formation_type
; 1908 : 		new_node->formation = FORMATION_ROW_LEFT;

  008c8	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  008cb	c7 40 04 02 00
	00 00		 mov	 DWORD PTR [eax+4], 2

; 1909 : 
; 1910 : 		new_node->next = specified_route;

  008d2	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  008d5	8b 4d f4	 mov	 ecx, DWORD PTR _specified_route$[ebp]
  008d8	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1911 : 		new_node->prev = NULL;

  008db	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  008de	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 1912 : 
; 1913 : 		specified_route->prev = new_node;

  008e5	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  008e8	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  008eb	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1914 : 
; 1915 : 		specified_route = new_node;

  008ee	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  008f1	89 45 f4	 mov	 DWORD PTR _specified_route$[ebp], eax

; 1916 : 	
; 1917 : 		#if DEBUG_MODULE
; 1918 : 		if (debug_flag)
; 1919 : 		{
; 1920 : 	
; 1921 : 			debug_log ("CROUTE:     Adding START waypoint at [%f, %f, %f]", new_node->position.x, new_node->position.y, new_node->position.z);
; 1922 : 		}
; 1923 : 		#endif
; 1924 : 
; 1925 : 		if (return_keysite)

  008f4	83 7d 10 00	 cmp	 DWORD PTR _return_keysite$[ebp], 0
  008f8	0f 84 51 01 00
	00		 je	 $LN12@temp_creat

; 1926 : 		{
; 1927 : 		
; 1928 : 			stop = get_local_entity_vec3d_ptr (return_keysite, VEC3D_TYPE_POSITION);

  008fe	83 7d 10 00	 cmp	 DWORD PTR _return_keysite$[ebp], 0
  00902	74 0d		 je	 SHORT $LN66@temp_creat
  00904	8b 45 10	 mov	 eax, DWORD PTR _return_keysite$[ebp]
  00907	8b 08		 mov	 ecx, DWORD PTR [eax]
  00909	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv420[ebp], ecx
  0090f	eb 27		 jmp	 SHORT $LN67@temp_creat
$LN66@temp_creat:
  00911	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00917	81 c2 ea 00 00
	00		 add	 edx, 234		; 000000eaH
  0091d	52		 push	 edx
  0091e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00923	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00928	50		 push	 eax
  00929	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0092e	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv420[ebp], 0
$LN67@temp_creat:
  00938	b9 01 00 00 00	 mov	 ecx, 1
  0093d	85 c9		 test	 ecx, ecx
  0093f	74 0c		 je	 SHORT $LN68@temp_creat
  00941	c7 85 60 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv428[ebp], 8
  0094b	eb 27		 jmp	 SHORT $LN69@temp_creat
$LN68@temp_creat:
  0094d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z@4JA
  00953	81 c2 ea 00 00
	00		 add	 edx, 234		; 000000eaH
  00959	52		 push	 edx
  0095a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0095f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00964	50		 push	 eax
  00965	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0096a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv428[ebp], 0
$LN69@temp_creat:
  00974	6a 08		 push	 8
  00976	8b 4d 10	 mov	 ecx, DWORD PTR _return_keysite$[ebp]
  00979	51		 push	 ecx
  0097a	6b 95 64 ff ff
	ff 60		 imul	 edx, DWORD PTR tv420[ebp], 96
  00981	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv428[ebp]
  00987	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0098e	ff d1		 call	 ecx
  00990	89 45 e4	 mov	 DWORD PTR _stop$[ebp], eax

; 1929 : 	
; 1930 : 			landing_entity = get_local_entity_landing_entity (return_keysite, landing_type);

  00993	8b 45 e8	 mov	 eax, DWORD PTR _landing_type$[ebp]
  00996	50		 push	 eax
  00997	8b 4d 10	 mov	 ecx, DWORD PTR _return_keysite$[ebp]
  0099a	51		 push	 ecx
  0099b	e8 00 00 00 00	 call	 ?get_local_entity_landing_entity@@YGPAUENTITY@@PAU1@H@Z ; get_local_entity_landing_entity
  009a0	89 45 b8	 mov	 DWORD PTR _landing_entity$[ebp], eax

; 1931 : 	
; 1932 :   			//
; 1933 : 			// add land waypoint
; 1934 :   			//
; 1935 : 
; 1936 : 			new_node = (route_node *) malloc_fast_mem (sizeof (route_node));

  009a3	6a 20		 push	 32			; 00000020H
  009a5	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  009aa	89 45 fc	 mov	 DWORD PTR _new_node$[ebp], eax

; 1937 : 
; 1938 : 			// position
; 1939 : 			new_node->position.x = ceil (stop->x);

  009ad	8b 45 e4	 mov	 eax, DWORD PTR _stop$[ebp]
  009b0	51		 push	 ecx
  009b1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  009b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ba	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  009bf	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  009c2	d9 59 0c	 fstp	 DWORD PTR [ecx+12]

; 1940 : 			new_node->position.y = ceil (stop->y);

  009c5	8b 45 e4	 mov	 eax, DWORD PTR _stop$[ebp]
  009c8	51		 push	 ecx
  009c9	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  009ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009d3	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  009d8	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  009db	d9 59 10	 fstp	 DWORD PTR [ecx+16]

; 1941 : 			new_node->position.z = ceil (stop->z);

  009de	8b 45 e4	 mov	 eax, DWORD PTR _stop$[ebp]
  009e1	51		 push	 ecx
  009e2	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  009e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ec	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  009f1	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  009f4	d9 59 14	 fstp	 DWORD PTR [ecx+20]

; 1942 : 
; 1943 : 			// dependent
; 1944 : 			new_node->dependent = return_keysite;

  009f7	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  009fa	8b 4d 10	 mov	 ecx, DWORD PTR _return_keysite$[ebp]
  009fd	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1945 : 
; 1946 : 			// waypoint_type
; 1947 : 			new_node->type = ENTITY_SUB_TYPE_WAYPOINT_LAND;

  00a00	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00a03	c7 00 0d 00 00
	00		 mov	 DWORD PTR [eax], 13	; 0000000dH

; 1948 : 
; 1949 : 			// formation_type
; 1950 : 			new_node->formation = FORMATION_ROW_LEFT;

  00a09	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00a0c	c7 40 04 02 00
	00 00		 mov	 DWORD PTR [eax+4], 2

; 1951 : 
; 1952 : 			last_specified_node = specified_route;

  00a13	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a16	89 45 f0	 mov	 DWORD PTR _last_specified_node$[ebp], eax
$LN5@temp_creat:

; 1953 : 
; 1954 : 			while (last_specified_node->next)

  00a19	8b 45 f0	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00a1c	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00a20	74 0b		 je	 SHORT $LN6@temp_creat

; 1955 : 			{
; 1956 : 
; 1957 : 				last_specified_node = last_specified_node->next;

  00a22	8b 45 f0	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00a25	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00a28	89 4d f0	 mov	 DWORD PTR _last_specified_node$[ebp], ecx

; 1958 : 			}

  00a2b	eb ec		 jmp	 SHORT $LN5@temp_creat
$LN6@temp_creat:

; 1959 : 
; 1960 : 			new_node->prev = last_specified_node;

  00a2d	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00a30	8b 4d f0	 mov	 ecx, DWORD PTR _last_specified_node$[ebp]
  00a33	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1961 : 			new_node->next = NULL;

  00a36	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00a39	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 1962 : 
; 1963 : 			last_specified_node->next = new_node;

  00a40	8b 45 f0	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00a43	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  00a46	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1964 : 
; 1965 : 			last_specified_node = new_node;

  00a49	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00a4c	89 45 f0	 mov	 DWORD PTR _last_specified_node$[ebp], eax
$LN12@temp_creat:

; 1966 : 	
; 1967 : 			#if DEBUG_MODULE
; 1968 : 			if (debug_flag)
; 1969 : 			{
; 1970 : 	
; 1971 : 				debug_log ("CROUTE:     Adding LAND waypoint at [%f, %f, %f] keysite %s (%d)",
; 1972 : 							new_node->position.x, new_node->position.y, new_node->position.z,
; 1973 : 							get_local_entity_string (return_keysite, STRING_TYPE_FULL_NAME), get_local_entity_index (return_keysite));
; 1974 : 	
; 1975 : 			}
; 1976 : 			#endif
; 1977 : 		}
; 1978 : 	}
; 1979 : 
; 1980 : 	//////////////////////////////////////////////////////////////////
; 1981 : 	//
; 1982 : 	// Generate route
; 1983 : 	//
; 1984 : 	//////////////////////////////////////////////////////////////////
; 1985 : 
; 1986 : 	if (generate_route)

  00a4f	83 7d d0 00	 cmp	 DWORD PTR _generate_route$[ebp], 0
  00a53	74 30		 je	 SHORT $LN13@temp_creat

; 1987 : 	{
; 1988 : 	
; 1989 : 		//
; 1990 : 		// build route
; 1991 : 		//
; 1992 : 	
; 1993 : 		if (!generate_biased_vec3d_route (specified_route, &new_route, side, movement_type))

  00a55	8b 45 ec	 mov	 eax, DWORD PTR _movement_type$[ebp]
  00a58	50		 push	 eax
  00a59	8b 4d c4	 mov	 ecx, DWORD PTR _side$[ebp]
  00a5c	51		 push	 ecx
  00a5d	8d 55 f8	 lea	 edx, DWORD PTR _new_route$[ebp]
  00a60	52		 push	 edx
  00a61	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a64	50		 push	 eax
  00a65	e8 00 00 00 00	 call	 ?generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU1@HW4MOVEMENT_TYPES@@@Z ; generate_biased_vec3d_route
  00a6a	85 c0		 test	 eax, eax
  00a6c	75 15		 jne	 SHORT $LN15@temp_creat

; 1994 : 		{
; 1995 : 	
; 1996 : 			#if DEBUG_MODULE
; 1997 : 			if (debug_flag)
; 1998 : 			{
; 1999 : 		
; 2000 : 				debug_log ("CROUTE:     ***** Cannot create route *****");
; 2001 : 			
; 2002 : 				debug_log ("CROUTE: ===================================================================================");
; 2003 : 		
; 2004 : 			}
; 2005 : 			#endif
; 2006 : 
; 2007 : 			destroy_fast_route (specified_route);

  00a6e	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a71	50		 push	 eax
  00a72	e8 00 00 00 00	 call	 ?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z ; destroy_fast_route

; 2008 : 	
; 2009 : 			// restore stack attirbutes
; 2010 : 
; 2011 : 			set_force_local_entity_create_stack_attributes (create_stack_attributes);

  00a77	8b 45 c8	 mov	 eax, DWORD PTR _create_stack_attributes$[ebp]
  00a7a	a3 00 00 00 00	 mov	 DWORD PTR ?force_local_entity_create_stack_attributes@@3HA, eax ; force_local_entity_create_stack_attributes

; 2012 : 		
; 2013 : 			return FALSE;

  00a7f	33 c0		 xor	 eax, eax
  00a81	eb 24		 jmp	 SHORT $LN1@temp_creat
$LN15@temp_creat:

; 2014 : 		}
; 2015 : 	}
; 2016 : 	else

  00a83	eb 06		 jmp	 SHORT $LN14@temp_creat
$LN13@temp_creat:

; 2017 : 	{
; 2018 : 
; 2019 : 		new_route = specified_route;

  00a85	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a88	89 45 f8	 mov	 DWORD PTR _new_route$[ebp], eax
$LN14@temp_creat:

; 2020 : 	}
; 2021 : 
; 2022 : 	//////////////////////////////////////////////////////////////////
; 2023 : 	//
; 2024 : 	// Tidy up
; 2025 : 	//
; 2026 : 	//////////////////////////////////////////////////////////////////
; 2027 : 
; 2028 : 	// free memory
; 2029 : 
; 2030 : 	if (new_route != specified_route)

  00a8b	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
  00a8e	3b 45 f4	 cmp	 eax, DWORD PTR _specified_route$[ebp]
  00a91	74 09		 je	 SHORT $LN16@temp_creat

; 2031 : 	{
; 2032 : 
; 2033 : 		destroy_fast_route (specified_route);

  00a93	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a96	50		 push	 eax
  00a97	e8 00 00 00 00	 call	 ?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z ; destroy_fast_route
$LN16@temp_creat:

; 2034 : 	}
; 2035 : 
; 2036 : 	// restore stack attirbutes
; 2037 : 
; 2038 : 	set_force_local_entity_create_stack_attributes (create_stack_attributes);

  00a9c	8b 45 c8	 mov	 eax, DWORD PTR _create_stack_attributes$[ebp]
  00a9f	a3 00 00 00 00	 mov	 DWORD PTR ?force_local_entity_create_stack_attributes@@3HA, eax ; force_local_entity_create_stack_attributes

; 2039 : 
; 2040 : 	return new_route;

  00aa4	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
$LN1@temp_creat:

; 2041 : }

  00aa7	5f		 pop	 edi
  00aa8	5e		 pop	 esi
  00aa9	5b		 pop	 ebx
  00aaa	8b e5		 mov	 esp, ebp
  00aac	5d		 pop	 ebp
  00aad	c2 14 00	 ret	 20			; 00000014H
?temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z ENDP ; temp_create_generic_waypoint_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z
_TEXT	SEGMENT
_destroy_node$ = -4					; size = 4
_route$ = 8						; size = 4
?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z PROC		; destroy_fast_route, COMDAT

; 1673 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@destroy_fa:

; 1674 : 
; 1675 : 	route_node
; 1676 : 		*destroy_node;
; 1677 : 		
; 1678 : 	while (route)

  00009	83 7d 08 00	 cmp	 DWORD PTR _route$[ebp], 0
  0000d	74 1a		 je	 SHORT $LN1@destroy_fa

; 1679 : 	{
; 1680 : 
; 1681 : 		destroy_node = route;

  0000f	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR _destroy_node$[ebp], eax

; 1682 : 
; 1683 : 		route = route->next;

  00015	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  00018	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001b	89 4d 08	 mov	 DWORD PTR _route$[ebp], ecx

; 1684 : 
; 1685 : 		free_mem (destroy_node);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _destroy_node$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 1686 : 	}

  00027	eb e0		 jmp	 SHORT $LN2@destroy_fa
$LN1@destroy_fa:

; 1687 : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z ENDP		; destroy_fast_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU1@HW4MOVEMENT_TYPES@@@Z
_TEXT	SEGMENT
_destroy_node$1 = -24					; size = 4
_next_node$ = -20					; size = 4
_this_node$ = -16					; size = 4
_route_end$ = -12					; size = 4
_route_start$ = -8					; size = 4
_node_count$ = -4					; size = 4
_points$ = 8						; size = 4
_route$ = 12						; size = 4
_side$ = 16						; size = 4
_movement_type$ = 20					; size = 4
?generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU1@HW4MOVEMENT_TYPES@@@Z PROC ; generate_biased_vec3d_route, COMDAT

; 1131 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1132 : 
; 1133 : 	int
; 1134 : 		node_count;
; 1135 : 
; 1136 : 	route_node
; 1137 : 		*route_start,
; 1138 : 		*route_end,
; 1139 : 		*this_node,
; 1140 : 		*next_node;
; 1141 : 
; 1142 : 	route_start = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _route_start$[ebp], 0

; 1143 : 
; 1144 : 	node_count = 0;

  00010	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _node_count$[ebp], 0

; 1145 : 
; 1146 : 	best_point_terrain_elevations = (float *) malloc_fast_mem (sizeof (float) * (route_biasing_database [movement_type].num_route_samples + 1));

  00017	6b 45 14 1c	 imul	 eax, DWORD PTR _movement_type$[ebp], 28
  0001b	f3 0f 10 80 14
	00 00 00	 movss	 xmm0, DWORD PTR ?route_biasing_database@@3PAUROUTE_BIASING_DATABASE_TYPE@@A[eax+20]
  00023	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0002b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  00033	e8 00 00 00 00	 call	 __ftoui3
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0003e	a3 00 00 00 00	 mov	 DWORD PTR ?best_point_terrain_elevations@@3PAMA, eax ; best_point_terrain_elevations

; 1147 : 
; 1148 : 	this_node = points;

  00043	8b 45 08	 mov	 eax, DWORD PTR _points$[ebp]
  00046	89 45 f0	 mov	 DWORD PTR _this_node$[ebp], eax

; 1149 : 	next_node = this_node->next;

  00049	8b 45 f0	 mov	 eax, DWORD PTR _this_node$[ebp]
  0004c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0004f	89 4d ec	 mov	 DWORD PTR _next_node$[ebp], ecx
$LN2@generate_b:

; 1150 : 
; 1151 : 	while (next_node)

  00052	83 7d ec 00	 cmp	 DWORD PTR _next_node$[ebp], 0
  00056	0f 84 60 01 00
	00		 je	 $LN3@generate_b

; 1152 : 	{
; 1153 : 
; 1154 : 		fast_route = create_route (&this_node->position, &next_node->position, (entity_sides) side, movement_type);

  0005c	8b 45 14	 mov	 eax, DWORD PTR _movement_type$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 10	 mov	 ecx, DWORD PTR _side$[ebp]
  00063	51		 push	 ecx
  00064	8b 55 ec	 mov	 edx, DWORD PTR _next_node$[ebp]
  00067	83 c2 0c	 add	 edx, 12			; 0000000cH
  0006a	52		 push	 edx
  0006b	8b 45 f0	 mov	 eax, DWORD PTR _this_node$[ebp]
  0006e	83 c0 0c	 add	 eax, 12			; 0000000cH
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?create_route@@YGPAUROUTE_NODE@@PAUVEC3D@@0W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; create_route
  00077	a3 00 00 00 00	 mov	 DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A, eax ; fast_route

; 1155 : 
; 1156 : 		second_past_route (fast_route, (entity_sides) side, movement_type);

  0007c	8b 45 14	 mov	 eax, DWORD PTR _movement_type$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d 10	 mov	 ecx, DWORD PTR _side$[ebp]
  00083	51		 push	 ecx
  00084	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  0008a	52		 push	 edx
  0008b	e8 00 00 00 00	 call	 ?second_past_route@@YGXPAUROUTE_NODE@@W4ENTITY_SIDES@@W4MOVEMENT_TYPES@@@Z ; second_past_route

; 1157 : 	
; 1158 : 		optimise_route (fast_route, movement_type);

  00090	8b 45 14	 mov	 eax, DWORD PTR _movement_type$[ebp]
  00093	50		 push	 eax
  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ?optimise_route@@YGXPAUROUTE_NODE@@W4MOVEMENT_TYPES@@@Z ; optimise_route

; 1159 : 
; 1160 : 		// skip start of route if its not the first iteration
; 1161 : 		// this avoids putting 2 waypoints on top of each other...
; 1162 : 		// ie. end of one route and start of next
; 1163 : 		if (node_count > 0)

  000a0	83 7d fc 00	 cmp	 DWORD PTR _node_count$[ebp], 0
  000a4	0f 8e a3 00 00
	00		 jle	 $LN10@generate_b

; 1164 : 		{
; 1165 : 
; 1166 : 			route_node
; 1167 : 				*destroy_node;
; 1168 : 	
; 1169 : 			destroy_node = fast_route;

  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  000af	89 45 e8	 mov	 DWORD PTR _destroy_node$1[ebp], eax

; 1170 : 			fast_route = fast_route->next;

  000b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  000b7	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ba	89 0d 00 00 00
	00		 mov	 DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A, ecx ; fast_route

; 1171 : 			fast_route->prev = NULL;

  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  000c5	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 1172 : 			free_mem (destroy_node);

  000cc	8b 45 e8	 mov	 eax, DWORD PTR _destroy_node$1[ebp]
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 1173 : 
; 1174 : 			ASSERT (route_start);

  000d5	83 7d f8 00	 cmp	 DWORD PTR _route_start$[ebp], 0
  000d9	75 18		 jne	 SHORT $LN12@generate_b
  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU2@HW4MOVEMENT_TYPES@@@Z@4JA
  000e0	83 c0 2b	 add	 eax, 43			; 0000002bH
  000e3	50		 push	 eax
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GBJGAGEL@route_start@
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@generate_b:

; 1175 : 
; 1176 : 			// link into list
; 1177 : 
; 1178 : 			route_end = route_start;

  000f3	8b 45 f8	 mov	 eax, DWORD PTR _route_start$[ebp]
  000f6	89 45 f4	 mov	 DWORD PTR _route_end$[ebp], eax
$LN4@generate_b:

; 1179 : 
; 1180 : 			while (route_end->next)

  000f9	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  000fc	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00100	74 0b		 je	 SHORT $LN5@generate_b

; 1181 : 			{
; 1182 : 
; 1183 : 				route_end = route_end->next;

  00102	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00105	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00108	89 4d f4	 mov	 DWORD PTR _route_end$[ebp], ecx

; 1184 : 			}

  0010b	eb ec		 jmp	 SHORT $LN4@generate_b
$LN5@generate_b:

; 1185 : 
; 1186 : 			route_end->next = fast_route;

  0010d	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00110	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  00116	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1187 : 
; 1188 : 			// set last waypoint type (of sub_route)
; 1189 : 
; 1190 : 			route_end = fast_route;

  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  0011e	89 45 f4	 mov	 DWORD PTR _route_end$[ebp], eax
$LN6@generate_b:

; 1191 : 
; 1192 : 			while (route_end->next)

  00121	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00124	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00128	74 0b		 je	 SHORT $LN7@generate_b

; 1193 : 			{
; 1194 : 
; 1195 : 				route_end = route_end->next;

  0012a	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  0012d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00130	89 4d f4	 mov	 DWORD PTR _route_end$[ebp], ecx

; 1196 : 			}

  00133	eb ec		 jmp	 SHORT $LN6@generate_b
$LN7@generate_b:

; 1197 : 
; 1198 : 			route_end->type = next_node->type;

  00135	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00138	8b 4d ec	 mov	 ecx, DWORD PTR _next_node$[ebp]
  0013b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013d	89 10		 mov	 DWORD PTR [eax], edx

; 1199 : 			route_end->formation = next_node->formation;

  0013f	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00142	8b 4d ec	 mov	 ecx, DWORD PTR _next_node$[ebp]
  00145	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00148	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1200 : 		}
; 1201 : 		else

  0014b	eb 52		 jmp	 SHORT $LN11@generate_b
$LN10@generate_b:

; 1202 : 		{
; 1203 : 
; 1204 : 			// set 1st waypoint type
; 1205 : 			fast_route->type = this_node->type;

  0014d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  00152	8b 4d f0	 mov	 ecx, DWORD PTR _this_node$[ebp]
  00155	8b 11		 mov	 edx, DWORD PTR [ecx]
  00157	89 10		 mov	 DWORD PTR [eax], edx

; 1206 : 			fast_route->formation = this_node->formation;

  00159	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  0015e	8b 4d f0	 mov	 ecx, DWORD PTR _this_node$[ebp]
  00161	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00164	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1207 : 
; 1208 : 			route_start = fast_route;

  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  0016c	89 45 f8	 mov	 DWORD PTR _route_start$[ebp], eax

; 1209 : 
; 1210 : 			// set last waypoint type (of this sub_route)
; 1211 : 			route_end = route_start;

  0016f	8b 45 f8	 mov	 eax, DWORD PTR _route_start$[ebp]
  00172	89 45 f4	 mov	 DWORD PTR _route_end$[ebp], eax
$LN8@generate_b:

; 1212 : 
; 1213 : 			while (route_end->next)

  00175	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00178	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0017c	74 0b		 je	 SHORT $LN9@generate_b

; 1214 : 			{
; 1215 : 
; 1216 : 				route_end = route_end->next;

  0017e	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00181	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00184	89 4d f4	 mov	 DWORD PTR _route_end$[ebp], ecx

; 1217 : 			}

  00187	eb ec		 jmp	 SHORT $LN8@generate_b
$LN9@generate_b:

; 1218 : 
; 1219 : 			route_end->type = next_node->type;

  00189	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  0018c	8b 4d ec	 mov	 ecx, DWORD PTR _next_node$[ebp]
  0018f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00191	89 10		 mov	 DWORD PTR [eax], edx

; 1220 : 			route_end->formation = next_node->formation;

  00193	8b 45 f4	 mov	 eax, DWORD PTR _route_end$[ebp]
  00196	8b 4d ec	 mov	 ecx, DWORD PTR _next_node$[ebp]
  00199	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0019c	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN11@generate_b:

; 1221 : 		}
; 1222 : 
; 1223 : 		node_count ++;

  0019f	8b 45 fc	 mov	 eax, DWORD PTR _node_count$[ebp]
  001a2	83 c0 01	 add	 eax, 1
  001a5	89 45 fc	 mov	 DWORD PTR _node_count$[ebp], eax

; 1224 : 
; 1225 : 		this_node = next_node;

  001a8	8b 45 ec	 mov	 eax, DWORD PTR _next_node$[ebp]
  001ab	89 45 f0	 mov	 DWORD PTR _this_node$[ebp], eax

; 1226 : 		next_node = next_node->next;

  001ae	8b 45 ec	 mov	 eax, DWORD PTR _next_node$[ebp]
  001b1	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001b4	89 4d ec	 mov	 DWORD PTR _next_node$[ebp], ecx

; 1227 : 	}

  001b7	e9 96 fe ff ff	 jmp	 $LN2@generate_b
$LN3@generate_b:

; 1228 : 
; 1229 : 	free_mem (best_point_terrain_elevations);

  001bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?best_point_terrain_elevations@@3PAMA ; best_point_terrain_elevations
  001c1	50		 push	 eax
  001c2	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 1230 : 
; 1231 : 	*route = route_start;

  001c7	8b 45 0c	 mov	 eax, DWORD PTR _route$[ebp]
  001ca	8b 4d f8	 mov	 ecx, DWORD PTR _route_start$[ebp]
  001cd	89 08		 mov	 DWORD PTR [eax], ecx

; 1232 : 
; 1233 : 	return TRUE;

  001cf	b8 01 00 00 00	 mov	 eax, 1

; 1234 : }

  001d4	5f		 pop	 edi
  001d5	5e		 pop	 esi
  001d6	5b		 pop	 ebx
  001d7	8b e5		 mov	 esp, ebp
  001d9	5d		 pop	 ebp
  001da	c2 10 00	 ret	 16			; 00000010H
?generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU1@HW4MOVEMENT_TYPES@@@Z ENDP ; generate_biased_vec3d_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?initialise_route_generator@@YGXXZ
_TEXT	SEGMENT
_destroy_node$ = -4					; size = 4
?initialise_route_generator@@YGXXZ PROC			; initialise_route_generator, COMDAT

; 1108 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1109 : 
; 1110 : 	route_node
; 1111 : 		*destroy_node;
; 1112 : 
; 1113 : 	destroy_node = fast_route;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  0000e	89 45 fc	 mov	 DWORD PTR _destroy_node$[ebp], eax
$LN2@initialise:

; 1114 : 
; 1115 : 	while (fast_route)

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A, 0 ; fast_route
  00018	74 19		 je	 SHORT $LN3@initialise

; 1116 : 	{
; 1117 : 
; 1118 : 		free_mem (destroy_node);

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _destroy_node$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 1119 : 
; 1120 : 		fast_route = fast_route->next;

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A ; fast_route
  00028	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0002b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A, ecx ; fast_route

; 1121 : 	}

  00031	eb de		 jmp	 SHORT $LN2@initialise
$LN3@initialise:

; 1122 : 
; 1123 : 	fast_route = NULL;

  00033	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fast_route@@3PAUROUTE_NODE@@A, 0 ; fast_route

; 1124 : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?initialise_route_generator@@YGXXZ ENDP			; initialise_route_generator
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?generate_route_check_sum@@YGEPAUROUTE_NODE@@@Z
_TEXT	SEGMENT
_check_sum$ = -1					; size = 1
_route$ = 8						; size = 4
?generate_route_check_sum@@YGEPAUROUTE_NODE@@@Z PROC	; generate_route_check_sum, COMDAT

; 1039 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1040 : 
; 1041 : 	unsigned char
; 1042 : 		check_sum;
; 1043 : 
; 1044 : 	check_sum = 0;

  00009	c6 45 ff 00	 mov	 BYTE PTR _check_sum$[ebp], 0

; 1045 : 
; 1046 : 	#if DEBUG_MODULE
; 1047 : 	if (debug_flag)
; 1048 : 	{
; 1049 : 
; 1050 : 		debug_log ("CROUTE: Generating checksum");
; 1051 : 	}
; 1052 : 	#endif
; 1053 : 
; 1054 : 	// dont checksum start and end points because entities may be in slightly different positions due to pack/unpack
; 1055 : 
; 1056 : 	route = route->next;

  0000d	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  00010	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00013	89 4d 08	 mov	 DWORD PTR _route$[ebp], ecx

; 1057 : 
; 1058 : 	if (route)

  00016	83 7d 08 00	 cmp	 DWORD PTR _route$[ebp], 0
  0001a	74 47		 je	 SHORT $LN3@generate_r
$LN2@generate_r:

; 1059 : 	{
; 1060 : 	
; 1061 : 		while (route->next)

  0001c	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  0001f	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00023	74 3e		 je	 SHORT $LN3@generate_r

; 1062 : 		{
; 1063 : 	
; 1064 : 			check_sum += (int) route->position.x;

  00025	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  00028	f3 0f 2c 48 0c	 cvttss2si ecx, DWORD PTR [eax+12]
  0002d	0f b6 55 ff	 movzx	 edx, BYTE PTR _check_sum$[ebp]
  00031	03 d1		 add	 edx, ecx
  00033	88 55 ff	 mov	 BYTE PTR _check_sum$[ebp], dl

; 1065 : 			#if DEBUG_MODULE
; 1066 : 			if (debug_flag)
; 1067 : 			{
; 1068 : 				debug_log ("CROUTE:    after x %f = check_sum = %d", route->position.x, check_sum);
; 1069 : 			}
; 1070 : 			#endif
; 1071 : 
; 1072 : 			check_sum += (int) route->position.y;

  00036	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  00039	f3 0f 2c 48 10	 cvttss2si ecx, DWORD PTR [eax+16]
  0003e	0f b6 55 ff	 movzx	 edx, BYTE PTR _check_sum$[ebp]
  00042	03 d1		 add	 edx, ecx
  00044	88 55 ff	 mov	 BYTE PTR _check_sum$[ebp], dl

; 1073 : 			#if DEBUG_MODULE
; 1074 : 			if (debug_flag)
; 1075 : 			{
; 1076 : 				debug_log ("CROUTE:    after y %f = check_sum = %d", route->position.y, check_sum);
; 1077 : 			}
; 1078 : 			#endif
; 1079 : 
; 1080 : 			check_sum += (int) route->position.z;

  00047	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  0004a	f3 0f 2c 48 14	 cvttss2si ecx, DWORD PTR [eax+20]
  0004f	0f b6 55 ff	 movzx	 edx, BYTE PTR _check_sum$[ebp]
  00053	03 d1		 add	 edx, ecx
  00055	88 55 ff	 mov	 BYTE PTR _check_sum$[ebp], dl

; 1081 : 			#if DEBUG_MODULE
; 1082 : 			if (debug_flag)
; 1083 : 			{
; 1084 : 				debug_log ("CROUTE:    after z %f = check_sum = %d", route->position.z, check_sum);
; 1085 : 			}
; 1086 : 			#endif
; 1087 : 
; 1088 : 			route = route->next;

  00058	8b 45 08	 mov	 eax, DWORD PTR _route$[ebp]
  0005b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0005e	89 4d 08	 mov	 DWORD PTR _route$[ebp], ecx

; 1089 : 		}

  00061	eb b9		 jmp	 SHORT $LN2@generate_r
$LN3@generate_r:

; 1090 : 	}
; 1091 : 
; 1092 : 	#if DEBUG_MODULE
; 1093 : 	if (debug_flag)
; 1094 : 	{
; 1095 : 
; 1096 : 		debug_log ("CROUTE:    checksum %d", check_sum);
; 1097 : 	}
; 1098 : 	#endif
; 1099 : 
; 1100 : 	return check_sum;

  00063	8a 45 ff	 mov	 al, BYTE PTR _check_sum$[ebp]

; 1101 : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?generate_route_check_sum@@YGEPAUROUTE_NODE@@@Z ENDP	; generate_route_check_sum
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\taskgen\croute.c
;	COMDAT ?create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z
_TEXT	SEGMENT
tv1506 = -244						; size = 8
tv658 = -244						; size = 4
tv1520 = -240						; size = 4
tv650 = -240						; size = 4
tv968 = -236						; size = 4
tv947 = -236						; size = 4
tv926 = -236						; size = 4
tv845 = -236						; size = 4
tv823 = -236						; size = 4
tv802 = -236						; size = 4
tv774 = -236						; size = 4
tv732 = -236						; size = 4
tv722 = -236						; size = 4
tv704 = -236						; size = 4
tv637 = -236						; size = 4
tv613 = -236						; size = 4
tv559 = -236						; size = 4
tv484 = -236						; size = 4
tv423 = -236						; size = 4
tv403 = -236						; size = 4
tv383 = -236						; size = 4
tv363 = -236						; size = 4
tv343 = -236						; size = 4
tv319 = -236						; size = 4
tv294 = -236						; size = 4
tv271 = -236						; size = 4
tv248 = -236						; size = 4
tv225 = -236						; size = 4
tv205 = -236						; size = 4
tv185 = -236						; size = 4
tv165 = -236						; size = 4
tv140 = -236						; size = 4
tv86 = -236						; size = 4
tv960 = -232						; size = 4
tv939 = -232						; size = 4
tv918 = -232						; size = 4
tv837 = -232						; size = 4
tv816 = -232						; size = 4
tv794 = -232						; size = 4
tv775 = -232						; size = 4
tv733 = -232						; size = 4
tv723 = -232						; size = 4
tv696 = -232						; size = 4
tv629 = -232						; size = 4
tv606 = -232						; size = 4
tv551 = -232						; size = 4
tv476 = -232						; size = 4
tv415 = -232						; size = 4
tv395 = -232						; size = 4
tv375 = -232						; size = 4
tv355 = -232						; size = 4
tv335 = -232						; size = 4
tv311 = -232						; size = 4
tv286 = -232						; size = 4
tv263 = -232						; size = 4
tv240 = -232						; size = 4
tv217 = -232						; size = 4
tv197 = -232						; size = 4
tv177 = -232						; size = 4
tv157 = -232						; size = 4
tv132 = -232						; size = 4
tv79 = -232						; size = 4
_last_waypoint_pos$1 = -164				; size = 4
_range$2 = -160						; size = 4
_route$3 = -156						; size = 4
_route_formation_types_ptr$ = -152			; size = 4
_route_waypoint_types_ptr$ = -148			; size = 4
_route_dependents_ptr$ = -144				; size = 4
_last_wp$ = -140					; size = 4
_member$ = -136						; size = 4
_wp$ = -132						; size = 4
_terrain_elevation$ = -128				; size = 4
_flight_time$ = -124					; size = 4
_height$ = -120						; size = 4
_mb_vel$ = -116						; size = 4
_side$ = -112						; size = 4
_create_stack_attributes$ = -108			; size = 4
_start_point_count$ = -104				; size = 4
_generate_route$ = -100					; size = 4
_route_length$ = -96					; size = 4
_node_count$ = -92					; size = 4
_check_sum$ = -88					; size = 4
_road_node$ = -84					; size = 4
_index$ = -80						; size = 4
_loop$ = -76						; size = 4
_route_points_ptr$ = -72				; size = 4
_waypoint_pos$ = -68					; size = 4
_start_ptr$ = -64					; size = 4
_stop_ptr$ = -60					; size = 4
_start$ = -56						; size = 12
_stop$ = -44						; size = 12
_landing_type$ = -32					; size = 4
_task_route_type$ = -28					; size = 4
_movement_type$ = -24					; size = 4
_last_specified_node$ = -20				; size = 4
_specified_route_ptr$ = -16				; size = 4
_specified_route$ = -12					; size = 4
_new_route$ = -8					; size = 4
_new_node$ = -4						; size = 4
_group$ = 8						; size = 4
_task_en$ = 12						; size = 4
_return_keysite$ = 16					; size = 4
_client_start$ = 20					; size = 4
_client_stop$ = 24					; size = 4
_waypoint_indices$ = 28					; size = 4
_indices_count$ = 32					; size = 4
?create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z PROC ; create_generic_waypoint_route, COMDAT

; 201  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 202  : 
; 203  : 	route_node
; 204  : 		*new_node,
; 205  : 		*new_route,
; 206  : 		*specified_route,
; 207  : 		*specified_route_ptr,
; 208  : 		*last_specified_node;
; 209  : 
; 210  : 	movement_types
; 211  : 		movement_type;
; 212  : 
; 213  : 	entity_types
; 214  : 		task_route_type;
; 215  : 
; 216  : 	entity_sub_types
; 217  : 		landing_type;
; 218  : 
; 219  : 	vec3d
; 220  : 		stop,
; 221  : 		start,
; 222  : 		*stop_ptr,
; 223  : 		*start_ptr,
; 224  : 		*waypoint_pos,
; 225  : 		*route_points_ptr;
; 226  : 
; 227  : 	int
; 228  : 		loop,
; 229  : 		index,
; 230  : 		road_node,
; 231  : 		check_sum,
; 232  : 		node_count,
; 233  : 		route_length,
; 234  : 		generate_route,
; 235  : 		start_point_count,
; 236  : 		create_stack_attributes;
; 237  : 	
; 238  : 	entity_sides
; 239  : 		side;
; 240  :   	
; 241  : 	float
; 242  : 		mb_vel,
; 243  : 		height,
; 244  : 		flight_time = 0,

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 84	 movss	 DWORD PTR _flight_time$[ebp], xmm0

; 245  : 		terrain_elevation;
; 246  : 
; 247  : 	entity
; 248  : 		*wp,
; 249  : 		*member,
; 250  : 		*last_wp,
; 251  : 		**route_dependents_ptr;
; 252  : 
; 253  : 	entity_sub_types
; 254  : 		*route_waypoint_types_ptr;
; 255  : 
; 256  : 	formation_types
; 257  : 		*route_formation_types_ptr;
; 258  : 
; 259  : 	ASSERT (group);

  00014	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00018	75 18		 jne	 SHORT $LN11@create_gen
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0001f	83 c0 3a	 add	 eax, 58			; 0000003aH
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  0002d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@create_gen:

; 260  : 
; 261  : 	ASSERT (task_en);

  00032	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00036	75 18		 jne	 SHORT $LN12@create_gen
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0003d	83 c0 3c	 add	 eax, 60			; 0000003cH
  00040	50		 push	 eax
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_07NKFOJBII@task_en@
  0004b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@create_gen:

; 262  : 
; 263  : 	#if DEBUG_MODULE
; 264  : 	if (debug_flag)
; 265  : 	{
; 266  : 	
; 267  : 		debug_log ("CROUTE: ===================================================================================");
; 268  : 	
; 269  : 		debug_log ("CROUTE: Creating route for task %s (%d), movement type %s",
; 270  : 						get_local_entity_string (task_en, STRING_TYPE_FULL_NAME),
; 271  : 						get_local_entity_index (task_en),
; 272  : 						movement_names [get_local_entity_int_value (task_en, INT_TYPE_MOVEMENT_TYPE)]);
; 273  : 	
; 274  : 	}
; 275  : 	#endif
; 276  : 
; 277  : 	if (get_local_entity_first_child (task_en, LIST_TYPE_WAYPOINT))

  00050	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00054	74 0d		 je	 SHORT $LN39@create_gen
  00056	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv79[ebp], ecx
  00061	eb 20		 jmp	 SHORT $LN40@create_gen
$LN39@create_gen:
  00063	68 15 01 00 00	 push	 277			; 00000115H
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00079	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN40@create_gen:
  00083	b8 01 00 00 00	 mov	 eax, 1
  00088	85 c0		 test	 eax, eax
  0008a	74 0c		 je	 SHORT $LN41@create_gen
  0008c	c7 85 14 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv86[ebp], 44	; 0000002cH
  00096	eb 20		 jmp	 SHORT $LN42@create_gen
$LN41@create_gen:
  00098	68 15 01 00 00	 push	 277			; 00000115H
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a8	51		 push	 ecx
  000a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ae	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN42@create_gen:
  000b8	6a 2c		 push	 44			; 0000002cH
  000ba	8b 55 0c	 mov	 edx, DWORD PTR _task_en$[ebp]
  000bd	52		 push	 edx
  000be	69 85 18 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv79[ebp], 180
  000c8	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv86[ebp]
  000ce	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  000d5	ff d2		 call	 edx
  000d7	85 c0		 test	 eax, eax
  000d9	74 0a		 je	 SHORT $LN13@create_gen

; 278  : 	{
; 279  : 	
; 280  : 		#if DEBUG_MODULE
; 281  : 		if (debug_flag)
; 282  : 		{
; 283  : 	
; 284  : 			debug_log ("CROUTE:     Task %s already has waypoint route", get_local_entity_string (task_en, STRING_TYPE_FULL_NAME));
; 285  : 			
; 286  : 			debug_log ("CROUTE: ===================================================================================");
; 287  : 	
; 288  : 		}
; 289  : 		#endif
; 290  : 	
; 291  : 		return TRUE;

  000db	b8 01 00 00 00	 mov	 eax, 1
  000e0	e9 08 18 00 00	 jmp	 $LN1@create_gen
$LN13@create_gen:

; 292  : 	}
; 293  : 
; 294  : 	// set stack attirbutes
; 295  : 
; 296  : 	create_stack_attributes = force_local_entity_create_stack_attributes;

  000e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?force_local_entity_create_stack_attributes@@3HA ; force_local_entity_create_stack_attributes
  000ea	89 45 94	 mov	 DWORD PTR _create_stack_attributes$[ebp], eax

; 297  : 
; 298  : 	if (get_comms_data_flow () == COMMS_DATA_FLOW_RX)

  000ed	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A, 1 ; system_comms_data_flow
  000f4	75 0a		 jne	 SHORT $LN14@create_gen

; 299  : 	{
; 300  : 
; 301  : 		set_force_local_entity_create_stack_attributes (TRUE);

  000f6	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?force_local_entity_create_stack_attributes@@3HA, 1 ; force_local_entity_create_stack_attributes
$LN14@create_gen:

; 302  : 	}
; 303  : 	
; 304  : 	//////////////////////////////////////////////////////////////////
; 305  : 	//
; 306  : 	// Sort route generation type
; 307  : 	//
; 308  : 	//////////////////////////////////////////////////////////////////
; 309  : 
; 310  : 	member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  00100	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00104	74 0d		 je	 SHORT $LN43@create_gen
  00106	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  00109	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010b	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv132[ebp], ecx
  00111	eb 24		 jmp	 SHORT $LN44@create_gen
$LN43@create_gen:
  00113	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00119	83 c2 6d	 add	 edx, 109		; 0000006dH
  0011c	52		 push	 edx
  0011d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00122	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012d	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN44@create_gen:
  00137	b9 01 00 00 00	 mov	 ecx, 1
  0013c	85 c9		 test	 ecx, ecx
  0013e	74 0c		 je	 SHORT $LN45@create_gen
  00140	c7 85 14 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv140[ebp], 25 ; 00000019H
  0014a	eb 24		 jmp	 SHORT $LN46@create_gen
$LN45@create_gen:
  0014c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00152	83 c2 6d	 add	 edx, 109		; 0000006dH
  00155	52		 push	 edx
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00166	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN46@create_gen:
  00170	6a 19		 push	 25			; 00000019H
  00172	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  00175	51		 push	 ecx
  00176	69 95 18 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv132[ebp], 180
  00180	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv140[ebp]
  00186	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0018d	ff d1		 call	 ecx
  0018f	89 85 78 ff ff
	ff		 mov	 DWORD PTR _member$[ebp], eax

; 311  : 
; 312  : 	ASSERT (member);

  00195	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _member$[ebp], 0
  0019c	75 18		 jne	 SHORT $LN15@create_gen
  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  001a3	83 c0 6f	 add	 eax, 111		; 0000006fH
  001a6	50		 push	 eax
  001a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ac	68 00 00 00 00	 push	 OFFSET ??_C@_06HDFDANIG@member@
  001b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN15@create_gen:

; 313  : 
; 314  : 	side = (entity_sides) get_local_entity_int_value (group, INT_TYPE_SECTOR_SIDE);

  001b6	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  001ba	74 0d		 je	 SHORT $LN47@create_gen
  001bc	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  001bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c1	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv157[ebp], ecx
  001c7	eb 24		 jmp	 SHORT $LN48@create_gen
$LN47@create_gen:
  001c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  001cf	83 c2 71	 add	 edx, 113		; 00000071H
  001d2	52		 push	 edx
  001d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001dd	50		 push	 eax
  001de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e3	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv157[ebp], 0
$LN48@create_gen:
  001ed	b9 01 00 00 00	 mov	 ecx, 1
  001f2	85 c9		 test	 ecx, ecx
  001f4	74 0c		 je	 SHORT $LN49@create_gen
  001f6	c7 85 14 ff ff
	ff b7 00 00 00	 mov	 DWORD PTR tv165[ebp], 183 ; 000000b7H
  00200	eb 24		 jmp	 SHORT $LN50@create_gen
$LN49@create_gen:
  00202	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00208	83 c2 71	 add	 edx, 113		; 00000071H
  0020b	52		 push	 edx
  0020c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00211	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00216	50		 push	 eax
  00217	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0021c	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv165[ebp], 0
$LN50@create_gen:
  00226	68 b7 00 00 00	 push	 183			; 000000b7H
  0022b	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  0022e	51		 push	 ecx
  0022f	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv157[ebp], 1116
  00239	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv165[ebp]
  0023f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00246	ff d1		 call	 ecx
  00248	89 45 90	 mov	 DWORD PTR _side$[ebp], eax

; 315  : 
; 316  : 	mb_vel = get_local_entity_float_value (member, FLOAT_TYPE_CRUISE_VELOCITY);

  0024b	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _member$[ebp], 0
  00252	74 10		 je	 SHORT $LN51@create_gen
  00254	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _member$[ebp]
  0025a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025c	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv177[ebp], ecx
  00262	eb 24		 jmp	 SHORT $LN52@create_gen
$LN51@create_gen:
  00264	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0026a	83 c2 73	 add	 edx, 115		; 00000073H
  0026d	52		 push	 edx
  0026e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027e	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv177[ebp], 0
$LN52@create_gen:
  00288	b9 01 00 00 00	 mov	 ecx, 1
  0028d	85 c9		 test	 ecx, ecx
  0028f	74 0c		 je	 SHORT $LN53@create_gen
  00291	c7 85 14 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv185[ebp], 25 ; 00000019H
  0029b	eb 24		 jmp	 SHORT $LN54@create_gen
$LN53@create_gen:
  0029d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  002a3	83 c2 73	 add	 edx, 115		; 00000073H
  002a6	52		 push	 edx
  002a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002b1	50		 push	 eax
  002b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b7	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv185[ebp], 0
$LN54@create_gen:
  002c1	6a 19		 push	 25			; 00000019H
  002c3	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _member$[ebp]
  002c9	51		 push	 ecx
  002ca	69 95 18 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv177[ebp], 700
  002d4	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv185[ebp]
  002da	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002e1	ff d1		 call	 ecx
  002e3	d9 5d 8c	 fstp	 DWORD PTR _mb_vel$[ebp]

; 317  : 
; 318  : 	height = get_local_entity_float_value (member, FLOAT_TYPE_CRUISE_ALTITUDE);

  002e6	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _member$[ebp], 0
  002ed	74 10		 je	 SHORT $LN55@create_gen
  002ef	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _member$[ebp]
  002f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f7	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv197[ebp], ecx
  002fd	eb 24		 jmp	 SHORT $LN56@create_gen
$LN55@create_gen:
  002ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00305	83 c2 75	 add	 edx, 117		; 00000075H
  00308	52		 push	 edx
  00309	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00319	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv197[ebp], 0
$LN56@create_gen:
  00323	b9 01 00 00 00	 mov	 ecx, 1
  00328	85 c9		 test	 ecx, ecx
  0032a	74 0c		 je	 SHORT $LN57@create_gen
  0032c	c7 85 14 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR tv205[ebp], 24 ; 00000018H
  00336	eb 24		 jmp	 SHORT $LN58@create_gen
$LN57@create_gen:
  00338	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0033e	83 c2 75	 add	 edx, 117		; 00000075H
  00341	52		 push	 edx
  00342	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00347	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00352	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv205[ebp], 0
$LN58@create_gen:
  0035c	6a 18		 push	 24			; 00000018H
  0035e	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _member$[ebp]
  00364	51		 push	 ecx
  00365	69 95 18 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv197[ebp], 700
  0036f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv205[ebp]
  00375	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0037c	ff d1		 call	 ecx
  0037e	d9 5d 88	 fstp	 DWORD PTR _height$[ebp]

; 319  : 
; 320  : 	movement_type = group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].movement_type;

  00381	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00385	74 0d		 je	 SHORT $LN59@create_gen
  00387	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  0038a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038c	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv217[ebp], ecx
  00392	eb 24		 jmp	 SHORT $LN60@create_gen
$LN59@create_gen:
  00394	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0039a	83 c2 77	 add	 edx, 119		; 00000077H
  0039d	52		 push	 edx
  0039e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a8	50		 push	 eax
  003a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ae	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv217[ebp], 0
$LN60@create_gen:
  003b8	b9 01 00 00 00	 mov	 ecx, 1
  003bd	85 c9		 test	 ecx, ecx
  003bf	74 0c		 je	 SHORT $LN61@create_gen
  003c1	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv225[ebp], 52 ; 00000034H
  003cb	eb 24		 jmp	 SHORT $LN62@create_gen
$LN61@create_gen:
  003cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  003d3	83 c2 77	 add	 edx, 119		; 00000077H
  003d6	52		 push	 edx
  003d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003e1	50		 push	 eax
  003e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e7	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv225[ebp], 0
$LN62@create_gen:
  003f1	6a 34		 push	 52			; 00000034H
  003f3	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  003f6	51		 push	 ecx
  003f7	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv217[ebp], 1116
  00401	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv225[ebp]
  00407	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0040e	ff d1		 call	 ecx
  00410	6b d0 64	 imul	 edx, eax, 100
  00413	8b 82 14 00 00
	00		 mov	 eax, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[edx+20]
  00419	89 45 e8	 mov	 DWORD PTR _movement_type$[ebp], eax

; 321  : 		
; 322  : 	task_route_type = group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].default_entity_type;

  0041c	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00420	74 0d		 je	 SHORT $LN63@create_gen
  00422	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  00425	8b 08		 mov	 ecx, DWORD PTR [eax]
  00427	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv240[ebp], ecx
  0042d	eb 24		 jmp	 SHORT $LN64@create_gen
$LN63@create_gen:
  0042f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00435	83 c2 79	 add	 edx, 121		; 00000079H
  00438	52		 push	 edx
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00443	50		 push	 eax
  00444	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00449	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv240[ebp], 0
$LN64@create_gen:
  00453	b9 01 00 00 00	 mov	 ecx, 1
  00458	85 c9		 test	 ecx, ecx
  0045a	74 0c		 je	 SHORT $LN65@create_gen
  0045c	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv248[ebp], 52 ; 00000034H
  00466	eb 24		 jmp	 SHORT $LN66@create_gen
$LN65@create_gen:
  00468	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0046e	83 c2 79	 add	 edx, 121		; 00000079H
  00471	52		 push	 edx
  00472	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00477	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0047c	50		 push	 eax
  0047d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00482	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp], 0
$LN66@create_gen:
  0048c	6a 34		 push	 52			; 00000034H
  0048e	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  00491	51		 push	 ecx
  00492	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv240[ebp], 1116
  0049c	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv248[ebp]
  004a2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004a9	ff d1		 call	 ecx
  004ab	6b d0 64	 imul	 edx, eax, 100
  004ae	8b 82 1c 00 00
	00		 mov	 eax, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[edx+28]
  004b4	89 45 e4	 mov	 DWORD PTR _task_route_type$[ebp], eax

; 323  : 
; 324  : 	landing_type = group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].default_landing_type;

  004b7	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  004bb	74 0d		 je	 SHORT $LN67@create_gen
  004bd	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  004c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c2	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv263[ebp], ecx
  004c8	eb 24		 jmp	 SHORT $LN68@create_gen
$LN67@create_gen:
  004ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  004d0	83 c2 7b	 add	 edx, 123		; 0000007bH
  004d3	52		 push	 edx
  004d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e4	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv263[ebp], 0
$LN68@create_gen:
  004ee	b9 01 00 00 00	 mov	 ecx, 1
  004f3	85 c9		 test	 ecx, ecx
  004f5	74 0c		 je	 SHORT $LN69@create_gen
  004f7	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv271[ebp], 52 ; 00000034H
  00501	eb 24		 jmp	 SHORT $LN70@create_gen
$LN69@create_gen:
  00503	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00509	83 c2 7b	 add	 edx, 123		; 0000007bH
  0050c	52		 push	 edx
  0050d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00517	50		 push	 eax
  00518	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051d	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv271[ebp], 0
$LN70@create_gen:
  00527	6a 34		 push	 52			; 00000034H
  00529	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  0052c	51		 push	 ecx
  0052d	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv263[ebp], 1116
  00537	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv271[ebp]
  0053d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00544	ff d1		 call	 ecx
  00546	6b d0 64	 imul	 edx, eax, 100
  00549	8b 82 18 00 00
	00		 mov	 eax, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[edx+24]
  0054f	89 45 e0	 mov	 DWORD PTR _landing_type$[ebp], eax

; 325  : 
; 326  : 	generate_route = task_database [get_local_entity_int_value (task_en, INT_TYPE_ENTITY_SUB_TYPE)].task_route_search;

  00552	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00556	74 0d		 je	 SHORT $LN71@create_gen
  00558	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0055b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0055d	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv286[ebp], ecx
  00563	eb 24		 jmp	 SHORT $LN72@create_gen
$LN71@create_gen:
  00565	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0056b	83 c2 7d	 add	 edx, 125		; 0000007dH
  0056e	52		 push	 edx
  0056f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00574	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00579	50		 push	 eax
  0057a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0057f	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv286[ebp], 0
$LN72@create_gen:
  00589	b9 01 00 00 00	 mov	 ecx, 1
  0058e	85 c9		 test	 ecx, ecx
  00590	74 0c		 je	 SHORT $LN73@create_gen
  00592	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv294[ebp], 52 ; 00000034H
  0059c	eb 24		 jmp	 SHORT $LN74@create_gen
$LN73@create_gen:
  0059e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  005a4	83 c2 7d	 add	 edx, 125		; 0000007dH
  005a7	52		 push	 edx
  005a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005b2	50		 push	 eax
  005b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005b8	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv294[ebp], 0
$LN74@create_gen:
  005c2	6a 34		 push	 52			; 00000034H
  005c4	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  005c7	51		 push	 ecx
  005c8	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv286[ebp], 1116
  005d2	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv294[ebp]
  005d8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  005df	ff d1		 call	 ecx
  005e1	6b d0 50	 imul	 edx, eax, 80
  005e4	8b 82 28 00 00
	00		 mov	 eax, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+40]
  005ea	c1 e8 08	 shr	 eax, 8
  005ed	83 e0 01	 and	 eax, 1
  005f0	89 45 9c	 mov	 DWORD PTR _generate_route$[ebp], eax

; 327  : 
; 328  : 	start_point_count = task_database [get_local_entity_int_value (task_en, INT_TYPE_ENTITY_SUB_TYPE)].add_start_waypoint;

  005f3	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  005f7	74 0d		 je	 SHORT $LN75@create_gen
  005f9	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  005fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  005fe	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv311[ebp], ecx
  00604	eb 24		 jmp	 SHORT $LN76@create_gen
$LN75@create_gen:
  00606	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0060c	83 c2 7f	 add	 edx, 127		; 0000007fH
  0060f	52		 push	 edx
  00610	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00615	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0061a	50		 push	 eax
  0061b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00620	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv311[ebp], 0
$LN76@create_gen:
  0062a	b9 01 00 00 00	 mov	 ecx, 1
  0062f	85 c9		 test	 ecx, ecx
  00631	74 0c		 je	 SHORT $LN77@create_gen
  00633	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv319[ebp], 52 ; 00000034H
  0063d	eb 24		 jmp	 SHORT $LN78@create_gen
$LN77@create_gen:
  0063f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00645	83 c2 7f	 add	 edx, 127		; 0000007fH
  00648	52		 push	 edx
  00649	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0064e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00653	50		 push	 eax
  00654	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00659	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv319[ebp], 0
$LN78@create_gen:
  00663	6a 34		 push	 52			; 00000034H
  00665	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00668	51		 push	 ecx
  00669	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv311[ebp], 1116
  00673	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv319[ebp]
  00679	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00680	ff d1		 call	 ecx
  00682	6b d0 50	 imul	 edx, eax, 80
  00685	8b 82 28 00 00
	00		 mov	 eax, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+40]
  0068b	83 e0 01	 and	 eax, 1
  0068e	89 45 98	 mov	 DWORD PTR _start_point_count$[ebp], eax

; 329  : 
; 330  : 	//////////////////////////////////////////////////////////////////
; 331  : 	//
; 332  : 	// Generate list of Specified route
; 333  : 	//
; 334  : 	//////////////////////////////////////////////////////////////////
; 335  : 
; 336  : 	route_points_ptr = (vec3d*) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_NODE);

  00691	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00695	74 0d		 je	 SHORT $LN79@create_gen
  00697	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0069a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0069c	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv335[ebp], ecx
  006a2	eb 27		 jmp	 SHORT $LN80@create_gen
$LN79@create_gen:
  006a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  006aa	81 c2 87 00 00
	00		 add	 edx, 135		; 00000087H
  006b0	52		 push	 edx
  006b1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006bb	50		 push	 eax
  006bc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006c1	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv335[ebp], 0
$LN80@create_gen:
  006cb	b9 01 00 00 00	 mov	 ecx, 1
  006d0	85 c9		 test	 ecx, ecx
  006d2	74 0c		 je	 SHORT $LN81@create_gen
  006d4	c7 85 14 ff ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv343[ebp], 11 ; 0000000bH
  006de	eb 27		 jmp	 SHORT $LN82@create_gen
$LN81@create_gen:
  006e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  006e6	81 c2 87 00 00
	00		 add	 edx, 135		; 00000087H
  006ec	52		 push	 edx
  006ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  006f7	50		 push	 eax
  006f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006fd	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv343[ebp], 0
$LN82@create_gen:
  00707	6a 0b		 push	 11			; 0000000bH
  00709	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  0070c	51		 push	 ecx
  0070d	6b 95 18 ff ff
	ff 50		 imul	 edx, DWORD PTR tv335[ebp], 80
  00714	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv343[ebp]
  0071a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00721	ff d1		 call	 ecx
  00723	89 45 b8	 mov	 DWORD PTR _route_points_ptr$[ebp], eax

; 337  : 
; 338  : 	route_dependents_ptr = (entity**) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_DEPENDENTS);

  00726	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0072a	74 0d		 je	 SHORT $LN83@create_gen
  0072c	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0072f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00731	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv355[ebp], ecx
  00737	eb 27		 jmp	 SHORT $LN84@create_gen
$LN83@create_gen:
  00739	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0073f	81 c2 89 00 00
	00		 add	 edx, 137		; 00000089H
  00745	52		 push	 edx
  00746	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0074b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00750	50		 push	 eax
  00751	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00756	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv355[ebp], 0
$LN84@create_gen:
  00760	b9 01 00 00 00	 mov	 ecx, 1
  00765	85 c9		 test	 ecx, ecx
  00767	74 0c		 je	 SHORT $LN85@create_gen
  00769	c7 85 14 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv363[ebp], 9
  00773	eb 27		 jmp	 SHORT $LN86@create_gen
$LN85@create_gen:
  00775	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0077b	81 c2 89 00 00
	00		 add	 edx, 137		; 00000089H
  00781	52		 push	 edx
  00782	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00787	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  0078c	50		 push	 eax
  0078d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00792	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv363[ebp], 0
$LN86@create_gen:
  0079c	6a 09		 push	 9
  0079e	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  007a1	51		 push	 ecx
  007a2	6b 95 18 ff ff
	ff 50		 imul	 edx, DWORD PTR tv355[ebp], 80
  007a9	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv363[ebp]
  007af	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  007b6	ff d1		 call	 ecx
  007b8	89 85 70 ff ff
	ff		 mov	 DWORD PTR _route_dependents_ptr$[ebp], eax

; 339  : 
; 340  : 	route_waypoint_types_ptr = (entity_sub_types *) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_WAYPOINT_TYPES);

  007be	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  007c2	74 0d		 je	 SHORT $LN87@create_gen
  007c4	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  007c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  007c9	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv375[ebp], ecx
  007cf	eb 27		 jmp	 SHORT $LN88@create_gen
$LN87@create_gen:
  007d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  007d7	81 c2 8b 00 00
	00		 add	 edx, 139		; 0000008bH
  007dd	52		 push	 edx
  007de	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007e8	50		 push	 eax
  007e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007ee	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv375[ebp], 0
$LN88@create_gen:
  007f8	b9 01 00 00 00	 mov	 ecx, 1
  007fd	85 c9		 test	 ecx, ecx
  007ff	74 0c		 je	 SHORT $LN89@create_gen
  00801	c7 85 14 ff ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv383[ebp], 12 ; 0000000cH
  0080b	eb 27		 jmp	 SHORT $LN90@create_gen
$LN89@create_gen:
  0080d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00813	81 c2 8b 00 00
	00		 add	 edx, 139		; 0000008bH
  00819	52		 push	 edx
  0081a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0081f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00824	50		 push	 eax
  00825	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0082a	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv383[ebp], 0
$LN90@create_gen:
  00834	6a 0c		 push	 12			; 0000000cH
  00836	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00839	51		 push	 ecx
  0083a	6b 95 18 ff ff
	ff 50		 imul	 edx, DWORD PTR tv375[ebp], 80
  00841	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv383[ebp]
  00847	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0084e	ff d1		 call	 ecx
  00850	89 85 6c ff ff
	ff		 mov	 DWORD PTR _route_waypoint_types_ptr$[ebp], eax

; 341  : 
; 342  : 	route_formation_types_ptr = (formation_types *) get_local_entity_ptr_value (task_en, PTR_TYPE_ROUTE_FORMATION_TYPES);

  00856	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0085a	74 0d		 je	 SHORT $LN91@create_gen
  0085c	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0085f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00861	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv395[ebp], ecx
  00867	eb 27		 jmp	 SHORT $LN92@create_gen
$LN91@create_gen:
  00869	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0086f	81 c2 8d 00 00
	00		 add	 edx, 141		; 0000008dH
  00875	52		 push	 edx
  00876	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0087b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00880	50		 push	 eax
  00881	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00886	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv395[ebp], 0
$LN92@create_gen:
  00890	b9 01 00 00 00	 mov	 ecx, 1
  00895	85 c9		 test	 ecx, ecx
  00897	74 0c		 je	 SHORT $LN93@create_gen
  00899	c7 85 14 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv403[ebp], 10 ; 0000000aH
  008a3	eb 27		 jmp	 SHORT $LN94@create_gen
$LN93@create_gen:
  008a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  008ab	81 c2 8d 00 00
	00		 add	 edx, 141		; 0000008dH
  008b1	52		 push	 edx
  008b2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  008b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  008bc	50		 push	 eax
  008bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008c2	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv403[ebp], 0
$LN94@create_gen:
  008cc	6a 0a		 push	 10			; 0000000aH
  008ce	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  008d1	51		 push	 ecx
  008d2	6b 95 18 ff ff
	ff 50		 imul	 edx, DWORD PTR tv395[ebp], 80
  008d9	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv403[ebp]
  008df	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  008e6	ff d1		 call	 ecx
  008e8	89 85 68 ff ff
	ff		 mov	 DWORD PTR _route_formation_types_ptr$[ebp], eax

; 343  : 
; 344  : 	route_length = get_local_entity_int_value (task_en, INT_TYPE_ROUTE_LENGTH);

  008ee	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  008f2	74 0d		 je	 SHORT $LN95@create_gen
  008f4	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  008f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  008f9	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv415[ebp], ecx
  008ff	eb 27		 jmp	 SHORT $LN96@create_gen
$LN95@create_gen:
  00901	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00907	81 c2 8f 00 00
	00		 add	 edx, 143		; 0000008fH
  0090d	52		 push	 edx
  0090e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00913	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00918	50		 push	 eax
  00919	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0091e	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv415[ebp], 0
$LN96@create_gen:
  00928	b9 01 00 00 00	 mov	 ecx, 1
  0092d	85 c9		 test	 ecx, ecx
  0092f	74 0c		 je	 SHORT $LN97@create_gen
  00931	c7 85 14 ff ff
	ff b3 00 00 00	 mov	 DWORD PTR tv423[ebp], 179 ; 000000b3H
  0093b	eb 27		 jmp	 SHORT $LN98@create_gen
$LN97@create_gen:
  0093d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00943	81 c2 8f 00 00
	00		 add	 edx, 143		; 0000008fH
  00949	52		 push	 edx
  0094a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0094f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00954	50		 push	 eax
  00955	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0095a	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv423[ebp], 0
$LN98@create_gen:
  00964	68 b3 00 00 00	 push	 179			; 000000b3H
  00969	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  0096c	51		 push	 ecx
  0096d	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv415[ebp], 1116
  00977	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv423[ebp]
  0097d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00984	ff d1		 call	 ecx
  00986	89 45 a0	 mov	 DWORD PTR _route_length$[ebp], eax

; 345  : 
; 346  : 	last_specified_node = NULL;

  00989	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _last_specified_node$[ebp], 0

; 347  : 
; 348  : 	for (loop = route_length - 1; loop >= 0; loop --)

  00990	8b 45 a0	 mov	 eax, DWORD PTR _route_length$[ebp]
  00993	83 e8 01	 sub	 eax, 1
  00996	89 45 b4	 mov	 DWORD PTR _loop$[ebp], eax
  00999	eb 09		 jmp	 SHORT $LN4@create_gen
$LN2@create_gen:
  0099b	8b 45 b4	 mov	 eax, DWORD PTR _loop$[ebp]
  0099e	83 e8 01	 sub	 eax, 1
  009a1	89 45 b4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@create_gen:
  009a4	83 7d b4 00	 cmp	 DWORD PTR _loop$[ebp], 0
  009a8	0f 8c c5 00 00
	00		 jl	 $LN3@create_gen

; 349  : 	{
; 350  : 
; 351  : 		specified_route = (route_node *) malloc_fast_mem (sizeof (route_node));

  009ae	6a 20		 push	 32			; 00000020H
  009b0	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  009b5	89 45 f4	 mov	 DWORD PTR _specified_route$[ebp], eax

; 352  : 
; 353  : 		// position
; 354  : 		specified_route->position.x = ceil (route_points_ptr [loop].x);

  009b8	6b 45 b4 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  009bc	8b 4d b8	 mov	 ecx, DWORD PTR _route_points_ptr$[ebp]
  009bf	51		 push	 ecx
  009c0	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  009c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ca	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  009cf	8b 55 f4	 mov	 edx, DWORD PTR _specified_route$[ebp]
  009d2	d9 5a 0c	 fstp	 DWORD PTR [edx+12]

; 355  : 		specified_route->position.y = ceil (route_points_ptr [loop].y);

  009d5	6b 45 b4 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  009d9	8b 4d b8	 mov	 ecx, DWORD PTR _route_points_ptr$[ebp]
  009dc	51		 push	 ecx
  009dd	f3 0f 10 44 01
	04		 movss	 xmm0, DWORD PTR [ecx+eax+4]
  009e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009e8	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  009ed	8b 55 f4	 mov	 edx, DWORD PTR _specified_route$[ebp]
  009f0	d9 5a 10	 fstp	 DWORD PTR [edx+16]

; 356  : 		specified_route->position.z = ceil (route_points_ptr [loop].z);

  009f3	6b 45 b4 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  009f7	8b 4d b8	 mov	 ecx, DWORD PTR _route_points_ptr$[ebp]
  009fa	51		 push	 ecx
  009fb	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  00a01	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a06	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00a0b	8b 55 f4	 mov	 edx, DWORD PTR _specified_route$[ebp]
  00a0e	d9 5a 14	 fstp	 DWORD PTR [edx+20]

; 357  : 
; 358  : 		// dependent
; 359  : 		specified_route->dependent = route_dependents_ptr [loop];

  00a11	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a14	8b 4d b4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00a17	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _route_dependents_ptr$[ebp]
  00a1d	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00a20	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 360  : 
; 361  : 		// waypoint_type
; 362  : 		specified_route->type = route_waypoint_types_ptr [loop];

  00a23	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a26	8b 4d b4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00a29	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR _route_waypoint_types_ptr$[ebp]
  00a2f	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00a32	89 08		 mov	 DWORD PTR [eax], ecx

; 363  : 
; 364  : 		// formation_type
; 365  : 		specified_route->formation = route_formation_types_ptr [loop];

  00a34	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a37	8b 4d b4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00a3a	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _route_formation_types_ptr$[ebp]
  00a40	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00a43	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 366  : 
; 367  : 		specified_route->next = last_specified_node;

  00a46	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a49	8b 4d ec	 mov	 ecx, DWORD PTR _last_specified_node$[ebp]
  00a4c	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 368  : 		specified_route->prev = NULL;

  00a4f	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a52	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 369  : 
; 370  : 		if (last_specified_node)

  00a59	83 7d ec 00	 cmp	 DWORD PTR _last_specified_node$[ebp], 0
  00a5d	74 09		 je	 SHORT $LN16@create_gen

; 371  : 		{
; 372  : 
; 373  : 			last_specified_node->prev = specified_route;

  00a5f	8b 45 ec	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00a62	8b 4d f4	 mov	 ecx, DWORD PTR _specified_route$[ebp]
  00a65	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN16@create_gen:

; 374  : 		}
; 375  : 
; 376  : 		last_specified_node = specified_route;

  00a68	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00a6b	89 45 ec	 mov	 DWORD PTR _last_specified_node$[ebp], eax

; 377  : 	}

  00a6e	e9 28 ff ff ff	 jmp	 $LN2@create_gen
$LN3@create_gen:

; 378  : 
; 379  : 	#if DEBUG_MODULE
; 380  : 	if (debug_flag)
; 381  : 	{
; 382  : 	
; 383  : 		debug_log ("CROUTE:   Route specified =");
; 384  : 	
; 385  : 		for (loop = 0; loop < route_length; loop ++)
; 386  : 		{
; 387  : 	
; 388  : 			debug_log ("CROUTE:         Wp %d = %s %s %s [%f, %f, %f]",
; 389  : 							loop,
; 390  : 							entity_sub_type_waypoint_names [route_waypoint_types_ptr [loop]],
; 391  : 							formation_names [route_formation_types_ptr [loop]],
; 392  : 							((route_dependents_ptr [loop]) ? get_local_entity_string (route_dependents_ptr [loop], STRING_TYPE_FULL_NAME) : "None"),
; 393  : 							route_points_ptr [loop].x, route_points_ptr [loop].y, route_points_ptr [loop].z);
; 394  : 		}
; 395  : 	
; 396  : 	}
; 397  : 	#endif
; 398  : 
; 399  : 	start_ptr = NULL;

  00a73	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _start_ptr$[ebp], 0

; 400  : 	stop_ptr = NULL;

  00a7a	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _stop_ptr$[ebp], 0

; 401  : 
; 402  : 	if (start_point_count > 0)

  00a81	83 7d 98 00	 cmp	 DWORD PTR _start_point_count$[ebp], 0
  00a85	0f 8e fc 02 00
	00		 jle	 $LN20@create_gen

; 403  : 	{
; 404  : 
; 405  : 		//
; 406  : 		// Add start waypoint
; 407  : 		//
; 408  : 
; 409  : 		if (get_comms_model () == COMMS_MODEL_SERVER)

  00a8b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00a92	0f 85 a1 00 00
	00		 jne	 $LN18@create_gen

; 410  : 		{
; 411  : 	
; 412  : 			get_local_entity_vec3d (member, VEC3D_TYPE_POSITION, &start);

  00a98	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _member$[ebp], 0
  00a9f	74 10		 je	 SHORT $LN99@create_gen
  00aa1	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _member$[ebp]
  00aa7	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aa9	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv476[ebp], ecx
  00aaf	eb 27		 jmp	 SHORT $LN100@create_gen
$LN99@create_gen:
  00ab1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00ab7	81 c2 d3 00 00
	00		 add	 edx, 211		; 000000d3H
  00abd	52		 push	 edx
  00abe	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ac3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ac8	50		 push	 eax
  00ac9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ace	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv476[ebp], 0
$LN100@create_gen:
  00ad8	b9 01 00 00 00	 mov	 ecx, 1
  00add	85 c9		 test	 ecx, ecx
  00adf	74 0c		 je	 SHORT $LN101@create_gen
  00ae1	c7 85 14 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv484[ebp], 8
  00aeb	eb 27		 jmp	 SHORT $LN102@create_gen
$LN101@create_gen:
  00aed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00af3	81 c2 d3 00 00
	00		 add	 edx, 211		; 000000d3H
  00af9	52		 push	 edx
  00afa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00b04	50		 push	 eax
  00b05	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b0a	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv484[ebp], 0
$LN102@create_gen:
  00b14	8d 4d c8	 lea	 ecx, DWORD PTR _start$[ebp]
  00b17	51		 push	 ecx
  00b18	6a 08		 push	 8
  00b1a	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _member$[ebp]
  00b20	52		 push	 edx
  00b21	6b 85 18 ff ff
	ff 60		 imul	 eax, DWORD PTR tv476[ebp], 96
  00b28	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv484[ebp]
  00b2e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00b35	ff d2		 call	 edx

; 413  : 		}
; 414  : 		else

  00b37	eb 14		 jmp	 SHORT $LN19@create_gen
$LN18@create_gen:

; 415  : 		{
; 416  : 
; 417  : 			start = *client_start;

  00b39	8b 45 14	 mov	 eax, DWORD PTR _client_start$[ebp]
  00b3c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b3e	89 4d c8	 mov	 DWORD PTR _start$[ebp], ecx
  00b41	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00b44	89 55 cc	 mov	 DWORD PTR _start$[ebp+4], edx
  00b47	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00b4a	89 45 d0	 mov	 DWORD PTR _start$[ebp+8], eax
$LN19@create_gen:

; 418  : 		}
; 419  : 
; 420  : 		start.x = ceil (start.x);

  00b4d	51		 push	 ecx
  00b4e	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _start$[ebp]
  00b53	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b58	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00b5d	d9 5d c8	 fstp	 DWORD PTR _start$[ebp]

; 421  : 		start.y = ceil (start.y);

  00b60	51		 push	 ecx
  00b61	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _start$[ebp+4]
  00b66	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b6b	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00b70	d9 5d cc	 fstp	 DWORD PTR _start$[ebp+4]

; 422  : 		start.z = ceil (start.z);

  00b73	51		 push	 ecx
  00b74	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _start$[ebp+8]
  00b79	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b7e	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00b83	d9 5d d0	 fstp	 DWORD PTR _start$[ebp+8]

; 423  : 
; 424  : 		start_ptr = &start;

  00b86	8d 45 c8	 lea	 eax, DWORD PTR _start$[ebp]
  00b89	89 45 c0	 mov	 DWORD PTR _start_ptr$[ebp], eax

; 425  : 
; 426  : 		new_node = (route_node *) malloc_fast_mem (sizeof (route_node));

  00b8c	6a 20		 push	 32			; 00000020H
  00b8e	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00b93	89 45 fc	 mov	 DWORD PTR _new_node$[ebp], eax

; 427  : 
; 428  : 		// position
; 429  : 		new_node->position.x = start.x;

  00b96	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00b99	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _start$[ebp]
  00b9e	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 430  : 		new_node->position.y = start.y;

  00ba3	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00ba6	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _start$[ebp+4]
  00bab	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 431  : 		new_node->position.z = start.z;

  00bb0	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00bb3	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _start$[ebp+8]
  00bb8	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 432  : 
; 433  : 		// dependent
; 434  : 		new_node->dependent = NULL;

  00bbd	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00bc0	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 435  : 
; 436  : 		// waypoint_type
; 437  : 		new_node->type = ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION;

  00bc7	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00bca	c7 00 11 00 00
	00		 mov	 DWORD PTR [eax], 17	; 00000011H

; 438  : 
; 439  : 		// formation_type
; 440  : 		new_node->formation = FORMATION_ROW_LEFT;

  00bd0	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00bd3	c7 40 04 02 00
	00 00		 mov	 DWORD PTR [eax+4], 2

; 441  : 
; 442  : 		new_node->next = specified_route;

  00bda	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00bdd	8b 4d f4	 mov	 ecx, DWORD PTR _specified_route$[ebp]
  00be0	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 443  : 		new_node->prev = NULL;

  00be3	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00be6	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 444  : 
; 445  : 		specified_route->prev = new_node;

  00bed	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00bf0	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  00bf3	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 446  : 
; 447  : 		specified_route = new_node;

  00bf6	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00bf9	89 45 f4	 mov	 DWORD PTR _specified_route$[ebp], eax

; 448  : 	
; 449  : 		#if DEBUG_MODULE
; 450  : 		if (debug_flag)
; 451  : 		{
; 452  : 		
; 453  : 			debug_log ("CROUTE:     Adding START waypoint at [%f, %f, %f]", new_node->position.x, new_node->position.y, new_node->position.z);
; 454  : 		}
; 455  : 		#endif
; 456  : 
; 457  : 		if (return_keysite)

  00bfc	83 7d 10 00	 cmp	 DWORD PTR _return_keysite$[ebp], 0
  00c00	0f 84 81 01 00
	00		 je	 $LN20@create_gen

; 458  : 		{
; 459  : 
; 460  : 			if (get_comms_model () == COMMS_MODEL_SERVER)

  00c06	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00c0d	0f 85 98 00 00
	00		 jne	 $LN21@create_gen

; 461  : 			{
; 462  : 		
; 463  : 				get_local_entity_vec3d (return_keysite, VEC3D_TYPE_POSITION, &stop);

  00c13	83 7d 10 00	 cmp	 DWORD PTR _return_keysite$[ebp], 0
  00c17	74 0d		 je	 SHORT $LN103@create_gen
  00c19	8b 45 10	 mov	 eax, DWORD PTR _return_keysite$[ebp]
  00c1c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c1e	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv551[ebp], ecx
  00c24	eb 27		 jmp	 SHORT $LN104@create_gen
$LN103@create_gen:
  00c26	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00c2c	81 c2 06 01 00
	00		 add	 edx, 262		; 00000106H
  00c32	52		 push	 edx
  00c33	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c38	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c3d	50		 push	 eax
  00c3e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c43	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv551[ebp], 0
$LN104@create_gen:
  00c4d	b9 01 00 00 00	 mov	 ecx, 1
  00c52	85 c9		 test	 ecx, ecx
  00c54	74 0c		 je	 SHORT $LN105@create_gen
  00c56	c7 85 14 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv559[ebp], 8
  00c60	eb 27		 jmp	 SHORT $LN106@create_gen
$LN105@create_gen:
  00c62	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00c68	81 c2 06 01 00
	00		 add	 edx, 262		; 00000106H
  00c6e	52		 push	 edx
  00c6f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c74	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00c79	50		 push	 eax
  00c7a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c7f	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv559[ebp], 0
$LN106@create_gen:
  00c89	8d 4d d4	 lea	 ecx, DWORD PTR _stop$[ebp]
  00c8c	51		 push	 ecx
  00c8d	6a 08		 push	 8
  00c8f	8b 55 10	 mov	 edx, DWORD PTR _return_keysite$[ebp]
  00c92	52		 push	 edx
  00c93	6b 85 18 ff ff
	ff 60		 imul	 eax, DWORD PTR tv551[ebp], 96
  00c9a	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv559[ebp]
  00ca0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00ca7	ff d2		 call	 edx

; 464  : 			}
; 465  : 			else

  00ca9	eb 14		 jmp	 SHORT $LN22@create_gen
$LN21@create_gen:

; 466  : 			{
; 467  : 	
; 468  : 				stop = *client_stop;

  00cab	8b 45 18	 mov	 eax, DWORD PTR _client_stop$[ebp]
  00cae	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cb0	89 4d d4	 mov	 DWORD PTR _stop$[ebp], ecx
  00cb3	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00cb6	89 55 d8	 mov	 DWORD PTR _stop$[ebp+4], edx
  00cb9	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00cbc	89 45 dc	 mov	 DWORD PTR _stop$[ebp+8], eax
$LN22@create_gen:

; 469  : 			}
; 470  : 
; 471  : 			stop.x = ceil (stop.x);

  00cbf	51		 push	 ecx
  00cc0	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _stop$[ebp]
  00cc5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cca	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00ccf	d9 5d d4	 fstp	 DWORD PTR _stop$[ebp]

; 472  : 			stop.y = ceil (stop.y);

  00cd2	51		 push	 ecx
  00cd3	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _stop$[ebp+4]
  00cd8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cdd	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00ce2	d9 5d d8	 fstp	 DWORD PTR _stop$[ebp+4]

; 473  : 			stop.z = ceil (stop.z);

  00ce5	51		 push	 ecx
  00ce6	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _stop$[ebp+8]
  00ceb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cf0	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00cf5	d9 5d dc	 fstp	 DWORD PTR _stop$[ebp+8]

; 474  : 
; 475  : 			stop_ptr = &stop;

  00cf8	8d 45 d4	 lea	 eax, DWORD PTR _stop$[ebp]
  00cfb	89 45 c4	 mov	 DWORD PTR _stop_ptr$[ebp], eax

; 476  : 	
; 477  :   			//
; 478  : 			// add land waypoint
; 479  :   			//
; 480  : 
; 481  : 			new_node = (route_node *) malloc_fast_mem (sizeof (route_node));

  00cfe	6a 20		 push	 32			; 00000020H
  00d00	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00d05	89 45 fc	 mov	 DWORD PTR _new_node$[ebp], eax

; 482  : 
; 483  : 			// position
; 484  : 			new_node->position.x = stop.x;

  00d08	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d0b	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _stop$[ebp]
  00d10	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 485  : 			new_node->position.y = stop.y;

  00d15	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d18	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _stop$[ebp+4]
  00d1d	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 486  : 			new_node->position.z = stop.z;

  00d22	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d25	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _stop$[ebp+8]
  00d2a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 487  : 
; 488  : 			// dependent
; 489  : 			new_node->dependent = return_keysite;

  00d2f	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d32	8b 4d 10	 mov	 ecx, DWORD PTR _return_keysite$[ebp]
  00d35	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 490  : 
; 491  : 			// waypoint_type
; 492  : 			new_node->type = ENTITY_SUB_TYPE_WAYPOINT_LAND;

  00d38	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d3b	c7 00 0d 00 00
	00		 mov	 DWORD PTR [eax], 13	; 0000000dH

; 493  : 
; 494  : 			// formation_type
; 495  : 			new_node->formation = FORMATION_ROW_LEFT;

  00d41	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d44	c7 40 04 02 00
	00 00		 mov	 DWORD PTR [eax+4], 2

; 496  : 
; 497  : 			last_specified_node = specified_route;

  00d4b	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00d4e	89 45 ec	 mov	 DWORD PTR _last_specified_node$[ebp], eax
$LN5@create_gen:

; 498  : 
; 499  : 			while (last_specified_node->next)

  00d51	8b 45 ec	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00d54	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00d58	74 0b		 je	 SHORT $LN6@create_gen

; 500  : 			{
; 501  : 
; 502  : 				last_specified_node = last_specified_node->next;

  00d5a	8b 45 ec	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00d5d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00d60	89 4d ec	 mov	 DWORD PTR _last_specified_node$[ebp], ecx

; 503  : 			}

  00d63	eb ec		 jmp	 SHORT $LN5@create_gen
$LN6@create_gen:

; 504  : 
; 505  : 			new_node->prev = last_specified_node;

  00d65	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d68	8b 4d ec	 mov	 ecx, DWORD PTR _last_specified_node$[ebp]
  00d6b	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 506  : 			new_node->next = NULL;

  00d6e	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d71	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 507  : 
; 508  : 			last_specified_node->next = new_node;

  00d78	8b 45 ec	 mov	 eax, DWORD PTR _last_specified_node$[ebp]
  00d7b	8b 4d fc	 mov	 ecx, DWORD PTR _new_node$[ebp]
  00d7e	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 509  : 
; 510  : 			last_specified_node = new_node;

  00d81	8b 45 fc	 mov	 eax, DWORD PTR _new_node$[ebp]
  00d84	89 45 ec	 mov	 DWORD PTR _last_specified_node$[ebp], eax
$LN20@create_gen:

; 511  : 	
; 512  : 			#if DEBUG_MODULE
; 513  : 			if (debug_flag)
; 514  : 			{
; 515  : 		
; 516  : 				debug_log ("CROUTE:     Adding LAND waypoint at [%f, %f, %f] keysite %s (%d)",
; 517  : 								new_node->position.x, new_node->position.y, new_node->position.z,
; 518  : 								get_local_entity_string (return_keysite, STRING_TYPE_FULL_NAME), get_local_entity_index (return_keysite));
; 519  : 		
; 520  : 			}
; 521  : 			#endif
; 522  : 		}
; 523  : 	}
; 524  : 
; 525  : 	//////////////////////////////////////////////////////////////////
; 526  : 	//
; 527  : 	// Generate route
; 528  : 	//
; 529  : 	//////////////////////////////////////////////////////////////////
; 530  : 
; 531  : 	if (generate_route)

  00d87	83 7d 9c 00	 cmp	 DWORD PTR _generate_route$[ebp], 0
  00d8b	74 33		 je	 SHORT $LN23@create_gen

; 532  : 	{
; 533  : 
; 534  : 		//
; 535  : 		// build route
; 536  : 		//
; 537  : 	
; 538  : 		if (!generate_biased_vec3d_route (specified_route, &new_route, side, movement_type))

  00d8d	8b 45 e8	 mov	 eax, DWORD PTR _movement_type$[ebp]
  00d90	50		 push	 eax
  00d91	8b 4d 90	 mov	 ecx, DWORD PTR _side$[ebp]
  00d94	51		 push	 ecx
  00d95	8d 55 f8	 lea	 edx, DWORD PTR _new_route$[ebp]
  00d98	52		 push	 edx
  00d99	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00d9c	50		 push	 eax
  00d9d	e8 00 00 00 00	 call	 ?generate_biased_vec3d_route@@YGHPAUROUTE_NODE@@PAPAU1@HW4MOVEMENT_TYPES@@@Z ; generate_biased_vec3d_route
  00da2	85 c0		 test	 eax, eax
  00da4	75 18		 jne	 SHORT $LN25@create_gen

; 539  : 		{
; 540  : 	
; 541  : 			#if DEBUG_MODULE
; 542  : 			if (debug_flag)
; 543  : 			{
; 544  : 		
; 545  : 				debug_log ("CROUTE:     ***** Cannot create route *****");
; 546  : 			
; 547  : 				debug_log ("CROUTE: ===================================================================================");
; 548  : 		
; 549  : 			}
; 550  : 			#endif
; 551  : 
; 552  : 			destroy_fast_route (specified_route);

  00da6	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00da9	50		 push	 eax
  00daa	e8 00 00 00 00	 call	 ?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z ; destroy_fast_route

; 553  : 	
; 554  : 			// restore stack attirbutes
; 555  : 
; 556  : 			set_force_local_entity_create_stack_attributes (create_stack_attributes);

  00daf	8b 45 94	 mov	 eax, DWORD PTR _create_stack_attributes$[ebp]
  00db2	a3 00 00 00 00	 mov	 DWORD PTR ?force_local_entity_create_stack_attributes@@3HA, eax ; force_local_entity_create_stack_attributes

; 557  : 		
; 558  : 			return FALSE;

  00db7	33 c0		 xor	 eax, eax
  00db9	e9 2f 0b 00 00	 jmp	 $LN1@create_gen
$LN25@create_gen:

; 559  : 		}
; 560  : 	
; 561  : 	}
; 562  : 	else

  00dbe	eb 06		 jmp	 SHORT $LN24@create_gen
$LN23@create_gen:

; 563  : 	{
; 564  : 
; 565  : 		new_route = specified_route;

  00dc0	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  00dc3	89 45 f8	 mov	 DWORD PTR _new_route$[ebp], eax
$LN24@create_gen:

; 566  : 	}
; 567  : 	
; 568  : 	//////////////////////////////////////////////////////////////////
; 569  : 	//
; 570  : 	// Generate checksum
; 571  : 	//
; 572  : 	//////////////////////////////////////////////////////////////////
; 573  : 
; 574  : 	check_sum = generate_route_check_sum (new_route);

  00dc6	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
  00dc9	50		 push	 eax
  00dca	e8 00 00 00 00	 call	 ?generate_route_check_sum@@YGEPAUROUTE_NODE@@@Z ; generate_route_check_sum
  00dcf	0f b6 c8	 movzx	 ecx, al
  00dd2	89 4d a8	 mov	 DWORD PTR _check_sum$[ebp], ecx

; 575  : 
; 576  : 	if (get_comms_model () == COMMS_MODEL_CLIENT)

  00dd5	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 1 ; system_comms_model
  00ddc	0f 85 6d 02 00
	00		 jne	 $LN26@create_gen

; 577  : 	{
; 578  : 
; 579  : 		route_node
; 580  : 			*route;
; 581  : 
; 582  : 		//ASSERT (check_sum == get_local_entity_int_value (task_en, INT_TYPE_ROUTE_CHECK_SUM));
; 583  : 		if (check_sum != get_local_entity_int_value (task_en, INT_TYPE_ROUTE_CHECK_SUM))

  00de2	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00de6	74 0d		 je	 SHORT $LN107@create_gen
  00de8	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00deb	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ded	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv606[ebp], ecx
  00df3	eb 20		 jmp	 SHORT $LN108@create_gen
$LN107@create_gen:
  00df5	68 47 02 00 00	 push	 583			; 00000247H
  00dfa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e05	52		 push	 edx
  00e06	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e0b	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv606[ebp], 0
$LN108@create_gen:
  00e15	b8 01 00 00 00	 mov	 eax, 1
  00e1a	85 c0		 test	 eax, eax
  00e1c	74 0c		 je	 SHORT $LN109@create_gen
  00e1e	c7 85 14 ff ff
	ff b2 00 00 00	 mov	 DWORD PTR tv613[ebp], 178 ; 000000b2H
  00e28	eb 20		 jmp	 SHORT $LN110@create_gen
$LN109@create_gen:
  00e2a	68 47 02 00 00	 push	 583			; 00000247H
  00e2f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e34	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e3a	51		 push	 ecx
  00e3b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e40	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv613[ebp], 0
$LN110@create_gen:
  00e4a	68 b2 00 00 00	 push	 178			; 000000b2H
  00e4f	8b 55 0c	 mov	 edx, DWORD PTR _task_en$[ebp]
  00e52	52		 push	 edx
  00e53	69 85 18 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv606[ebp], 1116
  00e5d	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv613[ebp]
  00e63	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00e6a	ff d2		 call	 edx
  00e6c	39 45 a8	 cmp	 DWORD PTR _check_sum$[ebp], eax
  00e6f	0f 84 d5 01 00
	00		 je	 $LN8@create_gen

; 584  : 		{
; 585  : 
; 586  : 			debug_log ("CROUTE: WARNING: checksums differ... server %d, client %d (task %s, %d)", check_sum, get_local_entity_int_value (task_en, INT_TYPE_ROUTE_CHECK_SUM), get_local_entity_string (task_en, STRING_TYPE_FULL_NAME), get_local_entity_index (task_en));

  00e75	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00e79	74 0d		 je	 SHORT $LN111@create_gen
  00e7b	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00e7e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e80	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv629[ebp], ecx
  00e86	eb 27		 jmp	 SHORT $LN112@create_gen
$LN111@create_gen:
  00e88	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00e8e	81 c2 81 01 00
	00		 add	 edx, 385		; 00000181H
  00e94	52		 push	 edx
  00e95	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e9f	50		 push	 eax
  00ea0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ea5	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv629[ebp], 0
$LN112@create_gen:
  00eaf	b9 01 00 00 00	 mov	 ecx, 1
  00eb4	85 c9		 test	 ecx, ecx
  00eb6	74 0c		 je	 SHORT $LN113@create_gen
  00eb8	c7 85 14 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv637[ebp], 3
  00ec2	eb 27		 jmp	 SHORT $LN114@create_gen
$LN113@create_gen:
  00ec4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00eca	81 c2 81 01 00
	00		 add	 edx, 385		; 00000181H
  00ed0	52		 push	 edx
  00ed1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ed6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00edb	50		 push	 eax
  00edc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ee1	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv637[ebp], 0
$LN114@create_gen:
  00eeb	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00eef	74 0d		 je	 SHORT $LN115@create_gen
  00ef1	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00ef4	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ef6	89 95 10 ff ff
	ff		 mov	 DWORD PTR tv650[ebp], edx
  00efc	eb 26		 jmp	 SHORT $LN116@create_gen
$LN115@create_gen:
  00efe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00f03	05 81 01 00 00	 add	 eax, 385		; 00000181H
  00f08	50		 push	 eax
  00f09	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f0e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f14	51		 push	 ecx
  00f15	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f1a	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv650[ebp], 0
$LN116@create_gen:
  00f24	ba 01 00 00 00	 mov	 edx, 1
  00f29	85 d2		 test	 edx, edx
  00f2b	74 0c		 je	 SHORT $LN117@create_gen
  00f2d	c7 85 0c ff ff
	ff b2 00 00 00	 mov	 DWORD PTR tv658[ebp], 178 ; 000000b2H
  00f37	eb 26		 jmp	 SHORT $LN118@create_gen
$LN117@create_gen:
  00f39	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  00f3e	05 81 01 00 00	 add	 eax, 385		; 00000181H
  00f43	50		 push	 eax
  00f44	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f49	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00f4f	51		 push	 ecx
  00f50	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f55	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv658[ebp], 0
$LN118@create_gen:
  00f5f	8b 55 0c	 mov	 edx, DWORD PTR _task_en$[ebp]
  00f62	2b 15 00 00 00
	00		 sub	 edx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00f68	c1 fa 04	 sar	 edx, 4
  00f6b	52		 push	 edx
  00f6c	6a 03		 push	 3
  00f6e	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  00f71	50		 push	 eax
  00f72	6b 8d 18 ff ff
	ff 34		 imul	 ecx, DWORD PTR tv629[ebp], 52
  00f79	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv637[ebp]
  00f7f	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  00f86	ff d0		 call	 eax
  00f88	50		 push	 eax
  00f89	68 b2 00 00 00	 push	 178			; 000000b2H
  00f8e	8b 4d 0c	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00f91	51		 push	 ecx
  00f92	69 95 10 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv650[ebp], 1116
  00f9c	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv658[ebp]
  00fa2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00fa9	ff d1		 call	 ecx
  00fab	50		 push	 eax
  00fac	8b 55 a8	 mov	 edx, DWORD PTR _check_sum$[ebp]
  00faf	52		 push	 edx
  00fb0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@BKIHFALC@CROUTE?3?5WARNING?3?5checksums?5diff@
  00fb5	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00fba	83 c4 14	 add	 esp, 20			; 00000014H

; 587  : 
; 588  : 			route = new_route;

  00fbd	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
  00fc0	89 85 64 ff ff
	ff		 mov	 DWORD PTR _route$3[ebp], eax
$LN7@create_gen:

; 589  : 
; 590  : 			while (route)

  00fc6	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _route$3[ebp], 0
  00fcd	74 7b		 je	 SHORT $LN8@create_gen

; 591  : 			{
; 592  : 		
; 593  : 				debug_log ("CROUTE:    %s %s [%f, %f, %f]", entity_sub_type_waypoint_names [route->type], formation_names [route->formation], route->position.x, route->position.y, route->position.z);

  00fcf	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _route$3[ebp]
  00fd5	f3 0f 5a 40 14	 cvtss2sd xmm0, DWORD PTR [eax+20]
  00fda	83 ec 08	 sub	 esp, 8
  00fdd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00fe2	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _route$3[ebp]
  00fe8	f3 0f 5a 41 10	 cvtss2sd xmm0, DWORD PTR [ecx+16]
  00fed	83 ec 08	 sub	 esp, 8
  00ff0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ff5	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR _route$3[ebp]
  00ffb	f3 0f 5a 42 0c	 cvtss2sd xmm0, DWORD PTR [edx+12]
  01000	83 ec 08	 sub	 esp, 8
  01003	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01008	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _route$3[ebp]
  0100e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01011	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?formation_names@@3PAPBDA[ecx*4]
  01018	52		 push	 edx
  01019	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _route$3[ebp]
  0101f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01021	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?entity_sub_type_waypoint_names@@3PAPBDA[ecx*4]
  01028	52		 push	 edx
  01029	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@LBFAINEO@CROUTE?3?5?5?5?5?$CFs?5?$CFs?5?$FL?$CFf?0?5?$CFf?0?5?$CFf?$FN@
  0102e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  01033	83 c4 24	 add	 esp, 36			; 00000024H

; 594  : 		
; 595  : 				route = route->next;

  01036	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _route$3[ebp]
  0103c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0103f	89 8d 64 ff ff
	ff		 mov	 DWORD PTR _route$3[ebp], ecx

; 596  : 			}

  01045	e9 7c ff ff ff	 jmp	 $LN7@create_gen
$LN8@create_gen:

; 597  : 		}
; 598  : 	}
; 599  : 	else

  0104a	e9 a4 00 00 00	 jmp	 $LN27@create_gen
$LN26@create_gen:

; 600  : 	{
; 601  : 
; 602  : 		set_client_server_entity_int_value (task_en, INT_TYPE_ROUTE_CHECK_SUM, check_sum);

  0104f	83 7d 0c 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  01053	74 0d		 je	 SHORT $LN119@create_gen
  01055	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  01058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0105a	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv696[ebp], ecx
  01060	eb 27		 jmp	 SHORT $LN120@create_gen
$LN119@create_gen:
  01062	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  01068	81 c2 91 01 00
	00		 add	 edx, 401		; 00000191H
  0106e	52		 push	 edx
  0106f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  01074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01079	50		 push	 eax
  0107a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0107f	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv696[ebp], 0
$LN120@create_gen:
  01089	b9 01 00 00 00	 mov	 ecx, 1
  0108e	85 c9		 test	 ecx, ecx
  01090	74 0c		 je	 SHORT $LN121@create_gen
  01092	c7 85 14 ff ff
	ff b2 00 00 00	 mov	 DWORD PTR tv704[ebp], 178 ; 000000b2H
  0109c	eb 27		 jmp	 SHORT $LN122@create_gen
$LN121@create_gen:
  0109e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  010a4	81 c2 91 01 00
	00		 add	 edx, 401		; 00000191H
  010aa	52		 push	 edx
  010ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  010b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  010b5	50		 push	 eax
  010b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010bb	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv704[ebp], 0
$LN122@create_gen:
  010c5	8b 4d a8	 mov	 ecx, DWORD PTR _check_sum$[ebp]
  010c8	51		 push	 ecx
  010c9	68 b2 00 00 00	 push	 178			; 000000b2H
  010ce	8b 55 0c	 mov	 edx, DWORD PTR _task_en$[ebp]
  010d1	52		 push	 edx
  010d2	69 85 18 ff ff
	ff b8 08 00 00	 imul	 eax, DWORD PTR tv696[ebp], 2232
  010dc	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv704[ebp]
  010e2	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*8]
  010e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  010ee	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  010f1	ff d1		 call	 ecx
$LN27@create_gen:

; 603  : 	}
; 604  : 
; 605  : 	//////////////////////////////////////////////////////////////////
; 606  : 	//
; 607  : 	// Create waypoint route
; 608  : 	//
; 609  : 	//////////////////////////////////////////////////////////////////
; 610  : 
; 611  : 	node_count = 0;

  010f3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _node_count$[ebp], 0

; 612  : 
; 613  : 	last_wp = NULL;

  010fa	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _last_wp$[ebp], 0

; 614  : 
; 615  : 	specified_route_ptr = specified_route;

  01104	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  01107	89 45 f0	 mov	 DWORD PTR _specified_route_ptr$[ebp], eax
$LN9@create_gen:

; 616  : 
; 617  : 	while (new_route)

  0110a	83 7d f8 00	 cmp	 DWORD PTR _new_route$[ebp], 0
  0110e	0f 84 76 07 00
	00		 je	 $LN10@create_gen

; 618  : 	{
; 619  : 
; 620  : 		waypoint_pos = &new_route->position;

  01114	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
  01117	83 c0 0c	 add	 eax, 12			; 0000000cH
  0111a	89 45 bc	 mov	 DWORD PTR _waypoint_pos$[ebp], eax

; 621  : 
; 622  : 		waypoint_pos->x = bound (waypoint_pos->x, 1, MAX_MAP_X - 1);

  0111d	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  01120	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01128	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0112b	76 12		 jbe	 SHORT $LN125@create_gen
  0112d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01135	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv723[ebp], xmm0
  0113d	eb 55		 jmp	 SHORT $LN126@create_gen
$LN125@create_gen:
  0113f	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  01147	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0114f	8b 4d bc	 mov	 ecx, DWORD PTR _waypoint_pos$[ebp]
  01152	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  01156	0f 2f c8	 comiss	 xmm1, xmm0
  01159	76 1a		 jbe	 SHORT $LN123@create_gen
  0115b	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  01163	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0116b	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv722[ebp], xmm0
  01173	eb 0f		 jmp	 SHORT $LN124@create_gen
$LN123@create_gen:
  01175	8b 55 bc	 mov	 edx, DWORD PTR _waypoint_pos$[ebp]
  01178	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0117c	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv722[ebp], xmm0
$LN124@create_gen:
  01184	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR tv722[ebp]
  0118c	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv723[ebp], xmm0
$LN126@create_gen:
  01194	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  01197	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv723[ebp]
  0119f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 623  : 		waypoint_pos->y = bound (waypoint_pos->y, 1, MAX_MAP_Y - 1);

  011a3	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  011a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  011ae	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  011b2	76 12		 jbe	 SHORT $LN129@create_gen
  011b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  011bc	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv733[ebp], xmm0
  011c4	eb 57		 jmp	 SHORT $LN130@create_gen
$LN129@create_gen:
  011c6	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  011ce	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  011d6	8b 4d bc	 mov	 ecx, DWORD PTR _waypoint_pos$[ebp]
  011d9	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  011de	0f 2f c8	 comiss	 xmm1, xmm0
  011e1	76 1a		 jbe	 SHORT $LN127@create_gen
  011e3	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  011eb	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  011f3	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv732[ebp], xmm0
  011fb	eb 10		 jmp	 SHORT $LN128@create_gen
$LN127@create_gen:
  011fd	8b 55 bc	 mov	 edx, DWORD PTR _waypoint_pos$[ebp]
  01200	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  01205	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv732[ebp], xmm0
$LN128@create_gen:
  0120d	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR tv732[ebp]
  01215	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv733[ebp], xmm0
$LN130@create_gen:
  0121d	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  01220	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv733[ebp]
  01228	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 624  : 		waypoint_pos->z = bound (waypoint_pos->z, 1, MAX_MAP_Z - 1);

  0122d	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  01230	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01238	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  0123c	76 12		 jbe	 SHORT $LN133@create_gen
  0123e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01246	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv775[ebp], xmm0
  0124e	eb 57		 jmp	 SHORT $LN134@create_gen
$LN133@create_gen:
  01250	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  01258	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  01260	8b 4d bc	 mov	 ecx, DWORD PTR _waypoint_pos$[ebp]
  01263	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  01268	0f 2f c8	 comiss	 xmm1, xmm0
  0126b	76 1a		 jbe	 SHORT $LN131@create_gen
  0126d	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  01275	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0127d	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv774[ebp], xmm0
  01285	eb 10		 jmp	 SHORT $LN132@create_gen
$LN131@create_gen:
  01287	8b 55 bc	 mov	 edx, DWORD PTR _waypoint_pos$[ebp]
  0128a	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0128f	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv774[ebp], xmm0
$LN132@create_gen:
  01297	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR tv774[ebp]
  0129f	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv775[ebp], xmm0
$LN134@create_gen:
  012a7	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  012aa	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv775[ebp]
  012b2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 625  : 
; 626  : 		#if DEBUG_MODULE
; 627  : 		if (debug_flag)
; 628  : 		{
; 629  : 		
; 630  : 			debug_log ("CROUTE:     (N wp route) placing waypoint (count %d), at [%f, %f, %f]", node_count, waypoint_pos->x, waypoint_pos->y, waypoint_pos->z);
; 631  : 	
; 632  : 		}
; 633  : 		#endif
; 634  : 
; 635  : 		terrain_elevation = get_3d_terrain_elevation (waypoint_pos->x, waypoint_pos->z);

  012b7	6a 00		 push	 0
  012b9	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  012bc	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  012c1	51		 push	 ecx
  012c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012c7	8b 4d bc	 mov	 ecx, DWORD PTR _waypoint_pos$[ebp]
  012ca	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  012ce	51		 push	 ecx
  012cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012d4	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  012d9	d9 5d 80	 fstp	 DWORD PTR _terrain_elevation$[ebp]

; 636  : 
; 637  : 		road_node = get_closest_road_node (waypoint_pos, 5.0);

  012dc	51		 push	 ecx
  012dd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  012e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012ea	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  012ed	50		 push	 eax
  012ee	e8 00 00 00 00	 call	 ?get_closest_road_node@@YGHPAUVEC3D@@M@Z ; get_closest_road_node
  012f3	89 45 ac	 mov	 DWORD PTR _road_node$[ebp], eax

; 638  : 
; 639  : 		// flight time between waypoints
; 640  : 
; 641  : 		if (last_wp)

  012f6	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _last_wp$[ebp], 0
  012fd	0f 84 29 02 00
	00		 je	 $LN30@create_gen

; 642  : 		{
; 643  : 
; 644  : 			float
; 645  : 				range;
; 646  : 
; 647  : 			vec3d
; 648  : 				*last_waypoint_pos;
; 649  : 
; 650  : 			last_waypoint_pos = get_local_entity_vec3d_ptr (last_wp, VEC3D_TYPE_POSITION);

  01303	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _last_wp$[ebp], 0
  0130a	74 10		 je	 SHORT $LN135@create_gen
  0130c	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _last_wp$[ebp]
  01312	8b 08		 mov	 ecx, DWORD PTR [eax]
  01314	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv794[ebp], ecx
  0131a	eb 27		 jmp	 SHORT $LN136@create_gen
$LN135@create_gen:
  0131c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  01322	81 c2 c1 01 00
	00		 add	 edx, 449		; 000001c1H
  01328	52		 push	 edx
  01329	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0132e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01333	50		 push	 eax
  01334	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01339	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv794[ebp], 0
$LN136@create_gen:
  01343	b9 01 00 00 00	 mov	 ecx, 1
  01348	85 c9		 test	 ecx, ecx
  0134a	74 0c		 je	 SHORT $LN137@create_gen
  0134c	c7 85 14 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv802[ebp], 8
  01356	eb 27		 jmp	 SHORT $LN138@create_gen
$LN137@create_gen:
  01358	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0135e	81 c2 c1 01 00
	00		 add	 edx, 449		; 000001c1H
  01364	52		 push	 edx
  01365	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0136a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0136f	50		 push	 eax
  01370	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01375	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv802[ebp], 0
$LN138@create_gen:
  0137f	6a 08		 push	 8
  01381	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _last_wp$[ebp]
  01387	51		 push	 ecx
  01388	6b 95 18 ff ff
	ff 60		 imul	 edx, DWORD PTR tv794[ebp], 96
  0138f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv802[ebp]
  01395	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0139c	ff d1		 call	 ecx
  0139e	89 85 5c ff ff
	ff		 mov	 DWORD PTR _last_waypoint_pos$1[ebp], eax

; 651  : 
; 652  : 			range = get_2d_range (waypoint_pos, last_waypoint_pos);

  013a4	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _last_waypoint_pos$1[ebp]
  013aa	50		 push	 eax
  013ab	8b 4d bc	 mov	 ecx, DWORD PTR _waypoint_pos$[ebp]
  013ae	51		 push	 ecx
  013af	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  013b4	d9 9d 60 ff ff
	ff		 fstp	 DWORD PTR _range$2[ebp]

; 653  : 
; 654  : 			flight_time = 999999.0;

  013ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@497423f0
  013c2	f3 0f 11 45 84	 movss	 DWORD PTR _flight_time$[ebp], xmm0

; 655  : 
; 656  : 			if (get_local_entity_float_value (member, FLOAT_TYPE_CRUISE_VELOCITY) > 0.0)

  013c7	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _member$[ebp], 0
  013ce	74 10		 je	 SHORT $LN139@create_gen
  013d0	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _member$[ebp]
  013d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  013d8	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv816[ebp], ecx
  013de	eb 20		 jmp	 SHORT $LN140@create_gen
$LN139@create_gen:
  013e0	68 90 02 00 00	 push	 656			; 00000290H
  013e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  013ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  013f0	52		 push	 edx
  013f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  013f6	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv816[ebp], 0
$LN140@create_gen:
  01400	b8 01 00 00 00	 mov	 eax, 1
  01405	85 c0		 test	 eax, eax
  01407	74 0c		 je	 SHORT $LN141@create_gen
  01409	c7 85 14 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv823[ebp], 25 ; 00000019H
  01413	eb 20		 jmp	 SHORT $LN142@create_gen
$LN141@create_gen:
  01415	68 90 02 00 00	 push	 656			; 00000290H
  0141a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0141f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01425	51		 push	 ecx
  01426	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0142b	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv823[ebp], 0
$LN142@create_gen:
  01435	6a 19		 push	 25			; 00000019H
  01437	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _member$[ebp]
  0143d	52		 push	 edx
  0143e	69 85 18 ff ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv816[ebp], 700
  01448	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv823[ebp]
  0144e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  01455	ff d2		 call	 edx
  01457	dd 9d 0c ff ff
	ff		 fstp	 QWORD PTR tv1506[ebp]
  0145d	f2 0f 10 85 0c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv1506[ebp]
  01465	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0146d	0f 86 b9 00 00
	00		 jbe	 $LN30@create_gen

; 657  : 			{
; 658  : 
; 659  : 				flight_time = range / get_local_entity_float_value (member, FLOAT_TYPE_CRUISE_VELOCITY);

  01473	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _member$[ebp], 0
  0147a	74 10		 je	 SHORT $LN143@create_gen
  0147c	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _member$[ebp]
  01482	8b 08		 mov	 ecx, DWORD PTR [eax]
  01484	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv837[ebp], ecx
  0148a	eb 27		 jmp	 SHORT $LN144@create_gen
$LN143@create_gen:
  0148c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  01492	81 c2 ca 01 00
	00		 add	 edx, 458		; 000001caH
  01498	52		 push	 edx
  01499	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0149e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  014a3	50		 push	 eax
  014a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  014a9	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv837[ebp], 0
$LN144@create_gen:
  014b3	b9 01 00 00 00	 mov	 ecx, 1
  014b8	85 c9		 test	 ecx, ecx
  014ba	74 0c		 je	 SHORT $LN145@create_gen
  014bc	c7 85 14 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv845[ebp], 25 ; 00000019H
  014c6	eb 27		 jmp	 SHORT $LN146@create_gen
$LN145@create_gen:
  014c8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  014ce	81 c2 ca 01 00
	00		 add	 edx, 458		; 000001caH
  014d4	52		 push	 edx
  014d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  014da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  014df	50		 push	 eax
  014e0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  014e5	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv845[ebp], 0
$LN146@create_gen:
  014ef	6a 19		 push	 25			; 00000019H
  014f1	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _member$[ebp]
  014f7	51		 push	 ecx
  014f8	69 95 18 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv837[ebp], 700
  01502	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv845[ebp]
  01508	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0150f	ff d1		 call	 ecx
  01511	d9 9d 10 ff ff
	ff		 fstp	 DWORD PTR tv1520[ebp]
  01517	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR _range$2[ebp]
  0151f	f3 0f 5e 85 10
	ff ff ff	 divss	 xmm0, DWORD PTR tv1520[ebp]
  01527	f3 0f 11 45 84	 movss	 DWORD PTR _flight_time$[ebp], xmm0
$LN30@create_gen:

; 660  : 			}
; 661  : 		}
; 662  : 
; 663  : 		// waypoint index
; 664  : 
; 665  : 		if (!waypoint_indices)

  0152c	83 7d 1c 00	 cmp	 DWORD PTR _waypoint_indices$[ebp], 0
  01530	75 09		 jne	 SHORT $LN31@create_gen

; 666  : 		{
; 667  : 
; 668  : 			index = ENTITY_INDEX_DONT_CARE;

  01532	c7 45 b0 ff ff
	ff ff		 mov	 DWORD PTR _index$[ebp], -1

; 669  : 		}
; 670  : 		else

  01539	eb 2e		 jmp	 SHORT $LN33@create_gen
$LN31@create_gen:

; 671  : 		{
; 672  : 
; 673  : 			index = waypoint_indices [node_count];

  0153b	8b 45 a4	 mov	 eax, DWORD PTR _node_count$[ebp]
  0153e	8b 4d 1c	 mov	 ecx, DWORD PTR _waypoint_indices$[ebp]
  01541	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  01544	89 55 b0	 mov	 DWORD PTR _index$[ebp], edx

; 674  : 
; 675  : 			ASSERT (node_count < indices_count);

  01547	8b 45 a4	 mov	 eax, DWORD PTR _node_count$[ebp]
  0154a	3b 45 20	 cmp	 eax, DWORD PTR _indices_count$[ebp]
  0154d	7c 1a		 jl	 SHORT $LN33@create_gen
  0154f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  01554	05 da 01 00 00	 add	 eax, 474		; 000001daH
  01559	50		 push	 eax
  0155a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0155f	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EBKCOBAC@node_count?5?$DM?5indices_count@
  01564	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN33@create_gen:

; 676  : 		}
; 677  : 
; 678  : 		wp = create_local_entity

  01569	6a 00		 push	 0
  0156b	f3 0f 5a 45 84	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  01570	83 ec 08	 sub	 esp, 8
  01573	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01578	6a 2a		 push	 42			; 0000002aH
  0157a	6a 04		 push	 4
  0157c	f3 0f 5a 45 88	 cvtss2sd xmm0, DWORD PTR _height$[ebp]
  01581	83 ec 08	 sub	 esp, 8
  01584	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01589	6a 06		 push	 6
  0158b	6a 04		 push	 4
  0158d	6a 02		 push	 2
  0158f	68 fe 00 00 00	 push	 254			; 000000feH
  01594	6a 05		 push	 5
  01596	8b 45 ac	 mov	 eax, DWORD PTR _road_node$[ebp]
  01599	50		 push	 eax
  0159a	68 b4 00 00 00	 push	 180			; 000000b4H
  0159f	6a 05		 push	 5
  015a1	6a 11		 push	 17			; 00000011H
  015a3	6a 34		 push	 52			; 00000034H
  015a5	6a 05		 push	 5
  015a7	8b 4d bc	 mov	 ecx, DWORD PTR _waypoint_pos$[ebp]
  015aa	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  015af	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  015b3	83 ec 08	 sub	 esp, 8
  015b6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  015bb	8b 55 bc	 mov	 edx, DWORD PTR _waypoint_pos$[ebp]
  015be	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  015c3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  015c7	83 ec 08	 sub	 esp, 8
  015ca	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  015cf	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  015d2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  015d6	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  015da	83 ec 08	 sub	 esp, 8
  015dd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  015e2	6a 08		 push	 8
  015e4	6a 09		 push	 9
  015e6	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _last_wp$[ebp]
  015ec	51		 push	 ecx
  015ed	6a 2c		 push	 44			; 0000002cH
  015ef	6a 03		 push	 3
  015f1	8b 55 0c	 mov	 edx, DWORD PTR _task_en$[ebp]
  015f4	52		 push	 edx
  015f5	6a 2c		 push	 44			; 0000002cH
  015f7	6a 06		 push	 6
  015f9	8b 45 b0	 mov	 eax, DWORD PTR _index$[ebp]
  015fc	50		 push	 eax
  015fd	6a 24		 push	 36			; 00000024H
  015ff	e8 00 00 00 00	 call	 ?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_local_entity
  01604	81 c4 88 00 00
	00		 add	 esp, 136		; 00000088H
  0160a	89 85 7c ff ff
	ff		 mov	 DWORD PTR _wp$[ebp], eax

; 679  : 		(
; 680  : 			ENTITY_TYPE_WAYPOINT,
; 681  : 			index,
; 682  : 			ENTITY_ATTR_PARENT (LIST_TYPE_WAYPOINT, task_en),
; 683  : 			ENTITY_ATTR_CHILD_PRED (LIST_TYPE_WAYPOINT, last_wp),
; 684  : 			ENTITY_ATTR_VEC3D (VEC3D_TYPE_POSITION, waypoint_pos->x, waypoint_pos->y, waypoint_pos->z),
; 685  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_ENTITY_SUB_TYPE, ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION),
; 686  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_ROUTE_NODE, road_node),
; 687  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_WAYPOINT_FORMATION, FORMATION_ROW_LEFT),
; 688  : 			ENTITY_ATTR_FLOAT_VALUE (FLOAT_TYPE_ALTITUDE, height),
; 689  : 			ENTITY_ATTR_FLOAT_VALUE (FLOAT_TYPE_FLIGHT_TIME, flight_time),
; 690  : 			ENTITY_ATTR_END
; 691  : 		);
; 692  : 
; 693  : 		//
; 694  : 		// Assign specified waypoint stuff
; 695  : 		//
; 696  : 
; 697  : 		if ((waypoint_pos->x == specified_route_ptr->position.x) && (waypoint_pos->z == specified_route_ptr->position.z))

  01610	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  01613	8b 4d f0	 mov	 ecx, DWORD PTR _specified_route_ptr$[ebp]
  01616	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0161a	0f 2e 41 0c	 ucomiss xmm0, DWORD PTR [ecx+12]
  0161e	9f		 lahf
  0161f	f6 c4 44	 test	 ah, 68			; 00000044H
  01622	0f 8a 3f 02 00
	00		 jp	 $LN34@create_gen
  01628	8b 45 bc	 mov	 eax, DWORD PTR _waypoint_pos$[ebp]
  0162b	8b 4d f0	 mov	 ecx, DWORD PTR _specified_route_ptr$[ebp]
  0162e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  01633	0f 2e 41 14	 ucomiss xmm0, DWORD PTR [ecx+20]
  01637	9f		 lahf
  01638	f6 c4 44	 test	 ah, 68			; 00000044H
  0163b	0f 8a 26 02 00
	00		 jp	 $LN34@create_gen

; 698  : 		{
; 699  : 
; 700  : 			#if DEBUG_MODULE
; 701  : 			if (debug_flag)
; 702  : 			{
; 703  : 	
; 704  : 				debug_log ("CROUTE:    Assigning waypoint %d (%d) to route. Type %s, formation %s, dependent %s",
; 705  : 								node_count,
; 706  : 								get_local_entity_index (wp),
; 707  : 								waypoint_database [specified_route_ptr->type].full_name,
; 708  : 								formation_names [specified_route_ptr->formation],
; 709  : 								(specified_route_ptr->dependent) ? (get_local_entity_string (specified_route_ptr->dependent, STRING_TYPE_FULL_NAME)) : ("None"));
; 710  : 	
; 711  : 			}
; 712  : 			#endif
; 713  : 
; 714  : 			set_local_entity_int_value (wp, INT_TYPE_ENTITY_SUB_TYPE, specified_route_ptr->type);

  01641	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR _wp$[ebp], 0
  01648	74 10		 je	 SHORT $LN147@create_gen
  0164a	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _wp$[ebp]
  01650	8b 08		 mov	 ecx, DWORD PTR [eax]
  01652	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv918[ebp], ecx
  01658	eb 27		 jmp	 SHORT $LN148@create_gen
$LN147@create_gen:
  0165a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  01660	81 c2 01 02 00
	00		 add	 edx, 513		; 00000201H
  01666	52		 push	 edx
  01667	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0166c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01671	50		 push	 eax
  01672	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01677	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv918[ebp], 0
$LN148@create_gen:
  01681	b9 01 00 00 00	 mov	 ecx, 1
  01686	85 c9		 test	 ecx, ecx
  01688	74 0c		 je	 SHORT $LN149@create_gen
  0168a	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv926[ebp], 52 ; 00000034H
  01694	eb 27		 jmp	 SHORT $LN150@create_gen
$LN149@create_gen:
  01696	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  0169c	81 c2 01 02 00
	00		 add	 edx, 513		; 00000201H
  016a2	52		 push	 edx
  016a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  016a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  016ad	50		 push	 eax
  016ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  016b3	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv926[ebp], 0
$LN150@create_gen:
  016bd	8b 4d f0	 mov	 ecx, DWORD PTR _specified_route_ptr$[ebp]
  016c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  016c2	52		 push	 edx
  016c3	6a 34		 push	 52			; 00000034H
  016c5	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _wp$[ebp]
  016cb	50		 push	 eax
  016cc	69 8d 18 ff ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv918[ebp], 1116
  016d6	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv926[ebp]
  016dc	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[ecx+edx*4]
  016e3	ff d0		 call	 eax

; 715  : 
; 716  : 			set_local_entity_int_value (wp, INT_TYPE_WAYPOINT_FORMATION, specified_route_ptr->formation);

  016e5	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR _wp$[ebp], 0
  016ec	74 10		 je	 SHORT $LN151@create_gen
  016ee	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _wp$[ebp]
  016f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  016f6	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv939[ebp], ecx
  016fc	eb 27		 jmp	 SHORT $LN152@create_gen
$LN151@create_gen:
  016fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  01704	81 c2 03 02 00
	00		 add	 edx, 515		; 00000203H
  0170a	52		 push	 edx
  0170b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  01710	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01715	50		 push	 eax
  01716	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0171b	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv939[ebp], 0
$LN152@create_gen:
  01725	b9 01 00 00 00	 mov	 ecx, 1
  0172a	85 c9		 test	 ecx, ecx
  0172c	74 0c		 je	 SHORT $LN153@create_gen
  0172e	c7 85 14 ff ff
	ff fe 00 00 00	 mov	 DWORD PTR tv947[ebp], 254 ; 000000feH
  01738	eb 27		 jmp	 SHORT $LN154@create_gen
$LN153@create_gen:
  0173a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  01740	81 c2 03 02 00
	00		 add	 edx, 515		; 00000203H
  01746	52		 push	 edx
  01747	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0174c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01751	50		 push	 eax
  01752	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01757	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv947[ebp], 0
$LN154@create_gen:
  01761	8b 4d f0	 mov	 ecx, DWORD PTR _specified_route_ptr$[ebp]
  01764	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  01767	52		 push	 edx
  01768	68 fe 00 00 00	 push	 254			; 000000feH
  0176d	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _wp$[ebp]
  01773	50		 push	 eax
  01774	69 8d 18 ff ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv939[ebp], 1116
  0177e	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv947[ebp]
  01784	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[ecx+edx*4]
  0178b	ff d0		 call	 eax

; 717  : 
; 718  : 			set_local_entity_int_value (wp, INT_TYPE_POSITION_TYPE, get_waypoint_database_position_type_value (specified_route_ptr->type, task_route_type));

  0178d	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR _wp$[ebp], 0
  01794	74 10		 je	 SHORT $LN155@create_gen
  01796	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _wp$[ebp]
  0179c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0179e	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv960[ebp], ecx
  017a4	eb 27		 jmp	 SHORT $LN156@create_gen
$LN155@create_gen:
  017a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  017ac	81 c2 05 02 00
	00		 add	 edx, 517		; 00000205H
  017b2	52		 push	 edx
  017b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  017b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  017bd	50		 push	 eax
  017be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  017c3	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv960[ebp], 0
$LN156@create_gen:
  017cd	b9 01 00 00 00	 mov	 ecx, 1
  017d2	85 c9		 test	 ecx, ecx
  017d4	74 0c		 je	 SHORT $LN157@create_gen
  017d6	c7 85 14 ff ff
	ff a1 00 00 00	 mov	 DWORD PTR tv968[ebp], 161 ; 000000a1H
  017e0	eb 27		 jmp	 SHORT $LN158@create_gen
$LN157@create_gen:
  017e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z@4JA
  017e8	81 c2 05 02 00
	00		 add	 edx, 517		; 00000205H
  017ee	52		 push	 edx
  017ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IHABKHFM@c?3?2users?2nhv90?2projects?2eech?2ap@
  017f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  017f9	50		 push	 eax
  017fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  017ff	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv968[ebp], 0
$LN158@create_gen:
  01809	8b 4d e4	 mov	 ecx, DWORD PTR _task_route_type$[ebp]
  0180c	51		 push	 ecx
  0180d	8b 55 f0	 mov	 edx, DWORD PTR _specified_route_ptr$[ebp]
  01810	8b 02		 mov	 eax, DWORD PTR [edx]
  01812	50		 push	 eax
  01813	e8 00 00 00 00	 call	 ?get_waypoint_database_position_type_value@@YGHHW4ENTITY_TYPES@@@Z ; get_waypoint_database_position_type_value
  01818	50		 push	 eax
  01819	68 a1 00 00 00	 push	 161			; 000000a1H
  0181e	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _wp$[ebp]
  01824	51		 push	 ecx
  01825	69 95 18 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv960[ebp], 1116
  0182f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv968[ebp]
  01835	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  0183c	ff d1		 call	 ecx

; 719  : 
; 720  : 			if (specified_route_ptr->dependent)

  0183e	8b 45 f0	 mov	 eax, DWORD PTR _specified_route_ptr$[ebp]
  01841	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01845	74 17		 je	 SHORT $LN35@create_gen

; 721  : 			{
; 722  : 
; 723  : 				insert_local_entity_into_parents_child_list (wp, LIST_TYPE_TASK_DEPENDENT, specified_route_ptr->dependent, NULL);

  01847	6a 00		 push	 0
  01849	8b 45 f0	 mov	 eax, DWORD PTR _specified_route_ptr$[ebp]
  0184c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0184f	51		 push	 ecx
  01850	6a 27		 push	 39			; 00000027H
  01852	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _wp$[ebp]
  01858	52		 push	 edx
  01859	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN35@create_gen:

; 724  : 			}
; 725  : 
; 726  : 			specified_route_ptr = specified_route_ptr->next;

  0185e	8b 45 f0	 mov	 eax, DWORD PTR _specified_route_ptr$[ebp]
  01861	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01864	89 4d f0	 mov	 DWORD PTR _specified_route_ptr$[ebp], ecx
$LN34@create_gen:

; 727  : 		}
; 728  : 
; 729  : 		node_count ++;

  01867	8b 45 a4	 mov	 eax, DWORD PTR _node_count$[ebp]
  0186a	83 c0 01	 add	 eax, 1
  0186d	89 45 a4	 mov	 DWORD PTR _node_count$[ebp], eax

; 730  : 
; 731  : 		last_wp = wp;

  01870	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _wp$[ebp]
  01876	89 85 74 ff ff
	ff		 mov	 DWORD PTR _last_wp$[ebp], eax

; 732  : 
; 733  : 		new_route = new_route->next;

  0187c	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
  0187f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01882	89 4d f8	 mov	 DWORD PTR _new_route$[ebp], ecx

; 734  : 	}

  01885	e9 80 f8 ff ff	 jmp	 $LN9@create_gen
$LN10@create_gen:

; 735  : 
; 736  : 	//////////////////////////////////////////////////////////////////
; 737  : 	//
; 738  : 	// Post process route
; 739  : 	//
; 740  : 	//////////////////////////////////////////////////////////////////
; 741  : 	
; 742  : 	parser_task_waypoint_route (group, task_en);

  0188a	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  0188d	50		 push	 eax
  0188e	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  01891	51		 push	 ecx
  01892	e8 00 00 00 00	 call	 ?parser_task_waypoint_route@@YGXPAUENTITY@@0@Z ; parser_task_waypoint_route

; 743  : 
; 744  : 	#if DEBUG_MODULE
; 745  : 	if (debug_flag)
; 746  : 	{
; 747  : 
; 748  : 		vec3d
; 749  : 			*pos;
; 750  : 
; 751  : 		entity
; 752  : 			*wp;
; 753  : 
; 754  : 		debug_log ("CROUTE: -----------------------------------------------------------------------------------");
; 755  : 
; 756  : 		debug_log ("CROUTE: Task %s (%d) Final route created = ", get_local_entity_string (task_en, STRING_TYPE_FULL_NAME), get_local_entity_index (task_en));
; 757  : 
; 758  : 		wp = get_local_entity_first_child (task_en, LIST_TYPE_WAYPOINT);
; 759  : 
; 760  : 		while (wp)
; 761  : 		{
; 762  : 
; 763  : 			if (get_local_entity_int_value (wp, INT_TYPE_POSITION_TYPE) == POSITION_TYPE_VIRTUAL)
; 764  : 			{
; 765  : 	
; 766  : 				debug_log ("CROUTE:      waypoint %s (%d) at virtual position, formation %s, dependent on %s",
; 767  : 								entity_sub_type_waypoint_names [get_local_entity_int_value (wp, INT_TYPE_ENTITY_SUB_TYPE)],
; 768  : 								get_local_entity_index (wp),
; 769  : 								formation_names [get_local_entity_int_value (wp, INT_TYPE_WAYPOINT_FORMATION)],
; 770  : 								(get_local_entity_parent (wp, LIST_TYPE_TASK_DEPENDENT)) ? (get_local_entity_string (get_local_entity_parent (wp, LIST_TYPE_TASK_DEPENDENT), STRING_TYPE_FULL_NAME)) : ("None"));
; 771  : 			}
; 772  : 			else
; 773  : 			{
; 774  : 	
; 775  : 				pos = get_local_entity_vec3d_ptr (wp, VEC3D_TYPE_POSITION);
; 776  : 	
; 777  : 				debug_log ("CROUTE:      waypoint %s (%d) at [%f, %f, %f], formation %s, dependent %s",
; 778  : 								entity_sub_type_waypoint_names [get_local_entity_int_value (wp, INT_TYPE_ENTITY_SUB_TYPE)],
; 779  : 								get_local_entity_index (wp),
; 780  : 								pos->x, pos->y, pos->z,
; 781  : 								formation_names [get_local_entity_int_value (wp, INT_TYPE_WAYPOINT_FORMATION)],
; 782  : 								(get_local_entity_parent (wp, LIST_TYPE_TASK_DEPENDENT)) ? (get_local_entity_string (get_local_entity_parent (wp, LIST_TYPE_TASK_DEPENDENT), STRING_TYPE_FULL_NAME)) : ("None"));
; 783  : 			}
; 784  : 
; 785  : 			wp = get_local_entity_child_succ (wp, LIST_TYPE_WAYPOINT);
; 786  : 		}
; 787  : 
; 788  : 		debug_log ("CROUTE: ===================================================================================");
; 789  : 	}
; 790  : 	#endif
; 791  : 
; 792  : 	//////////////////////////////////////////////////////////////////
; 793  : 	//
; 794  : 	// Tidy up
; 795  : 	//
; 796  : 	//////////////////////////////////////////////////////////////////
; 797  : 
; 798  : 	// restore stack attirbutes
; 799  : 
; 800  : 	set_force_local_entity_create_stack_attributes (create_stack_attributes);

  01897	8b 45 94	 mov	 eax, DWORD PTR _create_stack_attributes$[ebp]
  0189a	a3 00 00 00 00	 mov	 DWORD PTR ?force_local_entity_create_stack_attributes@@3HA, eax ; force_local_entity_create_stack_attributes

; 801  : 
; 802  : 	// free memory
; 803  : 
; 804  : 	if (new_route != specified_route)

  0189f	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
  018a2	3b 45 f4	 cmp	 eax, DWORD PTR _specified_route$[ebp]
  018a5	74 09		 je	 SHORT $LN36@create_gen

; 805  : 	{
; 806  : 
; 807  : 		destroy_fast_route (specified_route);

  018a7	8b 45 f4	 mov	 eax, DWORD PTR _specified_route$[ebp]
  018aa	50		 push	 eax
  018ab	e8 00 00 00 00	 call	 ?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z ; destroy_fast_route
$LN36@create_gen:

; 808  : 	}
; 809  : 
; 810  : 	destroy_fast_route (new_route);

  018b0	8b 45 f8	 mov	 eax, DWORD PTR _new_route$[ebp]
  018b3	50		 push	 eax
  018b4	e8 00 00 00 00	 call	 ?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z ; destroy_fast_route

; 811  : 
; 812  : 	//////////////////////////////////////////////////////////////////
; 813  : 	//
; 814  : 	// Create on Clients
; 815  : 	//
; 816  : 	//////////////////////////////////////////////////////////////////
; 817  : 
; 818  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  018b9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  018c0	75 26		 jne	 SHORT $LN37@create_gen

; 819  : 	{
; 820  : 
; 821  : 		transmit_entity_comms_message (ENTITY_COMMS_CREATE_WAYPOINT_ROUTE, task_en, group, return_keysite, start_ptr, stop_ptr, check_sum, node_count);

  018c2	8b 45 a4	 mov	 eax, DWORD PTR _node_count$[ebp]
  018c5	50		 push	 eax
  018c6	8b 4d a8	 mov	 ecx, DWORD PTR _check_sum$[ebp]
  018c9	51		 push	 ecx
  018ca	8b 55 c4	 mov	 edx, DWORD PTR _stop_ptr$[ebp]
  018cd	52		 push	 edx
  018ce	8b 45 c0	 mov	 eax, DWORD PTR _start_ptr$[ebp]
  018d1	50		 push	 eax
  018d2	8b 4d 10	 mov	 ecx, DWORD PTR _return_keysite$[ebp]
  018d5	51		 push	 ecx
  018d6	8b 55 08	 mov	 edx, DWORD PTR _group$[ebp]
  018d9	52		 push	 edx
  018da	8b 45 0c	 mov	 eax, DWORD PTR _task_en$[ebp]
  018dd	50		 push	 eax
  018de	6a 0d		 push	 13			; 0000000dH
  018e0	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  018e5	83 c4 20	 add	 esp, 32			; 00000020H
$LN37@create_gen:

; 822  : 	}
; 823  : 
; 824  : 	return TRUE;

  018e8	b8 01 00 00 00	 mov	 eax, 1
$LN1@create_gen:

; 825  : }

  018ed	5f		 pop	 edi
  018ee	5e		 pop	 esi
  018ef	5b		 pop	 ebx
  018f0	8b e5		 mov	 esp, ebp
  018f2	5d		 pop	 ebp
  018f3	c2 1c 00	 ret	 28			; 0000001cH
?create_generic_waypoint_route@@YGHPAUENTITY@@00PAUVEC3D@@1PAIH@Z ENDP ; create_generic_waypoint_route
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?ceil@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?ceil@@YGMM@Z PROC					; ceil, COMDAT

; 66   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 67   : 	return (_CSTD ceilf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _ceilf
  00019	83 c4 04	 add	 esp, 4

; 68   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?ceil@@YGMM@Z ENDP					; ceil
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _ceilf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT

; 643  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 644  :             return (float)ceil(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  0001c	83 c4 08	 add	 esp, 8
  0001f	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00022	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 645  :         }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_ceilf	ENDP
_TEXT	ENDS
END
