; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\misc\msg_out.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BB@OMJMDMAF@Attack?5My?5Target@		; `string'
PUBLIC	??_C@_07PPDFJLCN@Help?5Me@			; `string'
PUBLIC	??_C@_0N@IEJNAEGK@Weapons?5Hold@		; `string'
PUBLIC	??_C@_0N@IPBEDPIH@Weapons?5Free@		; `string'
PUBLIC	??_C@_0O@IMEEPEIA@Hold?5Position@		; `string'
PUBLIC	??_C@_0BB@PPIJLLNH@Rejoin?5Formation@		; `string'
PUBLIC	??_C@_0P@GPNCODPJ@Return?5To?5Base@		; `string'
;	COMDAT ??_C@_0P@GPNCODPJ@Return?5To?5Base@
CONST	SEGMENT
??_C@_0P@GPNCODPJ@Return?5To?5Base@ DB 'Return To Base', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PPIJLLNH@Rejoin?5Formation@
CONST	SEGMENT
??_C@_0BB@PPIJLLNH@Rejoin?5Formation@ DB 'Rejoin Formation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IMEEPEIA@Hold?5Position@
CONST	SEGMENT
??_C@_0O@IMEEPEIA@Hold?5Position@ DB 'Hold Position', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IPBEDPIH@Weapons?5Free@
CONST	SEGMENT
??_C@_0N@IPBEDPIH@Weapons?5Free@ DB 'Weapons Free', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IEJNAEGK@Weapons?5Hold@
CONST	SEGMENT
??_C@_0N@IEJNAEGK@Weapons?5Hold@ DB 'Weapons Hold', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PPDFJLCN@Help?5Me@
CONST	SEGMENT
??_C@_07PPDFJLCN@Help?5Me@ DB 'Help Me', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OMJMDMAF@Attack?5My?5Target@
CONST	SEGMENT
??_C@_0BB@OMJMDMAF@Attack?5My?5Target@ DB 'Attack My Target', 00H ; `string'
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_atan2f
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?get_outgoing_in_flight_message_flag@@YGHXZ	; get_outgoing_in_flight_message_flag
PUBLIC	?display_in_flight_outgoing_messages@@YGXXZ	; display_in_flight_outgoing_messages
PUBLIC	?stop_messaging_system@@YGXPAUEVENT@@@Z		; stop_messaging_system
PUBLIC	?start_messaging_system@@YGXPAUEVENT@@@Z	; start_messaging_system
PUBLIC	?set_message_events@@YGXXZ			; set_message_events
PUBLIC	?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z ; send_text_message
PUBLIC	?comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z ; comms_shortcut_attack_my_target
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??start_messaging_system@@YGXPAUEVENT@@@Z@4JA ; `start_messaging_system'::`1'::__LINE__Var
PUBLIC	??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BE@KOLCCDEB@get_pilot_entity?5?$CI?$CJ@	; `string'
PUBLIC	??_C@_0P@FOFPIGJL@message?5events@		; `string'
PUBLIC	?__LINE__Var@?0??get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z@4JA ; `get_message_action'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@JLFLEIIN@message_database@		; `string'
PUBLIC	?__LINE__Var@?0??request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z@4JA ; `request_wingmen_status'::`1'::__LINE__Var
PUBLIC	??_C@_0CE@IGJHNOOE@MSG_OUT?3?5No?5Fn?5Key?5index?5for?5ke@ ; `string'
PUBLIC	??_C@_0CA@MHAKEIAD@MSG_OUT?3?5No?5Fn?5Key?5for?5index?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA ; `initialise_message_database'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@OKBKIHIB@Select?5Destination@		; `string'
PUBLIC	??_C@_0N@FHAKFJBP@Flight?5Group@		; `string'
PUBLIC	??_C@_07LONCHGDE@Wingmen@			; `string'
PUBLIC	??_C@_0L@LFEHHGIB@Local?5Base@			; `string'
PUBLIC	??_C@_0O@ENHBDOIL@Other?5Players@		; `string'
PUBLIC	??_C@_0O@OBCHIKHB@COMM?5Channels@		; `string'
PUBLIC	??_C@_0N@KLJBOPJI@Wingman?5List@		; `string'
PUBLIC	??_C@_0P@KBDBDPPN@Select?5Message@		; `string'
PUBLIC	??_C@_06LMEHDPDN@Bob?9Up@			; `string'
PUBLIC	??_C@_0L@CLPAFCMJ@Attack?5PFZ@			; `string'
PUBLIC	??_C@_0BE@DNKIDAFK@Request?5Target?5List@	; `string'
PUBLIC	??_C@_0BB@GIMEMIMC@Keyboard?5Message@		; `string'
PUBLIC	??_C@_0O@IEKEPKKG@loop?5?$DN?$DN?5count@	; `string'
PUBLIC	??_C@_0P@PLCOHACH@Formation?5List@		; `string'
PUBLIC	??_C@_0O@COLHPDCA@Report?5Status@		; `string'
PUBLIC	??_C@_08PEAIGCDM@Row?5Left@			; `string'
PUBLIC	??_C@_09DFGEHLIM@Row?5Right@			; `string'
PUBLIC	??_C@_0N@CLHHNGEE@Echelon?5Left@		; `string'
PUBLIC	??_C@_0O@GLGFPNDG@Echelon?5Right@		; `string'
PUBLIC	??_C@_06FFIACGFC@Column@			; `string'
PUBLIC	??_C@_05OPDCLMDN@Wedge@				; `string'
PUBLIC	??_C@_07KLLDCFGI@Diamond@			; `string'
PUBLIC	??_C@_0BF@ECNLFKOM@Staggered?5Trail?5Left@	; `string'
PUBLIC	??_C@_0BG@LDABHKGA@Staggered?5Trail?5Right@	; `string'
PUBLIC	??_C@_0BC@NPNKLGNO@Request?5Airstrike@		; `string'
PUBLIC	??_C@_0BC@HLINHDHK@Request?5Artillery@		; `string'
PUBLIC	??_C@_0BD@KDGPIINE@Request?5Assistance@		; `string'
PUBLIC	??_C@_0P@OAICFPEP@Transmit?5Recon@		; `string'
PUBLIC	??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0M@KCCDHAHC@Player?5List@			; `string'
PUBLIC	??_C@_09MCFJPMFI@loop?5?$DN?$DN?58@		; `string'
PUBLIC	??_C@_07DLLKCFJK@More?4?4?4@			; `string'
PUBLIC	??_C@_0L@KBIHAIJC@count?5?$DN?$DN?50@		; `string'
PUBLIC	??_C@_0BL@IDGKFDNO@Air?5Traffic?5Controller?5OFF@ ; `string'
PUBLIC	??_C@_0BK@OOLAHHLK@Air?5Traffic?5Controller?5ON@ ; `string'
PUBLIC	??_C@_0BL@FOMDKOAC@Forward?5Air?5Controller?5OFF@ ; `string'
PUBLIC	??_C@_0BK@EKDBGCNF@Forward?5Air?5Controller?5ON@ ; `string'
PUBLIC	??_C@_0BG@OOGCNBNG@Ground?5Controller?5OFF@	; `string'
PUBLIC	??_C@_0BF@DLNGJEKP@Ground?5Controller?5ON@	; `string'
PUBLIC	??_C@_0M@GAGADMJM@Wingmen?5OFF@			; `string'
PUBLIC	??_C@_0L@IHNECHDC@Wingmen?5ON@			; `string'
PUBLIC	?__LINE__Var@?0??create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z@4JA ; `create_message_database_list'::`1'::__LINE__Var
PUBLIC	??_C@_04CIMGMMMG@text@				; `string'
PUBLIC	?__LINE__Var@?0??add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z@4JA ; `add_message_action_to_database'::`1'::__LINE__Var
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	??_C@_0CC@CLINMMIE@index?5?$DM?5parent?9?$DOnumber_of_actio@ ; `string'
PUBLIC	??_C@_0BA@MCEPIKPL@translated_text@		; `string'
PUBLIC	??_C@_0BE@LIPLDKEL@mesage?5input?5events@	; `string'
PUBLIC	??_C@_03DMGAKJG@?$CFc?$AA@			; `string'
PUBLIC	?__LINE__Var@?0??message_wingman_input_end@@YGXH@Z@4JA ; `message_wingman_input_end'::`1'::__LINE__Var
PUBLIC	??_C@_06HDFDANIG@member@			; `string'
PUBLIC	?__LINE__Var@?0??send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z@4JA ; `send_text_message'::`1'::__LINE__Var
PUBLIC	??_C@_0N@ONAJEKJN@text?5?$DN?$DN?5NULL@		; `string'
PUBLIC	?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA ; `send_wingman_message'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@EFGJCDOG@current_pfz?5?$CB?$DN?5NO_PFZ@ ; `string'
PUBLIC	??_C@_0BP@GENNMKFB@transmitting?5engage?5for?5?$CFi?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??send_group_message@@YGXUMESSAGE_TYPE@@@Z@4JA ; `send_group_message'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z@4JA ; `send_wingman_message_to_human_player'::`1'::__LINE__Var
PUBLIC	??_C@_06CGHJMPBJ@sender@			; `string'
PUBLIC	??_C@_07EAKNLMLO@wingman@			; `string'
PUBLIC	?__LINE__Var@?0??comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z@4JA ; `comms_shortcut_attack_my_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z@4JA ; `get_wingman_message_text'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA ; `get_wingman_attack_my_target_text'::`1'::__LINE__Var
PUBLIC	??_C@_05CFMCGLCK@Range@				; `string'
PUBLIC	??_C@_07DIOKDEDN@Heading@			; `string'
PUBLIC	??_C@_0BJ@BJAOOLEG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?40fm@ ; `string'
PUBLIC	??_C@_0BK@HGBIKKKG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?41fkm@ ; `string'
PUBLIC	?__LINE__Var@?0??send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA ; `send_pilot_keyboard_message'::`1'::__LINE__Var
PUBLIC	??_C@_0CH@GANDFAMA@message?4type?5?$DN?$DN?5MESSAGE_PILOT_K@ ; `string'
PUBLIC	?__LINE__Var@?0??send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA ; `send_wingman_keyboard_message'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@NCFGHBFM@message?4type?5?$DN?$DN?5MESSAGE_WINGMAN@ ; `string'
PUBLIC	?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA ; `display_in_flight_outgoing_messages'::`1'::__LINE__Var
PUBLIC	??_C@_05GHBHHPIK@88?4?9?9@			; `string'
PUBLIC	??_C@_0O@OHJDBNJC@Enter?5Message@		; `string'
PUBLIC	??_C@_08KEKKEAAD@?$CFs?5?3?5?$CFs_@		; `string'
PUBLIC	??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs@		; `string'
PUBLIC	??_C@_03DKEJHHJP@?$CFs?3@			; `string'
PUBLIC	??_C@_0M@EHHFEBNH@?$CINO?5TITLE?$CJ?3@		; `string'
PUBLIC	??_C@_03NIOBFDP@?$CFd?4@			; `string'
PUBLIC	??_C@_07GJEPFJ@?$CFs?51?9?$CFd@			; `string'
PUBLIC	??_C@_05DNDNCJEB@?5?$CI?$CFs?$CJ@		; `string'
PUBLIC	??_C@_0M@ENMNLKIB@All?5Players@			; `string'
PUBLIC	??_C@_05KIBFDOPF@pilot@				; `string'
PUBLIC	??_C@_0L@BICHBFM@?$CINO?5TITLE?$CJ@		; `string'
PUBLIC	??_C@_0L@CJIKFEGP@Esc?5?9?5Exit@		; `string'
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@4097700000000000
PUBLIC	__real@42652ee0
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memset:PROC
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_atan2:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z:PROC	; set_event
EXTRN	?push_event@@YGXP6GXXZPBD@Z:PROC		; push_event
EXTRN	?push_event_overlay@@YGXP6GXXZPBD@Z:PROC	; push_event_overlay
EXTRN	?pop_event@@YGXP6GXXZ@Z:PROC			; pop_event
EXTRN	?set_alpha_events@@YGXXZ:PROC			; set_alpha_events
EXTRN	?set_alpha_event_functions@@YGXP6GXH@Z00@Z:PROC	; set_alpha_event_functions
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?dinput_to_ascii@@YGDH@Z:PROC			; dinput_to_ascii
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?frac@@YGMM@Z:PROC				; frac
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_ui_font_colour
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?transmit_pfz@@YGXPAUENTITY@@0MMMMMMMMQAPAU1@@Z:PROC ; transmit_pfz
EXTRN	?get_sound_channel_muted@@YGHH@Z:PROC		; get_sound_channel_muted
EXTRN	?set_sound_channel_muted@@YGXHH@Z:PROC		; set_sound_channel_muted
EXTRN	?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_valid
EXTRN	?set_view_menu_display_visible_status@@YGXH@Z:PROC ; set_view_menu_display_visible_status
EXTRN	?get_pfz@@YGPAUpfz@@I@Z:PROC			; get_pfz
EXTRN	?coordinate_is_inside_square@@YGHPAUVEC3D@@0000@Z:PROC ; coordinate_is_inside_square
EXTRN	?pfz_active@@YGHXZ:PROC				; pfz_active
EXTRN	?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z:PROC ; get_gunship_target_valid_for_ground_radar
EXTRN	?message_text_type_send_string@@YGHW4MESSAGE_TEXT_TYPES@@@Z:PROC ; message_text_type_send_string
EXTRN	?set_incoming_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PAD@Z:PROC ; set_incoming_message
EXTRN	?process_radio_message@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@H@Z:PROC ; process_radio_message
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?engage_specific_targets@@YGXPAUENTITY@@QAPAU1@@Z:PROC ; engage_specific_targets
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?pilot_entity@@3PAUENTITY@@A:DWORD		; pilot_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?ext_col_list_title@@3UREAL_COLOUR@@A:DWORD	; ext_col_list_title
EXTRN	?ext_col_list_item_available@@3UREAL_COLOUR@@A:DWORD ; ext_col_list_item_available
EXTRN	?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A:DWORD ; ext_col_list_item_unavailable
EXTRN	?ext_col_blue_force@@3UREAL_COLOUR@@A:DWORD	; ext_col_blue_force
EXTRN	?ext_col_red_force@@3UREAL_COLOUR@@A:DWORD	; ext_col_red_force
EXTRN	?current_pfz@@3IA:DWORD				; current_pfz
EXTRN	?message_text_info@@3QBUMESSAGE_TEXT_INFO_TYPE@@B:BYTE ; message_text_info
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?current_message@@3UMESSAGE_TYPE@@A DQ 01H DUP (?)	; current_message
?message_destination@@3UMESSAGE_TYPE@@A DQ 01H DUP (?)	; message_destination
?message_database@@3PAUMESSAGE_ACTION_TYPE@@A DD 01H DUP (?) ; message_database
?in_flight_messages@@3HA DD 01H DUP (?)			; in_flight_messages
?keyboard_message@@3PADA DB 060H DUP (?)		; keyboard_message
?attack_my_target_message@@3PADA DB 0200H DUP (?)	; attack_my_target_message
?flash_timer@?1??display_in_flight_outgoing_messages@@YGXXZ@4MA DD 01H DUP (?) ; `display_in_flight_outgoing_messages'::`2'::flash_timer
_BSS	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@4097700000000000
CONST	SEGMENT
__real@4097700000000000 DQ 04097700000000000r	; 1500
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT ??_C@_0L@CJIKFEGP@Esc?5?9?5Exit@
CONST	SEGMENT
??_C@_0L@CJIKFEGP@Esc?5?9?5Exit@ DB 'Esc - Exit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BICHBFM@?$CINO?5TITLE?$CJ@
CONST	SEGMENT
??_C@_0L@BICHBFM@?$CINO?5TITLE?$CJ@ DB '(NO TITLE)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KIBFDOPF@pilot@
CONST	SEGMENT
??_C@_05KIBFDOPF@pilot@ DB 'pilot', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ENMNLKIB@All?5Players@
CONST	SEGMENT
??_C@_0M@ENMNLKIB@All?5Players@ DB 'All Players', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05DNDNCJEB@?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_05DNDNCJEB@?5?$CI?$CFs?$CJ@ DB ' (%s)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GJEPFJ@?$CFs?51?9?$CFd@
CONST	SEGMENT
??_C@_07GJEPFJ@?$CFs?51?9?$CFd@ DB '%s 1-%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIOBFDP@?$CFd?4@
CONST	SEGMENT
??_C@_03NIOBFDP@?$CFd?4@ DB '%d.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EHHFEBNH@?$CINO?5TITLE?$CJ?3@
CONST	SEGMENT
??_C@_0M@EHHFEBNH@?$CINO?5TITLE?$CJ?3@ DB '(NO TITLE):', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03DKEJHHJP@?$CFs?3@
CONST	SEGMENT
??_C@_03DKEJHHJP@?$CFs?3@ DB '%s:', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs@
CONST	SEGMENT
??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs@ DB '%s : %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKKEAAD@?$CFs?5?3?5?$CFs_@
CONST	SEGMENT
??_C@_08KEKKEAAD@?$CFs?5?3?5?$CFs_@ DB '%s : %s_', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OHJDBNJC@Enter?5Message@
CONST	SEGMENT
??_C@_0O@OHJDBNJC@Enter?5Message@ DB 'Enter Message', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GHBHHPIK@88?4?9?9@
CONST	SEGMENT
??_C@_05GHBHHPIK@88?4?9?9@ DB '88.--', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA DD 07a8H ; `display_in_flight_outgoing_messages'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@NCFGHBFM@message?4type?5?$DN?$DN?5MESSAGE_WINGMAN@
CONST	SEGMENT
??_C@_0CJ@NCFGHBFM@message?4type?5?$DN?$DN?5MESSAGE_WINGMAN@ DB 'message.'
	DB	'type == MESSAGE_WINGMAN_KEYBOARD', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA DD 0794H ; `send_wingman_keyboard_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@GANDFAMA@message?4type?5?$DN?$DN?5MESSAGE_PILOT_K@
CONST	SEGMENT
??_C@_0CH@GANDFAMA@message?4type?5?$DN?$DN?5MESSAGE_PILOT_K@ DB 'message.'
	DB	'type == MESSAGE_PILOT_KEYBOARD', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA DD 0789H ; `send_pilot_keyboard_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BK@HGBIKKKG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?41fkm@
CONST	SEGMENT
??_C@_0BK@HGBIKKKG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?41fkm@ DB '%'
	DB	's - %s %s %03d %s %.1fkm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BJAOOLEG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?40fm@
CONST	SEGMENT
??_C@_0BJ@BJAOOLEG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?40fm@ DB '%'
	DB	's - %s %s %03d %s %.0fm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DIOKDEDN@Heading@
CONST	SEGMENT
??_C@_07DIOKDEDN@Heading@ DB 'Heading', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CFMCGLCK@Range@
CONST	SEGMENT
??_C@_05CFMCGLCK@Range@ DB 'Range', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA DD 0735H ; `get_wingman_attack_my_target_text'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z@4JA DD 0716H ; `get_wingman_message_text'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z@4JA DD 06fcH ; `comms_shortcut_attack_my_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07EAKNLMLO@wingman@
CONST	SEGMENT
??_C@_07EAKNLMLO@wingman@ DB 'wingman', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CGHJMPBJ@sender@
CONST	SEGMENT
??_C@_06CGHJMPBJ@sender@ DB 'sender', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z@4JA DD 06e0H ; `send_wingman_message_to_human_player'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??send_group_message@@YGXUMESSAGE_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_group_message@@YGXUMESSAGE_TYPE@@@Z@4JA DD 068dH ; `send_group_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BP@GENNMKFB@transmitting?5engage?5for?5?$CFi?3?5?$CFs@
CONST	SEGMENT
??_C@_0BP@GENNMKFB@transmitting?5engage?5for?5?$CFi?3?5?$CFs@ DB 'transmi'
	DB	'tting engage for %i: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFGJCDOG@current_pfz?5?$CB?$DN?5NO_PFZ@
CONST	SEGMENT
??_C@_0BG@EFGJCDOG@current_pfz?5?$CB?$DN?5NO_PFZ@ DB 'current_pfz != NO_P'
	DB	'FZ', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA DD 063fH ; `send_wingman_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@ONAJEKJN@text?5?$DN?$DN?5NULL@
CONST	SEGMENT
??_C@_0N@ONAJEKJN@text?5?$DN?$DN?5NULL@ DB 'text == NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z@4JA DD 05e6H ; `send_text_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06HDFDANIG@member@
CONST	SEGMENT
??_C@_06HDFDANIG@member@ DB 'member', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??message_wingman_input_end@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??message_wingman_input_end@@YGXH@Z@4JA DD 05c2H ; `message_wingman_input_end'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03DMGAKJG@?$CFc?$AA@
CONST	SEGMENT
??_C@_03DMGAKJG@?$CFc?$AA@ DB '%c', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LIPLDKEL@mesage?5input?5events@
CONST	SEGMENT
??_C@_0BE@LIPLDKEL@mesage?5input?5events@ DB 'mesage input events', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCEPIKPL@translated_text@
CONST	SEGMENT
??_C@_0BA@MCEPIKPL@translated_text@ DB 'translated_text', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CLINMMIE@index?5?$DM?5parent?9?$DOnumber_of_actio@
CONST	SEGMENT
??_C@_0CC@CLINMMIE@index?5?$DM?5parent?9?$DOnumber_of_actio@ DB 'index < '
	DB	'parent->number_of_actions', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z@4JA DD 0541H ; `add_message_action_to_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_04CIMGMMMG@text@
CONST	SEGMENT
??_C@_04CIMGMMMG@text@ DB 'text', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z@4JA DD 04f1H ; `create_message_database_list'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@IHNECHDC@Wingmen?5ON@
CONST	SEGMENT
??_C@_0L@IHNECHDC@Wingmen?5ON@ DB 'Wingmen ON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GAGADMJM@Wingmen?5OFF@
CONST	SEGMENT
??_C@_0M@GAGADMJM@Wingmen?5OFF@ DB 'Wingmen OFF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DLNGJEKP@Ground?5Controller?5ON@
CONST	SEGMENT
??_C@_0BF@DLNGJEKP@Ground?5Controller?5ON@ DB 'Ground Controller ON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OOGCNBNG@Ground?5Controller?5OFF@
CONST	SEGMENT
??_C@_0BG@OOGCNBNG@Ground?5Controller?5OFF@ DB 'Ground Controller OFF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EKDBGCNF@Forward?5Air?5Controller?5ON@
CONST	SEGMENT
??_C@_0BK@EKDBGCNF@Forward?5Air?5Controller?5ON@ DB 'Forward Air Controll'
	DB	'er ON', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FOMDKOAC@Forward?5Air?5Controller?5OFF@
CONST	SEGMENT
??_C@_0BL@FOMDKOAC@Forward?5Air?5Controller?5OFF@ DB 'Forward Air Control'
	DB	'ler OFF', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OOLAHHLK@Air?5Traffic?5Controller?5ON@
CONST	SEGMENT
??_C@_0BK@OOLAHHLK@Air?5Traffic?5Controller?5ON@ DB 'Air Traffic Controll'
	DB	'er ON', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IDGKFDNO@Air?5Traffic?5Controller?5OFF@
CONST	SEGMENT
??_C@_0BL@IDGKFDNO@Air?5Traffic?5Controller?5OFF@ DB 'Air Traffic Control'
	DB	'ler OFF', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBIHAIJC@count?5?$DN?$DN?50@
CONST	SEGMENT
??_C@_0L@KBIHAIJC@count?5?$DN?$DN?50@ DB 'count == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLLKCFJK@More?4?4?4@
CONST	SEGMENT
??_C@_07DLLKCFJK@More?4?4?4@ DB 'More...', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MCFJPMFI@loop?5?$DN?$DN?58@
CONST	SEGMENT
??_C@_09MCFJPMFI@loop?5?$DN?$DN?58@ DB 'loop == 8', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KCCDHAHC@Player?5List@
CONST	SEGMENT
??_C@_0M@KCCDHAHC@Player?5List@ DB 'Player List', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ DB 'get_session_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OAICFPEP@Transmit?5Recon@
CONST	SEGMENT
??_C@_0P@OAICFPEP@Transmit?5Recon@ DB 'Transmit Recon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KDGPIINE@Request?5Assistance@
CONST	SEGMENT
??_C@_0BD@KDGPIINE@Request?5Assistance@ DB 'Request Assistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HLINHDHK@Request?5Artillery@
CONST	SEGMENT
??_C@_0BC@HLINHDHK@Request?5Artillery@ DB 'Request Artillery', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NPNKLGNO@Request?5Airstrike@
CONST	SEGMENT
??_C@_0BC@NPNKLGNO@Request?5Airstrike@ DB 'Request Airstrike', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LDABHKGA@Staggered?5Trail?5Right@
CONST	SEGMENT
??_C@_0BG@LDABHKGA@Staggered?5Trail?5Right@ DB 'Staggered Trail Right', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ECNLFKOM@Staggered?5Trail?5Left@
CONST	SEGMENT
??_C@_0BF@ECNLFKOM@Staggered?5Trail?5Left@ DB 'Staggered Trail Left', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KLLDCFGI@Diamond@
CONST	SEGMENT
??_C@_07KLLDCFGI@Diamond@ DB 'Diamond', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OPDCLMDN@Wedge@
CONST	SEGMENT
??_C@_05OPDCLMDN@Wedge@ DB 'Wedge', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FFIACGFC@Column@
CONST	SEGMENT
??_C@_06FFIACGFC@Column@ DB 'Column', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLGFPNDG@Echelon?5Right@
CONST	SEGMENT
??_C@_0O@GLGFPNDG@Echelon?5Right@ DB 'Echelon Right', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CLHHNGEE@Echelon?5Left@
CONST	SEGMENT
??_C@_0N@CLHHNGEE@Echelon?5Left@ DB 'Echelon Left', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DFGEHLIM@Row?5Right@
CONST	SEGMENT
??_C@_09DFGEHLIM@Row?5Right@ DB 'Row Right', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PEAIGCDM@Row?5Left@
CONST	SEGMENT
??_C@_08PEAIGCDM@Row?5Left@ DB 'Row Left', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@COLHPDCA@Report?5Status@
CONST	SEGMENT
??_C@_0O@COLHPDCA@Report?5Status@ DB 'Report Status', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLCOHACH@Formation?5List@
CONST	SEGMENT
??_C@_0P@PLCOHACH@Formation?5List@ DB 'Formation List', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IEKEPKKG@loop?5?$DN?$DN?5count@
CONST	SEGMENT
??_C@_0O@IEKEPKKG@loop?5?$DN?$DN?5count@ DB 'loop == count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GIMEMIMC@Keyboard?5Message@
CONST	SEGMENT
??_C@_0BB@GIMEMIMC@Keyboard?5Message@ DB 'Keyboard Message', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DNKIDAFK@Request?5Target?5List@
CONST	SEGMENT
??_C@_0BE@DNKIDAFK@Request?5Target?5List@ DB 'Request Target List', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CLPAFCMJ@Attack?5PFZ@
CONST	SEGMENT
??_C@_0L@CLPAFCMJ@Attack?5PFZ@ DB 'Attack PFZ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMEHDPDN@Bob?9Up@
CONST	SEGMENT
??_C@_06LMEHDPDN@Bob?9Up@ DB 'Bob-Up', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBDBDPPN@Select?5Message@
CONST	SEGMENT
??_C@_0P@KBDBDPPN@Select?5Message@ DB 'Select Message', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KLJBOPJI@Wingman?5List@
CONST	SEGMENT
??_C@_0N@KLJBOPJI@Wingman?5List@ DB 'Wingman List', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OBCHIKHB@COMM?5Channels@
CONST	SEGMENT
??_C@_0O@OBCHIKHB@COMM?5Channels@ DB 'COMM Channels', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ENHBDOIL@Other?5Players@
CONST	SEGMENT
??_C@_0O@ENHBDOIL@Other?5Players@ DB 'Other Players', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LFEHHGIB@Local?5Base@
CONST	SEGMENT
??_C@_0L@LFEHHGIB@Local?5Base@ DB 'Local Base', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LONCHGDE@Wingmen@
CONST	SEGMENT
??_C@_07LONCHGDE@Wingmen@ DB 'Wingmen', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHAKFJBP@Flight?5Group@
CONST	SEGMENT
??_C@_0N@FHAKFJBP@Flight?5Group@ DB 'Flight Group', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OKBKIHIB@Select?5Destination@
CONST	SEGMENT
??_C@_0BD@OKBKIHIB@Select?5Destination@ DB 'Select Destination', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA DD 023cH ; `initialise_message_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@MHAKEIAD@MSG_OUT?3?5No?5Fn?5Key?5for?5index?5?$CFd@
CONST	SEGMENT
??_C@_0CA@MHAKEIAD@MSG_OUT?3?5No?5Fn?5Key?5for?5index?5?$CFd@ DB 'MSG_OUT'
	DB	': No Fn Key for index %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IGJHNOOE@MSG_OUT?3?5No?5Fn?5Key?5index?5for?5ke@
CONST	SEGMENT
??_C@_0CE@IGJHNOOE@MSG_OUT?3?5No?5Fn?5Key?5index?5for?5ke@ DB 'MSG_OUT: N'
	DB	'o Fn Key index for key %d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z@4JA DD 01caH ; `request_wingmen_status'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@JLFLEIIN@message_database@
CONST	SEGMENT
??_C@_0BB@JLFLEIIN@message_database@ DB 'message_database', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z@4JA DD 016cH ; `get_message_action'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0P@FOFPIGJL@message?5events@
CONST	SEGMENT
??_C@_0P@FOFPIGJL@message?5events@ DB 'message events', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KOLCCDEB@get_pilot_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BE@KOLCCDEB@get_pilot_entity?5?$CI?$CJ@ DB 'get_pilot_entity ()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\misc\msg_out.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??start_messaging_system@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??start_messaging_system@@YGXPAUEVENT@@@Z@4JA DD 0135H ; `start_messaging_system'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?wingman_message_text_table@@3PAUWINGMAN_MESSAGE_TEXT_TABLE@@A DD 011H ; wingman_message_text_table
	DD	FLAT:??_C@_0BB@OMJMDMAF@Attack?5My?5Target@
	DD	012H
	DD	FLAT:??_C@_07PPDFJLCN@Help?5Me@
	DD	013H
	DD	FLAT:??_C@_0N@IEJNAEGK@Weapons?5Hold@
	DD	014H
	DD	FLAT:??_C@_0N@IPBEDPIH@Weapons?5Free@
	DD	017H
	DD	FLAT:??_C@_0O@IMEEPEIA@Hold?5Position@
	DD	018H
	DD	FLAT:??_C@_0BB@PPIJLLNH@Rejoin?5Formation@
	DD	01cH
	DD	FLAT:??_C@_0P@GPNCODPJ@Return?5To?5Base@
	DD	0ffffffffH
	ORG $+4
?function_key_table@@3PAUFUNCTION_KEY_TABLE@@A DD 02H	; function_key_table
	DD	01H
	DD	03H
	DD	02H
	DD	04H
	DD	03H
	DD	05H
	DD	04H
	DD	06H
	DD	05H
	DD	07H
	DD	06H
	DD	08H
	DD	07H
	DD	09H
	DD	08H
	DD	0aH
	DD	09H
	DD	0bH
	DD	0aH
	DD	0cH
	DD	0bH
	DD	0ffffffffH
	DD	0ffffffffH
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?get_display_message_key_number@@YGHH@Z
_TEXT	SEGMENT
_loop$ = -8						; size = 4
_key$ = -4						; size = 4
_index$ = 8						; size = 4
?get_display_message_key_number@@YGHH@Z PROC		; get_display_message_key_number, COMDAT

; 543  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 544  : 	int
; 545  : 		key,
; 546  : 		loop;
; 547  : 
; 548  : 	loop = 0;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
$LN2@get_displa:

; 549  : 
; 550  : 	while (function_key_table [loop].key > 0)

  00010	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00013	83 3c c5 00 00
	00 00 00	 cmp	 DWORD PTR ?function_key_table@@3PAUFUNCTION_KEY_TABLE@@A[eax*8], 0
  0001b	7e 2c		 jle	 SHORT $LN3@get_displa

; 551  : 	{
; 552  : 		if (function_key_table [loop].index == index)

  0001d	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00020	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?function_key_table@@3PAUFUNCTION_KEY_TABLE@@A[eax*8+4]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _index$[ebp]
  0002a	75 12		 jne	 SHORT $LN4@get_displa

; 553  : 		{
; 554  : 			key = function_key_table [loop].key;

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0002f	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?function_key_table@@3PAUFUNCTION_KEY_TABLE@@A[eax*8]
  00036	89 4d fc	 mov	 DWORD PTR _key$[ebp], ecx

; 555  : 
; 556  : 			return key;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _key$[ebp]
  0003c	eb 1f		 jmp	 SHORT $LN1@get_displa
$LN4@get_displa:

; 557  : 		}
; 558  : 
; 559  : 		loop ++;

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00041	83 c0 01	 add	 eax, 1
  00044	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax

; 560  : 	}

  00047	eb c7		 jmp	 SHORT $LN2@get_displa
$LN3@get_displa:

; 561  : 
; 562  : 	debug_fatal ("MSG_OUT: No Fn Key for index %d", index);

  00049	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MHAKEIAD@MSG_OUT?3?5No?5Fn?5Key?5for?5index?5?$CFd@
  00052	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00057	83 c4 08	 add	 esp, 8

; 563  : 
; 564  : 	return -1;

  0005a	83 c8 ff	 or	 eax, -1
$LN1@get_displa:

; 565  : }

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?get_display_message_key_number@@YGHH@Z ENDP		; get_display_message_key_number
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?get_display_message_index_number@@YGHH@Z
_TEXT	SEGMENT
_index$ = -8						; size = 4
_loop$ = -4						; size = 4
_key$ = 8						; size = 4
?get_display_message_index_number@@YGHH@Z PROC		; get_display_message_index_number, COMDAT

; 514  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 515  : 	int
; 516  : 		loop,
; 517  : 		index;
; 518  : 
; 519  : 	loop = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
$LN2@get_displa:

; 520  : 
; 521  : 	while (function_key_table [loop].key > 0)

  00010	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00013	83 3c c5 00 00
	00 00 00	 cmp	 DWORD PTR ?function_key_table@@3PAUFUNCTION_KEY_TABLE@@A[eax*8], 0
  0001b	7e 2c		 jle	 SHORT $LN3@get_displa

; 522  : 	{
; 523  : 		if (function_key_table [loop].key == key)

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00020	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?function_key_table@@3PAUFUNCTION_KEY_TABLE@@A[eax*8]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _key$[ebp]
  0002a	75 12		 jne	 SHORT $LN4@get_displa

; 524  : 		{
; 525  : 			index = function_key_table [loop].index;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0002f	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?function_key_table@@3PAUFUNCTION_KEY_TABLE@@A[eax*8+4]
  00036	89 4d f8	 mov	 DWORD PTR _index$[ebp], ecx

; 526  : 
; 527  : 			return index;

  00039	8b 45 f8	 mov	 eax, DWORD PTR _index$[ebp]
  0003c	eb 1f		 jmp	 SHORT $LN1@get_displa
$LN4@get_displa:

; 528  : 		}
; 529  : 
; 530  : 		loop ++;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00041	83 c0 01	 add	 eax, 1
  00044	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 531  : 	}

  00047	eb c7		 jmp	 SHORT $LN2@get_displa
$LN3@get_displa:

; 532  : 
; 533  : 	debug_fatal ("MSG_OUT: No Fn Key index for key %d", key);

  00049	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@IGJHNOOE@MSG_OUT?3?5No?5Fn?5Key?5index?5for?5ke@
  00052	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00057	83 c4 08	 add	 esp, 8

; 534  : 
; 535  : 	return -1;

  0005a	83 c8 ff	 or	 eax, -1
$LN1@get_displa:

; 536  : }

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?get_display_message_index_number@@YGHH@Z ENDP		; get_display_message_index_number
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
tv141 = -84						; size = 4
tv83 = -84						; size = 4
tv133 = -80						; size = 4
tv75 = -80						; size = 4
tv67 = -80						; size = 4
_member$ = -12						; size = 4
_group$ = -8						; size = 4
_en$ = -4						; size = 4
_message$ = 8						; size = 8
?request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z PROC	; request_wingmen_status, COMDAT

; 458  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 459  : 	entity
; 460  : 		*en,
; 461  : 		*group,
; 462  : 		*member;
; 463  : 
; 464  : 	en = get_pilot_entity ();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0000e	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 465  : 	group = get_local_entity_safe_ptr (message.value);

  00011	83 7d 0c ff	 cmp	 DWORD PTR _message$[ebp+4], -1
  00015	74 11		 je	 SHORT $LN7@request_wi
  00017	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0001a	c1 e0 04	 shl	 eax, 4
  0001d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00023	89 45 b0	 mov	 DWORD PTR tv67[ebp], eax
  00026	eb 07		 jmp	 SHORT $LN8@request_wi
$LN7@request_wi:
  00028	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN8@request_wi:
  0002f	8b 4d b0	 mov	 ecx, DWORD PTR tv67[ebp]
  00032	89 4d f8	 mov	 DWORD PTR _group$[ebp], ecx

; 466  : 
; 467  : 	if (group)

  00035	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00039	0f 84 2b 01 00
	00		 je	 $LN4@request_wi

; 468  : 	{
; 469  : 		member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  0003f	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00043	74 0a		 je	 SHORT $LN9@request_wi
  00045	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  0004d	eb 21		 jmp	 SHORT $LN10@request_wi
$LN9@request_wi:
  0004f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z@4JA
  00055	83 c2 0b	 add	 edx, 11			; 0000000bH
  00058	52		 push	 edx
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00069	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN10@request_wi:
  00070	b9 01 00 00 00	 mov	 ecx, 1
  00075	85 c9		 test	 ecx, ecx
  00077	74 09		 je	 SHORT $LN11@request_wi
  00079	c7 45 ac 19 00
	00 00		 mov	 DWORD PTR tv83[ebp], 25	; 00000019H
  00080	eb 21		 jmp	 SHORT $LN12@request_wi
$LN11@request_wi:
  00082	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z@4JA
  00088	83 c2 0b	 add	 edx, 11			; 0000000bH
  0008b	52		 push	 edx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN12@request_wi:
  000a3	6a 19		 push	 25			; 00000019H
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  000a8	51		 push	 ecx
  000a9	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  000b0	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  000b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000ba	ff d1		 call	 ecx
  000bc	89 45 f4	 mov	 DWORD PTR _member$[ebp], eax
$LN2@request_wi:

; 470  : 
; 471  : 		while (member)

  000bf	83 7d f4 00	 cmp	 DWORD PTR _member$[ebp], 0
  000c3	0f 84 a1 00 00
	00		 je	 $LN4@request_wi

; 472  : 		{
; 473  : 			if (member != get_gunship_entity())

  000c9	8b 45 f4	 mov	 eax, DWORD PTR _member$[ebp]
  000cc	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000d2	74 11		 je	 SHORT $LN5@request_wi

; 474  : 				set_incoming_message(member, en, MESSAGE_WINGMAN_STATUS_REPORT, NULL);

  000d4	6a 00		 push	 0
  000d6	6a 07		 push	 7
  000d8	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _member$[ebp]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 ?set_incoming_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PAD@Z ; set_incoming_message
$LN5@request_wi:

; 475  : 
; 476  : 			member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  000e5	83 7d f4 00	 cmp	 DWORD PTR _member$[ebp], 0
  000e9	74 0a		 je	 SHORT $LN13@request_wi
  000eb	8b 45 f4	 mov	 eax, DWORD PTR _member$[ebp]
  000ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f0	89 4d b0	 mov	 DWORD PTR tv133[ebp], ecx
  000f3	eb 21		 jmp	 SHORT $LN14@request_wi
$LN13@request_wi:
  000f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z@4JA
  000fb	83 c2 12	 add	 edx, 18			; 00000012H
  000fe	52		 push	 edx
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00104	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN14@request_wi:
  00116	b9 01 00 00 00	 mov	 ecx, 1
  0011b	85 c9		 test	 ecx, ecx
  0011d	74 09		 je	 SHORT $LN15@request_wi
  0011f	c7 45 ac 19 00
	00 00		 mov	 DWORD PTR tv141[ebp], 25 ; 00000019H
  00126	eb 21		 jmp	 SHORT $LN16@request_wi
$LN15@request_wi:
  00128	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z@4JA
  0012e	83 c2 12	 add	 edx, 18			; 00000012H
  00131	52		 push	 edx
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00142	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN16@request_wi:
  00149	6a 19		 push	 25			; 00000019H
  0014b	8b 4d f4	 mov	 ecx, DWORD PTR _member$[ebp]
  0014e	51		 push	 ecx
  0014f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv133[ebp], 180
  00156	8b 45 ac	 mov	 eax, DWORD PTR tv141[ebp]
  00159	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00160	ff d1		 call	 ecx
  00162	89 45 f4	 mov	 DWORD PTR _member$[ebp], eax

; 477  : 		}

  00165	e9 55 ff ff ff	 jmp	 $LN2@request_wi
$LN4@request_wi:

; 478  : 	}
; 479  : 
; 480  : 	stop_messaging_system (NULL);

  0016a	6a 00		 push	 0
  0016c	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 481  : }

  00171	5f		 pop	 edi
  00172	5e		 pop	 esi
  00173	5b		 pop	 ebx
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c2 08 00	 ret	 8
?request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z ENDP	; request_wingmen_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_channel_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
tv64 = -76						; size = 4
_en$ = -8						; size = 4
_channel$ = -4						; size = 4
_message$ = 8						; size = 8
?send_channel_message@@YGXUMESSAGE_TYPE@@@Z PROC	; send_channel_message, COMDAT

; 2192 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2193 : 	int channel;
; 2194 : 
; 2195 : 	entity
; 2196 : 		*en;
; 2197 : 
; 2198 : 	en = get_gunship_entity ();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0000e	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 2199 : 
; 2200 : 	switch (message.type)

  00011	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  00014	89 45 b4	 mov	 DWORD PTR tv64[ebp], eax
  00017	8b 4d b4	 mov	 ecx, DWORD PTR tv64[ebp]
  0001a	83 e9 24	 sub	 ecx, 36			; 00000024H
  0001d	89 4d b4	 mov	 DWORD PTR tv64[ebp], ecx
  00020	83 7d b4 03	 cmp	 DWORD PTR tv64[ebp], 3
  00024	77 2c		 ja	 SHORT $LN2@send_chann
  00026	8b 55 b4	 mov	 edx, DWORD PTR tv64[ebp]
  00029	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN11@send_chann[edx*4]
$LN4@send_chann:

; 2201 : 	{
; 2202 : 		case MESSAGE_ATC:
; 2203 : 		{
; 2204 : 			channel = SOUND_CHANNEL_AIR_TRAFFIC_CONTROLLER;

  00030	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR _channel$[ebp], 4

; 2205 : 			break;

  00037	eb 19		 jmp	 SHORT $LN2@send_chann
$LN5@send_chann:

; 2206 : 		}
; 2207 : 		case MESSAGE_FAC:
; 2208 : 		{
; 2209 : 			channel = SOUND_CHANNEL_FORWARD_AIR_CONTROLLER;

  00039	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR _channel$[ebp], 5

; 2210 : 			break;

  00040	eb 10		 jmp	 SHORT $LN2@send_chann
$LN6@send_chann:

; 2211 : 		}
; 2212 : 		case MESSAGE_GC:
; 2213 : 		{
; 2214 :   			channel = SOUND_CHANNEL_GROUND_CONTROLLER;

  00042	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR _channel$[ebp], 6

; 2215 : 			break;

  00049	eb 07		 jmp	 SHORT $LN2@send_chann
$LN7@send_chann:

; 2216 : 		}
; 2217 : 		case MESSAGE_WM:
; 2218 : 		{
; 2219 :   			channel = SOUND_CHANNEL_WINGMAN;

  0004b	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _channel$[ebp], 3
$LN2@send_chann:

; 2220 : 			break;
; 2221 : 		}
; 2222 : 	}
; 2223 : 
; 2224 : 	if (get_sound_channel_muted (channel))

  00052	8b 45 fc	 mov	 eax, DWORD PTR _channel$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?get_sound_channel_muted@@YGHH@Z ; get_sound_channel_muted
  0005b	85 c0		 test	 eax, eax
  0005d	74 0d		 je	 SHORT $LN8@send_chann

; 2225 : 	{
; 2226 : 		set_sound_channel_muted (channel, FALSE);

  0005f	6a 00		 push	 0
  00061	8b 45 fc	 mov	 eax, DWORD PTR _channel$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?set_sound_channel_muted@@YGXHH@Z ; set_sound_channel_muted

; 2227 : 	}else{

  0006a	eb 0b		 jmp	 SHORT $LN9@send_chann
$LN8@send_chann:

; 2228 : 		set_sound_channel_muted (channel, TRUE);

  0006c	6a 01		 push	 1
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _channel$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?set_sound_channel_muted@@YGXHH@Z ; set_sound_channel_muted
$LN9@send_chann:

; 2229 : 	}
; 2230 : 
; 2231 : 	// menu off as change is not displayed
; 2232 : 	//stop_messaging_system (NULL);
; 2233 : 
; 2234 : 	// reinit for change in text
; 2235 : 	//initialise_message_database ();
; 2236 : 	initialise_messages ();

  00077	e8 00 00 00 00	 call	 ?initialise_messages@@YGXXZ ; initialise_messages

; 2237 : 	// set current menu again to show change
; 2238 : 	current_message = message;

  0007c	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0007f	a3 00 00 00 00	 mov	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A, eax
  00084	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp+4]
  00087	89 0d 04 00 00
	00		 mov	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4, ecx

; 2239 : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
  00096	66 90		 npad	 2
$LN11@send_chann:
  00098	00 00 00 00	 DD	 $LN4@send_chann
  0009c	00 00 00 00	 DD	 $LN5@send_chann
  000a0	00 00 00 00	 DD	 $LN6@send_chann
  000a4	00 00 00 00	 DD	 $LN7@send_chann
?send_channel_message@@YGXUMESSAGE_TYPE@@@Z ENDP	; send_channel_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z
_TEXT	SEGMENT
tv221 = -120						; size = 4
tv213 = -116						; size = 4
tv240 = -112						; size = 4
tv201 = -112						; size = 4
tv180 = -112						; size = 4
tv160 = -112						; size = 4
tv139 = -112						; size = 4
tv88 = -112						; size = 4
tv388 = -108						; size = 4
tv232 = -108						; size = 4
tv193 = -108						; size = 4
tv172 = -108						; size = 4
tv152 = -108						; size = 4
tv132 = -108						; size = 4
tv80 = -108						; size = 4
_target_description$ = -40				; size = 4
_int_heading$ = -36					; size = 4
_float_heading$ = -32					; size = 4
_range$ = -28						; size = 4
_wingman_pos$ = -24					; size = 4
_target_pos$ = -20					; size = 4
_target_vec$ = -16					; size = 12
_target$ = -4						; size = 4
_sender$ = 8						; size = 4
_wingman$ = 12						; size = 4
?get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z PROC ; get_wingman_attack_my_target_text, COMDAT

; 1845 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1846 : 	entity
; 1847 : 		*target;
; 1848 : 
; 1849 : 	vec3d
; 1850 : 		target_vec,
; 1851 : 		*target_pos,
; 1852 : 		*wingman_pos;
; 1853 : 
; 1854 : 	float
; 1855 : 		range,
; 1856 : 		float_heading;
; 1857 : 
; 1858 : 	int
; 1859 : 		int_heading;
; 1860 : 
; 1861 : 	const char
; 1862 : 		*target_description;
; 1863 : 
; 1864 : 	ASSERT (sender);

  00009	83 7d 08 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_wingma
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00014	83 c0 13	 add	 eax, 19			; 00000013H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06CGHJMPBJ@sender@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_wingma:

; 1865 : 	ASSERT (wingman);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _wingman$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_wingma
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00032	83 c0 14	 add	 eax, 20			; 00000014H
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_07EAKNLMLO@wingman@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_wingma:

; 1866 : 
; 1867 : 	target = get_local_entity_parent (sender, LIST_TYPE_TARGET);

  00045	83 7d 08 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00049	74 0a		 je	 SHORT $LN11@get_wingma
  0004b	8b 45 08	 mov	 eax, DWORD PTR _sender$[ebp]
  0004e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00050	89 4d 94	 mov	 DWORD PTR tv80[ebp], ecx
  00053	eb 21		 jmp	 SHORT $LN12@get_wingma
$LN11@get_wingma:
  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  0005b	83 c2 16	 add	 edx, 22			; 00000016H
  0005e	52		 push	 edx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006f	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN12@get_wingma:
  00076	b9 01 00 00 00	 mov	 ecx, 1
  0007b	85 c9		 test	 ecx, ecx
  0007d	74 09		 je	 SHORT $LN13@get_wingma
  0007f	c7 45 90 26 00
	00 00		 mov	 DWORD PTR tv88[ebp], 38	; 00000026H
  00086	eb 21		 jmp	 SHORT $LN14@get_wingma
$LN13@get_wingma:
  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  0008e	83 c2 16	 add	 edx, 22			; 00000016H
  00091	52		 push	 edx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN14@get_wingma:
  000a9	6a 26		 push	 38			; 00000026H
  000ab	8b 4d 08	 mov	 ecx, DWORD PTR _sender$[ebp]
  000ae	51		 push	 ecx
  000af	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 180
  000b6	8b 45 90	 mov	 eax, DWORD PTR tv88[ebp]
  000b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c0	ff d1		 call	 ecx
  000c2	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1868 : 
; 1869 : 	if (!target)

  000c5	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  000c9	75 07		 jne	 SHORT $LN4@get_wingma

; 1870 : 	{
; 1871 : 		return NULL;

  000cb	33 c0		 xor	 eax, eax
  000cd	e9 24 04 00 00	 jmp	 $LN1@get_wingma
$LN4@get_wingma:

; 1872 : 	}
; 1873 : 
; 1874 : 	if (get_local_entity_int_value (target, INT_TYPE_CPG_IDENTIFIED))

  000d2	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  000d6	74 0a		 je	 SHORT $LN15@get_wingma
  000d8	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	89 4d 94	 mov	 DWORD PTR tv132[ebp], ecx
  000e0	eb 1d		 jmp	 SHORT $LN16@get_wingma
$LN15@get_wingma:
  000e2	68 52 07 00 00	 push	 1874			; 00000752H
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f2	52		 push	 edx
  000f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f8	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN16@get_wingma:
  000ff	b8 01 00 00 00	 mov	 eax, 1
  00104	85 c0		 test	 eax, eax
  00106	74 09		 je	 SHORT $LN17@get_wingma
  00108	c7 45 90 22 00
	00 00		 mov	 DWORD PTR tv139[ebp], 34 ; 00000022H
  0010f	eb 1d		 jmp	 SHORT $LN18@get_wingma
$LN17@get_wingma:
  00111	68 52 07 00 00	 push	 1874			; 00000752H
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00121	51		 push	 ecx
  00122	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00127	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN18@get_wingma:
  0012e	6a 22		 push	 34			; 00000022H
  00130	8b 55 fc	 mov	 edx, DWORD PTR _target$[ebp]
  00133	52		 push	 edx
  00134	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv132[ebp], 1116
  0013b	8b 4d 90	 mov	 ecx, DWORD PTR tv139[ebp]
  0013e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00145	ff d2		 call	 edx
  00147	85 c0		 test	 eax, eax
  00149	74 7f		 je	 SHORT $LN5@get_wingma

; 1875 : 	{
; 1876 : 		target_description = get_local_entity_string (target, STRING_TYPE_SHORT_DISPLAY_NAME);

  0014b	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  0014f	74 0a		 je	 SHORT $LN19@get_wingma
  00151	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00154	8b 08		 mov	 ecx, DWORD PTR [eax]
  00156	89 4d 94	 mov	 DWORD PTR tv152[ebp], ecx
  00159	eb 21		 jmp	 SHORT $LN20@get_wingma
$LN19@get_wingma:
  0015b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00161	83 c2 1f	 add	 edx, 31			; 0000001fH
  00164	52		 push	 edx
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00175	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN20@get_wingma:
  0017c	b9 01 00 00 00	 mov	 ecx, 1
  00181	85 c9		 test	 ecx, ecx
  00183	74 09		 je	 SHORT $LN21@get_wingma
  00185	c7 45 90 0c 00
	00 00		 mov	 DWORD PTR tv160[ebp], 12 ; 0000000cH
  0018c	eb 21		 jmp	 SHORT $LN22@get_wingma
$LN21@get_wingma:
  0018e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00194	83 c2 1f	 add	 edx, 31			; 0000001fH
  00197	52		 push	 edx
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a8	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN22@get_wingma:
  001af	6a 0c		 push	 12			; 0000000cH
  001b1	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  001b4	51		 push	 ecx
  001b5	6b 55 94 34	 imul	 edx, DWORD PTR tv152[ebp], 52
  001b9	8b 45 90	 mov	 eax, DWORD PTR tv160[ebp]
  001bc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  001c3	ff d1		 call	 ecx
  001c5	89 45 d8	 mov	 DWORD PTR _target_description$[ebp], eax

; 1877 : 	}
; 1878 : 	else

  001c8	eb 7d		 jmp	 SHORT $LN6@get_wingma
$LN5@get_wingma:

; 1879 : 	{
; 1880 : 		target_description = get_local_entity_string (target, STRING_TYPE_EASY_DISPLAY_NAME);

  001ca	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001ce	74 0a		 je	 SHORT $LN23@get_wingma
  001d0	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d5	89 4d 94	 mov	 DWORD PTR tv172[ebp], ecx
  001d8	eb 21		 jmp	 SHORT $LN24@get_wingma
$LN23@get_wingma:
  001da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  001e0	83 c2 23	 add	 edx, 35			; 00000023H
  001e3	52		 push	 edx
  001e4	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ee	50		 push	 eax
  001ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f4	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN24@get_wingma:
  001fb	b9 01 00 00 00	 mov	 ecx, 1
  00200	85 c9		 test	 ecx, ecx
  00202	74 09		 je	 SHORT $LN25@get_wingma
  00204	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv180[ebp], 1
  0020b	eb 21		 jmp	 SHORT $LN26@get_wingma
$LN25@get_wingma:
  0020d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00213	83 c2 23	 add	 edx, 35			; 00000023H
  00216	52		 push	 edx
  00217	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00221	50		 push	 eax
  00222	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00227	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN26@get_wingma:
  0022e	6a 01		 push	 1
  00230	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  00233	51		 push	 ecx
  00234	6b 55 94 34	 imul	 edx, DWORD PTR tv172[ebp], 52
  00238	8b 45 90	 mov	 eax, DWORD PTR tv180[ebp]
  0023b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00242	ff d1		 call	 ecx
  00244	89 45 d8	 mov	 DWORD PTR _target_description$[ebp], eax
$LN6@get_wingma:

; 1881 : 	}
; 1882 : 
; 1883 : 	if (!target_description)

  00247	83 7d d8 00	 cmp	 DWORD PTR _target_description$[ebp], 0
  0024b	75 07		 jne	 SHORT $LN7@get_wingma

; 1884 : 	{
; 1885 : 		return NULL;

  0024d	33 c0		 xor	 eax, eax
  0024f	e9 a2 02 00 00	 jmp	 $LN1@get_wingma
$LN7@get_wingma:

; 1886 : 	}
; 1887 : 
; 1888 : 	get_local_entity_string (target, STRING_TYPE_SHORT_DISPLAY_NAME),

  00254	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00258	74 0a		 je	 SHORT $LN27@get_wingma
  0025a	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0025d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025f	89 4d 94	 mov	 DWORD PTR tv193[ebp], ecx
  00262	eb 21		 jmp	 SHORT $LN28@get_wingma
$LN27@get_wingma:
  00264	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  0026a	83 c2 2b	 add	 edx, 43			; 0000002bH
  0026d	52		 push	 edx
  0026e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027e	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN28@get_wingma:
  00285	b9 01 00 00 00	 mov	 ecx, 1
  0028a	85 c9		 test	 ecx, ecx
  0028c	74 09		 je	 SHORT $LN29@get_wingma
  0028e	c7 45 90 0c 00
	00 00		 mov	 DWORD PTR tv201[ebp], 12 ; 0000000cH
  00295	eb 21		 jmp	 SHORT $LN30@get_wingma
$LN29@get_wingma:
  00297	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  0029d	83 c2 2b	 add	 edx, 43			; 0000002bH
  002a0	52		 push	 edx
  002a1	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b1	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv201[ebp], 0
$LN30@get_wingma:
  002b8	6a 0c		 push	 12			; 0000000cH
  002ba	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  002bd	51		 push	 ecx
  002be	6b 55 94 34	 imul	 edx, DWORD PTR tv193[ebp], 52
  002c2	8b 45 90	 mov	 eax, DWORD PTR tv201[ebp]
  002c5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  002cc	ff d1		 call	 ecx
  002ce	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  002d2	74 0a		 je	 SHORT $LN31@get_wingma
  002d4	8b 55 fc	 mov	 edx, DWORD PTR _target$[ebp]
  002d7	8b 02		 mov	 eax, DWORD PTR [edx]
  002d9	89 45 8c	 mov	 DWORD PTR tv213[ebp], eax
  002dc	eb 22		 jmp	 SHORT $LN32@get_wingma
$LN31@get_wingma:
  002de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  002e4	83 c1 2d	 add	 ecx, 45			; 0000002dH
  002e7	51		 push	 ecx
  002e8	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002f3	52		 push	 edx
  002f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f9	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv213[ebp], 0
$LN32@get_wingma:
  00300	b8 01 00 00 00	 mov	 eax, 1
  00305	85 c0		 test	 eax, eax
  00307	74 09		 je	 SHORT $LN33@get_wingma
  00309	c7 45 88 08 00
	00 00		 mov	 DWORD PTR tv221[ebp], 8
  00310	eb 22		 jmp	 SHORT $LN34@get_wingma
$LN33@get_wingma:
  00312	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00318	83 c1 2d	 add	 ecx, 45			; 0000002dH
  0031b	51		 push	 ecx
  0031c	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00321	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00327	52		 push	 edx
  00328	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv221[ebp], 0
$LN34@get_wingma:
  00334	6a 08		 push	 8
  00336	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00339	50		 push	 eax
  0033a	6b 4d 8c 60	 imul	 ecx, DWORD PTR tv213[ebp], 96
  0033e	8b 55 88	 mov	 edx, DWORD PTR tv221[ebp]
  00341	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[ecx+edx*4]
  00348	ff d0		 call	 eax
  0034a	89 45 ec	 mov	 DWORD PTR _target_pos$[ebp], eax

; 1889 : 
; 1890 : 	target_pos = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);
; 1891 : 
; 1892 : 	wingman_pos = get_local_entity_vec3d_ptr (wingman, VEC3D_TYPE_POSITION);

  0034d	83 7d 0c 00	 cmp	 DWORD PTR _wingman$[ebp], 0
  00351	74 0a		 je	 SHORT $LN35@get_wingma
  00353	8b 45 0c	 mov	 eax, DWORD PTR _wingman$[ebp]
  00356	8b 08		 mov	 ecx, DWORD PTR [eax]
  00358	89 4d 94	 mov	 DWORD PTR tv232[ebp], ecx
  0035b	eb 21		 jmp	 SHORT $LN36@get_wingma
$LN35@get_wingma:
  0035d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00363	83 c2 2f	 add	 edx, 47			; 0000002fH
  00366	52		 push	 edx
  00367	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0036c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00371	50		 push	 eax
  00372	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00377	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv232[ebp], 0
$LN36@get_wingma:
  0037e	b9 01 00 00 00	 mov	 ecx, 1
  00383	85 c9		 test	 ecx, ecx
  00385	74 09		 je	 SHORT $LN37@get_wingma
  00387	c7 45 90 08 00
	00 00		 mov	 DWORD PTR tv240[ebp], 8
  0038e	eb 21		 jmp	 SHORT $LN38@get_wingma
$LN37@get_wingma:
  00390	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z@4JA
  00396	83 c2 2f	 add	 edx, 47			; 0000002fH
  00399	52		 push	 edx
  0039a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003aa	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv240[ebp], 0
$LN38@get_wingma:
  003b1	6a 08		 push	 8
  003b3	8b 4d 0c	 mov	 ecx, DWORD PTR _wingman$[ebp]
  003b6	51		 push	 ecx
  003b7	6b 55 94 60	 imul	 edx, DWORD PTR tv232[ebp], 96
  003bb	8b 45 90	 mov	 eax, DWORD PTR tv240[ebp]
  003be	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  003c5	ff d1		 call	 ecx
  003c7	89 45 e8	 mov	 DWORD PTR _wingman_pos$[ebp], eax

; 1893 : 
; 1894 : 	target_vec.x = target_pos->x - wingman_pos->x;

  003ca	8b 45 ec	 mov	 eax, DWORD PTR _target_pos$[ebp]
  003cd	8b 4d e8	 mov	 ecx, DWORD PTR _wingman_pos$[ebp]
  003d0	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003d4	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  003d8	f3 0f 11 45 f0	 movss	 DWORD PTR _target_vec$[ebp], xmm0

; 1895 : 	target_vec.y = 0.0;

  003dd	0f 57 c0	 xorps	 xmm0, xmm0
  003e0	f3 0f 11 45 f4	 movss	 DWORD PTR _target_vec$[ebp+4], xmm0

; 1896 : 	target_vec.z = target_pos->z - wingman_pos->z;

  003e5	8b 45 ec	 mov	 eax, DWORD PTR _target_pos$[ebp]
  003e8	8b 4d e8	 mov	 ecx, DWORD PTR _wingman_pos$[ebp]
  003eb	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003f0	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  003f5	f3 0f 11 45 f8	 movss	 DWORD PTR _target_vec$[ebp+8], xmm0

; 1897 : 
; 1898 : 	range = get_3d_vector_magnitude (&target_vec);

  003fa	8d 45 f0	 lea	 eax, DWORD PTR _target_vec$[ebp]
  003fd	50		 push	 eax
  003fe	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00403	d9 5d e4	 fstp	 DWORD PTR _range$[ebp]

; 1899 : 
; 1900 : 	float_heading = deg (atan2 (target_vec.x, target_vec.z));

  00406	51		 push	 ecx
  00407	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _target_vec$[ebp+8]
  0040c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00411	51		 push	 ecx
  00412	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _target_vec$[ebp]
  00417	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041c	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00421	d9 5d 94	 fstp	 DWORD PTR tv388[ebp]
  00424	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv388[ebp]
  00429	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00431	f3 0f 11 45 e0	 movss	 DWORD PTR _float_heading$[ebp], xmm0

; 1901 : 
; 1902 : 	convert_float_to_int (float_heading, &int_heading);

  00436	8d 45 dc	 lea	 eax, DWORD PTR _int_heading$[ebp]
  00439	50		 push	 eax
  0043a	51		 push	 ecx
  0043b	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _float_heading$[ebp]
  00440	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00445	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1903 : 
; 1904 : 	if (range < 1500.0)

  0044a	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  0044f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4097700000000000
  00457	66 0f 2f c8	 comisd	 xmm1, xmm0
  0045b	76 47		 jbe	 SHORT $LN8@get_wingma

; 1905 : 	{
; 1906 : 		sprintf (attack_my_target_message, "%s - %s %s %03d %s %.0fm",

  0045d	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  00462	83 ec 08	 sub	 esp, 8
  00465	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0046a	68 00 00 00 00	 push	 OFFSET ??_C@_05CFMCGLCK@Range@
  0046f	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00474	50		 push	 eax
  00475	8b 45 dc	 mov	 eax, DWORD PTR _int_heading$[ebp]
  00478	50		 push	 eax
  00479	68 00 00 00 00	 push	 OFFSET ??_C@_07DIOKDEDN@Heading@
  0047e	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00483	50		 push	 eax
  00484	8b 4d d8	 mov	 ecx, DWORD PTR _target_description$[ebp]
  00487	51		 push	 ecx
  00488	6a 11		 push	 17			; 00000011H
  0048a	e8 00 00 00 00	 call	 ?get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z ; get_wingman_message_text
  0048f	50		 push	 eax
  00490	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BJAOOLEG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?40fm@
  00495	68 00 00 00 00	 push	 OFFSET ?attack_my_target_message@@3PADA
  0049a	e8 00 00 00 00	 call	 _sprintf
  0049f	83 c4 24	 add	 esp, 36			; 00000024H

; 1907 : 					get_wingman_message_text (MESSAGE_WINGMAN_ATTACK_MY_TARGET),
; 1908 : 					target_description,
; 1909 : 					get_trans ("Heading"), int_heading,
; 1910 : 					get_trans ("Range"), range);
; 1911 : 	}
; 1912 : 	else

  004a2	eb 4d		 jmp	 SHORT $LN9@get_wingma
$LN8@get_wingma:

; 1913 : 	{
; 1914 : 		sprintf (attack_my_target_message, "%s - %s %s %03d %s %.1fkm",

  004a4	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  004a9	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@408f400000000000
  004b1	83 ec 08	 sub	 esp, 8
  004b4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004b9	68 00 00 00 00	 push	 OFFSET ??_C@_05CFMCGLCK@Range@
  004be	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  004c3	50		 push	 eax
  004c4	8b 45 dc	 mov	 eax, DWORD PTR _int_heading$[ebp]
  004c7	50		 push	 eax
  004c8	68 00 00 00 00	 push	 OFFSET ??_C@_07DIOKDEDN@Heading@
  004cd	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  004d2	50		 push	 eax
  004d3	8b 4d d8	 mov	 ecx, DWORD PTR _target_description$[ebp]
  004d6	51		 push	 ecx
  004d7	6a 11		 push	 17			; 00000011H
  004d9	e8 00 00 00 00	 call	 ?get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z ; get_wingman_message_text
  004de	50		 push	 eax
  004df	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HGBIKKKG@?$CFs?5?9?5?$CFs?5?$CFs?5?$CF03d?5?$CFs?5?$CF?41fkm@
  004e4	68 00 00 00 00	 push	 OFFSET ?attack_my_target_message@@3PADA
  004e9	e8 00 00 00 00	 call	 _sprintf
  004ee	83 c4 24	 add	 esp, 36			; 00000024H
$LN9@get_wingma:

; 1915 : 					get_wingman_message_text (MESSAGE_WINGMAN_ATTACK_MY_TARGET),
; 1916 : 					target_description,
; 1917 : 					get_trans ("Heading"), int_heading,
; 1918 : 					get_trans ("Range"), range / 1000.0);
; 1919 : 	}
; 1920 : 
; 1921 : 	return attack_my_target_message;

  004f1	b8 00 00 00 00	 mov	 eax, OFFSET ?attack_my_target_message@@3PADA
$LN1@get_wingma:

; 1922 : }

  004f6	5f		 pop	 edi
  004f7	5e		 pop	 esi
  004f8	5b		 pop	 ebx
  004f9	8b e5		 mov	 esp, ebp
  004fb	5d		 pop	 ebp
  004fc	c2 08 00	 ret	 8
?get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z ENDP ; get_wingman_attack_my_target_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z
_TEXT	SEGMENT
_text$ = -8						; size = 4
_loop$ = -4						; size = 4
_message_type$ = 8					; size = 4
?get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z PROC ; get_wingman_message_text, COMDAT

; 1814 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1815 : 	int
; 1816 : 		loop;
; 1817 : 
; 1818 : 	const char
; 1819 : 		*text;
; 1820 : 
; 1821 : 	loop = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
$LN2@get_wingma:

; 1822 : 
; 1823 : 	while (wingman_message_text_table[loop].message_type >= 0)

  00010	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00013	83 3c c5 00 00
	00 00 00	 cmp	 DWORD PTR ?wingman_message_text_table@@3PAUWINGMAN_MESSAGE_TEXT_TABLE@@A[eax*8], 0
  0001b	7c 50		 jl	 SHORT $LN3@get_wingma

; 1824 : 	{
; 1825 : 		if (wingman_message_text_table[loop].message_type == message_type)

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00020	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?wingman_message_text_table@@3PAUWINGMAN_MESSAGE_TEXT_TABLE@@A[eax*8]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _message_type$[ebp]
  0002a	75 36		 jne	 SHORT $LN4@get_wingma

; 1826 : 		{
; 1827 : 			text = get_trans (wingman_message_text_table[loop].text);

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0002f	8b 0c c5 04 00
	00 00		 mov	 ecx, DWORD PTR ?wingman_message_text_table@@3PAUWINGMAN_MESSAGE_TEXT_TABLE@@A[eax*8+4]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0003c	89 45 f8	 mov	 DWORD PTR _text$[ebp], eax

; 1828 : 
; 1829 : 			ASSERT (text);

  0003f	83 7d f8 00	 cmp	 DWORD PTR _text$[ebp], 0
  00043	75 18		 jne	 SHORT $LN5@get_wingma
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z@4JA
  0004a	83 c0 0f	 add	 eax, 15			; 0000000fH
  0004d	50		 push	 eax
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_04CIMGMMMG@text@
  00058	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_wingma:

; 1830 : 
; 1831 : 			return text;

  0005d	8b 45 f8	 mov	 eax, DWORD PTR _text$[ebp]
  00060	eb 0d		 jmp	 SHORT $LN1@get_wingma
$LN4@get_wingma:

; 1832 : 		}
; 1833 : 
; 1834 : 		loop ++;

  00062	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00065	83 c0 01	 add	 eax, 1
  00068	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 1835 : 	}

  0006b	eb a3		 jmp	 SHORT $LN2@get_wingma
$LN3@get_wingma:

; 1836 : 
; 1837 : 	return NULL;

  0006d	33 c0		 xor	 eax, eax
$LN1@get_wingma:

; 1838 : }

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z ENDP ; get_wingman_message_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_message$ = 8						; size = 8
?send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z PROC ; send_wingman_keyboard_message, COMDAT

; 1940 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1941 : 	ASSERT (message.type == MESSAGE_WINGMAN_KEYBOARD);

  00009	83 7d 08 1a	 cmp	 DWORD PTR _message$[ebp], 26 ; 0000001aH
  0000d	74 18		 je	 SHORT $LN2@send_wingm
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@NCFGHBFM@message?4type?5?$DN?$DN?5MESSAGE_WINGMAN@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@send_wingm:

; 1942 : 
; 1943 : 	enter_wingman_message (message);

  00027	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?enter_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; enter_wingman_message

; 1944 : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z ENDP ; send_wingman_keyboard_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_message$ = 8						; size = 8
?send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z PROC	; send_pilot_keyboard_message, COMDAT

; 1929 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1930 : 	ASSERT (message.type == MESSAGE_PILOT_KEYBOARD);

  00009	83 7d 08 22	 cmp	 DWORD PTR _message$[ebp], 34 ; 00000022H
  0000d	74 18		 je	 SHORT $LN2@send_pilot
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GANDFAMA@message?4type?5?$DN?$DN?5MESSAGE_PILOT_K@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@send_pilot:

; 1931 : 
; 1932 : 	enter_pilot_message (message);

  00027	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?enter_pilot_message@@YGXUMESSAGE_TYPE@@@Z ; enter_pilot_message

; 1933 : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z ENDP	; send_pilot_keyboard_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?message_set_input_events@@YGXXZ
_TEXT	SEGMENT
?message_set_input_events@@YGXXZ PROC			; message_set_input_events, COMDAT

; 1501 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1502 : 	set_alpha_events ();

  00009	e8 00 00 00 00	 call	 ?set_alpha_events@@YGXXZ ; set_alpha_events

; 1503 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?message_set_input_events@@YGXXZ ENDP			; message_set_input_events
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?message_input_abort@@YGXH@Z
_TEXT	SEGMENT
_key_code$ = 8						; size = 4
?message_input_abort@@YGXH@Z PROC			; message_input_abort, COMDAT

; 1492 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1493 : 	stop_messaging_system (NULL);

  00009	6a 00		 push	 0
  0000b	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 1494 : }

  00010	5f		 pop	 edi
  00011	5e		 pop	 esi
  00012	5b		 pop	 ebx
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?message_input_abort@@YGXH@Z ENDP			; message_input_abort
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?message_wingman_input_end@@YGXH@Z
_TEXT	SEGMENT
tv67 = -72						; size = 4
_member$ = -4						; size = 4
_key_code$ = 8						; size = 4
?message_wingman_input_end@@YGXH@Z PROC			; message_wingman_input_end, COMDAT

; 1474 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1475 : 	entity
; 1476 : 		*member;
; 1477 : 
; 1478 : 	member = get_local_entity_safe_ptr (current_message.value);

  00009	83 3d 04 00 00
	00 ff		 cmp	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4, -1
  00010	74 13		 je	 SHORT $LN4@message_wi
  00012	a1 04 00 00 00	 mov	 eax, DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4
  00017	c1 e0 04	 shl	 eax, 4
  0001a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00020	89 45 b8	 mov	 DWORD PTR tv67[ebp], eax
  00023	eb 07		 jmp	 SHORT $LN5@message_wi
$LN4@message_wi:
  00025	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN5@message_wi:
  0002c	8b 4d b8	 mov	 ecx, DWORD PTR tv67[ebp]
  0002f	89 4d fc	 mov	 DWORD PTR _member$[ebp], ecx

; 1479 : 
; 1480 : 	ASSERT (member);

  00032	83 7d fc 00	 cmp	 DWORD PTR _member$[ebp], 0
  00036	75 18		 jne	 SHORT $LN2@message_wi
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??message_wingman_input_end@@YGXH@Z@4JA
  0003d	83 c0 06	 add	 eax, 6
  00040	50		 push	 eax
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_06HDFDANIG@member@
  0004b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@message_wi:

; 1481 : 
; 1482 : 	send_text_message (get_pilot_entity (), member, MESSAGE_TEXT_WINGMAN_STRING, keyboard_message);

  00050	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  00055	6a 09		 push	 9
  00057	8b 45 fc	 mov	 eax, DWORD PTR _member$[ebp]
  0005a	50		 push	 eax
  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z ; send_text_message

; 1483 : 
; 1484 : 	stop_messaging_system (NULL);

  00067	6a 00		 push	 0
  00069	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 1485 : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?message_wingman_input_end@@YGXH@Z ENDP			; message_wingman_input_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?message_pilot_input_end@@YGXH@Z
_TEXT	SEGMENT
tv69 = -68						; size = 4
_key_code$ = 8						; size = 4
?message_pilot_input_end@@YGXH@Z PROC			; message_pilot_input_end, COMDAT

; 1463 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1464 : 	send_text_message (get_pilot_entity (), get_local_entity_safe_ptr (current_message.value), MESSAGE_TEXT_PILOT_STRING, keyboard_message);

  00009	83 3d 04 00 00
	00 ff		 cmp	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4, -1
  00010	74 13		 je	 SHORT $LN3@message_pi
  00012	a1 04 00 00 00	 mov	 eax, DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4
  00017	c1 e0 04	 shl	 eax, 4
  0001a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00020	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  00023	eb 07		 jmp	 SHORT $LN4@message_pi
$LN3@message_pi:
  00025	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@message_pi:
  0002c	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  00031	6a 08		 push	 8
  00033	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  00036	51		 push	 ecx
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0003d	52		 push	 edx
  0003e	e8 00 00 00 00	 call	 ?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z ; send_text_message

; 1465 : 
; 1466 : 	stop_messaging_system (NULL);

  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 1467 : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?message_pilot_input_end@@YGXH@Z ENDP			; message_pilot_input_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?message_input_entry@@YGXH@Z
_TEXT	SEGMENT
tv73 = -80						; size = 4
tv74 = -76						; size = 4
_len$ = -8						; size = 4
_c$ = -4						; size = 3
_key_code$ = 8						; size = 4
?message_input_entry@@YGXH@Z PROC			; message_input_entry, COMDAT

; 1424 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1425 : 
; 1426 : 	char
; 1427 : 		c [3];
; 1428 : 
; 1429 : 	int
; 1430 : 		len;
; 1431 : 
; 1432 : 	if (key_code == dinput_to_ascii (DIK_BACK))

  00009	6a 0e		 push	 14			; 0000000eH
  0000b	e8 00 00 00 00	 call	 ?dinput_to_ascii@@YGDH@Z ; dinput_to_ascii
  00010	0f b6 c0	 movzx	 eax, al
  00013	39 45 08	 cmp	 DWORD PTR _key_code$[ebp], eax
  00016	75 55		 jne	 SHORT $LN2@message_in

; 1433 : 	{
; 1434 : 
; 1435 : 		if (keyboard_message)

  00018	b8 00 00 00 00	 mov	 eax, OFFSET ?keyboard_message@@3PADA
  0001d	85 c0		 test	 eax, eax
  0001f	74 4a		 je	 SHORT $LN4@message_in

; 1436 : 		{
; 1437 : 
; 1438 : 			len = strlen (keyboard_message);

  00021	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  00026	e8 00 00 00 00	 call	 _strlen
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 45 f8	 mov	 DWORD PTR _len$[ebp], eax

; 1439 : 
; 1440 : 			len = bound (len, 1, MAX_KEYBOARD_MESSAGE_LENGTH);

  00031	83 7d f8 01	 cmp	 DWORD PTR _len$[ebp], 1
  00035	7d 09		 jge	 SHORT $LN9@message_in
  00037	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv74[ebp], 1
  0003e	eb 1b		 jmp	 SHORT $LN10@message_in
$LN9@message_in:
  00040	83 7d f8 60	 cmp	 DWORD PTR _len$[ebp], 96 ; 00000060H
  00044	7e 09		 jle	 SHORT $LN7@message_in
  00046	c7 45 b0 60 00
	00 00		 mov	 DWORD PTR tv73[ebp], 96	; 00000060H
  0004d	eb 06		 jmp	 SHORT $LN8@message_in
$LN7@message_in:
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _len$[ebp]
  00052	89 45 b0	 mov	 DWORD PTR tv73[ebp], eax
$LN8@message_in:
  00055	8b 4d b0	 mov	 ecx, DWORD PTR tv73[ebp]
  00058	89 4d b4	 mov	 DWORD PTR tv74[ebp], ecx
$LN10@message_in:
  0005b	8b 55 b4	 mov	 edx, DWORD PTR tv74[ebp]
  0005e	89 55 f8	 mov	 DWORD PTR _len$[ebp], edx

; 1441 : 
; 1442 : 			keyboard_message [len - 1] = '\0';

  00061	8b 45 f8	 mov	 eax, DWORD PTR _len$[ebp]
  00064	c6 80 ff ff ff
	ff 00		 mov	 BYTE PTR ?keyboard_message@@3PADA[eax-1], 0
$LN4@message_in:

; 1443 : 		}
; 1444 : 	}
; 1445 : 	else

  0006b	eb 38		 jmp	 SHORT $LN1@message_in
$LN2@message_in:

; 1446 : 	{
; 1447 : 
; 1448 : 		if (strlen (keyboard_message) < MAX_KEYBOARD_MESSAGE_LENGTH - 1)

  0006d	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  00072	e8 00 00 00 00	 call	 _strlen
  00077	83 c4 04	 add	 esp, 4
  0007a	83 f8 5f	 cmp	 eax, 95			; 0000005fH
  0007d	73 26		 jae	 SHORT $LN1@message_in

; 1449 : 		{
; 1450 : 
; 1451 : 			sprintf (c, "%c\0", key_code);

  0007f	8b 45 08	 mov	 eax, DWORD PTR _key_code$[ebp]
  00082	50		 push	 eax
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_03DMGAKJG@?$CFc?$AA@
  00088	8d 4d fc	 lea	 ecx, DWORD PTR _c$[ebp]
  0008b	51		 push	 ecx
  0008c	e8 00 00 00 00	 call	 _sprintf
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1452 : 
; 1453 : 			strcat (keyboard_message, c);

  00094	8d 45 fc	 lea	 eax, DWORD PTR _c$[ebp]
  00097	50		 push	 eax
  00098	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  0009d	e8 00 00 00 00	 call	 _strcat
  000a2	83 c4 08	 add	 esp, 8
$LN1@message_in:

; 1454 : 		}
; 1455 : 	}
; 1456 : }

  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 04 00	 ret	 4
?message_input_entry@@YGXH@Z ENDP			; message_input_entry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?enter_pilot_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_message$ = 8						; size = 8
?enter_pilot_message@@YGXUMESSAGE_TYPE@@@Z PROC		; enter_pilot_message, COMDAT

; 1400 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1401 : 
; 1402 : 	set_alpha_event_functions (message_input_entry, message_pilot_input_end, message_input_abort);

  00009	68 00 00 00 00	 push	 OFFSET ?message_input_abort@@YGXH@Z ; message_input_abort
  0000e	68 00 00 00 00	 push	 OFFSET ?message_pilot_input_end@@YGXH@Z ; message_pilot_input_end
  00013	68 00 00 00 00	 push	 OFFSET ?message_input_entry@@YGXH@Z ; message_input_entry
  00018	e8 00 00 00 00	 call	 ?set_alpha_event_functions@@YGXP6GXH@Z00@Z ; set_alpha_event_functions

; 1403 : 
; 1404 : 	push_event (message_set_input_events, "mesage input events");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LIPLDKEL@mesage?5input?5events@
  00022	68 00 00 00 00	 push	 OFFSET ?message_set_input_events@@YGXXZ ; message_set_input_events
  00027	e8 00 00 00 00	 call	 ?push_event@@YGXP6GXXZPBD@Z ; push_event

; 1405 : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?enter_pilot_message@@YGXUMESSAGE_TYPE@@@Z ENDP		; enter_pilot_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?enter_wingman_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_message$ = 8						; size = 8
?enter_wingman_message@@YGXUMESSAGE_TYPE@@@Z PROC	; enter_wingman_message, COMDAT

; 1412 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1413 : 
; 1414 : 	set_alpha_event_functions (message_input_entry, message_wingman_input_end, message_input_abort);

  00009	68 00 00 00 00	 push	 OFFSET ?message_input_abort@@YGXH@Z ; message_input_abort
  0000e	68 00 00 00 00	 push	 OFFSET ?message_wingman_input_end@@YGXH@Z ; message_wingman_input_end
  00013	68 00 00 00 00	 push	 OFFSET ?message_input_entry@@YGXH@Z ; message_input_entry
  00018	e8 00 00 00 00	 call	 ?set_alpha_event_functions@@YGXP6GXH@Z00@Z ; set_alpha_event_functions

; 1415 : 
; 1416 : 	push_event (message_set_input_events, "mesage input events");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LIPLDKEL@mesage?5input?5events@
  00022	68 00 00 00 00	 push	 OFFSET ?message_set_input_events@@YGXXZ ; message_set_input_events
  00027	e8 00 00 00 00	 call	 ?push_event@@YGXP6GXXZPBD@Z ; push_event

; 1417 : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?enter_wingman_message@@YGXUMESSAGE_TYPE@@@Z ENDP	; enter_wingman_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z
_TEXT	SEGMENT
_text$ = -4						; size = 4
_sender$ = 8						; size = 4
_message_type$ = 12					; size = 4
_wingman$ = 16						; size = 4
?send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z PROC ; send_wingman_message_to_human_player, COMDAT

; 1760 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1761 : 	const char
; 1762 : 		*text;
; 1763 : 
; 1764 : 	ASSERT (sender);

  00009	83 7d 08 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@send_wingm
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06CGHJMPBJ@sender@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@send_wingm:

; 1765 : 
; 1766 : 	if (message_type == MESSAGE_WINGMAN_ATTACK_MY_TARGET)

  00027	83 7d 0c 11	 cmp	 DWORD PTR _message_type$[ebp], 17 ; 00000011H
  0002b	75 12		 jne	 SHORT $LN3@send_wingm

; 1767 : 	{
; 1768 : 		text = get_wingman_attack_my_target_text (sender, wingman);

  0002d	8b 45 10	 mov	 eax, DWORD PTR _wingman$[ebp]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _sender$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 ?get_wingman_attack_my_target_text@@YGPBDPAUENTITY@@0@Z ; get_wingman_attack_my_target_text
  0003a	89 45 fc	 mov	 DWORD PTR _text$[ebp], eax

; 1769 : 	}
; 1770 : 	else

  0003d	eb 0c		 jmp	 SHORT $LN4@send_wingm
$LN3@send_wingm:

; 1771 : 	{
; 1772 : 		text = get_wingman_message_text (message_type);

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _message_type$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?get_wingman_message_text@@YGPBDW4MESSAGE_CATEGORIES@@@Z ; get_wingman_message_text
  00048	89 45 fc	 mov	 DWORD PTR _text$[ebp], eax
$LN4@send_wingm:

; 1773 : 	}
; 1774 : 
; 1775 : 	if (text)

  0004b	83 7d fc 00	 cmp	 DWORD PTR _text$[ebp], 0
  0004f	74 34		 je	 SHORT $LN1@send_wingm

; 1776 : 	{
; 1777 : 		ASSERT (wingman);

  00051	83 7d 10 00	 cmp	 DWORD PTR _wingman$[ebp], 0
  00055	75 18		 jne	 SHORT $LN6@send_wingm
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z@4JA
  0005c	83 c0 11	 add	 eax, 17			; 00000011H
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_07EAKNLMLO@wingman@
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@send_wingm:

; 1778 : 
; 1779 : 		send_text_message (get_pilot_entity (), wingman, MESSAGE_TEXT_WINGMAN_STRING, text);

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00072	50		 push	 eax
  00073	6a 09		 push	 9
  00075	8b 4d 10	 mov	 ecx, DWORD PTR _wingman$[ebp]
  00078	51		 push	 ecx
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0007f	52		 push	 edx
  00080	e8 00 00 00 00	 call	 ?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z ; send_text_message
$LN1@send_wingm:

; 1780 : 	}
; 1781 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 0c 00	 ret	 12			; 0000000cH
?send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z ENDP ; send_wingman_message_to_human_player
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_simple_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_en$ = -4						; size = 4
_message$ = 8						; size = 8
?send_simple_message@@YGXUMESSAGE_TYPE@@@Z PROC		; send_simple_message, COMDAT

; 1744 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1745 : 	entity
; 1746 : 		*en;
; 1747 : 
; 1748 : 	en = get_gunship_entity ();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0000e	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 1749 : 
; 1750 : 	process_radio_message (en, message.type, message.value);

  00011	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 ?process_radio_message@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@H@Z ; process_radio_message

; 1751 : 
; 1752 : 	stop_messaging_system (NULL);

  00022	6a 00		 push	 0
  00024	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 1753 : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?send_simple_message@@YGXUMESSAGE_TYPE@@@Z ENDP		; send_simple_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_local_base_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_en$ = -4						; size = 4
_message$ = 8						; size = 8
?send_local_base_message@@YGXUMESSAGE_TYPE@@@Z PROC	; send_local_base_message, COMDAT

; 1721 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1722 : 	entity
; 1723 : 		*en;
; 1724 : 
; 1725 : 	en = get_gunship_entity ();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0000e	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 1726 : 
; 1727 : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00018	75 13		 jne	 SHORT $LN2@send_local

; 1728 : 	{
; 1729 : 		process_radio_message (en, message.type, message.value);

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0001d	50		 push	 eax
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00021	51		 push	 ecx
  00022	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00025	52		 push	 edx
  00026	e8 00 00 00 00	 call	 ?process_radio_message@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@H@Z ; process_radio_message

; 1730 : 	}
; 1731 : 	else

  0002b	eb 16		 jmp	 SHORT $LN3@send_local
$LN2@send_local:

; 1732 : 	{
; 1733 : 		transmit_entity_comms_message (ENTITY_COMMS_RADIO_MESSAGE, en, message.type, message.value);

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00034	51		 push	 ecx
  00035	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00038	52		 push	 edx
  00039	6a 28		 push	 40			; 00000028H
  0003b	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00040	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@send_local:

; 1734 : 	}
; 1735 : 
; 1736 : 	stop_messaging_system (NULL);

  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 1737 : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?send_local_base_message@@YGXUMESSAGE_TYPE@@@Z ENDP	; send_local_base_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_group_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
tv147 = -84						; size = 4
tv91 = -84						; size = 4
tv139 = -80						; size = 4
tv83 = -80						; size = 4
tv75 = -80						; size = 4
_member$ = -12						; size = 4
_group$ = -8						; size = 4
_en$ = -4						; size = 4
_message$ = 8						; size = 8
?send_group_message@@YGXUMESSAGE_TYPE@@@Z PROC		; send_group_message, COMDAT

; 1677 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1678 : 	entity
; 1679 : 		*en,
; 1680 : 		*group,
; 1681 : 		*member;
; 1682 : 
; 1683 : 	en = get_gunship_entity ();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0000e	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 1684 : 
; 1685 : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00018	75 13		 jne	 SHORT $LN4@send_group

; 1686 : 	{
; 1687 : 		process_radio_message (en, message.type, message.value);

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0001d	50		 push	 eax
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00021	51		 push	 ecx
  00022	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00025	52		 push	 edx
  00026	e8 00 00 00 00	 call	 ?process_radio_message@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@H@Z ; process_radio_message

; 1688 : 	}
; 1689 : 	else

  0002b	eb 16		 jmp	 SHORT $LN5@send_group
$LN4@send_group:

; 1690 : 	{
; 1691 : 		transmit_entity_comms_message (ENTITY_COMMS_RADIO_MESSAGE, en, message.type, message.value);

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00034	51		 push	 ecx
  00035	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00038	52		 push	 edx
  00039	6a 28		 push	 40			; 00000028H
  0003b	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00040	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@send_group:

; 1692 : 	}
; 1693 : 
; 1694 : 	//
; 1695 : 	// message value should hold the index number of the target group
; 1696 : 	// if that group contains human players, transmit text message as well
; 1697 : 	//
; 1698 : 
; 1699 : 	group = get_local_entity_safe_ptr (message.value);

  00043	83 7d 0c ff	 cmp	 DWORD PTR _message$[ebp+4], -1
  00047	74 11		 je	 SHORT $LN8@send_group
  00049	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0004c	c1 e0 04	 shl	 eax, 4
  0004f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00055	89 45 b0	 mov	 DWORD PTR tv75[ebp], eax
  00058	eb 07		 jmp	 SHORT $LN9@send_group
$LN8@send_group:
  0005a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@send_group:
  00061	8b 4d b0	 mov	 ecx, DWORD PTR tv75[ebp]
  00064	89 4d f8	 mov	 DWORD PTR _group$[ebp], ecx

; 1700 : 
; 1701 : 	if (group)

  00067	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0006b	0f 84 20 01 00
	00		 je	 $LN6@send_group

; 1702 : 	{
; 1703 : 		member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  00071	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00075	74 0a		 je	 SHORT $LN10@send_group
  00077	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0007a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007c	89 4d b0	 mov	 DWORD PTR tv83[ebp], ecx
  0007f	eb 21		 jmp	 SHORT $LN11@send_group
$LN10@send_group:
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_group_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00087	83 c2 1a	 add	 edx, 26			; 0000001aH
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN11@send_group:
  000a2	b9 01 00 00 00	 mov	 ecx, 1
  000a7	85 c9		 test	 ecx, ecx
  000a9	74 09		 je	 SHORT $LN12@send_group
  000ab	c7 45 ac 19 00
	00 00		 mov	 DWORD PTR tv91[ebp], 25	; 00000019H
  000b2	eb 21		 jmp	 SHORT $LN13@send_group
$LN12@send_group:
  000b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_group_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  000ba	83 c2 1a	 add	 edx, 26			; 0000001aH
  000bd	52		 push	 edx
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ce	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN13@send_group:
  000d5	6a 19		 push	 25			; 00000019H
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  000da	51		 push	 ecx
  000db	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv83[ebp], 180
  000e2	8b 45 ac	 mov	 eax, DWORD PTR tv91[ebp]
  000e5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000ec	ff d1		 call	 ecx
  000ee	89 45 f4	 mov	 DWORD PTR _member$[ebp], eax
$LN2@send_group:

; 1704 : 
; 1705 : 		while (member)

  000f1	83 7d f4 00	 cmp	 DWORD PTR _member$[ebp], 0
  000f5	0f 84 96 00 00
	00		 je	 $LN6@send_group

; 1706 : 		{
; 1707 : 			send_wingman_message_to_human_player (en, message.type, member);

  000fb	8b 45 f4	 mov	 eax, DWORD PTR _member$[ebp]
  000fe	50		 push	 eax
  000ff	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00102	51		 push	 ecx
  00103	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00106	52		 push	 edx
  00107	e8 00 00 00 00	 call	 ?send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z ; send_wingman_message_to_human_player

; 1708 : 
; 1709 : 			member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  0010c	83 7d f4 00	 cmp	 DWORD PTR _member$[ebp], 0
  00110	74 0a		 je	 SHORT $LN14@send_group
  00112	8b 45 f4	 mov	 eax, DWORD PTR _member$[ebp]
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	89 4d b0	 mov	 DWORD PTR tv139[ebp], ecx
  0011a	eb 21		 jmp	 SHORT $LN15@send_group
$LN14@send_group:
  0011c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_group_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00122	83 c2 20	 add	 edx, 32			; 00000020H
  00125	52		 push	 edx
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00136	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN15@send_group:
  0013d	b9 01 00 00 00	 mov	 ecx, 1
  00142	85 c9		 test	 ecx, ecx
  00144	74 09		 je	 SHORT $LN16@send_group
  00146	c7 45 ac 19 00
	00 00		 mov	 DWORD PTR tv147[ebp], 25 ; 00000019H
  0014d	eb 21		 jmp	 SHORT $LN17@send_group
$LN16@send_group:
  0014f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_group_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00155	83 c2 20	 add	 edx, 32			; 00000020H
  00158	52		 push	 edx
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00169	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN17@send_group:
  00170	6a 19		 push	 25			; 00000019H
  00172	8b 4d f4	 mov	 ecx, DWORD PTR _member$[ebp]
  00175	51		 push	 ecx
  00176	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv139[ebp], 180
  0017d	8b 45 ac	 mov	 eax, DWORD PTR tv147[ebp]
  00180	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00187	ff d1		 call	 ecx
  00189	89 45 f4	 mov	 DWORD PTR _member$[ebp], eax

; 1710 : 		}

  0018c	e9 60 ff ff ff	 jmp	 $LN2@send_group
$LN6@send_group:

; 1711 : 	}
; 1712 : 
; 1713 : 	stop_messaging_system (NULL);

  00191	6a 00		 push	 0
  00193	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 1714 : }

  00198	5f		 pop	 edi
  00199	5e		 pop	 esi
  0019a	5b		 pop	 ebx
  0019b	8b e5		 mov	 esp, ebp
  0019d	5d		 pop	 ebp
  0019e	c2 08 00	 ret	 8
?send_group_message@@YGXUMESSAGE_TYPE@@@Z ENDP		; send_group_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
tv223 = -160						; size = 4
tv195 = -160						; size = 4
tv173 = -160						; size = 4
tv142 = -160						; size = 4
tv90 = -160						; size = 4
tv216 = -156						; size = 4
tv187 = -156						; size = 4
tv166 = -156						; size = 4
tv134 = -156						; size = 4
tv82 = -156						; size = 4
tv67 = -156						; size = 4
_p$1 = -88						; size = 4
_i$2 = -84						; size = 4
_target$3 = -80						; size = 4
_targets$4 = -76					; size = 68
_en$ = -8						; size = 4
_wingman$ = -4						; size = 4
_message$ = 8						; size = 8
?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z PROC	; send_wingman_message, COMDAT

; 1599 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1600 : 	entity
; 1601 : 		*wingman,
; 1602 : 		*en;
; 1603 : 
; 1604 : 	en = get_gunship_entity ();

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 1605 : 	wingman = get_local_entity_safe_ptr (message.value);

  00014	83 7d 0c ff	 cmp	 DWORD PTR _message$[ebp+4], -1
  00018	74 14		 je	 SHORT $LN16@send_wingm
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0001d	c1 e0 04	 shl	 eax, 4
  00020	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00026	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv67[ebp], eax
  0002c	eb 0a		 jmp	 SHORT $LN17@send_wingm
$LN16@send_wingm:
  0002e	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN17@send_wingm:
  00038	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv67[ebp]
  0003e	89 4d fc	 mov	 DWORD PTR _wingman$[ebp], ecx

; 1606 : 
; 1607 : 	if (message.type == MESSAGE_WINGMAN_ATTACK_PFZ)

  00041	83 7d 08 16	 cmp	 DWORD PTR _message$[ebp], 22 ; 00000016H
  00045	0f 85 37 04 00
	00		 jne	 $LN5@send_wingm

; 1608 : 	{
; 1609 : 		entity* targets[17];
; 1610 : 		entity* target;
; 1611 : 		unsigned int i=0;

  0004b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0

; 1612 : 		pfz* p;
; 1613 : 		
; 1614 : 		ASSERT(current_pfz != NO_PFZ);

  00052	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?current_pfz@@3IA, -1 ; current_pfz
  00059	75 18		 jne	 SHORT $LN7@send_wingm
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00060	83 c0 0f	 add	 eax, 15			; 0000000fH
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFGJCDOG@current_pfz?5?$CB?$DN?5NO_PFZ@
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@send_wingm:

; 1615 : 		p = get_pfz((unsigned)current_pfz);

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_pfz@@3IA ; current_pfz
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?get_pfz@@YGPAUpfz@@I@Z	; get_pfz
  0007e	89 45 a8	 mov	 DWORD PTR _p$1[ebp], eax

; 1616 : 
; 1617 : 		// collect first 16 targets in pfz and send along
; 1618 : 
; 1619 : 		for (target = get_local_entity_first_child(en, LIST_TYPE_GUNSHIP_TARGET);

  00081	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00085	74 0d		 je	 SHORT $LN18@send_wingm
  00087	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0008a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008c	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], ecx
  00092	eb 24		 jmp	 SHORT $LN19@send_wingm
$LN18@send_wingm:
  00094	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  0009a	83 c2 14	 add	 edx, 20			; 00000014H
  0009d	52		 push	 edx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ae	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN19@send_wingm:
  000b8	b9 01 00 00 00	 mov	 ecx, 1
  000bd	85 c9		 test	 ecx, ecx
  000bf	74 0c		 je	 SHORT $LN20@send_wingm
  000c1	c7 85 60 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv90[ebp], 18	; 00000012H
  000cb	eb 24		 jmp	 SHORT $LN21@send_wingm
$LN20@send_wingm:
  000cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  000d3	83 c2 14	 add	 edx, 20			; 00000014H
  000d6	52		 push	 edx
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e7	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN21@send_wingm:
  000f1	6a 12		 push	 18			; 00000012H
  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  000f6	51		 push	 ecx
  000f7	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv82[ebp], 180
  00101	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv90[ebp]
  00107	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0010e	ff d1		 call	 ecx
  00110	89 45 b0	 mov	 DWORD PTR _target$3[ebp], eax
  00113	e9 92 00 00 00	 jmp	 $LN4@send_wingm
$LN2@send_wingm:

; 1621 : 			 target = get_local_entity_child_succ(target, LIST_TYPE_GUNSHIP_TARGET))

  00118	83 7d b0 00	 cmp	 DWORD PTR _target$3[ebp], 0
  0011c	74 0d		 je	 SHORT $LN22@send_wingm
  0011e	8b 45 b0	 mov	 eax, DWORD PTR _target$3[ebp]
  00121	8b 08		 mov	 ecx, DWORD PTR [eax]
  00123	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv134[ebp], ecx
  00129	eb 24		 jmp	 SHORT $LN23@send_wingm
$LN22@send_wingm:
  0012b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00131	83 c2 16	 add	 edx, 22			; 00000016H
  00134	52		 push	 edx
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00145	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
$LN23@send_wingm:
  0014f	b9 01 00 00 00	 mov	 ecx, 1
  00154	85 c9		 test	 ecx, ecx
  00156	74 0c		 je	 SHORT $LN24@send_wingm
  00158	c7 85 60 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv142[ebp], 18 ; 00000012H
  00162	eb 24		 jmp	 SHORT $LN25@send_wingm
$LN24@send_wingm:
  00164	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  0016a	83 c2 16	 add	 edx, 22			; 00000016H
  0016d	52		 push	 edx
  0016e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00173	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00178	50		 push	 eax
  00179	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017e	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN25@send_wingm:
  00188	6a 12		 push	 18			; 00000012H
  0018a	8b 4d b0	 mov	 ecx, DWORD PTR _target$3[ebp]
  0018d	51		 push	 ecx
  0018e	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv134[ebp], 180
  00198	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv142[ebp]
  0019e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001a5	ff d1		 call	 ecx
  001a7	89 45 b0	 mov	 DWORD PTR _target$3[ebp], eax
$LN4@send_wingm:

; 1620 : 			 target;

  001aa	83 7d b0 00	 cmp	 DWORD PTR _target$3[ebp], 0
  001ae	0f 84 7a 01 00
	00		 je	 $LN3@send_wingm

; 1622 : 		{
; 1623 : 			if (get_gunship_target_valid_for_ground_radar(target)
; 1624 : 				&& coordinate_is_inside_square(get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION),

  001b4	8b 45 b0	 mov	 eax, DWORD PTR _target$3[ebp]
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z ; get_gunship_target_valid_for_ground_radar
  001bd	85 c0		 test	 eax, eax
  001bf	0f 84 64 01 00
	00		 je	 $LN9@send_wingm
  001c5	83 7d b0 00	 cmp	 DWORD PTR _target$3[ebp], 0
  001c9	74 0d		 je	 SHORT $LN26@send_wingm
  001cb	8b 45 b0	 mov	 eax, DWORD PTR _target$3[ebp]
  001ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d0	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv166[ebp], ecx
  001d6	eb 20		 jmp	 SHORT $LN27@send_wingm
$LN26@send_wingm:
  001d8	68 58 06 00 00	 push	 1624			; 00000658H
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e8	52		 push	 edx
  001e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ee	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
$LN27@send_wingm:
  001f8	b8 01 00 00 00	 mov	 eax, 1
  001fd	85 c0		 test	 eax, eax
  001ff	74 0c		 je	 SHORT $LN28@send_wingm
  00201	c7 85 60 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv173[ebp], 8
  0020b	eb 20		 jmp	 SHORT $LN29@send_wingm
$LN28@send_wingm:
  0020d	68 58 06 00 00	 push	 1624			; 00000658H
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00217	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0021d	51		 push	 ecx
  0021e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00223	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv173[ebp], 0
$LN29@send_wingm:
  0022d	8b 55 a8	 mov	 edx, DWORD PTR _p$1[ebp]
  00230	83 c2 24	 add	 edx, 36			; 00000024H
  00233	52		 push	 edx
  00234	8b 45 a8	 mov	 eax, DWORD PTR _p$1[ebp]
  00237	83 c0 18	 add	 eax, 24			; 00000018H
  0023a	50		 push	 eax
  0023b	8b 4d a8	 mov	 ecx, DWORD PTR _p$1[ebp]
  0023e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00241	51		 push	 ecx
  00242	8b 55 a8	 mov	 edx, DWORD PTR _p$1[ebp]
  00245	52		 push	 edx
  00246	6a 08		 push	 8
  00248	8b 45 b0	 mov	 eax, DWORD PTR _target$3[ebp]
  0024b	50		 push	 eax
  0024c	6b 8d 64 ff ff
	ff 60		 imul	 ecx, DWORD PTR tv166[ebp], 96
  00253	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv173[ebp]
  00259	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[ecx+edx*4]
  00260	ff d0		 call	 eax
  00262	50		 push	 eax
  00263	e8 00 00 00 00	 call	 ?coordinate_is_inside_square@@YGHPAUVEC3D@@0000@Z ; coordinate_is_inside_square
  00268	85 c0		 test	 eax, eax
  0026a	0f 84 b9 00 00
	00		 je	 $LN9@send_wingm

; 1625 : 											   &p->corner1, &p->corner2, &p->corner3, &p->corner4))
; 1626 : 			{
; 1627 : 				debug_log("transmitting engage for %i: %s", i, get_local_entity_string(target, STRING_TYPE_FULL_NAME));

  00270	83 7d b0 00	 cmp	 DWORD PTR _target$3[ebp], 0
  00274	74 0d		 je	 SHORT $LN30@send_wingm
  00276	8b 45 b0	 mov	 eax, DWORD PTR _target$3[ebp]
  00279	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027b	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv187[ebp], ecx
  00281	eb 24		 jmp	 SHORT $LN31@send_wingm
$LN30@send_wingm:
  00283	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  00289	83 c2 1c	 add	 edx, 28			; 0000001cH
  0028c	52		 push	 edx
  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00292	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029d	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv187[ebp], 0
$LN31@send_wingm:
  002a7	b9 01 00 00 00	 mov	 ecx, 1
  002ac	85 c9		 test	 ecx, ecx
  002ae	74 0c		 je	 SHORT $LN32@send_wingm
  002b0	c7 85 60 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv195[ebp], 3
  002ba	eb 24		 jmp	 SHORT $LN33@send_wingm
$LN32@send_wingm:
  002bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??send_wingman_message@@YGXUMESSAGE_TYPE@@@Z@4JA
  002c2	83 c2 1c	 add	 edx, 28			; 0000001cH
  002c5	52		 push	 edx
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  002d0	50		 push	 eax
  002d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d6	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN33@send_wingm:
  002e0	6a 03		 push	 3
  002e2	8b 4d b0	 mov	 ecx, DWORD PTR _target$3[ebp]
  002e5	51		 push	 ecx
  002e6	6b 95 64 ff ff
	ff 34		 imul	 edx, DWORD PTR tv187[ebp], 52
  002ed	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv195[ebp]
  002f3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  002fa	ff d1		 call	 ecx
  002fc	50		 push	 eax
  002fd	8b 55 ac	 mov	 edx, DWORD PTR _i$2[ebp]
  00300	52		 push	 edx
  00301	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GENNMKFB@transmitting?5engage?5for?5?$CFi?3?5?$CFs@
  00306	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0030b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1628 : 
; 1629 : 				targets[i++] = target;

  0030e	8b 45 ac	 mov	 eax, DWORD PTR _i$2[ebp]
  00311	8b 4d b0	 mov	 ecx, DWORD PTR _target$3[ebp]
  00314	89 4c 85 b4	 mov	 DWORD PTR _targets$4[ebp+eax*4], ecx
  00318	8b 55 ac	 mov	 edx, DWORD PTR _i$2[ebp]
  0031b	83 c2 01	 add	 edx, 1
  0031e	89 55 ac	 mov	 DWORD PTR _i$2[ebp], edx

; 1630 : 				if (i == (sizeof(targets) / sizeof(targets[0])) - 1)

  00321	83 7d ac 10	 cmp	 DWORD PTR _i$2[ebp], 16	; 00000010H
  00325	75 02		 jne	 SHORT $LN9@send_wingm

; 1631 : 					break;

  00327	eb 05		 jmp	 SHORT $LN3@send_wingm
$LN9@send_wingm:

; 1632 : 			}
; 1633 : 		}

  00329	e9 ea fd ff ff	 jmp	 $LN2@send_wingm
$LN3@send_wingm:

; 1634 : 
; 1635 : 		// terminate target list
; 1636 : 		targets[i] = NULL;

  0032e	8b 45 ac	 mov	 eax, DWORD PTR _i$2[ebp]
  00331	c7 44 85 b4 00
	00 00 00	 mov	 DWORD PTR _targets$4[ebp+eax*4], 0

; 1637 : 
; 1638 : 		if (get_comms_model () == COMMS_MODEL_SERVER
; 1639 : 			&& get_local_entity_int_value (wingman, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  00339	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00340	0f 85 a0 00 00
	00		 jne	 $LN10@send_wingm
  00346	83 7d fc 00	 cmp	 DWORD PTR _wingman$[ebp], 0
  0034a	74 0d		 je	 SHORT $LN34@send_wingm
  0034c	8b 45 fc	 mov	 eax, DWORD PTR _wingman$[ebp]
  0034f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00351	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv216[ebp], ecx
  00357	eb 20		 jmp	 SHORT $LN35@send_wingm
$LN34@send_wingm:
  00359	68 67 06 00 00	 push	 1639			; 00000667H
  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00363	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00369	52		 push	 edx
  0036a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv216[ebp], 0
$LN35@send_wingm:
  00379	b8 01 00 00 00	 mov	 eax, 1
  0037e	85 c0		 test	 eax, eax
  00380	74 0c		 je	 SHORT $LN36@send_wingm
  00382	c7 85 60 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv223[ebp], 156 ; 0000009cH
  0038c	eb 20		 jmp	 SHORT $LN37@send_wingm
$LN36@send_wingm:
  0038e	68 67 06 00 00	 push	 1639			; 00000667H
  00393	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00398	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0039e	51		 push	 ecx
  0039f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a4	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv223[ebp], 0
$LN37@send_wingm:
  003ae	68 9c 00 00 00	 push	 156			; 0000009cH
  003b3	8b 55 fc	 mov	 edx, DWORD PTR _wingman$[ebp]
  003b6	52		 push	 edx
  003b7	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv216[ebp], 1116
  003c1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv223[ebp]
  003c7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003ce	ff d2		 call	 edx
  003d0	85 c0		 test	 eax, eax
  003d2	75 12		 jne	 SHORT $LN10@send_wingm

; 1640 : 		{
; 1641 : 			engage_specific_targets(wingman, targets);

  003d4	8d 45 b4	 lea	 eax, DWORD PTR _targets$4[ebp]
  003d7	50		 push	 eax
  003d8	8b 4d fc	 mov	 ecx, DWORD PTR _wingman$[ebp]
  003db	51		 push	 ecx
  003dc	e8 00 00 00 00	 call	 ?engage_specific_targets@@YGXPAUENTITY@@QAPAU1@@Z ; engage_specific_targets

; 1642 : 		}
; 1643 : 		else

  003e1	e9 80 00 00 00	 jmp	 $LN11@send_wingm
$LN10@send_wingm:

; 1644 : 			transmit_pfz(en, wingman,

  003e6	8d 45 b4	 lea	 eax, DWORD PTR _targets$4[ebp]
  003e9	50		 push	 eax
  003ea	8b 4d a8	 mov	 ecx, DWORD PTR _p$1[ebp]
  003ed	51		 push	 ecx
  003ee	f3 0f 10 41 2c	 movss	 xmm0, DWORD PTR [ecx+44]
  003f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f8	8b 55 a8	 mov	 edx, DWORD PTR _p$1[ebp]
  003fb	51		 push	 ecx
  003fc	f3 0f 10 42 24	 movss	 xmm0, DWORD PTR [edx+36]
  00401	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00406	8b 45 a8	 mov	 eax, DWORD PTR _p$1[ebp]
  00409	51		 push	 ecx
  0040a	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  0040f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00414	8b 4d a8	 mov	 ecx, DWORD PTR _p$1[ebp]
  00417	51		 push	 ecx
  00418	f3 0f 10 41 18	 movss	 xmm0, DWORD PTR [ecx+24]
  0041d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00422	8b 55 a8	 mov	 edx, DWORD PTR _p$1[ebp]
  00425	51		 push	 ecx
  00426	f3 0f 10 42 14	 movss	 xmm0, DWORD PTR [edx+20]
  0042b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00430	8b 45 a8	 mov	 eax, DWORD PTR _p$1[ebp]
  00433	51		 push	 ecx
  00434	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00439	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043e	8b 4d a8	 mov	 ecx, DWORD PTR _p$1[ebp]
  00441	51		 push	 ecx
  00442	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00447	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044c	8b 55 a8	 mov	 edx, DWORD PTR _p$1[ebp]
  0044f	51		 push	 ecx
  00450	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00454	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00459	8b 45 fc	 mov	 eax, DWORD PTR _wingman$[ebp]
  0045c	50		 push	 eax
  0045d	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00460	51		 push	 ecx
  00461	e8 00 00 00 00	 call	 ?transmit_pfz@@YGXPAUENTITY@@0MMMMMMMMQAPAU1@@Z ; transmit_pfz
$LN11@send_wingm:

; 1645 : 				p->corner1.x, p->corner1.z,
; 1646 : 				p->corner2.x, p->corner2.z,
; 1647 : 				p->corner3.x, p->corner3.z,
; 1648 : 				p->corner4.x, p->corner4.z,
; 1649 : 				targets);
; 1650 : 
; 1651 : 		if (get_comms_model () == COMMS_MODEL_SERVER)

  00466	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0046d	75 11		 jne	 SHORT $LN12@send_wingm

; 1652 : 			process_radio_message (en, message.type, message.value);

  0046f	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  00472	50		 push	 eax
  00473	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00476	51		 push	 ecx
  00477	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0047a	52		 push	 edx
  0047b	e8 00 00 00 00	 call	 ?process_radio_message@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@H@Z ; process_radio_message
$LN12@send_wingm:

; 1653 : 	}
; 1654 : 	else

  00480	eb 43		 jmp	 SHORT $LN6@send_wingm
$LN5@send_wingm:

; 1655 : 	{
; 1656 : 		if (get_comms_model () == COMMS_MODEL_SERVER)

  00482	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00489	75 13		 jne	 SHORT $LN13@send_wingm

; 1657 : 			process_radio_message (en, message.type, message.value);

  0048b	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  0048e	50		 push	 eax
  0048f	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00492	51		 push	 ecx
  00493	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00496	52		 push	 edx
  00497	e8 00 00 00 00	 call	 ?process_radio_message@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@H@Z ; process_radio_message

; 1658 : 		else

  0049c	eb 16		 jmp	 SHORT $LN14@send_wingm
$LN13@send_wingm:

; 1659 : 			transmit_entity_comms_message (ENTITY_COMMS_RADIO_MESSAGE, en, message.type, message.value);

  0049e	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp+4]
  004a1	50		 push	 eax
  004a2	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  004a5	51		 push	 ecx
  004a6	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  004a9	52		 push	 edx
  004aa	6a 28		 push	 40			; 00000028H
  004ac	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  004b1	83 c4 10	 add	 esp, 16			; 00000010H
$LN14@send_wingm:

; 1660 : 
; 1661 : 		//
; 1662 : 		// message value should hold the index number of the target wingman
; 1663 : 		// if that wingman is a human player, transmit text message as well
; 1664 : 		//
; 1665 : 
; 1666 : 		send_wingman_message_to_human_player (en, message.type, wingman);

  004b4	8b 45 fc	 mov	 eax, DWORD PTR _wingman$[ebp]
  004b7	50		 push	 eax
  004b8	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  004bb	51		 push	 ecx
  004bc	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  004bf	52		 push	 edx
  004c0	e8 00 00 00 00	 call	 ?send_wingman_message_to_human_player@@YGXPAUENTITY@@W4MESSAGE_CATEGORIES@@0@Z ; send_wingman_message_to_human_player
$LN6@send_wingm:

; 1667 : 	}
; 1668 : 
; 1669 : 	stop_messaging_system (NULL);

  004c5	6a 00		 push	 0
  004c7	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 1670 : }

  004cc	5f		 pop	 edi
  004cd	5e		 pop	 esi
  004ce	5b		 pop	 ebx
  004cf	8b e5		 mov	 esp, ebp
  004d1	5d		 pop	 ebp
  004d2	c2 08 00	 ret	 8
?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ENDP	; send_wingman_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?get_message_keyboard_input@@YGHUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
tv64 = -68						; size = 4
_message$ = 8						; size = 8
?get_message_keyboard_input@@YGHUMESSAGE_TYPE@@@Z PROC	; get_message_keyboard_input, COMDAT

; 1379 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1380 : 
; 1381 : 	switch (message.type)

  00009	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  0000f	83 7d bc 1a	 cmp	 DWORD PTR tv64[ebp], 26	; 0000001aH
  00013	74 08		 je	 SHORT $LN4@get_messag
  00015	83 7d bc 22	 cmp	 DWORD PTR tv64[ebp], 34	; 00000022H
  00019	74 02		 je	 SHORT $LN4@get_messag
  0001b	eb 07		 jmp	 SHORT $LN2@get_messag
$LN4@get_messag:

; 1382 : 	{
; 1383 : 
; 1384 : 		case MESSAGE_PILOT_KEYBOARD:
; 1385 : 		case MESSAGE_WINGMAN_KEYBOARD:
; 1386 : 		{
; 1387 : 
; 1388 : 			return TRUE;

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	eb 02		 jmp	 SHORT $LN1@get_messag
$LN2@get_messag:

; 1389 : 		}
; 1390 : 	}
; 1391 : 
; 1392 : 	return FALSE;

  00024	33 c0		 xor	 eax, eax
$LN1@get_messag:

; 1393 : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?get_message_keyboard_input@@YGHUMESSAGE_TYPE@@@Z ENDP	; get_message_keyboard_input
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?message_function@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_message_action2$ = -12					; size = 4
_message_action$ = -8					; size = 4
_loop$ = -4						; size = 4
_ev$ = 8						; size = 4
?message_function@@YGXPAUEVENT@@@Z PROC			; message_function, COMDAT

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 404  : 	int
; 405  : 		loop;
; 406  : 
; 407  : 	message_action_type
; 408  : 		*message_action,
; 409  : 		*message_action2;
; 410  : 
; 411  : 	message_action = get_message_action (message_destination);

  00009	a1 04 00 00 00	 mov	 eax, DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A+4
  0000e	50		 push	 eax
  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ?get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z ; get_message_action
  0001b	89 45 f8	 mov	 DWORD PTR _message_action$[ebp], eax

; 412  : 
; 413  : 	for (loop = 0; loop < message_action->number_of_actions; loop ++)

  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@message_fu
$LN2@message_fu:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@message_fu:
  00030	8b 45 f8	 mov	 eax, DWORD PTR _message_action$[ebp]
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00036	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00038	7d 63		 jge	 SHORT $LN1@message_fu

; 414  : 	{
; 415  : 		if (message_action->keycodes [loop] == ev->key)

  0003a	8b 45 f8	 mov	 eax, DWORD PTR _message_action$[ebp]
  0003d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00040	8b 55 08	 mov	 edx, DWORD PTR _ev$[ebp]
  00043	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  00047	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  0004a	39 04 91	 cmp	 DWORD PTR [ecx+edx*4], eax
  0004d	75 4c		 jne	 SHORT $LN5@message_fu

; 416  : 		{
; 417  : 			message_action2 = get_message_action (message_action->actions [loop]);

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _message_action$[ebp]
  00052	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00055	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00058	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  0005c	50		 push	 eax
  0005d	8b 0c d1	 mov	 ecx, DWORD PTR [ecx+edx*8]
  00060	51		 push	 ecx
  00061	e8 00 00 00 00	 call	 ?get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z ; get_message_action
  00066	89 45 f4	 mov	 DWORD PTR _message_action2$[ebp], eax

; 418  : 
; 419  : 			if (message_action2)

  00069	83 7d f4 00	 cmp	 DWORD PTR _message_action2$[ebp], 0
  0006d	74 2a		 je	 SHORT $LN6@message_fu

; 420  : 			{
; 421  : 
; 422  : 				current_message = message_action2->message;

  0006f	8b 45 f4	 mov	 eax, DWORD PTR _message_action2$[ebp]
  00072	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00075	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00078	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A, ecx
  0007e	89 15 04 00 00
	00		 mov	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4, edx

; 423  : 
; 424  : 				message_action2->function (current_message);

  00084	a1 04 00 00 00	 mov	 eax, DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4
  00089	50		 push	 eax
  0008a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A
  00090	51		 push	 ecx
  00091	8b 55 f4	 mov	 edx, DWORD PTR _message_action2$[ebp]
  00094	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00097	ff d0		 call	 eax
$LN6@message_fu:

; 425  : 			}
; 426  : 
; 427  : 			break;

  00099	eb 02		 jmp	 SHORT $LN1@message_fu
$LN5@message_fu:

; 428  : 		}
; 429  : 	}

  0009b	eb 8a		 jmp	 SHORT $LN2@message_fu
$LN1@message_fu:

; 430  : }

  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
?message_function@@YGXPAUEVENT@@@Z ENDP			; message_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?message_list@@YGXUMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_message$ = 8						; size = 8
?message_list@@YGXUMESSAGE_TYPE@@@Z PROC		; message_list, COMDAT

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 394  : 
; 395  : 	message_destination = message;

  00009	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A, eax
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp+4]
  00014	89 0d 04 00 00
	00		 mov	 DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A+4, ecx

; 396  : }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 08 00	 ret	 8
?message_list@@YGXUMESSAGE_TYPE@@@Z ENDP		; message_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z
_TEXT	SEGMENT
_message_action$ = -4					; size = 4
_message$ = 8						; size = 8
?get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z PROC ; get_message_action, COMDAT

; 364  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 365  : 
; 366  : 	message_action_type
; 367  : 		*message_action;
; 368  : 
; 369  : 	ASSERT (message_database);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A, 0
  00010	75 18		 jne	 SHORT $LN4@get_messag
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JLFLEIIN@message_database@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_messag:

; 370  : 
; 371  : 	message_action = message_database;

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A
  0002f	89 45 fc	 mov	 DWORD PTR _message_action$[ebp], eax
$LN2@get_messag:

; 372  : 
; 373  : 	while (message_action)

  00032	83 7d fc 00	 cmp	 DWORD PTR _message_action$[ebp], 0
  00036	74 26		 je	 SHORT $LN3@get_messag

; 374  : 	{
; 375  : 
; 376  : 		if ((message_action->message.type == message.type) && (message_action->message.value == message.value))

  00038	8b 45 fc	 mov	 eax, DWORD PTR _message_action$[ebp]
  0003b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003e	3b 4d 08	 cmp	 ecx, DWORD PTR _message$[ebp]
  00041	75 10		 jne	 SHORT $LN5@get_messag
  00043	8b 45 fc	 mov	 eax, DWORD PTR _message_action$[ebp]
  00046	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00049	3b 4d 0c	 cmp	 ecx, DWORD PTR _message$[ebp+4]
  0004c	75 05		 jne	 SHORT $LN5@get_messag

; 377  : 		{
; 378  : 
; 379  : 			return message_action;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _message_action$[ebp]
  00051	eb 0d		 jmp	 SHORT $LN1@get_messag
$LN5@get_messag:

; 380  : 		}
; 381  : 
; 382  : 		message_action = message_action->next;

  00053	8b 45 fc	 mov	 eax, DWORD PTR _message_action$[ebp]
  00056	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00059	89 4d fc	 mov	 DWORD PTR _message_action$[ebp], ecx

; 383  : 	}

  0005c	eb d4		 jmp	 SHORT $LN2@get_messag
$LN3@get_messag:

; 384  : 
; 385  : 	return NULL;

  0005e	33 c0		 xor	 eax, eax
$LN1@get_messag:

; 386  : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z ENDP ; get_message_action
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z
_TEXT	SEGMENT
_new_message_action$ = -4				; size = 4
_type$ = 8						; size = 4
_value$ = 12						; size = 4
_function$ = 16						; size = 4
?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z PROC ; create_leaf_message_action, COMDAT

; 1319 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1320 : 
; 1321 : 	message_action_type
; 1322 : 		*new_message_action;
; 1323 : 
; 1324 : 	new_message_action = (message_action_type *) malloc_fast_mem (sizeof (message_action_type));

  00009	6a 24		 push	 36			; 00000024H
  0000b	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00010	89 45 fc	 mov	 DWORD PTR _new_message_action$[ebp], eax

; 1325 : 
; 1326 : 	memset (new_message_action, 0, sizeof (message_action_type));

  00013	6a 24		 push	 36			; 00000024H
  00015	6a 00		 push	 0
  00017	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 _memset
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1327 : 
; 1328 : 	new_message_action->number_of_actions = 1;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  00026	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 1329 : 
; 1330 : 	new_message_action->message.type = type;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  00032	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1331 : 	new_message_action->message.value = value;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp]
  0003b	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1332 : 
; 1333 : 	new_message_action->function = function;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  00041	8b 4d 10	 mov	 ecx, DWORD PTR _function$[ebp]
  00044	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1334 : 
; 1335 : 	new_message_action->next = message_database;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  0004a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A
  00050	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 1336 : 
; 1337 : 	message_database = new_message_action;

  00053	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  00056	a3 00 00 00 00	 mov	 DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A, eax

; 1338 : }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 0c 00	 ret	 12			; 0000000cH
?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ENDP ; create_leaf_message_action
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z
_TEXT	SEGMENT
_translated_text$ = -4					; size = 4
_parent$ = 8						; size = 4
_index$ = 12						; size = 4
_type$ = 16						; size = 4
_value$ = 20						; size = 4
_keycode$ = 24						; size = 4
_text$ = 28						; size = 4
?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z PROC ; add_message_action_to_database, COMDAT

; 1345 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1346 : 	const char
; 1347 : 		*translated_text;
; 1348 : 
; 1349 : 	ASSERT (parent);

  00009	83 7d 08 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@add_messag
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@add_messag:

; 1350 : 
; 1351 : 	ASSERT (index < parent->number_of_actions);

  00027	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _index$[ebp]
  0002d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0002f	7c 18		 jl	 SHORT $LN3@add_messag
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z@4JA
  00036	83 c0 06	 add	 eax, 6
  00039	50		 push	 eax
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@CLINMMIE@index?5?$DM?5parent?9?$DOnumber_of_actio@
  00044	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@add_messag:

; 1352 : 
; 1353 : 	parent->actions [index].type = type;

  00049	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0004c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004f	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  00052	8b 45 10	 mov	 eax, DWORD PTR _type$[ebp]
  00055	89 04 d1	 mov	 DWORD PTR [ecx+edx*8], eax

; 1354 : 	parent->actions [index].value = value;

  00058	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0005b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0005e	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  00061	8b 45 14	 mov	 eax, DWORD PTR _value$[ebp]
  00064	89 44 d1 04	 mov	 DWORD PTR [ecx+edx*8+4], eax

; 1355 : 
; 1356 : 	parent->keycodes [index] = keycode;

  00068	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0006b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006e	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  00071	8b 45 18	 mov	 eax, DWORD PTR _keycode$[ebp]
  00074	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax

; 1357 : 
; 1358 : 	if (text)

  00077	83 7d 1c 00	 cmp	 DWORD PTR _text$[ebp], 0
  0007b	74 66		 je	 SHORT $LN4@add_messag

; 1359 : 	{
; 1360 : 		translated_text = get_trans (text);

  0007d	8b 45 1c	 mov	 eax, DWORD PTR _text$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00086	89 45 fc	 mov	 DWORD PTR _translated_text$[ebp], eax

; 1361 : 
; 1362 : 		ASSERT (translated_text);

  00089	83 7d fc 00	 cmp	 DWORD PTR _translated_text$[ebp], 0
  0008d	75 18		 jne	 SHORT $LN6@add_messag
  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z@4JA
  00094	83 c0 11	 add	 eax, 17			; 00000011H
  00097	50		 push	 eax
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MCEPIKPL@translated_text@
  000a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@add_messag:

; 1363 : 
; 1364 : 		parent->action_text [index] = (char *) malloc_fast_mem (strlen (translated_text) + 4);

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _translated_text$[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 _strlen
  000b0	83 c4 04	 add	 esp, 4
  000b3	83 c0 04	 add	 eax, 4
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  000bc	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  000bf	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000c2	8b 4d 0c	 mov	 ecx, DWORD PTR _index$[ebp]
  000c5	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 1365 : 
; 1366 : 		strcpy (parent->action_text [index], translated_text);

  000c8	8b 45 fc	 mov	 eax, DWORD PTR _translated_text$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  000cf	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000d2	8b 45 0c	 mov	 eax, DWORD PTR _index$[ebp]
  000d5	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  000d8	51		 push	 ecx
  000d9	e8 00 00 00 00	 call	 _strcpy
  000de	83 c4 08	 add	 esp, 8

; 1367 : 	}
; 1368 : 	else

  000e1	eb 10		 jmp	 SHORT $LN1@add_messag
$LN4@add_messag:

; 1369 : 	{
; 1370 : 		parent->action_text [index] = NULL;

  000e3	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  000e6	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000e9	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  000ec	c7 04 91 00 00
	00 00		 mov	 DWORD PTR [ecx+edx*4], 0
$LN1@add_messag:

; 1371 : 	}
; 1372 : }

  000f3	5f		 pop	 edi
  000f4	5e		 pop	 esi
  000f5	5b		 pop	 ebx
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c2 18 00	 ret	 24			; 00000018H
?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ENDP ; add_message_action_to_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z
_TEXT	SEGMENT
_text$ = -8						; size = 4
_new_message_action$ = -4				; size = 4
_type$ = 8						; size = 4
_value$ = 12						; size = 4
_function$ = 16						; size = 4
_number_of_actions$ = 20				; size = 4
_title$ = 24						; size = 4
?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z PROC ; create_message_database_list, COMDAT

; 1265 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1266 : 	message_action_type
; 1267 : 		*new_message_action;
; 1268 : 
; 1269 : 	const char
; 1270 : 		*text;
; 1271 : 
; 1272 : 	new_message_action = (message_action_type *) malloc_fast_mem (sizeof (message_action_type));

  00009	6a 24		 push	 36			; 00000024H
  0000b	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00010	89 45 fc	 mov	 DWORD PTR _new_message_action$[ebp], eax

; 1273 : 
; 1274 : 	memset (new_message_action, 0, sizeof (message_action_type));

  00013	6a 24		 push	 36			; 00000024H
  00015	6a 00		 push	 0
  00017	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 _memset
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1275 : 
; 1276 : 	if (title)

  00023	83 7d 18 00	 cmp	 DWORD PTR _title$[ebp], 0
  00027	74 58		 je	 SHORT $LN2@create_mes

; 1277 : 	{
; 1278 : 		text = get_trans (title);

  00029	8b 45 18	 mov	 eax, DWORD PTR _title$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00032	89 45 f8	 mov	 DWORD PTR _text$[ebp], eax

; 1279 : 
; 1280 : 		ASSERT (text);

  00035	83 7d f8 00	 cmp	 DWORD PTR _text$[ebp], 0
  00039	75 18		 jne	 SHORT $LN3@create_mes
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z@4JA
  00040	83 c0 0f	 add	 eax, 15			; 0000000fH
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_04CIMGMMMG@text@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@create_mes:

; 1281 : 
; 1282 : 		new_message_action->title = (char *) malloc_fast_mem (strlen (text) + 4);

  00053	8b 45 f8	 mov	 eax, DWORD PTR _text$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 _strlen
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 c0 04	 add	 eax, 4
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  0006b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 1283 : 
; 1284 : 		strcpy (new_message_action->title, text);

  0006e	8b 45 f8	 mov	 eax, DWORD PTR _text$[ebp]
  00071	50		 push	 eax
  00072	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  00075	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00078	52		 push	 edx
  00079	e8 00 00 00 00	 call	 _strcpy
  0007e	83 c4 08	 add	 esp, 8
$LN2@create_mes:

; 1285 : 	}
; 1286 : 
; 1287 : 	new_message_action->number_of_actions = number_of_actions;

  00081	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  00084	8b 4d 14	 mov	 ecx, DWORD PTR _number_of_actions$[ebp]
  00087	89 08		 mov	 DWORD PTR [eax], ecx

; 1288 : 
; 1289 : 	new_message_action->message.type = type;

  00089	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  0008f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1290 : 	new_message_action->message.value = value;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  00095	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp]
  00098	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1291 : 
; 1292 : 	new_message_action->function = function;

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR _function$[ebp]
  000a1	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 1293 : 
; 1294 : 	if (number_of_actions)

  000a4	83 7d 14 00	 cmp	 DWORD PTR _number_of_actions$[ebp], 0
  000a8	74 7e		 je	 SHORT $LN4@create_mes

; 1295 : 	{
; 1296 : 
; 1297 : 		new_message_action->actions = (message_type *) malloc_fast_mem (sizeof (message_type) * number_of_actions);

  000aa	8b 45 14	 mov	 eax, DWORD PTR _number_of_actions$[ebp]
  000ad	c1 e0 03	 shl	 eax, 3
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  000b9	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 1298 : 		memset (new_message_action->actions, 0, sizeof (message_type) * number_of_actions);

  000bc	8b 45 14	 mov	 eax, DWORD PTR _number_of_actions$[ebp]
  000bf	c1 e0 03	 shl	 eax, 3
  000c2	50		 push	 eax
  000c3	6a 00		 push	 0
  000c5	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  000c8	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 _memset
  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1299 : 
; 1300 : 		new_message_action->keycodes = (int *) malloc_fast_mem (sizeof (int) * number_of_actions);

  000d4	8b 45 14	 mov	 eax, DWORD PTR _number_of_actions$[ebp]
  000d7	c1 e0 02	 shl	 eax, 2
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  000e0	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  000e3	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 1301 : 		memset (new_message_action->keycodes, 0, sizeof (int) * number_of_actions);

  000e6	8b 45 14	 mov	 eax, DWORD PTR _number_of_actions$[ebp]
  000e9	c1 e0 02	 shl	 eax, 2
  000ec	50		 push	 eax
  000ed	6a 00		 push	 0
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  000f2	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  000f5	52		 push	 edx
  000f6	e8 00 00 00 00	 call	 _memset
  000fb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1302 : 
; 1303 : 		new_message_action->action_text = (char * *) malloc_fast_mem (sizeof (char *) * number_of_actions);

  000fe	8b 45 14	 mov	 eax, DWORD PTR _number_of_actions$[ebp]
  00101	c1 e0 02	 shl	 eax, 2
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  0010d	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 1304 : 		memset (new_message_action->action_text, 0, sizeof (char *) * number_of_actions);

  00110	8b 45 14	 mov	 eax, DWORD PTR _number_of_actions$[ebp]
  00113	c1 e0 02	 shl	 eax, 2
  00116	50		 push	 eax
  00117	6a 00		 push	 0
  00119	8b 4d fc	 mov	 ecx, DWORD PTR _new_message_action$[ebp]
  0011c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011f	52		 push	 edx
  00120	e8 00 00 00 00	 call	 _memset
  00125	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@create_mes:

; 1305 : 	}
; 1306 : 
; 1307 : 	new_message_action->next = message_database;

  00128	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  0012b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A
  00131	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 1308 : 
; 1309 : 	message_database = new_message_action;

  00134	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]
  00137	a3 00 00 00 00	 mov	 DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A, eax

; 1310 : 
; 1311 : 	return new_message_action;

  0013c	8b 45 fc	 mov	 eax, DWORD PTR _new_message_action$[ebp]

; 1312 : }

  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 14 00	 ret	 20			; 00000014H
?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ENDP ; create_message_database_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?initialise_message_database@@YGXXZ
_TEXT	SEGMENT
tv297 = -164						; size = 4
tv1310 = -160						; size = 4
tv1271 = -160						; size = 4
tv1251 = -160						; size = 4
tv1170 = -160						; size = 4
tv1149 = -160						; size = 4
tv1112 = -160						; size = 4
tv1092 = -160						; size = 4
tv1069 = -160						; size = 4
tv1048 = -160						; size = 4
tv971 = -160						; size = 4
tv946 = -160						; size = 4
tv734 = -160						; size = 4
tv713 = -160						; size = 4
tv694 = -160						; size = 4
tv673 = -160						; size = 4
tv575 = -160						; size = 4
tv486 = -160						; size = 4
tv459 = -160						; size = 4
tv440 = -160						; size = 4
tv406 = -160						; size = 4
tv374 = -160						; size = 4
tv329 = -160						; size = 4
tv290 = -160						; size = 4
tv257 = -160						; size = 4
tv230 = -160						; size = 4
tv208 = -160						; size = 4
tv188 = -160						; size = 4
tv168 = -160						; size = 4
tv147 = -160						; size = 4
tv1302 = -156						; size = 4
tv1285 = -156						; size = 4
tv1263 = -156						; size = 4
tv1243 = -156						; size = 4
tv1222 = -156						; size = 4
tv1187 = -156						; size = 4
tv1162 = -156						; size = 4
tv1141 = -156						; size = 4
tv1104 = -156						; size = 4
tv1084 = -156						; size = 4
tv1061 = -156						; size = 4
tv1040 = -156						; size = 4
tv963 = -156						; size = 4
tv938 = -156						; size = 4
tv726 = -156						; size = 4
tv706 = -156						; size = 4
tv686 = -156						; size = 4
tv665 = -156						; size = 4
tv567 = -156						; size = 4
tv479 = -156						; size = 4
tv452 = -156						; size = 4
tv432 = -156						; size = 4
tv399 = -156						; size = 4
tv367 = -156						; size = 4
tv322 = -156						; size = 4
tv282 = -156						; size = 4
tv249 = -156						; size = 4
tv222 = -156						; size = 4
tv201 = -156						; size = 4
tv180 = -156						; size = 4
tv160 = -156						; size = 4
tv139 = -156						; size = 4
_group$1 = -88						; size = 4
_unique_id$2 = -84					; size = 4
_list_max$3 = -80					; size = 4
_list_count$4 = -76					; size = 4
_pilot_en$5 = -72					; size = 4
_force_en$6 = -68					; size = 4
_group$7 = -64						; size = 4
_guide$8 = -60						; size = 4
_recon_flag$9 = -56					; size = 4
_guide$10 = -52						; size = 4
_guide$11 = -48						; size = 4
_human_wingman$12 = -44					; size = 4
_human_group$13 = -40					; size = 4
_leader_flag$14 = -36					; size = 4
_member$15 = -32					; size = 4
_group$16 = -28						; size = 4
_message$ = -24						; size = 4
_sub_item$ = -20					; size = 4
_new_item$ = -16					; size = 4
_index$ = -12						; size = 4
_count$ = -8						; size = 4
_loop$ = -4						; size = 4
?initialise_message_database@@YGXXZ PROC		; initialise_message_database, COMDAT

; 572  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 573  : 	int
; 574  : 		loop,
; 575  : 		count,
; 576  : 		index;
; 577  : 
; 578  : 	message_action_type
; 579  : 		*new_item,
; 580  : 		*sub_item;
; 581  : 
; 582  : 	message_categories
; 583  : 		message;
; 584  : 
; 585  : 	/////////////////////////////////////////////////////////////////
; 586  : 	//
; 587  : 	// Destination list
; 588  : 	//
; 589  : 	/////////////////////////////////////////////////////////////////
; 590  : 
; 591  : 	new_item = create_message_database_list (MESSAGE_DESTINATION_LIST, 0, message_list, 5, "Select Destination");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OKBKIHIB@Select?5Destination@
  00011	6a 05		 push	 5
  00013	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  00018	6a 00		 push	 0
  0001a	6a 01		 push	 1
  0001c	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  00021	89 45 f0	 mov	 DWORD PTR _new_item$[ebp], eax

; 592  : 
; 593  : 	add_message_action_to_database (new_item, 0, MESSAGE_GROUP_LIST, 0, DIK_1, "Flight Group");

  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FHAKFJBP@Flight?5Group@
  00029	6a 02		 push	 2
  0002b	6a 00		 push	 0
  0002d	6a 02		 push	 2
  0002f	6a 00		 push	 0
  00031	8b 45 f0	 mov	 eax, DWORD PTR _new_item$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 594  : 	add_message_action_to_database (new_item, 1, MESSAGE_WINGMAN_LIST, 0, DIK_2, "Wingmen");

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_07LONCHGDE@Wingmen@
  0003f	6a 03		 push	 3
  00041	6a 00		 push	 0
  00043	6a 03		 push	 3
  00045	6a 01		 push	 1
  00047	8b 45 f0	 mov	 eax, DWORD PTR _new_item$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 595  : 	add_message_action_to_database (new_item, 2, MESSAGE_LOCAL_BASE_LIST, 0, DIK_3, "Local Base");

  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LFEHHGIB@Local?5Base@
  00055	6a 04		 push	 4
  00057	6a 00		 push	 0
  00059	6a 04		 push	 4
  0005b	6a 02		 push	 2
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _new_item$[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 596  : 	add_message_action_to_database (new_item, 3, MESSAGE_PILOT_LIST, 0, DIK_4, "Other Players");

  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ENHBDOIL@Other?5Players@
  0006b	6a 05		 push	 5
  0006d	6a 00		 push	 0
  0006f	6a 05		 push	 5
  00071	6a 03		 push	 3
  00073	8b 45 f0	 mov	 eax, DWORD PTR _new_item$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 597  : 
; 598  : 	// GCsDriver  08-12-2007
; 599  : 	add_message_action_to_database (new_item, 4, MESSAGE_CHANNEL_LIST, 0, DIK_5, "COMM Channels");

  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OBCHIKHB@COMM?5Channels@
  00081	6a 06		 push	 6
  00083	6a 00		 push	 0
  00085	6a 23		 push	 35			; 00000023H
  00087	6a 04		 push	 4
  00089	8b 45 f0	 mov	 eax, DWORD PTR _new_item$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 600  : 
; 601  : 	/////////////////////////////////////////////////////////////////
; 602  : 	//
; 603  : 	// Wingmen / Flight Group
; 604  : 	//
; 605  : 	/////////////////////////////////////////////////////////////////
; 606  : 	{
; 607  : 		entity
; 608  : 			*group,
; 609  : 			*member;
; 610  : 
; 611  : 		int
; 612  : 			leader_flag,
; 613  : 			human_group,
; 614  : 			human_wingman;
; 615  : 
; 616  : 		if (get_gunship_entity ())

  00092	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00099	0f 84 57 12 00
	00		 je	 $LN16@initialise

; 617  : 		{
; 618  : 			group = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_MEMBER);

  0009f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000a6	74 0f		 je	 SHORT $LN83@initialise
  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv139[ebp], ecx
  000b5	eb 24		 jmp	 SHORT $LN84@initialise
$LN83@initialise:
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  000bd	83 c2 2e	 add	 edx, 46			; 0000002eH
  000c0	52		 push	 edx
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv139[ebp], 0
$LN84@initialise:
  000db	b9 01 00 00 00	 mov	 ecx, 1
  000e0	85 c9		 test	 ecx, ecx
  000e2	74 0c		 je	 SHORT $LN85@initialise
  000e4	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv147[ebp], 25 ; 00000019H
  000ee	eb 24		 jmp	 SHORT $LN86@initialise
$LN85@initialise:
  000f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  000f6	83 c2 2e	 add	 edx, 46			; 0000002eH
  000f9	52		 push	 edx
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], 0
$LN86@initialise:
  00114	6a 19		 push	 25			; 00000019H
  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0011c	51		 push	 ecx
  0011d	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv139[ebp], 180
  00127	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv147[ebp]
  0012d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00134	ff d1		 call	 ecx
  00136	89 45 e4	 mov	 DWORD PTR _group$16[ebp], eax

; 619  : 
; 620  : 			if (group)

  00139	83 7d e4 00	 cmp	 DWORD PTR _group$16[ebp], 0
  0013d	0f 84 b3 11 00
	00		 je	 $LN16@initialise

; 621  : 			{
; 622  : 				leader_flag = get_local_entity_int_value (get_gunship_entity (), INT_TYPE_GROUP_LEADER);

  00143	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0014a	74 0f		 je	 SHORT $LN87@initialise
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00151	8b 08		 mov	 ecx, DWORD PTR [eax]
  00153	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv160[ebp], ecx
  00159	eb 24		 jmp	 SHORT $LN88@initialise
$LN87@initialise:
  0015b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00161	83 c2 32	 add	 edx, 50			; 00000032H
  00164	52		 push	 edx
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00175	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv160[ebp], 0
$LN88@initialise:
  0017f	b9 01 00 00 00	 mov	 ecx, 1
  00184	85 c9		 test	 ecx, ecx
  00186	74 0c		 je	 SHORT $LN89@initialise
  00188	c7 85 60 ff ff
	ff 48 00 00 00	 mov	 DWORD PTR tv168[ebp], 72 ; 00000048H
  00192	eb 24		 jmp	 SHORT $LN90@initialise
$LN89@initialise:
  00194	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  0019a	83 c2 32	 add	 edx, 50			; 00000032H
  0019d	52		 push	 edx
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ae	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv168[ebp], 0
$LN90@initialise:
  001b8	6a 48		 push	 72			; 00000048H
  001ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001c0	51		 push	 ecx
  001c1	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv160[ebp], 1116
  001cb	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv168[ebp]
  001d1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001d8	ff d1		 call	 ecx
  001da	89 45 dc	 mov	 DWORD PTR _leader_flag$14[ebp], eax

; 623  : 
; 624  : 				//
; 625  : 				// count up wingmen
; 626  : 				//
; 627  : 
; 628  : 				count = 0;

  001dd	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 629  : 
; 630  : 				human_group = FALSE;

  001e4	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _human_group$13[ebp], 0

; 631  : 
; 632  : 				member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  001eb	83 7d e4 00	 cmp	 DWORD PTR _group$16[ebp], 0
  001ef	74 0d		 je	 SHORT $LN91@initialise
  001f1	8b 45 e4	 mov	 eax, DWORD PTR _group$16[ebp]
  001f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f6	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv180[ebp], ecx
  001fc	eb 24		 jmp	 SHORT $LN92@initialise
$LN91@initialise:
  001fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00204	83 c2 3c	 add	 edx, 60			; 0000003cH
  00207	52		 push	 edx
  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00218	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN92@initialise:
  00222	b9 01 00 00 00	 mov	 ecx, 1
  00227	85 c9		 test	 ecx, ecx
  00229	74 0c		 je	 SHORT $LN93@initialise
  0022b	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv188[ebp], 25 ; 00000019H
  00235	eb 24		 jmp	 SHORT $LN94@initialise
$LN93@initialise:
  00237	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  0023d	83 c2 3c	 add	 edx, 60			; 0000003cH
  00240	52		 push	 edx
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0024b	50		 push	 eax
  0024c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00251	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv188[ebp], 0
$LN94@initialise:
  0025b	6a 19		 push	 25			; 00000019H
  0025d	8b 4d e4	 mov	 ecx, DWORD PTR _group$16[ebp]
  00260	51		 push	 ecx
  00261	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv180[ebp], 180
  0026b	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv188[ebp]
  00271	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00278	ff d1		 call	 ecx
  0027a	89 45 e0	 mov	 DWORD PTR _member$15[ebp], eax
$LN2@initialise:

; 633  : 
; 634  : 				while (member)

  0027d	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  00281	0f 84 44 01 00
	00		 je	 $LN3@initialise

; 635  : 				{
; 636  : 					if (member != get_gunship_entity ())

  00287	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  0028a	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00290	0f 84 9e 00 00
	00		 je	 $LN18@initialise

; 637  : 					{
; 638  : 						if (get_local_entity_int_value (member, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00296	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  0029a	74 0d		 je	 SHORT $LN95@initialise
  0029c	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  0029f	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a1	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv201[ebp], ecx
  002a7	eb 20		 jmp	 SHORT $LN96@initialise
$LN95@initialise:
  002a9	68 7e 02 00 00	 push	 638			; 0000027eH
  002ae	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002b9	52		 push	 edx
  002ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bf	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv201[ebp], 0
$LN96@initialise:
  002c9	b8 01 00 00 00	 mov	 eax, 1
  002ce	85 c0		 test	 eax, eax
  002d0	74 0c		 je	 SHORT $LN97@initialise
  002d2	c7 85 60 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv208[ebp], 156 ; 0000009cH
  002dc	eb 20		 jmp	 SHORT $LN98@initialise
$LN97@initialise:
  002de	68 7e 02 00 00	 push	 638			; 0000027eH
  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002ee	51		 push	 ecx
  002ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f4	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN98@initialise:
  002fe	68 9c 00 00 00	 push	 156			; 0000009cH
  00303	8b 55 e0	 mov	 edx, DWORD PTR _member$15[ebp]
  00306	52		 push	 edx
  00307	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv201[ebp], 1116
  00311	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv208[ebp]
  00317	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0031e	ff d2		 call	 edx
  00320	85 c0		 test	 eax, eax
  00322	74 07		 je	 SHORT $LN19@initialise

; 639  : 						{
; 640  : 							human_group = TRUE;

  00324	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR _human_group$13[ebp], 1
$LN19@initialise:

; 641  : 						}
; 642  : 
; 643  : 						count ++;

  0032b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0032e	83 c0 01	 add	 eax, 1
  00331	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN18@initialise:

; 644  : 					}
; 645  : 
; 646  : 					member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  00334	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  00338	74 0d		 je	 SHORT $LN99@initialise
  0033a	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  0033d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033f	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv222[ebp], ecx
  00345	eb 24		 jmp	 SHORT $LN100@initialise
$LN99@initialise:
  00347	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  0034d	83 c2 4a	 add	 edx, 74			; 0000004aH
  00350	52		 push	 edx
  00351	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00356	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0035b	50		 push	 eax
  0035c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00361	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv222[ebp], 0
$LN100@initialise:
  0036b	b9 01 00 00 00	 mov	 ecx, 1
  00370	85 c9		 test	 ecx, ecx
  00372	74 0c		 je	 SHORT $LN101@initialise
  00374	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv230[ebp], 25 ; 00000019H
  0037e	eb 24		 jmp	 SHORT $LN102@initialise
$LN101@initialise:
  00380	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00386	83 c2 4a	 add	 edx, 74			; 0000004aH
  00389	52		 push	 edx
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00394	50		 push	 eax
  00395	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv230[ebp], 0
$LN102@initialise:
  003a4	6a 19		 push	 25			; 00000019H
  003a6	8b 4d e0	 mov	 ecx, DWORD PTR _member$15[ebp]
  003a9	51		 push	 ecx
  003aa	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv222[ebp], 180
  003b4	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv230[ebp]
  003ba	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003c1	ff d1		 call	 ecx
  003c3	89 45 e0	 mov	 DWORD PTR _member$15[ebp], eax

; 647  : 				}

  003c6	e9 b2 fe ff ff	 jmp	 $LN2@initialise
$LN3@initialise:

; 648  : 
; 649  : 				//
; 650  : 				// create list
; 651  : 				//
; 652  : 
; 653  : 				if (count > 0)

  003cb	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  003cf	0f 8e 21 0f 00
	00		 jle	 $LN16@initialise

; 654  : 				{
; 655  : 					new_item = create_message_database_list (MESSAGE_WINGMAN_LIST, 0, message_list, count, "Wingman List");

  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KLJBOPJI@Wingman?5List@
  003da	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  003dd	50		 push	 eax
  003de	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  003e3	6a 00		 push	 0
  003e5	6a 03		 push	 3
  003e7	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  003ec	89 45 f0	 mov	 DWORD PTR _new_item$[ebp], eax

; 656  : 
; 657  : 					loop = 0;

  003ef	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0

; 658  : 
; 659  : 					member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  003f6	83 7d e4 00	 cmp	 DWORD PTR _group$16[ebp], 0
  003fa	74 0d		 je	 SHORT $LN103@initialise
  003fc	8b 45 e4	 mov	 eax, DWORD PTR _group$16[ebp]
  003ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00401	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv249[ebp], ecx
  00407	eb 24		 jmp	 SHORT $LN104@initialise
$LN103@initialise:
  00409	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  0040f	83 c2 57	 add	 edx, 87			; 00000057H
  00412	52		 push	 edx
  00413	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00418	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0041d	50		 push	 eax
  0041e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00423	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv249[ebp], 0
$LN104@initialise:
  0042d	b9 01 00 00 00	 mov	 ecx, 1
  00432	85 c9		 test	 ecx, ecx
  00434	74 0c		 je	 SHORT $LN105@initialise
  00436	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv257[ebp], 25 ; 00000019H
  00440	eb 24		 jmp	 SHORT $LN106@initialise
$LN105@initialise:
  00442	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00448	83 c2 57	 add	 edx, 87			; 00000057H
  0044b	52		 push	 edx
  0044c	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00451	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00456	50		 push	 eax
  00457	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045c	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv257[ebp], 0
$LN106@initialise:
  00466	6a 19		 push	 25			; 00000019H
  00468	8b 4d e4	 mov	 ecx, DWORD PTR _group$16[ebp]
  0046b	51		 push	 ecx
  0046c	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv249[ebp], 180
  00476	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv257[ebp]
  0047c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00483	ff d1		 call	 ecx
  00485	89 45 e0	 mov	 DWORD PTR _member$15[ebp], eax
$LN4@initialise:

; 660  : 
; 661  : /*					// reverse wingman list
; 662  : 					while (get_local_entity_child_succ (member, LIST_TYPE_MEMBER))
; 663  : 					{
; 664  : 						member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);
; 665  : 					}
; 666  : Commented out by Retro because of change '//VJ for JvS 030411' below */
; 667  : 					while (member)

  00488	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  0048c	0f 84 ad 07 00
	00		 je	 $LN5@initialise

; 668  : 					{
; 669  : 						if (member != get_gunship_entity ())

  00492	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  00495	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0049b	0f 84 01 07 00
	00		 je	 $LN21@initialise

; 670  : 						{
; 671  : 							index = get_local_entity_index (member);

  004a1	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  004a4	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  004aa	c1 f8 04	 sar	 eax, 4
  004ad	89 45 f4	 mov	 DWORD PTR _index$[ebp], eax

; 672  : 
; 673  : 							add_message_action_to_database (new_item, loop, MESSAGE_WINGMAN_SELECT, index, get_display_message_key_number (1 + loop), NULL);

  004b0	6a 00		 push	 0
  004b2	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  004b5	83 c0 01	 add	 eax, 1
  004b8	50		 push	 eax
  004b9	e8 00 00 00 00	 call	 ?get_display_message_key_number@@YGHH@Z ; get_display_message_key_number
  004be	50		 push	 eax
  004bf	8b 4d f4	 mov	 ecx, DWORD PTR _index$[ebp]
  004c2	51		 push	 ecx
  004c3	6a 10		 push	 16			; 00000010H
  004c5	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  004c8	52		 push	 edx
  004c9	8b 45 f0	 mov	 eax, DWORD PTR _new_item$[ebp]
  004cc	50		 push	 eax
  004cd	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 674  : 
; 675  : 							human_wingman = (get_local_entity_int_value (member, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI);

  004d2	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  004d6	74 0d		 je	 SHORT $LN107@initialise
  004d8	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  004db	8b 08		 mov	 ecx, DWORD PTR [eax]
  004dd	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv282[ebp], ecx
  004e3	eb 24		 jmp	 SHORT $LN108@initialise
$LN107@initialise:
  004e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  004eb	83 c2 67	 add	 edx, 103		; 00000067H
  004ee	52		 push	 edx
  004ef	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004f9	50		 push	 eax
  004fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ff	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv282[ebp], 0
$LN108@initialise:
  00509	b9 01 00 00 00	 mov	 ecx, 1
  0050e	85 c9		 test	 ecx, ecx
  00510	74 0c		 je	 SHORT $LN109@initialise
  00512	c7 85 60 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv290[ebp], 156 ; 0000009cH
  0051c	eb 24		 jmp	 SHORT $LN110@initialise
$LN109@initialise:
  0051e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00524	83 c2 67	 add	 edx, 103		; 00000067H
  00527	52		 push	 edx
  00528	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00532	50		 push	 eax
  00533	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00538	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv290[ebp], 0
$LN110@initialise:
  00542	68 9c 00 00 00	 push	 156			; 0000009cH
  00547	8b 4d e0	 mov	 ecx, DWORD PTR _member$15[ebp]
  0054a	51		 push	 ecx
  0054b	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv282[ebp], 1116
  00555	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv290[ebp]
  0055b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00562	ff d1		 call	 ecx
  00564	85 c0		 test	 eax, eax
  00566	74 0c		 je	 SHORT $LN111@initialise
  00568	c7 85 5c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv297[ebp], 1
  00572	eb 0a		 jmp	 SHORT $LN112@initialise
$LN111@initialise:
  00574	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv297[ebp], 0
$LN112@initialise:
  0057e	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv297[ebp]
  00584	89 55 d4	 mov	 DWORD PTR _human_wingman$12[ebp], edx

; 676  : 
; 677  : 							//
; 678  : 							// 9 Options
; 679  : 							//
; 680  : 
; 681  : 							sub_item = create_message_database_list (MESSAGE_WINGMAN_SELECT, index, message_list, 10, "Select Message");

  00587	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KBDBDPPN@Select?5Message@
  0058c	6a 0a		 push	 10			; 0000000aH
  0058e	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  00593	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00596	50		 push	 eax
  00597	6a 10		 push	 16			; 00000010H
  00599	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  0059e	89 45 ec	 mov	 DWORD PTR _sub_item$[ebp], eax

; 682  : 
; 683  : 							//
; 684  : 							// Attack My Target (F1) and Help Me (F2) - Always available
; 685  : 							//
; 686  : 
; 687  : 							add_message_action_to_database (sub_item, 0, MESSAGE_WINGMAN_ATTACK_MY_TARGET,		index, DIK_1, "Attack My Target");

  005a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OMJMDMAF@Attack?5My?5Target@
  005a6	6a 02		 push	 2
  005a8	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  005ab	50		 push	 eax
  005ac	6a 11		 push	 17			; 00000011H
  005ae	6a 00		 push	 0
  005b0	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  005b3	51		 push	 ecx
  005b4	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 688  : 							add_message_action_to_database (sub_item, 1, MESSAGE_WINGMAN_HELP_ME, 					index, DIK_2, "Help Me");

  005b9	68 00 00 00 00	 push	 OFFSET ??_C@_07PPDFJLCN@Help?5Me@
  005be	6a 03		 push	 3
  005c0	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  005c3	50		 push	 eax
  005c4	6a 12		 push	 18			; 00000012H
  005c6	6a 01		 push	 1
  005c8	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  005cb	51		 push	 ecx
  005cc	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 689  : 
; 690  : 							//
; 691  : 							// Hold Position (F3) - Leader only, and only if wingman is not already holding position
; 692  : 							//
; 693  : 
; 694  : 							if ((leader_flag) && (!get_local_entity_int_value (member, INT_TYPE_POSITION_HOLD)))

  005d1	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  005d5	0f 84 a8 00 00
	00		 je	 $LN22@initialise
  005db	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  005df	74 0d		 je	 SHORT $LN113@initialise
  005e1	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  005e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e6	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv322[ebp], ecx
  005ec	eb 20		 jmp	 SHORT $LN114@initialise
$LN113@initialise:
  005ee	68 b6 02 00 00	 push	 694			; 000002b6H
  005f3	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005fe	52		 push	 edx
  005ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00604	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv322[ebp], 0
$LN114@initialise:
  0060e	b8 01 00 00 00	 mov	 eax, 1
  00613	85 c0		 test	 eax, eax
  00615	74 0c		 je	 SHORT $LN115@initialise
  00617	c7 85 60 ff ff
	ff a0 00 00 00	 mov	 DWORD PTR tv329[ebp], 160 ; 000000a0H
  00621	eb 20		 jmp	 SHORT $LN116@initialise
$LN115@initialise:
  00623	68 b6 02 00 00	 push	 694			; 000002b6H
  00628	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00633	51		 push	 ecx
  00634	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00639	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv329[ebp], 0
$LN116@initialise:
  00643	68 a0 00 00 00	 push	 160			; 000000a0H
  00648	8b 55 e0	 mov	 edx, DWORD PTR _member$15[ebp]
  0064b	52		 push	 edx
  0064c	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv322[ebp], 1116
  00656	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv329[ebp]
  0065c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00663	ff d2		 call	 edx
  00665	85 c0		 test	 eax, eax
  00667	75 1a		 jne	 SHORT $LN22@initialise

; 695  : 							{
; 696  : 								add_message_action_to_database (sub_item, 2, MESSAGE_WINGMAN_HOLD_POSITION, 		index, DIK_3, "Hold Position");

  00669	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IMEEPEIA@Hold?5Position@
  0066e	6a 04		 push	 4
  00670	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00673	50		 push	 eax
  00674	6a 17		 push	 23			; 00000017H
  00676	6a 02		 push	 2
  00678	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  0067b	51		 push	 ecx
  0067c	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 697  : 							}
; 698  : 							else

  00681	eb 18		 jmp	 SHORT $LN23@initialise
$LN22@initialise:

; 699  : 							{
; 700  : 								add_message_action_to_database (sub_item, 2, MESSAGE_NONE, 								index, DIK_3, "Hold Position");

  00683	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IMEEPEIA@Hold?5Position@
  00688	6a 04		 push	 4
  0068a	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0068d	50		 push	 eax
  0068e	6a 00		 push	 0
  00690	6a 02		 push	 2
  00692	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00695	51		 push	 ecx
  00696	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN23@initialise:

; 701  : 							}
; 702  : 
; 703  : 							//
; 704  : 							// Rejoin Formation (F4) - Leader only
; 705  : 							//
; 706  : 
; 707  : 							if (leader_flag)

  0069b	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  0069f	74 1a		 je	 SHORT $LN24@initialise

; 708  : 							{
; 709  : 								add_message_action_to_database (sub_item, 3, MESSAGE_WINGMAN_REJOIN_FORMATION, 	index, DIK_4, "Rejoin Formation");

  006a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PPIJLLNH@Rejoin?5Formation@
  006a6	6a 05		 push	 5
  006a8	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  006ab	50		 push	 eax
  006ac	6a 18		 push	 24			; 00000018H
  006ae	6a 03		 push	 3
  006b0	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  006b3	51		 push	 ecx
  006b4	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 710  : 							}
; 711  : 							else

  006b9	eb 18		 jmp	 SHORT $LN25@initialise
$LN24@initialise:

; 712  : 							{
; 713  : 								add_message_action_to_database (sub_item, 3, MESSAGE_NONE, 								index, DIK_4, "Rejoin Formation");

  006bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PPIJLLNH@Rejoin?5Formation@
  006c0	6a 05		 push	 5
  006c2	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  006c5	50		 push	 eax
  006c6	6a 00		 push	 0
  006c8	6a 03		 push	 3
  006ca	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  006cd	51		 push	 ecx
  006ce	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN25@initialise:

; 714  : 							}
; 715  : 
; 716  : 							//
; 717  : 							// Weapons Hold (F5) - Leader only, and only if wingman is not already weapons hold
; 718  : 							//
; 719  : 
; 720  : 							if ((leader_flag) && (!get_local_entity_int_value (member, INT_TYPE_WEAPONS_HOLD)))

  006d3	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  006d7	0f 84 a8 00 00
	00		 je	 $LN26@initialise
  006dd	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  006e1	74 0d		 je	 SHORT $LN117@initialise
  006e3	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  006e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  006e8	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv367[ebp], ecx
  006ee	eb 20		 jmp	 SHORT $LN118@initialise
$LN117@initialise:
  006f0	68 d0 02 00 00	 push	 720			; 000002d0H
  006f5	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  006fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00700	52		 push	 edx
  00701	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00706	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv367[ebp], 0
$LN118@initialise:
  00710	b8 01 00 00 00	 mov	 eax, 1
  00715	85 c0		 test	 eax, eax
  00717	74 0c		 je	 SHORT $LN119@initialise
  00719	c7 85 60 ff ff
	ff 11 01 00 00	 mov	 DWORD PTR tv374[ebp], 273 ; 00000111H
  00723	eb 20		 jmp	 SHORT $LN120@initialise
$LN119@initialise:
  00725	68 d0 02 00 00	 push	 720			; 000002d0H
  0072a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0072f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00735	51		 push	 ecx
  00736	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0073b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv374[ebp], 0
$LN120@initialise:
  00745	68 11 01 00 00	 push	 273			; 00000111H
  0074a	8b 55 e0	 mov	 edx, DWORD PTR _member$15[ebp]
  0074d	52		 push	 edx
  0074e	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv367[ebp], 1116
  00758	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  0075e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00765	ff d2		 call	 edx
  00767	85 c0		 test	 eax, eax
  00769	75 1a		 jne	 SHORT $LN26@initialise

; 721  : 							{
; 722  : 								add_message_action_to_database (sub_item, 4, MESSAGE_WINGMAN_WEAPONS_HOLD, 		index, DIK_5, "Weapons Hold");

  0076b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IEJNAEGK@Weapons?5Hold@
  00770	6a 06		 push	 6
  00772	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00775	50		 push	 eax
  00776	6a 13		 push	 19			; 00000013H
  00778	6a 04		 push	 4
  0077a	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  0077d	51		 push	 ecx
  0077e	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 723  : 							}
; 724  : 							else

  00783	eb 18		 jmp	 SHORT $LN27@initialise
$LN26@initialise:

; 725  : 							{
; 726  : 								add_message_action_to_database (sub_item, 4, MESSAGE_NONE, 								index, DIK_5, "Weapons Hold");

  00785	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IEJNAEGK@Weapons?5Hold@
  0078a	6a 06		 push	 6
  0078c	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0078f	50		 push	 eax
  00790	6a 00		 push	 0
  00792	6a 04		 push	 4
  00794	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00797	51		 push	 ecx
  00798	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN27@initialise:

; 727  : 							}
; 728  : 
; 729  : 							//
; 730  : 							// Weapons Free (F6) - Leader only, and only if wingman is weapons hold
; 731  : 							//
; 732  : 
; 733  : 							if ((leader_flag) && (get_local_entity_int_value (member, INT_TYPE_WEAPONS_HOLD)))

  0079d	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  007a1	0f 84 a8 00 00
	00		 je	 $LN28@initialise
  007a7	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  007ab	74 0d		 je	 SHORT $LN121@initialise
  007ad	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  007b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  007b2	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv399[ebp], ecx
  007b8	eb 20		 jmp	 SHORT $LN122@initialise
$LN121@initialise:
  007ba	68 dd 02 00 00	 push	 733			; 000002ddH
  007bf	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007c4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ca	52		 push	 edx
  007cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d0	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv399[ebp], 0
$LN122@initialise:
  007da	b8 01 00 00 00	 mov	 eax, 1
  007df	85 c0		 test	 eax, eax
  007e1	74 0c		 je	 SHORT $LN123@initialise
  007e3	c7 85 60 ff ff
	ff 11 01 00 00	 mov	 DWORD PTR tv406[ebp], 273 ; 00000111H
  007ed	eb 20		 jmp	 SHORT $LN124@initialise
$LN123@initialise:
  007ef	68 dd 02 00 00	 push	 733			; 000002ddH
  007f4	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007ff	51		 push	 ecx
  00800	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00805	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv406[ebp], 0
$LN124@initialise:
  0080f	68 11 01 00 00	 push	 273			; 00000111H
  00814	8b 55 e0	 mov	 edx, DWORD PTR _member$15[ebp]
  00817	52		 push	 edx
  00818	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv399[ebp], 1116
  00822	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv406[ebp]
  00828	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0082f	ff d2		 call	 edx
  00831	85 c0		 test	 eax, eax
  00833	74 1a		 je	 SHORT $LN28@initialise

; 734  : 							{
; 735  : 								add_message_action_to_database (sub_item, 5, MESSAGE_WINGMAN_WEAPONS_FREE, 		index, DIK_6, "Weapons Free");

  00835	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IPBEDPIH@Weapons?5Free@
  0083a	6a 07		 push	 7
  0083c	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0083f	50		 push	 eax
  00840	6a 14		 push	 20			; 00000014H
  00842	6a 05		 push	 5
  00844	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00847	51		 push	 ecx
  00848	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 736  : 							}
; 737  : 							else

  0084d	eb 18		 jmp	 SHORT $LN29@initialise
$LN28@initialise:

; 738  : 							{
; 739  : 								add_message_action_to_database (sub_item, 5, MESSAGE_NONE, 								index, DIK_6, "Weapons Free");

  0084f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IPBEDPIH@Weapons?5Free@
  00854	6a 07		 push	 7
  00856	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00859	50		 push	 eax
  0085a	6a 00		 push	 0
  0085c	6a 05		 push	 5
  0085e	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00861	51		 push	 ecx
  00862	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN29@initialise:

; 740  : 							}
; 741  : 
; 742  : 							//
; 743  : 							// Bob-Up (F7) - Leader Only, and only if wingman is in position
; 744  : 							//
; 745  : 
; 746  : 							message = MESSAGE_NONE;

  00867	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _message$[ebp], 0

; 747  : 
; 748  : 							if (leader_flag)

  0086e	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  00872	0f 84 35 01 00
	00		 je	 $LN30@initialise

; 749  : 							{
; 750  : 								entity
; 751  : 									*guide;
; 752  : 
; 753  : 								guide = get_local_entity_parent (member, LIST_TYPE_FOLLOWER);

  00878	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  0087c	74 0d		 je	 SHORT $LN125@initialise
  0087e	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  00881	8b 08		 mov	 ecx, DWORD PTR [eax]
  00883	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv432[ebp], ecx
  00889	eb 27		 jmp	 SHORT $LN126@initialise
$LN125@initialise:
  0088b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00891	81 c2 b5 00 00
	00		 add	 edx, 181		; 000000b5H
  00897	52		 push	 edx
  00898	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0089d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008a2	50		 push	 eax
  008a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008a8	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv432[ebp], 0
$LN126@initialise:
  008b2	b9 01 00 00 00	 mov	 ecx, 1
  008b7	85 c9		 test	 ecx, ecx
  008b9	74 0c		 je	 SHORT $LN127@initialise
  008bb	c7 85 60 ff ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv440[ebp], 13 ; 0000000dH
  008c5	eb 27		 jmp	 SHORT $LN128@initialise
$LN127@initialise:
  008c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  008cd	81 c2 b5 00 00
	00		 add	 edx, 181		; 000000b5H
  008d3	52		 push	 edx
  008d4	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  008d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  008de	50		 push	 eax
  008df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e4	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv440[ebp], 0
$LN128@initialise:
  008ee	6a 0d		 push	 13			; 0000000dH
  008f0	8b 4d e0	 mov	 ecx, DWORD PTR _member$15[ebp]
  008f3	51		 push	 ecx
  008f4	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv432[ebp], 180
  008fe	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv440[ebp]
  00904	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0090b	ff d1		 call	 ecx
  0090d	89 45 d0	 mov	 DWORD PTR _guide$11[ebp], eax

; 754  : 
; 755  : 								if (guide)

  00910	83 7d d0 00	 cmp	 DWORD PTR _guide$11[ebp], 0
  00914	0f 84 93 00 00
	00		 je	 $LN30@initialise

; 756  : 								{
; 757  : 									if (get_local_entity_int_value (guide, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_GUIDE_ATTACK_AG_TAKE_COVER)

  0091a	83 7d d0 00	 cmp	 DWORD PTR _guide$11[ebp], 0
  0091e	74 0d		 je	 SHORT $LN129@initialise
  00920	8b 45 d0	 mov	 eax, DWORD PTR _guide$11[ebp]
  00923	8b 08		 mov	 ecx, DWORD PTR [eax]
  00925	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv452[ebp], ecx
  0092b	eb 20		 jmp	 SHORT $LN130@initialise
$LN129@initialise:
  0092d	68 f5 02 00 00	 push	 757			; 000002f5H
  00932	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00937	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0093d	52		 push	 edx
  0093e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00943	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv452[ebp], 0
$LN130@initialise:
  0094d	b8 01 00 00 00	 mov	 eax, 1
  00952	85 c0		 test	 eax, eax
  00954	74 0c		 je	 SHORT $LN131@initialise
  00956	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv459[ebp], 52 ; 00000034H
  00960	eb 20		 jmp	 SHORT $LN132@initialise
$LN131@initialise:
  00962	68 f5 02 00 00	 push	 757			; 000002f5H
  00967	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0096c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00972	51		 push	 ecx
  00973	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00978	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv459[ebp], 0
$LN132@initialise:
  00982	6a 34		 push	 52			; 00000034H
  00984	8b 55 d0	 mov	 edx, DWORD PTR _guide$11[ebp]
  00987	52		 push	 edx
  00988	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv452[ebp], 1116
  00992	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv459[ebp]
  00998	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0099f	ff d2		 call	 edx
  009a1	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  009a4	75 07		 jne	 SHORT $LN30@initialise

; 758  : 									{
; 759  : 										message = MESSAGE_WINGMAN_BOB_UP;

  009a6	c7 45 e8 15 00
	00 00		 mov	 DWORD PTR _message$[ebp], 21 ; 00000015H
$LN30@initialise:

; 760  : 									}
; 761  : 								}
; 762  : 							}
; 763  : 
; 764  : 							add_message_action_to_database (sub_item, 6, message,	index, DIK_7, "Bob-Up");

  009ad	68 00 00 00 00	 push	 OFFSET ??_C@_06LMEHDPDN@Bob?9Up@
  009b2	6a 08		 push	 8
  009b4	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  009b7	50		 push	 eax
  009b8	8b 4d e8	 mov	 ecx, DWORD PTR _message$[ebp]
  009bb	51		 push	 ecx
  009bc	6a 06		 push	 6
  009be	8b 55 ec	 mov	 edx, DWORD PTR _sub_item$[ebp]
  009c1	52		 push	 edx
  009c2	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 765  : 
; 766  : 							// Attack PFZ, leader only
; 767  : 							if (pfz_active()
; 768  : 								&& get_local_entity_int_value(member, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_AIRCRAFT_AH64D_APACHE_LONGBOW)

  009c7	e8 00 00 00 00	 call	 ?pfz_active@@YGHXZ	; pfz_active
  009cc	85 c0		 test	 eax, eax
  009ce	0f 84 a5 00 00
	00		 je	 $LN33@initialise
  009d4	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  009d8	74 0d		 je	 SHORT $LN133@initialise
  009da	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  009dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  009df	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv479[ebp], ecx
  009e5	eb 20		 jmp	 SHORT $LN134@initialise
$LN133@initialise:
  009e7	68 00 03 00 00	 push	 768			; 00000300H
  009ec	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  009f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009f7	52		 push	 edx
  009f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009fd	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv479[ebp], 0
$LN134@initialise:
  00a07	b8 01 00 00 00	 mov	 eax, 1
  00a0c	85 c0		 test	 eax, eax
  00a0e	74 0c		 je	 SHORT $LN135@initialise
  00a10	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv486[ebp], 52 ; 00000034H
  00a1a	eb 20		 jmp	 SHORT $LN136@initialise
$LN135@initialise:
  00a1c	68 00 03 00 00	 push	 768			; 00000300H
  00a21	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a26	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a2c	51		 push	 ecx
  00a2d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a32	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv486[ebp], 0
$LN136@initialise:
  00a3c	6a 34		 push	 52			; 00000034H
  00a3e	8b 55 e0	 mov	 edx, DWORD PTR _member$15[ebp]
  00a41	52		 push	 edx
  00a42	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv479[ebp], 1116
  00a4c	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv486[ebp]
  00a52	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a59	ff d2		 call	 edx
  00a5b	85 c0		 test	 eax, eax
  00a5d	75 1a		 jne	 SHORT $LN33@initialise

; 769  : 								add_message_action_to_database (sub_item, 7, MESSAGE_WINGMAN_ATTACK_PFZ,	index, DIK_8, "Attack PFZ");

  00a5f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CLPAFCMJ@Attack?5PFZ@
  00a64	6a 09		 push	 9
  00a66	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00a69	50		 push	 eax
  00a6a	6a 16		 push	 22			; 00000016H
  00a6c	6a 07		 push	 7
  00a6e	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00a71	51		 push	 ecx
  00a72	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 770  : 							else

  00a77	eb 18		 jmp	 SHORT $LN34@initialise
$LN33@initialise:

; 771  : 								add_message_action_to_database (sub_item, 7, MESSAGE_NONE,	index, DIK_8, "Attack PFZ");

  00a79	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CLPAFCMJ@Attack?5PFZ@
  00a7e	6a 09		 push	 9
  00a80	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00a83	50		 push	 eax
  00a84	6a 00		 push	 0
  00a86	6a 07		 push	 7
  00a88	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00a8b	51		 push	 ecx
  00a8c	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN34@initialise:

; 772  : 
; 773  : 							//
; 774  : 							// Request Target List (F8) and Keyboard Message (F9) - Human wingmen only
; 775  : 							//
; 776  : 
; 777  : 							if (human_wingman)

  00a91	83 7d d4 00	 cmp	 DWORD PTR _human_wingman$12[ebp], 0
  00a95	74 32		 je	 SHORT $LN35@initialise

; 778  : 							{
; 779  : 								add_message_action_to_database (sub_item, 8, MESSAGE_WINGMAN_REQUEST_TARGET_LIST,	index, DIK_9, "Request Target List");

  00a97	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNKIDAFK@Request?5Target?5List@
  00a9c	6a 0a		 push	 10			; 0000000aH
  00a9e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00aa1	50		 push	 eax
  00aa2	6a 19		 push	 25			; 00000019H
  00aa4	6a 08		 push	 8
  00aa6	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00aa9	51		 push	 ecx
  00aaa	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 780  : 
; 781  : 								add_message_action_to_database (sub_item, 9, MESSAGE_WINGMAN_KEYBOARD, 					index, DIK_0, "Keyboard Message");

  00aaf	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GIMEMIMC@Keyboard?5Message@
  00ab4	6a 0b		 push	 11			; 0000000bH
  00ab6	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00ab9	50		 push	 eax
  00aba	6a 1a		 push	 26			; 0000001aH
  00abc	6a 09		 push	 9
  00abe	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00ac1	51		 push	 ecx
  00ac2	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 782  : 							}
; 783  : 							else

  00ac7	eb 30		 jmp	 SHORT $LN36@initialise
$LN35@initialise:

; 784  : 							{
; 785  : 								add_message_action_to_database (sub_item, 8, MESSAGE_NONE,	index, DIK_9, "Request Target List");

  00ac9	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNKIDAFK@Request?5Target?5List@
  00ace	6a 0a		 push	 10			; 0000000aH
  00ad0	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00ad3	50		 push	 eax
  00ad4	6a 00		 push	 0
  00ad6	6a 08		 push	 8
  00ad8	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00adb	51		 push	 ecx
  00adc	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 786  : 
; 787  : 								add_message_action_to_database (sub_item, 9, MESSAGE_NONE, 	index, DIK_0, "Keyboard Message");

  00ae1	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GIMEMIMC@Keyboard?5Message@
  00ae6	6a 0b		 push	 11			; 0000000bH
  00ae8	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00aeb	50		 push	 eax
  00aec	6a 00		 push	 0
  00aee	6a 09		 push	 9
  00af0	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00af3	51		 push	 ecx
  00af4	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN36@initialise:

; 788  : 							}
; 789  : 
; 790  : /*
; 791  : 							// request status
; 792  : 							if (leader_flag)
; 793  : 								add_message_action_to_database (sub_item, 10, MESSAGE_WINGMAN_REQUEST_STATUS,	index, DIK_MINUS, "Request Status");
; 794  : 							else
; 795  : 								add_message_action_to_database (sub_item, 10, MESSAGE_NONE,	index, DIK_MINUS, "Request Status");
; 796  : */
; 797  : 							create_leaf_message_action (MESSAGE_WINGMAN_ATTACK_MY_TARGET, 		index, send_wingman_message);

  00af9	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00afe	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b01	50		 push	 eax
  00b02	6a 11		 push	 17			; 00000011H
  00b04	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 798  : 							create_leaf_message_action (MESSAGE_WINGMAN_HELP_ME, 					index, send_wingman_message);

  00b09	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00b0e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b11	50		 push	 eax
  00b12	6a 12		 push	 18			; 00000012H
  00b14	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 799  : 							create_leaf_message_action (MESSAGE_WINGMAN_BOB_UP, 					index, send_wingman_message);

  00b19	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00b1e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b21	50		 push	 eax
  00b22	6a 15		 push	 21			; 00000015H
  00b24	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 800  : 							create_leaf_message_action (MESSAGE_WINGMAN_WEAPONS_HOLD, 			index, send_wingman_message);

  00b29	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00b2e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b31	50		 push	 eax
  00b32	6a 13		 push	 19			; 00000013H
  00b34	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 801  : 							create_leaf_message_action (MESSAGE_WINGMAN_WEAPONS_FREE, 			index, send_wingman_message);

  00b39	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00b3e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b41	50		 push	 eax
  00b42	6a 14		 push	 20			; 00000014H
  00b44	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 802  : 							create_leaf_message_action (MESSAGE_WINGMAN_HOLD_POSITION, 			index, send_wingman_message);

  00b49	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00b4e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b51	50		 push	 eax
  00b52	6a 17		 push	 23			; 00000017H
  00b54	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 803  : 							create_leaf_message_action (MESSAGE_WINGMAN_REJOIN_FORMATION,		index, send_wingman_message);

  00b59	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00b5e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b61	50		 push	 eax
  00b62	6a 18		 push	 24			; 00000018H
  00b64	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 804  : 							create_leaf_message_action (MESSAGE_WINGMAN_ATTACK_PFZ, 			index, send_wingman_message);

  00b69	68 00 00 00 00	 push	 OFFSET ?send_wingman_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_message
  00b6e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b71	50		 push	 eax
  00b72	6a 16		 push	 22			; 00000016H
  00b74	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 805  : 							create_leaf_message_action (MESSAGE_WINGMAN_REQUEST_TARGET_LIST, 	index, send_simple_message);

  00b79	68 00 00 00 00	 push	 OFFSET ?send_simple_message@@YGXUMESSAGE_TYPE@@@Z ; send_simple_message
  00b7e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b81	50		 push	 eax
  00b82	6a 19		 push	 25			; 00000019H
  00b84	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 806  : 							create_leaf_message_action (MESSAGE_WINGMAN_KEYBOARD, 				index, send_wingman_keyboard_message);

  00b89	68 00 00 00 00	 push	 OFFSET ?send_wingman_keyboard_message@@YGXUMESSAGE_TYPE@@@Z ; send_wingman_keyboard_message
  00b8e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00b91	50		 push	 eax
  00b92	6a 1a		 push	 26			; 0000001aH
  00b94	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 807  : //							create_leaf_message_action (MESSAGE_WINGMAN_REQUEST_STATUS, 	index, send_wingman_message);
; 808  : 
; 809  : 							loop ++;

  00b99	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00b9c	83 c0 01	 add	 eax, 1
  00b9f	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN21@initialise:

; 810  : 						}
; 811  : 
; 812  : 						//VJ for JvS 030411, change order of wingman to facilitate joystick programming
; 813  : 						member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  00ba2	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  00ba6	74 0d		 je	 SHORT $LN137@initialise
  00ba8	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  00bab	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bad	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv567[ebp], ecx
  00bb3	eb 27		 jmp	 SHORT $LN138@initialise
$LN137@initialise:
  00bb5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00bbb	81 c2 f1 00 00
	00		 add	 edx, 241		; 000000f1H
  00bc1	52		 push	 edx
  00bc2	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bc7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00bcc	50		 push	 eax
  00bcd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bd2	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv567[ebp], 0
$LN138@initialise:
  00bdc	b9 01 00 00 00	 mov	 ecx, 1
  00be1	85 c9		 test	 ecx, ecx
  00be3	74 0c		 je	 SHORT $LN139@initialise
  00be5	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv575[ebp], 25 ; 00000019H
  00bef	eb 27		 jmp	 SHORT $LN140@initialise
$LN139@initialise:
  00bf1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00bf7	81 c2 f1 00 00
	00		 add	 edx, 241		; 000000f1H
  00bfd	52		 push	 edx
  00bfe	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c03	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00c08	50		 push	 eax
  00c09	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c0e	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv575[ebp], 0
$LN140@initialise:
  00c18	6a 19		 push	 25			; 00000019H
  00c1a	8b 4d e0	 mov	 ecx, DWORD PTR _member$15[ebp]
  00c1d	51		 push	 ecx
  00c1e	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv567[ebp], 180
  00c28	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv575[ebp]
  00c2e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00c35	ff d1		 call	 ecx
  00c37	89 45 e0	 mov	 DWORD PTR _member$15[ebp], eax

; 814  : 					}

  00c3a	e9 49 f8 ff ff	 jmp	 $LN4@initialise
$LN5@initialise:

; 815  : 
; 816  : 					ASSERT (loop == count);

  00c3f	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00c42	3b 45 f8	 cmp	 eax, DWORD PTR _count$[ebp]
  00c45	74 1a		 je	 SHORT $LN37@initialise
  00c47	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00c4c	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  00c51	50		 push	 eax
  00c52	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c57	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IEKEPKKG@loop?5?$DN?$DN?5count@
  00c5c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN37@initialise:

; 817  : 
; 818  : 					//
; 819  : 					// Flight Group - 10 options
; 820  : 					//
; 821  : 
; 822  : 					index = get_local_entity_index (group);

  00c61	8b 45 e4	 mov	 eax, DWORD PTR _group$16[ebp]
  00c64	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00c6a	c1 f8 04	 sar	 eax, 4
  00c6d	89 45 f4	 mov	 DWORD PTR _index$[ebp], eax

; 823  : 
; 824  : 					sub_item = create_message_database_list (MESSAGE_GROUP_LIST, 0, message_list, 10, "Select Message");

  00c70	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KBDBDPPN@Select?5Message@
  00c75	6a 0a		 push	 10			; 0000000aH
  00c77	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  00c7c	6a 00		 push	 0
  00c7e	6a 02		 push	 2
  00c80	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  00c85	89 45 ec	 mov	 DWORD PTR _sub_item$[ebp], eax

; 825  : 
; 826  : 					//
; 827  : 					// Attack My Target (F1) and Help Me (F2) - Always available
; 828  : 					//
; 829  : 
; 830  : 					add_message_action_to_database (sub_item, 0, MESSAGE_WINGMAN_ATTACK_MY_TARGET,		index, DIK_1, "Attack My Target");

  00c88	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OMJMDMAF@Attack?5My?5Target@
  00c8d	6a 02		 push	 2
  00c8f	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00c92	50		 push	 eax
  00c93	6a 11		 push	 17			; 00000011H
  00c95	6a 00		 push	 0
  00c97	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00c9a	51		 push	 ecx
  00c9b	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 831  : 					add_message_action_to_database (sub_item, 1, MESSAGE_WINGMAN_HELP_ME, 					index, DIK_2, "Help Me");

  00ca0	68 00 00 00 00	 push	 OFFSET ??_C@_07PPDFJLCN@Help?5Me@
  00ca5	6a 03		 push	 3
  00ca7	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00caa	50		 push	 eax
  00cab	6a 12		 push	 18			; 00000012H
  00cad	6a 01		 push	 1
  00caf	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00cb2	51		 push	 ecx
  00cb3	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 832  : 
; 833  : 					//
; 834  : 					// Hold Position (F3) - Leader only
; 835  : 					//
; 836  : 
; 837  : 					if (leader_flag)

  00cb8	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  00cbc	74 1a		 je	 SHORT $LN38@initialise

; 838  : 					{
; 839  : 						add_message_action_to_database (sub_item, 2, MESSAGE_WINGMAN_HOLD_POSITION, 		index, DIK_3, "Hold Position");

  00cbe	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IMEEPEIA@Hold?5Position@
  00cc3	6a 04		 push	 4
  00cc5	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00cc8	50		 push	 eax
  00cc9	6a 17		 push	 23			; 00000017H
  00ccb	6a 02		 push	 2
  00ccd	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00cd0	51		 push	 ecx
  00cd1	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 840  : 					}
; 841  : 					else

  00cd6	eb 18		 jmp	 SHORT $LN39@initialise
$LN38@initialise:

; 842  : 					{
; 843  : 						add_message_action_to_database (sub_item, 2, MESSAGE_NONE, 								index, DIK_3, "Hold Position");

  00cd8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IMEEPEIA@Hold?5Position@
  00cdd	6a 04		 push	 4
  00cdf	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00ce2	50		 push	 eax
  00ce3	6a 00		 push	 0
  00ce5	6a 02		 push	 2
  00ce7	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00cea	51		 push	 ecx
  00ceb	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN39@initialise:

; 844  : 					}
; 845  : 
; 846  : 					//
; 847  : 					// Rejoin Formation (F4) - Leader only
; 848  : 					//
; 849  : 
; 850  : 					if (leader_flag)

  00cf0	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  00cf4	74 1a		 je	 SHORT $LN40@initialise

; 851  : 					{
; 852  : 						add_message_action_to_database (sub_item, 3, MESSAGE_WINGMAN_REJOIN_FORMATION, 	index, DIK_4, "Rejoin Formation");

  00cf6	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PPIJLLNH@Rejoin?5Formation@
  00cfb	6a 05		 push	 5
  00cfd	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00d00	50		 push	 eax
  00d01	6a 18		 push	 24			; 00000018H
  00d03	6a 03		 push	 3
  00d05	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00d08	51		 push	 ecx
  00d09	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 853  : 					}
; 854  : 					else

  00d0e	eb 18		 jmp	 SHORT $LN41@initialise
$LN40@initialise:

; 855  : 					{
; 856  : 						add_message_action_to_database (sub_item, 3, MESSAGE_NONE, 								index, DIK_4, "Rejoin Formation");

  00d10	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PPIJLLNH@Rejoin?5Formation@
  00d15	6a 05		 push	 5
  00d17	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00d1a	50		 push	 eax
  00d1b	6a 00		 push	 0
  00d1d	6a 03		 push	 3
  00d1f	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00d22	51		 push	 ecx
  00d23	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN41@initialise:

; 857  : 					}
; 858  : 
; 859  : 					//
; 860  : 					// Weapons Hold (F5) - Leader only
; 861  : 					//
; 862  : 
; 863  : 					if (leader_flag)

  00d28	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  00d2c	74 1a		 je	 SHORT $LN42@initialise

; 864  : 					{
; 865  : 						add_message_action_to_database (sub_item, 4, MESSAGE_WINGMAN_WEAPONS_HOLD, 		index, DIK_5, "Weapons Hold");

  00d2e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IEJNAEGK@Weapons?5Hold@
  00d33	6a 06		 push	 6
  00d35	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00d38	50		 push	 eax
  00d39	6a 13		 push	 19			; 00000013H
  00d3b	6a 04		 push	 4
  00d3d	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00d40	51		 push	 ecx
  00d41	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 866  : 					}
; 867  : 					else

  00d46	eb 18		 jmp	 SHORT $LN43@initialise
$LN42@initialise:

; 868  : 					{
; 869  : 						add_message_action_to_database (sub_item, 4, MESSAGE_NONE, 								index, DIK_5, "Weapons Hold");

  00d48	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IEJNAEGK@Weapons?5Hold@
  00d4d	6a 06		 push	 6
  00d4f	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00d52	50		 push	 eax
  00d53	6a 00		 push	 0
  00d55	6a 04		 push	 4
  00d57	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00d5a	51		 push	 ecx
  00d5b	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN43@initialise:

; 870  : 					}
; 871  : 
; 872  : 					//
; 873  : 					// Weapons Free (F6) - Leader only
; 874  : 					//
; 875  : 
; 876  : 					if (leader_flag)

  00d60	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  00d64	74 1a		 je	 SHORT $LN44@initialise

; 877  : 					{
; 878  : 						add_message_action_to_database (sub_item, 5, MESSAGE_WINGMAN_WEAPONS_FREE, 		index, DIK_6, "Weapons Free");

  00d66	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IPBEDPIH@Weapons?5Free@
  00d6b	6a 07		 push	 7
  00d6d	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00d70	50		 push	 eax
  00d71	6a 14		 push	 20			; 00000014H
  00d73	6a 05		 push	 5
  00d75	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00d78	51		 push	 ecx
  00d79	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 879  : 					}
; 880  : 					else

  00d7e	eb 18		 jmp	 SHORT $LN45@initialise
$LN44@initialise:

; 881  : 					{
; 882  : 						add_message_action_to_database (sub_item, 5, MESSAGE_NONE, 								index, DIK_6, "Weapons Free");

  00d80	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IPBEDPIH@Weapons?5Free@
  00d85	6a 07		 push	 7
  00d87	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00d8a	50		 push	 eax
  00d8b	6a 00		 push	 0
  00d8d	6a 05		 push	 5
  00d8f	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  00d92	51		 push	 ecx
  00d93	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN45@initialise:

; 883  : 					}
; 884  : 
; 885  : 					//
; 886  : 					// Bob-Up (F7) - Leader Only, and only if wingman is in position
; 887  : 					//
; 888  : 
; 889  : 					message = MESSAGE_NONE;

  00d98	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _message$[ebp], 0

; 890  : 
; 891  : 					if (leader_flag)

  00d9f	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  00da3	0f 84 79 02 00
	00		 je	 $LN46@initialise

; 892  : 					{
; 893  : 						entity
; 894  : 							*guide;
; 895  : 
; 896  : 						member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  00da9	83 7d e4 00	 cmp	 DWORD PTR _group$16[ebp], 0
  00dad	74 0d		 je	 SHORT $LN141@initialise
  00daf	8b 45 e4	 mov	 eax, DWORD PTR _group$16[ebp]
  00db2	8b 08		 mov	 ecx, DWORD PTR [eax]
  00db4	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv665[ebp], ecx
  00dba	eb 27		 jmp	 SHORT $LN142@initialise
$LN141@initialise:
  00dbc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00dc2	81 c2 44 01 00
	00		 add	 edx, 324		; 00000144H
  00dc8	52		 push	 edx
  00dc9	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00dd3	50		 push	 eax
  00dd4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dd9	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv665[ebp], 0
$LN142@initialise:
  00de3	b9 01 00 00 00	 mov	 ecx, 1
  00de8	85 c9		 test	 ecx, ecx
  00dea	74 0c		 je	 SHORT $LN143@initialise
  00dec	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv673[ebp], 25 ; 00000019H
  00df6	eb 27		 jmp	 SHORT $LN144@initialise
$LN143@initialise:
  00df8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00dfe	81 c2 44 01 00
	00		 add	 edx, 324		; 00000144H
  00e04	52		 push	 edx
  00e05	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e0a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00e0f	50		 push	 eax
  00e10	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e15	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv673[ebp], 0
$LN144@initialise:
  00e1f	6a 19		 push	 25			; 00000019H
  00e21	8b 4d e4	 mov	 ecx, DWORD PTR _group$16[ebp]
  00e24	51		 push	 ecx
  00e25	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv665[ebp], 180
  00e2f	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv673[ebp]
  00e35	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00e3c	ff d1		 call	 ecx
  00e3e	89 45 e0	 mov	 DWORD PTR _member$15[ebp], eax
$LN6@initialise:

; 897  : 
; 898  : 						while (member)

  00e41	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  00e45	0f 84 d7 01 00
	00		 je	 $LN46@initialise

; 899  : 						{
; 900  : 							guide = get_local_entity_parent (member, LIST_TYPE_FOLLOWER);

  00e4b	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  00e4f	74 0d		 je	 SHORT $LN145@initialise
  00e51	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  00e54	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e56	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv686[ebp], ecx
  00e5c	eb 27		 jmp	 SHORT $LN146@initialise
$LN145@initialise:
  00e5e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00e64	81 c2 48 01 00
	00		 add	 edx, 328		; 00000148H
  00e6a	52		 push	 edx
  00e6b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e75	50		 push	 eax
  00e76	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e7b	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv686[ebp], 0
$LN146@initialise:
  00e85	b9 01 00 00 00	 mov	 ecx, 1
  00e8a	85 c9		 test	 ecx, ecx
  00e8c	74 0c		 je	 SHORT $LN147@initialise
  00e8e	c7 85 60 ff ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv694[ebp], 13 ; 0000000dH
  00e98	eb 27		 jmp	 SHORT $LN148@initialise
$LN147@initialise:
  00e9a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00ea0	81 c2 48 01 00
	00		 add	 edx, 328		; 00000148H
  00ea6	52		 push	 edx
  00ea7	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00eac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00eb1	50		 push	 eax
  00eb2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00eb7	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv694[ebp], 0
$LN148@initialise:
  00ec1	6a 0d		 push	 13			; 0000000dH
  00ec3	8b 4d e0	 mov	 ecx, DWORD PTR _member$15[ebp]
  00ec6	51		 push	 ecx
  00ec7	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv686[ebp], 180
  00ed1	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv694[ebp]
  00ed7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00ede	ff d1		 call	 ecx
  00ee0	89 45 cc	 mov	 DWORD PTR _guide$10[ebp], eax

; 901  : 
; 902  : 							if (guide)

  00ee3	83 7d cc 00	 cmp	 DWORD PTR _guide$10[ebp], 0
  00ee7	0f 84 98 00 00
	00		 je	 $LN47@initialise

; 903  : 							{
; 904  : 								if (get_local_entity_int_value (guide, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_GUIDE_ATTACK_AG_TAKE_COVER)

  00eed	83 7d cc 00	 cmp	 DWORD PTR _guide$10[ebp], 0
  00ef1	74 0d		 je	 SHORT $LN149@initialise
  00ef3	8b 45 cc	 mov	 eax, DWORD PTR _guide$10[ebp]
  00ef6	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ef8	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv706[ebp], ecx
  00efe	eb 20		 jmp	 SHORT $LN150@initialise
$LN149@initialise:
  00f00	68 88 03 00 00	 push	 904			; 00000388H
  00f05	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f0a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f10	52		 push	 edx
  00f11	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f16	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv706[ebp], 0
$LN150@initialise:
  00f20	b8 01 00 00 00	 mov	 eax, 1
  00f25	85 c0		 test	 eax, eax
  00f27	74 0c		 je	 SHORT $LN151@initialise
  00f29	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv713[ebp], 52 ; 00000034H
  00f33	eb 20		 jmp	 SHORT $LN152@initialise
$LN151@initialise:
  00f35	68 88 03 00 00	 push	 904			; 00000388H
  00f3a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f3f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00f45	51		 push	 ecx
  00f46	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f4b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv713[ebp], 0
$LN152@initialise:
  00f55	6a 34		 push	 52			; 00000034H
  00f57	8b 55 cc	 mov	 edx, DWORD PTR _guide$10[ebp]
  00f5a	52		 push	 edx
  00f5b	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv706[ebp], 1116
  00f65	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv713[ebp]
  00f6b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00f72	ff d2		 call	 edx
  00f74	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00f77	75 0c		 jne	 SHORT $LN47@initialise

; 905  : 								{
; 906  : 									message = MESSAGE_WINGMAN_BOB_UP;

  00f79	c7 45 e8 15 00
	00 00		 mov	 DWORD PTR _message$[ebp], 21 ; 00000015H

; 907  : 
; 908  : 									break;

  00f80	e9 9d 00 00 00	 jmp	 $LN46@initialise
$LN47@initialise:

; 909  : 								}
; 910  : 							}
; 911  : 
; 912  : 							member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  00f85	83 7d e0 00	 cmp	 DWORD PTR _member$15[ebp], 0
  00f89	74 0d		 je	 SHORT $LN153@initialise
  00f8b	8b 45 e0	 mov	 eax, DWORD PTR _member$15[ebp]
  00f8e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f90	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv726[ebp], ecx
  00f96	eb 27		 jmp	 SHORT $LN154@initialise
$LN153@initialise:
  00f98	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00f9e	81 c2 54 01 00
	00		 add	 edx, 340		; 00000154H
  00fa4	52		 push	 edx
  00fa5	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00faa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00faf	50		 push	 eax
  00fb0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fb5	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv726[ebp], 0
$LN154@initialise:
  00fbf	b9 01 00 00 00	 mov	 ecx, 1
  00fc4	85 c9		 test	 ecx, ecx
  00fc6	74 0c		 je	 SHORT $LN155@initialise
  00fc8	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv734[ebp], 25 ; 00000019H
  00fd2	eb 27		 jmp	 SHORT $LN156@initialise
$LN155@initialise:
  00fd4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  00fda	81 c2 54 01 00
	00		 add	 edx, 340		; 00000154H
  00fe0	52		 push	 edx
  00fe1	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fe6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00feb	50		 push	 eax
  00fec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ff1	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv734[ebp], 0
$LN156@initialise:
  00ffb	6a 19		 push	 25			; 00000019H
  00ffd	8b 4d e0	 mov	 ecx, DWORD PTR _member$15[ebp]
  01000	51		 push	 ecx
  01001	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv726[ebp], 180
  0100b	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv734[ebp]
  01011	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01018	ff d1		 call	 ecx
  0101a	89 45 e0	 mov	 DWORD PTR _member$15[ebp], eax

; 913  : 						}

  0101d	e9 1f fe ff ff	 jmp	 $LN6@initialise
$LN46@initialise:

; 914  : 					}
; 915  : 
; 916  : 					add_message_action_to_database (sub_item, 6, message,	index, DIK_7, "Bob-Up");

  01022	68 00 00 00 00	 push	 OFFSET ??_C@_06LMEHDPDN@Bob?9Up@
  01027	6a 08		 push	 8
  01029	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0102c	50		 push	 eax
  0102d	8b 4d e8	 mov	 ecx, DWORD PTR _message$[ebp]
  01030	51		 push	 ecx
  01031	6a 06		 push	 6
  01033	8b 55 ec	 mov	 edx, DWORD PTR _sub_item$[ebp]
  01036	52		 push	 edx
  01037	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 917  : 
; 918  : 					//
; 919  : 					// Formation List (F8) - Leader Only
; 920  : 					//
; 921  : 
; 922  : 					if (leader_flag)

  0103c	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  01040	74 1a		 je	 SHORT $LN49@initialise

; 923  : 					{
; 924  : 						add_message_action_to_database (sub_item, 7, MESSAGE_FORMATION_LIST, 			index, DIK_8, "Formation List");

  01042	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCOHACH@Formation?5List@
  01047	6a 09		 push	 9
  01049	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0104c	50		 push	 eax
  0104d	6a 06		 push	 6
  0104f	6a 07		 push	 7
  01051	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01054	51		 push	 ecx
  01055	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 925  : 					}
; 926  : 					else

  0105a	eb 18		 jmp	 SHORT $LN50@initialise
$LN49@initialise:

; 927  : 					{
; 928  : 						add_message_action_to_database (sub_item, 7, MESSAGE_NONE, 							index, DIK_8, "Formation List");

  0105c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCOHACH@Formation?5List@
  01061	6a 09		 push	 9
  01063	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01066	50		 push	 eax
  01067	6a 00		 push	 0
  01069	6a 07		 push	 7
  0106b	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  0106e	51		 push	 ecx
  0106f	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN50@initialise:

; 929  : 					}
; 930  : 
; 931  : 
; 932  : 					// request status
; 933  : 					if (leader_flag)

  01074	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  01078	74 1a		 je	 SHORT $LN51@initialise

; 934  : 						add_message_action_to_database (sub_item, 8, MESSAGE_WINGMAN_REQUEST_STATUS,	index, DIK_9, "Report Status");

  0107a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@COLHPDCA@Report?5Status@
  0107f	6a 0a		 push	 10			; 0000000aH
  01081	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01084	50		 push	 eax
  01085	6a 1b		 push	 27			; 0000001bH
  01087	6a 08		 push	 8
  01089	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  0108c	51		 push	 ecx
  0108d	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 935  : 					else

  01092	eb 18		 jmp	 SHORT $LN52@initialise
$LN51@initialise:

; 936  : 						add_message_action_to_database (sub_item, 8, MESSAGE_NONE,	index, DIK_9, "Report Status");

  01094	68 00 00 00 00	 push	 OFFSET ??_C@_0O@COLHPDCA@Report?5Status@
  01099	6a 0a		 push	 10			; 0000000aH
  0109b	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0109e	50		 push	 eax
  0109f	6a 00		 push	 0
  010a1	6a 08		 push	 8
  010a3	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  010a6	51		 push	 ecx
  010a7	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN52@initialise:

; 937  : 
; 938  : 					//
; 939  : 					// Return To Base (F0) - Leader Only
; 940  : 					//
; 941  : 
; 942  : 					if (leader_flag)

  010ac	83 7d dc 00	 cmp	 DWORD PTR _leader_flag$14[ebp], 0
  010b0	74 1a		 je	 SHORT $LN53@initialise

; 943  : 					{
; 944  : 						add_message_action_to_database (sub_item, 9, MESSAGE_WINGMAN_RETURN_TO_BASE, 		index, DIK_0, "Return To Base");

  010b2	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GPNCODPJ@Return?5To?5Base@
  010b7	6a 0b		 push	 11			; 0000000bH
  010b9	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  010bc	50		 push	 eax
  010bd	6a 1c		 push	 28			; 0000001cH
  010bf	6a 09		 push	 9
  010c1	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  010c4	51		 push	 ecx
  010c5	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 945  : 					}
; 946  : 					else

  010ca	eb 18		 jmp	 SHORT $LN54@initialise
$LN53@initialise:

; 947  : 					{
; 948  : 						add_message_action_to_database (sub_item, 9, MESSAGE_NONE, 					index, DIK_0, "Return To Base");

  010cc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GPNCODPJ@Return?5To?5Base@
  010d1	6a 0b		 push	 11			; 0000000bH
  010d3	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  010d6	50		 push	 eax
  010d7	6a 00		 push	 0
  010d9	6a 09		 push	 9
  010db	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  010de	51		 push	 ecx
  010df	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN54@initialise:

; 949  : 					}
; 950  : 
; 951  : 					create_leaf_message_action (MESSAGE_WINGMAN_ATTACK_MY_TARGET, 	index, send_group_message);

  010e4	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  010e9	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  010ec	50		 push	 eax
  010ed	6a 11		 push	 17			; 00000011H
  010ef	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 952  : 					create_leaf_message_action (MESSAGE_WINGMAN_HELP_ME, 				index, send_group_message);

  010f4	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  010f9	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  010fc	50		 push	 eax
  010fd	6a 12		 push	 18			; 00000012H
  010ff	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 953  : 					create_leaf_message_action (MESSAGE_WINGMAN_HOLD_POSITION, 		index, send_group_message);

  01104	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  01109	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0110c	50		 push	 eax
  0110d	6a 17		 push	 23			; 00000017H
  0110f	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 954  : 					create_leaf_message_action (MESSAGE_WINGMAN_REJOIN_FORMATION,	index, send_group_message);

  01114	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  01119	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0111c	50		 push	 eax
  0111d	6a 18		 push	 24			; 00000018H
  0111f	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 955  : 					create_leaf_message_action (MESSAGE_WINGMAN_WEAPONS_HOLD, 		index, send_group_message);

  01124	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  01129	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0112c	50		 push	 eax
  0112d	6a 13		 push	 19			; 00000013H
  0112f	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 956  : 					create_leaf_message_action (MESSAGE_WINGMAN_WEAPONS_FREE, 		index, send_group_message);

  01134	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  01139	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0113c	50		 push	 eax
  0113d	6a 14		 push	 20			; 00000014H
  0113f	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 957  : 					create_leaf_message_action (MESSAGE_WINGMAN_BOB_UP, 				index, send_group_message);

  01144	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  01149	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0114c	50		 push	 eax
  0114d	6a 15		 push	 21			; 00000015H
  0114f	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 958  : 					create_leaf_message_action (MESSAGE_WINGMAN_REQUEST_STATUS,		index, request_wingmen_status);

  01154	68 00 00 00 00	 push	 OFFSET ?request_wingmen_status@@YGXUMESSAGE_TYPE@@@Z ; request_wingmen_status
  01159	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0115c	50		 push	 eax
  0115d	6a 1b		 push	 27			; 0000001bH
  0115f	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 959  : 					create_leaf_message_action (MESSAGE_WINGMAN_RETURN_TO_BASE, 	index, send_group_message);

  01164	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  01169	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0116c	50		 push	 eax
  0116d	6a 1c		 push	 28			; 0000001cH
  0116f	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 960  : 
; 961  : 					sub_item = create_message_database_list (MESSAGE_FORMATION_LIST, index, message_list, 9, "Formation List");

  01174	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLCOHACH@Formation?5List@
  01179	6a 09		 push	 9
  0117b	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  01180	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01183	50		 push	 eax
  01184	6a 06		 push	 6
  01186	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  0118b	89 45 ec	 mov	 DWORD PTR _sub_item$[ebp], eax

; 962  : 
; 963  : 					////////////////////////////////////////////////
; 964  : 					//
; 965  : 					// Formation list Sub Menu - 9 options
; 966  : 					//
; 967  : 					////////////////////////////////////////////////
; 968  : 
; 969  : 					add_message_action_to_database (sub_item, 0, MESSAGE_GROUP_ROW_LEFT,			  index, DIK_1, "Row Left");

  0118e	68 00 00 00 00	 push	 OFFSET ??_C@_08PEAIGCDM@Row?5Left@
  01193	6a 02		 push	 2
  01195	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01198	50		 push	 eax
  01199	6a 07		 push	 7
  0119b	6a 00		 push	 0
  0119d	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  011a0	51		 push	 ecx
  011a1	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 970  : 					add_message_action_to_database (sub_item, 1, MESSAGE_GROUP_ROW_RIGHT,		      index, DIK_2, "Row Right");

  011a6	68 00 00 00 00	 push	 OFFSET ??_C@_09DFGEHLIM@Row?5Right@
  011ab	6a 03		 push	 3
  011ad	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  011b0	50		 push	 eax
  011b1	6a 08		 push	 8
  011b3	6a 01		 push	 1
  011b5	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  011b8	51		 push	 ecx
  011b9	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 971  : 					add_message_action_to_database (sub_item, 2, MESSAGE_GROUP_ECHELON_LEFT,	      index, DIK_3, "Echelon Left");

  011be	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CLHHNGEE@Echelon?5Left@
  011c3	6a 04		 push	 4
  011c5	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  011c8	50		 push	 eax
  011c9	6a 09		 push	 9
  011cb	6a 02		 push	 2
  011cd	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  011d0	51		 push	 ecx
  011d1	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 972  : 					add_message_action_to_database (sub_item, 3, MESSAGE_GROUP_ECHELON_RIGHT,	      index, DIK_4, "Echelon Right");

  011d6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GLGFPNDG@Echelon?5Right@
  011db	6a 05		 push	 5
  011dd	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  011e0	50		 push	 eax
  011e1	6a 0a		 push	 10			; 0000000aH
  011e3	6a 03		 push	 3
  011e5	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  011e8	51		 push	 ecx
  011e9	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 973  : 					add_message_action_to_database (sub_item, 4, MESSAGE_GROUP_COLUMN,			      index, DIK_5, "Column");

  011ee	68 00 00 00 00	 push	 OFFSET ??_C@_06FFIACGFC@Column@
  011f3	6a 06		 push	 6
  011f5	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  011f8	50		 push	 eax
  011f9	6a 0b		 push	 11			; 0000000bH
  011fb	6a 04		 push	 4
  011fd	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01200	51		 push	 ecx
  01201	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 974  : 					add_message_action_to_database (sub_item, 5, MESSAGE_GROUP_WEDGE,				  index, DIK_6, "Wedge");   

  01206	68 00 00 00 00	 push	 OFFSET ??_C@_05OPDCLMDN@Wedge@
  0120b	6a 07		 push	 7
  0120d	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01210	50		 push	 eax
  01211	6a 0c		 push	 12			; 0000000cH
  01213	6a 05		 push	 5
  01215	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01218	51		 push	 ecx
  01219	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 975  : 			//VJ 060305 three new formations for maverick                  
; 976  : 						add_message_action_to_database (sub_item, 6, MESSAGE_GROUP_DIAMOND,				  index, DIK_7, "Diamond");

  0121e	68 00 00 00 00	 push	 OFFSET ??_C@_07KLLDCFGI@Diamond@
  01223	6a 08		 push	 8
  01225	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01228	50		 push	 eax
  01229	6a 0d		 push	 13			; 0000000dH
  0122b	6a 06		 push	 6
  0122d	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01230	51		 push	 ecx
  01231	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 977  : 						add_message_action_to_database (sub_item, 7, MESSAGE_GROUP_STAGGERED_TRAIL_LEFT,  index, DIK_8, "Staggered Trail Left");

  01236	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ECNLFKOM@Staggered?5Trail?5Left@
  0123b	6a 09		 push	 9
  0123d	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01240	50		 push	 eax
  01241	6a 0e		 push	 14			; 0000000eH
  01243	6a 07		 push	 7
  01245	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01248	51		 push	 ecx
  01249	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 978  : 						add_message_action_to_database (sub_item, 8, MESSAGE_GROUP_STAGGERED_TRAIL_RIGHT,  index, DIK_9, "Staggered Trail Right");

  0124e	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LDABHKGA@Staggered?5Trail?5Right@
  01253	6a 0a		 push	 10			; 0000000aH
  01255	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01258	50		 push	 eax
  01259	6a 0f		 push	 15			; 0000000fH
  0125b	6a 08		 push	 8
  0125d	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01260	51		 push	 ecx
  01261	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 979  : 
; 980  : 					create_leaf_message_action (MESSAGE_GROUP_ROW_LEFT, 		      index, send_group_message);

  01266	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  0126b	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0126e	50		 push	 eax
  0126f	6a 07		 push	 7
  01271	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 981  : 					create_leaf_message_action (MESSAGE_GROUP_ROW_RIGHT, 		      index, send_group_message);

  01276	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  0127b	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0127e	50		 push	 eax
  0127f	6a 08		 push	 8
  01281	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 982  : 					create_leaf_message_action (MESSAGE_GROUP_ECHELON_LEFT, 	      index, send_group_message);

  01286	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  0128b	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0128e	50		 push	 eax
  0128f	6a 09		 push	 9
  01291	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 983  : 					create_leaf_message_action (MESSAGE_GROUP_ECHELON_RIGHT,          index, send_group_message);

  01296	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  0129b	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0129e	50		 push	 eax
  0129f	6a 0a		 push	 10			; 0000000aH
  012a1	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 984  : 					create_leaf_message_action (MESSAGE_GROUP_COLUMN, 			      index, send_group_message);

  012a6	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  012ab	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  012ae	50		 push	 eax
  012af	6a 0b		 push	 11			; 0000000bH
  012b1	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 985  : 					create_leaf_message_action (MESSAGE_GROUP_WEDGE, 			      index, send_group_message);

  012b6	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  012bb	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  012be	50		 push	 eax
  012bf	6a 0c		 push	 12			; 0000000cH
  012c1	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 986  :                     //Mavericks Formations mod
; 987  :                     create_leaf_message_action (MESSAGE_GROUP_DIAMOND, 			      index, send_group_message);

  012c6	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  012cb	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  012ce	50		 push	 eax
  012cf	6a 0d		 push	 13			; 0000000dH
  012d1	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 988  :                     create_leaf_message_action (MESSAGE_GROUP_STAGGERED_TRAIL_LEFT,   index, send_group_message);

  012d6	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  012db	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  012de	50		 push	 eax
  012df	6a 0e		 push	 14			; 0000000eH
  012e1	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 989  :                     create_leaf_message_action (MESSAGE_GROUP_STAGGERED_TRAIL_RIGHT,  index, send_group_message);

  012e6	68 00 00 00 00	 push	 OFFSET ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
  012eb	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  012ee	50		 push	 eax
  012ef	6a 0f		 push	 15			; 0000000fH
  012f1	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action
$LN16@initialise:

; 990  :                     
; 991  : 				}
; 992  : 			}
; 993  : 		}
; 994  : 	}
; 995  : 
; 996  : 	/////////////////////////////////////////////////////////////////
; 997  : 	//
; 998  : 	// LOCAL BASE
; 999  : 	//
; 1000 : 	/////////////////////////////////////////////////////////////////
; 1001 : 	{
; 1002 : 		int
; 1003 : 			recon_flag;
; 1004 : 
; 1005 : 		entity
; 1006 : 			*guide;
; 1007 : 		entity
; 1008 : 			*group;
; 1009 : 
; 1010 : 		recon_flag = FALSE;

  012f6	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _recon_flag$9[ebp], 0

; 1011 : 
; 1012 : 		if (get_gunship_entity ())

  012fd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  01304	0f 84 4d 02 00
	00		 je	 $LN55@initialise

; 1013 : 		{
; 1014 : 			guide = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_FOLLOWER);

  0130a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  01311	74 0f		 je	 SHORT $LN157@initialise
  01313	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  01318	8b 08		 mov	 ecx, DWORD PTR [eax]
  0131a	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv938[ebp], ecx
  01320	eb 27		 jmp	 SHORT $LN158@initialise
$LN157@initialise:
  01322	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01328	81 c2 ba 01 00
	00		 add	 edx, 442		; 000001baH
  0132e	52		 push	 edx
  0132f	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01339	50		 push	 eax
  0133a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0133f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv938[ebp], 0
$LN158@initialise:
  01349	b9 01 00 00 00	 mov	 ecx, 1
  0134e	85 c9		 test	 ecx, ecx
  01350	74 0c		 je	 SHORT $LN159@initialise
  01352	c7 85 60 ff ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv946[ebp], 13 ; 0000000dH
  0135c	eb 27		 jmp	 SHORT $LN160@initialise
$LN159@initialise:
  0135e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01364	81 c2 ba 01 00
	00		 add	 edx, 442		; 000001baH
  0136a	52		 push	 edx
  0136b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01370	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01375	50		 push	 eax
  01376	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0137b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv946[ebp], 0
$LN160@initialise:
  01385	6a 0d		 push	 13			; 0000000dH
  01387	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0138d	51		 push	 ecx
  0138e	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv938[ebp], 180
  01398	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv946[ebp]
  0139e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  013a5	ff d1		 call	 ecx
  013a7	89 45 c4	 mov	 DWORD PTR _guide$8[ebp], eax

; 1015 : 
; 1016 : 			if (guide)

  013aa	83 7d c4 00	 cmp	 DWORD PTR _guide$8[ebp], 0
  013ae	74 16		 je	 SHORT $LN56@initialise

; 1017 : 			{
; 1018 : 				if (get_guide_criteria_valid (guide, GUIDE_CRITERIA_TRANSMIT_DATA))

  013b0	6a 03		 push	 3
  013b2	8b 45 c4	 mov	 eax, DWORD PTR _guide$8[ebp]
  013b5	50		 push	 eax
  013b6	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  013bb	85 c0		 test	 eax, eax
  013bd	74 07		 je	 SHORT $LN56@initialise

; 1019 : 				{
; 1020 : 					recon_flag = TRUE;

  013bf	c7 45 c8 01 00
	00 00		 mov	 DWORD PTR _recon_flag$9[ebp], 1
$LN56@initialise:

; 1021 : 				}
; 1022 : 			}
; 1023 : 
; 1024 : 			//
; 1025 : 			// 4 options
; 1026 : 			//
; 1027 : 
; 1028 : 			group = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_MEMBER);

  013c6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  013cd	74 0f		 je	 SHORT $LN161@initialise
  013cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  013d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  013d6	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv963[ebp], ecx
  013dc	eb 27		 jmp	 SHORT $LN162@initialise
$LN161@initialise:
  013de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  013e4	81 c2 c8 01 00
	00		 add	 edx, 456		; 000001c8H
  013ea	52		 push	 edx
  013eb	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  013f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  013f5	50		 push	 eax
  013f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  013fb	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv963[ebp], 0
$LN162@initialise:
  01405	b9 01 00 00 00	 mov	 ecx, 1
  0140a	85 c9		 test	 ecx, ecx
  0140c	74 0c		 je	 SHORT $LN163@initialise
  0140e	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv971[ebp], 25 ; 00000019H
  01418	eb 27		 jmp	 SHORT $LN164@initialise
$LN163@initialise:
  0141a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01420	81 c2 c8 01 00
	00		 add	 edx, 456		; 000001c8H
  01426	52		 push	 edx
  01427	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0142c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01431	50		 push	 eax
  01432	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01437	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv971[ebp], 0
$LN164@initialise:
  01441	6a 19		 push	 25			; 00000019H
  01443	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  01449	51		 push	 ecx
  0144a	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv963[ebp], 180
  01454	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv971[ebp]
  0145a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01461	ff d1		 call	 ecx
  01463	89 45 c0	 mov	 DWORD PTR _group$7[ebp], eax

; 1029 : 
; 1030 : 			if (group)

  01466	83 7d c0 00	 cmp	 DWORD PTR _group$7[ebp], 0
  0146a	0f 84 e7 00 00
	00		 je	 $LN55@initialise

; 1031 : 			{
; 1032 : 				index = get_local_entity_index (group);

  01470	8b 45 c0	 mov	 eax, DWORD PTR _group$7[ebp]
  01473	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  01479	c1 f8 04	 sar	 eax, 4
  0147c	89 45 f4	 mov	 DWORD PTR _index$[ebp], eax

; 1033 : 
; 1034 : 				sub_item = create_message_database_list (MESSAGE_LOCAL_BASE_LIST, 0, message_list, 4, "Select Message");

  0147f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KBDBDPPN@Select?5Message@
  01484	6a 04		 push	 4
  01486	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  0148b	6a 00		 push	 0
  0148d	6a 04		 push	 4
  0148f	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  01494	89 45 ec	 mov	 DWORD PTR _sub_item$[ebp], eax

; 1035 : 
; 1036 : 				add_message_action_to_database (sub_item, 0, MESSAGE_LOCAL_BASE_REQUEST_AIRSTRIKE,	index, DIK_1, "Request Airstrike");

  01497	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NPNKLGNO@Request?5Airstrike@
  0149c	6a 02		 push	 2
  0149e	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  014a1	50		 push	 eax
  014a2	6a 1d		 push	 29			; 0000001dH
  014a4	6a 00		 push	 0
  014a6	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  014a9	51		 push	 ecx
  014aa	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1037 : 				add_message_action_to_database (sub_item, 1, MESSAGE_LOCAL_BASE_REQUEST_ARTILLERY,	index, DIK_2, "Request Artillery");

  014af	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HLINHDHK@Request?5Artillery@
  014b4	6a 03		 push	 3
  014b6	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  014b9	50		 push	 eax
  014ba	6a 1e		 push	 30			; 0000001eH
  014bc	6a 01		 push	 1
  014be	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  014c1	51		 push	 ecx
  014c2	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1038 : 				add_message_action_to_database (sub_item, 2, MESSAGE_LOCAL_BASE_REQUEST_ASSISTANCE,	index, DIK_3, "Request Assistance");

  014c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KDGPIINE@Request?5Assistance@
  014cc	6a 04		 push	 4
  014ce	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  014d1	50		 push	 eax
  014d2	6a 1f		 push	 31			; 0000001fH
  014d4	6a 02		 push	 2
  014d6	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  014d9	51		 push	 ecx
  014da	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1039 : 
; 1040 : 				if (recon_flag)

  014df	83 7d c8 00	 cmp	 DWORD PTR _recon_flag$9[ebp], 0
  014e3	74 1a		 je	 SHORT $LN59@initialise

; 1041 : 				{
; 1042 : 					add_message_action_to_database (sub_item, 3, MESSAGE_LOCAL_BASE_TRANSMIT_RECON,	index, DIK_4, "Transmit Recon");

  014e5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OAICFPEP@Transmit?5Recon@
  014ea	6a 05		 push	 5
  014ec	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  014ef	50		 push	 eax
  014f0	6a 20		 push	 32			; 00000020H
  014f2	6a 03		 push	 3
  014f4	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  014f7	51		 push	 ecx
  014f8	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1043 : 				}
; 1044 : 				else

  014fd	eb 18		 jmp	 SHORT $LN60@initialise
$LN59@initialise:

; 1045 : 				{
; 1046 : 					add_message_action_to_database (sub_item, 3, MESSAGE_NONE,								index, DIK_4, "Transmit Recon");

  014ff	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OAICFPEP@Transmit?5Recon@
  01504	6a 05		 push	 5
  01506	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01509	50		 push	 eax
  0150a	6a 00		 push	 0
  0150c	6a 03		 push	 3
  0150e	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01511	51		 push	 ecx
  01512	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN60@initialise:

; 1047 : 				}
; 1048 : 
; 1049 : 				create_leaf_message_action (MESSAGE_LOCAL_BASE_REQUEST_AIRSTRIKE, 	index, send_local_base_message);

  01517	68 00 00 00 00	 push	 OFFSET ?send_local_base_message@@YGXUMESSAGE_TYPE@@@Z ; send_local_base_message
  0151c	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0151f	50		 push	 eax
  01520	6a 1d		 push	 29			; 0000001dH
  01522	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1050 : 				create_leaf_message_action (MESSAGE_LOCAL_BASE_REQUEST_ARTILLERY, 	index, send_local_base_message);

  01527	68 00 00 00 00	 push	 OFFSET ?send_local_base_message@@YGXUMESSAGE_TYPE@@@Z ; send_local_base_message
  0152c	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0152f	50		 push	 eax
  01530	6a 1e		 push	 30			; 0000001eH
  01532	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1051 : 				create_leaf_message_action (MESSAGE_LOCAL_BASE_REQUEST_ASSISTANCE,	index, send_local_base_message);

  01537	68 00 00 00 00	 push	 OFFSET ?send_local_base_message@@YGXUMESSAGE_TYPE@@@Z ; send_local_base_message
  0153c	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0153f	50		 push	 eax
  01540	6a 1f		 push	 31			; 0000001fH
  01542	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1052 : 				create_leaf_message_action (MESSAGE_LOCAL_BASE_TRANSMIT_RECON,	index, send_local_base_message);

  01547	68 00 00 00 00	 push	 OFFSET ?send_local_base_message@@YGXUMESSAGE_TYPE@@@Z ; send_local_base_message
  0154c	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0154f	50		 push	 eax
  01550	6a 20		 push	 32			; 00000020H
  01552	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action
$LN55@initialise:

; 1053 : 			}
; 1054 : 		}
; 1055 : 	}
; 1056 : 
; 1057 : 	/////////////////////////////////////////////////////////////////
; 1058 : 	//
; 1059 : 	// Pilots
; 1060 : 	//
; 1061 : 	/////////////////////////////////////////////////////////////////
; 1062 : 	{
; 1063 : 		entity
; 1064 : 			*force_en,
; 1065 : 			*pilot_en;
; 1066 : 
; 1067 : 		int
; 1068 : 			list_count,
; 1069 : 			list_max,
; 1070 : 			unique_id;
; 1071 : 
; 1072 : 		ASSERT (get_session_entity ());

  01557	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0155e	75 1a		 jne	 SHORT $LN61@initialise
  01560	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01565	05 f4 01 00 00	 add	 eax, 500		; 000001f4H
  0156a	50		 push	 eax
  0156b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01570	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  01575	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN61@initialise:

; 1073 : 
; 1074 : 		//
; 1075 : 		// count up player pilots
; 1076 : 		//
; 1077 : 
; 1078 : 		count = 0;

  0157a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 1079 : 
; 1080 : 		force_en = get_local_entity_first_child (get_session_entity (), LIST_TYPE_FORCE);

  01581	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01588	74 0f		 je	 SHORT $LN165@initialise
  0158a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0158f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01591	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1040[ebp], ecx
  01597	eb 27		 jmp	 SHORT $LN166@initialise
$LN165@initialise:
  01599	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  0159f	81 c2 fc 01 00
	00		 add	 edx, 508		; 000001fcH
  015a5	52		 push	 edx
  015a6	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  015ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  015b0	50		 push	 eax
  015b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  015b6	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1040[ebp], 0
$LN166@initialise:
  015c0	b9 01 00 00 00	 mov	 ecx, 1
  015c5	85 c9		 test	 ecx, ecx
  015c7	74 0c		 je	 SHORT $LN167@initialise
  015c9	c7 85 60 ff ff
	ff 0e 00 00 00	 mov	 DWORD PTR tv1048[ebp], 14 ; 0000000eH
  015d3	eb 27		 jmp	 SHORT $LN168@initialise
$LN167@initialise:
  015d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  015db	81 c2 fc 01 00
	00		 add	 edx, 508		; 000001fcH
  015e1	52		 push	 edx
  015e2	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  015e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  015ec	50		 push	 eax
  015ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  015f2	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1048[ebp], 0
$LN168@initialise:
  015fc	6a 0e		 push	 14			; 0000000eH
  015fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01604	51		 push	 ecx
  01605	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1040[ebp], 180
  0160f	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1048[ebp]
  01615	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0161c	ff d1		 call	 ecx
  0161e	89 45 bc	 mov	 DWORD PTR _force_en$6[ebp], eax
$LN8@initialise:

; 1081 : 
; 1082 : 		while (force_en)

  01621	83 7d bc 00	 cmp	 DWORD PTR _force_en$6[ebp], 0
  01625	0f 84 f0 01 00
	00		 je	 $LN9@initialise

; 1083 : 		{
; 1084 : 			pilot_en = get_local_entity_first_child (force_en, LIST_TYPE_PILOT);

  0162b	83 7d bc 00	 cmp	 DWORD PTR _force_en$6[ebp], 0
  0162f	74 0d		 je	 SHORT $LN169@initialise
  01631	8b 45 bc	 mov	 eax, DWORD PTR _force_en$6[ebp]
  01634	8b 08		 mov	 ecx, DWORD PTR [eax]
  01636	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1061[ebp], ecx
  0163c	eb 27		 jmp	 SHORT $LN170@initialise
$LN169@initialise:
  0163e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01644	81 c2 00 02 00
	00		 add	 edx, 512		; 00000200H
  0164a	52		 push	 edx
  0164b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01650	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01655	50		 push	 eax
  01656	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0165b	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1061[ebp], 0
$LN170@initialise:
  01665	b9 01 00 00 00	 mov	 ecx, 1
  0166a	85 c9		 test	 ecx, ecx
  0166c	74 0c		 je	 SHORT $LN171@initialise
  0166e	c7 85 60 ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR tv1069[ebp], 28 ; 0000001cH
  01678	eb 27		 jmp	 SHORT $LN172@initialise
$LN171@initialise:
  0167a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01680	81 c2 00 02 00
	00		 add	 edx, 512		; 00000200H
  01686	52		 push	 edx
  01687	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0168c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01691	50		 push	 eax
  01692	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01697	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1069[ebp], 0
$LN172@initialise:
  016a1	6a 1c		 push	 28			; 0000001cH
  016a3	8b 4d bc	 mov	 ecx, DWORD PTR _force_en$6[ebp]
  016a6	51		 push	 ecx
  016a7	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1061[ebp], 180
  016b1	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1069[ebp]
  016b7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  016be	ff d1		 call	 ecx
  016c0	89 45 b8	 mov	 DWORD PTR _pilot_en$5[ebp], eax
$LN10@initialise:

; 1085 : 
; 1086 : 			while (pilot_en)

  016c3	83 7d b8 00	 cmp	 DWORD PTR _pilot_en$5[ebp], 0
  016c7	0f 84 b1 00 00
	00		 je	 $LN11@initialise

; 1087 : 			{
; 1088 : 				if (pilot_en != get_pilot_entity ())

  016cd	8b 45 b8	 mov	 eax, DWORD PTR _pilot_en$5[ebp]
  016d0	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  016d6	74 09		 je	 SHORT $LN62@initialise

; 1089 : 				{
; 1090 : 					count ++;

  016d8	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  016db	83 c0 01	 add	 eax, 1
  016de	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN62@initialise:

; 1091 : 				}
; 1092 : 
; 1093 : 				pilot_en = get_local_entity_child_succ (pilot_en, LIST_TYPE_PILOT);

  016e1	83 7d b8 00	 cmp	 DWORD PTR _pilot_en$5[ebp], 0
  016e5	74 0d		 je	 SHORT $LN173@initialise
  016e7	8b 45 b8	 mov	 eax, DWORD PTR _pilot_en$5[ebp]
  016ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  016ec	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1084[ebp], ecx
  016f2	eb 27		 jmp	 SHORT $LN174@initialise
$LN173@initialise:
  016f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  016fa	81 c2 09 02 00
	00		 add	 edx, 521		; 00000209H
  01700	52		 push	 edx
  01701	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01706	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0170b	50		 push	 eax
  0170c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01711	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1084[ebp], 0
$LN174@initialise:
  0171b	b9 01 00 00 00	 mov	 ecx, 1
  01720	85 c9		 test	 ecx, ecx
  01722	74 0c		 je	 SHORT $LN175@initialise
  01724	c7 85 60 ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR tv1092[ebp], 28 ; 0000001cH
  0172e	eb 27		 jmp	 SHORT $LN176@initialise
$LN175@initialise:
  01730	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01736	81 c2 09 02 00
	00		 add	 edx, 521		; 00000209H
  0173c	52		 push	 edx
  0173d	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01742	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01747	50		 push	 eax
  01748	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0174d	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1092[ebp], 0
$LN176@initialise:
  01757	6a 1c		 push	 28			; 0000001cH
  01759	8b 4d b8	 mov	 ecx, DWORD PTR _pilot_en$5[ebp]
  0175c	51		 push	 ecx
  0175d	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1084[ebp], 180
  01767	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1092[ebp]
  0176d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01774	ff d1		 call	 ecx
  01776	89 45 b8	 mov	 DWORD PTR _pilot_en$5[ebp], eax

; 1094 : 			}

  01779	e9 45 ff ff ff	 jmp	 $LN10@initialise
$LN11@initialise:

; 1095 : 
; 1096 : 			force_en = get_local_entity_child_succ (force_en, LIST_TYPE_FORCE);

  0177e	83 7d bc 00	 cmp	 DWORD PTR _force_en$6[ebp], 0
  01782	74 0d		 je	 SHORT $LN177@initialise
  01784	8b 45 bc	 mov	 eax, DWORD PTR _force_en$6[ebp]
  01787	8b 08		 mov	 ecx, DWORD PTR [eax]
  01789	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1104[ebp], ecx
  0178f	eb 27		 jmp	 SHORT $LN178@initialise
$LN177@initialise:
  01791	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01797	81 c2 0c 02 00
	00		 add	 edx, 524		; 0000020cH
  0179d	52		 push	 edx
  0179e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  017a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  017a8	50		 push	 eax
  017a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  017ae	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1104[ebp], 0
$LN178@initialise:
  017b8	b9 01 00 00 00	 mov	 ecx, 1
  017bd	85 c9		 test	 ecx, ecx
  017bf	74 0c		 je	 SHORT $LN179@initialise
  017c1	c7 85 60 ff ff
	ff 0e 00 00 00	 mov	 DWORD PTR tv1112[ebp], 14 ; 0000000eH
  017cb	eb 27		 jmp	 SHORT $LN180@initialise
$LN179@initialise:
  017cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  017d3	81 c2 0c 02 00
	00		 add	 edx, 524		; 0000020cH
  017d9	52		 push	 edx
  017da	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  017df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  017e4	50		 push	 eax
  017e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  017ea	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1112[ebp], 0
$LN180@initialise:
  017f4	6a 0e		 push	 14			; 0000000eH
  017f6	8b 4d bc	 mov	 ecx, DWORD PTR _force_en$6[ebp]
  017f9	51		 push	 ecx
  017fa	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1104[ebp], 180
  01804	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1112[ebp]
  0180a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01811	ff d1		 call	 ecx
  01813	89 45 bc	 mov	 DWORD PTR _force_en$6[ebp], eax

; 1097 : 		}

  01816	e9 06 fe ff ff	 jmp	 $LN8@initialise
$LN9@initialise:

; 1098 : 
; 1099 : 		//
; 1100 : 		// create list
; 1101 : 		//
; 1102 : 
; 1103 : 		list_count = 0;

  0181b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _list_count$4[ebp], 0

; 1104 : 
; 1105 : 		list_max = (count >> 3) + 1;

  01822	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  01825	c1 f8 03	 sar	 eax, 3
  01828	83 c0 01	 add	 eax, 1
  0182b	89 45 b0	 mov	 DWORD PTR _list_max$3[ebp], eax

; 1106 : 
; 1107 : 		if (count > 8)

  0182e	83 7d f8 08	 cmp	 DWORD PTR _count$[ebp], 8
  01832	7e 1c		 jle	 SHORT $LN63@initialise

; 1108 : 		{
; 1109 : 			new_item = create_message_database_list (MESSAGE_PILOT_LIST, list_count, message_list, 10, "Player List");

  01834	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KCCDHAHC@Player?5List@
  01839	6a 0a		 push	 10			; 0000000aH
  0183b	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  01840	8b 45 b4	 mov	 eax, DWORD PTR _list_count$4[ebp]
  01843	50		 push	 eax
  01844	6a 05		 push	 5
  01846	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  0184b	89 45 f0	 mov	 DWORD PTR _new_item$[ebp], eax

; 1110 : 		}
; 1111 : 		else

  0184e	eb 1f		 jmp	 SHORT $LN64@initialise
$LN63@initialise:

; 1112 : 		{
; 1113 : 			new_item = create_message_database_list (MESSAGE_PILOT_LIST, list_count, message_list, count + 1, "Player List");

  01850	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KCCDHAHC@Player?5List@
  01855	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  01858	83 c0 01	 add	 eax, 1
  0185b	50		 push	 eax
  0185c	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  01861	8b 4d b4	 mov	 ecx, DWORD PTR _list_count$4[ebp]
  01864	51		 push	 ecx
  01865	6a 05		 push	 5
  01867	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  0186c	89 45 f0	 mov	 DWORD PTR _new_item$[ebp], eax
$LN64@initialise:

; 1114 : 		}
; 1115 : 
; 1116 : 		loop = 0;

  0186f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0

; 1117 : 
; 1118 : 		if (count > 0)

  01876	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  0187a	0f 8e 17 04 00
	00		 jle	 $LN65@initialise

; 1119 : 		{
; 1120 : 			force_en = get_local_entity_first_child (get_session_entity (), LIST_TYPE_FORCE);

  01880	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01887	74 0f		 je	 SHORT $LN181@initialise
  01889	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0188e	8b 08		 mov	 ecx, DWORD PTR [eax]
  01890	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1141[ebp], ecx
  01896	eb 27		 jmp	 SHORT $LN182@initialise
$LN181@initialise:
  01898	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  0189e	81 c2 24 02 00
	00		 add	 edx, 548		; 00000224H
  018a4	52		 push	 edx
  018a5	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  018aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  018af	50		 push	 eax
  018b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  018b5	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1141[ebp], 0
$LN182@initialise:
  018bf	b9 01 00 00 00	 mov	 ecx, 1
  018c4	85 c9		 test	 ecx, ecx
  018c6	74 0c		 je	 SHORT $LN183@initialise
  018c8	c7 85 60 ff ff
	ff 0e 00 00 00	 mov	 DWORD PTR tv1149[ebp], 14 ; 0000000eH
  018d2	eb 27		 jmp	 SHORT $LN184@initialise
$LN183@initialise:
  018d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  018da	81 c2 24 02 00
	00		 add	 edx, 548		; 00000224H
  018e0	52		 push	 edx
  018e1	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  018e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  018eb	50		 push	 eax
  018ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  018f1	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1149[ebp], 0
$LN184@initialise:
  018fb	6a 0e		 push	 14			; 0000000eH
  018fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01903	51		 push	 ecx
  01904	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1141[ebp], 180
  0190e	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1149[ebp]
  01914	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0191b	ff d1		 call	 ecx
  0191d	89 45 bc	 mov	 DWORD PTR _force_en$6[ebp], eax
$LN12@initialise:

; 1121 : 
; 1122 : 			while (force_en)

  01920	83 7d bc 00	 cmp	 DWORD PTR _force_en$6[ebp], 0
  01924	0f 84 4d 03 00
	00		 je	 $LN13@initialise

; 1123 : 			{
; 1124 : 				pilot_en = get_local_entity_first_child (force_en, LIST_TYPE_PILOT);

  0192a	83 7d bc 00	 cmp	 DWORD PTR _force_en$6[ebp], 0
  0192e	74 0d		 je	 SHORT $LN185@initialise
  01930	8b 45 bc	 mov	 eax, DWORD PTR _force_en$6[ebp]
  01933	8b 08		 mov	 ecx, DWORD PTR [eax]
  01935	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1162[ebp], ecx
  0193b	eb 27		 jmp	 SHORT $LN186@initialise
$LN185@initialise:
  0193d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01943	81 c2 28 02 00
	00		 add	 edx, 552		; 00000228H
  01949	52		 push	 edx
  0194a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0194f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01954	50		 push	 eax
  01955	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0195a	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1162[ebp], 0
$LN186@initialise:
  01964	b9 01 00 00 00	 mov	 ecx, 1
  01969	85 c9		 test	 ecx, ecx
  0196b	74 0c		 je	 SHORT $LN187@initialise
  0196d	c7 85 60 ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR tv1170[ebp], 28 ; 0000001cH
  01977	eb 27		 jmp	 SHORT $LN188@initialise
$LN187@initialise:
  01979	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  0197f	81 c2 28 02 00
	00		 add	 edx, 552		; 00000228H
  01985	52		 push	 edx
  01986	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0198b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01990	50		 push	 eax
  01991	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01996	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1170[ebp], 0
$LN188@initialise:
  019a0	6a 1c		 push	 28			; 0000001cH
  019a2	8b 4d bc	 mov	 ecx, DWORD PTR _force_en$6[ebp]
  019a5	51		 push	 ecx
  019a6	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1162[ebp], 180
  019b0	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1170[ebp]
  019b6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  019bd	ff d1		 call	 ecx
  019bf	89 45 b8	 mov	 DWORD PTR _pilot_en$5[ebp], eax
$LN14@initialise:

; 1125 : 
; 1126 : 				while (pilot_en)

  019c2	83 7d b8 00	 cmp	 DWORD PTR _pilot_en$5[ebp], 0
  019c6	0f 84 0e 02 00
	00		 je	 $LN15@initialise

; 1127 : 				{
; 1128 : 					if (pilot_en != get_pilot_entity ())

  019cc	8b 45 b8	 mov	 eax, DWORD PTR _pilot_en$5[ebp]
  019cf	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  019d5	0f 84 62 01 00
	00		 je	 $LN66@initialise

; 1129 : 					{
; 1130 : 						//
; 1131 : 						// check for overflow
; 1132 : 						//
; 1133 : 
; 1134 : 						if (loop >= 8)

  019db	83 7d fc 08	 cmp	 DWORD PTR _loop$[ebp], 8
  019df	0f 8c e7 00 00
	00		 jl	 $LN67@initialise

; 1135 : 						{
; 1136 : 							ASSERT (loop == 8);

  019e5	83 7d fc 08	 cmp	 DWORD PTR _loop$[ebp], 8
  019e9	74 1a		 je	 SHORT $LN68@initialise
  019eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  019f0	05 34 02 00 00	 add	 eax, 564		; 00000234H
  019f5	50		 push	 eax
  019f6	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  019fb	68 00 00 00 00	 push	 OFFSET ??_C@_09MCFJPMFI@loop?5?$DN?$DN?58@
  01a00	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN68@initialise:

; 1137 : 
; 1138 : 							//
; 1139 : 							// broadcast to all pilots (F0)
; 1140 : 							//
; 1141 : 
; 1142 : 							unique_id = get_local_entity_safe_index (get_session_entity ());

  01a05	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01a0c	74 16		 je	 SHORT $LN189@initialise
  01a0e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01a13	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  01a19	c1 f8 04	 sar	 eax, 4
  01a1c	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv1187[ebp], eax
  01a22	eb 0a		 jmp	 SHORT $LN190@initialise
$LN189@initialise:
  01a24	c7 85 64 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv1187[ebp], -1
$LN190@initialise:
  01a2e	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv1187[ebp]
  01a34	89 4d ac	 mov	 DWORD PTR _unique_id$2[ebp], ecx

; 1143 : 
; 1144 : 							add_message_action_to_database (new_item, loop + 1, MESSAGE_PILOT_KEYBOARD, unique_id, DIK_0, NULL);

  01a37	6a 00		 push	 0
  01a39	6a 0b		 push	 11			; 0000000bH
  01a3b	8b 45 ac	 mov	 eax, DWORD PTR _unique_id$2[ebp]
  01a3e	50		 push	 eax
  01a3f	6a 22		 push	 34			; 00000022H
  01a41	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  01a44	83 c1 01	 add	 ecx, 1
  01a47	51		 push	 ecx
  01a48	8b 55 f0	 mov	 edx, DWORD PTR _new_item$[ebp]
  01a4b	52		 push	 edx
  01a4c	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1145 : 
; 1146 : 							create_leaf_message_action (MESSAGE_PILOT_KEYBOARD, unique_id, send_pilot_keyboard_message);

  01a51	68 00 00 00 00	 push	 OFFSET ?send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z ; send_pilot_keyboard_message
  01a56	8b 45 ac	 mov	 eax, DWORD PTR _unique_id$2[ebp]
  01a59	50		 push	 eax
  01a5a	6a 22		 push	 34			; 00000022H
  01a5c	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1147 : 
; 1148 : 							//
; 1149 : 							// create sub-list, and assign to 'F9' key
; 1150 : 							//
; 1151 : 
; 1152 : 							list_count ++;

  01a61	8b 45 b4	 mov	 eax, DWORD PTR _list_count$4[ebp]
  01a64	83 c0 01	 add	 eax, 1
  01a67	89 45 b4	 mov	 DWORD PTR _list_count$4[ebp], eax

; 1153 : 
; 1154 : 							add_message_action_to_database (new_item, loop, MESSAGE_PILOT_LIST, list_count, DIK_9, "More...");

  01a6a	68 00 00 00 00	 push	 OFFSET ??_C@_07DLLKCFJK@More?4?4?4@
  01a6f	6a 0a		 push	 10			; 0000000aH
  01a71	8b 45 b4	 mov	 eax, DWORD PTR _list_count$4[ebp]
  01a74	50		 push	 eax
  01a75	6a 05		 push	 5
  01a77	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  01a7a	51		 push	 ecx
  01a7b	8b 55 f0	 mov	 edx, DWORD PTR _new_item$[ebp]
  01a7e	52		 push	 edx
  01a7f	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1155 : 
; 1156 : 							if (count > 8)

  01a84	83 7d f8 08	 cmp	 DWORD PTR _count$[ebp], 8
  01a88	7e 1c		 jle	 SHORT $LN69@initialise

; 1157 : 							{
; 1158 : 								new_item = create_message_database_list (MESSAGE_PILOT_LIST, list_count, message_list, 10, "Player List");

  01a8a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KCCDHAHC@Player?5List@
  01a8f	6a 0a		 push	 10			; 0000000aH
  01a91	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  01a96	8b 45 b4	 mov	 eax, DWORD PTR _list_count$4[ebp]
  01a99	50		 push	 eax
  01a9a	6a 05		 push	 5
  01a9c	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  01aa1	89 45 f0	 mov	 DWORD PTR _new_item$[ebp], eax

; 1159 : 							}
; 1160 : 							else

  01aa4	eb 1f		 jmp	 SHORT $LN70@initialise
$LN69@initialise:

; 1161 : 							{
; 1162 : 								new_item = create_message_database_list (MESSAGE_PILOT_LIST, list_count, message_list, count + 1, "Player List");

  01aa6	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KCCDHAHC@Player?5List@
  01aab	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  01aae	83 c0 01	 add	 eax, 1
  01ab1	50		 push	 eax
  01ab2	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  01ab7	8b 4d b4	 mov	 ecx, DWORD PTR _list_count$4[ebp]
  01aba	51		 push	 ecx
  01abb	6a 05		 push	 5
  01abd	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  01ac2	89 45 f0	 mov	 DWORD PTR _new_item$[ebp], eax
$LN70@initialise:

; 1163 : 							}
; 1164 : 
; 1165 : 							loop = 0;

  01ac5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
$LN67@initialise:

; 1166 : 						}
; 1167 : 
; 1168 : 						unique_id = get_local_entity_safe_index (pilot_en);

  01acc	83 7d b8 00	 cmp	 DWORD PTR _pilot_en$5[ebp], 0
  01ad0	74 14		 je	 SHORT $LN191@initialise
  01ad2	8b 45 b8	 mov	 eax, DWORD PTR _pilot_en$5[ebp]
  01ad5	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  01adb	c1 f8 04	 sar	 eax, 4
  01ade	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv1222[ebp], eax
  01ae4	eb 0a		 jmp	 SHORT $LN192@initialise
$LN191@initialise:
  01ae6	c7 85 64 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv1222[ebp], -1
$LN192@initialise:
  01af0	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv1222[ebp]
  01af6	89 4d ac	 mov	 DWORD PTR _unique_id$2[ebp], ecx

; 1169 : 
; 1170 : 						add_message_action_to_database (new_item, loop, MESSAGE_PILOT_KEYBOARD, unique_id, get_display_message_key_number (1 + loop), NULL);

  01af9	6a 00		 push	 0
  01afb	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  01afe	83 c0 01	 add	 eax, 1
  01b01	50		 push	 eax
  01b02	e8 00 00 00 00	 call	 ?get_display_message_key_number@@YGHH@Z ; get_display_message_key_number
  01b07	50		 push	 eax
  01b08	8b 4d ac	 mov	 ecx, DWORD PTR _unique_id$2[ebp]
  01b0b	51		 push	 ecx
  01b0c	6a 22		 push	 34			; 00000022H
  01b0e	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  01b11	52		 push	 edx
  01b12	8b 45 f0	 mov	 eax, DWORD PTR _new_item$[ebp]
  01b15	50		 push	 eax
  01b16	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1171 : 
; 1172 : 						create_leaf_message_action (MESSAGE_PILOT_KEYBOARD, unique_id, send_pilot_keyboard_message);

  01b1b	68 00 00 00 00	 push	 OFFSET ?send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z ; send_pilot_keyboard_message
  01b20	8b 45 ac	 mov	 eax, DWORD PTR _unique_id$2[ebp]
  01b23	50		 push	 eax
  01b24	6a 22		 push	 34			; 00000022H
  01b26	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1173 : 
; 1174 : 						loop ++;

  01b2b	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  01b2e	83 c0 01	 add	 eax, 1
  01b31	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 1175 : 
; 1176 : 						count --;

  01b34	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  01b37	83 e8 01	 sub	 eax, 1
  01b3a	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN66@initialise:

; 1177 : 					}
; 1178 : 
; 1179 : 					pilot_en = get_local_entity_child_succ (pilot_en, LIST_TYPE_PILOT);

  01b3d	83 7d b8 00	 cmp	 DWORD PTR _pilot_en$5[ebp], 0
  01b41	74 0d		 je	 SHORT $LN193@initialise
  01b43	8b 45 b8	 mov	 eax, DWORD PTR _pilot_en$5[ebp]
  01b46	8b 08		 mov	 ecx, DWORD PTR [eax]
  01b48	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1243[ebp], ecx
  01b4e	eb 27		 jmp	 SHORT $LN194@initialise
$LN193@initialise:
  01b50	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01b56	81 c2 5f 02 00
	00		 add	 edx, 607		; 0000025fH
  01b5c	52		 push	 edx
  01b5d	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01b62	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01b67	50		 push	 eax
  01b68	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01b6d	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1243[ebp], 0
$LN194@initialise:
  01b77	b9 01 00 00 00	 mov	 ecx, 1
  01b7c	85 c9		 test	 ecx, ecx
  01b7e	74 0c		 je	 SHORT $LN195@initialise
  01b80	c7 85 60 ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR tv1251[ebp], 28 ; 0000001cH
  01b8a	eb 27		 jmp	 SHORT $LN196@initialise
$LN195@initialise:
  01b8c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01b92	81 c2 5f 02 00
	00		 add	 edx, 607		; 0000025fH
  01b98	52		 push	 edx
  01b99	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01b9e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01ba3	50		 push	 eax
  01ba4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01ba9	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1251[ebp], 0
$LN196@initialise:
  01bb3	6a 1c		 push	 28			; 0000001cH
  01bb5	8b 4d b8	 mov	 ecx, DWORD PTR _pilot_en$5[ebp]
  01bb8	51		 push	 ecx
  01bb9	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1243[ebp], 180
  01bc3	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1251[ebp]
  01bc9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01bd0	ff d1		 call	 ecx
  01bd2	89 45 b8	 mov	 DWORD PTR _pilot_en$5[ebp], eax

; 1180 : 				}

  01bd5	e9 e8 fd ff ff	 jmp	 $LN14@initialise
$LN15@initialise:

; 1181 : 
; 1182 : 				force_en = get_local_entity_child_succ (force_en, LIST_TYPE_FORCE);

  01bda	83 7d bc 00	 cmp	 DWORD PTR _force_en$6[ebp], 0
  01bde	74 0d		 je	 SHORT $LN197@initialise
  01be0	8b 45 bc	 mov	 eax, DWORD PTR _force_en$6[ebp]
  01be3	8b 08		 mov	 ecx, DWORD PTR [eax]
  01be5	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1263[ebp], ecx
  01beb	eb 27		 jmp	 SHORT $LN198@initialise
$LN197@initialise:
  01bed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01bf3	81 c2 62 02 00
	00		 add	 edx, 610		; 00000262H
  01bf9	52		 push	 edx
  01bfa	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01bff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01c04	50		 push	 eax
  01c05	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01c0a	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1263[ebp], 0
$LN198@initialise:
  01c14	b9 01 00 00 00	 mov	 ecx, 1
  01c19	85 c9		 test	 ecx, ecx
  01c1b	74 0c		 je	 SHORT $LN199@initialise
  01c1d	c7 85 60 ff ff
	ff 0e 00 00 00	 mov	 DWORD PTR tv1271[ebp], 14 ; 0000000eH
  01c27	eb 27		 jmp	 SHORT $LN200@initialise
$LN199@initialise:
  01c29	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01c2f	81 c2 62 02 00
	00		 add	 edx, 610		; 00000262H
  01c35	52		 push	 edx
  01c36	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01c3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01c40	50		 push	 eax
  01c41	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01c46	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1271[ebp], 0
$LN200@initialise:
  01c50	6a 0e		 push	 14			; 0000000eH
  01c52	8b 4d bc	 mov	 ecx, DWORD PTR _force_en$6[ebp]
  01c55	51		 push	 ecx
  01c56	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1263[ebp], 180
  01c60	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1271[ebp]
  01c66	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01c6d	ff d1		 call	 ecx
  01c6f	89 45 bc	 mov	 DWORD PTR _force_en$6[ebp], eax

; 1183 : 			}

  01c72	e9 a9 fc ff ff	 jmp	 $LN12@initialise
$LN13@initialise:

; 1184 : 
; 1185 : 			ASSERT (count == 0);

  01c77	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  01c7b	74 1a		 je	 SHORT $LN65@initialise
  01c7d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01c82	05 65 02 00 00	 add	 eax, 613		; 00000265H
  01c87	50		 push	 eax
  01c88	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01c8d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KBIHAIJC@count?5?$DN?$DN?50@
  01c92	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN65@initialise:

; 1186 : 		}
; 1187 : 
; 1188 : 		//
; 1189 : 		// broadcast to all pilots
; 1190 : 		//
; 1191 : 
; 1192 : 		unique_id = get_local_entity_safe_index (get_session_entity ());

  01c97	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01c9e	74 16		 je	 SHORT $LN201@initialise
  01ca0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01ca5	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  01cab	c1 f8 04	 sar	 eax, 4
  01cae	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv1285[ebp], eax
  01cb4	eb 0a		 jmp	 SHORT $LN202@initialise
$LN201@initialise:
  01cb6	c7 85 64 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv1285[ebp], -1
$LN202@initialise:
  01cc0	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv1285[ebp]
  01cc6	89 4d ac	 mov	 DWORD PTR _unique_id$2[ebp], ecx

; 1193 : 
; 1194 : 		add_message_action_to_database (new_item, loop, MESSAGE_PILOT_KEYBOARD, unique_id, DIK_0, NULL);

  01cc9	6a 00		 push	 0
  01ccb	6a 0b		 push	 11			; 0000000bH
  01ccd	8b 45 ac	 mov	 eax, DWORD PTR _unique_id$2[ebp]
  01cd0	50		 push	 eax
  01cd1	6a 22		 push	 34			; 00000022H
  01cd3	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  01cd6	51		 push	 ecx
  01cd7	8b 55 f0	 mov	 edx, DWORD PTR _new_item$[ebp]
  01cda	52		 push	 edx
  01cdb	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1195 : 
; 1196 : 		create_leaf_message_action (MESSAGE_PILOT_KEYBOARD, unique_id, send_pilot_keyboard_message);

  01ce0	68 00 00 00 00	 push	 OFFSET ?send_pilot_keyboard_message@@YGXUMESSAGE_TYPE@@@Z ; send_pilot_keyboard_message
  01ce5	8b 45 ac	 mov	 eax, DWORD PTR _unique_id$2[ebp]
  01ce8	50		 push	 eax
  01ce9	6a 22		 push	 34			; 00000022H
  01ceb	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1197 : 	}
; 1198 : 
; 1199 : 	/////////////////////////////////////////////////////////////////
; 1200 : 	//
; 1201 : 	// COMM Channels by GCsDriver  08-12-2007
; 1202 : 	//
; 1203 : 	/////////////////////////////////////////////////////////////////
; 1204 : 	{
; 1205 : 
; 1206 : 		entity
; 1207 : 			*group;
; 1208 : 
; 1209 : 		if (get_gunship_entity ())

  01cf0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  01cf7	0f 84 05 02 00
	00		 je	 $LN1@initialise

; 1210 : 		{
; 1211 : 
; 1212 : 			//
; 1213 : 			// 4 options
; 1214 : 			//
; 1215 : 
; 1216 : 			group = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_MEMBER);

  01cfd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  01d04	74 0f		 je	 SHORT $LN203@initialise
  01d06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  01d0b	8b 08		 mov	 ecx, DWORD PTR [eax]
  01d0d	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv1302[ebp], ecx
  01d13	eb 27		 jmp	 SHORT $LN204@initialise
$LN203@initialise:
  01d15	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01d1b	81 c2 84 02 00
	00		 add	 edx, 644		; 00000284H
  01d21	52		 push	 edx
  01d22	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01d27	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01d2c	50		 push	 eax
  01d2d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01d32	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1302[ebp], 0
$LN204@initialise:
  01d3c	b9 01 00 00 00	 mov	 ecx, 1
  01d41	85 c9		 test	 ecx, ecx
  01d43	74 0c		 je	 SHORT $LN205@initialise
  01d45	c7 85 60 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv1310[ebp], 25 ; 00000019H
  01d4f	eb 27		 jmp	 SHORT $LN206@initialise
$LN205@initialise:
  01d51	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_message_database@@YGXXZ@4JA
  01d57	81 c2 84 02 00
	00		 add	 edx, 644		; 00000284H
  01d5d	52		 push	 edx
  01d5e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  01d63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01d68	50		 push	 eax
  01d69	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01d6e	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1310[ebp], 0
$LN206@initialise:
  01d78	6a 19		 push	 25			; 00000019H
  01d7a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  01d80	51		 push	 ecx
  01d81	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1302[ebp], 180
  01d8b	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1310[ebp]
  01d91	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01d98	ff d1		 call	 ecx
  01d9a	89 45 a8	 mov	 DWORD PTR _group$1[ebp], eax

; 1217 : 
; 1218 : 			if (group)

  01d9d	83 7d a8 00	 cmp	 DWORD PTR _group$1[ebp], 0
  01da1	0f 84 5b 01 00
	00		 je	 $LN1@initialise

; 1219 : 			{
; 1220 : 				index = get_local_entity_index (group);

  01da7	8b 45 a8	 mov	 eax, DWORD PTR _group$1[ebp]
  01daa	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  01db0	c1 f8 04	 sar	 eax, 4
  01db3	89 45 f4	 mov	 DWORD PTR _index$[ebp], eax

; 1221 : 
; 1222 : 				sub_item = create_message_database_list (MESSAGE_CHANNEL_LIST, 0, message_list, 4, "Select Message");

  01db6	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KBDBDPPN@Select?5Message@
  01dbb	6a 04		 push	 4
  01dbd	68 00 00 00 00	 push	 OFFSET ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
  01dc2	6a 00		 push	 0
  01dc4	6a 23		 push	 35			; 00000023H
  01dc6	e8 00 00 00 00	 call	 ?create_message_database_list@@YGPAUMESSAGE_ACTION_TYPE@@W4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@ZHPBD@Z ; create_message_database_list
  01dcb	89 45 ec	 mov	 DWORD PTR _sub_item$[ebp], eax

; 1223 : 
; 1224 : 
; 1225 : 				if (get_sound_channel_muted (SOUND_CHANNEL_AIR_TRAFFIC_CONTROLLER))

  01dce	6a 04		 push	 4
  01dd0	e8 00 00 00 00	 call	 ?get_sound_channel_muted@@YGHH@Z ; get_sound_channel_muted
  01dd5	85 c0		 test	 eax, eax
  01dd7	74 1a		 je	 SHORT $LN74@initialise

; 1226 : 				{
; 1227 : 					add_message_action_to_database (sub_item, 0, MESSAGE_ATC,	index, DIK_1, "Air Traffic Controller OFF");

  01dd9	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@IDGKFDNO@Air?5Traffic?5Controller?5OFF@
  01dde	6a 02		 push	 2
  01de0	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01de3	50		 push	 eax
  01de4	6a 24		 push	 36			; 00000024H
  01de6	6a 00		 push	 0
  01de8	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01deb	51		 push	 ecx
  01dec	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1228 : 				}else{

  01df1	eb 18		 jmp	 SHORT $LN75@initialise
$LN74@initialise:

; 1229 : 					add_message_action_to_database (sub_item, 0, MESSAGE_ATC,	index, DIK_1, "Air Traffic Controller ON");

  01df3	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OOLAHHLK@Air?5Traffic?5Controller?5ON@
  01df8	6a 02		 push	 2
  01dfa	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01dfd	50		 push	 eax
  01dfe	6a 24		 push	 36			; 00000024H
  01e00	6a 00		 push	 0
  01e02	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01e05	51		 push	 ecx
  01e06	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN75@initialise:

; 1230 : 				}
; 1231 : 				if (get_sound_channel_muted (SOUND_CHANNEL_FORWARD_AIR_CONTROLLER))

  01e0b	6a 05		 push	 5
  01e0d	e8 00 00 00 00	 call	 ?get_sound_channel_muted@@YGHH@Z ; get_sound_channel_muted
  01e12	85 c0		 test	 eax, eax
  01e14	74 1a		 je	 SHORT $LN76@initialise

; 1232 : 				{
; 1233 : 					add_message_action_to_database (sub_item, 1, MESSAGE_FAC,	index, DIK_2, "Forward Air Controller OFF");

  01e16	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FOMDKOAC@Forward?5Air?5Controller?5OFF@
  01e1b	6a 03		 push	 3
  01e1d	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01e20	50		 push	 eax
  01e21	6a 25		 push	 37			; 00000025H
  01e23	6a 01		 push	 1
  01e25	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01e28	51		 push	 ecx
  01e29	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1234 : 				}else{

  01e2e	eb 18		 jmp	 SHORT $LN77@initialise
$LN76@initialise:

; 1235 : 					add_message_action_to_database (sub_item, 1, MESSAGE_FAC,	index, DIK_2, "Forward Air Controller ON");

  01e30	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EKDBGCNF@Forward?5Air?5Controller?5ON@
  01e35	6a 03		 push	 3
  01e37	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01e3a	50		 push	 eax
  01e3b	6a 25		 push	 37			; 00000025H
  01e3d	6a 01		 push	 1
  01e3f	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01e42	51		 push	 ecx
  01e43	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN77@initialise:

; 1236 : 				}
; 1237 : 				if (get_sound_channel_muted (SOUND_CHANNEL_GROUND_CONTROLLER))

  01e48	6a 06		 push	 6
  01e4a	e8 00 00 00 00	 call	 ?get_sound_channel_muted@@YGHH@Z ; get_sound_channel_muted
  01e4f	85 c0		 test	 eax, eax
  01e51	74 1a		 je	 SHORT $LN78@initialise

; 1238 : 				{
; 1239 : 					add_message_action_to_database (sub_item, 2, MESSAGE_GC,	index, DIK_3, "Ground Controller OFF");

  01e53	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OOGCNBNG@Ground?5Controller?5OFF@
  01e58	6a 04		 push	 4
  01e5a	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01e5d	50		 push	 eax
  01e5e	6a 26		 push	 38			; 00000026H
  01e60	6a 02		 push	 2
  01e62	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01e65	51		 push	 ecx
  01e66	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1240 : 				}else{

  01e6b	eb 18		 jmp	 SHORT $LN79@initialise
$LN78@initialise:

; 1241 : 					add_message_action_to_database (sub_item, 2, MESSAGE_GC,	index, DIK_3, "Ground Controller ON");

  01e6d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DLNGJEKP@Ground?5Controller?5ON@
  01e72	6a 04		 push	 4
  01e74	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01e77	50		 push	 eax
  01e78	6a 26		 push	 38			; 00000026H
  01e7a	6a 02		 push	 2
  01e7c	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01e7f	51		 push	 ecx
  01e80	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN79@initialise:

; 1242 : 				}
; 1243 : 				if (get_sound_channel_muted (SOUND_CHANNEL_WINGMAN))

  01e85	6a 03		 push	 3
  01e87	e8 00 00 00 00	 call	 ?get_sound_channel_muted@@YGHH@Z ; get_sound_channel_muted
  01e8c	85 c0		 test	 eax, eax
  01e8e	74 1a		 je	 SHORT $LN80@initialise

; 1244 : 				{
; 1245 : 					add_message_action_to_database (sub_item, 3, MESSAGE_WM,	index, DIK_4, "Wingmen OFF");

  01e90	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GAGADMJM@Wingmen?5OFF@
  01e95	6a 05		 push	 5
  01e97	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01e9a	50		 push	 eax
  01e9b	6a 27		 push	 39			; 00000027H
  01e9d	6a 03		 push	 3
  01e9f	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01ea2	51		 push	 ecx
  01ea3	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database

; 1246 : 				}else{

  01ea8	eb 18		 jmp	 SHORT $LN81@initialise
$LN80@initialise:

; 1247 : 					add_message_action_to_database (sub_item, 3, MESSAGE_WM,	index, DIK_4, "Wingmen ON");

  01eaa	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IHNECHDC@Wingmen?5ON@
  01eaf	6a 05		 push	 5
  01eb1	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01eb4	50		 push	 eax
  01eb5	6a 27		 push	 39			; 00000027H
  01eb7	6a 03		 push	 3
  01eb9	8b 4d ec	 mov	 ecx, DWORD PTR _sub_item$[ebp]
  01ebc	51		 push	 ecx
  01ebd	e8 00 00 00 00	 call	 ?add_message_action_to_database@@YGXPAUMESSAGE_ACTION_TYPE@@HW4MESSAGE_CATEGORIES@@HHPBD@Z ; add_message_action_to_database
$LN81@initialise:

; 1248 : 				}
; 1249 : 				create_leaf_message_action (MESSAGE_ATC, 	index, send_channel_message);

  01ec2	68 00 00 00 00	 push	 OFFSET ?send_channel_message@@YGXUMESSAGE_TYPE@@@Z ; send_channel_message
  01ec7	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01eca	50		 push	 eax
  01ecb	6a 24		 push	 36			; 00000024H
  01ecd	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1250 : 				create_leaf_message_action (MESSAGE_FAC, 	index, send_channel_message);

  01ed2	68 00 00 00 00	 push	 OFFSET ?send_channel_message@@YGXUMESSAGE_TYPE@@@Z ; send_channel_message
  01ed7	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01eda	50		 push	 eax
  01edb	6a 25		 push	 37			; 00000025H
  01edd	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1251 : 				create_leaf_message_action (MESSAGE_GC,	index, send_channel_message);

  01ee2	68 00 00 00 00	 push	 OFFSET ?send_channel_message@@YGXUMESSAGE_TYPE@@@Z ; send_channel_message
  01ee7	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01eea	50		 push	 eax
  01eeb	6a 26		 push	 38			; 00000026H
  01eed	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action

; 1252 : 				create_leaf_message_action (MESSAGE_WM,	index, send_channel_message);

  01ef2	68 00 00 00 00	 push	 OFFSET ?send_channel_message@@YGXUMESSAGE_TYPE@@@Z ; send_channel_message
  01ef7	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  01efa	50		 push	 eax
  01efb	6a 27		 push	 39			; 00000027H
  01efd	e8 00 00 00 00	 call	 ?create_leaf_message_action@@YGXW4MESSAGE_CATEGORIES@@HP6GXUMESSAGE_TYPE@@@Z@Z ; create_leaf_message_action
$LN1@initialise:

; 1253 : 			}
; 1254 : 		}
; 1255 : 	}
; 1256 : 	// GCsDriver  08-12-2007
; 1257 : 
; 1258 : }

  01f02	5f		 pop	 edi
  01f03	5e		 pop	 esi
  01f04	5b		 pop	 ebx
  01f05	8b e5		 mov	 esp, ebp
  01f07	5d		 pop	 ebp
  01f08	c3		 ret	 0
?initialise_message_database@@YGXXZ ENDP		; initialise_message_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?deinitialise_messages@@YGXXZ
_TEXT	SEGMENT
_loop$1 = -12						; size = 4
_message_action$ = -8					; size = 4
_destroy_message_action$ = -4				; size = 4
?deinitialise_messages@@YGXXZ PROC			; deinitialise_messages, COMDAT

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 250  : 
; 251  : 	message_action_type
; 252  : 		*destroy_message_action,
; 253  : 		*message_action;
; 254  : 
; 255  : 	message_action = message_database;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A
  0000e	89 45 f8	 mov	 DWORD PTR _message_action$[ebp], eax
$LN2@deinitiali:

; 256  : 
; 257  : 	while (message_action)

  00011	83 7d f8 00	 cmp	 DWORD PTR _message_action$[ebp], 0
  00015	0f 84 b0 00 00
	00		 je	 $LN3@deinitiali

; 258  : 	{
; 259  : 
; 260  : 		destroy_message_action = message_action;

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _message_action$[ebp]
  0001e	89 45 fc	 mov	 DWORD PTR _destroy_message_action$[ebp], eax

; 261  : 
; 262  : 		message_action = message_action->next;

  00021	8b 45 f8	 mov	 eax, DWORD PTR _message_action$[ebp]
  00024	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00027	89 4d f8	 mov	 DWORD PTR _message_action$[ebp], ecx

; 263  : 
; 264  : 		if (destroy_message_action->actions)

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  0002d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00031	74 0c		 je	 SHORT $LN7@deinitiali

; 265  : 		{
; 266  : 
; 267  : 			free_mem (destroy_message_action->actions);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  00036	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN7@deinitiali:

; 268  : 		}
; 269  : 
; 270  : 		if (destroy_message_action->keycodes)

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  00042	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00046	74 0c		 je	 SHORT $LN8@deinitiali

; 271  : 		{
; 272  : 
; 273  : 			free_mem (destroy_message_action->keycodes);

  00048	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  0004b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN8@deinitiali:

; 274  : 		}
; 275  : 
; 276  : 		if (destroy_message_action->title)

  00054	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  00057	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0005b	74 0c		 je	 SHORT $LN9@deinitiali

; 277  : 		{
; 278  : 
; 279  : 			free_mem (destroy_message_action->title);

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  00060	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN9@deinitiali:

; 280  : 		}
; 281  : 
; 282  : 		if (destroy_message_action->action_text)

  00069	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  0006c	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00070	74 4b		 je	 SHORT $LN10@deinitiali

; 283  : 		{
; 284  : 			int
; 285  : 				loop;
; 286  : 
; 287  : 			for (loop = 0; loop < destroy_message_action->number_of_actions; loop ++)

  00072	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$1[ebp], 0
  00079	eb 09		 jmp	 SHORT $LN6@deinitiali
$LN4@deinitiali:
  0007b	8b 45 f4	 mov	 eax, DWORD PTR _loop$1[ebp]
  0007e	83 c0 01	 add	 eax, 1
  00081	89 45 f4	 mov	 DWORD PTR _loop$1[ebp], eax
$LN6@deinitiali:
  00084	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  00087	8b 4d f4	 mov	 ecx, DWORD PTR _loop$1[ebp]
  0008a	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0008c	7d 23		 jge	 SHORT $LN5@deinitiali

; 288  : 			{
; 289  : 				if (destroy_message_action->action_text [loop])

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  00091	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00094	8b 55 f4	 mov	 edx, DWORD PTR _loop$1[ebp]
  00097	83 3c 91 00	 cmp	 DWORD PTR [ecx+edx*4], 0
  0009b	74 12		 je	 SHORT $LN11@deinitiali

; 290  : 				{
; 291  : 					free_mem (destroy_message_action->action_text [loop]);

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  000a0	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a3	8b 55 f4	 mov	 edx, DWORD PTR _loop$1[ebp]
  000a6	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN11@deinitiali:

; 292  : 				}
; 293  : 			}

  000af	eb ca		 jmp	 SHORT $LN4@deinitiali
$LN5@deinitiali:

; 294  : 
; 295  : 			free_mem (destroy_message_action->action_text);

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  000b4	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN10@deinitiali:

; 296  : 		}
; 297  : 
; 298  : 		free_mem (destroy_message_action);

  000bd	8b 45 fc	 mov	 eax, DWORD PTR _destroy_message_action$[ebp]
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 299  : 	}

  000c6	e9 46 ff ff ff	 jmp	 $LN2@deinitiali
$LN3@deinitiali:

; 300  : 
; 301  : 	message_database = NULL;

  000cb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A, 0

; 302  : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
?deinitialise_messages@@YGXXZ ENDP			; deinitialise_messages
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?initialise_messages@@YGXXZ
_TEXT	SEGMENT
?initialise_messages@@YGXXZ PROC			; initialise_messages, COMDAT

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 238  : 
; 239  : 	message_database = NULL;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?message_database@@3PAUMESSAGE_ACTION_TYPE@@A, 0

; 240  : 
; 241  : 	initialise_message_database ();

  00013	e8 00 00 00 00	 call	 ?initialise_message_database@@YGXXZ ; initialise_message_database

; 242  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?initialise_messages@@YGXXZ ENDP			; initialise_messages
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv79 = -88						; size = 4
tv88 = -84						; size = 4
tv71 = -84						; size = 4
_group$ = -16						; size = 4
_en$ = -12						; size = 4
_message$ = -8						; size = 8
_ev$ = 8						; size = 4
?comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z PROC	; comms_shortcut_attack_my_target, COMDAT

; 1788 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1789 : 	message_type
; 1790 : 		message;
; 1791 : 
; 1792 : 	entity
; 1793 : 		*en,
; 1794 : 		*group;
; 1795 : 
; 1796 : 	en = get_gunship_entity ();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0000e	89 45 f4	 mov	 DWORD PTR _en$[ebp], eax

; 1797 : 
; 1798 : 	if (en)

  00011	83 7d f4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00015	0f 84 b8 00 00
	00		 je	 $LN1@comms_shor

; 1799 : 	{
; 1800 : 		group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  0001b	83 7d f4 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001f	74 0a		 je	 SHORT $LN4@comms_shor
  00021	8b 45 f4	 mov	 eax, DWORD PTR _en$[ebp]
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d ac	 mov	 DWORD PTR tv71[ebp], ecx
  00029	eb 21		 jmp	 SHORT $LN5@comms_shor
$LN4@comms_shor:
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z@4JA
  00031	83 c2 0c	 add	 edx, 12			; 0000000cH
  00034	52		 push	 edx
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00045	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN5@comms_shor:
  0004c	b9 01 00 00 00	 mov	 ecx, 1
  00051	85 c9		 test	 ecx, ecx
  00053	74 09		 je	 SHORT $LN6@comms_shor
  00055	c7 45 a8 19 00
	00 00		 mov	 DWORD PTR tv79[ebp], 25	; 00000019H
  0005c	eb 21		 jmp	 SHORT $LN7@comms_shor
$LN6@comms_shor:
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z@4JA
  00064	83 c2 0c	 add	 edx, 12			; 0000000cH
  00067	52		 push	 edx
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00078	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN7@comms_shor:
  0007f	6a 19		 push	 25			; 00000019H
  00081	8b 4d f4	 mov	 ecx, DWORD PTR _en$[ebp]
  00084	51		 push	 ecx
  00085	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  0008c	8b 45 a8	 mov	 eax, DWORD PTR tv79[ebp]
  0008f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00096	ff d1		 call	 ecx
  00098	89 45 f0	 mov	 DWORD PTR _group$[ebp], eax

; 1801 : 
; 1802 : 		message.type = MESSAGE_WINGMAN_ATTACK_MY_TARGET;

  0009b	c7 45 f8 11 00
	00 00		 mov	 DWORD PTR _message$[ebp], 17 ; 00000011H

; 1803 : 		message.value = get_local_entity_safe_index (group);

  000a2	83 7d f0 00	 cmp	 DWORD PTR _group$[ebp], 0
  000a6	74 11		 je	 SHORT $LN8@comms_shor
  000a8	8b 45 f0	 mov	 eax, DWORD PTR _group$[ebp]
  000ab	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000b1	c1 f8 04	 sar	 eax, 4
  000b4	89 45 ac	 mov	 DWORD PTR tv88[ebp], eax
  000b7	eb 07		 jmp	 SHORT $LN9@comms_shor
$LN8@comms_shor:
  000b9	c7 45 ac ff ff
	ff ff		 mov	 DWORD PTR tv88[ebp], -1
$LN9@comms_shor:
  000c0	8b 4d ac	 mov	 ecx, DWORD PTR tv88[ebp]
  000c3	89 4d fc	 mov	 DWORD PTR _message$[ebp+4], ecx

; 1804 : 
; 1805 : 		send_group_message (message);

  000c6	8b 45 fc	 mov	 eax, DWORD PTR _message$[ebp+4]
  000c9	50		 push	 eax
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _message$[ebp]
  000cd	51		 push	 ecx
  000ce	e8 00 00 00 00	 call	 ?send_group_message@@YGXUMESSAGE_TYPE@@@Z ; send_group_message
$LN1@comms_shor:

; 1806 : 	}
; 1807 : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
?comms_shortcut_attack_my_target@@YGXPAUEVENT@@@Z ENDP	; comms_shortcut_attack_my_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z
_TEXT	SEGMENT
_length$ = -16						; size = 4
_parsed_message$ = -12					; size = 4
_pm$ = -8						; size = 4
_kb$ = -4						; size = 4
_sender$ = 8						; size = 4
_target$ = 12						; size = 4
_type$ = 16						; size = 4
_text$ = 20						; size = 4
?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z PROC ; send_text_message, COMDAT

; 1510 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1511 : 	const char
; 1512 : 		*kb;
; 1513 : 	char
; 1514 : 		*pm,
; 1515 : 		*parsed_message;
; 1516 : 
; 1517 : 	int
; 1518 : 		length;
; 1519 : 
; 1520 : 	parsed_message = NULL;

  00009	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _parsed_message$[ebp], 0

; 1521 : 
; 1522 : 	if (message_text_type_send_string (type))

  00010	8b 45 10	 mov	 eax, DWORD PTR _type$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?message_text_type_send_string@@YGHW4MESSAGE_TEXT_TYPES@@@Z ; message_text_type_send_string
  00019	85 c0		 test	 eax, eax
  0001b	0f 84 9c 00 00
	00		 je	 $LN4@send_text_

; 1523 : 	{
; 1524 : 		ASSERT (text);

  00021	83 7d 14 00	 cmp	 DWORD PTR _text$[ebp], 0
  00025	75 18		 jne	 SHORT $LN6@send_text_
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z@4JA
  0002c	83 c0 0e	 add	 eax, 14			; 0000000eH
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_04CIMGMMMG@text@
  0003a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@send_text_:

; 1525 : 
; 1526 : 		//
; 1527 : 		// strip out any illegal characters
; 1528 : 		//
; 1529 : 
; 1530 : 		if (strlen (text) > 0)

  0003f	8b 45 14	 mov	 eax, DWORD PTR _text$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _strlen
  00048	83 c4 04	 add	 esp, 4
  0004b	85 c0		 test	 eax, eax
  0004d	76 6a		 jbe	 SHORT $LN7@send_text_

; 1531 : 		{
; 1532 : 			parsed_message = (char *) malloc_fast_mem (strlen (text) + 1);

  0004f	8b 45 14	 mov	 eax, DWORD PTR _text$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 _strlen
  00058	83 c4 04	 add	 esp, 4
  0005b	83 c0 01	 add	 eax, 1
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00064	89 45 f4	 mov	 DWORD PTR _parsed_message$[ebp], eax

; 1533 : 
; 1534 : 			pm = parsed_message;

  00067	8b 45 f4	 mov	 eax, DWORD PTR _parsed_message$[ebp]
  0006a	89 45 f8	 mov	 DWORD PTR _pm$[ebp], eax

; 1535 : 
; 1536 : 			kb = text;

  0006d	8b 45 14	 mov	 eax, DWORD PTR _text$[ebp]
  00070	89 45 fc	 mov	 DWORD PTR _kb$[ebp], eax

; 1537 : 
; 1538 : 			length = 0;

  00073	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _length$[ebp], 0
$LN2@send_text_:

; 1539 : 
; 1540 : 			while ((*kb) && (length < MAX_KEYBOARD_MESSAGE_LENGTH))

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _kb$[ebp]
  0007d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00080	85 c9		 test	 ecx, ecx
  00082	74 2d		 je	 SHORT $LN3@send_text_
  00084	83 7d f0 60	 cmp	 DWORD PTR _length$[ebp], 96 ; 00000060H
  00088	7d 27		 jge	 SHORT $LN3@send_text_

; 1541 : 			{
; 1542 : 				//DEBUG//if (*kb < 128)
; 1543 : 				{
; 1544 : 					*pm = *kb;

  0008a	8b 45 f8	 mov	 eax, DWORD PTR _pm$[ebp]
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _kb$[ebp]
  00090	8a 11		 mov	 dl, BYTE PTR [ecx]
  00092	88 10		 mov	 BYTE PTR [eax], dl

; 1545 : 
; 1546 : 					pm ++;

  00094	8b 45 f8	 mov	 eax, DWORD PTR _pm$[ebp]
  00097	83 c0 01	 add	 eax, 1
  0009a	89 45 f8	 mov	 DWORD PTR _pm$[ebp], eax

; 1547 : 				}
; 1548 : 
; 1549 : 				kb ++;

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _kb$[ebp]
  000a0	83 c0 01	 add	 eax, 1
  000a3	89 45 fc	 mov	 DWORD PTR _kb$[ebp], eax

; 1550 : 
; 1551 : 				length ++;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _length$[ebp]
  000a9	83 c0 01	 add	 eax, 1
  000ac	89 45 f0	 mov	 DWORD PTR _length$[ebp], eax

; 1552 : 			}

  000af	eb c9		 jmp	 SHORT $LN2@send_text_
$LN3@send_text_:

; 1553 : 
; 1554 : 			//
; 1555 : 			// terminate new string
; 1556 : 			//
; 1557 : 
; 1558 : 			*pm = '\0';	//NULL;

  000b1	8b 45 f8	 mov	 eax, DWORD PTR _pm$[ebp]
  000b4	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1559 : 		}
; 1560 : 		else

  000b7	eb 02		 jmp	 SHORT $LN8@send_text_
$LN7@send_text_:

; 1561 : 		{
; 1562 : 			//
; 1563 : 			// valid string, but zero length - abort send
; 1564 : 			//
; 1565 : 
; 1566 : 			return;

  000b9	eb 7d		 jmp	 SHORT $LN1@send_text_
$LN8@send_text_:

; 1567 : 		}
; 1568 : 	}
; 1569 : 	else

  000bb	eb 1e		 jmp	 SHORT $LN5@send_text_
$LN4@send_text_:

; 1570 : 	{
; 1571 : 		ASSERT (text == NULL);

  000bd	83 7d 14 00	 cmp	 DWORD PTR _text$[ebp], 0
  000c1	74 18		 je	 SHORT $LN5@send_text_
  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z@4JA
  000c8	83 c0 3d	 add	 eax, 61			; 0000003dH
  000cb	50		 push	 eax
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ONAJEKJN@text?5?$DN?$DN?5NULL@
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@send_text_:

; 1572 : 	}
; 1573 : 
; 1574 : 	//
; 1575 : 	// send message
; 1576 : 	//
; 1577 : 
; 1578 : 	transmit_entity_comms_message (ENTITY_COMMS_PILOT_COMMUNICATION, sender, target, type, parsed_message);

  000db	8b 45 f4	 mov	 eax, DWORD PTR _parsed_message$[ebp]
  000de	50		 push	 eax
  000df	8b 4d 10	 mov	 ecx, DWORD PTR _type$[ebp]
  000e2	51		 push	 ecx
  000e3	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  000e6	52		 push	 edx
  000e7	8b 45 08	 mov	 eax, DWORD PTR _sender$[ebp]
  000ea	50		 push	 eax
  000eb	6a 1f		 push	 31			; 0000001fH
  000ed	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  000f2	83 c4 14	 add	 esp, 20			; 00000014H

; 1579 : 
; 1580 : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  000f5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  000fc	75 2b		 jne	 SHORT $LN10@send_text_

; 1581 : 	{
; 1582 : 		if (message_text_info [type].echo)

  000fe	8b 45 10	 mov	 eax, DWORD PTR _type$[ebp]
  00101	8a 0c c5 00 00
	00 00		 mov	 cl, BYTE PTR ?message_text_info@@3QBUMESSAGE_TEXT_INFO_TYPE@@B[eax*8]
  00108	d0 e9		 shr	 cl, 1
  0010a	80 e1 01	 and	 cl, 1
  0010d	0f b6 d1	 movzx	 edx, cl
  00110	85 d2		 test	 edx, edx
  00112	74 15		 je	 SHORT $LN10@send_text_

; 1583 : 		{
; 1584 : 			set_incoming_message (sender, target, type, parsed_message);

  00114	8b 45 f4	 mov	 eax, DWORD PTR _parsed_message$[ebp]
  00117	50		 push	 eax
  00118	8b 4d 10	 mov	 ecx, DWORD PTR _type$[ebp]
  0011b	51		 push	 ecx
  0011c	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  0011f	52		 push	 edx
  00120	8b 45 08	 mov	 eax, DWORD PTR _sender$[ebp]
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 ?set_incoming_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PAD@Z ; set_incoming_message
$LN10@send_text_:

; 1585 : 		}
; 1586 : 	}
; 1587 : 
; 1588 : 	if (parsed_message)

  00129	83 7d f4 00	 cmp	 DWORD PTR _parsed_message$[ebp], 0
  0012d	74 09		 je	 SHORT $LN1@send_text_

; 1589 : 	{
; 1590 : 		free_mem (parsed_message);

  0012f	8b 45 f4	 mov	 eax, DWORD PTR _parsed_message$[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN1@send_text_:

; 1591 : 	}
; 1592 : }

  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	5b		 pop	 ebx
  0013b	8b e5		 mov	 esp, ebp
  0013d	5d		 pop	 ebp
  0013e	c2 10 00	 ret	 16			; 00000010H
?send_text_message@@YGXPAUENTITY@@0W4MESSAGE_TEXT_TYPES@@PBD@Z ENDP ; send_text_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?set_message_events@@YGXXZ
_TEXT	SEGMENT
?set_message_events@@YGXXZ PROC				; set_message_events, COMDAT

; 437  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 438  : 
; 439  : 	set_event (DIK_1, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00009	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0000e	6a 02		 push	 2
  00010	6a 00		 push	 0
  00012	6a 02		 push	 2
  00014	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 440  : 	set_event (DIK_2, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00019	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0001e	6a 02		 push	 2
  00020	6a 00		 push	 0
  00022	6a 03		 push	 3
  00024	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 441  : 	set_event (DIK_3, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00029	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0002e	6a 02		 push	 2
  00030	6a 00		 push	 0
  00032	6a 04		 push	 4
  00034	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 442  : 	set_event (DIK_4, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00039	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0003e	6a 02		 push	 2
  00040	6a 00		 push	 0
  00042	6a 05		 push	 5
  00044	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 443  : 	set_event (DIK_5, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00049	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0004e	6a 02		 push	 2
  00050	6a 00		 push	 0
  00052	6a 06		 push	 6
  00054	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 444  : 	set_event (DIK_6, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00059	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0005e	6a 02		 push	 2
  00060	6a 00		 push	 0
  00062	6a 07		 push	 7
  00064	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 445  : 	set_event (DIK_7, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00069	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0006e	6a 02		 push	 2
  00070	6a 00		 push	 0
  00072	6a 08		 push	 8
  00074	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 446  : 	set_event (DIK_8, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00079	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0007e	6a 02		 push	 2
  00080	6a 00		 push	 0
  00082	6a 09		 push	 9
  00084	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 447  : 	set_event (DIK_9, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00089	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0008e	6a 02		 push	 2
  00090	6a 00		 push	 0
  00092	6a 0a		 push	 10			; 0000000aH
  00094	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 448  : 	set_event (DIK_0, MODIFIER_NONE, KEY_STATE_DOWN, message_function);

  00099	68 00 00 00 00	 push	 OFFSET ?message_function@@YGXPAUEVENT@@@Z ; message_function
  0009e	6a 02		 push	 2
  000a0	6a 00		 push	 0
  000a2	6a 0b		 push	 11			; 0000000bH
  000a4	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 449  : 
; 450  : 	set_event (DIK_ESCAPE, MODIFIER_NONE, KEY_STATE_DOWN, stop_messaging_system);

  000a9	68 00 00 00 00	 push	 OFFSET ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system
  000ae	6a 02		 push	 2
  000b0	6a 00		 push	 0
  000b2	6a 01		 push	 1
  000b4	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 451  : }

  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	5b		 pop	 ebx
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
?set_message_events@@YGXXZ ENDP				; set_message_events
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?start_messaging_system@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_start_message$ = -8					; size = 8
_ev$ = 8						; size = 4
?start_messaging_system@@YGXPAUEVENT@@@Z PROC		; start_messaging_system, COMDAT

; 309  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 310  : 	message_type
; 311  : 		start_message;
; 312  : 
; 313  : 	ASSERT (get_pilot_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00010	75 18		 jne	 SHORT $LN2@start_mess
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??start_messaging_system@@YGXPAUEVENT@@@Z@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KOLCCDEB@get_pilot_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@start_mess:

; 314  : 
; 315  : 	if (!in_flight_messages)

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_messages@@3HA, 0
  00031	75 79		 jne	 SHORT $LN1@start_mess

; 316  : 	{
; 317  : 		set_view_menu_display_visible_status (FALSE);

  00033	6a 00		 push	 0
  00035	e8 00 00 00 00	 call	 ?set_view_menu_display_visible_status@@YGXH@Z ; set_view_menu_display_visible_status

; 318  : 
; 319  : 		initialise_messages ();

  0003a	e8 00 00 00 00	 call	 ?initialise_messages@@YGXXZ ; initialise_messages

; 320  : 
; 321  : 		memset (keyboard_message, 0, sizeof (keyboard_message));

  0003f	6a 60		 push	 96			; 00000060H
  00041	6a 00		 push	 0
  00043	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  00048	e8 00 00 00 00	 call	 _memset
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 322  : 
; 323  : 		in_flight_messages = TRUE;

  00050	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?in_flight_messages@@3HA, 1

; 324  : 
; 325  : 		message_destination.type = MESSAGE_NONE;

  0005a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A, 0

; 326  : 		message_destination.value = 0;

  00064	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A+4, 0

; 327  : 
; 328  : 		current_message.type = MESSAGE_NONE;

  0006e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A, 0

; 329  : 		current_message.value = 0;

  00078	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4, 0

; 330  : 
; 331  : 		push_event_overlay (set_message_events, "message events");

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FOFPIGJL@message?5events@
  00087	68 00 00 00 00	 push	 OFFSET ?set_message_events@@YGXXZ ; set_message_events
  0008c	e8 00 00 00 00	 call	 ?push_event_overlay@@YGXP6GXXZPBD@Z ; push_event_overlay

; 332  : 
; 333  : 		start_message.type = MESSAGE_DESTINATION_LIST;

  00091	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _start_message$[ebp], 1

; 334  : 		start_message.value = 0;

  00098	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _start_message$[ebp+4], 0

; 335  : 
; 336  : 		message_list (start_message);

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _start_message$[ebp+4]
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _start_message$[ebp]
  000a6	51		 push	 ecx
  000a7	e8 00 00 00 00	 call	 ?message_list@@YGXUMESSAGE_TYPE@@@Z ; message_list
$LN1@start_mess:

; 337  : 	}
; 338  : }

  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 04 00	 ret	 4
?start_messaging_system@@YGXPAUEVENT@@@Z ENDP		; start_messaging_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?stop_messaging_system@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?stop_messaging_system@@YGXPAUEVENT@@@Z PROC		; stop_messaging_system, COMDAT

; 345  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 346  : 	if (in_flight_messages)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_messages@@3HA, 0
  00010	74 2d		 je	 SHORT $LN1@stop_messa

; 347  : 	{
; 348  : 		message_destination.type = MESSAGE_NONE;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A, 0

; 349  : 		message_destination.value = 0;

  0001c	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A+4, 0

; 350  : 
; 351  : 		pop_event (set_message_events);

  00026	68 00 00 00 00	 push	 OFFSET ?set_message_events@@YGXXZ ; set_message_events
  0002b	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 352  : 
; 353  : 		in_flight_messages = FALSE;

  00030	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?in_flight_messages@@3HA, 0

; 354  : 
; 355  : 		deinitialise_messages ();

  0003a	e8 00 00 00 00	 call	 ?deinitialise_messages@@YGXXZ ; deinitialise_messages
$LN1@stop_messa:

; 356  : 	}
; 357  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?stop_messaging_system@@YGXPAUEVENT@@@Z ENDP		; stop_messaging_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?display_in_flight_outgoing_messages@@YGXXZ
_TEXT	SEGMENT
tv259 = -660						; size = 4
tv251 = -656						; size = 4
tv448 = -652						; size = 4
tv424 = -652						; size = 4
tv346 = -652						; size = 4
tv322 = -652						; size = 4
tv300 = -652						; size = 4
tv279 = -652						; size = 4
tv238 = -652						; size = 4
tv216 = -652						; size = 4
tv195 = -652						; size = 4
tv440 = -648						; size = 4
tv417 = -648						; size = 4
tv374 = -648						; size = 4
tv362 = -648						; size = 4
tv338 = -648						; size = 4
tv314 = -648						; size = 4
tv292 = -648						; size = 4
tv272 = -648						; size = 4
tv230 = -648						; size = 4
tv208 = -648						; size = 4
tv188 = -648						; size = 4
tv181 = -648						; size = 4
tv173 = -648						; size = 4
_pilot_id$1 = -516					; size = 4
_pilot$2 = -512						; size = 4
_wingman_index$3 = -508					; size = 4
_wingman$4 = -504					; size = 4
_pilot$5 = -500						; size = 4
_group$6 = -496						; size = 4
_message_action$7 = -492				; size = 4
_message_name$ = -488					; size = 4
_pilot_name$ = -484					; size = 266
_s$ = -216						; size = 200
_indent$ = -16						; size = 4
_y$ = -12						; size = 4
_loop$ = -8						; size = 4
_index$ = -4						; size = 4
?display_in_flight_outgoing_messages@@YGXXZ PROC	; display_in_flight_outgoing_messages, COMDAT

; 1960 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 02 00
	00		 sub	 esp, 660		; 00000294H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1961 : 	int
; 1962 : 		index,
; 1963 : 		loop;
; 1964 : 
; 1965 : 	float
; 1966 : 		y,
; 1967 : 		indent;
; 1968 : 
; 1969 : 	char
; 1970 : 		s [200],
; 1971 : 		pilot_name [STRING_TYPE_PLAYERS_NAME_MAX_LENGTH + 10],
; 1972 : 		*message_name;
; 1973 : 
; 1974 : 	static float
; 1975 : 		flash_timer = 0.0;
; 1976 : 
; 1977 : 	if (in_flight_messages)

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_messages@@3HA, 0
  00013	0f 84 be 0b 00
	00		 je	 $LN9@display_in

; 1978 : 	{
; 1979 : 		set_ui_font_type (UI_FONT_ARIAL_16);

  00019	6a 03		 push	 3
  0001b	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 1980 : 
; 1981 : 		indent = ui_get_string_length ("88.--");

  00020	68 00 00 00 00	 push	 OFFSET ??_C@_05GHBHHPIK@88?4?9?9@
  00025	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  0002a	d9 5d f0	 fstp	 DWORD PTR _indent$[ebp]

; 1982 : 
; 1983 : 		//
; 1984 : 		// show message list
; 1985 : 		//
; 1986 : 
; 1987 : 		y = ui_get_font_height () + 2 + 2;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00032	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00035	83 c1 04	 add	 ecx, 4
  00038	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0003c	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 1988 : 
; 1989 : 		if (get_message_keyboard_input (current_message))

  00041	a1 04 00 00 00	 mov	 eax, DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A+4
  00046	50		 push	 eax
  00047	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_message@@3UMESSAGE_TYPE@@A
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 ?get_message_keyboard_input@@YGHUMESSAGE_TYPE@@@Z ; get_message_keyboard_input
  00053	85 c0		 test	 eax, eax
  00055	0f 84 c8 00 00
	00		 je	 $LN10@display_in

; 1990 : 		{
; 1991 : 			//
; 1992 : 			// Show user message
; 1993 : 			//
; 1994 : 
; 1995 : 			if (flash_timer < 0.5)

  0005b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?flash_timer@?1??display_in_flight_outgoing_messages@@YGXXZ@4MA
  00063	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0006b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0006f	76 26		 jbe	 SHORT $LN12@display_in

; 1996 : 			{
; 1997 : 				sprintf (s, "%s : %s_", get_trans ("Enter Message"), keyboard_message);

  00071	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OHJDBNJC@Enter?5Message@
  0007b	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00080	50		 push	 eax
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_08KEKKEAAD@?$CFs?5?3?5?$CFs_@
  00086	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _sprintf
  00092	83 c4 10	 add	 esp, 16			; 00000010H

; 1998 : 			}
; 1999 : 			else

  00095	eb 24		 jmp	 SHORT $LN13@display_in
$LN12@display_in:

; 2000 : 			{
; 2001 : 				sprintf (s, "%s : %s", get_trans ("Enter Message"), keyboard_message);

  00097	68 00 00 00 00	 push	 OFFSET ?keyboard_message@@3PADA
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OHJDBNJC@Enter?5Message@
  000a1	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  000a6	50		 push	 eax
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_07IAFACCAD@?$CFs?5?3?5?$CFs@
  000ac	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 _sprintf
  000b8	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@display_in:

; 2002 : 			}
; 2003 : 
; 2004 : 			set_ui_font_colour (ext_col_list_title);

  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_list_title@@3UREAL_COLOUR@@A ; ext_col_list_title
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 2005 : 
; 2006 : 			ui_display_text (s, 2, y);

  000c6	51		 push	 ecx
  000c7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  000cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d1	51		 push	 ecx
  000d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  000da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000df	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  000eb	dd d8		 fstp	 ST(0)

; 2007 : 
; 2008 : 			//
; 2009 : 			// update cursor flashing
; 2010 : 			//
; 2011 : 
; 2012 : 			flash_timer += get_delta_time ();

  000ed	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?flash_timer@?1??display_in_flight_outgoing_messages@@YGXXZ@4MA
  000f5	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000fd	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?flash_timer@?1??display_in_flight_outgoing_messages@@YGXXZ@4MA, xmm0

; 2013 : 
; 2014 : 			flash_timer = frac (flash_timer);

  00105	51		 push	 ecx
  00106	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?flash_timer@?1??display_in_flight_outgoing_messages@@YGXXZ@4MA
  0010e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00113	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  00118	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?flash_timer@?1??display_in_flight_outgoing_messages@@YGXXZ@4MA

; 2015 : 		}
; 2016 : 		else

  0011e	e9 4f 0a 00 00	 jmp	 $LN3@display_in
$LN10@display_in:

; 2017 : 		{
; 2018 : 
; 2019 : 			message_action_type
; 2020 : 				*message_action;
; 2021 : 
; 2022 : 			//
; 2023 : 			// show predefined messages
; 2024 : 			//
; 2025 : 
; 2026 : 			message_action = get_message_action (message_destination);

  00123	a1 04 00 00 00	 mov	 eax, DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A+4
  00128	50		 push	 eax
  00129	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?message_destination@@3UMESSAGE_TYPE@@A
  0012f	51		 push	 ecx
  00130	e8 00 00 00 00	 call	 ?get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z ; get_message_action
  00135	89 85 14 fe ff
	ff		 mov	 DWORD PTR _message_action$7[ebp], eax

; 2027 : 
; 2028 : 			message_name = message_action->title;

  0013b	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  00141	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00144	89 8d 18 fe ff
	ff		 mov	 DWORD PTR _message_name$[ebp], ecx

; 2029 : 
; 2030 : 			if (message_name)

  0014a	83 bd 18 fe ff
	ff 00		 cmp	 DWORD PTR _message_name$[ebp], 0
  00151	74 1d		 je	 SHORT $LN14@display_in

; 2031 : 			{
; 2032 : 				sprintf (s, "%s:", message_name);

  00153	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _message_name$[ebp]
  00159	50		 push	 eax
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_03DKEJHHJP@?$CFs?3@
  0015f	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00165	51		 push	 ecx
  00166	e8 00 00 00 00	 call	 _sprintf
  0016b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2033 : 			}
; 2034 : 			else

  0016e	eb 14		 jmp	 SHORT $LN15@display_in
$LN14@display_in:

; 2035 : 			{
; 2036 : 				sprintf (s, "(NO TITLE):");

  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EHHFEBNH@?$CINO?5TITLE?$CJ?3@
  00175	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 _sprintf
  00181	83 c4 08	 add	 esp, 8
$LN15@display_in:

; 2037 : 			}
; 2038 : 
; 2039 : 			set_ui_font_colour (ext_col_list_title);

  00184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_list_title@@3UREAL_COLOUR@@A ; ext_col_list_title
  00189	50		 push	 eax
  0018a	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 2040 : 
; 2041 : 			ui_display_text (s, 2, y);

  0018f	51		 push	 ecx
  00190	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00195	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  001a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a8	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  001b4	dd d8		 fstp	 ST(0)

; 2042 : 
; 2043 : 			y += ui_get_font_height ();

  001b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  001bb	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  001c0	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _y$[ebp]
  001c5	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 2044 : 
; 2045 : 			for (loop = 0; loop < message_action->number_of_actions; loop ++)

  001ca	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  001d1	eb 09		 jmp	 SHORT $LN4@display_in
$LN2@display_in:
  001d3	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  001d6	83 c0 01	 add	 eax, 1
  001d9	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@display_in:
  001dc	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  001e2	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  001e5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001e7	0f 8d 85 09 00
	00		 jge	 $LN3@display_in

; 2046 : 			{
; 2047 : 				y += ui_get_font_height ();

  001ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  001f2	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  001f7	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _y$[ebp]
  001fc	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 2048 : 
; 2049 : 				index = get_display_message_index_number (message_action->keycodes [loop]);

  00201	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  00207	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0020a	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  0020d	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?get_display_message_index_number@@YGHH@Z ; get_display_message_index_number
  00216	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 2050 : 
; 2051 : 				if (get_message_action (message_action->actions [loop]) == NULL)

  00219	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  0021f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00222	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  00225	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  00229	50		 push	 eax
  0022a	8b 0c d1	 mov	 ecx, DWORD PTR [ecx+edx*8]
  0022d	51		 push	 ecx
  0022e	e8 00 00 00 00	 call	 ?get_message_action@@YGPAUMESSAGE_ACTION_TYPE@@UMESSAGE_TYPE@@@Z ; get_message_action
  00233	85 c0		 test	 eax, eax
  00235	75 0d		 jne	 SHORT $LN16@display_in

; 2052 : 				{
; 2053 : 					set_ui_font_colour (ext_col_list_item_unavailable);

  00237	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A ; ext_col_list_item_unavailable
  0023c	50		 push	 eax
  0023d	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 2054 : 				}
; 2055 : 				else

  00242	eb 0b		 jmp	 SHORT $LN17@display_in
$LN16@display_in:

; 2056 : 				{
; 2057 : 					set_ui_font_colour (ext_col_list_item_available);

  00244	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_list_item_available@@3UREAL_COLOUR@@A ; ext_col_list_item_available
  00249	50		 push	 eax
  0024a	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN17@display_in:

; 2058 : 				}
; 2059 : 
; 2060 : 				sprintf (s, "%d.", index);

  0024f	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00252	50		 push	 eax
  00253	68 00 00 00 00	 push	 OFFSET ??_C@_03NIOBFDP@?$CFd?4@
  00258	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  0025e	51		 push	 ecx
  0025f	e8 00 00 00 00	 call	 _sprintf
  00264	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2061 : 				ui_display_text (s, 2, y);

  00267	51		 push	 ecx
  00268	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  0026d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00272	51		 push	 ecx
  00273	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0027b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00280	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  00286	50		 push	 eax
  00287	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0028c	dd d8		 fstp	 ST(0)

; 2062 : 
; 2063 : 				switch (message_action->actions [loop].type)

  0028e	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  00294	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00297	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  0029a	8b 04 d1	 mov	 eax, DWORD PTR [ecx+edx*8]
  0029d	89 85 78 fd ff
	ff		 mov	 DWORD PTR tv173[ebp], eax
  002a3	83 bd 78 fd ff
	ff 10		 cmp	 DWORD PTR tv173[ebp], 16 ; 00000010H
  002aa	74 12		 je	 SHORT $LN18@display_in
  002ac	83 bd 78 fd ff
	ff 22		 cmp	 DWORD PTR tv173[ebp], 34 ; 00000022H
  002b3	0f 84 d2 05 00
	00		 je	 $LN23@display_in
  002b9	e9 3c 08 00 00	 jmp	 $LN29@display_in
$LN18@display_in:

; 2064 : 				{
; 2065 : 					case MESSAGE_WINGMAN_SELECT:
; 2066 : 					{
; 2067 : 
; 2068 : 						entity
; 2069 : 							*group,
; 2070 : 							*pilot,
; 2071 : 							*wingman;
; 2072 : 
; 2073 : 						int
; 2074 : 							wingman_index;
; 2075 : 
; 2076 : 						wingman_index = message_action->actions [loop].value;

  002be	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  002c4	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  002c7	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  002ca	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  002ce	89 85 04 fe ff
	ff		 mov	 DWORD PTR _wingman_index$3[ebp], eax

; 2077 : 
; 2078 : 						wingman = get_local_entity_safe_ptr (wingman_index);

  002d4	83 bd 04 fe ff
	ff ff		 cmp	 DWORD PTR _wingman_index$3[ebp], -1
  002db	74 17		 je	 SHORT $LN33@display_in
  002dd	8b 85 04 fe ff
	ff		 mov	 eax, DWORD PTR _wingman_index$3[ebp]
  002e3	c1 e0 04	 shl	 eax, 4
  002e6	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  002ec	89 85 78 fd ff
	ff		 mov	 DWORD PTR tv181[ebp], eax
  002f2	eb 0a		 jmp	 SHORT $LN34@display_in
$LN33@display_in:
  002f4	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
$LN34@display_in:
  002fe	8b 8d 78 fd ff
	ff		 mov	 ecx, DWORD PTR tv181[ebp]
  00304	89 8d 08 fe ff
	ff		 mov	 DWORD PTR _wingman$4[ebp], ecx

; 2079 : 
; 2080 : 						if (wingman)

  0030a	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR _wingman$4[ebp], 0
  00311	0f 84 6f 05 00
	00		 je	 $LN21@display_in

; 2081 : 						{
; 2082 : 							if (get_local_entity_int_value (wingman, INT_TYPE_ALIVE))

  00317	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR _wingman$4[ebp], 0
  0031e	74 10		 je	 SHORT $LN35@display_in
  00320	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _wingman$4[ebp]
  00326	8b 08		 mov	 ecx, DWORD PTR [eax]
  00328	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv188[ebp], ecx
  0032e	eb 20		 jmp	 SHORT $LN36@display_in
$LN35@display_in:
  00330	68 22 08 00 00	 push	 2082			; 00000822H
  00335	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00340	52		 push	 edx
  00341	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00346	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv188[ebp], 0
$LN36@display_in:
  00350	b8 01 00 00 00	 mov	 eax, 1
  00355	85 c0		 test	 eax, eax
  00357	74 0c		 je	 SHORT $LN37@display_in
  00359	c7 85 74 fd ff
	ff 07 00 00 00	 mov	 DWORD PTR tv195[ebp], 7
  00363	eb 20		 jmp	 SHORT $LN38@display_in
$LN37@display_in:
  00365	68 22 08 00 00	 push	 2082			; 00000822H
  0036a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0036f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00375	51		 push	 ecx
  00376	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0037b	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN38@display_in:
  00385	6a 07		 push	 7
  00387	8b 95 08 fe ff
	ff		 mov	 edx, DWORD PTR _wingman$4[ebp]
  0038d	52		 push	 edx
  0038e	69 85 78 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv188[ebp], 1116
  00398	8b 8d 74 fd ff
	ff		 mov	 ecx, DWORD PTR tv195[ebp]
  0039e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003a5	ff d2		 call	 edx
  003a7	85 c0		 test	 eax, eax
  003a9	0f 84 d7 04 00
	00		 je	 $LN21@display_in

; 2083 : 							{
; 2084 : 								group = get_local_entity_parent (wingman, LIST_TYPE_MEMBER);

  003af	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR _wingman$4[ebp], 0
  003b6	74 10		 je	 SHORT $LN39@display_in
  003b8	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _wingman$4[ebp]
  003be	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c0	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv208[ebp], ecx
  003c6	eb 24		 jmp	 SHORT $LN40@display_in
$LN39@display_in:
  003c8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  003ce	83 c2 7c	 add	 edx, 124		; 0000007cH
  003d1	52		 push	 edx
  003d2	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003dc	50		 push	 eax
  003dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e2	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN40@display_in:
  003ec	b9 01 00 00 00	 mov	 ecx, 1
  003f1	85 c9		 test	 ecx, ecx
  003f3	74 0c		 je	 SHORT $LN41@display_in
  003f5	c7 85 74 fd ff
	ff 19 00 00 00	 mov	 DWORD PTR tv216[ebp], 25 ; 00000019H
  003ff	eb 24		 jmp	 SHORT $LN42@display_in
$LN41@display_in:
  00401	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  00407	83 c2 7c	 add	 edx, 124		; 0000007cH
  0040a	52		 push	 edx
  0040b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00410	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00415	50		 push	 eax
  00416	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0041b	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv216[ebp], 0
$LN42@display_in:
  00425	6a 19		 push	 25			; 00000019H
  00427	8b 8d 08 fe ff
	ff		 mov	 ecx, DWORD PTR _wingman$4[ebp]
  0042d	51		 push	 ecx
  0042e	69 95 78 fd ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv208[ebp], 180
  00438	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR tv216[ebp]
  0043e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00445	ff d1		 call	 ecx
  00447	89 85 10 fe ff
	ff		 mov	 DWORD PTR _group$6[ebp], eax

; 2085 : 
; 2086 : 								if (group)

  0044d	83 bd 10 fe ff
	ff 00		 cmp	 DWORD PTR _group$6[ebp], 0
  00454	0f 84 2c 04 00
	00		 je	 $LN21@display_in

; 2087 : 								{
; 2088 : 									sprintf (s, "%s 1-%d", get_local_entity_string (group, STRING_TYPE_GROUP_CALLSIGN), get_local_entity_int_value (wingman, INT_TYPE_GROUP_MEMBER_ID));

  0045a	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR _wingman$4[ebp], 0
  00461	74 10		 je	 SHORT $LN43@display_in
  00463	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _wingman$4[ebp]
  00469	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046b	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv230[ebp], ecx
  00471	eb 27		 jmp	 SHORT $LN44@display_in
$LN43@display_in:
  00473	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  00479	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  0047f	52		 push	 edx
  00480	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00485	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00490	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv230[ebp], 0
$LN44@display_in:
  0049a	b9 01 00 00 00	 mov	 ecx, 1
  0049f	85 c9		 test	 ecx, ecx
  004a1	74 0c		 je	 SHORT $LN45@display_in
  004a3	c7 85 74 fd ff
	ff 4a 00 00 00	 mov	 DWORD PTR tv238[ebp], 74 ; 0000004aH
  004ad	eb 27		 jmp	 SHORT $LN46@display_in
$LN45@display_in:
  004af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  004b5	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  004bb	52		 push	 edx
  004bc	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004c6	50		 push	 eax
  004c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004cc	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv238[ebp], 0
$LN46@display_in:
  004d6	83 bd 10 fe ff
	ff 00		 cmp	 DWORD PTR _group$6[ebp], 0
  004dd	74 10		 je	 SHORT $LN47@display_in
  004df	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR _group$6[ebp]
  004e5	8b 11		 mov	 edx, DWORD PTR [ecx]
  004e7	89 95 70 fd ff
	ff		 mov	 DWORD PTR tv251[ebp], edx
  004ed	eb 26		 jmp	 SHORT $LN48@display_in
$LN47@display_in:
  004ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  004f4	05 80 00 00 00	 add	 eax, 128		; 00000080H
  004f9	50		 push	 eax
  004fa	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00505	51		 push	 ecx
  00506	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0050b	c7 85 70 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv251[ebp], 0
$LN48@display_in:
  00515	ba 01 00 00 00	 mov	 edx, 1
  0051a	85 d2		 test	 edx, edx
  0051c	74 0c		 je	 SHORT $LN49@display_in
  0051e	c7 85 6c fd ff
	ff 04 00 00 00	 mov	 DWORD PTR tv259[ebp], 4
  00528	eb 26		 jmp	 SHORT $LN50@display_in
$LN49@display_in:
  0052a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  0052f	05 80 00 00 00	 add	 eax, 128		; 00000080H
  00534	50		 push	 eax
  00535	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00540	51		 push	 ecx
  00541	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00546	c7 85 6c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN50@display_in:
  00550	6a 4a		 push	 74			; 0000004aH
  00552	8b 95 08 fe ff
	ff		 mov	 edx, DWORD PTR _wingman$4[ebp]
  00558	52		 push	 edx
  00559	69 85 78 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv230[ebp], 1116
  00563	8b 8d 74 fd ff
	ff		 mov	 ecx, DWORD PTR tv238[ebp]
  00569	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00570	ff d2		 call	 edx
  00572	50		 push	 eax
  00573	6a 04		 push	 4
  00575	8b 85 10 fe ff
	ff		 mov	 eax, DWORD PTR _group$6[ebp]
  0057b	50		 push	 eax
  0057c	6b 8d 70 fd ff
	ff 34		 imul	 ecx, DWORD PTR tv251[ebp], 52
  00583	8b 95 6c fd ff
	ff		 mov	 edx, DWORD PTR tv259[ebp]
  00589	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  00590	ff d0		 call	 eax
  00592	50		 push	 eax
  00593	68 00 00 00 00	 push	 OFFSET ??_C@_07GJEPFJ@?$CFs?51?9?$CFd@
  00598	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  0059e	51		 push	 ecx
  0059f	e8 00 00 00 00	 call	 _sprintf
  005a4	83 c4 10	 add	 esp, 16			; 00000010H

; 2089 : 
; 2090 : 									if (get_local_entity_int_value (wingman, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  005a7	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR _wingman$4[ebp], 0
  005ae	74 10		 je	 SHORT $LN51@display_in
  005b0	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _wingman$4[ebp]
  005b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b8	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv272[ebp], ecx
  005be	eb 20		 jmp	 SHORT $LN52@display_in
$LN51@display_in:
  005c0	68 2a 08 00 00	 push	 2090			; 0000082aH
  005c5	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005d0	52		 push	 edx
  005d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005d6	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
$LN52@display_in:
  005e0	b8 01 00 00 00	 mov	 eax, 1
  005e5	85 c0		 test	 eax, eax
  005e7	74 0c		 je	 SHORT $LN53@display_in
  005e9	c7 85 74 fd ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv279[ebp], 156 ; 0000009cH
  005f3	eb 20		 jmp	 SHORT $LN54@display_in
$LN53@display_in:
  005f5	68 2a 08 00 00	 push	 2090			; 0000082aH
  005fa	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00605	51		 push	 ecx
  00606	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060b	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv279[ebp], 0
$LN54@display_in:
  00615	68 9c 00 00 00	 push	 156			; 0000009cH
  0061a	8b 95 08 fe ff
	ff		 mov	 edx, DWORD PTR _wingman$4[ebp]
  00620	52		 push	 edx
  00621	69 85 78 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv272[ebp], 1116
  0062b	8b 8d 74 fd ff
	ff		 mov	 ecx, DWORD PTR tv279[ebp]
  00631	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00638	ff d2		 call	 edx
  0063a	85 c0		 test	 eax, eax
  0063c	0f 84 20 02 00
	00		 je	 $LN8@display_in

; 2091 : 									{
; 2092 : 										pilot = get_local_entity_first_child (wingman, LIST_TYPE_AIRCREW);

  00642	83 bd 08 fe ff
	ff 00		 cmp	 DWORD PTR _wingman$4[ebp], 0
  00649	74 10		 je	 SHORT $LN55@display_in
  0064b	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _wingman$4[ebp]
  00651	8b 08		 mov	 ecx, DWORD PTR [eax]
  00653	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv292[ebp], ecx
  00659	eb 27		 jmp	 SHORT $LN56@display_in
$LN55@display_in:
  0065b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  00661	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00667	52		 push	 edx
  00668	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0066d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00672	50		 push	 eax
  00673	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00678	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv292[ebp], 0
$LN56@display_in:
  00682	b9 01 00 00 00	 mov	 ecx, 1
  00687	85 c9		 test	 ecx, ecx
  00689	74 0c		 je	 SHORT $LN57@display_in
  0068b	c7 85 74 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv300[ebp], 1
  00695	eb 27		 jmp	 SHORT $LN58@display_in
$LN57@display_in:
  00697	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  0069d	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  006a3	52		 push	 edx
  006a4	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  006ae	50		 push	 eax
  006af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006b4	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv300[ebp], 0
$LN58@display_in:
  006be	6a 01		 push	 1
  006c0	8b 8d 08 fe ff
	ff		 mov	 ecx, DWORD PTR _wingman$4[ebp]
  006c6	51		 push	 ecx
  006c7	69 95 78 fd ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv292[ebp], 180
  006d1	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR tv300[ebp]
  006d7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  006de	ff d1		 call	 ecx
  006e0	89 85 0c fe ff
	ff		 mov	 DWORD PTR _pilot$5[ebp], eax
$LN7@display_in:

; 2093 : 
; 2094 : 										while (pilot)

  006e6	83 bd 0c fe ff
	ff 00		 cmp	 DWORD PTR _pilot$5[ebp], 0
  006ed	0f 84 6f 01 00
	00		 je	 $LN8@display_in

; 2095 : 										{
; 2096 : 											sprintf (pilot_name, " (%s)", get_local_entity_string (pilot, STRING_TYPE_PILOTS_NAME));

  006f3	83 bd 0c fe ff
	ff 00		 cmp	 DWORD PTR _pilot$5[ebp], 0
  006fa	74 10		 je	 SHORT $LN59@display_in
  006fc	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR _pilot$5[ebp]
  00702	8b 08		 mov	 ecx, DWORD PTR [eax]
  00704	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv314[ebp], ecx
  0070a	eb 27		 jmp	 SHORT $LN60@display_in
$LN59@display_in:
  0070c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  00712	81 c2 88 00 00
	00		 add	 edx, 136		; 00000088H
  00718	52		 push	 edx
  00719	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0071e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00723	50		 push	 eax
  00724	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00729	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv314[ebp], 0
$LN60@display_in:
  00733	b9 01 00 00 00	 mov	 ecx, 1
  00738	85 c9		 test	 ecx, ecx
  0073a	74 0c		 je	 SHORT $LN61@display_in
  0073c	c7 85 74 fd ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv322[ebp], 10 ; 0000000aH
  00746	eb 27		 jmp	 SHORT $LN62@display_in
$LN61@display_in:
  00748	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  0074e	81 c2 88 00 00
	00		 add	 edx, 136		; 00000088H
  00754	52		 push	 edx
  00755	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0075a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00765	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv322[ebp], 0
$LN62@display_in:
  0076f	6a 0a		 push	 10			; 0000000aH
  00771	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR _pilot$5[ebp]
  00777	51		 push	 ecx
  00778	6b 95 78 fd ff
	ff 34		 imul	 edx, DWORD PTR tv314[ebp], 52
  0077f	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR tv322[ebp]
  00785	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  0078c	ff d1		 call	 ecx
  0078e	50		 push	 eax
  0078f	68 00 00 00 00	 push	 OFFSET ??_C@_05DNDNCJEB@?5?$CI?$CFs?$CJ@
  00794	8d 95 1c fe ff
	ff		 lea	 edx, DWORD PTR _pilot_name$[ebp]
  0079a	52		 push	 edx
  0079b	e8 00 00 00 00	 call	 _sprintf
  007a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2097 : 
; 2098 : 											strcat (s, pilot_name);

  007a3	8d 85 1c fe ff
	ff		 lea	 eax, DWORD PTR _pilot_name$[ebp]
  007a9	50		 push	 eax
  007aa	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  007b0	51		 push	 ecx
  007b1	e8 00 00 00 00	 call	 _strcat
  007b6	83 c4 08	 add	 esp, 8

; 2099 : 
; 2100 : 											pilot = get_local_entity_child_succ (pilot, LIST_TYPE_AIRCREW);

  007b9	83 bd 0c fe ff
	ff 00		 cmp	 DWORD PTR _pilot$5[ebp], 0
  007c0	74 10		 je	 SHORT $LN63@display_in
  007c2	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR _pilot$5[ebp]
  007c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  007ca	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv338[ebp], ecx
  007d0	eb 27		 jmp	 SHORT $LN64@display_in
$LN63@display_in:
  007d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  007d8	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  007de	52		 push	 edx
  007df	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007e9	50		 push	 eax
  007ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007ef	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv338[ebp], 0
$LN64@display_in:
  007f9	b9 01 00 00 00	 mov	 ecx, 1
  007fe	85 c9		 test	 ecx, ecx
  00800	74 0c		 je	 SHORT $LN65@display_in
  00802	c7 85 74 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv346[ebp], 1
  0080c	eb 27		 jmp	 SHORT $LN66@display_in
$LN65@display_in:
  0080e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  00814	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  0081a	52		 push	 edx
  0081b	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00820	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00825	50		 push	 eax
  00826	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0082b	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv346[ebp], 0
$LN66@display_in:
  00835	6a 01		 push	 1
  00837	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR _pilot$5[ebp]
  0083d	51		 push	 ecx
  0083e	69 95 78 fd ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv338[ebp], 180
  00848	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR tv346[ebp]
  0084e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00855	ff d1		 call	 ecx
  00857	89 85 0c fe ff
	ff		 mov	 DWORD PTR _pilot$5[ebp], eax

; 2101 : 										}

  0085d	e9 84 fe ff ff	 jmp	 $LN7@display_in
$LN8@display_in:

; 2102 : 									}
; 2103 : 
; 2104 : 									ui_display_text (s, indent, y);

  00862	51		 push	 ecx
  00863	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00868	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0086d	51		 push	 ecx
  0086e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _indent$[ebp]
  00873	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00878	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  0087e	50		 push	 eax
  0087f	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00884	dd d8		 fstp	 ST(0)
$LN21@display_in:

; 2105 : 								}
; 2106 : 							}
; 2107 : 						}
; 2108 : 
; 2109 : 						break;

  00886	e9 e2 02 00 00	 jmp	 $LN5@display_in
$LN23@display_in:

; 2110 : 					}
; 2111 : 
; 2112 : 					case MESSAGE_PILOT_KEYBOARD:
; 2113 : 					{
; 2114 : 						entity
; 2115 : 							*pilot;
; 2116 : 
; 2117 : 						int
; 2118 : 							pilot_id;
; 2119 : 
; 2120 : 						pilot_id = message_action->actions [loop].value;

  0088b	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  00891	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00894	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  00897	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  0089b	89 85 fc fd ff
	ff		 mov	 DWORD PTR _pilot_id$1[ebp], eax

; 2121 : 
; 2122 : 						if (pilot_id == get_local_entity_safe_index (get_session_entity ()))

  008a1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  008a8	74 16		 je	 SHORT $LN67@display_in
  008aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  008af	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  008b5	c1 f8 04	 sar	 eax, 4
  008b8	89 85 78 fd ff
	ff		 mov	 DWORD PTR tv362[ebp], eax
  008be	eb 0a		 jmp	 SHORT $LN68@display_in
$LN67@display_in:
  008c0	c7 85 78 fd ff
	ff ff ff ff ff	 mov	 DWORD PTR tv362[ebp], -1
$LN68@display_in:
  008ca	8b 8d fc fd ff
	ff		 mov	 ecx, DWORD PTR _pilot_id$1[ebp]
  008d0	3b 8d 78 fd ff
	ff		 cmp	 ecx, DWORD PTR tv362[ebp]
  008d6	75 43		 jne	 SHORT $LN24@display_in

; 2123 : 						{
; 2124 : 							sprintf (s, get_trans ("All Players"));

  008d8	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ENMNLKIB@All?5Players@
  008dd	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  008e2	50		 push	 eax
  008e3	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  008e9	50		 push	 eax
  008ea	e8 00 00 00 00	 call	 _sprintf
  008ef	83 c4 08	 add	 esp, 8

; 2125 : 
; 2126 : 							ui_display_text (s, indent, y);

  008f2	51		 push	 ecx
  008f3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  008f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008fd	51		 push	 ecx
  008fe	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _indent$[ebp]
  00903	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00908	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  0090e	50		 push	 eax
  0090f	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00914	dd d8		 fstp	 ST(0)

; 2127 : 						}
; 2128 : 						else

  00916	e9 dd 01 00 00	 jmp	 $LN25@display_in
$LN24@display_in:

; 2129 : 						{
; 2130 : 							pilot = get_local_entity_safe_ptr (pilot_id);

  0091b	83 bd fc fd ff
	ff ff		 cmp	 DWORD PTR _pilot_id$1[ebp], -1
  00922	74 17		 je	 SHORT $LN69@display_in
  00924	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR _pilot_id$1[ebp]
  0092a	c1 e0 04	 shl	 eax, 4
  0092d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00933	89 85 78 fd ff
	ff		 mov	 DWORD PTR tv374[ebp], eax
  00939	eb 0a		 jmp	 SHORT $LN70@display_in
$LN69@display_in:
  0093b	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv374[ebp], 0
$LN70@display_in:
  00945	8b 8d 78 fd ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  0094b	89 8d 00 fe ff
	ff		 mov	 DWORD PTR _pilot$2[ebp], ecx

; 2131 : 
; 2132 : 							ASSERT (pilot);

  00951	83 bd 00 fe ff
	ff 00		 cmp	 DWORD PTR _pilot$2[ebp], 0
  00958	75 1a		 jne	 SHORT $LN26@display_in
  0095a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  0095f	05 ac 00 00 00	 add	 eax, 172		; 000000acH
  00964	50		 push	 eax
  00965	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0096a	68 00 00 00 00	 push	 OFFSET ??_C@_05KIBFDOPF@pilot@
  0096f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@display_in:

; 2133 : 
; 2134 : 							if (get_local_entity_int_value (pilot, INT_TYPE_SIDE) == ENTITY_SIDE_BLUE_FORCE)

  00974	83 bd 00 fe ff
	ff 00		 cmp	 DWORD PTR _pilot$2[ebp], 0
  0097b	74 10		 je	 SHORT $LN71@display_in
  0097d	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pilot$2[ebp]
  00983	8b 08		 mov	 ecx, DWORD PTR [eax]
  00985	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv417[ebp], ecx
  0098b	eb 20		 jmp	 SHORT $LN72@display_in
$LN71@display_in:
  0098d	68 56 08 00 00	 push	 2134			; 00000856H
  00992	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00997	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0099d	52		 push	 edx
  0099e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a3	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv417[ebp], 0
$LN72@display_in:
  009ad	b8 01 00 00 00	 mov	 eax, 1
  009b2	85 c0		 test	 eax, eax
  009b4	74 0c		 je	 SHORT $LN73@display_in
  009b6	c7 85 74 fd ff
	ff bb 00 00 00	 mov	 DWORD PTR tv424[ebp], 187 ; 000000bbH
  009c0	eb 20		 jmp	 SHORT $LN74@display_in
$LN73@display_in:
  009c2	68 56 08 00 00	 push	 2134			; 00000856H
  009c7	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  009cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009d2	51		 push	 ecx
  009d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009d8	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv424[ebp], 0
$LN74@display_in:
  009e2	68 bb 00 00 00	 push	 187			; 000000bbH
  009e7	8b 95 00 fe ff
	ff		 mov	 edx, DWORD PTR _pilot$2[ebp]
  009ed	52		 push	 edx
  009ee	69 85 78 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv417[ebp], 1116
  009f8	8b 8d 74 fd ff
	ff		 mov	 ecx, DWORD PTR tv424[ebp]
  009fe	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a05	ff d2		 call	 edx
  00a07	83 f8 01	 cmp	 eax, 1
  00a0a	75 0d		 jne	 SHORT $LN27@display_in

; 2135 : 							{
; 2136 : 								set_ui_font_colour (ext_col_blue_force);

  00a0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A ; ext_col_blue_force
  00a11	50		 push	 eax
  00a12	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 2137 : 							}
; 2138 : 							else

  00a17	eb 0b		 jmp	 SHORT $LN28@display_in
$LN27@display_in:

; 2139 : 							{
; 2140 : 								set_ui_font_colour (ext_col_red_force);

  00a19	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_red_force@@3UREAL_COLOUR@@A ; ext_col_red_force
  00a1e	50		 push	 eax
  00a1f	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN28@display_in:

; 2141 : 							}
; 2142 : 
; 2143 : 							sprintf (s, "%s", get_local_entity_string (pilot, STRING_TYPE_PILOTS_NAME));

  00a24	83 bd 00 fe ff
	ff 00		 cmp	 DWORD PTR _pilot$2[ebp], 0
  00a2b	74 10		 je	 SHORT $LN75@display_in
  00a2d	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pilot$2[ebp]
  00a33	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a35	89 8d 78 fd ff
	ff		 mov	 DWORD PTR tv440[ebp], ecx
  00a3b	eb 27		 jmp	 SHORT $LN76@display_in
$LN75@display_in:
  00a3d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  00a43	81 c2 b7 00 00
	00		 add	 edx, 183		; 000000b7H
  00a49	52		 push	 edx
  00a4a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a4f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a54	50		 push	 eax
  00a55	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a5a	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv440[ebp], 0
$LN76@display_in:
  00a64	b9 01 00 00 00	 mov	 ecx, 1
  00a69	85 c9		 test	 ecx, ecx
  00a6b	74 0c		 je	 SHORT $LN77@display_in
  00a6d	c7 85 74 fd ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv448[ebp], 10 ; 0000000aH
  00a77	eb 27		 jmp	 SHORT $LN78@display_in
$LN77@display_in:
  00a79	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_in_flight_outgoing_messages@@YGXXZ@4JA
  00a7f	81 c2 b7 00 00
	00		 add	 edx, 183		; 000000b7H
  00a85	52		 push	 edx
  00a86	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LKDDINKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00a90	50		 push	 eax
  00a91	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a96	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv448[ebp], 0
$LN78@display_in:
  00aa0	6a 0a		 push	 10			; 0000000aH
  00aa2	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR _pilot$2[ebp]
  00aa8	51		 push	 ecx
  00aa9	6b 95 78 fd ff
	ff 34		 imul	 edx, DWORD PTR tv440[ebp], 52
  00ab0	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR tv448[ebp]
  00ab6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00abd	ff d1		 call	 ecx
  00abf	50		 push	 eax
  00ac0	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00ac5	8d 95 28 ff ff
	ff		 lea	 edx, DWORD PTR _s$[ebp]
  00acb	52		 push	 edx
  00acc	e8 00 00 00 00	 call	 _sprintf
  00ad1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2144 : 
; 2145 : 							ui_display_text (s, indent, y);

  00ad4	51		 push	 ecx
  00ad5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00ada	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00adf	51		 push	 ecx
  00ae0	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _indent$[ebp]
  00ae5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00aea	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  00af0	50		 push	 eax
  00af1	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00af6	dd d8		 fstp	 ST(0)
$LN25@display_in:

; 2146 : 						}
; 2147 : 
; 2148 : 						break;

  00af8	eb 73		 jmp	 SHORT $LN5@display_in
$LN29@display_in:

; 2149 : 					}
; 2150 : 
; 2151 : 					default:
; 2152 : 					{
; 2153 : 						message_name = message_action->action_text [loop];

  00afa	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _message_action$7[ebp]
  00b00	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00b03	8b 55 f8	 mov	 edx, DWORD PTR _loop$[ebp]
  00b06	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00b09	89 85 18 fe ff
	ff		 mov	 DWORD PTR _message_name$[ebp], eax

; 2154 : 
; 2155 : 						//
; 2156 : 						// grey-out unselectables
; 2157 : 						//
; 2158 : 
; 2159 : 						if (message_name)

  00b0f	83 bd 18 fe ff
	ff 00		 cmp	 DWORD PTR _message_name$[ebp], 0
  00b16	74 1d		 je	 SHORT $LN30@display_in

; 2160 : 						{
; 2161 : 							sprintf (s, "%s", message_name);

  00b18	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _message_name$[ebp]
  00b1e	50		 push	 eax
  00b1f	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00b24	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00b2a	51		 push	 ecx
  00b2b	e8 00 00 00 00	 call	 _sprintf
  00b30	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2162 : 						}
; 2163 : 						else

  00b33	eb 14		 jmp	 SHORT $LN31@display_in
$LN30@display_in:

; 2164 : 						{
; 2165 : 							sprintf (s, "(NO TITLE)");

  00b35	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BICHBFM@?$CINO?5TITLE?$CJ@
  00b3a	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  00b40	50		 push	 eax
  00b41	e8 00 00 00 00	 call	 _sprintf
  00b46	83 c4 08	 add	 esp, 8
$LN31@display_in:

; 2166 : 						}
; 2167 : 
; 2168 : 						ui_display_text (s, indent, y);

  00b49	51		 push	 ecx
  00b4a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00b4f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b54	51		 push	 ecx
  00b55	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _indent$[ebp]
  00b5a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b5f	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  00b65	50		 push	 eax
  00b66	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00b6b	dd d8		 fstp	 ST(0)
$LN5@display_in:

; 2169 : 
; 2170 : 						break;
; 2171 : 					}
; 2172 : 				}
; 2173 : 			}

  00b6d	e9 61 f6 ff ff	 jmp	 $LN2@display_in
$LN3@display_in:

; 2174 : 		}
; 2175 : 
; 2176 : 		y += ui_get_font_height () + 2;

  00b72	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00b77	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00b7a	83 c1 02	 add	 ecx, 2
  00b7d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00b81	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _y$[ebp]
  00b86	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 2177 : 
; 2178 : 		set_ui_font_colour (ext_col_list_item_available);

  00b8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_list_item_available@@3UREAL_COLOUR@@A ; ext_col_list_item_available
  00b90	50		 push	 eax
  00b91	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 2179 : 
; 2180 : 		sprintf (s, get_trans ("Esc - Exit"));

  00b96	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CJIKFEGP@Esc?5?9?5Exit@
  00b9b	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00ba0	50		 push	 eax
  00ba1	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  00ba7	50		 push	 eax
  00ba8	e8 00 00 00 00	 call	 _sprintf
  00bad	83 c4 08	 add	 esp, 8

; 2181 : 
; 2182 : 		ui_display_text (s, 2, y);

  00bb0	51		 push	 ecx
  00bb1	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00bb6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bbb	51		 push	 ecx
  00bbc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00bc4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bc9	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _s$[ebp]
  00bcf	50		 push	 eax
  00bd0	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00bd5	dd d8		 fstp	 ST(0)
$LN9@display_in:

; 2183 : 	}
; 2184 : }

  00bd7	5f		 pop	 edi
  00bd8	5e		 pop	 esi
  00bd9	5b		 pop	 ebx
  00bda	8b e5		 mov	 esp, ebp
  00bdc	5d		 pop	 ebp
  00bdd	c3		 ret	 0
?display_in_flight_outgoing_messages@@YGXXZ ENDP	; display_in_flight_outgoing_messages
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\msg_out.c
;	COMDAT ?get_outgoing_in_flight_message_flag@@YGHXZ
_TEXT	SEGMENT
?get_outgoing_in_flight_message_flag@@YGHXZ PROC	; get_outgoing_in_flight_message_flag, COMDAT

; 1951 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1952 : 	return in_flight_messages;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?in_flight_messages@@3HA

; 1953 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_outgoing_in_flight_message_flag@@YGHXZ ENDP	; get_outgoing_in_flight_message_flag
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
