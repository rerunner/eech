; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\misc\timeaccl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?time_acceleration@@3HA				; time_acceleration
PUBLIC	?min_time_acceleration@@3HA			; min_time_acceleration
PUBLIC	?max_time_acceleration@@3HA			; max_time_acceleration
_BSS	SEGMENT
?time_acceleration@@3HA DD 01H DUP (?)			; time_acceleration
_BSS	ENDS
_DATA	SEGMENT
?min_time_acceleration@@3HA DD 01H			; min_time_acceleration
?max_time_acceleration@@3HA DD 0aH			; max_time_acceleration
_DATA	ENDS
PUBLIC	?get_time_acceleration@@YGHXZ			; get_time_acceleration
PUBLIC	?get_min_time_acceleration@@YGHXZ		; get_min_time_acceleration
PUBLIC	?get_max_time_acceleration@@YGHXZ		; get_max_time_acceleration
PUBLIC	?set_min_time_acceleration@@YGXPAUEVENT@@@Z	; set_min_time_acceleration
PUBLIC	?set_pause_time_acceleration@@YGXPAUEVENT@@@Z	; set_pause_time_acceleration
PUBLIC	?set_big_inc_time_acceleration@@YGXPAUEVENT@@@Z	; set_big_inc_time_acceleration
PUBLIC	?set_small_inc_time_acceleration@@YGXPAUEVENT@@@Z ; set_small_inc_time_acceleration
PUBLIC	?set_small_dec_time_acceleration@@YGXPAUEVENT@@@Z ; set_small_dec_time_acceleration
PUBLIC	?toggle_pause_time_acceleration@@YGXPAUEVENT@@@Z ; toggle_pause_time_acceleration
PUBLIC	?set_time_acceleration@@YGXH@Z			; set_time_acceleration
PUBLIC	?force_pause_acceleration@@YGXXZ		; force_pause_acceleration
PUBLIC	?set_raw_time_acceleration@@YGXH@Z		; set_raw_time_acceleration
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0DC@MJPJELK@TIMEACCL?3?5cannot?5time?5accelerat@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?pause_sound_system@@YGXXZ:PROC			; pause_sound_system
EXTRN	?continue_sound_system@@YGXXZ:PROC		; continue_sound_system
EXTRN	?get_connection_list_head@@YGPAUCONNECTION_LIST_TYPE@@XZ:PROC ; get_connection_list_head
EXTRN	?command_line_max_time_acceleration@@3HA:DWORD	; command_line_max_time_acceleration
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MJPJELK@TIMEACCL?3?5cannot?5time?5accelerat@
CONST	SEGMENT
??_C@_0DC@MJPJELK@TIMEACCL?3?5cannot?5time?5accelerat@ DB 'TIMEACCL: cann'
	DB	'ot time accelerate multiplayer game', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?set_raw_time_acceleration@@YGXH@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
tv69 = -68						; size = 4
_acceleration$ = 8					; size = 4
?set_raw_time_acceleration@@YGXH@Z PROC			; set_raw_time_acceleration, COMDAT

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 276  : 
; 277  : 	time_acceleration = acceleration;

  00009	8b 45 08	 mov	 eax, DWORD PTR _acceleration$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?time_acceleration@@3HA, eax ; time_acceleration

; 278  : 
; 279  : 	time_acceleration = bound (time_acceleration, TIME_ACCELERATION_PAUSE, get_max_time_acceleration ());

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration
  00018	7d 09		 jge	 SHORT $LN7@set_raw_ti
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  00021	eb 25		 jmp	 SHORT $LN8@set_raw_ti
$LN7@set_raw_ti:
  00023	e8 00 00 00 00	 call	 ?get_max_time_acceleration@@YGHXZ ; get_max_time_acceleration
  00028	39 05 00 00 00
	00		 cmp	 DWORD PTR ?time_acceleration@@3HA, eax ; time_acceleration
  0002e	7e 0a		 jle	 SHORT $LN5@set_raw_ti
  00030	e8 00 00 00 00	 call	 ?get_max_time_acceleration@@YGHXZ ; get_max_time_acceleration
  00035	89 45 b8	 mov	 DWORD PTR tv68[ebp], eax
  00038	eb 08		 jmp	 SHORT $LN6@set_raw_ti
$LN5@set_raw_ti:
  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?time_acceleration@@3HA ; time_acceleration
  0003f	89 45 b8	 mov	 DWORD PTR tv68[ebp], eax
$LN6@set_raw_ti:
  00042	8b 4d b8	 mov	 ecx, DWORD PTR tv68[ebp]
  00045	89 4d bc	 mov	 DWORD PTR tv69[ebp], ecx
$LN8@set_raw_ti:
  00048	8b 55 bc	 mov	 edx, DWORD PTR tv69[ebp]
  0004b	89 15 00 00 00
	00		 mov	 DWORD PTR ?time_acceleration@@3HA, edx ; time_acceleration

; 280  : 
; 281  : 	if (time_acceleration == TIME_ACCELERATION_PAUSE)

  00051	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration
  00058	75 07		 jne	 SHORT $LN2@set_raw_ti

; 282  : 	{
; 283  : 		pause_sound_system ();

  0005a	e8 00 00 00 00	 call	 ?pause_sound_system@@YGXXZ ; pause_sound_system

; 284  : 	}
; 285  : 	else

  0005f	eb 05		 jmp	 SHORT $LN1@set_raw_ti
$LN2@set_raw_ti:

; 286  : 	{
; 287  : 		continue_sound_system ();

  00061	e8 00 00 00 00	 call	 ?continue_sound_system@@YGXXZ ; continue_sound_system
$LN1@set_raw_ti:

; 288  : 	}
; 289  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?set_raw_time_acceleration@@YGXH@Z ENDP			; set_raw_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?force_pause_acceleration@@YGXXZ
_TEXT	SEGMENT
?force_pause_acceleration@@YGXXZ PROC			; force_pause_acceleration, COMDAT

; 298  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 299  : 
; 300  : 	if (time_acceleration != TIME_ACCELERATION_PAUSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration
  00010	74 05		 je	 SHORT $LN2@force_paus

; 301  : 	{
; 302  : 		pause_sound_system ();

  00012	e8 00 00 00 00	 call	 ?pause_sound_system@@YGXXZ ; pause_sound_system
$LN2@force_paus:

; 303  : 	}
; 304  : 
; 305  : 	time_acceleration = TIME_ACCELERATION_PAUSE;

  00017	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration

; 306  : 
; 307  : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?force_pause_acceleration@@YGXXZ ENDP			; force_pause_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?set_time_acceleration@@YGXH@Z
_TEXT	SEGMENT
tv77 = -72						; size = 4
tv78 = -68						; size = 4
_acceleration$ = 8					; size = 4
?set_time_acceleration@@YGXH@Z PROC			; set_time_acceleration, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 234  : 
; 235  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	75 1d		 jne	 SHORT $LN2@set_time_a

; 236  : 	{
; 237  : 
; 238  : 		if (get_connection_list_head ())

  00012	e8 00 00 00 00	 call	 ?get_connection_list_head@@YGPAUCONNECTION_LIST_TYPE@@XZ ; get_connection_list_head
  00017	85 c0		 test	 eax, eax
  00019	74 12		 je	 SHORT $LN4@set_time_a

; 239  : 		{
; 240  : 
; 241  : 			debug_log ("TIMEACCL: cannot time accelerate multiplayer game");

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@MJPJELK@TIMEACCL?3?5cannot?5time?5accelerat@
  00020	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00025	83 c4 04	 add	 esp, 4

; 242  : 
; 243  : 			return;

  00028	e9 89 00 00 00	 jmp	 $LN1@set_time_a
$LN4@set_time_a:

; 244  : 		}
; 245  : 	}
; 246  : 	else

  0002d	eb 05		 jmp	 SHORT $LN3@set_time_a
$LN2@set_time_a:

; 247  : 	{
; 248  : 
; 249  : 		return;

  0002f	e9 82 00 00 00	 jmp	 $LN1@set_time_a
$LN3@set_time_a:

; 250  : 	}
; 251  : 
; 252  : 	if ((time_acceleration == TIME_ACCELERATION_PAUSE) && (acceleration != TIME_ACCELERATION_PAUSE))

  00034	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration
  0003b	75 0d		 jne	 SHORT $LN5@set_time_a
  0003d	83 7d 08 00	 cmp	 DWORD PTR _acceleration$[ebp], 0
  00041	74 07		 je	 SHORT $LN5@set_time_a

; 253  : 	{
; 254  : 		continue_sound_system ();

  00043	e8 00 00 00 00	 call	 ?continue_sound_system@@YGXXZ ; continue_sound_system
  00048	eb 14		 jmp	 SHORT $LN6@set_time_a
$LN5@set_time_a:

; 255  : 	}
; 256  : 	else if ((time_acceleration != TIME_ACCELERATION_PAUSE) && (acceleration == TIME_ACCELERATION_PAUSE))

  0004a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration
  00051	74 0b		 je	 SHORT $LN6@set_time_a
  00053	83 7d 08 00	 cmp	 DWORD PTR _acceleration$[ebp], 0
  00057	75 05		 jne	 SHORT $LN6@set_time_a

; 257  : 	{
; 258  : 		pause_sound_system ();

  00059	e8 00 00 00 00	 call	 ?pause_sound_system@@YGXXZ ; pause_sound_system
$LN6@set_time_a:

; 259  : 	}
; 260  : 
; 261  : 	time_acceleration = acceleration;

  0005e	8b 45 08	 mov	 eax, DWORD PTR _acceleration$[ebp]
  00061	a3 00 00 00 00	 mov	 DWORD PTR ?time_acceleration@@3HA, eax ; time_acceleration

; 262  : 
; 263  : 	if (time_acceleration != TIME_ACCELERATION_PAUSE)

  00066	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration
  0006d	74 47		 je	 SHORT $LN1@set_time_a

; 264  : 	{
; 265  : 
; 266  : 		time_acceleration = bound (time_acceleration, min_time_acceleration, get_max_time_acceleration ());

  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?time_acceleration@@3HA ; time_acceleration
  00074	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?min_time_acceleration@@3HA ; min_time_acceleration
  0007a	7d 0b		 jge	 SHORT $LN12@set_time_a
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?min_time_acceleration@@3HA ; min_time_acceleration
  00082	89 4d bc	 mov	 DWORD PTR tv78[ebp], ecx
  00085	eb 26		 jmp	 SHORT $LN13@set_time_a
$LN12@set_time_a:
  00087	e8 00 00 00 00	 call	 ?get_max_time_acceleration@@YGHXZ ; get_max_time_acceleration
  0008c	39 05 00 00 00
	00		 cmp	 DWORD PTR ?time_acceleration@@3HA, eax ; time_acceleration
  00092	7e 0a		 jle	 SHORT $LN10@set_time_a
  00094	e8 00 00 00 00	 call	 ?get_max_time_acceleration@@YGHXZ ; get_max_time_acceleration
  00099	89 45 b8	 mov	 DWORD PTR tv77[ebp], eax
  0009c	eb 09		 jmp	 SHORT $LN11@set_time_a
$LN10@set_time_a:
  0009e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?time_acceleration@@3HA ; time_acceleration
  000a4	89 55 b8	 mov	 DWORD PTR tv77[ebp], edx
$LN11@set_time_a:
  000a7	8b 45 b8	 mov	 eax, DWORD PTR tv77[ebp]
  000aa	89 45 bc	 mov	 DWORD PTR tv78[ebp], eax
$LN13@set_time_a:
  000ad	8b 4d bc	 mov	 ecx, DWORD PTR tv78[ebp]
  000b0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?time_acceleration@@3HA, ecx ; time_acceleration
$LN1@set_time_a:

; 267  : 	}
; 268  : }

  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 04 00	 ret	 4
?set_time_acceleration@@YGXH@Z ENDP			; set_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?toggle_pause_time_acceleration@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?toggle_pause_time_acceleration@@YGXPAUEVENT@@@Z PROC	; toggle_pause_time_acceleration, COMDAT

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 215  : 
; 216  : 	if (time_acceleration == TIME_ACCELERATION_PAUSE)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?time_acceleration@@3HA, 0 ; time_acceleration
  00010	75 0b		 jne	 SHORT $LN2@toggle_pau

; 217  : 	{
; 218  : 
; 219  : 		set_min_time_acceleration (ev);

  00012	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?set_min_time_acceleration@@YGXPAUEVENT@@@Z ; set_min_time_acceleration

; 220  : 	}
; 221  : 	else

  0001b	eb 09		 jmp	 SHORT $LN1@toggle_pau
$LN2@toggle_pau:

; 222  : 	{
; 223  : 
; 224  : 		set_pause_time_acceleration (ev);

  0001d	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?set_pause_time_acceleration@@YGXPAUEVENT@@@Z ; set_pause_time_acceleration
$LN1@toggle_pau:

; 225  : 	}
; 226  : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?toggle_pause_time_acceleration@@YGXPAUEVENT@@@Z ENDP	; toggle_pause_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?set_small_dec_time_acceleration@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_accel$ = -4						; size = 4
_ev$ = 8						; size = 4
?set_small_dec_time_acceleration@@YGXPAUEVENT@@@Z PROC	; set_small_dec_time_acceleration, COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  : 
; 195  : 	int
; 196  : 		accel;
; 197  : 
; 198  :    accel = time_acceleration - 1;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?time_acceleration@@3HA ; time_acceleration
  0000e	83 e8 01	 sub	 eax, 1
  00011	89 45 fc	 mov	 DWORD PTR _accel$[ebp], eax

; 199  : 
; 200  :    #if DEBUG_MODULE
; 201  : 
; 202  :    debug_log ("FLIGHT: time acceleration = %d", time_acceleration);
; 203  : 
; 204  :    #endif
; 205  : 
; 206  :    set_time_acceleration (accel);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _accel$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?set_time_acceleration@@YGXH@Z ; set_time_acceleration

; 207  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?set_small_dec_time_acceleration@@YGXPAUEVENT@@@Z ENDP	; set_small_dec_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?set_small_inc_time_acceleration@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_accel$ = -4						; size = 4
_ev$ = 8						; size = 4
?set_small_inc_time_acceleration@@YGXPAUEVENT@@@Z PROC	; set_small_inc_time_acceleration, COMDAT

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 173  : 
; 174  : 	int
; 175  : 		accel;
; 176  : 
; 177  :    accel = time_acceleration + 1;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?time_acceleration@@3HA ; time_acceleration
  0000e	83 c0 01	 add	 eax, 1
  00011	89 45 fc	 mov	 DWORD PTR _accel$[ebp], eax

; 178  : 
; 179  :    #if DEBUG_MODULE
; 180  : 
; 181  :    debug_log ("FLIGHT: time acceleration = %d", time_acceleration);
; 182  : 
; 183  :    #endif
; 184  : 
; 185  :    set_time_acceleration (accel);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _accel$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?set_time_acceleration@@YGXH@Z ; set_time_acceleration

; 186  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?set_small_inc_time_acceleration@@YGXPAUEVENT@@@Z ENDP	; set_small_inc_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?set_big_inc_time_acceleration@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_accel$ = -4						; size = 4
_ev$ = 8						; size = 4
?set_big_inc_time_acceleration@@YGXPAUEVENT@@@Z PROC	; set_big_inc_time_acceleration, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 152  : 
; 153  : 	int
; 154  : 		accel;
; 155  : 
; 156  :    accel = time_acceleration + 20;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?time_acceleration@@3HA ; time_acceleration
  0000e	83 c0 14	 add	 eax, 20			; 00000014H
  00011	89 45 fc	 mov	 DWORD PTR _accel$[ebp], eax

; 157  : 
; 158  :    #if DEBUG_MODULE
; 159  : 
; 160  :    debug_log ("FLIGHT: time acceleration = %d", time_acceleration);
; 161  : 
; 162  :    #endif
; 163  : 
; 164  :    set_time_acceleration (accel);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _accel$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?set_time_acceleration@@YGXH@Z ; set_time_acceleration

; 165  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?set_big_inc_time_acceleration@@YGXPAUEVENT@@@Z ENDP	; set_big_inc_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?set_pause_time_acceleration@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?set_pause_time_acceleration@@YGXPAUEVENT@@@Z PROC	; set_pause_time_acceleration, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 136  : 
; 137  :    #if DEBUG_MODULE
; 138  : 
; 139  :    debug_log ("FLIGHT: pause time acceleration (%d)", TIME_ACCELERATION_PAUSE);
; 140  : 
; 141  :    #endif
; 142  : 
; 143  :    set_time_acceleration (TIME_ACCELERATION_PAUSE);

  00009	6a 00		 push	 0
  0000b	e8 00 00 00 00	 call	 ?set_time_acceleration@@YGXH@Z ; set_time_acceleration

; 144  : }

  00010	5f		 pop	 edi
  00011	5e		 pop	 esi
  00012	5b		 pop	 ebx
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?set_pause_time_acceleration@@YGXPAUEVENT@@@Z ENDP	; set_pause_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?set_min_time_acceleration@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?set_min_time_acceleration@@YGXPAUEVENT@@@Z PROC	; set_min_time_acceleration, COMDAT

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 120  : 
; 121  :    #if DEBUG_MODULE
; 122  : 
; 123  :    debug_log ("FLIGHT: Min time acceleration (%d)", min_time_acceleration);
; 124  : 
; 125  :    #endif
; 126  : 
; 127  :    set_time_acceleration (min_time_acceleration);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?min_time_acceleration@@3HA ; min_time_acceleration
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?set_time_acceleration@@YGXH@Z ; set_time_acceleration

; 128  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?set_min_time_acceleration@@YGXPAUEVENT@@@Z ENDP	; set_min_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?get_max_time_acceleration@@YGHXZ
_TEXT	SEGMENT
?get_max_time_acceleration@@YGHXZ PROC			; get_max_time_acceleration, COMDAT

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 	return max (max_time_acceleration, command_line_max_time_acceleration);

  00009	68 00 00 00 00	 push	 OFFSET ?command_line_max_time_acceleration@@3HA ; command_line_max_time_acceleration
  0000e	68 00 00 00 00	 push	 OFFSET ?max_time_acceleration@@3HA ; max_time_acceleration
  00013	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00018	8b 00		 mov	 eax, DWORD PTR [eax]

; 112  : }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?get_max_time_acceleration@@YGHXZ ENDP			; get_max_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?get_min_time_acceleration@@YGHXZ
_TEXT	SEGMENT
?get_min_time_acceleration@@YGHXZ PROC			; get_min_time_acceleration, COMDAT

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 106  : 	return min_time_acceleration;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?min_time_acceleration@@3HA ; min_time_acceleration

; 107  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_min_time_acceleration@@YGHXZ ENDP			; get_min_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\timeaccl.c
;	COMDAT ?get_time_acceleration@@YGHXZ
_TEXT	SEGMENT
?get_time_acceleration@@YGHXZ PROC			; get_time_acceleration, COMDAT

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 101  : 	return time_acceleration;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?time_acceleration@@3HA ; time_acceleration

; 102  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_time_acceleration@@YGHXZ ENDP			; get_time_acceleration
_TEXT	ENDS
END
