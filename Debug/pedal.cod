; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\dynamics\common\pedal.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_fabsf
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?pedal_left@@YGXPAUEVENT@@@Z			; pedal_left
PUBLIC	?pedal_right@@YGXPAUEVENT@@@Z			; pedal_right
PUBLIC	?pedal_mouse_input@@YGXPAUEVENT@@@Z		; pedal_mouse_input
PUBLIC	?update_pedal_pressure_inputs@@YGXXZ		; update_pedal_pressure_inputs
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4049000000000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@40d3880000000000
PUBLIC	__real@42480000
PUBLIC	__real@469c4000
PUBLIC	__real@bfe0000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_fabs:PROC
EXTRN	?get_joystick_axis@@YGHHH@Z:PROC		; get_joystick_axis
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_nonlinear_cyclic@@3HA:DWORD	; command_line_nonlinear_cyclic
EXTRN	?command_line_rudder_joystick_index@@3HA:DWORD	; command_line_rudder_joystick_index
EXTRN	?command_line_rudder_joystick_axis@@3HA:DWORD	; command_line_rudder_joystick_axis
EXTRN	?command_line_reverse_pedal@@3HA:DWORD		; command_line_reverse_pedal
EXTRN	?command_line_dynamics_rudder_value@@3MA:DWORD	; command_line_dynamics_rudder_value
EXTRN	?command_line_dynamics_rudder_acceleration@@3MA:DWORD ; command_line_dynamics_rudder_acceleration
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?trim_button_held@@3HA:DWORD			; trim_button_held
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@469c4000
CONST	SEGMENT
__real@469c4000 DD 0469c4000r			; 20000
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@40d3880000000000
CONST	SEGMENT
__real@40d3880000000000 DQ 040d3880000000000r	; 20000
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@4049000000000000
CONST	SEGMENT
__real@4049000000000000 DQ 04049000000000000r	; 50
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\pedal.c
;	COMDAT ?update_pedal_pressure_inputs@@YGXXZ
_TEXT	SEGMENT
tv617 = -88						; size = 4
tv643 = -84						; size = 4
tv535 = -84						; size = 8
tv466 = -84						; size = 4
tv303 = -84						; size = 4
tv610 = -80						; size = 4
tv467 = -80						; size = 4
tv304 = -80						; size = 4
tv71 = -80						; size = 4
_input$1 = -12						; size = 4
_lag$2 = -8						; size = 4
_joyval$3 = -4						; size = 4
?update_pedal_pressure_inputs@@YGXXZ PROC		; update_pedal_pressure_inputs, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 	if (trim_button_held)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?trim_button_held@@3HA, 0 ; trim_button_held
  00010	74 1c		 je	 SHORT $LN4@update_ped

; 132  : 		current_flight_dynamics->input_data.pedal.delta = current_flight_dynamics->input_data.pedal_trim.value;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001d	8b 91 f4 1b 00
	00		 mov	 edx, DWORD PTR [ecx+7156]
  00023	89 90 e0 1b 00
	00		 mov	 DWORD PTR [eax+7136], edx

; 133  : 	else

  00029	e9 15 07 00 00	 jmp	 $LN2@update_ped
$LN4@update_ped:

; 134  : 		switch (get_global_pedal_input ())

  0002e	a1 30 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+48
  00033	89 45 b0	 mov	 DWORD PTR tv71[ebp], eax
  00036	83 7d b0 01	 cmp	 DWORD PTR tv71[ebp], 1
  0003a	74 15		 je	 SHORT $LN6@update_ped
  0003c	83 7d b0 03	 cmp	 DWORD PTR tv71[ebp], 3
  00040	74 0f		 je	 SHORT $LN6@update_ped
  00042	83 7d b0 04	 cmp	 DWORD PTR tv71[ebp], 4
  00046	0f 84 93 04 00
	00		 je	 $LN23@update_ped
  0004c	e9 f2 06 00 00	 jmp	 $LN2@update_ped
$LN6@update_ped:

; 135  : 		{
; 136  : 
; 137  : 			case KEYBOARD_INPUT:
; 138  : 			case MOUSE_INPUT:
; 139  : 			{
; 140  : 
; 141  : 				if (current_flight_dynamics->input_data.pedal_input_pressure & PEDAL_PRESSURE_LEFT)

  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00056	8b 88 20 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7200]
  0005c	83 e1 01	 and	 ecx, 1
  0005f	0f 84 2a 01 00
	00		 je	 $LN7@update_ped

; 142  : 				{
; 143  : 
; 144  : 					if (current_flight_dynamics->input_data.pedal_pressure.value > 0.0)

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0006a	f3 0f 5a 80 0c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7180]
  00072	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0007a	76 3f		 jbe	 SHORT $LN9@update_ped

; 145  : 					{
; 146  : 
; 147  : 						// slowing down
; 148  : 						current_flight_dynamics->input_data.pedal_pressure.value -= (50 * get_delta_time ()) * current_flight_dynamics->input_data.pedal_pressure.value;

  0007c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  00084	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00091	f3 0f 59 80 0c
	1c 00 00	 mulss	 xmm0, DWORD PTR [eax+7180]
  00099	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0009f	f3 0f 10 89 0c
	1c 00 00	 movss	 xmm1, DWORD PTR [ecx+7180]
  000a7	f3 0f 5c c8	 subss	 xmm1, xmm0
  000ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b1	f3 0f 11 8a 0c
	1c 00 00	 movss	 DWORD PTR [edx+7180], xmm1

; 149  : 					}
; 150  : 					else

  000b9	eb 2b		 jmp	 SHORT $LN10@update_ped
$LN9@update_ped:

; 151  : 					{
; 152  : 
; 153  : 						// speeding up
; 154  : 						current_flight_dynamics->input_data.pedal_pressure.value += 1 * get_delta_time ();

  000bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000c3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000d0	f3 0f 58 80 0c
	1c 00 00	 addss	 xmm0, DWORD PTR [eax+7180]
  000d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000de	f3 0f 11 81 0c
	1c 00 00	 movss	 DWORD PTR [ecx+7180], xmm0
$LN10@update_ped:

; 155  : 					}
; 156  : 
; 157  : 					//
; 158  : 
; 159  : 					if (current_flight_dynamics->input_data.pedal.value > 0.0)

  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000eb	f3 0f 5a 80 dc
	1b 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7132]
  000f3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000fb	76 47		 jbe	 SHORT $LN11@update_ped

; 160  : 					{
; 161  : 
; 162  : 						// slowing down
; 163  : 						current_flight_dynamics->input_data.pedal.value -= (5.0 * get_delta_time ()) * current_flight_dynamics->input_data.pedal.value;

  000fd	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00105	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00112	f3 0f 5a 88 dc
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7132]
  0011a	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0011e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00124	f3 0f 5a 89 dc
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+7132]
  0012c	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00130	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00134	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0013a	f3 0f 11 82 dc
	1b 00 00	 movss	 DWORD PTR [edx+7132], xmm0

; 164  : 					}
; 165  : 					else

  00142	eb 17		 jmp	 SHORT $LN12@update_ped
$LN11@update_ped:

; 166  : 					{
; 167  : 
; 168  : 						// speeding up
; 169  : 						current_flight_dynamics->input_data.pedal.value = current_flight_dynamics->input_data.pedal.value;

  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00149	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0014f	8b 91 dc 1b 00
	00		 mov	 edx, DWORD PTR [ecx+7132]
  00155	89 90 dc 1b 00
	00		 mov	 DWORD PTR [eax+7132], edx
$LN12@update_ped:

; 170  : 					}
; 171  : 
; 172  : 					current_flight_dynamics->input_data.pedal_pressure.value -= 50 * get_delta_time ();

  0015b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  00163	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0016b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00170	f3 0f 10 88 0c
	1c 00 00	 movss	 xmm1, DWORD PTR [eax+7180]
  00178	f3 0f 5c c8	 subss	 xmm1, xmm0
  0017c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00182	f3 0f 11 89 0c
	1c 00 00	 movss	 DWORD PTR [ecx+7180], xmm1
  0018a	e9 0f 02 00 00	 jmp	 $LN14@update_ped
$LN7@update_ped:

; 173  : 				}
; 174  : 				else if (current_flight_dynamics->input_data.pedal_input_pressure & PEDAL_PRESSURE_RIGHT)

  0018f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00194	8b 88 20 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7200]
  0019a	83 e1 02	 and	 ecx, 2
  0019d	0f 84 28 01 00
	00		 je	 $LN13@update_ped

; 175  : 				{
; 176  : 
; 177  : 					if (current_flight_dynamics->input_data.pedal_pressure.value < 0.0)

  001a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a8	f3 0f 5a 80 0c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7180]
  001b0	0f 57 c9	 xorps	 xmm1, xmm1
  001b3	66 0f 2f c8	 comisd	 xmm1, xmm0
  001b7	76 3f		 jbe	 SHORT $LN15@update_ped

; 178  : 					{
; 179  : 
; 180  : 						// slowing down
; 181  : 						current_flight_dynamics->input_data.pedal_pressure.value -= (50 * get_delta_time ()) * current_flight_dynamics->input_data.pedal_pressure.value;

  001b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  001c1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  001c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001ce	f3 0f 59 80 0c
	1c 00 00	 mulss	 xmm0, DWORD PTR [eax+7180]
  001d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001dc	f3 0f 10 89 0c
	1c 00 00	 movss	 xmm1, DWORD PTR [ecx+7180]
  001e4	f3 0f 5c c8	 subss	 xmm1, xmm0
  001e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001ee	f3 0f 11 8a 0c
	1c 00 00	 movss	 DWORD PTR [edx+7180], xmm1

; 182  : 					}
; 183  : 					else

  001f6	eb 2f		 jmp	 SHORT $LN16@update_ped
$LN15@update_ped:

; 184  : 					{
; 185  : 
; 186  : 						// speeding up
; 187  : 						current_flight_dynamics->input_data.pedal_pressure.value -= 1 * get_delta_time ();

  001f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00200	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00208	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0020d	f3 0f 10 88 0c
	1c 00 00	 movss	 xmm1, DWORD PTR [eax+7180]
  00215	f3 0f 5c c8	 subss	 xmm1, xmm0
  00219	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0021f	f3 0f 11 89 0c
	1c 00 00	 movss	 DWORD PTR [ecx+7180], xmm1
$LN16@update_ped:

; 188  : 					}
; 189  : 
; 190  : 					//
; 191  : 
; 192  : 					if (current_flight_dynamics->input_data.pedal.value < 0.0)

  00227	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0022c	f3 0f 5a 80 dc
	1b 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7132]
  00234	0f 57 c9	 xorps	 xmm1, xmm1
  00237	66 0f 2f c8	 comisd	 xmm1, xmm0
  0023b	76 47		 jbe	 SHORT $LN17@update_ped

; 193  : 					{
; 194  : 
; 195  : 						// slowing down
; 196  : 						current_flight_dynamics->input_data.pedal.value -= (5.0 * get_delta_time ()) * current_flight_dynamics->input_data.pedal.value;

  0023d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00245	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  0024d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00252	f3 0f 5a 88 dc
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7132]
  0025a	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0025e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00264	f3 0f 5a 89 dc
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+7132]
  0026c	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00270	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00274	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0027a	f3 0f 11 82 dc
	1b 00 00	 movss	 DWORD PTR [edx+7132], xmm0

; 197  : 					}
; 198  : 					else

  00282	eb 17		 jmp	 SHORT $LN18@update_ped
$LN17@update_ped:

; 199  : 					{
; 200  : 
; 201  : 						// speeding up
; 202  : 						current_flight_dynamics->input_data.pedal.value = current_flight_dynamics->input_data.pedal.value;

  00284	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00289	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0028f	8b 91 dc 1b 00
	00		 mov	 edx, DWORD PTR [ecx+7132]
  00295	89 90 dc 1b 00
	00		 mov	 DWORD PTR [eax+7132], edx
$LN18@update_ped:

; 203  : 					}
; 204  : 
; 205  : 					current_flight_dynamics->input_data.pedal_pressure.value += 50 * get_delta_time ();

  0029b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  002a3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  002ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002b0	f3 0f 58 80 0c
	1c 00 00	 addss	 xmm0, DWORD PTR [eax+7180]
  002b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002be	f3 0f 11 81 0c
	1c 00 00	 movss	 DWORD PTR [ecx+7180], xmm0

; 206  : 				}
; 207  : 				else

  002c6	e9 d3 00 00 00	 jmp	 $LN14@update_ped
$LN13@update_ped:

; 208  : 				{
; 209  : 
; 210  : 					if (fabs (current_flight_dynamics->input_data.pedal_pressure.value) < 1.0)

  002cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002d0	51		 push	 ecx
  002d1	f3 0f 10 80 0c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7180]
  002d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002de	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  002e3	dd 5d ac	 fstp	 QWORD PTR tv535[ebp]
  002e6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  002ee	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv535[ebp]
  002f3	76 12		 jbe	 SHORT $LN19@update_ped

; 211  : 					{
; 212  : 
; 213  : 						current_flight_dynamics->input_data.pedal_pressure.value = 0.0;

  002f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002fa	0f 57 c0	 xorps	 xmm0, xmm0
  002fd	f3 0f 11 80 0c
	1c 00 00	 movss	 DWORD PTR [eax+7180], xmm0

; 214  : 					}
; 215  : 					else

  00305	eb 45		 jmp	 SHORT $LN20@update_ped
$LN19@update_ped:

; 216  : 					{
; 217  : 
; 218  : 						current_flight_dynamics->input_data.pedal_pressure.value -= (5.0 * get_delta_time ()) * current_flight_dynamics->input_data.pedal_pressure.value;

  00307	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0030f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00317	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0031c	f3 0f 5a 88 0c
	1c 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7180]
  00324	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00328	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0032e	f3 0f 5a 89 0c
	1c 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+7180]
  00336	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0033a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0033e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00344	f3 0f 11 82 0c
	1c 00 00	 movss	 DWORD PTR [edx+7180], xmm0
$LN20@update_ped:

; 219  : 					}
; 220  : 
; 221  : 					current_flight_dynamics->input_data.pedal.value -= 1.0 * ((current_flight_dynamics->input_data.pedal.value - current_flight_dynamics->input_data.pedal_trim.value ) * get_delta_time ());

  0034c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00351	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00357	f3 0f 10 80 dc
	1b 00 00	 movss	 xmm0, DWORD PTR [eax+7132]
  0035f	f3 0f 5c 81 f4
	1b 00 00	 subss	 xmm0, DWORD PTR [ecx+7156]
  00367	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0036f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00373	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0037b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00381	f3 0f 5a 8a dc
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [edx+7132]
  00389	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0038d	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00391	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00396	f3 0f 11 80 dc
	1b 00 00	 movss	 DWORD PTR [eax+7132], xmm0
$LN14@update_ped:

; 222  : 				}
; 223  : 
; 224  : 				current_flight_dynamics->input_data.pedal_pressure.value = bound (current_flight_dynamics->input_data.pedal_pressure.value,

  0039e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003a9	f3 0f 10 80 14
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7188]
  003b1	0f 2f 81 0c 1c
	00 00		 comiss	 xmm0, DWORD PTR [ecx+7180]
  003b8	76 15		 jbe	 SHORT $LN40@update_ped
  003ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003c0	f3 0f 10 82 14
	1c 00 00	 movss	 xmm0, DWORD PTR [edx+7188]
  003c8	f3 0f 11 45 b0	 movss	 DWORD PTR tv304[ebp], xmm0
  003cd	eb 4d		 jmp	 SHORT $LN41@update_ped
$LN40@update_ped:
  003cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003da	f3 0f 10 80 0c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7180]
  003e2	0f 2f 81 18 1c
	00 00		 comiss	 xmm0, DWORD PTR [ecx+7192]
  003e9	76 15		 jbe	 SHORT $LN38@update_ped
  003eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003f1	f3 0f 10 82 18
	1c 00 00	 movss	 xmm0, DWORD PTR [edx+7192]
  003f9	f3 0f 11 45 ac	 movss	 DWORD PTR tv303[ebp], xmm0
  003fe	eb 12		 jmp	 SHORT $LN39@update_ped
$LN38@update_ped:
  00400	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00405	f3 0f 10 80 0c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7180]
  0040d	f3 0f 11 45 ac	 movss	 DWORD PTR tv303[ebp], xmm0
$LN39@update_ped:
  00412	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv303[ebp]
  00417	f3 0f 11 45 b0	 movss	 DWORD PTR tv304[ebp], xmm0
$LN41@update_ped:
  0041c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00422	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv304[ebp]
  00427	f3 0f 11 81 0c
	1c 00 00	 movss	 DWORD PTR [ecx+7180], xmm0

; 225  : 																					current_flight_dynamics->input_data.pedal_pressure.min,
; 226  : 																					current_flight_dynamics->input_data.pedal_pressure.max
; 227  : 																					);
; 228  : 
; 229  : 				// recalculate pedal position
; 230  : 
; 231  : 				if (current_flight_dynamics->input_data.pedal_pressure.value)

  0042f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00434	f3 0f 10 80 0c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7180]
  0043c	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00443	9f		 lahf
  00444	f6 c4 44	 test	 ah, 68			; 00000044H
  00447	7b 3b		 jnp	 SHORT $LN21@update_ped

; 232  : 				{
; 233  : 
; 234  : 					current_flight_dynamics->input_data.pedal.value += (1 * get_delta_time ()) * current_flight_dynamics->input_data.pedal_pressure.value;

  00449	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00451	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00459	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0045e	f3 0f 59 80 0c
	1c 00 00	 mulss	 xmm0, DWORD PTR [eax+7180]
  00466	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0046c	f3 0f 58 81 dc
	1b 00 00	 addss	 xmm0, DWORD PTR [ecx+7132]
  00474	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0047a	f3 0f 11 82 dc
	1b 00 00	 movss	 DWORD PTR [edx+7132], xmm0

; 235  : 				}
; 236  : 				else

  00482	eb 56		 jmp	 SHORT $LN22@update_ped
$LN21@update_ped:

; 237  : 				{
; 238  : 
; 239  : 					// restore
; 240  : 
; 241  : 					//if ((global_options.cyclic_input == KEYBOARD_INPUT) && (trim_control))
; 242  : 					{
; 243  : 
; 244  : 						//current_flight_dynamics->input_data.pedal.value *= 0.5;
; 245  : 						current_flight_dynamics->input_data.pedal.value -= ((get_delta_time ()) / 2.0) * (current_flight_dynamics->input_data.pedal.value - current_flight_dynamics->input_data.pedal_trim.value);

  00484	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0048c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00494	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00499	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0049f	f3 0f 10 88 dc
	1b 00 00	 movss	 xmm1, DWORD PTR [eax+7132]
  004a7	f3 0f 5c 89 f4
	1b 00 00	 subss	 xmm1, DWORD PTR [ecx+7156]
  004af	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  004b3	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  004b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004bd	f3 0f 5a 8a dc
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [edx+7132]
  004c5	f2 0f 5c c8	 subsd	 xmm1, xmm0
  004c9	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  004cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004d2	f3 0f 11 80 dc
	1b 00 00	 movss	 DWORD PTR [eax+7132], xmm0
$LN22@update_ped:

; 246  : 					}
; 247  : 				}
; 248  : 
; 249  : 				break;

  004da	e9 64 02 00 00	 jmp	 $LN2@update_ped
$LN23@update_ped:

; 250  : 			}
; 251  : 
; 252  : 			case RUDDER_INPUT:
; 253  : 			{
; 254  : 
; 255  : 				int
; 256  : 					joyval;
; 257  : 
; 258  : 				float
; 259  : 					lag;
; 260  : 
; 261  : 				// 030418 loke
; 262  : 				// implemented multiple joystick device selection
; 263  : 				if (command_line_rudder_joystick_index == -1)

  004df	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_rudder_joystick_index@@3HA, -1 ; command_line_rudder_joystick_index
  004e6	75 18		 jne	 SHORT $LN24@update_ped

; 264  : 				{
; 265  : 					joyval = get_joystick_axis (current_flight_dynamics->input_data.cyclic_joystick_device_index, JOYSTICK_DEFAULT_AXIS_YAW);

  004e8	6a 05		 push	 5
  004ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004ef	8b 88 84 01 00
	00		 mov	 ecx, DWORD PTR [eax+388]
  004f5	51		 push	 ecx
  004f6	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  004fb	89 45 fc	 mov	 DWORD PTR _joyval$3[ebp], eax

; 266  : 				}
; 267  : 				else

  004fe	eb 15		 jmp	 SHORT $LN25@update_ped
$LN24@update_ped:

; 268  : 				{
; 269  : 					joyval = get_joystick_axis (command_line_rudder_joystick_index, command_line_rudder_joystick_axis);

  00500	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_rudder_joystick_axis@@3HA ; command_line_rudder_joystick_axis
  00505	50		 push	 eax
  00506	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_rudder_joystick_index@@3HA ; command_line_rudder_joystick_index
  0050c	51		 push	 ecx
  0050d	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  00512	89 45 fc	 mov	 DWORD PTR _joyval$3[ebp], eax
$LN25@update_ped:

; 270  : 				}
; 271  : 
; 272  : 				// Retro 17Jul2004
; 273  : 				if (command_line_reverse_pedal)

  00515	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_reverse_pedal@@3HA, 0 ; command_line_reverse_pedal
  0051c	74 07		 je	 SHORT $LN26@update_ped

; 274  : 				{
; 275  : 					joyval *= -1;

  0051e	6b 45 fc ff	 imul	 eax, DWORD PTR _joyval$3[ebp], -1
  00522	89 45 fc	 mov	 DWORD PTR _joyval$3[ebp], eax
$LN26@update_ped:

; 276  : 				}
; 277  : 				// Retro 17Jul2004 end
; 278  : 
; 279  : 				if (command_line_nonlinear_cyclic)

  00525	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_nonlinear_cyclic@@3HA, 0 ; command_line_nonlinear_cyclic
  0052c	0f 84 90 00 00
	00		 je	 $LN27@update_ped

; 280  : 				{
; 281  : 					// in non-linear mode it uses a curve described by f(x) = x*x + x
; 282  : 					// gives a not so sensitive control around centre
; 283  : 					float input = 2.0 * ((float) joyval ) / ((float) JOYSTICK_AXIS_MAXIMUM - (float) JOYSTICK_AXIS_MINIMUM);

  00532	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _joyval$3[ebp]
  00537	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0053b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00543	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40d3880000000000
  0054b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0054f	f3 0f 11 45 f4	 movss	 DWORD PTR _input$1[ebp], xmm0

; 284  : 					if (input >= 0)

  00554	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _input$1[ebp]
  00559	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00560	72 11		 jb	 SHORT $LN29@update_ped

; 285  : 						input *= input;

  00562	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _input$1[ebp]
  00567	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _input$1[ebp]
  0056c	f3 0f 11 45 f4	 movss	 DWORD PTR _input$1[ebp], xmm0

; 286  : 					else

  00571	eb 16		 jmp	 SHORT $LN30@update_ped
$LN29@update_ped:

; 287  : 						input *= -input;

  00573	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _input$1[ebp]
  00578	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0057f	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _input$1[ebp]
  00584	f3 0f 11 45 f4	 movss	 DWORD PTR _input$1[ebp], xmm0
$LN30@update_ped:

; 288  : 					input += input;

  00589	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _input$1[ebp]
  0058e	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _input$1[ebp]
  00593	f3 0f 11 45 f4	 movss	 DWORD PTR _input$1[ebp], xmm0

; 289  : 					input *= 50.0;

  00598	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _input$1[ebp]
  0059d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4049000000000000
  005a5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a9	f3 0f 11 45 f4	 movss	 DWORD PTR _input$1[ebp], xmm0

; 290  : 
; 291  : 					current_flight_dynamics->input_data.pedal.delta = input;

  005ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005b3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _input$1[ebp]
  005b8	f3 0f 11 80 e0
	1b 00 00	 movss	 DWORD PTR [eax+7136], xmm0

; 292  : 				}
; 293  : 				else

  005c0	eb 2a		 jmp	 SHORT $LN28@update_ped
$LN27@update_ped:

; 294  : 					current_flight_dynamics->input_data.pedal.delta = (float) (200.0 * (float) joyval ) / ((float) JOYSTICK_AXIS_MAXIMUM - (float) JOYSTICK_AXIS_MINIMUM);

  005c2	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _joyval$3[ebp]
  005c7	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  005cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4069000000000000
  005d3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005d7	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@469c4000
  005df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005e4	f3 0f 11 80 e0
	1b 00 00	 movss	 DWORD PTR [eax+7136], xmm0
$LN28@update_ped:

; 295  : 
; 296  : 				if (current_flight_dynamics->input_data.pedal.delta < -0.5)

  005ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005f1	f3 0f 5a 80 e0
	1b 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7136]
  005f9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfe0000000000000
  00601	66 0f 2f c8	 comisd	 xmm1, xmm0
  00605	76 11		 jbe	 SHORT $LN31@update_ped

; 297  : 				{
; 298  : 
; 299  : 					current_flight_dynamics->input_data.pedal_input_pressure = PEDAL_PRESSURE_LEFT;

  00607	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0060c	c7 80 20 1c 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+7200], 1
  00616	eb 37		 jmp	 SHORT $LN34@update_ped
$LN31@update_ped:

; 300  : 				}
; 301  : 				else if (current_flight_dynamics->input_data.pedal.delta > 0.5)

  00618	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0061d	f3 0f 5a 80 e0
	1b 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7136]
  00625	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fe0000000000000
  0062d	76 11		 jbe	 SHORT $LN33@update_ped

; 302  : 				{
; 303  : 
; 304  : 					current_flight_dynamics->input_data.pedal_input_pressure = PEDAL_PRESSURE_RIGHT;

  0062f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00634	c7 80 20 1c 00
	00 02 00 00 00	 mov	 DWORD PTR [eax+7200], 2

; 305  : 				}
; 306  : 				else

  0063e	eb 0f		 jmp	 SHORT $LN34@update_ped
$LN33@update_ped:

; 307  : 				{
; 308  : 
; 309  : 					current_flight_dynamics->input_data.pedal_input_pressure = PEDAL_PRESSURE_NONE;

  00640	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00645	c7 80 20 1c 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+7200], 0
$LN34@update_ped:

; 310  : 				}
; 311  : 
; 312  : 				current_flight_dynamics->input_data.pedal.delta += current_flight_dynamics->input_data.pedal_trim.value;

  0064f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00654	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0065a	f3 0f 10 80 e0
	1b 00 00	 movss	 xmm0, DWORD PTR [eax+7136]
  00662	f3 0f 58 81 f4
	1b 00 00	 addss	 xmm0, DWORD PTR [ecx+7156]
  0066a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00670	f3 0f 11 82 e0
	1b 00 00	 movss	 DWORD PTR [edx+7136], xmm0

; 313  : 
; 314  : 				// vary lag depending if its demand or restore
; 315  : 				if (fabs (current_flight_dynamics->input_data.pedal.value) < fabs (current_flight_dynamics->input_data.pedal.delta))

  00678	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0067d	51		 push	 ecx
  0067e	f3 0f 10 80 dc
	1b 00 00	 movss	 xmm0, DWORD PTR [eax+7132]
  00686	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00690	d9 5d b0	 fstp	 DWORD PTR tv610[ebp]
  00693	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv610[ebp]
  00698	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0069e	51		 push	 ecx
  0069f	f3 0f 10 89 e0
	1b 00 00	 movss	 xmm1, DWORD PTR [ecx+7136]
  006a7	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  006ac	f3 0f 11 45 ac	 movss	 DWORD PTR tv643[ebp], xmm0
  006b1	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  006b6	d9 5d a8	 fstp	 DWORD PTR tv617[ebp]
  006b9	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv617[ebp]
  006be	f3 0f 10 4d ac	 movss	 xmm1, DWORD PTR tv643[ebp]
  006c3	0f 2f c1	 comiss	 xmm0, xmm1
  006c6	76 1b		 jbe	 SHORT $LN35@update_ped

; 316  : 				{
; 317  : 
; 318  : 					lag = 2.0 * command_line_dynamics_rudder_acceleration;

  006c8	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?command_line_dynamics_rudder_acceleration@@3MA
  006d0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  006d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006dc	f3 0f 11 45 f8	 movss	 DWORD PTR _lag$2[ebp], xmm0

; 319  : 				}
; 320  : 				else

  006e1	eb 19		 jmp	 SHORT $LN36@update_ped
$LN35@update_ped:

; 321  : 				{
; 322  : 
; 323  : 					lag = 3.0 * command_line_dynamics_rudder_value;

  006e3	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?command_line_dynamics_rudder_value@@3MA
  006eb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4008000000000000
  006f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006f7	f3 0f 11 45 f8	 movss	 DWORD PTR _lag$2[ebp], xmm0
$LN36@update_ped:

; 324  : 				}
; 325  : 
; 326  : 				current_flight_dynamics->input_data.pedal.value += (lag * get_delta_time ()) * (current_flight_dynamics->input_data.pedal.delta - current_flight_dynamics->input_data.pedal.value);

  006fc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lag$2[ebp]
  00701	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00709	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0070e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00714	f3 0f 10 88 e0
	1b 00 00	 movss	 xmm1, DWORD PTR [eax+7136]
  0071c	f3 0f 5c 89 dc
	1b 00 00	 subss	 xmm1, DWORD PTR [ecx+7132]
  00724	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00728	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0072e	f3 0f 58 82 dc
	1b 00 00	 addss	 xmm0, DWORD PTR [edx+7132]
  00736	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0073b	f3 0f 11 80 dc
	1b 00 00	 movss	 DWORD PTR [eax+7132], xmm0
$LN2@update_ped:

; 327  : 
; 328  : 				//debug_log ("pedal %f", current_flight_dynamics->input_data.pedal.value);
; 329  : 
; 330  : 				break;
; 331  : 			}
; 332  : 		}
; 333  : 
; 334  : 	current_flight_dynamics->input_data.pedal.value = bound (current_flight_dynamics->input_data.pedal.value,

  00743	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00748	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0074e	f3 0f 10 80 e4
	1b 00 00	 movss	 xmm0, DWORD PTR [eax+7140]
  00756	0f 2f 81 dc 1b
	00 00		 comiss	 xmm0, DWORD PTR [ecx+7132]
  0075d	76 15		 jbe	 SHORT $LN44@update_ped
  0075f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00765	f3 0f 10 82 e4
	1b 00 00	 movss	 xmm0, DWORD PTR [edx+7140]
  0076d	f3 0f 11 45 b0	 movss	 DWORD PTR tv467[ebp], xmm0
  00772	eb 4d		 jmp	 SHORT $LN45@update_ped
$LN44@update_ped:
  00774	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00779	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0077f	f3 0f 10 80 dc
	1b 00 00	 movss	 xmm0, DWORD PTR [eax+7132]
  00787	0f 2f 81 e8 1b
	00 00		 comiss	 xmm0, DWORD PTR [ecx+7144]
  0078e	76 15		 jbe	 SHORT $LN42@update_ped
  00790	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00796	f3 0f 10 82 e8
	1b 00 00	 movss	 xmm0, DWORD PTR [edx+7144]
  0079e	f3 0f 11 45 ac	 movss	 DWORD PTR tv466[ebp], xmm0
  007a3	eb 12		 jmp	 SHORT $LN43@update_ped
$LN42@update_ped:
  007a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007aa	f3 0f 10 80 dc
	1b 00 00	 movss	 xmm0, DWORD PTR [eax+7132]
  007b2	f3 0f 11 45 ac	 movss	 DWORD PTR tv466[ebp], xmm0
$LN43@update_ped:
  007b7	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv466[ebp]
  007bc	f3 0f 11 45 b0	 movss	 DWORD PTR tv467[ebp], xmm0
$LN45@update_ped:
  007c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007c7	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv467[ebp]
  007cc	f3 0f 11 81 dc
	1b 00 00	 movss	 DWORD PTR [ecx+7132], xmm0

; 335  : 												current_flight_dynamics->input_data.pedal.min,
; 336  : 												current_flight_dynamics->input_data.pedal.max);
; 337  : }

  007d4	5f		 pop	 edi
  007d5	5e		 pop	 esi
  007d6	5b		 pop	 ebx
  007d7	8b e5		 mov	 esp, ebp
  007d9	5d		 pop	 ebp
  007da	c3		 ret	 0
?update_pedal_pressure_inputs@@YGXXZ ENDP		; update_pedal_pressure_inputs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\pedal.c
;	COMDAT ?pedal_mouse_input@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?pedal_mouse_input@@YGXPAUEVENT@@@Z PROC		; pedal_mouse_input, COMDAT

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 
; 114  : #if 0
; 115  : 
; 116  : 	current_flight_dynamics->input_data.pedal_pressure.value += (ev->dx);
; 117  : 
; 118  : #else
; 119  : 
; 120  : 	current_flight_dynamics->input_data.pedal.value += (ev->dx);

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	0f bf 48 0c	 movsx	 ecx, WORD PTR [eax+12]
  00010	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00014	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001a	f3 0f 58 82 dc
	1b 00 00	 addss	 xmm0, DWORD PTR [edx+7132]
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00027	f3 0f 11 80 dc
	1b 00 00	 movss	 DWORD PTR [eax+7132], xmm0

; 121  : 
; 122  : #endif
; 123  : }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?pedal_mouse_input@@YGXPAUEVENT@@@Z ENDP		; pedal_mouse_input
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\pedal.c
;	COMDAT ?pedal_right@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?pedal_right@@YGXPAUEVENT@@@Z PROC			; pedal_right, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 94   : 
; 95   : 	if (ev->state == KEY_STATE_DOWN)

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00010	83 f9 02	 cmp	 ecx, 2
  00013	75 1c		 jne	 SHORT $LN2@pedal_righ

; 96   : 	{
; 97   : 
; 98   : 		current_flight_dynamics->input_data.pedal_input_pressure |= PEDAL_PRESSURE_RIGHT;

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001a	8b 88 20 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7200]
  00020	83 c9 02	 or	 ecx, 2
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00029	89 8a 20 1c 00
	00		 mov	 DWORD PTR [edx+7200], ecx

; 99   : 	}
; 100  : 	else

  0002f	eb 1a		 jmp	 SHORT $LN1@pedal_righ
$LN2@pedal_righ:

; 101  : 	{
; 102  : 
; 103  : 		current_flight_dynamics->input_data.pedal_input_pressure ^= PEDAL_PRESSURE_RIGHT;

  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00036	8b 88 20 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7200]
  0003c	83 f1 02	 xor	 ecx, 2
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00045	89 8a 20 1c 00
	00		 mov	 DWORD PTR [edx+7200], ecx
$LN1@pedal_righ:

; 104  : 	}
; 105  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?pedal_right@@YGXPAUEVENT@@@Z ENDP			; pedal_right
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\pedal.c
;	COMDAT ?pedal_left@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?pedal_left@@YGXPAUEVENT@@@Z PROC			; pedal_left, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	if (ev->state == KEY_STATE_DOWN)

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00010	83 f9 02	 cmp	 ecx, 2
  00013	75 1c		 jne	 SHORT $LN2@pedal_left

; 77   : 	{
; 78   : 
; 79   : 		current_flight_dynamics->input_data.pedal_input_pressure |= PEDAL_PRESSURE_LEFT;

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001a	8b 88 20 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7200]
  00020	83 c9 01	 or	 ecx, 1
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00029	89 8a 20 1c 00
	00		 mov	 DWORD PTR [edx+7200], ecx

; 80   : 	}
; 81   : 	else

  0002f	eb 1a		 jmp	 SHORT $LN1@pedal_left
$LN2@pedal_left:

; 82   : 	{
; 83   : 
; 84   : 		current_flight_dynamics->input_data.pedal_input_pressure ^= PEDAL_PRESSURE_LEFT;

  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00036	8b 88 20 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7200]
  0003c	83 f1 01	 xor	 ecx, 1
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00045	89 8a 20 1c 00
	00		 mov	 DWORD PTR [edx+7200], ecx
$LN1@pedal_left:

; 85   : 	}
; 86   : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?pedal_left@@YGXPAUEVENT@@@Z ENDP			; pedal_left
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
END
