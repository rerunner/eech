; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?formation_names@@3PAPBDA			; formation_names
PUBLIC	?formation_display_names@@3PAPBDA		; formation_display_names
PUBLIC	?formation_component_names@@3PAPBDA		; formation_component_names
PUBLIC	?formation_database@@3PAUFORMATION_TYPE@@A	; formation_database
PUBLIC	?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A ; formation_component_database
PUBLIC	?formation_database_table@@3PAPAUFORMATION_TYPE@@A ; formation_database_table
PUBLIC	??_C@_04OKGDLNCL@NONE@				; `string'
PUBLIC	??_C@_01HIHLOKLC@1@				; `string'
PUBLIC	??_C@_08DFEMELJO@ROW_LEFT@			; `string'
PUBLIC	??_C@_09JIPJNJMD@ROW_RIGHT@			; `string'
PUBLIC	??_C@_0N@LJDCCKLK@ECHELON_LEFT@			; `string'
PUBLIC	??_C@_0O@KEHGEDHD@ECHELON_RIGHT@		; `string'
PUBLIC	??_C@_06JOBGMBBM@COLUMN@			; `string'
PUBLIC	??_C@_05CDAIFOEF@WEDGE@				; `string'
PUBLIC	??_C@_07KPJIPLLK@DIAMOND@			; `string'
PUBLIC	??_C@_0BF@LGJADGKD@STAGGERED_TRAIL_LEFT@	; `string'
PUBLIC	??_C@_0BG@MABCEJKP@STAGGERED_TRAIL_RIGHT@	; `string'
PUBLIC	??_C@_0BH@MBOLCJFI@80M_ROAD_NODE_16_TANKS@	; `string'
PUBLIC	??_C@_0BA@BMAPLAAI@INFANTRY_COLUMN@		; `string'
PUBLIC	??_C@_07DNODLGKM@INVALID@			; `string'
PUBLIC	??_C@_0BE@MBHICJBG@NUM_FORMATION_TYPES@		; `string'
PUBLIC	??_C@_06ENHHMBEH@SINGLE@			; `string'
PUBLIC	??_C@_08MPDIPEIK@ROW?5LEFT@			; `string'
PUBLIC	??_C@_09ICNJHJAB@ROW?5RIGHT@			; `string'
PUBLIC	??_C@_0N@EDEGJFKO@ECHELON?5LEFT@		; `string'
PUBLIC	??_C@_0O@LOFGODLB@ECHELON?5RIGHT@		; `string'
PUBLIC	??_C@_04LOGPGILF@TANK@				; `string'
PUBLIC	??_C@_08BDOCHFEG@INFANTRY@			; `string'
PUBLIC	??_C@_0BP@DJIGNHLP@HELICOPTER_LIGHT_ASSAULT_GROUP@ ; `string'
PUBLIC	??_C@_0BP@MGOBLDLG@HELICOPTER_HEAVY_ASSAULT_GROUP@ ; `string'
PUBLIC	??_C@_0CC@GENNMECK@HELICOPTER_MARINE_ASSAULT_GROUP@ ; `string'
PUBLIC	??_C@_0CC@EPPAJHOJ@HELICOPTER_MARINE_ASSAULT_GROUP@ ; `string'
PUBLIC	??_C@_0CA@LPNDMBKE@HELICOPTER_LIGHT_ATTACK_GROUP_A@ ; `string'
PUBLIC	??_C@_0CA@JEPOJCGH@HELICOPTER_LIGHT_ATTACK_GROUP_B@ ; `string'
PUBLIC	??_C@_0CA@MGPABOGE@HELICOPTER_HEAVY_ATTACK_GROUP_A@ ; `string'
PUBLIC	??_C@_0CA@ONNNENKH@HELICOPTER_HEAVY_ATTACK_GROUP_B@ ; `string'
PUBLIC	??_C@_0CB@GOKADDOK@HELICOPTER_MARINE_ATTACK_GROUP_@ ; `string'
PUBLIC	??_C@_0CB@EFINGACJ@HELICOPTER_MARINE_ATTACK_GROUP_@ ; `string'
PUBLIC	??_C@_0CB@FMJGFBGI@HELICOPTER_MARINE_ATTACK_GROUP_@ ; `string'
PUBLIC	??_C@_0CB@BDNHMHKP@HELICOPTER_MARINE_ATTACK_GROUP_@ ; `string'
PUBLIC	??_C@_0BN@MPHBNKNJ@HELICOPTER_LIGHT_RECON_GROUP@ ; `string'
PUBLIC	??_C@_0CE@PMDKDAJK@HELICOPTER_LIGHT_RECON_ATTACK_G@ ; `string'
PUBLIC	??_C@_0CE@JLNCBCGI@HELICOPTER_HEAVY_RECON_ATTACK_G@ ; `string'
PUBLIC	??_C@_0BP@JFAKGCHG@HELICOPTER_HUNTER_KILLER_GROUP@ ; `string'
PUBLIC	??_C@_0BN@NPEEKNIO@HELICOPTER_MEDIUM_LIFT_GROUP@ ; `string'
PUBLIC	??_C@_0BO@BDMHMLCN@HELICOPTER_HEAVY_LIFT_GROUP_A@ ; `string'
PUBLIC	??_C@_0BO@DIOKJIOO@HELICOPTER_HEAVY_LIFT_GROUP_B@ ; `string'
PUBLIC	??_C@_0CD@FILJMJEP@FIXED_WING_CLOSE_AIR_SUPPORT_GR@ ; `string'
PUBLIC	??_C@_0BM@EDEBJKEM@FIXED_WING_MULTI_ROLE_GROUP@	; `string'
PUBLIC	??_C@_0CG@HOEMKJOO@FIXED_WING_CARRIER_BORNE_STRIKE@ ; `string'
PUBLIC	??_C@_0CL@NLMBIONG@FIXED_WING_CARRIER_BORNE_INTERC@ ; `string'
PUBLIC	??_C@_0BN@KCBGKPEO@FIXED_WING_MEDIUM_LIFT_GROUP@ ; `string'
PUBLIC	??_C@_0BM@CMAOHMIE@FIXED_WING_HEAVY_LIFT_GROUP@	; `string'
PUBLIC	??_C@_0BI@CFNIOPOE@PRIMARY_FRONTLINE_GROUP@	; `string'
PUBLIC	??_C@_0BK@DCFBOHMJ@SECONDARY_FRONTLINE_GROUP@	; `string'
PUBLIC	??_C@_0BE@OJLBFJCJ@HEAVY_SAM_AAA_GROUP@		; `string'
PUBLIC	??_C@_0BE@BGNGDNCA@LIGHT_SAM_AAA_GROUP@		; `string'
PUBLIC	??_C@_0BA@KADPKDEC@ARTILLERY_GROUP@		; `string'
PUBLIC	??_C@_0L@BMIHKGEF@MLRS_GROUP@			; `string'
PUBLIC	??_C@_0BG@OKFFMLBB@INFANTRY_SAM_STANDING@	; `string'
PUBLIC	??_C@_0BG@LOMOJJIK@INFANTRY_SAM_KNEELING@	; `string'
PUBLIC	??_C@_0BH@CPCJPOKI@AIRCRAFT_CARRIER_GROUP@	; `string'
PUBLIC	??_C@_0O@FEDEPGA@FRIGATE_GROUP@			; `string'
PUBLIC	??_C@_0O@FLNPFPAH@LANDING_GROUP@		; `string'
PUBLIC	??_C@_0BO@HNNDEECH@NUM_FORMATION_COMPONENT_TYPES@ ; `string'
_BSS	SEGMENT
?formation_database@@3PAUFORMATION_TYPE@@A DD 01H DUP (?) ; formation_database
?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A DD 01H DUP (?) ; formation_component_database
?formation_database_table@@3PAPAUFORMATION_TYPE@@A DD 01H DUP (?) ; formation_database_table
_BSS	ENDS
;	COMDAT ??_C@_0BO@HNNDEECH@NUM_FORMATION_COMPONENT_TYPES@
CONST	SEGMENT
??_C@_0BO@HNNDEECH@NUM_FORMATION_COMPONENT_TYPES@ DB 'NUM_FORMATION_COMPO'
	DB	'NENT_TYPES', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FLNPFPAH@LANDING_GROUP@
CONST	SEGMENT
??_C@_0O@FLNPFPAH@LANDING_GROUP@ DB 'LANDING_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FEDEPGA@FRIGATE_GROUP@
CONST	SEGMENT
??_C@_0O@FEDEPGA@FRIGATE_GROUP@ DB 'FRIGATE_GROUP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CPCJPOKI@AIRCRAFT_CARRIER_GROUP@
CONST	SEGMENT
??_C@_0BH@CPCJPOKI@AIRCRAFT_CARRIER_GROUP@ DB 'AIRCRAFT_CARRIER_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LOMOJJIK@INFANTRY_SAM_KNEELING@
CONST	SEGMENT
??_C@_0BG@LOMOJJIK@INFANTRY_SAM_KNEELING@ DB 'INFANTRY_SAM_KNEELING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OKFFMLBB@INFANTRY_SAM_STANDING@
CONST	SEGMENT
??_C@_0BG@OKFFMLBB@INFANTRY_SAM_STANDING@ DB 'INFANTRY_SAM_STANDING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMIHKGEF@MLRS_GROUP@
CONST	SEGMENT
??_C@_0L@BMIHKGEF@MLRS_GROUP@ DB 'MLRS_GROUP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KADPKDEC@ARTILLERY_GROUP@
CONST	SEGMENT
??_C@_0BA@KADPKDEC@ARTILLERY_GROUP@ DB 'ARTILLERY_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BGNGDNCA@LIGHT_SAM_AAA_GROUP@
CONST	SEGMENT
??_C@_0BE@BGNGDNCA@LIGHT_SAM_AAA_GROUP@ DB 'LIGHT_SAM_AAA_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OJLBFJCJ@HEAVY_SAM_AAA_GROUP@
CONST	SEGMENT
??_C@_0BE@OJLBFJCJ@HEAVY_SAM_AAA_GROUP@ DB 'HEAVY_SAM_AAA_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DCFBOHMJ@SECONDARY_FRONTLINE_GROUP@
CONST	SEGMENT
??_C@_0BK@DCFBOHMJ@SECONDARY_FRONTLINE_GROUP@ DB 'SECONDARY_FRONTLINE_GRO'
	DB	'UP', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFNIOPOE@PRIMARY_FRONTLINE_GROUP@
CONST	SEGMENT
??_C@_0BI@CFNIOPOE@PRIMARY_FRONTLINE_GROUP@ DB 'PRIMARY_FRONTLINE_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CMAOHMIE@FIXED_WING_HEAVY_LIFT_GROUP@
CONST	SEGMENT
??_C@_0BM@CMAOHMIE@FIXED_WING_HEAVY_LIFT_GROUP@ DB 'FIXED_WING_HEAVY_LIFT'
	DB	'_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KCBGKPEO@FIXED_WING_MEDIUM_LIFT_GROUP@
CONST	SEGMENT
??_C@_0BN@KCBGKPEO@FIXED_WING_MEDIUM_LIFT_GROUP@ DB 'FIXED_WING_MEDIUM_LI'
	DB	'FT_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@NLMBIONG@FIXED_WING_CARRIER_BORNE_INTERC@
CONST	SEGMENT
??_C@_0CL@NLMBIONG@FIXED_WING_CARRIER_BORNE_INTERC@ DB 'FIXED_WING_CARRIE'
	DB	'R_BORNE_INTERCEPTOR_GROUP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HOEMKJOO@FIXED_WING_CARRIER_BORNE_STRIKE@
CONST	SEGMENT
??_C@_0CG@HOEMKJOO@FIXED_WING_CARRIER_BORNE_STRIKE@ DB 'FIXED_WING_CARRIE'
	DB	'R_BORNE_STRIKE_GROUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EDEBJKEM@FIXED_WING_MULTI_ROLE_GROUP@
CONST	SEGMENT
??_C@_0BM@EDEBJKEM@FIXED_WING_MULTI_ROLE_GROUP@ DB 'FIXED_WING_MULTI_ROLE'
	DB	'_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FILJMJEP@FIXED_WING_CLOSE_AIR_SUPPORT_GR@
CONST	SEGMENT
??_C@_0CD@FILJMJEP@FIXED_WING_CLOSE_AIR_SUPPORT_GR@ DB 'FIXED_WING_CLOSE_'
	DB	'AIR_SUPPORT_GROUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DIOKJIOO@HELICOPTER_HEAVY_LIFT_GROUP_B@
CONST	SEGMENT
??_C@_0BO@DIOKJIOO@HELICOPTER_HEAVY_LIFT_GROUP_B@ DB 'HELICOPTER_HEAVY_LI'
	DB	'FT_GROUP_B', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BDMHMLCN@HELICOPTER_HEAVY_LIFT_GROUP_A@
CONST	SEGMENT
??_C@_0BO@BDMHMLCN@HELICOPTER_HEAVY_LIFT_GROUP_A@ DB 'HELICOPTER_HEAVY_LI'
	DB	'FT_GROUP_A', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NPEEKNIO@HELICOPTER_MEDIUM_LIFT_GROUP@
CONST	SEGMENT
??_C@_0BN@NPEEKNIO@HELICOPTER_MEDIUM_LIFT_GROUP@ DB 'HELICOPTER_MEDIUM_LI'
	DB	'FT_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JFAKGCHG@HELICOPTER_HUNTER_KILLER_GROUP@
CONST	SEGMENT
??_C@_0BP@JFAKGCHG@HELICOPTER_HUNTER_KILLER_GROUP@ DB 'HELICOPTER_HUNTER_'
	DB	'KILLER_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JLNCBCGI@HELICOPTER_HEAVY_RECON_ATTACK_G@
CONST	SEGMENT
??_C@_0CE@JLNCBCGI@HELICOPTER_HEAVY_RECON_ATTACK_G@ DB 'HELICOPTER_HEAVY_'
	DB	'RECON_ATTACK_GROUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PMDKDAJK@HELICOPTER_LIGHT_RECON_ATTACK_G@
CONST	SEGMENT
??_C@_0CE@PMDKDAJK@HELICOPTER_LIGHT_RECON_ATTACK_G@ DB 'HELICOPTER_LIGHT_'
	DB	'RECON_ATTACK_GROUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MPHBNKNJ@HELICOPTER_LIGHT_RECON_GROUP@
CONST	SEGMENT
??_C@_0BN@MPHBNKNJ@HELICOPTER_LIGHT_RECON_GROUP@ DB 'HELICOPTER_LIGHT_REC'
	DB	'ON_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BDNHMHKP@HELICOPTER_MARINE_ATTACK_GROUP_@
CONST	SEGMENT
??_C@_0CB@BDNHMHKP@HELICOPTER_MARINE_ATTACK_GROUP_@ DB 'HELICOPTER_MARINE'
	DB	'_ATTACK_GROUP_D', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FMJGFBGI@HELICOPTER_MARINE_ATTACK_GROUP_@
CONST	SEGMENT
??_C@_0CB@FMJGFBGI@HELICOPTER_MARINE_ATTACK_GROUP_@ DB 'HELICOPTER_MARINE'
	DB	'_ATTACK_GROUP_C', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EFINGACJ@HELICOPTER_MARINE_ATTACK_GROUP_@
CONST	SEGMENT
??_C@_0CB@EFINGACJ@HELICOPTER_MARINE_ATTACK_GROUP_@ DB 'HELICOPTER_MARINE'
	DB	'_ATTACK_GROUP_B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GOKADDOK@HELICOPTER_MARINE_ATTACK_GROUP_@
CONST	SEGMENT
??_C@_0CB@GOKADDOK@HELICOPTER_MARINE_ATTACK_GROUP_@ DB 'HELICOPTER_MARINE'
	DB	'_ATTACK_GROUP_A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ONNNENKH@HELICOPTER_HEAVY_ATTACK_GROUP_B@
CONST	SEGMENT
??_C@_0CA@ONNNENKH@HELICOPTER_HEAVY_ATTACK_GROUP_B@ DB 'HELICOPTER_HEAVY_'
	DB	'ATTACK_GROUP_B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MGPABOGE@HELICOPTER_HEAVY_ATTACK_GROUP_A@
CONST	SEGMENT
??_C@_0CA@MGPABOGE@HELICOPTER_HEAVY_ATTACK_GROUP_A@ DB 'HELICOPTER_HEAVY_'
	DB	'ATTACK_GROUP_A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JEPOJCGH@HELICOPTER_LIGHT_ATTACK_GROUP_B@
CONST	SEGMENT
??_C@_0CA@JEPOJCGH@HELICOPTER_LIGHT_ATTACK_GROUP_B@ DB 'HELICOPTER_LIGHT_'
	DB	'ATTACK_GROUP_B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LPNDMBKE@HELICOPTER_LIGHT_ATTACK_GROUP_A@
CONST	SEGMENT
??_C@_0CA@LPNDMBKE@HELICOPTER_LIGHT_ATTACK_GROUP_A@ DB 'HELICOPTER_LIGHT_'
	DB	'ATTACK_GROUP_A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EPPAJHOJ@HELICOPTER_MARINE_ASSAULT_GROUP@
CONST	SEGMENT
??_C@_0CC@EPPAJHOJ@HELICOPTER_MARINE_ASSAULT_GROUP@ DB 'HELICOPTER_MARINE'
	DB	'_ASSAULT_GROUP_B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GENNMECK@HELICOPTER_MARINE_ASSAULT_GROUP@
CONST	SEGMENT
??_C@_0CC@GENNMECK@HELICOPTER_MARINE_ASSAULT_GROUP@ DB 'HELICOPTER_MARINE'
	DB	'_ASSAULT_GROUP_A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MGOBLDLG@HELICOPTER_HEAVY_ASSAULT_GROUP@
CONST	SEGMENT
??_C@_0BP@MGOBLDLG@HELICOPTER_HEAVY_ASSAULT_GROUP@ DB 'HELICOPTER_HEAVY_A'
	DB	'SSAULT_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DJIGNHLP@HELICOPTER_LIGHT_ASSAULT_GROUP@
CONST	SEGMENT
??_C@_0BP@DJIGNHLP@HELICOPTER_LIGHT_ASSAULT_GROUP@ DB 'HELICOPTER_LIGHT_A'
	DB	'SSAULT_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08BDOCHFEG@INFANTRY@
CONST	SEGMENT
??_C@_08BDOCHFEG@INFANTRY@ DB 'INFANTRY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOGPGILF@TANK@
CONST	SEGMENT
??_C@_04LOGPGILF@TANK@ DB 'TANK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LOFGODLB@ECHELON?5RIGHT@
CONST	SEGMENT
??_C@_0O@LOFGODLB@ECHELON?5RIGHT@ DB 'ECHELON RIGHT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EDEGJFKO@ECHELON?5LEFT@
CONST	SEGMENT
??_C@_0N@EDEGJFKO@ECHELON?5LEFT@ DB 'ECHELON LEFT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09ICNJHJAB@ROW?5RIGHT@
CONST	SEGMENT
??_C@_09ICNJHJAB@ROW?5RIGHT@ DB 'ROW RIGHT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MPDIPEIK@ROW?5LEFT@
CONST	SEGMENT
??_C@_08MPDIPEIK@ROW?5LEFT@ DB 'ROW LEFT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ENHHMBEH@SINGLE@
CONST	SEGMENT
??_C@_06ENHHMBEH@SINGLE@ DB 'SINGLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBHICJBG@NUM_FORMATION_TYPES@
CONST	SEGMENT
??_C@_0BE@MBHICJBG@NUM_FORMATION_TYPES@ DB 'NUM_FORMATION_TYPES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DNODLGKM@INVALID@
CONST	SEGMENT
??_C@_07DNODLGKM@INVALID@ DB 'INVALID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BMAPLAAI@INFANTRY_COLUMN@
CONST	SEGMENT
??_C@_0BA@BMAPLAAI@INFANTRY_COLUMN@ DB 'INFANTRY_COLUMN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MBOLCJFI@80M_ROAD_NODE_16_TANKS@
CONST	SEGMENT
??_C@_0BH@MBOLCJFI@80M_ROAD_NODE_16_TANKS@ DB '80M_ROAD_NODE_16_TANKS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MABCEJKP@STAGGERED_TRAIL_RIGHT@
CONST	SEGMENT
??_C@_0BG@MABCEJKP@STAGGERED_TRAIL_RIGHT@ DB 'STAGGERED_TRAIL_RIGHT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LGJADGKD@STAGGERED_TRAIL_LEFT@
CONST	SEGMENT
??_C@_0BF@LGJADGKD@STAGGERED_TRAIL_LEFT@ DB 'STAGGERED_TRAIL_LEFT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KPJIPLLK@DIAMOND@
CONST	SEGMENT
??_C@_07KPJIPLLK@DIAMOND@ DB 'DIAMOND', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CDAIFOEF@WEDGE@
CONST	SEGMENT
??_C@_05CDAIFOEF@WEDGE@ DB 'WEDGE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JOBGMBBM@COLUMN@
CONST	SEGMENT
??_C@_06JOBGMBBM@COLUMN@ DB 'COLUMN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KEHGEDHD@ECHELON_RIGHT@
CONST	SEGMENT
??_C@_0O@KEHGEDHD@ECHELON_RIGHT@ DB 'ECHELON_RIGHT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LJDCCKLK@ECHELON_LEFT@
CONST	SEGMENT
??_C@_0N@LJDCCKLK@ECHELON_LEFT@ DB 'ECHELON_LEFT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JIPJNJMD@ROW_RIGHT@
CONST	SEGMENT
??_C@_09JIPJNJMD@ROW_RIGHT@ DB 'ROW_RIGHT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DFEMELJO@ROW_LEFT@
CONST	SEGMENT
??_C@_08DFEMELJO@ROW_LEFT@ DB 'ROW_LEFT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1@
CONST	SEGMENT
??_C@_01HIHLOKLC@1@ DB '1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKGDLNCL@NONE@
CONST	SEGMENT
??_C@_04OKGDLNCL@NONE@ DB 'NONE', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?formation_names@@3PAPBDA DD FLAT:??_C@_04OKGDLNCL@NONE@ ; formation_names
	DD	FLAT:??_C@_01HIHLOKLC@1@
	DD	FLAT:??_C@_08DFEMELJO@ROW_LEFT@
	DD	FLAT:??_C@_09JIPJNJMD@ROW_RIGHT@
	DD	FLAT:??_C@_0N@LJDCCKLK@ECHELON_LEFT@
	DD	FLAT:??_C@_0O@KEHGEDHD@ECHELON_RIGHT@
	DD	FLAT:??_C@_06JOBGMBBM@COLUMN@
	DD	FLAT:??_C@_05CDAIFOEF@WEDGE@
	DD	FLAT:??_C@_07KPJIPLLK@DIAMOND@
	DD	FLAT:??_C@_0BF@LGJADGKD@STAGGERED_TRAIL_LEFT@
	DD	FLAT:??_C@_0BG@MABCEJKP@STAGGERED_TRAIL_RIGHT@
	DD	FLAT:??_C@_0BH@MBOLCJFI@80M_ROAD_NODE_16_TANKS@
	DD	FLAT:??_C@_0BA@BMAPLAAI@INFANTRY_COLUMN@
	DD	FLAT:??_C@_07DNODLGKM@INVALID@
	DD	FLAT:??_C@_0BE@MBHICJBG@NUM_FORMATION_TYPES@
?formation_display_names@@3PAPBDA DD FLAT:??_C@_04OKGDLNCL@NONE@ ; formation_display_names
	DD	FLAT:??_C@_06ENHHMBEH@SINGLE@
	DD	FLAT:??_C@_08MPDIPEIK@ROW?5LEFT@
	DD	FLAT:??_C@_09ICNJHJAB@ROW?5RIGHT@
	DD	FLAT:??_C@_0N@EDEGJFKO@ECHELON?5LEFT@
	DD	FLAT:??_C@_0O@LOFGODLB@ECHELON?5RIGHT@
	DD	FLAT:??_C@_06JOBGMBBM@COLUMN@
	DD	FLAT:??_C@_05CDAIFOEF@WEDGE@
	DD	FLAT:??_C@_07KPJIPLLK@DIAMOND@
	DD	FLAT:??_C@_0BF@LGJADGKD@STAGGERED_TRAIL_LEFT@
	DD	FLAT:??_C@_0BG@MABCEJKP@STAGGERED_TRAIL_RIGHT@
	DD	FLAT:??_C@_04LOGPGILF@TANK@
	DD	FLAT:??_C@_08BDOCHFEG@INFANTRY@
	DD	FLAT:??_C@_07DNODLGKM@INVALID@
	DD	FLAT:??_C@_0BE@MBHICJBG@NUM_FORMATION_TYPES@
?formation_component_names@@3PAPBDA DD FLAT:??_C@_0BP@DJIGNHLP@HELICOPTER_LIGHT_ASSAULT_GROUP@ ; formation_component_names
	DD	FLAT:??_C@_0BP@MGOBLDLG@HELICOPTER_HEAVY_ASSAULT_GROUP@
	DD	FLAT:??_C@_0CC@GENNMECK@HELICOPTER_MARINE_ASSAULT_GROUP@
	DD	FLAT:??_C@_0CC@EPPAJHOJ@HELICOPTER_MARINE_ASSAULT_GROUP@
	DD	FLAT:??_C@_0CA@LPNDMBKE@HELICOPTER_LIGHT_ATTACK_GROUP_A@
	DD	FLAT:??_C@_0CA@JEPOJCGH@HELICOPTER_LIGHT_ATTACK_GROUP_B@
	DD	FLAT:??_C@_0CA@MGPABOGE@HELICOPTER_HEAVY_ATTACK_GROUP_A@
	DD	FLAT:??_C@_0CA@ONNNENKH@HELICOPTER_HEAVY_ATTACK_GROUP_B@
	DD	FLAT:??_C@_0CB@GOKADDOK@HELICOPTER_MARINE_ATTACK_GROUP_@
	DD	FLAT:??_C@_0CB@EFINGACJ@HELICOPTER_MARINE_ATTACK_GROUP_@
	DD	FLAT:??_C@_0CB@FMJGFBGI@HELICOPTER_MARINE_ATTACK_GROUP_@
	DD	FLAT:??_C@_0CB@BDNHMHKP@HELICOPTER_MARINE_ATTACK_GROUP_@
	DD	FLAT:??_C@_0BN@MPHBNKNJ@HELICOPTER_LIGHT_RECON_GROUP@
	DD	FLAT:??_C@_0CE@PMDKDAJK@HELICOPTER_LIGHT_RECON_ATTACK_G@
	DD	FLAT:??_C@_0CE@JLNCBCGI@HELICOPTER_HEAVY_RECON_ATTACK_G@
	DD	FLAT:??_C@_0BP@JFAKGCHG@HELICOPTER_HUNTER_KILLER_GROUP@
	DD	FLAT:??_C@_0BN@NPEEKNIO@HELICOPTER_MEDIUM_LIFT_GROUP@
	DD	FLAT:??_C@_0BO@BDMHMLCN@HELICOPTER_HEAVY_LIFT_GROUP_A@
	DD	FLAT:??_C@_0BO@DIOKJIOO@HELICOPTER_HEAVY_LIFT_GROUP_B@
	DD	FLAT:??_C@_0CD@FILJMJEP@FIXED_WING_CLOSE_AIR_SUPPORT_GR@
	DD	FLAT:??_C@_0BM@EDEBJKEM@FIXED_WING_MULTI_ROLE_GROUP@
	DD	FLAT:??_C@_0CG@HOEMKJOO@FIXED_WING_CARRIER_BORNE_STRIKE@
	DD	FLAT:??_C@_0CL@NLMBIONG@FIXED_WING_CARRIER_BORNE_INTERC@
	DD	FLAT:??_C@_0BN@KCBGKPEO@FIXED_WING_MEDIUM_LIFT_GROUP@
	DD	FLAT:??_C@_0BM@CMAOHMIE@FIXED_WING_HEAVY_LIFT_GROUP@
	DD	FLAT:??_C@_0BI@CFNIOPOE@PRIMARY_FRONTLINE_GROUP@
	DD	FLAT:??_C@_0BK@DCFBOHMJ@SECONDARY_FRONTLINE_GROUP@
	DD	FLAT:??_C@_0BE@OJLBFJCJ@HEAVY_SAM_AAA_GROUP@
	DD	FLAT:??_C@_0BE@BGNGDNCA@LIGHT_SAM_AAA_GROUP@
	DD	FLAT:??_C@_0BA@KADPKDEC@ARTILLERY_GROUP@
	DD	FLAT:??_C@_0L@BMIHKGEF@MLRS_GROUP@
	DD	FLAT:??_C@_08BDOCHFEG@INFANTRY@
	DD	FLAT:??_C@_0BG@OKFFMLBB@INFANTRY_SAM_STANDING@
	DD	FLAT:??_C@_0BG@LOMOJJIK@INFANTRY_SAM_KNEELING@
	DD	FLAT:??_C@_0BH@CPCJPOKI@AIRCRAFT_CARRIER_GROUP@
	DD	FLAT:??_C@_0O@FEDEPGA@FRIGATE_GROUP@
	DD	FLAT:??_C@_0O@FLNPFPAH@LANDING_GROUP@
	DD	FLAT:??_C@_0BO@HNNDEECH@NUM_FORMATION_COMPONENT_TYPES@
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?initialise_formation_database@@YGXXZ		; initialise_formation_database
PUBLIC	?initialise_formation_database_table@@YGXXZ	; initialise_formation_database_table
PUBLIC	?add_formation_to_database@@YGHHPAUVEC3D@@@Z	; add_formation_to_database
PUBLIC	?get_formation_database_count@@YGHXZ		; get_formation_database_count
PUBLIC	?deinitialise_formation_database@@YGXXZ		; deinitialise_formation_database
PUBLIC	?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
PUBLIC	?get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z ; get_number_in_formation
PUBLIC	?get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z	; get_formation_name
PUBLIC	?get_formation_member_radius@@YGMW4FORMATION_TYPES@@H@Z ; get_formation_member_radius
PUBLIC	?get_formation_position@@YGXW4FORMATION_TYPES@@HPAUVEC3D@@@Z ; get_formation_position
PUBLIC	?initialise_formation_component_database@@YGXXZ	; initialise_formation_component_database
PUBLIC	?deinitialise_formation_component_database@@YGXXZ ; deinitialise_formation_component_database
PUBLIC	?get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z ; get_formation_components
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA ; `initialise_formation_database'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BE@JBNJCHMJ@?$CBformation_database@	; `string'
PUBLIC	??_C@_0BJ@NIOAFHGE@?4?4?2common?2data?2forms?4dat@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@ ; `string'
PUBLIC	??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@ ; `string'
PUBLIC	??_C@_0BK@LDIKHIKE@result?5?$DN?$DN?5FILE_TAG_RADIUS@ ; `string'
PUBLIC	??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@ ; `string'
PUBLIC	??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@ ; `string'
PUBLIC	??_C@_0BH@NKLDJAKE@result?5?$DN?$DN?5FILE_TAG_END@ ; `string'
PUBLIC	??_C@_0BC@BFBGFDGA@USER?5FORMATION?5?$CFd@	; `string'
PUBLIC	?__LINE__Var@?0??get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z@4JA ; `get_formation'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@DLJPBOGG@formation_database@		; `string'
PUBLIC	?__LINE__Var@?0??get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z@4JA ; `get_number_in_formation'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z@4JA ; `get_formation_name'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA ; `initialise_formation_component_database'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@HOHGLDHO@?$CBformation_component_database@ ; `string'
PUBLIC	??_C@_0N@MDJJOIDD@formcomp?4dat@		; `string'
PUBLIC	??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@		; `string'
PUBLIC	??_C@_0BC@HJLKECJE@formcomp?5file?3?5?$CFs@	; `string'
PUBLIC	??_C@_05BMGBEOOC@?$CFs?2?$CFs@			; `string'
PUBLIC	??_C@_0BM@MKGKPEPL@?4?4?2common?2data?2formcomp?4dat@ ; `string'
PUBLIC	??_C@_0CN@HOLGNKIF@count?5?$DM?$DN?5formation_data?9?$DOnumber@ ; `string'
PUBLIC	?__LINE__Var@?0??get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z@4JA ; `get_formation_components'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@KIJONDOB@formation_component_database@ ; `string'
EXTRN	__imp__fclose:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?file_exist@@YGHPBD@Z:PROC			; file_exist
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z:PROC	; get_next_file_tag
EXTRN	?get_next_file_int@@YGHPAU_iobuf@@@Z:PROC	; get_next_file_int
EXTRN	?get_next_file_float@@YGMPAU_iobuf@@@Z:PROC	; get_next_file_float
EXTRN	?get_next_file_string@@YGHPAU_iobuf@@PADH@Z:PROC ; get_next_file_string
EXTRN	?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z:PROC ; get_next_file_enum
EXTRN	?entity_sub_type_aircraft_names@@3PAPBDA:BYTE	; entity_sub_type_aircraft_names
EXTRN	?entity_sub_type_group_names@@3PAPBDA:BYTE	; entity_sub_type_group_names
EXTRN	?entity_sub_type_vehicle_names@@3PAPBDA:BYTE	; entity_sub_type_vehicle_names
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	?application_tag_strings@@3PAPBDA:BYTE		; application_tag_strings
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?last_formation_index@@3HA DD 01H DUP (?)		; last_formation_index
_BSS	ENDS
;	COMDAT ??_C@_0BN@KIJONDOB@formation_component_database@
CONST	SEGMENT
??_C@_0BN@KIJONDOB@formation_component_database@ DB 'formation_component_'
	DB	'database', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z@4JA DD 0358H ; `get_formation_components'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CN@HOLGNKIF@count?5?$DM?$DN?5formation_data?9?$DOnumber@
CONST	SEGMENT
??_C@_0CN@HOLGNKIF@count?5?$DM?$DN?5formation_data?9?$DOnumber@ DB 'count'
	DB	' <= formation_data->number_in_formation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MKGKPEPL@?4?4?2common?2data?2formcomp?4dat@
CONST	SEGMENT
??_C@_0BM@MKGKPEPL@?4?4?2common?2data?2formcomp?4dat@ DB '..\common\data\'
	DB	'formcomp.dat', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05BMGBEOOC@?$CFs?2?$CFs@
CONST	SEGMENT
??_C@_05BMGBEOOC@?$CFs?2?$CFs@ DB '%s\%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HJLKECJE@formcomp?5file?3?5?$CFs@
CONST	SEGMENT
??_C@_0BC@HJLKECJE@formcomp?5file?3?5?$CFs@ DB 'formcomp file: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@
CONST	SEGMENT
??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@ DB '%s\%s\%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDJJOIDD@formcomp?4dat@
CONST	SEGMENT
??_C@_0N@MDJJOIDD@formcomp?4dat@ DB 'formcomp.dat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HOHGLDHO@?$CBformation_component_database@
CONST	SEGMENT
??_C@_0BO@HOHGLDHO@?$CBformation_component_database@ DB '!formation_compo'
	DB	'nent_database', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA DD 027aH ; `initialise_formation_component_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z@4JA DD 0226H ; `get_formation_name'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z@4JA DD 020fH ; `get_number_in_formation'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BD@DLJPBOGG@formation_database@
CONST	SEGMENT
??_C@_0BD@DLJPBOGG@formation_database@ DB 'formation_database', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z@4JA DD 01edH ; `get_formation'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@BFBGFDGA@USER?5FORMATION?5?$CFd@
CONST	SEGMENT
??_C@_0BC@BFBGFDGA@USER?5FORMATION?5?$CFd@ DB 'USER FORMATION %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NKLDJAKE@result?5?$DN?$DN?5FILE_TAG_END@
CONST	SEGMENT
??_C@_0BH@NKLDJAKE@result?5?$DN?$DN?5FILE_TAG_END@ DB 'result == FILE_TAG'
	DB	'_END', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@
CONST	SEGMENT
??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@ DB 'result == FIL'
	DB	'E_TAG_POSITION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@
CONST	SEGMENT
??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@ DB 'result == FILE_T'
	DB	'AG_COUNT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LDIKHIKE@result?5?$DN?$DN?5FILE_TAG_RADIUS@
CONST	SEGMENT
??_C@_0BK@LDIKHIKE@result?5?$DN?$DN?5FILE_TAG_RADIUS@ DB 'result == FILE_'
	DB	'TAG_RADIUS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@
CONST	SEGMENT
??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@ DB 'result == FILE_TA'
	DB	'G_NAME', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
CONST	SEGMENT
??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@ DB 'result == FILE_TA'
	DB	'G_TYPE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NIOAFHGE@?4?4?2common?2data?2forms?4dat@
CONST	SEGMENT
??_C@_0BJ@NIOAFHGE@?4?4?2common?2data?2forms?4dat@ DB '..\common\data\for'
	DB	'ms.dat', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JBNJCHMJ@?$CBformation_database@
CONST	SEGMENT
??_C@_0BE@JBNJCHMJ@?$CBformation_database@ DB '!formation_database', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_types\en_fo'
	DB	'rms.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA DD 0d2H ; `initialise_formation_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z
_TEXT	SEGMENT
_this_formation_component$ = -4				; size = 4
_formation_component$ = 8				; size = 4
?get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z PROC ; get_formation_components, COMDAT

; 856  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 857  : 
; 858  : 	formation_vehicle_components
; 859  : 		*this_formation_component;
; 860  : 
; 861  : 	ASSERT (formation_component_database);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A, 0 ; formation_component_database
  00010	75 18		 jne	 SHORT $LN4@get_format
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KIJONDOB@formation_component_database@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_format:

; 862  : 
; 863  : 	this_formation_component = formation_component_database;

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A ; formation_component_database
  0002f	89 45 fc	 mov	 DWORD PTR _this_formation_component$[ebp], eax
$LN2@get_format:

; 864  : 
; 865  : 	while (this_formation_component)

  00032	83 7d fc 00	 cmp	 DWORD PTR _this_formation_component$[ebp], 0
  00036	74 1a		 je	 SHORT $LN3@get_format

; 866  : 	{
; 867  : 
; 868  : 		if (this_formation_component->formation_component == formation_component)

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this_formation_component$[ebp]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	3b 4d 08	 cmp	 ecx, DWORD PTR _formation_component$[ebp]
  00040	75 05		 jne	 SHORT $LN5@get_format

; 869  : 		{
; 870  : 
; 871  : 			return this_formation_component;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this_formation_component$[ebp]
  00045	eb 0d		 jmp	 SHORT $LN1@get_format
$LN5@get_format:

; 872  : 		}
; 873  : 
; 874  : 		this_formation_component = this_formation_component->next;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this_formation_component$[ebp]
  0004a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0004d	89 4d fc	 mov	 DWORD PTR _this_formation_component$[ebp], ecx

; 875  : 	}

  00050	eb e0		 jmp	 SHORT $LN2@get_format
$LN3@get_format:

; 876  : 
; 877  : 	return NULL;

  00052	33 c0		 xor	 eax, eax
$LN1@get_format:

; 878  : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?get_formation_components@@YGPAUFORMATION_VEHICLE_COMPONENTS@@W4FORMATION_COMPONENT_TYPES@@@Z ENDP ; get_formation_components
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?deinitialise_formation_component_database@@YGXXZ
_TEXT	SEGMENT
_destroy_formation_component$ = -4			; size = 4
?deinitialise_formation_component_database@@YGXXZ PROC	; deinitialise_formation_component_database, COMDAT

; 829  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@deinitiali:

; 830  : 
; 831  : 	formation_vehicle_components
; 832  : 		*destroy_formation_component;
; 833  : 
; 834  : 	while (formation_component_database)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A, 0 ; formation_component_database
  00010	74 36		 je	 SHORT $LN1@deinitiali

; 835  : 	{
; 836  : 
; 837  : 		destroy_formation_component = formation_component_database;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A ; formation_component_database
  00017	89 45 fc	 mov	 DWORD PTR _destroy_formation_component$[ebp], eax

; 838  : 
; 839  : 		formation_component_database = formation_component_database->next;

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A ; formation_component_database
  0001f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00022	89 0d 00 00 00
	00		 mov	 DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A, ecx ; formation_component_database

; 840  : 
; 841  : 		if (destroy_formation_component->components)

  00028	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation_component$[ebp]
  0002b	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0002f	74 0c		 je	 SHORT $LN4@deinitiali

; 842  : 		{
; 843  : 
; 844  : 			free_mem (destroy_formation_component->components);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation_component$[ebp]
  00034	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN4@deinitiali:

; 845  : 		}
; 846  : 
; 847  : 		free_mem (destroy_formation_component);

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation_component$[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 848  : 	}

  00046	eb c1		 jmp	 SHORT $LN2@deinitiali
$LN1@deinitiali:

; 849  : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?deinitialise_formation_component_database@@YGXXZ ENDP	; deinitialise_formation_component_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?initialise_formation_component_database@@YGXXZ
_TEXT	SEGMENT
tv223 = -1256						; size = 4
tv150 = -1256						; size = 4
_temp_filename$ = -1060					; size = 1024
_result$ = -36						; size = 4
_count$ = -32						; size = 4
_type$ = -28						; size = 4
_loop$ = -24						; size = 4
_tag$ = -20						; size = 4
_file_ptr$ = -16					; size = 4
_new_formation_component$ = -12				; size = 4
_current_session$ = -8					; size = 4
_formation_data$ = -4					; size = 4
?initialise_formation_component_database@@YGXXZ PROC	; initialise_formation_component_database, COMDAT

; 634  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 04 00
	00		 sub	 esp, 1256		; 000004e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 635  : 
; 636  : 	formation_type
; 637  : 		*formation_data;
; 638  : 
; 639  : 	session_list_data_type
; 640  : 		*current_session;
; 641  : 
; 642  : 	formation_vehicle_components
; 643  : 		*new_formation_component;
; 644  : 
; 645  : 	FILE
; 646  : 		*file_ptr;
; 647  : 
; 648  : 	file_tags
; 649  : 		tag;
; 650  : 
; 651  : 	int
; 652  : 		loop,
; 653  : 		type,
; 654  : 		count,
; 655  : 		result;
; 656  : 
; 657  : 	char
; 658  : 		temp_filename [1024];
; 659  : 
; 660  : 	ASSERT (!formation_component_database);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A, 0 ; formation_component_database
  00013	74 18		 je	 SHORT $LN10@initialise
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA
  0001a	83 c0 1a	 add	 eax, 26			; 0000001aH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HOHGLDHO@?$CBformation_component_database@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@initialise:

; 661  : 
; 662  : 	current_session = get_current_game_session ();

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00032	89 45 f8	 mov	 DWORD PTR _current_session$[ebp], eax

; 663  : 
; 664  : 	file_ptr = NULL;

  00035	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _file_ptr$[ebp], 0

; 665  : 
; 666  : 	// check if this campaign has its own formation component database
; 667  : 	if (current_game_session->data_path && current_game_session->campaign_directory)

  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00041	83 c0 1c	 add	 eax, 28			; 0000001cH
  00044	74 78		 je	 SHORT $LN11@initialise
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  0004b	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  00050	74 6c		 je	 SHORT $LN11@initialise

; 668  : 	{
; 669  : 		sprintf (temp_filename, "%s\\%s\\%s", current_game_session->data_path, current_game_session->campaign_directory, FORMATION_COMPONENT_FILENAME);

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MDJJOIDD@formcomp?4dat@
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  0005c	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  00061	50		 push	 eax
  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00068	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0006b	51		 push	 ecx
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@
  00071	8d 95 dc fb ff
	ff		 lea	 edx, DWORD PTR _temp_filename$[ebp]
  00077	52		 push	 edx
  00078	e8 00 00 00 00	 call	 _sprintf
  0007d	83 c4 14	 add	 esp, 20			; 00000014H

; 670  : 		if (file_exist(temp_filename))

  00080	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  0008c	85 c0		 test	 eax, eax
  0008e	74 14		 je	 SHORT $LN12@initialise

; 671  : 			file_ptr = safe_fopen (temp_filename, "r");

  00090	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00095	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  000a1	89 45 f0	 mov	 DWORD PTR _file_ptr$[ebp], eax
$LN12@initialise:

; 672  : 
; 673  : 		if (file_ptr)

  000a4	83 7d f0 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  000a8	74 14		 je	 SHORT $LN11@initialise

; 674  : 		{
; 675  : 			debug_log("formcomp file: %s", temp_filename);

  000aa	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  000b0	50		 push	 eax
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HJLKECJE@formcomp?5file?3?5?$CFs@
  000b6	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000bb	83 c4 08	 add	 esp, 8
$LN11@initialise:

; 676  : 		}
; 677  : 	}
; 678  : 
; 679  : 	// check if this map has its own formation component database
; 680  : 	if (!file_ptr && current_game_session->data_path)

  000be	83 7d f0 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  000c2	75 6a		 jne	 SHORT $LN14@initialise
  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  000c9	83 c0 1c	 add	 eax, 28			; 0000001cH
  000cc	74 60		 je	 SHORT $LN14@initialise

; 681  : 	{
; 682  : 		sprintf (temp_filename, "%s\\%s", current_game_session->data_path, FORMATION_COMPONENT_FILENAME);

  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MDJJOIDD@formcomp?4dat@
  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  000d8	83 c0 1c	 add	 eax, 28			; 0000001cH
  000db	50		 push	 eax
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_05BMGBEOOC@?$CFs?2?$CFs@
  000e1	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _temp_filename$[ebp]
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 _sprintf
  000ed	83 c4 10	 add	 esp, 16			; 00000010H

; 683  : 		if (file_exist(temp_filename))

  000f0	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  000fc	85 c0		 test	 eax, eax
  000fe	74 14		 je	 SHORT $LN15@initialise

; 684  : 			file_ptr = safe_fopen (temp_filename, "r");

  00100	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00105	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00111	89 45 f0	 mov	 DWORD PTR _file_ptr$[ebp], eax
$LN15@initialise:

; 685  : 
; 686  : 		if (file_ptr)

  00114	83 7d f0 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  00118	74 14		 je	 SHORT $LN14@initialise

; 687  : 		{
; 688  : 			debug_log("formcomp file: %s", temp_filename);

  0011a	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  00120	50		 push	 eax
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HJLKECJE@formcomp?5file?3?5?$CFs@
  00126	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0012b	83 c4 08	 add	 esp, 8
$LN14@initialise:

; 689  : 		}
; 690  : 	}
; 691  : 
; 692  : 	// use default if there is no specific one
; 693  : 	if (!file_ptr)

  0012e	83 7d f0 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  00132	75 2d		 jne	 SHORT $LN2@initialise

; 694  : 	{
; 695  : 		sprintf (temp_filename, "%s", FORMATION_COMPONENT_DEFAULT_FULLPATH);

  00134	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MKGKPEPL@?4?4?2common?2data?2formcomp?4dat@
  00139	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0013e	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 _sprintf
  0014a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 696  : 
; 697  : 		file_ptr = safe_fopen (temp_filename, "r");

  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00152	8d 85 dc fb ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  00158	50		 push	 eax
  00159	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  0015e	89 45 f0	 mov	 DWORD PTR _file_ptr$[ebp], eax
$LN2@initialise:

; 698  : 	}
; 699  : 
; 700  : 	while (TRUE)

  00161	b8 01 00 00 00	 mov	 eax, 1
  00166	85 c0		 test	 eax, eax
  00168	0f 84 8a 02 00
	00		 je	 $LN1@initialise

; 701  : 	{
; 702  : 
; 703  : 		tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0016e	68 af 00 00 00	 push	 175			; 000000afH
  00173	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00178	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00181	89 45 ec	 mov	 DWORD PTR _tag$[ebp], eax

; 704  : 
; 705  : 		switch (tag)

  00184	8b 45 ec	 mov	 eax, DWORD PTR _tag$[ebp]
  00187	89 85 18 fb ff
	ff		 mov	 DWORD PTR tv150[ebp], eax
  0018d	83 bd 18 fb ff
	ff e7		 cmp	 DWORD PTR tv150[ebp], -25 ; ffffffe7H
  00194	74 1b		 je	 SHORT $LN18@initialise
  00196	83 bd 18 fb ff
	ff f6		 cmp	 DWORD PTR tv150[ebp], -10 ; fffffff6H
  0019d	0f 84 41 02 00
	00		 je	 $LN28@initialise
  001a3	83 bd 18 fb ff
	ff 29		 cmp	 DWORD PTR tv150[ebp], 41 ; 00000029H
  001aa	74 07		 je	 SHORT $LN19@initialise
  001ac	e9 42 02 00 00	 jmp	 $LN4@initialise
$LN18@initialise:

; 706  : 		{
; 707  : 
; 708  : 			case FILE_TAG_START:
; 709  : 			{
; 710  : 
; 711  : 				continue;

  001b1	eb ae		 jmp	 SHORT $LN2@initialise
$LN19@initialise:

; 712  : 			}
; 713  : 
; 714  : 			case FILE_TAG_FORMATION_COMPONENT:
; 715  : 			{
; 716  : 
; 717  : 				new_formation_component = (formation_vehicle_components *) malloc_heap_mem (sizeof (formation_vehicle_components));

  001b3	6a 18		 push	 24			; 00000018H
  001b5	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  001ba	89 45 f4	 mov	 DWORD PTR _new_formation_component$[ebp], eax

; 718  : 				memset (new_formation_component, 0, sizeof (formation_vehicle_components));

  001bd	6a 18		 push	 24			; 00000018H
  001bf	6a 00		 push	 0
  001c1	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  001c4	50		 push	 eax
  001c5	e8 00 00 00 00	 call	 _memset
  001ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 719  : 
; 720  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  001cd	68 af 00 00 00	 push	 175			; 000000afH
  001d2	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  001d7	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001da	50		 push	 eax
  001db	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  001e0	89 45 dc	 mov	 DWORD PTR _result$[ebp], eax

; 721  : 				ASSERT (result == FILE_TAG_TYPE);

  001e3	83 7d dc e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  001e7	74 18		 je	 SHORT $LN20@initialise
  001e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA
  001ee	83 c0 57	 add	 eax, 87			; 00000057H
  001f1	50		 push	 eax
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  001fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN20@initialise:

; 722  : 				type = get_next_file_enum (file_ptr, formation_component_names, NUM_FORMATION_COMPONENT_TYPES);

  00201	6a 25		 push	 37			; 00000025H
  00203	68 00 00 00 00	 push	 OFFSET ?formation_component_names@@3PAPBDA ; formation_component_names
  00208	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00211	89 45 e4	 mov	 DWORD PTR _type$[ebp], eax

; 723  : 
; 724  : 				new_formation_component->formation_component = (formation_component_types) type;

  00214	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  00217	8b 4d e4	 mov	 ecx, DWORD PTR _type$[ebp]
  0021a	89 08		 mov	 DWORD PTR [eax], ecx

; 725  : 
; 726  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0021c	68 af 00 00 00	 push	 175			; 000000afH
  00221	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00226	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0022f	89 45 dc	 mov	 DWORD PTR _result$[ebp], eax

; 727  : 				ASSERT (result == FILE_TAG_TYPE);

  00232	83 7d dc e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  00236	74 18		 je	 SHORT $LN21@initialise
  00238	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA
  0023d	83 c0 5d	 add	 eax, 93			; 0000005dH
  00240	50		 push	 eax
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  0024b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN21@initialise:

; 728  : 				type = get_next_file_enum (file_ptr, formation_names, NUM_FORMATION_TYPES);

  00250	6a 0e		 push	 14			; 0000000eH
  00252	68 00 00 00 00	 push	 OFFSET ?formation_names@@3PAPBDA ; formation_names
  00257	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00260	89 45 e4	 mov	 DWORD PTR _type$[ebp], eax

; 729  : 
; 730  : 				new_formation_component->formation = (formation_types) type;

  00263	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  00266	8b 4d e4	 mov	 ecx, DWORD PTR _type$[ebp]
  00269	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 731  : 
; 732  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0026c	68 af 00 00 00	 push	 175			; 000000afH
  00271	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00276	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00279	50		 push	 eax
  0027a	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0027f	89 45 dc	 mov	 DWORD PTR _result$[ebp], eax

; 733  : 				ASSERT (result == FILE_TAG_COUNT);

  00282	83 7d dc 12	 cmp	 DWORD PTR _result$[ebp], 18 ; 00000012H
  00286	74 18		 je	 SHORT $LN22@initialise
  00288	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA
  0028d	83 c0 63	 add	 eax, 99			; 00000063H
  00290	50		 push	 eax
  00291	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00296	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@
  0029b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN22@initialise:

; 734  : 				count = get_next_file_int (file_ptr);

  002a0	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002a3	50		 push	 eax
  002a4	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  002a9	89 45 e0	 mov	 DWORD PTR _count$[ebp], eax

; 735  : 
; 736  : 				formation_data = get_formation (new_formation_component->formation);

  002ac	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  002af	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002b2	51		 push	 ecx
  002b3	e8 00 00 00 00	 call	 ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
  002b8	89 45 fc	 mov	 DWORD PTR _formation_data$[ebp], eax

; 737  : 
; 738  : 				new_formation_component->group_type = get_next_file_enum (file_ptr, entity_sub_type_group_names, NUM_ENTITY_SUB_TYPE_GROUPS);

  002bb	6a 1a		 push	 26			; 0000001aH
  002bd	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_group_names@@3PAPBDA ; entity_sub_type_group_names
  002c2	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002c5	50		 push	 eax
  002c6	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  002cb	8b 4d f4	 mov	 ecx, DWORD PTR _new_formation_component$[ebp]
  002ce	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 739  : 
; 740  : 				ASSERT (count <= formation_data->number_in_formation);

  002d1	8b 45 fc	 mov	 eax, DWORD PTR _formation_data$[ebp]
  002d4	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  002d8	39 4d e0	 cmp	 DWORD PTR _count$[ebp], ecx
  002db	7e 18		 jle	 SHORT $LN23@initialise
  002dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA
  002e2	83 c0 6a	 add	 eax, 106		; 0000006aH
  002e5	50		 push	 eax
  002e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  002eb	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@HOLGNKIF@count?5?$DM?$DN?5formation_data?9?$DOnumber@
  002f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN23@initialise:

; 741  : 
; 742  : 				new_formation_component->count = count;

  002f5	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  002f8	8b 4d e0	 mov	 ecx, DWORD PTR _count$[ebp]
  002fb	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 743  : 
; 744  : 				if (count > 0)

  002fe	83 7d e0 00	 cmp	 DWORD PTR _count$[ebp], 0
  00302	0f 8e 90 00 00
	00		 jle	 $LN24@initialise

; 745  : 				{
; 746  : 	
; 747  : 					new_formation_component->components = (entity_sub_types *) malloc_heap_mem (sizeof (entity_sub_types) * (count * 2));

  00308	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  0030b	d1 e0		 shl	 eax, 1
  0030d	c1 e0 02	 shl	 eax, 2
  00310	50		 push	 eax
  00311	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00316	8b 4d f4	 mov	 ecx, DWORD PTR _new_formation_component$[ebp]
  00319	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 748  : 	
; 749  : 					loop = 0;

  0031c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
$LN6@initialise:

; 750  : 	
; 751  : 					#if DEBUG_MODULE
; 752  : 
; 753  : 					debug_log ("EN_FORMS: loading formation components %s, formation %s", formation_component_names [new_formation_component->formation_component], formation_names [new_formation_component->formation]);
; 754  : 
; 755  : 					#endif
; 756  : 	
; 757  : 					while (loop < count * 2)

  00323	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00326	d1 e0		 shl	 eax, 1
  00328	39 45 e8	 cmp	 DWORD PTR _loop$[ebp], eax
  0032b	7d 6b		 jge	 SHORT $LN24@initialise

; 758  : 					{
; 759  : 
; 760  : 						switch (group_database [new_formation_component->group_type].default_landing_type)

  0032d	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  00330	6b 48 0c 64	 imul	 ecx, DWORD PTR [eax+12], 100
  00334	8b 91 18 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+24]
  0033a	89 95 18 fb ff
	ff		 mov	 DWORD PTR tv223[ebp], edx
  00340	83 bd 18 fb ff
	ff 05		 cmp	 DWORD PTR tv223[ebp], 5
  00347	77 35		 ja	 SHORT $LN8@initialise
  00349	8b 85 18 fb ff
	ff		 mov	 eax, DWORD PTR tv223[ebp]
  0034f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN31@initialise[eax*4]
$LN25@initialise:

; 761  : 						{
; 762  : 
; 763  : 							case ENTITY_SUB_TYPE_LANDING_GROUND:
; 764  : 							case ENTITY_SUB_TYPE_LANDING_PEOPLE:
; 765  : 							case ENTITY_SUB_TYPE_LANDING_SEA:
; 766  : 							{
; 767  : 		
; 768  : 								type = get_next_file_enum (file_ptr, entity_sub_type_vehicle_names, NUM_ENTITY_SUB_TYPE_VEHICLES);

  00356	6a 26		 push	 38			; 00000026H
  00358	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_vehicle_names@@3PAPBDA ; entity_sub_type_vehicle_names
  0035d	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00360	50		 push	 eax
  00361	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00366	89 45 e4	 mov	 DWORD PTR _type$[ebp], eax

; 769  : 
; 770  : 								#if DEBUG_MODULE
; 771  : 								debug_log ("	adding component %d %s", loop, entity_sub_type_vehicle_names [type]);
; 772  : 								#endif
; 773  : 
; 774  : 								break;

  00369	eb 13		 jmp	 SHORT $LN8@initialise
$LN26@initialise:

; 775  : 							}
; 776  : 
; 777  : 							case ENTITY_SUB_TYPE_LANDING_HELICOPTER:
; 778  : 							case ENTITY_SUB_TYPE_LANDING_FIXED_WING:
; 779  : 							case ENTITY_SUB_TYPE_LANDING_FIXED_WING_TRANSPORT:
; 780  : 							{
; 781  : 		
; 782  : 								type = get_next_file_enum (file_ptr, entity_sub_type_aircraft_names, NUM_ENTITY_SUB_TYPE_AIRCRAFT);

  0036b	6a 20		 push	 32			; 00000020H
  0036d	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_aircraft_names@@3PAPBDA ; entity_sub_type_aircraft_names
  00372	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00375	50		 push	 eax
  00376	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0037b	89 45 e4	 mov	 DWORD PTR _type$[ebp], eax
$LN8@initialise:

; 783  : 
; 784  : 								#if DEBUG_MODULE
; 785  : 								debug_log ("	adding component %d %s", loop, entity_sub_type_aircraft_names [type]);
; 786  : 								#endif
; 787  : 
; 788  : 								break;
; 789  : 							}
; 790  : 						}
; 791  : 	
; 792  : 						new_formation_component->components [loop] = type;

  0037e	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  00381	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00384	8b 55 e8	 mov	 edx, DWORD PTR _loop$[ebp]
  00387	8b 45 e4	 mov	 eax, DWORD PTR _type$[ebp]
  0038a	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax

; 793  : 	
; 794  : 						loop ++;

  0038d	8b 45 e8	 mov	 eax, DWORD PTR _loop$[ebp]
  00390	83 c0 01	 add	 eax, 1
  00393	89 45 e8	 mov	 DWORD PTR _loop$[ebp], eax

; 795  : 					}

  00396	eb 8b		 jmp	 SHORT $LN6@initialise
$LN24@initialise:

; 796  : 				}
; 797  : 
; 798  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00398	68 af 00 00 00	 push	 175			; 000000afH
  0039d	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  003a2	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003a5	50		 push	 eax
  003a6	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  003ab	89 45 dc	 mov	 DWORD PTR _result$[ebp], eax

; 799  : 
; 800  : 				ASSERT (result == FILE_TAG_END);

  003ae	83 7d dc f6	 cmp	 DWORD PTR _result$[ebp], -10 ; fffffff6H
  003b2	74 1a		 je	 SHORT $LN27@initialise
  003b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_component_database@@YGXXZ@4JA
  003b9	05 a6 00 00 00	 add	 eax, 166		; 000000a6H
  003be	50		 push	 eax
  003bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c4	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NKLDJAKE@result?5?$DN?$DN?5FILE_TAG_END@
  003c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN27@initialise:

; 801  : 
; 802  : 				//
; 803  : 				// link into database
; 804  : 				//
; 805  : 
; 806  : 				new_formation_component->next = formation_component_database;

  003ce	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  003d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A ; formation_component_database
  003d7	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 807  : 
; 808  : 				formation_component_database = new_formation_component;

  003da	8b 45 f4	 mov	 eax, DWORD PTR _new_formation_component$[ebp]
  003dd	a3 00 00 00 00	 mov	 DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A, eax ; formation_component_database

; 809  : 
; 810  : 				break;

  003e2	eb 0f		 jmp	 SHORT $LN4@initialise
$LN28@initialise:

; 811  : 			}
; 812  : 
; 813  : 			case FILE_TAG_END:
; 814  : 			{
; 815  : 
; 816  : 				fclose (file_ptr);

  003e4	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003e7	50		 push	 eax
  003e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  003ee	83 c4 04	 add	 esp, 4

; 817  : 
; 818  : 				return;

  003f1	eb 05		 jmp	 SHORT $LN1@initialise
$LN4@initialise:

; 819  : 			}
; 820  : 		}
; 821  : 	}

  003f3	e9 69 fd ff ff	 jmp	 $LN2@initialise
$LN1@initialise:

; 822  : }

  003f8	5f		 pop	 edi
  003f9	5e		 pop	 esi
  003fa	5b		 pop	 ebx
  003fb	8b e5		 mov	 esp, ebp
  003fd	5d		 pop	 ebp
  003fe	c3		 ret	 0
  003ff	90		 npad	 1
$LN31@initialise:
  00400	00 00 00 00	 DD	 $LN26@initialise
  00404	00 00 00 00	 DD	 $LN26@initialise
  00408	00 00 00 00	 DD	 $LN26@initialise
  0040c	00 00 00 00	 DD	 $LN25@initialise
  00410	00 00 00 00	 DD	 $LN25@initialise
  00414	00 00 00 00	 DD	 $LN25@initialise
?initialise_formation_component_database@@YGXXZ ENDP	; initialise_formation_component_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?get_formation_position@@YGXW4FORMATION_TYPES@@HPAUVEC3D@@@Z
_TEXT	SEGMENT
_formation_data$ = -4					; size = 4
_form$ = 8						; size = 4
_index$ = 12						; size = 4
_vec$ = 16						; size = 4
?get_formation_position@@YGXW4FORMATION_TYPES@@HPAUVEC3D@@@Z PROC ; get_formation_position, COMDAT

; 617  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 618  : 
; 619  : 	formation_type
; 620  : 		*formation_data;
; 621  : 
; 622  : 	formation_data = get_formation (form);

  00009	8b 45 08	 mov	 eax, DWORD PTR _form$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
  00012	89 45 fc	 mov	 DWORD PTR _formation_data$[ebp], eax

; 623  : 
; 624  : 	vec->x = formation_data->sites [index].x;

  00015	6b 45 0c 0c	 imul	 eax, DWORD PTR _index$[ebp], 12
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _formation_data$[ebp]
  0001c	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0001f	8b 4d 10	 mov	 ecx, DWORD PTR _vec$[ebp]
  00022	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00025	89 11		 mov	 DWORD PTR [ecx], edx

; 625  : 	vec->y = formation_data->sites [index].y;

  00027	6b 45 0c 0c	 imul	 eax, DWORD PTR _index$[ebp], 12
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _formation_data$[ebp]
  0002e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00031	8b 4d 10	 mov	 ecx, DWORD PTR _vec$[ebp]
  00034	8b 54 02 04	 mov	 edx, DWORD PTR [edx+eax+4]
  00038	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 626  : 	vec->z = formation_data->sites [index].z;

  0003b	6b 45 0c 0c	 imul	 eax, DWORD PTR _index$[ebp], 12
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _formation_data$[ebp]
  00042	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00045	8b 4d 10	 mov	 ecx, DWORD PTR _vec$[ebp]
  00048	8b 54 02 08	 mov	 edx, DWORD PTR [edx+eax+8]
  0004c	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 627  : }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 0c 00	 ret	 12			; 0000000cH
?get_formation_position@@YGXW4FORMATION_TYPES@@HPAUVEC3D@@@Z ENDP ; get_formation_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?get_formation_member_radius@@YGMW4FORMATION_TYPES@@H@Z
_TEXT	SEGMENT
_biggest_sqr_radius$ = -24				; size = 4
_sqr_radius$ = -20					; size = 4
_radius$ = -16						; size = 4
_biggest_radius_index$ = -12				; size = 4
_loop$ = -8						; size = 4
_formation_data$ = -4					; size = 4
_form$ = 8						; size = 4
_member_count$ = 12					; size = 4
?get_formation_member_radius@@YGMW4FORMATION_TYPES@@H@Z PROC ; get_formation_member_radius, COMDAT

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 574  : 
; 575  : 	formation_type
; 576  : 		*formation_data;
; 577  : 
; 578  : 	int
; 579  : 		loop,
; 580  : 		biggest_radius_index;
; 581  : 
; 582  : 	float
; 583  : 		radius,
; 584  : 		sqr_radius,
; 585  : 		biggest_sqr_radius;
; 586  : 
; 587  : 	formation_data = get_formation (form);

  00009	8b 45 08	 mov	 eax, DWORD PTR _form$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
  00012	89 45 fc	 mov	 DWORD PTR _formation_data$[ebp], eax

; 588  : 
; 589  : 	biggest_sqr_radius = 0.0;

  00015	0f 57 c0	 xorps	 xmm0, xmm0
  00018	f3 0f 11 45 e8	 movss	 DWORD PTR _biggest_sqr_radius$[ebp], xmm0

; 590  : 
; 591  : 	biggest_radius_index = 0;

  0001d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _biggest_radius_index$[ebp], 0

; 592  : 
; 593  : 	for (loop = 0; loop < member_count; loop ++)

  00024	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0002b	eb 09		 jmp	 SHORT $LN4@get_format
$LN2@get_format:
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00030	83 c0 01	 add	 eax, 1
  00033	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@get_format:
  00036	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00039	3b 45 0c	 cmp	 eax, DWORD PTR _member_count$[ebp]
  0003c	7d 64		 jge	 SHORT $LN3@get_format

; 594  : 	{
; 595  : 
; 596  : 		sqr_radius = (formation_data->sites [loop].x * formation_data->sites [loop].x) + (formation_data->sites [loop].z * formation_data->sites [loop].z);

  0003e	6b 45 f8 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _formation_data$[ebp]
  00045	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00048	6b 4d f8 0c	 imul	 ecx, DWORD PTR _loop$[ebp], 12
  0004c	8b 75 fc	 mov	 esi, DWORD PTR _formation_data$[ebp]
  0004f	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  00052	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00057	f3 0f 59 04 0e	 mulss	 xmm0, DWORD PTR [esi+ecx]
  0005c	6b 55 f8 0c	 imul	 edx, DWORD PTR _loop$[ebp], 12
  00060	8b 45 fc	 mov	 eax, DWORD PTR _formation_data$[ebp]
  00063	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00066	6b 45 f8 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  0006a	8b 75 fc	 mov	 esi, DWORD PTR _formation_data$[ebp]
  0006d	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  00070	f3 0f 10 4c 11
	08		 movss	 xmm1, DWORD PTR [ecx+edx+8]
  00076	f3 0f 59 4c 06
	08		 mulss	 xmm1, DWORD PTR [esi+eax+8]
  0007c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00080	f3 0f 11 45 ec	 movss	 DWORD PTR _sqr_radius$[ebp], xmm0

; 597  : 
; 598  : 		if (sqr_radius > biggest_sqr_radius)

  00085	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sqr_radius$[ebp]
  0008a	0f 2f 45 e8	 comiss	 xmm0, DWORD PTR _biggest_sqr_radius$[ebp]
  0008e	76 10		 jbe	 SHORT $LN5@get_format

; 599  : 		{
; 600  : 
; 601  : 			biggest_sqr_radius = sqr_radius;

  00090	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sqr_radius$[ebp]
  00095	f3 0f 11 45 e8	 movss	 DWORD PTR _biggest_sqr_radius$[ebp], xmm0

; 602  : 
; 603  : 			biggest_radius_index = loop;

  0009a	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0009d	89 45 f4	 mov	 DWORD PTR _biggest_radius_index$[ebp], eax
$LN5@get_format:

; 604  : 		}
; 605  : 	}

  000a0	eb 8b		 jmp	 SHORT $LN2@get_format
$LN3@get_format:

; 606  : 
; 607  : 	radius = get_3d_vector_magnitude (&formation_data->sites [biggest_radius_index]);

  000a2	6b 45 f4 0c	 imul	 eax, DWORD PTR _biggest_radius_index$[ebp], 12
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _formation_data$[ebp]
  000a9	03 41 0c	 add	 eax, DWORD PTR [ecx+12]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  000b2	d9 5d f0	 fstp	 DWORD PTR _radius$[ebp]

; 608  : 
; 609  : 	return radius;

  000b5	d9 45 f0	 fld	 DWORD PTR _radius$[ebp]

; 610  : }

  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8
?get_formation_member_radius@@YGMW4FORMATION_TYPES@@H@Z ENDP ; get_formation_member_radius
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z
_TEXT	SEGMENT
_this_formation$ = -4					; size = 4
_formation$ = 8						; size = 4
?get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z PROC	; get_formation_name, COMDAT

; 550  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 551  : 
; 552  : 	formation_type
; 553  : 		*this_formation;
; 554  : 
; 555  : 	ASSERT (formation_database);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, 0 ; formation_database
  00010	75 18		 jne	 SHORT $LN2@get_format
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DLJPBOGG@formation_database@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_format:

; 556  : 
; 557  : 	this_formation = get_formation (formation);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _formation$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
  00033	89 45 fc	 mov	 DWORD PTR _this_formation$[ebp], eax

; 558  : 
; 559  : 	if (this_formation)

  00036	83 7d fc 00	 cmp	 DWORD PTR _this_formation$[ebp], 0
  0003a	74 08		 je	 SHORT $LN3@get_format

; 560  : 	{
; 561  : 
; 562  : 		return this_formation->name;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  0003f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00042	eb 02		 jmp	 SHORT $LN1@get_format
$LN3@get_format:

; 563  : 	}
; 564  : 
; 565  : 	return NULL;

  00044	33 c0		 xor	 eax, eax
$LN1@get_format:

; 566  : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?get_formation_name@@YGPBDW4FORMATION_TYPES@@@Z ENDP	; get_formation_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z
_TEXT	SEGMENT
_this_formation$ = -4					; size = 4
_formation$ = 8						; size = 4
?get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z PROC	; get_number_in_formation, COMDAT

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 528  : 
; 529  : 	formation_type
; 530  : 		*this_formation;
; 531  : 
; 532  : 	ASSERT (formation_database);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, 0 ; formation_database
  00010	75 18		 jne	 SHORT $LN2@get_number
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DLJPBOGG@formation_database@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_number:

; 533  : 
; 534  : 	this_formation = get_formation (formation);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _formation$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ; get_formation
  00033	89 45 fc	 mov	 DWORD PTR _this_formation$[ebp], eax

; 535  : 
; 536  : 	if (this_formation)

  00036	83 7d fc 00	 cmp	 DWORD PTR _this_formation$[ebp], 0
  0003a	74 09		 je	 SHORT $LN3@get_number

; 537  : 	{
; 538  : 
; 539  : 		return this_formation->number_in_formation;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  0003f	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  00043	eb 02		 jmp	 SHORT $LN1@get_number
$LN3@get_number:

; 540  : 	}
; 541  : 
; 542  : 	return 0;

  00045	33 c0		 xor	 eax, eax
$LN1@get_number:

; 543  : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
?get_number_in_formation@@YGFW4FORMATION_TYPES@@@Z ENDP	; get_number_in_formation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z
_TEXT	SEGMENT
_this_formation$ = -4					; size = 4
_formation$ = 8						; size = 4
?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z PROC ; get_formation, COMDAT

; 493  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 494  : 	formation_type
; 495  : 		*this_formation;
; 496  : 
; 497  : 	ASSERT (formation_database);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, 0 ; formation_database
  00010	75 18		 jne	 SHORT $LN4@get_format
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DLJPBOGG@formation_database@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_format:

; 498  : 
; 499  : 	if (formation_database_table)

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A, 0 ; formation_database_table
  00031	74 0e		 je	 SHORT $LN5@get_format

; 500  : 	{
; 501  : 
; 502  : 		return formation_database_table [formation];

  00033	8b 45 08	 mov	 eax, DWORD PTR _formation$[ebp]
  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A ; formation_database_table
  0003c	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  0003f	eb 2a		 jmp	 SHORT $LN1@get_format
$LN5@get_format:

; 503  : 	}
; 504  : 
; 505  : 	this_formation = formation_database;

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A ; formation_database
  00046	89 45 fc	 mov	 DWORD PTR _this_formation$[ebp], eax
$LN2@get_format:

; 506  : 
; 507  : 	while (this_formation)

  00049	83 7d fc 00	 cmp	 DWORD PTR _this_formation$[ebp], 0
  0004d	74 1a		 je	 SHORT $LN3@get_format

; 508  : 	{
; 509  : 
; 510  : 		if (this_formation->formation == formation)

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  00052	8b 08		 mov	 ecx, DWORD PTR [eax]
  00054	3b 4d 08	 cmp	 ecx, DWORD PTR _formation$[ebp]
  00057	75 05		 jne	 SHORT $LN6@get_format

; 511  : 		{
; 512  : 
; 513  : 			return this_formation;

  00059	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  0005c	eb 0d		 jmp	 SHORT $LN1@get_format
$LN6@get_format:

; 514  : 		}
; 515  : 
; 516  : 		this_formation = this_formation->next;

  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  00061	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00064	89 4d fc	 mov	 DWORD PTR _this_formation$[ebp], ecx

; 517  : 	}

  00067	eb e0		 jmp	 SHORT $LN2@get_format
$LN3@get_format:

; 518  : 
; 519  : 	return NULL;

  00069	33 c0		 xor	 eax, eax
$LN1@get_format:

; 520  : }

  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
?get_formation@@YGPAUFORMATION_TYPE@@W4FORMATION_TYPES@@@Z ENDP ; get_formation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?deinitialise_formation_database@@YGXXZ
_TEXT	SEGMENT
_destroy_formation$ = -4				; size = 4
?deinitialise_formation_database@@YGXXZ PROC		; deinitialise_formation_database, COMDAT

; 450  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@deinitiali:

; 451  : 
; 452  : 	formation_type
; 453  : 		*destroy_formation;
; 454  : 
; 455  : 	while (formation_database)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, 0 ; formation_database
  00010	74 4b		 je	 SHORT $LN3@deinitiali

; 456  : 	{
; 457  : 
; 458  : 		destroy_formation = formation_database;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A ; formation_database
  00017	89 45 fc	 mov	 DWORD PTR _destroy_formation$[ebp], eax

; 459  : 
; 460  : 		formation_database = formation_database->next;

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A ; formation_database
  0001f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00022	89 0d 00 00 00
	00		 mov	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, ecx ; formation_database

; 461  : 
; 462  : 		if (destroy_formation->name)

  00028	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	74 0c		 je	 SHORT $LN4@deinitiali

; 463  : 		{
; 464  : 
; 465  : 			free_mem (destroy_formation->name);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation$[ebp]
  00034	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN4@deinitiali:

; 466  : 		}
; 467  : 
; 468  : 		if (destroy_formation->sites)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation$[ebp]
  00040	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00044	74 0c		 je	 SHORT $LN5@deinitiali

; 469  : 		{
; 470  : 
; 471  : 			free_mem (destroy_formation->sites);

  00046	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation$[ebp]
  00049	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN5@deinitiali:

; 472  : 		}
; 473  : 
; 474  : 		free_mem (destroy_formation);

  00052	8b 45 fc	 mov	 eax, DWORD PTR _destroy_formation$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 475  : 	}

  0005b	eb ac		 jmp	 SHORT $LN2@deinitiali
$LN3@deinitiali:

; 476  : 
; 477  : 	// deinitialise lookup table too
; 478  : 
; 479  : 	if (formation_database_table)

  0005d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A, 0 ; formation_database_table
  00064	74 15		 je	 SHORT $LN1@deinitiali

; 480  : 	{
; 481  : 
; 482  : 		free_mem (formation_database_table);

  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A ; formation_database_table
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 483  : 
; 484  : 		formation_database_table = NULL;

  00071	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A, 0 ; formation_database_table
$LN1@deinitiali:

; 485  : 	}
; 486  : }

  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
?deinitialise_formation_database@@YGXXZ ENDP		; deinitialise_formation_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?get_formation_database_count@@YGHXZ
_TEXT	SEGMENT
?get_formation_database_count@@YGHXZ PROC		; get_formation_database_count, COMDAT

; 441  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 442  : 	return last_formation_index;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_formation_index@@3HA

; 443  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_formation_database_count@@YGHXZ ENDP		; get_formation_database_count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?add_formation_to_database@@YGHHPAUVEC3D@@@Z
_TEXT	SEGMENT
_name$ = -132						; size = 128
_new_formation$ = -4					; size = 4
_number_in_formation$ = 8				; size = 4
_site_positions$ = 12					; size = 4
?add_formation_to_database@@YGHHPAUVEC3D@@@Z PROC	; add_formation_to_database, COMDAT

; 397  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 398  : 
; 399  : 	formation_type
; 400  : 		*new_formation;
; 401  : 
; 402  : 	char
; 403  : 		name [128];
; 404  : 
; 405  : 	new_formation = (formation_type *) malloc_heap_mem (sizeof (formation_type));

  0000c	6a 14		 push	 20			; 00000014H
  0000e	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00013	89 45 fc	 mov	 DWORD PTR _new_formation$[ebp], eax

; 406  : 	memset (new_formation, 0, sizeof (formation_type));

  00016	6a 14		 push	 20			; 00000014H
  00018	6a 00		 push	 0
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _new_formation$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 407  : 
; 408  : 	last_formation_index ++;

  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_formation_index@@3HA
  0002b	83 c0 01	 add	 eax, 1
  0002e	a3 00 00 00 00	 mov	 DWORD PTR ?last_formation_index@@3HA, eax

; 409  : 	new_formation->formation = (formation_types) last_formation_index;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _new_formation$[ebp]
  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?last_formation_index@@3HA
  0003c	89 08		 mov	 DWORD PTR [eax], ecx

; 410  : 
; 411  : 	sprintf (name, "USER FORMATION %d", last_formation_index);

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_formation_index@@3HA
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BFBGFDGA@USER?5FORMATION?5?$CFd@
  00049	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _name$[ebp]
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 _sprintf
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH

; 412  : 	new_formation->name = (char *) malloc_heap_mem (sizeof (char) * (strlen (name) + 1));

  00058	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _name$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 _strlen
  00064	83 c4 04	 add	 esp, 4
  00067	83 c0 01	 add	 eax, 1
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  00073	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 413  : 	strcpy (new_formation->name, name);

  00076	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _name$[ebp]
  0007c	50		 push	 eax
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  00080	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 _strcpy
  00089	83 c4 08	 add	 esp, 8

; 414  : 
; 415  : 	new_formation->number_in_formation = number_in_formation;

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _new_formation$[ebp]
  0008f	66 8b 4d 08	 mov	 cx, WORD PTR _number_in_formation$[ebp]
  00093	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 416  : 
; 417  : 	if (number_in_formation > 0)

  00097	83 7d 08 00	 cmp	 DWORD PTR _number_in_formation$[ebp], 0
  0009b	7e 28		 jle	 SHORT $LN2@add_format

; 418  : 	{
; 419  : 
; 420  : 		new_formation->sites = (vec3d *) malloc_heap_mem (sizeof (vec3d) * (number_in_formation));

  0009d	6b 45 08 0c	 imul	 eax, DWORD PTR _number_in_formation$[ebp], 12
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  000aa	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 421  : 
; 422  : 		memcpy (new_formation->sites, site_positions, sizeof (vec3d) * number_in_formation);

  000ad	6b 45 08 0c	 imul	 eax, DWORD PTR _number_in_formation$[ebp], 12
  000b1	50		 push	 eax
  000b2	8b 4d 0c	 mov	 ecx, DWORD PTR _site_positions$[ebp]
  000b5	51		 push	 ecx
  000b6	8b 55 fc	 mov	 edx, DWORD PTR _new_formation$[ebp]
  000b9	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 _memcpy
  000c2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@add_format:

; 423  : 	}
; 424  : 
; 425  : 	//
; 426  : 	// link into database
; 427  : 	//
; 428  : 
; 429  : 	new_formation->next = formation_database;

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _new_formation$[ebp]
  000c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A ; formation_database
  000ce	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 430  : 
; 431  : 	formation_database = new_formation;

  000d1	8b 45 fc	 mov	 eax, DWORD PTR _new_formation$[ebp]
  000d4	a3 00 00 00 00	 mov	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, eax ; formation_database

; 432  : 
; 433  : 	return last_formation_index;

  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_formation_index@@3HA

; 434  : }

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c2 08 00	 ret	 8
?add_formation_to_database@@YGHHPAUVEC3D@@@Z ENDP	; add_formation_to_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?initialise_formation_database_table@@YGXXZ
_TEXT	SEGMENT
_this_formation$ = -4					; size = 4
?initialise_formation_database_table@@YGXXZ PROC	; initialise_formation_database_table, COMDAT

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 367  : 
; 368  : 	formation_type
; 369  : 		*this_formation;
; 370  : 
; 371  : 	if (formation_database_table)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A, 0 ; formation_database_table
  00010	74 0b		 je	 SHORT $LN4@initialise

; 372  : 	{
; 373  : 
; 374  : 		free_mem (formation_database_table);

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A ; formation_database_table
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN4@initialise:

; 375  : 	}
; 376  : 
; 377  : 	formation_database_table = (formation_type **) malloc_heap_mem (sizeof (formation_type *) * (last_formation_index + 1));

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_formation_index@@3HA
  00022	8d 0c 85 04 00
	00 00		 lea	 ecx, DWORD PTR [eax*4+4]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0002f	a3 00 00 00 00	 mov	 DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A, eax ; formation_database_table

; 378  : 
; 379  : 	memset (formation_database_table, 0, sizeof (formation_type *) * (last_formation_index + 1));

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_formation_index@@3HA
  00039	8d 0c 85 04 00
	00 00		 lea	 ecx, DWORD PTR [eax*4+4]
  00040	51		 push	 ecx
  00041	6a 00		 push	 0
  00043	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A ; formation_database_table
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 _memset
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 380  : 	
; 381  : 	this_formation = formation_database;

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A ; formation_database
  00057	89 45 fc	 mov	 DWORD PTR _this_formation$[ebp], eax
$LN2@initialise:

; 382  : 
; 383  : 	while (this_formation)

  0005a	83 7d fc 00	 cmp	 DWORD PTR _this_formation$[ebp], 0
  0005e	74 1c		 je	 SHORT $LN1@initialise

; 384  : 	{
; 385  : 
; 386  : 		formation_database_table [this_formation->formation] = this_formation;

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?formation_database_table@@3PAPAUFORMATION_TYPE@@A ; formation_database_table
  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  0006e	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 387  : 
; 388  : 		this_formation = this_formation->next;

  00071	8b 45 fc	 mov	 eax, DWORD PTR _this_formation$[ebp]
  00074	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00077	89 4d fc	 mov	 DWORD PTR _this_formation$[ebp], ecx

; 389  : 	}

  0007a	eb de		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 390  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
?initialise_formation_database_table@@YGXXZ ENDP	; initialise_formation_database_table
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_types\en_forms.c
;	COMDAT ?initialise_formation_database@@YGXXZ
_TEXT	SEGMENT
tv80 = -2416						; size = 4
_z$ = -2092						; size = 4
_y$ = -2088						; size = 4
_x$ = -2084						; size = 4
_temp_filename$ = -2080					; size = 1024
_name$ = -1056						; size = 1024
_result$ = -32						; size = 4
_count$ = -28						; size = 4
_type$ = -24						; size = 4
_loop$ = -20						; size = 4
_tag$ = -16						; size = 4
_file_ptr$ = -12					; size = 4
_new_formation$ = -8					; size = 4
_current_session$ = -4					; size = 4
?initialise_formation_database@@YGXXZ PROC		; initialise_formation_database, COMDAT

; 210  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 70 09 00
	00		 sub	 esp, 2416		; 00000970H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 211  : 
; 212  : 	session_list_data_type
; 213  : 		*current_session;
; 214  : 
; 215  : 	formation_type
; 216  : 		*new_formation;
; 217  : 
; 218  : 	FILE
; 219  : 		*file_ptr;
; 220  : 
; 221  : 	file_tags
; 222  : 		tag;
; 223  : 
; 224  : 	int
; 225  : 		loop,
; 226  : 		type,
; 227  : 		count,
; 228  : 		result;
; 229  : 
; 230  : 	char
; 231  : 		name [1024],
; 232  : 		temp_filename [1024];
; 233  : 
; 234  : 	float
; 235  : 		x,
; 236  : 		y,
; 237  : 		z;
; 238  : 
; 239  : 	formation_component_database = NULL;

  0000c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?formation_component_database@@3PAUFORMATION_VEHICLE_COMPONENTS@@A, 0 ; formation_component_database

; 240  : 
; 241  : 	formation_database = NULL;

  00016	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, 0 ; formation_database

; 242  : 
; 243  : 	last_formation_index = NUM_FORMATION_TYPES;

  00020	c7 05 00 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?last_formation_index@@3HA, 14 ; 0000000eH

; 244  : 
; 245  : 	new_formation = NULL;

  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new_formation$[ebp], 0

; 246  : 
; 247  : 	ASSERT (!formation_database);

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, 0 ; formation_database
  00038	74 18		 je	 SHORT $LN8@initialise
  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
  0003f	83 c0 25	 add	 eax, 37			; 00000025H
  00042	50		 push	 eax
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JBNJCHMJ@?$CBformation_database@
  0004d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@initialise:

; 248  : 
; 249  : 	current_session = get_current_game_session ();

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00057	89 45 fc	 mov	 DWORD PTR _current_session$[ebp], eax

; 250  : 
; 251  : 	sprintf (temp_filename, "%s", FORMATION_DEFAULT_FULLPATH);

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NIOAFHGE@?4?4?2common?2data?2forms?4dat@
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00064	8d 85 e0 f7 ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 _sprintf
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH

; 252  : 
; 253  : 	file_ptr = safe_fopen (temp_filename, "r");

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00078	8d 85 e0 f7 ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00084	89 45 f4	 mov	 DWORD PTR _file_ptr$[ebp], eax
$LN20@initialise:

; 254  : 
; 255  : 	while (TRUE)

  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	85 c0		 test	 eax, eax
  0008e	0f 84 eb 02 00
	00		 je	 $LN3@initialise

; 256  : 	{
; 257  : 
; 258  : 		tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00094	68 af 00 00 00	 push	 175			; 000000afH
  00099	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0009e	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  000a7	89 45 f0	 mov	 DWORD PTR _tag$[ebp], eax

; 259  : 
; 260  : 		switch (tag)

  000aa	8b 45 f0	 mov	 eax, DWORD PTR _tag$[ebp]
  000ad	89 85 90 f6 ff
	ff		 mov	 DWORD PTR tv80[ebp], eax
  000b3	83 bd 90 f6 ff
	ff e7		 cmp	 DWORD PTR tv80[ebp], -25 ; ffffffe7H
  000ba	74 1b		 je	 SHORT $LN9@initialise
  000bc	83 bd 90 f6 ff
	ff f6		 cmp	 DWORD PTR tv80[ebp], -10 ; fffffff6H
  000c3	0f 84 a2 02 00
	00		 je	 $LN18@initialise
  000c9	83 bd 90 f6 ff
	ff 28		 cmp	 DWORD PTR tv80[ebp], 40	; 00000028H
  000d0	74 07		 je	 SHORT $LN10@initialise
  000d2	e9 a3 02 00 00	 jmp	 $LN4@initialise
$LN9@initialise:

; 261  : 		{
; 262  : 
; 263  : 			case FILE_TAG_START:
; 264  : 			{
; 265  : 
; 266  : 				continue;

  000d7	eb ae		 jmp	 SHORT $LN20@initialise
$LN10@initialise:

; 267  : 			}
; 268  : 
; 269  : 			case FILE_TAG_FORMATION:
; 270  : 			{
; 271  : 
; 272  : 				new_formation = (formation_type *) malloc_heap_mem (sizeof (formation_type));

  000d9	6a 14		 push	 20			; 00000014H
  000db	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  000e0	89 45 f8	 mov	 DWORD PTR _new_formation$[ebp], eax

; 273  : 				memset (new_formation, 0, sizeof (formation_type));

  000e3	6a 14		 push	 20			; 00000014H
  000e5	6a 00		 push	 0
  000e7	8b 45 f8	 mov	 eax, DWORD PTR _new_formation$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 _memset
  000f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 274  : 
; 275  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  000f3	68 af 00 00 00	 push	 175			; 000000afH
  000f8	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  000fd	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00106	89 45 e0	 mov	 DWORD PTR _result$[ebp], eax

; 276  : 				ASSERT (result == FILE_TAG_TYPE);

  00109	83 7d e0 e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  0010d	74 18		 je	 SHORT $LN11@initialise
  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
  00114	83 c0 42	 add	 eax, 66			; 00000042H
  00117	50		 push	 eax
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011d	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  00122	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@initialise:

; 277  : 				type = get_next_file_enum (file_ptr, formation_names, NUM_FORMATION_TYPES);

  00127	6a 0e		 push	 14			; 0000000eH
  00129	68 00 00 00 00	 push	 OFFSET ?formation_names@@3PAPBDA ; formation_names
  0012e	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00137	89 45 e8	 mov	 DWORD PTR _type$[ebp], eax

; 278  : 
; 279  : 				new_formation->formation = (formation_types) type;

  0013a	8b 45 f8	 mov	 eax, DWORD PTR _new_formation$[ebp]
  0013d	8b 4d e8	 mov	 ecx, DWORD PTR _type$[ebp]
  00140	89 08		 mov	 DWORD PTR [eax], ecx

; 280  : 
; 281  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00142	68 af 00 00 00	 push	 175			; 000000afH
  00147	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0014c	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00155	89 45 e0	 mov	 DWORD PTR _result$[ebp], eax

; 282  : 				ASSERT (result == FILE_TAG_NAME);

  00158	83 7d e0 67	 cmp	 DWORD PTR _result$[ebp], 103 ; 00000067H
  0015c	74 18		 je	 SHORT $LN12@initialise
  0015e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
  00163	83 c0 48	 add	 eax, 72			; 00000048H
  00166	50		 push	 eax
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@
  00171	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@initialise:

; 283  : 				get_next_file_string (file_ptr, name, sizeof (name));

  00176	68 00 04 00 00	 push	 1024			; 00000400H
  0017b	8d 85 e0 fb ff
	ff		 lea	 eax, DWORD PTR _name$[ebp]
  00181	50		 push	 eax
  00182	8b 4d f4	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00185	51		 push	 ecx
  00186	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 284  : 
; 285  : 				new_formation->name = (char *) malloc_heap_mem (sizeof (char) * (strlen (name) + 1));

  0018b	8d 85 e0 fb ff
	ff		 lea	 eax, DWORD PTR _name$[ebp]
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 _strlen
  00197	83 c4 04	 add	 esp, 4
  0019a	83 c0 01	 add	 eax, 1
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  001a3	8b 4d f8	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  001a6	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 286  : 				strcpy (new_formation->name, name);

  001a9	8d 85 e0 fb ff
	ff		 lea	 eax, DWORD PTR _name$[ebp]
  001af	50		 push	 eax
  001b0	8b 4d f8	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  001b3	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001b6	52		 push	 edx
  001b7	e8 00 00 00 00	 call	 _strcpy
  001bc	83 c4 08	 add	 esp, 8

; 287  : 
; 288  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  001bf	68 af 00 00 00	 push	 175			; 000000afH
  001c4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  001c9	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  001d2	89 45 e0	 mov	 DWORD PTR _result$[ebp], eax

; 289  : 				ASSERT (result == FILE_TAG_RADIUS);

  001d5	83 7d e0 7d	 cmp	 DWORD PTR _result$[ebp], 125 ; 0000007dH
  001d9	74 18		 je	 SHORT $LN13@initialise
  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
  001e0	83 c0 4f	 add	 eax, 79			; 0000004fH
  001e3	50		 push	 eax
  001e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LDIKHIKE@result?5?$DN?$DN?5FILE_TAG_RADIUS@
  001ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@initialise:

; 290  : 				//new_formation->max_formation_radius = get_next_file_int (file_ptr);
; 291  : 
; 292  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  001f3	68 af 00 00 00	 push	 175			; 000000afH
  001f8	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  001fd	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00206	89 45 e0	 mov	 DWORD PTR _result$[ebp], eax

; 293  : 				ASSERT (result == FILE_TAG_COUNT);

  00209	83 7d e0 12	 cmp	 DWORD PTR _result$[ebp], 18 ; 00000012H
  0020d	74 18		 je	 SHORT $LN14@initialise
  0020f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
  00214	83 c0 53	 add	 eax, 83			; 00000053H
  00217	50		 push	 eax
  00218	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@
  00222	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@initialise:

; 294  : 				count = get_next_file_int (file_ptr);

  00227	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0022a	50		 push	 eax
  0022b	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00230	89 45 e4	 mov	 DWORD PTR _count$[ebp], eax

; 295  : 
; 296  : 				new_formation->number_in_formation = count;

  00233	8b 45 f8	 mov	 eax, DWORD PTR _new_formation$[ebp]
  00236	66 8b 4d e4	 mov	 cx, WORD PTR _count$[ebp]
  0023a	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 297  : 
; 298  : 				if (count > 0)

  0023e	83 7d e4 00	 cmp	 DWORD PTR _count$[ebp], 0
  00242	0f 8e d9 00 00
	00		 jle	 $LN7@initialise

; 299  : 				{
; 300  : 	
; 301  : 					new_formation->sites = (vec3d *) malloc_heap_mem (sizeof (vec3d) * (count));

  00248	6b 45 e4 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00252	8b 4d f8	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  00255	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 302  : 	
; 303  : 					loop = 0;

  00258	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
$LN6@initialise:

; 304  : 	
; 305  :   					#if DEBUG_MODULE
; 306  : 
; 307  : 					debug_log ("EN_FORMS: loading formation %s", formation_names [new_formation->formation]);
; 308  : 
; 309  : 					#endif
; 310  : 	
; 311  : 					while (loop < count)

  0025f	8b 45 ec	 mov	 eax, DWORD PTR _loop$[ebp]
  00262	3b 45 e4	 cmp	 eax, DWORD PTR _count$[ebp]
  00265	0f 8d b6 00 00
	00		 jge	 $LN7@initialise

; 312  : 					{
; 313  : 	
; 314  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0026b	68 af 00 00 00	 push	 175			; 000000afH
  00270	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00275	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0027e	89 45 e0	 mov	 DWORD PTR _result$[ebp], eax

; 315  : 						ASSERT (result == FILE_TAG_POSITION);

  00281	83 7d e0 7a	 cmp	 DWORD PTR _result$[ebp], 122 ; 0000007aH
  00285	74 18		 je	 SHORT $LN16@initialise
  00287	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
  0028c	83 c0 69	 add	 eax, 105		; 00000069H
  0028f	50		 push	 eax
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00295	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@
  0029a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@initialise:

; 316  : 	
; 317  : 						x = get_next_file_float (file_ptr);

  0029f	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002a2	50		 push	 eax
  002a3	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  002a8	d9 9d dc f7 ff
	ff		 fstp	 DWORD PTR _x$[ebp]

; 318  : 						y = get_next_file_float (file_ptr);

  002ae	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002b1	50		 push	 eax
  002b2	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  002b7	d9 9d d8 f7 ff
	ff		 fstp	 DWORD PTR _y$[ebp]

; 319  : 						z = get_next_file_float (file_ptr);

  002bd	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002c0	50		 push	 eax
  002c1	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  002c6	d9 9d d4 f7 ff
	ff		 fstp	 DWORD PTR _z$[ebp]

; 320  : 	
; 321  : 						new_formation->sites [loop].x = x;

  002cc	6b 45 ec 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  002d0	8b 4d f8	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  002d3	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  002d6	f3 0f 10 85 dc
	f7 ff ff	 movss	 xmm0, DWORD PTR _x$[ebp]
  002de	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 322  : 						new_formation->sites [loop].y = y;

  002e3	6b 45 ec 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  002e7	8b 4d f8	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  002ea	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  002ed	f3 0f 10 85 d8
	f7 ff ff	 movss	 xmm0, DWORD PTR _y$[ebp]
  002f5	f3 0f 11 44 02
	04		 movss	 DWORD PTR [edx+eax+4], xmm0

; 323  : 						new_formation->sites [loop].z = z;

  002fb	6b 45 ec 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  002ff	8b 4d f8	 mov	 ecx, DWORD PTR _new_formation$[ebp]
  00302	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00305	f3 0f 10 85 d4
	f7 ff ff	 movss	 xmm0, DWORD PTR _z$[ebp]
  0030d	f3 0f 11 44 02
	08		 movss	 DWORD PTR [edx+eax+8], xmm0

; 324  : 	
; 325  : 						#if DEBUG_MODULE
; 326  : 
; 327  : 						debug_log ("	adding site %f, %f, %f", x, y, z);
; 328  : 
; 329  : 						#endif
; 330  : 	
; 331  : 						loop ++;

  00313	8b 45 ec	 mov	 eax, DWORD PTR _loop$[ebp]
  00316	83 c0 01	 add	 eax, 1
  00319	89 45 ec	 mov	 DWORD PTR _loop$[ebp], eax

; 332  : 					}

  0031c	e9 3e ff ff ff	 jmp	 $LN6@initialise
$LN7@initialise:

; 333  : 				}
; 334  : 
; 335  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00321	68 af 00 00 00	 push	 175			; 000000afH
  00326	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0032b	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0032e	50		 push	 eax
  0032f	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00334	89 45 e0	 mov	 DWORD PTR _result$[ebp], eax

; 336  : 
; 337  : 				ASSERT (result == FILE_TAG_END);

  00337	83 7d e0 f6	 cmp	 DWORD PTR _result$[ebp], -10 ; fffffff6H
  0033b	74 18		 je	 SHORT $LN17@initialise
  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_formation_database@@YGXXZ@4JA
  00342	83 c0 7f	 add	 eax, 127		; 0000007fH
  00345	50		 push	 eax
  00346	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@FBOIFKAL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034b	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NKLDJAKE@result?5?$DN?$DN?5FILE_TAG_END@
  00350	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@initialise:

; 338  : 
; 339  : 				//
; 340  : 				// link into database
; 341  : 				//
; 342  : 
; 343  : 				new_formation->next = formation_database;

  00355	8b 45 f8	 mov	 eax, DWORD PTR _new_formation$[ebp]
  00358	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A ; formation_database
  0035e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 344  : 
; 345  : 				formation_database = new_formation;

  00361	8b 45 f8	 mov	 eax, DWORD PTR _new_formation$[ebp]
  00364	a3 00 00 00 00	 mov	 DWORD PTR ?formation_database@@3PAUFORMATION_TYPE@@A, eax ; formation_database

; 346  : 
; 347  : 				break;

  00369	eb 0f		 jmp	 SHORT $LN4@initialise
$LN18@initialise:

; 348  : 			}
; 349  : 
; 350  : 			case FILE_TAG_END:
; 351  : 			{
; 352  : 
; 353  : 				fclose (file_ptr);

  0036b	8b 45 f4	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0036e	50		 push	 eax
  0036f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00375	83 c4 04	 add	 esp, 4

; 354  : 
; 355  : 				return;

  00378	eb 05		 jmp	 SHORT $LN1@initialise
$LN4@initialise:

; 356  : 			}
; 357  : 		}
; 358  : 	}

  0037a	e9 08 fd ff ff	 jmp	 $LN20@initialise
$LN3@initialise:
$LN1@initialise:

; 359  : }

  0037f	5f		 pop	 edi
  00380	5e		 pop	 esi
  00381	5b		 pop	 ebx
  00382	8b e5		 mov	 esp, ebp
  00384	5d		 pop	 ebp
  00385	c3		 ret	 0
?initialise_formation_database@@YGXXZ ENDP		; initialise_formation_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
