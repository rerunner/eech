; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\task\task.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z ; assess_task_completeness
PUBLIC	?award_points_for_task_completion@@YGHPAUENTITY@@@Z ; award_points_for_task_completion
PUBLIC	?get_local_task_list_type@@YG?AW4LIST_TYPES@@PAUENTITY@@@Z ; get_local_task_list_type
PUBLIC	?get_local_entity_current_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_current_task
PUBLIC	?entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z ; entity_is_object_of_task
PUBLIC	?assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z ; assess_task_locality_factor
PUBLIC	?assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z	; assess_task_difficulty
PUBLIC	?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_group_primary_task
PUBLIC	?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_primary_task
PUBLIC	?find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z ; find_most_suitable_keysite_for_task
PUBLIC	?validate_task_entity@@YGXPAUENTITY@@@Z		; validate_task_entity
PUBLIC	?add_kill_to_task@@YGXPAUENTITY@@00@Z		; add_kill_to_task
PUBLIC	?add_loss_to_task@@YGXPAUENTITY@@00@Z		; add_loss_to_task
PUBLIC	?get_task_estimated_route_duration@@YGMPAUENTITY@@@Z ; get_task_estimated_route_duration
PUBLIC	?set_completed_task_expire_time@@YGXM@Z		; set_completed_task_expire_time
PUBLIC	?get_completed_task_expire_time@@YGMXZ		; get_completed_task_expire_time
PUBLIC	?get_task_objective_string@@YGPBDPAUENTITY@@@Z	; get_task_objective_string
PUBLIC	?get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z ; get_task_objective_mfd_display_string
PUBLIC	?get_task_friendly_fire_incidents@@YGHPAUENTITY@@@Z ; get_task_friendly_fire_incidents
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA ; `assess_task_completeness'::`1'::__LINE__Var
PUBLIC	??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	??_C@_0DK@KFKGAINH@?$CBget_local_entity_int_value?5?$CIen@ ; `string'
PUBLIC	??_C@_0CF@PIPBOKCG@sub_type?5?$DM?5NUM_ENTITY_SUB_TYPE_@ ; `string'
PUBLIC	??_C@_0CG@FDIGOKDB@task_database?5?$FLsub_type?$FN?4primar@ ; `string'
PUBLIC	??_C@_09FKEDLGBF@objective@			; `string'
PUBLIC	??_C@_0BH@EKNFBFOM@old_member_count?5?$DO?50?40@ ; `string'
PUBLIC	??_C@_0EB@OEEFBHJB@ESCORT?5RESULT?3?5Old?5Count?5?$DN?5?$CF?40f@ ; `string'
PUBLIC	??_C@_0DJ@PNBAHEDI@get_local_entity_type?5?$CIobjectiv@ ; `string'
PUBLIC	??_C@_0BL@FCMGHEEI@TASK?3?5Unknown?5Task?5Type?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA ; `award_points_for_task_completion'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0CC@BPGNPJJJ@task_completed?5?$CB?$DN?5TASK_INCOMPLE@ ; `string'
PUBLIC	??_C@_0BM@EIELJNHH@TASK?3?5Invalid?5Task?5State?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA ; `get_local_entity_current_task'::`1'::__LINE__Var
PUBLIC	??_C@_06HDFDANIG@member@			; `string'
PUBLIC	?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA ; `entity_is_object_of_task'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z@4JA ; `assess_task_locality_factor'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z@4JA ; `assess_task_difficulty'::`1'::__LINE__Var
PUBLIC	??_C@_07NKFOJBII@task_en@			; `string'
PUBLIC	?__LINE__Var@?0??assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z@4JA ; `assess_task_sector_difficulty'::`1'::__LINE__Var
PUBLIC	??_C@_09NAAGAKP@sector_en@			; `string'
PUBLIC	?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA ; `get_local_group_primary_task'::`1'::__LINE__Var
PUBLIC	??_C@_0L@IFPMBAGD@count?5?$DM?$DN?51@		; `string'
PUBLIC	?__LINE__Var@?0??get_local_entity_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA ; `get_local_entity_primary_task'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA ; `find_most_suitable_keysite_for_task'::`1'::__LINE__Var
PUBLIC	??_C@_03PCBNCGFH@pos@				; `string'
PUBLIC	??_C@_0BH@FPMBJPKK@task_landing_types?5?$DO?50@	; `string'
PUBLIC	??_C@_05BINPNAAL@force@				; `string'
PUBLIC	?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA ; `validate_task_entity'::`1'::__LINE__Var
PUBLIC	??_C@_0DH@DICGLJLC@get_local_entity_parent?5?$CIen?0?5LI@ ; `string'
PUBLIC	?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA ; `add_kill_to_task'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@HDBGDBMH@TASK?3?5added?5kill?5to?5task?5?$CFs?5?$CI?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA ; `add_loss_to_task'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@BGNDHPPO@TASK?3?5added?5loss?5to?5task?5?$CFs?5?$CI?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA ; `get_task_estimated_route_duration'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA ; `get_task_objective_string'::`1'::__LINE__Var
PUBLIC	??_C@_06IDGHNJOB@sector@			; `string'
PUBLIC	??_C@_07NBCGADJA@Unknown@			; `string'
PUBLIC	?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA ; `get_task_objective_mfd_display_string'::`1'::__LINE__Var
PUBLIC	??_C@_01LKDEMHDF@s@				; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe999999999999a
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@41400000
PUBLIC	__real@47c35000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_abs:PROC
EXTRN	_memset:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?get_approx_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_approx_2d_range
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?get_keysite_entity_mfd_display_name@@YGXPAUENTITY@@PAD@Z:PROC ; get_keysite_entity_mfd_display_name
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?get_local_sector_entity_enemy_surface_to_air_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_sector_entity_enemy_surface_to_air_defence_level
EXTRN	?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_sector_fog_of_war_value
EXTRN	?ai_log@@YAXPBDZZ:PROC				; ai_log
EXTRN	?get_group_to_task_suitability@@YGMHH@Z:PROC	; get_group_to_task_suitability
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_client_server_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?keysite_database@@3PAUKEYSITE_DATA@@A:BYTE	; keysite_database
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?task_database@@3PAUTASK_DATA@@A:BYTE		; task_database
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@47c35000
CONST	SEGMENT
__real@47c35000 DD 047c35000r			; 100000
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe999999999999a
CONST	SEGMENT
__real@3fe999999999999a DQ 03fe999999999999ar	; 0.8
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01LKDEMHDF@s@
CONST	SEGMENT
??_C@_01LKDEMHDF@s@ DB 's', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA DD 05fcH ; `get_task_objective_mfd_display_string'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07NBCGADJA@Unknown@
CONST	SEGMENT
??_C@_07NBCGADJA@Unknown@ DB 'Unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IDGHNJOB@sector@
CONST	SEGMENT
??_C@_06IDGHNJOB@sector@ DB 'sector', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA DD 05aaH ; `get_task_objective_string'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA DD 057cH ; `get_task_estimated_route_duration'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@BGNDHPPO@TASK?3?5added?5loss?5to?5task?5?$CFs?5?$CI?$CFd@
CONST	SEGMENT
??_C@_0CB@BGNDHPPO@TASK?3?5added?5loss?5to?5task?5?$CFs?5?$CI?$CFd@ DB 'T'
	DB	'ASK: added loss to task %s (%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA DD 0553H ; `add_loss_to_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@HDBGDBMH@TASK?3?5added?5kill?5to?5task?5?$CFs?5?$CI?$CFd@
CONST	SEGMENT
??_C@_0CB@HDBGDBMH@TASK?3?5added?5kill?5to?5task?5?$CFs?5?$CI?$CFd@ DB 'T'
	DB	'ASK: added kill to task %s (%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA DD 052aH ; `add_kill_to_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DH@DICGLJLC@get_local_entity_parent?5?$CIen?0?5LI@
CONST	SEGMENT
??_C@_0DH@DICGLJLC@get_local_entity_parent?5?$CIen?0?5LI@ DB 'get_local_e'
	DB	'ntity_parent (en, LIST_TYPE_TASK_DEPENDENT)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA DD 0503H ; `validate_task_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05BINPNAAL@force@
CONST	SEGMENT
??_C@_05BINPNAAL@force@ DB 'force', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FPMBJPKK@task_landing_types?5?$DO?50@
CONST	SEGMENT
??_C@_0BH@FPMBJPKK@task_landing_types?5?$DO?50@ DB 'task_landing_types > '
	DB	'0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03PCBNCGFH@pos@
CONST	SEGMENT
??_C@_03PCBNCGFH@pos@ DB 'pos', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA DD 0403H ; `find_most_suitable_keysite_for_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA DD 03e2H ; `get_local_entity_primary_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@IFPMBAGD@count?5?$DM?$DN?51@
CONST	SEGMENT
??_C@_0L@IFPMBAGD@count?5?$DM?$DN?51@ DB 'count <= 1', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA DD 03b0H ; `get_local_group_primary_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09NAAGAKP@sector_en@
CONST	SEGMENT
??_C@_09NAAGAKP@sector_en@ DB 'sector_en', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z@4JA DD 0391H ; `assess_task_sector_difficulty'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07NKFOJBII@task_en@
CONST	SEGMENT
??_C@_07NKFOJBII@task_en@ DB 'task_en', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z@4JA DD 02c3H ; `assess_task_difficulty'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z@4JA DD 0297H ; `assess_task_locality_factor'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA DD 0269H ; `entity_is_object_of_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06HDFDANIG@member@
CONST	SEGMENT
??_C@_06HDFDANIG@member@ DB 'member', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA DD 0252H ; `get_local_entity_current_task'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BM@EIELJNHH@TASK?3?5Invalid?5Task?5State?5?$CFd@
CONST	SEGMENT
??_C@_0BM@EIELJNHH@TASK?3?5Invalid?5Task?5State?5?$CFd@ DB 'TASK: Invalid'
	DB	' Task State %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BPGNPJJJ@task_completed?5?$CB?$DN?5TASK_INCOMPLE@
CONST	SEGMENT
??_C@_0CC@BPGNPJJJ@task_completed?5?$CB?$DN?5TASK_INCOMPLE@ DB 'task_comp'
	DB	'leted != TASK_INCOMPLETE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA DD 01fbH ; `award_points_for_task_completion'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@FCMGHEEI@TASK?3?5Unknown?5Task?5Type?5?$CFd@
CONST	SEGMENT
??_C@_0BL@FCMGHEEI@TASK?3?5Unknown?5Task?5Type?5?$CFd@ DB 'TASK: Unknown '
	DB	'Task Type %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@PNBAHEDI@get_local_entity_type?5?$CIobjectiv@
CONST	SEGMENT
??_C@_0DJ@PNBAHEDI@get_local_entity_type?5?$CIobjectiv@ DB 'get_local_ent'
	DB	'ity_type (objective) == ENTITY_TYPE_KEYSITE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OEEFBHJB@ESCORT?5RESULT?3?5Old?5Count?5?$DN?5?$CF?40f@
CONST	SEGMENT
??_C@_0EB@OEEFBHJB@ESCORT?5RESULT?3?5Old?5Count?5?$DN?5?$CF?40f@ DB 'ESCO'
	DB	'RT RESULT: Old Count = %.0f, New Count = %.0f, Rating = %f%%', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EKNFBFOM@old_member_count?5?$DO?50?40@
CONST	SEGMENT
??_C@_0BH@EKNFBFOM@old_member_count?5?$DO?50?40@ DB 'old_member_count > 0'
	DB	'.0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09FKEDLGBF@objective@
CONST	SEGMENT
??_C@_09FKEDLGBF@objective@ DB 'objective', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FDIGOKDB@task_database?5?$FLsub_type?$FN?4primar@
CONST	SEGMENT
??_C@_0CG@FDIGOKDB@task_database?5?$FLsub_type?$FN?4primar@ DB 'task_data'
	DB	'base [sub_type].primary_task', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PIPBOKCG@sub_type?5?$DM?5NUM_ENTITY_SUB_TYPE_@
CONST	SEGMENT
??_C@_0CF@PIPBOKCG@sub_type?5?$DM?5NUM_ENTITY_SUB_TYPE_@ DB 'sub_type < N'
	DB	'UM_ENTITY_SUB_TYPE_TASKS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KFKGAINH@?$CBget_local_entity_int_value?5?$CIen@
CONST	SEGMENT
??_C@_0DK@KFKGAINH@?$CBget_local_entity_int_value?5?$CIen@ DB '!get_local'
	DB	'_entity_int_value (en, INT_TYPE_TASK_COMPLETED)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\task\task.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA DD 05fH ; `assess_task_completeness'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?completed_task_expire_time@@3MA DD 044960000r	; 1200	; completed_task_expire_time
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z
_TEXT	SEGMENT
tv189 = -80						; size = 8
tv153 = -80						; size = 4
tv92 = -80						; size = 4
tv146 = -76						; size = 4
tv84 = -76						; size = 4
tv77 = -76						; size = 4
_side$ = -8						; size = 4
_sector_en$ = -4					; size = 4
_task_en$ = 8						; size = 4
_x$ = 12						; size = 4
_z$ = 16						; size = 4
_air_threats$ = 20					; size = 4
_enemy_sectors$ = 24					; size = 4
?assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z PROC ; assess_task_sector_difficulty, COMDAT

; 913  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 914  : 	entity
; 915  : 		*sector_en;
; 916  : 
; 917  : 	entity_sides
; 918  : 		side;
; 919  : 
; 920  : 	sector_en = get_local_raw_sector_entity(x, z);

  00009	8b 45 10	 mov	 eax, DWORD PTR _z$[ebp]
  0000c	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00013	03 45 0c	 add	 eax, DWORD PTR _x$[ebp]
  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0001c	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00020	74 1a		 je	 SHORT $LN6@assess_tas
  00022	8b 55 10	 mov	 edx, DWORD PTR _z$[ebp]
  00025	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0002c	03 55 0c	 add	 edx, DWORD PTR _x$[ebp]
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00034	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00037	89 4d b4	 mov	 DWORD PTR tv77[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN7@assess_tas
$LN6@assess_tas:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z@4JA
  00042	83 c2 07	 add	 edx, 7
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN7@assess_tas:
  0005d	8b 4d b4	 mov	 ecx, DWORD PTR tv77[ebp]
  00060	89 4d fc	 mov	 DWORD PTR _sector_en$[ebp], ecx

; 921  : 
; 922  : 	side = (entity_sides) get_local_entity_int_value (task_en, INT_TYPE_SIDE);

  00063	83 7d 08 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00067	74 0a		 je	 SHORT $LN8@assess_tas
  00069	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	89 4d b4	 mov	 DWORD PTR tv84[ebp], ecx
  00071	eb 21		 jmp	 SHORT $LN9@assess_tas
$LN8@assess_tas:
  00073	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z@4JA
  00079	83 c2 09	 add	 edx, 9
  0007c	52		 push	 edx
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN9@assess_tas:
  00094	b9 01 00 00 00	 mov	 ecx, 1
  00099	85 c9		 test	 ecx, ecx
  0009b	74 09		 je	 SHORT $LN10@assess_tas
  0009d	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv92[ebp], 187 ; 000000bbH
  000a4	eb 21		 jmp	 SHORT $LN11@assess_tas
$LN10@assess_tas:
  000a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z@4JA
  000ac	83 c2 09	 add	 edx, 9
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN11@assess_tas:
  000c7	68 bb 00 00 00	 push	 187			; 000000bbH
  000cc	8b 4d 08	 mov	 ecx, DWORD PTR _task_en$[ebp]
  000cf	51		 push	 ecx
  000d0	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv84[ebp], 1116
  000d7	8b 45 b0	 mov	 eax, DWORD PTR tv92[ebp]
  000da	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000e1	ff d1		 call	 ecx
  000e3	89 45 f8	 mov	 DWORD PTR _side$[ebp], eax

; 923  : 
; 924  : 	ASSERT (sector_en);

  000e6	83 7d fc 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  000ea	75 18		 jne	 SHORT $LN2@assess_tas
  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z@4JA
  000f1	83 c0 0b	 add	 eax, 11			; 0000000bH
  000f4	50		 push	 eax
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_09NAAGAKP@sector_en@
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@assess_tas:

; 925  : 
; 926  : 	if (
; 927  : 			(get_local_sector_entity_enemy_surface_to_air_defence_level (sector_en, side) > 0.0)

  00104	8b 45 f8	 mov	 eax, DWORD PTR _side$[ebp]
  00107	50		 push	 eax
  00108	8b 4d fc	 mov	 ecx, DWORD PTR _sector_en$[ebp]
  0010b	51		 push	 ecx
  0010c	e8 00 00 00 00	 call	 ?get_local_sector_entity_enemy_surface_to_air_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_sector_entity_enemy_surface_to_air_defence_level
  00111	dd 5d b0	 fstp	 QWORD PTR tv189[ebp]
  00114	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv189[ebp]
  00119	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00121	76 0d		 jbe	 SHORT $LN3@assess_tas

; 928  : 		)
; 929  : 	{
; 930  : 		(*air_threats) ++;

  00123	8b 45 14	 mov	 eax, DWORD PTR _air_threats$[ebp]
  00126	8b 08		 mov	 ecx, DWORD PTR [eax]
  00128	83 c1 01	 add	 ecx, 1
  0012b	8b 55 14	 mov	 edx, DWORD PTR _air_threats$[ebp]
  0012e	89 0a		 mov	 DWORD PTR [edx], ecx
$LN3@assess_tas:

; 931  : 	}
; 932  : 
; 933  : 	if (get_local_entity_int_value (sector_en, INT_TYPE_SECTOR_SIDE) != side)

  00130	83 7d fc 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  00134	74 0a		 je	 SHORT $LN12@assess_tas
  00136	8b 45 fc	 mov	 eax, DWORD PTR _sector_en$[ebp]
  00139	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013b	89 4d b4	 mov	 DWORD PTR tv146[ebp], ecx
  0013e	eb 1d		 jmp	 SHORT $LN13@assess_tas
$LN12@assess_tas:
  00140	68 a5 03 00 00	 push	 933			; 000003a5H
  00145	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00150	52		 push	 edx
  00151	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00156	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN13@assess_tas:
  0015d	b8 01 00 00 00	 mov	 eax, 1
  00162	85 c0		 test	 eax, eax
  00164	74 09		 je	 SHORT $LN14@assess_tas
  00166	c7 45 b0 b7 00
	00 00		 mov	 DWORD PTR tv153[ebp], 183 ; 000000b7H
  0016d	eb 1d		 jmp	 SHORT $LN15@assess_tas
$LN14@assess_tas:
  0016f	68 a5 03 00 00	 push	 933			; 000003a5H
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00179	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0017f	51		 push	 ecx
  00180	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00185	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN15@assess_tas:
  0018c	68 b7 00 00 00	 push	 183			; 000000b7H
  00191	8b 55 fc	 mov	 edx, DWORD PTR _sector_en$[ebp]
  00194	52		 push	 edx
  00195	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv146[ebp], 1116
  0019c	8b 4d b0	 mov	 ecx, DWORD PTR tv153[ebp]
  0019f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001a6	ff d2		 call	 edx
  001a8	3b 45 f8	 cmp	 eax, DWORD PTR _side$[ebp]
  001ab	74 0d		 je	 SHORT $LN4@assess_tas

; 934  : 	{
; 935  : 		(*enemy_sectors) ++;

  001ad	8b 45 18	 mov	 eax, DWORD PTR _enemy_sectors$[ebp]
  001b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b2	83 c1 01	 add	 ecx, 1
  001b5	8b 55 18	 mov	 edx, DWORD PTR _enemy_sectors$[ebp]
  001b8	89 0a		 mov	 DWORD PTR [edx], ecx
$LN4@assess_tas:

; 936  : 	}
; 937  : }

  001ba	5f		 pop	 edi
  001bb	5e		 pop	 esi
  001bc	5b		 pop	 ebx
  001bd	8b e5		 mov	 esp, ebp
  001bf	5d		 pop	 ebp
  001c0	c2 14 00	 ret	 20			; 00000014H
?assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z ENDP ; assess_task_sector_difficulty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_task_friendly_fire_incidents@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -80						; size = 4
tv74 = -76						; size = 4
_item$ = -8						; size = 4
_task_raw$ = -4						; size = 4
_task_en$ = 8						; size = 4
?get_task_friendly_fire_incidents@@YGHPAUENTITY@@@Z PROC ; get_task_friendly_fire_incidents, COMDAT

; 1616 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1617 : 
; 1618 : 	task
; 1619 : 		*task_raw;
; 1620 : 
; 1621 : 	task_kill_loss_data
; 1622 : 		*item;
; 1623 : 
; 1624 : 	task_raw = (task *) get_local_entity_data (task_en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _task_raw$[ebp], ecx

; 1625 : 
; 1626 : 	// check kill list
; 1627 : 
; 1628 : 	item = task_raw->task_kills;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _task_raw$[ebp]
  00015	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  0001b	89 4d f8	 mov	 DWORD PTR _item$[ebp], ecx

; 1629 : 
; 1630 : 	if (item)

  0001e	83 7d f8 00	 cmp	 DWORD PTR _item$[ebp], 0
  00022	0f 84 9f 00 00
	00		 je	 $LN4@get_task_f
$LN2@get_task_f:

; 1631 : 	{
; 1632 : 
; 1633 : 		while (item)

  00028	83 7d f8 00	 cmp	 DWORD PTR _item$[ebp], 0
  0002c	0f 84 95 00 00
	00		 je	 $LN4@get_task_f

; 1634 : 		{
; 1635 : 
; 1636 : 			if (item->victim_side == get_local_entity_int_value (task_en, INT_TYPE_SIDE))

  00032	83 7d 08 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00036	74 0a		 je	 SHORT $LN7@get_task_f
  00038	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d b4	 mov	 DWORD PTR tv74[ebp], ecx
  00040	eb 1d		 jmp	 SHORT $LN8@get_task_f
$LN7@get_task_f:
  00042	68 64 06 00 00	 push	 1636			; 00000664H
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00052	52		 push	 edx
  00053	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00058	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN8@get_task_f:
  0005f	b8 01 00 00 00	 mov	 eax, 1
  00064	85 c0		 test	 eax, eax
  00066	74 09		 je	 SHORT $LN9@get_task_f
  00068	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv81[ebp], 187 ; 000000bbH
  0006f	eb 1d		 jmp	 SHORT $LN10@get_task_f
$LN9@get_task_f:
  00071	68 64 06 00 00	 push	 1636			; 00000664H
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00081	51		 push	 ecx
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00087	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN10@get_task_f:
  0008e	68 bb 00 00 00	 push	 187			; 000000bbH
  00093	8b 55 08	 mov	 edx, DWORD PTR _task_en$[ebp]
  00096	52		 push	 edx
  00097	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  0009e	8b 4d b0	 mov	 ecx, DWORD PTR tv81[ebp]
  000a1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a8	ff d2		 call	 edx
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _item$[ebp]
  000ad	39 41 08	 cmp	 DWORD PTR [ecx+8], eax
  000b0	75 07		 jne	 SHORT $LN5@get_task_f

; 1637 : 			{
; 1638 : 
; 1639 : 				return TRUE;

  000b2	b8 01 00 00 00	 mov	 eax, 1
  000b7	eb 10		 jmp	 SHORT $LN1@get_task_f
$LN5@get_task_f:

; 1640 : 			}
; 1641 : 
; 1642 : 			item = item->next;

  000b9	8b 45 f8	 mov	 eax, DWORD PTR _item$[ebp]
  000bc	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000bf	89 4d f8	 mov	 DWORD PTR _item$[ebp], ecx

; 1643 : 		}

  000c2	e9 61 ff ff ff	 jmp	 $LN2@get_task_f
$LN4@get_task_f:

; 1644 : 	}
; 1645 : 
; 1646 : 	return FALSE;

  000c7	33 c0		 xor	 eax, eax
$LN1@get_task_f:

; 1647 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?get_task_friendly_fire_incidents@@YGHPAUENTITY@@@Z ENDP ; get_task_friendly_fire_incidents
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z
_TEXT	SEGMENT
tv331 = -96						; size = 8
tv256 = -96						; size = 4
tv219 = -96						; size = 4
tv188 = -96						; size = 4
tv168 = -96						; size = 4
tv140 = -96						; size = 4
tv88 = -96						; size = 4
tv248 = -92						; size = 4
tv237 = -92						; size = 4
tv212 = -92						; size = 4
tv180 = -92						; size = 4
tv160 = -92						; size = 4
tv132 = -92						; size = 4
tv80 = -92						; size = 4
_pos$ = -24						; size = 4
_info$ = -20						; size = 4
_side$ = -16						; size = 4
_task_type$ = -12					; size = 4
_sector$ = -8						; size = 4
_objective$ = -4					; size = 4
_en$ = 8						; size = 4
_s$ = 12						; size = 4
?get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z PROC ; get_task_objective_mfd_display_string, COMDAT

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1533 : 	entity
; 1534 : 		*objective,
; 1535 : 		*sector;
; 1536 : 
; 1537 : 	entity_sub_types
; 1538 : 		task_type;
; 1539 : 
; 1540 : 	entity_sides
; 1541 : 		side;
; 1542 : 
; 1543 : 	task_objective_info_types
; 1544 : 		info;
; 1545 : 
; 1546 : 	vec3d
; 1547 : 		*pos;
; 1548 : 
; 1549 : 	ASSERT (s);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _s$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_task_o
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01LKDEMHDF@s@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_task_o:

; 1550 : 
; 1551 : 	ASSERT (en);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_task_o
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  00032	83 c0 13	 add	 eax, 19			; 00000013H
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_task_o:

; 1552 : 
; 1553 : 	objective = get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT);

  00045	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00049	74 0a		 je	 SHORT $LN13@get_task_o
  0004b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00050	89 4d a4	 mov	 DWORD PTR tv80[ebp], ecx
  00053	eb 21		 jmp	 SHORT $LN14@get_task_o
$LN13@get_task_o:
  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  0005b	83 c2 15	 add	 edx, 21			; 00000015H
  0005e	52		 push	 edx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN14@get_task_o:
  00076	b9 01 00 00 00	 mov	 ecx, 1
  0007b	85 c9		 test	 ecx, ecx
  0007d	74 09		 je	 SHORT $LN15@get_task_o
  0007f	c7 45 a0 27 00
	00 00		 mov	 DWORD PTR tv88[ebp], 39	; 00000027H
  00086	eb 21		 jmp	 SHORT $LN16@get_task_o
$LN15@get_task_o:
  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  0008e	83 c2 15	 add	 edx, 21			; 00000015H
  00091	52		 push	 edx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a2	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN16@get_task_o:
  000a9	6a 27		 push	 39			; 00000027H
  000ab	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ae	51		 push	 ecx
  000af	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 180
  000b6	8b 45 a0	 mov	 eax, DWORD PTR tv88[ebp]
  000b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c0	ff d1		 call	 ecx
  000c2	89 45 fc	 mov	 DWORD PTR _objective$[ebp], eax

; 1554 : 
; 1555 : 	task_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  000c5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c9	74 0a		 je	 SHORT $LN17@get_task_o
  000cb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d0	89 4d a4	 mov	 DWORD PTR tv132[ebp], ecx
  000d3	eb 21		 jmp	 SHORT $LN18@get_task_o
$LN17@get_task_o:
  000d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  000db	83 c2 17	 add	 edx, 23			; 00000017H
  000de	52		 push	 edx
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ef	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN18@get_task_o:
  000f6	b9 01 00 00 00	 mov	 ecx, 1
  000fb	85 c9		 test	 ecx, ecx
  000fd	74 09		 je	 SHORT $LN19@get_task_o
  000ff	c7 45 a0 34 00
	00 00		 mov	 DWORD PTR tv140[ebp], 52 ; 00000034H
  00106	eb 21		 jmp	 SHORT $LN20@get_task_o
$LN19@get_task_o:
  00108	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  0010e	83 c2 17	 add	 edx, 23			; 00000017H
  00111	52		 push	 edx
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00122	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN20@get_task_o:
  00129	6a 34		 push	 52			; 00000034H
  0012b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0012e	51		 push	 ecx
  0012f	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv132[ebp], 1116
  00136	8b 45 a0	 mov	 eax, DWORD PTR tv140[ebp]
  00139	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00140	ff d1		 call	 ecx
  00142	89 45 f4	 mov	 DWORD PTR _task_type$[ebp], eax

; 1556 : 
; 1557 : 	info = (task_objective_info_types) task_database [task_type].task_objective_info;

  00145	6b 45 f4 50	 imul	 eax, DWORD PTR _task_type$[ebp], 80
  00149	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  0014f	83 e1 03	 and	 ecx, 3
  00152	89 4d ec	 mov	 DWORD PTR _info$[ebp], ecx

; 1558 : 
; 1559 : 	sprintf (s, "Unknown");

  00155	68 00 00 00 00	 push	 OFFSET ??_C@_07NBCGADJA@Unknown@
  0015a	8b 45 0c	 mov	 eax, DWORD PTR _s$[ebp]
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 _sprintf
  00163	83 c4 08	 add	 esp, 8

; 1560 : 
; 1561 : 	//
; 1562 : 	// If No Objective, Or Task specified NONE, Return NULL...
; 1563 : 	//
; 1564 : 
; 1565 : 	if (!objective)

  00166	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  0016a	75 05		 jne	 SHORT $LN4@get_task_o

; 1566 : 	{
; 1567 : 		return;

  0016c	e9 d4 02 00 00	 jmp	 $LN1@get_task_o
$LN4@get_task_o:

; 1568 : 	}
; 1569 : 
; 1570 : 	if (info == TASK_OBJECTIVE_INFO_NONE)

  00171	83 7d ec 00	 cmp	 DWORD PTR _info$[ebp], 0
  00175	75 05		 jne	 SHORT $LN5@get_task_o

; 1571 : 	{
; 1572 : 		return;

  00177	e9 c9 02 00 00	 jmp	 $LN1@get_task_o
$LN5@get_task_o:

; 1573 : 	}
; 1574 : 
; 1575 : 	side = (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE);

  0017c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00180	74 0a		 je	 SHORT $LN21@get_task_o
  00182	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00185	8b 08		 mov	 ecx, DWORD PTR [eax]
  00187	89 4d a4	 mov	 DWORD PTR tv160[ebp], ecx
  0018a	eb 21		 jmp	 SHORT $LN22@get_task_o
$LN21@get_task_o:
  0018c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  00192	83 c2 2b	 add	 edx, 43			; 0000002bH
  00195	52		 push	 edx
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a6	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN22@get_task_o:
  001ad	b9 01 00 00 00	 mov	 ecx, 1
  001b2	85 c9		 test	 ecx, ecx
  001b4	74 09		 je	 SHORT $LN23@get_task_o
  001b6	c7 45 a0 bb 00
	00 00		 mov	 DWORD PTR tv168[ebp], 187 ; 000000bbH
  001bd	eb 21		 jmp	 SHORT $LN24@get_task_o
$LN23@get_task_o:
  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  001c5	83 c2 2b	 add	 edx, 43			; 0000002bH
  001c8	52		 push	 edx
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d9	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN24@get_task_o:
  001e0	68 bb 00 00 00	 push	 187			; 000000bbH
  001e5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001e8	51		 push	 ecx
  001e9	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv160[ebp], 1116
  001f0	8b 45 a0	 mov	 eax, DWORD PTR tv168[ebp]
  001f3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001fa	ff d1		 call	 ecx
  001fc	89 45 f0	 mov	 DWORD PTR _side$[ebp], eax

; 1576 : 
; 1577 : 	pos = get_local_entity_vec3d_ptr (objective, VEC3D_TYPE_POSITION);

  001ff	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00203	74 0a		 je	 SHORT $LN25@get_task_o
  00205	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  00208	8b 08		 mov	 ecx, DWORD PTR [eax]
  0020a	89 4d a4	 mov	 DWORD PTR tv180[ebp], ecx
  0020d	eb 21		 jmp	 SHORT $LN26@get_task_o
$LN25@get_task_o:
  0020f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  00215	83 c2 2d	 add	 edx, 45			; 0000002dH
  00218	52		 push	 edx
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00229	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN26@get_task_o:
  00230	b9 01 00 00 00	 mov	 ecx, 1
  00235	85 c9		 test	 ecx, ecx
  00237	74 09		 je	 SHORT $LN27@get_task_o
  00239	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv188[ebp], 8
  00240	eb 21		 jmp	 SHORT $LN28@get_task_o
$LN27@get_task_o:
  00242	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  00248	83 c2 2d	 add	 edx, 45			; 0000002dH
  0024b	52		 push	 edx
  0024c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00251	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025c	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN28@get_task_o:
  00263	6a 08		 push	 8
  00265	8b 4d fc	 mov	 ecx, DWORD PTR _objective$[ebp]
  00268	51		 push	 ecx
  00269	6b 55 a4 60	 imul	 edx, DWORD PTR tv180[ebp], 96
  0026d	8b 45 a0	 mov	 eax, DWORD PTR tv188[ebp]
  00270	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00277	ff d1		 call	 ecx
  00279	89 45 e8	 mov	 DWORD PTR _pos$[ebp], eax

; 1578 : 
; 1579 : 	ASSERT (pos);

  0027c	83 7d e8 00	 cmp	 DWORD PTR _pos$[ebp], 0
  00280	75 18		 jne	 SHORT $LN6@get_task_o
  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  00287	83 c0 2f	 add	 eax, 47			; 0000002fH
  0028a	50		 push	 eax
  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00295	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_task_o:

; 1580 : 
; 1581 : 	sector = get_local_sector_entity (pos);

  0029a	8b 45 e8	 mov	 eax, DWORD PTR _pos$[ebp]
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  002a3	89 45 f8	 mov	 DWORD PTR _sector$[ebp], eax

; 1582 : 
; 1583 : 	ASSERT (sector);

  002a6	83 7d f8 00	 cmp	 DWORD PTR _sector$[ebp], 0
  002aa	75 18		 jne	 SHORT $LN7@get_task_o
  002ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  002b1	83 c0 33	 add	 eax, 51			; 00000033H
  002b4	50		 push	 eax
  002b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_06IDGHNJOB@sector@
  002bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_task_o:

; 1584 : 
; 1585 : 	//
; 1586 : 	// If Objective (obj) NOT Hidden By Fog, OR obj ALWAYS KNOWN, OR (obj FOG-OF-WAR KNOWN AND sector fog level > threshold)
; 1587 : 	// Return Objective Name.....
; 1588 : 	//
; 1589 : 	
; 1590 : 	if ((info == TASK_OBJECTIVE_INFO_ALWAYS_KNOWN)
; 1591 : 										||
; 1592 : 		(!get_local_entity_int_value (objective, INT_TYPE_HIDDEN_BY_FOG_OF_WAR))
; 1593 : 										||

  002c4	83 7d ec 03	 cmp	 DWORD PTR _info$[ebp], 3
  002c8	0f 84 a6 00 00
	00		 je	 $LN9@get_task_o
  002ce	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  002d2	74 0a		 je	 SHORT $LN29@get_task_o
  002d4	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  002d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d9	89 4d a4	 mov	 DWORD PTR tv212[ebp], ecx
  002dc	eb 1d		 jmp	 SHORT $LN30@get_task_o
$LN29@get_task_o:
  002de	68 38 06 00 00	 push	 1592			; 00000638H
  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ee	52		 push	 edx
  002ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN30@get_task_o:
  002fb	b8 01 00 00 00	 mov	 eax, 1
  00300	85 c0		 test	 eax, eax
  00302	74 09		 je	 SHORT $LN31@get_task_o
  00304	c7 45 a0 56 00
	00 00		 mov	 DWORD PTR tv219[ebp], 86 ; 00000056H
  0030b	eb 1d		 jmp	 SHORT $LN32@get_task_o
$LN31@get_task_o:
  0030d	68 38 06 00 00	 push	 1592			; 00000638H
  00312	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00317	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0031d	51		 push	 ecx
  0031e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00323	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv219[ebp], 0
$LN32@get_task_o:
  0032a	6a 56		 push	 86			; 00000056H
  0032c	8b 55 fc	 mov	 edx, DWORD PTR _objective$[ebp]
  0032f	52		 push	 edx
  00330	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv212[ebp], 1116
  00337	8b 4d a0	 mov	 ecx, DWORD PTR tv219[ebp]
  0033a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00341	ff d2		 call	 edx
  00343	85 c0		 test	 eax, eax
  00345	74 2d		 je	 SHORT $LN9@get_task_o
  00347	83 7d ec 02	 cmp	 DWORD PTR _info$[ebp], 2
  0034b	0f 85 f4 00 00
	00		 jne	 $LN11@get_task_o
  00351	8b 45 f0	 mov	 eax, DWORD PTR _side$[ebp]
  00354	50		 push	 eax
  00355	8b 4d f8	 mov	 ecx, DWORD PTR _sector$[ebp]
  00358	51		 push	 ecx
  00359	e8 00 00 00 00	 call	 ?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_sector_fog_of_war_value
  0035e	dd 5d a0	 fstp	 QWORD PTR tv331[ebp]
  00361	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv331[ebp]
  00366	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  0036e	0f 86 d1 00 00
	00		 jbe	 $LN11@get_task_o
$LN9@get_task_o:

; 1594 : 		((info == TASK_OBJECTIVE_INFO_FOG_OF_WAR_KNOWN) && (get_sector_fog_of_war_value (sector, side) > 0.1)))
; 1595 : 	{
; 1596 : 		if (get_local_entity_type (objective) == ENTITY_TYPE_KEYSITE)

  00374	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00378	74 0a		 je	 SHORT $LN33@get_task_o
  0037a	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  0037d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037f	89 4d a4	 mov	 DWORD PTR tv237[ebp], ecx
  00382	eb 1d		 jmp	 SHORT $LN34@get_task_o
$LN33@get_task_o:
  00384	68 3c 06 00 00	 push	 1596			; 0000063cH
  00389	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00394	52		 push	 edx
  00395	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv237[ebp], 0
$LN34@get_task_o:
  003a1	83 7d a4 0f	 cmp	 DWORD PTR tv237[ebp], 15 ; 0000000fH
  003a5	75 12		 jne	 SHORT $LN10@get_task_o

; 1597 : 		{
; 1598 : 			get_keysite_entity_mfd_display_name (objective, s);

  003a7	8b 45 0c	 mov	 eax, DWORD PTR _s$[ebp]
  003aa	50		 push	 eax
  003ab	8b 4d fc	 mov	 ecx, DWORD PTR _objective$[ebp]
  003ae	51		 push	 ecx
  003af	e8 00 00 00 00	 call	 ?get_keysite_entity_mfd_display_name@@YGXPAUENTITY@@PAD@Z ; get_keysite_entity_mfd_display_name

; 1599 : 		}
; 1600 : 		else

  003b4	e9 8c 00 00 00	 jmp	 $LN11@get_task_o
$LN10@get_task_o:

; 1601 : 		{
; 1602 : 			sprintf (s, "%s", get_local_entity_string (objective, STRING_TYPE_FULL_NAME));

  003b9	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  003bd	74 0a		 je	 SHORT $LN35@get_task_o
  003bf	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  003c2	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c4	89 4d a4	 mov	 DWORD PTR tv248[ebp], ecx
  003c7	eb 21		 jmp	 SHORT $LN36@get_task_o
$LN35@get_task_o:
  003c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  003cf	83 c2 46	 add	 edx, 70			; 00000046H
  003d2	52		 push	 edx
  003d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003dd	50		 push	 eax
  003de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv248[ebp], 0
$LN36@get_task_o:
  003ea	b9 01 00 00 00	 mov	 ecx, 1
  003ef	85 c9		 test	 ecx, ecx
  003f1	74 09		 je	 SHORT $LN37@get_task_o
  003f3	c7 45 a0 03 00
	00 00		 mov	 DWORD PTR tv256[ebp], 3
  003fa	eb 21		 jmp	 SHORT $LN38@get_task_o
$LN37@get_task_o:
  003fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z@4JA
  00402	83 c2 46	 add	 edx, 70			; 00000046H
  00405	52		 push	 edx
  00406	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00410	50		 push	 eax
  00411	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00416	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv256[ebp], 0
$LN38@get_task_o:
  0041d	6a 03		 push	 3
  0041f	8b 4d fc	 mov	 ecx, DWORD PTR _objective$[ebp]
  00422	51		 push	 ecx
  00423	6b 55 a4 34	 imul	 edx, DWORD PTR tv248[ebp], 52
  00427	8b 45 a0	 mov	 eax, DWORD PTR tv256[ebp]
  0042a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00431	ff d1		 call	 ecx
  00433	50		 push	 eax
  00434	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00439	8b 55 0c	 mov	 edx, DWORD PTR _s$[ebp]
  0043c	52		 push	 edx
  0043d	e8 00 00 00 00	 call	 _sprintf
  00442	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@get_task_o:
$LN1@get_task_o:

; 1603 : 		}
; 1604 : 	}
; 1605 : 
; 1606 : 	//
; 1607 : 	// Return 'Unknown'...
; 1608 : 	//
; 1609 : }

  00445	5f		 pop	 edi
  00446	5e		 pop	 esi
  00447	5b		 pop	 ebx
  00448	8b e5		 mov	 esp, ebp
  0044a	5d		 pop	 ebp
  0044b	c2 08 00	 ret	 8
?get_task_objective_mfd_display_string@@YGXPAUENTITY@@PAD@Z ENDP ; get_task_objective_mfd_display_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_task_objective_string@@YGPBDPAUENTITY@@@Z
_TEXT	SEGMENT
tv339 = -96						; size = 8
tv266 = -96						; size = 4
tv246 = -96						; size = 4
tv212 = -96						; size = 4
tv181 = -96						; size = 4
tv161 = -96						; size = 4
tv135 = -96						; size = 4
tv83 = -96						; size = 4
tv258 = -92						; size = 4
tv238 = -92						; size = 4
tv230 = -92						; size = 4
tv205 = -92						; size = 4
tv173 = -92						; size = 4
tv153 = -92						; size = 4
tv95 = -92						; size = 4
tv75 = -92						; size = 4
_pos$ = -24						; size = 4
_info$ = -20						; size = 4
_side$ = -16						; size = 4
_task_type$ = -12					; size = 4
_sector$ = -8						; size = 4
_objective$ = -4					; size = 4
_en$ = 8						; size = 4
?get_task_objective_string@@YGPBDPAUENTITY@@@Z PROC	; get_task_objective_string, COMDAT

; 1450 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1451 : 	entity
; 1452 : 		*objective,
; 1453 : 		*sector;
; 1454 : 
; 1455 : 	entity_sub_types
; 1456 : 		task_type;
; 1457 : 
; 1458 : 	entity_sides
; 1459 : 		side;
; 1460 : 
; 1461 : 	task_objective_info_types
; 1462 : 		info;
; 1463 : 
; 1464 : 	vec3d
; 1465 : 		*pos;
; 1466 : 
; 1467 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_task_o
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_task_o:

; 1468 : 
; 1469 : 	objective = get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN12@get_task_o
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d a4	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN13@get_task_o
$LN12@get_task_o:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  0003d	83 c2 13	 add	 edx, 19			; 00000013H
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN13@get_task_o:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN14@get_task_o
  00061	c7 45 a0 27 00
	00 00		 mov	 DWORD PTR tv83[ebp], 39	; 00000027H
  00068	eb 21		 jmp	 SHORT $LN15@get_task_o
$LN14@get_task_o:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  00070	83 c2 13	 add	 edx, 19			; 00000013H
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN15@get_task_o:
  0008b	6a 27		 push	 39			; 00000027H
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00090	51		 push	 ecx
  00091	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  00098	8b 45 a0	 mov	 eax, DWORD PTR tv83[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	89 45 fc	 mov	 DWORD PTR _objective$[ebp], eax

; 1470 : 
; 1471 : 	task_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  000a7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ab	74 0a		 je	 SHORT $LN16@get_task_o
  000ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	89 4d a4	 mov	 DWORD PTR tv95[ebp], ecx
  000b5	eb 21		 jmp	 SHORT $LN17@get_task_o
$LN16@get_task_o:
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  000bd	83 c2 15	 add	 edx, 21			; 00000015H
  000c0	52		 push	 edx
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN17@get_task_o:
  000d8	b9 01 00 00 00	 mov	 ecx, 1
  000dd	85 c9		 test	 ecx, ecx
  000df	74 09		 je	 SHORT $LN18@get_task_o
  000e1	c7 45 a0 34 00
	00 00		 mov	 DWORD PTR tv135[ebp], 52 ; 00000034H
  000e8	eb 21		 jmp	 SHORT $LN19@get_task_o
$LN18@get_task_o:
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  000f0	83 c2 15	 add	 edx, 21			; 00000015H
  000f3	52		 push	 edx
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN19@get_task_o:
  0010b	6a 34		 push	 52			; 00000034H
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00110	51		 push	 ecx
  00111	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv95[ebp], 1116
  00118	8b 45 a0	 mov	 eax, DWORD PTR tv135[ebp]
  0011b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00122	ff d1		 call	 ecx
  00124	89 45 f4	 mov	 DWORD PTR _task_type$[ebp], eax

; 1472 : 
; 1473 : 	info = (task_objective_info_types) task_database [task_type].task_objective_info;

  00127	6b 45 f4 50	 imul	 eax, DWORD PTR _task_type$[ebp], 80
  0012b	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  00131	83 e1 03	 and	 ecx, 3
  00134	89 4d ec	 mov	 DWORD PTR _info$[ebp], ecx

; 1474 : 
; 1475 : 	//
; 1476 : 	// If No Objective, Or Task specified NONE, Return NULL...
; 1477 : 	//
; 1478 : 
; 1479 : 	if (!objective)

  00137	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  0013b	75 07		 jne	 SHORT $LN3@get_task_o

; 1480 : 	{
; 1481 : 		return NULL;

  0013d	33 c0		 xor	 eax, eax
  0013f	e9 3e 03 00 00	 jmp	 $LN1@get_task_o
$LN3@get_task_o:

; 1482 : 	}
; 1483 : 
; 1484 : 	if (info == TASK_OBJECTIVE_INFO_NONE)

  00144	83 7d ec 00	 cmp	 DWORD PTR _info$[ebp], 0
  00148	75 07		 jne	 SHORT $LN4@get_task_o

; 1485 : 	{
; 1486 : 		return NULL;

  0014a	33 c0		 xor	 eax, eax
  0014c	e9 31 03 00 00	 jmp	 $LN1@get_task_o
$LN4@get_task_o:

; 1487 : 	}
; 1488 : 
; 1489 : 	side = (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE);

  00151	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00155	74 0a		 je	 SHORT $LN20@get_task_o
  00157	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015c	89 4d a4	 mov	 DWORD PTR tv153[ebp], ecx
  0015f	eb 21		 jmp	 SHORT $LN21@get_task_o
$LN20@get_task_o:
  00161	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  00167	83 c2 27	 add	 edx, 39			; 00000027H
  0016a	52		 push	 edx
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00175	50		 push	 eax
  00176	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN21@get_task_o:
  00182	b9 01 00 00 00	 mov	 ecx, 1
  00187	85 c9		 test	 ecx, ecx
  00189	74 09		 je	 SHORT $LN22@get_task_o
  0018b	c7 45 a0 bb 00
	00 00		 mov	 DWORD PTR tv161[ebp], 187 ; 000000bbH
  00192	eb 21		 jmp	 SHORT $LN23@get_task_o
$LN22@get_task_o:
  00194	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  0019a	83 c2 27	 add	 edx, 39			; 00000027H
  0019d	52		 push	 edx
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ae	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN23@get_task_o:
  001b5	68 bb 00 00 00	 push	 187			; 000000bbH
  001ba	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001bd	51		 push	 ecx
  001be	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv153[ebp], 1116
  001c5	8b 45 a0	 mov	 eax, DWORD PTR tv161[ebp]
  001c8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001cf	ff d1		 call	 ecx
  001d1	89 45 f0	 mov	 DWORD PTR _side$[ebp], eax

; 1490 : 
; 1491 : 	pos = get_local_entity_vec3d_ptr (objective, VEC3D_TYPE_POSITION);

  001d4	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  001d8	74 0a		 je	 SHORT $LN24@get_task_o
  001da	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  001dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001df	89 4d a4	 mov	 DWORD PTR tv173[ebp], ecx
  001e2	eb 21		 jmp	 SHORT $LN25@get_task_o
$LN24@get_task_o:
  001e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  001ea	83 c2 29	 add	 edx, 41			; 00000029H
  001ed	52		 push	 edx
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fe	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN25@get_task_o:
  00205	b9 01 00 00 00	 mov	 ecx, 1
  0020a	85 c9		 test	 ecx, ecx
  0020c	74 09		 je	 SHORT $LN26@get_task_o
  0020e	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv181[ebp], 8
  00215	eb 21		 jmp	 SHORT $LN27@get_task_o
$LN26@get_task_o:
  00217	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  0021d	83 c2 29	 add	 edx, 41			; 00000029H
  00220	52		 push	 edx
  00221	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0022b	50		 push	 eax
  0022c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00231	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN27@get_task_o:
  00238	6a 08		 push	 8
  0023a	8b 4d fc	 mov	 ecx, DWORD PTR _objective$[ebp]
  0023d	51		 push	 ecx
  0023e	6b 55 a4 60	 imul	 edx, DWORD PTR tv173[ebp], 96
  00242	8b 45 a0	 mov	 eax, DWORD PTR tv181[ebp]
  00245	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0024c	ff d1		 call	 ecx
  0024e	89 45 e8	 mov	 DWORD PTR _pos$[ebp], eax

; 1492 : 
; 1493 : 	ASSERT (pos);

  00251	83 7d e8 00	 cmp	 DWORD PTR _pos$[ebp], 0
  00255	75 18		 jne	 SHORT $LN5@get_task_o
  00257	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  0025c	83 c0 2b	 add	 eax, 43			; 0000002bH
  0025f	50		 push	 eax
  00260	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  0026a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_task_o:

; 1494 : 
; 1495 : 	sector = get_local_sector_entity (pos);

  0026f	8b 45 e8	 mov	 eax, DWORD PTR _pos$[ebp]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  00278	89 45 f8	 mov	 DWORD PTR _sector$[ebp], eax

; 1496 : 
; 1497 : 	ASSERT (sector);

  0027b	83 7d f8 00	 cmp	 DWORD PTR _sector$[ebp], 0
  0027f	75 18		 jne	 SHORT $LN6@get_task_o
  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  00286	83 c0 2f	 add	 eax, 47			; 0000002fH
  00289	50		 push	 eax
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028f	68 00 00 00 00	 push	 OFFSET ??_C@_06IDGHNJOB@sector@
  00294	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_task_o:

; 1498 : 
; 1499 : 	//
; 1500 : 	// If Objective (obj) NOT Hidden By Fog, OR obj ALWAYS KNOWN, OR (obj FOG-OF-WAR KNOWN AND sector fog level > threshold)
; 1501 : 	// Return Objective Name.....
; 1502 : 	//
; 1503 : 	
; 1504 : 	if ((info == TASK_OBJECTIVE_INFO_ALWAYS_KNOWN)
; 1505 : 										||
; 1506 : 		(!get_local_entity_int_value (objective, INT_TYPE_HIDDEN_BY_FOG_OF_WAR))
; 1507 : 										||

  00299	83 7d ec 03	 cmp	 DWORD PTR _info$[ebp], 3
  0029d	0f 84 a6 00 00
	00		 je	 $LN8@get_task_o
  002a3	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  002a7	74 0a		 je	 SHORT $LN28@get_task_o
  002a9	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  002ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ae	89 4d a4	 mov	 DWORD PTR tv205[ebp], ecx
  002b1	eb 1d		 jmp	 SHORT $LN29@get_task_o
$LN28@get_task_o:
  002b3	68 e2 05 00 00	 push	 1506			; 000005e2H
  002b8	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002c3	52		 push	 edx
  002c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c9	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN29@get_task_o:
  002d0	b8 01 00 00 00	 mov	 eax, 1
  002d5	85 c0		 test	 eax, eax
  002d7	74 09		 je	 SHORT $LN30@get_task_o
  002d9	c7 45 a0 56 00
	00 00		 mov	 DWORD PTR tv212[ebp], 86 ; 00000056H
  002e0	eb 1d		 jmp	 SHORT $LN31@get_task_o
$LN30@get_task_o:
  002e2	68 e2 05 00 00	 push	 1506			; 000005e2H
  002e7	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002f2	51		 push	 ecx
  002f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f8	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN31@get_task_o:
  002ff	6a 56		 push	 86			; 00000056H
  00301	8b 55 fc	 mov	 edx, DWORD PTR _objective$[ebp]
  00304	52		 push	 edx
  00305	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv205[ebp], 1116
  0030c	8b 4d a0	 mov	 ecx, DWORD PTR tv212[ebp]
  0030f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00316	ff d2		 call	 edx
  00318	85 c0		 test	 eax, eax
  0031a	74 2d		 je	 SHORT $LN8@get_task_o
  0031c	83 7d ec 02	 cmp	 DWORD PTR _info$[ebp], 2
  00320	0f 85 57 01 00
	00		 jne	 $LN10@get_task_o
  00326	8b 45 f0	 mov	 eax, DWORD PTR _side$[ebp]
  00329	50		 push	 eax
  0032a	8b 4d f8	 mov	 ecx, DWORD PTR _sector$[ebp]
  0032d	51		 push	 ecx
  0032e	e8 00 00 00 00	 call	 ?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_sector_fog_of_war_value
  00333	dd 5d a0	 fstp	 QWORD PTR tv339[ebp]
  00336	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv339[ebp]
  0033b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  00343	0f 86 34 01 00
	00		 jbe	 $LN10@get_task_o
$LN8@get_task_o:

; 1508 : 		((info == TASK_OBJECTIVE_INFO_FOG_OF_WAR_KNOWN) && (get_sector_fog_of_war_value (sector, side) > 0.1)))
; 1509 : 	{
; 1510 : 		if (get_local_entity_type (objective) == ENTITY_TYPE_KEYSITE)

  00349	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  0034d	74 0a		 je	 SHORT $LN32@get_task_o
  0034f	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  00352	8b 08		 mov	 ecx, DWORD PTR [eax]
  00354	89 4d a4	 mov	 DWORD PTR tv230[ebp], ecx
  00357	eb 1d		 jmp	 SHORT $LN33@get_task_o
$LN32@get_task_o:
  00359	68 e6 05 00 00	 push	 1510			; 000005e6H
  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00363	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00369	52		 push	 edx
  0036a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv230[ebp], 0
$LN33@get_task_o:
  00376	83 7d a4 0f	 cmp	 DWORD PTR tv230[ebp], 15 ; 0000000fH
  0037a	0f 85 81 00 00
	00		 jne	 $LN9@get_task_o

; 1511 : 		{
; 1512 : 			return get_local_entity_string (objective, STRING_TYPE_KEYSITE_NAME);

  00380	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00384	74 0a		 je	 SHORT $LN34@get_task_o
  00386	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  00389	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038b	89 4d a4	 mov	 DWORD PTR tv238[ebp], ecx
  0038e	eb 21		 jmp	 SHORT $LN35@get_task_o
$LN34@get_task_o:
  00390	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  00396	83 c2 3e	 add	 edx, 62			; 0000003eH
  00399	52		 push	 edx
  0039a	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003aa	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv238[ebp], 0
$LN35@get_task_o:
  003b1	b9 01 00 00 00	 mov	 ecx, 1
  003b6	85 c9		 test	 ecx, ecx
  003b8	74 09		 je	 SHORT $LN36@get_task_o
  003ba	c7 45 a0 07 00
	00 00		 mov	 DWORD PTR tv246[ebp], 7
  003c1	eb 21		 jmp	 SHORT $LN37@get_task_o
$LN36@get_task_o:
  003c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  003c9	83 c2 3e	 add	 edx, 62			; 0000003eH
  003cc	52		 push	 edx
  003cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  003d7	50		 push	 eax
  003d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003dd	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv246[ebp], 0
$LN37@get_task_o:
  003e4	6a 07		 push	 7
  003e6	8b 4d fc	 mov	 ecx, DWORD PTR _objective$[ebp]
  003e9	51		 push	 ecx
  003ea	6b 55 a4 34	 imul	 edx, DWORD PTR tv238[ebp], 52
  003ee	8b 45 a0	 mov	 eax, DWORD PTR tv246[ebp]
  003f1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  003f8	ff d1		 call	 ecx
  003fa	e9 83 00 00 00	 jmp	 $LN1@get_task_o

; 1513 : 		}
; 1514 : 		else

  003ff	eb 7c		 jmp	 SHORT $LN10@get_task_o
$LN9@get_task_o:

; 1515 : 		{
; 1516 : 			return get_local_entity_string (objective, STRING_TYPE_FULL_NAME);

  00401	83 7d fc 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00405	74 0a		 je	 SHORT $LN38@get_task_o
  00407	8b 45 fc	 mov	 eax, DWORD PTR _objective$[ebp]
  0040a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0040c	89 4d a4	 mov	 DWORD PTR tv258[ebp], ecx
  0040f	eb 21		 jmp	 SHORT $LN39@get_task_o
$LN38@get_task_o:
  00411	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  00417	83 c2 42	 add	 edx, 66			; 00000042H
  0041a	52		 push	 edx
  0041b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00420	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00425	50		 push	 eax
  00426	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv258[ebp], 0
$LN39@get_task_o:
  00432	b9 01 00 00 00	 mov	 ecx, 1
  00437	85 c9		 test	 ecx, ecx
  00439	74 09		 je	 SHORT $LN40@get_task_o
  0043b	c7 45 a0 03 00
	00 00		 mov	 DWORD PTR tv266[ebp], 3
  00442	eb 21		 jmp	 SHORT $LN41@get_task_o
$LN40@get_task_o:
  00444	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_objective_string@@YGPBDPAUENTITY@@@Z@4JA
  0044a	83 c2 42	 add	 edx, 66			; 00000042H
  0044d	52		 push	 edx
  0044e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00453	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00458	50		 push	 eax
  00459	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045e	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv266[ebp], 0
$LN41@get_task_o:
  00465	6a 03		 push	 3
  00467	8b 4d fc	 mov	 ecx, DWORD PTR _objective$[ebp]
  0046a	51		 push	 ecx
  0046b	6b 55 a4 34	 imul	 edx, DWORD PTR tv258[ebp], 52
  0046f	8b 45 a0	 mov	 eax, DWORD PTR tv266[ebp]
  00472	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00479	ff d1		 call	 ecx
  0047b	eb 05		 jmp	 SHORT $LN1@get_task_o
$LN10@get_task_o:

; 1517 : 		}
; 1518 : 	}
; 1519 : 
; 1520 : 	//
; 1521 : 	// Return 'Unknown'...
; 1522 : 	//
; 1523 : 
; 1524 : 	return "Unknown";

  0047d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07NBCGADJA@Unknown@
$LN1@get_task_o:

; 1525 : }

  00482	5f		 pop	 edi
  00483	5e		 pop	 esi
  00484	5b		 pop	 ebx
  00485	8b e5		 mov	 esp, ebp
  00487	5d		 pop	 ebp
  00488	c2 04 00	 ret	 4
?get_task_objective_string@@YGPBDPAUENTITY@@@Z ENDP	; get_task_objective_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_completed_task_expire_time@@YGMXZ
_TEXT	SEGMENT
?get_completed_task_expire_time@@YGMXZ PROC		; get_completed_task_expire_time, COMDAT

; 1441 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1442 : 	return completed_task_expire_time;

  00009	d9 05 00 00 00
	00		 fld	 DWORD PTR ?completed_task_expire_time@@3MA

; 1443 : }

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?get_completed_task_expire_time@@YGMXZ ENDP		; get_completed_task_expire_time
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?set_completed_task_expire_time@@YGXM@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?set_completed_task_expire_time@@YGXM@Z PROC		; set_completed_task_expire_time, COMDAT

; 1432 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1433 : 	completed_task_expire_time = value;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _value$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?completed_task_expire_time@@3MA, xmm0

; 1434 : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_completed_task_expire_time@@YGXM@Z ENDP		; set_completed_task_expire_time
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_task_estimated_route_duration@@YGMPAUENTITY@@@Z
_TEXT	SEGMENT
tv183 = -84						; size = 4
tv152 = -80						; size = 4
tv131 = -80						; size = 4
tv78 = -80						; size = 4
tv144 = -76						; size = 4
tv91 = -76						; size = 4
tv70 = -76						; size = 4
_flight_time$ = -8					; size = 4
_waypoint$ = -4						; size = 4
_task$ = 8						; size = 4
?get_task_estimated_route_duration@@YGMPAUENTITY@@@Z PROC ; get_task_estimated_route_duration, COMDAT

; 1404 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1405 : 
; 1406 : 	entity
; 1407 : 		*waypoint;
; 1408 : 
; 1409 : 	float
; 1410 : 		flight_time;
; 1411 : 
; 1412 : 	waypoint = get_local_entity_first_child (task, LIST_TYPE_WAYPOINT);

  00009	83 7d 08 00	 cmp	 DWORD PTR _task$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN5@get_task_e
  0000f	8b 45 08	 mov	 eax, DWORD PTR _task$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN6@get_task_e
$LN5@get_task_e:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA
  0001f	83 c2 08	 add	 edx, 8
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN6@get_task_e:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN7@get_task_e
  00043	c7 45 b0 2c 00
	00 00		 mov	 DWORD PTR tv78[ebp], 44	; 0000002cH
  0004a	eb 21		 jmp	 SHORT $LN8@get_task_e
$LN7@get_task_e:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA
  00052	83 c2 08	 add	 edx, 8
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN8@get_task_e:
  0006d	6a 2c		 push	 44			; 0000002cH
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _task$[ebp]
  00072	51		 push	 ecx
  00073	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  0007a	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  0007d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00084	ff d1		 call	 ecx
  00086	89 45 fc	 mov	 DWORD PTR _waypoint$[ebp], eax

; 1413 : 
; 1414 : 	flight_time = 0.0;

  00089	0f 57 c0	 xorps	 xmm0, xmm0
  0008c	f3 0f 11 45 f8	 movss	 DWORD PTR _flight_time$[ebp], xmm0
$LN2@get_task_e:

; 1415 : 
; 1416 : 	while (waypoint)

  00091	83 7d fc 00	 cmp	 DWORD PTR _waypoint$[ebp], 0
  00095	0f 84 14 01 00
	00		 je	 $LN3@get_task_e

; 1417 : 	{
; 1418 : 
; 1419 : 		flight_time += get_local_entity_float_value (waypoint, FLOAT_TYPE_FLIGHT_TIME);

  0009b	83 7d fc 00	 cmp	 DWORD PTR _waypoint$[ebp], 0
  0009f	74 0a		 je	 SHORT $LN9@get_task_e
  000a1	8b 45 fc	 mov	 eax, DWORD PTR _waypoint$[ebp]
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	89 4d b4	 mov	 DWORD PTR tv91[ebp], ecx
  000a9	eb 21		 jmp	 SHORT $LN10@get_task_e
$LN9@get_task_e:
  000ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA
  000b1	83 c2 0f	 add	 edx, 15			; 0000000fH
  000b4	52		 push	 edx
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN10@get_task_e:
  000cc	b9 01 00 00 00	 mov	 ecx, 1
  000d1	85 c9		 test	 ecx, ecx
  000d3	74 09		 je	 SHORT $LN11@get_task_e
  000d5	c7 45 b0 2a 00
	00 00		 mov	 DWORD PTR tv131[ebp], 42 ; 0000002aH
  000dc	eb 21		 jmp	 SHORT $LN12@get_task_e
$LN11@get_task_e:
  000de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA
  000e4	83 c2 0f	 add	 edx, 15			; 0000000fH
  000e7	52		 push	 edx
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f8	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN12@get_task_e:
  000ff	6a 2a		 push	 42			; 0000002aH
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _waypoint$[ebp]
  00104	51		 push	 ecx
  00105	69 55 b4 bc 02
	00 00		 imul	 edx, DWORD PTR tv91[ebp], 700
  0010c	8b 45 b0	 mov	 eax, DWORD PTR tv131[ebp]
  0010f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00116	ff d1		 call	 ecx
  00118	d9 5d ac	 fstp	 DWORD PTR tv183[ebp]
  0011b	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv183[ebp]
  00120	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _flight_time$[ebp]
  00125	f3 0f 11 45 f8	 movss	 DWORD PTR _flight_time$[ebp], xmm0

; 1420 : 
; 1421 : 		waypoint = get_local_entity_child_succ (waypoint, LIST_TYPE_WAYPOINT);

  0012a	83 7d fc 00	 cmp	 DWORD PTR _waypoint$[ebp], 0
  0012e	74 0a		 je	 SHORT $LN13@get_task_e
  00130	8b 45 fc	 mov	 eax, DWORD PTR _waypoint$[ebp]
  00133	8b 08		 mov	 ecx, DWORD PTR [eax]
  00135	89 4d b4	 mov	 DWORD PTR tv144[ebp], ecx
  00138	eb 21		 jmp	 SHORT $LN14@get_task_e
$LN13@get_task_e:
  0013a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA
  00140	83 c2 11	 add	 edx, 17			; 00000011H
  00143	52		 push	 edx
  00144	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00154	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN14@get_task_e:
  0015b	b9 01 00 00 00	 mov	 ecx, 1
  00160	85 c9		 test	 ecx, ecx
  00162	74 09		 je	 SHORT $LN15@get_task_e
  00164	c7 45 b0 2c 00
	00 00		 mov	 DWORD PTR tv152[ebp], 44 ; 0000002cH
  0016b	eb 21		 jmp	 SHORT $LN16@get_task_e
$LN15@get_task_e:
  0016d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_task_estimated_route_duration@@YGMPAUENTITY@@@Z@4JA
  00173	83 c2 11	 add	 edx, 17			; 00000011H
  00176	52		 push	 edx
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00187	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN16@get_task_e:
  0018e	6a 2c		 push	 44			; 0000002cH
  00190	8b 4d fc	 mov	 ecx, DWORD PTR _waypoint$[ebp]
  00193	51		 push	 ecx
  00194	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv144[ebp], 180
  0019b	8b 45 b0	 mov	 eax, DWORD PTR tv152[ebp]
  0019e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001a5	ff d1		 call	 ecx
  001a7	89 45 fc	 mov	 DWORD PTR _waypoint$[ebp], eax

; 1422 : 	}

  001aa	e9 e2 fe ff ff	 jmp	 $LN2@get_task_e
$LN3@get_task_e:

; 1423 : 
; 1424 : 	return flight_time;

  001af	d9 45 f8	 fld	 DWORD PTR _flight_time$[ebp]

; 1425 : }

  001b2	5f		 pop	 edi
  001b3	5e		 pop	 esi
  001b4	5b		 pop	 ebx
  001b5	8b e5		 mov	 esp, ebp
  001b7	5d		 pop	 ebp
  001b8	c2 04 00	 ret	 4
?get_task_estimated_route_duration@@YGMPAUENTITY@@@Z ENDP ; get_task_estimated_route_duration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?add_loss_to_task@@YGXPAUENTITY@@00@Z
_TEXT	SEGMENT
tv306 = -80						; size = 4
tv280 = -80						; size = 4
tv259 = -80						; size = 4
tv238 = -80						; size = 4
tv217 = -80						; size = 4
tv196 = -80						; size = 4
tv175 = -80						; size = 4
tv154 = -80						; size = 4
tv133 = -80						; size = 4
tv298 = -76						; size = 4
tv272 = -76						; size = 4
tv251 = -76						; size = 4
tv230 = -76						; size = 4
tv209 = -76						; size = 4
tv188 = -76						; size = 4
tv167 = -76						; size = 4
tv146 = -76						; size = 4
tv93 = -76						; size = 4
tv85 = -76						; size = 4
tv77 = -76						; size = 4
_new_loss$ = -8						; size = 4
_task_raw$ = -4						; size = 4
_task_en$ = 8						; size = 4
_victim$ = 12						; size = 4
_aggressor$ = 16					; size = 4
?add_loss_to_task@@YGXPAUENTITY@@00@Z PROC		; add_loss_to_task, COMDAT

; 1363 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1364 : 
; 1365 : 	task
; 1366 : 		*task_raw;
; 1367 : 
; 1368 : 	task_kill_loss_data
; 1369 : 		*new_loss;
; 1370 : 
; 1371 : 	task_raw = (task *) get_local_entity_data (task_en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _task_raw$[ebp], ecx

; 1372 : 
; 1373 : 	new_loss = (task_kill_loss_data *) malloc_heap_mem (sizeof (task_kill_loss_data));

  00012	6a 2c		 push	 44			; 0000002cH
  00014	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00019	89 45 f8	 mov	 DWORD PTR _new_loss$[ebp], eax

; 1374 : 
; 1375 : 	memset (new_loss, 0, sizeof (task_kill_loss_data));

  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	6a 00		 push	 0
  00020	8b 45 f8	 mov	 eax, DWORD PTR _new_loss$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _memset
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1376 : 
; 1377 : 	new_loss->victim_type = get_local_entity_type (victim);

  0002c	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  00030	74 0a		 je	 SHORT $LN3@add_loss_t
  00032	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b4	 mov	 DWORD PTR tv77[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN4@add_loss_t
$LN3@add_loss_t:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00042	83 c2 0e	 add	 edx, 14			; 0000000eH
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN4@add_loss_t:
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _new_loss$[ebp]
  00060	8b 55 b4	 mov	 edx, DWORD PTR tv77[ebp]
  00063	89 11		 mov	 DWORD PTR [ecx], edx

; 1378 : 	new_loss->aggressor_type = get_local_entity_type (aggressor);

  00065	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00069	74 0a		 je	 SHORT $LN5@add_loss_t
  0006b	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	89 4d b4	 mov	 DWORD PTR tv85[ebp], ecx
  00073	eb 21		 jmp	 SHORT $LN6@add_loss_t
$LN5@add_loss_t:
  00075	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  0007b	83 c2 0f	 add	 edx, 15			; 0000000fH
  0007e	52		 push	 edx
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00084	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN6@add_loss_t:
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _new_loss$[ebp]
  00099	8b 55 b4	 mov	 edx, DWORD PTR tv85[ebp]
  0009c	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 1379 : 
; 1380 : 	new_loss->victim_side = (entity_sides) get_local_entity_int_value (victim, INT_TYPE_SIDE);

  0009f	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  000a3	74 0a		 je	 SHORT $LN7@add_loss_t
  000a5	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	89 4d b4	 mov	 DWORD PTR tv93[ebp], ecx
  000ad	eb 21		 jmp	 SHORT $LN8@add_loss_t
$LN7@add_loss_t:
  000af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  000b5	83 c2 11	 add	 edx, 17			; 00000011H
  000b8	52		 push	 edx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN8@add_loss_t:
  000d0	b9 01 00 00 00	 mov	 ecx, 1
  000d5	85 c9		 test	 ecx, ecx
  000d7	74 09		 je	 SHORT $LN9@add_loss_t
  000d9	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv133[ebp], 187 ; 000000bbH
  000e0	eb 21		 jmp	 SHORT $LN10@add_loss_t
$LN9@add_loss_t:
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  000e8	83 c2 11	 add	 edx, 17			; 00000011H
  000eb	52		 push	 edx
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN10@add_loss_t:
  00103	68 bb 00 00 00	 push	 187			; 000000bbH
  00108	8b 4d 0c	 mov	 ecx, DWORD PTR _victim$[ebp]
  0010b	51		 push	 ecx
  0010c	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv93[ebp], 1116
  00113	8b 45 b0	 mov	 eax, DWORD PTR tv133[ebp]
  00116	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0011d	ff d1		 call	 ecx
  0011f	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  00122	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1381 : 	new_loss->aggressor_side = (entity_sides) get_local_entity_int_value (aggressor, INT_TYPE_SIDE);

  00125	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00129	74 0a		 je	 SHORT $LN11@add_loss_t
  0012b	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0012e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00130	89 4d b4	 mov	 DWORD PTR tv146[ebp], ecx
  00133	eb 21		 jmp	 SHORT $LN12@add_loss_t
$LN11@add_loss_t:
  00135	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  0013b	83 c2 12	 add	 edx, 18			; 00000012H
  0013e	52		 push	 edx
  0013f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN12@add_loss_t:
  00156	b9 01 00 00 00	 mov	 ecx, 1
  0015b	85 c9		 test	 ecx, ecx
  0015d	74 09		 je	 SHORT $LN13@add_loss_t
  0015f	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv154[ebp], 187 ; 000000bbH
  00166	eb 21		 jmp	 SHORT $LN14@add_loss_t
$LN13@add_loss_t:
  00168	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  0016e	83 c2 12	 add	 edx, 18			; 00000012H
  00171	52		 push	 edx
  00172	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00177	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0017c	50		 push	 eax
  0017d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00182	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN14@add_loss_t:
  00189	68 bb 00 00 00	 push	 187			; 000000bbH
  0018e	8b 4d 10	 mov	 ecx, DWORD PTR _aggressor$[ebp]
  00191	51		 push	 ecx
  00192	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv146[ebp], 1116
  00199	8b 45 b0	 mov	 eax, DWORD PTR tv154[ebp]
  0019c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001a3	ff d1		 call	 ecx
  001a5	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  001a8	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 1382 : 
; 1383 : 	new_loss->victim_sub_type = get_local_entity_int_value (victim, INT_TYPE_ENTITY_SUB_TYPE);

  001ab	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  001af	74 0a		 je	 SHORT $LN15@add_loss_t
  001b1	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  001b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b6	89 4d b4	 mov	 DWORD PTR tv167[ebp], ecx
  001b9	eb 21		 jmp	 SHORT $LN16@add_loss_t
$LN15@add_loss_t:
  001bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  001c1	83 c2 14	 add	 edx, 20			; 00000014H
  001c4	52		 push	 edx
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN16@add_loss_t:
  001dc	b9 01 00 00 00	 mov	 ecx, 1
  001e1	85 c9		 test	 ecx, ecx
  001e3	74 09		 je	 SHORT $LN17@add_loss_t
  001e5	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv175[ebp], 52 ; 00000034H
  001ec	eb 21		 jmp	 SHORT $LN18@add_loss_t
$LN17@add_loss_t:
  001ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  001f4	83 c2 14	 add	 edx, 20			; 00000014H
  001f7	52		 push	 edx
  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00202	50		 push	 eax
  00203	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00208	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN18@add_loss_t:
  0020f	6a 34		 push	 52			; 00000034H
  00211	8b 4d 0c	 mov	 ecx, DWORD PTR _victim$[ebp]
  00214	51		 push	 ecx
  00215	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 1116
  0021c	8b 45 b0	 mov	 eax, DWORD PTR tv175[ebp]
  0021f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00226	ff d1		 call	 ecx
  00228	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  0022b	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1384 : 	new_loss->aggressor_sub_type = get_local_entity_int_value (aggressor, INT_TYPE_ENTITY_SUB_TYPE);

  0022e	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00232	74 0a		 je	 SHORT $LN19@add_loss_t
  00234	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  00237	8b 08		 mov	 ecx, DWORD PTR [eax]
  00239	89 4d b4	 mov	 DWORD PTR tv188[ebp], ecx
  0023c	eb 21		 jmp	 SHORT $LN20@add_loss_t
$LN19@add_loss_t:
  0023e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00244	83 c2 15	 add	 edx, 21			; 00000015H
  00247	52		 push	 edx
  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00252	50		 push	 eax
  00253	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00258	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN20@add_loss_t:
  0025f	b9 01 00 00 00	 mov	 ecx, 1
  00264	85 c9		 test	 ecx, ecx
  00266	74 09		 je	 SHORT $LN21@add_loss_t
  00268	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv196[ebp], 52 ; 00000034H
  0026f	eb 21		 jmp	 SHORT $LN22@add_loss_t
$LN21@add_loss_t:
  00271	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00277	83 c2 15	 add	 edx, 21			; 00000015H
  0027a	52		 push	 edx
  0027b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00280	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN22@add_loss_t:
  00292	6a 34		 push	 52			; 00000034H
  00294	8b 4d 10	 mov	 ecx, DWORD PTR _aggressor$[ebp]
  00297	51		 push	 ecx
  00298	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv188[ebp], 1116
  0029f	8b 45 b0	 mov	 eax, DWORD PTR tv196[ebp]
  002a2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002a9	ff d1		 call	 ecx
  002ab	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  002ae	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 1385 : 
; 1386 : 	new_loss->victim_id = get_local_entity_int_value (victim, INT_TYPE_GROUP_MEMBER_ID);

  002b1	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  002b5	74 0a		 je	 SHORT $LN23@add_loss_t
  002b7	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  002ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  002bc	89 4d b4	 mov	 DWORD PTR tv209[ebp], ecx
  002bf	eb 21		 jmp	 SHORT $LN24@add_loss_t
$LN23@add_loss_t:
  002c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  002c7	83 c2 17	 add	 edx, 23			; 00000017H
  002ca	52		 push	 edx
  002cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002d5	50		 push	 eax
  002d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002db	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv209[ebp], 0
$LN24@add_loss_t:
  002e2	b9 01 00 00 00	 mov	 ecx, 1
  002e7	85 c9		 test	 ecx, ecx
  002e9	74 09		 je	 SHORT $LN25@add_loss_t
  002eb	c7 45 b0 4a 00
	00 00		 mov	 DWORD PTR tv217[ebp], 74 ; 0000004aH
  002f2	eb 21		 jmp	 SHORT $LN26@add_loss_t
$LN25@add_loss_t:
  002f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  002fa	83 c2 17	 add	 edx, 23			; 00000017H
  002fd	52		 push	 edx
  002fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00303	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00308	50		 push	 eax
  00309	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv217[ebp], 0
$LN26@add_loss_t:
  00315	6a 4a		 push	 74			; 0000004aH
  00317	8b 4d 0c	 mov	 ecx, DWORD PTR _victim$[ebp]
  0031a	51		 push	 ecx
  0031b	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv209[ebp], 1116
  00322	8b 45 b0	 mov	 eax, DWORD PTR tv217[ebp]
  00325	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0032c	ff d1		 call	 ecx
  0032e	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  00331	89 42 18	 mov	 DWORD PTR [edx+24], eax

; 1387 : 	new_loss->aggressor_id = get_local_entity_int_value (aggressor, INT_TYPE_GROUP_MEMBER_ID);

  00334	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00338	74 0a		 je	 SHORT $LN27@add_loss_t
  0033a	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0033d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033f	89 4d b4	 mov	 DWORD PTR tv230[ebp], ecx
  00342	eb 21		 jmp	 SHORT $LN28@add_loss_t
$LN27@add_loss_t:
  00344	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  0034a	83 c2 18	 add	 edx, 24			; 00000018H
  0034d	52		 push	 edx
  0034e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00358	50		 push	 eax
  00359	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv230[ebp], 0
$LN28@add_loss_t:
  00365	b9 01 00 00 00	 mov	 ecx, 1
  0036a	85 c9		 test	 ecx, ecx
  0036c	74 09		 je	 SHORT $LN29@add_loss_t
  0036e	c7 45 b0 4a 00
	00 00		 mov	 DWORD PTR tv238[ebp], 74 ; 0000004aH
  00375	eb 21		 jmp	 SHORT $LN30@add_loss_t
$LN29@add_loss_t:
  00377	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  0037d	83 c2 18	 add	 edx, 24			; 00000018H
  00380	52		 push	 edx
  00381	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00386	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00391	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv238[ebp], 0
$LN30@add_loss_t:
  00398	6a 4a		 push	 74			; 0000004aH
  0039a	8b 4d 10	 mov	 ecx, DWORD PTR _aggressor$[ebp]
  0039d	51		 push	 ecx
  0039e	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv230[ebp], 1116
  003a5	8b 45 b0	 mov	 eax, DWORD PTR tv238[ebp]
  003a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003af	ff d1		 call	 ecx
  003b1	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  003b4	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 1388 : 
; 1389 : 	new_loss->time = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_TIME_OF_DAY);

  003b7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  003be	74 0c		 je	 SHORT $LN31@add_loss_t
  003c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  003c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c7	89 4d b4	 mov	 DWORD PTR tv251[ebp], ecx
  003ca	eb 21		 jmp	 SHORT $LN32@add_loss_t
$LN31@add_loss_t:
  003cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  003d2	83 c2 1a	 add	 edx, 26			; 0000001aH
  003d5	52		 push	 edx
  003d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003e0	50		 push	 eax
  003e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e6	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN32@add_loss_t:
  003ed	b9 01 00 00 00	 mov	 ecx, 1
  003f2	85 c9		 test	 ecx, ecx
  003f4	74 09		 je	 SHORT $LN33@add_loss_t
  003f6	c7 45 b0 8e 00
	00 00		 mov	 DWORD PTR tv259[ebp], 142 ; 0000008eH
  003fd	eb 21		 jmp	 SHORT $LN34@add_loss_t
$LN33@add_loss_t:
  003ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00405	83 c2 1a	 add	 edx, 26			; 0000001aH
  00408	52		 push	 edx
  00409	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00413	50		 push	 eax
  00414	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00419	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv259[ebp], 0
$LN34@add_loss_t:
  00420	68 8e 00 00 00	 push	 142			; 0000008eH
  00425	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0042b	51		 push	 ecx
  0042c	69 55 b4 bc 02
	00 00		 imul	 edx, DWORD PTR tv251[ebp], 700
  00433	8b 45 b0	 mov	 eax, DWORD PTR tv259[ebp]
  00436	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0043d	ff d1		 call	 ecx
  0043f	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  00442	d9 5a 20	 fstp	 DWORD PTR [edx+32]

; 1390 : 
; 1391 : 	new_loss->day = get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY);

  00445	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0044c	74 0c		 je	 SHORT $LN35@add_loss_t
  0044e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00453	8b 08		 mov	 ecx, DWORD PTR [eax]
  00455	89 4d b4	 mov	 DWORD PTR tv272[ebp], ecx
  00458	eb 21		 jmp	 SHORT $LN36@add_loss_t
$LN35@add_loss_t:
  0045a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00460	83 c2 1c	 add	 edx, 28			; 0000001cH
  00463	52		 push	 edx
  00464	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00469	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0046e	50		 push	 eax
  0046f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00474	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv272[ebp], 0
$LN36@add_loss_t:
  0047b	b9 01 00 00 00	 mov	 ecx, 1
  00480	85 c9		 test	 ecx, ecx
  00482	74 09		 je	 SHORT $LN37@add_loss_t
  00484	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv280[ebp], 38 ; 00000026H
  0048b	eb 21		 jmp	 SHORT $LN38@add_loss_t
$LN37@add_loss_t:
  0048d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00493	83 c2 1c	 add	 edx, 28			; 0000001cH
  00496	52		 push	 edx
  00497	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004a1	50		 push	 eax
  004a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a7	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv280[ebp], 0
$LN38@add_loss_t:
  004ae	6a 26		 push	 38			; 00000026H
  004b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  004b6	51		 push	 ecx
  004b7	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv272[ebp], 1116
  004be	8b 45 b0	 mov	 eax, DWORD PTR tv280[ebp]
  004c1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004c8	ff d1		 call	 ecx
  004ca	8b 55 f8	 mov	 edx, DWORD PTR _new_loss$[ebp]
  004cd	89 42 24	 mov	 DWORD PTR [edx+36], eax

; 1392 : 
; 1393 : 	new_loss->next = task_raw->task_losses;

  004d0	8b 45 f8	 mov	 eax, DWORD PTR _new_loss$[ebp]
  004d3	8b 4d fc	 mov	 ecx, DWORD PTR _task_raw$[ebp]
  004d6	8b 91 94 00 00
	00		 mov	 edx, DWORD PTR [ecx+148]
  004dc	89 50 28	 mov	 DWORD PTR [eax+40], edx

; 1394 : 	task_raw->task_losses = new_loss;

  004df	8b 45 fc	 mov	 eax, DWORD PTR _task_raw$[ebp]
  004e2	8b 4d f8	 mov	 ecx, DWORD PTR _new_loss$[ebp]
  004e5	89 88 94 00 00
	00		 mov	 DWORD PTR [eax+148], ecx

; 1395 : 
; 1396 : 	debug_log ("TASK: added loss to task %s (%d)", get_local_entity_string (task_en, STRING_TYPE_FULL_NAME), get_local_entity_index (task_en));

  004eb	83 7d 08 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  004ef	74 0a		 je	 SHORT $LN39@add_loss_t
  004f1	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  004f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  004f6	89 4d b4	 mov	 DWORD PTR tv298[ebp], ecx
  004f9	eb 21		 jmp	 SHORT $LN40@add_loss_t
$LN39@add_loss_t:
  004fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00501	83 c2 21	 add	 edx, 33			; 00000021H
  00504	52		 push	 edx
  00505	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0050f	50		 push	 eax
  00510	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00515	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv298[ebp], 0
$LN40@add_loss_t:
  0051c	b9 01 00 00 00	 mov	 ecx, 1
  00521	85 c9		 test	 ecx, ecx
  00523	74 09		 je	 SHORT $LN41@add_loss_t
  00525	c7 45 b0 03 00
	00 00		 mov	 DWORD PTR tv306[ebp], 3
  0052c	eb 21		 jmp	 SHORT $LN42@add_loss_t
$LN41@add_loss_t:
  0052e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_loss_to_task@@YGXPAUENTITY@@00@Z@4JA
  00534	83 c2 21	 add	 edx, 33			; 00000021H
  00537	52		 push	 edx
  00538	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00542	50		 push	 eax
  00543	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00548	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv306[ebp], 0
$LN42@add_loss_t:
  0054f	8b 4d 08	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00552	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00558	c1 f9 04	 sar	 ecx, 4
  0055b	51		 push	 ecx
  0055c	6a 03		 push	 3
  0055e	8b 55 08	 mov	 edx, DWORD PTR _task_en$[ebp]
  00561	52		 push	 edx
  00562	6b 45 b4 34	 imul	 eax, DWORD PTR tv298[ebp], 52
  00566	8b 4d b0	 mov	 ecx, DWORD PTR tv306[ebp]
  00569	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  00570	ff d2		 call	 edx
  00572	50		 push	 eax
  00573	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BGNDHPPO@TASK?3?5added?5loss?5to?5task?5?$CFs?5?$CI?$CFd@
  00578	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0057d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1397 : }

  00580	5f		 pop	 edi
  00581	5e		 pop	 esi
  00582	5b		 pop	 ebx
  00583	8b e5		 mov	 esp, ebp
  00585	5d		 pop	 ebp
  00586	c2 0c 00	 ret	 12			; 0000000cH
?add_loss_to_task@@YGXPAUENTITY@@00@Z ENDP		; add_loss_to_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?add_kill_to_task@@YGXPAUENTITY@@00@Z
_TEXT	SEGMENT
tv306 = -80						; size = 4
tv280 = -80						; size = 4
tv259 = -80						; size = 4
tv238 = -80						; size = 4
tv217 = -80						; size = 4
tv196 = -80						; size = 4
tv175 = -80						; size = 4
tv154 = -80						; size = 4
tv133 = -80						; size = 4
tv298 = -76						; size = 4
tv272 = -76						; size = 4
tv251 = -76						; size = 4
tv230 = -76						; size = 4
tv209 = -76						; size = 4
tv188 = -76						; size = 4
tv167 = -76						; size = 4
tv146 = -76						; size = 4
tv93 = -76						; size = 4
tv85 = -76						; size = 4
tv77 = -76						; size = 4
_new_kill$ = -8						; size = 4
_task_raw$ = -4						; size = 4
_task_en$ = 8						; size = 4
_victim$ = 12						; size = 4
_aggressor$ = 16					; size = 4
?add_kill_to_task@@YGXPAUENTITY@@00@Z PROC		; add_kill_to_task, COMDAT

; 1322 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1323 : 
; 1324 : 	task
; 1325 : 		*task_raw;
; 1326 : 
; 1327 : 	task_kill_loss_data
; 1328 : 		*new_kill;
; 1329 : 
; 1330 : 	task_raw = (task *) get_local_entity_data (task_en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _task_raw$[ebp], ecx

; 1331 : 
; 1332 : 	new_kill = (task_kill_loss_data *) malloc_heap_mem (sizeof (task_kill_loss_data));

  00012	6a 2c		 push	 44			; 0000002cH
  00014	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00019	89 45 f8	 mov	 DWORD PTR _new_kill$[ebp], eax

; 1333 : 
; 1334 : 	memset (new_kill, 0, sizeof (task_kill_loss_data));

  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	6a 00		 push	 0
  00020	8b 45 f8	 mov	 eax, DWORD PTR _new_kill$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _memset
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1335 : 
; 1336 : 	new_kill->victim_type = get_local_entity_type (victim);

  0002c	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  00030	74 0a		 je	 SHORT $LN3@add_kill_t
  00032	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b4	 mov	 DWORD PTR tv77[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN4@add_kill_t
$LN3@add_kill_t:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00042	83 c2 0e	 add	 edx, 14			; 0000000eH
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN4@add_kill_t:
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _new_kill$[ebp]
  00060	8b 55 b4	 mov	 edx, DWORD PTR tv77[ebp]
  00063	89 11		 mov	 DWORD PTR [ecx], edx

; 1337 : 	new_kill->aggressor_type = get_local_entity_type (aggressor);

  00065	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00069	74 0a		 je	 SHORT $LN5@add_kill_t
  0006b	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	89 4d b4	 mov	 DWORD PTR tv85[ebp], ecx
  00073	eb 21		 jmp	 SHORT $LN6@add_kill_t
$LN5@add_kill_t:
  00075	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  0007b	83 c2 0f	 add	 edx, 15			; 0000000fH
  0007e	52		 push	 edx
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00084	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN6@add_kill_t:
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _new_kill$[ebp]
  00099	8b 55 b4	 mov	 edx, DWORD PTR tv85[ebp]
  0009c	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 1338 : 
; 1339 : 	new_kill->victim_side = (entity_sides) get_local_entity_int_value (victim, INT_TYPE_SIDE);

  0009f	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  000a3	74 0a		 je	 SHORT $LN7@add_kill_t
  000a5	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	89 4d b4	 mov	 DWORD PTR tv93[ebp], ecx
  000ad	eb 21		 jmp	 SHORT $LN8@add_kill_t
$LN7@add_kill_t:
  000af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  000b5	83 c2 11	 add	 edx, 17			; 00000011H
  000b8	52		 push	 edx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN8@add_kill_t:
  000d0	b9 01 00 00 00	 mov	 ecx, 1
  000d5	85 c9		 test	 ecx, ecx
  000d7	74 09		 je	 SHORT $LN9@add_kill_t
  000d9	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv133[ebp], 187 ; 000000bbH
  000e0	eb 21		 jmp	 SHORT $LN10@add_kill_t
$LN9@add_kill_t:
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  000e8	83 c2 11	 add	 edx, 17			; 00000011H
  000eb	52		 push	 edx
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN10@add_kill_t:
  00103	68 bb 00 00 00	 push	 187			; 000000bbH
  00108	8b 4d 0c	 mov	 ecx, DWORD PTR _victim$[ebp]
  0010b	51		 push	 ecx
  0010c	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv93[ebp], 1116
  00113	8b 45 b0	 mov	 eax, DWORD PTR tv133[ebp]
  00116	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0011d	ff d1		 call	 ecx
  0011f	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  00122	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1340 : 	new_kill->aggressor_side = (entity_sides) get_local_entity_int_value (aggressor, INT_TYPE_SIDE);

  00125	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00129	74 0a		 je	 SHORT $LN11@add_kill_t
  0012b	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0012e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00130	89 4d b4	 mov	 DWORD PTR tv146[ebp], ecx
  00133	eb 21		 jmp	 SHORT $LN12@add_kill_t
$LN11@add_kill_t:
  00135	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  0013b	83 c2 12	 add	 edx, 18			; 00000012H
  0013e	52		 push	 edx
  0013f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN12@add_kill_t:
  00156	b9 01 00 00 00	 mov	 ecx, 1
  0015b	85 c9		 test	 ecx, ecx
  0015d	74 09		 je	 SHORT $LN13@add_kill_t
  0015f	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv154[ebp], 187 ; 000000bbH
  00166	eb 21		 jmp	 SHORT $LN14@add_kill_t
$LN13@add_kill_t:
  00168	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  0016e	83 c2 12	 add	 edx, 18			; 00000012H
  00171	52		 push	 edx
  00172	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00177	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0017c	50		 push	 eax
  0017d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00182	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN14@add_kill_t:
  00189	68 bb 00 00 00	 push	 187			; 000000bbH
  0018e	8b 4d 10	 mov	 ecx, DWORD PTR _aggressor$[ebp]
  00191	51		 push	 ecx
  00192	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv146[ebp], 1116
  00199	8b 45 b0	 mov	 eax, DWORD PTR tv154[ebp]
  0019c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001a3	ff d1		 call	 ecx
  001a5	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  001a8	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 1341 : 
; 1342 : 	new_kill->victim_sub_type = get_local_entity_int_value (victim, INT_TYPE_ENTITY_SUB_TYPE);

  001ab	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  001af	74 0a		 je	 SHORT $LN15@add_kill_t
  001b1	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  001b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b6	89 4d b4	 mov	 DWORD PTR tv167[ebp], ecx
  001b9	eb 21		 jmp	 SHORT $LN16@add_kill_t
$LN15@add_kill_t:
  001bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  001c1	83 c2 14	 add	 edx, 20			; 00000014H
  001c4	52		 push	 edx
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN16@add_kill_t:
  001dc	b9 01 00 00 00	 mov	 ecx, 1
  001e1	85 c9		 test	 ecx, ecx
  001e3	74 09		 je	 SHORT $LN17@add_kill_t
  001e5	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv175[ebp], 52 ; 00000034H
  001ec	eb 21		 jmp	 SHORT $LN18@add_kill_t
$LN17@add_kill_t:
  001ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  001f4	83 c2 14	 add	 edx, 20			; 00000014H
  001f7	52		 push	 edx
  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00202	50		 push	 eax
  00203	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00208	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN18@add_kill_t:
  0020f	6a 34		 push	 52			; 00000034H
  00211	8b 4d 0c	 mov	 ecx, DWORD PTR _victim$[ebp]
  00214	51		 push	 ecx
  00215	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 1116
  0021c	8b 45 b0	 mov	 eax, DWORD PTR tv175[ebp]
  0021f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00226	ff d1		 call	 ecx
  00228	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  0022b	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1343 : 	new_kill->aggressor_sub_type = get_local_entity_int_value (aggressor, INT_TYPE_ENTITY_SUB_TYPE);

  0022e	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00232	74 0a		 je	 SHORT $LN19@add_kill_t
  00234	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  00237	8b 08		 mov	 ecx, DWORD PTR [eax]
  00239	89 4d b4	 mov	 DWORD PTR tv188[ebp], ecx
  0023c	eb 21		 jmp	 SHORT $LN20@add_kill_t
$LN19@add_kill_t:
  0023e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00244	83 c2 15	 add	 edx, 21			; 00000015H
  00247	52		 push	 edx
  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00252	50		 push	 eax
  00253	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00258	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN20@add_kill_t:
  0025f	b9 01 00 00 00	 mov	 ecx, 1
  00264	85 c9		 test	 ecx, ecx
  00266	74 09		 je	 SHORT $LN21@add_kill_t
  00268	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv196[ebp], 52 ; 00000034H
  0026f	eb 21		 jmp	 SHORT $LN22@add_kill_t
$LN21@add_kill_t:
  00271	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00277	83 c2 15	 add	 edx, 21			; 00000015H
  0027a	52		 push	 edx
  0027b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00280	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN22@add_kill_t:
  00292	6a 34		 push	 52			; 00000034H
  00294	8b 4d 10	 mov	 ecx, DWORD PTR _aggressor$[ebp]
  00297	51		 push	 ecx
  00298	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv188[ebp], 1116
  0029f	8b 45 b0	 mov	 eax, DWORD PTR tv196[ebp]
  002a2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002a9	ff d1		 call	 ecx
  002ab	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  002ae	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 1344 : 
; 1345 : 	new_kill->victim_id = get_local_entity_int_value (victim, INT_TYPE_GROUP_MEMBER_ID);

  002b1	83 7d 0c 00	 cmp	 DWORD PTR _victim$[ebp], 0
  002b5	74 0a		 je	 SHORT $LN23@add_kill_t
  002b7	8b 45 0c	 mov	 eax, DWORD PTR _victim$[ebp]
  002ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  002bc	89 4d b4	 mov	 DWORD PTR tv209[ebp], ecx
  002bf	eb 21		 jmp	 SHORT $LN24@add_kill_t
$LN23@add_kill_t:
  002c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  002c7	83 c2 17	 add	 edx, 23			; 00000017H
  002ca	52		 push	 edx
  002cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002d5	50		 push	 eax
  002d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002db	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv209[ebp], 0
$LN24@add_kill_t:
  002e2	b9 01 00 00 00	 mov	 ecx, 1
  002e7	85 c9		 test	 ecx, ecx
  002e9	74 09		 je	 SHORT $LN25@add_kill_t
  002eb	c7 45 b0 4a 00
	00 00		 mov	 DWORD PTR tv217[ebp], 74 ; 0000004aH
  002f2	eb 21		 jmp	 SHORT $LN26@add_kill_t
$LN25@add_kill_t:
  002f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  002fa	83 c2 17	 add	 edx, 23			; 00000017H
  002fd	52		 push	 edx
  002fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00303	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00308	50		 push	 eax
  00309	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv217[ebp], 0
$LN26@add_kill_t:
  00315	6a 4a		 push	 74			; 0000004aH
  00317	8b 4d 0c	 mov	 ecx, DWORD PTR _victim$[ebp]
  0031a	51		 push	 ecx
  0031b	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv209[ebp], 1116
  00322	8b 45 b0	 mov	 eax, DWORD PTR tv217[ebp]
  00325	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0032c	ff d1		 call	 ecx
  0032e	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  00331	89 42 18	 mov	 DWORD PTR [edx+24], eax

; 1346 : 	new_kill->aggressor_id = get_local_entity_int_value (aggressor, INT_TYPE_GROUP_MEMBER_ID);

  00334	83 7d 10 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00338	74 0a		 je	 SHORT $LN27@add_kill_t
  0033a	8b 45 10	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0033d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033f	89 4d b4	 mov	 DWORD PTR tv230[ebp], ecx
  00342	eb 21		 jmp	 SHORT $LN28@add_kill_t
$LN27@add_kill_t:
  00344	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  0034a	83 c2 18	 add	 edx, 24			; 00000018H
  0034d	52		 push	 edx
  0034e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00358	50		 push	 eax
  00359	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv230[ebp], 0
$LN28@add_kill_t:
  00365	b9 01 00 00 00	 mov	 ecx, 1
  0036a	85 c9		 test	 ecx, ecx
  0036c	74 09		 je	 SHORT $LN29@add_kill_t
  0036e	c7 45 b0 4a 00
	00 00		 mov	 DWORD PTR tv238[ebp], 74 ; 0000004aH
  00375	eb 21		 jmp	 SHORT $LN30@add_kill_t
$LN29@add_kill_t:
  00377	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  0037d	83 c2 18	 add	 edx, 24			; 00000018H
  00380	52		 push	 edx
  00381	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00386	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00391	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv238[ebp], 0
$LN30@add_kill_t:
  00398	6a 4a		 push	 74			; 0000004aH
  0039a	8b 4d 10	 mov	 ecx, DWORD PTR _aggressor$[ebp]
  0039d	51		 push	 ecx
  0039e	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv230[ebp], 1116
  003a5	8b 45 b0	 mov	 eax, DWORD PTR tv238[ebp]
  003a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003af	ff d1		 call	 ecx
  003b1	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  003b4	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 1347 : 
; 1348 : 	new_kill->time = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_TIME_OF_DAY);

  003b7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  003be	74 0c		 je	 SHORT $LN31@add_kill_t
  003c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  003c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c7	89 4d b4	 mov	 DWORD PTR tv251[ebp], ecx
  003ca	eb 21		 jmp	 SHORT $LN32@add_kill_t
$LN31@add_kill_t:
  003cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  003d2	83 c2 1a	 add	 edx, 26			; 0000001aH
  003d5	52		 push	 edx
  003d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003e0	50		 push	 eax
  003e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e6	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN32@add_kill_t:
  003ed	b9 01 00 00 00	 mov	 ecx, 1
  003f2	85 c9		 test	 ecx, ecx
  003f4	74 09		 je	 SHORT $LN33@add_kill_t
  003f6	c7 45 b0 8e 00
	00 00		 mov	 DWORD PTR tv259[ebp], 142 ; 0000008eH
  003fd	eb 21		 jmp	 SHORT $LN34@add_kill_t
$LN33@add_kill_t:
  003ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00405	83 c2 1a	 add	 edx, 26			; 0000001aH
  00408	52		 push	 edx
  00409	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00413	50		 push	 eax
  00414	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00419	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv259[ebp], 0
$LN34@add_kill_t:
  00420	68 8e 00 00 00	 push	 142			; 0000008eH
  00425	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0042b	51		 push	 ecx
  0042c	69 55 b4 bc 02
	00 00		 imul	 edx, DWORD PTR tv251[ebp], 700
  00433	8b 45 b0	 mov	 eax, DWORD PTR tv259[ebp]
  00436	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0043d	ff d1		 call	 ecx
  0043f	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  00442	d9 5a 20	 fstp	 DWORD PTR [edx+32]

; 1349 : 
; 1350 : 	new_kill->day = get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY);

  00445	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0044c	74 0c		 je	 SHORT $LN35@add_kill_t
  0044e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00453	8b 08		 mov	 ecx, DWORD PTR [eax]
  00455	89 4d b4	 mov	 DWORD PTR tv272[ebp], ecx
  00458	eb 21		 jmp	 SHORT $LN36@add_kill_t
$LN35@add_kill_t:
  0045a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00460	83 c2 1c	 add	 edx, 28			; 0000001cH
  00463	52		 push	 edx
  00464	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00469	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0046e	50		 push	 eax
  0046f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00474	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv272[ebp], 0
$LN36@add_kill_t:
  0047b	b9 01 00 00 00	 mov	 ecx, 1
  00480	85 c9		 test	 ecx, ecx
  00482	74 09		 je	 SHORT $LN37@add_kill_t
  00484	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv280[ebp], 38 ; 00000026H
  0048b	eb 21		 jmp	 SHORT $LN38@add_kill_t
$LN37@add_kill_t:
  0048d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00493	83 c2 1c	 add	 edx, 28			; 0000001cH
  00496	52		 push	 edx
  00497	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004a1	50		 push	 eax
  004a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a7	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv280[ebp], 0
$LN38@add_kill_t:
  004ae	6a 26		 push	 38			; 00000026H
  004b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  004b6	51		 push	 ecx
  004b7	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv272[ebp], 1116
  004be	8b 45 b0	 mov	 eax, DWORD PTR tv280[ebp]
  004c1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004c8	ff d1		 call	 ecx
  004ca	8b 55 f8	 mov	 edx, DWORD PTR _new_kill$[ebp]
  004cd	89 42 24	 mov	 DWORD PTR [edx+36], eax

; 1351 : 
; 1352 : 	new_kill->next = task_raw->task_kills;

  004d0	8b 45 f8	 mov	 eax, DWORD PTR _new_kill$[ebp]
  004d3	8b 4d fc	 mov	 ecx, DWORD PTR _task_raw$[ebp]
  004d6	8b 91 90 00 00
	00		 mov	 edx, DWORD PTR [ecx+144]
  004dc	89 50 28	 mov	 DWORD PTR [eax+40], edx

; 1353 : 	task_raw->task_kills = new_kill;

  004df	8b 45 fc	 mov	 eax, DWORD PTR _task_raw$[ebp]
  004e2	8b 4d f8	 mov	 ecx, DWORD PTR _new_kill$[ebp]
  004e5	89 88 90 00 00
	00		 mov	 DWORD PTR [eax+144], ecx

; 1354 : 
; 1355 : 	debug_log ("TASK: added kill to task %s (%d)", get_local_entity_string (task_en, STRING_TYPE_FULL_NAME), get_local_entity_index (task_en));

  004eb	83 7d 08 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  004ef	74 0a		 je	 SHORT $LN39@add_kill_t
  004f1	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  004f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  004f6	89 4d b4	 mov	 DWORD PTR tv298[ebp], ecx
  004f9	eb 21		 jmp	 SHORT $LN40@add_kill_t
$LN39@add_kill_t:
  004fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00501	83 c2 21	 add	 edx, 33			; 00000021H
  00504	52		 push	 edx
  00505	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0050f	50		 push	 eax
  00510	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00515	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv298[ebp], 0
$LN40@add_kill_t:
  0051c	b9 01 00 00 00	 mov	 ecx, 1
  00521	85 c9		 test	 ecx, ecx
  00523	74 09		 je	 SHORT $LN41@add_kill_t
  00525	c7 45 b0 03 00
	00 00		 mov	 DWORD PTR tv306[ebp], 3
  0052c	eb 21		 jmp	 SHORT $LN42@add_kill_t
$LN41@add_kill_t:
  0052e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_kill_to_task@@YGXPAUENTITY@@00@Z@4JA
  00534	83 c2 21	 add	 edx, 33			; 00000021H
  00537	52		 push	 edx
  00538	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00542	50		 push	 eax
  00543	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00548	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv306[ebp], 0
$LN42@add_kill_t:
  0054f	8b 4d 08	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00552	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00558	c1 f9 04	 sar	 ecx, 4
  0055b	51		 push	 ecx
  0055c	6a 03		 push	 3
  0055e	8b 55 08	 mov	 edx, DWORD PTR _task_en$[ebp]
  00561	52		 push	 edx
  00562	6b 45 b4 34	 imul	 eax, DWORD PTR tv298[ebp], 52
  00566	8b 4d b0	 mov	 ecx, DWORD PTR tv306[ebp]
  00569	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  00570	ff d2		 call	 edx
  00572	50		 push	 eax
  00573	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@HDBGDBMH@TASK?3?5added?5kill?5to?5task?5?$CFs?5?$CI?$CFd@
  00578	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0057d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1356 : }

  00580	5f		 pop	 edi
  00581	5e		 pop	 esi
  00582	5b		 pop	 ebx
  00583	8b e5		 mov	 esp, ebp
  00585	5d		 pop	 ebp
  00586	c2 0c 00	 ret	 12			; 0000000cH
?add_kill_to_task@@YGXPAUENTITY@@00@Z ENDP		; add_kill_to_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?validate_task_entity@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv180 = -76						; size = 4
tv159 = -76						; size = 4
tv136 = -76						; size = 4
tv83 = -76						; size = 4
tv172 = -72						; size = 4
tv152 = -72						; size = 4
tv128 = -72						; size = 4
tv89 = -72						; size = 4
tv75 = -72						; size = 4
_task_type$ = -4					; size = 4
_en$ = 8						; size = 4
?validate_task_entity@@YGXPAUENTITY@@@Z PROC		; validate_task_entity, COMDAT

; 1283 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1284 : 	entity_sub_types
; 1285 : 		task_type;
; 1286 : 	
; 1287 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@validate_t
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@validate_t:

; 1288 : 
; 1289 : 	task_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN11@validate_t
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN12@validate_t
$LN11@validate_t:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  0003d	83 c2 06	 add	 edx, 6
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN12@validate_t:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN13@validate_t
  00061	c7 45 b4 34 00
	00 00		 mov	 DWORD PTR tv83[ebp], 52	; 00000034H
  00068	eb 21		 jmp	 SHORT $LN14@validate_t
$LN13@validate_t:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  00070	83 c2 06	 add	 edx, 6
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN14@validate_t:
  0008b	6a 34		 push	 52			; 00000034H
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00090	51		 push	 ecx
  00091	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  00098	8b 45 b4	 mov	 eax, DWORD PTR tv83[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	89 45 fc	 mov	 DWORD PTR _task_type$[ebp], eax

; 1290 : 
; 1291 : 	//
; 1292 : 	// Check certain tasks have objective
; 1293 : 	//
; 1294 : 
; 1295 : 	switch (task_type)

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _task_type$[ebp]
  000aa	89 45 b8	 mov	 DWORD PTR tv89[ebp], eax
  000ad	83 7d b8 09	 cmp	 DWORD PTR tv89[ebp], 9
  000b1	74 0f		 je	 SHORT $LN5@validate_t
  000b3	83 7d b8 0a	 cmp	 DWORD PTR tv89[ebp], 10	; 0000000aH
  000b7	0f 84 a3 00 00
	00		 je	 $LN7@validate_t
  000bd	e9 b7 01 00 00	 jmp	 $LN1@validate_t
$LN5@validate_t:

; 1296 : 	{
; 1297 : 		case ENTITY_SUB_TYPE_TASK_ENGAGE:
; 1298 : 		{
; 1299 : 			ASSERT (get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT));

  000c2	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c6	74 0a		 je	 SHORT $LN15@validate_t
  000c8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cd	89 4d b8	 mov	 DWORD PTR tv128[ebp], ecx
  000d0	eb 21		 jmp	 SHORT $LN16@validate_t
$LN15@validate_t:
  000d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  000d8	83 c2 10	 add	 edx, 16			; 00000010H
  000db	52		 push	 edx
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ec	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN16@validate_t:
  000f3	b9 01 00 00 00	 mov	 ecx, 1
  000f8	85 c9		 test	 ecx, ecx
  000fa	74 09		 je	 SHORT $LN17@validate_t
  000fc	c7 45 b4 27 00
	00 00		 mov	 DWORD PTR tv136[ebp], 39 ; 00000027H
  00103	eb 21		 jmp	 SHORT $LN18@validate_t
$LN17@validate_t:
  00105	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  0010b	83 c2 10	 add	 edx, 16			; 00000010H
  0010e	52		 push	 edx
  0010f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00114	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN18@validate_t:
  00126	6a 27		 push	 39			; 00000027H
  00128	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0012b	51		 push	 ecx
  0012c	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 180
  00133	8b 45 b4	 mov	 eax, DWORD PTR tv136[ebp]
  00136	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0013d	ff d1		 call	 ecx
  0013f	85 c0		 test	 eax, eax
  00141	75 18		 jne	 SHORT $LN6@validate_t
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  00148	83 c0 10	 add	 eax, 16			; 00000010H
  0014b	50		 push	 eax
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@DICGLJLC@get_local_entity_parent?5?$CIen?0?5LI@
  00156	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@validate_t:

; 1300 : 
; 1301 : 			break;

  0015b	e9 19 01 00 00	 jmp	 $LN1@validate_t
$LN7@validate_t:

; 1302 : 		}
; 1303 : 		case ENTITY_SUB_TYPE_TASK_ESCORT:
; 1304 : 		{
; 1305 : 			if (!get_local_entity_int_value (en, INT_TYPE_TASK_COMPLETED))

  00160	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00164	74 0a		 je	 SHORT $LN19@validate_t
  00166	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00169	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016b	89 4d b8	 mov	 DWORD PTR tv152[ebp], ecx
  0016e	eb 1d		 jmp	 SHORT $LN20@validate_t
$LN19@validate_t:
  00170	68 19 05 00 00	 push	 1305			; 00000519H
  00175	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00180	52		 push	 edx
  00181	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00186	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN20@validate_t:
  0018d	b8 01 00 00 00	 mov	 eax, 1
  00192	85 c0		 test	 eax, eax
  00194	74 09		 je	 SHORT $LN21@validate_t
  00196	c7 45 b4 d9 00
	00 00		 mov	 DWORD PTR tv159[ebp], 217 ; 000000d9H
  0019d	eb 1d		 jmp	 SHORT $LN22@validate_t
$LN21@validate_t:
  0019f	68 19 05 00 00	 push	 1305			; 00000519H
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001af	51		 push	 ecx
  001b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN22@validate_t:
  001bc	68 d9 00 00 00	 push	 217			; 000000d9H
  001c1	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001c4	52		 push	 edx
  001c5	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv152[ebp], 1116
  001cc	8b 4d b4	 mov	 ecx, DWORD PTR tv159[ebp]
  001cf	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001d6	ff d2		 call	 edx
  001d8	85 c0		 test	 eax, eax
  001da	0f 85 99 00 00
	00		 jne	 $LN1@validate_t

; 1306 : 			{
; 1307 : 				ASSERT (get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT));

  001e0	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001e4	74 0a		 je	 SHORT $LN23@validate_t
  001e6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001eb	89 4d b8	 mov	 DWORD PTR tv172[ebp], ecx
  001ee	eb 21		 jmp	 SHORT $LN24@validate_t
$LN23@validate_t:
  001f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  001f6	83 c2 18	 add	 edx, 24			; 00000018H
  001f9	52		 push	 edx
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN24@validate_t:
  00211	b9 01 00 00 00	 mov	 ecx, 1
  00216	85 c9		 test	 ecx, ecx
  00218	74 09		 je	 SHORT $LN25@validate_t
  0021a	c7 45 b4 27 00
	00 00		 mov	 DWORD PTR tv180[ebp], 39 ; 00000027H
  00221	eb 21		 jmp	 SHORT $LN26@validate_t
$LN25@validate_t:
  00223	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  00229	83 c2 18	 add	 edx, 24			; 00000018H
  0022c	52		 push	 edx
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00232	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN26@validate_t:
  00244	6a 27		 push	 39			; 00000027H
  00246	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00249	51		 push	 ecx
  0024a	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv172[ebp], 180
  00251	8b 45 b4	 mov	 eax, DWORD PTR tv180[ebp]
  00254	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0025b	ff d1		 call	 ecx
  0025d	85 c0		 test	 eax, eax
  0025f	75 18		 jne	 SHORT $LN1@validate_t
  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_task_entity@@YGXPAUENTITY@@@Z@4JA
  00266	83 c0 18	 add	 eax, 24			; 00000018H
  00269	50		 push	 eax
  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026f	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@DICGLJLC@get_local_entity_parent?5?$CIen?0?5LI@
  00274	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN1@validate_t:

; 1308 : 			}
; 1309 : 
; 1310 : 			break;
; 1311 : 		}
; 1312 : 	}
; 1313 : }

  00279	5f		 pop	 edi
  0027a	5e		 pop	 esi
  0027b	5b		 pop	 ebx
  0027c	8b e5		 mov	 esp, ebp
  0027e	5d		 pop	 ebp
  0027f	c2 04 00	 ret	 4
?validate_task_entity@@YGXPAUENTITY@@@Z ENDP		; validate_task_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z
_TEXT	SEGMENT
tv624 = -140						; size = 8
tv528 = -140						; size = 4
tv503 = -140						; size = 4
tv477 = -140						; size = 4
tv453 = -140						; size = 4
tv434 = -140						; size = 4
tv404 = -140						; size = 4
tv380 = -140						; size = 4
tv357 = -140						; size = 4
tv335 = -140						; size = 4
tv312 = -140						; size = 4
tv293 = -140						; size = 4
tv270 = -140						; size = 4
tv249 = -140						; size = 4
tv216 = -140						; size = 4
tv194 = -140						; size = 4
tv173 = -140						; size = 4
tv154 = -140						; size = 4
tv135 = -140						; size = 4
tv520 = -136						; size = 4
tv496 = -136						; size = 4
tv469 = -136						; size = 4
tv446 = -136						; size = 4
tv426 = -136						; size = 4
tv396 = -136						; size = 4
tv372 = -136						; size = 4
tv349 = -136						; size = 4
tv327 = -136						; size = 4
tv305 = -136						; size = 4
tv286 = -136						; size = 4
tv262 = -136						; size = 4
tv241 = -136						; size = 4
tv208 = -136						; size = 4
tv187 = -136						; size = 4
tv166 = -136						; size = 4
tv147 = -136						; size = 4
tv95 = -136						; size = 4
$T1 = -132						; size = 4
$T2 = -128						; size = 4
_keysite_pos$ = -60					; size = 4
_keysite_type$ = -56					; size = 4
_group_type$ = -52					; size = 4
_keysite$ = -48						; size = 4
_group$ = -44						; size = 4
_ts$ = -40						; size = 4
_best_keysite$ = -36					; size = 4
_force$ = -32						; size = 4
_range$ = -28						; size = 4
_max_range$ = -24					; size = 4
_task_count$ = -20					; size = 4
_score$ = -16						; size = 4
_best_score$ = -12					; size = 4
_x$ = -8						; size = 4
_task_landing_types$ = -4				; size = 4
_task_type$ = 8						; size = 4
_side$ = 12						; size = 4
_pos$ = 16						; size = 4
_check_capacity$ = 20					; size = 4
?find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z PROC ; find_most_suitable_keysite_for_task, COMDAT

; 1027 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1028 : 
; 1029 : 	int
; 1030 : 		task_landing_types;
; 1031 : 
; 1032 : 	float
; 1033 : 		x,
; 1034 : 		best_score,
; 1035 : 		score,
; 1036 : 		task_count,
; 1037 : 		max_range,
; 1038 : 		range;
; 1039 : 
; 1040 : 	entity
; 1041 : 		*force,
; 1042 : 		*best_keysite,
; 1043 : 		*ts,
; 1044 : 		*group,
; 1045 : 		*keysite;
; 1046 : 
; 1047 : 	entity_sub_types
; 1048 : 		group_type,
; 1049 : 		keysite_type;
; 1050 : 
; 1051 : 	vec3d
; 1052 : 		*keysite_pos;
; 1053 : 
; 1054 : 	ASSERT (pos);

  0000c	83 7d 10 00	 cmp	 DWORD PTR _pos$[ebp], 0
  00010	75 18		 jne	 SHORT $LN8@find_most_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00017	83 c0 1b	 add	 eax, 27			; 0000001bH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@find_most_:

; 1055 : 
; 1056 : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00031	74 18		 je	 SHORT $LN9@find_most_
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00038	83 c0 1d	 add	 eax, 29			; 0000001dH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@find_most_:

; 1057 : 
; 1058 : 	//
; 1059 : 	// Find Entity types suitable for task
; 1060 : 	//
; 1061 : 
; 1062 : 	task_landing_types = task_database [task_type].landing_types;

  0004b	6b 45 08 50	 imul	 eax, DWORD PTR _task_type$[ebp], 80
  0004f	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52]
  00055	89 4d fc	 mov	 DWORD PTR _task_landing_types$[ebp], ecx

; 1063 : 
; 1064 : 	ASSERT (task_landing_types > 0);

  00058	83 7d fc 00	 cmp	 DWORD PTR _task_landing_types$[ebp], 0
  0005c	7f 18		 jg	 SHORT $LN10@find_most_
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00063	83 c0 25	 add	 eax, 37			; 00000025H
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FPMBJPKK@task_landing_types?5?$DO?50@
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@find_most_:

; 1065 : 
; 1066 : 	#if DEBUG_MODULE
; 1067 : 
; 1068 : 	debug_log ("-------------------------------------");
; 1069 : 	debug_log ("Task: %s", task_database [task_type].full_name);
; 1070 : 
; 1071 : 	#endif
; 1072 : 
; 1073 : 	//
; 1074 : 	// Find closest keysite with lowest task count and most suitable groups
; 1075 : 	//
; 1076 : 
; 1077 : 	max_range = KEYSITE_TASK_MAX_RANGE_BIAS;

  00076	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47c35000
  0007e	f3 0f 11 45 e8	 movss	 DWORD PTR _max_range$[ebp], xmm0

; 1078 : 
; 1079 : 	force = get_local_force_entity (side);

  00083	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  0008c	89 45 e0	 mov	 DWORD PTR _force$[ebp], eax

; 1080 : 
; 1081 : 	ASSERT (force);

  0008f	83 7d e0 00	 cmp	 DWORD PTR _force$[ebp], 0
  00093	75 18		 jne	 SHORT $LN11@find_most_
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  0009a	83 c0 36	 add	 eax, 54			; 00000036H
  0009d	50		 push	 eax
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  000a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@find_most_:

; 1082 : 
; 1083 : 	best_keysite = NULL;

  000ad	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _best_keysite$[ebp], 0

; 1084 : 
; 1085 : 	best_score = 0.0;

  000b4	0f 57 c0	 xorps	 xmm0, xmm0
  000b7	f3 0f 11 45 f4	 movss	 DWORD PTR _best_score$[ebp], xmm0

; 1086 : 
; 1087 : 	keysite = get_local_entity_first_child (force, LIST_TYPE_KEYSITE_FORCE);

  000bc	83 7d e0 00	 cmp	 DWORD PTR _force$[ebp], 0
  000c0	74 0d		 je	 SHORT $LN30@find_most_
  000c2	8b 45 e0	 mov	 eax, DWORD PTR _force$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000cd	eb 24		 jmp	 SHORT $LN31@find_most_
$LN30@find_most_:
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  000d5	83 c2 3c	 add	 edx, 60			; 0000003cH
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e9	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN31@find_most_:
  000f3	b9 01 00 00 00	 mov	 ecx, 1
  000f8	85 c9		 test	 ecx, ecx
  000fa	74 0c		 je	 SHORT $LN32@find_most_
  000fc	c7 85 74 ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv135[ebp], 21 ; 00000015H
  00106	eb 24		 jmp	 SHORT $LN33@find_most_
$LN32@find_most_:
  00108	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  0010e	83 c2 3c	 add	 edx, 60			; 0000003cH
  00111	52		 push	 edx
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00122	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN33@find_most_:
  0012c	6a 15		 push	 21			; 00000015H
  0012e	8b 4d e0	 mov	 ecx, DWORD PTR _force$[ebp]
  00131	51		 push	 ecx
  00132	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv95[ebp], 180
  0013c	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  00142	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00149	ff d1		 call	 ecx
  0014b	89 45 d0	 mov	 DWORD PTR _keysite$[ebp], eax
$LN103@find_most_:

; 1088 : 
; 1089 : 	while (keysite)

  0014e	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00152	0f 84 d4 0b 00
	00		 je	 $LN3@find_most_

; 1090 : 	{
; 1091 : 		if (get_local_entity_int_value (keysite, INT_TYPE_IN_USE))

  00158	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0015c	74 0d		 je	 SHORT $LN34@find_most_
  0015e	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  00161	8b 08		 mov	 ecx, DWORD PTR [eax]
  00163	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  00169	eb 20		 jmp	 SHORT $LN35@find_most_
$LN34@find_most_:
  0016b	68 43 04 00 00	 push	 1091			; 00000443H
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00175	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0017b	52		 push	 edx
  0017c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00181	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], 0
$LN35@find_most_:
  0018b	b8 01 00 00 00	 mov	 eax, 1
  00190	85 c0		 test	 eax, eax
  00192	74 0c		 je	 SHORT $LN36@find_most_
  00194	c7 85 74 ff ff
	ff 6d 00 00 00	 mov	 DWORD PTR tv154[ebp], 109 ; 0000006dH
  0019e	eb 20		 jmp	 SHORT $LN37@find_most_
$LN36@find_most_:
  001a0	68 43 04 00 00	 push	 1091			; 00000443H
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001b0	51		 push	 ecx
  001b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b6	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv154[ebp], 0
$LN37@find_most_:
  001c0	6a 6d		 push	 109			; 0000006dH
  001c2	8b 55 d0	 mov	 edx, DWORD PTR _keysite$[ebp]
  001c5	52		 push	 edx
  001c6	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv147[ebp], 1116
  001d0	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv154[ebp]
  001d6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001dd	ff d2		 call	 edx
  001df	85 c0		 test	 eax, eax
  001e1	0f 84 a8 0a 00
	00		 je	 $LN28@find_most_

; 1092 : 		{
; 1093 : 			if (get_local_entity_first_child (keysite, LIST_TYPE_KEYSITE_GROUP))

  001e7	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  001eb	74 0d		 je	 SHORT $LN38@find_most_
  001ed	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  001f0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f2	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv166[ebp], ecx
  001f8	eb 20		 jmp	 SHORT $LN39@find_most_
$LN38@find_most_:
  001fa	68 45 04 00 00	 push	 1093			; 00000445H
  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00204	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0020a	52		 push	 edx
  0020b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00210	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
$LN39@find_most_:
  0021a	b8 01 00 00 00	 mov	 eax, 1
  0021f	85 c0		 test	 eax, eax
  00221	74 0c		 je	 SHORT $LN40@find_most_
  00223	c7 85 74 ff ff
	ff 16 00 00 00	 mov	 DWORD PTR tv173[ebp], 22 ; 00000016H
  0022d	eb 20		 jmp	 SHORT $LN41@find_most_
$LN40@find_most_:
  0022f	68 45 04 00 00	 push	 1093			; 00000445H
  00234	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00239	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0023f	51		 push	 ecx
  00240	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00245	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv173[ebp], 0
$LN41@find_most_:
  0024f	6a 16		 push	 22			; 00000016H
  00251	8b 55 d0	 mov	 edx, DWORD PTR _keysite$[ebp]
  00254	52		 push	 edx
  00255	69 85 78 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv166[ebp], 180
  0025f	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv173[ebp]
  00265	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0026c	ff d2		 call	 edx
  0026e	85 c0		 test	 eax, eax
  00270	0f 84 19 0a 00
	00		 je	 $LN28@find_most_

; 1094 : 			{
; 1095 : 				if ((task_landing_types & (1 << ENTITY_SUB_TYPE_LANDING_GROUND)) || (get_local_entity_int_value (keysite, INT_TYPE_LANDING_TYPES) & task_landing_types))

  00276	8b 45 fc	 mov	 eax, DWORD PTR _task_landing_types$[ebp]
  00279	83 e0 08	 and	 eax, 8
  0027c	0f 85 90 00 00
	00		 jne	 $LN15@find_most_
  00282	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00286	74 0d		 je	 SHORT $LN42@find_most_
  00288	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  0028b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0028d	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv187[ebp], ecx
  00293	eb 20		 jmp	 SHORT $LN43@find_most_
$LN42@find_most_:
  00295	68 47 04 00 00	 push	 1095			; 00000447H
  0029a	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a5	52		 push	 edx
  002a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ab	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv187[ebp], 0
$LN43@find_most_:
  002b5	b8 01 00 00 00	 mov	 eax, 1
  002ba	85 c0		 test	 eax, eax
  002bc	74 0c		 je	 SHORT $LN44@find_most_
  002be	c7 85 74 ff ff
	ff 77 00 00 00	 mov	 DWORD PTR tv194[ebp], 119 ; 00000077H
  002c8	eb 20		 jmp	 SHORT $LN45@find_most_
$LN44@find_most_:
  002ca	68 47 04 00 00	 push	 1095			; 00000447H
  002cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002da	51		 push	 ecx
  002db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e0	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv194[ebp], 0
$LN45@find_most_:
  002ea	6a 77		 push	 119			; 00000077H
  002ec	8b 55 d0	 mov	 edx, DWORD PTR _keysite$[ebp]
  002ef	52		 push	 edx
  002f0	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv187[ebp], 1116
  002fa	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv194[ebp]
  00300	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00307	ff d2		 call	 edx
  00309	23 45 fc	 and	 eax, DWORD PTR _task_landing_types$[ebp]
  0030c	0f 84 7d 09 00
	00		 je	 $LN28@find_most_
$LN15@find_most_:

; 1096 : 				{
; 1097 : 					keysite_type = get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE);

  00312	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00316	74 0d		 je	 SHORT $LN46@find_most_
  00318	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  0031b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031d	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv208[ebp], ecx
  00323	eb 24		 jmp	 SHORT $LN47@find_most_
$LN46@find_most_:
  00325	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  0032b	83 c2 46	 add	 edx, 70			; 00000046H
  0032e	52		 push	 edx
  0032f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00339	50		 push	 eax
  0033a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN47@find_most_:
  00349	b9 01 00 00 00	 mov	 ecx, 1
  0034e	85 c9		 test	 ecx, ecx
  00350	74 0c		 je	 SHORT $LN48@find_most_
  00352	c7 85 74 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv216[ebp], 52 ; 00000034H
  0035c	eb 24		 jmp	 SHORT $LN49@find_most_
$LN48@find_most_:
  0035e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00364	83 c2 46	 add	 edx, 70			; 00000046H
  00367	52		 push	 edx
  00368	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0036d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00372	50		 push	 eax
  00373	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00378	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv216[ebp], 0
$LN49@find_most_:
  00382	6a 34		 push	 52			; 00000034H
  00384	8b 4d d0	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00387	51		 push	 ecx
  00388	69 95 78 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv208[ebp], 1116
  00392	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv216[ebp]
  00398	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0039f	ff d1		 call	 ecx
  003a1	89 45 c8	 mov	 DWORD PTR _keysite_type$[ebp], eax

; 1098 : 
; 1099 : 					if ((!check_capacity) || (keysite_database [keysite_type].air_force_capacity >= task_database [task_type].keysite_air_force_capacity))

  003a4	83 7d 14 00	 cmp	 DWORD PTR _check_capacity$[ebp], 0
  003a8	74 28		 je	 SHORT $LN17@find_most_
  003aa	6b 45 c8 44	 imul	 eax, DWORD PTR _keysite_type$[ebp], 68
  003ae	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  003b4	c1 e9 0f	 shr	 ecx, 15			; 0000000fH
  003b7	83 e1 03	 and	 ecx, 3
  003ba	6b 55 08 50	 imul	 edx, DWORD PTR _task_type$[ebp], 80
  003be	8b 82 28 00 00
	00		 mov	 eax, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+40]
  003c4	c1 e8 05	 shr	 eax, 5
  003c7	83 e0 03	 and	 eax, 3
  003ca	3b c8		 cmp	 ecx, eax
  003cc	0f 82 bd 08 00
	00		 jb	 $LN28@find_most_
$LN17@find_most_:

; 1100 : 					{
; 1101 : 						score = 0.0;

  003d2	0f 57 c0	 xorps	 xmm0, xmm0
  003d5	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0

; 1102 : 
; 1103 : 						#if DEBUG_MODULE
; 1104 : 
; 1105 : 						debug_log ("Keysite: %s", get_local_entity_string (keysite, STRING_TYPE_KEYSITE_NAME));
; 1106 : 
; 1107 : 						#endif
; 1108 : 
; 1109 : 						//
; 1110 : 						// bias keysites with more groups suitable for this type
; 1111 : 						//
; 1112 : 
; 1113 : 						if (check_capacity)

  003da	83 7d 14 00	 cmp	 DWORD PTR _check_capacity$[ebp], 0
  003de	0f 84 30 03 00
	00		 je	 $LN18@find_most_

; 1114 : 						{
; 1115 : 		
; 1116 : 							group = get_local_entity_first_child (keysite, LIST_TYPE_KEYSITE_GROUP);

  003e4	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  003e8	74 0d		 je	 SHORT $LN50@find_most_
  003ea	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  003ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ef	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv241[ebp], ecx
  003f5	eb 24		 jmp	 SHORT $LN51@find_most_
$LN50@find_most_:
  003f7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  003fd	83 c2 59	 add	 edx, 89			; 00000059H
  00400	52		 push	 edx
  00401	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00406	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0040b	50		 push	 eax
  0040c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00411	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv241[ebp], 0
$LN51@find_most_:
  0041b	b9 01 00 00 00	 mov	 ecx, 1
  00420	85 c9		 test	 ecx, ecx
  00422	74 0c		 je	 SHORT $LN52@find_most_
  00424	c7 85 74 ff ff
	ff 16 00 00 00	 mov	 DWORD PTR tv249[ebp], 22 ; 00000016H
  0042e	eb 24		 jmp	 SHORT $LN53@find_most_
$LN52@find_most_:
  00430	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00436	83 c2 59	 add	 edx, 89			; 00000059H
  00439	52		 push	 edx
  0043a	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00444	50		 push	 eax
  00445	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044a	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv249[ebp], 0
$LN53@find_most_:
  00454	6a 16		 push	 22			; 00000016H
  00456	8b 4d d0	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00459	51		 push	 ecx
  0045a	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv241[ebp], 180
  00464	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv249[ebp]
  0046a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00471	ff d1		 call	 ecx
  00473	89 45 d4	 mov	 DWORD PTR _group$[ebp], eax
$LN4@find_most_:

; 1117 : 		
; 1118 : 							while (group)

  00476	83 7d d4 00	 cmp	 DWORD PTR _group$[ebp], 0
  0047a	0f 84 92 02 00
	00		 je	 $LN5@find_most_

; 1119 : 							{
; 1120 : 								group_type = get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE); 

  00480	83 7d d4 00	 cmp	 DWORD PTR _group$[ebp], 0
  00484	74 0d		 je	 SHORT $LN54@find_most_
  00486	8b 45 d4	 mov	 eax, DWORD PTR _group$[ebp]
  00489	8b 08		 mov	 ecx, DWORD PTR [eax]
  0048b	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv262[ebp], ecx
  00491	eb 24		 jmp	 SHORT $LN55@find_most_
$LN54@find_most_:
  00493	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00499	83 c2 5d	 add	 edx, 93			; 0000005dH
  0049c	52		 push	 edx
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004a7	50		 push	 eax
  004a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ad	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv262[ebp], 0
$LN55@find_most_:
  004b7	b9 01 00 00 00	 mov	 ecx, 1
  004bc	85 c9		 test	 ecx, ecx
  004be	74 0c		 je	 SHORT $LN56@find_most_
  004c0	c7 85 74 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv270[ebp], 52 ; 00000034H
  004ca	eb 24		 jmp	 SHORT $LN57@find_most_
$LN56@find_most_:
  004cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  004d2	83 c2 5d	 add	 edx, 93			; 0000005dH
  004d5	52		 push	 edx
  004d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004e0	50		 push	 eax
  004e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e6	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv270[ebp], 0
$LN57@find_most_:
  004f0	6a 34		 push	 52			; 00000034H
  004f2	8b 4d d4	 mov	 ecx, DWORD PTR _group$[ebp]
  004f5	51		 push	 ecx
  004f6	69 95 78 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv262[ebp], 1116
  00500	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv270[ebp]
  00506	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0050d	ff d1		 call	 ecx
  0050f	89 45 cc	 mov	 DWORD PTR _group_type$[ebp], eax

; 1121 : 	
; 1122 : 								if (get_group_to_task_suitability (group_type, task_type) > 0.0)

  00512	8b 45 08	 mov	 eax, DWORD PTR _task_type$[ebp]
  00515	50		 push	 eax
  00516	8b 4d cc	 mov	 ecx, DWORD PTR _group_type$[ebp]
  00519	51		 push	 ecx
  0051a	e8 00 00 00 00	 call	 ?get_group_to_task_suitability@@YGMHH@Z ; get_group_to_task_suitability
  0051f	dd 9d 74 ff ff
	ff		 fstp	 QWORD PTR tv624[ebp]
  00525	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv624[ebp]
  0052d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00535	0f 86 40 01 00
	00		 jbe	 $LN23@find_most_

; 1123 : 								{
; 1124 : 									if (get_local_entity_int_value (group, INT_TYPE_ALIVE))

  0053b	83 7d d4 00	 cmp	 DWORD PTR _group$[ebp], 0
  0053f	74 0d		 je	 SHORT $LN58@find_most_
  00541	8b 45 d4	 mov	 eax, DWORD PTR _group$[ebp]
  00544	8b 08		 mov	 ecx, DWORD PTR [eax]
  00546	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv286[ebp], ecx
  0054c	eb 20		 jmp	 SHORT $LN59@find_most_
$LN58@find_most_:
  0054e	68 64 04 00 00	 push	 1124			; 00000464H
  00553	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00558	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0055e	52		 push	 edx
  0055f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00564	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv286[ebp], 0
$LN59@find_most_:
  0056e	b8 01 00 00 00	 mov	 eax, 1
  00573	85 c0		 test	 eax, eax
  00575	74 0c		 je	 SHORT $LN60@find_most_
  00577	c7 85 74 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv293[ebp], 7
  00581	eb 20		 jmp	 SHORT $LN61@find_most_
$LN60@find_most_:
  00583	68 64 04 00 00	 push	 1124			; 00000464H
  00588	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0058d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00593	51		 push	 ecx
  00594	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00599	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv293[ebp], 0
$LN61@find_most_:
  005a3	6a 07		 push	 7
  005a5	8b 55 d4	 mov	 edx, DWORD PTR _group$[ebp]
  005a8	52		 push	 edx
  005a9	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv286[ebp], 1116
  005b3	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv293[ebp]
  005b9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  005c0	ff d2		 call	 edx
  005c2	85 c0		 test	 eax, eax
  005c4	0f 84 b1 00 00
	00		 je	 $LN23@find_most_

; 1125 : 									{
; 1126 : 										if (get_local_entity_int_value (group, INT_TYPE_GROUP_MODE) == GROUP_MODE_IDLE)

  005ca	83 7d d4 00	 cmp	 DWORD PTR _group$[ebp], 0
  005ce	74 0d		 je	 SHORT $LN62@find_most_
  005d0	8b 45 d4	 mov	 eax, DWORD PTR _group$[ebp]
  005d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  005d5	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv305[ebp], ecx
  005db	eb 20		 jmp	 SHORT $LN63@find_most_
$LN62@find_most_:
  005dd	68 66 04 00 00	 push	 1126			; 00000466H
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005ed	52		 push	 edx
  005ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f3	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv305[ebp], 0
$LN63@find_most_:
  005fd	b8 01 00 00 00	 mov	 eax, 1
  00602	85 c0		 test	 eax, eax
  00604	74 0c		 je	 SHORT $LN64@find_most_
  00606	c7 85 74 ff ff
	ff 4d 00 00 00	 mov	 DWORD PTR tv312[ebp], 77 ; 0000004dH
  00610	eb 20		 jmp	 SHORT $LN65@find_most_
$LN64@find_most_:
  00612	68 66 04 00 00	 push	 1126			; 00000466H
  00617	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0061c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00622	51		 push	 ecx
  00623	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00628	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv312[ebp], 0
$LN65@find_most_:
  00632	6a 4d		 push	 77			; 0000004dH
  00634	8b 55 d4	 mov	 edx, DWORD PTR _group$[ebp]
  00637	52		 push	 edx
  00638	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv305[ebp], 1116
  00642	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv312[ebp]
  00648	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0064f	ff d2		 call	 edx
  00651	85 c0		 test	 eax, eax
  00653	75 14		 jne	 SHORT $LN22@find_most_

; 1127 : 										{
; 1128 : 											score += KEYSITE_TASK_IDLE_GROUP_COUNT_BIAS;

  00655	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _score$[ebp]
  0065a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40a00000
  00662	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0

; 1129 : 										}
; 1130 : 										else

  00667	eb 12		 jmp	 SHORT $LN23@find_most_
$LN22@find_most_:

; 1131 : 										{
; 1132 : 											score += KEYSITE_TASK_BUSY_GROUP_COUNT_BIAS;

  00669	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _score$[ebp]
  0066e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00676	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0
$LN23@find_most_:

; 1133 : 										}
; 1134 : 									}
; 1135 : 								}
; 1136 : 		
; 1137 : 								group = get_local_entity_child_succ (group, LIST_TYPE_KEYSITE_GROUP);

  0067b	83 7d d4 00	 cmp	 DWORD PTR _group$[ebp], 0
  0067f	74 0d		 je	 SHORT $LN66@find_most_
  00681	8b 45 d4	 mov	 eax, DWORD PTR _group$[ebp]
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv327[ebp], ecx
  0068c	eb 24		 jmp	 SHORT $LN67@find_most_
$LN66@find_most_:
  0068e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00694	83 c2 6e	 add	 edx, 110		; 0000006eH
  00697	52		 push	 edx
  00698	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0069d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006a2	50		 push	 eax
  006a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006a8	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv327[ebp], 0
$LN67@find_most_:
  006b2	b9 01 00 00 00	 mov	 ecx, 1
  006b7	85 c9		 test	 ecx, ecx
  006b9	74 0c		 je	 SHORT $LN68@find_most_
  006bb	c7 85 74 ff ff
	ff 16 00 00 00	 mov	 DWORD PTR tv335[ebp], 22 ; 00000016H
  006c5	eb 24		 jmp	 SHORT $LN69@find_most_
$LN68@find_most_:
  006c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  006cd	83 c2 6e	 add	 edx, 110		; 0000006eH
  006d0	52		 push	 edx
  006d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  006d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  006db	50		 push	 eax
  006dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006e1	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv335[ebp], 0
$LN69@find_most_:
  006eb	6a 16		 push	 22			; 00000016H
  006ed	8b 4d d4	 mov	 ecx, DWORD PTR _group$[ebp]
  006f0	51		 push	 ecx
  006f1	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv327[ebp], 180
  006fb	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv335[ebp]
  00701	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00708	ff d1		 call	 ecx
  0070a	89 45 d4	 mov	 DWORD PTR _group$[ebp], eax

; 1138 : 							}

  0070d	e9 64 fd ff ff	 jmp	 $LN4@find_most_
$LN5@find_most_:

; 1139 : 		
; 1140 : 							#if DEBUG_MODULE
; 1141 : 	
; 1142 : 							debug_log ("Group Score: %f", score);
; 1143 : 	
; 1144 : 							#endif
; 1145 : 						}
; 1146 : 						else

  00712	eb 0d		 jmp	 SHORT $LN19@find_most_
$LN18@find_most_:

; 1147 : 						{
; 1148 : 
; 1149 : 							score = KEYSITE_TASK_MAX_GROUP_COUNT_BIAS;

  00714	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41400000
  0071c	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0
$LN19@find_most_:

; 1150 : 						}
; 1151 : 
; 1152 : 						if (score == 0.0)

  00721	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _score$[ebp]
  00726	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0072e	9f		 lahf
  0072f	f6 c4 44	 test	 ah, 68			; 00000044H
  00732	0f 8a 97 00 00
	00		 jp	 $LN24@find_most_

; 1153 : 						{
; 1154 : 							keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  00738	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0073c	74 0d		 je	 SHORT $LN70@find_most_
  0073e	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  00741	8b 08		 mov	 ecx, DWORD PTR [eax]
  00743	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv349[ebp], ecx
  00749	eb 24		 jmp	 SHORT $LN71@find_most_
$LN70@find_most_:
  0074b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00751	83 c2 7f	 add	 edx, 127		; 0000007fH
  00754	52		 push	 edx
  00755	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0075a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00765	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv349[ebp], 0
$LN71@find_most_:
  0076f	b9 01 00 00 00	 mov	 ecx, 1
  00774	85 c9		 test	 ecx, ecx
  00776	74 0c		 je	 SHORT $LN72@find_most_
  00778	c7 85 74 ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv357[ebp], 21 ; 00000015H
  00782	eb 24		 jmp	 SHORT $LN73@find_most_
$LN72@find_most_:
  00784	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  0078a	83 c2 7f	 add	 edx, 127		; 0000007fH
  0078d	52		 push	 edx
  0078e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00793	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00798	50		 push	 eax
  00799	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0079e	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv357[ebp], 0
$LN73@find_most_:
  007a8	6a 15		 push	 21			; 00000015H
  007aa	8b 4d d0	 mov	 ecx, DWORD PTR _keysite$[ebp]
  007ad	51		 push	 ecx
  007ae	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv349[ebp], 180
  007b8	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv357[ebp]
  007be	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  007c5	ff d1		 call	 ecx
  007c7	89 45 d0	 mov	 DWORD PTR _keysite$[ebp], eax

; 1155 : 
; 1156 : 							continue;

  007ca	e9 7f f9 ff ff	 jmp	 $LN103@find_most_
$LN24@find_most_:

; 1157 : 						}
; 1158 : 						
; 1159 : 						score = min (score, KEYSITE_TASK_MAX_GROUP_COUNT_BIAS);

  007cf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41400000
  007d7	f3 0f 11 45 80	 movss	 DWORD PTR $T2[ebp], xmm0
  007dc	8d 45 80	 lea	 eax, DWORD PTR $T2[ebp]
  007df	50		 push	 eax
  007e0	8d 4d f0	 lea	 ecx, DWORD PTR _score$[ebp]
  007e3	51		 push	 ecx
  007e4	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  007e9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  007ed	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0

; 1160 : 
; 1161 : 						//
; 1162 : 						// find distance between keysite and task origin
; 1163 : 						//
; 1164 : 							
; 1165 : 						keysite_pos = get_local_entity_vec3d_ptr (keysite, VEC3D_TYPE_POSITION);

  007f2	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  007f6	74 0d		 je	 SHORT $LN74@find_most_
  007f8	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  007fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007fd	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv372[ebp], ecx
  00803	eb 27		 jmp	 SHORT $LN75@find_most_
$LN74@find_most_:
  00805	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  0080b	81 c2 8a 00 00
	00		 add	 edx, 138		; 0000008aH
  00811	52		 push	 edx
  00812	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00817	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0081c	50		 push	 eax
  0081d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00822	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv372[ebp], 0
$LN75@find_most_:
  0082c	b9 01 00 00 00	 mov	 ecx, 1
  00831	85 c9		 test	 ecx, ecx
  00833	74 0c		 je	 SHORT $LN76@find_most_
  00835	c7 85 74 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv380[ebp], 8
  0083f	eb 27		 jmp	 SHORT $LN77@find_most_
$LN76@find_most_:
  00841	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00847	81 c2 8a 00 00
	00		 add	 edx, 138		; 0000008aH
  0084d	52		 push	 edx
  0084e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00853	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00858	50		 push	 eax
  00859	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0085e	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv380[ebp], 0
$LN77@find_most_:
  00868	6a 08		 push	 8
  0086a	8b 4d d0	 mov	 ecx, DWORD PTR _keysite$[ebp]
  0086d	51		 push	 ecx
  0086e	6b 95 78 ff ff
	ff 60		 imul	 edx, DWORD PTR tv372[ebp], 96
  00875	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv380[ebp]
  0087b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00882	ff d1		 call	 ecx
  00884	89 45 c4	 mov	 DWORD PTR _keysite_pos$[ebp], eax

; 1166 : 			
; 1167 : 						range = get_approx_2d_range (keysite_pos, pos);

  00887	8b 45 10	 mov	 eax, DWORD PTR _pos$[ebp]
  0088a	50		 push	 eax
  0088b	8b 4d c4	 mov	 ecx, DWORD PTR _keysite_pos$[ebp]
  0088e	51		 push	 ecx
  0088f	e8 00 00 00 00	 call	 ?get_approx_2d_range@@YGMPBUVEC3D@@0@Z ; get_approx_2d_range
  00894	d9 5d e4	 fstp	 DWORD PTR _range$[ebp]

; 1168 : 
; 1169 : 						#if DEBUG_MODULE
; 1170 : 
; 1171 : 						debug_log ("Actual Range: %f", range);
; 1172 : 
; 1173 : 						#endif
; 1174 : 
; 1175 : 						if (range >= max_range)

  00897	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _range$[ebp]
  0089c	0f 2f 45 e8	 comiss	 xmm0, DWORD PTR _max_range$[ebp]
  008a0	0f 82 9d 00 00
	00		 jb	 $LN25@find_most_

; 1176 : 						{
; 1177 : 							keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  008a6	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  008aa	74 0d		 je	 SHORT $LN78@find_most_
  008ac	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  008af	8b 08		 mov	 ecx, DWORD PTR [eax]
  008b1	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv396[ebp], ecx
  008b7	eb 27		 jmp	 SHORT $LN79@find_most_
$LN78@find_most_:
  008b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  008bf	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  008c5	52		 push	 edx
  008c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  008cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008d0	50		 push	 eax
  008d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008d6	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv396[ebp], 0
$LN79@find_most_:
  008e0	b9 01 00 00 00	 mov	 ecx, 1
  008e5	85 c9		 test	 ecx, ecx
  008e7	74 0c		 je	 SHORT $LN80@find_most_
  008e9	c7 85 74 ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv404[ebp], 21 ; 00000015H
  008f3	eb 27		 jmp	 SHORT $LN81@find_most_
$LN80@find_most_:
  008f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  008fb	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  00901	52		 push	 edx
  00902	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00907	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0090c	50		 push	 eax
  0090d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00912	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv404[ebp], 0
$LN81@find_most_:
  0091c	6a 15		 push	 21			; 00000015H
  0091e	8b 4d d0	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00921	51		 push	 ecx
  00922	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv396[ebp], 180
  0092c	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv404[ebp]
  00932	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00939	ff d1		 call	 ecx
  0093b	89 45 d0	 mov	 DWORD PTR _keysite$[ebp], eax

; 1178 : 
; 1179 : 							continue;

  0093e	e9 0b f8 ff ff	 jmp	 $LN103@find_most_
$LN25@find_most_:

; 1180 : 						}
; 1181 : 
; 1182 : 						x = ((range / max_range) - 1);

  00943	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _range$[ebp]
  00948	f3 0f 5e 45 e8	 divss	 xmm0, DWORD PTR _max_range$[ebp]
  0094d	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00955	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 1183 : 
; 1184 : 						score *= 2.0 * (x * x * x * x);

  0095a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0095f	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _x$[ebp]
  00964	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _x$[ebp]
  00969	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _x$[ebp]
  0096e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00972	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  0097a	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _score$[ebp]
  0097f	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00983	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00987	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0

; 1185 : 
; 1186 : 						#if DEBUG_MODULE
; 1187 : 
; 1188 : 						debug_log ("Range: %f (new score %f)", range, score);
; 1189 : 
; 1190 : 						#endif
; 1191 : 
; 1192 : 						//
; 1193 : 						// bias keysites with less tasks of this type
; 1194 : 						//
; 1195 : 		
; 1196 : 						task_count = 0.0;

  0098c	0f 57 c0	 xorps	 xmm0, xmm0
  0098f	f3 0f 11 45 ec	 movss	 DWORD PTR _task_count$[ebp], xmm0

; 1197 : 		
; 1198 : 						ts = get_local_entity_first_child (keysite, LIST_TYPE_UNASSIGNED_TASK);

  00994	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00998	74 0d		 je	 SHORT $LN82@find_most_
  0099a	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  0099d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0099f	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv426[ebp], ecx
  009a5	eb 27		 jmp	 SHORT $LN83@find_most_
$LN82@find_most_:
  009a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  009ad	81 c2 ab 00 00
	00		 add	 edx, 171		; 000000abH
  009b3	52		 push	 edx
  009b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  009b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009be	50		 push	 eax
  009bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009c4	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv426[ebp], 0
$LN83@find_most_:
  009ce	b9 01 00 00 00	 mov	 ecx, 1
  009d3	85 c9		 test	 ecx, ecx
  009d5	74 0c		 je	 SHORT $LN84@find_most_
  009d7	c7 85 74 ff ff
	ff 28 00 00 00	 mov	 DWORD PTR tv434[ebp], 40 ; 00000028H
  009e1	eb 27		 jmp	 SHORT $LN85@find_most_
$LN84@find_most_:
  009e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  009e9	81 c2 ab 00 00
	00		 add	 edx, 171		; 000000abH
  009ef	52		 push	 edx
  009f0	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  009f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  009fa	50		 push	 eax
  009fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a00	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv434[ebp], 0
$LN85@find_most_:
  00a0a	6a 28		 push	 40			; 00000028H
  00a0c	8b 4d d0	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00a0f	51		 push	 ecx
  00a10	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv426[ebp], 180
  00a1a	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv434[ebp]
  00a20	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00a27	ff d1		 call	 ecx
  00a29	89 45 d8	 mov	 DWORD PTR _ts$[ebp], eax
$LN6@find_most_:

; 1199 : 		
; 1200 : 						while (ts)

  00a2c	83 7d d8 00	 cmp	 DWORD PTR _ts$[ebp], 0
  00a30	0f 84 3f 01 00
	00		 je	 $LN7@find_most_

; 1201 : 						{
; 1202 : 							if (get_local_entity_int_value (ts, INT_TYPE_ENTITY_SUB_TYPE) == task_type)

  00a36	83 7d d8 00	 cmp	 DWORD PTR _ts$[ebp], 0
  00a3a	74 0d		 je	 SHORT $LN86@find_most_
  00a3c	8b 45 d8	 mov	 eax, DWORD PTR _ts$[ebp]
  00a3f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a41	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv446[ebp], ecx
  00a47	eb 20		 jmp	 SHORT $LN87@find_most_
$LN86@find_most_:
  00a49	68 b2 04 00 00	 push	 1202			; 000004b2H
  00a4e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a53	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a59	52		 push	 edx
  00a5a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a5f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv446[ebp], 0
$LN87@find_most_:
  00a69	b8 01 00 00 00	 mov	 eax, 1
  00a6e	85 c0		 test	 eax, eax
  00a70	74 0c		 je	 SHORT $LN88@find_most_
  00a72	c7 85 74 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv453[ebp], 52 ; 00000034H
  00a7c	eb 20		 jmp	 SHORT $LN89@find_most_
$LN88@find_most_:
  00a7e	68 b2 04 00 00	 push	 1202			; 000004b2H
  00a83	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a88	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a8e	51		 push	 ecx
  00a8f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a94	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv453[ebp], 0
$LN89@find_most_:
  00a9e	6a 34		 push	 52			; 00000034H
  00aa0	8b 55 d8	 mov	 edx, DWORD PTR _ts$[ebp]
  00aa3	52		 push	 edx
  00aa4	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv446[ebp], 1116
  00aae	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv453[ebp]
  00ab4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00abb	ff d2		 call	 edx
  00abd	3b 45 08	 cmp	 eax, DWORD PTR _task_type$[ebp]
  00ac0	75 16		 jne	 SHORT $LN26@find_most_

; 1203 : 							{
; 1204 : 								task_count += 1.0;

  00ac2	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _task_count$[ebp]
  00ac7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00acf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ad3	f3 0f 11 45 ec	 movss	 DWORD PTR _task_count$[ebp], xmm0
$LN26@find_most_:

; 1205 : 							}
; 1206 : 		
; 1207 : 							ts = get_local_entity_child_succ (ts, LIST_TYPE_UNASSIGNED_TASK);

  00ad8	83 7d d8 00	 cmp	 DWORD PTR _ts$[ebp], 0
  00adc	74 0d		 je	 SHORT $LN90@find_most_
  00ade	8b 45 d8	 mov	 eax, DWORD PTR _ts$[ebp]
  00ae1	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ae3	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv469[ebp], ecx
  00ae9	eb 27		 jmp	 SHORT $LN91@find_most_
$LN90@find_most_:
  00aeb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00af1	81 c2 b4 00 00
	00		 add	 edx, 180		; 000000b4H
  00af7	52		 push	 edx
  00af8	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00afd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b02	50		 push	 eax
  00b03	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b08	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv469[ebp], 0
$LN91@find_most_:
  00b12	b9 01 00 00 00	 mov	 ecx, 1
  00b17	85 c9		 test	 ecx, ecx
  00b19	74 0c		 je	 SHORT $LN92@find_most_
  00b1b	c7 85 74 ff ff
	ff 28 00 00 00	 mov	 DWORD PTR tv477[ebp], 40 ; 00000028H
  00b25	eb 27		 jmp	 SHORT $LN93@find_most_
$LN92@find_most_:
  00b27	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00b2d	81 c2 b4 00 00
	00		 add	 edx, 180		; 000000b4H
  00b33	52		 push	 edx
  00b34	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b39	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b3e	50		 push	 eax
  00b3f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b44	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv477[ebp], 0
$LN93@find_most_:
  00b4e	6a 28		 push	 40			; 00000028H
  00b50	8b 4d d8	 mov	 ecx, DWORD PTR _ts$[ebp]
  00b53	51		 push	 ecx
  00b54	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv469[ebp], 180
  00b5e	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv477[ebp]
  00b64	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b6b	ff d1		 call	 ecx
  00b6d	89 45 d8	 mov	 DWORD PTR _ts$[ebp], eax

; 1208 : 						}

  00b70	e9 b7 fe ff ff	 jmp	 $LN6@find_most_
$LN7@find_most_:

; 1209 : 
; 1210 : 						#if DEBUG_MODULE
; 1211 : 
; 1212 : 						debug_log ("Actual Task count: %f", task_count);
; 1213 : 
; 1214 : 						#endif
; 1215 : 
; 1216 : 						task_count = 1.0 - (task_count * KEYSITE_TASK_COUNT_BIAS);

  00b75	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _task_count$[ebp]
  00b7a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3e4ccccd
  00b82	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00b86	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00b8e	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00b92	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00b96	f3 0f 11 45 ec	 movss	 DWORD PTR _task_count$[ebp], xmm0

; 1217 : 
; 1218 : 						task_count = max (task_count, KEYSITE_TASK_COUNT_BIAS);

  00b9b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00ba3	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00bab	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00bb1	50		 push	 eax
  00bb2	8d 4d ec	 lea	 ecx, DWORD PTR _task_count$[ebp]
  00bb5	51		 push	 ecx
  00bb6	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00bbb	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00bbf	f3 0f 11 45 ec	 movss	 DWORD PTR _task_count$[ebp], xmm0

; 1219 : 
; 1220 : 						score *= task_count;

  00bc4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _score$[ebp]
  00bc9	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _task_count$[ebp]
  00bce	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0

; 1221 : 
; 1222 : 						#if DEBUG_MODULE
; 1223 : 
; 1224 : 						debug_log ("Task bias: %f (new score %f)", task_count, score);
; 1225 : 
; 1226 : 						#endif
; 1227 : 
; 1228 : 						//
; 1229 : 						// Less suitable if out-of-action / repairing
; 1230 : 						//
; 1231 : 							
; 1232 : 						if (get_local_entity_int_value (keysite, INT_TYPE_KEYSITE_USABLE_STATE) != KEYSITE_STATE_USABLE)

  00bd3	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00bd7	74 0d		 je	 SHORT $LN94@find_most_
  00bd9	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  00bdc	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bde	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv496[ebp], ecx
  00be4	eb 20		 jmp	 SHORT $LN95@find_most_
$LN94@find_most_:
  00be6	68 d0 04 00 00	 push	 1232			; 000004d0H
  00beb	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bf0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00bf6	52		 push	 edx
  00bf7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bfc	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv496[ebp], 0
$LN95@find_most_:
  00c06	b8 01 00 00 00	 mov	 eax, 1
  00c0b	85 c0		 test	 eax, eax
  00c0d	74 0c		 je	 SHORT $LN96@find_most_
  00c0f	c7 85 74 ff ff
	ff 70 00 00 00	 mov	 DWORD PTR tv503[ebp], 112 ; 00000070H
  00c19	eb 20		 jmp	 SHORT $LN97@find_most_
$LN96@find_most_:
  00c1b	68 d0 04 00 00	 push	 1232			; 000004d0H
  00c20	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c25	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c2b	51		 push	 ecx
  00c2c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c31	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv503[ebp], 0
$LN97@find_most_:
  00c3b	6a 70		 push	 112			; 00000070H
  00c3d	8b 55 d0	 mov	 edx, DWORD PTR _keysite$[ebp]
  00c40	52		 push	 edx
  00c41	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv496[ebp], 1116
  00c4b	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv503[ebp]
  00c51	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00c58	ff d2		 call	 edx
  00c5a	85 c0		 test	 eax, eax
  00c5c	74 16		 je	 SHORT $LN27@find_most_

; 1233 : 						{
; 1234 : 							score *= 0.5;

  00c5e	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _score$[ebp]
  00c63	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00c6b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c6f	f3 0f 11 45 f0	 movss	 DWORD PTR _score$[ebp], xmm0
$LN27@find_most_:

; 1235 : 						}
; 1236 : 							
; 1237 : 						//
; 1238 : 						// Check if best keysite
; 1239 : 						//
; 1240 : 		
; 1241 : 						#if DEBUG_MODULE
; 1242 : 
; 1243 : 						debug_log ("Final Score %f", score);
; 1244 : 
; 1245 : 						#endif
; 1246 : 
; 1247 : 						if (score > best_score)

  00c74	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _score$[ebp]
  00c79	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _best_score$[ebp]
  00c7d	76 10		 jbe	 SHORT $LN28@find_most_

; 1248 : 						{
; 1249 : 							best_keysite = keysite;

  00c7f	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  00c82	89 45 dc	 mov	 DWORD PTR _best_keysite$[ebp], eax

; 1250 : 		
; 1251 : 							best_score = score;

  00c85	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _score$[ebp]
  00c8a	f3 0f 11 45 f4	 movss	 DWORD PTR _best_score$[ebp], xmm0
$LN28@find_most_:

; 1252 : 
; 1253 : 							#if DEBUG_MODULE
; 1254 : 
; 1255 : 							debug_log ("!!** BEST SO FAR**!!");
; 1256 : 
; 1257 : 							#endif
; 1258 : 						}
; 1259 : 					}
; 1260 : 
; 1261 : 					#if DEBUG_MODULE
; 1262 : 
; 1263 : 					debug_log ("                         ");
; 1264 : 
; 1265 : 					#endif
; 1266 : 				}
; 1267 : 			}
; 1268 : 		}
; 1269 : 
; 1270 : 		keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  00c8f	83 7d d0 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00c93	74 0d		 je	 SHORT $LN98@find_most_
  00c95	8b 45 d0	 mov	 eax, DWORD PTR _keysite$[ebp]
  00c98	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c9a	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv520[ebp], ecx
  00ca0	eb 27		 jmp	 SHORT $LN99@find_most_
$LN98@find_most_:
  00ca2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00ca8	81 c2 f3 00 00
	00		 add	 edx, 243		; 000000f3H
  00cae	52		 push	 edx
  00caf	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cb4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00cb9	50		 push	 eax
  00cba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cbf	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv520[ebp], 0
$LN99@find_most_:
  00cc9	b9 01 00 00 00	 mov	 ecx, 1
  00cce	85 c9		 test	 ecx, ecx
  00cd0	74 0c		 je	 SHORT $LN100@find_most_
  00cd2	c7 85 74 ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv528[ebp], 21 ; 00000015H
  00cdc	eb 27		 jmp	 SHORT $LN101@find_most_
$LN100@find_most_:
  00cde	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z@4JA
  00ce4	81 c2 f3 00 00
	00		 add	 edx, 243		; 000000f3H
  00cea	52		 push	 edx
  00ceb	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cf0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00cf5	50		 push	 eax
  00cf6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cfb	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv528[ebp], 0
$LN101@find_most_:
  00d05	6a 15		 push	 21			; 00000015H
  00d07	8b 4d d0	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00d0a	51		 push	 ecx
  00d0b	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv520[ebp], 180
  00d15	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv528[ebp]
  00d1b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00d22	ff d1		 call	 ecx
  00d24	89 45 d0	 mov	 DWORD PTR _keysite$[ebp], eax

; 1271 : 	}

  00d27	e9 22 f4 ff ff	 jmp	 $LN103@find_most_
$LN3@find_most_:

; 1272 : 
; 1273 : 	return (best_keysite);

  00d2c	8b 45 dc	 mov	 eax, DWORD PTR _best_keysite$[ebp]

; 1274 : }

  00d2f	5f		 pop	 edi
  00d30	5e		 pop	 esi
  00d31	5b		 pop	 ebx
  00d32	8b e5		 mov	 esp, ebp
  00d34	5d		 pop	 ebp
  00d35	c2 10 00	 ret	 16			; 00000010H
?find_most_suitable_keysite_for_task@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@H@Z ENDP ; find_most_suitable_keysite_for_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z
_TEXT	SEGMENT
tv83 = -76						; size = 4
tv75 = -72						; size = 4
_group$ = -4						; size = 4
_en$ = 8						; size = 4
?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z PROC ; get_local_entity_primary_task, COMDAT

; 994  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 995  : 	entity
; 996  : 		*group;
; 997  : 
; 998  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_local_:

; 999  : 
; 1000 : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN6@get_local_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN7@get_local_
$LN6@get_local_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  0003d	83 c2 06	 add	 edx, 6
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN7@get_local_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN8@get_local_
  00061	c7 45 b4 19 00
	00 00		 mov	 DWORD PTR tv83[ebp], 25	; 00000019H
  00068	eb 21		 jmp	 SHORT $LN9@get_local_
$LN8@get_local_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00070	83 c2 06	 add	 edx, 6
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN9@get_local_:
  0008b	6a 19		 push	 25			; 00000019H
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00090	51		 push	 ecx
  00091	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  00098	8b 45 b4	 mov	 eax, DWORD PTR tv83[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 1001 : 
; 1002 : 	if (group)

  000a7	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  000ab	74 0d		 je	 SHORT $LN3@get_local_

; 1003 : 	{
; 1004 : 		return get_local_group_primary_task (group);

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_group_primary_task
  000b6	eb 04		 jmp	 SHORT $LN1@get_local_

; 1005 : 	}
; 1006 : 	else

  000b8	eb 02		 jmp	 SHORT $LN1@get_local_
$LN3@get_local_:

; 1007 : 	{
; 1008 : 		return NULL;

  000ba	33 c0		 xor	 eax, eax
$LN1@get_local_:

; 1009 : 	}
; 1010 : }

  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z ENDP ; get_local_entity_primary_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z
_TEXT	SEGMENT
tv183 = -92						; size = 4
tv156 = -92						; size = 4
tv136 = -92						; size = 4
tv83 = -92						; size = 4
tv175 = -88						; size = 4
tv148 = -88						; size = 4
tv128 = -88						; size = 4
tv75 = -88						; size = 4
_count$ = -20						; size = 4
_sub_type$ = -16					; size = 4
_primary_task$ = -12					; size = 4
_task$ = -8						; size = 4
_guide$ = -4						; size = 4
_en$ = 8						; size = 4
?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z PROC ; get_local_group_primary_task, COMDAT

; 944  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 945  : 	entity
; 946  : 		*guide,
; 947  : 		*task,
; 948  : 		*primary_task;
; 949  : 
; 950  : 	entity_sub_types
; 951  : 		sub_type;
; 952  : 
; 953  : 	int
; 954  : 		count;
; 955  : 
; 956  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_local_:

; 957  : 
; 958  : 	count = 0;

  00027	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 959  : 
; 960  : 	primary_task = NULL;

  0002e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _primary_task$[ebp], 0

; 961  : 
; 962  : 	guide = get_local_entity_first_child (en, LIST_TYPE_GUIDE_STACK);

  00035	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00039	74 0a		 je	 SHORT $LN8@get_local_
  0003b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	89 4d a8	 mov	 DWORD PTR tv75[ebp], ecx
  00043	eb 21		 jmp	 SHORT $LN9@get_local_
$LN8@get_local_:
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  0004b	83 c2 12	 add	 edx, 18			; 00000012H
  0004e	52		 push	 edx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@get_local_:
  00066	b9 01 00 00 00	 mov	 ecx, 1
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 09		 je	 SHORT $LN10@get_local_
  0006f	c7 45 a4 11 00
	00 00		 mov	 DWORD PTR tv83[ebp], 17	; 00000011H
  00076	eb 21		 jmp	 SHORT $LN11@get_local_
$LN10@get_local_:
  00078	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  0007e	83 c2 12	 add	 edx, 18			; 00000012H
  00081	52		 push	 edx
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00092	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN11@get_local_:
  00099	6a 11		 push	 17			; 00000011H
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0009e	51		 push	 ecx
  0009f	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  000a6	8b 45 a4	 mov	 eax, DWORD PTR tv83[ebp]
  000a9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000b0	ff d1		 call	 ecx
  000b2	89 45 fc	 mov	 DWORD PTR _guide$[ebp], eax
$LN2@get_local_:

; 963  : 
; 964  : 	while (guide)

  000b5	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000b9	0f 84 a5 01 00
	00		 je	 $LN3@get_local_

; 965  : 	{
; 966  : 		task = get_local_entity_parent (guide, LIST_TYPE_GUIDE);

  000bf	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000c3	74 0a		 je	 SHORT $LN12@get_local_
  000c5	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  000c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ca	89 4d a8	 mov	 DWORD PTR tv128[ebp], ecx
  000cd	eb 21		 jmp	 SHORT $LN13@get_local_
$LN12@get_local_:
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  000d5	83 c2 16	 add	 edx, 22			; 00000016H
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e9	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@get_local_:
  000f0	b9 01 00 00 00	 mov	 ecx, 1
  000f5	85 c9		 test	 ecx, ecx
  000f7	74 09		 je	 SHORT $LN14@get_local_
  000f9	c7 45 a4 10 00
	00 00		 mov	 DWORD PTR tv136[ebp], 16 ; 00000010H
  00100	eb 21		 jmp	 SHORT $LN15@get_local_
$LN14@get_local_:
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00108	83 c2 16	 add	 edx, 22			; 00000016H
  0010b	52		 push	 edx
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN15@get_local_:
  00123	6a 10		 push	 16			; 00000010H
  00125	8b 4d fc	 mov	 ecx, DWORD PTR _guide$[ebp]
  00128	51		 push	 ecx
  00129	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 180
  00130	8b 45 a4	 mov	 eax, DWORD PTR tv136[ebp]
  00133	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0013a	ff d1		 call	 ecx
  0013c	89 45 f8	 mov	 DWORD PTR _task$[ebp], eax

; 967  : 
; 968  : 		sub_type = get_local_entity_int_value (task, INT_TYPE_ENTITY_SUB_TYPE);

  0013f	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  00143	74 0a		 je	 SHORT $LN16@get_local_
  00145	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  00148	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014a	89 4d a8	 mov	 DWORD PTR tv148[ebp], ecx
  0014d	eb 21		 jmp	 SHORT $LN17@get_local_
$LN16@get_local_:
  0014f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00155	83 c2 18	 add	 edx, 24			; 00000018H
  00158	52		 push	 edx
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00169	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN17@get_local_:
  00170	b9 01 00 00 00	 mov	 ecx, 1
  00175	85 c9		 test	 ecx, ecx
  00177	74 09		 je	 SHORT $LN18@get_local_
  00179	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv156[ebp], 52 ; 00000034H
  00180	eb 21		 jmp	 SHORT $LN19@get_local_
$LN18@get_local_:
  00182	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00188	83 c2 18	 add	 edx, 24			; 00000018H
  0018b	52		 push	 edx
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00191	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00196	50		 push	 eax
  00197	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019c	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN19@get_local_:
  001a3	6a 34		 push	 52			; 00000034H
  001a5	8b 4d f8	 mov	 ecx, DWORD PTR _task$[ebp]
  001a8	51		 push	 ecx
  001a9	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv148[ebp], 1116
  001b0	8b 45 a4	 mov	 eax, DWORD PTR tv156[ebp]
  001b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001ba	ff d1		 call	 ecx
  001bc	89 45 f0	 mov	 DWORD PTR _sub_type$[ebp], eax

; 969  : 
; 970  : 		if (task_database [sub_type].primary_task)

  001bf	6b 45 f0 50	 imul	 eax, DWORD PTR _sub_type$[ebp], 80
  001c3	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  001c9	d1 e9		 shr	 ecx, 1
  001cb	83 e1 01	 and	 ecx, 1
  001ce	74 0f		 je	 SHORT $LN5@get_local_

; 971  : 		{
; 972  : 			count ++;

  001d0	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  001d3	83 c0 01	 add	 eax, 1
  001d6	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 973  : 
; 974  : 			primary_task = task;

  001d9	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  001dc	89 45 f4	 mov	 DWORD PTR _primary_task$[ebp], eax
$LN5@get_local_:

; 975  : 
; 976  : 			//
; 977  : 			// could break out / return here, but keep going to check that there is only one primary task
; 978  : 			//								
; 979  : 		}
; 980  : 
; 981  : 		guide = get_local_entity_child_succ (guide, LIST_TYPE_GUIDE_STACK);

  001df	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  001e3	74 0a		 je	 SHORT $LN20@get_local_
  001e5	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  001e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ea	89 4d a8	 mov	 DWORD PTR tv175[ebp], ecx
  001ed	eb 21		 jmp	 SHORT $LN21@get_local_
$LN20@get_local_:
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  001f5	83 c2 25	 add	 edx, 37			; 00000025H
  001f8	52		 push	 edx
  001f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00209	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN21@get_local_:
  00210	b9 01 00 00 00	 mov	 ecx, 1
  00215	85 c9		 test	 ecx, ecx
  00217	74 09		 je	 SHORT $LN22@get_local_
  00219	c7 45 a4 11 00
	00 00		 mov	 DWORD PTR tv183[ebp], 17 ; 00000011H
  00220	eb 21		 jmp	 SHORT $LN23@get_local_
$LN22@get_local_:
  00222	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00228	83 c2 25	 add	 edx, 37			; 00000025H
  0022b	52		 push	 edx
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00231	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00236	50		 push	 eax
  00237	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023c	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv183[ebp], 0
$LN23@get_local_:
  00243	6a 11		 push	 17			; 00000011H
  00245	8b 4d fc	 mov	 ecx, DWORD PTR _guide$[ebp]
  00248	51		 push	 ecx
  00249	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv175[ebp], 180
  00250	8b 45 a4	 mov	 eax, DWORD PTR tv183[ebp]
  00253	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0025a	ff d1		 call	 ecx
  0025c	89 45 fc	 mov	 DWORD PTR _guide$[ebp], eax

; 982  : 	}

  0025f	e9 51 fe ff ff	 jmp	 $LN2@get_local_
$LN3@get_local_:

; 983  : 
; 984  : 	ASSERT (count <= 1);

  00264	83 7d ec 01	 cmp	 DWORD PTR _count$[ebp], 1
  00268	7e 18		 jle	 SHORT $LN6@get_local_
  0026a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_group_primary_task@@YGPAUENTITY@@PAU2@@Z@4JA
  0026f	83 c0 28	 add	 eax, 40			; 00000028H
  00272	50		 push	 eax
  00273	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00278	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IFPMBAGD@count?5?$DM?$DN?51@
  0027d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_local_:

; 985  : 
; 986  : 	return primary_task;

  00282	8b 45 f4	 mov	 eax, DWORD PTR _primary_task$[ebp]

; 987  : }

  00285	5f		 pop	 edi
  00286	5e		 pop	 esi
  00287	5b		 pop	 ebx
  00288	8b e5		 mov	 esp, ebp
  0028a	5d		 pop	 ebp
  0028b	c2 04 00	 ret	 4
?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z ENDP ; get_local_group_primary_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z
_TEXT	SEGMENT
tv130 = -176						; size = 4
tv178 = -172						; size = 4
tv176 = -172						; size = 4
tv90 = -172						; size = 4
tv82 = -172						; size = 4
$T1 = -168						; size = 4
$T2 = -164						; size = 4
$T3 = -160						; size = 4
$T4 = -156						; size = 4
_z2$5 = -88						; size = 4
_x2$6 = -84						; size = 4
_z1$7 = -80						; size = 4
_x1$8 = -76						; size = 4
_dz$9 = -72						; size = 4
_dx$10 = -68						; size = 4
_sz$11 = -64						; size = 4
_sx$12 = -60						; size = 4
_az$13 = -56						; size = 4
_ax$14 = -52						; size = 4
_d$15 = -48						; size = 4
_start_keysite$ = -44					; size = 4
_this_pos$ = -40					; size = 4
_last_pos$ = -36					; size = 4
_raw$ = -32						; size = 4
_difficulty_level$ = -28				; size = 4
_task_level$ = -24					; size = 4
_enemy_sectors$ = -20					; size = 4
_air_threats$ = -16					; size = 4
_z$ = -12						; size = 4
_x$ = -8						; size = 4
_node$ = -4						; size = 4
_task_en$ = 8						; size = 4
_route_air_threat$ = 12					; size = 4
_route_enemy_sectors$ = 16				; size = 4
?assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z PROC	; assess_task_difficulty, COMDAT

; 707  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 708  : 
; 709  : 	//
; 710  : 	// rate task difficulty on :
; 711  : 	//
; 712  : 	//	-	distance travelled in enemy sectors					(0..10)
; 713  : 	//	-	enemy air threats en route								(0..10)
; 714  : 	// -	task type													(0..10)
; 715  : 	//	-	time of day													(0..10)
; 716  : 	//	-	number of wingmen											(0..10)
; 717  : 	//	-	available weapons / fuel								(0..10)
; 718  : 	// -	BASE distance from frontline							(0..10)
; 719  : 	//	-	Number of enemy tasks in destination sector 		(0..10)
; 720  : 	//	-	Number of allied tasks in destination sector 	(0..10)
; 721  : 	//	-	Balance of power											(0..10)
; 722  : 	//
; 723  : 	// total																(0..100)
; 724  : 
; 725  : 	unsigned int
; 726  : 		node;
; 727  : 
; 728  : 	int
; 729  : 		x,
; 730  : 		z,
; 731  : 		air_threats,
; 732  : 		enemy_sectors,
; 733  : 		task_level,
; 734  : 		difficulty_level;
; 735  : 
; 736  : 	task
; 737  : 		*raw;
; 738  : 
; 739  : 	vec3d
; 740  : 		*last_pos,
; 741  : 		*this_pos;
; 742  : 
; 743  : 	entity
; 744  : 		*start_keysite;
; 745  : 
; 746  : 	ASSERT (task_en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN9@assess_tas
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z@4JA
  00017	83 c0 27	 add	 eax, 39			; 00000027H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_07NKFOJBII@task_en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@assess_tas:

; 747  : 
; 748  : 	raw = (task *) get_local_entity_data (task_en);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  0002d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00030	89 4d e0	 mov	 DWORD PTR _raw$[ebp], ecx

; 749  : 
; 750  : 	//
; 751  : 	// task type
; 752  : 	//
; 753  : 
; 754  : 	task_level = task_database [raw->sub_type].difficulty_rating;

  00033	8b 45 e0	 mov	 eax, DWORD PTR _raw$[ebp]
  00036	6b 08 50	 imul	 ecx, DWORD PTR [eax], 80
  00039	8b 91 14 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+20]
  0003f	89 55 e8	 mov	 DWORD PTR _task_level$[ebp], edx

; 755  : 
; 756  : 	//
; 757  : 	// enemy sectors
; 758  : 	//
; 759  : 
; 760  : 	air_threats = 0;

  00042	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _air_threats$[ebp], 0

; 761  : 
; 762  : 	enemy_sectors = 0;

  00049	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _enemy_sectors$[ebp], 0

; 763  : 
; 764  : 	start_keysite = raw->task_link.parent; 

  00050	8b 45 e0	 mov	 eax, DWORD PTR _raw$[ebp]
  00053	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  00056	89 4d d4	 mov	 DWORD PTR _start_keysite$[ebp], ecx

; 765  : 
; 766  : 	if ((start_keysite) && (get_local_entity_type (start_keysite) == ENTITY_TYPE_KEYSITE))

  00059	83 7d d4 00	 cmp	 DWORD PTR _start_keysite$[ebp], 0
  0005d	0f 84 d8 00 00
	00		 je	 $LN10@assess_tas
  00063	83 7d d4 00	 cmp	 DWORD PTR _start_keysite$[ebp], 0
  00067	74 0d		 je	 SHORT $LN21@assess_tas
  00069	8b 45 d4	 mov	 eax, DWORD PTR _start_keysite$[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], ecx
  00074	eb 20		 jmp	 SHORT $LN22@assess_tas
$LN21@assess_tas:
  00076	68 fe 02 00 00	 push	 766			; 000002feH
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00080	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN22@assess_tas:
  00096	83 bd 54 ff ff
	ff 0f		 cmp	 DWORD PTR tv82[ebp], 15	; 0000000fH
  0009d	0f 85 98 00 00
	00		 jne	 $LN10@assess_tas

; 767  : 	{
; 768  : 		//
; 769  : 		// start at the assigned keysite
; 770  : 		//
; 771  : 		
; 772  : 		node = 0;

  000a3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _node$[ebp], 0

; 773  : 
; 774  : 		last_pos = get_local_entity_vec3d_ptr (start_keysite, VEC3D_TYPE_POSITION);

  000aa	83 7d d4 00	 cmp	 DWORD PTR _start_keysite$[ebp], 0
  000ae	74 0d		 je	 SHORT $LN23@assess_tas
  000b0	8b 45 d4	 mov	 eax, DWORD PTR _start_keysite$[ebp]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  000bb	eb 24		 jmp	 SHORT $LN24@assess_tas
$LN23@assess_tas:
  000bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z@4JA
  000c3	83 c2 43	 add	 edx, 67			; 00000043H
  000c6	52		 push	 edx
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d7	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN24@assess_tas:
  000e1	b9 01 00 00 00	 mov	 ecx, 1
  000e6	85 c9		 test	 ecx, ecx
  000e8	74 0c		 je	 SHORT $LN25@assess_tas
  000ea	c7 85 50 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv130[ebp], 8
  000f4	eb 24		 jmp	 SHORT $LN26@assess_tas
$LN25@assess_tas:
  000f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z@4JA
  000fc	83 c2 43	 add	 edx, 67			; 00000043H
  000ff	52		 push	 edx
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00110	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv130[ebp], 0
$LN26@assess_tas:
  0011a	6a 08		 push	 8
  0011c	8b 4d d4	 mov	 ecx, DWORD PTR _start_keysite$[ebp]
  0011f	51		 push	 ecx
  00120	6b 95 54 ff ff
	ff 60		 imul	 edx, DWORD PTR tv90[ebp], 96
  00127	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  0012d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00134	ff d1		 call	 ecx
  00136	89 45 dc	 mov	 DWORD PTR _last_pos$[ebp], eax

; 775  : 	}
; 776  : 	else

  00139	eb 18		 jmp	 SHORT $LN11@assess_tas
$LN10@assess_tas:

; 777  : 	{
; 778  : 		//
; 779  : 		// start at the first point on the route
; 780  : 		//
; 781  : 		
; 782  : 		node = 1;

  0013b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _node$[ebp], 1

; 783  : 
; 784  : 		last_pos = &raw->route_nodes [0];

  00142	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00147	6b c8 00	 imul	 ecx, eax, 0
  0014a	8b 55 e0	 mov	 edx, DWORD PTR _raw$[ebp]
  0014d	03 4a 14	 add	 ecx, DWORD PTR [edx+20]
  00150	89 4d dc	 mov	 DWORD PTR _last_pos$[ebp], ecx
$LN11@assess_tas:

; 785  : 	}
; 786  : 
; 787  : 	for (; node < raw->route_length; node ++)

  00153	eb 09		 jmp	 SHORT $LN4@assess_tas
$LN2@assess_tas:
  00155	8b 45 fc	 mov	 eax, DWORD PTR _node$[ebp]
  00158	83 c0 01	 add	 eax, 1
  0015b	89 45 fc	 mov	 DWORD PTR _node$[ebp], eax
$LN4@assess_tas:
  0015e	8b 45 e0	 mov	 eax, DWORD PTR _raw$[ebp]
  00161	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00167	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0016a	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00170	39 4d fc	 cmp	 DWORD PTR _node$[ebp], ecx
  00173	0f 83 0a 02 00
	00		 jae	 $LN3@assess_tas

; 788  : 	{
; 789  : 		this_pos = &raw->route_nodes [node];

  00179	6b 45 fc 0c	 imul	 eax, DWORD PTR _node$[ebp], 12
  0017d	8b 4d e0	 mov	 ecx, DWORD PTR _raw$[ebp]
  00180	03 41 14	 add	 eax, DWORD PTR [ecx+20]
  00183	89 45 d8	 mov	 DWORD PTR _this_pos$[ebp], eax

; 790  : 
; 791  : 		{
; 792  : 			int
; 793  : 				d, ax, az, sx, sz, dx, dz, x1, z1, x2, z2;
; 794  : 		
; 795  : 			//
; 796  : 			// convert coordinates into sector coordinates
; 797  : 			//
; 798  : 		
; 799  : 			get_x_sector (x1, last_pos->x);

  00186	8d 45 b4	 lea	 eax, DWORD PTR _x1$8[ebp]
  00189	50		 push	 eax
  0018a	8b 4d dc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  0018d	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00191	51		 push	 ecx
  00192	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00197	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0019c	8b 45 b4	 mov	 eax, DWORD PTR _x1$8[ebp]
  0019f	99		 cdq
  001a0	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  001a6	89 45 b4	 mov	 DWORD PTR _x1$8[ebp], eax

; 800  : 			get_z_sector (z1, last_pos->z);

  001a9	8d 45 b0	 lea	 eax, DWORD PTR _z1$7[ebp]
  001ac	50		 push	 eax
  001ad	8b 4d dc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  001b0	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  001b5	51		 push	 ecx
  001b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bb	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  001c0	8b 45 b0	 mov	 eax, DWORD PTR _z1$7[ebp]
  001c3	99		 cdq
  001c4	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  001ca	89 45 b0	 mov	 DWORD PTR _z1$7[ebp], eax

; 801  : 		
; 802  : 			get_x_sector (x2, this_pos->x);

  001cd	8d 45 ac	 lea	 eax, DWORD PTR _x2$6[ebp]
  001d0	50		 push	 eax
  001d1	8b 4d d8	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  001d4	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  001d8	51		 push	 ecx
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  001e3	8b 45 ac	 mov	 eax, DWORD PTR _x2$6[ebp]
  001e6	99		 cdq
  001e7	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  001ed	89 45 ac	 mov	 DWORD PTR _x2$6[ebp], eax

; 803  : 			get_z_sector (z2, this_pos->z);

  001f0	8d 45 a8	 lea	 eax, DWORD PTR _z2$5[ebp]
  001f3	50		 push	 eax
  001f4	8b 4d d8	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  001f7	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  001fc	51		 push	 ecx
  001fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00202	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00207	8b 45 a8	 mov	 eax, DWORD PTR _z2$5[ebp]
  0020a	99		 cdq
  0020b	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00211	89 45 a8	 mov	 DWORD PTR _z2$5[ebp], eax

; 804  : 
; 805  : 			//
; 806  : 			// traverse sectors using bresenham's algorithm
; 807  : 			//
; 808  : 		
; 809  : 			dx = x2 - x1;

  00214	8b 45 ac	 mov	 eax, DWORD PTR _x2$6[ebp]
  00217	2b 45 b4	 sub	 eax, DWORD PTR _x1$8[ebp]
  0021a	89 45 bc	 mov	 DWORD PTR _dx$10[ebp], eax

; 810  : 			dz = z2 - z1;

  0021d	8b 45 a8	 mov	 eax, DWORD PTR _z2$5[ebp]
  00220	2b 45 b0	 sub	 eax, DWORD PTR _z1$7[ebp]
  00223	89 45 b8	 mov	 DWORD PTR _dz$9[ebp], eax

; 811  : 		
; 812  : 			ax = abs( dx ) * 2;

  00226	8b 45 bc	 mov	 eax, DWORD PTR _dx$10[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 _abs
  0022f	83 c4 04	 add	 esp, 4
  00232	d1 e0		 shl	 eax, 1
  00234	89 45 cc	 mov	 DWORD PTR _ax$14[ebp], eax

; 813  : 			az = abs( dz ) * 2;

  00237	8b 45 b8	 mov	 eax, DWORD PTR _dz$9[ebp]
  0023a	50		 push	 eax
  0023b	e8 00 00 00 00	 call	 _abs
  00240	83 c4 04	 add	 esp, 4
  00243	d1 e0		 shl	 eax, 1
  00245	89 45 c8	 mov	 DWORD PTR _az$13[ebp], eax

; 814  : 		
; 815  : 			sx = ( dx > 0 ) ? 1 : -1;

  00248	83 7d bc 00	 cmp	 DWORD PTR _dx$10[ebp], 0
  0024c	7e 0c		 jle	 SHORT $LN27@assess_tas
  0024e	c7 85 54 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv176[ebp], 1
  00258	eb 0a		 jmp	 SHORT $LN28@assess_tas
$LN27@assess_tas:
  0025a	c7 85 54 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv176[ebp], -1
$LN28@assess_tas:
  00264	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv176[ebp]
  0026a	89 45 c4	 mov	 DWORD PTR _sx$12[ebp], eax

; 816  : 			sz = ( dz > 0 ) ? 1 : -1;

  0026d	83 7d b8 00	 cmp	 DWORD PTR _dz$9[ebp], 0
  00271	7e 0c		 jle	 SHORT $LN29@assess_tas
  00273	c7 85 54 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv178[ebp], 1
  0027d	eb 0a		 jmp	 SHORT $LN30@assess_tas
$LN29@assess_tas:
  0027f	c7 85 54 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv178[ebp], -1
$LN30@assess_tas:
  00289	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv178[ebp]
  0028f	89 45 c0	 mov	 DWORD PTR _sz$11[ebp], eax

; 817  : 		
; 818  : 			x = x1;

  00292	8b 45 b4	 mov	 eax, DWORD PTR _x1$8[ebp]
  00295	89 45 f8	 mov	 DWORD PTR _x$[ebp], eax

; 819  : 			z = z1;

  00298	8b 45 b0	 mov	 eax, DWORD PTR _z1$7[ebp]
  0029b	89 45 f4	 mov	 DWORD PTR _z$[ebp], eax

; 820  : 		
; 821  : 			if ( ax > az )

  0029e	8b 45 cc	 mov	 eax, DWORD PTR _ax$14[ebp]
  002a1	3b 45 c8	 cmp	 eax, DWORD PTR _az$13[ebp]
  002a4	7e 6a		 jle	 SHORT $LN12@assess_tas

; 822  : 			{
; 823  : 				d = az - ( ax / 2 );

  002a6	8b 45 cc	 mov	 eax, DWORD PTR _ax$14[ebp]
  002a9	99		 cdq
  002aa	2b c2		 sub	 eax, edx
  002ac	d1 f8		 sar	 eax, 1
  002ae	8b 4d c8	 mov	 ecx, DWORD PTR _az$13[ebp]
  002b1	2b c8		 sub	 ecx, eax
  002b3	89 4d d0	 mov	 DWORD PTR _d$15[ebp], ecx
$LN5@assess_tas:

; 824  : 		
; 825  : 				while ( TRUE )

  002b6	b8 01 00 00 00	 mov	 eax, 1
  002bb	85 c0		 test	 eax, eax
  002bd	74 4f		 je	 SHORT $LN6@assess_tas

; 826  : 				{
; 827  : 					assess_task_sector_difficulty (task_en, x, z, &air_threats, &enemy_sectors);

  002bf	8d 45 ec	 lea	 eax, DWORD PTR _enemy_sectors$[ebp]
  002c2	50		 push	 eax
  002c3	8d 4d f0	 lea	 ecx, DWORD PTR _air_threats$[ebp]
  002c6	51		 push	 ecx
  002c7	8b 55 f4	 mov	 edx, DWORD PTR _z$[ebp]
  002ca	52		 push	 edx
  002cb	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  002ce	50		 push	 eax
  002cf	8b 4d 08	 mov	 ecx, DWORD PTR _task_en$[ebp]
  002d2	51		 push	 ecx
  002d3	e8 00 00 00 00	 call	 ?assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z ; assess_task_sector_difficulty

; 828  : 
; 829  : 					if ( x == x2 ) break;

  002d8	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  002db	3b 45 ac	 cmp	 eax, DWORD PTR _x2$6[ebp]
  002de	75 02		 jne	 SHORT $LN14@assess_tas
  002e0	eb 2c		 jmp	 SHORT $LN6@assess_tas
$LN14@assess_tas:

; 830  : 		
; 831  : 					if ( d >= 0 )

  002e2	83 7d d0 00	 cmp	 DWORD PTR _d$15[ebp], 0
  002e6	7c 12		 jl	 SHORT $LN15@assess_tas

; 832  : 					{
; 833  : 						z += sz;

  002e8	8b 45 f4	 mov	 eax, DWORD PTR _z$[ebp]
  002eb	03 45 c0	 add	 eax, DWORD PTR _sz$11[ebp]
  002ee	89 45 f4	 mov	 DWORD PTR _z$[ebp], eax

; 834  : 						d -= ax;

  002f1	8b 45 d0	 mov	 eax, DWORD PTR _d$15[ebp]
  002f4	2b 45 cc	 sub	 eax, DWORD PTR _ax$14[ebp]
  002f7	89 45 d0	 mov	 DWORD PTR _d$15[ebp], eax
$LN15@assess_tas:

; 835  : 					}
; 836  : 		
; 837  : 					x += sx;

  002fa	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  002fd	03 45 c4	 add	 eax, DWORD PTR _sx$12[ebp]
  00300	89 45 f8	 mov	 DWORD PTR _x$[ebp], eax

; 838  : 					d += az;

  00303	8b 45 d0	 mov	 eax, DWORD PTR _d$15[ebp]
  00306	03 45 c8	 add	 eax, DWORD PTR _az$13[ebp]
  00309	89 45 d0	 mov	 DWORD PTR _d$15[ebp], eax

; 839  : 				}

  0030c	eb a8		 jmp	 SHORT $LN5@assess_tas
$LN6@assess_tas:

; 840  : 			}
; 841  : 			else

  0030e	eb 68		 jmp	 SHORT $LN8@assess_tas
$LN12@assess_tas:

; 842  : 			{
; 843  : 				d = ax - ( az / 2 );

  00310	8b 45 c8	 mov	 eax, DWORD PTR _az$13[ebp]
  00313	99		 cdq
  00314	2b c2		 sub	 eax, edx
  00316	d1 f8		 sar	 eax, 1
  00318	8b 4d cc	 mov	 ecx, DWORD PTR _ax$14[ebp]
  0031b	2b c8		 sub	 ecx, eax
  0031d	89 4d d0	 mov	 DWORD PTR _d$15[ebp], ecx
$LN7@assess_tas:

; 844  : 		
; 845  : 				while ( TRUE )

  00320	b8 01 00 00 00	 mov	 eax, 1
  00325	85 c0		 test	 eax, eax
  00327	74 4f		 je	 SHORT $LN8@assess_tas

; 846  : 				{
; 847  : 					assess_task_sector_difficulty (task_en, x, z, &air_threats, &enemy_sectors);

  00329	8d 45 ec	 lea	 eax, DWORD PTR _enemy_sectors$[ebp]
  0032c	50		 push	 eax
  0032d	8d 4d f0	 lea	 ecx, DWORD PTR _air_threats$[ebp]
  00330	51		 push	 ecx
  00331	8b 55 f4	 mov	 edx, DWORD PTR _z$[ebp]
  00334	52		 push	 edx
  00335	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  00338	50		 push	 eax
  00339	8b 4d 08	 mov	 ecx, DWORD PTR _task_en$[ebp]
  0033c	51		 push	 ecx
  0033d	e8 00 00 00 00	 call	 ?assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z ; assess_task_sector_difficulty

; 848  : 
; 849  : 					if ( z == z2 ) break;

  00342	8b 45 f4	 mov	 eax, DWORD PTR _z$[ebp]
  00345	3b 45 a8	 cmp	 eax, DWORD PTR _z2$5[ebp]
  00348	75 02		 jne	 SHORT $LN16@assess_tas
  0034a	eb 2c		 jmp	 SHORT $LN8@assess_tas
$LN16@assess_tas:

; 850  : 		
; 851  : 					if ( d >= 0 )

  0034c	83 7d d0 00	 cmp	 DWORD PTR _d$15[ebp], 0
  00350	7c 12		 jl	 SHORT $LN17@assess_tas

; 852  : 					{
; 853  : 						x += sx;

  00352	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  00355	03 45 c4	 add	 eax, DWORD PTR _sx$12[ebp]
  00358	89 45 f8	 mov	 DWORD PTR _x$[ebp], eax

; 854  : 						d -= az;

  0035b	8b 45 d0	 mov	 eax, DWORD PTR _d$15[ebp]
  0035e	2b 45 c8	 sub	 eax, DWORD PTR _az$13[ebp]
  00361	89 45 d0	 mov	 DWORD PTR _d$15[ebp], eax
$LN17@assess_tas:

; 855  : 					}
; 856  : 		
; 857  : 					z += sz;

  00364	8b 45 f4	 mov	 eax, DWORD PTR _z$[ebp]
  00367	03 45 c0	 add	 eax, DWORD PTR _sz$11[ebp]
  0036a	89 45 f4	 mov	 DWORD PTR _z$[ebp], eax

; 858  : 					d += ax;

  0036d	8b 45 d0	 mov	 eax, DWORD PTR _d$15[ebp]
  00370	03 45 cc	 add	 eax, DWORD PTR _ax$14[ebp]
  00373	89 45 d0	 mov	 DWORD PTR _d$15[ebp], eax

; 859  : 				}

  00376	eb a8		 jmp	 SHORT $LN7@assess_tas
$LN8@assess_tas:

; 860  : 			}
; 861  : 		}
; 862  : 
; 863  : 		last_pos = this_pos;

  00378	8b 45 d8	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0037b	89 45 dc	 mov	 DWORD PTR _last_pos$[ebp], eax

; 864  : 	}

  0037e	e9 d2 fd ff ff	 jmp	 $LN2@assess_tas
$LN3@assess_tas:

; 865  : 
; 866  : 	//
; 867  : 	// do last point on the route
; 868  : 	//
; 869  : 
; 870  : 	last_pos = &raw->route_nodes [raw->route_length - 1];

  00383	8b 45 e0	 mov	 eax, DWORD PTR _raw$[ebp]
  00386	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0038c	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0038f	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00395	83 e9 01	 sub	 ecx, 1
  00398	6b d1 0c	 imul	 edx, ecx, 12
  0039b	8b 45 e0	 mov	 eax, DWORD PTR _raw$[ebp]
  0039e	03 50 14	 add	 edx, DWORD PTR [eax+20]
  003a1	89 55 dc	 mov	 DWORD PTR _last_pos$[ebp], edx

; 871  : 
; 872  : 	get_x_sector (x, last_pos->x);

  003a4	8d 45 f8	 lea	 eax, DWORD PTR _x$[ebp]
  003a7	50		 push	 eax
  003a8	8b 4d dc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  003ab	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  003af	51		 push	 ecx
  003b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b5	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  003ba	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  003bd	99		 cdq
  003be	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  003c4	89 45 f8	 mov	 DWORD PTR _x$[ebp], eax

; 873  : 	get_z_sector (z, last_pos->z);

  003c7	8d 45 f4	 lea	 eax, DWORD PTR _z$[ebp]
  003ca	50		 push	 eax
  003cb	8b 4d dc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  003ce	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  003d3	51		 push	 ecx
  003d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d9	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  003de	8b 45 f4	 mov	 eax, DWORD PTR _z$[ebp]
  003e1	99		 cdq
  003e2	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  003e8	89 45 f4	 mov	 DWORD PTR _z$[ebp], eax

; 874  : 		
; 875  : 	assess_task_sector_difficulty (task_en, x, z, &air_threats, &enemy_sectors);

  003eb	8d 45 ec	 lea	 eax, DWORD PTR _enemy_sectors$[ebp]
  003ee	50		 push	 eax
  003ef	8d 4d f0	 lea	 ecx, DWORD PTR _air_threats$[ebp]
  003f2	51		 push	 ecx
  003f3	8b 55 f4	 mov	 edx, DWORD PTR _z$[ebp]
  003f6	52		 push	 edx
  003f7	8b 45 f8	 mov	 eax, DWORD PTR _x$[ebp]
  003fa	50		 push	 eax
  003fb	8b 4d 08	 mov	 ecx, DWORD PTR _task_en$[ebp]
  003fe	51		 push	 ecx
  003ff	e8 00 00 00 00	 call	 ?assess_task_sector_difficulty@@YGXPAUENTITY@@HHPAH1@Z ; assess_task_sector_difficulty

; 876  : 
; 877  : 	//
; 878  : 	// +1 difficulty point for every sector with enemy air defences ( maximum of 5 )
; 879  : 	//
; 880  : 
; 881  : 	if (route_air_threat)

  00404	83 7d 0c 00	 cmp	 DWORD PTR _route_air_threat$[ebp], 0
  00408	74 08		 je	 SHORT $LN18@assess_tas

; 882  : 	{
; 883  : 		*route_air_threat = air_threats;

  0040a	8b 45 0c	 mov	 eax, DWORD PTR _route_air_threat$[ebp]
  0040d	8b 4d f0	 mov	 ecx, DWORD PTR _air_threats$[ebp]
  00410	89 08		 mov	 DWORD PTR [eax], ecx
$LN18@assess_tas:

; 884  : 	}
; 885  : 
; 886  : 	air_threats = min ((air_threats >> 1), 5);

  00412	c7 85 64 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR $T4[ebp], 5
  0041c	8b 45 f0	 mov	 eax, DWORD PTR _air_threats$[ebp]
  0041f	d1 f8		 sar	 eax, 1
  00421	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00427	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0042d	51		 push	 ecx
  0042e	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00434	52		 push	 edx
  00435	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  0043a	8b 00		 mov	 eax, DWORD PTR [eax]
  0043c	89 45 f0	 mov	 DWORD PTR _air_threats$[ebp], eax

; 887  : 
; 888  : 	//
; 889  : 	// +1 difficulty point for every 2 enemy sectors passing through ( maximum of 5 )
; 890  : 	//
; 891  : 
; 892  : 	if (route_enemy_sectors)

  0043f	83 7d 10 00	 cmp	 DWORD PTR _route_enemy_sectors$[ebp], 0
  00443	74 08		 je	 SHORT $LN19@assess_tas

; 893  : 	{
; 894  : 		*route_enemy_sectors = enemy_sectors;

  00445	8b 45 10	 mov	 eax, DWORD PTR _route_enemy_sectors$[ebp]
  00448	8b 4d ec	 mov	 ecx, DWORD PTR _enemy_sectors$[ebp]
  0044b	89 08		 mov	 DWORD PTR [eax], ecx
$LN19@assess_tas:

; 895  : 	}
; 896  : 
; 897  : 	enemy_sectors = min ((enemy_sectors >> 1), 5);

  0044d	c7 85 5c ff ff
	ff 05 00 00 00	 mov	 DWORD PTR $T2[ebp], 5
  00457	8b 45 ec	 mov	 eax, DWORD PTR _enemy_sectors$[ebp]
  0045a	d1 f8		 sar	 eax, 1
  0045c	89 85 58 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00462	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00468	51		 push	 ecx
  00469	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  0046f	52		 push	 edx
  00470	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00475	8b 00		 mov	 eax, DWORD PTR [eax]
  00477	89 45 ec	 mov	 DWORD PTR _enemy_sectors$[ebp], eax

; 898  : 
; 899  : 	//
; 900  : 	// total
; 901  : 	//
; 902  : 
; 903  : 	difficulty_level = air_threats + enemy_sectors;

  0047a	8b 45 f0	 mov	 eax, DWORD PTR _air_threats$[ebp]
  0047d	03 45 ec	 add	 eax, DWORD PTR _enemy_sectors$[ebp]
  00480	89 45 e4	 mov	 DWORD PTR _difficulty_level$[ebp], eax

; 904  : 
; 905  : 	return difficulty_level;

  00483	8b 45 e4	 mov	 eax, DWORD PTR _difficulty_level$[ebp]

; 906  : }

  00486	5f		 pop	 edi
  00487	5e		 pop	 esi
  00488	5b		 pop	 ebx
  00489	8b e5		 mov	 esp, ebp
  0048b	5d		 pop	 ebp
  0048c	c2 0c 00	 ret	 12			; 0000000cH
?assess_task_difficulty@@YGHPAUENTITY@@PAH1@Z ENDP	; assess_task_difficulty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z
_TEXT	SEGMENT
tv169 = -84						; size = 4
tv132 = -80						; size = 4
tv79 = -80						; size = 4
tv93 = -76						; size = 4
tv71 = -76						; size = 4
_distance$ = -8						; size = 4
_pos2$ = -4						; size = 4
_task_en$ = 8						; size = 4
_pos1$ = 12						; size = 4
_cruise_speed$ = 16					; size = 4
_return_distance$ = 20					; size = 4
?assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z PROC ; assess_task_locality_factor, COMDAT

; 663  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 664  : 	vec3d
; 665  : 		*pos2;
; 666  : 
; 667  : 	float
; 668  : 		distance;
; 669  : 
; 670  : 	//
; 671  : 	// locality
; 672  : 	// assess if entity could get to end position quick enough
; 673  : 	//
; 674  : 
; 675  : 	if (return_distance)

  00009	83 7d 14 00	 cmp	 DWORD PTR _return_distance$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN2@assess_tas

; 676  : 	{
; 677  : 		*return_distance = 0.0;

  0000f	8b 45 14	 mov	 eax, DWORD PTR _return_distance$[ebp]
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN2@assess_tas:

; 678  : 	}
; 679  : 
; 680  : 	//
; 681  : 	// only approximate - get straight line distance from current pos to task start pos
; 682  : 	//
; 683  : 
; 684  : 	pos2 = get_local_entity_vec3d_ptr (task_en, VEC3D_TYPE_START_POSITION);

  00019	83 7d 08 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0001d	74 0a		 je	 SHORT $LN6@assess_tas
  0001f	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	89 4d b4	 mov	 DWORD PTR tv71[ebp], ecx
  00027	eb 21		 jmp	 SHORT $LN7@assess_tas
$LN6@assess_tas:
  00029	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z@4JA
  0002f	83 c2 15	 add	 edx, 21			; 00000015H
  00032	52		 push	 edx
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00043	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN7@assess_tas:
  0004a	b9 01 00 00 00	 mov	 ecx, 1
  0004f	85 c9		 test	 ecx, ecx
  00051	74 09		 je	 SHORT $LN8@assess_tas
  00053	c7 45 b0 0a 00
	00 00		 mov	 DWORD PTR tv79[ebp], 10	; 0000000aH
  0005a	eb 21		 jmp	 SHORT $LN9@assess_tas
$LN8@assess_tas:
  0005c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z@4JA
  00062	83 c2 15	 add	 edx, 21			; 00000015H
  00065	52		 push	 edx
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00076	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN9@assess_tas:
  0007d	6a 0a		 push	 10			; 0000000aH
  0007f	8b 4d 08	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00082	51		 push	 ecx
  00083	6b 55 b4 60	 imul	 edx, DWORD PTR tv71[ebp], 96
  00087	8b 45 b0	 mov	 eax, DWORD PTR tv79[ebp]
  0008a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00091	ff d1		 call	 ecx
  00093	89 45 fc	 mov	 DWORD PTR _pos2$[ebp], eax

; 685  : 
; 686  : 	distance = get_approx_2d_range (pos1, pos2);

  00096	8b 45 fc	 mov	 eax, DWORD PTR _pos2$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d 0c	 mov	 ecx, DWORD PTR _pos1$[ebp]
  0009d	51		 push	 ecx
  0009e	e8 00 00 00 00	 call	 ?get_approx_2d_range@@YGMPBUVEC3D@@0@Z ; get_approx_2d_range
  000a3	d9 5d f8	 fstp	 DWORD PTR _distance$[ebp]

; 687  : 
; 688  : 	if ((cruise_speed * get_local_entity_float_value (task_en, FLOAT_TYPE_EXPIRE_TIMER)) < distance)

  000a6	83 7d 08 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  000aa	74 0a		 je	 SHORT $LN10@assess_tas
  000ac	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	89 4d b4	 mov	 DWORD PTR tv93[ebp], ecx
  000b4	eb 1d		 jmp	 SHORT $LN11@assess_tas
$LN10@assess_tas:
  000b6	68 b0 02 00 00	 push	 688			; 000002b0H
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cc	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN11@assess_tas:
  000d3	b8 01 00 00 00	 mov	 eax, 1
  000d8	85 c0		 test	 eax, eax
  000da	74 09		 je	 SHORT $LN12@assess_tas
  000dc	c7 45 b0 25 00
	00 00		 mov	 DWORD PTR tv132[ebp], 37 ; 00000025H
  000e3	eb 1d		 jmp	 SHORT $LN13@assess_tas
$LN12@assess_tas:
  000e5	68 b0 02 00 00	 push	 688			; 000002b0H
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000f5	51		 push	 ecx
  000f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fb	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN13@assess_tas:
  00102	6a 25		 push	 37			; 00000025H
  00104	8b 55 08	 mov	 edx, DWORD PTR _task_en$[ebp]
  00107	52		 push	 edx
  00108	69 45 b4 bc 02
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 700
  0010f	8b 4d b0	 mov	 ecx, DWORD PTR tv132[ebp]
  00112	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00119	ff d2		 call	 edx
  0011b	d9 5d ac	 fstp	 DWORD PTR tv169[ebp]
  0011e	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv169[ebp]
  00123	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _cruise_speed$[ebp]
  00128	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _distance$[ebp]
  0012d	0f 2f c8	 comiss	 xmm1, xmm0
  00130	76 04		 jbe	 SHORT $LN3@assess_tas

; 689  : 	{
; 690  : 
; 691  : 		return FALSE;

  00132	33 c0		 xor	 eax, eax
  00134	eb 17		 jmp	 SHORT $LN1@assess_tas
$LN3@assess_tas:

; 692  : 	}
; 693  : 
; 694  : 	if (return_distance)

  00136	83 7d 14 00	 cmp	 DWORD PTR _return_distance$[ebp], 0
  0013a	74 0c		 je	 SHORT $LN4@assess_tas

; 695  : 	{
; 696  : 		*return_distance = distance;

  0013c	8b 45 14	 mov	 eax, DWORD PTR _return_distance$[ebp]
  0013f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00144	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN4@assess_tas:

; 697  : 	}
; 698  : 
; 699  : 	return TRUE;

  00148	b8 01 00 00 00	 mov	 eax, 1
$LN1@assess_tas:

; 700  : }

  0014d	5f		 pop	 edi
  0014e	5e		 pop	 esi
  0014f	5b		 pop	 ebx
  00150	8b e5		 mov	 esp, ebp
  00152	5d		 pop	 ebp
  00153	c2 10 00	 ret	 16			; 00000010H
?assess_task_locality_factor@@YGHPAUENTITY@@PAUVEC3D@@MPAM@Z ENDP ; assess_task_locality_factor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv201 = -80						; size = 4
tv179 = -80						; size = 4
tv160 = -80						; size = 4
tv141 = -80						; size = 4
tv83 = -80						; size = 4
tv193 = -76						; size = 4
tv172 = -76						; size = 4
tv153 = -76						; size = 4
tv134 = -76						; size = 4
tv95 = -76						; size = 4
tv75 = -76						; size = 4
_count$ = -8						; size = 4
_this_task$ = -4					; size = 4
_en$ = 8						; size = 4
_task_type$ = 12					; size = 4
_side$ = 16						; size = 4
?entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z PROC ; entity_is_object_of_task, COMDAT

; 617  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 618  : 
; 619  : 	entity
; 620  : 		*this_task;
; 621  : 
; 622  : 	int
; 623  : 		count;
; 624  : 
; 625  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@entity_is_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@entity_is_:

; 626  : 
; 627  : 	count = 0;

  00027	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 628  : 
; 629  : 	this_task = get_local_entity_first_child (en, LIST_TYPE_TASK_DEPENDENT);

  0002e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00032	74 0a		 je	 SHORT $LN10@entity_is_
  00034	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	89 4d b4	 mov	 DWORD PTR tv75[ebp], ecx
  0003c	eb 21		 jmp	 SHORT $LN11@entity_is_
$LN10@entity_is_:
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00044	83 c2 0c	 add	 edx, 12			; 0000000cH
  00047	52		 push	 edx
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00058	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN11@entity_is_:
  0005f	b9 01 00 00 00	 mov	 ecx, 1
  00064	85 c9		 test	 ecx, ecx
  00066	74 09		 je	 SHORT $LN12@entity_is_
  00068	c7 45 b0 27 00
	00 00		 mov	 DWORD PTR tv83[ebp], 39	; 00000027H
  0006f	eb 21		 jmp	 SHORT $LN13@entity_is_
$LN12@entity_is_:
  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00077	83 c2 0c	 add	 edx, 12			; 0000000cH
  0007a	52		 push	 edx
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN13@entity_is_:
  00092	6a 27		 push	 39			; 00000027H
  00094	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00097	51		 push	 ecx
  00098	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  0009f	8b 45 b0	 mov	 eax, DWORD PTR tv83[ebp]
  000a2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a9	ff d1		 call	 ecx
  000ab	89 45 fc	 mov	 DWORD PTR _this_task$[ebp], eax
$LN2@entity_is_:

; 630  : 
; 631  : 	while (this_task)

  000ae	83 7d fc 00	 cmp	 DWORD PTR _this_task$[ebp], 0
  000b2	0f 84 41 02 00
	00		 je	 $LN3@entity_is_

; 632  : 	{
; 633  : 
; 634  : 		if (get_local_entity_type (this_task) == ENTITY_TYPE_TASK)

  000b8	83 7d fc 00	 cmp	 DWORD PTR _this_task$[ebp], 0
  000bc	74 0a		 je	 SHORT $LN14@entity_is_
  000be	8b 45 fc	 mov	 eax, DWORD PTR _this_task$[ebp]
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	89 4d b4	 mov	 DWORD PTR tv95[ebp], ecx
  000c6	eb 1d		 jmp	 SHORT $LN15@entity_is_
$LN14@entity_is_:
  000c8	68 7a 02 00 00	 push	 634			; 0000027aH
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d8	52		 push	 edx
  000d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000de	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN15@entity_is_:
  000e5	83 7d b4 22	 cmp	 DWORD PTR tv95[ebp], 34	; 00000022H
  000e9	0f 85 85 01 00
	00		 jne	 $LN5@entity_is_

; 635  : 		{
; 636  : 
; 637  : 			if (get_local_entity_int_value (this_task, INT_TYPE_ENTITY_SUB_TYPE) == task_type)

  000ef	83 7d fc 00	 cmp	 DWORD PTR _this_task$[ebp], 0
  000f3	74 0a		 je	 SHORT $LN16@entity_is_
  000f5	8b 45 fc	 mov	 eax, DWORD PTR _this_task$[ebp]
  000f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fa	89 4d b4	 mov	 DWORD PTR tv134[ebp], ecx
  000fd	eb 1d		 jmp	 SHORT $LN17@entity_is_
$LN16@entity_is_:
  000ff	68 7d 02 00 00	 push	 637			; 0000027dH
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00109	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010f	52		 push	 edx
  00110	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00115	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN17@entity_is_:
  0011c	b8 01 00 00 00	 mov	 eax, 1
  00121	85 c0		 test	 eax, eax
  00123	74 09		 je	 SHORT $LN18@entity_is_
  00125	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv141[ebp], 52 ; 00000034H
  0012c	eb 1d		 jmp	 SHORT $LN19@entity_is_
$LN18@entity_is_:
  0012e	68 7d 02 00 00	 push	 637			; 0000027dH
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00138	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00144	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN19@entity_is_:
  0014b	6a 34		 push	 52			; 00000034H
  0014d	8b 55 fc	 mov	 edx, DWORD PTR _this_task$[ebp]
  00150	52		 push	 edx
  00151	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv134[ebp], 1116
  00158	8b 4d b0	 mov	 ecx, DWORD PTR tv141[ebp]
  0015b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00162	ff d2		 call	 edx
  00164	3b 45 0c	 cmp	 eax, DWORD PTR _task_type$[ebp]
  00167	0f 85 07 01 00
	00		 jne	 $LN5@entity_is_

; 638  : 			{
; 639  : 
; 640  : 				if (get_local_entity_int_value (this_task, INT_TYPE_SIDE) == side)

  0016d	83 7d fc 00	 cmp	 DWORD PTR _this_task$[ebp], 0
  00171	74 0a		 je	 SHORT $LN20@entity_is_
  00173	8b 45 fc	 mov	 eax, DWORD PTR _this_task$[ebp]
  00176	8b 08		 mov	 ecx, DWORD PTR [eax]
  00178	89 4d b4	 mov	 DWORD PTR tv153[ebp], ecx
  0017b	eb 1d		 jmp	 SHORT $LN21@entity_is_
$LN20@entity_is_:
  0017d	68 80 02 00 00	 push	 640			; 00000280H
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00187	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0018d	52		 push	 edx
  0018e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00193	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN21@entity_is_:
  0019a	b8 01 00 00 00	 mov	 eax, 1
  0019f	85 c0		 test	 eax, eax
  001a1	74 09		 je	 SHORT $LN22@entity_is_
  001a3	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv160[ebp], 187 ; 000000bbH
  001aa	eb 1d		 jmp	 SHORT $LN23@entity_is_
$LN22@entity_is_:
  001ac	68 80 02 00 00	 push	 640			; 00000280H
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001bc	51		 push	 ecx
  001bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c2	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN23@entity_is_:
  001c9	68 bb 00 00 00	 push	 187			; 000000bbH
  001ce	8b 55 fc	 mov	 edx, DWORD PTR _this_task$[ebp]
  001d1	52		 push	 edx
  001d2	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv153[ebp], 1116
  001d9	8b 4d b0	 mov	 ecx, DWORD PTR tv160[ebp]
  001dc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001e3	ff d2		 call	 edx
  001e5	3b 45 10	 cmp	 eax, DWORD PTR _side$[ebp]
  001e8	0f 85 86 00 00
	00		 jne	 $LN5@entity_is_

; 641  : 				{
; 642  : 
; 643  : 					if (get_local_entity_int_value (this_task, INT_TYPE_TASK_STATE) != TASK_STATE_COMPLETED)

  001ee	83 7d fc 00	 cmp	 DWORD PTR _this_task$[ebp], 0
  001f2	74 0a		 je	 SHORT $LN24@entity_is_
  001f4	8b 45 fc	 mov	 eax, DWORD PTR _this_task$[ebp]
  001f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f9	89 4d b4	 mov	 DWORD PTR tv172[ebp], ecx
  001fc	eb 1d		 jmp	 SHORT $LN25@entity_is_
$LN24@entity_is_:
  001fe	68 83 02 00 00	 push	 643			; 00000283H
  00203	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00208	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0020e	52		 push	 edx
  0020f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00214	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN25@entity_is_:
  0021b	b8 01 00 00 00	 mov	 eax, 1
  00220	85 c0		 test	 eax, eax
  00222	74 09		 je	 SHORT $LN26@entity_is_
  00224	c7 45 b0 e3 00
	00 00		 mov	 DWORD PTR tv179[ebp], 227 ; 000000e3H
  0022b	eb 1d		 jmp	 SHORT $LN27@entity_is_
$LN26@entity_is_:
  0022d	68 83 02 00 00	 push	 643			; 00000283H
  00232	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00237	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0023d	51		 push	 ecx
  0023e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00243	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN27@entity_is_:
  0024a	68 e3 00 00 00	 push	 227			; 000000e3H
  0024f	8b 55 fc	 mov	 edx, DWORD PTR _this_task$[ebp]
  00252	52		 push	 edx
  00253	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv172[ebp], 1116
  0025a	8b 4d b0	 mov	 ecx, DWORD PTR tv179[ebp]
  0025d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00264	ff d2		 call	 edx
  00266	83 f8 02	 cmp	 eax, 2
  00269	74 09		 je	 SHORT $LN5@entity_is_

; 644  : 					{
; 645  : 
; 646  : 						count ++;

  0026b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0026e	83 c0 01	 add	 eax, 1
  00271	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN5@entity_is_:

; 647  : 					}
; 648  : 				}
; 649  : 			}
; 650  : 		}
; 651  : 
; 652  : 		this_task = get_local_entity_child_succ (this_task, LIST_TYPE_TASK_DEPENDENT);

  00274	83 7d fc 00	 cmp	 DWORD PTR _this_task$[ebp], 0
  00278	74 0a		 je	 SHORT $LN28@entity_is_
  0027a	8b 45 fc	 mov	 eax, DWORD PTR _this_task$[ebp]
  0027d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027f	89 4d b4	 mov	 DWORD PTR tv193[ebp], ecx
  00282	eb 21		 jmp	 SHORT $LN29@entity_is_
$LN28@entity_is_:
  00284	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  0028a	83 c2 23	 add	 edx, 35			; 00000023H
  0028d	52		 push	 edx
  0028e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00293	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00298	50		 push	 eax
  00299	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN29@entity_is_:
  002a5	b9 01 00 00 00	 mov	 ecx, 1
  002aa	85 c9		 test	 ecx, ecx
  002ac	74 09		 je	 SHORT $LN30@entity_is_
  002ae	c7 45 b0 27 00
	00 00		 mov	 DWORD PTR tv201[ebp], 39 ; 00000027H
  002b5	eb 21		 jmp	 SHORT $LN31@entity_is_
$LN30@entity_is_:
  002b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  002bd	83 c2 23	 add	 edx, 35			; 00000023H
  002c0	52		 push	 edx
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002cb	50		 push	 eax
  002cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv201[ebp], 0
$LN31@entity_is_:
  002d8	6a 27		 push	 39			; 00000027H
  002da	8b 4d fc	 mov	 ecx, DWORD PTR _this_task$[ebp]
  002dd	51		 push	 ecx
  002de	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv193[ebp], 180
  002e5	8b 45 b0	 mov	 eax, DWORD PTR tv201[ebp]
  002e8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002ef	ff d1		 call	 ecx
  002f1	89 45 fc	 mov	 DWORD PTR _this_task$[ebp], eax

; 653  : 	}

  002f4	e9 b5 fd ff ff	 jmp	 $LN2@entity_is_
$LN3@entity_is_:

; 654  : 
; 655  : 	return count;

  002f9	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]

; 656  : }

  002fc	5f		 pop	 edi
  002fd	5e		 pop	 esi
  002fe	5b		 pop	 ebx
  002ff	8b e5		 mov	 esp, ebp
  00301	5d		 pop	 ebp
  00302	c2 0c 00	 ret	 12			; 0000000cH
?entity_is_object_of_task@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z ENDP ; entity_is_object_of_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_local_entity_current_task@@YGPAUENTITY@@PAU1@@Z
_TEXT	SEGMENT
tv136 = -76						; size = 4
tv83 = -76						; size = 4
tv128 = -72						; size = 4
tv75 = -72						; size = 4
_guide$ = -4						; size = 4
_member$ = 8						; size = 4
?get_local_entity_current_task@@YGPAUENTITY@@PAU1@@Z PROC ; get_local_entity_current_task, COMDAT

; 594  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 595  : 	entity
; 596  : 		*guide;
; 597  : 
; 598  : 	ASSERT (member);

  00009	83 7d 08 00	 cmp	 DWORD PTR _member$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06HDFDANIG@member@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_local_:

; 599  : 
; 600  : 	guide = get_local_entity_parent (member, LIST_TYPE_FOLLOWER);

  00027	83 7d 08 00	 cmp	 DWORD PTR _member$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN6@get_local_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _member$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN7@get_local_
$LN6@get_local_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA
  0003d	83 c2 06	 add	 edx, 6
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN7@get_local_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN8@get_local_
  00061	c7 45 b4 0d 00
	00 00		 mov	 DWORD PTR tv83[ebp], 13	; 0000000dH
  00068	eb 21		 jmp	 SHORT $LN9@get_local_
$LN8@get_local_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA
  00070	83 c2 06	 add	 edx, 6
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN9@get_local_:
  0008b	6a 0d		 push	 13			; 0000000dH
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _member$[ebp]
  00090	51		 push	 ecx
  00091	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  00098	8b 45 b4	 mov	 eax, DWORD PTR tv83[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	89 45 fc	 mov	 DWORD PTR _guide$[ebp], eax

; 601  : 
; 602  : 	if (guide)

  000a7	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000ab	0f 84 81 00 00
	00		 je	 $LN3@get_local_

; 603  : 	{
; 604  : 		return get_local_entity_parent (guide, LIST_TYPE_GUIDE);

  000b1	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000b5	74 0a		 je	 SHORT $LN10@get_local_
  000b7	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	89 4d b8	 mov	 DWORD PTR tv128[ebp], ecx
  000bf	eb 21		 jmp	 SHORT $LN11@get_local_
$LN10@get_local_:
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA
  000c7	83 c2 0a	 add	 edx, 10			; 0000000aH
  000ca	52		 push	 edx
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN11@get_local_:
  000e2	b9 01 00 00 00	 mov	 ecx, 1
  000e7	85 c9		 test	 ecx, ecx
  000e9	74 09		 je	 SHORT $LN12@get_local_
  000eb	c7 45 b4 10 00
	00 00		 mov	 DWORD PTR tv136[ebp], 16 ; 00000010H
  000f2	eb 21		 jmp	 SHORT $LN13@get_local_
$LN12@get_local_:
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_current_task@@YGPAUENTITY@@PAU2@@Z@4JA
  000fa	83 c2 0a	 add	 edx, 10			; 0000000aH
  000fd	52		 push	 edx
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN13@get_local_:
  00115	6a 10		 push	 16			; 00000010H
  00117	8b 4d fc	 mov	 ecx, DWORD PTR _guide$[ebp]
  0011a	51		 push	 ecx
  0011b	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 180
  00122	8b 45 b4	 mov	 eax, DWORD PTR tv136[ebp]
  00125	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0012c	ff d1		 call	 ecx
  0012e	eb 04		 jmp	 SHORT $LN1@get_local_

; 605  : 	}
; 606  : 	else

  00130	eb 02		 jmp	 SHORT $LN1@get_local_
$LN3@get_local_:

; 607  : 	{
; 608  : 		return NULL;

  00132	33 c0		 xor	 eax, eax
$LN1@get_local_:

; 609  : 	}
; 610  : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
?get_local_entity_current_task@@YGPAUENTITY@@PAU1@@Z ENDP ; get_local_entity_current_task
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?get_local_task_list_type@@YG?AW4LIST_TYPES@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
_raw$ = -4						; size = 4
_task_en$ = 8						; size = 4
?get_local_task_list_type@@YG?AW4LIST_TYPES@@PAUENTITY@@@Z PROC ; get_local_task_list_type, COMDAT

; 560  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 561  : 	task
; 562  : 		*raw;
; 563  : 
; 564  : 	raw = (task *) get_local_entity_data (task_en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _task_en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 565  : 
; 566  : 	switch (raw->task_state)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00018	89 4d b8	 mov	 DWORD PTR tv66[ebp], ecx
  0001b	83 7d b8 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001f	74 0e		 je	 SHORT $LN4@get_local_
  00021	83 7d b8 01	 cmp	 DWORD PTR tv66[ebp], 1
  00025	74 0f		 je	 SHORT $LN5@get_local_
  00027	83 7d b8 02	 cmp	 DWORD PTR tv66[ebp], 2
  0002b	74 10		 je	 SHORT $LN6@get_local_
  0002d	eb 15		 jmp	 SHORT $LN7@get_local_
$LN4@get_local_:

; 567  : 	{
; 568  : 		case TASK_STATE_UNASSIGNED:
; 569  : 		{
; 570  : 			return LIST_TYPE_UNASSIGNED_TASK;

  0002f	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00034	eb 24		 jmp	 SHORT $LN1@get_local_
$LN5@get_local_:

; 571  : 		}
; 572  : 		case TASK_STATE_ASSIGNED:
; 573  : 		{
; 574  : 			return LIST_TYPE_ASSIGNED_TASK;

  00036	b8 03 00 00 00	 mov	 eax, 3
  0003b	eb 1d		 jmp	 SHORT $LN1@get_local_
$LN6@get_local_:

; 575  : 		}
; 576  : 		case TASK_STATE_COMPLETED:
; 577  : 		{
; 578  : 			return LIST_TYPE_COMPLETED_TASK;

  0003d	b8 08 00 00 00	 mov	 eax, 8
  00042	eb 16		 jmp	 SHORT $LN1@get_local_
$LN7@get_local_:

; 579  : 		}
; 580  : 		default:
; 581  : 		{
; 582  : 			debug_fatal ("TASK: Invalid Task State %d", raw->task_state);

  00044	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00047	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004a	51		 push	 ecx
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EIELJNHH@TASK?3?5Invalid?5Task?5State?5?$CFd@
  00050	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00055	83 c4 08	 add	 esp, 8

; 583  : 		}
; 584  : 	}
; 585  : 
; 586  : 	return LIST_TYPE_INVALID;

  00058	33 c0		 xor	 eax, eax
$LN1@get_local_:

; 587  : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?get_local_task_list_type@@YG?AW4LIST_TYPES@@PAUENTITY@@@Z ENDP ; get_local_task_list_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?award_points_for_task_completion@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv191 = -84						; size = 4
tv170 = -84						; size = 4
tv145 = -84						; size = 4
tv88 = -84						; size = 4
tv183 = -80						; size = 4
tv162 = -80						; size = 4
tv151 = -80						; size = 4
tv137 = -80						; size = 4
tv80 = -80						; size = 4
_task_completed$ = -12					; size = 4
_total$ = -8						; size = 4
_points$ = -4						; size = 4
_en$ = 8						; size = 4
?award_points_for_task_completion@@YGHPAUENTITY@@@Z PROC ; award_points_for_task_completion, COMDAT

; 507  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 508  : 	int
; 509  : 		points,
; 510  : 		total,
; 511  : 		task_completed;
; 512  : 
; 513  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@award_poin
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 06	 add	 eax, 6
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@award_poin:

; 514  : 
; 515  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	74 18		 je	 SHORT $LN5@award_poin
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  00035	83 c0 08	 add	 eax, 8
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@award_poin:

; 516  : 
; 517  : 	task_completed = get_local_entity_int_value (en, INT_TYPE_TASK_COMPLETED);

  00048	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN12@award_poin
  0004e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d b0	 mov	 DWORD PTR tv80[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN13@award_poin
$LN12@award_poin:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  0005e	83 c2 0a	 add	 edx, 10			; 0000000aH
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN13@award_poin:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN14@award_poin
  00082	c7 45 ac d9 00
	00 00		 mov	 DWORD PTR tv88[ebp], 217 ; 000000d9H
  00089	eb 21		 jmp	 SHORT $LN15@award_poin
$LN14@award_poin:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  00091	83 c2 0a	 add	 edx, 10			; 0000000aH
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN15@award_poin:
  000ac	68 d9 00 00 00	 push	 217			; 000000d9H
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b4	51		 push	 ecx
  000b5	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 1116
  000bc	8b 45 ac	 mov	 eax, DWORD PTR tv88[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx
  000c8	89 45 f4	 mov	 DWORD PTR _task_completed$[ebp], eax

; 518  : 
; 519  : 	ASSERT (task_completed != TASK_INCOMPLETE);

  000cb	83 7d f4 00	 cmp	 DWORD PTR _task_completed$[ebp], 0
  000cf	75 18		 jne	 SHORT $LN6@award_poin
  000d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  000d6	83 c0 0c	 add	 eax, 12			; 0000000cH
  000d9	50		 push	 eax
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@BPGNPJJJ@task_completed?5?$CB?$DN?5TASK_INCOMPLE@
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@award_poin:

; 520  : 
; 521  : 	points = get_local_entity_int_value (en, INT_TYPE_POINTS_VALUE);

  000e9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ed	74 0a		 je	 SHORT $LN16@award_poin
  000ef	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000f2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f4	89 4d b0	 mov	 DWORD PTR tv137[ebp], ecx
  000f7	eb 21		 jmp	 SHORT $LN17@award_poin
$LN16@award_poin:
  000f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  000ff	83 c2 0e	 add	 edx, 14			; 0000000eH
  00102	52		 push	 edx
  00103	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00113	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN17@award_poin:
  0011a	b9 01 00 00 00	 mov	 ecx, 1
  0011f	85 c9		 test	 ecx, ecx
  00121	74 09		 je	 SHORT $LN18@award_poin
  00123	c7 45 ac 9f 00
	00 00		 mov	 DWORD PTR tv145[ebp], 159 ; 0000009fH
  0012a	eb 21		 jmp	 SHORT $LN19@award_poin
$LN18@award_poin:
  0012c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  00132	83 c2 0e	 add	 edx, 14			; 0000000eH
  00135	52		 push	 edx
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00146	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN19@award_poin:
  0014d	68 9f 00 00 00	 push	 159			; 0000009fH
  00152	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00155	51		 push	 ecx
  00156	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 1116
  0015d	8b 45 ac	 mov	 eax, DWORD PTR tv145[ebp]
  00160	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00167	ff d1		 call	 ecx
  00169	89 45 fc	 mov	 DWORD PTR _points$[ebp], eax

; 522  : 
; 523  : 	switch (task_completed)

  0016c	8b 45 f4	 mov	 eax, DWORD PTR _task_completed$[ebp]
  0016f	89 45 b0	 mov	 DWORD PTR tv151[ebp], eax
  00172	83 7d b0 01	 cmp	 DWORD PTR tv151[ebp], 1
  00176	74 08		 je	 SHORT $LN7@award_poin
  00178	83 7d b0 02	 cmp	 DWORD PTR tv151[ebp], 2
  0017c	74 0b		 je	 SHORT $LN8@award_poin
  0017e	eb 12		 jmp	 SHORT $LN2@award_poin
$LN7@award_poin:

; 524  : 	{
; 525  : 		case TASK_COMPLETED_FAILURE:
; 526  : 		{
; 527  : 			points = 0;

  00180	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _points$[ebp], 0

; 528  : 
; 529  : 			break;

  00187	eb 09		 jmp	 SHORT $LN2@award_poin
$LN8@award_poin:

; 530  : 		}
; 531  : 		case TASK_COMPLETED_PARTIAL:
; 532  : 		{
; 533  : 			points = (points >> 2);

  00189	8b 45 fc	 mov	 eax, DWORD PTR _points$[ebp]
  0018c	c1 f8 02	 sar	 eax, 2
  0018f	89 45 fc	 mov	 DWORD PTR _points$[ebp], eax
$LN2@award_poin:

; 534  : 
; 535  : 			break;
; 536  : 		}
; 537  : 		case TASK_COMPLETED_SUCCESS:
; 538  : 		{
; 539  : 			break;
; 540  : 		}
; 541  : 	}
; 542  : 
; 543  : 	if (points > 0)

  00192	83 7d fc 00	 cmp	 DWORD PTR _points$[ebp], 0
  00196	0f 8e 18 01 00
	00		 jle	 $LN10@award_poin

; 544  : 	{
; 545  : 		total = get_local_entity_int_value (en, INT_TYPE_TASK_SCORE);

  0019c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001a0	74 0a		 je	 SHORT $LN20@award_poin
  001a2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a7	89 4d b0	 mov	 DWORD PTR tv162[ebp], ecx
  001aa	eb 21		 jmp	 SHORT $LN21@award_poin
$LN20@award_poin:
  001ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  001b2	83 c2 26	 add	 edx, 38			; 00000026H
  001b5	52		 push	 edx
  001b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c6	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN21@award_poin:
  001cd	b9 01 00 00 00	 mov	 ecx, 1
  001d2	85 c9		 test	 ecx, ecx
  001d4	74 09		 je	 SHORT $LN22@award_poin
  001d6	c7 45 ac e2 00
	00 00		 mov	 DWORD PTR tv170[ebp], 226 ; 000000e2H
  001dd	eb 21		 jmp	 SHORT $LN23@award_poin
$LN22@award_poin:
  001df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  001e5	83 c2 26	 add	 edx, 38			; 00000026H
  001e8	52		 push	 edx
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f9	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv170[ebp], 0
$LN23@award_poin:
  00200	68 e2 00 00 00	 push	 226			; 000000e2H
  00205	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00208	51		 push	 ecx
  00209	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv162[ebp], 1116
  00210	8b 45 ac	 mov	 eax, DWORD PTR tv170[ebp]
  00213	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0021a	ff d1		 call	 ecx
  0021c	89 45 f8	 mov	 DWORD PTR _total$[ebp], eax

; 546  : 	
; 547  : 		total += points;

  0021f	8b 45 f8	 mov	 eax, DWORD PTR _total$[ebp]
  00222	03 45 fc	 add	 eax, DWORD PTR _points$[ebp]
  00225	89 45 f8	 mov	 DWORD PTR _total$[ebp], eax

; 548  : 	
; 549  : 		set_client_server_entity_int_value (en, INT_TYPE_TASK_SCORE, total);

  00228	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0022c	74 0a		 je	 SHORT $LN24@award_poin
  0022e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00231	8b 08		 mov	 ecx, DWORD PTR [eax]
  00233	89 4d b0	 mov	 DWORD PTR tv183[ebp], ecx
  00236	eb 21		 jmp	 SHORT $LN25@award_poin
$LN24@award_poin:
  00238	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  0023e	83 c2 2a	 add	 edx, 42			; 0000002aH
  00241	52		 push	 edx
  00242	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00247	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00252	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv183[ebp], 0
$LN25@award_poin:
  00259	b9 01 00 00 00	 mov	 ecx, 1
  0025e	85 c9		 test	 ecx, ecx
  00260	74 09		 je	 SHORT $LN26@award_poin
  00262	c7 45 ac e2 00
	00 00		 mov	 DWORD PTR tv191[ebp], 226 ; 000000e2H
  00269	eb 21		 jmp	 SHORT $LN27@award_poin
$LN26@award_poin:
  0026b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??award_points_for_task_completion@@YGHPAUENTITY@@@Z@4JA
  00271	83 c2 2a	 add	 edx, 42			; 0000002aH
  00274	52		 push	 edx
  00275	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0027f	50		 push	 eax
  00280	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00285	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv191[ebp], 0
$LN27@award_poin:
  0028c	8b 4d f8	 mov	 ecx, DWORD PTR _total$[ebp]
  0028f	51		 push	 ecx
  00290	68 e2 00 00 00	 push	 226			; 000000e2H
  00295	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00298	52		 push	 edx
  00299	69 45 b0 b8 08
	00 00		 imul	 eax, DWORD PTR tv183[ebp], 2232
  002a0	8b 4d ac	 mov	 ecx, DWORD PTR tv191[ebp]
  002a3	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*8]
  002aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  002af	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  002b2	ff d1		 call	 ecx
$LN10@award_poin:

; 550  : 	}
; 551  : 
; 552  : 	return points;

  002b4	8b 45 fc	 mov	 eax, DWORD PTR _points$[ebp]

; 553  : }

  002b7	5f		 pop	 edi
  002b8	5e		 pop	 esi
  002b9	5b		 pop	 ebx
  002ba	8b e5		 mov	 esp, ebp
  002bc	5d		 pop	 ebp
  002bd	c2 04 00	 ret	 4
?award_points_for_task_completion@@YGHPAUENTITY@@@Z ENDP ; award_points_for_task_completion
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\task.c
;	COMDAT ?assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z
_TEXT	SEGMENT
tv757 = -144						; size = 4
tv797 = -140						; size = 4
tv750 = -136						; size = 4
tv488 = -132						; size = 8
tv476 = -132						; size = 4
tv358 = -132						; size = 8
tv284 = -132						; size = 8
tv778 = -128						; size = 4
tv727 = -128						; size = 4
tv468 = -128						; size = 4
tv537 = -124						; size = 4
tv516 = -124						; size = 4
tv489 = -124						; size = 8
tv456 = -124						; size = 4
tv435 = -124						; size = 4
tv416 = -124						; size = 4
tv395 = -124						; size = 4
tv359 = -124						; size = 8
tv335 = -124						; size = 4
tv315 = -124						; size = 4
tv285 = -124						; size = 8
tv264 = -124						; size = 4
tv244 = -124						; size = 4
tv197 = -124						; size = 4
tv175 = -124						; size = 4
tv140 = -124						; size = 4
tv83 = -124						; size = 4
tv611 = -120						; size = 4
tv606 = -120						; size = 4
tv529 = -120						; size = 4
tv509 = -120						; size = 4
tv448 = -120						; size = 4
tv428 = -120						; size = 4
tv409 = -120						; size = 4
tv387 = -120						; size = 4
tv375 = -120						; size = 4
tv327 = -120						; size = 4
tv307 = -120						; size = 4
tv256 = -120						; size = 4
tv236 = -120						; size = 4
tv219 = -120						; size = 4
tv189 = -120						; size = 4
tv182 = -120						; size = 4
tv167 = -120						; size = 4
tv132 = -120						; size = 4
tv75 = -120						; size = 4
_min_eff$1 = -52					; size = 4
_new_member_count$2 = -48				; size = 4
_old_member_count$3 = -44				; size = 4
_new_member_count$4 = -40				; size = 4
_old_member_count$5 = -36				; size = 4
_result$ = -32						; size = 4
_colour$ = -28						; size = 4
_side$ = -24						; size = 4
_rating$ = -20						; size = 4
_success$ = -16						; size = 4
_partial$ = -12						; size = 4
_objective$ = -8					; size = 4
_sub_type$ = -4						; size = 4
_en$ = 8						; size = 4
_task_terminated$ = 12					; size = 4
?assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z PROC ; assess_task_completeness, COMDAT

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 96   : 	entity_sub_types
; 97   : 		sub_type;
; 98   : 
; 99   : 	entity
; 100  : 		*objective;
; 101  : 
; 102  : 	float
; 103  : 		partial,
; 104  : 		success,
; 105  : 		rating;
; 106  : 
; 107  : 	entity_sides
; 108  : 		side;
; 109  : 
; 110  : 	int
; 111  : 		colour;
; 112  : 
; 113  : 	task_completed_types
; 114  : 		result;
; 115  : 
; 116  : 	//
; 117  : 	// calculates and stores the overall success of a task as a float between 0.0 and 1.0,
; 118  : 	//
; 119  : 	// and returns whether the task is deemed complete or not
; 120  : 	//
; 121  : 
; 122  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00013	74 18		 je	 SHORT $LN4@assess_tas
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  0001a	83 c0 1b	 add	 eax, 27			; 0000001bH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@assess_tas:

; 123  : 
; 124  : 	ASSERT (!get_local_entity_int_value (en, INT_TYPE_TASK_COMPLETED));

  0002d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00031	74 0a		 je	 SHORT $LN67@assess_tas
  00033	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00036	8b 08		 mov	 ecx, DWORD PTR [eax]
  00038	89 4d 88	 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 21		 jmp	 SHORT $LN68@assess_tas
$LN67@assess_tas:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00043	83 c2 1d	 add	 edx, 29			; 0000001dH
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN68@assess_tas:
  0005e	b9 01 00 00 00	 mov	 ecx, 1
  00063	85 c9		 test	 ecx, ecx
  00065	74 09		 je	 SHORT $LN69@assess_tas
  00067	c7 45 84 d9 00
	00 00		 mov	 DWORD PTR tv83[ebp], 217 ; 000000d9H
  0006e	eb 21		 jmp	 SHORT $LN70@assess_tas
$LN69@assess_tas:
  00070	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00076	83 c2 1d	 add	 edx, 29			; 0000001dH
  00079	52		 push	 edx
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008a	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN70@assess_tas:
  00091	68 d9 00 00 00	 push	 217			; 000000d9H
  00096	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00099	51		 push	 ecx
  0009a	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  000a1	8b 45 84	 mov	 eax, DWORD PTR tv83[ebp]
  000a4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000ab	ff d1		 call	 ecx
  000ad	85 c0		 test	 eax, eax
  000af	74 18		 je	 SHORT $LN5@assess_tas
  000b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  000b6	83 c0 1d	 add	 eax, 29			; 0000001dH
  000b9	50		 push	 eax
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@KFKGAINH@?$CBget_local_entity_int_value?5?$CIen@
  000c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@assess_tas:

; 125  : 
; 126  : 	sub_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  000c9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000cd	74 0a		 je	 SHORT $LN71@assess_tas
  000cf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	89 4d 88	 mov	 DWORD PTR tv132[ebp], ecx
  000d7	eb 21		 jmp	 SHORT $LN72@assess_tas
$LN71@assess_tas:
  000d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  000df	83 c2 1f	 add	 edx, 31			; 0000001fH
  000e2	52		 push	 edx
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f3	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN72@assess_tas:
  000fa	b9 01 00 00 00	 mov	 ecx, 1
  000ff	85 c9		 test	 ecx, ecx
  00101	74 09		 je	 SHORT $LN73@assess_tas
  00103	c7 45 84 34 00
	00 00		 mov	 DWORD PTR tv140[ebp], 52 ; 00000034H
  0010a	eb 21		 jmp	 SHORT $LN74@assess_tas
$LN73@assess_tas:
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00112	83 c2 1f	 add	 edx, 31			; 0000001fH
  00115	52		 push	 edx
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00126	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN74@assess_tas:
  0012d	6a 34		 push	 52			; 00000034H
  0012f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00132	51		 push	 ecx
  00133	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv132[ebp], 1116
  0013a	8b 45 84	 mov	 eax, DWORD PTR tv140[ebp]
  0013d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00144	ff d1		 call	 ecx
  00146	89 45 fc	 mov	 DWORD PTR _sub_type$[ebp], eax

; 127  : 
; 128  : 	ASSERT (sub_type < NUM_ENTITY_SUB_TYPE_TASKS);

  00149	83 7d fc 1e	 cmp	 DWORD PTR _sub_type$[ebp], 30 ; 0000001eH
  0014d	7c 18		 jl	 SHORT $LN6@assess_tas
  0014f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00154	83 c0 21	 add	 eax, 33			; 00000021H
  00157	50		 push	 eax
  00158	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015d	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@PIPBOKCG@sub_type?5?$DM?5NUM_ENTITY_SUB_TYPE_@
  00162	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@assess_tas:

; 129  : 
; 130  : 	ASSERT (task_database [sub_type].primary_task);

  00167	6b 45 fc 50	 imul	 eax, DWORD PTR _sub_type$[ebp], 80
  0016b	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  00171	d1 e9		 shr	 ecx, 1
  00173	83 e1 01	 and	 ecx, 1
  00176	75 18		 jne	 SHORT $LN7@assess_tas
  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  0017d	83 c0 23	 add	 eax, 35			; 00000023H
  00180	50		 push	 eax
  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00186	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FDIGOKDB@task_database?5?$FLsub_type?$FN?4primar@
  0018b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@assess_tas:

; 131  : 
; 132  : 	side = (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE);

  00190	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00194	74 0a		 je	 SHORT $LN75@assess_tas
  00196	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00199	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019b	89 4d 88	 mov	 DWORD PTR tv167[ebp], ecx
  0019e	eb 21		 jmp	 SHORT $LN76@assess_tas
$LN75@assess_tas:
  001a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  001a6	83 c2 25	 add	 edx, 37			; 00000025H
  001a9	52		 push	 edx
  001aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ba	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN76@assess_tas:
  001c1	b9 01 00 00 00	 mov	 ecx, 1
  001c6	85 c9		 test	 ecx, ecx
  001c8	74 09		 je	 SHORT $LN77@assess_tas
  001ca	c7 45 84 bb 00
	00 00		 mov	 DWORD PTR tv175[ebp], 187 ; 000000bbH
  001d1	eb 21		 jmp	 SHORT $LN78@assess_tas
$LN77@assess_tas:
  001d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  001d9	83 c2 25	 add	 edx, 37			; 00000025H
  001dc	52		 push	 edx
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001e7	50		 push	 eax
  001e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ed	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN78@assess_tas:
  001f4	68 bb 00 00 00	 push	 187			; 000000bbH
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001fc	51		 push	 ecx
  001fd	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 1116
  00204	8b 45 84	 mov	 eax, DWORD PTR tv175[ebp]
  00207	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0020e	ff d1		 call	 ecx
  00210	89 45 e8	 mov	 DWORD PTR _side$[ebp], eax

; 133  : 
; 134  : 	colour = (side == ENTITY_SIDE_BLUE_FORCE) ? DEBUG_COLOUR_BLUE : DEBUG_COLOUR_RED;

  00213	83 7d e8 01	 cmp	 DWORD PTR _side$[ebp], 1
  00217	75 09		 jne	 SHORT $LN79@assess_tas
  00219	c7 45 88 01 00
	00 00		 mov	 DWORD PTR tv182[ebp], 1
  00220	eb 07		 jmp	 SHORT $LN80@assess_tas
$LN79@assess_tas:
  00222	c7 45 88 04 00
	00 00		 mov	 DWORD PTR tv182[ebp], 4
$LN80@assess_tas:
  00229	8b 45 88	 mov	 eax, DWORD PTR tv182[ebp]
  0022c	89 45 e4	 mov	 DWORD PTR _colour$[ebp], eax

; 135  : 
; 136  : 	objective = get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT);

  0022f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00233	74 0a		 je	 SHORT $LN81@assess_tas
  00235	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00238	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023a	89 4d 88	 mov	 DWORD PTR tv189[ebp], ecx
  0023d	eb 21		 jmp	 SHORT $LN82@assess_tas
$LN81@assess_tas:
  0023f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00245	83 c2 29	 add	 edx, 41			; 00000029H
  00248	52		 push	 edx
  00249	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00253	50		 push	 eax
  00254	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00259	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN82@assess_tas:
  00260	b9 01 00 00 00	 mov	 ecx, 1
  00265	85 c9		 test	 ecx, ecx
  00267	74 09		 je	 SHORT $LN83@assess_tas
  00269	c7 45 84 27 00
	00 00		 mov	 DWORD PTR tv197[ebp], 39 ; 00000027H
  00270	eb 21		 jmp	 SHORT $LN84@assess_tas
$LN83@assess_tas:
  00272	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00278	83 c2 29	 add	 edx, 41			; 00000029H
  0027b	52		 push	 edx
  0027c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00286	50		 push	 eax
  00287	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028c	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv197[ebp], 0
$LN84@assess_tas:
  00293	6a 27		 push	 39			; 00000027H
  00295	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00298	51		 push	 ecx
  00299	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv189[ebp], 180
  002a0	8b 45 84	 mov	 eax, DWORD PTR tv197[ebp]
  002a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002aa	ff d1		 call	 ecx
  002ac	89 45 f8	 mov	 DWORD PTR _objective$[ebp], eax

; 137  : 
; 138  : 	partial = task_database [sub_type].task_pass_percentage_partial / 100.0;

  002af	6b 45 fc 50	 imul	 eax, DWORD PTR _sub_type$[ebp], 80
  002b3	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  002b9	c1 e9 12	 shr	 ecx, 18			; 00000012H
  002bc	83 e1 7f	 and	 ecx, 127		; 0000007fH
  002bf	89 4d 88	 mov	 DWORD PTR tv606[ebp], ecx
  002c2	f2 0f 2a 45 88	 cvtsi2sd xmm0, DWORD PTR tv606[ebp]
  002c7	8b 55 88	 mov	 edx, DWORD PTR tv606[ebp]
  002ca	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  002cd	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  002d6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4059000000000000
  002de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e2	f3 0f 11 45 f4	 movss	 DWORD PTR _partial$[ebp], xmm0

; 139  : 
; 140  : 	success = task_database [sub_type].task_pass_percentage_success / 100.0;

  002e7	6b 45 fc 50	 imul	 eax, DWORD PTR _sub_type$[ebp], 80
  002eb	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  002f1	c1 e9 19	 shr	 ecx, 25			; 00000019H
  002f4	83 e1 7f	 and	 ecx, 127		; 0000007fH
  002f7	89 4d 88	 mov	 DWORD PTR tv611[ebp], ecx
  002fa	f2 0f 2a 45 88	 cvtsi2sd xmm0, DWORD PTR tv611[ebp]
  002ff	8b 55 88	 mov	 edx, DWORD PTR tv611[ebp]
  00302	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00305	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  0030e	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4059000000000000
  00316	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0031a	f3 0f 11 45 f0	 movss	 DWORD PTR _success$[ebp], xmm0

; 141  : 
; 142  : 	//
; 143  : 	// give rating for task completeness
; 144  : 	//
; 145  : 
; 146  : 	rating = 0.0;

  0031f	0f 57 c0	 xorps	 xmm0, xmm0
  00322	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 147  : 
; 148  : 	result = TASK_INCOMPLETE;

  00327	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 149  : 
; 150  : 	switch (sub_type)

  0032e	8b 45 fc	 mov	 eax, DWORD PTR _sub_type$[ebp]
  00331	89 45 88	 mov	 DWORD PTR tv219[ebp], eax
  00334	8b 4d 88	 mov	 ecx, DWORD PTR tv219[ebp]
  00337	83 e9 01	 sub	 ecx, 1
  0033a	89 4d 88	 mov	 DWORD PTR tv219[ebp], ecx
  0033d	83 7d 88 1c	 cmp	 DWORD PTR tv219[ebp], 28 ; 0000001cH
  00341	0f 87 71 09 00
	00		 ja	 $LN64@assess_tas
  00347	8b 55 88	 mov	 edx, DWORD PTR tv219[ebp]
  0034a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN143@assess_tas[edx]
  00351	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN144@assess_tas[eax*4]
$LN8@assess_tas:

; 151  : 	{
; 152  : 
; 153  : 		case ENTITY_SUB_TYPE_TASK_ADVANCE:
; 154  : 		case ENTITY_SUB_TYPE_TASK_COASTAL_PATROL:
; 155  : 		case ENTITY_SUB_TYPE_TASK_FREE_FLIGHT:
; 156  : 		case ENTITY_SUB_TYPE_TASK_RETREAT:
; 157  : 		case ENTITY_SUB_TYPE_TASK_TRANSFER_FIXED_WING:
; 158  : 		case ENTITY_SUB_TYPE_TASK_TRANSFER_HELICOPTER:
; 159  : 		{
; 160  : 			//
; 161  : 			// SUCCESS if waypoint route complete
; 162  : 			// INCOMPLETE if in progress
; 163  : 			// FAILURE any other
; 164  : 			//
; 165  : 			
; 166  : 			if (task_terminated == TASK_TERMINATED_WAYPOINT_ROUTE_COMPLETE)

  00358	83 7d 0c 06	 cmp	 DWORD PTR _task_terminated$[ebp], 6
  0035c	75 16		 jne	 SHORT $LN9@assess_tas

; 167  : 			{
; 168  : 				rating = 1.0;

  0035e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00366	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 169  : 
; 170  : 				result = TASK_COMPLETED_SUCCESS;

  0036b	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3
  00372	eb 0f		 jmp	 SHORT $LN12@assess_tas
$LN9@assess_tas:

; 171  : 			}
; 172  : 			else if (task_terminated == TASK_TERMINATED_IN_PROGRESS)

  00374	83 7d 0c 00	 cmp	 DWORD PTR _task_terminated$[ebp], 0
  00378	75 02		 jne	 SHORT $LN11@assess_tas

; 173  : 			{
; 174  : 			}
; 175  : 			else

  0037a	eb 07		 jmp	 SHORT $LN12@assess_tas
$LN11@assess_tas:

; 176  : 			{
; 177  : 				result = TASK_COMPLETED_FAILURE;

  0037c	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN12@assess_tas:

; 178  : 			}
; 179  : 
; 180  : 			break;

  00383	e9 41 09 00 00	 jmp	 $LN2@assess_tas
$LN13@assess_tas:

; 181  : 		}
; 182  : 
; 183  : 		case ENTITY_SUB_TYPE_TASK_BARCAP:
; 184  : 		case ENTITY_SUB_TYPE_TASK_COMBAT_AIR_PATROL:
; 185  : 		{
; 186  : 			//
; 187  : 			// SUCCESS if stop time reached 
; 188  : 			// INCOMPLETE if in progress
; 189  : 			// FAILURE any other
; 190  : 			//
; 191  : 			
; 192  : 			if (task_terminated == TASK_TERMINATED_STOP_TIME_REACHED)

  00388	83 7d 0c 05	 cmp	 DWORD PTR _task_terminated$[ebp], 5
  0038c	75 09		 jne	 SHORT $LN14@assess_tas

; 193  : 			{
; 194  : 				result = TASK_COMPLETED_SUCCESS;

  0038e	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3
  00395	eb 0f		 jmp	 SHORT $LN17@assess_tas
$LN14@assess_tas:

; 195  : 			}
; 196  : 			else if (task_terminated == TASK_TERMINATED_IN_PROGRESS)

  00397	83 7d 0c 00	 cmp	 DWORD PTR _task_terminated$[ebp], 0
  0039b	75 02		 jne	 SHORT $LN16@assess_tas

; 197  : 			{
; 198  : 			}
; 199  : 			else

  0039d	eb 07		 jmp	 SHORT $LN17@assess_tas
$LN16@assess_tas:

; 200  : 			{
; 201  : 				result = TASK_COMPLETED_FAILURE;

  0039f	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN17@assess_tas:

; 202  : 			}
; 203  : 
; 204  : 			break;

  003a6	e9 1e 09 00 00	 jmp	 $LN2@assess_tas
$LN18@assess_tas:

; 205  : 		}
; 206  : 
; 207  : 		case ENTITY_SUB_TYPE_TASK_ESCORT:
; 208  : 		{
; 209  : 			//
; 210  : 			// SUCCESS if objective message and escorted group alive
; 211  : 			// ILLEGAL for waypoint route complete
; 212  : 			// INCOMPLETE if in progress
; 213  : 			// FAILURE any other
; 214  : 			//
; 215  : 			
; 216  : 			float
; 217  : 				old_member_count,
; 218  : 				new_member_count;
; 219  : 
; 220  : 			if (task_terminated == TASK_TERMINATED_OBJECTIVE_MESSAGE)

  003ab	83 7d 0c 04	 cmp	 DWORD PTR _task_terminated$[ebp], 4
  003af	0f 85 43 02 00
	00		 jne	 $LN19@assess_tas

; 221  : 			{
; 222  : 				ASSERT (objective);

  003b5	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  003b9	75 18		 jne	 SHORT $LN21@assess_tas
  003bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  003c0	83 c0 7f	 add	 eax, 127		; 0000007fH
  003c3	50		 push	 eax
  003c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c9	68 00 00 00 00	 push	 OFFSET ??_C@_09FKEDLGBF@objective@
  003ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN21@assess_tas:

; 223  : 
; 224  : 				old_member_count = get_local_entity_float_value (en, FLOAT_TYPE_TASK_USER_DATA);

  003d3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003d7	74 0a		 je	 SHORT $LN85@assess_tas
  003d9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003de	89 4d 88	 mov	 DWORD PTR tv236[ebp], ecx
  003e1	eb 24		 jmp	 SHORT $LN86@assess_tas
$LN85@assess_tas:
  003e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  003e9	81 c2 81 00 00
	00		 add	 edx, 129		; 00000081H
  003ef	52		 push	 edx
  003f0	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003fa	50		 push	 eax
  003fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00400	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv236[ebp], 0
$LN86@assess_tas:
  00407	b9 01 00 00 00	 mov	 ecx, 1
  0040c	85 c9		 test	 ecx, ecx
  0040e	74 09		 je	 SHORT $LN87@assess_tas
  00410	c7 45 84 8c 00
	00 00		 mov	 DWORD PTR tv244[ebp], 140 ; 0000008cH
  00417	eb 24		 jmp	 SHORT $LN88@assess_tas
$LN87@assess_tas:
  00419	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  0041f	81 c2 81 00 00
	00		 add	 edx, 129		; 00000081H
  00425	52		 push	 edx
  00426	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0042b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00430	50		 push	 eax
  00431	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00436	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv244[ebp], 0
$LN88@assess_tas:
  0043d	68 8c 00 00 00	 push	 140			; 0000008cH
  00442	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00445	51		 push	 ecx
  00446	69 55 88 bc 02
	00 00		 imul	 edx, DWORD PTR tv236[ebp], 700
  0044d	8b 45 84	 mov	 eax, DWORD PTR tv244[ebp]
  00450	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00457	ff d1		 call	 ecx
  00459	d9 5d dc	 fstp	 DWORD PTR _old_member_count$5[ebp]

; 225  : 
; 226  : 				new_member_count = get_local_entity_int_value (objective, INT_TYPE_MEMBER_COUNT);

  0045c	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00460	74 0a		 je	 SHORT $LN89@assess_tas
  00462	8b 45 f8	 mov	 eax, DWORD PTR _objective$[ebp]
  00465	8b 08		 mov	 ecx, DWORD PTR [eax]
  00467	89 4d 88	 mov	 DWORD PTR tv256[ebp], ecx
  0046a	eb 24		 jmp	 SHORT $LN90@assess_tas
$LN89@assess_tas:
  0046c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00472	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  00478	52		 push	 edx
  00479	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00483	50		 push	 eax
  00484	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00489	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv256[ebp], 0
$LN90@assess_tas:
  00490	b9 01 00 00 00	 mov	 ecx, 1
  00495	85 c9		 test	 ecx, ecx
  00497	74 09		 je	 SHORT $LN91@assess_tas
  00499	c7 45 84 86 00
	00 00		 mov	 DWORD PTR tv264[ebp], 134 ; 00000086H
  004a0	eb 24		 jmp	 SHORT $LN92@assess_tas
$LN91@assess_tas:
  004a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  004a8	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  004ae	52		 push	 edx
  004af	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004b9	50		 push	 eax
  004ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004bf	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv264[ebp], 0
$LN92@assess_tas:
  004c6	68 86 00 00 00	 push	 134			; 00000086H
  004cb	8b 4d f8	 mov	 ecx, DWORD PTR _objective$[ebp]
  004ce	51		 push	 ecx
  004cf	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv256[ebp], 1116
  004d6	8b 45 84	 mov	 eax, DWORD PTR tv264[ebp]
  004d9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004e0	ff d1		 call	 ecx
  004e2	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  004e6	f3 0f 11 45 d8	 movss	 DWORD PTR _new_member_count$4[ebp], xmm0

; 227  : 				
; 228  : 				ASSERT (old_member_count > 0.0);

  004eb	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _old_member_count$5[ebp]
  004f0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  004f8	77 1a		 ja	 SHORT $LN22@assess_tas
  004fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  004ff	05 85 00 00 00	 add	 eax, 133		; 00000085H
  00504	50		 push	 eax
  00505	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050a	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EKNFBFOM@old_member_count?5?$DO?50?40@
  0050f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN22@assess_tas:

; 229  : 
; 230  : 				rating = (old_member_count - new_member_count) / old_member_count;

  00514	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _old_member_count$5[ebp]
  00519	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _new_member_count$4[ebp]
  0051e	f3 0f 5e 45 dc	 divss	 xmm0, DWORD PTR _old_member_count$5[ebp]
  00523	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 231  : 	
; 232  : 				rating = bound (rating, 0.0, 1.0);

  00528	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  0052d	0f 57 c9	 xorps	 xmm1, xmm1
  00530	66 0f 2f c8	 comisd	 xmm1, xmm0
  00534	76 0a		 jbe	 SHORT $LN95@assess_tas
  00536	0f 57 c0	 xorps	 xmm0, xmm0
  00539	f2 0f 11 45 84	 movsd	 QWORD PTR tv285[ebp], xmm0
  0053e	eb 3b		 jmp	 SHORT $LN96@assess_tas
$LN95@assess_tas:
  00540	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  00545	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  0054d	76 12		 jbe	 SHORT $LN93@assess_tas
  0054f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00557	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv284[ebp], xmm0
  0055f	eb 0d		 jmp	 SHORT $LN94@assess_tas
$LN93@assess_tas:
  00561	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  00566	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv284[ebp], xmm0
$LN94@assess_tas:
  0056e	f2 0f 10 85 7c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv284[ebp]
  00576	f2 0f 11 45 84	 movsd	 QWORD PTR tv285[ebp], xmm0
$LN96@assess_tas:
  0057b	f2 0f 5a 45 84	 cvtsd2ss xmm0, QWORD PTR tv285[ebp]
  00580	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 233  : 
; 234  : 				rating = 1.0 - rating;

  00585	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  0058a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00592	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00596	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0059a	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 235  : 
; 236  : 				if (rating >= partial)

  0059f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rating$[ebp]
  005a4	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _partial$[ebp]
  005a8	72 09		 jb	 SHORT $LN23@assess_tas

; 237  : 				{
; 238  : 					result = TASK_COMPLETED_SUCCESS;

  005aa	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3

; 239  : 				}
; 240  : 				else

  005b1	eb 07		 jmp	 SHORT $LN24@assess_tas
$LN23@assess_tas:

; 241  : 				{
; 242  : 					result = TASK_COMPLETED_FAILURE;

  005b3	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN24@assess_tas:

; 243  : 				}
; 244  : 
; 245  : 				ai_log ("ESCORT RESULT: Old Count = %.0f, New Count = %.0f, Rating = %f%%", old_member_count, new_member_count, (rating * 100.0));

  005ba	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  005bf	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  005c7	83 ec 08	 sub	 esp, 8
  005ca	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  005cf	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _new_member_count$4[ebp]
  005d4	83 ec 08	 sub	 esp, 8
  005d7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  005dc	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _old_member_count$5[ebp]
  005e1	83 ec 08	 sub	 esp, 8
  005e4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  005e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@OEEFBHJB@ESCORT?5RESULT?3?5Old?5Count?5?$DN?5?$CF?40f@
  005ee	e8 00 00 00 00	 call	 ?ai_log@@YAXPBDZZ	; ai_log
  005f3	83 c4 1c	 add	 esp, 28			; 0000001cH
  005f6	eb 0f		 jmp	 SHORT $LN26@assess_tas
$LN19@assess_tas:

; 246  : 			}
; 247  : 			else if (task_terminated == TASK_TERMINATED_IN_PROGRESS)

  005f8	83 7d 0c 00	 cmp	 DWORD PTR _task_terminated$[ebp], 0
  005fc	75 02		 jne	 SHORT $LN25@assess_tas

; 248  : 			{
; 249  : 			}
; 250  : 			else

  005fe	eb 07		 jmp	 SHORT $LN26@assess_tas
$LN25@assess_tas:

; 251  : 			{
; 252  : 				result = TASK_COMPLETED_FAILURE;

  00600	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN26@assess_tas:

; 253  : 			}
; 254  : 
; 255  : 			break;

  00607	e9 bd 06 00 00	 jmp	 $LN2@assess_tas
$LN27@assess_tas:

; 256  : 		}
; 257  : 
; 258  : 		case ENTITY_SUB_TYPE_TASK_BAI:
; 259  : 		case ENTITY_SUB_TYPE_TASK_CLOSE_AIR_SUPPORT:
; 260  : 		case ENTITY_SUB_TYPE_TASK_SEAD:
; 261  : 		{
; 262  : 			float
; 263  : 				old_member_count,
; 264  : 				new_member_count;
; 265  : 
; 266  : 			//
; 267  : 			// check the old sector defence level against new defence level (0.0 -> 1.0)
; 268  : 			//
; 269  : 
; 270  : 			old_member_count = get_local_entity_float_value (en, FLOAT_TYPE_TASK_USER_DATA);

  0060c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00610	74 0a		 je	 SHORT $LN97@assess_tas
  00612	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00615	8b 08		 mov	 ecx, DWORD PTR [eax]
  00617	89 4d 88	 mov	 DWORD PTR tv307[ebp], ecx
  0061a	eb 24		 jmp	 SHORT $LN98@assess_tas
$LN97@assess_tas:
  0061c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00622	81 c2 af 00 00
	00		 add	 edx, 175		; 000000afH
  00628	52		 push	 edx
  00629	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00633	50		 push	 eax
  00634	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00639	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv307[ebp], 0
$LN98@assess_tas:
  00640	b9 01 00 00 00	 mov	 ecx, 1
  00645	85 c9		 test	 ecx, ecx
  00647	74 09		 je	 SHORT $LN99@assess_tas
  00649	c7 45 84 8c 00
	00 00		 mov	 DWORD PTR tv315[ebp], 140 ; 0000008cH
  00650	eb 24		 jmp	 SHORT $LN100@assess_tas
$LN99@assess_tas:
  00652	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00658	81 c2 af 00 00
	00		 add	 edx, 175		; 000000afH
  0065e	52		 push	 edx
  0065f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00664	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00669	50		 push	 eax
  0066a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0066f	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv315[ebp], 0
$LN100@assess_tas:
  00676	68 8c 00 00 00	 push	 140			; 0000008cH
  0067b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0067e	51		 push	 ecx
  0067f	69 55 88 bc 02
	00 00		 imul	 edx, DWORD PTR tv307[ebp], 700
  00686	8b 45 84	 mov	 eax, DWORD PTR tv315[ebp]
  00689	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00690	ff d1		 call	 ecx
  00692	d9 5d d4	 fstp	 DWORD PTR _old_member_count$3[ebp]

; 271  : 
; 272  : 			new_member_count = get_local_entity_int_value (objective, INT_TYPE_MEMBER_COUNT);

  00695	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00699	74 0a		 je	 SHORT $LN101@assess_tas
  0069b	8b 45 f8	 mov	 eax, DWORD PTR _objective$[ebp]
  0069e	8b 08		 mov	 ecx, DWORD PTR [eax]
  006a0	89 4d 88	 mov	 DWORD PTR tv327[ebp], ecx
  006a3	eb 24		 jmp	 SHORT $LN102@assess_tas
$LN101@assess_tas:
  006a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  006ab	81 c2 b1 00 00
	00		 add	 edx, 177		; 000000b1H
  006b1	52		 push	 edx
  006b2	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  006b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006bc	50		 push	 eax
  006bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006c2	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv327[ebp], 0
$LN102@assess_tas:
  006c9	b9 01 00 00 00	 mov	 ecx, 1
  006ce	85 c9		 test	 ecx, ecx
  006d0	74 09		 je	 SHORT $LN103@assess_tas
  006d2	c7 45 84 86 00
	00 00		 mov	 DWORD PTR tv335[ebp], 134 ; 00000086H
  006d9	eb 24		 jmp	 SHORT $LN104@assess_tas
$LN103@assess_tas:
  006db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  006e1	81 c2 b1 00 00
	00		 add	 edx, 177		; 000000b1H
  006e7	52		 push	 edx
  006e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  006ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006f2	50		 push	 eax
  006f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f8	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv335[ebp], 0
$LN104@assess_tas:
  006ff	68 86 00 00 00	 push	 134			; 00000086H
  00704	8b 4d f8	 mov	 ecx, DWORD PTR _objective$[ebp]
  00707	51		 push	 ecx
  00708	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv327[ebp], 1116
  0070f	8b 45 84	 mov	 eax, DWORD PTR tv335[ebp]
  00712	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00719	ff d1		 call	 ecx
  0071b	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0071f	f3 0f 11 45 d0	 movss	 DWORD PTR _new_member_count$2[ebp], xmm0

; 273  : 
; 274  : 			ASSERT (old_member_count > 0.0);

  00724	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _old_member_count$3[ebp]
  00729	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00731	77 1a		 ja	 SHORT $LN28@assess_tas
  00733	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00738	05 b3 00 00 00	 add	 eax, 179		; 000000b3H
  0073d	50		 push	 eax
  0073e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00743	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EKNFBFOM@old_member_count?5?$DO?50?40@
  00748	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN28@assess_tas:

; 275  : 
; 276  : 			if (new_member_count > 0.0)

  0074d	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _new_member_count$2[ebp]
  00752	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0075a	0f 86 c9 00 00
	00		 jbe	 $LN29@assess_tas

; 277  : 			{
; 278  : 				if (old_member_count <= 4)

  00760	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  00768	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _old_member_count$3[ebp]
  0076c	72 0a		 jb	 SHORT $LN31@assess_tas

; 279  : 				{
; 280  : 					//
; 281  : 					// If group had 4 or less members in it to start with, then only pass mission if all destroyed
; 282  : 					//
; 283  : 					
; 284  : 					rating = 0.0;

  0076e	0f 57 c0	 xorps	 xmm0, xmm0
  00771	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 285  : 				}
; 286  : 				else

  00776	eb 71		 jmp	 SHORT $LN32@assess_tas
$LN31@assess_tas:

; 287  : 				{
; 288  : 					rating = (old_member_count - new_member_count) / old_member_count;

  00778	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _old_member_count$3[ebp]
  0077d	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _new_member_count$2[ebp]
  00782	f3 0f 5e 45 d4	 divss	 xmm0, DWORD PTR _old_member_count$3[ebp]
  00787	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 289  : 	
; 290  : 					rating = bound (rating, 0.0, 1.0);

  0078c	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  00791	0f 57 c9	 xorps	 xmm1, xmm1
  00794	66 0f 2f c8	 comisd	 xmm1, xmm0
  00798	76 0a		 jbe	 SHORT $LN107@assess_tas
  0079a	0f 57 c0	 xorps	 xmm0, xmm0
  0079d	f2 0f 11 45 84	 movsd	 QWORD PTR tv359[ebp], xmm0
  007a2	eb 3b		 jmp	 SHORT $LN108@assess_tas
$LN107@assess_tas:
  007a4	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  007a9	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  007b1	76 12		 jbe	 SHORT $LN105@assess_tas
  007b3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  007bb	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv358[ebp], xmm0
  007c3	eb 0d		 jmp	 SHORT $LN106@assess_tas
$LN105@assess_tas:
  007c5	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  007ca	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv358[ebp], xmm0
$LN106@assess_tas:
  007d2	f2 0f 10 85 7c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv358[ebp]
  007da	f2 0f 11 45 84	 movsd	 QWORD PTR tv359[ebp], xmm0
$LN108@assess_tas:
  007df	f2 0f 5a 45 84	 cvtsd2ss xmm0, QWORD PTR tv359[ebp]
  007e4	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0
$LN32@assess_tas:

; 291  : 				}
; 292  : 				
; 293  : 				if (rating >= success)

  007e9	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rating$[ebp]
  007ee	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _success$[ebp]
  007f2	72 09		 jb	 SHORT $LN33@assess_tas

; 294  : 				{
; 295  : 					//
; 296  : 					// enough members killed for success
; 297  : 					//
; 298  : 					
; 299  : 					result = TASK_COMPLETED_SUCCESS;

  007f4	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3
  007fb	eb 2a		 jmp	 SHORT $LN38@assess_tas
$LN33@assess_tas:

; 300  : 				}
; 301  : 				else if (rating >= partial)

  007fd	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rating$[ebp]
  00802	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _partial$[ebp]
  00806	72 09		 jb	 SHORT $LN35@assess_tas

; 302  : 				{
; 303  : 					//
; 304  : 					// enough members killed for partial success
; 305  : 					//
; 306  : 					
; 307  : 					result = TASK_COMPLETED_PARTIAL;

  00808	c7 45 e0 02 00
	00 00		 mov	 DWORD PTR _result$[ebp], 2

; 308  : 				}
; 309  : 				else

  0080f	eb 16		 jmp	 SHORT $LN38@assess_tas
$LN35@assess_tas:

; 310  : 				{
; 311  : 					//
; 312  : 					// Not enough members killed for success.......
; 313  : 					//
; 314  : 					
; 315  : 					if (task_terminated == TASK_TERMINATED_IN_PROGRESS)

  00811	83 7d 0c 00	 cmp	 DWORD PTR _task_terminated$[ebp], 0
  00815	75 09		 jne	 SHORT $LN37@assess_tas

; 316  : 					{
; 317  : 						//
; 318  : 						// ..... O.K. If the task is still in progress ....
; 319  : 						//
; 320  : 						
; 321  : 						result = TASK_INCOMPLETE;

  00817	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 322  : 					}
; 323  : 					else

  0081e	eb 07		 jmp	 SHORT $LN38@assess_tas
$LN37@assess_tas:

; 324  : 					{
; 325  : 						//
; 326  : 						// .... But failure if the task has been terminated for whatever reason
; 327  : 						//
; 328  : 						
; 329  : 						result = TASK_COMPLETED_FAILURE;

  00820	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN38@assess_tas:

; 330  : 					}
; 331  : 				}
; 332  : 			}
; 333  : 			else

  00827	eb 14		 jmp	 SHORT $LN30@assess_tas
$LN29@assess_tas:

; 334  : 			{
; 335  : 				//
; 336  : 				// No members left in group - so must be a success
; 337  : 				//
; 338  : 				
; 339  : 				rating = 1.0;

  00829	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00831	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 340  : 				
; 341  : 				result = TASK_COMPLETED_SUCCESS;

  00836	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3
$LN30@assess_tas:

; 342  : 			}
; 343  : 
; 344  : 			break;

  0083d	e9 87 04 00 00	 jmp	 $LN2@assess_tas
$LN39@assess_tas:

; 345  : 		}
; 346  : 
; 347  : 		case ENTITY_SUB_TYPE_TASK_GROUND_STRIKE:
; 348  : 		case ENTITY_SUB_TYPE_TASK_ANTI_SHIP_STRIKE:
; 349  : 		{
; 350  : 			float
; 351  : 				min_eff;
; 352  : 
; 353  : 			ASSERT (objective);

  00842	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00846	75 1a		 jne	 SHORT $LN40@assess_tas
  00848	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  0084d	05 02 01 00 00	 add	 eax, 258		; 00000102H
  00852	50		 push	 eax
  00853	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00858	68 00 00 00 00	 push	 OFFSET ??_C@_09FKEDLGBF@objective@
  0085d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN40@assess_tas:

; 354  : 
; 355  : 			ASSERT (get_local_entity_type (objective) == ENTITY_TYPE_KEYSITE);

  00862	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00866	74 0a		 je	 SHORT $LN109@assess_tas
  00868	8b 45 f8	 mov	 eax, DWORD PTR _objective$[ebp]
  0086b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0086d	89 4d 88	 mov	 DWORD PTR tv375[ebp], ecx
  00870	eb 24		 jmp	 SHORT $LN110@assess_tas
$LN109@assess_tas:
  00872	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00878	81 c2 04 01 00
	00		 add	 edx, 260		; 00000104H
  0087e	52		 push	 edx
  0087f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00884	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00889	50		 push	 eax
  0088a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0088f	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv375[ebp], 0
$LN110@assess_tas:
  00896	83 7d 88 0f	 cmp	 DWORD PTR tv375[ebp], 15 ; 0000000fH
  0089a	74 1a		 je	 SHORT $LN41@assess_tas
  0089c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  008a1	05 04 01 00 00	 add	 eax, 260		; 00000104H
  008a6	50		 push	 eax
  008a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  008ac	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PNBAHEDI@get_local_entity_type?5?$CIobjectiv@
  008b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN41@assess_tas:

; 356  : 
; 357  : 			min_eff = get_local_entity_float_value (objective, FLOAT_TYPE_MINIMUM_EFFICIENCY);

  008b6	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  008ba	74 0a		 je	 SHORT $LN111@assess_tas
  008bc	8b 45 f8	 mov	 eax, DWORD PTR _objective$[ebp]
  008bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  008c1	89 4d 88	 mov	 DWORD PTR tv387[ebp], ecx
  008c4	eb 24		 jmp	 SHORT $LN112@assess_tas
$LN111@assess_tas:
  008c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  008cc	81 c2 06 01 00
	00		 add	 edx, 262		; 00000106H
  008d2	52		 push	 edx
  008d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  008d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008dd	50		 push	 eax
  008de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e3	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv387[ebp], 0
$LN112@assess_tas:
  008ea	b9 01 00 00 00	 mov	 ecx, 1
  008ef	85 c9		 test	 ecx, ecx
  008f1	74 09		 je	 SHORT $LN113@assess_tas
  008f3	c7 45 84 51 00
	00 00		 mov	 DWORD PTR tv395[ebp], 81 ; 00000051H
  008fa	eb 24		 jmp	 SHORT $LN114@assess_tas
$LN113@assess_tas:
  008fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00902	81 c2 06 01 00
	00		 add	 edx, 262		; 00000106H
  00908	52		 push	 edx
  00909	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0090e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00913	50		 push	 eax
  00914	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00919	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv395[ebp], 0
$LN114@assess_tas:
  00920	6a 51		 push	 81			; 00000051H
  00922	8b 4d f8	 mov	 ecx, DWORD PTR _objective$[ebp]
  00925	51		 push	 ecx
  00926	69 55 88 bc 02
	00 00		 imul	 edx, DWORD PTR tv387[ebp], 700
  0092d	8b 45 84	 mov	 eax, DWORD PTR tv395[ebp]
  00930	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00937	ff d1		 call	 ecx
  00939	d9 5d cc	 fstp	 DWORD PTR _min_eff$1[ebp]

; 358  : 
; 359  : 			//
; 360  : 			// By reducing the minimum efficiency required for success, it will stop the victim keysite from being
; 361  : 			// safe by simply repairing one structure...
; 362  : 			//
; 363  : 			
; 364  : 			min_eff *= 0.8;

  0093c	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _min_eff$1[ebp]
  00941	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe999999999999a
  00949	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0094d	f3 0f 11 45 cc	 movss	 DWORD PTR _min_eff$1[ebp], xmm0

; 365  : 
; 366  : 			if ((!get_local_entity_int_value (objective, INT_TYPE_IN_USE)) ||

  00952	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00956	74 0a		 je	 SHORT $LN115@assess_tas
  00958	8b 45 f8	 mov	 eax, DWORD PTR _objective$[ebp]
  0095b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0095d	89 4d 88	 mov	 DWORD PTR tv409[ebp], ecx
  00960	eb 1d		 jmp	 SHORT $LN116@assess_tas
$LN115@assess_tas:
  00962	68 6e 01 00 00	 push	 366			; 0000016eH
  00967	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0096c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00972	52		 push	 edx
  00973	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00978	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv409[ebp], 0
$LN116@assess_tas:
  0097f	b8 01 00 00 00	 mov	 eax, 1
  00984	85 c0		 test	 eax, eax
  00986	74 09		 je	 SHORT $LN117@assess_tas
  00988	c7 45 84 6d 00
	00 00		 mov	 DWORD PTR tv416[ebp], 109 ; 0000006dH
  0098f	eb 1d		 jmp	 SHORT $LN118@assess_tas
$LN117@assess_tas:
  00991	68 6e 01 00 00	 push	 366			; 0000016eH
  00996	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0099b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009a1	51		 push	 ecx
  009a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a7	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv416[ebp], 0
$LN118@assess_tas:
  009ae	6a 6d		 push	 109			; 0000006dH
  009b0	8b 55 f8	 mov	 edx, DWORD PTR _objective$[ebp]
  009b3	52		 push	 edx
  009b4	69 45 88 5c 04
	00 00		 imul	 eax, DWORD PTR tv409[ebp], 1116
  009bb	8b 4d 84	 mov	 ecx, DWORD PTR tv416[ebp]
  009be	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  009c5	ff d2		 call	 edx
  009c7	85 c0		 test	 eax, eax
  009c9	0f 84 83 00 00
	00		 je	 $LN44@assess_tas
  009cf	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  009d3	74 0a		 je	 SHORT $LN119@assess_tas
  009d5	8b 45 f8	 mov	 eax, DWORD PTR _objective$[ebp]
  009d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  009da	89 4d 88	 mov	 DWORD PTR tv428[ebp], ecx
  009dd	eb 1d		 jmp	 SHORT $LN120@assess_tas
$LN119@assess_tas:
  009df	68 6f 01 00 00	 push	 367			; 0000016fH
  009e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  009e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009ef	52		 push	 edx
  009f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f5	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv428[ebp], 0
$LN120@assess_tas:
  009fc	b8 01 00 00 00	 mov	 eax, 1
  00a01	85 c0		 test	 eax, eax
  00a03	74 09		 je	 SHORT $LN121@assess_tas
  00a05	c7 45 84 21 00
	00 00		 mov	 DWORD PTR tv435[ebp], 33 ; 00000021H
  00a0c	eb 1d		 jmp	 SHORT $LN122@assess_tas
$LN121@assess_tas:
  00a0e	68 6f 01 00 00	 push	 367			; 0000016fH
  00a13	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a18	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00a1e	51		 push	 ecx
  00a1f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a24	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv435[ebp], 0
$LN122@assess_tas:
  00a2b	6a 21		 push	 33			; 00000021H
  00a2d	8b 55 f8	 mov	 edx, DWORD PTR _objective$[ebp]
  00a30	52		 push	 edx
  00a31	69 45 88 bc 02
	00 00		 imul	 eax, DWORD PTR tv428[ebp], 700
  00a38	8b 4d 84	 mov	 ecx, DWORD PTR tv435[ebp]
  00a3b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00a42	ff d2		 call	 edx
  00a44	d9 5d 80	 fstp	 DWORD PTR tv727[ebp]
  00a47	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _min_eff$1[ebp]
  00a4c	0f 2f 45 80	 comiss	 xmm0, DWORD PTR tv727[ebp]
  00a50	76 19		 jbe	 SHORT $LN42@assess_tas
$LN44@assess_tas:

; 367  : 				(get_local_entity_float_value (objective, FLOAT_TYPE_EFFICIENCY) < min_eff))
; 368  : 			{
; 369  : 				//
; 370  : 				// Assuming that strike tasks are only created for keysites with above minimum efficiency and in-use,
; 371  : 				// If the efficiency is now below minimum, or not in use then the task was a success...
; 372  : 				//
; 373  : 					
; 374  : 				rating = 1.0;

  00a52	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a5a	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 375  : 
; 376  : 				result = TASK_COMPLETED_SUCCESS;

  00a5f	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3

; 377  : 			}
; 378  : 			else

  00a66	e9 eb 01 00 00	 jmp	 $LN52@assess_tas
$LN42@assess_tas:

; 379  : 			{
; 380  : 				//
; 381  : 				// otherwise, give rating based on how much the efficiency has decreased 
; 382  : 				//
; 383  : 
; 384  : 				rating = get_local_entity_float_value (en, FLOAT_TYPE_TASK_USER_DATA) - get_local_entity_float_value (objective, FLOAT_TYPE_EFFICIENCY);

  00a6b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00a6f	74 0a		 je	 SHORT $LN123@assess_tas
  00a71	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00a74	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a76	89 4d 88	 mov	 DWORD PTR tv448[ebp], ecx
  00a79	eb 24		 jmp	 SHORT $LN124@assess_tas
$LN123@assess_tas:
  00a7b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00a81	81 c2 21 01 00
	00		 add	 edx, 289		; 00000121H
  00a87	52		 push	 edx
  00a88	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a8d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a92	50		 push	 eax
  00a93	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a98	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv448[ebp], 0
$LN124@assess_tas:
  00a9f	b9 01 00 00 00	 mov	 ecx, 1
  00aa4	85 c9		 test	 ecx, ecx
  00aa6	74 09		 je	 SHORT $LN125@assess_tas
  00aa8	c7 45 84 8c 00
	00 00		 mov	 DWORD PTR tv456[ebp], 140 ; 0000008cH
  00aaf	eb 24		 jmp	 SHORT $LN126@assess_tas
$LN125@assess_tas:
  00ab1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00ab7	81 c2 21 01 00
	00		 add	 edx, 289		; 00000121H
  00abd	52		 push	 edx
  00abe	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ac3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00ac8	50		 push	 eax
  00ac9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ace	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv456[ebp], 0
$LN126@assess_tas:
  00ad5	83 7d f8 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00ad9	74 0a		 je	 SHORT $LN127@assess_tas
  00adb	8b 4d f8	 mov	 ecx, DWORD PTR _objective$[ebp]
  00ade	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ae0	89 55 80	 mov	 DWORD PTR tv468[ebp], edx
  00ae3	eb 23		 jmp	 SHORT $LN128@assess_tas
$LN127@assess_tas:
  00ae5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00aea	05 21 01 00 00	 add	 eax, 289		; 00000121H
  00aef	50		 push	 eax
  00af0	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00af5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00afb	51		 push	 ecx
  00afc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b01	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv468[ebp], 0
$LN128@assess_tas:
  00b08	ba 01 00 00 00	 mov	 edx, 1
  00b0d	85 d2		 test	 edx, edx
  00b0f	74 0c		 je	 SHORT $LN129@assess_tas
  00b11	c7 85 7c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv476[ebp], 33 ; 00000021H
  00b1b	eb 26		 jmp	 SHORT $LN130@assess_tas
$LN129@assess_tas:
  00b1d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00b22	05 21 01 00 00	 add	 eax, 289		; 00000121H
  00b27	50		 push	 eax
  00b28	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b2d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00b33	51		 push	 ecx
  00b34	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b39	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv476[ebp], 0
$LN130@assess_tas:
  00b43	68 8c 00 00 00	 push	 140			; 0000008cH
  00b48	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00b4b	52		 push	 edx
  00b4c	69 45 88 bc 02
	00 00		 imul	 eax, DWORD PTR tv448[ebp], 700
  00b53	8b 4d 84	 mov	 ecx, DWORD PTR tv456[ebp]
  00b56	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00b5d	ff d2		 call	 edx
  00b5f	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv750[ebp]
  00b65	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv750[ebp]
  00b6d	6a 21		 push	 33			; 00000021H
  00b6f	8b 45 f8	 mov	 eax, DWORD PTR _objective$[ebp]
  00b72	50		 push	 eax
  00b73	69 4d 80 bc 02
	00 00		 imul	 ecx, DWORD PTR tv468[ebp], 700
  00b7a	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv476[ebp]
  00b80	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[ecx+edx*4]
  00b87	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR tv797[ebp], xmm0
  00b8f	ff d0		 call	 eax
  00b91	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv757[ebp]
  00b97	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR tv797[ebp]
  00b9f	f3 0f 5c 85 70
	ff ff ff	 subss	 xmm0, DWORD PTR tv757[ebp]
  00ba7	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 385  : 
; 386  : 				rating = bound (rating, 0.0, 1.0);

  00bac	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  00bb1	0f 57 c9	 xorps	 xmm1, xmm1
  00bb4	66 0f 2f c8	 comisd	 xmm1, xmm0
  00bb8	76 0a		 jbe	 SHORT $LN133@assess_tas
  00bba	0f 57 c0	 xorps	 xmm0, xmm0
  00bbd	f2 0f 11 45 84	 movsd	 QWORD PTR tv489[ebp], xmm0
  00bc2	eb 3b		 jmp	 SHORT $LN134@assess_tas
$LN133@assess_tas:
  00bc4	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  00bc9	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00bd1	76 12		 jbe	 SHORT $LN131@assess_tas
  00bd3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00bdb	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv488[ebp], xmm0
  00be3	eb 0d		 jmp	 SHORT $LN132@assess_tas
$LN131@assess_tas:
  00be5	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _rating$[ebp]
  00bea	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv488[ebp], xmm0
$LN132@assess_tas:
  00bf2	f2 0f 10 85 7c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv488[ebp]
  00bfa	f2 0f 11 45 84	 movsd	 QWORD PTR tv489[ebp], xmm0
$LN134@assess_tas:
  00bff	f2 0f 5a 45 84	 cvtsd2ss xmm0, QWORD PTR tv489[ebp]
  00c04	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 387  : 
; 388  : 				if (rating >= success)

  00c09	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rating$[ebp]
  00c0e	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _success$[ebp]
  00c12	72 09		 jb	 SHORT $LN45@assess_tas

; 389  : 				{
; 390  : 					result = TASK_COMPLETED_SUCCESS;

  00c14	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3
  00c1b	eb 39		 jmp	 SHORT $LN52@assess_tas
$LN45@assess_tas:

; 391  : 				}
; 392  : 				else if (rating >= partial)

  00c1d	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rating$[ebp]
  00c22	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _partial$[ebp]
  00c26	72 09		 jb	 SHORT $LN47@assess_tas

; 393  : 				{
; 394  : 					result = TASK_COMPLETED_PARTIAL;

  00c28	c7 45 e0 02 00
	00 00		 mov	 DWORD PTR _result$[ebp], 2

; 395  : 				}
; 396  : 				else

  00c2f	eb 25		 jmp	 SHORT $LN52@assess_tas
$LN47@assess_tas:

; 397  : 				{
; 398  : 					//
; 399  : 					// Rating not good enough for success.......
; 400  : 					//
; 401  : 					
; 402  : 					if (task_terminated == TASK_TERMINATED_IN_PROGRESS)

  00c31	83 7d 0c 00	 cmp	 DWORD PTR _task_terminated$[ebp], 0
  00c35	75 09		 jne	 SHORT $LN49@assess_tas

; 403  : 					{
; 404  : 						//
; 405  : 						// ..... O.K. If the task is still in progress ....
; 406  : 						//
; 407  : 						
; 408  : 						result = TASK_INCOMPLETE;

  00c37	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0
  00c3e	eb 16		 jmp	 SHORT $LN52@assess_tas
$LN49@assess_tas:

; 409  : 					}
; 410  : 					else if (task_terminated == TASK_TERMINATED_WAYPOINT_ROUTE_COMPLETE)

  00c40	83 7d 0c 06	 cmp	 DWORD PTR _task_terminated$[ebp], 6
  00c44	75 09		 jne	 SHORT $LN51@assess_tas

; 411  : 					{
; 412  : 						//
; 413  : 						// ..... partial if group returned to base ....
; 414  : 						//
; 415  : 						
; 416  : 						result = TASK_COMPLETED_PARTIAL;

  00c46	c7 45 e0 02 00
	00 00		 mov	 DWORD PTR _result$[ebp], 2

; 417  : 					}
; 418  : 					else

  00c4d	eb 07		 jmp	 SHORT $LN52@assess_tas
$LN51@assess_tas:

; 419  : 					{
; 420  : 						//
; 421  : 						// .... But failure if the task has been terminated for whatever reason
; 422  : 						//
; 423  : 						
; 424  : 						result = TASK_COMPLETED_FAILURE;

  00c4f	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN52@assess_tas:

; 425  : 					}
; 426  : 				}
; 427  : 			}
; 428  : 
; 429  : 			break;

  00c56	eb 71		 jmp	 SHORT $LN2@assess_tas
$LN53@assess_tas:

; 430  : 		}
; 431  : 
; 432  : 		case ENTITY_SUB_TYPE_TASK_BDA:
; 433  : 		case ENTITY_SUB_TYPE_TASK_RECON:
; 434  : 		case ENTITY_SUB_TYPE_TASK_REPAIR:
; 435  : 		case ENTITY_SUB_TYPE_TASK_SUPPLY:
; 436  : 		case ENTITY_SUB_TYPE_TASK_TROOP_INSERTION:
; 437  : 		{
; 438  : 			//
; 439  : 			// SUCCESS if objective message 
; 440  : 			// INCOMPLETE if in progress
; 441  : 			// FAILURE any other
; 442  : 			//
; 443  : 			
; 444  : 			if (task_terminated == TASK_TERMINATED_OBJECTIVE_MESSAGE)

  00c58	83 7d 0c 04	 cmp	 DWORD PTR _task_terminated$[ebp], 4
  00c5c	75 16		 jne	 SHORT $LN54@assess_tas

; 445  : 			{
; 446  : 				rating = 1.0;

  00c5e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00c66	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 447  : 
; 448  : 				result = TASK_COMPLETED_SUCCESS;

  00c6b	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3
  00c72	eb 0f		 jmp	 SHORT $LN57@assess_tas
$LN54@assess_tas:

; 449  : 			}
; 450  : 			else if (task_terminated == TASK_TERMINATED_IN_PROGRESS)

  00c74	83 7d 0c 00	 cmp	 DWORD PTR _task_terminated$[ebp], 0
  00c78	75 02		 jne	 SHORT $LN56@assess_tas

; 451  : 			{
; 452  : 			}
; 453  : 			else

  00c7a	eb 07		 jmp	 SHORT $LN57@assess_tas
$LN56@assess_tas:

; 454  : 			{
; 455  : 				result = TASK_COMPLETED_FAILURE;

  00c7c	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN57@assess_tas:

; 456  : 			}
; 457  : 
; 458  : 			break;

  00c83	eb 44		 jmp	 SHORT $LN2@assess_tas
$LN58@assess_tas:

; 459  : 		}
; 460  : 		
; 461  : 		case ENTITY_SUB_TYPE_TASK_OCA_STRIKE:
; 462  : 		case ENTITY_SUB_TYPE_TASK_OCA_SWEEP:
; 463  : 		case ENTITY_SUB_TYPE_TASK_TROOP_MOVEMENT_PATROL:
; 464  : 		{
; 465  : 			if ((task_terminated == TASK_TERMINATED_WAYPOINT_ROUTE_COMPLETE) || (task_terminated == TASK_TERMINATED_OBJECTIVE_MESSAGE))

  00c85	83 7d 0c 06	 cmp	 DWORD PTR _task_terminated$[ebp], 6
  00c89	74 06		 je	 SHORT $LN61@assess_tas
  00c8b	83 7d 0c 04	 cmp	 DWORD PTR _task_terminated$[ebp], 4
  00c8f	75 16		 jne	 SHORT $LN59@assess_tas
$LN61@assess_tas:

; 466  : 			{
; 467  : 				rating = 1.0;

  00c91	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00c99	f3 0f 11 45 ec	 movss	 DWORD PTR _rating$[ebp], xmm0

; 468  : 
; 469  : 				result = TASK_COMPLETED_SUCCESS;

  00c9e	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR _result$[ebp], 3
  00ca5	eb 0f		 jmp	 SHORT $LN63@assess_tas
$LN59@assess_tas:

; 470  : 			}
; 471  : 			else if (task_terminated == TASK_TERMINATED_IN_PROGRESS)

  00ca7	83 7d 0c 00	 cmp	 DWORD PTR _task_terminated$[ebp], 0
  00cab	75 02		 jne	 SHORT $LN62@assess_tas

; 472  : 			{
; 473  : 			}
; 474  : 			else

  00cad	eb 07		 jmp	 SHORT $LN63@assess_tas
$LN62@assess_tas:

; 475  : 			{
; 476  : 				result = TASK_COMPLETED_FAILURE;

  00caf	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN63@assess_tas:

; 477  : 			}
; 478  : 				
; 479  : 			break;

  00cb6	eb 11		 jmp	 SHORT $LN2@assess_tas
$LN64@assess_tas:

; 480  : 		}
; 481  : 
; 482  : 		default:
; 483  : 		{
; 484  : 			debug_fatal ("TASK: Unknown Task Type %d", sub_type);

  00cb8	8b 45 fc	 mov	 eax, DWORD PTR _sub_type$[ebp]
  00cbb	50		 push	 eax
  00cbc	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FCMGHEEI@TASK?3?5Unknown?5Task?5Type?5?$CFd@
  00cc1	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00cc6	83 c4 08	 add	 esp, 8
$LN2@assess_tas:

; 485  : 
; 486  : 			break;
; 487  : 		}
; 488  : 	}
; 489  : 
; 490  : 	//
; 491  : 	// determine overall task success rating
; 492  : 	//
; 493  : 
; 494  : 	if (rating != get_local_entity_float_value (en, FLOAT_TYPE_RATING))

  00cc9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00ccd	74 0a		 je	 SHORT $LN135@assess_tas
  00ccf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00cd2	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cd4	89 4d 88	 mov	 DWORD PTR tv509[ebp], ecx
  00cd7	eb 1d		 jmp	 SHORT $LN136@assess_tas
$LN135@assess_tas:
  00cd9	68 ee 01 00 00	 push	 494			; 000001eeH
  00cde	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ce3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ce9	52		 push	 edx
  00cea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cef	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv509[ebp], 0
$LN136@assess_tas:
  00cf6	b8 01 00 00 00	 mov	 eax, 1
  00cfb	85 c0		 test	 eax, eax
  00cfd	74 09		 je	 SHORT $LN137@assess_tas
  00cff	c7 45 84 6c 00
	00 00		 mov	 DWORD PTR tv516[ebp], 108 ; 0000006cH
  00d06	eb 1d		 jmp	 SHORT $LN138@assess_tas
$LN137@assess_tas:
  00d08	68 ee 01 00 00	 push	 494			; 000001eeH
  00d0d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d12	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00d18	51		 push	 ecx
  00d19	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d1e	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv516[ebp], 0
$LN138@assess_tas:
  00d25	6a 6c		 push	 108			; 0000006cH
  00d27	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00d2a	52		 push	 edx
  00d2b	69 45 88 bc 02
	00 00		 imul	 eax, DWORD PTR tv509[ebp], 700
  00d32	8b 4d 84	 mov	 ecx, DWORD PTR tv516[ebp]
  00d35	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00d3c	ff d2		 call	 edx
  00d3e	d9 5d 80	 fstp	 DWORD PTR tv778[ebp]
  00d41	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rating$[ebp]
  00d46	0f 2e 45 80	 ucomiss xmm0, DWORD PTR tv778[ebp]
  00d4a	9f		 lahf
  00d4b	f6 c4 44	 test	 ah, 68			; 00000044H
  00d4e	0f 8b 97 00 00
	00		 jnp	 $LN65@assess_tas

; 495  : 	{
; 496  : 		set_client_server_entity_float_value (en, FLOAT_TYPE_RATING, rating);

  00d54	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00d58	74 0a		 je	 SHORT $LN139@assess_tas
  00d5a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d5d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d5f	89 4d 88	 mov	 DWORD PTR tv529[ebp], ecx
  00d62	eb 24		 jmp	 SHORT $LN140@assess_tas
$LN139@assess_tas:
  00d64	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00d6a	81 c2 91 01 00
	00		 add	 edx, 401		; 00000191H
  00d70	52		 push	 edx
  00d71	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d76	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d7b	50		 push	 eax
  00d7c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d81	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv529[ebp], 0
$LN140@assess_tas:
  00d88	b9 01 00 00 00	 mov	 ecx, 1
  00d8d	85 c9		 test	 ecx, ecx
  00d8f	74 09		 je	 SHORT $LN141@assess_tas
  00d91	c7 45 84 6c 00
	00 00		 mov	 DWORD PTR tv537[ebp], 108 ; 0000006cH
  00d98	eb 24		 jmp	 SHORT $LN142@assess_tas
$LN141@assess_tas:
  00d9a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z@4JA
  00da0	81 c2 91 01 00
	00		 add	 edx, 401		; 00000191H
  00da6	52		 push	 edx
  00da7	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@KNDMHOCA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00db1	50		 push	 eax
  00db2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00db7	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv537[ebp], 0
$LN142@assess_tas:
  00dbe	51		 push	 ecx
  00dbf	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rating$[ebp]
  00dc4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dc9	6a 6c		 push	 108			; 0000006cH
  00dcb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00dce	51		 push	 ecx
  00dcf	69 55 88 78 05
	00 00		 imul	 edx, DWORD PTR tv529[ebp], 1400
  00dd6	8b 45 84	 mov	 eax, DWORD PTR tv537[ebp]
  00dd9	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  00de0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00de6	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00de9	ff d0		 call	 eax
$LN65@assess_tas:

; 497  : 	}
; 498  : 
; 499  : 	return result;

  00deb	8b 45 e0	 mov	 eax, DWORD PTR _result$[ebp]

; 500  : }

  00dee	5f		 pop	 edi
  00def	5e		 pop	 esi
  00df0	5b		 pop	 ebx
  00df1	8b e5		 mov	 esp, ebp
  00df3	5d		 pop	 ebp
  00df4	c2 08 00	 ret	 8
  00df7	90		 npad	 1
$LN144@assess_tas:
  00df8	00 00 00 00	 DD	 $LN8@assess_tas
  00dfc	00 00 00 00	 DD	 $LN39@assess_tas
  00e00	00 00 00 00	 DD	 $LN27@assess_tas
  00e04	00 00 00 00	 DD	 $LN13@assess_tas
  00e08	00 00 00 00	 DD	 $LN53@assess_tas
  00e0c	00 00 00 00	 DD	 $LN18@assess_tas
  00e10	00 00 00 00	 DD	 $LN58@assess_tas
  00e14	00 00 00 00	 DD	 $LN64@assess_tas
$LN143@assess_tas:
  00e18	00		 DB	 0
  00e19	01		 DB	 1
  00e1a	02		 DB	 2
  00e1b	03		 DB	 3
  00e1c	04		 DB	 4
  00e1d	02		 DB	 2
  00e1e	00		 DB	 0
  00e1f	03		 DB	 3
  00e20	07		 DB	 7
  00e21	05		 DB	 5
  00e22	00		 DB	 0
  00e23	01		 DB	 1
  00e24	07		 DB	 7
  00e25	07		 DB	 7
  00e26	06		 DB	 6
  00e27	06		 DB	 6
  00e28	04		 DB	 4
  00e29	04		 DB	 4
  00e2a	00		 DB	 0
  00e2b	02		 DB	 2
  00e2c	04		 DB	 4
  00e2d	07		 DB	 7
  00e2e	07		 DB	 7
  00e2f	00		 DB	 0
  00e30	00		 DB	 0
  00e31	04		 DB	 4
  00e32	07		 DB	 7
  00e33	07		 DB	 7
  00e34	06		 DB	 6
?assess_task_completeness@@YG?AW4TASK_COMPLETED_TYPES@@PAUENTITY@@W4TASK_TERMINATED_TYPES@@@Z ENDP ; assess_task_completeness
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
