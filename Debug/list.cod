; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\list\list.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?ui_object_list_item_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_list_item_function
PUBLIC	?ui_object_list_item_right_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_list_item_right_function
PUBLIC	?get_next_list_position@@YGMPAUUI_OBJECT@@@Z	; get_next_list_position
PUBLIC	?get_next_list_virtual_position@@YGMPAUUI_OBJECT@@@Z ; get_next_list_virtual_position
PUBLIC	?ui_object_destroy_list_items@@YGXPAUUI_OBJECT@@@Z ; ui_object_destroy_list_items
PUBLIC	?ui_object_destroy_list_item@@YGHPAUUI_OBJECT@@0@Z ; ui_object_destroy_list_item
PUBLIC	?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list
PUBLIC	?add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list_with_word_wrap
PUBLIC	?resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z	; resize_pop_up_list
PUBLIC	?ui_object_unselect_list@@YGXPAUUI_OBJECT@@@Z	; ui_object_unselect_list
PUBLIC	?__LINE__Var@?0??add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA ; `add_to_pop_up_list'::`1'::__LINE__Var
PUBLIC	??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_03GJLPFLNF@obj@				; `string'
PUBLIC	?__LINE__Var@?0??add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA ; `add_to_pop_up_list_with_word_wrap'::`1'::__LINE__Var
PUBLIC	??_C@_0DA@CMBCHMPL@ui_get_string_length?5?$CIword?$CJ?5?$DM?5m@ ; `string'
PUBLIC	??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?0??resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z@4JA ; `resize_pop_up_list'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@KMBFEGGP@obj?9?$DOtype?5?$DN?$DN?5UI_TYPE_LIST_BOX@ ; `string'
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	??_C@_0BN@CGDNFPGB@parent?9?$DOtype?5?$DN?$DN?5UI_TYPE_AREA@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@4014000000000000
EXTRN	_memset:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?get_ui_font_type@@YG?AW4FONT_TYPES@@XZ:PROC	; get_ui_font_type
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z:PROC	; destroy_ui_object
EXTRN	__ftol2_sse:PROC
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y_size
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_child
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	?fn_get_ui_object_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA:BYTE ; fn_get_ui_object_function
EXTRN	?fn_get_ui_object_right_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA:BYTE ; fn_get_ui_object_right_function
EXTRN	?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_notify_on
EXTRN	?fn_get_ui_object_highlighted_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_notify_on
EXTRN	?fn_get_ui_object_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_font_type
EXTRN	?fn_get_ui_object_highlighted_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_font_type
EXTRN	?fn_get_ui_object_highlighted_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_font_colour
EXTRN	__fltused:DWORD
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BN@CGDNFPGB@parent?9?$DOtype?5?$DN?$DN?5UI_TYPE_AREA@
CONST	SEGMENT
??_C@_0BN@CGDNFPGB@parent?9?$DOtype?5?$DN?$DN?5UI_TYPE_AREA@ DB 'parent->'
	DB	'type == UI_TYPE_AREA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KMBFEGGP@obj?9?$DOtype?5?$DN?$DN?5UI_TYPE_LIST_BOX@
CONST	SEGMENT
??_C@_0BO@KMBFEGGP@obj?9?$DOtype?5?$DN?$DN?5UI_TYPE_LIST_BOX@ DB 'obj->ty'
	DB	'pe == UI_TYPE_LIST_BOX', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z@4JA DD 0275H ; `resize_pop_up_list'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ DB 'ASSERT %s (%s'
	DB	':%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CMBCHMPL@ui_get_string_length?5?$CIword?$CJ?5?$DM?5m@
CONST	SEGMENT
??_C@_0DA@CMBCHMPL@ui_get_string_length?5?$CIword?$CJ?5?$DM?5m@ DB 'ui_ge'
	DB	't_string_length (word) < max_string_length', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA DD 0203H ; `add_to_pop_up_list_with_word_wrap'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03GJLPFLNF@obj@
CONST	SEGMENT
??_C@_03GJLPFLNF@obj@ DB 'obj', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\userint2\ui_obj\list\list.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA DD 0192H ; `add_to_pop_up_list'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?ui_object_unselect_list@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_item$ = -8						; size = 4
_area$ = -4						; size = 4
_list$ = 8						; size = 4
?ui_object_unselect_list@@YGXPAUUI_OBJECT@@@Z PROC	; ui_object_unselect_list, COMDAT

; 662  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 663  : 
; 664  : 	area_ui_object
; 665  : 		*area;
; 666  : 
; 667  : 	ui_object
; 668  : 		*item;
; 669  : 
; 670  : 	item = get_ui_object_child (list);

  00009	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 f8	 mov	 DWORD PTR _item$[ebp], eax
$LN2@ui_object_:

; 671  : 
; 672  : 	while (item)

  0001e	83 7d f8 00	 cmp	 DWORD PTR _item$[ebp], 0
  00022	74 2f		 je	 SHORT $LN1@ui_object_

; 673  : 	{
; 674  : 
; 675  : 		area = (area_ui_object *) item->data;

  00024	8b 45 f8	 mov	 eax, DWORD PTR _item$[ebp]
  00027	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002a	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 676  : 
; 677  : 		area->state = UI_OBJECT_STATE_OFF;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00030	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00033	83 e1 e7	 and	 ecx, -25		; ffffffe7H
  00036	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00039	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx

; 678  : 
; 679  : 		item = get_ui_object_next (item);

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _item$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d f8	 mov	 ecx, DWORD PTR _item$[ebp]
  00043	8b 11		 mov	 edx, DWORD PTR [ecx]
  00045	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0004c	ff d0		 call	 eax
  0004e	89 45 f8	 mov	 DWORD PTR _item$[ebp], eax

; 680  : 	}

  00051	eb cb		 jmp	 SHORT $LN2@ui_object_
$LN1@ui_object_:

; 681  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ui_object_unselect_list@@YGXPAUUI_OBJECT@@@Z ENDP	; ui_object_unselect_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv167 = -84						; size = 4
tv179 = -80						; size = 4
tv160 = -76						; size = 4
_parent$ = -8						; size = 4
_y$ = -4						; size = 4
_obj$ = 8						; size = 4
?resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z PROC		; resize_pop_up_list, COMDAT

; 629  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 630  : 	float
; 631  : 		y;
; 632  : 
; 633  : 	ui_object
; 634  : 		*parent;
; 635  : 
; 636  : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@resize_pop
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@resize_pop:

; 637  : 
; 638  : 	ASSERT (obj->type == UI_TYPE_LIST_BOX);

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	83 38 0d	 cmp	 DWORD PTR [eax], 13	; 0000000dH
  0002d	74 18		 je	 SHORT $LN3@resize_pop
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z@4JA
  00034	83 c0 09	 add	 eax, 9
  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@KMBFEGGP@obj?9?$DOtype?5?$DN?$DN?5UI_TYPE_LIST_BOX@
  00042	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@resize_pop:

; 639  : 
; 640  : 	parent = get_ui_object_parent (obj);

  00047	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0004e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00050	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00057	ff d0		 call	 eax
  00059	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 641  : 
; 642  : 	ASSERT (parent);

  0005c	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00060	75 18		 jne	 SHORT $LN4@resize_pop
  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z@4JA
  00067	83 c0 0d	 add	 eax, 13			; 0000000dH
  0006a	50		 push	 eax
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  00075	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@resize_pop:

; 643  : 
; 644  : 	ASSERT (parent->type == UI_TYPE_AREA);

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  0007d	83 38 01	 cmp	 DWORD PTR [eax], 1
  00080	74 18		 je	 SHORT $LN5@resize_pop
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z@4JA
  00087	83 c0 0f	 add	 eax, 15			; 0000000fH
  0008a	50		 push	 eax
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@CGDNFPGB@parent?9?$DOtype?5?$DN?$DN?5UI_TYPE_AREA@
  00095	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@resize_pop:

; 645  : 	
; 646  : 	//
; 647  : 	// re-size the list objects when items are added
; 648  : 	//
; 649  : 
; 650  : 	y = get_next_list_position (obj) / get_ui_object_y_size (parent);

  0009a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?get_next_list_position@@YGMPAUUI_OBJECT@@@Z ; get_next_list_position
  000a3	d9 5d b4	 fstp	 DWORD PTR tv160[ebp]
  000a6	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv160[ebp]
  000ab	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  000ae	51		 push	 ecx
  000af	8b 55 f8	 mov	 edx, DWORD PTR _parent$[ebp]
  000b2	8b 02		 mov	 eax, DWORD PTR [edx]
  000b4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  000bb	f3 0f 11 45 b0	 movss	 DWORD PTR tv179[ebp], xmm0
  000c0	ff d1		 call	 ecx
  000c2	d9 5d ac	 fstp	 DWORD PTR tv167[ebp]
  000c5	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv179[ebp]
  000ca	f3 0f 5e 45 ac	 divss	 xmm0, DWORD PTR tv167[ebp]
  000cf	f3 0f 11 45 fc	 movss	 DWORD PTR _y$[ebp], xmm0

; 651  : 
; 652  : 	set_ui_object_virtual_y_size (obj, y);

  000d4	51		 push	 ecx
  000d5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _y$[ebp]
  000da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000df	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000e2	50		 push	 eax
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000e6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  000ef	ff d0		 call	 eax

; 653  : 
; 654  : 	set_ui_object_virtual_y_size (obj, 1.0);

  000f1	51		 push	 ecx
  000f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ff	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00102	50		 push	 eax
  00103	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00106	8b 11		 mov	 edx, DWORD PTR [ecx]
  00108	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0010f	ff d0		 call	 eax

; 655  : }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 04 00	 ret	 4
?resize_pop_up_list@@YGXPAUUI_OBJECT@@@Z ENDP		; resize_pop_up_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z
_TEXT	SEGMENT
tv225 = -488						; size = 4
tv246 = -484						; size = 4
tv220 = -480						; size = 4
tv214 = -480						; size = 4
_max_string_length$ = -412				; size = 4
_new_line_flag$ = -408					; size = 4
_text_ptr$ = -404					; size = 4
_word_ptr$ = -400					; size = 4
_word$ = -396						; size = 128
_temp_text$ = -268					; size = 256
_item$ = -12						; size = 4
_font$ = -8						; size = 4
_old_font$ = -4						; size = 4
_text$ = 8						; size = 4
_obj$ = 12						; size = 4
_next_item$ = 16					; size = 4
_list_id$ = 20						; size = 4
_font_type$ = 24					; size = 4
_font_colour$ = 28					; size = 4
?add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z PROC ; add_to_pop_up_list_with_word_wrap, COMDAT

; 515  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 01 00
	00		 sub	 esp, 488		; 000001e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 516  : 
; 517  : 	font_types
; 518  : 		old_font,
; 519  : 		font;
; 520  : 
; 521  : 	ui_object
; 522  : 		*item = NULL;

  0000c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _item$[ebp], 0

; 523  : 
; 524  : 	char
; 525  : 		temp_text [256],
; 526  : 		word [128],
; 527  : 		*word_ptr;
; 528  : 	const char
; 529  : 		*text_ptr;
; 530  : 
; 531  : 	int
; 532  : 		new_line_flag,
; 533  : 		max_string_length;
; 534  : 
; 535  : 	old_font = get_ui_font_type ();

  00013	e8 00 00 00 00	 call	 ?get_ui_font_type@@YG?AW4FONT_TYPES@@XZ ; get_ui_font_type
  00018	89 45 fc	 mov	 DWORD PTR _old_font$[ebp], eax

; 536  : 
; 537  : 	font = get_ui_object_font_type (obj);

  0001b	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  0002b	ff d0		 call	 eax
  0002d	89 45 f8	 mov	 DWORD PTR _font$[ebp], eax

; 538  : 
; 539  : 	set_ui_font_type (font);

  00030	8b 45 f8	 mov	 eax, DWORD PTR _font$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 540  : 
; 541  : 	memset (temp_text, 0, sizeof (temp_text));

  00039	68 00 01 00 00	 push	 256			; 00000100H
  0003e	6a 00		 push	 0
  00040	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _temp_text$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 542  : 	memset (word, 0, sizeof (word));

  0004f	68 80 00 00 00	 push	 128			; 00000080H
  00054	6a 00		 push	 0
  00056	8d 85 74 fe ff
	ff		 lea	 eax, DWORD PTR _word$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 _memset
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH

; 543  : 
; 544  : 	max_string_length = get_ui_object_x_size (obj);

  00065	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  00068	50		 push	 eax
  00069	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00075	ff d0		 call	 eax
  00077	e8 00 00 00 00	 call	 __ftol2_sse
  0007c	89 85 64 fe ff
	ff		 mov	 DWORD PTR _max_string_length$[ebp], eax

; 545  : 
; 546  : 	text_ptr = text;

  00082	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  00085	89 85 6c fe ff
	ff		 mov	 DWORD PTR _text_ptr$[ebp], eax
$LN2@add_to_pop:

; 547  : 
; 548  : 	while ((*text_ptr != '\0'))

  0008b	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _text_ptr$[ebp]
  00091	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00094	85 c9		 test	 ecx, ecx
  00096	0f 84 ba 01 00
	00		 je	 $LN3@add_to_pop

; 549  : 	{
; 550  : 
; 551  : 		new_line_flag = FALSE;

  0009c	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _new_line_flag$[ebp], 0

; 552  : 
; 553  : 		// get next word
; 554  : 
; 555  : 		word_ptr = word;

  000a6	8d 85 74 fe ff
	ff		 lea	 eax, DWORD PTR _word$[ebp]
  000ac	89 85 70 fe ff
	ff		 mov	 DWORD PTR _word_ptr$[ebp], eax
$LN4@add_to_pop:

; 556  : 
; 557  : 		while (*text_ptr != '\0')

  000b2	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _text_ptr$[ebp]
  000b8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000bb	85 c9		 test	 ecx, ecx
  000bd	74 69		 je	 SHORT $LN5@add_to_pop

; 558  : 		{
; 559  : 
; 560  : 			*word_ptr = *text_ptr;

  000bf	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _word_ptr$[ebp]
  000c5	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR _text_ptr$[ebp]
  000cb	8a 11		 mov	 dl, BYTE PTR [ecx]
  000cd	88 10		 mov	 BYTE PTR [eax], dl

; 561  : 
; 562  : 			text_ptr ++;

  000cf	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _text_ptr$[ebp]
  000d5	83 c0 01	 add	 eax, 1
  000d8	89 85 6c fe ff
	ff		 mov	 DWORD PTR _text_ptr$[ebp], eax

; 563  : 
; 564  : 			if (*word_ptr == ' ')

  000de	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _word_ptr$[ebp]
  000e4	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000e7	83 f9 20	 cmp	 ecx, 32			; 00000020H
  000ea	75 02		 jne	 SHORT $LN6@add_to_pop

; 565  : 			{
; 566  : 
; 567  : 				break;

  000ec	eb 3a		 jmp	 SHORT $LN5@add_to_pop
$LN6@add_to_pop:

; 568  : 			}
; 569  : 
; 570  : 			word_ptr ++;

  000ee	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _word_ptr$[ebp]
  000f4	83 c0 01	 add	 eax, 1
  000f7	89 85 70 fe ff
	ff		 mov	 DWORD PTR _word_ptr$[ebp], eax

; 571  : 
; 572  : 			if (*text_ptr == '\n')

  000fd	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _text_ptr$[ebp]
  00103	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00106	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00109	75 1b		 jne	 SHORT $LN7@add_to_pop

; 573  : 			{
; 574  : 
; 575  : 				text_ptr ++;

  0010b	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _text_ptr$[ebp]
  00111	83 c0 01	 add	 eax, 1
  00114	89 85 6c fe ff
	ff		 mov	 DWORD PTR _text_ptr$[ebp], eax

; 576  : 
; 577  : 				new_line_flag = TRUE;

  0011a	c7 85 68 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _new_line_flag$[ebp], 1

; 578  : 
; 579  : 				break;

  00124	eb 02		 jmp	 SHORT $LN5@add_to_pop
$LN7@add_to_pop:

; 580  : 			}
; 581  : 		}

  00126	eb 8a		 jmp	 SHORT $LN4@add_to_pop
$LN5@add_to_pop:

; 582  : 
; 583  : 		// check word isn't longer than allowed space (causes an error if so...)
; 584  : 		debug_assert (ui_get_string_length (word) < max_string_length);

  00128	8d 85 74 fe ff
	ff		 lea	 eax, DWORD PTR _word$[ebp]
  0012e	50		 push	 eax
  0012f	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00134	d9 9d 20 fe ff
	ff		 fstp	 DWORD PTR tv214[ebp]
  0013a	f3 0f 2a 85 64
	fe ff ff	 cvtsi2ss xmm0, DWORD PTR _max_string_length$[ebp]
  00142	0f 2f 85 20 fe
	ff ff		 comiss	 xmm0, DWORD PTR tv214[ebp]
  00149	77 20		 ja	 SHORT $LN8@add_to_pop
  0014b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA
  00150	83 c0 45	 add	 eax, 69			; 00000045H
  00153	50		 push	 eax
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@CMBCHMPL@ui_get_string_length?5?$CIword?$CJ?5?$DM?5m@
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  00163	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00168	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@add_to_pop:

; 585  : 
; 586  : 		// check that current string + word fits on line
; 587  : 		if ((ui_get_string_length (temp_text) + ui_get_string_length (word)) > max_string_length)

  0016b	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _temp_text$[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00177	d9 9d 20 fe ff
	ff		 fstp	 DWORD PTR tv220[ebp]
  0017d	f3 0f 10 85 20
	fe ff ff	 movss	 xmm0, DWORD PTR tv220[ebp]
  00185	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _word$[ebp]
  0018b	51		 push	 ecx
  0018c	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv246[ebp], xmm0
  00194	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00199	d9 9d 18 fe ff
	ff		 fstp	 DWORD PTR tv225[ebp]
  0019f	f3 0f 10 85 1c
	fe ff ff	 movss	 xmm0, DWORD PTR tv246[ebp]
  001a7	f3 0f 58 85 18
	fe ff ff	 addss	 xmm0, DWORD PTR tv225[ebp]
  001af	f3 0f 2a 8d 64
	fe ff ff	 cvtsi2ss xmm1, DWORD PTR _max_string_length$[ebp]
  001b7	0f 2f c1	 comiss	 xmm0, xmm1
  001ba	76 30		 jbe	 SHORT $LN9@add_to_pop

; 588  : 		{
; 589  : 
; 590  : 			// if not display string
; 591  : 			add_to_pop_up_list (temp_text, obj, NULL, 0, -1, font_colour);

  001bc	8b 45 1c	 mov	 eax, DWORD PTR _font_colour$[ebp]
  001bf	50		 push	 eax
  001c0	6a ff		 push	 -1
  001c2	6a 00		 push	 0
  001c4	6a 00		 push	 0
  001c6	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  001c9	51		 push	 ecx
  001ca	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _temp_text$[ebp]
  001d0	52		 push	 edx
  001d1	e8 00 00 00 00	 call	 ?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list

; 592  : 
; 593  : 			// clear string
; 594  : 			memset (temp_text, 0, sizeof (temp_text));

  001d6	68 00 01 00 00	 push	 256			; 00000100H
  001db	6a 00		 push	 0
  001dd	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _temp_text$[ebp]
  001e3	50		 push	 eax
  001e4	e8 00 00 00 00	 call	 _memset
  001e9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@add_to_pop:

; 595  : 		}
; 596  : 
; 597  : 		// add word to string
; 598  : 		strcat (temp_text, word);

  001ec	8d 85 74 fe ff
	ff		 lea	 eax, DWORD PTR _word$[ebp]
  001f2	50		 push	 eax
  001f3	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _temp_text$[ebp]
  001f9	51		 push	 ecx
  001fa	e8 00 00 00 00	 call	 _strcat
  001ff	83 c4 08	 add	 esp, 8

; 599  : 
; 600  : 		memset (word, 0, sizeof (word));

  00202	68 80 00 00 00	 push	 128			; 00000080H
  00207	6a 00		 push	 0
  00209	8d 85 74 fe ff
	ff		 lea	 eax, DWORD PTR _word$[ebp]
  0020f	50		 push	 eax
  00210	e8 00 00 00 00	 call	 _memset
  00215	83 c4 0c	 add	 esp, 12			; 0000000cH

; 601  : 
; 602  : 		if (new_line_flag)

  00218	83 bd 68 fe ff
	ff 00		 cmp	 DWORD PTR _new_line_flag$[ebp], 0
  0021f	74 30		 je	 SHORT $LN10@add_to_pop

; 603  : 		{
; 604  : 
; 605  : 			// if not display string
; 606  : 			add_to_pop_up_list (temp_text, obj, NULL, 0, -1, font_colour);

  00221	8b 45 1c	 mov	 eax, DWORD PTR _font_colour$[ebp]
  00224	50		 push	 eax
  00225	6a ff		 push	 -1
  00227	6a 00		 push	 0
  00229	6a 00		 push	 0
  0022b	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  0022e	51		 push	 ecx
  0022f	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _temp_text$[ebp]
  00235	52		 push	 edx
  00236	e8 00 00 00 00	 call	 ?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list

; 607  : 
; 608  : 			// clear string
; 609  : 			memset (temp_text, 0, sizeof (temp_text));

  0023b	68 00 01 00 00	 push	 256			; 00000100H
  00240	6a 00		 push	 0
  00242	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _temp_text$[ebp]
  00248	50		 push	 eax
  00249	e8 00 00 00 00	 call	 _memset
  0024e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@add_to_pop:

; 610  : 		}
; 611  : 	}

  00251	e9 35 fe ff ff	 jmp	 $LN2@add_to_pop
$LN3@add_to_pop:

; 612  : 
; 613  : 	if (strlen (temp_text) > 0)

  00256	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _temp_text$[ebp]
  0025c	50		 push	 eax
  0025d	e8 00 00 00 00	 call	 _strlen
  00262	83 c4 04	 add	 esp, 4
  00265	85 c0		 test	 eax, eax
  00267	76 1d		 jbe	 SHORT $LN11@add_to_pop

; 614  : 	{
; 615  : 
; 616  : 		item = add_to_pop_up_list (temp_text, obj, NULL, 0, -1, font_colour);

  00269	8b 45 1c	 mov	 eax, DWORD PTR _font_colour$[ebp]
  0026c	50		 push	 eax
  0026d	6a ff		 push	 -1
  0026f	6a 00		 push	 0
  00271	6a 00		 push	 0
  00273	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  00276	51		 push	 ecx
  00277	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _temp_text$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list
  00283	89 45 f4	 mov	 DWORD PTR _item$[ebp], eax
$LN11@add_to_pop:

; 617  : 	}
; 618  : 
; 619  : 	set_ui_font_type (old_font);

  00286	8b 45 fc	 mov	 eax, DWORD PTR _old_font$[ebp]
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 620  : 
; 621  : 	return item;

  0028f	8b 45 f4	 mov	 eax, DWORD PTR _item$[ebp]

; 622  : }

  00292	5f		 pop	 edi
  00293	5e		 pop	 esi
  00294	5b		 pop	 ebx
  00295	8b e5		 mov	 esp, ebp
  00297	5d		 pop	 ebp
  00298	c2 18 00	 ret	 24			; 00000018H
?add_to_pop_up_list_with_word_wrap@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ENDP ; add_to_pop_up_list_with_word_wrap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z
_TEXT	SEGMENT
tv312 = -112						; size = 8
tv248 = -112						; size = 4
tv343 = -108						; size = 4
$T1 = -104						; size = 4
_highlighted_font_colour$ = -36				; size = 4
_new_position$ = -32					; size = 4
_list_y_size$ = -28					; size = 4
_list_x_size$ = -24					; size = 4
_x_pos$ = -20						; size = 4
_highlighted_font_type$ = -16				; size = 4
_text_obj$ = -12					; size = 4
_highlighted_notify_on$ = -8				; size = 4
_notify_on$ = -4					; size = 4
_text$ = 8						; size = 4
_obj$ = 12						; size = 4
_next_item$ = 16					; size = 4
_list_id$ = 20						; size = 4
_font_type$ = 24					; size = 4
_font_colour$ = 28					; size = 4
?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z PROC ; add_to_pop_up_list, COMDAT

; 402  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 403  : 
; 404  : 	notify_types
; 405  : 		notify_on,
; 406  : 		highlighted_notify_on;
; 407  : 
; 408  : 	ui_object
; 409  : 		*text_obj;
; 410  : 
; 411  : 	int
; 412  : 		highlighted_font_type;
; 413  : 
; 414  : 	float
; 415  : 		x_pos,
; 416  : 		list_x_size,
; 417  : 		list_y_size,
; 418  : 		new_position;
; 419  : 
; 420  : 	rgb_colour
; 421  : 		highlighted_font_colour;
; 422  : 
; 423  : 	//
; 424  : 	ASSERT (obj);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_to_pop
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU2@1HHUREAL_COLOUR@@@Z@4JA
  00014	83 c0 16	 add	 eax, 22			; 00000016H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@JDODHBBB@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_to_pop:

; 425  : 	//
; 426  : /*
; 427  : 	if (!obj)
; 428  : 	{
; 429  : 
; 430  : 		return NULL;
; 431  : 	}
; 432  : 
; 433  : */
; 434  : 	//
; 435  : 	//
; 436  : 	//
; 437  : 
; 438  : 	list_x_size = 1.0; //get_ui_object_x_size (obj) - 5;

  00027	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0002f	f3 0f 11 45 e8	 movss	 DWORD PTR _list_x_size$[ebp], xmm0

; 439  : 
; 440  : 	list_y_size = ui_get_font_height () / get_ui_object_y_size (obj);

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00039	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR _obj$[ebp]
  00045	8b 02		 mov	 eax, DWORD PTR [edx]
  00047	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  0004e	f3 0f 11 45 94	 movss	 DWORD PTR tv343[ebp], xmm0
  00053	ff d1		 call	 ecx
  00055	d9 5d 90	 fstp	 DWORD PTR tv248[ebp]
  00058	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv343[ebp]
  0005d	f3 0f 5e 45 90	 divss	 xmm0, DWORD PTR tv248[ebp]
  00062	f3 0f 11 45 e4	 movss	 DWORD PTR _list_y_size$[ebp], xmm0

; 441  : 
; 442  : 	new_position = get_next_list_virtual_position (obj);

  00067	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?get_next_list_virtual_position@@YGMPAUUI_OBJECT@@@Z ; get_next_list_virtual_position
  00070	d9 5d e0	 fstp	 DWORD PTR _new_position$[ebp]

; 443  : 
; 444  : 	//
; 445  : 	// If invalid font type specified, use the list box font type
; 446  : 	//
; 447  : 	
; 448  : 	if ((font_type < 0) || (font_type >= NUM_FONT_TYPES))

  00073	83 7d 18 00	 cmp	 DWORD PTR _font_type$[ebp], 0
  00077	7c 06		 jl	 SHORT $LN6@add_to_pop
  00079	83 7d 18 0e	 cmp	 DWORD PTR _font_type$[ebp], 14 ; 0000000eH
  0007d	7c 15		 jl	 SHORT $LN5@add_to_pop
$LN6@add_to_pop:

; 449  : 	{
; 450  : 
; 451  : 		font_type = get_ui_object_font_type (obj);

  0007f	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  0008f	ff d0		 call	 eax
  00091	89 45 18	 mov	 DWORD PTR _font_type$[ebp], eax
$LN5@add_to_pop:

; 452  : 	}
; 453  : 
; 454  : 	highlighted_font_type = get_ui_object_highlighted_font_type (obj);

  00094	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  00097	50		 push	 eax
  00098	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_font_type@@3PAP6G?AW4FONT_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  000a4	ff d0		 call	 eax
  000a6	89 45 f0	 mov	 DWORD PTR _highlighted_font_type$[ebp], eax

; 455  : 
; 456  : 	//
; 457  : 	// If invalid font colour specified, use the list box font colour
; 458  : 	//
; 459  : 
; 460  : 	notify_on = get_ui_object_notify_on (obj);

  000a9	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  000b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  000b9	ff d0		 call	 eax
  000bb	89 45 fc	 mov	 DWORD PTR _notify_on$[ebp], eax

; 461  : 	highlighted_notify_on = get_ui_object_highlighted_notify_on (obj);

  000be	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  000c1	50		 push	 eax
  000c2	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  000c5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  000ce	ff d0		 call	 eax
  000d0	89 45 f8	 mov	 DWORD PTR _highlighted_notify_on$[ebp], eax

; 462  : 
; 463  : 	highlighted_font_colour = get_ui_object_highlighted_font_colour (obj);

  000d3	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_font_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[edx*4]
  000e3	ff d0		 call	 eax
  000e5	89 45 98	 mov	 DWORD PTR $T1[ebp], eax
  000e8	8b 4d 98	 mov	 ecx, DWORD PTR $T1[ebp]
  000eb	89 4d dc	 mov	 DWORD PTR _highlighted_font_colour$[ebp], ecx

; 464  : 
; 465  : 	x_pos = 5.0 / get_ui_object_x_size (obj);

  000ee	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  000f1	50		 push	 eax
  000f2	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000fe	ff d0		 call	 eax
  00100	dd 5d 90	 fstp	 QWORD PTR tv312[ebp]
  00103	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4014000000000000
  0010b	f2 0f 5e 45 90	 divsd	 xmm0, QWORD PTR tv312[ebp]
  00110	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00114	f3 0f 11 45 ec	 movss	 DWORD PTR _x_pos$[ebp], xmm0

; 466  : 
; 467  : 	text_obj = create_ui_object

  00119	6a 11		 push	 17			; 00000011H
  0011b	8b 45 f8	 mov	 eax, DWORD PTR _highlighted_notify_on$[ebp]
  0011e	50		 push	 eax
  0011f	6a 25		 push	 37			; 00000025H
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _notify_on$[ebp]
  00124	51		 push	 ecx
  00125	6a 2f		 push	 47			; 0000002fH
  00127	68 00 00 00 00	 push	 OFFSET ?ui_object_list_item_right_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_list_item_right_function
  0012c	6a 39		 push	 57			; 00000039H
  0012e	68 00 00 00 00	 push	 OFFSET ?ui_object_list_item_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_list_item_function
  00133	6a 16		 push	 22			; 00000016H
  00135	6a ff		 push	 -1
  00137	6a 2a		 push	 42			; 0000002aH
  00139	8b 55 14	 mov	 edx, DWORD PTR _list_id$[ebp]
  0013c	52		 push	 edx
  0013d	6a 29		 push	 41			; 00000029H
  0013f	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  00142	50		 push	 eax
  00143	6a 4a		 push	 74			; 0000004aH
  00145	0f b6 4d df	 movzx	 ecx, BYTE PTR _highlighted_font_colour$[ebp+3]
  00149	51		 push	 ecx
  0014a	0f b6 55 dc	 movzx	 edx, BYTE PTR _highlighted_font_colour$[ebp]
  0014e	52		 push	 edx
  0014f	0f b6 45 dd	 movzx	 eax, BYTE PTR _highlighted_font_colour$[ebp+1]
  00153	50		 push	 eax
  00154	0f b6 4d de	 movzx	 ecx, BYTE PTR _highlighted_font_colour$[ebp+2]
  00158	51		 push	 ecx
  00159	6a 21		 push	 33			; 00000021H
  0015b	8b 55 f0	 mov	 edx, DWORD PTR _highlighted_font_type$[ebp]
  0015e	52		 push	 edx
  0015f	6a 20		 push	 32			; 00000020H
  00161	0f b6 45 1f	 movzx	 eax, BYTE PTR _font_colour$[ebp+3]
  00165	50		 push	 eax
  00166	0f b6 4d 1c	 movzx	 ecx, BYTE PTR _font_colour$[ebp]
  0016a	51		 push	 ecx
  0016b	0f b6 55 1d	 movzx	 edx, BYTE PTR _font_colour$[ebp+1]
  0016f	52		 push	 edx
  00170	0f b6 45 1e	 movzx	 eax, BYTE PTR _font_colour$[ebp+2]
  00174	50		 push	 eax
  00175	6a 13		 push	 19			; 00000013H
  00177	8b 4d 18	 mov	 ecx, DWORD PTR _font_type$[ebp]
  0017a	51		 push	 ecx
  0017b	6a 12		 push	 18			; 00000012H
  0017d	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _new_position$[ebp]
  00182	83 ec 08	 sub	 esp, 8
  00185	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0018a	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _x_pos$[ebp]
  0018f	83 ec 08	 sub	 esp, 8
  00192	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00197	6a 58		 push	 88			; 00000058H
  00199	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _list_y_size$[ebp]
  0019e	83 ec 08	 sub	 esp, 8
  001a1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001a6	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _list_x_size$[ebp]
  001ab	83 ec 08	 sub	 esp, 8
  001ae	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001b3	6a 59		 push	 89			; 00000059H
  001b5	6a 28		 push	 40			; 00000028H
  001b7	8b 55 0c	 mov	 edx, DWORD PTR _obj$[ebp]
  001ba	52		 push	 edx
  001bb	6a 32		 push	 50			; 00000032H
  001bd	8b 45 10	 mov	 eax, DWORD PTR _next_item$[ebp]
  001c0	50		 push	 eax
  001c1	6a 2e		 push	 46			; 0000002eH
  001c3	6a 05		 push	 5
  001c5	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  001ca	81 c4 b4 00 00
	00		 add	 esp, 180		; 000000b4H
  001d0	89 45 f4	 mov	 DWORD PTR _text_obj$[ebp], eax

; 468  : 				(
; 469  : 					UI_TYPE_TEXT,
; 470  : 					UI_ATTR_NEXT (next_item),
; 471  : 					UI_ATTR_PARENT (obj),
; 472  : 					UI_ATTR_LIST_ITEM,
; 473  : 					UI_ATTR_VIRTUAL_SIZE (list_x_size, list_y_size),
; 474  : 					UI_ATTR_VIRTUAL_POSITION (x_pos, new_position),
; 475  : 					UI_ATTR_FONT_TYPE (font_type),
; 476  : 					UI_ATTR_FONT_COLOUR (font_colour.r, font_colour.g, font_colour.b, font_colour.a),
; 477  : 					UI_ATTR_HIGHLIGHTED_FONT_TYPE (highlighted_font_type),
; 478  : 					UI_ATTR_HIGHLIGHTED_FONT_COLOUR (highlighted_font_colour.r, highlighted_font_colour.g, highlighted_font_colour.b, highlighted_font_colour.a),
; 479  : 					UI_ATTR_TEXT (text),
; 480  : 					UI_ATTR_ITEM_NUMBER (list_id),
; 481  : 					UI_ATTR_ITEM_NUMBER2 (UI_LIST_NO_SELECTION),
; 482  : 					UI_ATTR_FUNCTION (ui_object_list_item_function),
; 483  : 					UI_ATTR_RIGHT_FUNCTION (ui_object_list_item_right_function),
; 484  : 					UI_ATTR_NOTIFY_ON (notify_on),
; 485  : 					UI_ATTR_HIGHLIGHTED_NOTIFY_ON (highlighted_notify_on),
; 486  : 					UI_ATTR_END
; 487  : 				);
; 488  : 
; 489  : 	//
; 490  : 	// Set list box to redraw, and parents if its clear.
; 491  : 	//
; 492  : 
; 493  : 	set_ui_object_redraw (obj, TRUE);

  001d3	6a 01		 push	 1
  001d5	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  001d8	50		 push	 eax
  001d9	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  001dc	8b 11		 mov	 edx, DWORD PTR [ecx]
  001de	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001e5	ff d0		 call	 eax
$LN2@add_to_pop:

; 494  : 
; 495  : 	while ((obj) && (get_ui_object_clear (obj)))

  001e7	83 7d 0c 00	 cmp	 DWORD PTR _obj$[ebp], 0
  001eb	74 47		 je	 SHORT $LN3@add_to_pop
  001ed	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  001f0	50		 push	 eax
  001f1	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  001f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  001fd	ff d0		 call	 eax
  001ff	85 c0		 test	 eax, eax
  00201	74 31		 je	 SHORT $LN3@add_to_pop

; 496  : 	{
; 497  : 
; 498  : 		obj = get_ui_object_parent (obj);

  00203	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  00206	50		 push	 eax
  00207	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  0020a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00213	ff d0		 call	 eax
  00215	89 45 0c	 mov	 DWORD PTR _obj$[ebp], eax

; 499  : 
; 500  : 		if (obj)

  00218	83 7d 0c 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0021c	74 14		 je	 SHORT $LN7@add_to_pop

; 501  : 		{
; 502  : 
; 503  : 			set_ui_object_redraw (obj, TRUE);

  0021e	6a 01		 push	 1
  00220	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  00223	50		 push	 eax
  00224	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  00227	8b 11		 mov	 edx, DWORD PTR [ecx]
  00229	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00230	ff d0		 call	 eax
$LN7@add_to_pop:

; 504  : 		}
; 505  : 	}

  00232	eb b3		 jmp	 SHORT $LN2@add_to_pop
$LN3@add_to_pop:

; 506  : 
; 507  : 	return text_obj;

  00234	8b 45 f4	 mov	 eax, DWORD PTR _text_obj$[ebp]

; 508  : }

  00237	5f		 pop	 edi
  00238	5e		 pop	 esi
  00239	5b		 pop	 ebx
  0023a	8b e5		 mov	 esp, ebp
  0023c	5d		 pop	 ebp
  0023d	c2 18 00	 ret	 24			; 00000018H
?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ENDP ; add_to_pop_up_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?ui_object_destroy_list_item@@YGHPAUUI_OBJECT@@0@Z
_TEXT	SEGMENT
_current_list_item$ = -4				; size = 4
_list$ = 8						; size = 4
_item$ = 12						; size = 4
?ui_object_destroy_list_item@@YGHPAUUI_OBJECT@@0@Z PROC	; ui_object_destroy_list_item, COMDAT

; 367  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 368  : 
; 369  : 	ui_object
; 370  : 		*current_list_item;
; 371  : 
; 372  : 	if ((!list) || (!item))

  00009	83 7d 08 00	 cmp	 DWORD PTR _list$[ebp], 0
  0000d	74 06		 je	 SHORT $LN5@ui_object_
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _item$[ebp], 0
  00013	75 04		 jne	 SHORT $LN4@ui_object_
$LN5@ui_object_:

; 373  : 	{
; 374  : 
; 375  : 		return FALSE;

  00015	33 c0		 xor	 eax, eax
  00017	eb 54		 jmp	 SHORT $LN1@ui_object_
$LN4@ui_object_:

; 376  : 	}
; 377  : 
; 378  : 	current_list_item = get_ui_object_child (list);

  00019	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00029	ff d0		 call	 eax
  0002b	89 45 fc	 mov	 DWORD PTR _current_list_item$[ebp], eax
$LN2@ui_object_:

; 379  : 
; 380  : 	while (current_list_item)

  0002e	83 7d fc 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  00032	74 37		 je	 SHORT $LN3@ui_object_

; 381  : 	{
; 382  : 
; 383  : 		if ((current_list_item == item) && (get_ui_object_type (current_list_item) != UI_TYPE_VSLIDER))

  00034	8b 45 fc	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00037	3b 45 0c	 cmp	 eax, DWORD PTR _item$[ebp]
  0003a	75 18		 jne	 SHORT $LN6@ui_object_
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  0003f	83 38 08	 cmp	 DWORD PTR [eax], 8
  00042	74 10		 je	 SHORT $LN6@ui_object_

; 384  : 		{
; 385  : 
; 386  : 			destroy_ui_object (current_list_item);

  00044	8b 45 fc	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z ; destroy_ui_object

; 387  : 
; 388  : 			return TRUE;

  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	eb 19		 jmp	 SHORT $LN1@ui_object_
$LN6@ui_object_:

; 389  : 		}
; 390  : 
; 391  : 		current_list_item = get_ui_object_next (current_list_item);

  00054	8b 45 fc	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00057	50		 push	 eax
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00064	ff d0		 call	 eax
  00066	89 45 fc	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 392  : 	}

  00069	eb c3		 jmp	 SHORT $LN2@ui_object_
$LN3@ui_object_:

; 393  : 
; 394  : 	return FALSE;

  0006b	33 c0		 xor	 eax, eax
$LN1@ui_object_:

; 395  : }

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?ui_object_destroy_list_item@@YGHPAUUI_OBJECT@@0@Z ENDP	; ui_object_destroy_list_item
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?ui_object_destroy_list_items@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_current_list_item$ = -8				; size = 4
_destroy_item$ = -4					; size = 4
_list$ = 8						; size = 4
?ui_object_destroy_list_items@@YGXPAUUI_OBJECT@@@Z PROC	; ui_object_destroy_list_items, COMDAT

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 332  : 
; 333  : 	ui_object
; 334  : 		*destroy_item,
; 335  : 		*current_list_item;
; 336  : 
; 337  : 	if (!list)

  00009	83 7d 08 00	 cmp	 DWORD PTR _list$[ebp], 0
  0000d	75 02		 jne	 SHORT $LN4@ui_object_

; 338  : 	{
; 339  : 
; 340  : 		return;

  0000f	eb 5d		 jmp	 SHORT $LN1@ui_object_
$LN4@ui_object_:

; 341  : 	}
; 342  : 
; 343  : 	current_list_item = get_ui_object_child (list);

  00011	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	89 45 f8	 mov	 DWORD PTR _current_list_item$[ebp], eax
$LN2@ui_object_:

; 344  : 
; 345  : 	while (current_list_item)

  00026	83 7d f8 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  0002a	74 2e		 je	 SHORT $LN3@ui_object_

; 346  : 	{
; 347  : 
; 348  : 		destroy_item = current_list_item;

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  0002f	89 45 fc	 mov	 DWORD PTR _destroy_item$[ebp], eax

; 349  : 
; 350  : 		current_list_item = get_ui_object_next (current_list_item);

  00032	8b 45 f8	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00035	50		 push	 eax
  00036	8b 4d f8	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  00039	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00042	ff d0		 call	 eax
  00044	89 45 f8	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 351  : 
; 352  : 		if (get_ui_object_type (destroy_item) != UI_TYPE_VSLIDER)

  00047	8b 45 fc	 mov	 eax, DWORD PTR _destroy_item$[ebp]
  0004a	83 38 08	 cmp	 DWORD PTR [eax], 8
  0004d	74 09		 je	 SHORT $LN5@ui_object_

; 353  : 		{
; 354  : 
; 355  : 			destroy_ui_object (destroy_item);

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _destroy_item$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z ; destroy_ui_object
$LN5@ui_object_:

; 356  : 		}
; 357  : 	}

  00058	eb cc		 jmp	 SHORT $LN2@ui_object_
$LN3@ui_object_:

; 358  : 
; 359  : 	set_ui_object_child (list, NULL);

  0005a	6a 00		 push	 0
  0005c	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  00063	8b 11		 mov	 edx, DWORD PTR [ecx]
  00065	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA[edx*4]
  0006c	ff d0		 call	 eax
$LN1@ui_object_:

; 360  : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?ui_object_destroy_list_items@@YGXPAUUI_OBJECT@@@Z ENDP	; ui_object_destroy_list_items
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?get_next_list_virtual_position@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv208 = -88						; size = 4
tv200 = -88						; size = 4
tv192 = -88						; size = 4
tv170 = -88						; size = 4
_list$ = -20						; size = 4
_current_list_item$ = -16				; size = 4
_y_max_object$ = -12					; size = 4
_y_max$ = -8						; size = 4
_y$ = -4						; size = 4
_list_object$ = 8					; size = 4
?get_next_list_virtual_position@@YGMPAUUI_OBJECT@@@Z PROC ; get_next_list_virtual_position, COMDAT

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 275  : 
; 276  : 	float
; 277  : 		y,
; 278  : 		y_max;
; 279  : 
; 280  : 	ui_object
; 281  : 		*y_max_object,
; 282  : 		*current_list_item;
; 283  : 
; 284  : 	list_ui_object
; 285  : 		*list;
; 286  : 
; 287  : 	list = (list_ui_object*) list_object->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _list_object$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d ec	 mov	 DWORD PTR _list$[ebp], ecx

; 288  : 
; 289  : 	current_list_item = get_ui_object_child (list_object);

  00012	8b 45 08	 mov	 eax, DWORD PTR _list_object$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _list_object$[ebp]
  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00022	ff d0		 call	 eax
  00024	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 290  : 
; 291  : 	y_max_object = current_list_item;

  00027	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  0002a	89 45 f4	 mov	 DWORD PTR _y_max_object$[ebp], eax

; 292  : 
; 293  : 	y_max = 0;

  0002d	0f 57 c0	 xorps	 xmm0, xmm0
  00030	f3 0f 11 45 f8	 movss	 DWORD PTR _y_max$[ebp], xmm0

; 294  : 
; 295  : 	if (current_list_item)

  00035	83 7d f0 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  00039	0f 84 f3 00 00
	00		 je	 $LN4@get_next_l
$LN2@get_next_l:

; 296  : 	{
; 297  : 	
; 298  : 		while (current_list_item)

  0003f	83 7d f0 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  00043	74 52		 je	 SHORT $LN3@get_next_l

; 299  : 		{
; 300  : 
; 301  : 			if (get_ui_object_y (current_list_item) > y_max)

  00045	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00048	50		 push	 eax
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00055	ff d0		 call	 eax
  00057	d9 5d a8	 fstp	 DWORD PTR tv170[ebp]
  0005a	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv170[ebp]
  0005f	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _y_max$[ebp]
  00063	76 1b		 jbe	 SHORT $LN5@get_next_l

; 302  : 			{
; 303  : 
; 304  : 				y_max_object = current_list_item;

  00065	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00068	89 45 f4	 mov	 DWORD PTR _y_max_object$[ebp], eax

; 305  : 
; 306  : 				y_max = get_ui_object_y (current_list_item);

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  00072	8b 11		 mov	 edx, DWORD PTR [ecx]
  00074	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0007b	ff d0		 call	 eax
  0007d	d9 5d f8	 fstp	 DWORD PTR _y_max$[ebp]
$LN5@get_next_l:

; 307  : 			}
; 308  : 	
; 309  : 			current_list_item = get_ui_object_next (current_list_item);

  00080	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00083	50		 push	 eax
  00084	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00090	ff d0		 call	 eax
  00092	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 310  : 		}

  00095	eb a8		 jmp	 SHORT $LN2@get_next_l
$LN3@get_next_l:

; 311  : 
; 312  : 		y = get_ui_object_y (y_max_object);

  00097	8b 45 f4	 mov	 eax, DWORD PTR _y_max_object$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d f4	 mov	 ecx, DWORD PTR _y_max_object$[ebp]
  0009e	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a7	ff d0		 call	 eax
  000a9	d9 5d fc	 fstp	 DWORD PTR _y$[ebp]

; 313  : 		y += get_ui_object_y_size (y_max_object);

  000ac	8b 45 f4	 mov	 eax, DWORD PTR _y_max_object$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d f4	 mov	 ecx, DWORD PTR _y_max_object$[ebp]
  000b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000bc	ff d0		 call	 eax
  000be	d9 5d a8	 fstp	 DWORD PTR tv192[ebp]
  000c1	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv192[ebp]
  000c6	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _y$[ebp]
  000cb	f3 0f 11 45 fc	 movss	 DWORD PTR _y$[ebp], xmm0

; 314  : 		y -= get_ui_object_y (list_object);

  000d0	8b 45 08	 mov	 eax, DWORD PTR _list_object$[ebp]
  000d3	50		 push	 eax
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR _list_object$[ebp]
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000e0	ff d0		 call	 eax
  000e2	d9 5d a8	 fstp	 DWORD PTR tv200[ebp]
  000e5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _y$[ebp]
  000ea	f3 0f 5c 45 a8	 subss	 xmm0, DWORD PTR tv200[ebp]
  000ef	f3 0f 11 45 fc	 movss	 DWORD PTR _y$[ebp], xmm0

; 315  : 
; 316  : 		y /= get_ui_object_y_size (list_object);

  000f4	8b 45 08	 mov	 eax, DWORD PTR _list_object$[ebp]
  000f7	50		 push	 eax
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR _list_object$[ebp]
  000fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00104	ff d0		 call	 eax
  00106	d9 5d a8	 fstp	 DWORD PTR tv208[ebp]
  00109	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _y$[ebp]
  0010e	f3 0f 5e 45 a8	 divss	 xmm0, DWORD PTR tv208[ebp]
  00113	f3 0f 11 45 fc	 movss	 DWORD PTR _y$[ebp], xmm0

; 317  : 		y += list->y_space;

  00118	8b 45 ec	 mov	 eax, DWORD PTR _list$[ebp]
  0011b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _y$[ebp]
  00120	f3 0f 58 80 e4
	00 00 00	 addss	 xmm0, DWORD PTR [eax+228]
  00128	f3 0f 11 45 fc	 movss	 DWORD PTR _y$[ebp], xmm0

; 318  : 
; 319  : 		return y;

  0012d	d9 45 fc	 fld	 DWORD PTR _y$[ebp]
  00130	eb 02		 jmp	 SHORT $LN1@get_next_l
$LN4@get_next_l:

; 320  : 	}
; 321  : 
; 322  : 	//return LIST_ITEM_SPACING * 2;
; 323  : 	return 0;

  00132	d9 ee		 fldz
$LN1@get_next_l:

; 324  : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
?get_next_list_virtual_position@@YGMPAUUI_OBJECT@@@Z ENDP ; get_next_list_virtual_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?get_next_list_position@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv195 = -104						; size = 4
tv202 = -100						; size = 4
tv188 = -96						; size = 4
tv200 = -92						; size = 4
tv181 = -88						; size = 4
tv164 = -88						; size = 4
_list$ = -20						; size = 4
_current_list_item$ = -16				; size = 4
_y_max_object$ = -12					; size = 4
_y_max$ = -8						; size = 4
_y$ = -4						; size = 4
_list_object$ = 8					; size = 4
?get_next_list_position@@YGMPAUUI_OBJECT@@@Z PROC	; get_next_list_position, COMDAT

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 223  : 
; 224  : 	float
; 225  : 		y,
; 226  : 		y_max;
; 227  : 
; 228  : 	ui_object
; 229  : 		*y_max_object,
; 230  : 		*current_list_item;
; 231  : 
; 232  : 	list_ui_object
; 233  : 		*list;
; 234  : 
; 235  : 	list = (list_ui_object*) list_object->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _list_object$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d ec	 mov	 DWORD PTR _list$[ebp], ecx

; 236  : 
; 237  : 	current_list_item = get_ui_object_child (list_object);

  00012	8b 45 08	 mov	 eax, DWORD PTR _list_object$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _list_object$[ebp]
  00019	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00022	ff d0		 call	 eax
  00024	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 238  : 
; 239  : 	y_max_object = current_list_item;

  00027	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  0002a	89 45 f4	 mov	 DWORD PTR _y_max_object$[ebp], eax

; 240  : 
; 241  : 	y_max = 0;

  0002d	0f 57 c0	 xorps	 xmm0, xmm0
  00030	f3 0f 11 45 f8	 movss	 DWORD PTR _y_max$[ebp], xmm0

; 242  : 
; 243  : 	if (current_list_item)

  00035	83 7d f0 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  00039	0f 84 d7 00 00
	00		 je	 $LN4@get_next_l
$LN2@get_next_l:

; 244  : 	{
; 245  : 	
; 246  : 		while (current_list_item)

  0003f	83 7d f0 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  00043	74 52		 je	 SHORT $LN3@get_next_l

; 247  : 		{
; 248  : 
; 249  : 			if (get_ui_object_y (current_list_item) > y_max)

  00045	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00048	50		 push	 eax
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00055	ff d0		 call	 eax
  00057	d9 5d a8	 fstp	 DWORD PTR tv164[ebp]
  0005a	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv164[ebp]
  0005f	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _y_max$[ebp]
  00063	76 1b		 jbe	 SHORT $LN5@get_next_l

; 250  : 			{
; 251  : 
; 252  : 				y_max_object = current_list_item;

  00065	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00068	89 45 f4	 mov	 DWORD PTR _y_max_object$[ebp], eax

; 253  : 
; 254  : 				y_max = get_ui_object_y (current_list_item);

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  00072	8b 11		 mov	 edx, DWORD PTR [ecx]
  00074	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0007b	ff d0		 call	 eax
  0007d	d9 5d f8	 fstp	 DWORD PTR _y_max$[ebp]
$LN5@get_next_l:

; 255  : 			}
; 256  : 	
; 257  : 			current_list_item = get_ui_object_next (current_list_item);

  00080	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  00083	50		 push	 eax
  00084	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00090	ff d0		 call	 eax
  00092	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 258  : 		}

  00095	eb a8		 jmp	 SHORT $LN2@get_next_l
$LN3@get_next_l:

; 259  : 
; 260  : 		y = (get_ui_object_y (y_max_object) + get_ui_object_y_size (y_max_object) - get_ui_object_y (list_object) - 1 + list->y_space);

  00097	8b 45 f4	 mov	 eax, DWORD PTR _y_max_object$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d f4	 mov	 ecx, DWORD PTR _y_max_object$[ebp]
  0009e	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a7	ff d0		 call	 eax
  000a9	d9 5d a8	 fstp	 DWORD PTR tv181[ebp]
  000ac	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv181[ebp]
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR _y_max_object$[ebp]
  000b4	51		 push	 ecx
  000b5	8b 55 f4	 mov	 edx, DWORD PTR _y_max_object$[ebp]
  000b8	8b 02		 mov	 eax, DWORD PTR [edx]
  000ba	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  000c1	f3 0f 11 45 a4	 movss	 DWORD PTR tv200[ebp], xmm0
  000c6	ff d1		 call	 ecx
  000c8	d9 5d a0	 fstp	 DWORD PTR tv188[ebp]
  000cb	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv200[ebp]
  000d0	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR tv188[ebp]
  000d5	8b 55 08	 mov	 edx, DWORD PTR _list_object$[ebp]
  000d8	52		 push	 edx
  000d9	8b 45 08	 mov	 eax, DWORD PTR _list_object$[ebp]
  000dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000de	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  000e5	f3 0f 11 45 9c	 movss	 DWORD PTR tv202[ebp], xmm0
  000ea	ff d2		 call	 edx
  000ec	d9 5d 98	 fstp	 DWORD PTR tv195[ebp]
  000ef	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv202[ebp]
  000f4	f3 0f 5c 45 98	 subss	 xmm0, DWORD PTR tv195[ebp]
  000f9	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00101	8b 45 ec	 mov	 eax, DWORD PTR _list$[ebp]
  00104	f3 0f 58 80 e4
	00 00 00	 addss	 xmm0, DWORD PTR [eax+228]
  0010c	f3 0f 11 45 fc	 movss	 DWORD PTR _y$[ebp], xmm0

; 261  : 
; 262  : 		return y;

  00111	d9 45 fc	 fld	 DWORD PTR _y$[ebp]
  00114	eb 02		 jmp	 SHORT $LN1@get_next_l
$LN4@get_next_l:

; 263  : 	}
; 264  : 
; 265  : 	//return LIST_ITEM_SPACING * 2;
; 266  : 	return 0;

  00116	d9 ee		 fldz
$LN1@get_next_l:

; 267  : }

  00118	5f		 pop	 edi
  00119	5e		 pop	 esi
  0011a	5b		 pop	 ebx
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 04 00	 ret	 4
?get_next_list_position@@YGMPAUUI_OBJECT@@@Z ENDP	; get_next_list_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?ui_object_list_item_right_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_pfunction$ = -20					; size = 4
_current_list_item$ = -16				; size = 4
_next_parent$ = -12					; size = 4
_parent$ = -8						; size = 4
_list_position$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?ui_object_list_item_right_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; ui_object_list_item_right_function, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 154  : 
; 155  : 	int
; 156  : 		list_position;
; 157  : 
; 158  : 	ui_object
; 159  : 		*parent,
; 160  : 		*next_parent,
; 161  : 		*current_list_item;
; 162  : 
; 163  : 	void
; 164  : 		((*pfunction) (ui_object *obj, void *arg));
; 165  : 
; 166  : 	parent = get_ui_object_parent (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 167  : 
; 168  : 	next_parent = parent;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  00021	89 45 f4	 mov	 DWORD PTR _next_parent$[ebp], eax
$LN2@ui_object_:

; 169  : 
; 170  : 	// set the next non-clear parent to redraw
; 171  : 
; 172  : 	while ((next_parent) && (get_ui_object_clear (next_parent)))

  00024	83 7d f4 00	 cmp	 DWORD PTR _next_parent$[ebp], 0
  00028	74 47		 je	 SHORT $LN3@ui_object_
  0002a	8b 45 f4	 mov	 eax, DWORD PTR _next_parent$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d f4	 mov	 ecx, DWORD PTR _next_parent$[ebp]
  00031	8b 11		 mov	 edx, DWORD PTR [ecx]
  00033	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0003a	ff d0		 call	 eax
  0003c	85 c0		 test	 eax, eax
  0003e	74 31		 je	 SHORT $LN3@ui_object_

; 173  : 	{
; 174  : 
; 175  : 		next_parent = get_ui_object_parent (next_parent);

  00040	8b 45 f4	 mov	 eax, DWORD PTR _next_parent$[ebp]
  00043	50		 push	 eax
  00044	8b 4d f4	 mov	 ecx, DWORD PTR _next_parent$[ebp]
  00047	8b 11		 mov	 edx, DWORD PTR [ecx]
  00049	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00050	ff d0		 call	 eax
  00052	89 45 f4	 mov	 DWORD PTR _next_parent$[ebp], eax

; 176  : 
; 177  : 		if (next_parent)

  00055	83 7d f4 00	 cmp	 DWORD PTR _next_parent$[ebp], 0
  00059	74 14		 je	 SHORT $LN6@ui_object_

; 178  : 		{
; 179  : 
; 180  : 			set_ui_object_redraw (next_parent, TRUE);

  0005b	6a 01		 push	 1
  0005d	8b 45 f4	 mov	 eax, DWORD PTR _next_parent$[ebp]
  00060	50		 push	 eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _next_parent$[ebp]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0006d	ff d0		 call	 eax
$LN6@ui_object_:

; 181  : 		}
; 182  : 	}

  0006f	eb b3		 jmp	 SHORT $LN2@ui_object_
$LN3@ui_object_:

; 183  : 
; 184  : 	set_ui_object_redraw (parent, TRUE);

  00071	6a 01		 push	 1
  00073	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  00076	50		 push	 eax
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00083	ff d0		 call	 eax

; 185  : 
; 186  : 	current_list_item = get_ui_object_child (parent);

  00085	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  00088	50		 push	 eax
  00089	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0008c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00095	ff d0		 call	 eax
  00097	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 187  : 
; 188  : 	// find out what its list position is
; 189  : 
; 190  : 	list_position = 0;

  0009a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _list_position$[ebp], 0
$LN4@ui_object_:

; 191  : 
; 192  :   	while (current_list_item)

  000a1	83 7d f0 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  000a5	74 2a		 je	 SHORT $LN5@ui_object_

; 193  : 	{
; 194  : 		
; 195  : 		list_position ++;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _list_position$[ebp]
  000aa	83 c0 01	 add	 eax, 1
  000ad	89 45 fc	 mov	 DWORD PTR _list_position$[ebp], eax

; 196  : 
; 197  : 		if (obj == current_list_item)

  000b0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000b3	3b 45 f0	 cmp	 eax, DWORD PTR _current_list_item$[ebp]
  000b6	75 02		 jne	 SHORT $LN7@ui_object_

; 198  : 		{
; 199  : 
; 200  : 			break;

  000b8	eb 17		 jmp	 SHORT $LN5@ui_object_
$LN7@ui_object_:

; 201  : 		}
; 202  : 
; 203  : 		current_list_item = get_ui_object_next (current_list_item);

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  000c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000ca	ff d0		 call	 eax
  000cc	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 204  : 	}

  000cf	eb d0		 jmp	 SHORT $LN4@ui_object_
$LN5@ui_object_:

; 205  : 		
; 206  : 	// notify parents function
; 207  : 
; 208  : 	pfunction = get_ui_object_right_function (parent);

  000d1	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  000d4	50		 push	 eax
  000d5	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  000d8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000da	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_right_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA[edx*4]
  000e1	ff d0		 call	 eax
  000e3	89 45 ec	 mov	 DWORD PTR _pfunction$[ebp], eax

; 209  : 
; 210  : 	if (pfunction)

  000e6	83 7d ec 00	 cmp	 DWORD PTR _pfunction$[ebp], 0
  000ea	74 0b		 je	 SHORT $LN1@ui_object_

; 211  : 	{
; 212  : 
; 213  : 		pfunction (obj, (void *) list_position);

  000ec	8b 45 fc	 mov	 eax, DWORD PTR _list_position$[ebp]
  000ef	50		 push	 eax
  000f0	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f3	51		 push	 ecx
  000f4	ff 55 ec	 call	 DWORD PTR _pfunction$[ebp]
$LN1@ui_object_:

; 214  : 	}
; 215  : }

  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5b		 pop	 ebx
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 08 00	 ret	 8
?ui_object_list_item_right_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; ui_object_list_item_right_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\list.c
;	COMDAT ?ui_object_list_item_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_pfunction$ = -20					; size = 4
_current_list_item$ = -16				; size = 4
_next_parent$ = -12					; size = 4
_parent$ = -8						; size = 4
_list_position$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?ui_object_list_item_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; ui_object_list_item_function, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 
; 82   : 	int
; 83   : 		list_position;
; 84   : 
; 85   : 	ui_object
; 86   : 		*parent,
; 87   : 		*next_parent,
; 88   : 		*current_list_item;
; 89   : 
; 90   : 	FUNCTION
; 91   : 		pfunction;
; 92   : 
; 93   : 	parent = get_ui_object_parent (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 94   : 
; 95   : 	next_parent = parent;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  00021	89 45 f4	 mov	 DWORD PTR _next_parent$[ebp], eax
$LN2@ui_object_:

; 96   : 
; 97   : 	// set the next non-clear parent to redraw
; 98   : 
; 99   : 	while ((next_parent) && (get_ui_object_clear (next_parent)))

  00024	83 7d f4 00	 cmp	 DWORD PTR _next_parent$[ebp], 0
  00028	74 47		 je	 SHORT $LN3@ui_object_
  0002a	8b 45 f4	 mov	 eax, DWORD PTR _next_parent$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d f4	 mov	 ecx, DWORD PTR _next_parent$[ebp]
  00031	8b 11		 mov	 edx, DWORD PTR [ecx]
  00033	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0003a	ff d0		 call	 eax
  0003c	85 c0		 test	 eax, eax
  0003e	74 31		 je	 SHORT $LN3@ui_object_

; 100  : 	{
; 101  : 
; 102  : 		next_parent = get_ui_object_parent (next_parent);

  00040	8b 45 f4	 mov	 eax, DWORD PTR _next_parent$[ebp]
  00043	50		 push	 eax
  00044	8b 4d f4	 mov	 ecx, DWORD PTR _next_parent$[ebp]
  00047	8b 11		 mov	 edx, DWORD PTR [ecx]
  00049	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00050	ff d0		 call	 eax
  00052	89 45 f4	 mov	 DWORD PTR _next_parent$[ebp], eax

; 103  : 
; 104  : 		if (next_parent)

  00055	83 7d f4 00	 cmp	 DWORD PTR _next_parent$[ebp], 0
  00059	74 14		 je	 SHORT $LN6@ui_object_

; 105  : 		{
; 106  : 
; 107  : 			set_ui_object_redraw (next_parent, TRUE);

  0005b	6a 01		 push	 1
  0005d	8b 45 f4	 mov	 eax, DWORD PTR _next_parent$[ebp]
  00060	50		 push	 eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _next_parent$[ebp]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0006d	ff d0		 call	 eax
$LN6@ui_object_:

; 108  : 		}
; 109  : 	}

  0006f	eb b3		 jmp	 SHORT $LN2@ui_object_
$LN3@ui_object_:

; 110  : 
; 111  : 	current_list_item = get_ui_object_child (parent);

  00071	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  00074	50		 push	 eax
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00078	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00081	ff d0		 call	 eax
  00083	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 112  : 
; 113  : 	// find out what its list position is
; 114  : 
; 115  : 	list_position = 0;

  00086	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _list_position$[ebp], 0
$LN4@ui_object_:

; 116  : 
; 117  :   	while (current_list_item)

  0008d	83 7d f0 00	 cmp	 DWORD PTR _current_list_item$[ebp], 0
  00091	74 2a		 je	 SHORT $LN5@ui_object_

; 118  : 	{
; 119  : 		
; 120  : 		list_position ++;

  00093	8b 45 fc	 mov	 eax, DWORD PTR _list_position$[ebp]
  00096	83 c0 01	 add	 eax, 1
  00099	89 45 fc	 mov	 DWORD PTR _list_position$[ebp], eax

; 121  : 
; 122  : 		if (obj == current_list_item)

  0009c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0009f	3b 45 f0	 cmp	 eax, DWORD PTR _current_list_item$[ebp]
  000a2	75 02		 jne	 SHORT $LN7@ui_object_

; 123  : 		{
; 124  : 
; 125  : 			break;

  000a4	eb 17		 jmp	 SHORT $LN5@ui_object_
$LN7@ui_object_:

; 126  : 		}
; 127  : 
; 128  : 		current_list_item = get_ui_object_next (current_list_item);

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _current_list_item$[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d f0	 mov	 ecx, DWORD PTR _current_list_item$[ebp]
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000b6	ff d0		 call	 eax
  000b8	89 45 f0	 mov	 DWORD PTR _current_list_item$[ebp], eax

; 129  : 	}

  000bb	eb d0		 jmp	 SHORT $LN4@ui_object_
$LN5@ui_object_:

; 130  : 
; 131  : 	#if LIST_DEBUG
; 132  : 
; 133  : 	debug_log ("UI LIST: item %d", list_position);
; 134  : 
; 135  : 	#endif
; 136  : 		
; 137  : 	// notify parents function
; 138  : 
; 139  : 	pfunction = get_ui_object_function (parent);

  000bd	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  000c4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA[edx*4]
  000cd	ff d0		 call	 eax
  000cf	89 45 ec	 mov	 DWORD PTR _pfunction$[ebp], eax

; 140  : 
; 141  : 	if (pfunction)

  000d2	83 7d ec 00	 cmp	 DWORD PTR _pfunction$[ebp], 0
  000d6	74 0b		 je	 SHORT $LN1@ui_object_

; 142  : 	{
; 143  : 
; 144  : 		pfunction (obj, (void *) list_position);

  000d8	8b 45 fc	 mov	 eax, DWORD PTR _list_position$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000df	51		 push	 ecx
  000e0	ff 55 ec	 call	 DWORD PTR _pfunction$[ebp]
$LN1@ui_object_:

; 145  : 	}
; 146  : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
?ui_object_list_item_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; ui_object_list_item_function
_TEXT	ENDS
END
