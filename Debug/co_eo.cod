; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?eo_on_target@@3HA				; eo_on_target
PUBLIC	?eo_low_light@@3HA				; eo_low_light
PUBLIC	?eo_ground_stabilised@@3HA			; eo_ground_stabilised
PUBLIC	?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A	; eo_sensor
PUBLIC	?eo_azimuth@@3MA				; eo_azimuth
PUBLIC	?eo_min_azimuth@@3MA				; eo_min_azimuth
PUBLIC	?eo_max_azimuth@@3MA				; eo_max_azimuth
PUBLIC	?eo_elevation@@3MA				; eo_elevation
PUBLIC	?eo_min_elevation@@3MA				; eo_min_elevation
PUBLIC	?eo_max_elevation@@3MA				; eo_max_elevation
PUBLIC	?eo_max_visual_range@@3MA			; eo_max_visual_range
PUBLIC	?eo_vp@@3UVIEWPOINT@@A				; eo_vp
PUBLIC	?draw_eo_boresight@@3HA				; draw_eo_boresight
PUBLIC	?draw_eo_terrain_los_markers@@3HA		; draw_eo_terrain_los_markers
PUBLIC	?eo_requested_azimuth@@3MA			; eo_requested_azimuth
PUBLIC	?eo_requested_elevation@@3MA			; eo_requested_elevation
PUBLIC	?fog_start@@3MA					; fog_start
PUBLIC	?fog_end@@3MA					; fog_end
PUBLIC	?eo_target_locked@@3HA				; eo_target_locked
PUBLIC	?next_cpg_target_report@@3PAUENTITY@@A		; next_cpg_target_report
PUBLIC	?slave_target@@3PAUENTITY@@A			; slave_target
_BSS	SEGMENT
?eo_on_target@@3HA DD 01H DUP (?)			; eo_on_target
?eo_low_light@@3HA DD 01H DUP (?)			; eo_low_light
?eo_ground_stabilised@@3HA DD 01H DUP (?)		; eo_ground_stabilised
?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A DD 01H DUP (?) ; eo_sensor
?eo_azimuth@@3MA DD 01H DUP (?)				; eo_azimuth
?eo_min_azimuth@@3MA DD 01H DUP (?)			; eo_min_azimuth
?eo_max_azimuth@@3MA DD 01H DUP (?)			; eo_max_azimuth
?eo_elevation@@3MA DD 01H DUP (?)			; eo_elevation
?eo_min_elevation@@3MA DD 01H DUP (?)			; eo_min_elevation
?eo_max_elevation@@3MA DD 01H DUP (?)			; eo_max_elevation
?eo_max_visual_range@@3MA DD 01H DUP (?)		; eo_max_visual_range
?eo_vp@@3UVIEWPOINT@@A DB 030H DUP (?)			; eo_vp
?draw_eo_boresight@@3HA DD 01H DUP (?)			; draw_eo_boresight
?draw_eo_terrain_los_markers@@3HA DD 01H DUP (?)	; draw_eo_terrain_los_markers
?eo_requested_azimuth@@3MA DD 01H DUP (?)		; eo_requested_azimuth
?eo_requested_elevation@@3MA DD 01H DUP (?)		; eo_requested_elevation
?fog_start@@3MA DD 01H DUP (?)				; fog_start
?fog_end@@3MA DD 01H DUP (?)				; fog_end
?eo_target_locked@@3HA DD 01H DUP (?)			; eo_target_locked
?next_cpg_target_report@@3PAUENTITY@@A DD 01H DUP (?)	; next_cpg_target_report
?slave_target@@3PAUENTITY@@A DD 01H DUP (?)		; slave_target
_BSS	ENDS
PUBLIC	_atan2f
PUBLIC	_cosf
PUBLIC	_logf
PUBLIC	_powf
PUBLIC	_sinf
PUBLIC	_sqrtf
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?log@@YGMM@Z					; log
PUBLIC	?pow@@YGMMM@Z					; pow
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?sqrt@@YGMM@Z					; sqrt
PUBLIC	?initialise_common_eo@@YGXXZ			; initialise_common_eo
PUBLIC	?deinitialise_common_eo@@YGXXZ			; deinitialise_common_eo
PUBLIC	?update_common_eo@@YGXXZ			; update_common_eo
PUBLIC	?activate_common_eo@@YGXXZ			; activate_common_eo
PUBLIC	?deactivate_common_eo@@YGXXZ			; deactivate_common_eo
PUBLIC	?slew_eo_to_direction@@YGXMM@Z			; slew_eo_to_direction
PUBLIC	?slave_common_eo_to_current_target@@YGXXZ	; slave_common_eo_to_current_target
PUBLIC	?slave_common_eo_to_position@@YGXPAUVEC3D@@@Z	; slave_common_eo_to_position
PUBLIC	?select_next_eo_target@@YGXXZ			; select_next_eo_target
PUBLIC	?select_previous_eo_target@@YGXXZ		; select_previous_eo_target
PUBLIC	?select_next_designated_eo_target@@YGXXZ	; select_next_designated_eo_target
PUBLIC	?select_previous_designated_eo_target@@YGXXZ	; select_previous_designated_eo_target
PUBLIC	?convert_linear_view_value@@YGMPAUEO_PARAMS_DYNAMIC_MOVE@@@Z ; convert_linear_view_value
PUBLIC	?make_panning_offset_from_axis@@YGMJ@Z		; make_panning_offset_from_axis
PUBLIC	?copy_eo_zoom@@YGXPAUEO_PARAMS_DYNAMIC_MOVE@@0@Z ; copy_eo_zoom
PUBLIC	?get_eo_los_intercept_point@@YGMPAUVEC3D@@@Z	; get_eo_los_intercept_point
PUBLIC	?laser_is_active@@YGHXZ				; laser_is_active
PUBLIC	?set_laser_is_active@@YGXH@Z			; set_laser_is_active
PUBLIC	?get_triangulated_range@@YGMPAUENTITY@@@Z	; get_triangulated_range
PUBLIC	?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ; get_triangulated_by_position_range
PUBLIC	?electrical_system_active@@YGHXZ		; electrical_system_active
PUBLIC	?set_electrical_system_active@@YGXH@Z		; set_electrical_system_active
PUBLIC	?eo_is_tracking_point@@YGHXZ			; eo_is_tracking_point
PUBLIC	?get_eo_tracking_point@@YGPAUVEC3D@@XZ		; get_eo_tracking_point
PUBLIC	?eo_start_tracking@@YGXPAUVEC3D@@@Z		; eo_start_tracking
PUBLIC	?eo_stop_tracking@@YGXXZ			; eo_stop_tracking
PUBLIC	?eo_tracking_point_valid@@YGHPAUVEC3D@@@Z	; eo_tracking_point_valid
PUBLIC	?get_range_to_target@@YGMXZ			; get_range_to_target
PUBLIC	?keyboard_slew_eo_system@@YGXMMM@Z		; keyboard_slew_eo_system
PUBLIC	?joystick_slew_eo_system@@YGXM@Z		; joystick_slew_eo_system
PUBLIC	?get_eo_azimuth@@YGMMMMMMM@Z			; get_eo_azimuth
PUBLIC	?get_eo_elevation@@YGMMMMMMM@Z			; get_eo_elevation
PUBLIC	?get_new_eo_zoom@@YGMM@Z			; get_new_eo_zoom
PUBLIC	?get_old_eo_zoom@@YGMMMM@Z			; get_old_eo_zoom
PUBLIC	?is_using_eo_system@@YGHH@Z			; is_using_eo_system
PUBLIC	?eo_is_locked@@YGHXZ				; eo_is_locked
PUBLIC	?toggle_eo_lock@@YGXXZ				; toggle_eo_lock
PUBLIC	?set_eo_lock@@YGXH@Z				; set_eo_lock
PUBLIC	?set_eo_slave_target@@YGXPAUENTITY@@@Z		; set_eo_slave_target
PUBLIC	?cpg_scan_for_eo_targets@@YGXXZ			; cpg_scan_for_eo_targets
PUBLIC	?get_eo_azimuth_and_elevation@@YGXPAM0@Z	; get_eo_azimuth_and_elevation
PUBLIC	?cpg_report_next_prev_target@@YGXPAUENTITY@@@Z	; cpg_report_next_prev_target
PUBLIC	?cpg_report_identified_target@@YGXPAUENTITY@@@Z	; cpg_report_identified_target
PUBLIC	?update_eo_max_visual_range@@YGXXZ		; update_eo_max_visual_range
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??initialise_common_eo@@YGXXZ@4JA ; `initialise_common_eo'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA ; `get_triangulated_range'::`1'::__LINE__Var
PUBLIC	??_C@_07KAPONOKE@ownship@			; `string'
PUBLIC	?__LINE__Var@?0??get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z@4JA ; `get_triangulated_by_position_range'::`1'::__LINE__Var
PUBLIC	??_C@_0CE@CGIBCKJH@ownship_position?5?$CG?$CG?5target_posi@ ; `string'
PUBLIC	?__LINE__Var@?0??insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z@4JA ; `insert_entity_into_eo_target_list'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@NENIEICJ@target_position@		; `string'
PUBLIC	?__LINE__Var@?0??get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA ; `get_eo_centred_viewpoint'::`1'::__LINE__Var
PUBLIC	??_C@_02HPPNELPJ@vp@				; `string'
PUBLIC	?__LINE__Var@?0??get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z@4JA ; `get_eo_boresight_tree_los_clear_range'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@NMPFNFPN@intercept_point@		; `string'
PUBLIC	??_C@_09LNGOJLOF@los_start@			; `string'
PUBLIC	??_C@_07BILCMBKD@los_end@			; `string'
PUBLIC	?__LINE__Var@?0??update_eo_visibility@@YGXXZ@4JA ; `update_eo_visibility'::`1'::__LINE__Var
PUBLIC	??_C@_0BH@FCCNOFJC@Invalid?5eo?5sensor?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA ; `get_eo_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@CCFJNJFF@los_unit_vector@		; `string'
PUBLIC	??_C@_0BD@KLMOJGGJ@?$CBfirst_pass_target@	; `string'
PUBLIC	??_C@_0BC@OHLLGGAH@first_pass_target@		; `string'
PUBLIC	??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@ ; `string'
PUBLIC	?__LINE__Var@?0??update_common_eo@@YGXXZ@4JA	; `update_common_eo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??slave_common_eo_to_current_target@@YGXXZ@4JA ; `slave_common_eo_to_current_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_selectable_eo_target@@YGHPAUENTITY@@@Z@4JA ; `get_selectable_eo_target'::`1'::__LINE__Var
PUBLIC	??_C@_06JJLAMBGK@target@			; `string'
PUBLIC	?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA ; `select_next_eo_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA ; `select_previous_eo_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA ; `select_next_designated_eo_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA ; `select_previous_designated_eo_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??eo_stop_tracking@@YGXXZ@4JA	; `eo_stop_tracking'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??eo_start_tracking@@YGXPAUVEC3D@@@Z@4JA ; `eo_start_tracking'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA ; `switch_to_point_lock'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA	; `get_range_to_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??keyboard_slew_eo_system@@YGXMMM@Z@4JA ; `keyboard_slew_eo_system'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??joystick_slew_eo_system@@YGXM@Z@4JA ; `joystick_slew_eo_system'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??evaluate_target@@YGMPAUENTITY@@M@Z@4JA ; `evaluate_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA ; `co_pilot_perform_eo_scan'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??cpg_scan_for_eo_targets@@YGXXZ@4JA ; `cpg_scan_for_eo_targets'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??cpg_report_identified_target@@YGXPAUENTITY@@@Z@4JA ; `cpg_report_identified_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??cpg_report_next_prev_target@@YGXPAUENTITY@@@Z@4JA ; `cpg_report_next_prev_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f5c987100000000
PUBLIC	__real@3f747ae147ae147b
PUBLIC	__real@3f800000
PUBLIC	__real@3f860a92
PUBLIC	__real@3fb6571848000000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff0c15236000000
PUBLIC	__real@3ff921fb51000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@400921fb51000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@401921fb51000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@4044000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@407f400000000000
PUBLIC	__real@40800000
PUBLIC	__real@4097700000000000
PUBLIC	__real@409f400000000000
PUBLIC	__real@40b3880000000000
PUBLIC	__real@40c3560000000000
PUBLIC	__real@41f00000
PUBLIC	__real@43160000
PUBLIC	__real@459c4000
PUBLIC	__real@461c4000
PUBLIC	__real@4bbebc20
PUBLIC	__real@bf800000
PUBLIC	__real@bfb6571848000000
PUBLIC	__real@bfc90fdb
PUBLIC	__real@c00921fb51000000
PUBLIC	__real@c0c3880000000000
PUBLIC	__real@c61c4000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_log:PROC
EXTRN	_pow:PROC
EXTRN	_sin:PROC
EXTRN	_sqrt:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_mouse_update_flag@@YGHXZ:PROC		; get_mouse_update_flag
EXTRN	?get_mouse_move_delta_x@@YGHXZ:PROC		; get_mouse_move_delta_x
EXTRN	?get_mouse_move_delta_y@@YGHXZ:PROC		; get_mouse_move_delta_y
EXTRN	?get_joystick_axis@@YGHHH@Z:PROC		; get_joystick_axis
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z:PROC ; normalise_3d_vector_given_magnitude
EXTRN	?get_3d_perp_dist_of_point_from_line@@YGMPBUVEC3D@@00PAU1@@Z:PROC ; get_3d_perp_dist_of_point_from_line
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_transpose_matrix3x3_vec3d
EXTRN	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3
EXTRN	?sfrand1norm@@YGNXZ:PROC			; sfrand1norm
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?get_3d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_3d_range
EXTRN	?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_3d_range
EXTRN	?get_3d_fog_distances@@YGXPAUENV_3D@@PAM1@Z:PROC ; get_3d_fog_distances
EXTRN	?get_object_3d_radius@@YGMH@Z:PROC		; get_object_3d_radius
EXTRN	?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z:PROC ; get_terrain_3d_point_sector_max_elevation
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; delete_local_entity_from_parents_child_list
EXTRN	?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z:PROC ; get_local_entity_child_succ_circular
EXTRN	?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z:PROC ; get_local_entity_child_pred_circular
EXTRN	?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z:PROC ; create_rotated_debug_3d_object
EXTRN	?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z:PROC ; create_debug_3d_line
EXTRN	?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z:PROC ; get_line_of_sight_collision_entity
EXTRN	?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z:PROC ; get_line_of_sight_collision_tree
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z:PROC ; play_client_server_cpg_message
EXTRN	?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z:PROC ; get_simple_session_weather_at_point
EXTRN	?set_gunship_target@@YGXPAUENTITY@@@Z:PROC	; set_gunship_target
EXTRN	?get_range_finder@@YG?AW4rangefinding_system@@XZ:PROC ; get_range_finder
EXTRN	?cpg_report_target@@YGXPAUENTITY@@@Z:PROC	; cpg_report_target
EXTRN	?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z:PROC ; get_los_clear
EXTRN	?check_bearing_within_cw_sweep_segment@@YGHMMM@Z:PROC ; check_bearing_within_cw_sweep_segment
EXTRN	?get_apache_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_apache_eo_centred_viewpoint
EXTRN	?get_comanche_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_comanche_eo_centred_viewpoint
EXTRN	?get_havoc_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_havoc_eo_centred_viewpoint
EXTRN	?get_hokum_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_hokum_eo_centred_viewpoint
EXTRN	?get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_blackhawk_eo_centred_viewpoint
EXTRN	?get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_hind_eo_centred_viewpoint
EXTRN	?get_ah64a_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_ah64a_eo_centred_viewpoint
EXTRN	?get_ka50_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_ka50_eo_centred_viewpoint
EXTRN	?get_viper_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_viper_eo_centred_viewpoint
EXTRN	?get_kiowa_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_kiowa_eo_centred_viewpoint
EXTRN	?get_default_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z:PROC ; get_default_eo_centred_viewpoint
EXTRN	?get_time_acceleration@@YGHXZ:PROC		; get_time_acceleration
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?sys_col_green@@3UREAL_COLOUR@@A:DWORD		; sys_col_green
EXTRN	?sys_col_magenta@@3UREAL_COLOUR@@A:DWORD	; sys_col_magenta
EXTRN	?command_line_dynamics_engine_startup@@3HA:DWORD ; command_line_dynamics_engine_startup
EXTRN	?command_line_mouse_look@@3HA:DWORD		; command_line_mouse_look
EXTRN	?command_line_mouse_look_speed@@3HA:DWORD	; command_line_mouse_look_speed
EXTRN	?command_line_eo_pan_joystick_index@@3HA:DWORD	; command_line_eo_pan_joystick_index
EXTRN	?command_line_eo_pan_vertical_joystick_axis@@3HA:DWORD ; command_line_eo_pan_vertical_joystick_axis
EXTRN	?command_line_eo_pan_horizontal_joystick_axis@@3HA:DWORD ; command_line_eo_pan_horizontal_joystick_axis
EXTRN	?command_line_eo_zoom_joystick_index@@3HA:DWORD	; command_line_eo_zoom_joystick_index
EXTRN	?command_line_eo_zoom_joystick_axis@@3HA:DWORD	; command_line_eo_zoom_joystick_axis
EXTRN	?command_line_field_of_view_joystick_index@@3HA:DWORD ; command_line_field_of_view_joystick_index
EXTRN	?command_line_manual_laser_radar@@3HA:DWORD	; command_line_manual_laser_radar
EXTRN	?command_line_eo_full_range@@3HA:DWORD		; command_line_eo_full_range
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_co_pilot_scans_for_targets@@3HA:DWORD	; global_co_pilot_scans_for_targets
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_client_server_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?vehicle_database@@3PAUVEHICLE_DATA@@A:BYTE	; vehicle_database
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?main_3d_env@@3PAUENV_3D@@A:DWORD		; main_3d_env
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?joystick_pov_left@@3HA:DWORD			; joystick_pov_left
EXTRN	?joystick_pov_right@@3HA:DWORD			; joystick_pov_right
EXTRN	?joystick_pov_up@@3HA:DWORD			; joystick_pov_up
EXTRN	?joystick_pov_down@@3HA:DWORD			; joystick_pov_down
EXTRN	?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; target_acquisition_system
EXTRN	?target_locked@@3HA:DWORD			; target_locked
EXTRN	?continuous_target_acquisition_system_steer_left_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_left_key
EXTRN	?continuous_target_acquisition_system_steer_right_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_right_key
EXTRN	?continuous_target_acquisition_system_steer_up_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_up_key
EXTRN	?continuous_target_acquisition_system_steer_down_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_down_key
EXTRN	?continuous_target_acquisition_system_steer_left_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_left_fast_key
EXTRN	?continuous_target_acquisition_system_steer_right_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_right_fast_key
EXTRN	?continuous_target_acquisition_system_steer_up_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_up_fast_key
EXTRN	?continuous_target_acquisition_system_steer_down_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_down_fast_key
EXTRN	?continuous_target_acquisition_system_steer_left_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_left_fine_key
EXTRN	?continuous_target_acquisition_system_steer_right_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_right_fine_key
EXTRN	?continuous_target_acquisition_system_steer_up_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_up_fine_key
EXTRN	?continuous_target_acquisition_system_steer_down_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_down_fine_key
EXTRN	?mouse_wheel_up@@3HA:DWORD			; mouse_wheel_up
EXTRN	?mouse_wheel_down@@3HA:DWORD			; mouse_wheel_down
EXTRN	?gun_is_firing@@3HA:DWORD			; gun_is_firing
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?lock_target@@3HA DD 01H DUP (?)			; lock_target
?lock_terrain@@3HA DD 01H DUP (?)			; lock_terrain
?eo_tracking_point@@3UVEC3D@@A DB 0cH DUP (?)		; eo_tracking_point
?co_pilot_sweep_heading@@3MA DD 01H DUP (?)		; co_pilot_sweep_heading
?time_until_next_co_pilot_sweep@@3MA DD 01H DUP (?)	; time_until_next_co_pilot_sweep
?eo_target_root@@3PAUEO_TARGET@@A DD 01H DUP (?)	; eo_target_root
?laser_active@@3HA DD 01H DUP (?)			; laser_active
?best_target_rank@?1??co_pilot_perform_eo_scan@@YGXXZ@4MA DD 01H DUP (?) ; `co_pilot_perform_eo_scan'::`2'::best_target_rank
?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A DD 01H DUP (?) ; `co_pilot_perform_eo_scan'::`2'::best_target
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c61c4000
CONST	SEGMENT
__real@c61c4000 DD 0c61c4000r			; -10000
CONST	ENDS
;	COMDAT __real@c0c3880000000000
CONST	SEGMENT
__real@c0c3880000000000 DQ 0c0c3880000000000r	; -10000
CONST	ENDS
;	COMDAT __real@c00921fb51000000
CONST	SEGMENT
__real@c00921fb51000000 DQ 0c00921fb51000000r	; -3.14159
CONST	ENDS
;	COMDAT __real@bfc90fdb
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
CONST	ENDS
;	COMDAT __real@bfb6571848000000
CONST	SEGMENT
__real@bfb6571848000000 DQ 0bfb6571848000000r	; -0.0872665
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@4bbebc20
CONST	SEGMENT
__real@4bbebc20 DD 04bbebc20r			; 2.5e+07
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@43160000
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@40c3560000000000
CONST	SEGMENT
__real@40c3560000000000 DQ 040c3560000000000r	; 9900
CONST	ENDS
;	COMDAT __real@40b3880000000000
CONST	SEGMENT
__real@40b3880000000000 DQ 040b3880000000000r	; 5000
CONST	ENDS
;	COMDAT __real@409f400000000000
CONST	SEGMENT
__real@409f400000000000 DQ 0409f400000000000r	; 2000
CONST	ENDS
;	COMDAT __real@4097700000000000
CONST	SEGMENT
__real@4097700000000000 DQ 04097700000000000r	; 1500
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@407f400000000000
CONST	SEGMENT
__real@407f400000000000 DQ 0407f400000000000r	; 500
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4044000000000000
CONST	SEGMENT
__real@4044000000000000 DQ 04044000000000000r	; 40
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@401921fb51000000
CONST	SEGMENT
__real@401921fb51000000 DQ 0401921fb51000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@400921fb51000000
CONST	SEGMENT
__real@400921fb51000000 DQ 0400921fb51000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff921fb51000000
CONST	SEGMENT
__real@3ff921fb51000000 DQ 03ff921fb51000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff0c15236000000
CONST	SEGMENT
__real@3ff0c15236000000 DQ 03ff0c15236000000r	; 1.0472
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb6571848000000
CONST	SEGMENT
__real@3fb6571848000000 DQ 03fb6571848000000r	; 0.0872665
CONST	ENDS
;	COMDAT __real@3f860a92
CONST	SEGMENT
__real@3f860a92 DD 03f860a92r			; 1.0472
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f747ae147ae147b
CONST	SEGMENT
__real@3f747ae147ae147b DQ 03f747ae147ae147br	; 0.005
CONST	ENDS
;	COMDAT __real@3f5c987100000000
CONST	SEGMENT
__real@3f5c987100000000 DQ 03f5c987100000000r	; 0.00174533
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??cpg_report_next_prev_target@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??cpg_report_next_prev_target@@YGXPAUENTITY@@@Z@4JA DD 0b63H ; `cpg_report_next_prev_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??cpg_report_identified_target@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??cpg_report_identified_target@@YGXPAUENTITY@@@Z@4JA DD 0b52H ; `cpg_report_identified_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??cpg_scan_for_eo_targets@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??cpg_scan_for_eo_targets@@YGXXZ@4JA DD 0b1eH ; `cpg_scan_for_eo_targets'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA DD 0a41H ; `co_pilot_perform_eo_scan'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@ DB 'Invalid target'
	DB	' type = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??evaluate_target@@YGMPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??evaluate_target@@YGMPAUENTITY@@M@Z@4JA DD 09ffH ; `evaluate_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??joystick_slew_eo_system@@YGXM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??joystick_slew_eo_system@@YGXM@Z@4JA DD 08f2H ; `joystick_slew_eo_system'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??keyboard_slew_eo_system@@YGXMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??keyboard_slew_eo_system@@YGXMMM@Z@4JA DD 083fH ; `keyboard_slew_eo_system'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA DD 0823H ; `get_range_to_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA DD 0801H ; `switch_to_point_lock'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??eo_start_tracking@@YGXPAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??eo_start_tracking@@YGXPAUVEC3D@@@Z@4JA DD 07f3H ; `eo_start_tracking'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??eo_stop_tracking@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??eo_stop_tracking@@YGXXZ@4JA DD 07e8H	; `eo_stop_tracking'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA DD 0780H ; `select_previous_designated_eo_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA DD 074aH ; `select_next_designated_eo_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA DD 06cfH ; `select_previous_eo_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA DD 0692H ; `select_next_eo_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06JJLAMBGK@target@
CONST	SEGMENT
??_C@_06JJLAMBGK@target@ DB 'target', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_selectable_eo_target@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_selectable_eo_target@@YGHPAUENTITY@@@Z@4JA DD 0620H ; `get_selectable_eo_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??slave_common_eo_to_current_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??slave_common_eo_to_current_target@@YGXXZ@4JA DD 05c2H ; `slave_common_eo_to_current_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_common_eo@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_common_eo@@YGXXZ@4JA DD 048dH	; `update_common_eo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@
CONST	SEGMENT
??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@ DB 'object_3d'
	DB	'_index != OBJECT_3D_INVALID_OBJECT_INDEX', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OHLLGGAH@first_pass_target@
CONST	SEGMENT
??_C@_0BC@OHLLGGAH@first_pass_target@ DB 'first_pass_target', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KLMOJGGJ@?$CBfirst_pass_target@
CONST	SEGMENT
??_C@_0BD@KLMOJGGJ@?$CBfirst_pass_target@ DB '!first_pass_target', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CCFJNJFF@los_unit_vector@
CONST	SEGMENT
??_C@_0BA@CCFJNJFF@los_unit_vector@ DB 'los_unit_vector', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA DD 0318H ; `get_eo_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BH@FCCNOFJC@Invalid?5eo?5sensor?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BH@FCCNOFJC@Invalid?5eo?5sensor?5?$DN?5?$CFd@ DB 'Invalid eo senso'
	DB	'r = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_eo_visibility@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_eo_visibility@@YGXXZ@4JA DD 02d8H ; `update_eo_visibility'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07BILCMBKD@los_end@
CONST	SEGMENT
??_C@_07BILCMBKD@los_end@ DB 'los_end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LNGOJLOF@los_start@
CONST	SEGMENT
??_C@_09LNGOJLOF@los_start@ DB 'los_start', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NMPFNFPN@intercept_point@
CONST	SEGMENT
??_C@_0BA@NMPFNFPN@intercept_point@ DB 'intercept_point', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z@4JA DD 029dH ; `get_eo_boresight_tree_los_clear_range'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02HPPNELPJ@vp@
CONST	SEGMENT
??_C@_02HPPNELPJ@vp@ DB 'vp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA DD 01aeH ; `get_eo_centred_viewpoint'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@NENIEICJ@target_position@
CONST	SEGMENT
??_C@_0BA@NENIEICJ@target_position@ DB 'target_position', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z@4JA DD 0169H ; `insert_entity_into_eo_target_list'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CE@CGIBCKJH@ownship_position?5?$CG?$CG?5target_posi@
CONST	SEGMENT
??_C@_0CE@CGIBCKJH@ownship_position?5?$CG?$CG?5target_posi@ DB 'ownship_p'
	DB	'osition && target_position', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z@4JA DD 0135H ; `get_triangulated_by_position_range'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07KAPONOKE@ownship@
CONST	SEGMENT
??_C@_07KAPONOKE@ownship@ DB 'ownship', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA DD 0125H ; `get_triangulated_range'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\common\co_'
	DB	'eo.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_common_eo@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_common_eo@@YGXXZ@4JA DD 0beH ; `initialise_common_eo'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?electrical_system_on@@3HA DD 01H			; electrical_system_on
?previous_mouse_update_flag@?BA@??get_eo_azimuth@@YGMMMMMMM@Z@4HA DD 01H ; `get_eo_azimuth'::`16'::previous_mouse_update_flag
?previous_mouse_update_flag@?BA@??get_eo_elevation@@YGMMMMMMM@Z@4HA DD 01H ; `get_eo_elevation'::`16'::previous_mouse_update_flag
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?co_pilot_perform_eo_scan@@YGXXZ
_TEXT	SEGMENT
tv499 = -216						; size = 4
tv477 = -216						; size = 4
tv430 = -216						; size = 4
tv409 = -216						; size = 4
tv390 = -216						; size = 4
tv371 = -216						; size = 4
tv352 = -216						; size = 4
tv277 = -216						; size = 4
tv150 = -216						; size = 4
tv130 = -216						; size = 4
tv78 = -216						; size = 4
tv664 = -212						; size = 4
tv654 = -212						; size = 4
tv646 = -212						; size = 4
tv636 = -212						; size = 4
tv491 = -212						; size = 4
tv469 = -212						; size = 4
tv422 = -212						; size = 4
tv402 = -212						; size = 4
tv383 = -212						; size = 4
tv364 = -212						; size = 4
tv344 = -212						; size = 4
tv337 = -212						; size = 4
tv270 = -212						; size = 4
tv142 = -212						; size = 4
tv90 = -212						; size = 4
tv70 = -212						; size = 4
_range$1 = -144						; size = 4
_rank$2 = -140						; size = 4
_sqr_target_range$3 = -136				; size = 4
_source_side$4 = -132					; size = 4
_cw_sweep_end_position$ = -128				; size = 12
_cw_sweep_start_position$ = -116			; size = 12
_target_position$ = -104				; size = 4
_source_position$ = -100				; size = 4
_sector$ = -96						; size = 4
_target$ = -92						; size = 4
_source$ = -88						; size = 4
_sqr_scan_range$ = -84					; size = 4
_z_max$ = -80						; size = 4
_x_max$ = -76						; size = 4
_z_min$ = -72						; size = 4
_x_min$ = -68						; size = 4
_dz$ = -64						; size = 4
_dx$ = -60						; size = 4
_bearing$ = -56						; size = 4
_heading$ = -52						; size = 4
_cw_sweep_end_direction$ = -48				; size = 4
_cw_sweep_start_direction$ = -44			; size = 4
_cw_sweep_end_offset$ = -40				; size = 4
_cw_sweep_start_offset$ = -36				; size = 4
_scan_range$ = -32					; size = 4
_z_sec_max$ = -28					; size = 4
_x_sec_max$ = -24					; size = 4
_z_sec_min$ = -20					; size = 4
_x_sec_min$ = -16					; size = 4
_z_sec$ = -12						; size = 4
_x_sec$ = -8						; size = 4
_sweep_done$ = -4					; size = 4
?co_pilot_perform_eo_scan@@YGXXZ PROC			; co_pilot_perform_eo_scan, COMDAT

; 2625 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2626 : 	static float
; 2627 : 		best_target_rank = 0.0;
; 2628 : 
; 2629 : 	static entity*
; 2630 : 		best_target = NULL;
; 2631 : 
; 2632 : 	int
; 2633 : 		sweep_done = FALSE,

  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _sweep_done$[ebp], 0

; 2634 : 		x_sec,
; 2635 : 		z_sec,
; 2636 : 		x_sec_min,
; 2637 : 		z_sec_min,
; 2638 : 		x_sec_max,
; 2639 : 		z_sec_max;
; 2640 : 
; 2641 : 	float
; 2642 : 		scan_range = 5000.0,

  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@459c4000
  0001b	f3 0f 11 45 e0	 movss	 DWORD PTR _scan_range$[ebp], xmm0

; 2643 : 		cw_sweep_start_offset,
; 2644 : 		cw_sweep_end_offset,
; 2645 : 		cw_sweep_start_direction,
; 2646 : 		cw_sweep_end_direction,
; 2647 : 		heading,
; 2648 : 		bearing,
; 2649 : 		dx,
; 2650 : 		dz,
; 2651 : 		x_min,
; 2652 : 		z_min,
; 2653 : 		x_max,
; 2654 : 		z_max,
; 2655 : 		sqr_scan_range;
; 2656 : 
; 2657 : 	entity
; 2658 : 		*source,
; 2659 : 		*target,
; 2660 : 		*sector;
; 2661 : 
; 2662 : 	vec3d
; 2663 : 		*source_position,
; 2664 : 		*target_position,
; 2665 : 		cw_sweep_start_position,
; 2666 : 		cw_sweep_end_position;
; 2667 : 
; 2668 : 	////////////////////////////////////////
; 2669 : 	//
; 2670 : 	// get source data
; 2671 : 	//
; 2672 : 	////////////////////////////////////////
; 2673 : 
; 2674 : 	source = get_gunship_entity ();

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00025	89 45 a8	 mov	 DWORD PTR _source$[ebp], eax

; 2675 : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00028	83 7d a8 00	 cmp	 DWORD PTR _source$[ebp], 0
  0002c	74 0d		 je	 SHORT $LN29@co_pilot_p
  0002e	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00039	eb 24		 jmp	 SHORT $LN30@co_pilot_p
$LN29@co_pilot_p:
  0003b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00041	83 c2 32	 add	 edx, 50			; 00000032H
  00044	52		 push	 edx
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00055	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN30@co_pilot_p:
  0005f	b9 01 00 00 00	 mov	 ecx, 1
  00064	85 c9		 test	 ecx, ecx
  00066	74 0c		 je	 SHORT $LN31@co_pilot_p
  00068	c7 85 28 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv78[ebp], 8
  00072	eb 24		 jmp	 SHORT $LN32@co_pilot_p
$LN31@co_pilot_p:
  00074	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  0007a	83 c2 32	 add	 edx, 50			; 00000032H
  0007d	52		 push	 edx
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008e	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN32@co_pilot_p:
  00098	6a 08		 push	 8
  0009a	8b 4d a8	 mov	 ecx, DWORD PTR _source$[ebp]
  0009d	51		 push	 ecx
  0009e	6b 95 2c ff ff
	ff 60		 imul	 edx, DWORD PTR tv70[ebp], 96
  000a5	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  000ab	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000b2	ff d1		 call	 ecx
  000b4	89 45 9c	 mov	 DWORD PTR _source_position$[ebp], eax

; 2676 : 
; 2677 : 	{
; 2678 : 		entity_sides source_side = (entity_sides) get_local_entity_int_value(source, INT_TYPE_SIDE);

  000b7	83 7d a8 00	 cmp	 DWORD PTR _source$[ebp], 0
  000bb	74 0d		 je	 SHORT $LN33@co_pilot_p
  000bd	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  000c8	eb 24		 jmp	 SHORT $LN34@co_pilot_p
$LN33@co_pilot_p:
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  000d0	83 c2 35	 add	 edx, 53			; 00000035H
  000d3	52		 push	 edx
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e4	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN34@co_pilot_p:
  000ee	b9 01 00 00 00	 mov	 ecx, 1
  000f3	85 c9		 test	 ecx, ecx
  000f5	74 0c		 je	 SHORT $LN35@co_pilot_p
  000f7	c7 85 28 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv130[ebp], 187 ; 000000bbH
  00101	eb 24		 jmp	 SHORT $LN36@co_pilot_p
$LN35@co_pilot_p:
  00103	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00109	83 c2 35	 add	 edx, 53			; 00000035H
  0010c	52		 push	 edx
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011d	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv130[ebp], 0
$LN36@co_pilot_p:
  00127	68 bb 00 00 00	 push	 187			; 000000bbH
  0012c	8b 4d a8	 mov	 ecx, DWORD PTR _source$[ebp]
  0012f	51		 push	 ecx
  00130	69 95 2c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv90[ebp], 1116
  0013a	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  00140	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00147	ff d1		 call	 ecx
  00149	89 85 7c ff ff
	ff		 mov	 DWORD PTR _source_side$4[ebp], eax

; 2679 : 
; 2680 : 		heading = get_local_entity_float_value (source, FLOAT_TYPE_HEADING);

  0014f	83 7d a8 00	 cmp	 DWORD PTR _source$[ebp], 0
  00153	74 0d		 je	 SHORT $LN37@co_pilot_p
  00155	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  00158	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015a	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv142[ebp], ecx
  00160	eb 24		 jmp	 SHORT $LN38@co_pilot_p
$LN37@co_pilot_p:
  00162	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00168	83 c2 37	 add	 edx, 55			; 00000037H
  0016b	52		 push	 edx
  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00171	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017c	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN38@co_pilot_p:
  00186	b9 01 00 00 00	 mov	 ecx, 1
  0018b	85 c9		 test	 ecx, ecx
  0018d	74 0c		 je	 SHORT $LN39@co_pilot_p
  0018f	c7 85 28 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv150[ebp], 52 ; 00000034H
  00199	eb 24		 jmp	 SHORT $LN40@co_pilot_p
$LN39@co_pilot_p:
  0019b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  001a1	83 c2 37	 add	 edx, 55			; 00000037H
  001a4	52		 push	 edx
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b5	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN40@co_pilot_p:
  001bf	6a 34		 push	 52			; 00000034H
  001c1	8b 4d a8	 mov	 ecx, DWORD PTR _source$[ebp]
  001c4	51		 push	 ecx
  001c5	69 95 2c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv142[ebp], 700
  001cf	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv150[ebp]
  001d5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001dc	ff d1		 call	 ecx
  001de	d9 5d cc	 fstp	 DWORD PTR _heading$[ebp]

; 2681 : 		cw_sweep_start_offset = co_pilot_sweep_heading;

  001e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?co_pilot_sweep_heading@@3MA
  001e9	f3 0f 11 45 dc	 movss	 DWORD PTR _cw_sweep_start_offset$[ebp], xmm0

; 2682 : 		co_pilot_sweep_heading += CO_PILOT_SWEEP_SPEED * get_delta_time();

  001ee	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001f6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff921fb51000000
  001fe	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?co_pilot_sweep_heading@@3MA
  00206	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0020a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0020e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?co_pilot_sweep_heading@@3MA, xmm0

; 2683 : 
; 2684 : 		if (co_pilot_sweep_heading >= rad(90.0))  // this is last segment of sweep

  00216	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?co_pilot_sweep_heading@@3MA
  0021e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff921fb51000000
  00226	72 26		 jb	 SHORT $LN10@co_pilot_p

; 2685 : 		{
; 2686 : 			sweep_done = TRUE;

  00228	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _sweep_done$[ebp], 1

; 2687 : 			cw_sweep_end_offset = rad(90.0);

  0022f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc90fdb
  00237	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_offset$[ebp], xmm0

; 2688 : 			co_pilot_sweep_heading = rad(-90.0);

  0023c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc90fdb
  00244	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?co_pilot_sweep_heading@@3MA, xmm0

; 2689 : 		}
; 2690 : 		else

  0024c	eb 0d		 jmp	 SHORT $LN11@co_pilot_p
$LN10@co_pilot_p:

; 2691 : 			cw_sweep_end_offset = co_pilot_sweep_heading;

  0024e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?co_pilot_sweep_heading@@3MA
  00256	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_offset$[ebp], xmm0
$LN11@co_pilot_p:

; 2692 : 
; 2693 : 		cw_sweep_start_direction = heading + cw_sweep_start_offset;

  0025b	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00260	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _cw_sweep_start_offset$[ebp]
  00265	f3 0f 11 45 d4	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0

; 2694 : 
; 2695 : 		if (cw_sweep_start_direction > rad (180.0))

  0026a	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0026f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  00277	76 18		 jbe	 SHORT $LN12@co_pilot_p

; 2696 : 			cw_sweep_start_direction -= rad (360.0);

  00279	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0027e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  00286	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028a	f3 0f 11 45 d4	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0
  0028f	eb 29		 jmp	 SHORT $LN14@co_pilot_p
$LN12@co_pilot_p:

; 2697 : 		else if (cw_sweep_start_direction < rad (-180.0))

  00291	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00296	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  0029e	66 0f 2f c8	 comisd	 xmm1, xmm0
  002a2	76 16		 jbe	 SHORT $LN14@co_pilot_p

; 2698 : 			cw_sweep_start_direction += rad (360.0);

  002a4	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  002a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  002b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b5	f3 0f 11 45 d4	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0
$LN14@co_pilot_p:

; 2699 : 
; 2700 : 		cw_sweep_end_direction = heading + cw_sweep_end_offset;

  002ba	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  002bf	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _cw_sweep_end_offset$[ebp]
  002c4	f3 0f 11 45 d0	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0

; 2701 : 
; 2702 : 		if (cw_sweep_end_direction > rad (180.0))

  002c9	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  002ce	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  002d6	76 18		 jbe	 SHORT $LN15@co_pilot_p

; 2703 : 			cw_sweep_end_direction -= rad (360.0);

  002d8	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  002dd	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  002e5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e9	f3 0f 11 45 d0	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0
  002ee	eb 29		 jmp	 SHORT $LN17@co_pilot_p
$LN15@co_pilot_p:

; 2704 : 		else if (cw_sweep_end_direction < rad (-180.0))

  002f0	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  002f5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  002fd	66 0f 2f c8	 comisd	 xmm1, xmm0
  00301	76 16		 jbe	 SHORT $LN17@co_pilot_p

; 2705 : 			cw_sweep_end_direction += rad (360.0);

  00303	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00308	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00310	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00314	f3 0f 11 45 d0	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0
$LN17@co_pilot_p:

; 2706 : 
; 2707 : 		////////////////////////////////////////
; 2708 : 		//
; 2709 : 		// get sector scan area
; 2710 : 		//
; 2711 : 		////////////////////////////////////////
; 2712 : 
; 2713 : 		cw_sweep_start_position.x = source_position->x + (sin (cw_sweep_start_direction) * scan_range);

  00319	51		 push	 ecx
  0031a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0031f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00324	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00329	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR tv636[ebp]
  0032f	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv636[ebp]
  00337	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _scan_range$[ebp]
  0033c	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  0033f	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00343	f3 0f 11 45 8c	 movss	 DWORD PTR _cw_sweep_start_position$[ebp], xmm0

; 2714 : 		cw_sweep_start_position.y = source_position->y;

  00348	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  0034b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00350	f3 0f 11 45 90	 movss	 DWORD PTR _cw_sweep_start_position$[ebp+4], xmm0

; 2715 : 		cw_sweep_start_position.z = source_position->z + (cos (cw_sweep_start_direction) * scan_range);

  00355	51		 push	 ecx
  00356	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0035b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00360	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00365	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR tv646[ebp]
  0036b	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv646[ebp]
  00373	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _scan_range$[ebp]
  00378	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  0037b	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00380	f3 0f 11 45 94	 movss	 DWORD PTR _cw_sweep_start_position$[ebp+8], xmm0

; 2716 : 
; 2717 : 		cw_sweep_end_position.x = source_position->x + (sin (cw_sweep_end_direction) * scan_range);

  00385	51		 push	 ecx
  00386	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  0038b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00390	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00395	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR tv654[ebp]
  0039b	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv654[ebp]
  003a3	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _scan_range$[ebp]
  003a8	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  003ab	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  003af	f3 0f 11 45 80	 movss	 DWORD PTR _cw_sweep_end_position$[ebp], xmm0

; 2718 : 		cw_sweep_end_position.y = source_position->y;

  003b4	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  003b7	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  003bc	f3 0f 11 45 84	 movss	 DWORD PTR _cw_sweep_end_position$[ebp+4], xmm0

; 2719 : 		cw_sweep_end_position.z = source_position->z + (cos (cw_sweep_end_direction) * scan_range);

  003c1	51		 push	 ecx
  003c2	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  003c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cc	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  003d1	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR tv664[ebp]
  003d7	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv664[ebp]
  003df	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _scan_range$[ebp]
  003e4	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  003e7	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  003ec	f3 0f 11 45 88	 movss	 DWORD PTR _cw_sweep_end_position$[ebp+8], xmm0

; 2720 : 
; 2721 : 		//
; 2722 : 		// sector scan min
; 2723 : 		//
; 2724 : 
; 2725 : 		x_min = min (min (cw_sweep_start_position.x, cw_sweep_end_position.x), source_position->x);

  003f1	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  003f4	50		 push	 eax
  003f5	8d 4d 80	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  003f8	51		 push	 ecx
  003f9	8d 55 8c	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  003fc	52		 push	 edx
  003fd	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00402	50		 push	 eax
  00403	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00408	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0040c	f3 0f 11 45 bc	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 2726 : 		z_min = min (min (cw_sweep_start_position.z, cw_sweep_end_position.z), source_position->z);

  00411	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  00414	83 c0 08	 add	 eax, 8
  00417	50		 push	 eax
  00418	8d 4d 88	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp+8]
  0041b	51		 push	 ecx
  0041c	8d 55 94	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp+8]
  0041f	52		 push	 edx
  00420	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00425	50		 push	 eax
  00426	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0042b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0042f	f3 0f 11 45 b8	 movss	 DWORD PTR _z_min$[ebp], xmm0

; 2727 : 
; 2728 : 		get_x_sector (x_sec_min, x_min);

  00434	8d 45 f0	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  00437	50		 push	 eax
  00438	51		 push	 ecx
  00439	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  0043e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00443	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00448	8b 45 f0	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  0044b	99		 cdq
  0044c	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00452	89 45 f0	 mov	 DWORD PTR _x_sec_min$[ebp], eax

; 2729 : 		get_z_sector (z_sec_min, z_min);

  00455	8d 45 ec	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  00458	50		 push	 eax
  00459	51		 push	 ecx
  0045a	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _z_min$[ebp]
  0045f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00464	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00469	8b 45 ec	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  0046c	99		 cdq
  0046d	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00473	89 45 ec	 mov	 DWORD PTR _z_sec_min$[ebp], eax

; 2730 : 
; 2731 : 		x_sec_min = max (x_sec_min, MIN_MAP_X_SECTOR);

  00476	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  0047b	8d 45 f0	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  0047e	50		 push	 eax
  0047f	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00484	8b 08		 mov	 ecx, DWORD PTR [eax]
  00486	89 4d f0	 mov	 DWORD PTR _x_sec_min$[ebp], ecx

; 2732 : 		z_sec_min = max (z_sec_min, MIN_MAP_Z_SECTOR);

  00489	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  0048e	8d 45 ec	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00497	8b 08		 mov	 ecx, DWORD PTR [eax]
  00499	89 4d ec	 mov	 DWORD PTR _z_sec_min$[ebp], ecx

; 2733 : 
; 2734 : 		//
; 2735 : 		// sector scan max
; 2736 : 		//
; 2737 : 
; 2738 : 		x_max = max (max (cw_sweep_start_position.x, cw_sweep_end_position.x), source_position->x);

  0049c	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  0049f	50		 push	 eax
  004a0	8d 4d 80	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  004a3	51		 push	 ecx
  004a4	8d 55 8c	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  004a7	52		 push	 edx
  004a8	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  004ad	50		 push	 eax
  004ae	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  004b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  004b7	f3 0f 11 45 b4	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 2739 : 		z_max = max (max (cw_sweep_start_position.z, cw_sweep_end_position.z), source_position->z);

  004bc	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  004bf	83 c0 08	 add	 eax, 8
  004c2	50		 push	 eax
  004c3	8d 4d 88	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp+8]
  004c6	51		 push	 ecx
  004c7	8d 55 94	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp+8]
  004ca	52		 push	 edx
  004cb	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  004d0	50		 push	 eax
  004d1	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  004d6	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  004da	f3 0f 11 45 b0	 movss	 DWORD PTR _z_max$[ebp], xmm0

; 2740 : 
; 2741 : 		get_x_sector (x_sec_max, x_max);

  004df	8d 45 e8	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  004e2	50		 push	 eax
  004e3	51		 push	 ecx
  004e4	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  004e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ee	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  004f3	8b 45 e8	 mov	 eax, DWORD PTR _x_sec_max$[ebp]
  004f6	99		 cdq
  004f7	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  004fd	89 45 e8	 mov	 DWORD PTR _x_sec_max$[ebp], eax

; 2742 : 		get_z_sector (z_sec_max, z_max);

  00500	8d 45 e4	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  00503	50		 push	 eax
  00504	51		 push	 ecx
  00505	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  0050a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050f	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00514	8b 45 e4	 mov	 eax, DWORD PTR _z_sec_max$[ebp]
  00517	99		 cdq
  00518	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0051e	89 45 e4	 mov	 DWORD PTR _z_sec_max$[ebp], eax

; 2743 : 
; 2744 : 		x_sec_max = min (x_sec_max, MAX_MAP_X_SECTOR);

  00521	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  00526	8d 45 e8	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  00529	50		 push	 eax
  0052a	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  0052f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00531	89 4d e8	 mov	 DWORD PTR _x_sec_max$[ebp], ecx

; 2745 : 		z_sec_max = min (z_sec_max, MAX_MAP_Z_SECTOR);

  00534	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  00539	8d 45 e4	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  0053c	50		 push	 eax
  0053d	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00542	8b 08		 mov	 ecx, DWORD PTR [eax]
  00544	89 4d e4	 mov	 DWORD PTR _z_sec_max$[ebp], ecx

; 2746 : 
; 2747 : 		////////////////////////////////////////
; 2748 : 		//
; 2749 : 		// sector scan
; 2750 : 		//
; 2751 : 		////////////////////////////////////////
; 2752 : 
; 2753 : 		// reduce scan range in bad visibility
; 2754 : 		if (get_simple_session_weather_at_point (source_position) == WEATHERMODE_HEAVY_RAIN)

  00547	8b 45 9c	 mov	 eax, DWORD PTR _source_position$[ebp]
  0054a	50		 push	 eax
  0054b	e8 00 00 00 00	 call	 ?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z ; get_simple_session_weather_at_point
  00550	83 f8 03	 cmp	 eax, 3
  00553	75 16		 jne	 SHORT $LN18@co_pilot_p

; 2755 : 			scan_range -= 1500.0;

  00555	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _scan_range$[ebp]
  0055a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4097700000000000
  00562	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00566	f3 0f 11 45 e0	 movss	 DWORD PTR _scan_range$[ebp], xmm0
$LN18@co_pilot_p:

; 2756 : 		if (get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE) == DAY_SEGMENT_TYPE_NIGHT)

  0056b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00572	74 0f		 je	 SHORT $LN41@co_pilot_p
  00574	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00579	8b 08		 mov	 ecx, DWORD PTR [eax]
  0057b	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv270[ebp], ecx
  00581	eb 20		 jmp	 SHORT $LN42@co_pilot_p
$LN41@co_pilot_p:
  00583	68 c4 0a 00 00	 push	 2756			; 00000ac4H
  00588	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0058d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00593	52		 push	 edx
  00594	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00599	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv270[ebp], 0
$LN42@co_pilot_p:
  005a3	b8 01 00 00 00	 mov	 eax, 1
  005a8	85 c0		 test	 eax, eax
  005aa	74 0c		 je	 SHORT $LN43@co_pilot_p
  005ac	c7 85 28 ff ff
	ff 27 00 00 00	 mov	 DWORD PTR tv277[ebp], 39 ; 00000027H
  005b6	eb 20		 jmp	 SHORT $LN44@co_pilot_p
$LN43@co_pilot_p:
  005b8	68 c4 0a 00 00	 push	 2756			; 00000ac4H
  005bd	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005c8	51		 push	 ecx
  005c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ce	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv277[ebp], 0
$LN44@co_pilot_p:
  005d8	6a 27		 push	 39			; 00000027H
  005da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  005e0	52		 push	 edx
  005e1	69 85 2c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv270[ebp], 1116
  005eb	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv277[ebp]
  005f1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  005f8	ff d2		 call	 edx
  005fa	83 f8 03	 cmp	 eax, 3
  005fd	75 16		 jne	 SHORT $LN19@co_pilot_p

; 2757 : 			scan_range -= 1500.0;

  005ff	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _scan_range$[ebp]
  00604	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4097700000000000
  0060c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00610	f3 0f 11 45 e0	 movss	 DWORD PTR _scan_range$[ebp], xmm0
$LN19@co_pilot_p:

; 2758 : 
; 2759 : 		sqr_scan_range = scan_range * scan_range;

  00615	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _scan_range$[ebp]
  0061a	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _scan_range$[ebp]
  0061f	f3 0f 11 45 ac	 movss	 DWORD PTR _sqr_scan_range$[ebp], xmm0

; 2760 : 
; 2761 : 		for (z_sec = z_sec_min; z_sec <= z_sec_max; z_sec++)

  00624	8b 45 ec	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  00627	89 45 f4	 mov	 DWORD PTR _z_sec$[ebp], eax
  0062a	eb 09		 jmp	 SHORT $LN4@co_pilot_p
$LN2@co_pilot_p:
  0062c	8b 45 f4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0062f	83 c0 01	 add	 eax, 1
  00632	89 45 f4	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN4@co_pilot_p:
  00635	8b 45 f4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00638	3b 45 e4	 cmp	 eax, DWORD PTR _z_sec_max$[ebp]
  0063b	0f 8f 08 05 00
	00		 jg	 $LN3@co_pilot_p

; 2762 : 		{
; 2763 : 			for (x_sec = x_sec_min; x_sec <= x_sec_max; x_sec++)

  00641	8b 45 f0	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  00644	89 45 f8	 mov	 DWORD PTR _x_sec$[ebp], eax
  00647	eb 09		 jmp	 SHORT $LN7@co_pilot_p
$LN5@co_pilot_p:
  00649	8b 45 f8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  0064c	83 c0 01	 add	 eax, 1
  0064f	89 45 f8	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN7@co_pilot_p:
  00652	8b 45 f8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  00655	3b 45 e8	 cmp	 eax, DWORD PTR _x_sec_max$[ebp]
  00658	0f 8f e6 04 00
	00		 jg	 $LN6@co_pilot_p

; 2764 : 			{
; 2765 : 				sector = get_local_raw_sector_entity (x_sec, z_sec);

  0065e	8b 45 f4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00661	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00668	03 45 f8	 add	 eax, DWORD PTR _x_sec$[ebp]
  0066b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00671	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00675	74 1d		 je	 SHORT $LN45@co_pilot_p
  00677	8b 55 f4	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0067a	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00681	03 55 f8	 add	 edx, DWORD PTR _x_sec$[ebp]
  00684	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00689	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0068c	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv337[ebp], ecx
  00692	eb 27		 jmp	 SHORT $LN46@co_pilot_p
$LN45@co_pilot_p:
  00694	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  0069a	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  006a0	52		 push	 edx
  006a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  006ab	50		 push	 eax
  006ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006b1	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv337[ebp], 0
$LN46@co_pilot_p:
  006bb	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv337[ebp]
  006c1	89 4d a0	 mov	 DWORD PTR _sector$[ebp], ecx

; 2766 : 
; 2767 : 				target = get_local_entity_first_child (sector, LIST_TYPE_SECTOR);

  006c4	83 7d a0 00	 cmp	 DWORD PTR _sector$[ebp], 0
  006c8	74 0d		 je	 SHORT $LN47@co_pilot_p
  006ca	8b 45 a0	 mov	 eax, DWORD PTR _sector$[ebp]
  006cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  006cf	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv344[ebp], ecx
  006d5	eb 27		 jmp	 SHORT $LN48@co_pilot_p
$LN47@co_pilot_p:
  006d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  006dd	81 c2 8e 00 00
	00		 add	 edx, 142		; 0000008eH
  006e3	52		 push	 edx
  006e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  006e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006ee	50		 push	 eax
  006ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f4	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv344[ebp], 0
$LN48@co_pilot_p:
  006fe	b9 01 00 00 00	 mov	 ecx, 1
  00703	85 c9		 test	 ecx, ecx
  00705	74 0c		 je	 SHORT $LN49@co_pilot_p
  00707	c7 85 28 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv352[ebp], 33 ; 00000021H
  00711	eb 27		 jmp	 SHORT $LN50@co_pilot_p
$LN49@co_pilot_p:
  00713	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00719	81 c2 8e 00 00
	00		 add	 edx, 142		; 0000008eH
  0071f	52		 push	 edx
  00720	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00725	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0072a	50		 push	 eax
  0072b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00730	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv352[ebp], 0
$LN50@co_pilot_p:
  0073a	6a 21		 push	 33			; 00000021H
  0073c	8b 4d a0	 mov	 ecx, DWORD PTR _sector$[ebp]
  0073f	51		 push	 ecx
  00740	69 95 2c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv344[ebp], 180
  0074a	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv352[ebp]
  00750	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00757	ff d1		 call	 ecx
  00759	89 45 a4	 mov	 DWORD PTR _target$[ebp], eax
$LN8@co_pilot_p:

; 2768 : 
; 2769 : 				while (target)

  0075c	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00760	0f 84 d9 03 00
	00		 je	 $LN9@co_pilot_p

; 2770 : 				{
; 2771 : 					if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) != TARGET_TYPE_INVALID)

  00766	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0076a	74 0d		 je	 SHORT $LN51@co_pilot_p
  0076c	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  0076f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00771	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv364[ebp], ecx
  00777	eb 20		 jmp	 SHORT $LN52@co_pilot_p
$LN51@co_pilot_p:
  00779	68 d3 0a 00 00	 push	 2771			; 00000ad3H
  0077e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00783	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00789	52		 push	 edx
  0078a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0078f	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv364[ebp], 0
$LN52@co_pilot_p:
  00799	b8 01 00 00 00	 mov	 eax, 1
  0079e	85 c0		 test	 eax, eax
  007a0	74 0c		 je	 SHORT $LN53@co_pilot_p
  007a2	c7 85 28 ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv371[ebp], 214 ; 000000d6H
  007ac	eb 20		 jmp	 SHORT $LN54@co_pilot_p
$LN53@co_pilot_p:
  007ae	68 d3 0a 00 00	 push	 2771			; 00000ad3H
  007b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  007b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007be	51		 push	 ecx
  007bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007c4	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv371[ebp], 0
$LN54@co_pilot_p:
  007ce	68 d6 00 00 00	 push	 214			; 000000d6H
  007d3	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  007d6	52		 push	 edx
  007d7	69 85 2c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv364[ebp], 1116
  007e1	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv371[ebp]
  007e7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  007ee	ff d2		 call	 edx
  007f0	85 c0		 test	 eax, eax
  007f2	0f 84 aa 02 00
	00		 je	 $LN25@co_pilot_p

; 2772 : 					{
; 2773 : 						if (!get_local_entity_parent (target, LIST_TYPE_GUNSHIP_TARGET))

  007f8	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  007fc	74 0d		 je	 SHORT $LN55@co_pilot_p
  007fe	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00801	8b 08		 mov	 ecx, DWORD PTR [eax]
  00803	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv383[ebp], ecx
  00809	eb 20		 jmp	 SHORT $LN56@co_pilot_p
$LN55@co_pilot_p:
  0080b	68 d5 0a 00 00	 push	 2773			; 00000ad5H
  00810	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00815	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0081b	52		 push	 edx
  0081c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00821	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv383[ebp], 0
$LN56@co_pilot_p:
  0082b	b8 01 00 00 00	 mov	 eax, 1
  00830	85 c0		 test	 eax, eax
  00832	74 0c		 je	 SHORT $LN57@co_pilot_p
  00834	c7 85 28 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv390[ebp], 18 ; 00000012H
  0083e	eb 20		 jmp	 SHORT $LN58@co_pilot_p
$LN57@co_pilot_p:
  00840	68 d5 0a 00 00	 push	 2773			; 00000ad5H
  00845	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0084a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00850	51		 push	 ecx
  00851	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00856	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv390[ebp], 0
$LN58@co_pilot_p:
  00860	6a 12		 push	 18			; 00000012H
  00862	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00865	52		 push	 edx
  00866	69 85 2c ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv383[ebp], 180
  00870	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv390[ebp]
  00876	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0087d	ff d2		 call	 edx
  0087f	85 c0		 test	 eax, eax
  00881	0f 85 1b 02 00
	00		 jne	 $LN25@co_pilot_p

; 2774 : 						{
; 2775 : 							////////////////////////////////////////
; 2776 : 							//
; 2777 : 							// target not on target list
; 2778 : 							//
; 2779 : 							////////////////////////////////////////
; 2780 : 
; 2781 : 							if (source_side != get_local_entity_int_value (target, INT_TYPE_SIDE))

  00887	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0088b	74 0d		 je	 SHORT $LN59@co_pilot_p
  0088d	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00890	8b 08		 mov	 ecx, DWORD PTR [eax]
  00892	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv402[ebp], ecx
  00898	eb 20		 jmp	 SHORT $LN60@co_pilot_p
$LN59@co_pilot_p:
  0089a	68 dd 0a 00 00	 push	 2781			; 00000addH
  0089f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  008a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008aa	52		 push	 edx
  008ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008b0	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv402[ebp], 0
$LN60@co_pilot_p:
  008ba	b8 01 00 00 00	 mov	 eax, 1
  008bf	85 c0		 test	 eax, eax
  008c1	74 0c		 je	 SHORT $LN61@co_pilot_p
  008c3	c7 85 28 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv409[ebp], 187 ; 000000bbH
  008cd	eb 20		 jmp	 SHORT $LN62@co_pilot_p
$LN61@co_pilot_p:
  008cf	68 dd 0a 00 00	 push	 2781			; 00000addH
  008d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  008d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008df	51		 push	 ecx
  008e0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e5	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN62@co_pilot_p:
  008ef	68 bb 00 00 00	 push	 187			; 000000bbH
  008f4	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  008f7	52		 push	 edx
  008f8	69 85 2c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv402[ebp], 1116
  00902	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv409[ebp]
  00908	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0090f	ff d2		 call	 edx
  00911	39 85 7c ff ff
	ff		 cmp	 DWORD PTR _source_side$4[ebp], eax
  00917	0f 84 85 01 00
	00		 je	 $LN25@co_pilot_p

; 2782 : 							{
; 2783 : 								float sqr_target_range;
; 2784 : 
; 2785 : 								target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  0091d	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00921	74 0d		 je	 SHORT $LN63@co_pilot_p
  00923	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00926	8b 08		 mov	 ecx, DWORD PTR [eax]
  00928	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv422[ebp], ecx
  0092e	eb 27		 jmp	 SHORT $LN64@co_pilot_p
$LN63@co_pilot_p:
  00930	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00936	81 c2 a0 00 00
	00		 add	 edx, 160		; 000000a0H
  0093c	52		 push	 edx
  0093d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00942	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00947	50		 push	 eax
  00948	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0094d	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv422[ebp], 0
$LN64@co_pilot_p:
  00957	b9 01 00 00 00	 mov	 ecx, 1
  0095c	85 c9		 test	 ecx, ecx
  0095e	74 0c		 je	 SHORT $LN65@co_pilot_p
  00960	c7 85 28 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv430[ebp], 8
  0096a	eb 27		 jmp	 SHORT $LN66@co_pilot_p
$LN65@co_pilot_p:
  0096c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00972	81 c2 a0 00 00
	00		 add	 edx, 160		; 000000a0H
  00978	52		 push	 edx
  00979	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0097e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00983	50		 push	 eax
  00984	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00989	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv430[ebp], 0
$LN66@co_pilot_p:
  00993	6a 08		 push	 8
  00995	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00998	51		 push	 ecx
  00999	6b 95 2c ff ff
	ff 60		 imul	 edx, DWORD PTR tv422[ebp], 96
  009a0	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv430[ebp]
  009a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  009ad	ff d1		 call	 ecx
  009af	89 45 98	 mov	 DWORD PTR _target_position$[ebp], eax

; 2786 : 								sqr_target_range = get_sqr_3d_range (source_position, target_position);

  009b2	8b 45 98	 mov	 eax, DWORD PTR _target_position$[ebp]
  009b5	50		 push	 eax
  009b6	8b 4d 9c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  009b9	51		 push	 ecx
  009ba	e8 00 00 00 00	 call	 ?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_3d_range
  009bf	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR _sqr_target_range$3[ebp]

; 2787 : 
; 2788 : 								if (sqr_target_range <= sqr_scan_range)

  009c5	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _sqr_scan_range$[ebp]
  009ca	0f 2f 85 78 ff
	ff ff		 comiss	 xmm0, DWORD PTR _sqr_target_range$3[ebp]
  009d1	0f 82 cb 00 00
	00		 jb	 $LN25@co_pilot_p

; 2789 : 								{
; 2790 : 									dx = target_position->x - source_position->x;

  009d7	8b 45 98	 mov	 eax, DWORD PTR _target_position$[ebp]
  009da	8b 4d 9c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  009dd	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  009e1	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  009e5	f3 0f 11 45 c4	 movss	 DWORD PTR _dx$[ebp], xmm0

; 2791 : 									dz = target_position->z - source_position->z;

  009ea	8b 45 98	 mov	 eax, DWORD PTR _target_position$[ebp]
  009ed	8b 4d 9c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  009f0	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  009f5	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  009fa	f3 0f 11 45 c0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 2792 : 
; 2793 : 									bearing = atan2 (dx, dz);

  009ff	51		 push	 ecx
  00a00	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00a05	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a0a	51		 push	 ecx
  00a0b	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00a10	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a15	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00a1a	d9 5d c8	 fstp	 DWORD PTR _bearing$[ebp]

; 2794 : 
; 2795 : 									if (check_bearing_within_cw_sweep_segment (bearing, cw_sweep_start_direction, cw_sweep_end_direction))

  00a1d	51		 push	 ecx
  00a1e	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00a23	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a28	51		 push	 ecx
  00a29	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00a2e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a33	51		 push	 ecx
  00a34	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  00a39	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a3e	e8 00 00 00 00	 call	 ?check_bearing_within_cw_sweep_segment@@YGHMMM@Z ; check_bearing_within_cw_sweep_segment
  00a43	85 c0		 test	 eax, eax
  00a45	74 5b		 je	 SHORT $LN25@co_pilot_p

; 2796 : 									{
; 2797 : 										float rank = evaluate_target(target, sqr_target_range);

  00a47	51		 push	 ecx
  00a48	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _sqr_target_range$3[ebp]
  00a50	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a55	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00a58	50		 push	 eax
  00a59	e8 00 00 00 00	 call	 ?evaluate_target@@YGMPAUENTITY@@M@Z ; evaluate_target
  00a5e	d9 9d 74 ff ff
	ff		 fstp	 DWORD PTR _rank$2[ebp]

; 2798 : 
; 2799 : 										if (rank > best_target_rank && get_los_clear (target, source_position, target_position))

  00a64	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _rank$2[ebp]
  00a6c	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?best_target_rank@?1??co_pilot_perform_eo_scan@@YGXXZ@4MA
  00a73	76 2d		 jbe	 SHORT $LN25@co_pilot_p
  00a75	8b 45 98	 mov	 eax, DWORD PTR _target_position$[ebp]
  00a78	50		 push	 eax
  00a79	8b 4d 9c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00a7c	51		 push	 ecx
  00a7d	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00a80	52		 push	 edx
  00a81	e8 00 00 00 00	 call	 ?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ; get_los_clear
  00a86	85 c0		 test	 eax, eax
  00a88	74 18		 je	 SHORT $LN25@co_pilot_p

; 2800 : 										{
; 2801 : 											best_target_rank = rank;

  00a8a	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _rank$2[ebp]
  00a92	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?best_target_rank@?1??co_pilot_perform_eo_scan@@YGXXZ@4MA, xmm0

; 2802 : 											best_target = target;

  00a9a	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00a9d	a3 00 00 00 00	 mov	 DWORD PTR ?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A, eax
$LN25@co_pilot_p:

; 2803 : 										}
; 2804 : 									}
; 2805 : 								}
; 2806 : 							}
; 2807 : 						}
; 2808 : 					}
; 2809 : 
; 2810 : 					target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR);

  00aa2	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00aa6	74 0d		 je	 SHORT $LN67@co_pilot_p
  00aa8	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00aab	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aad	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv469[ebp], ecx
  00ab3	eb 27		 jmp	 SHORT $LN68@co_pilot_p
$LN67@co_pilot_p:
  00ab5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00abb	81 c2 b9 00 00
	00		 add	 edx, 185		; 000000b9H
  00ac1	52		 push	 edx
  00ac2	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ac7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00acc	50		 push	 eax
  00acd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ad2	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv469[ebp], 0
$LN68@co_pilot_p:
  00adc	b9 01 00 00 00	 mov	 ecx, 1
  00ae1	85 c9		 test	 ecx, ecx
  00ae3	74 0c		 je	 SHORT $LN69@co_pilot_p
  00ae5	c7 85 28 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv477[ebp], 33 ; 00000021H
  00aef	eb 27		 jmp	 SHORT $LN70@co_pilot_p
$LN69@co_pilot_p:
  00af1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00af7	81 c2 b9 00 00
	00		 add	 edx, 185		; 000000b9H
  00afd	52		 push	 edx
  00afe	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b03	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b08	50		 push	 eax
  00b09	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b0e	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv477[ebp], 0
$LN70@co_pilot_p:
  00b18	6a 21		 push	 33			; 00000021H
  00b1a	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00b1d	51		 push	 ecx
  00b1e	69 95 2c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv469[ebp], 180
  00b28	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv477[ebp]
  00b2e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b35	ff d1		 call	 ecx
  00b37	89 45 a4	 mov	 DWORD PTR _target$[ebp], eax

; 2811 : 				}

  00b3a	e9 1d fc ff ff	 jmp	 $LN8@co_pilot_p
$LN9@co_pilot_p:

; 2812 : 			}

  00b3f	e9 05 fb ff ff	 jmp	 $LN5@co_pilot_p
$LN6@co_pilot_p:

; 2813 : 		}

  00b44	e9 e3 fa ff ff	 jmp	 $LN2@co_pilot_p
$LN3@co_pilot_p:

; 2814 : 
; 2815 : 		////////////////////////////////////////
; 2816 : 		//
; 2817 : 		// update target
; 2818 : 		//
; 2819 : 		////////////////////////////////////////
; 2820 : 
; 2821 : 		if (sweep_done)

  00b49	83 7d fc 00	 cmp	 DWORD PTR _sweep_done$[ebp], 0
  00b4d	0f 84 33 01 00
	00		 je	 $LN26@co_pilot_p

; 2822 : 		{
; 2823 : 			next_cpg_target_report = best_target;

  00b53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A
  00b58	a3 00 00 00 00	 mov	 DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A, eax ; next_cpg_target_report

; 2824 : 
; 2825 : 			if (best_target)  // if we found a target, wait the proper detection time before reporting it

  00b5d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A, 0
  00b64	0f 84 07 01 00
	00		 je	 $LN27@co_pilot_p

; 2826 : 			{
; 2827 : 				float range;
; 2828 : 
; 2829 : 				target_position = get_local_entity_vec3d_ptr (best_target, VEC3D_TYPE_POSITION);

  00b6a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A, 0
  00b71	74 0f		 je	 SHORT $LN71@co_pilot_p
  00b73	a1 00 00 00 00	 mov	 eax, DWORD PTR ?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A
  00b78	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b7a	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv491[ebp], ecx
  00b80	eb 27		 jmp	 SHORT $LN72@co_pilot_p
$LN71@co_pilot_p:
  00b82	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00b88	81 c2 cc 00 00
	00		 add	 edx, 204		; 000000ccH
  00b8e	52		 push	 edx
  00b8f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b94	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b99	50		 push	 eax
  00b9a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b9f	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv491[ebp], 0
$LN72@co_pilot_p:
  00ba9	b9 01 00 00 00	 mov	 ecx, 1
  00bae	85 c9		 test	 ecx, ecx
  00bb0	74 0c		 je	 SHORT $LN73@co_pilot_p
  00bb2	c7 85 28 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv499[ebp], 8
  00bbc	eb 27		 jmp	 SHORT $LN74@co_pilot_p
$LN73@co_pilot_p:
  00bbe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??co_pilot_perform_eo_scan@@YGXXZ@4JA
  00bc4	81 c2 cc 00 00
	00		 add	 edx, 204		; 000000ccH
  00bca	52		 push	 edx
  00bcb	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bd0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00bd5	50		 push	 eax
  00bd6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bdb	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv499[ebp], 0
$LN74@co_pilot_p:
  00be5	6a 08		 push	 8
  00be7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A
  00bed	51		 push	 ecx
  00bee	6b 95 2c ff ff
	ff 60		 imul	 edx, DWORD PTR tv491[ebp], 96
  00bf5	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv499[ebp]
  00bfb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00c02	ff d1		 call	 ecx
  00c04	89 45 98	 mov	 DWORD PTR _target_position$[ebp], eax

; 2830 : 				range = get_2d_range(source_position, target_position);

  00c07	8b 45 98	 mov	 eax, DWORD PTR _target_position$[ebp]
  00c0a	50		 push	 eax
  00c0b	8b 4d 9c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00c0e	51		 push	 ecx
  00c0f	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  00c14	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR _range$1[ebp]

; 2831 : 
; 2832 : 				time_until_next_co_pilot_sweep = 5.0 + frand1() * 0.005 * range;

  00c1a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00c24	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00c29	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00c2e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00c34	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00c37	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00c3d	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00c41	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00c49	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f747ae147ae147b
  00c51	f3 0f 5a 8d 70
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _range$1[ebp]
  00c59	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00c5d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4014000000000000
  00c65	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c69	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?time_until_next_co_pilot_sweep@@3MA, xmm0
$LN27@co_pilot_p:

; 2833 : 			}
; 2834 : 
; 2835 : 			best_target = NULL;

  00c71	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?best_target@?1??co_pilot_perform_eo_scan@@YGXXZ@4PAUENTITY@@A, 0

; 2836 : 			best_target_rank = 0.0;

  00c7b	0f 57 c0	 xorps	 xmm0, xmm0
  00c7e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?best_target_rank@?1??co_pilot_perform_eo_scan@@YGXXZ@4MA, xmm0
$LN26@co_pilot_p:

; 2837 : 		}
; 2838 : 	}
; 2839 : }

  00c86	5f		 pop	 edi
  00c87	5e		 pop	 esi
  00c88	5b		 pop	 ebx
  00c89	8b e5		 mov	 esp, ebp
  00c8b	5d		 pop	 ebp
  00c8c	c3		 ret	 0
?co_pilot_perform_eo_scan@@YGXXZ ENDP			; co_pilot_perform_eo_scan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?evaluate_target@@YGMPAUENTITY@@M@Z
_TEXT	SEGMENT
tv296 = -88						; size = 8
tv153 = -84						; size = 4
tv218 = -80						; size = 4
tv193 = -80						; size = 4
tv174 = -80						; size = 4
tv147 = -80						; size = 4
tv129 = -80						; size = 4
tv76 = -80						; size = 4
tv210 = -76						; size = 4
tv186 = -76						; size = 4
tv167 = -76						; size = 4
tv155 = -76						; size = 4
tv140 = -76						; size = 4
tv89 = -76						; size = 4
tv69 = -76						; size = 4
_sub_type$1 = -8					; size = 4
_rank$2 = -4						; size = 4
_target$ = 8						; size = 4
_sqr_range$ = 12					; size = 4
?evaluate_target@@YGMPAUENTITY@@M@Z PROC		; evaluate_target, COMDAT

; 2559 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2560 : 	if (get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN16@evaluate_t
  0000f	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b4	 mov	 DWORD PTR tv69[ebp], ecx
  00017	eb 1d		 jmp	 SHORT $LN17@evaluate_t
$LN16@evaluate_t:
  00019	68 00 0a 00 00	 push	 2560			; 00000a00H
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0002f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN17@evaluate_t:
  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	85 c0		 test	 eax, eax
  0003d	74 09		 je	 SHORT $LN18@evaluate_t
  0003f	c7 45 b0 07 00
	00 00		 mov	 DWORD PTR tv76[ebp], 7
  00046	eb 1d		 jmp	 SHORT $LN19@evaluate_t
$LN18@evaluate_t:
  00048	68 00 0a 00 00	 push	 2560			; 00000a00H
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN19@evaluate_t:
  00065	6a 07		 push	 7
  00067	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  0006a	52		 push	 edx
  0006b	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  00072	8b 4d b0	 mov	 ecx, DWORD PTR tv76[ebp]
  00075	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0007c	ff d2		 call	 edx
  0007e	85 c0		 test	 eax, eax
  00080	0f 84 7e 03 00
	00		 je	 $LN6@evaluate_t

; 2561 : 	{
; 2562 : 		float
; 2563 : 			rank = 0.0;

  00086	0f 57 c0	 xorps	 xmm0, xmm0
  00089	f3 0f 11 45 fc	 movss	 DWORD PTR _rank$2[ebp], xmm0

; 2564 : 
; 2565 : 		entity_sub_types sub_type = get_local_entity_int_value (target, INT_TYPE_ENTITY_SUB_TYPE);

  0008e	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00092	74 0a		 je	 SHORT $LN20@evaluate_t
  00094	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00097	8b 08		 mov	 ecx, DWORD PTR [eax]
  00099	89 4d b4	 mov	 DWORD PTR tv89[ebp], ecx
  0009c	eb 21		 jmp	 SHORT $LN21@evaluate_t
$LN20@evaluate_t:
  0009e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??evaluate_target@@YGMPAUENTITY@@M@Z@4JA
  000a4	83 c2 06	 add	 edx, 6
  000a7	52		 push	 edx
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b8	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN21@evaluate_t:
  000bf	b9 01 00 00 00	 mov	 ecx, 1
  000c4	85 c9		 test	 ecx, ecx
  000c6	74 09		 je	 SHORT $LN22@evaluate_t
  000c8	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv129[ebp], 52 ; 00000034H
  000cf	eb 21		 jmp	 SHORT $LN23@evaluate_t
$LN22@evaluate_t:
  000d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??evaluate_target@@YGMPAUENTITY@@M@Z@4JA
  000d7	83 c2 06	 add	 edx, 6
  000da	52		 push	 edx
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000eb	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN23@evaluate_t:
  000f2	6a 34		 push	 52			; 00000034H
  000f4	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  000f7	51		 push	 ecx
  000f8	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv89[ebp], 1116
  000ff	8b 45 b0	 mov	 eax, DWORD PTR tv129[ebp]
  00102	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00109	ff d1		 call	 ecx
  0010b	89 45 f8	 mov	 DWORD PTR _sub_type$1[ebp], eax

; 2566 : 
; 2567 : 		switch (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE))

  0010e	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00112	74 0a		 je	 SHORT $LN24@evaluate_t
  00114	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	89 4d b4	 mov	 DWORD PTR tv140[ebp], ecx
  0011c	eb 1d		 jmp	 SHORT $LN25@evaluate_t
$LN24@evaluate_t:
  0011e	68 07 0a 00 00	 push	 2567			; 00000a07H
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00128	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012e	52		 push	 edx
  0012f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00134	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN25@evaluate_t:
  0013b	b8 01 00 00 00	 mov	 eax, 1
  00140	85 c0		 test	 eax, eax
  00142	74 09		 je	 SHORT $LN26@evaluate_t
  00144	c7 45 b0 d6 00
	00 00		 mov	 DWORD PTR tv147[ebp], 214 ; 000000d6H
  0014b	eb 1d		 jmp	 SHORT $LN27@evaluate_t
$LN26@evaluate_t:
  0014d	68 07 0a 00 00	 push	 2567			; 00000a07H
  00152	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00157	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0015d	51		 push	 ecx
  0015e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00163	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN27@evaluate_t:
  0016a	68 d6 00 00 00	 push	 214			; 000000d6H
  0016f	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00172	52		 push	 edx
  00173	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv140[ebp], 1116
  0017a	8b 4d b0	 mov	 ecx, DWORD PTR tv147[ebp]
  0017d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00184	ff d2		 call	 edx
  00186	89 45 ac	 mov	 DWORD PTR tv153[ebp], eax
  00189	83 7d ac 00	 cmp	 DWORD PTR tv153[ebp], 0
  0018d	74 11		 je	 SHORT $LN7@evaluate_t
  0018f	83 7d ac 01	 cmp	 DWORD PTR tv153[ebp], 1
  00193	74 12		 je	 SHORT $LN8@evaluate_t
  00195	83 7d ac 02	 cmp	 DWORD PTR tv153[ebp], 2
  00199	74 4a		 je	 SHORT $LN11@evaluate_t
  0019b	e9 6b 01 00 00	 jmp	 $LN14@evaluate_t
$LN7@evaluate_t:

; 2568 : 		{
; 2569 : 			case TARGET_TYPE_INVALID:
; 2570 : 				return 0.0;

  001a0	d9 ee		 fldz
  001a2	e9 5f 02 00 00	 jmp	 $LN1@evaluate_t
$LN8@evaluate_t:

; 2571 : 
; 2572 : 			case TARGET_TYPE_GROUND:
; 2573 : 			{
; 2574 : 				switch (target->type)

  001a7	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  001aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ac	89 4d b4	 mov	 DWORD PTR tv155[ebp], ecx
  001af	83 7d b4 01	 cmp	 DWORD PTR tv155[ebp], 1
  001b3	74 0e		 je	 SHORT $LN9@evaluate_t
  001b5	83 7d b4 17	 cmp	 DWORD PTR tv155[ebp], 23 ; 00000017H
  001b9	74 08		 je	 SHORT $LN9@evaluate_t
  001bb	83 7d b4 1c	 cmp	 DWORD PTR tv155[ebp], 28 ; 0000001cH
  001bf	74 02		 je	 SHORT $LN9@evaluate_t
  001c1	eb 16		 jmp	 SHORT $LN10@evaluate_t
$LN9@evaluate_t:

; 2575 : 				{
; 2576 : 				case ENTITY_TYPE_ANTI_AIRCRAFT:
; 2577 : 				case ENTITY_TYPE_ROUTED_VEHICLE:
; 2578 : 				case ENTITY_TYPE_SHIP_VEHICLE:
; 2579 : 					rank = vehicle_database[sub_type].potential_surface_to_air_threat;

  001c3	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _sub_type$1[ebp], 188
  001ca	f3 0f 10 80 8c
	00 00 00	 movss	 xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+140]
  001d2	f3 0f 11 45 fc	 movss	 DWORD PTR _rank$2[ebp], xmm0

; 2580 : 					break;

  001d7	eb 07		 jmp	 SHORT $LN4@evaluate_t
$LN10@evaluate_t:

; 2581 : 				default:
; 2582 : 					return 0.0;

  001d9	d9 ee		 fldz
  001db	e9 26 02 00 00	 jmp	 $LN1@evaluate_t
$LN4@evaluate_t:

; 2583 : 				}
; 2584 : 
; 2585 : 				break;

  001e0	e9 b8 01 00 00	 jmp	 $LN2@evaluate_t
$LN11@evaluate_t:

; 2586 : 			}
; 2587 : 			case TARGET_TYPE_AIR:
; 2588 : 			////////////////////////////////////////
; 2589 : 			{
; 2590 : 				if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT) && get_local_entity_float_value (target, FLOAT_TYPE_RADAR_ALTITUDE) > 5.0)

  001e5	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  001e9	74 0a		 je	 SHORT $LN28@evaluate_t
  001eb	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  001ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f0	89 4d b4	 mov	 DWORD PTR tv167[ebp], ecx
  001f3	eb 1d		 jmp	 SHORT $LN29@evaluate_t
$LN28@evaluate_t:
  001f5	68 1e 0a 00 00	 push	 2590			; 00000a1eH
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN29@evaluate_t:
  00212	b8 01 00 00 00	 mov	 eax, 1
  00217	85 c0		 test	 eax, eax
  00219	74 09		 je	 SHORT $LN30@evaluate_t
  0021b	c7 45 b0 04 00
	00 00		 mov	 DWORD PTR tv174[ebp], 4
  00222	eb 1d		 jmp	 SHORT $LN31@evaluate_t
$LN30@evaluate_t:
  00224	68 1e 0a 00 00	 push	 2590			; 00000a1eH
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00234	51		 push	 ecx
  00235	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN31@evaluate_t:
  00241	6a 04		 push	 4
  00243	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00246	52		 push	 edx
  00247	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv167[ebp], 1116
  0024e	8b 4d b0	 mov	 ecx, DWORD PTR tv174[ebp]
  00251	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00258	ff d2		 call	 edx
  0025a	85 c0		 test	 eax, eax
  0025c	0f 84 9d 00 00
	00		 je	 $LN12@evaluate_t
  00262	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00266	74 0a		 je	 SHORT $LN32@evaluate_t
  00268	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0026b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026d	89 4d b4	 mov	 DWORD PTR tv186[ebp], ecx
  00270	eb 1d		 jmp	 SHORT $LN33@evaluate_t
$LN32@evaluate_t:
  00272	68 1e 0a 00 00	 push	 2590			; 00000a1eH
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00282	52		 push	 edx
  00283	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00288	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
$LN33@evaluate_t:
  0028f	b8 01 00 00 00	 mov	 eax, 1
  00294	85 c0		 test	 eax, eax
  00296	74 09		 je	 SHORT $LN34@evaluate_t
  00298	c7 45 b0 68 00
	00 00		 mov	 DWORD PTR tv193[ebp], 104 ; 00000068H
  0029f	eb 1d		 jmp	 SHORT $LN35@evaluate_t
$LN34@evaluate_t:
  002a1	68 1e 0a 00 00	 push	 2590			; 00000a1eH
  002a6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002b1	51		 push	 ecx
  002b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b7	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN35@evaluate_t:
  002be	6a 68		 push	 104			; 00000068H
  002c0	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  002c3	52		 push	 edx
  002c4	69 45 b4 bc 02
	00 00		 imul	 eax, DWORD PTR tv186[ebp], 700
  002cb	8b 4d b0	 mov	 ecx, DWORD PTR tv193[ebp]
  002ce	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  002d5	ff d2		 call	 edx
  002d7	dd 5d a8	 fstp	 QWORD PTR tv296[ebp]
  002da	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv296[ebp]
  002df	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4014000000000000
  002e7	76 16		 jbe	 SHORT $LN12@evaluate_t

; 2591 : 					rank = aircraft_database[sub_type].potential_air_to_air_threat;

  002e9	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _sub_type$1[ebp], 244
  002f0	f3 0f 10 80 c4
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+196]
  002f8	f3 0f 11 45 fc	 movss	 DWORD PTR _rank$2[ebp], xmm0

; 2592 : 				else

  002fd	eb 07		 jmp	 SHORT $LN13@evaluate_t
$LN12@evaluate_t:

; 2593 : 					return 0.0;

  002ff	d9 ee		 fldz
  00301	e9 00 01 00 00	 jmp	 $LN1@evaluate_t
$LN13@evaluate_t:

; 2594 : 
; 2595 : 				break;

  00306	e9 92 00 00 00	 jmp	 $LN2@evaluate_t
$LN14@evaluate_t:

; 2596 : 			}
; 2597 : 			////////////////////////////////////////
; 2598 : 			default:
; 2599 : 			////////////////////////////////////////
; 2600 : 			{
; 2601 : 				debug_fatal ("Invalid target type = %d", get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE));

  0030b	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0030f	74 0a		 je	 SHORT $LN36@evaluate_t
  00311	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00314	8b 08		 mov	 ecx, DWORD PTR [eax]
  00316	89 4d b4	 mov	 DWORD PTR tv210[ebp], ecx
  00319	eb 21		 jmp	 SHORT $LN37@evaluate_t
$LN36@evaluate_t:
  0031b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??evaluate_target@@YGMPAUENTITY@@M@Z@4JA
  00321	83 c2 2a	 add	 edx, 42			; 0000002aH
  00324	52		 push	 edx
  00325	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0032a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0032f	50		 push	 eax
  00330	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00335	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN37@evaluate_t:
  0033c	b9 01 00 00 00	 mov	 ecx, 1
  00341	85 c9		 test	 ecx, ecx
  00343	74 09		 je	 SHORT $LN38@evaluate_t
  00345	c7 45 b0 d6 00
	00 00		 mov	 DWORD PTR tv218[ebp], 214 ; 000000d6H
  0034c	eb 21		 jmp	 SHORT $LN39@evaluate_t
$LN38@evaluate_t:
  0034e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??evaluate_target@@YGMPAUENTITY@@M@Z@4JA
  00354	83 c2 2a	 add	 edx, 42			; 0000002aH
  00357	52		 push	 edx
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0035d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00362	50		 push	 eax
  00363	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00368	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv218[ebp], 0
$LN39@evaluate_t:
  0036f	68 d6 00 00 00	 push	 214			; 000000d6H
  00374	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00377	51		 push	 ecx
  00378	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv210[ebp], 1116
  0037f	8b 45 b0	 mov	 eax, DWORD PTR tv218[ebp]
  00382	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00389	ff d1		 call	 ecx
  0038b	50		 push	 eax
  0038c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@
  00391	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00396	83 c4 08	 add	 esp, 8

; 2602 : 
; 2603 : 				return 0.0;

  00399	d9 ee		 fldz
  0039b	eb 69		 jmp	 SHORT $LN1@evaluate_t
$LN2@evaluate_t:

; 2604 : 
; 2605 : 				break;
; 2606 : 			}
; 2607 : 		}
; 2608 : 
; 2609 : 		rank *= (5000 * 5000);

  0039d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _rank$2[ebp]
  003a2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4bbebc20
  003aa	f3 0f 11 45 fc	 movss	 DWORD PTR _rank$2[ebp], xmm0

; 2610 : 		rank /= sqr_range;

  003af	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _rank$2[ebp]
  003b4	f3 0f 5e 45 0c	 divss	 xmm0, DWORD PTR _sqr_range$[ebp]
  003b9	f3 0f 11 45 fc	 movss	 DWORD PTR _rank$2[ebp], xmm0

; 2611 : 
; 2612 : 		rank *= frand1();

  003be	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  003c8	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  003cd	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  003d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  003d8	c1 f9 10	 sar	 ecx, 16			; 00000010H
  003db	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  003e1	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  003e5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  003ed	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _rank$2[ebp]
  003f2	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  003f6	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  003fa	f3 0f 11 45 fc	 movss	 DWORD PTR _rank$2[ebp], xmm0

; 2613 : 
; 2614 : 		return rank;

  003ff	d9 45 fc	 fld	 DWORD PTR _rank$2[ebp]
  00402	eb 02		 jmp	 SHORT $LN1@evaluate_t
$LN6@evaluate_t:

; 2615 : 	}
; 2616 : 
; 2617 : 	return 0.0;

  00404	d9 ee		 fldz
$LN1@evaluate_t:

; 2618 : }

  00406	5f		 pop	 edi
  00407	5e		 pop	 esi
  00408	5b		 pop	 ebx
  00409	8b e5		 mov	 esp, ebp
  0040b	5d		 pop	 ebp
  0040c	c2 08 00	 ret	 8
?evaluate_target@@YGMPAUENTITY@@M@Z ENDP		; evaluate_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?switch_to_point_lock@@YGXXZ
_TEXT	SEGMENT
tv170 = -76						; size = 4
tv150 = -76						; size = 4
tv129 = -76						; size = 4
tv78 = -76						; size = 4
tv225 = -72						; size = 4
tv162 = -72						; size = 4
tv142 = -72						; size = 4
tv90 = -72						; size = 4
tv70 = -72						; size = 4
_target$ = -4						; size = 4
?switch_to_point_lock@@YGXXZ PROC			; switch_to_point_lock, COMDAT

; 2049 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2050 : 	// get pointer to tracking point so we can set it
; 2051 : 	entity* target = get_local_entity_parent(get_gunship_entity(), LIST_TYPE_TARGET);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	74 0c		 je	 SHORT $LN7@switch_to_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  0001c	eb 21		 jmp	 SHORT $LN8@switch_to_
$LN7@switch_to_:
  0001e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA
  00024	83 c2 02	 add	 edx, 2
  00027	52		 push	 edx
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00038	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN8@switch_to_:
  0003f	b9 01 00 00 00	 mov	 ecx, 1
  00044	85 c9		 test	 ecx, ecx
  00046	74 09		 je	 SHORT $LN9@switch_to_
  00048	c7 45 b4 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  0004f	eb 21		 jmp	 SHORT $LN10@switch_to_
$LN9@switch_to_:
  00051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA
  00057	83 c2 02	 add	 edx, 2
  0005a	52		 push	 edx
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN10@switch_to_:
  00072	6a 26		 push	 38			; 00000026H
  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0007a	51		 push	 ecx
  0007b	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00082	8b 45 b4	 mov	 eax, DWORD PTR tv78[ebp]
  00085	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0008c	ff d1		 call	 ecx
  0008e	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 2052 : 
; 2053 : 	lock_target = FALSE;

  00091	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lock_target@@3HA, 0

; 2054 : 
; 2055 : 	if (target && !get_local_entity_int_value(target, INT_TYPE_AIRBORNE_AIRCRAFT))

  0009b	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  0009f	0f 84 a5 01 00
	00		 je	 $LN2@switch_to_
  000a5	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  000a9	74 0a		 je	 SHORT $LN11@switch_to_
  000ab	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	89 4d b8	 mov	 DWORD PTR tv90[ebp], ecx
  000b3	eb 1d		 jmp	 SHORT $LN12@switch_to_
$LN11@switch_to_:
  000b5	68 07 08 00 00	 push	 2055			; 00000807H
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cb	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN12@switch_to_:
  000d2	b8 01 00 00 00	 mov	 eax, 1
  000d7	85 c0		 test	 eax, eax
  000d9	74 09		 je	 SHORT $LN13@switch_to_
  000db	c7 45 b4 04 00
	00 00		 mov	 DWORD PTR tv129[ebp], 4
  000e2	eb 1d		 jmp	 SHORT $LN14@switch_to_
$LN13@switch_to_:
  000e4	68 07 08 00 00	 push	 2055			; 00000807H
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f4	51		 push	 ecx
  000f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fa	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN14@switch_to_:
  00101	6a 04		 push	 4
  00103	8b 55 fc	 mov	 edx, DWORD PTR _target$[ebp]
  00106	52		 push	 edx
  00107	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 1116
  0010e	8b 4d b4	 mov	 ecx, DWORD PTR tv129[ebp]
  00111	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00118	ff d2		 call	 edx
  0011a	85 c0		 test	 eax, eax
  0011c	0f 85 28 01 00
	00		 jne	 $LN2@switch_to_

; 2056 : 	{
; 2057 : 		// get position of target
; 2058 : 		get_local_entity_vec3d(target, VEC3D_TYPE_POSITION, &eo_tracking_point);

  00122	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00126	74 0a		 je	 SHORT $LN15@switch_to_
  00128	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0012b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012d	89 4d b8	 mov	 DWORD PTR tv142[ebp], ecx
  00130	eb 21		 jmp	 SHORT $LN16@switch_to_
$LN15@switch_to_:
  00132	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA
  00138	83 c2 09	 add	 edx, 9
  0013b	52		 push	 edx
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00141	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN16@switch_to_:
  00153	b9 01 00 00 00	 mov	 ecx, 1
  00158	85 c9		 test	 ecx, ecx
  0015a	74 09		 je	 SHORT $LN17@switch_to_
  0015c	c7 45 b4 08 00
	00 00		 mov	 DWORD PTR tv150[ebp], 8
  00163	eb 21		 jmp	 SHORT $LN18@switch_to_
$LN17@switch_to_:
  00165	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA
  0016b	83 c2 09	 add	 edx, 9
  0016e	52		 push	 edx
  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00174	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN18@switch_to_:
  00186	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  0018b	6a 08		 push	 8
  0018d	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  00190	51		 push	 ecx
  00191	6b 55 b8 60	 imul	 edx, DWORD PTR tv142[ebp], 96
  00195	8b 45 b4	 mov	 eax, DWORD PTR tv150[ebp]
  00198	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*4]
  0019f	ff d1		 call	 ecx

; 2059 : 		set_client_server_entity_vec3d(get_gunship_entity(), VEC3D_TYPE_EO_TRACKING_POINT, &eo_tracking_point);

  001a1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  001a8	74 0c		 je	 SHORT $LN19@switch_to_
  001aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001af	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b1	89 4d b8	 mov	 DWORD PTR tv162[ebp], ecx
  001b4	eb 21		 jmp	 SHORT $LN20@switch_to_
$LN19@switch_to_:
  001b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA
  001bc	83 c2 0a	 add	 edx, 10			; 0000000aH
  001bf	52		 push	 edx
  001c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ca	50		 push	 eax
  001cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN20@switch_to_:
  001d7	b9 01 00 00 00	 mov	 ecx, 1
  001dc	85 c9		 test	 ecx, ecx
  001de	74 09		 je	 SHORT $LN21@switch_to_
  001e0	c7 45 b4 03 00
	00 00		 mov	 DWORD PTR tv170[ebp], 3
  001e7	eb 21		 jmp	 SHORT $LN22@switch_to_
$LN21@switch_to_:
  001e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_point_lock@@YGXXZ@4JA
  001ef	83 c2 0a	 add	 edx, 10			; 0000000aH
  001f2	52		 push	 edx
  001f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001fd	50		 push	 eax
  001fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00203	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv170[ebp], 0
$LN22@switch_to_:
  0020a	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  0020f	6a 03		 push	 3
  00211	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00217	51		 push	 ecx
  00218	69 55 b8 c0 00
	00 00		 imul	 edx, DWORD PTR tv162[ebp], 192
  0021f	8b 45 b4	 mov	 eax, DWORD PTR tv170[ebp]
  00222	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*8]
  00229	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0022f	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00232	ff d0		 call	 eax

; 2060 : 
; 2061 : 		eo_target_locked = POINT_LOCK;

  00234	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 1 ; eo_target_locked

; 2062 : 		lock_terrain = TRUE;

  0023e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 1
  00248	eb 40		 jmp	 SHORT $LN5@switch_to_
$LN2@switch_to_:

; 2063 : 	}
; 2064 : 	// try locking onto point on ground
; 2065 : 	else if (get_eo_los_intercept_point(&eo_tracking_point) < eo_max_visual_range)

  0024a	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  0024f	e8 00 00 00 00	 call	 ?get_eo_los_intercept_point@@YGMPAUVEC3D@@@Z ; get_eo_los_intercept_point
  00254	d9 5d b8	 fstp	 DWORD PTR tv225[ebp]
  00257	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  0025f	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR tv225[ebp]
  00263	76 16		 jbe	 SHORT $LN4@switch_to_

; 2066 : 	{
; 2067 : 		eo_target_locked = POINT_LOCK;

  00265	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 1 ; eo_target_locked

; 2068 : 		lock_terrain = TRUE;

  0026f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 1

; 2069 : 	}
; 2070 : 	else  // unsuccessful, lose lock

  00279	eb 0f		 jmp	 SHORT $LN5@switch_to_
$LN4@switch_to_:

; 2071 : 	{
; 2072 : 		eo_target_locked = 0;

  0027b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked

; 2073 : 		eo_stop_tracking();

  00285	e8 00 00 00 00	 call	 ?eo_stop_tracking@@YGXXZ ; eo_stop_tracking
$LN5@switch_to_:

; 2074 : 	}
; 2075 : 
; 2076 : }

  0028a	5f		 pop	 edi
  0028b	5e		 pop	 esi
  0028c	5b		 pop	 ebx
  0028d	8b e5		 mov	 esp, ebp
  0028f	5d		 pop	 ebp
  00290	c3		 ret	 0
?switch_to_point_lock@@YGXXZ ENDP			; switch_to_point_lock
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_boresight_target@@YGPAUENTITY@@XZ
_TEXT	SEGMENT
_los_end$ = -52						; size = 12
_los_start$ = -40					; size = 12
_los_unit_vector$ = -28					; size = 12
_second_pass_target$ = -16				; size = 4
_first_pass_target$ = -12				; size = 4
_target$ = -8						; size = 4
_range$ = -4						; size = 4
?get_eo_boresight_target@@YGPAUENTITY@@XZ PROC		; get_eo_boresight_target, COMDAT

; 1099 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1100 : 	float
; 1101 : 		range;
; 1102 : 
; 1103 : 	entity
; 1104 : 		*target,
; 1105 : 		*first_pass_target,
; 1106 : 		*second_pass_target;
; 1107 : 
; 1108 : 	vec3d
; 1109 : 		los_unit_vector,
; 1110 : 		los_start,
; 1111 : 		los_end;
; 1112 : 
; 1113 : 	target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _target$[ebp], 0

; 1114 : 
; 1115 : 	if (!eo_low_light)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light
  00017	0f 85 39 01 00
	00		 jne	 $LN5@get_eo_bor

; 1116 : 	{
; 1117 : 		//
; 1118 : 		// first pass (eo boresight start -> eo boresight end)
; 1119 : 		//
; 1120 : 
; 1121 : 		los_start = eo_vp.position;

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A
  00022	89 45 d8	 mov	 DWORD PTR _los_start$[ebp], eax
  00025	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4
  0002b	89 4d dc	 mov	 DWORD PTR _los_start$[ebp+4], ecx
  0002e	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8
  00034	89 55 e0	 mov	 DWORD PTR _los_start$[ebp+8], edx

; 1122 : 
; 1123 : 		los_end.x = los_start.x + eo_vp.zv.x * eo_max_visual_range;

  00037	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+36
  0003f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  00047	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _los_start$[ebp]
  0004c	f3 0f 11 45 cc	 movss	 DWORD PTR _los_end$[ebp], xmm0

; 1124 : 		los_end.y = los_start.y + eo_vp.zv.y * eo_max_visual_range;

  00051	f3 0f 10 05 28
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+40
  00059	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  00061	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _los_start$[ebp+4]
  00066	f3 0f 11 45 d0	 movss	 DWORD PTR _los_end$[ebp+4], xmm0

; 1125 : 		los_end.z = los_start.z + eo_vp.zv.z * eo_max_visual_range;

  0006b	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+44
  00073	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  0007b	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _los_start$[ebp+8]
  00080	f3 0f 11 45 d4	 movss	 DWORD PTR _los_end$[ebp+8], xmm0

; 1126 : 
; 1127 : 		first_pass_target = get_eo_target (&los_start, &los_end, &eo_vp.zv, eo_max_visual_range, TRUE, NULL);

  00085	6a 00		 push	 0
  00087	6a 01		 push	 1
  00089	51		 push	 ecx
  0008a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  00092	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00097	68 24 00 00 00	 push	 OFFSET ?eo_vp@@3UVIEWPOINT@@A+36
  0009c	8d 45 cc	 lea	 eax, DWORD PTR _los_end$[ebp]
  0009f	50		 push	 eax
  000a0	8d 4d d8	 lea	 ecx, DWORD PTR _los_start$[ebp]
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ?get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU1@@Z ; get_eo_target
  000a9	89 45 f4	 mov	 DWORD PTR _first_pass_target$[ebp], eax

; 1128 : 
; 1129 : 		//
; 1130 : 		// second pass (eo boresight start -> first pass target)
; 1131 : 		//
; 1132 : 
; 1133 : 		if (first_pass_target)

  000ac	83 7d f4 00	 cmp	 DWORD PTR _first_pass_target$[ebp], 0
  000b0	0f 84 a0 00 00
	00		 je	 $LN5@get_eo_bor

; 1134 : 		{
; 1135 : 			get_local_entity_target_point (first_pass_target, &los_end);

  000b6	8d 45 cc	 lea	 eax, DWORD PTR _los_end$[ebp]
  000b9	50		 push	 eax
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR _first_pass_target$[ebp]
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 1136 : 
; 1137 : 			range = get_3d_range (&los_start, &los_end);

  000c3	8d 45 cc	 lea	 eax, DWORD PTR _los_end$[ebp]
  000c6	50		 push	 eax
  000c7	8d 4d d8	 lea	 ecx, DWORD PTR _los_start$[ebp]
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  000d0	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 1138 : 
; 1139 : 			if (range > 1.0)

  000d3	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  000d8	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  000e0	76 74		 jbe	 SHORT $LN5@get_eo_bor

; 1140 : 			{
; 1141 : 				los_unit_vector.x = los_end.x - los_start.x;

  000e2	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _los_end$[ebp]
  000e7	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _los_start$[ebp]
  000ec	f3 0f 11 45 e4	 movss	 DWORD PTR _los_unit_vector$[ebp], xmm0

; 1142 : 				los_unit_vector.y = los_end.y - los_start.y;

  000f1	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _los_end$[ebp+4]
  000f6	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _los_start$[ebp+4]
  000fb	f3 0f 11 45 e8	 movss	 DWORD PTR _los_unit_vector$[ebp+4], xmm0

; 1143 : 				los_unit_vector.z = los_end.z - los_start.z;

  00100	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _los_end$[ebp+8]
  00105	f3 0f 5c 45 e0	 subss	 xmm0, DWORD PTR _los_start$[ebp+8]
  0010a	f3 0f 11 45 ec	 movss	 DWORD PTR _los_unit_vector$[ebp+8], xmm0

; 1144 : 
; 1145 : 				normalise_3d_vector_given_magnitude (&los_unit_vector, range);

  0010f	51		 push	 ecx
  00110	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  00115	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011a	8d 45 e4	 lea	 eax, DWORD PTR _los_unit_vector$[ebp]
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 1146 : 
; 1147 : 				second_pass_target = get_eo_target (&los_start, &los_end, &los_unit_vector, range, FALSE, first_pass_target);

  00123	8b 45 f4	 mov	 eax, DWORD PTR _first_pass_target$[ebp]
  00126	50		 push	 eax
  00127	6a 00		 push	 0
  00129	51		 push	 ecx
  0012a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  0012f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00134	8d 4d e4	 lea	 ecx, DWORD PTR _los_unit_vector$[ebp]
  00137	51		 push	 ecx
  00138	8d 55 cc	 lea	 edx, DWORD PTR _los_end$[ebp]
  0013b	52		 push	 edx
  0013c	8d 45 d8	 lea	 eax, DWORD PTR _los_start$[ebp]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ?get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU1@@Z ; get_eo_target
  00145	89 45 f0	 mov	 DWORD PTR _second_pass_target$[ebp], eax

; 1148 : 
; 1149 : 				if (second_pass_target == first_pass_target)

  00148	8b 45 f0	 mov	 eax, DWORD PTR _second_pass_target$[ebp]
  0014b	3b 45 f4	 cmp	 eax, DWORD PTR _first_pass_target$[ebp]
  0014e	75 06		 jne	 SHORT $LN5@get_eo_bor

; 1150 : 				{
; 1151 : 					target = first_pass_target;

  00150	8b 45 f4	 mov	 eax, DWORD PTR _first_pass_target$[ebp]
  00153	89 45 f8	 mov	 DWORD PTR _target$[ebp], eax
$LN5@get_eo_bor:

; 1152 : 				}
; 1153 : 			}
; 1154 : 		}
; 1155 : 	}
; 1156 : 
; 1157 : 	return (target);

  00156	8b 45 f8	 mov	 eax, DWORD PTR _target$[ebp]

; 1158 : }

  00159	5f		 pop	 edi
  0015a	5e		 pop	 esi
  0015b	5b		 pop	 ebx
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
?get_eo_boresight_target@@YGPAUENTITY@@XZ ENDP		; get_eo_boresight_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU1@@Z
_TEXT	SEGMENT
tv421 = -272						; size = 4
tv387 = -272						; size = 4
tv343 = -272						; size = 4
tv324 = -272						; size = 4
tv305 = -272						; size = 4
tv275 = -272						; size = 4
tv208 = -272						; size = 4
tv413 = -268						; size = 4
tv379 = -268						; size = 4
tv336 = -268						; size = 4
tv317 = -268						; size = 4
tv298 = -268						; size = 4
tv267 = -268						; size = 4
tv200 = -268						; size = 4
tv193 = -268						; size = 4
$T1 = -264						; size = 4
$T2 = -260						; size = 4
$T3 = -256						; size = 4
$T4 = -252						; size = 4
_intercept_point$5 = -184				; size = 12
_object_3d_index$ = -172				; size = 4
_this_eo_target$ = -168					; size = 4
_face_normal$ = -164					; size = 12
_intercept_point$ = -152				; size = 12
_los_test_position2$ = -140				; size = 12
_los_test_position1$ = -128				; size = 12
_target_position$ = -116				; size = 12
_eo_boresight_target$ = -104				; size = 4
_this_sector$ = -100					; size = 4
_target$ = -96						; size = 4
_source$ = -92						; size = 4
_los_test_distance$ = -88				; size = 4
_los_sqr_range$ = -84					; size = 4
_los_range$ = -80					; size = 4
_tree_los_range$ = -76					; size = 4
_terrain_los_range$ = -72				; size = 4
_target_radius$ = -68					; size = 4
_los_to_target_distance$ = -64				; size = 4
_z_max$ = -60						; size = 4
_x_max$ = -56						; size = 4
_z_min$ = -52						; size = 4
_x_min$ = -48						; size = 4
_dz$ = -44						; size = 4
_dy$ = -40						; size = 4
_dx$ = -36						; size = 4
_target_sqr_range$ = -32				; size = 4
_max_sqr_range$ = -28					; size = 4
_z_sector$ = -24					; size = 4
_x_sector$ = -20					; size = 4
_z_sector_max$ = -16					; size = 4
_x_sector_max$ = -12					; size = 4
_z_sector_min$ = -8					; size = 4
_x_sector_min$ = -4					; size = 4
_los_start$ = 8						; size = 4
_los_end$ = 12						; size = 4
_los_unit_vector$ = 16					; size = 4
_max_range$ = 20					; size = 4
_first_pass$ = 24					; size = 4
_first_pass_target$ = 28				; size = 4
?get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU1@@Z PROC	; get_eo_target, COMDAT

; 792  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 793  : 	int
; 794  : 		x_sector_min,
; 795  : 		z_sector_min,
; 796  : 		x_sector_max,
; 797  : 		z_sector_max,
; 798  : 		x_sector,
; 799  : 		z_sector;
; 800  : 
; 801  : 	float
; 802  : 		max_sqr_range,
; 803  : 		target_sqr_range,
; 804  : 		dx,
; 805  : 		dy,
; 806  : 		dz,
; 807  : 		x_min,
; 808  : 		z_min,
; 809  : 		x_max,
; 810  : 		z_max,
; 811  : 		los_to_target_distance,
; 812  : 		target_radius,
; 813  : 		terrain_los_range,
; 814  : 		tree_los_range,
; 815  : 		los_range,
; 816  : 		los_sqr_range,
; 817  : 		los_test_distance;
; 818  : 
; 819  : 	entity
; 820  : 		*source,
; 821  : 		*target,
; 822  : 		*this_sector,
; 823  : 		*eo_boresight_target;
; 824  : 
; 825  : 	vec3d
; 826  : 		target_position,
; 827  : 		los_test_position1,
; 828  : 		los_test_position2,
; 829  : 		intercept_point,
; 830  : 		face_normal;
; 831  : 
; 832  : 	eo_target
; 833  : 		*this_eo_target;
; 834  : 
; 835  : 	object_3d_index_numbers
; 836  : 		object_3d_index;
; 837  : 
; 838  : 	ASSERT (los_start);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _los_start$[ebp], 0
  00010	75 18		 jne	 SHORT $LN12@get_eo_tar
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00017	83 c0 2e	 add	 eax, 46			; 0000002eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_09LNGOJLOF@los_start@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@get_eo_tar:

; 839  : 
; 840  : 	ASSERT (los_end);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _los_end$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN13@get_eo_tar
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00035	83 c0 30	 add	 eax, 48			; 00000030H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_07BILCMBKD@los_end@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_eo_tar:

; 841  : 
; 842  : 	ASSERT (los_unit_vector);

  00048	83 7d 10 00	 cmp	 DWORD PTR _los_unit_vector$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN14@get_eo_tar
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00053	83 c0 32	 add	 eax, 50			; 00000032H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CCFJNJFF@los_unit_vector@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@get_eo_tar:

; 843  : 
; 844  : 	if (first_pass)

  00066	83 7d 18 00	 cmp	 DWORD PTR _first_pass$[ebp], 0
  0006a	74 20		 je	 SHORT $LN15@get_eo_tar

; 845  : 	{
; 846  : 		ASSERT (!first_pass_target);

  0006c	83 7d 1c 00	 cmp	 DWORD PTR _first_pass_target$[ebp], 0
  00070	74 18		 je	 SHORT $LN17@get_eo_tar
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00077	83 c0 36	 add	 eax, 54			; 00000036H
  0007a	50		 push	 eax
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KLMOJGGJ@?$CBfirst_pass_target@
  00085	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@get_eo_tar:

; 847  : 	}
; 848  : 	else

  0008a	eb 1e		 jmp	 SHORT $LN18@get_eo_tar
$LN15@get_eo_tar:

; 849  : 	{
; 850  : 		ASSERT (first_pass_target);

  0008c	83 7d 1c 00	 cmp	 DWORD PTR _first_pass_target$[ebp], 0
  00090	75 18		 jne	 SHORT $LN18@get_eo_tar
  00092	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00097	83 c0 3a	 add	 eax, 58			; 0000003aH
  0009a	50		 push	 eax
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OHLLGGAH@first_pass_target@
  000a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@get_eo_tar:

; 851  : 	}
; 852  : 
; 853  : 	if (draw_eo_boresight && (get_view_mode () == VIEW_MODE_EXTERNAL))

  000aa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_eo_boresight@@3HA, 0 ; draw_eo_boresight
  000b1	74 49		 je	 SHORT $LN21@get_eo_tar
  000b3	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  000ba	75 40		 jne	 SHORT $LN21@get_eo_tar

; 854  : 	{
; 855  : 		if (first_pass)

  000bc	83 7d 18 00	 cmp	 DWORD PTR _first_pass$[ebp], 0
  000c0	74 1e		 je	 SHORT $LN20@get_eo_tar

; 856  : 		{
; 857  : 			create_debug_3d_line (los_start, los_end, sys_col_green, 0.0);

  000c2	51		 push	 ecx
  000c3	0f 57 c0	 xorps	 xmm0, xmm0
  000c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_green@@3UREAL_COLOUR@@A ; sys_col_green
  000d0	50		 push	 eax
  000d1	8b 4d 0c	 mov	 ecx, DWORD PTR _los_end$[ebp]
  000d4	51		 push	 ecx
  000d5	8b 55 08	 mov	 edx, DWORD PTR _los_start$[ebp]
  000d8	52		 push	 edx
  000d9	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 858  : 		}
; 859  : 		else

  000de	eb 1c		 jmp	 SHORT $LN21@get_eo_tar
$LN20@get_eo_tar:

; 860  : 		{
; 861  : 			create_debug_3d_line (los_start, los_end, sys_col_magenta, 0.0);

  000e0	51		 push	 ecx
  000e1	0f 57 c0	 xorps	 xmm0, xmm0
  000e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_magenta@@3UREAL_COLOUR@@A ; sys_col_magenta
  000ee	50		 push	 eax
  000ef	8b 4d 0c	 mov	 ecx, DWORD PTR _los_end$[ebp]
  000f2	51		 push	 ecx
  000f3	8b 55 08	 mov	 edx, DWORD PTR _los_start$[ebp]
  000f6	52		 push	 edx
  000f7	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line
$LN21@get_eo_tar:

; 862  : 		}
; 863  : 	}
; 864  : 
; 865  : 	eo_boresight_target = NULL;

  000fc	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _eo_boresight_target$[ebp], 0

; 866  : 
; 867  : 	max_sqr_range = max_range * max_range;

  00103	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _max_range$[ebp]
  00108	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _max_range$[ebp]
  0010d	f3 0f 11 45 e4	 movss	 DWORD PTR _max_sqr_range$[ebp], xmm0

; 868  : 
; 869  : 	////////////////////////////////////////
; 870  : 	//
; 871  : 	// source
; 872  : 	//
; 873  : 	////////////////////////////////////////
; 874  : 
; 875  : 	source = get_gunship_entity ();

  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00117	89 45 a4	 mov	 DWORD PTR _source$[ebp], eax

; 876  : 
; 877  : 	////////////////////////////////////////
; 878  : 	//
; 879  : 	// calc sector scan (widened to include entites which are overlapping sector edges)
; 880  : 	//
; 881  : 	////////////////////////////////////////
; 882  : 
; 883  : 	if (los_start->x <= los_end->x)

  0011a	8b 45 0c	 mov	 eax, DWORD PTR _los_end$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _los_start$[ebp]
  00120	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00124	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00127	72 1a		 jb	 SHORT $LN22@get_eo_tar

; 884  : 	{
; 885  : 		x_min = los_start->x;

  00129	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  0012c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00130	f3 0f 11 45 d0	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 886  : 		x_max = los_end->x;

  00135	8b 45 0c	 mov	 eax, DWORD PTR _los_end$[ebp]
  00138	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0013c	f3 0f 11 45 c8	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 887  : 	}
; 888  : 	else

  00141	eb 18		 jmp	 SHORT $LN23@get_eo_tar
$LN22@get_eo_tar:

; 889  : 	{
; 890  : 		x_min = los_end->x;

  00143	8b 45 0c	 mov	 eax, DWORD PTR _los_end$[ebp]
  00146	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0014a	f3 0f 11 45 d0	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 891  : 		x_max = los_start->x;

  0014f	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00152	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00156	f3 0f 11 45 c8	 movss	 DWORD PTR _x_max$[ebp], xmm0
$LN23@get_eo_tar:

; 892  : 	}
; 893  : 
; 894  : 	if (los_start->z <= los_end->z)

  0015b	8b 45 0c	 mov	 eax, DWORD PTR _los_end$[ebp]
  0015e	8b 4d 08	 mov	 ecx, DWORD PTR _los_start$[ebp]
  00161	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00166	0f 2f 41 08	 comiss	 xmm0, DWORD PTR [ecx+8]
  0016a	72 1c		 jb	 SHORT $LN24@get_eo_tar

; 895  : 	{
; 896  : 		z_min = los_start->z;

  0016c	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  0016f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00174	f3 0f 11 45 cc	 movss	 DWORD PTR _z_min$[ebp], xmm0

; 897  : 		z_max = los_end->z;

  00179	8b 45 0c	 mov	 eax, DWORD PTR _los_end$[ebp]
  0017c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00181	f3 0f 11 45 c4	 movss	 DWORD PTR _z_max$[ebp], xmm0

; 898  : 	}
; 899  : 	else

  00186	eb 1a		 jmp	 SHORT $LN25@get_eo_tar
$LN24@get_eo_tar:

; 900  : 	{
; 901  : 		z_min = los_end->z;

  00188	8b 45 0c	 mov	 eax, DWORD PTR _los_end$[ebp]
  0018b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00190	f3 0f 11 45 cc	 movss	 DWORD PTR _z_min$[ebp], xmm0

; 902  : 		z_max = los_start->z;

  00195	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00198	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0019d	f3 0f 11 45 c4	 movss	 DWORD PTR _z_max$[ebp], xmm0
$LN25@get_eo_tar:

; 903  : 	}
; 904  : 
; 905  : 	x_min = max (x_min - LARGEST_3D_OBJECT_RADIUS, MIN_MAP_X);

  001a2	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  001a7	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@43160000
  001af	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR $T4[ebp], xmm0
  001b7	68 24 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+36
  001bc	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  001c8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001cc	f3 0f 11 45 d0	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 906  : 	z_min = max (z_min - LARGEST_3D_OBJECT_RADIUS, MIN_MAP_Z);

  001d1	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _z_min$[ebp]
  001d6	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@43160000
  001de	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR $T3[ebp], xmm0
  001e6	68 2c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+44
  001eb	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  001f7	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001fb	f3 0f 11 45 cc	 movss	 DWORD PTR _z_min$[ebp], xmm0

; 907  : 	x_max = min (x_max + LARGEST_3D_OBJECT_RADIUS, MAX_MAP_X);

  00200	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00205	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@43160000
  0020d	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR $T2[ebp], xmm0
  00215	68 3c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+60
  0021a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00220	50		 push	 eax
  00221	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00226	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0022a	f3 0f 11 45 c8	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 908  : 	z_max = min (z_max + LARGEST_3D_OBJECT_RADIUS, MAX_MAP_Z);

  0022f	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  00234	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@43160000
  0023c	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00244	68 44 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+68
  00249	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0024f	50		 push	 eax
  00250	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00255	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00259	f3 0f 11 45 c4	 movss	 DWORD PTR _z_max$[ebp], xmm0

; 909  : 
; 910  : 	get_x_sector (x_sector_min, x_min);

  0025e	8d 45 fc	 lea	 eax, DWORD PTR _x_sector_min$[ebp]
  00261	50		 push	 eax
  00262	51		 push	 ecx
  00263	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00268	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026d	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00272	8b 45 fc	 mov	 eax, DWORD PTR _x_sector_min$[ebp]
  00275	99		 cdq
  00276	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0027c	89 45 fc	 mov	 DWORD PTR _x_sector_min$[ebp], eax

; 911  : 	get_z_sector (z_sector_min, z_min);

  0027f	8d 45 f8	 lea	 eax, DWORD PTR _z_sector_min$[ebp]
  00282	50		 push	 eax
  00283	51		 push	 ecx
  00284	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _z_min$[ebp]
  00289	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028e	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00293	8b 45 f8	 mov	 eax, DWORD PTR _z_sector_min$[ebp]
  00296	99		 cdq
  00297	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0029d	89 45 f8	 mov	 DWORD PTR _z_sector_min$[ebp], eax

; 912  : 	get_x_sector (x_sector_max, x_max);

  002a0	8d 45 f4	 lea	 eax, DWORD PTR _x_sector_max$[ebp]
  002a3	50		 push	 eax
  002a4	51		 push	 ecx
  002a5	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  002aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002af	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  002b4	8b 45 f4	 mov	 eax, DWORD PTR _x_sector_max$[ebp]
  002b7	99		 cdq
  002b8	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  002be	89 45 f4	 mov	 DWORD PTR _x_sector_max$[ebp], eax

; 913  : 	get_z_sector (z_sector_max, z_max);

  002c1	8d 45 f0	 lea	 eax, DWORD PTR _z_sector_max$[ebp]
  002c4	50		 push	 eax
  002c5	51		 push	 ecx
  002c6	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  002cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d0	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  002d5	8b 45 f0	 mov	 eax, DWORD PTR _z_sector_max$[ebp]
  002d8	99		 cdq
  002d9	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  002df	89 45 f0	 mov	 DWORD PTR _z_sector_max$[ebp], eax

; 914  : 
; 915  : 	////////////////////////////////////////
; 916  : 	//
; 917  : 	// sector scan (locate possible targets)
; 918  : 	//
; 919  : 	////////////////////////////////////////
; 920  : 
; 921  : 	initialise_eo_target_list ();

  002e2	e8 00 00 00 00	 call	 ?initialise_eo_target_list@@YGXXZ ; initialise_eo_target_list

; 922  : 
; 923  : 	for (z_sector = z_sector_min; z_sector <= z_sector_max; z_sector++)

  002e7	8b 45 f8	 mov	 eax, DWORD PTR _z_sector_min$[ebp]
  002ea	89 45 e8	 mov	 DWORD PTR _z_sector$[ebp], eax
  002ed	eb 09		 jmp	 SHORT $LN4@get_eo_tar
$LN2@get_eo_tar:
  002ef	8b 45 e8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  002f2	83 c0 01	 add	 eax, 1
  002f5	89 45 e8	 mov	 DWORD PTR _z_sector$[ebp], eax
$LN4@get_eo_tar:
  002f8	8b 45 e8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  002fb	3b 45 f0	 cmp	 eax, DWORD PTR _z_sector_max$[ebp]
  002fe	0f 8f da 06 00
	00		 jg	 $LN3@get_eo_tar

; 924  : 	{
; 925  : 		for (x_sector = x_sector_min; x_sector <= x_sector_max; x_sector++)

  00304	8b 45 fc	 mov	 eax, DWORD PTR _x_sector_min$[ebp]
  00307	89 45 ec	 mov	 DWORD PTR _x_sector$[ebp], eax
  0030a	eb 09		 jmp	 SHORT $LN7@get_eo_tar
$LN5@get_eo_tar:
  0030c	8b 45 ec	 mov	 eax, DWORD PTR _x_sector$[ebp]
  0030f	83 c0 01	 add	 eax, 1
  00312	89 45 ec	 mov	 DWORD PTR _x_sector$[ebp], eax
$LN7@get_eo_tar:
  00315	8b 45 ec	 mov	 eax, DWORD PTR _x_sector$[ebp]
  00318	3b 45 f4	 cmp	 eax, DWORD PTR _x_sector_max$[ebp]
  0031b	0f 8f b8 06 00
	00		 jg	 $LN6@get_eo_tar

; 926  : 		{
; 927  : 			this_sector = get_local_raw_sector_entity (x_sector, z_sector);

  00321	8b 45 e8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  00324	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0032b	03 45 ec	 add	 eax, DWORD PTR _x_sector$[ebp]
  0032e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00334	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00338	74 1d		 je	 SHORT $LN46@get_eo_tar
  0033a	8b 55 e8	 mov	 edx, DWORD PTR _z_sector$[ebp]
  0033d	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00344	03 55 ec	 add	 edx, DWORD PTR _x_sector$[ebp]
  00347	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0034c	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0034f	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv193[ebp], ecx
  00355	eb 27		 jmp	 SHORT $LN47@get_eo_tar
$LN46@get_eo_tar:
  00357	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  0035d	81 c2 87 00 00
	00		 add	 edx, 135		; 00000087H
  00363	52		 push	 edx
  00364	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00369	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0036e	50		 push	 eax
  0036f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00374	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv193[ebp], 0
$LN47@get_eo_tar:
  0037e	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv193[ebp]
  00384	89 4d 9c	 mov	 DWORD PTR _this_sector$[ebp], ecx

; 928  : 
; 929  : 			target = get_local_entity_first_child (this_sector, LIST_TYPE_SECTOR);

  00387	83 7d 9c 00	 cmp	 DWORD PTR _this_sector$[ebp], 0
  0038b	74 0d		 je	 SHORT $LN48@get_eo_tar
  0038d	8b 45 9c	 mov	 eax, DWORD PTR _this_sector$[ebp]
  00390	8b 08		 mov	 ecx, DWORD PTR [eax]
  00392	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv200[ebp], ecx
  00398	eb 27		 jmp	 SHORT $LN49@get_eo_tar
$LN48@get_eo_tar:
  0039a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  003a0	81 c2 89 00 00
	00		 add	 edx, 137		; 00000089H
  003a6	52		 push	 edx
  003a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b1	50		 push	 eax
  003b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b7	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
$LN49@get_eo_tar:
  003c1	b9 01 00 00 00	 mov	 ecx, 1
  003c6	85 c9		 test	 ecx, ecx
  003c8	74 0c		 je	 SHORT $LN50@get_eo_tar
  003ca	c7 85 f0 fe ff
	ff 21 00 00 00	 mov	 DWORD PTR tv208[ebp], 33 ; 00000021H
  003d4	eb 27		 jmp	 SHORT $LN51@get_eo_tar
$LN50@get_eo_tar:
  003d6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  003dc	81 c2 89 00 00
	00		 add	 edx, 137		; 00000089H
  003e2	52		 push	 edx
  003e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003ed	50		 push	 eax
  003ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f3	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN51@get_eo_tar:
  003fd	6a 21		 push	 33			; 00000021H
  003ff	8b 4d 9c	 mov	 ecx, DWORD PTR _this_sector$[ebp]
  00402	51		 push	 ecx
  00403	69 95 f4 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv200[ebp], 180
  0040d	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv208[ebp]
  00413	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0041a	ff d1		 call	 ecx
  0041c	89 45 a0	 mov	 DWORD PTR _target$[ebp], eax
$LN8@get_eo_tar:

; 930  : 
; 931  : 			while (target)

  0041f	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00423	0f 84 ab 05 00
	00		 je	 $LN9@get_eo_tar

; 932  : 			{
; 933  : 				//
; 934  : 				// if second pass then ensure that the first pass target gets inserted into the target list
; 935  : 				//
; 936  : 				// (this is necessary because floating point errors can exclude it)
; 937  : 				//
; 938  : 
; 939  : 				if (target == first_pass_target)

  00429	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  0042c	3b 45 1c	 cmp	 eax, DWORD PTR _first_pass_target$[ebp]
  0042f	0f 85 6d 01 00
	00		 jne	 $LN26@get_eo_tar

; 940  : 				{
; 941  : 					get_local_entity_target_point (target, &target_position);

  00435	8d 45 8c	 lea	 eax, DWORD PTR _target_position$[ebp]
  00438	50		 push	 eax
  00439	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  0043c	51		 push	 ecx
  0043d	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 942  : 
; 943  : 					dx = target_position.x - los_start->x;

  00442	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00445	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  0044a	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0044e	f3 0f 11 45 dc	 movss	 DWORD PTR _dx$[ebp], xmm0

; 944  : 					dy = target_position.y - los_start->y;

  00453	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00456	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _target_position$[ebp+4]
  0045b	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00460	f3 0f 11 45 d8	 movss	 DWORD PTR _dy$[ebp], xmm0

; 945  : 					dz = target_position.z - los_start->z;

  00465	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00468	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  0046d	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00472	f3 0f 11 45 d4	 movss	 DWORD PTR _dz$[ebp], xmm0

; 946  : 
; 947  : 					target_sqr_range = (dx * dx) + (dy * dy) + (dz * dz);

  00477	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0047c	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  00481	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _dy$[ebp]
  00486	f3 0f 59 4d d8	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  0048b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0048f	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00494	f3 0f 59 4d d4	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  00499	f3 0f 58 c1	 addss	 xmm0, xmm1
  0049d	f3 0f 11 45 e0	 movss	 DWORD PTR _target_sqr_range$[ebp], xmm0

; 948  : 
; 949  :  					los_to_target_distance = 0.0;

  004a2	0f 57 c0	 xorps	 xmm0, xmm0
  004a5	f3 0f 11 45 c0	 movss	 DWORD PTR _los_to_target_distance$[ebp], xmm0

; 950  : 
; 951  : 					object_3d_index = get_local_entity_int_value (target, INT_TYPE_OBJECT_3D_SHAPE);

  004aa	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  004ae	74 0d		 je	 SHORT $LN52@get_eo_tar
  004b0	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  004b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b5	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv267[ebp], ecx
  004bb	eb 27		 jmp	 SHORT $LN53@get_eo_tar
$LN52@get_eo_tar:
  004bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  004c3	81 c2 9f 00 00
	00		 add	 edx, 159		; 0000009fH
  004c9	52		 push	 edx
  004ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  004cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004d4	50		 push	 eax
  004d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004da	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv267[ebp], 0
$LN53@get_eo_tar:
  004e4	b9 01 00 00 00	 mov	 ecx, 1
  004e9	85 c9		 test	 ecx, ecx
  004eb	74 0c		 je	 SHORT $LN54@get_eo_tar
  004ed	c7 85 f0 fe ff
	ff 92 00 00 00	 mov	 DWORD PTR tv275[ebp], 146 ; 00000092H
  004f7	eb 27		 jmp	 SHORT $LN55@get_eo_tar
$LN54@get_eo_tar:
  004f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  004ff	81 c2 9f 00 00
	00		 add	 edx, 159		; 0000009fH
  00505	52		 push	 edx
  00506	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00510	50		 push	 eax
  00511	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00516	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv275[ebp], 0
$LN55@get_eo_tar:
  00520	68 92 00 00 00	 push	 146			; 00000092H
  00525	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  00528	51		 push	 ecx
  00529	69 95 f4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv267[ebp], 1116
  00533	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv275[ebp]
  00539	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00540	ff d1		 call	 ecx
  00542	89 85 54 ff ff
	ff		 mov	 DWORD PTR _object_3d_index$[ebp], eax

; 952  : 
; 953  : 					ASSERT (object_3d_index != OBJECT_3D_INVALID_OBJECT_INDEX);

  00548	83 bd 54 ff ff
	ff 00		 cmp	 DWORD PTR _object_3d_index$[ebp], 0
  0054f	75 1a		 jne	 SHORT $LN28@get_eo_tar
  00551	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00556	05 a1 00 00 00	 add	 eax, 161		; 000000a1H
  0055b	50		 push	 eax
  0055c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00561	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@
  00566	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN28@get_eo_tar:

; 954  : 
; 955  : 					target_radius = get_object_3d_radius (object_3d_index);

  0056b	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _object_3d_index$[ebp]
  00571	50		 push	 eax
  00572	e8 00 00 00 00	 call	 ?get_object_3d_radius@@YGMH@Z ; get_object_3d_radius
  00577	d9 5d bc	 fstp	 DWORD PTR _target_radius$[ebp]

; 956  : 
; 957  : 					insert_entity_into_eo_target_list (target, target_sqr_range, target_radius, &target_position);

  0057a	8d 45 8c	 lea	 eax, DWORD PTR _target_position$[ebp]
  0057d	50		 push	 eax
  0057e	51		 push	 ecx
  0057f	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _target_radius$[ebp]
  00584	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00589	51		 push	 ecx
  0058a	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_sqr_range$[ebp]
  0058f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00594	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  00597	51		 push	 ecx
  00598	e8 00 00 00 00	 call	 ?insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z ; insert_entity_into_eo_target_list
  0059d	e9 95 03 00 00	 jmp	 $LN32@get_eo_tar
$LN26@get_eo_tar:

; 958  : 				}
; 959  : 				else if (target != source)

  005a2	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  005a5	3b 45 a4	 cmp	 eax, DWORD PTR _source$[ebp]
  005a8	0f 84 89 03 00
	00		 je	 $LN32@get_eo_tar

; 960  : 				{
; 961  : 					if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) != TARGET_TYPE_INVALID)

  005ae	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  005b2	74 0d		 je	 SHORT $LN56@get_eo_tar
  005b4	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  005b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b9	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv298[ebp], ecx
  005bf	eb 20		 jmp	 SHORT $LN57@get_eo_tar
$LN56@get_eo_tar:
  005c1	68 c1 03 00 00	 push	 961			; 000003c1H
  005c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  005cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005d1	52		 push	 edx
  005d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005d7	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv298[ebp], 0
$LN57@get_eo_tar:
  005e1	b8 01 00 00 00	 mov	 eax, 1
  005e6	85 c0		 test	 eax, eax
  005e8	74 0c		 je	 SHORT $LN58@get_eo_tar
  005ea	c7 85 f0 fe ff
	ff d6 00 00 00	 mov	 DWORD PTR tv305[ebp], 214 ; 000000d6H
  005f4	eb 20		 jmp	 SHORT $LN59@get_eo_tar
$LN58@get_eo_tar:
  005f6	68 c1 03 00 00	 push	 961			; 000003c1H
  005fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00600	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00606	51		 push	 ecx
  00607	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060c	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv305[ebp], 0
$LN59@get_eo_tar:
  00616	68 d6 00 00 00	 push	 214			; 000000d6H
  0061b	8b 55 a0	 mov	 edx, DWORD PTR _target$[ebp]
  0061e	52		 push	 edx
  0061f	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv298[ebp], 1116
  00629	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv305[ebp]
  0062f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00636	ff d2		 call	 edx
  00638	85 c0		 test	 eax, eax
  0063a	0f 84 f7 02 00
	00		 je	 $LN32@get_eo_tar

; 962  : 					{
; 963  : 						if (get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00640	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00644	74 0d		 je	 SHORT $LN60@get_eo_tar
  00646	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  00649	8b 08		 mov	 ecx, DWORD PTR [eax]
  0064b	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv317[ebp], ecx
  00651	eb 20		 jmp	 SHORT $LN61@get_eo_tar
$LN60@get_eo_tar:
  00653	68 c3 03 00 00	 push	 963			; 000003c3H
  00658	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0065d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00663	52		 push	 edx
  00664	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00669	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv317[ebp], 0
$LN61@get_eo_tar:
  00673	b8 01 00 00 00	 mov	 eax, 1
  00678	85 c0		 test	 eax, eax
  0067a	74 0c		 je	 SHORT $LN62@get_eo_tar
  0067c	c7 85 f0 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR tv324[ebp], 7
  00686	eb 20		 jmp	 SHORT $LN63@get_eo_tar
$LN62@get_eo_tar:
  00688	68 c3 03 00 00	 push	 963			; 000003c3H
  0068d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00692	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00698	51		 push	 ecx
  00699	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0069e	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv324[ebp], 0
$LN63@get_eo_tar:
  006a8	6a 07		 push	 7
  006aa	8b 55 a0	 mov	 edx, DWORD PTR _target$[ebp]
  006ad	52		 push	 edx
  006ae	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv317[ebp], 1116
  006b8	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv324[ebp]
  006be	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006c5	ff d2		 call	 edx
  006c7	85 c0		 test	 eax, eax
  006c9	0f 84 5d 02 00
	00		 je	 $LN31@get_eo_tar

; 964  : 						{
; 965  : 							if (!get_local_entity_int_value (target, INT_TYPE_INSIDE_HANGAR))

  006cf	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  006d3	74 0d		 je	 SHORT $LN64@get_eo_tar
  006d5	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  006d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  006da	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv336[ebp], ecx
  006e0	eb 20		 jmp	 SHORT $LN65@get_eo_tar
$LN64@get_eo_tar:
  006e2	68 c5 03 00 00	 push	 965			; 000003c5H
  006e7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  006ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006f2	52		 push	 edx
  006f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f8	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv336[ebp], 0
$LN65@get_eo_tar:
  00702	b8 01 00 00 00	 mov	 eax, 1
  00707	85 c0		 test	 eax, eax
  00709	74 0c		 je	 SHORT $LN66@get_eo_tar
  0070b	c7 85 f0 fe ff
	ff 6a 00 00 00	 mov	 DWORD PTR tv343[ebp], 106 ; 0000006aH
  00715	eb 20		 jmp	 SHORT $LN67@get_eo_tar
$LN66@get_eo_tar:
  00717	68 c5 03 00 00	 push	 965			; 000003c5H
  0071c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00721	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00727	51		 push	 ecx
  00728	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0072d	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv343[ebp], 0
$LN67@get_eo_tar:
  00737	6a 6a		 push	 106			; 0000006aH
  00739	8b 55 a0	 mov	 edx, DWORD PTR _target$[ebp]
  0073c	52		 push	 edx
  0073d	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv336[ebp], 1116
  00747	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv343[ebp]
  0074d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00754	ff d2		 call	 edx
  00756	85 c0		 test	 eax, eax
  00758	0f 85 cc 01 00
	00		 jne	 $LN37@get_eo_tar

; 966  : 							{
; 967  : 								get_local_entity_target_point (target, &target_position);

  0075e	8d 45 8c	 lea	 eax, DWORD PTR _target_position$[ebp]
  00761	50		 push	 eax
  00762	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  00765	51		 push	 ecx
  00766	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 968  : 
; 969  : 								if
; 970  : 								(
; 971  : 									(target_position.x >= x_min) &&
; 972  : 									(target_position.x <= x_max) &&
; 973  : 									(target_position.z >= z_min) &&

  0076b	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  00770	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _x_min$[ebp]
  00774	0f 82 b0 01 00
	00		 jb	 $LN37@get_eo_tar
  0077a	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  0077f	0f 2f 45 8c	 comiss	 xmm0, DWORD PTR _target_position$[ebp]
  00783	0f 82 a1 01 00
	00		 jb	 $LN37@get_eo_tar
  00789	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  0078e	0f 2f 45 cc	 comiss	 xmm0, DWORD PTR _z_min$[ebp]
  00792	0f 82 92 01 00
	00		 jb	 $LN37@get_eo_tar
  00798	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  0079d	0f 2f 45 94	 comiss	 xmm0, DWORD PTR _target_position$[ebp+8]
  007a1	0f 82 83 01 00
	00		 jb	 $LN37@get_eo_tar

; 974  : 									(target_position.z <= z_max)
; 975  : 								)
; 976  : 								{
; 977  : 									dx = target_position.x - los_start->x;

  007a7	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  007aa	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  007af	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  007b3	f3 0f 11 45 dc	 movss	 DWORD PTR _dx$[ebp], xmm0

; 978  : 									dy = target_position.y - los_start->y;

  007b8	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  007bb	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _target_position$[ebp+4]
  007c0	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  007c5	f3 0f 11 45 d8	 movss	 DWORD PTR _dy$[ebp], xmm0

; 979  : 									dz = target_position.z - los_start->z;

  007ca	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  007cd	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  007d2	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  007d7	f3 0f 11 45 d4	 movss	 DWORD PTR _dz$[ebp], xmm0

; 980  : 
; 981  : 									target_sqr_range = (dx * dx) + (dy * dy) + (dz * dz);

  007dc	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _dx$[ebp]
  007e1	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  007e6	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _dy$[ebp]
  007eb	f3 0f 59 4d d8	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  007f0	f3 0f 58 c1	 addss	 xmm0, xmm1
  007f4	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _dz$[ebp]
  007f9	f3 0f 59 4d d4	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  007fe	f3 0f 58 c1	 addss	 xmm0, xmm1
  00802	f3 0f 11 45 e0	 movss	 DWORD PTR _target_sqr_range$[ebp], xmm0

; 982  : 
; 983  : 									if (target_sqr_range < max_sqr_range)

  00807	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _max_sqr_range$[ebp]
  0080c	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _target_sqr_range$[ebp]
  00810	0f 86 14 01 00
	00		 jbe	 $LN37@get_eo_tar

; 984  : 									{
; 985  : 				 						los_to_target_distance = get_3d_perp_dist_of_point_from_line (los_start, los_end, &target_position, NULL);

  00816	6a 00		 push	 0
  00818	8d 45 8c	 lea	 eax, DWORD PTR _target_position$[ebp]
  0081b	50		 push	 eax
  0081c	8b 4d 0c	 mov	 ecx, DWORD PTR _los_end$[ebp]
  0081f	51		 push	 ecx
  00820	8b 55 08	 mov	 edx, DWORD PTR _los_start$[ebp]
  00823	52		 push	 edx
  00824	e8 00 00 00 00	 call	 ?get_3d_perp_dist_of_point_from_line@@YGMPBUVEC3D@@00PAU1@@Z ; get_3d_perp_dist_of_point_from_line
  00829	d9 5d c0	 fstp	 DWORD PTR _los_to_target_distance$[ebp]

; 986  : 
; 987  : 										object_3d_index = get_local_entity_int_value (target, INT_TYPE_OBJECT_3D_SHAPE);

  0082c	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00830	74 0d		 je	 SHORT $LN68@get_eo_tar
  00832	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  00835	8b 08		 mov	 ecx, DWORD PTR [eax]
  00837	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv379[ebp], ecx
  0083d	eb 27		 jmp	 SHORT $LN69@get_eo_tar
$LN68@get_eo_tar:
  0083f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00845	81 c2 c3 00 00
	00		 add	 edx, 195		; 000000c3H
  0084b	52		 push	 edx
  0084c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00851	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00856	50		 push	 eax
  00857	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0085c	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv379[ebp], 0
$LN69@get_eo_tar:
  00866	b9 01 00 00 00	 mov	 ecx, 1
  0086b	85 c9		 test	 ecx, ecx
  0086d	74 0c		 je	 SHORT $LN70@get_eo_tar
  0086f	c7 85 f0 fe ff
	ff 92 00 00 00	 mov	 DWORD PTR tv387[ebp], 146 ; 00000092H
  00879	eb 27		 jmp	 SHORT $LN71@get_eo_tar
$LN70@get_eo_tar:
  0087b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00881	81 c2 c3 00 00
	00		 add	 edx, 195		; 000000c3H
  00887	52		 push	 edx
  00888	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0088d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00892	50		 push	 eax
  00893	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00898	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv387[ebp], 0
$LN71@get_eo_tar:
  008a2	68 92 00 00 00	 push	 146			; 00000092H
  008a7	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  008aa	51		 push	 ecx
  008ab	69 95 f4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv379[ebp], 1116
  008b5	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv387[ebp]
  008bb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  008c2	ff d1		 call	 ecx
  008c4	89 85 54 ff ff
	ff		 mov	 DWORD PTR _object_3d_index$[ebp], eax

; 988  : 
; 989  : 										ASSERT (object_3d_index != OBJECT_3D_INVALID_OBJECT_INDEX);

  008ca	83 bd 54 ff ff
	ff 00		 cmp	 DWORD PTR _object_3d_index$[ebp], 0
  008d1	75 1a		 jne	 SHORT $LN36@get_eo_tar
  008d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  008d8	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  008dd	50		 push	 eax
  008de	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  008e3	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@
  008e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN36@get_eo_tar:

; 990  : 
; 991  : 										target_radius = get_object_3d_radius (object_3d_index);

  008ed	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _object_3d_index$[ebp]
  008f3	50		 push	 eax
  008f4	e8 00 00 00 00	 call	 ?get_object_3d_radius@@YGMH@Z ; get_object_3d_radius
  008f9	d9 5d bc	 fstp	 DWORD PTR _target_radius$[ebp]

; 992  : 
; 993  : 										if (los_to_target_distance < target_radius)

  008fc	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _target_radius$[ebp]
  00901	0f 2f 45 c0	 comiss	 xmm0, DWORD PTR _los_to_target_distance$[ebp]
  00905	76 23		 jbe	 SHORT $LN37@get_eo_tar

; 994  : 										{
; 995  : 											insert_entity_into_eo_target_list (target, target_sqr_range, target_radius, &target_position);

  00907	8d 45 8c	 lea	 eax, DWORD PTR _target_position$[ebp]
  0090a	50		 push	 eax
  0090b	51		 push	 ecx
  0090c	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _target_radius$[ebp]
  00911	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00916	51		 push	 ecx
  00917	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_sqr_range$[ebp]
  0091c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00921	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  00924	51		 push	 ecx
  00925	e8 00 00 00 00	 call	 ?insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z ; insert_entity_into_eo_target_list
$LN37@get_eo_tar:

; 996  : 										}
; 997  : 									}
; 998  : 								}
; 999  : 							}
; 1000 : 						}
; 1001 : 						else

  0092a	eb 0b		 jmp	 SHORT $LN32@get_eo_tar
$LN31@get_eo_tar:

; 1002 : 						{
; 1003 : 							delete_local_entity_from_parents_child_list (target, LIST_TYPE_GUNSHIP_TARGET);

  0092c	6a 12		 push	 18			; 00000012H
  0092e	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  00931	50		 push	 eax
  00932	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list
$LN32@get_eo_tar:

; 1004 : 						}
; 1005 : 					}
; 1006 : 				}
; 1007 : 
; 1008 : 				target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR);

  00937	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  0093b	74 0d		 je	 SHORT $LN72@get_eo_tar
  0093d	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  00940	8b 08		 mov	 ecx, DWORD PTR [eax]
  00942	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv413[ebp], ecx
  00948	eb 27		 jmp	 SHORT $LN73@get_eo_tar
$LN72@get_eo_tar:
  0094a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  00950	81 c2 d8 00 00
	00		 add	 edx, 216		; 000000d8H
  00956	52		 push	 edx
  00957	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0095c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00961	50		 push	 eax
  00962	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00967	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv413[ebp], 0
$LN73@get_eo_tar:
  00971	b9 01 00 00 00	 mov	 ecx, 1
  00976	85 c9		 test	 ecx, ecx
  00978	74 0c		 je	 SHORT $LN74@get_eo_tar
  0097a	c7 85 f0 fe ff
	ff 21 00 00 00	 mov	 DWORD PTR tv421[ebp], 33 ; 00000021H
  00984	eb 27		 jmp	 SHORT $LN75@get_eo_tar
$LN74@get_eo_tar:
  00986	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU2@@Z@4JA
  0098c	81 c2 d8 00 00
	00		 add	 edx, 216		; 000000d8H
  00992	52		 push	 edx
  00993	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00998	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0099d	50		 push	 eax
  0099e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a3	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv421[ebp], 0
$LN75@get_eo_tar:
  009ad	6a 21		 push	 33			; 00000021H
  009af	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  009b2	51		 push	 ecx
  009b3	69 95 f4 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv413[ebp], 180
  009bd	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv421[ebp]
  009c3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  009ca	ff d1		 call	 ecx
  009cc	89 45 a0	 mov	 DWORD PTR _target$[ebp], eax

; 1009 : 			}

  009cf	e9 4b fa ff ff	 jmp	 $LN8@get_eo_tar
$LN9@get_eo_tar:

; 1010 : 		}

  009d4	e9 33 f9 ff ff	 jmp	 $LN5@get_eo_tar
$LN6@get_eo_tar:

; 1011 : 	}

  009d9	e9 11 f9 ff ff	 jmp	 $LN2@get_eo_tar
$LN3@get_eo_tar:

; 1012 : 
; 1013 : 	////////////////////////////////////////
; 1014 : 	//
; 1015 : 	// scan possible targets (nearest first)
; 1016 : 	//
; 1017 : 	////////////////////////////////////////
; 1018 : 
; 1019 : 	if (eo_target_root)

  009de	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_target_root@@3PAUEO_TARGET@@A, 0
  009e5	0f 84 9f 01 00
	00		 je	 $LN11@get_eo_tar

; 1020 : 	{
; 1021 : 		if (first_pass)

  009eb	83 7d 18 00	 cmp	 DWORD PTR _first_pass$[ebp], 0
  009ef	74 3e		 je	 SHORT $LN39@get_eo_tar

; 1022 : 		{
; 1023 : 			vec3d intercept_point;
; 1024 : 
; 1025 : 			terrain_los_range = get_eo_boresight_terrain_los_clear_range (&intercept_point);

  009f1	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _intercept_point$5[ebp]
  009f7	50		 push	 eax
  009f8	e8 00 00 00 00	 call	 ?get_eo_boresight_terrain_los_clear_range@@YGMPAUVEC3D@@@Z ; get_eo_boresight_terrain_los_clear_range
  009fd	d9 5d b8	 fstp	 DWORD PTR _terrain_los_range$[ebp]

; 1026 : 
; 1027 : 			tree_los_range = get_eo_boresight_tree_los_clear_range (los_start, los_end, &intercept_point);

  00a00	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _intercept_point$5[ebp]
  00a06	50		 push	 eax
  00a07	8b 4d 0c	 mov	 ecx, DWORD PTR _los_end$[ebp]
  00a0a	51		 push	 ecx
  00a0b	8b 55 08	 mov	 edx, DWORD PTR _los_start$[ebp]
  00a0e	52		 push	 edx
  00a0f	e8 00 00 00 00	 call	 ?get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z ; get_eo_boresight_tree_los_clear_range
  00a14	d9 5d b4	 fstp	 DWORD PTR _tree_los_range$[ebp]

; 1028 : 
; 1029 : 			los_range = min (terrain_los_range, tree_los_range);

  00a17	8d 45 b4	 lea	 eax, DWORD PTR _tree_los_range$[ebp]
  00a1a	50		 push	 eax
  00a1b	8d 4d b8	 lea	 ecx, DWORD PTR _terrain_los_range$[ebp]
  00a1e	51		 push	 ecx
  00a1f	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00a24	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00a28	f3 0f 11 45 b0	 movss	 DWORD PTR _los_range$[ebp], xmm0

; 1030 : 		}
; 1031 : 		else

  00a2d	eb 16		 jmp	 SHORT $LN40@get_eo_tar
$LN39@get_eo_tar:

; 1032 : 		{
; 1033 : 			los_range = max_range + 1.0;

  00a2f	f3 0f 5a 45 14	 cvtss2sd xmm0, DWORD PTR _max_range$[ebp]
  00a34	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00a3c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a40	f3 0f 11 45 b0	 movss	 DWORD PTR _los_range$[ebp], xmm0
$LN40@get_eo_tar:

; 1034 : 		}
; 1035 : 
; 1036 : 		los_sqr_range = los_range * los_range;

  00a45	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _los_range$[ebp]
  00a4a	f3 0f 59 45 b0	 mulss	 xmm0, DWORD PTR _los_range$[ebp]
  00a4f	f3 0f 11 45 ac	 movss	 DWORD PTR _los_sqr_range$[ebp], xmm0

; 1037 : 
; 1038 : 		this_eo_target = eo_target_root;

  00a54	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_root@@3PAUEO_TARGET@@A
  00a59	89 85 58 ff ff
	ff		 mov	 DWORD PTR _this_eo_target$[ebp], eax

; 1039 : 
; 1040 : 		los_test_position1.x = los_start->x;

  00a5f	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00a62	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00a66	f3 0f 11 45 80	 movss	 DWORD PTR _los_test_position1$[ebp], xmm0

; 1041 : 		los_test_position1.y = los_start->y;

  00a6b	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00a6e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00a73	f3 0f 11 45 84	 movss	 DWORD PTR _los_test_position1$[ebp+4], xmm0

; 1042 : 		los_test_position1.z = los_start->z;

  00a78	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00a7b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00a80	f3 0f 11 45 88	 movss	 DWORD PTR _los_test_position1$[ebp+8], xmm0
$LN10@get_eo_tar:

; 1043 : 
; 1044 : 		while (this_eo_target)

  00a85	83 bd 58 ff ff
	ff 00		 cmp	 DWORD PTR _this_eo_target$[ebp], 0
  00a8c	0f 84 f8 00 00
	00		 je	 $LN11@get_eo_tar

; 1045 : 		{
; 1046 : 			if (this_eo_target->sqr_range < los_sqr_range)

  00a92	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this_eo_target$[ebp]
  00a98	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _los_sqr_range$[ebp]
  00a9d	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  00aa1	0f 86 b2 00 00
	00		 jbe	 $LN41@get_eo_tar

; 1047 : 			{
; 1048 : 				los_test_distance = sqrt (this_eo_target->sqr_range);

  00aa7	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this_eo_target$[ebp]
  00aad	51		 push	 ecx
  00aae	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00ab3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ab8	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00abd	d9 5d a8	 fstp	 DWORD PTR _los_test_distance$[ebp]

; 1049 : 
; 1050 : 				los_test_position2.x = los_start->x + los_unit_vector->x * los_test_distance;

  00ac0	8b 45 10	 mov	 eax, DWORD PTR _los_unit_vector$[ebp]
  00ac3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00ac7	f3 0f 59 45 a8	 mulss	 xmm0, DWORD PTR _los_test_distance$[ebp]
  00acc	8b 4d 08	 mov	 ecx, DWORD PTR _los_start$[ebp]
  00acf	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00ad3	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _los_test_position2$[ebp], xmm0

; 1051 : 				los_test_position2.y = los_start->y + los_unit_vector->y * los_test_distance;

  00adb	8b 45 10	 mov	 eax, DWORD PTR _los_unit_vector$[ebp]
  00ade	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00ae3	f3 0f 59 45 a8	 mulss	 xmm0, DWORD PTR _los_test_distance$[ebp]
  00ae8	8b 4d 08	 mov	 ecx, DWORD PTR _los_start$[ebp]
  00aeb	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  00af0	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _los_test_position2$[ebp+4], xmm0

; 1052 : 				los_test_position2.z = los_start->z + los_unit_vector->z * los_test_distance;

  00af8	8b 45 10	 mov	 eax, DWORD PTR _los_unit_vector$[ebp]
  00afb	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00b00	f3 0f 59 45 a8	 mulss	 xmm0, DWORD PTR _los_test_distance$[ebp]
  00b05	8b 4d 08	 mov	 ecx, DWORD PTR _los_start$[ebp]
  00b08	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00b0d	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _los_test_position2$[ebp+8], xmm0

; 1053 : 
; 1054 : 				target = get_line_of_sight_collision_entity

  00b15	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _face_normal$[ebp]
  00b1b	50		 push	 eax
  00b1c	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  00b22	51		 push	 ecx
  00b23	8d 95 74 ff ff
	ff		 lea	 edx, DWORD PTR _los_test_position2$[ebp]
  00b29	52		 push	 edx
  00b2a	8d 45 80	 lea	 eax, DWORD PTR _los_test_position1$[ebp]
  00b2d	50		 push	 eax
  00b2e	6a 00		 push	 0
  00b30	8b 4d a4	 mov	 ecx, DWORD PTR _source$[ebp]
  00b33	51		 push	 ecx
  00b34	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z ; get_line_of_sight_collision_entity
  00b39	89 45 a0	 mov	 DWORD PTR _target$[ebp], eax

; 1055 : 				(
; 1056 : 					source,
; 1057 : 					NULL,
; 1058 : 					&los_test_position1,
; 1059 : 					&los_test_position2,
; 1060 : 					&intercept_point,
; 1061 : 					&face_normal
; 1062 : 				);
; 1063 : 
; 1064 : 				//
; 1065 : 				// check if hit this_eo_target else must have hit something else
; 1066 : 				//
; 1067 : 
; 1068 : 				if (target)

  00b3c	83 7d a0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b40	74 15		 je	 SHORT $LN43@get_eo_tar

; 1069 : 				{
; 1070 : 					if (target == this_eo_target->target)

  00b42	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this_eo_target$[ebp]
  00b48	8b 4d a0	 mov	 ecx, DWORD PTR _target$[ebp]
  00b4b	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00b4d	75 06		 jne	 SHORT $LN44@get_eo_tar

; 1071 : 					{
; 1072 : 						eo_boresight_target = target;

  00b4f	8b 45 a0	 mov	 eax, DWORD PTR _target$[ebp]
  00b52	89 45 98	 mov	 DWORD PTR _eo_boresight_target$[ebp], eax
$LN44@get_eo_tar:

; 1073 : 					}
; 1074 : 
; 1075 : 					break;

  00b55	eb 33		 jmp	 SHORT $LN11@get_eo_tar
$LN43@get_eo_tar:

; 1076 : 				}
; 1077 : 			}
; 1078 : 			else

  00b57	eb 02		 jmp	 SHORT $LN42@get_eo_tar
$LN41@get_eo_tar:

; 1079 : 			{
; 1080 : 				break;

  00b59	eb 2f		 jmp	 SHORT $LN11@get_eo_tar
$LN42@get_eo_tar:

; 1081 : 			}
; 1082 : 
; 1083 : 			los_test_position1 = los_test_position2;

  00b5b	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _los_test_position2$[ebp]
  00b61	89 45 80	 mov	 DWORD PTR _los_test_position1$[ebp], eax
  00b64	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _los_test_position2$[ebp+4]
  00b6a	89 4d 84	 mov	 DWORD PTR _los_test_position1$[ebp+4], ecx
  00b6d	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _los_test_position2$[ebp+8]
  00b73	89 55 88	 mov	 DWORD PTR _los_test_position1$[ebp+8], edx

; 1084 : 
; 1085 : 			this_eo_target = this_eo_target->succ;

  00b76	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this_eo_target$[ebp]
  00b7c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00b7f	89 8d 58 ff ff
	ff		 mov	 DWORD PTR _this_eo_target$[ebp], ecx

; 1086 : 		}

  00b85	e9 fb fe ff ff	 jmp	 $LN10@get_eo_tar
$LN11@get_eo_tar:

; 1087 : 	}
; 1088 : 
; 1089 : 	deinitialise_eo_target_list ();

  00b8a	e8 00 00 00 00	 call	 ?deinitialise_eo_target_list@@YGXXZ ; deinitialise_eo_target_list

; 1090 : 
; 1091 : 	return (eo_boresight_target);

  00b8f	8b 45 98	 mov	 eax, DWORD PTR _eo_boresight_target$[ebp]

; 1092 : }

  00b92	5f		 pop	 edi
  00b93	5e		 pop	 esi
  00b94	5b		 pop	 ebx
  00b95	8b e5		 mov	 esp, ebp
  00b97	5d		 pop	 ebp
  00b98	c2 18 00	 ret	 24			; 00000018H
?get_eo_target@@YGPAUENTITY@@PAUVEC3D@@00MHPAU1@@Z ENDP	; get_eo_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?update_eo_visibility@@YGXXZ
_TEXT	SEGMENT
tv157 = -80						; size = 4
tv136 = -80						; size = 4
tv79 = -80						; size = 4
tv150 = -76						; size = 4
tv128 = -76						; size = 4
tv89 = -76						; size = 4
tv71 = -76						; size = 4
_current_target$1 = -8					; size = 4
_position$ = -4						; size = 4
?update_eo_visibility@@YGXXZ PROC			; update_eo_visibility, COMDAT

; 728  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 729  : 	vec3d
; 730  : 		*position;
; 731  : 
; 732  : 	eo_low_light = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light

; 733  : 
; 734  : 	// start full_eo_range by GCsDriver  08-12-2007
; 735  : 	if (command_line_eo_full_range)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_eo_full_range@@3HA, 0 ; command_line_eo_full_range
  0001a	0f 84 aa 00 00
	00		 je	 $LN4@update_eo_

; 736  : 	{
; 737  : 		entity
; 738  : 			*current_target;
; 739  : 
; 740  : 		update_eo_max_visual_range();

  00020	e8 00 00 00 00	 call	 ?update_eo_max_visual_range@@YGXXZ ; update_eo_max_visual_range

; 741  : 
; 742  : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00025	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0002c	74 0c		 je	 SHORT $LN13@update_eo_
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d b4	 mov	 DWORD PTR tv71[ebp], ecx
  00038	eb 21		 jmp	 SHORT $LN14@update_eo_
$LN13@update_eo_:
  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eo_visibility@@YGXXZ@4JA
  00040	83 c2 0e	 add	 edx, 14			; 0000000eH
  00043	52		 push	 edx
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00054	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN14@update_eo_:
  0005b	b9 01 00 00 00	 mov	 ecx, 1
  00060	85 c9		 test	 ecx, ecx
  00062	74 09		 je	 SHORT $LN15@update_eo_
  00064	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv79[ebp], 38	; 00000026H
  0006b	eb 21		 jmp	 SHORT $LN16@update_eo_
$LN15@update_eo_:
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eo_visibility@@YGXXZ@4JA
  00073	83 c2 0e	 add	 edx, 14			; 0000000eH
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00087	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN16@update_eo_:
  0008e	6a 26		 push	 38			; 00000026H
  00090	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00096	51		 push	 ecx
  00097	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  0009e	8b 45 b0	 mov	 eax, DWORD PTR tv79[ebp]
  000a1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a8	ff d1		 call	 ecx
  000aa	89 45 f8	 mov	 DWORD PTR _current_target$1[ebp], eax

; 743  : 		if (current_target)

  000ad	83 7d f8 00	 cmp	 DWORD PTR _current_target$1[ebp], 0
  000b1	74 17		 je	 SHORT $LN4@update_eo_

; 744  : 		{
; 745  : 			if (!get_selectable_eo_target(current_target))

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _current_target$1[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  000bc	85 c0		 test	 eax, eax
  000be	75 0a		 jne	 SHORT $LN4@update_eo_

; 746  : 			{
; 747  : 				eo_target_locked = FALSE;

  000c0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
$LN4@update_eo_:

; 748  : 			}
; 749  : 		}
; 750  : 	}
; 751  : 	// end full_eo_range by GCsDriver  08-12-2007
; 752  : 
; 753  : 	switch (eo_sensor)

  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; eo_sensor
  000cf	89 45 b4	 mov	 DWORD PTR tv89[ebp], eax
  000d2	83 7d b4 03	 cmp	 DWORD PTR tv89[ebp], 3
  000d6	74 19		 je	 SHORT $LN7@update_eo_
  000d8	83 7d b4 03	 cmp	 DWORD PTR tv89[ebp], 3
  000dc	0f 8e 3f 01 00
	00		 jle	 $LN11@update_eo_
  000e2	83 7d b4 07	 cmp	 DWORD PTR tv89[ebp], 7
  000e6	0f 8e a7 00 00
	00		 jle	 $LN9@update_eo_
  000ec	e9 30 01 00 00	 jmp	 $LN11@update_eo_
$LN7@update_eo_:

; 754  : 	{
; 755  : 		case TARGET_ACQUISITION_SYSTEM_FLIR:
; 756  : 		{
; 757  : 			position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  000f1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000f8	74 0c		 je	 SHORT $LN17@update_eo_
  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00101	89 4d b4	 mov	 DWORD PTR tv128[ebp], ecx
  00104	eb 21		 jmp	 SHORT $LN18@update_eo_
$LN17@update_eo_:
  00106	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eo_visibility@@YGXXZ@4JA
  0010c	83 c2 1d	 add	 edx, 29			; 0000001dH
  0010f	52		 push	 edx
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00115	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00120	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN18@update_eo_:
  00127	b9 01 00 00 00	 mov	 ecx, 1
  0012c	85 c9		 test	 ecx, ecx
  0012e	74 09		 je	 SHORT $LN19@update_eo_
  00130	c7 45 b0 08 00
	00 00		 mov	 DWORD PTR tv136[ebp], 8
  00137	eb 21		 jmp	 SHORT $LN20@update_eo_
$LN19@update_eo_:
  00139	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eo_visibility@@YGXXZ@4JA
  0013f	83 c2 1d	 add	 edx, 29			; 0000001dH
  00142	52		 push	 edx
  00143	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00153	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN20@update_eo_:
  0015a	6a 08		 push	 8
  0015c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00162	51		 push	 ecx
  00163	6b 55 b4 60	 imul	 edx, DWORD PTR tv128[ebp], 96
  00167	8b 45 b0	 mov	 eax, DWORD PTR tv136[ebp]
  0016a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00171	ff d1		 call	 ecx
  00173	89 45 fc	 mov	 DWORD PTR _position$[ebp], eax

; 758  : 
; 759  : 			if (get_simple_session_weather_at_point (position) == WEATHERMODE_HEAVY_RAIN)

  00176	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z ; get_simple_session_weather_at_point
  0017f	83 f8 03	 cmp	 eax, 3
  00182	75 0a		 jne	 SHORT $LN8@update_eo_

; 760  : 			{
; 761  : 				eo_low_light = TRUE;

  00184	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?eo_low_light@@3HA, 1 ; eo_low_light
$LN8@update_eo_:

; 762  : 			}
; 763  : 
; 764  : 			break;

  0018e	e9 a1 00 00 00	 jmp	 $LN1@update_eo_
$LN9@update_eo_:

; 765  : 		}
; 766  : 		case TARGET_ACQUISITION_SYSTEM_DTV:
; 767  : 		case TARGET_ACQUISITION_SYSTEM_DVO:
; 768  : 		case TARGET_ACQUISITION_SYSTEM_LLLTV:
; 769  : 		case TARGET_ACQUISITION_SYSTEM_PERISCOPE:
; 770  : 		{
; 771  : 			if (get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE) == DAY_SEGMENT_TYPE_NIGHT)

  00193	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0019a	74 0c		 je	 SHORT $LN21@update_eo_
  0019c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  001a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a3	89 4d b4	 mov	 DWORD PTR tv150[ebp], ecx
  001a6	eb 1d		 jmp	 SHORT $LN22@update_eo_
$LN21@update_eo_:
  001a8	68 03 03 00 00	 push	 771			; 00000303H
  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001b8	52		 push	 edx
  001b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001be	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN22@update_eo_:
  001c5	b8 01 00 00 00	 mov	 eax, 1
  001ca	85 c0		 test	 eax, eax
  001cc	74 09		 je	 SHORT $LN23@update_eo_
  001ce	c7 45 b0 27 00
	00 00		 mov	 DWORD PTR tv157[ebp], 39 ; 00000027H
  001d5	eb 1d		 jmp	 SHORT $LN24@update_eo_
$LN23@update_eo_:
  001d7	68 03 03 00 00	 push	 771			; 00000303H
  001dc	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001e7	51		 push	 ecx
  001e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ed	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN24@update_eo_:
  001f4	6a 27		 push	 39			; 00000027H
  001f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  001fc	52		 push	 edx
  001fd	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv150[ebp], 1116
  00204	8b 4d b0	 mov	 ecx, DWORD PTR tv157[ebp]
  00207	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0020e	ff d2		 call	 edx
  00210	83 f8 03	 cmp	 eax, 3
  00213	75 0a		 jne	 SHORT $LN10@update_eo_

; 772  : 			{
; 773  : 				eo_low_light = TRUE;

  00215	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?eo_low_light@@3HA, 1 ; eo_low_light
$LN10@update_eo_:

; 774  : 			}
; 775  : 
; 776  : 			break;

  0021f	eb 13		 jmp	 SHORT $LN1@update_eo_
$LN11@update_eo_:

; 777  : 		}
; 778  : 		default:
; 779  : 		{
; 780  : 			debug_fatal ("Invalid eo sensor = %d", eo_sensor);

  00221	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; eo_sensor
  00226	50		 push	 eax
  00227	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FCCNOFJC@Invalid?5eo?5sensor?5?$DN?5?$CFd@
  0022c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00231	83 c4 08	 add	 esp, 8
$LN1@update_eo_:

; 781  : 
; 782  : 			break;
; 783  : 		}
; 784  : 	}
; 785  : }

  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	8b e5		 mov	 esp, ebp
  00239	5d		 pop	 ebp
  0023a	c3		 ret	 0
?update_eo_visibility@@YGXXZ ENDP			; update_eo_visibility
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z
_TEXT	SEGMENT
_face_normal$ = -16					; size = 12
_los_clear_range$ = -4					; size = 4
_los_start$ = 8						; size = 4
_los_end$ = 12						; size = 4
_intercept_point$ = 16					; size = 4
?get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z PROC ; get_eo_boresight_tree_los_clear_range, COMDAT

; 669  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 670  : 	float
; 671  : 		los_clear_range;
; 672  : 
; 673  : 	vec3d
; 674  : 		face_normal;
; 675  : 
; 676  : 	ASSERT (intercept_point);

  00009	83 7d 10 00	 cmp	 DWORD PTR _intercept_point$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_eo_bor
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NMPFNFPN@intercept_point@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_eo_bor:

; 677  : 	ASSERT (los_start);

  00027	83 7d 08 00	 cmp	 DWORD PTR _los_start$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_eo_bor
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z@4JA
  00032	83 c0 08	 add	 eax, 8
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_09LNGOJLOF@los_start@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_eo_bor:

; 678  : 	ASSERT (los_end);

  00045	83 7d 0c 00	 cmp	 DWORD PTR _los_end$[ebp], 0
  00049	75 18		 jne	 SHORT $LN4@get_eo_bor
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z@4JA
  00050	83 c0 09	 add	 eax, 9
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_07BILCMBKD@los_end@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_eo_bor:

; 679  : 
; 680  : 	if (get_line_of_sight_collision_tree (los_start, los_end, intercept_point, &face_normal, FALSE, TRUE))

  00063	6a 01		 push	 1
  00065	6a 00		 push	 0
  00067	8d 45 f0	 lea	 eax, DWORD PTR _face_normal$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d 10	 mov	 ecx, DWORD PTR _intercept_point$[ebp]
  0006e	51		 push	 ecx
  0006f	8b 55 0c	 mov	 edx, DWORD PTR _los_end$[ebp]
  00072	52		 push	 edx
  00073	8b 45 08	 mov	 eax, DWORD PTR _los_start$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z ; get_line_of_sight_collision_tree
  0007c	85 c0		 test	 eax, eax
  0007e	74 12		 je	 SHORT $LN5@get_eo_bor

; 681  : 	{
; 682  : 		los_clear_range = get_3d_range (los_start, intercept_point);

  00080	8b 45 10	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00083	50		 push	 eax
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _los_start$[ebp]
  00087	51		 push	 ecx
  00088	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  0008d	d9 5d fc	 fstp	 DWORD PTR _los_clear_range$[ebp]

; 683  : 	}
; 684  : 	else

  00090	eb 2d		 jmp	 SHORT $LN6@get_eo_bor
$LN5@get_eo_bor:

; 685  : 	{
; 686  : 		los_clear_range = eo_max_visual_range;

  00092	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  0009a	f3 0f 11 45 fc	 movss	 DWORD PTR _los_clear_range$[ebp], xmm0

; 687  : 		intercept_point->x = 0.0;

  0009f	8b 45 10	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  000a2	0f 57 c0	 xorps	 xmm0, xmm0
  000a5	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 688  : 		intercept_point->y = 0.0;

  000a9	8b 45 10	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  000ac	0f 57 c0	 xorps	 xmm0, xmm0
  000af	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 689  : 		intercept_point->z = 0.0;

  000b4	8b 45 10	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  000b7	0f 57 c0	 xorps	 xmm0, xmm0
  000ba	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN6@get_eo_bor:

; 690  : 	}
; 691  : 
; 692  : 	return (los_clear_range);

  000bf	d9 45 fc	 fld	 DWORD PTR _los_clear_range$[ebp]

; 693  : }

  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5b		 pop	 ebx
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 0c 00	 ret	 12			; 0000000cH
?get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z ENDP ; get_eo_boresight_tree_los_clear_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_boresight_terrain_los_clear_range@@YGMPAUVEC3D@@@Z
_TEXT	SEGMENT
tv417 = -88						; size = 4
tv408 = -88						; size = 4
tv363 = -88						; size = 4
tv354 = -88						; size = 4
tv309 = -88						; size = 4
tv300 = -88						; size = 4
_max_range$1 = -20					; size = 4
_step$ = -16						; size = 12
_los_clear_range$ = -4					; size = 4
_position$ = 8						; size = 4
?get_eo_boresight_terrain_los_clear_range@@YGMPAUVEC3D@@@Z PROC ; get_eo_boresight_terrain_los_clear_range, COMDAT

; 536  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 537  : 	float
; 538  : 		los_clear_range;
; 539  : 
; 540  : 	vec3d
; 541  : 		step;
; 542  : 
; 543  : 	//
; 544  : 	// small steps across near range
; 545  : 	//
; 546  : 
; 547  : 	*position = eo_vp.position;

  00009	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4
  0001a	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001d	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8
  00023	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 548  : 
; 549  : 	los_clear_range = 0.0;

  00026	0f 57 c0	 xorps	 xmm0, xmm0
  00029	f3 0f 11 45 fc	 movss	 DWORD PTR _los_clear_range$[ebp], xmm0

; 550  : 
; 551  : 	step.x = SMALL_TERRAIN_LOS_STEP * eo_vp.zv.x;

  0002e	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+36
  00036	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4034000000000000
  0003e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00042	f3 0f 11 45 f0	 movss	 DWORD PTR _step$[ebp], xmm0

; 552  : 	step.y = SMALL_TERRAIN_LOS_STEP * eo_vp.zv.y;

  00047	f3 0f 5a 05 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+40
  0004f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4034000000000000
  00057	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0005b	f3 0f 11 45 f4	 movss	 DWORD PTR _step$[ebp+4], xmm0

; 553  : 	step.z = SMALL_TERRAIN_LOS_STEP * eo_vp.zv.z;

  00060	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+44
  00068	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4034000000000000
  00070	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00074	f3 0f 11 45 f8	 movss	 DWORD PTR _step$[ebp+8], xmm0
$LN2@get_eo_bor:

; 554  : 
; 555  : 	while (los_clear_range < LARGE_TERRAIN_LOS_STEP)

  00079	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _los_clear_range$[ebp]
  0007e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4069000000000000
  00086	66 0f 2f c8	 comisd	 xmm1, xmm0
  0008a	0f 86 16 01 00
	00		 jbe	 $LN3@get_eo_bor

; 556  : 	{
; 557  : 		los_clear_range += SMALL_TERRAIN_LOS_STEP;

  00090	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _los_clear_range$[ebp]
  00095	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4034000000000000
  0009d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a1	f3 0f 11 45 fc	 movss	 DWORD PTR _los_clear_range$[ebp], xmm0

; 558  : 
; 559  : 		position->x += step.x;

  000a6	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000a9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000ad	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _step$[ebp]
  000b2	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  000b5	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 560  : 		position->y += step.y;

  000b9	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000bc	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000c1	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _step$[ebp+4]
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  000c9	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 561  : 		position->z += step.z;

  000ce	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000d1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000d6	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _step$[ebp+8]
  000db	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  000de	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 562  : 
; 563  : 		if (draw_eo_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  000e3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_eo_terrain_los_markers@@3HA, 0 ; draw_eo_terrain_los_markers
  000ea	74 49		 je	 SHORT $LN8@get_eo_bor
  000ec	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  000f3	75 40		 jne	 SHORT $LN8@get_eo_bor

; 564  : 		{
; 565  : 			create_rotated_debug_3d_object

  000f5	51		 push	 ecx
  000f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  000fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00103	51		 push	 ecx
  00104	0f 57 c0	 xorps	 xmm0, xmm0
  00107	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010c	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  00111	51		 push	 ecx
  00112	0f 57 c0	 xorps	 xmm0, xmm0
  00115	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011a	51		 push	 ecx
  0011b	0f 57 c0	 xorps	 xmm0, xmm0
  0011e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00123	51		 push	 ecx
  00124	0f 57 c0	 xorps	 xmm0, xmm0
  00127	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012c	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN8@get_eo_bor:

; 566  : 			(
; 567  : 				position,
; 568  : 				0.0,
; 569  : 				0.0,
; 570  : 				0.0,
; 571  : 				TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 572  : 				TERRAIN_LOS_MARKER_LIFETIME,
; 573  : 				TERRAIN_LOS_MARKER_SCALE
; 574  : 			);
; 575  : 		}
; 576  : 
; 577  : 		if (point_below_ground (position))

  00135	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00138	51		 push	 ecx
  00139	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0013e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00143	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00146	51		 push	 ecx
  00147	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0014b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00150	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  00155	d9 5d a8	 fstp	 DWORD PTR tv300[ebp]
  00158	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv300[ebp]
  0015d	8b 55 08	 mov	 edx, DWORD PTR _position$[ebp]
  00160	0f 2f 42 04	 comiss	 xmm0, DWORD PTR [edx+4]
  00164	76 3b		 jbe	 SHORT $LN9@get_eo_bor
  00166	6a 00		 push	 0
  00168	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0016b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00170	51		 push	 ecx
  00171	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00176	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00179	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0017d	51		 push	 ecx
  0017e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00183	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00188	d9 5d a8	 fstp	 DWORD PTR tv309[ebp]
  0018b	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv309[ebp]
  00190	8b 55 08	 mov	 edx, DWORD PTR _position$[ebp]
  00193	0f 2f 42 04	 comiss	 xmm0, DWORD PTR [edx+4]
  00197	76 08		 jbe	 SHORT $LN9@get_eo_bor

; 578  : 		{
; 579  : 			return (los_clear_range);

  00199	d9 45 fc	 fld	 DWORD PTR _los_clear_range$[ebp]
  0019c	e9 72 03 00 00	 jmp	 $LN1@get_eo_bor
$LN9@get_eo_bor:

; 580  : 		}
; 581  : 	}

  001a1	e9 d3 fe ff ff	 jmp	 $LN2@get_eo_bor
$LN3@get_eo_bor:

; 582  : 
; 583  : 	//
; 584  : 	// large steps across complete range
; 585  : 	//
; 586  : 
; 587  : 	*position = eo_vp.position;

  001a6	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A
  001af	89 08		 mov	 DWORD PTR [eax], ecx
  001b1	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4
  001b7	89 50 04	 mov	 DWORD PTR [eax+4], edx
  001ba	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8
  001c0	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 588  : 
; 589  : 	los_clear_range = 0.0;

  001c3	0f 57 c0	 xorps	 xmm0, xmm0
  001c6	f3 0f 11 45 fc	 movss	 DWORD PTR _los_clear_range$[ebp], xmm0

; 590  : 
; 591  : 	step.x = LARGE_TERRAIN_LOS_STEP * eo_vp.zv.x;

  001cb	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+36
  001d3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4069000000000000
  001db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001df	f3 0f 11 45 f0	 movss	 DWORD PTR _step$[ebp], xmm0

; 592  : 	step.y = LARGE_TERRAIN_LOS_STEP * eo_vp.zv.y;

  001e4	f3 0f 5a 05 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+40
  001ec	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4069000000000000
  001f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001f8	f3 0f 11 45 f4	 movss	 DWORD PTR _step$[ebp+4], xmm0

; 593  : 	step.z = LARGE_TERRAIN_LOS_STEP * eo_vp.zv.z;

  001fd	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+44
  00205	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4069000000000000
  0020d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00211	f3 0f 11 45 f8	 movss	 DWORD PTR _step$[ebp+8], xmm0
$LN4@get_eo_bor:

; 594  : 
; 595  : 	while (los_clear_range < eo_max_visual_range)

  00216	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  0021e	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _los_clear_range$[ebp]
  00222	0f 86 e5 02 00
	00		 jbe	 $LN5@get_eo_bor

; 596  : 	{
; 597  : 		los_clear_range += LARGE_TERRAIN_LOS_STEP;

  00228	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _los_clear_range$[ebp]
  0022d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4069000000000000
  00235	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00239	f3 0f 11 45 fc	 movss	 DWORD PTR _los_clear_range$[ebp], xmm0

; 598  : 
; 599  : 		position->x += step.x;

  0023e	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00241	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00245	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _step$[ebp]
  0024a	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  0024d	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 600  : 		position->y += step.y;

  00251	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00254	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00259	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _step$[ebp+4]
  0025e	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00261	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 601  : 		position->z += step.z;

  00266	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00269	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0026e	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _step$[ebp+8]
  00273	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00276	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 602  : 
; 603  : 		if (draw_eo_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  0027b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_eo_terrain_los_markers@@3HA, 0 ; draw_eo_terrain_los_markers
  00282	74 49		 je	 SHORT $LN10@get_eo_bor
  00284	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  0028b	75 40		 jne	 SHORT $LN10@get_eo_bor

; 604  : 		{
; 605  : 			create_rotated_debug_3d_object

  0028d	51		 push	 ecx
  0028e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00296	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029b	51		 push	 ecx
  0029c	0f 57 c0	 xorps	 xmm0, xmm0
  0029f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a4	68 5e 0a 00 00	 push	 2654			; 00000a5eH
  002a9	51		 push	 ecx
  002aa	0f 57 c0	 xorps	 xmm0, xmm0
  002ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b2	51		 push	 ecx
  002b3	0f 57 c0	 xorps	 xmm0, xmm0
  002b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bb	51		 push	 ecx
  002bc	0f 57 c0	 xorps	 xmm0, xmm0
  002bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c4	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN10@get_eo_bor:

; 606  : 			(
; 607  : 				position,
; 608  : 				0.0,
; 609  : 				0.0,
; 610  : 				0.0,
; 611  : 				TERRAIN_LOS_MARKER_LARGE_STEP_3D_OBJECT,
; 612  : 				TERRAIN_LOS_MARKER_LIFETIME,
; 613  : 				TERRAIN_LOS_MARKER_SCALE
; 614  : 			);
; 615  : 		}
; 616  : 
; 617  : 		if (point_below_ground (position))

  002cd	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  002d0	51		 push	 ecx
  002d1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  002d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002db	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  002de	51		 push	 ecx
  002df	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  002e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e8	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  002ed	d9 5d a8	 fstp	 DWORD PTR tv354[ebp]
  002f0	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv354[ebp]
  002f5	8b 55 08	 mov	 edx, DWORD PTR _position$[ebp]
  002f8	0f 2f 42 04	 comiss	 xmm0, DWORD PTR [edx+4]
  002fc	0f 86 06 02 00
	00		 jbe	 $LN11@get_eo_bor
  00302	6a 00		 push	 0
  00304	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00307	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0030c	51		 push	 ecx
  0030d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00312	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00315	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00319	51		 push	 ecx
  0031a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031f	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00324	d9 5d a8	 fstp	 DWORD PTR tv363[ebp]
  00327	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv363[ebp]
  0032c	8b 55 08	 mov	 edx, DWORD PTR _position$[ebp]
  0032f	0f 2f 42 04	 comiss	 xmm0, DWORD PTR [edx+4]
  00333	0f 86 cf 01 00
	00		 jbe	 $LN11@get_eo_bor

; 618  : 		{
; 619  : 			// refine range by backing up to last range and do smaller steps
; 620  : 			float max_range = los_clear_range;

  00339	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _los_clear_range$[ebp]
  0033e	f3 0f 11 45 ec	 movss	 DWORD PTR _max_range$1[ebp], xmm0

; 621  : 			los_clear_range -= LARGE_TERRAIN_LOS_STEP;

  00343	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _los_clear_range$[ebp]
  00348	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4069000000000000
  00350	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00354	f3 0f 11 45 fc	 movss	 DWORD PTR _los_clear_range$[ebp], xmm0

; 622  : 
; 623  : 			position->x -= step.x;

  00359	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0035c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00360	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _step$[ebp]
  00365	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00368	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 624  : 			position->y -= step.y;

  0036c	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0036f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00374	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _step$[ebp+4]
  00379	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  0037c	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 625  : 			position->z -= step.z;

  00381	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00384	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00389	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _step$[ebp+8]
  0038e	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00391	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 626  : 
; 627  : 			step.x = SMALL_TERRAIN_LOS_STEP * eo_vp.zv.x;

  00396	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+36
  0039e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4034000000000000
  003a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003aa	f3 0f 11 45 f0	 movss	 DWORD PTR _step$[ebp], xmm0

; 628  : 			step.y = SMALL_TERRAIN_LOS_STEP * eo_vp.zv.y;

  003af	f3 0f 5a 05 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+40
  003b7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4034000000000000
  003bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003c3	f3 0f 11 45 f4	 movss	 DWORD PTR _step$[ebp+4], xmm0

; 629  : 			step.z = SMALL_TERRAIN_LOS_STEP * eo_vp.zv.z;

  003c8	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+44
  003d0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4034000000000000
  003d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003dc	f3 0f 11 45 f8	 movss	 DWORD PTR _step$[ebp+8], xmm0
$LN6@get_eo_bor:

; 630  : 
; 631  : 			while (los_clear_range < max_range)

  003e1	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _max_range$1[ebp]
  003e6	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _los_clear_range$[ebp]
  003ea	0f 86 13 01 00
	00		 jbe	 $LN7@get_eo_bor

; 632  : 			{
; 633  : 				los_clear_range += SMALL_TERRAIN_LOS_STEP;

  003f0	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _los_clear_range$[ebp]
  003f5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4034000000000000
  003fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00401	f3 0f 11 45 fc	 movss	 DWORD PTR _los_clear_range$[ebp], xmm0

; 634  : 
; 635  : 				position->x += step.x;

  00406	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00409	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0040d	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _step$[ebp]
  00412	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00415	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 636  : 				position->y += step.y;

  00419	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0041c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00421	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _step$[ebp+4]
  00426	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  00429	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 637  : 				position->z += step.z;

  0042e	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00431	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00436	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _step$[ebp+8]
  0043b	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  0043e	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 638  : 
; 639  : 				if (draw_eo_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00443	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_eo_terrain_los_markers@@3HA, 0 ; draw_eo_terrain_los_markers
  0044a	74 49		 je	 SHORT $LN12@get_eo_bor
  0044c	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  00453	75 40		 jne	 SHORT $LN12@get_eo_bor

; 640  : 				{
; 641  : 					create_rotated_debug_3d_object

  00455	51		 push	 ecx
  00456	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0045e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00463	51		 push	 ecx
  00464	0f 57 c0	 xorps	 xmm0, xmm0
  00467	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0046c	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  00471	51		 push	 ecx
  00472	0f 57 c0	 xorps	 xmm0, xmm0
  00475	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047a	51		 push	 ecx
  0047b	0f 57 c0	 xorps	 xmm0, xmm0
  0047e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00483	51		 push	 ecx
  00484	0f 57 c0	 xorps	 xmm0, xmm0
  00487	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048c	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0048f	50		 push	 eax
  00490	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN12@get_eo_bor:

; 642  : 					(
; 643  : 						position,
; 644  : 						0.0,
; 645  : 						0.0,
; 646  : 						0.0,
; 647  : 						TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 648  : 						TERRAIN_LOS_MARKER_LIFETIME,
; 649  : 						TERRAIN_LOS_MARKER_SCALE
; 650  : 					);
; 651  : 				}
; 652  : 
; 653  : 				if (point_below_ground (position))

  00495	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00498	51		 push	 ecx
  00499	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0049e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a3	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  004a6	51		 push	 ecx
  004a7	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  004ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b0	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  004b5	d9 5d a8	 fstp	 DWORD PTR tv408[ebp]
  004b8	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv408[ebp]
  004bd	8b 55 08	 mov	 edx, DWORD PTR _position$[ebp]
  004c0	0f 2f 42 04	 comiss	 xmm0, DWORD PTR [edx+4]
  004c4	76 38		 jbe	 SHORT $LN13@get_eo_bor
  004c6	6a 00		 push	 0
  004c8	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  004cb	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  004d0	51		 push	 ecx
  004d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d6	8b 4d 08	 mov	 ecx, DWORD PTR _position$[ebp]
  004d9	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  004dd	51		 push	 ecx
  004de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e3	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  004e8	d9 5d a8	 fstp	 DWORD PTR tv417[ebp]
  004eb	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv417[ebp]
  004f0	8b 55 08	 mov	 edx, DWORD PTR _position$[ebp]
  004f3	0f 2f 42 04	 comiss	 xmm0, DWORD PTR [edx+4]
  004f7	76 05		 jbe	 SHORT $LN13@get_eo_bor

; 654  : 					return (los_clear_range);

  004f9	d9 45 fc	 fld	 DWORD PTR _los_clear_range$[ebp]
  004fc	eb 15		 jmp	 SHORT $LN1@get_eo_bor
$LN13@get_eo_bor:

; 655  : 			}

  004fe	e9 de fe ff ff	 jmp	 $LN6@get_eo_bor
$LN7@get_eo_bor:

; 656  : 
; 657  : 			return max_range;

  00503	d9 45 ec	 fld	 DWORD PTR _max_range$1[ebp]
  00506	eb 0b		 jmp	 SHORT $LN1@get_eo_bor
$LN11@get_eo_bor:

; 658  : 		}
; 659  : 	}

  00508	e9 09 fd ff ff	 jmp	 $LN4@get_eo_bor
$LN5@get_eo_bor:

; 660  : 
; 661  : 	return (eo_max_visual_range);

  0050d	d9 05 00 00 00
	00		 fld	 DWORD PTR ?eo_max_visual_range@@3MA ; eo_max_visual_range
$LN1@get_eo_bor:

; 662  : }

  00513	5f		 pop	 edi
  00514	5e		 pop	 esi
  00515	5b		 pop	 ebx
  00516	8b e5		 mov	 esp, ebp
  00518	5d		 pop	 ebp
  00519	c2 04 00	 ret	 4
?get_eo_boresight_terrain_los_clear_range@@YGMPAUVEC3D@@@Z ENDP ; get_eo_boresight_terrain_los_clear_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z
_TEXT	SEGMENT
tv69 = -68						; size = 4
_vp$ = 8						; size = 4
?get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z PROC	; get_eo_centred_viewpoint, COMDAT

; 430  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 431  : 	ASSERT (vp);

  00009	83 7d 08 00	 cmp	 DWORD PTR _vp$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_eo_cen
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02HPPNELPJ@vp@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_eo_cen:

; 432  : 
; 433  : 	switch (get_global_gunship_type ())

  00027	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0002c	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0002f	83 7d bc 09	 cmp	 DWORD PTR tv69[ebp], 9
  00033	77 78		 ja	 SHORT $LN15@get_eo_cen
  00035	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  00038	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN17@get_eo_cen[ecx*4]
$LN5@get_eo_cen:

; 434  : 	{
; 435  : 		////////////////////////////////////////
; 436  : 		case GUNSHIP_TYPE_APACHE:
; 437  : 		////////////////////////////////////////
; 438  : 		{
; 439  : 			get_apache_eo_centred_viewpoint (vp);

  0003f	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?get_apache_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_apache_eo_centred_viewpoint

; 440  : 
; 441  : 			break;

  00048	eb 6c		 jmp	 SHORT $LN1@get_eo_cen
$LN6@get_eo_cen:

; 442  : 		}
; 443  : 		////////////////////////////////////////
; 444  : 		case GUNSHIP_TYPE_HAVOC:
; 445  : 		////////////////////////////////////////
; 446  : 		{
; 447  : 			get_havoc_eo_centred_viewpoint (vp);

  0004a	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?get_havoc_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_havoc_eo_centred_viewpoint

; 448  : 
; 449  : 			break;

  00053	eb 61		 jmp	 SHORT $LN1@get_eo_cen
$LN7@get_eo_cen:

; 450  : 		}
; 451  : 		////////////////////////////////////////
; 452  : 		case GUNSHIP_TYPE_COMANCHE:
; 453  : 		////////////////////////////////////////
; 454  : 		{
; 455  : 			get_comanche_eo_centred_viewpoint (vp);

  00055	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?get_comanche_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_comanche_eo_centred_viewpoint

; 456  : 
; 457  : 			break;

  0005e	eb 56		 jmp	 SHORT $LN1@get_eo_cen
$LN8@get_eo_cen:

; 458  : 		}
; 459  : 		////////////////////////////////////////
; 460  : 		case GUNSHIP_TYPE_HOKUM:
; 461  : 		////////////////////////////////////////
; 462  : 		{
; 463  : 			get_hokum_eo_centred_viewpoint (vp);

  00060	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?get_hokum_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_hokum_eo_centred_viewpoint

; 464  : 
; 465  : 			break;

  00069	eb 4b		 jmp	 SHORT $LN1@get_eo_cen
$LN9@get_eo_cen:

; 466  : 		}
; 467  : 		////Moje 030519 Start
; 468  : 		////////////////////////////////////////
; 469  : 		case GUNSHIP_TYPE_BLACKHAWK:
; 470  : 		////////////////////////////////////////
; 471  : 		{
; 472  : 			get_blackhawk_eo_centred_viewpoint (vp);

  0006b	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ?get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_blackhawk_eo_centred_viewpoint

; 473  : 
; 474  : 			break;

  00074	eb 40		 jmp	 SHORT $LN1@get_eo_cen
$LN10@get_eo_cen:

; 475  : 		}
; 476  : 		////Moje 030519 End
; 477  : 		////Moje 030612 start
; 478  : 		////////////////////////////////////////
; 479  : 		case GUNSHIP_TYPE_HIND:
; 480  : 		////////////////////////////////////////
; 481  : 		{
; 482  : 			get_hind_eo_centred_viewpoint (vp);

  00076	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?get_hind_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_hind_eo_centred_viewpoint

; 483  : 
; 484  : 			break;

  0007f	eb 35		 jmp	 SHORT $LN1@get_eo_cen
$LN11@get_eo_cen:

; 485  : 		}
; 486  : 		////Moje 030612 end
; 487  : 		////Moje 030816 Start
; 488  : 		////////////////////////////////////////
; 489  : 		case GUNSHIP_TYPE_AH64A:
; 490  : 		////////////////////////////////////////
; 491  : 		{
; 492  : 			get_ah64a_eo_centred_viewpoint (vp);

  00081	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?get_ah64a_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_ah64a_eo_centred_viewpoint

; 493  : 			break;

  0008a	eb 2a		 jmp	 SHORT $LN1@get_eo_cen
$LN12@get_eo_cen:

; 494  : 		}
; 495  : 		////////////////////////////////////////
; 496  : 		case GUNSHIP_TYPE_KA50:
; 497  : 		////////////////////////////////////////
; 498  : 		{
; 499  : 			get_ka50_eo_centred_viewpoint (vp);

  0008c	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?get_ka50_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_ka50_eo_centred_viewpoint

; 500  : 			break;

  00095	eb 1f		 jmp	 SHORT $LN1@get_eo_cen
$LN13@get_eo_cen:

; 501  : 		}
; 502  : 		////Moje 030816 end
; 503  : 		////////////////////////////////////////
; 504  : 		case GUNSHIP_TYPE_VIPER:
; 505  : 		{
; 506  : 			get_viper_eo_centred_viewpoint (vp);

  00097	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?get_viper_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_viper_eo_centred_viewpoint

; 507  : 			break;

  000a0	eb 14		 jmp	 SHORT $LN1@get_eo_cen
$LN14@get_eo_cen:

; 508  : 		}
; 509  : 		////////////////////////////////////////
; 510  : 		case GUNSHIP_TYPE_KIOWA:
; 511  : 		////////////////////////////////////////
; 512  : 		{
; 513  : 			get_kiowa_eo_centred_viewpoint (vp);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?get_kiowa_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_kiowa_eo_centred_viewpoint

; 514  : 
; 515  : 			break;

  000ab	eb 09		 jmp	 SHORT $LN1@get_eo_cen
$LN15@get_eo_cen:

; 516  : 		}
; 517  : 		////////////////////////////////////////
; 518  : 
; 519  : 		////////////////////////////////////////
; 520  : 		// GCsDriver  08-12-2007
; 521  : 		default:
; 522  : 		////////////////////////////////////////
; 523  : 		{
; 524  : 			get_default_eo_centred_viewpoint (vp);

  000ad	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ?get_default_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_default_eo_centred_viewpoint
$LN1@get_eo_cen:

; 525  : 			// get_apache_eo_centred_viewpoint (vp);
; 526  : 			// //debug_fatal ("Invalid gunship type = %d", get_global_gunship_type ());
; 527  : 		}
; 528  : 	}
; 529  : }

  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 04 00	 ret	 4
  000bf	90		 npad	 1
$LN17@get_eo_cen:
  000c0	00 00 00 00	 DD	 $LN5@get_eo_cen
  000c4	00 00 00 00	 DD	 $LN6@get_eo_cen
  000c8	00 00 00 00	 DD	 $LN7@get_eo_cen
  000cc	00 00 00 00	 DD	 $LN8@get_eo_cen
  000d0	00 00 00 00	 DD	 $LN9@get_eo_cen
  000d4	00 00 00 00	 DD	 $LN10@get_eo_cen
  000d8	00 00 00 00	 DD	 $LN11@get_eo_cen
  000dc	00 00 00 00	 DD	 $LN12@get_eo_cen
  000e0	00 00 00 00	 DD	 $LN13@get_eo_cen
  000e4	00 00 00 00	 DD	 $LN14@get_eo_cen
?get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ENDP	; get_eo_centred_viewpoint
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z
_TEXT	SEGMENT
tv80 = -84						; size = 4
_insert$ = -16						; size = 4
_pred$ = -12						; size = 4
_succ$ = -8						; size = 4
_new_$ = -4						; size = 4
_target$ = 8						; size = 4
_sqr_range$ = 12					; size = 4
_radius$ = 16						; size = 4
_target_position$ = 20					; size = 4
?insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z PROC ; insert_entity_into_eo_target_list, COMDAT

; 361  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 362  : 	eo_target
; 363  : 		*new_,
; 364  : 		*succ,
; 365  : 		*pred;
; 366  : 
; 367  : 	int
; 368  : 		insert;
; 369  : 
; 370  : 	ASSERT (target_position);

  00009	83 7d 14 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@insert_ent
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z@4JA
  00014	83 c0 09	 add	 eax, 9
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NENIEICJ@target_position@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@insert_ent:

; 371  : 
; 372  : 	new_ = (eo_target *) malloc_fast_mem (sizeof (eo_target));

  00027	6a 20		 push	 32			; 00000020H
  00029	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0002e	89 45 fc	 mov	 DWORD PTR _new_$[ebp], eax

; 373  : 
; 374  : 	new_->target = target;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00037	89 08		 mov	 DWORD PTR [eax], ecx

; 375  : 	new_->sqr_range = sqr_range;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  0003c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _sqr_range$[ebp]
  00041	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 376  : 	new_->radius = radius;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00049	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _radius$[ebp]
  0004e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 377  : 	new_->target_position = *target_position;

  00053	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00056	83 c0 0c	 add	 eax, 12			; 0000000cH
  00059	8b 4d 14	 mov	 ecx, DWORD PTR _target_position$[ebp]
  0005c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005e	89 10		 mov	 DWORD PTR [eax], edx
  00060	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00063	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00066	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00069	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 378  : 
; 379  : 	//
; 380  : 	// sort list in ascending order of sqr_range
; 381  : 	//
; 382  : 
; 383  : 	succ = eo_target_root;

  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_root@@3PAUEO_TARGET@@A
  00071	89 45 f8	 mov	 DWORD PTR _succ$[ebp], eax

; 384  : 	pred = NULL;

  00074	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pred$[ebp], 0
$LN2@insert_ent:

; 385  : 
; 386  : 	while (TRUE)

  0007b	b8 01 00 00 00	 mov	 eax, 1
  00080	85 c0		 test	 eax, eax
  00082	0f 84 89 00 00
	00		 je	 $LN3@insert_ent

; 387  : 	{
; 388  : 		if (succ)

  00088	83 7d f8 00	 cmp	 DWORD PTR _succ$[ebp], 0
  0008c	74 26		 je	 SHORT $LN5@insert_ent

; 389  : 		{
; 390  : 			insert = sqr_range < succ->sqr_range;

  0008e	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00091	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00096	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _sqr_range$[ebp]
  0009a	76 09		 jbe	 SHORT $LN12@insert_ent
  0009c	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv80[ebp], 1
  000a3	eb 07		 jmp	 SHORT $LN13@insert_ent
$LN12@insert_ent:
  000a5	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN13@insert_ent:
  000ac	8b 4d ac	 mov	 ecx, DWORD PTR tv80[ebp]
  000af	89 4d f0	 mov	 DWORD PTR _insert$[ebp], ecx

; 391  : 		}
; 392  : 		else

  000b2	eb 07		 jmp	 SHORT $LN6@insert_ent
$LN5@insert_ent:

; 393  : 		{
; 394  : 			insert = TRUE;

  000b4	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _insert$[ebp], 1
$LN6@insert_ent:

; 395  : 		}
; 396  : 
; 397  : 		if (insert)

  000bb	83 7d f0 00	 cmp	 DWORD PTR _insert$[ebp], 0
  000bf	74 3c		 je	 SHORT $LN7@insert_ent

; 398  : 		{
; 399  : 			new_->succ = succ;

  000c1	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  000c4	8b 4d f8	 mov	 ecx, DWORD PTR _succ$[ebp]
  000c7	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 400  : 			new_->pred = pred;

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  000cd	8b 4d f4	 mov	 ecx, DWORD PTR _pred$[ebp]
  000d0	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 401  : 
; 402  : 			if (succ)

  000d3	83 7d f8 00	 cmp	 DWORD PTR _succ$[ebp], 0
  000d7	74 09		 je	 SHORT $LN8@insert_ent

; 403  : 			{
; 404  : 				succ->pred = new_;

  000d9	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _new_$[ebp]
  000df	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN8@insert_ent:

; 405  : 			}
; 406  : 
; 407  : 			if (pred)

  000e2	83 7d f4 00	 cmp	 DWORD PTR _pred$[ebp], 0
  000e6	74 0b		 je	 SHORT $LN9@insert_ent

; 408  : 			{
; 409  : 				pred->succ = new_;

  000e8	8b 45 f4	 mov	 eax, DWORD PTR _pred$[ebp]
  000eb	8b 4d fc	 mov	 ecx, DWORD PTR _new_$[ebp]
  000ee	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 410  : 			}
; 411  : 			else

  000f1	eb 08		 jmp	 SHORT $LN10@insert_ent
$LN9@insert_ent:

; 412  : 			{
; 413  : 				eo_target_root = new_;

  000f3	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  000f6	a3 00 00 00 00	 mov	 DWORD PTR ?eo_target_root@@3PAUEO_TARGET@@A, eax
$LN10@insert_ent:

; 414  : 			}
; 415  : 
; 416  : 			break;

  000fb	eb 14		 jmp	 SHORT $LN3@insert_ent
$LN7@insert_ent:

; 417  : 		}
; 418  : 
; 419  : 		pred = succ;

  000fd	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00100	89 45 f4	 mov	 DWORD PTR _pred$[ebp], eax

; 420  : 
; 421  : 		succ = succ->succ;

  00103	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00106	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00109	89 4d f8	 mov	 DWORD PTR _succ$[ebp], ecx

; 422  : 	}

  0010c	e9 6a ff ff ff	 jmp	 $LN2@insert_ent
$LN3@insert_ent:

; 423  : }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 10 00	 ret	 16			; 00000010H
?insert_entity_into_eo_target_list@@YGXPAUENTITY@@MMPAUVEC3D@@@Z ENDP ; insert_entity_into_eo_target_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?deinitialise_eo_target_list@@YGXXZ
_TEXT	SEGMENT
_succ$ = -8						; size = 4
_this_eo_target$ = -4					; size = 4
?deinitialise_eo_target_list@@YGXXZ PROC		; deinitialise_eo_target_list, COMDAT

; 337  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 338  : 	eo_target
; 339  : 		*this_eo_target,
; 340  : 		*succ;
; 341  : 
; 342  : 	this_eo_target = eo_target_root;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_root@@3PAUEO_TARGET@@A
  0000e	89 45 fc	 mov	 DWORD PTR _this_eo_target$[ebp], eax
$LN2@deinitiali:

; 343  : 
; 344  : 	while (this_eo_target)

  00011	83 7d fc 00	 cmp	 DWORD PTR _this_eo_target$[ebp], 0
  00015	74 1a		 je	 SHORT $LN3@deinitiali

; 345  : 	{
; 346  : 		succ = this_eo_target->succ;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this_eo_target$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	89 4d f8	 mov	 DWORD PTR _succ$[ebp], ecx

; 347  : 
; 348  : 		free_mem (this_eo_target);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this_eo_target$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 349  : 
; 350  : 		this_eo_target = succ;

  00029	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  0002c	89 45 fc	 mov	 DWORD PTR _this_eo_target$[ebp], eax

; 351  : 	}

  0002f	eb e0		 jmp	 SHORT $LN2@deinitiali
$LN3@deinitiali:

; 352  : 
; 353  : 	eo_target_root = NULL;

  00031	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_root@@3PAUEO_TARGET@@A, 0

; 354  : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?deinitialise_eo_target_list@@YGXXZ ENDP		; deinitialise_eo_target_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?initialise_eo_target_list@@YGXXZ
_TEXT	SEGMENT
?initialise_eo_target_list@@YGXXZ PROC			; initialise_eo_target_list, COMDAT

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 329  : 	eo_target_root = NULL;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_root@@3PAUEO_TARGET@@A, 0

; 330  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?initialise_eo_target_list@@YGXXZ ENDP			; initialise_eo_target_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_selectable_eo_target@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv134 = -268						; size = 4
tv81 = -268						; size = 4
tv177 = -264						; size = 4
tv94 = -264						; size = 4
tv74 = -264						; size = 4
_m$ = -196						; size = 36
_temp_eo_vp$ = -160					; size = 48
_vp$ = -112						; size = 48
_elevation$ = -64					; size = 4
_azimuth$ = -60						; size = 4
_flat_range$ = -56					; size = 4
_target_range$ = -52					; size = 4
_offset_vector$ = -48					; size = 12
_target_vector$ = -36					; size = 12
_target_position$ = -24					; size = 12
_source_position$ = -12					; size = 4
_boresight_target$ = -8					; size = 4
_source$ = -4						; size = 4
_target$ = 8						; size = 4
?get_selectable_eo_target@@YGHPAUENTITY@@@Z PROC	; get_selectable_eo_target, COMDAT

; 1568 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1569 : 	entity
; 1570 : 		*source,
; 1571 : 		*boresight_target;
; 1572 : 
; 1573 : 	vec3d
; 1574 : 		*source_position,
; 1575 : 		target_position,
; 1576 : 		target_vector,
; 1577 : 		offset_vector;
; 1578 : 
; 1579 : 	float
; 1580 : 		target_range,
; 1581 : 		flat_range,
; 1582 : 		azimuth,
; 1583 : 		elevation;
; 1584 : 
; 1585 : 	viewpoint
; 1586 : 		vp,
; 1587 : 		temp_eo_vp;
; 1588 : 
; 1589 : 	matrix3x3
; 1590 : 		m;
; 1591 : 
; 1592 : 	ASSERT (target);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@get_select
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_selectable_eo_target@@YGHPAUENTITY@@@Z@4JA
  00017	83 c0 18	 add	 eax, 24			; 00000018H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_select:

; 1593 : 
; 1594 : 	//
; 1595 : 	// check alive (gunship targets may be dead)
; 1596 : 	//
; 1597 : 
; 1598 : 	if (!get_local_entity_int_value (target, INT_TYPE_ALIVE))

  0002a	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN10@get_select
  00030	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  0003b	eb 20		 jmp	 SHORT $LN11@get_select
$LN10@get_select:
  0003d	68 3e 06 00 00	 push	 1598			; 0000063eH
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00053	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN11@get_select:
  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 0c		 je	 SHORT $LN12@get_select
  00066	c7 85 f4 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR tv81[ebp], 7
  00070	eb 20		 jmp	 SHORT $LN13@get_select
$LN12@get_select:
  00072	68 3e 06 00 00	 push	 1598			; 0000063eH
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00088	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN13@get_select:
  00092	6a 07		 push	 7
  00094	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00097	52		 push	 edx
  00098	69 85 f8 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv74[ebp], 1116
  000a2	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv81[ebp]
  000a8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000af	ff d2		 call	 edx
  000b1	85 c0		 test	 eax, eax
  000b3	75 07		 jne	 SHORT $LN3@get_select

; 1599 : 	{
; 1600 : 		return (FALSE);

  000b5	33 c0		 xor	 eax, eax
  000b7	e9 70 02 00 00	 jmp	 $LN1@get_select
$LN3@get_select:

; 1601 : 	}
; 1602 : 
; 1603 : 	//
; 1604 : 	// check range
; 1605 : 	//
; 1606 : 
; 1607 : 	source = get_gunship_entity ();

  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c1	89 45 fc	 mov	 DWORD PTR _source$[ebp], eax

; 1608 : 
; 1609 : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  000c4	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  000c8	74 0d		 je	 SHORT $LN14@get_select
  000ca	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], ecx
  000d5	eb 24		 jmp	 SHORT $LN15@get_select
$LN14@get_select:
  000d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_eo_target@@YGHPAUENTITY@@@Z@4JA
  000dd	83 c2 29	 add	 edx, 41			; 00000029H
  000e0	52		 push	 edx
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f1	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN15@get_select:
  000fb	b9 01 00 00 00	 mov	 ecx, 1
  00100	85 c9		 test	 ecx, ecx
  00102	74 0c		 je	 SHORT $LN16@get_select
  00104	c7 85 f4 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv134[ebp], 8
  0010e	eb 24		 jmp	 SHORT $LN17@get_select
$LN16@get_select:
  00110	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_eo_target@@YGHPAUENTITY@@@Z@4JA
  00116	83 c2 29	 add	 edx, 41			; 00000029H
  00119	52		 push	 edx
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012a	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
$LN17@get_select:
  00134	6a 08		 push	 8
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _source$[ebp]
  00139	51		 push	 ecx
  0013a	6b 95 f8 fe ff
	ff 60		 imul	 edx, DWORD PTR tv94[ebp], 96
  00141	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv134[ebp]
  00147	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0014e	ff d1		 call	 ecx
  00150	89 45 f4	 mov	 DWORD PTR _source_position$[ebp], eax

; 1610 : 
; 1611 : 	get_local_entity_target_point (target, &target_position);

  00153	8d 45 e8	 lea	 eax, DWORD PTR _target_position$[ebp]
  00156	50		 push	 eax
  00157	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  0015a	51		 push	 ecx
  0015b	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 1612 : 
; 1613 : 	target_range = get_3d_range (source_position, &target_position);

  00160	8d 45 e8	 lea	 eax, DWORD PTR _target_position$[ebp]
  00163	50		 push	 eax
  00164	8b 4d f4	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00167	51		 push	 ecx
  00168	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  0016d	d9 5d cc	 fstp	 DWORD PTR _target_range$[ebp]

; 1614 : 
; 1615 : 	if (target_range > eo_max_visual_range)

  00170	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00175	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  0017c	76 07		 jbe	 SHORT $LN4@get_select

; 1616 : 	{
; 1617 : 		return (FALSE);

  0017e	33 c0		 xor	 eax, eax
  00180	e9 a7 01 00 00	 jmp	 $LN1@get_select
$LN4@get_select:

; 1618 : 	}
; 1619 : 
; 1620 : 	//
; 1621 : 	// check azimuth and elevation
; 1622 : 	//
; 1623 : 
; 1624 : 	get_eo_centred_viewpoint (&vp);

  00185	8d 45 90	 lea	 eax, DWORD PTR _vp$[ebp]
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_eo_centred_viewpoint

; 1625 : 
; 1626 : 	target_vector.x = target_position.x - vp.position.x;

  0018e	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  00193	f3 0f 5c 45 90	 subss	 xmm0, DWORD PTR _vp$[ebp]
  00198	f3 0f 11 45 dc	 movss	 DWORD PTR _target_vector$[ebp], xmm0

; 1627 : 	target_vector.y = target_position.y - vp.position.y;

  0019d	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _target_position$[ebp+4]
  001a2	f3 0f 5c 45 94	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  001a7	f3 0f 11 45 e0	 movss	 DWORD PTR _target_vector$[ebp+4], xmm0

; 1628 : 	target_vector.z = target_position.z - vp.position.z;

  001ac	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  001b1	f3 0f 5c 45 98	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  001b6	f3 0f 11 45 e4	 movss	 DWORD PTR _target_vector$[ebp+8], xmm0

; 1629 : 
; 1630 : 	multiply_transpose_matrix3x3_vec3d (&offset_vector, vp.attitude, &target_vector);

  001bb	8d 45 dc	 lea	 eax, DWORD PTR _target_vector$[ebp]
  001be	50		 push	 eax
  001bf	8d 4d 9c	 lea	 ecx, DWORD PTR _vp$[ebp+12]
  001c2	51		 push	 ecx
  001c3	8d 55 d0	 lea	 edx, DWORD PTR _offset_vector$[ebp]
  001c6	52		 push	 edx
  001c7	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 1631 : 
; 1632 : 	azimuth = atan2 (offset_vector.x, offset_vector.z);

  001cc	51		 push	 ecx
  001cd	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+8]
  001d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d7	51		 push	 ecx
  001d8	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  001dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e2	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  001e7	d9 5d c4	 fstp	 DWORD PTR _azimuth$[ebp]

; 1633 : 
; 1634 : 	if (azimuth < eo_min_azimuth)

  001ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  001f2	0f 2f 45 c4	 comiss	 xmm0, DWORD PTR _azimuth$[ebp]
  001f6	76 07		 jbe	 SHORT $LN5@get_select

; 1635 : 	{
; 1636 : 		return (FALSE);

  001f8	33 c0		 xor	 eax, eax
  001fa	e9 2d 01 00 00	 jmp	 $LN1@get_select
$LN5@get_select:

; 1637 : 	}
; 1638 : 
; 1639 : 	if (azimuth > eo_max_azimuth)

  001ff	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _azimuth$[ebp]
  00204	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  0020b	76 07		 jbe	 SHORT $LN6@get_select

; 1640 : 	{
; 1641 : 		return (FALSE);

  0020d	33 c0		 xor	 eax, eax
  0020f	e9 18 01 00 00	 jmp	 $LN1@get_select
$LN6@get_select:

; 1642 : 	}
; 1643 : 
; 1644 : 	flat_range = sqrt ((offset_vector.x * offset_vector.x) + (offset_vector.z * offset_vector.z));

  00214	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  00219	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _offset_vector$[ebp]
  0021e	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  00223	f3 0f 59 4d d8	 mulss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  00228	f3 0f 58 c1	 addss	 xmm0, xmm1
  0022c	51		 push	 ecx
  0022d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00232	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00237	d9 5d c8	 fstp	 DWORD PTR _flat_range$[ebp]

; 1645 : 
; 1646 : 	elevation = atan2 (offset_vector.y, flat_range);

  0023a	51		 push	 ecx
  0023b	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	51		 push	 ecx
  00246	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+4]
  0024b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00250	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00255	d9 5d c0	 fstp	 DWORD PTR _elevation$[ebp]

; 1647 : 
; 1648 : 	if (elevation < eo_min_elevation)

  00258	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  00260	0f 2f 45 c0	 comiss	 xmm0, DWORD PTR _elevation$[ebp]
  00264	76 07		 jbe	 SHORT $LN7@get_select

; 1649 : 	{
; 1650 : 		return (FALSE);

  00266	33 c0		 xor	 eax, eax
  00268	e9 bf 00 00 00	 jmp	 $LN1@get_select
$LN7@get_select:

; 1651 : 	}
; 1652 : 
; 1653 : 	if (elevation > eo_max_elevation)

  0026d	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _elevation$[ebp]
  00272	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  00279	76 07		 jbe	 SHORT $LN8@get_select

; 1654 : 	{
; 1655 : 		return (FALSE);

  0027b	33 c0		 xor	 eax, eax
  0027d	e9 aa 00 00 00	 jmp	 $LN1@get_select
$LN8@get_select:

; 1656 : 	}
; 1657 : 
; 1658 : 	//
; 1659 : 	// check line of sight
; 1660 : 	//
; 1661 : 
; 1662 : 	temp_eo_vp = eo_vp;

  00282	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00287	be 00 00 00 00	 mov	 esi, OFFSET ?eo_vp@@3UVIEWPOINT@@A ; eo_vp
  0028c	8d bd 60 ff ff
	ff		 lea	 edi, DWORD PTR _temp_eo_vp$[ebp]
  00292	f3 a5		 rep movsd

; 1663 : 
; 1664 : 	eo_vp.position = vp.position;

  00294	8b 45 90	 mov	 eax, DWORD PTR _vp$[ebp]
  00297	a3 00 00 00 00	 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A, eax
  0029c	8b 4d 94	 mov	 ecx, DWORD PTR _vp$[ebp+4]
  0029f	89 0d 04 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4, ecx
  002a5	8b 55 98	 mov	 edx, DWORD PTR _vp$[ebp+8]
  002a8	89 15 08 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8, edx

; 1665 : 
; 1666 : 	get_3d_transformation_matrix (m, azimuth, elevation, 0.0);

  002ae	51		 push	 ecx
  002af	0f 57 c0	 xorps	 xmm0, xmm0
  002b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b7	51		 push	 ecx
  002b8	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _elevation$[ebp]
  002bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c2	51		 push	 ecx
  002c3	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _azimuth$[ebp]
  002c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002cd	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _m$[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1667 : 
; 1668 : 	multiply_matrix3x3_matrix3x3 (eo_vp.attitude, m, vp.attitude);

  002d9	8d 45 9c	 lea	 eax, DWORD PTR _vp$[ebp+12]
  002dc	50		 push	 eax
  002dd	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _m$[ebp]
  002e3	51		 push	 ecx
  002e4	68 0c 00 00 00	 push	 OFFSET ?eo_vp@@3UVIEWPOINT@@A+12
  002e9	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3

; 1669 : 
; 1670 : 	boresight_target = get_eo_boresight_target ();

  002ee	e8 00 00 00 00	 call	 ?get_eo_boresight_target@@YGPAUENTITY@@XZ ; get_eo_boresight_target
  002f3	89 45 f8	 mov	 DWORD PTR _boresight_target$[ebp], eax

; 1671 : 
; 1672 : 	eo_vp = temp_eo_vp;

  002f6	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002fb	8d b5 60 ff ff
	ff		 lea	 esi, DWORD PTR _temp_eo_vp$[ebp]
  00301	bf 00 00 00 00	 mov	 edi, OFFSET ?eo_vp@@3UVIEWPOINT@@A ; eo_vp
  00306	f3 a5		 rep movsd

; 1673 : 
; 1674 : 	return (boresight_target == target);

  00308	8b 45 f8	 mov	 eax, DWORD PTR _boresight_target$[ebp]
  0030b	3b 45 08	 cmp	 eax, DWORD PTR _target$[ebp]
  0030e	75 0c		 jne	 SHORT $LN18@get_select
  00310	c7 85 f8 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv177[ebp], 1
  0031a	eb 0a		 jmp	 SHORT $LN19@get_select
$LN18@get_select:
  0031c	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv177[ebp], 0
$LN19@get_select:
  00326	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR tv177[ebp]
$LN1@get_select:

; 1675 : }

  0032c	5f		 pop	 edi
  0032d	5e		 pop	 esi
  0032e	5b		 pop	 ebx
  0032f	8b e5		 mov	 esp, ebp
  00331	5d		 pop	 ebp
  00332	c2 04 00	 ret	 4
?get_selectable_eo_target@@YGHPAUENTITY@@@Z ENDP	; get_selectable_eo_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?update_eo_max_visual_range@@YGXXZ
_TEXT	SEGMENT
tv67 = -68						; size = 4
?update_eo_max_visual_range@@YGXXZ PROC			; update_eo_max_visual_range, COMDAT

; 2500 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2501 : 	//see 3d_init.c & 3dview.c
; 2502 : 	//eo_max_visual_range = main_3d_env->fog_end;
; 2503 : 
; 2504 : 	get_3d_fog_distances (main_3d_env, &fog_start, &fog_end);

  00009	68 00 00 00 00	 push	 OFFSET ?fog_end@@3MA	; fog_end
  0000e	68 00 00 00 00	 push	 OFFSET ?fog_start@@3MA	; fog_start
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?get_3d_fog_distances@@YGXPAUENV_3D@@PAM1@Z ; get_3d_fog_distances

; 2505 : 
; 2506 : 	//eo_max_visual_range = fog_end;
; 2507 : 
; 2508 : 	switch (eo_sensor)

  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; eo_sensor
  00023	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
  00026	8b 4d bc	 mov	 ecx, DWORD PTR tv67[ebp]
  00029	83 e9 03	 sub	 ecx, 3
  0002c	89 4d bc	 mov	 DWORD PTR tv67[ebp], ecx
  0002f	83 7d bc 04	 cmp	 DWORD PTR tv67[ebp], 4
  00033	0f 87 82 00 00
	00		 ja	 $LN8@update_eo_
  00039	8b 55 bc	 mov	 edx, DWORD PTR tv67[ebp]
  0003c	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@update_eo_[edx*4]
$LN4@update_eo_:

; 2509 : 	{
; 2510 : 		case TARGET_ACQUISITION_SYSTEM_DTV:
; 2511 : 		case TARGET_ACQUISITION_SYSTEM_DVO:
; 2512 : 		{
; 2513 : 			eo_max_visual_range = fog_end - 2000.0;

  00043	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fog_end@@3MA
  0004b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@409f400000000000
  00053	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00057	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_visual_range@@3MA, xmm0

; 2514 : 			break;

  0005f	eb 6d		 jmp	 SHORT $LN2@update_eo_
$LN5@update_eo_:

; 2515 : 		}
; 2516 : 		case TARGET_ACQUISITION_SYSTEM_FLIR:
; 2517 : 		{
; 2518 : 			eo_max_visual_range = fog_end - 500.0;

  00061	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fog_end@@3MA
  00069	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@407f400000000000
  00071	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00075	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_visual_range@@3MA, xmm0

; 2519 : 			break;

  0007d	eb 4f		 jmp	 SHORT $LN2@update_eo_
$LN6@update_eo_:

; 2520 : 		}
; 2521 : 		case TARGET_ACQUISITION_SYSTEM_LLLTV:
; 2522 : 		{
; 2523 : 			eo_max_visual_range = fog_end - 2000.0;

  0007f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fog_end@@3MA
  00087	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@409f400000000000
  0008f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00093	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_visual_range@@3MA, xmm0

; 2524 : 			break;

  0009b	eb 31		 jmp	 SHORT $LN2@update_eo_
$LN7@update_eo_:

; 2525 : 		}
; 2526 : 		case TARGET_ACQUISITION_SYSTEM_PERISCOPE:
; 2527 : 		{
; 2528 : 			eo_max_visual_range = fog_end - 500.0;

  0009d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fog_end@@3MA
  000a5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@407f400000000000
  000ad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_visual_range@@3MA, xmm0

; 2529 : 			break;

  000b9	eb 13		 jmp	 SHORT $LN2@update_eo_
$LN8@update_eo_:

; 2530 : 		}
; 2531 : 		default:
; 2532 : 		{
; 2533 : 			debug_fatal ("Invalid eo sensor = %d", eo_sensor);

  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; eo_sensor
  000c0	50		 push	 eax
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FCCNOFJC@Invalid?5eo?5sensor?5?$DN?5?$CFd@
  000c6	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000cb	83 c4 08	 add	 esp, 8
$LN2@update_eo_:

; 2534 : 			break;
; 2535 : 		}
; 2536 : 	}
; 2537 : }

  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
  000d5	0f 1f 00	 npad	 3
$LN10@update_eo_:
  000d8	00 00 00 00	 DD	 $LN5@update_eo_
  000dc	00 00 00 00	 DD	 $LN4@update_eo_
  000e0	00 00 00 00	 DD	 $LN4@update_eo_
  000e4	00 00 00 00	 DD	 $LN6@update_eo_
  000e8	00 00 00 00	 DD	 $LN7@update_eo_
?update_eo_max_visual_range@@YGXXZ ENDP			; update_eo_max_visual_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?slew_eo@@YGXMM@Z
_TEXT	SEGMENT
tv195 = -192						; size = 8
tv191 = -192						; size = 8
tv227 = -184						; size = 8
tv225 = -184						; size = 8
tv148 = -184						; size = 4
tv81 = -184						; size = 4
tv73 = -184						; size = 4
tv141 = -180						; size = 4
tv82 = -180						; size = 4
tv74 = -180						; size = 4
_m$ = -112						; size = 36
_vp$ = -76						; size = 48
_frame_slew_rate$ = -28					; size = 4
_frame_delta_eo_elevation$ = -24			; size = 4
_delta_eo_elevation$ = -20				; size = 4
_frame_delta_eo_azimuth$ = -16				; size = 4
_delta_eo_azimuth$ = -12				; size = 4
_adjusted_azimuth$ = -8					; size = 4
_adjusted_elevation$ = -4				; size = 4
_elevation$ = 8						; size = 4
_azimuth$ = 12						; size = 4
?slew_eo@@YGXMM@Z PROC					; slew_eo, COMDAT

; 1411 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1412 : 	float
; 1413 : 		adjusted_elevation,
; 1414 : 		adjusted_azimuth,
; 1415 : 		 delta_eo_azimuth,
; 1416 : 		 frame_delta_eo_azimuth,
; 1417 : 		 delta_eo_elevation,
; 1418 : 		 frame_delta_eo_elevation;
; 1419 : 
; 1420 : 
; 1421 : 	float frame_slew_rate = rad (60.0) * get_delta_time ();

  0000c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00014	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0c15236000000
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	f3 0f 11 45 e4	 movss	 DWORD PTR _frame_slew_rate$[ebp], xmm0

; 1422 : 
; 1423 : 	viewpoint
; 1424 : 		vp;
; 1425 : 
; 1426 : 	matrix3x3
; 1427 : 		m;
; 1428 : 
; 1429 : 	get_eo_centred_viewpoint (&vp);

  00025	8d 45 b4	 lea	 eax, DWORD PTR _vp$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_eo_centred_viewpoint

; 1430 : 
; 1431 : 	delta_eo_azimuth = azimuth - eo_azimuth;

  0002e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _azimuth$[ebp]
  00033	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  0003b	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_eo_azimuth$[ebp], xmm0

; 1432 : 	frame_delta_eo_azimuth = bound (delta_eo_azimuth, -frame_slew_rate, frame_slew_rate);

  00040	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  00045	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0004c	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _delta_eo_azimuth$[ebp]
  00050	76 16		 jbe	 SHORT $LN9@slew_eo
  00052	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  00057	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0005e	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR tv74[ebp], xmm0
  00066	eb 37		 jmp	 SHORT $LN10@slew_eo
$LN9@slew_eo:
  00068	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _delta_eo_azimuth$[ebp]
  0006d	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  00071	76 0f		 jbe	 SHORT $LN7@slew_eo
  00073	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  00078	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv73[ebp], xmm0
  00080	eb 0d		 jmp	 SHORT $LN8@slew_eo
$LN7@slew_eo:
  00082	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _delta_eo_azimuth$[ebp]
  00087	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv73[ebp], xmm0
$LN8@slew_eo:
  0008f	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv73[ebp]
  00097	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR tv74[ebp], xmm0
$LN10@slew_eo:
  0009f	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv74[ebp]
  000a7	f3 0f 11 45 f0	 movss	 DWORD PTR _frame_delta_eo_azimuth$[ebp], xmm0

; 1433 : 	eo_azimuth += frame_delta_eo_azimuth;

  000ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  000b4	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _frame_delta_eo_azimuth$[ebp]
  000b9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 1434 : 
; 1435 : 	delta_eo_elevation = elevation - eo_elevation;

  000c1	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _elevation$[ebp]
  000c6	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  000ce	f3 0f 11 45 ec	 movss	 DWORD PTR _delta_eo_elevation$[ebp], xmm0

; 1436 : 	frame_delta_eo_elevation = bound (delta_eo_elevation, -frame_slew_rate, frame_slew_rate);

  000d3	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  000d8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000df	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _delta_eo_elevation$[ebp]
  000e3	76 16		 jbe	 SHORT $LN13@slew_eo
  000e5	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  000ea	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000f1	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR tv82[ebp], xmm0
  000f9	eb 37		 jmp	 SHORT $LN14@slew_eo
$LN13@slew_eo:
  000fb	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _delta_eo_elevation$[ebp]
  00100	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  00104	76 0f		 jbe	 SHORT $LN11@slew_eo
  00106	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _frame_slew_rate$[ebp]
  0010b	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv81[ebp], xmm0
  00113	eb 0d		 jmp	 SHORT $LN12@slew_eo
$LN11@slew_eo:
  00115	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _delta_eo_elevation$[ebp]
  0011a	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv81[ebp], xmm0
$LN12@slew_eo:
  00122	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv81[ebp]
  0012a	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR tv82[ebp], xmm0
$LN14@slew_eo:
  00132	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv82[ebp]
  0013a	f3 0f 11 45 e8	 movss	 DWORD PTR _frame_delta_eo_elevation$[ebp], xmm0

; 1437 : 	eo_elevation += frame_delta_eo_elevation;

  0013f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00147	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _frame_delta_eo_elevation$[ebp]
  0014c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 1438 : 
; 1439 : 	// apply camera shake
; 1440 : 	if (gun_is_firing)

  00154	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gun_is_firing@@3HA, 0 ; gun_is_firing
  0015b	0f 84 8a 00 00
	00		 je	 $LN2@slew_eo

; 1441 : 	{
; 1442 : 		adjusted_elevation = eo_elevation + sfrand1norm() * MAX_GUN_SHAKE_DEFLECTION;

  00161	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_elevation@@3MA
  00169	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv225[ebp], xmm0
  00171	e8 00 00 00 00	 call	 ?sfrand1norm@@YGNXZ	; sfrand1norm
  00176	dd 9d 40 ff ff
	ff		 fstp	 QWORD PTR tv191[ebp]
  0017c	f2 0f 10 85 40
	ff ff ff	 movsd	 xmm0, QWORD PTR tv191[ebp]
  00184	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f5c987100000000
  0018c	f2 0f 10 8d 48
	ff ff ff	 movsd	 xmm1, QWORD PTR tv225[ebp]
  00194	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00198	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0019c	f3 0f 11 45 fc	 movss	 DWORD PTR _adjusted_elevation$[ebp], xmm0

; 1443 : 		adjusted_azimuth = eo_azimuth + sfrand1norm() * 0.5 * MAX_GUN_SHAKE_DEFLECTION;

  001a1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_azimuth@@3MA
  001a9	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv227[ebp], xmm0
  001b1	e8 00 00 00 00	 call	 ?sfrand1norm@@YGNXZ	; sfrand1norm
  001b6	dd 9d 40 ff ff
	ff		 fstp	 QWORD PTR tv195[ebp]
  001bc	f2 0f 10 85 40
	ff ff ff	 movsd	 xmm0, QWORD PTR tv195[ebp]
  001c4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  001cc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f5c987100000000
  001d4	f2 0f 10 8d 48
	ff ff ff	 movsd	 xmm1, QWORD PTR tv227[ebp]
  001dc	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001e0	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001e4	f3 0f 11 45 f8	 movss	 DWORD PTR _adjusted_azimuth$[ebp], xmm0

; 1444 : 	}
; 1445 : 	else

  001e9	eb 1a		 jmp	 SHORT $LN3@slew_eo
$LN2@slew_eo:

; 1446 : 	{
; 1447 : 		adjusted_elevation = eo_elevation;

  001eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  001f3	f3 0f 11 45 fc	 movss	 DWORD PTR _adjusted_elevation$[ebp], xmm0

; 1448 : 		adjusted_azimuth = eo_azimuth;

  001f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00200	f3 0f 11 45 f8	 movss	 DWORD PTR _adjusted_azimuth$[ebp], xmm0
$LN3@slew_eo:

; 1449 : 	}
; 1450 : 
; 1451 : 	eo_vp.position = vp.position;

  00205	8b 45 b4	 mov	 eax, DWORD PTR _vp$[ebp]
  00208	a3 00 00 00 00	 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A, eax
  0020d	8b 4d b8	 mov	 ecx, DWORD PTR _vp$[ebp+4]
  00210	89 0d 04 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4, ecx
  00216	8b 55 bc	 mov	 edx, DWORD PTR _vp$[ebp+8]
  00219	89 15 08 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8, edx

; 1452 : 
; 1453 : 	get_3d_transformation_matrix (m, adjusted_azimuth, adjusted_elevation, 0.0);

  0021f	51		 push	 ecx
  00220	0f 57 c0	 xorps	 xmm0, xmm0
  00223	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00228	51		 push	 ecx
  00229	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _adjusted_elevation$[ebp]
  0022e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00233	51		 push	 ecx
  00234	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _adjusted_azimuth$[ebp]
  00239	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023e	8d 45 90	 lea	 eax, DWORD PTR _m$[ebp]
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1454 : 	multiply_matrix3x3_matrix3x3 (eo_vp.attitude, m, vp.attitude);

  00247	8d 45 c0	 lea	 eax, DWORD PTR _vp$[ebp+12]
  0024a	50		 push	 eax
  0024b	8d 4d 90	 lea	 ecx, DWORD PTR _m$[ebp]
  0024e	51		 push	 ecx
  0024f	68 0c 00 00 00	 push	 OFFSET ?eo_vp@@3UVIEWPOINT@@A+12
  00254	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3

; 1455 : 
; 1456 : 	eo_on_target = FALSE;

  00259	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_on_target@@3HA, 0 ; eo_on_target

; 1457 : 
; 1458 : 	if (!eo_low_light && get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET))

  00263	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light
  0026a	0f 85 e1 00 00
	00		 jne	 $LN5@slew_eo
  00270	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00277	74 0f		 je	 SHORT $LN15@slew_eo
  00279	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0027e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00280	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv141[ebp], ecx
  00286	eb 20		 jmp	 SHORT $LN16@slew_eo
$LN15@slew_eo:
  00288	68 b2 05 00 00	 push	 1458			; 000005b2H
  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00292	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00298	52		 push	 edx
  00299	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN16@slew_eo:
  002a8	b8 01 00 00 00	 mov	 eax, 1
  002ad	85 c0		 test	 eax, eax
  002af	74 0c		 je	 SHORT $LN17@slew_eo
  002b1	c7 85 48 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv148[ebp], 38 ; 00000026H
  002bb	eb 20		 jmp	 SHORT $LN18@slew_eo
$LN17@slew_eo:
  002bd	68 b2 05 00 00	 push	 1458			; 000005b2H
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002cd	51		 push	 ecx
  002ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d3	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
$LN18@slew_eo:
  002dd	6a 26		 push	 38			; 00000026H
  002df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002e5	52		 push	 edx
  002e6	69 85 4c ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv141[ebp], 180
  002f0	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv148[ebp]
  002f6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  002fd	ff d2		 call	 edx
  002ff	85 c0		 test	 eax, eax
  00301	74 4e		 je	 SHORT $LN5@slew_eo

; 1459 : 	{
; 1460 : 		if
; 1461 : 		(
; 1462 : 			(delta_eo_azimuth >= rad (-5.0)) &&
; 1463 : 			(delta_eo_azimuth <= rad (5.0)) &&
; 1464 : 			(delta_eo_elevation >= rad (-5.0)) &&

  00303	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _delta_eo_azimuth$[ebp]
  00308	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfb6571848000000
  00310	72 3f		 jb	 SHORT $LN5@slew_eo
  00312	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _delta_eo_azimuth$[ebp]
  00317	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb6571848000000
  0031f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00323	72 2c		 jb	 SHORT $LN5@slew_eo
  00325	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _delta_eo_elevation$[ebp]
  0032a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfb6571848000000
  00332	72 1d		 jb	 SHORT $LN5@slew_eo
  00334	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _delta_eo_elevation$[ebp]
  00339	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb6571848000000
  00341	66 0f 2f c8	 comisd	 xmm1, xmm0
  00345	72 0a		 jb	 SHORT $LN5@slew_eo

; 1465 : 			(delta_eo_elevation <= rad (5.0))
; 1466 : 		)
; 1467 : 		{
; 1468 : 			eo_on_target = TRUE;

  00347	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?eo_on_target@@3HA, 1 ; eo_on_target
$LN5@slew_eo:

; 1469 : 		}
; 1470 : 	}
; 1471 : }

  00351	5f		 pop	 edi
  00352	5e		 pop	 esi
  00353	5b		 pop	 ebx
  00354	8b e5		 mov	 esp, ebp
  00356	5d		 pop	 ebp
  00357	c2 08 00	 ret	 8
?slew_eo@@YGXMM@Z ENDP					; slew_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?cpg_report_identified_target@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv158 = -88						; size = 4
tv151 = -84						; size = 4
tv143 = -80						; size = 4
tv131 = -76						; size = 4
tv78 = -76						; size = 4
tv91 = -72						; size = 4
tv71 = -72						; size = 4
_allied$1 = -4						; size = 4
_target$ = 8						; size = 4
?cpg_report_identified_target@@YGXPAUENTITY@@@Z PROC	; cpg_report_identified_target, COMDAT

; 2898 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2899 : 	if (get_gunship_entity() && target)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	0f 84 25 02 00
	00		 je	 $LN5@cpg_report
  00016	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0001a	0f 84 1b 02 00
	00		 je	 $LN5@cpg_report

; 2900 : 	{
; 2901 : 		if (get_local_entity_int_value(target, INT_TYPE_CPG_IDENTIFIED))

  00020	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00024	74 0a		 je	 SHORT $LN7@cpg_report
  00026	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	89 4d b8	 mov	 DWORD PTR tv71[ebp], ecx
  0002e	eb 1d		 jmp	 SHORT $LN8@cpg_report
$LN7@cpg_report:
  00030	68 55 0b 00 00	 push	 2901			; 00000b55H
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00040	52		 push	 edx
  00041	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00046	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN8@cpg_report:
  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	85 c0		 test	 eax, eax
  00054	74 09		 je	 SHORT $LN9@cpg_report
  00056	c7 45 b4 22 00
	00 00		 mov	 DWORD PTR tv78[ebp], 34	; 00000022H
  0005d	eb 1d		 jmp	 SHORT $LN10@cpg_report
$LN9@cpg_report:
  0005f	68 55 0b 00 00	 push	 2901			; 00000b55H
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00075	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN10@cpg_report:
  0007c	6a 22		 push	 34			; 00000022H
  0007e	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00081	52		 push	 edx
  00082	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv71[ebp], 1116
  00089	8b 4d b4	 mov	 ecx, DWORD PTR tv78[ebp]
  0008c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00093	ff d2		 call	 edx
  00095	85 c0		 test	 eax, eax
  00097	0f 84 9e 01 00
	00		 je	 $LN5@cpg_report

; 2902 : 		{
; 2903 : 			int allied = get_local_entity_int_value (get_gunship_entity (), INT_TYPE_SIDE) == get_local_entity_int_value (target, INT_TYPE_SIDE);

  0009d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000a4	74 0c		 je	 SHORT $LN11@cpg_report
  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ad	89 4d b8	 mov	 DWORD PTR tv91[ebp], ecx
  000b0	eb 21		 jmp	 SHORT $LN12@cpg_report
$LN11@cpg_report:
  000b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_report_identified_target@@YGXPAUENTITY@@@Z@4JA
  000b8	83 c2 05	 add	 edx, 5
  000bb	52		 push	 edx
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cc	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN12@cpg_report:
  000d3	b9 01 00 00 00	 mov	 ecx, 1
  000d8	85 c9		 test	 ecx, ecx
  000da	74 09		 je	 SHORT $LN13@cpg_report
  000dc	c7 45 b4 bb 00
	00 00		 mov	 DWORD PTR tv131[ebp], 187 ; 000000bbH
  000e3	eb 21		 jmp	 SHORT $LN14@cpg_report
$LN13@cpg_report:
  000e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_report_identified_target@@YGXPAUENTITY@@@Z@4JA
  000eb	83 c2 05	 add	 edx, 5
  000ee	52		 push	 edx
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ff	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN14@cpg_report:
  00106	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0010a	74 0a		 je	 SHORT $LN15@cpg_report
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  0010f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00111	89 55 b0	 mov	 DWORD PTR tv143[ebp], edx
  00114	eb 21		 jmp	 SHORT $LN16@cpg_report
$LN15@cpg_report:
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??cpg_report_identified_target@@YGXPAUENTITY@@@Z@4JA
  0011b	83 c0 05	 add	 eax, 5
  0011e	50		 push	 eax
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00130	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN16@cpg_report:
  00137	ba 01 00 00 00	 mov	 edx, 1
  0013c	85 d2		 test	 edx, edx
  0013e	74 09		 je	 SHORT $LN17@cpg_report
  00140	c7 45 ac bb 00
	00 00		 mov	 DWORD PTR tv151[ebp], 187 ; 000000bbH
  00147	eb 21		 jmp	 SHORT $LN18@cpg_report
$LN17@cpg_report:
  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??cpg_report_identified_target@@YGXPAUENTITY@@@Z@4JA
  0014e	83 c0 05	 add	 eax, 5
  00151	50		 push	 eax
  00152	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00157	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0015d	51		 push	 ecx
  0015e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00163	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN18@cpg_report:
  0016a	68 bb 00 00 00	 push	 187			; 000000bbH
  0016f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00175	52		 push	 edx
  00176	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv91[ebp], 1116
  0017d	8b 4d b4	 mov	 ecx, DWORD PTR tv131[ebp]
  00180	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00187	ff d2		 call	 edx
  00189	8b f0		 mov	 esi, eax
  0018b	68 bb 00 00 00	 push	 187			; 000000bbH
  00190	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00193	50		 push	 eax
  00194	69 4d b0 5c 04
	00 00		 imul	 ecx, DWORD PTR tv143[ebp], 1116
  0019b	8b 55 ac	 mov	 edx, DWORD PTR tv151[ebp]
  0019e	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  001a5	ff d0		 call	 eax
  001a7	3b f0		 cmp	 esi, eax
  001a9	75 09		 jne	 SHORT $LN19@cpg_report
  001ab	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv158[ebp], 1
  001b2	eb 07		 jmp	 SHORT $LN20@cpg_report
$LN19@cpg_report:
  001b4	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN20@cpg_report:
  001bb	8b 4d a8	 mov	 ecx, DWORD PTR tv158[ebp]
  001be	89 4d fc	 mov	 DWORD PTR _allied$1[ebp], ecx

; 2904 : 
; 2905 : 			if (allied)

  001c1	83 7d fc 00	 cmp	 DWORD PTR _allied$1[ebp], 0
  001c5	74 3b		 je	 SHORT $LN4@cpg_report

; 2906 : 				play_client_server_cpg_message(get_gunship_entity (), 1.0, 30.0, SPEECH_CATEGORY_CPG_SYSTEMS, -1.0, SPEECH_CPG_FRIENDLY);

  001c7	6a 72		 push	 114			; 00000072H
  001c9	51		 push	 ecx
  001ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d7	6a 04		 push	 4
  001d9	51		 push	 ecx
  001da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  001e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e7	51		 push	 ecx
  001e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message

; 2907 : 			else

  00200	eb 39		 jmp	 SHORT $LN5@cpg_report
$LN4@cpg_report:

; 2908 : 				play_client_server_cpg_message(get_gunship_entity (), 1.0, 30.0, SPEECH_CATEGORY_CPG_SYSTEMS, -1.0,	SPEECH_CPG_ENEMY);

  00202	6a 71		 push	 113			; 00000071H
  00204	51		 push	 ecx
  00205	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0020d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00212	6a 04		 push	 4
  00214	51		 push	 ecx
  00215	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  0021d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00222	51		 push	 ecx
  00223	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0022b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00230	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00235	50		 push	 eax
  00236	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN5@cpg_report:

; 2909 : 		}
; 2910 : 	}
; 2911 : }

  0023b	5f		 pop	 edi
  0023c	5e		 pop	 esi
  0023d	5b		 pop	 ebx
  0023e	8b e5		 mov	 esp, ebp
  00240	5d		 pop	 ebp
  00241	c2 04 00	 ret	 4
?cpg_report_identified_target@@YGXPAUENTITY@@@Z ENDP	; cpg_report_identified_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?cpg_report_next_prev_target@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv139 = -88						; size = 4
tv132 = -84						; size = 4
tv92 = -80						; size = 4
tv152 = -76						; size = 4
tv80 = -76						; size = 4
tv145 = -72						; size = 4
tv72 = -72						; size = 4
_allied$1 = -4						; size = 4
_target$ = 8						; size = 4
?cpg_report_next_prev_target@@YGXPAUENTITY@@@Z PROC	; cpg_report_next_prev_target, COMDAT

; 2915 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2916 : 	if (get_gunship_entity() && target)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	0f 84 65 02 00
	00		 je	 $LN7@cpg_report
  00016	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0001a	0f 84 5b 02 00
	00		 je	 $LN7@cpg_report

; 2917 : 	{
; 2918 : 		int allied = get_local_entity_int_value (get_gunship_entity (), INT_TYPE_SIDE) == get_local_entity_int_value (target, INT_TYPE_SIDE);

  00020	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00027	74 0c		 je	 SHORT $LN9@cpg_report
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	89 4d b8	 mov	 DWORD PTR tv72[ebp], ecx
  00033	eb 21		 jmp	 SHORT $LN10@cpg_report
$LN9@cpg_report:
  00035	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_report_next_prev_target@@YGXPAUENTITY@@@Z@4JA
  0003b	83 c2 03	 add	 edx, 3
  0003e	52		 push	 edx
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN10@cpg_report:
  00056	b9 01 00 00 00	 mov	 ecx, 1
  0005b	85 c9		 test	 ecx, ecx
  0005d	74 09		 je	 SHORT $LN11@cpg_report
  0005f	c7 45 b4 bb 00
	00 00		 mov	 DWORD PTR tv80[ebp], 187 ; 000000bbH
  00066	eb 21		 jmp	 SHORT $LN12@cpg_report
$LN11@cpg_report:
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_report_next_prev_target@@YGXPAUENTITY@@@Z@4JA
  0006e	83 c2 03	 add	 edx, 3
  00071	52		 push	 edx
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00082	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN12@cpg_report:
  00089	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0008d	74 0a		 je	 SHORT $LN13@cpg_report
  0008f	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00092	8b 11		 mov	 edx, DWORD PTR [ecx]
  00094	89 55 b0	 mov	 DWORD PTR tv92[ebp], edx
  00097	eb 21		 jmp	 SHORT $LN14@cpg_report
$LN13@cpg_report:
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??cpg_report_next_prev_target@@YGXPAUENTITY@@@Z@4JA
  0009e	83 c0 03	 add	 eax, 3
  000a1	50		 push	 eax
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b3	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN14@cpg_report:
  000ba	ba 01 00 00 00	 mov	 edx, 1
  000bf	85 d2		 test	 edx, edx
  000c1	74 09		 je	 SHORT $LN15@cpg_report
  000c3	c7 45 ac bb 00
	00 00		 mov	 DWORD PTR tv132[ebp], 187 ; 000000bbH
  000ca	eb 21		 jmp	 SHORT $LN16@cpg_report
$LN15@cpg_report:
  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??cpg_report_next_prev_target@@YGXPAUENTITY@@@Z@4JA
  000d1	83 c0 03	 add	 eax, 3
  000d4	50		 push	 eax
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e0	51		 push	 ecx
  000e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e6	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN16@cpg_report:
  000ed	68 bb 00 00 00	 push	 187			; 000000bbH
  000f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000f8	52		 push	 edx
  000f9	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv72[ebp], 1116
  00100	8b 4d b4	 mov	 ecx, DWORD PTR tv80[ebp]
  00103	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0010a	ff d2		 call	 edx
  0010c	8b f0		 mov	 esi, eax
  0010e	68 bb 00 00 00	 push	 187			; 000000bbH
  00113	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00116	50		 push	 eax
  00117	69 4d b0 5c 04
	00 00		 imul	 ecx, DWORD PTR tv92[ebp], 1116
  0011e	8b 55 ac	 mov	 edx, DWORD PTR tv132[ebp]
  00121	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  00128	ff d0		 call	 eax
  0012a	3b f0		 cmp	 esi, eax
  0012c	75 09		 jne	 SHORT $LN17@cpg_report
  0012e	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv139[ebp], 1
  00135	eb 07		 jmp	 SHORT $LN18@cpg_report
$LN17@cpg_report:
  00137	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN18@cpg_report:
  0013e	8b 4d a8	 mov	 ecx, DWORD PTR tv139[ebp]
  00141	89 4d fc	 mov	 DWORD PTR _allied$1[ebp], ecx

; 2919 : 
; 2920 : 		if (!get_local_entity_int_value(target, INT_TYPE_CPG_IDENTIFIED))

  00144	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00148	74 0a		 je	 SHORT $LN19@cpg_report
  0014a	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0014d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014f	89 4d b8	 mov	 DWORD PTR tv145[ebp], ecx
  00152	eb 1d		 jmp	 SHORT $LN20@cpg_report
$LN19@cpg_report:
  00154	68 68 0b 00 00	 push	 2920			; 00000b68H
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00164	52		 push	 edx
  00165	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN20@cpg_report:
  00171	b8 01 00 00 00	 mov	 eax, 1
  00176	85 c0		 test	 eax, eax
  00178	74 09		 je	 SHORT $LN21@cpg_report
  0017a	c7 45 b4 22 00
	00 00		 mov	 DWORD PTR tv152[ebp], 34 ; 00000022H
  00181	eb 1d		 jmp	 SHORT $LN22@cpg_report
$LN21@cpg_report:
  00183	68 68 0b 00 00	 push	 2920			; 00000b68H
  00188	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00199	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN22@cpg_report:
  001a0	6a 22		 push	 34			; 00000022H
  001a2	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  001a5	52		 push	 edx
  001a6	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv145[ebp], 1116
  001ad	8b 4d b4	 mov	 ecx, DWORD PTR tv152[ebp]
  001b0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001b7	ff d2		 call	 edx
  001b9	85 c0		 test	 eax, eax
  001bb	75 3e		 jne	 SHORT $LN3@cpg_report

; 2921 : 		{
; 2922 : 			play_client_server_cpg_message(get_gunship_entity (), 1.0, 30.0, SPEECH_CATEGORY_CPG_SYSTEMS, -1.0,

  001bd	6a 59		 push	 89			; 00000059H
  001bf	51		 push	 ecx
  001c0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cd	6a 04		 push	 4
  001cf	51		 push	 ecx
  001d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  001d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dd	51		 push	 ecx
  001de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
  001f6	e9 80 00 00 00	 jmp	 $LN7@cpg_report
$LN3@cpg_report:

; 2923 : 					SPEECH_CPG_SPOT_ON);
; 2924 : 		}
; 2925 : 		else if (allied)

  001fb	83 7d fc 00	 cmp	 DWORD PTR _allied$1[ebp], 0
  001ff	74 3b		 je	 SHORT $LN5@cpg_report

; 2926 : 		{
; 2927 : 			play_client_server_cpg_message(get_gunship_entity (), 1.0, 30.0, SPEECH_CATEGORY_CPG_SYSTEMS, -1.0,

  00201	6a 72		 push	 114			; 00000072H
  00203	51		 push	 ecx
  00204	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0020c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00211	6a 04		 push	 4
  00213	51		 push	 ecx
  00214	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  0021c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00221	51		 push	 ecx
  00222	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0022a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00234	50		 push	 eax
  00235	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
  0023a	eb 3f		 jmp	 SHORT $LN7@cpg_report
$LN5@cpg_report:

; 2928 : 					SPEECH_CPG_FRIENDLY);
; 2929 : 		}
; 2930 : 		else if (!allied)

  0023c	83 7d fc 00	 cmp	 DWORD PTR _allied$1[ebp], 0
  00240	75 39		 jne	 SHORT $LN7@cpg_report

; 2931 : 		{
; 2932 : 			play_client_server_cpg_message(get_gunship_entity (), 1.0, 30.0, SPEECH_CATEGORY_CPG_SYSTEMS, -1.0,

  00242	6a 71		 push	 113			; 00000071H
  00244	51		 push	 ecx
  00245	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0024d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00252	6a 04		 push	 4
  00254	51		 push	 ecx
  00255	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  0025d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00262	51		 push	 ecx
  00263	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0026b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN7@cpg_report:

; 2933 : 					SPEECH_CPG_ENEMY);
; 2934 : 		}
; 2935 : 	}
; 2936 : }

  0027b	5f		 pop	 edi
  0027c	5e		 pop	 esi
  0027d	5b		 pop	 ebx
  0027e	8b e5		 mov	 esp, ebp
  00280	5d		 pop	 ebp
  00281	c2 04 00	 ret	 4
?cpg_report_next_prev_target@@YGXPAUENTITY@@@Z ENDP	; cpg_report_next_prev_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_azimuth_and_elevation@@YGXPAM0@Z
_TEXT	SEGMENT
_az$ = 8						; size = 4
_el$ = 12						; size = 4
?get_eo_azimuth_and_elevation@@YGXPAM0@Z PROC		; get_eo_azimuth_and_elevation, COMDAT

; 2887 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2888 : 	*az = eo_azimuth;

  00009	8b 45 08	 mov	 eax, DWORD PTR _az$[ebp]
  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00014	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 2889 : 	*el = eo_elevation;

  00018	8b 45 0c	 mov	 eax, DWORD PTR _el$[ebp]
  0001b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00023	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 2890 : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?get_eo_azimuth_and_elevation@@YGXPAM0@Z ENDP		; get_eo_azimuth_and_elevation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?cpg_scan_for_eo_targets@@YGXXZ
_TEXT	SEGMENT
tv172 = -84						; size = 4
tv153 = -84						; size = 4
tv135 = -84						; size = 4
tv83 = -84						; size = 4
tv165 = -80						; size = 4
tv146 = -80						; size = 4
tv95 = -80						; size = 4
tv75 = -80						; size = 4
_target_position$1 = -12				; size = 4
_source_position$2 = -8					; size = 4
_source$3 = -4						; size = 4
?cpg_scan_for_eo_targets@@YGXXZ PROC			; cpg_scan_for_eo_targets, COMDAT

; 2846 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2847 : 	if (!global_co_pilot_scans_for_targets)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?global_co_pilot_scans_for_targets@@3HA, 0 ; global_co_pilot_scans_for_targets
  00010	75 05		 jne	 SHORT $LN2@cpg_scan_f

; 2848 : 		return;

  00012	e9 95 02 00 00	 jmp	 $LN1@cpg_scan_f
$LN2@cpg_scan_f:

; 2849 : 
; 2850 : 	// wait until timeout
; 2851 : 	if (time_until_next_co_pilot_sweep > 0.0)

  00017	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?time_until_next_co_pilot_sweep@@3MA
  0001f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00027	76 1d		 jbe	 SHORT $LN3@cpg_scan_f

; 2852 : 		time_until_next_co_pilot_sweep -= get_delta_time();

  00029	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?time_until_next_co_pilot_sweep@@3MA
  00031	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00039	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?time_until_next_co_pilot_sweep@@3MA, xmm0

; 2853 : 	else

  00041	e9 66 02 00 00	 jmp	 $LN4@cpg_scan_f
$LN3@cpg_scan_f:

; 2854 : 	{
; 2855 : 		// enough time has passed to detect this target
; 2856 : 		if (next_cpg_target_report)

  00046	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A, 0 ; next_cpg_target_report
  0004d	0f 84 54 02 00
	00		 je	 $LN5@cpg_scan_f

; 2857 : 		{
; 2858 : 			entity*
; 2859 : 				source = get_gunship_entity();

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00058	89 45 fc	 mov	 DWORD PTR _source$3[ebp], eax

; 2860 : 
; 2861 : 			vec3d
; 2862 : 				*source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION),

  0005b	83 7d fc 00	 cmp	 DWORD PTR _source$3[ebp], 0
  0005f	74 0a		 je	 SHORT $LN8@cpg_scan_f
  00061	8b 45 fc	 mov	 eax, DWORD PTR _source$3[ebp]
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00069	eb 21		 jmp	 SHORT $LN9@cpg_scan_f
$LN8@cpg_scan_f:
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_scan_for_eo_targets@@YGXXZ@4JA
  00071	83 c2 10	 add	 edx, 16			; 00000010H
  00074	52		 push	 edx
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@cpg_scan_f:
  0008c	b9 01 00 00 00	 mov	 ecx, 1
  00091	85 c9		 test	 ecx, ecx
  00093	74 09		 je	 SHORT $LN10@cpg_scan_f
  00095	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv83[ebp], 8
  0009c	eb 21		 jmp	 SHORT $LN11@cpg_scan_f
$LN10@cpg_scan_f:
  0009e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_scan_for_eo_targets@@YGXXZ@4JA
  000a4	83 c2 10	 add	 edx, 16			; 00000010H
  000a7	52		 push	 edx
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b8	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN11@cpg_scan_f:
  000bf	6a 08		 push	 8
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _source$3[ebp]
  000c4	51		 push	 ecx
  000c5	6b 55 b0 60	 imul	 edx, DWORD PTR tv75[ebp], 96
  000c9	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  000cc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000d3	ff d1		 call	 ecx
  000d5	89 45 f8	 mov	 DWORD PTR _source_position$2[ebp], eax

; 2863 : 				*target_position = get_local_entity_vec3d_ptr (next_cpg_target_report, VEC3D_TYPE_POSITION);

  000d8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A, 0 ; next_cpg_target_report
  000df	74 0c		 je	 SHORT $LN12@cpg_scan_f
  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	89 4d b0	 mov	 DWORD PTR tv95[ebp], ecx
  000eb	eb 21		 jmp	 SHORT $LN13@cpg_scan_f
$LN12@cpg_scan_f:
  000ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_scan_for_eo_targets@@YGXXZ@4JA
  000f3	83 c2 11	 add	 edx, 17			; 00000011H
  000f6	52		 push	 edx
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00107	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN13@cpg_scan_f:
  0010e	b9 01 00 00 00	 mov	 ecx, 1
  00113	85 c9		 test	 ecx, ecx
  00115	74 09		 je	 SHORT $LN14@cpg_scan_f
  00117	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv135[ebp], 8
  0011e	eb 21		 jmp	 SHORT $LN15@cpg_scan_f
$LN14@cpg_scan_f:
  00120	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??cpg_scan_for_eo_targets@@YGXXZ@4JA
  00126	83 c2 11	 add	 edx, 17			; 00000011H
  00129	52		 push	 edx
  0012a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00134	50		 push	 eax
  00135	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN15@cpg_scan_f:
  00141	6a 08		 push	 8
  00143	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  00149	51		 push	 ecx
  0014a	6b 55 b0 60	 imul	 edx, DWORD PTR tv95[ebp], 96
  0014e	8b 45 ac	 mov	 eax, DWORD PTR tv135[ebp]
  00151	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00158	ff d1		 call	 ecx
  0015a	89 45 f4	 mov	 DWORD PTR _target_position$1[ebp], eax

; 2864 : 
; 2865 : 			// report target, and add to target list.  Have to retest conditions, since they may have changed since we selected it
; 2866 : 			if (get_local_entity_int_value (next_cpg_target_report, INT_TYPE_TARGET_TYPE) != TARGET_TYPE_INVALID
; 2867 : 				&& !get_local_entity_parent (next_cpg_target_report, LIST_TYPE_GUNSHIP_TARGET)
; 2868 : 				&& get_los_clear(next_cpg_target_report, source_position, target_position))

  0015d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A, 0 ; next_cpg_target_report
  00164	74 0c		 je	 SHORT $LN16@cpg_scan_f
  00166	a1 00 00 00 00	 mov	 eax, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  0016b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016d	89 4d b0	 mov	 DWORD PTR tv146[ebp], ecx
  00170	eb 1d		 jmp	 SHORT $LN17@cpg_scan_f
$LN16@cpg_scan_f:
  00172	68 32 0b 00 00	 push	 2866			; 00000b32H
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00182	52		 push	 edx
  00183	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00188	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN17@cpg_scan_f:
  0018f	b8 01 00 00 00	 mov	 eax, 1
  00194	85 c0		 test	 eax, eax
  00196	74 09		 je	 SHORT $LN18@cpg_scan_f
  00198	c7 45 ac d6 00
	00 00		 mov	 DWORD PTR tv153[ebp], 214 ; 000000d6H
  0019f	eb 1d		 jmp	 SHORT $LN19@cpg_scan_f
$LN18@cpg_scan_f:
  001a1	68 32 0b 00 00	 push	 2866			; 00000b32H
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001b1	51		 push	 ecx
  001b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b7	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN19@cpg_scan_f:
  001be	68 d6 00 00 00	 push	 214			; 000000d6H
  001c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  001c9	52		 push	 edx
  001ca	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv146[ebp], 1116
  001d1	8b 4d ac	 mov	 ecx, DWORD PTR tv153[ebp]
  001d4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001db	ff d2		 call	 edx
  001dd	85 c0		 test	 eax, eax
  001df	0f 84 b8 00 00
	00		 je	 $LN6@cpg_scan_f
  001e5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A, 0 ; next_cpg_target_report
  001ec	74 0c		 je	 SHORT $LN20@cpg_scan_f
  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  001f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f5	89 4d b0	 mov	 DWORD PTR tv165[ebp], ecx
  001f8	eb 1d		 jmp	 SHORT $LN21@cpg_scan_f
$LN20@cpg_scan_f:
  001fa	68 33 0b 00 00	 push	 2867			; 00000b33H
  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00204	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0020a	52		 push	 edx
  0020b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00210	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN21@cpg_scan_f:
  00217	b8 01 00 00 00	 mov	 eax, 1
  0021c	85 c0		 test	 eax, eax
  0021e	74 09		 je	 SHORT $LN22@cpg_scan_f
  00220	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv172[ebp], 18 ; 00000012H
  00227	eb 1d		 jmp	 SHORT $LN23@cpg_scan_f
$LN22@cpg_scan_f:
  00229	68 33 0b 00 00	 push	 2867			; 00000b33H
  0022e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00233	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00239	51		 push	 ecx
  0023a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN23@cpg_scan_f:
  00246	6a 12		 push	 18			; 00000012H
  00248	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  0024e	52		 push	 edx
  0024f	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv165[ebp], 180
  00256	8b 4d ac	 mov	 ecx, DWORD PTR tv172[ebp]
  00259	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00260	ff d2		 call	 edx
  00262	85 c0		 test	 eax, eax
  00264	75 37		 jne	 SHORT $LN6@cpg_scan_f
  00266	8b 45 f4	 mov	 eax, DWORD PTR _target_position$1[ebp]
  00269	50		 push	 eax
  0026a	8b 4d f8	 mov	 ecx, DWORD PTR _source_position$2[ebp]
  0026d	51		 push	 ecx
  0026e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  00274	52		 push	 edx
  00275	e8 00 00 00 00	 call	 ?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ; get_los_clear
  0027a	85 c0		 test	 eax, eax
  0027c	74 1f		 je	 SHORT $LN6@cpg_scan_f

; 2869 : 			{
; 2870 : 				insert_local_entity_into_parents_child_list (next_cpg_target_report, LIST_TYPE_GUNSHIP_TARGET, source, NULL);

  0027e	6a 00		 push	 0
  00280	8b 45 fc	 mov	 eax, DWORD PTR _source$3[ebp]
  00283	50		 push	 eax
  00284	6a 12		 push	 18			; 00000012H
  00286	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  0028c	51		 push	 ecx
  0028d	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 2871 : 				cpg_report_target(next_cpg_target_report);

  00292	a1 00 00 00 00	 mov	 eax, DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A ; next_cpg_target_report
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?cpg_report_target@@YGXPAUENTITY@@@Z ; cpg_report_target
$LN6@cpg_scan_f:

; 2872 : 			}
; 2873 : 
; 2874 : 			next_cpg_target_report = NULL;

  0029d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?next_cpg_target_report@@3PAUENTITY@@A, 0 ; next_cpg_target_report
$LN5@cpg_scan_f:

; 2875 : 		}
; 2876 : 
; 2877 : 		// find more targets to report
; 2878 : 		co_pilot_perform_eo_scan();

  002a7	e8 00 00 00 00	 call	 ?co_pilot_perform_eo_scan@@YGXXZ ; co_pilot_perform_eo_scan
$LN4@cpg_scan_f:
$LN1@cpg_scan_f:

; 2879 : 	}
; 2880 : }

  002ac	5f		 pop	 edi
  002ad	5e		 pop	 esi
  002ae	5b		 pop	 ebx
  002af	8b e5		 mov	 esp, ebp
  002b1	5d		 pop	 ebp
  002b2	c3		 ret	 0
?cpg_scan_for_eo_targets@@YGXXZ ENDP			; cpg_scan_for_eo_targets
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?set_eo_slave_target@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?set_eo_slave_target@@YGXPAUENTITY@@@Z PROC		; set_eo_slave_target, COMDAT

; 2546 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2547 : 	slave_target = target;

  00009	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, eax ; slave_target

; 2548 : 
; 2549 : 	set_gunship_target(NULL);

  00011	6a 00		 push	 0
  00013	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 2550 : 	eo_target_locked = 0;

  00018	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked

; 2551 : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?set_eo_slave_target@@YGXPAUENTITY@@@Z ENDP		; set_eo_slave_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?set_eo_lock@@YGXH@Z
_TEXT	SEGMENT
_locked$ = 8						; size = 4
?set_eo_lock@@YGXH@Z PROC				; set_eo_lock, COMDAT

; 281  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 282  : 	lock_target = locked;

  00009	8b 45 08	 mov	 eax, DWORD PTR _locked$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?lock_target@@3HA, eax

; 283  : 	lock_terrain = locked;

  00011	8b 45 08	 mov	 eax, DWORD PTR _locked$[ebp]
  00014	a3 00 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, eax

; 284  : 
; 285  : 	slave_target = NULL;

  00019	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target

; 286  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?set_eo_lock@@YGXH@Z ENDP				; set_eo_lock
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?toggle_eo_lock@@YGXXZ
_TEXT	SEGMENT
?toggle_eo_lock@@YGXXZ PROC				; toggle_eo_lock, COMDAT

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 258  : 	slave_target = NULL;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target

; 259  : 
; 260  : 	if (eo_target_locked & TARGET_LOCK)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  00018	83 e0 02	 and	 eax, 2
  0001b	74 16		 je	 SHORT $LN2@toggle_eo_

; 261  : 	{
; 262  : 		// if we have a target lock this disables all locks
; 263  : 		lock_target = FALSE;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lock_target@@3HA, 0

; 264  : 		lock_terrain = FALSE;

  00027	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 0
  00031	eb 34		 jmp	 SHORT $LN1@toggle_eo_
$LN2@toggle_eo_:

; 265  : 	}
; 266  : 	else if (eo_target_locked & POINT_LOCK)

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  00038	83 e0 01	 and	 eax, 1
  0003b	74 16		 je	 SHORT $LN4@toggle_eo_

; 267  : 	{
; 268  : 		// if we have point lock then try locking a target, or unlock terrain
; 269  : 		lock_target = TRUE;

  0003d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?lock_target@@3HA, 1

; 270  : 		lock_terrain = FALSE;

  00047	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 0

; 271  : 	}
; 272  : 	else

  00051	eb 14		 jmp	 SHORT $LN1@toggle_eo_
$LN4@toggle_eo_:

; 273  : 	{
; 274  : 		// if we have no lock try to get one of any type
; 275  : 		lock_target = TRUE;

  00053	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?lock_target@@3HA, 1

; 276  : 		lock_terrain = TRUE;

  0005d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 1
$LN1@toggle_eo_:

; 277  : 	}
; 278  : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?toggle_eo_lock@@YGXXZ ENDP				; toggle_eo_lock
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?eo_is_locked@@YGHXZ
_TEXT	SEGMENT
tv65 = -68						; size = 4
?eo_is_locked@@YGHXZ PROC				; eo_is_locked, COMDAT

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 253  : 	return eo_target_locked != 0;

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
  00010	74 09		 je	 SHORT $LN3@eo_is_lock
  00012	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00019	eb 07		 jmp	 SHORT $LN4@eo_is_lock
$LN3@eo_is_lock:
  0001b	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN4@eo_is_lock:
  00022	8b 45 bc	 mov	 eax, DWORD PTR tv65[ebp]

; 254  : }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?eo_is_locked@@YGHXZ ENDP				; eo_is_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?is_using_eo_system@@YGHH@Z
_TEXT	SEGMENT
tv64 = -68						; size = 4
_include_hms$ = 8					; size = 4
?is_using_eo_system@@YGHH@Z PROC			; is_using_eo_system, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 234  : 	switch (target_acquisition_system)

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; target_acquisition_system
  0000e	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  00011	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00014	83 e9 03	 sub	 ecx, 3
  00017	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  0001a	83 7d bc 07	 cmp	 DWORD PTR tv64[ebp], 7
  0001e	77 1d		 ja	 SHORT $LN6@is_using_e
  00020	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  00023	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN8@is_using_e[edx]
  0002a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@is_using_e[eax*4]
$LN4@is_using_e:

; 235  : 	{
; 236  : 	case TARGET_ACQUISITION_SYSTEM_FLIR:
; 237  : 	case TARGET_ACQUISITION_SYSTEM_DTV:
; 238  : 	case TARGET_ACQUISITION_SYSTEM_LLLTV:
; 239  : 	case TARGET_ACQUISITION_SYSTEM_PERISCOPE:
; 240  : 	case TARGET_ACQUISITION_SYSTEM_DVO:
; 241  : 		return TRUE;

  00031	b8 01 00 00 00	 mov	 eax, 1
  00036	eb 07		 jmp	 SHORT $LN1@is_using_e
$LN5@is_using_e:

; 242  : 	case TARGET_ACQUISITION_SYSTEM_HMS:
; 243  : 	case TARGET_ACQUISITION_SYSTEM_HIDSS:
; 244  : 	case TARGET_ACQUISITION_SYSTEM_IHADSS:
; 245  : 		return include_hms;

  00038	8b 45 08	 mov	 eax, DWORD PTR _include_hms$[ebp]
  0003b	eb 02		 jmp	 SHORT $LN1@is_using_e
$LN6@is_using_e:

; 246  : 	default:
; 247  : 		return FALSE;

  0003d	33 c0		 xor	 eax, eax
$LN1@is_using_e:

; 248  : 	}
; 249  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
$LN9@is_using_e:
  00048	00 00 00 00	 DD	 $LN4@is_using_e
  0004c	00 00 00 00	 DD	 $LN5@is_using_e
$LN8@is_using_e:
  00050	00		 DB	 0
  00051	00		 DB	 0
  00052	00		 DB	 0
  00053	00		 DB	 0
  00054	00		 DB	 0
  00055	01		 DB	 1
  00056	01		 DB	 1
  00057	01		 DB	 1
?is_using_eo_system@@YGHH@Z ENDP			; is_using_eo_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_old_eo_zoom@@YGMMMM@Z
_TEXT	SEGMENT
_pos$1 = -4						; size = 4
_fov$ = 8						; size = 4
_max_fov$ = 12						; size = 4
_min_fov$ = 16						; size = 4
?get_old_eo_zoom@@YGMMMM@Z PROC				; get_old_eo_zoom, COMDAT

; 2455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2456 : 
; 2457 : 		// "Old EO" Zoom control by Joystick thealx 130215 
; 2458 : 
; 2459 : 		if (command_line_eo_zoom_joystick_index != -1 && min_fov != max_fov)

  00009	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_zoom_joystick_index@@3HA, -1 ; command_line_eo_zoom_joystick_index
  00010	74 74		 je	 SHORT $LN2@get_old_eo
  00012	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _min_fov$[ebp]
  00017	0f 2e 45 0c	 ucomiss xmm0, DWORD PTR _max_fov$[ebp]
  0001b	9f		 lahf
  0001c	f6 c4 44	 test	 ah, 68			; 00000044H
  0001f	7b 65		 jnp	 SHORT $LN2@get_old_eo

; 2460 : 		{
; 2461 : 			int pos = get_joystick_axis (command_line_eo_zoom_joystick_index, command_line_eo_zoom_joystick_axis);

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_eo_zoom_joystick_axis@@3HA ; command_line_eo_zoom_joystick_axis
  00026	50		 push	 eax
  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_eo_zoom_joystick_index@@3HA ; command_line_eo_zoom_joystick_index
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  00033	89 45 fc	 mov	 DWORD PTR _pos$1[ebp], eax

; 2462 : 
; 2463 : 			if (pos < -5500)

  00036	81 7d fc 84 ea
	ff ff		 cmp	 DWORD PTR _pos$1[ebp], -5500 ; ffffea84H
  0003d	7d 0c		 jge	 SHORT $LN4@get_old_eo

; 2464 : 			{
; 2465 : 				fov = min_fov;

  0003f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _min_fov$[ebp]
  00044	f3 0f 11 45 08	 movss	 DWORD PTR _fov$[ebp], xmm0
  00049	eb 39		 jmp	 SHORT $LN8@get_old_eo
$LN4@get_old_eo:

; 2466 : 			}
; 2467 : 			else if ((pos > -5500) && (pos < 5000))

  0004b	81 7d fc 84 ea
	ff ff		 cmp	 DWORD PTR _pos$1[ebp], -5500 ; ffffea84H
  00052	7e 1d		 jle	 SHORT $LN6@get_old_eo
  00054	81 7d fc 88 13
	00 00		 cmp	 DWORD PTR _pos$1[ebp], 5000 ; 00001388H
  0005b	7d 14		 jge	 SHORT $LN6@get_old_eo

; 2468 : 			{
; 2469 : 				fov = min_fov + 1;

  0005d	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _min_fov$[ebp]
  00062	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0006a	f3 0f 11 45 08	 movss	 DWORD PTR _fov$[ebp], xmm0
  0006f	eb 13		 jmp	 SHORT $LN8@get_old_eo
$LN6@get_old_eo:

; 2470 : 			}
; 2471 : 			else if (pos > 5000)

  00071	81 7d fc 88 13
	00 00		 cmp	 DWORD PTR _pos$1[ebp], 5000 ; 00001388H
  00078	7e 0a		 jle	 SHORT $LN8@get_old_eo

; 2472 : 			{
; 2473 : 				fov = max_fov;

  0007a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _max_fov$[ebp]
  0007f	f3 0f 11 45 08	 movss	 DWORD PTR _fov$[ebp], xmm0
$LN8@get_old_eo:

; 2474 : 			}
; 2475 : 		}

  00084	eb 7a		 jmp	 SHORT $LN15@get_old_eo
$LN2@get_old_eo:

; 2476 : 		else if ((command_line_mouse_look != MOUSELOOK_ON) || (command_line_field_of_view_joystick_index != -1))

  00086	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  0008d	75 09		 jne	 SHORT $LN10@get_old_eo
  0008f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_field_of_view_joystick_index@@3HA, -1 ; command_line_field_of_view_joystick_index
  00096	74 68		 je	 SHORT $LN15@get_old_eo
$LN10@get_old_eo:

; 2477 : 		{
; 2478 : 			if (mouse_wheel_down)

  00098	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_down@@3HA, 0 ; mouse_wheel_down
  0009f	74 2c		 je	 SHORT $LN11@get_old_eo

; 2479 : 			{
; 2480 : 				mouse_wheel_down--;

  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_down@@3HA ; mouse_wheel_down
  000a6	83 e8 01	 sub	 eax, 1
  000a9	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_down@@3HA, eax ; mouse_wheel_down

; 2481 : 					if (fov < max_fov)

  000ae	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _max_fov$[ebp]
  000b3	0f 2f 45 08	 comiss	 xmm0, DWORD PTR _fov$[ebp]
  000b7	76 12		 jbe	 SHORT $LN13@get_old_eo

; 2482 : 						fov++;

  000b9	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fov$[ebp]
  000be	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  000c6	f3 0f 11 45 08	 movss	 DWORD PTR _fov$[ebp], xmm0
$LN13@get_old_eo:

; 2483 : 			}

  000cb	eb 33		 jmp	 SHORT $LN15@get_old_eo
$LN11@get_old_eo:

; 2484 : 			else if (mouse_wheel_up)

  000cd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_up@@3HA, 0 ; mouse_wheel_up
  000d4	74 2a		 je	 SHORT $LN15@get_old_eo

; 2485 : 			{
; 2486 : 				mouse_wheel_up--;

  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_up@@3HA ; mouse_wheel_up
  000db	83 e8 01	 sub	 eax, 1
  000de	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_up@@3HA, eax ; mouse_wheel_up

; 2487 : 					if (fov > min_fov)

  000e3	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fov$[ebp]
  000e8	0f 2f 45 10	 comiss	 xmm0, DWORD PTR _min_fov$[ebp]
  000ec	76 12		 jbe	 SHORT $LN15@get_old_eo

; 2488 : 						fov--;

  000ee	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fov$[ebp]
  000f3	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  000fb	f3 0f 11 45 08	 movss	 DWORD PTR _fov$[ebp], xmm0
$LN15@get_old_eo:

; 2489 : 			}
; 2490 : 		}
; 2491 : 			return fov;

  00100	d9 45 08	 fld	 DWORD PTR _fov$[ebp]

; 2492 : }

  00103	5f		 pop	 edi
  00104	5e		 pop	 esi
  00105	5b		 pop	 ebx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 0c 00	 ret	 12			; 0000000cH
?get_old_eo_zoom@@YGMMMM@Z ENDP				; get_old_eo_zoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_new_eo_zoom@@YGMM@Z
_TEXT	SEGMENT
_zoom$ = 8						; size = 4
?get_new_eo_zoom@@YGMM@Z PROC				; get_new_eo_zoom, COMDAT

; 2437 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2438 : 			if (mouse_wheel_down)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_down@@3HA, 0 ; mouse_wheel_down
  00010	74 38		 je	 SHORT $LN2@get_new_eo

; 2439 : 			{
; 2440 : 				mouse_wheel_down--;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_down@@3HA ; mouse_wheel_down
  00017	83 e8 01	 sub	 eax, 1
  0001a	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_down@@3HA, eax ; mouse_wheel_down

; 2441 : 				if (zoom < 1.0)

  0001f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _zoom$[ebp]
  00024	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0002c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00030	76 16		 jbe	 SHORT $LN4@get_new_eo

; 2442 : 					zoom += 0.1;

  00032	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _zoom$[ebp]
  00037	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0003f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00043	f3 0f 11 45 08	 movss	 DWORD PTR _zoom$[ebp], xmm0
$LN4@get_new_eo:

; 2443 : 			}

  00048	eb 3b		 jmp	 SHORT $LN6@get_new_eo
$LN2@get_new_eo:

; 2444 : 			else if (mouse_wheel_up)

  0004a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_up@@3HA, 0 ; mouse_wheel_up
  00051	74 32		 je	 SHORT $LN6@get_new_eo

; 2445 : 			{
; 2446 : 				mouse_wheel_up--;

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_up@@3HA ; mouse_wheel_up
  00058	83 e8 01	 sub	 eax, 1
  0005b	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_up@@3HA, eax ; mouse_wheel_up

; 2447 : 				if (zoom > 0.0)

  00060	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _zoom$[ebp]
  00065	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0006d	76 16		 jbe	 SHORT $LN6@get_new_eo

; 2448 : 					zoom -= 0.1;

  0006f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _zoom$[ebp]
  00074	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0007c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00080	f3 0f 11 45 08	 movss	 DWORD PTR _zoom$[ebp], xmm0
$LN6@get_new_eo:

; 2449 : 			}
; 2450 : 
; 2451 : 			return zoom;

  00085	d9 45 08	 fld	 DWORD PTR _zoom$[ebp]

; 2452 : }

  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
?get_new_eo_zoom@@YGMM@Z ENDP				; get_new_eo_zoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_elevation@@YGMMMMMMM@Z
_TEXT	SEGMENT
tv130 = -76						; size = 4
tv131 = -72						; size = 4
_dp$1 = -4						; size = 4
_rotate_rate$ = 8					; size = 4
_coarse_slew_rate$ = 12					; size = 4
_eo_elevation$ = 16					; size = 4
_eo_min_elevation$ = 20					; size = 4
_eo_max_elevation$ = 24					; size = 4
_mouse_slew_rate$ = 28					; size = 4
?get_eo_elevation@@YGMMMMMMM@Z PROC			; get_eo_elevation, COMDAT

; 2396 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2397 : 	 // POV flir control thealx 130215
; 2398 : 
; 2399 : 			if (command_line_mouse_look == MOUSELOOK_ON)

  00009	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  00010	0f 85 99 00 00
	00		 jne	 $LN2@get_eo_ele

; 2400 : 			{
; 2401 : 				if (joystick_pov_up)

  00016	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_up@@3HA, 0 ; joystick_pov_up
  0001d	74 40		 je	 SHORT $LN4@get_eo_ele

; 2402 : 				{
; 2403 : 					eo_elevation += rotate_rate * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  0001f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _rotate_rate$[ebp]
  00024	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002c	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00031	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  00039	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0003d	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _eo_elevation$[ebp]
  00042	f3 0f 11 45 10	 movss	 DWORD PTR _eo_elevation$[ebp], xmm0

; 2404 : 
; 2405 : 					eo_elevation = min (eo_elevation, eo_max_elevation);

  00047	8d 45 18	 lea	 eax, DWORD PTR _eo_max_elevation$[ebp]
  0004a	50		 push	 eax
  0004b	8d 4d 10	 lea	 ecx, DWORD PTR _eo_elevation$[ebp]
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00054	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00058	f3 0f 11 45 10	 movss	 DWORD PTR _eo_elevation$[ebp], xmm0
  0005d	eb 4b		 jmp	 SHORT $LN6@get_eo_ele
$LN4@get_eo_ele:

; 2406 : 				}
; 2407 : 				else if (joystick_pov_down)

  0005f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_down@@3HA, 0 ; joystick_pov_down
  00066	74 42		 je	 SHORT $LN6@get_eo_ele

; 2408 : 				{
; 2409 : 					eo_elevation -= rotate_rate * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  00068	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _rotate_rate$[ebp]
  0006d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00075	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  0007a	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  00082	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00086	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _eo_elevation$[ebp]
  0008b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0008f	f3 0f 11 4d 10	 movss	 DWORD PTR _eo_elevation$[ebp], xmm1

; 2410 : 
; 2411 : 					eo_elevation = max (eo_elevation, eo_min_elevation);

  00094	8d 45 14	 lea	 eax, DWORD PTR _eo_min_elevation$[ebp]
  00097	50		 push	 eax
  00098	8d 4d 10	 lea	 ecx, DWORD PTR _eo_elevation$[ebp]
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000a1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000a5	f3 0f 11 45 10	 movss	 DWORD PTR _eo_elevation$[ebp], xmm0
$LN6@get_eo_ele:

; 2412 : 				}
; 2413 : 			}

  000aa	e9 b2 00 00 00	 jmp	 $LN8@get_eo_ele
$LN2@get_eo_ele:

; 2414 : 
; 2415 : 	// Jabberwock 030930 - Mouse FLIR control functions
; 2416 : 	// Improved mouse control thealx 130215
; 2417 : 
; 2418 : 			else if (command_line_mouse_look != MOUSELOOK_ON)

  000af	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  000b6	0f 84 a5 00 00
	00		 je	 $LN8@get_eo_ele

; 2419 : 			{
; 2420 : 				static int previous_mouse_update_flag = 1;
; 2421 : 				float dp;
; 2422 : 
; 2423 : 				if (previous_mouse_update_flag != get_mouse_update_flag())

  000bc	e8 00 00 00 00	 call	 ?get_mouse_update_flag@@YGHXZ ; get_mouse_update_flag
  000c1	39 05 00 00 00
	00		 cmp	 DWORD PTR ?previous_mouse_update_flag@?BA@??get_eo_elevation@@YGMMMMMMM@Z@4HA, eax
  000c7	0f 84 94 00 00
	00		 je	 $LN8@get_eo_ele

; 2424 : 				{
; 2425 : 					dp = get_mouse_move_delta_y() / 5000.0 * mouse_slew_rate * command_line_mouse_look_speed;

  000cd	e8 00 00 00 00	 call	 ?get_mouse_move_delta_y@@YGHXZ ; get_mouse_move_delta_y
  000d2	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000d6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40b3880000000000
  000de	f3 0f 5a 4d 1c	 cvtss2sd xmm1, DWORD PTR _mouse_slew_rate$[ebp]
  000e3	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000e7	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  000ef	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f7	f3 0f 11 45 fc	 movss	 DWORD PTR _dp$1[ebp], xmm0

; 2426 : 
; 2427 : 					previous_mouse_update_flag = get_mouse_update_flag();

  000fc	e8 00 00 00 00	 call	 ?get_mouse_update_flag@@YGHXZ ; get_mouse_update_flag
  00101	a3 00 00 00 00	 mov	 DWORD PTR ?previous_mouse_update_flag@?BA@??get_eo_elevation@@YGMMMMMMM@Z@4HA, eax

; 2428 : 
; 2429 : 					eo_elevation -= dp;

  00106	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _eo_elevation$[ebp]
  0010b	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _dp$1[ebp]
  00110	f3 0f 11 45 10	 movss	 DWORD PTR _eo_elevation$[ebp], xmm0

; 2430 : 					eo_elevation = bound (eo_elevation, eo_min_elevation, eo_max_elevation);

  00115	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _eo_min_elevation$[ebp]
  0011a	0f 2f 45 10	 comiss	 xmm0, DWORD PTR _eo_elevation$[ebp]
  0011e	76 0c		 jbe	 SHORT $LN12@get_eo_ele
  00120	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _eo_min_elevation$[ebp]
  00125	f3 0f 11 45 b8	 movss	 DWORD PTR tv131[ebp], xmm0
  0012a	eb 2b		 jmp	 SHORT $LN13@get_eo_ele
$LN12@get_eo_ele:
  0012c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _eo_elevation$[ebp]
  00131	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _eo_max_elevation$[ebp]
  00135	76 0c		 jbe	 SHORT $LN10@get_eo_ele
  00137	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _eo_max_elevation$[ebp]
  0013c	f3 0f 11 45 b4	 movss	 DWORD PTR tv130[ebp], xmm0
  00141	eb 0a		 jmp	 SHORT $LN11@get_eo_ele
$LN10@get_eo_ele:
  00143	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _eo_elevation$[ebp]
  00148	f3 0f 11 45 b4	 movss	 DWORD PTR tv130[ebp], xmm0
$LN11@get_eo_ele:
  0014d	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv130[ebp]
  00152	f3 0f 11 45 b8	 movss	 DWORD PTR tv131[ebp], xmm0
$LN13@get_eo_ele:
  00157	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv131[ebp]
  0015c	f3 0f 11 45 10	 movss	 DWORD PTR _eo_elevation$[ebp], xmm0
$LN8@get_eo_ele:

; 2431 : 				}
; 2432 : 			}
; 2433 : 				return eo_elevation;

  00161	d9 45 10	 fld	 DWORD PTR _eo_elevation$[ebp]

; 2434 : }

  00164	5f		 pop	 edi
  00165	5e		 pop	 esi
  00166	5b		 pop	 ebx
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c2 18 00	 ret	 24			; 00000018H
?get_eo_elevation@@YGMMMMMMM@Z ENDP			; get_eo_elevation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_azimuth@@YGMMMMMMM@Z
_TEXT	SEGMENT
tv130 = -76						; size = 4
tv131 = -72						; size = 4
_dh$1 = -4						; size = 4
_rotate_rate$ = 8					; size = 4
_coarse_slew_rate$ = 12					; size = 4
_eo_azimuth$ = 16					; size = 4
_eo_min_azimuth$ = 20					; size = 4
_eo_max_azimuth$ = 24					; size = 4
_mouse_slew_rate$ = 28					; size = 4
?get_eo_azimuth@@YGMMMMMMM@Z PROC			; get_eo_azimuth, COMDAT

; 2355 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2356 : 	 // POV flir control thealx 130215
; 2357 : 
; 2358 : 			if (command_line_mouse_look == MOUSELOOK_ON)

  00009	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  00010	0f 85 99 00 00
	00		 jne	 $LN2@get_eo_azi

; 2359 : 			{
; 2360 : 				if (joystick_pov_left)

  00016	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_left@@3HA, 0 ; joystick_pov_left
  0001d	74 44		 je	 SHORT $LN4@get_eo_azi

; 2361 : 				{
; 2362 : 					eo_azimuth -= rotate_rate * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  0001f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _rotate_rate$[ebp]
  00024	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002c	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00031	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  00039	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0003d	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _eo_azimuth$[ebp]
  00042	f3 0f 5c c8	 subss	 xmm1, xmm0
  00046	f3 0f 11 4d 10	 movss	 DWORD PTR _eo_azimuth$[ebp], xmm1

; 2363 : 
; 2364 : 					eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  0004b	8d 45 14	 lea	 eax, DWORD PTR _eo_min_azimuth$[ebp]
  0004e	50		 push	 eax
  0004f	8d 4d 10	 lea	 ecx, DWORD PTR _eo_azimuth$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00058	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0005c	f3 0f 11 45 10	 movss	 DWORD PTR _eo_azimuth$[ebp], xmm0
  00061	eb 47		 jmp	 SHORT $LN6@get_eo_azi
$LN4@get_eo_azi:

; 2365 : 				}
; 2366 : 				else if (joystick_pov_right)

  00063	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?joystick_pov_right@@3HA, 0 ; joystick_pov_right
  0006a	74 3e		 je	 SHORT $LN6@get_eo_azi

; 2367 : 				{
; 2368 : 					eo_azimuth += rotate_rate * get_delta_time () * coarse_slew_rate * command_line_mouse_look_speed;

  0006c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _rotate_rate$[ebp]
  00071	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00079	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  0007e	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  00086	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0008a	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _eo_azimuth$[ebp]
  0008f	f3 0f 11 45 10	 movss	 DWORD PTR _eo_azimuth$[ebp], xmm0

; 2369 : 
; 2370 : 					eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  00094	8d 45 18	 lea	 eax, DWORD PTR _eo_max_azimuth$[ebp]
  00097	50		 push	 eax
  00098	8d 4d 10	 lea	 ecx, DWORD PTR _eo_azimuth$[ebp]
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  000a1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000a5	f3 0f 11 45 10	 movss	 DWORD PTR _eo_azimuth$[ebp], xmm0
$LN6@get_eo_azi:

; 2371 : 				}
; 2372 : 			}

  000aa	e9 b2 00 00 00	 jmp	 $LN8@get_eo_azi
$LN2@get_eo_azi:

; 2373 : 
; 2374 : 	// Jabberwock 030930 - Mouse FLIR control functions
; 2375 : 	// Improved mouse control thealx 130215
; 2376 : 
; 2377 : 			else if (command_line_mouse_look != MOUSELOOK_ON)

  000af	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  000b6	0f 84 a5 00 00
	00		 je	 $LN8@get_eo_azi

; 2378 : 			{
; 2379 : 				static int previous_mouse_update_flag = 1;
; 2380 : 				float dh;
; 2381 : 
; 2382 : 				if (previous_mouse_update_flag != get_mouse_update_flag())

  000bc	e8 00 00 00 00	 call	 ?get_mouse_update_flag@@YGHXZ ; get_mouse_update_flag
  000c1	39 05 00 00 00
	00		 cmp	 DWORD PTR ?previous_mouse_update_flag@?BA@??get_eo_azimuth@@YGMMMMMMM@Z@4HA, eax
  000c7	0f 84 94 00 00
	00		 je	 $LN8@get_eo_azi

; 2383 : 				{
; 2384 : 					dh = get_mouse_move_delta_x() / 5000.0 * mouse_slew_rate * command_line_mouse_look_speed;

  000cd	e8 00 00 00 00	 call	 ?get_mouse_move_delta_x@@YGHXZ ; get_mouse_move_delta_x
  000d2	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000d6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40b3880000000000
  000de	f3 0f 5a 4d 1c	 cvtss2sd xmm1, DWORD PTR _mouse_slew_rate$[ebp]
  000e3	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000e7	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  000ef	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f7	f3 0f 11 45 fc	 movss	 DWORD PTR _dh$1[ebp], xmm0

; 2385 : 
; 2386 : 					previous_mouse_update_flag = get_mouse_update_flag();

  000fc	e8 00 00 00 00	 call	 ?get_mouse_update_flag@@YGHXZ ; get_mouse_update_flag
  00101	a3 00 00 00 00	 mov	 DWORD PTR ?previous_mouse_update_flag@?BA@??get_eo_azimuth@@YGMMMMMMM@Z@4HA, eax

; 2387 : 
; 2388 : 					eo_azimuth += dh;

  00106	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _eo_azimuth$[ebp]
  0010b	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _dh$1[ebp]
  00110	f3 0f 11 45 10	 movss	 DWORD PTR _eo_azimuth$[ebp], xmm0

; 2389 : 					eo_azimuth = bound (eo_azimuth, eo_min_azimuth, eo_max_azimuth);

  00115	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _eo_min_azimuth$[ebp]
  0011a	0f 2f 45 10	 comiss	 xmm0, DWORD PTR _eo_azimuth$[ebp]
  0011e	76 0c		 jbe	 SHORT $LN12@get_eo_azi
  00120	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _eo_min_azimuth$[ebp]
  00125	f3 0f 11 45 b8	 movss	 DWORD PTR tv131[ebp], xmm0
  0012a	eb 2b		 jmp	 SHORT $LN13@get_eo_azi
$LN12@get_eo_azi:
  0012c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _eo_azimuth$[ebp]
  00131	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _eo_max_azimuth$[ebp]
  00135	76 0c		 jbe	 SHORT $LN10@get_eo_azi
  00137	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _eo_max_azimuth$[ebp]
  0013c	f3 0f 11 45 b4	 movss	 DWORD PTR tv130[ebp], xmm0
  00141	eb 0a		 jmp	 SHORT $LN11@get_eo_azi
$LN10@get_eo_azi:
  00143	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _eo_azimuth$[ebp]
  00148	f3 0f 11 45 b4	 movss	 DWORD PTR tv130[ebp], xmm0
$LN11@get_eo_azi:
  0014d	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv130[ebp]
  00152	f3 0f 11 45 b8	 movss	 DWORD PTR tv131[ebp], xmm0
$LN13@get_eo_azi:
  00157	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv131[ebp]
  0015c	f3 0f 11 45 10	 movss	 DWORD PTR _eo_azimuth$[ebp], xmm0
$LN8@get_eo_azi:

; 2390 : 				}
; 2391 : 			}
; 2392 : 				return eo_azimuth;

  00161	d9 45 10	 fld	 DWORD PTR _eo_azimuth$[ebp]

; 2393 : }

  00164	5f		 pop	 edi
  00165	5e		 pop	 esi
  00166	5b		 pop	 ebx
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c2 18 00	 ret	 24			; 00000018H
?get_eo_azimuth@@YGMMMMMMM@Z ENDP			; get_eo_azimuth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?joystick_slew_eo_system@@YGXM@Z
_TEXT	SEGMENT
tv206 = -104						; size = 4
tv200 = -104						; size = 4
tv188 = -104						; size = 4
tv207 = -100						; size = 4
tv201 = -100						; size = 4
tv180 = -100						; size = 4
_raw$1 = -32						; size = 4
_cos_heading$2 = -28					; size = 4
_sin_heading$3 = -24					; size = 4
_eo_heading$4 = -20					; size = 4
_vertical_value$5 = -16					; size = 4
_horizontal_value$6 = -12				; size = 4
_panning_offset_vert$7 = -8				; size = 4
_panning_offset_horiz$8 = -4				; size = 4
_slew_rate$ = 8						; size = 4
?joystick_slew_eo_system@@YGXM@Z PROC			; joystick_slew_eo_system, COMDAT

; 2290 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2291 : 	if (command_line_eo_pan_joystick_index != -1)

  00009	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_pan_joystick_index@@3HA, -1 ; command_line_eo_pan_joystick_index
  00010	0f 84 1a 04 00
	00		 je	 $LN6@joystick_s

; 2292 : 	{
; 2293 : 		float
; 2294 : 			panning_offset_horiz,
; 2295 : 			panning_offset_vert;
; 2296 : 
; 2297 : 		int
; 2298 : 			horizontal_value,
; 2299 : 			vertical_value;
; 2300 : 
; 2301 : 		horizontal_value = get_joystick_axis (command_line_eo_pan_joystick_index, command_line_eo_pan_horizontal_joystick_axis);

  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_eo_pan_horizontal_joystick_axis@@3HA ; command_line_eo_pan_horizontal_joystick_axis
  0001b	50		 push	 eax
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_eo_pan_joystick_index@@3HA ; command_line_eo_pan_joystick_index
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  00028	89 45 f4	 mov	 DWORD PTR _horizontal_value$6[ebp], eax

; 2302 : 		panning_offset_horiz = make_panning_offset_from_axis (horizontal_value);

  0002b	8b 45 f4	 mov	 eax, DWORD PTR _horizontal_value$6[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?make_panning_offset_from_axis@@YGMJ@Z ; make_panning_offset_from_axis
  00034	d9 5d fc	 fstp	 DWORD PTR _panning_offset_horiz$8[ebp]

; 2303 : 
; 2304 : 		vertical_value = get_joystick_axis (command_line_eo_pan_joystick_index, command_line_eo_pan_vertical_joystick_axis);

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_eo_pan_vertical_joystick_axis@@3HA ; command_line_eo_pan_vertical_joystick_axis
  0003c	50		 push	 eax
  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_eo_pan_joystick_index@@3HA ; command_line_eo_pan_joystick_index
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  00049	89 45 f0	 mov	 DWORD PTR _vertical_value$5[ebp], eax

; 2305 : 		panning_offset_vert = make_panning_offset_from_axis (vertical_value);

  0004c	8b 45 f0	 mov	 eax, DWORD PTR _vertical_value$5[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?make_panning_offset_from_axis@@YGMJ@Z ; make_panning_offset_from_axis
  00055	d9 5d f8	 fstp	 DWORD PTR _panning_offset_vert$7[ebp]

; 2306 : 
; 2307 : 		if (panning_offset_horiz != 0.0 || panning_offset_vert != 0.0)

  00058	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _panning_offset_horiz$8[ebp]
  0005d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00065	9f		 lahf
  00066	f6 c4 44	 test	 ah, 68			; 00000044H
  00069	7a 17		 jp	 SHORT $LN4@joystick_s
  0006b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _panning_offset_vert$7[ebp]
  00070	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00078	9f		 lahf
  00079	f6 c4 44	 test	 ah, 68			; 00000044H
  0007c	0f 8b ae 03 00
	00		 jnp	 $LN6@joystick_s
$LN4@joystick_s:

; 2308 : 		{
; 2309 : 			slave_target = NULL;

  00082	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target

; 2310 : 
; 2311 : 			if (eo_target_locked)

  0008c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
  00093	0f 84 97 02 00
	00		 je	 $LN5@joystick_s

; 2312 : 			{
; 2313 : 				float
; 2314 : 					eo_heading = get_heading_from_attitude_matrix (eo_vp.attitude),

  00099	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0009e	d1 e0		 shl	 eax, 1
  000a0	b9 04 00 00 00	 mov	 ecx, 4
  000a5	d1 e1		 shl	 ecx, 1
  000a7	51		 push	 ecx
  000a8	f3 0f 10 84 08
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A[eax+ecx+12]
  000b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b6	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000bb	d1 e2		 shl	 edx, 1
  000bd	b8 04 00 00 00	 mov	 eax, 4
  000c2	6b c8 00	 imul	 ecx, eax, 0
  000c5	51		 push	 ecx
  000c6	f3 0f 10 84 0a
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A[edx+ecx+12]
  000cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d4	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  000d9	d9 5d ec	 fstp	 DWORD PTR _eo_heading$4[ebp]

; 2315 : 					sin_heading = sin(eo_heading),

  000dc	51		 push	 ecx
  000dd	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _eo_heading$4[ebp]
  000e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e7	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  000ec	d9 5d e8	 fstp	 DWORD PTR _sin_heading$3[ebp]

; 2316 : 					cos_heading = cos(eo_heading);

  000ef	51		 push	 ecx
  000f0	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _eo_heading$4[ebp]
  000f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fa	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  000ff	d9 5d e4	 fstp	 DWORD PTR _cos_heading$2[ebp]

; 2317 : 
; 2318 : 				// if moving while in target lock then switch to point lock
; 2319 : 				if (eo_target_locked & TARGET_LOCK)

  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  00107	83 e0 02	 and	 eax, 2
  0010a	74 05		 je	 SHORT $LN7@joystick_s

; 2320 : 					switch_to_point_lock();

  0010c	e8 00 00 00 00	 call	 ?switch_to_point_lock@@YGXXZ ; switch_to_point_lock
$LN7@joystick_s:

; 2321 : 
; 2322 : 				eo_tracking_point.x += cos_heading * panning_offset_horiz * JOYSTICK_TRACKING_RATE * get_delta_time();

  00111	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _cos_heading$2[ebp]
  00116	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _panning_offset_horiz$8[ebp]
  0011b	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0011f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4044000000000000
  00127	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  0012f	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00133	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  0013b	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0013f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00143	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A, xmm0

; 2323 : 				eo_tracking_point.z -= sin_heading * panning_offset_horiz * FINE_TRACKING_RATE * get_delta_time();

  0014b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _sin_heading$3[ebp]
  00150	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _panning_offset_horiz$8[ebp]
  00155	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00159	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  00161	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  00169	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0016d	f3 0f 5a 0d 08
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  00175	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00179	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0017d	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8, xmm0

; 2324 : 
; 2325 : 				eo_tracking_point.x += sin_heading * panning_offset_vert * 4 * JOYSTICK_TRACKING_RATE * get_delta_time();

  00185	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _sin_heading$3[ebp]
  0018a	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _panning_offset_vert$7[ebp]
  0018f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  00197	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0019b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4044000000000000
  001a3	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  001ab	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  001af	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  001b7	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001bb	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001bf	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A, xmm0

; 2326 : 				eo_tracking_point.z += cos_heading * panning_offset_vert * 4 * JOYSTICK_TRACKING_RATE * get_delta_time();

  001c7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _cos_heading$2[ebp]
  001cc	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _panning_offset_vert$7[ebp]
  001d1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  001d9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001dd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4044000000000000
  001e5	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  001ed	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  001f1	f3 0f 5a 0d 08
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  001f9	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001fd	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00201	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8, xmm0

; 2327 : 
; 2328 : 				// keep point on ground (unless point off map)
; 2329 : 				if (point_inside_map_area (&eo_tracking_point))

  00209	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  00211	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00218	0f 82 0d 01 00
	00		 jb	 $LN8@joystick_s
  0021e	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00226	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  0022d	0f 82 f8 00 00
	00		 jb	 $LN8@joystick_s
  00233	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  0023b	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00242	0f 82 e3 00 00
	00		 jb	 $LN8@joystick_s
  00248	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00250	0f 2f 05 08 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  00257	0f 82 ce 00 00
	00		 jb	 $LN8@joystick_s

; 2330 : 				{
; 2331 : 					helicopter *raw = (helicopter *) get_local_entity_data(get_gunship_entity());

  0025d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00262	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00265	89 4d e0	 mov	 DWORD PTR _raw$1[ebp], ecx

; 2332 : 					eo_tracking_point.y = get_3d_terrain_point_data(eo_tracking_point.x, eo_tracking_point.z, &raw->ac.terrain_info);

  00268	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  0026b	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00270	50		 push	 eax
  00271	51		 push	 ecx
  00272	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  0027a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027f	51		 push	 ecx
  00280	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  00288	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028d	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00292	d9 1d 04 00 00
	00		 fstp	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+4

; 2333 : 
; 2334 : 					// have to update server's tracking point so that missiles will aim in multiplayer
; 2335 : 					set_client_server_entity_vec3d(get_gunship_entity(), VEC3D_TYPE_EO_TRACKING_POINT, &eo_tracking_point);

  00298	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0029f	74 0c		 je	 SHORT $LN10@joystick_s
  002a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a8	89 4d 9c	 mov	 DWORD PTR tv180[ebp], ecx
  002ab	eb 21		 jmp	 SHORT $LN11@joystick_s
$LN10@joystick_s:
  002ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??joystick_slew_eo_system@@YGXM@Z@4JA
  002b3	83 c2 2d	 add	 edx, 45			; 0000002dH
  002b6	52		 push	 edx
  002b7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002c1	50		 push	 eax
  002c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c7	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN11@joystick_s:
  002ce	b9 01 00 00 00	 mov	 ecx, 1
  002d3	85 c9		 test	 ecx, ecx
  002d5	74 09		 je	 SHORT $LN12@joystick_s
  002d7	c7 45 98 03 00
	00 00		 mov	 DWORD PTR tv188[ebp], 3
  002de	eb 21		 jmp	 SHORT $LN13@joystick_s
$LN12@joystick_s:
  002e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??joystick_slew_eo_system@@YGXM@Z@4JA
  002e6	83 c2 2d	 add	 edx, 45			; 0000002dH
  002e9	52		 push	 edx
  002ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002fa	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN13@joystick_s:
  00301	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  00306	6a 03		 push	 3
  00308	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0030e	51		 push	 ecx
  0030f	69 55 9c c0 00
	00 00		 imul	 edx, DWORD PTR tv180[ebp], 192
  00316	8b 45 98	 mov	 eax, DWORD PTR tv188[ebp]
  00319	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*8]
  00320	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00326	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00329	ff d0		 call	 eax
$LN8@joystick_s:

; 2336 : 				}
; 2337 : 			}
; 2338 : 			else

  0032b	e9 00 01 00 00	 jmp	 $LN6@joystick_s
$LN5@joystick_s:

; 2339 : 			{
; 2340 : 				eo_azimuth += panning_offset_horiz * slew_rate;

  00330	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _panning_offset_horiz$8[ebp]
  00335	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _slew_rate$[ebp]
  0033a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00342	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2341 : 				eo_azimuth = bound(eo_azimuth, eo_min_azimuth, eo_max_azimuth);

  0034a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  00352	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00359	76 0f		 jbe	 SHORT $LN16@joystick_s
  0035b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  00363	f3 0f 11 45 9c	 movss	 DWORD PTR tv201[ebp], xmm0
  00368	eb 37		 jmp	 SHORT $LN17@joystick_s
$LN16@joystick_s:
  0036a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00372	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  00379	76 0f		 jbe	 SHORT $LN14@joystick_s
  0037b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  00383	f3 0f 11 45 98	 movss	 DWORD PTR tv200[ebp], xmm0
  00388	eb 0d		 jmp	 SHORT $LN15@joystick_s
$LN14@joystick_s:
  0038a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00392	f3 0f 11 45 98	 movss	 DWORD PTR tv200[ebp], xmm0
$LN15@joystick_s:
  00397	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv200[ebp]
  0039c	f3 0f 11 45 9c	 movss	 DWORD PTR tv201[ebp], xmm0
$LN17@joystick_s:
  003a1	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv201[ebp]
  003a6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2342 : 
; 2343 : 				eo_elevation -= panning_offset_vert * slew_rate;

  003ae	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _panning_offset_vert$7[ebp]
  003b3	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _slew_rate$[ebp]
  003b8	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?eo_elevation@@3MA
  003c0	f3 0f 5c c8	 subss	 xmm1, xmm0
  003c4	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm1

; 2344 : 				eo_elevation = bound(eo_elevation, eo_min_elevation, eo_max_elevation);

  003cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  003d4	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  003db	76 0f		 jbe	 SHORT $LN20@joystick_s
  003dd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  003e5	f3 0f 11 45 9c	 movss	 DWORD PTR tv207[ebp], xmm0
  003ea	eb 37		 jmp	 SHORT $LN21@joystick_s
$LN20@joystick_s:
  003ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  003f4	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  003fb	76 0f		 jbe	 SHORT $LN18@joystick_s
  003fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  00405	f3 0f 11 45 98	 movss	 DWORD PTR tv206[ebp], xmm0
  0040a	eb 0d		 jmp	 SHORT $LN19@joystick_s
$LN18@joystick_s:
  0040c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00414	f3 0f 11 45 98	 movss	 DWORD PTR tv206[ebp], xmm0
$LN19@joystick_s:
  00419	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv206[ebp]
  0041e	f3 0f 11 45 9c	 movss	 DWORD PTR tv207[ebp], xmm0
$LN21@joystick_s:
  00423	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv207[ebp]
  00428	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
$LN6@joystick_s:

; 2345 : 			}
; 2346 : 		}
; 2347 : 	}
; 2348 : }

  00430	5f		 pop	 edi
  00431	5e		 pop	 esi
  00432	5b		 pop	 ebx
  00433	8b e5		 mov	 esp, ebp
  00435	5d		 pop	 ebp
  00436	c2 04 00	 ret	 4
?joystick_slew_eo_system@@YGXM@Z ENDP			; joystick_slew_eo_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?keyboard_slew_eo_system@@YGXMMM@Z
_TEXT	SEGMENT
tv208 = -100						; size = 4
tv200 = -96						; size = 4
tv138 = -96						; size = 4
_raw$1 = -28						; size = 4
_has_moved$2 = -24					; size = 4
_cos_heading$3 = -20					; size = 4
_sin_heading$4 = -16					; size = 4
_eo_heading$5 = -12					; size = 4
_movement$6 = -8					; size = 4
_movement_rate$7 = -4					; size = 4
_fine_slew_rate$ = 8					; size = 4
_medium_slew_rate$ = 12					; size = 4
_coarse_slew_rate$ = 16					; size = 4
?keyboard_slew_eo_system@@YGXMMM@Z PROC			; keyboard_slew_eo_system, COMDAT

; 2111 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2112 : 	if (eo_target_locked)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
  00010	0f 84 3d 04 00
	00		 je	 $LN2@keyboard_s

; 2113 : 	{
; 2114 : 		float
; 2115 : 			movement_rate = 0.0,

  00016	0f 57 c0	 xorps	 xmm0, xmm0
  00019	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0

; 2116 : 			movement,
; 2117 : 			eo_heading = get_heading_from_attitude_matrix (eo_vp.attitude),

  0001e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00023	d1 e0		 shl	 eax, 1
  00025	b9 04 00 00 00	 mov	 ecx, 4
  0002a	d1 e1		 shl	 ecx, 1
  0002c	51		 push	 ecx
  0002d	f3 0f 10 84 08
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A[eax+ecx+12]
  00036	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003b	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00040	d1 e2		 shl	 edx, 1
  00042	b8 04 00 00 00	 mov	 eax, 4
  00047	6b c8 00	 imul	 ecx, eax, 0
  0004a	51		 push	 ecx
  0004b	f3 0f 10 84 0a
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A[edx+ecx+12]
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0005e	d9 5d f4	 fstp	 DWORD PTR _eo_heading$5[ebp]

; 2118 : 			sin_heading = sin(eo_heading),

  00061	51		 push	 ecx
  00062	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _eo_heading$5[ebp]
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00071	d9 5d f0	 fstp	 DWORD PTR _sin_heading$4[ebp]

; 2119 : 			cos_heading = cos(eo_heading);

  00074	51		 push	 ecx
  00075	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _eo_heading$5[ebp]
  0007a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007f	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00084	d9 5d ec	 fstp	 DWORD PTR _cos_heading$3[ebp]

; 2120 : 
; 2121 : 		int
; 2122 : 			has_moved;
; 2123 : 
; 2124 : 		// move tracking point perpendicular
; 2125 : 		if (continuous_target_acquisition_system_steer_left_fast_key)

  00087	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_fast_key
  0008e	74 18		 je	 SHORT $LN4@keyboard_s

; 2126 : 			movement_rate -= COARSE_TRACKING_RATE;

  00090	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  00095	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4059000000000000
  0009d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a1	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  000a6	eb 40		 jmp	 SHORT $LN8@keyboard_s
$LN4@keyboard_s:

; 2127 : 		else if (continuous_target_acquisition_system_steer_left_fine_key)

  000a8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_fine_key
  000af	74 18		 je	 SHORT $LN6@keyboard_s

; 2128 : 			movement_rate -= FINE_TRACKING_RATE;

  000b1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  000b6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4014000000000000
  000be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c2	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  000c7	eb 1f		 jmp	 SHORT $LN8@keyboard_s
$LN6@keyboard_s:

; 2129 : 		else if (continuous_target_acquisition_system_steer_left_key)

  000c9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_key
  000d0	74 16		 je	 SHORT $LN8@keyboard_s

; 2130 : 			movement_rate -= MEDIUM_TRACKING_RATE;

  000d2	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  000d7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  000df	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e3	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
$LN8@keyboard_s:

; 2131 : 
; 2132 : 		////////////////////////////////////////
; 2133 : 
; 2134 : 		if (continuous_target_acquisition_system_steer_right_fast_key)

  000e8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_fast_key
  000ef	74 18		 je	 SHORT $LN9@keyboard_s

; 2135 : 			movement_rate += COARSE_TRACKING_RATE;

  000f1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  000f6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4059000000000000
  000fe	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00102	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  00107	eb 40		 jmp	 SHORT $LN13@keyboard_s
$LN9@keyboard_s:

; 2136 : 		else if (continuous_target_acquisition_system_steer_right_fine_key)

  00109	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_fine_key
  00110	74 18		 je	 SHORT $LN11@keyboard_s

; 2137 : 			movement_rate += FINE_TRACKING_RATE;

  00112	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  00117	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4014000000000000
  0011f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00123	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  00128	eb 1f		 jmp	 SHORT $LN13@keyboard_s
$LN11@keyboard_s:

; 2138 : 		else if (continuous_target_acquisition_system_steer_right_key)

  0012a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_key
  00131	74 16		 je	 SHORT $LN13@keyboard_s

; 2139 : 			movement_rate += MEDIUM_TRACKING_RATE;

  00133	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  00138	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4034000000000000
  00140	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00144	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
$LN13@keyboard_s:

; 2140 : 
; 2141 : 		has_moved = movement_rate != 0.0;

  00149	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  0014e	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00156	9f		 lahf
  00157	f6 c4 44	 test	 ah, 68			; 00000044H
  0015a	7b 09		 jnp	 SHORT $LN50@keyboard_s
  0015c	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv138[ebp], 1
  00163	eb 07		 jmp	 SHORT $LN51@keyboard_s
$LN50@keyboard_s:
  00165	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN51@keyboard_s:
  0016c	8b 45 a0	 mov	 eax, DWORD PTR tv138[ebp]
  0016f	89 45 e8	 mov	 DWORD PTR _has_moved$2[ebp], eax

; 2142 : 
; 2143 : 		if (has_moved)

  00172	83 7d e8 00	 cmp	 DWORD PTR _has_moved$2[ebp], 0
  00176	74 61		 je	 SHORT $LN14@keyboard_s

; 2144 : 		{
; 2145 : 			// if moving while in target lock then switch to point lock
; 2146 : 			if (eo_target_locked & TARGET_LOCK)

  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  0017d	83 e0 02	 and	 eax, 2
  00180	74 05		 je	 SHORT $LN15@keyboard_s

; 2147 : 				switch_to_point_lock();

  00182	e8 00 00 00 00	 call	 ?switch_to_point_lock@@YGXXZ ; switch_to_point_lock
$LN15@keyboard_s:

; 2148 : 
; 2149 : 			movement = movement_rate * get_delta_time();

  00187	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _movement_rate$7[ebp]
  0018c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00194	f3 0f 11 45 f8	 movss	 DWORD PTR _movement$6[ebp], xmm0

; 2150 : 
; 2151 : 			eo_tracking_point.x += cos_heading * movement;

  00199	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _cos_heading$3[ebp]
  0019e	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _movement$6[ebp]
  001a3	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  001ab	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A, xmm0

; 2152 : 			eo_tracking_point.z -= sin_heading * movement;

  001b3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _sin_heading$4[ebp]
  001b8	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _movement$6[ebp]
  001bd	f3 0f 10 0d 08
	00 00 00	 movss	 xmm1, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  001c5	f3 0f 5c c8	 subss	 xmm1, xmm0
  001c9	f3 0f 11 0d 08
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8, xmm1

; 2153 : 			movement_rate = 0.0;

  001d1	0f 57 c0	 xorps	 xmm0, xmm0
  001d4	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
$LN14@keyboard_s:

; 2154 : 		}
; 2155 : 
; 2156 : 		// move closer farther
; 2157 : 		if (continuous_target_acquisition_system_steer_up_fast_key)

  001d9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_fast_key
  001e0	74 18		 je	 SHORT $LN16@keyboard_s

; 2158 : 			movement_rate += COARSE_TRACKING_RATE;

  001e2	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  001e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4059000000000000
  001ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001f3	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  001f8	eb 40		 jmp	 SHORT $LN20@keyboard_s
$LN16@keyboard_s:

; 2159 : 		else if (continuous_target_acquisition_system_steer_up_fine_key)

  001fa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_fine_key
  00201	74 18		 je	 SHORT $LN18@keyboard_s

; 2160 : 			movement_rate += FINE_TRACKING_RATE;

  00203	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  00208	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4014000000000000
  00210	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00214	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  00219	eb 1f		 jmp	 SHORT $LN20@keyboard_s
$LN18@keyboard_s:

; 2161 : 		else if (continuous_target_acquisition_system_steer_up_key)

  0021b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_key
  00222	74 16		 je	 SHORT $LN20@keyboard_s

; 2162 : 			movement_rate += MEDIUM_TRACKING_RATE;

  00224	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  00229	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4034000000000000
  00231	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00235	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
$LN20@keyboard_s:

; 2163 : 
; 2164 : 		////////////////////////////////////////
; 2165 : 
; 2166 : 		if (continuous_target_acquisition_system_steer_down_fast_key)

  0023a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_fast_key
  00241	74 18		 je	 SHORT $LN21@keyboard_s

; 2167 : 			movement_rate -= COARSE_TRACKING_RATE;

  00243	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  00248	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4059000000000000
  00250	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00254	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  00259	eb 40		 jmp	 SHORT $LN25@keyboard_s
$LN21@keyboard_s:

; 2168 : 		else if (continuous_target_acquisition_system_steer_down_fine_key)

  0025b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_fine_key
  00262	74 18		 je	 SHORT $LN23@keyboard_s

; 2169 : 			movement_rate -= FINE_TRACKING_RATE;

  00264	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  00269	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4014000000000000
  00271	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00275	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
  0027a	eb 1f		 jmp	 SHORT $LN25@keyboard_s
$LN23@keyboard_s:

; 2170 : 		else if (continuous_target_acquisition_system_steer_down_key)

  0027c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_key
  00283	74 16		 je	 SHORT $LN25@keyboard_s

; 2171 : 			movement_rate -= MEDIUM_TRACKING_RATE;

  00285	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  0028a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  00292	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00296	f3 0f 11 45 fc	 movss	 DWORD PTR _movement_rate$7[ebp], xmm0
$LN25@keyboard_s:

; 2172 : 
; 2173 : 		if (!has_moved && movement_rate != 0.0)

  0029b	83 7d e8 00	 cmp	 DWORD PTR _has_moved$2[ebp], 0
  0029f	75 29		 jne	 SHORT $LN26@keyboard_s
  002a1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _movement_rate$7[ebp]
  002a6	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  002ae	9f		 lahf
  002af	f6 c4 44	 test	 ah, 68			; 00000044H
  002b2	7b 16		 jnp	 SHORT $LN26@keyboard_s

; 2174 : 		{
; 2175 : 			// if moving while in target lock then switch to point lock
; 2176 : 			if (eo_target_locked & TARGET_LOCK)

  002b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  002b9	83 e0 02	 and	 eax, 2
  002bc	74 05		 je	 SHORT $LN27@keyboard_s

; 2177 : 				switch_to_point_lock();

  002be	e8 00 00 00 00	 call	 ?switch_to_point_lock@@YGXXZ ; switch_to_point_lock
$LN27@keyboard_s:

; 2178 : 
; 2179 : 			has_moved = TRUE;

  002c3	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _has_moved$2[ebp], 1
$LN26@keyboard_s:

; 2180 : 		}
; 2181 : 
; 2182 : 		movement = movement_rate * 4 * get_delta_time();  // multiply vertical rate by two since it appears much smaller from usual angles

  002ca	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _movement_rate$7[ebp]
  002cf	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  002d7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  002df	f3 0f 11 45 f8	 movss	 DWORD PTR _movement$6[ebp], xmm0

; 2183 : 
; 2184 : 		eo_tracking_point.x += sin_heading * movement;

  002e4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _sin_heading$4[ebp]
  002e9	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _movement$6[ebp]
  002ee	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  002f6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A, xmm0

; 2185 : 		eo_tracking_point.z += cos_heading * movement;

  002fe	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _cos_heading$3[ebp]
  00303	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _movement$6[ebp]
  00308	f3 0f 58 05 08
	00 00 00	 addss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  00310	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8, xmm0

; 2186 : 
; 2187 : 		// keep point on ground (unless point off map)
; 2188 : 		if (has_moved && point_inside_map_area (&eo_tracking_point))

  00318	83 7d e8 00	 cmp	 DWORD PTR _has_moved$2[ebp], 0
  0031c	0f 84 2c 01 00
	00		 je	 $LN28@keyboard_s
  00322	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  0032a	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00331	0f 82 17 01 00
	00		 jb	 $LN28@keyboard_s
  00337	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0033f	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  00346	0f 82 02 01 00
	00		 jb	 $LN28@keyboard_s
  0034c	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  00354	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0035b	0f 82 ed 00 00
	00		 jb	 $LN28@keyboard_s
  00361	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00369	0f 2f 05 08 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  00370	0f 82 d8 00 00
	00		 jb	 $LN28@keyboard_s

; 2189 : 		{
; 2190 : 			helicopter *raw = (helicopter *) get_local_entity_data(get_gunship_entity());

  00376	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0037b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0037e	89 4d e4	 mov	 DWORD PTR _raw$1[ebp], ecx

; 2191 : 			eo_tracking_point.y = get_3d_terrain_point_data(eo_tracking_point.x, eo_tracking_point.z, &raw->ac.terrain_info);

  00381	8b 45 e4	 mov	 eax, DWORD PTR _raw$1[ebp]
  00384	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00389	50		 push	 eax
  0038a	51		 push	 ecx
  0038b	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  00393	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00398	51		 push	 ecx
  00399	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  003a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a6	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  003ab	d9 1d 04 00 00
	00		 fstp	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+4

; 2192 : 
; 2193 : 			// have to update server's tracking point so that missiles will aim in multiplayer
; 2194 : 			set_client_server_entity_vec3d(get_gunship_entity(), VEC3D_TYPE_EO_TRACKING_POINT, &eo_tracking_point);

  003b1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  003b8	74 0c		 je	 SHORT $LN52@keyboard_s
  003ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  003bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c1	89 4d a0	 mov	 DWORD PTR tv200[ebp], ecx
  003c4	eb 21		 jmp	 SHORT $LN53@keyboard_s
$LN52@keyboard_s:
  003c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??keyboard_slew_eo_system@@YGXMMM@Z@4JA
  003cc	83 c2 53	 add	 edx, 83			; 00000053H
  003cf	52		 push	 edx
  003d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003da	50		 push	 eax
  003db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e0	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv200[ebp], 0
$LN53@keyboard_s:
  003e7	b9 01 00 00 00	 mov	 ecx, 1
  003ec	85 c9		 test	 ecx, ecx
  003ee	74 09		 je	 SHORT $LN54@keyboard_s
  003f0	c7 45 9c 03 00
	00 00		 mov	 DWORD PTR tv208[ebp], 3
  003f7	eb 21		 jmp	 SHORT $LN55@keyboard_s
$LN54@keyboard_s:
  003f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??keyboard_slew_eo_system@@YGXMMM@Z@4JA
  003ff	83 c2 53	 add	 edx, 83			; 00000053H
  00402	52		 push	 edx
  00403	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00408	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0040d	50		 push	 eax
  0040e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00413	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv208[ebp], 0
$LN55@keyboard_s:
  0041a	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  0041f	6a 03		 push	 3
  00421	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00427	51		 push	 ecx
  00428	69 55 a0 c0 00
	00 00		 imul	 edx, DWORD PTR tv200[ebp], 192
  0042f	8b 45 9c	 mov	 eax, DWORD PTR tv208[ebp]
  00432	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*8]
  00439	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0043f	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00442	ff d0		 call	 eax

; 2195 : 
; 2196 : 			slave_target = NULL;

  00444	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
$LN28@keyboard_s:

; 2197 : 		}
; 2198 : 	}
; 2199 : 	else

  0044e	e9 40 03 00 00	 jmp	 $LN48@keyboard_s
$LN2@keyboard_s:

; 2200 : 	{
; 2201 : 		if (continuous_target_acquisition_system_steer_left_fast_key)

  00453	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_fast_key
  0045a	74 3f		 je	 SHORT $LN29@keyboard_s

; 2202 : 		{
; 2203 : 			eo_azimuth -= coarse_slew_rate;

  0045c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00464	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00469	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2204 : 			eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  00471	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  00476	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  0047b	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00480	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00484	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2205 : 			slave_target = NULL;

  0048c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  00496	e9 88 00 00 00	 jmp	 $LN33@keyboard_s
$LN29@keyboard_s:

; 2206 : 		}
; 2207 : 		else if (continuous_target_acquisition_system_steer_left_fine_key)

  0049b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_fine_key
  004a2	74 3c		 je	 SHORT $LN31@keyboard_s

; 2208 : 		{
; 2209 : 			eo_azimuth -= fine_slew_rate;

  004a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  004ac	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  004b1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2210 : 			eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  004b9	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  004be	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  004c3	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  004c8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  004cc	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2211 : 			slave_target = NULL;

  004d4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  004de	eb 43		 jmp	 SHORT $LN33@keyboard_s
$LN31@keyboard_s:

; 2212 : 		}
; 2213 : 		else if (continuous_target_acquisition_system_steer_left_key)

  004e0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_key
  004e7	74 3a		 je	 SHORT $LN33@keyboard_s

; 2214 : 		{
; 2215 : 			eo_azimuth -= medium_slew_rate;

  004e9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  004f1	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  004f6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2216 : 			eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  004fe	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  00503	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  00508	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0050d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00511	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2217 : 			slave_target = NULL;

  00519	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
$LN33@keyboard_s:

; 2218 : 		}
; 2219 : 
; 2220 : 		////////////////////////////////////////
; 2221 : 
; 2222 : 		if (continuous_target_acquisition_system_steer_right_fast_key)

  00523	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_fast_key
  0052a	74 3f		 je	 SHORT $LN34@keyboard_s

; 2223 : 		{
; 2224 : 			eo_azimuth += coarse_slew_rate;

  0052c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00534	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00539	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2225 : 			eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  00541	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  00546	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  0054b	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00550	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00554	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2226 : 			slave_target = NULL;

  0055c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  00566	e9 88 00 00 00	 jmp	 $LN38@keyboard_s
$LN34@keyboard_s:

; 2227 : 		}
; 2228 : 		else if (continuous_target_acquisition_system_steer_right_fine_key)

  0056b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_fine_key
  00572	74 3c		 je	 SHORT $LN36@keyboard_s

; 2229 : 		{
; 2230 : 			eo_azimuth += fine_slew_rate;

  00574	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  0057c	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  00581	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2231 : 			eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  00589	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  0058e	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  00593	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00598	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0059c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2232 : 			slave_target = NULL;

  005a4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  005ae	eb 43		 jmp	 SHORT $LN38@keyboard_s
$LN36@keyboard_s:

; 2233 : 		}
; 2234 : 		else if (continuous_target_acquisition_system_steer_right_key)

  005b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_key
  005b7	74 3a		 je	 SHORT $LN38@keyboard_s

; 2235 : 		{
; 2236 : 			eo_azimuth += medium_slew_rate;

  005b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  005c1	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  005c6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2237 : 			eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  005ce	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  005d3	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  005d8	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  005dd	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005e1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 2238 : 			slave_target = NULL;

  005e9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
$LN38@keyboard_s:

; 2239 : 		}
; 2240 : 
; 2241 : 		////////////////////////////////////////
; 2242 : 
; 2243 : 		if (continuous_target_acquisition_system_steer_up_fast_key)

  005f3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_fast_key
  005fa	74 3f		 je	 SHORT $LN39@keyboard_s

; 2244 : 		{
; 2245 : 			eo_elevation += coarse_slew_rate;

  005fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00604	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00609	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2246 : 			eo_elevation = min (eo_elevation, eo_max_elevation);

  00611	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  00616	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  0061b	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00620	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00624	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2247 : 			slave_target = NULL;

  0062c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  00636	e9 88 00 00 00	 jmp	 $LN43@keyboard_s
$LN39@keyboard_s:

; 2248 : 		}
; 2249 : 		else if (continuous_target_acquisition_system_steer_up_fine_key)

  0063b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_fine_key
  00642	74 3c		 je	 SHORT $LN41@keyboard_s

; 2250 : 		{
; 2251 : 			eo_elevation += fine_slew_rate;

  00644	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  0064c	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  00651	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2252 : 			eo_elevation = min (eo_elevation, eo_max_elevation);

  00659	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  0065e	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  00663	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00668	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0066c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2253 : 			slave_target = NULL;

  00674	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  0067e	eb 43		 jmp	 SHORT $LN43@keyboard_s
$LN41@keyboard_s:

; 2254 : 		}
; 2255 : 		else if (continuous_target_acquisition_system_steer_up_key)

  00680	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_key
  00687	74 3a		 je	 SHORT $LN43@keyboard_s

; 2256 : 		{
; 2257 : 			eo_elevation += medium_slew_rate;

  00689	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00691	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  00696	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2258 : 			eo_elevation = min (eo_elevation, eo_max_elevation);

  0069e	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  006a3	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  006a8	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  006ad	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006b1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2259 : 			slave_target = NULL;

  006b9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
$LN43@keyboard_s:

; 2260 : 		}
; 2261 : 
; 2262 : 		////////////////////////////////////////
; 2263 : 
; 2264 : 		if (continuous_target_acquisition_system_steer_down_fast_key)

  006c3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_fast_key
  006ca	74 3f		 je	 SHORT $LN44@keyboard_s

; 2265 : 		{
; 2266 : 			eo_elevation -= coarse_slew_rate;

  006cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  006d4	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  006d9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2267 : 			eo_elevation = max (eo_elevation, eo_min_elevation);

  006e1	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  006e6	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  006eb	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  006f0	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006f4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2268 : 			slave_target = NULL;

  006fc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  00706	e9 88 00 00 00	 jmp	 $LN48@keyboard_s
$LN44@keyboard_s:

; 2269 : 		}
; 2270 : 		else if (continuous_target_acquisition_system_steer_down_fine_key)

  0070b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_fine_key
  00712	74 3c		 je	 SHORT $LN46@keyboard_s

; 2271 : 		{
; 2272 : 			eo_elevation -= fine_slew_rate;

  00714	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  0071c	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  00721	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2273 : 			eo_elevation = max (eo_elevation, eo_min_elevation);

  00729	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  0072e	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  00733	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00738	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0073c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2274 : 			slave_target = NULL;

  00744	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  0074e	eb 43		 jmp	 SHORT $LN48@keyboard_s
$LN46@keyboard_s:

; 2275 : 		}
; 2276 : 		else if (continuous_target_acquisition_system_steer_down_key)

  00750	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_key
  00757	74 3a		 je	 SHORT $LN48@keyboard_s

; 2277 : 		{
; 2278 : 			eo_elevation -= medium_slew_rate;

  00759	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00761	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  00766	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2279 : 			eo_elevation = max (eo_elevation, eo_min_elevation);

  0076e	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  00773	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  00778	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0077d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00781	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 2280 : 			slave_target = NULL;

  00789	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
$LN48@keyboard_s:

; 2281 : 		}
; 2282 : 	}
; 2283 : }

  00793	5f		 pop	 edi
  00794	5e		 pop	 esi
  00795	5b		 pop	 ebx
  00796	8b e5		 mov	 esp, ebp
  00798	5d		 pop	 ebp
  00799	c2 0c 00	 ret	 12			; 0000000cH
?keyboard_slew_eo_system@@YGXMMM@Z ENDP			; keyboard_slew_eo_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_range_to_target@@YGMXZ
_TEXT	SEGMENT
tv155 = -88						; size = 4
tv134 = -88						; size = 4
tv79 = -88						; size = 4
tv147 = -84						; size = 4
tv94 = -84						; size = 4
tv71 = -84						; size = 4
_target_position$1 = -16				; size = 4
_source_position$2 = -12				; size = 4
_target$ = -8						; size = 4
_rangefinder$ = -4					; size = 4
?get_range_to_target@@YGMXZ PROC			; get_range_to_target, COMDAT

; 2083 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2084 : 	rangefinding_system rangefinder = get_range_finder();

  00009	e8 00 00 00 00	 call	 ?get_range_finder@@YG?AW4rangefinding_system@@XZ ; get_range_finder
  0000e	89 45 fc	 mov	 DWORD PTR _rangefinder$[ebp], eax

; 2085 : 	entity* target = get_local_entity_parent(get_gunship_entity(), LIST_TYPE_TARGET);

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00018	74 0c		 je	 SHORT $LN10@get_range_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d ac	 mov	 DWORD PTR tv71[ebp], ecx
  00024	eb 21		 jmp	 SHORT $LN11@get_range_
$LN10@get_range_:
  00026	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA
  0002c	83 c2 02	 add	 edx, 2
  0002f	52		 push	 edx
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00040	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN11@get_range_:
  00047	b9 01 00 00 00	 mov	 ecx, 1
  0004c	85 c9		 test	 ecx, ecx
  0004e	74 09		 je	 SHORT $LN12@get_range_
  00050	c7 45 a8 26 00
	00 00		 mov	 DWORD PTR tv79[ebp], 38	; 00000026H
  00057	eb 21		 jmp	 SHORT $LN13@get_range_
$LN12@get_range_:
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA
  0005f	83 c2 02	 add	 edx, 2
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00073	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN13@get_range_:
  0007a	6a 26		 push	 38			; 00000026H
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00082	51		 push	 ecx
  00083	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  0008a	8b 45 a8	 mov	 eax, DWORD PTR tv79[ebp]
  0008d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00094	ff d1		 call	 ecx
  00096	89 45 f8	 mov	 DWORD PTR _target$[ebp], eax

; 2086 : 
; 2087 : 	if (target || eo_is_tracking_point())

  00099	83 7d f8 00	 cmp	 DWORD PTR _target$[ebp], 0
  0009d	75 0d		 jne	 SHORT $LN4@get_range_
  0009f	e8 00 00 00 00	 call	 ?eo_is_tracking_point@@YGHXZ ; eo_is_tracking_point
  000a4	85 c0		 test	 eax, eax
  000a6	0f 84 3a 01 00
	00		 je	 $LN2@get_range_
$LN4@get_range_:

; 2088 : 	{
; 2089 : 		vec3d* source_position = get_local_entity_vec3d_ptr (get_gunship_entity(), VEC3D_TYPE_POSITION);

  000ac	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000b3	74 0c		 je	 SHORT $LN14@get_range_
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	89 4d ac	 mov	 DWORD PTR tv94[ebp], ecx
  000bf	eb 21		 jmp	 SHORT $LN15@get_range_
$LN14@get_range_:
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA
  000c7	83 c2 06	 add	 edx, 6
  000ca	52		 push	 edx
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN15@get_range_:
  000e2	b9 01 00 00 00	 mov	 ecx, 1
  000e7	85 c9		 test	 ecx, ecx
  000e9	74 09		 je	 SHORT $LN16@get_range_
  000eb	c7 45 a8 08 00
	00 00		 mov	 DWORD PTR tv134[ebp], 8
  000f2	eb 21		 jmp	 SHORT $LN17@get_range_
$LN16@get_range_:
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA
  000fa	83 c2 06	 add	 edx, 6
  000fd	52		 push	 edx
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN17@get_range_:
  00115	6a 08		 push	 8
  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0011d	51		 push	 ecx
  0011e	6b 55 ac 60	 imul	 edx, DWORD PTR tv94[ebp], 96
  00122	8b 45 a8	 mov	 eax, DWORD PTR tv134[ebp]
  00125	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0012c	ff d1		 call	 ecx
  0012e	89 45 f4	 mov	 DWORD PTR _source_position$2[ebp], eax

; 2090 : 		vec3d* target_position;
; 2091 : 
; 2092 : 		if (target)

  00131	83 7d f8 00	 cmp	 DWORD PTR _target$[ebp], 0
  00135	74 7f		 je	 SHORT $LN5@get_range_

; 2093 : 			target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  00137	83 7d f8 00	 cmp	 DWORD PTR _target$[ebp], 0
  0013b	74 0a		 je	 SHORT $LN18@get_range_
  0013d	8b 45 f8	 mov	 eax, DWORD PTR _target$[ebp]
  00140	8b 08		 mov	 ecx, DWORD PTR [eax]
  00142	89 4d ac	 mov	 DWORD PTR tv147[ebp], ecx
  00145	eb 21		 jmp	 SHORT $LN19@get_range_
$LN18@get_range_:
  00147	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA
  0014d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00150	52		 push	 edx
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00161	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN19@get_range_:
  00168	b9 01 00 00 00	 mov	 ecx, 1
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 09		 je	 SHORT $LN20@get_range_
  00171	c7 45 a8 08 00
	00 00		 mov	 DWORD PTR tv155[ebp], 8
  00178	eb 21		 jmp	 SHORT $LN21@get_range_
$LN20@get_range_:
  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_range_to_target@@YGMXZ@4JA
  00180	83 c2 0a	 add	 edx, 10			; 0000000aH
  00183	52		 push	 edx
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00194	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN21@get_range_:
  0019b	6a 08		 push	 8
  0019d	8b 4d f8	 mov	 ecx, DWORD PTR _target$[ebp]
  001a0	51		 push	 ecx
  001a1	6b 55 ac 60	 imul	 edx, DWORD PTR tv147[ebp], 96
  001a5	8b 45 a8	 mov	 eax, DWORD PTR tv155[ebp]
  001a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001af	ff d1		 call	 ecx
  001b1	89 45 f0	 mov	 DWORD PTR _target_position$1[ebp], eax

; 2094 : 		else

  001b4	eb 08		 jmp	 SHORT $LN6@get_range_
$LN5@get_range_:

; 2095 : 			target_position = get_eo_tracking_point();

  001b6	e8 00 00 00 00	 call	 ?get_eo_tracking_point@@YGPAUVEC3D@@XZ ; get_eo_tracking_point
  001bb	89 45 f0	 mov	 DWORD PTR _target_position$1[ebp], eax
$LN6@get_range_:

; 2096 : 
; 2097 : 		if (rangefinder != RANGEFINDER_TRIANGULATION)

  001be	83 7d fc 02	 cmp	 DWORD PTR _rangefinder$[ebp], 2
  001c2	74 11		 je	 SHORT $LN7@get_range_

; 2098 : 			return get_3d_range (source_position, target_position);

  001c4	8b 45 f0	 mov	 eax, DWORD PTR _target_position$1[ebp]
  001c7	50		 push	 eax
  001c8	8b 4d f4	 mov	 ecx, DWORD PTR _source_position$2[ebp]
  001cb	51		 push	 ecx
  001cc	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  001d1	eb 15		 jmp	 SHORT $LN3@get_range_

; 2099 : 		else

  001d3	eb 0f		 jmp	 SHORT $LN8@get_range_
$LN7@get_range_:

; 2100 : 			return get_triangulated_by_position_range(source_position, target_position);

  001d5	8b 45 f0	 mov	 eax, DWORD PTR _target_position$1[ebp]
  001d8	50		 push	 eax
  001d9	8b 4d f4	 mov	 ecx, DWORD PTR _source_position$2[ebp]
  001dc	51		 push	 ecx
  001dd	e8 00 00 00 00	 call	 ?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ; get_triangulated_by_position_range
  001e2	eb 04		 jmp	 SHORT $LN3@get_range_
$LN8@get_range_:

; 2101 : 	}
; 2102 : 	else

  001e4	eb 02		 jmp	 SHORT $LN3@get_range_
$LN2@get_range_:

; 2103 : 		return 0.0;

  001e6	d9 ee		 fldz
$LN3@get_range_:

; 2104 : }

  001e8	5f		 pop	 edi
  001e9	5e		 pop	 esi
  001ea	5b		 pop	 ebx
  001eb	8b e5		 mov	 esp, ebp
  001ed	5d		 pop	 ebp
  001ee	c3		 ret	 0
?get_range_to_target@@YGMXZ ENDP			; get_range_to_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?eo_tracking_point_valid@@YGHPAUVEC3D@@@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_tracking_point$ = 8					; size = 4
?eo_tracking_point_valid@@YGHPAUVEC3D@@@Z PROC		; eo_tracking_point_valid, COMDAT

; 2044 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2045 : 	return tracking_point && (tracking_point->y != NOT_TRACKING);

  00009	83 7d 08 00	 cmp	 DWORD PTR _tracking_point$[ebp], 0
  0000d	74 1f		 je	 SHORT $LN3@eo_trackin
  0000f	8b 45 08	 mov	 eax, DWORD PTR _tracking_point$[ebp]
  00012	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  00017	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@c0c3880000000000
  0001f	9f		 lahf
  00020	f6 c4 44	 test	 ah, 68			; 00000044H
  00023	7b 09		 jnp	 SHORT $LN3@eo_trackin
  00025	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN4@eo_trackin
$LN3@eo_trackin:
  0002e	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@eo_trackin:
  00035	8b 45 bc	 mov	 eax, DWORD PTR tv68[ebp]

; 2046 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?eo_tracking_point_valid@@YGHPAUVEC3D@@@Z ENDP		; eo_tracking_point_valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?eo_stop_tracking@@YGXXZ
_TEXT	SEGMENT
tv78 = -72						; size = 4
tv70 = -68						; size = 4
?eo_stop_tracking@@YGXXZ PROC				; eo_stop_tracking, COMDAT

; 2024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2025 : 	eo_tracking_point.x = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A, xmm0

; 2026 : 	eo_tracking_point.y = NOT_TRACKING;

  00014	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c61c4000
  0001c	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+4, xmm0

; 2027 : 	eo_tracking_point.z = 0.0;

  00024	0f 57 c0	 xorps	 xmm0, xmm0
  00027	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8, xmm0

; 2028 : 
; 2029 : 	set_client_server_entity_vec3d(get_gunship_entity(), VEC3D_TYPE_EO_TRACKING_POINT, &eo_tracking_point);

  0002f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00036	74 0c		 je	 SHORT $LN3@eo_stop_tr
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	89 4d bc	 mov	 DWORD PTR tv70[ebp], ecx
  00042	eb 21		 jmp	 SHORT $LN4@eo_stop_tr
$LN3@eo_stop_tr:
  00044	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??eo_stop_tracking@@YGXXZ@4JA
  0004a	83 c2 05	 add	 edx, 5
  0004d	52		 push	 edx
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005e	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@eo_stop_tr:
  00065	b9 01 00 00 00	 mov	 ecx, 1
  0006a	85 c9		 test	 ecx, ecx
  0006c	74 09		 je	 SHORT $LN5@eo_stop_tr
  0006e	c7 45 b8 03 00
	00 00		 mov	 DWORD PTR tv78[ebp], 3
  00075	eb 21		 jmp	 SHORT $LN6@eo_stop_tr
$LN5@eo_stop_tr:
  00077	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??eo_stop_tracking@@YGXXZ@4JA
  0007d	83 c2 05	 add	 edx, 5
  00080	52		 push	 edx
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00086	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00091	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN6@eo_stop_tr:
  00098	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  0009d	6a 03		 push	 3
  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000a5	51		 push	 ecx
  000a6	69 55 bc c0 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 192
  000ad	8b 45 b8	 mov	 eax, DWORD PTR tv78[ebp]
  000b0	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*8]
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  000bd	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000c0	ff d0		 call	 eax

; 2030 : 
; 2031 : 	eo_target_locked &= ~POINT_LOCK;

  000c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  000c7	83 e0 fe	 and	 eax, -2			; fffffffeH
  000ca	a3 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, eax ; eo_target_locked

; 2032 : }

  000cf	5f		 pop	 edi
  000d0	5e		 pop	 esi
  000d1	5b		 pop	 ebx
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
?eo_stop_tracking@@YGXXZ ENDP				; eo_stop_tracking
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?eo_start_tracking@@YGXPAUVEC3D@@@Z
_TEXT	SEGMENT
tv79 = -72						; size = 4
tv71 = -68						; size = 4
_tracking_point$ = 8					; size = 4
?eo_start_tracking@@YGXPAUVEC3D@@@Z PROC		; eo_start_tracking, COMDAT

; 2035 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2036 : 	eo_target_locked = POINT_LOCK;

  00009	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 1 ; eo_target_locked

; 2037 : 	lock_terrain = TRUE;

  00013	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 1

; 2038 : 
; 2039 : 	eo_tracking_point = *tracking_point;

  0001d	8b 45 08	 mov	 eax, DWORD PTR _tracking_point$[ebp]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	89 0d 00 00 00
	00		 mov	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A, ecx
  00028	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0002b	89 15 04 00 00
	00		 mov	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+4, edx
  00031	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00034	a3 08 00 00 00	 mov	 DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8, eax

; 2040 : 	set_client_server_entity_vec3d(get_gunship_entity(), VEC3D_TYPE_EO_TRACKING_POINT, &eo_tracking_point);

  00039	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00040	74 0c		 je	 SHORT $LN3@eo_start_t
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4d bc	 mov	 DWORD PTR tv71[ebp], ecx
  0004c	eb 21		 jmp	 SHORT $LN4@eo_start_t
$LN3@eo_start_t:
  0004e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??eo_start_tracking@@YGXPAUVEC3D@@@Z@4JA
  00054	83 c2 05	 add	 edx, 5
  00057	52		 push	 edx
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00068	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN4@eo_start_t:
  0006f	b9 01 00 00 00	 mov	 ecx, 1
  00074	85 c9		 test	 ecx, ecx
  00076	74 09		 je	 SHORT $LN5@eo_start_t
  00078	c7 45 b8 03 00
	00 00		 mov	 DWORD PTR tv79[ebp], 3
  0007f	eb 21		 jmp	 SHORT $LN6@eo_start_t
$LN5@eo_start_t:
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??eo_start_tracking@@YGXPAUVEC3D@@@Z@4JA
  00087	83 c2 05	 add	 edx, 5
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN6@eo_start_t:
  000a2	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  000a7	6a 03		 push	 3
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000af	51		 push	 ecx
  000b0	69 55 bc c0 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 192
  000b7	8b 45 b8	 mov	 eax, DWORD PTR tv79[ebp]
  000ba	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*8]
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  000c7	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000ca	ff d0		 call	 eax

; 2041 : }

  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 04 00	 ret	 4
?eo_start_tracking@@YGXPAUVEC3D@@@Z ENDP		; eo_start_tracking
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_tracking_point@@YGPAUVEC3D@@XZ
_TEXT	SEGMENT
?get_eo_tracking_point@@YGPAUVEC3D@@XZ PROC		; get_eo_tracking_point, COMDAT

; 2016 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2017 : 	if (eo_tracking_point.y == NOT_TRACKING)

  00009	f3 0f 5a 05 04
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+4
  00011	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@c0c3880000000000
  00019	9f		 lahf
  0001a	f6 c4 44	 test	 ah, 68			; 00000044H
  0001d	7a 04		 jp	 SHORT $LN2@get_eo_tra

; 2018 : 		return NULL;

  0001f	33 c0		 xor	 eax, eax
  00021	eb 05		 jmp	 SHORT $LN1@get_eo_tra
$LN2@get_eo_tra:

; 2019 : 
; 2020 : 	return &eo_tracking_point;

  00023	b8 00 00 00 00	 mov	 eax, OFFSET ?eo_tracking_point@@3UVEC3D@@A
$LN1@get_eo_tra:

; 2021 : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?get_eo_tracking_point@@YGPAUVEC3D@@XZ ENDP		; get_eo_tracking_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?eo_is_tracking_point@@YGHXZ
_TEXT	SEGMENT
tv66 = -68						; size = 4
?eo_is_tracking_point@@YGHXZ PROC			; eo_is_tracking_point, COMDAT

; 2011 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2012 : 	return eo_tracking_point.y != NOT_TRACKING;

  00009	f3 0f 5a 05 04
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+4
  00011	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@c0c3880000000000
  00019	9f		 lahf
  0001a	f6 c4 44	 test	 ah, 68			; 00000044H
  0001d	7b 09		 jnp	 SHORT $LN3@eo_is_trac
  0001f	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@eo_is_trac
$LN3@eo_is_trac:
  00028	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@eo_is_trac:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv66[ebp]

; 2013 : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?eo_is_tracking_point@@YGHXZ ENDP			; eo_is_tracking_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?set_electrical_system_active@@YGXH@Z
_TEXT	SEGMENT
_active$ = 8						; size = 4
?set_electrical_system_active@@YGXH@Z PROC		; set_electrical_system_active, COMDAT

; 2001 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2002 : 	electrical_system_on = active;

  00009	8b 45 08	 mov	 eax, DWORD PTR _active$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?electrical_system_on@@3HA, eax

; 2003 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_electrical_system_active@@YGXH@Z ENDP		; set_electrical_system_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?electrical_system_active@@YGHXZ
_TEXT	SEGMENT
?electrical_system_active@@YGHXZ PROC			; electrical_system_active, COMDAT

; 1996 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1997 : 	return electrical_system_on;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?electrical_system_on@@3HA

; 1998 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?electrical_system_active@@YGHXZ ENDP			; electrical_system_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z
_TEXT	SEGMENT
tv151 = -96						; size = 4
tv93 = -92						; size = 8
tv94 = -84						; size = 8
_own_altitude$1 = -12					; size = 4
_range_2d$2 = -8					; size = 4
_angle$3 = -4						; size = 4
_ownship_position$ = 8					; size = 4
_target_position$ = 12					; size = 4
?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z PROC ; get_triangulated_by_position_range, COMDAT

; 309  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 310  : 	ASSERT(ownship_position && target_position);

  00009	83 7d 08 00	 cmp	 DWORD PTR _ownship_position$[ebp], 0
  0000d	74 06		 je	 SHORT $LN3@get_triang
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  00013	75 18		 jne	 SHORT $LN2@get_triang
$LN3@get_triang:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@CGIBCKJH@ownship_position?5?$CG?$CG?5target_posi@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_triang:

; 311  : 	if (ownship_position->y > target_position->y + 2.0)

  0002d	8b 45 08	 mov	 eax, DWORD PTR _ownship_position$[ebp]
  00030	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _target_position$[ebp]
  00038	f3 0f 5a 49 04	 cvtss2sd xmm1, DWORD PTR [ecx+4]
  0003d	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@4000000000000000
  00045	66 0f 2f c1	 comisd	 xmm0, xmm1
  00049	0f 86 b6 00 00
	00		 jbe	 $LN4@get_triang

; 312  : 	{
; 313  : 		float angle;
; 314  : 		float range_2d = get_2d_range(ownship_position, target_position);

  0004f	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00052	50		 push	 eax
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _ownship_position$[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  0005c	d9 5d f8	 fstp	 DWORD PTR _range_2d$2[ebp]

; 315  : 		float own_altitude = current_flight_dynamics->radar_altitude.value;

  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00064	f3 0f 10 80 44
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9284]
  0006c	f3 0f 11 45 f4	 movss	 DWORD PTR _own_altitude$1[ebp], xmm0

; 316  : 
; 317  : 		// angle to target
; 318  : 		angle = range_2d / (ownship_position->y - target_position->y);

  00071	8b 45 08	 mov	 eax, DWORD PTR _ownship_position$[ebp]
  00074	8b 4d 0c	 mov	 ecx, DWORD PTR _target_position$[ebp]
  00077	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0007c	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00081	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _range_2d$2[ebp]
  00086	f3 0f 5e c8	 divss	 xmm1, xmm0
  0008a	f3 0f 11 4d fc	 movss	 DWORD PTR _angle$3[ebp], xmm1

; 319  : 
; 320  : 		// calculate range based on ground being at same altitude at target's position
; 321  : 		return bound(angle * own_altitude, 0.0, 9900.0);

  0008f	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _angle$3[ebp]
  00094	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _own_altitude$1[ebp]
  00099	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0009d	0f 57 c9	 xorps	 xmm1, xmm1
  000a0	66 0f 2f c8	 comisd	 xmm1, xmm0
  000a4	76 0a		 jbe	 SHORT $LN9@get_triang
  000a6	0f 57 c0	 xorps	 xmm0, xmm0
  000a9	f2 0f 11 45 ac	 movsd	 QWORD PTR tv94[ebp], xmm0
  000ae	eb 44		 jmp	 SHORT $LN10@get_triang
$LN9@get_triang:
  000b0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _angle$3[ebp]
  000b5	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _own_altitude$1[ebp]
  000ba	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000be	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@40c3560000000000
  000c6	76 0f		 jbe	 SHORT $LN7@get_triang
  000c8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@40c3560000000000
  000d0	f2 0f 11 45 a4	 movsd	 QWORD PTR tv93[ebp], xmm0
  000d5	eb 13		 jmp	 SHORT $LN8@get_triang
$LN7@get_triang:
  000d7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _angle$3[ebp]
  000dc	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _own_altitude$1[ebp]
  000e1	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000e5	f2 0f 11 45 a4	 movsd	 QWORD PTR tv93[ebp], xmm0
$LN8@get_triang:
  000ea	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv93[ebp]
  000ef	f2 0f 11 45 ac	 movsd	 QWORD PTR tv94[ebp], xmm0
$LN10@get_triang:
  000f4	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv94[ebp]
  000f9	f3 0f 11 45 a0	 movss	 DWORD PTR tv151[ebp], xmm0
  000fe	d9 45 a0	 fld	 DWORD PTR tv151[ebp]
  00101	eb 08		 jmp	 SHORT $LN5@get_triang

; 322  : 	}
; 323  : 	else

  00103	eb 06		 jmp	 SHORT $LN5@get_triang
$LN4@get_triang:

; 324  : 		return -1.0;

  00105	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@bf800000
$LN5@get_triang:

; 325  : }

  0010b	5f		 pop	 edi
  0010c	5e		 pop	 esi
  0010d	5b		 pop	 ebx
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c2 08 00	 ret	 8
?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ENDP ; get_triangulated_by_position_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_triangulated_range@@YGMPAUENTITY@@@Z
_TEXT	SEGMENT
tv136 = -84						; size = 4
tv84 = -84						; size = 4
tv128 = -80						; size = 4
tv76 = -80						; size = 4
_ownship$ = -12						; size = 4
_ownship_position$ = -8					; size = 4
_target_position$ = -4					; size = 4
_target$ = 8						; size = 4
?get_triangulated_range@@YGMPAUENTITY@@@Z PROC		; get_triangulated_range, COMDAT

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 294  : 	vec3d *target_position, *ownship_position;
; 295  : 	entity* ownship = get_gunship_entity();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0000e	89 45 f4	 mov	 DWORD PTR _ownship$[ebp], eax

; 296  : 
; 297  : 	if (!target)

  00011	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00015	75 07		 jne	 SHORT $LN2@get_triang

; 298  : 		return 0.0;

  00017	d9 ee		 fldz
  00019	e9 25 01 00 00	 jmp	 $LN1@get_triang
$LN2@get_triang:

; 299  : 
; 300  : 	ASSERT(ownship);

  0001e	83 7d f4 00	 cmp	 DWORD PTR _ownship$[ebp], 0
  00022	75 18		 jne	 SHORT $LN3@get_triang
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA
  00029	83 c0 07	 add	 eax, 7
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_07KAPONOKE@ownship@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_triang:

; 301  : 
; 302  : 	ownship_position = get_local_entity_vec3d_ptr(ownship, VEC3D_TYPE_POSITION);

  0003c	83 7d f4 00	 cmp	 DWORD PTR _ownship$[ebp], 0
  00040	74 0a		 je	 SHORT $LN5@get_triang
  00042	8b 45 f4	 mov	 eax, DWORD PTR _ownship$[ebp]
  00045	8b 08		 mov	 ecx, DWORD PTR [eax]
  00047	89 4d b0	 mov	 DWORD PTR tv76[ebp], ecx
  0004a	eb 21		 jmp	 SHORT $LN6@get_triang
$LN5@get_triang:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA
  00052	83 c2 09	 add	 edx, 9
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN6@get_triang:
  0006d	b9 01 00 00 00	 mov	 ecx, 1
  00072	85 c9		 test	 ecx, ecx
  00074	74 09		 je	 SHORT $LN7@get_triang
  00076	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv84[ebp], 8
  0007d	eb 21		 jmp	 SHORT $LN8@get_triang
$LN7@get_triang:
  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA
  00085	83 c2 09	 add	 edx, 9
  00088	52		 push	 edx
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00099	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN8@get_triang:
  000a0	6a 08		 push	 8
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR _ownship$[ebp]
  000a5	51		 push	 ecx
  000a6	6b 55 b0 60	 imul	 edx, DWORD PTR tv76[ebp], 96
  000aa	8b 45 ac	 mov	 eax, DWORD PTR tv84[ebp]
  000ad	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000b4	ff d1		 call	 ecx
  000b6	89 45 f8	 mov	 DWORD PTR _ownship_position$[ebp], eax

; 303  : 	target_position = get_local_entity_vec3d_ptr(target, VEC3D_TYPE_POSITION);

  000b9	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000bd	74 0a		 je	 SHORT $LN9@get_triang
  000bf	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000c2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c4	89 4d b0	 mov	 DWORD PTR tv128[ebp], ecx
  000c7	eb 21		 jmp	 SHORT $LN10@get_triang
$LN9@get_triang:
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA
  000cf	83 c2 0a	 add	 edx, 10			; 0000000aH
  000d2	52		 push	 edx
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e3	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN10@get_triang:
  000ea	b9 01 00 00 00	 mov	 ecx, 1
  000ef	85 c9		 test	 ecx, ecx
  000f1	74 09		 je	 SHORT $LN11@get_triang
  000f3	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv136[ebp], 8
  000fa	eb 21		 jmp	 SHORT $LN12@get_triang
$LN11@get_triang:
  000fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_triangulated_range@@YGMPAUENTITY@@@Z@4JA
  00102	83 c2 0a	 add	 edx, 10			; 0000000aH
  00105	52		 push	 edx
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00116	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN12@get_triang:
  0011d	6a 08		 push	 8
  0011f	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00122	51		 push	 ecx
  00123	6b 55 b0 60	 imul	 edx, DWORD PTR tv128[ebp], 96
  00127	8b 45 ac	 mov	 eax, DWORD PTR tv136[ebp]
  0012a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00131	ff d1		 call	 ecx
  00133	89 45 fc	 mov	 DWORD PTR _target_position$[ebp], eax

; 304  : 
; 305  : 	return get_triangulated_by_position_range(ownship_position, target_position);

  00136	8b 45 fc	 mov	 eax, DWORD PTR _target_position$[ebp]
  00139	50		 push	 eax
  0013a	8b 4d f8	 mov	 ecx, DWORD PTR _ownship_position$[ebp]
  0013d	51		 push	 ecx
  0013e	e8 00 00 00 00	 call	 ?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ; get_triangulated_by_position_range
$LN1@get_triang:

; 306  : }

  00143	5f		 pop	 edi
  00144	5e		 pop	 esi
  00145	5b		 pop	 ebx
  00146	8b e5		 mov	 esp, ebp
  00148	5d		 pop	 ebp
  00149	c2 04 00	 ret	 4
?get_triangulated_range@@YGMPAUENTITY@@@Z ENDP		; get_triangulated_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?set_laser_is_active@@YGXH@Z
_TEXT	SEGMENT
_is_active$ = 8						; size = 4
?set_laser_is_active@@YGXH@Z PROC			; set_laser_is_active, COMDAT

; 1986 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1987 : 	laser_active = is_active;

  00009	8b 45 08	 mov	 eax, DWORD PTR _is_active$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?laser_active@@3HA, eax

; 1988 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_laser_is_active@@YGXH@Z ENDP			; set_laser_is_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?laser_is_active@@YGHXZ
_TEXT	SEGMENT
?laser_is_active@@YGHXZ PROC				; laser_is_active, COMDAT

; 1981 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1982 : 	return laser_active;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?laser_active@@3HA

; 1983 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?laser_is_active@@YGHXZ ENDP				; laser_is_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?get_eo_los_intercept_point@@YGMPAUVEC3D@@@Z
_TEXT	SEGMENT
_object_range$ = -44					; size = 4
_terrain_clear$ = -40					; size = 4
_los_end$ = -36						; size = 12
_los_start$ = -24					; size = 12
_object_intercept_point$ = -12				; size = 12
_intercept_point$ = 8					; size = 4
?get_eo_los_intercept_point@@YGMPAUVEC3D@@@Z PROC	; get_eo_los_intercept_point, COMDAT

; 701  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 702  : 	vec3d object_intercept_point, los_start, los_end;
; 703  : 	float terrain_clear = get_eo_boresight_terrain_los_clear_range(intercept_point);

  00009	8b 45 08	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?get_eo_boresight_terrain_los_clear_range@@YGMPAUVEC3D@@@Z ; get_eo_boresight_terrain_los_clear_range
  00012	d9 5d d8	 fstp	 DWORD PTR _terrain_clear$[ebp]

; 704  : 	float object_range = 10000.0;

  00015	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c4000
  0001d	f3 0f 11 45 d4	 movss	 DWORD PTR _object_range$[ebp], xmm0

; 705  : 
; 706  : 	los_start = eo_vp.position;

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A
  00027	89 45 e8	 mov	 DWORD PTR _los_start$[ebp], eax
  0002a	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4
  00030	89 4d ec	 mov	 DWORD PTR _los_start$[ebp+4], ecx
  00033	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8
  00039	89 55 f0	 mov	 DWORD PTR _los_start$[ebp+8], edx

; 707  : 
; 708  : 	los_end.x = los_start.x + eo_vp.zv.x * eo_max_visual_range;

  0003c	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+36
  00044	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  0004c	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _los_start$[ebp]
  00051	f3 0f 11 45 dc	 movss	 DWORD PTR _los_end$[ebp], xmm0

; 709  : 	los_end.y = los_start.y + eo_vp.zv.y * eo_max_visual_range;

  00056	f3 0f 10 05 28
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+40
  0005e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  00066	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _los_start$[ebp+4]
  0006b	f3 0f 11 45 e0	 movss	 DWORD PTR _los_end$[ebp+4], xmm0

; 710  : 	los_end.z = los_start.z + eo_vp.zv.z * eo_max_visual_range;

  00070	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+44
  00078	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  00080	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _los_start$[ebp+8]
  00085	f3 0f 11 45 e4	 movss	 DWORD PTR _los_end$[ebp+8], xmm0

; 711  : 
; 712  : 	object_range = get_eo_boresight_tree_los_clear_range (&los_start, &los_end, &object_intercept_point);

  0008a	8d 45 f4	 lea	 eax, DWORD PTR _object_intercept_point$[ebp]
  0008d	50		 push	 eax
  0008e	8d 4d dc	 lea	 ecx, DWORD PTR _los_end$[ebp]
  00091	51		 push	 ecx
  00092	8d 55 e8	 lea	 edx, DWORD PTR _los_start$[ebp]
  00095	52		 push	 edx
  00096	e8 00 00 00 00	 call	 ?get_eo_boresight_tree_los_clear_range@@YGMPAUVEC3D@@00@Z ; get_eo_boresight_tree_los_clear_range
  0009b	d9 5d d4	 fstp	 DWORD PTR _object_range$[ebp]

; 713  : 
; 714  : 	if (object_range < terrain_clear)  // some object blocks line of sigth before terrain

  0009e	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _terrain_clear$[ebp]
  000a3	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _object_range$[ebp]
  000a7	76 1b		 jbe	 SHORT $LN2@get_eo_los

; 715  : 	{
; 716  : 		*intercept_point = object_intercept_point;

  000a9	8b 45 08	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR _object_intercept_point$[ebp]
  000af	89 08		 mov	 DWORD PTR [eax], ecx
  000b1	8b 55 f8	 mov	 edx, DWORD PTR _object_intercept_point$[ebp+4]
  000b4	89 50 04	 mov	 DWORD PTR [eax+4], edx
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _object_intercept_point$[ebp+8]
  000ba	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 717  : 		return object_range;

  000bd	d9 45 d4	 fld	 DWORD PTR _object_range$[ebp]
  000c0	eb 05		 jmp	 SHORT $LN3@get_eo_los

; 718  : 	}
; 719  : 	else

  000c2	eb 03		 jmp	 SHORT $LN3@get_eo_los
$LN2@get_eo_los:

; 720  : 		return terrain_clear;

  000c4	d9 45 d8	 fld	 DWORD PTR _terrain_clear$[ebp]
$LN3@get_eo_los:

; 721  : }

  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c2 04 00	 ret	 4
?get_eo_los_intercept_point@@YGMPAUVEC3D@@@Z ENDP	; get_eo_los_intercept_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?copy_eo_zoom@@YGXPAUEO_PARAMS_DYNAMIC_MOVE@@0@Z
_TEXT	SEGMENT
_from$ = 8						; size = 4
_to$ = 12						; size = 4
?copy_eo_zoom@@YGXPAUEO_PARAMS_DYNAMIC_MOVE@@0@Z PROC	; copy_eo_zoom, COMDAT

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 225  : 	to->zoom = from->zoom;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _to$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _from$[ebp]
  0000f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00011	89 10		 mov	 DWORD PTR [eax], edx

; 226  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?copy_eo_zoom@@YGXPAUEO_PARAMS_DYNAMIC_MOVE@@0@Z ENDP	; copy_eo_zoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?make_panning_offset_from_axis@@YGMJ@Z
_TEXT	SEGMENT
tv84 = -76						; size = 4
_new_state$ = -8					; size = 4
_panning_deadzone_size$ = -4				; size = 4
_state$ = 8						; size = 4
?make_panning_offset_from_axis@@YGMJ@Z PROC		; make_panning_offset_from_axis, COMDAT

; 1837 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1838 : 	int panning_deadzone_size = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _panning_deadzone_size$[ebp], 0

; 1839 : 	long new_state;
; 1840 : 
; 1841 : 	if (state == 0 || (state > 0 && state < panning_deadzone_size) || (state < 0 && state > -panning_deadzone_size))

  00010	83 7d 08 00	 cmp	 DWORD PTR _state$[ebp], 0
  00014	74 1e		 je	 SHORT $LN3@make_panni
  00016	83 7d 08 00	 cmp	 DWORD PTR _state$[ebp], 0
  0001a	7e 08		 jle	 SHORT $LN4@make_panni
  0001c	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0001f	3b 45 fc	 cmp	 eax, DWORD PTR _panning_deadzone_size$[ebp]
  00022	7c 10		 jl	 SHORT $LN3@make_panni
$LN4@make_panni:
  00024	83 7d 08 00	 cmp	 DWORD PTR _state$[ebp], 0
  00028	7d 0e		 jge	 SHORT $LN2@make_panni
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _panning_deadzone_size$[ebp]
  0002d	f7 d8		 neg	 eax
  0002f	39 45 08	 cmp	 DWORD PTR _state$[ebp], eax
  00032	7e 04		 jle	 SHORT $LN2@make_panni
$LN3@make_panni:

; 1842 : 	{
; 1843 : 		return 0.0;

  00034	d9 ee		 fldz
  00036	eb 37		 jmp	 SHORT $LN1@make_panni
$LN2@make_panni:

; 1844 : 	}
; 1845 : 
; 1846 : 	if (state > 0)

  00038	83 7d 08 00	 cmp	 DWORD PTR _state$[ebp], 0
  0003c	7e 0b		 jle	 SHORT $LN5@make_panni

; 1847 : 	{
; 1848 : 		new_state = state - panning_deadzone_size;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  00041	2b 45 fc	 sub	 eax, DWORD PTR _panning_deadzone_size$[ebp]
  00044	89 45 f8	 mov	 DWORD PTR _new_state$[ebp], eax

; 1849 : 	}
; 1850 : 	else

  00047	eb 09		 jmp	 SHORT $LN6@make_panni
$LN5@make_panni:

; 1851 : 	{
; 1852 : 		new_state = state + panning_deadzone_size;

  00049	8b 45 08	 mov	 eax, DWORD PTR _state$[ebp]
  0004c	03 45 fc	 add	 eax, DWORD PTR _panning_deadzone_size$[ebp]
  0004f	89 45 f8	 mov	 DWORD PTR _new_state$[ebp], eax
$LN6@make_panni:

; 1853 : 	}
; 1854 : 
; 1855 : 	return new_state / (float)(10000 - panning_deadzone_size);

  00052	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _new_state$[ebp]
  00057	b8 10 27 00 00	 mov	 eax, 10000		; 00002710H
  0005c	2b 45 fc	 sub	 eax, DWORD PTR _panning_deadzone_size$[ebp]
  0005f	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  00063	f3 0f 5e c1	 divss	 xmm0, xmm1
  00067	f3 0f 11 45 b4	 movss	 DWORD PTR tv84[ebp], xmm0
  0006c	d9 45 b4	 fld	 DWORD PTR tv84[ebp]
$LN1@make_panni:

; 1856 : }

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?make_panning_offset_from_axis@@YGMJ@Z ENDP		; make_panning_offset_from_axis
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?convert_linear_view_value@@YGMPAUEO_PARAMS_DYNAMIC_MOVE@@@Z
_TEXT	SEGMENT
tv131 = -84						; size = 4
tv152 = -80						; size = 4
tv92 = -76						; size = 4
_ret$ = -8						; size = 4
_position_rescale_value$ = -4				; size = 4
_eo$ = 8						; size = 4
?convert_linear_view_value@@YGMPAUEO_PARAMS_DYNAMIC_MOVE@@@Z PROC ; convert_linear_view_value, COMDAT

; 1810 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1811 : 	float position_rescale_value = 1 - (log (eo->min_zoom) / log (eo->max_zoom));

  00009	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0000c	51		 push	 ecx
  0000d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	e8 00 00 00 00	 call	 ?log@@YGMM@Z		; log
  0001c	d9 5d b4	 fstp	 DWORD PTR tv92[ebp]
  0001f	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv92[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  00027	51		 push	 ecx
  00028	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0002d	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00032	f3 0f 11 45 b0	 movss	 DWORD PTR tv152[ebp], xmm0
  00037	e8 00 00 00 00	 call	 ?log@@YGMM@Z		; log
  0003c	d9 5d ac	 fstp	 DWORD PTR tv131[ebp]
  0003f	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv152[ebp]
  00044	f3 0f 5e 45 ac	 divss	 xmm0, DWORD PTR tv131[ebp]
  00049	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00051	f3 0f 5c c8	 subss	 xmm1, xmm0
  00055	f3 0f 11 4d fc	 movss	 DWORD PTR _position_rescale_value$[ebp], xmm1

; 1812 : 
; 1813 : 	float ret = pow (eo->max_zoom, 1 - (eo->zoom * position_rescale_value));

  0005a	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0005d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00061	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _position_rescale_value$[ebp]
  00066	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0006e	f3 0f 5c c8	 subss	 xmm1, xmm0
  00072	51		 push	 ecx
  00073	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0007b	51		 push	 ecx
  0007c	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	e8 00 00 00 00	 call	 ?pow@@YGMMM@Z		; pow
  0008b	d9 5d f8	 fstp	 DWORD PTR _ret$[ebp]

; 1814 : 
; 1815 : 	if (ret < eo->max_zoom)

  0008e	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00091	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00096	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _ret$[ebp]
  0009a	76 0a		 jbe	 SHORT $LN2@convert_li

; 1816 : 	{
; 1817 : 		return eo->max_zoom;

  0009c	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0009f	d9 40 08	 fld	 DWORD PTR [eax+8]
  000a2	eb 1d		 jmp	 SHORT $LN5@convert_li
  000a4	eb 1b		 jmp	 SHORT $LN5@convert_li
$LN2@convert_li:

; 1818 : 	}
; 1819 : 	else if (ret > eo->min_zoom)

  000a6	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  000a9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _ret$[ebp]
  000ae	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  000b2	76 0a		 jbe	 SHORT $LN4@convert_li

; 1820 : 	{
; 1821 : 		return eo->min_zoom;

  000b4	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  000b7	d9 40 04	 fld	 DWORD PTR [eax+4]
  000ba	eb 05		 jmp	 SHORT $LN5@convert_li

; 1822 : 	}
; 1823 : 	else

  000bc	eb 03		 jmp	 SHORT $LN5@convert_li
$LN4@convert_li:

; 1824 : 	{
; 1825 : 		return ret;

  000be	d9 45 f8	 fld	 DWORD PTR _ret$[ebp]
$LN5@convert_li:

; 1826 : 	}
; 1827 : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
?convert_linear_view_value@@YGMPAUEO_PARAMS_DYNAMIC_MOVE@@@Z ENDP ; convert_linear_view_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?select_previous_designated_eo_target@@YGXXZ
_TEXT	SEGMENT
tv175 = -84						; size = 4
tv151 = -84						; size = 4
tv130 = -84						; size = 4
tv79 = -84						; size = 4
tv167 = -80						; size = 4
tv143 = -80						; size = 4
tv91 = -80						; size = 4
tv71 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_previous_designated_eo_target@@YGXXZ PROC	; select_previous_designated_eo_target, COMDAT

; 1920 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1921 : 	entity
; 1922 : 		*target,
; 1923 : 		*new__target,
; 1924 : 		*current_target;
; 1925 : 
; 1926 : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1927 : 
; 1928 : 	if (!eo_low_light)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light
  00017	0f 85 77 02 00
	00		 jne	 $LN6@select_pre

; 1929 : 	{
; 1930 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN13@select_pre
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b0	 mov	 DWORD PTR tv71[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN14@select_pre
$LN13@select_pre:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA
  00038	83 c2 0a	 add	 edx, 10			; 0000000aH
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN14@select_pre:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN15@select_pre
  0005c	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv79[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN16@select_pre
$LN15@select_pre:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA
  0006b	83 c2 0a	 add	 edx, 10			; 0000000aH
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN16@select_pre:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  00096	8b 45 ac	 mov	 eax, DWORD PTR tv79[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 1931 : 
; 1932 : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  000a5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	74 7d		 je	 SHORT $LN9@select_pre
  000ab	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000af	74 0a		 je	 SHORT $LN17@select_pre
  000b1	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	89 4d b0	 mov	 DWORD PTR tv91[ebp], ecx
  000b9	eb 1d		 jmp	 SHORT $LN18@select_pre
$LN17@select_pre:
  000bb	68 8c 07 00 00	 push	 1932			; 0000078cH
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN18@select_pre:
  000d8	b8 01 00 00 00	 mov	 eax, 1
  000dd	85 c0		 test	 eax, eax
  000df	74 09		 je	 SHORT $LN19@select_pre
  000e1	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv130[ebp], 10 ; 0000000aH
  000e8	eb 1d		 jmp	 SHORT $LN20@select_pre
$LN19@select_pre:
  000ea	68 8c 07 00 00	 push	 1932			; 0000078cH
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fa	51		 push	 ecx
  000fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00100	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN20@select_pre:
  00107	6a 0a		 push	 10			; 0000000aH
  00109	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  0010c	52		 push	 edx
  0010d	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv91[ebp], 180
  00114	8b 4d ac	 mov	 ecx, DWORD PTR tv130[ebp]
  00117	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0011e	ff d2		 call	 edx
  00120	85 c0		 test	 eax, eax
  00122	0f 85 31 01 00
	00		 jne	 $LN7@select_pre
$LN9@select_pre:

; 1933 : 		{
; 1934 : 			//
; 1935 : 			// no current target or current target has been removed from the gunship target list
; 1936 : 			//
; 1937 : 
; 1938 : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  00128	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0012f	74 0c		 je	 SHORT $LN21@select_pre
  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	89 4d b0	 mov	 DWORD PTR tv143[ebp], ecx
  0013b	eb 21		 jmp	 SHORT $LN22@select_pre
$LN21@select_pre:
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA
  00143	83 c2 12	 add	 edx, 18			; 00000012H
  00146	52		 push	 edx
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00157	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN22@select_pre:
  0015e	b9 01 00 00 00	 mov	 ecx, 1
  00163	85 c9		 test	 ecx, ecx
  00165	74 09		 je	 SHORT $LN23@select_pre
  00167	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv151[ebp], 10 ; 0000000aH
  0016e	eb 21		 jmp	 SHORT $LN24@select_pre
$LN23@select_pre:
  00170	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA
  00176	83 c2 12	 add	 edx, 18			; 00000012H
  00179	52		 push	 edx
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN24@select_pre:
  00191	6a 0a		 push	 10			; 0000000aH
  00193	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00199	51		 push	 ecx
  0019a	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv143[ebp], 180
  001a1	8b 45 ac	 mov	 eax, DWORD PTR tv151[ebp]
  001a4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001ab	ff d1		 call	 ecx
  001ad	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_pre:

; 1939 : 
; 1940 : 			while (target)

  001b0	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001b4	0f 84 9d 00 00
	00		 je	 $LN3@select_pre

; 1941 : 			{
; 1942 : 				if (get_selectable_eo_target (target))

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  001c3	85 c0		 test	 eax, eax
  001c5	74 0b		 je	 SHORT $LN10@select_pre

; 1943 : 				{
; 1944 : 					new__target = target;

  001c7	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ca	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1945 : 
; 1946 : 					break;

  001cd	e9 85 00 00 00	 jmp	 $LN3@select_pre
$LN10@select_pre:

; 1947 : 				}
; 1948 : 
; 1949 : 				target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001d2	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001d6	74 0a		 je	 SHORT $LN25@select_pre
  001d8	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	89 4d b0	 mov	 DWORD PTR tv167[ebp], ecx
  001e0	eb 21		 jmp	 SHORT $LN26@select_pre
$LN25@select_pre:
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA
  001e8	83 c2 1d	 add	 edx, 29			; 0000001dH
  001eb	52		 push	 edx
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fc	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN26@select_pre:
  00203	b9 01 00 00 00	 mov	 ecx, 1
  00208	85 c9		 test	 ecx, ecx
  0020a	74 09		 je	 SHORT $LN27@select_pre
  0020c	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv175[ebp], 10 ; 0000000aH
  00213	eb 21		 jmp	 SHORT $LN28@select_pre
$LN27@select_pre:
  00215	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_eo_target@@YGXXZ@4JA
  0021b	83 c2 1d	 add	 edx, 29			; 0000001dH
  0021e	52		 push	 edx
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN28@select_pre:
  00236	6a 0a		 push	 10			; 0000000aH
  00238	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0023b	51		 push	 ecx
  0023c	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 180
  00243	8b 45 ac	 mov	 eax, DWORD PTR tv175[ebp]
  00246	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0024d	ff d1		 call	 ecx
  0024f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1950 : 			}

  00252	e9 59 ff ff ff	 jmp	 $LN2@select_pre
$LN3@select_pre:

; 1951 : 		}
; 1952 : 		else

  00257	eb 3b		 jmp	 SHORT $LN6@select_pre
$LN7@select_pre:

; 1953 : 		{
; 1954 : 			target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  00259	6a 0a		 push	 10			; 0000000aH
  0025b	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  0025e	50		 push	 eax
  0025f	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00264	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_pre:

; 1955 : 
; 1956 : 			while (target != current_target)

  00267	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0026a	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0026d	74 25		 je	 SHORT $LN6@select_pre

; 1957 : 			{
; 1958 : 				if (get_selectable_eo_target (target))

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  00278	85 c0		 test	 eax, eax
  0027a	74 08		 je	 SHORT $LN11@select_pre

; 1959 : 				{
; 1960 : 					new__target = target;

  0027c	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027f	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1961 : 
; 1962 : 					break;

  00282	eb 10		 jmp	 SHORT $LN6@select_pre
$LN11@select_pre:

; 1963 : 				}
; 1964 : 
; 1965 : 				target = get_local_entity_child_pred_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  00284	6a 0a		 push	 10			; 0000000aH
  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  0028f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1966 : 			}

  00292	eb d3		 jmp	 SHORT $LN4@select_pre
$LN6@select_pre:

; 1967 : 		}
; 1968 : 	}
; 1969 : 
; 1970 : 	set_eo_slave_target(new__target);

  00294	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?set_eo_slave_target@@YGXPAUENTITY@@@Z ; set_eo_slave_target

; 1971 : }

  0029d	5f		 pop	 edi
  0029e	5e		 pop	 esi
  0029f	5b		 pop	 ebx
  002a0	8b e5		 mov	 esp, ebp
  002a2	5d		 pop	 ebp
  002a3	c3		 ret	 0
?select_previous_designated_eo_target@@YGXXZ ENDP	; select_previous_designated_eo_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?select_next_designated_eo_target@@YGXXZ
_TEXT	SEGMENT
tv175 = -84						; size = 4
tv151 = -84						; size = 4
tv130 = -84						; size = 4
tv79 = -84						; size = 4
tv167 = -80						; size = 4
tv143 = -80						; size = 4
tv91 = -80						; size = 4
tv71 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_next_designated_eo_target@@YGXXZ PROC		; select_next_designated_eo_target, COMDAT

; 1866 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1867 : 	entity
; 1868 : 		*target,
; 1869 : 		*new__target,
; 1870 : 		*current_target;
; 1871 : 
; 1872 : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1873 : 
; 1874 : 	if (!eo_low_light)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light
  00017	0f 85 77 02 00
	00		 jne	 $LN6@select_nex

; 1875 : 	{
; 1876 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN13@select_nex
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b0	 mov	 DWORD PTR tv71[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN14@select_nex
$LN13@select_nex:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA
  00038	83 c2 0a	 add	 edx, 10			; 0000000aH
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN14@select_nex:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN15@select_nex
  0005c	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv79[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN16@select_nex
$LN15@select_nex:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA
  0006b	83 c2 0a	 add	 edx, 10			; 0000000aH
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN16@select_nex:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  00096	8b 45 ac	 mov	 eax, DWORD PTR tv79[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 1877 : 
; 1878 : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  000a5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	74 7d		 je	 SHORT $LN9@select_nex
  000ab	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000af	74 0a		 je	 SHORT $LN17@select_nex
  000b1	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	89 4d b0	 mov	 DWORD PTR tv91[ebp], ecx
  000b9	eb 1d		 jmp	 SHORT $LN18@select_nex
$LN17@select_nex:
  000bb	68 56 07 00 00	 push	 1878			; 00000756H
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN18@select_nex:
  000d8	b8 01 00 00 00	 mov	 eax, 1
  000dd	85 c0		 test	 eax, eax
  000df	74 09		 je	 SHORT $LN19@select_nex
  000e1	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv130[ebp], 10 ; 0000000aH
  000e8	eb 1d		 jmp	 SHORT $LN20@select_nex
$LN19@select_nex:
  000ea	68 56 07 00 00	 push	 1878			; 00000756H
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fa	51		 push	 ecx
  000fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00100	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN20@select_nex:
  00107	6a 0a		 push	 10			; 0000000aH
  00109	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  0010c	52		 push	 edx
  0010d	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv91[ebp], 180
  00114	8b 4d ac	 mov	 ecx, DWORD PTR tv130[ebp]
  00117	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0011e	ff d2		 call	 edx
  00120	85 c0		 test	 eax, eax
  00122	0f 85 31 01 00
	00		 jne	 $LN7@select_nex
$LN9@select_nex:

; 1879 : 		{
; 1880 : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  00128	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0012f	74 0c		 je	 SHORT $LN21@select_nex
  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	89 4d b0	 mov	 DWORD PTR tv143[ebp], ecx
  0013b	eb 21		 jmp	 SHORT $LN22@select_nex
$LN21@select_nex:
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA
  00143	83 c2 0e	 add	 edx, 14			; 0000000eH
  00146	52		 push	 edx
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00157	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN22@select_nex:
  0015e	b9 01 00 00 00	 mov	 ecx, 1
  00163	85 c9		 test	 ecx, ecx
  00165	74 09		 je	 SHORT $LN23@select_nex
  00167	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv151[ebp], 10 ; 0000000aH
  0016e	eb 21		 jmp	 SHORT $LN24@select_nex
$LN23@select_nex:
  00170	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA
  00176	83 c2 0e	 add	 edx, 14			; 0000000eH
  00179	52		 push	 edx
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN24@select_nex:
  00191	6a 0a		 push	 10			; 0000000aH
  00193	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00199	51		 push	 ecx
  0019a	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv143[ebp], 180
  001a1	8b 45 ac	 mov	 eax, DWORD PTR tv151[ebp]
  001a4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001ab	ff d1		 call	 ecx
  001ad	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_nex:

; 1881 : 
; 1882 : 			while (target)

  001b0	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001b4	0f 84 9d 00 00
	00		 je	 $LN3@select_nex

; 1883 : 			{
; 1884 : 				if (get_selectable_eo_target (target))

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  001c3	85 c0		 test	 eax, eax
  001c5	74 0b		 je	 SHORT $LN10@select_nex

; 1885 : 				{
; 1886 : 					new__target = target;

  001c7	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ca	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1887 : 
; 1888 : 					break;

  001cd	e9 85 00 00 00	 jmp	 $LN3@select_nex
$LN10@select_nex:

; 1889 : 				}
; 1890 : 
; 1891 : 				target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001d2	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001d6	74 0a		 je	 SHORT $LN25@select_nex
  001d8	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	89 4d b0	 mov	 DWORD PTR tv167[ebp], ecx
  001e0	eb 21		 jmp	 SHORT $LN26@select_nex
$LN25@select_nex:
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA
  001e8	83 c2 19	 add	 edx, 25			; 00000019H
  001eb	52		 push	 edx
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fc	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN26@select_nex:
  00203	b9 01 00 00 00	 mov	 ecx, 1
  00208	85 c9		 test	 ecx, ecx
  0020a	74 09		 je	 SHORT $LN27@select_nex
  0020c	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv175[ebp], 10 ; 0000000aH
  00213	eb 21		 jmp	 SHORT $LN28@select_nex
$LN27@select_nex:
  00215	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_eo_target@@YGXXZ@4JA
  0021b	83 c2 19	 add	 edx, 25			; 00000019H
  0021e	52		 push	 edx
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN28@select_nex:
  00236	6a 0a		 push	 10			; 0000000aH
  00238	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0023b	51		 push	 ecx
  0023c	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 180
  00243	8b 45 ac	 mov	 eax, DWORD PTR tv175[ebp]
  00246	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0024d	ff d1		 call	 ecx
  0024f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1892 : 			}

  00252	e9 59 ff ff ff	 jmp	 $LN2@select_nex
$LN3@select_nex:

; 1893 : 		}
; 1894 : 		else

  00257	eb 3b		 jmp	 SHORT $LN6@select_nex
$LN7@select_nex:

; 1895 : 		{
; 1896 : 			target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  00259	6a 0a		 push	 10			; 0000000aH
  0025b	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  0025e	50		 push	 eax
  0025f	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00264	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_nex:

; 1897 : 
; 1898 : 			while (target != current_target)

  00267	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0026a	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0026d	74 25		 je	 SHORT $LN6@select_nex

; 1899 : 			{
; 1900 : 				if (get_selectable_eo_target (target))

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  00278	85 c0		 test	 eax, eax
  0027a	74 08		 je	 SHORT $LN11@select_nex

; 1901 : 				{
; 1902 : 					new__target = target;

  0027c	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027f	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1903 : 
; 1904 : 					break;

  00282	eb 10		 jmp	 SHORT $LN6@select_nex
$LN11@select_nex:

; 1905 : 				}
; 1906 : 
; 1907 : 				target = get_local_entity_child_succ_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  00284	6a 0a		 push	 10			; 0000000aH
  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  0028f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1908 : 			}

  00292	eb d3		 jmp	 SHORT $LN4@select_nex
$LN6@select_nex:

; 1909 : 		}
; 1910 : 	}
; 1911 : 
; 1912 : 	set_eo_slave_target(new__target);

  00294	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?set_eo_slave_target@@YGXPAUENTITY@@@Z ; set_eo_slave_target

; 1913 : }

  0029d	5f		 pop	 edi
  0029e	5e		 pop	 esi
  0029f	5b		 pop	 ebx
  002a0	8b e5		 mov	 esp, ebp
  002a2	5d		 pop	 ebp
  002a3	c3		 ret	 0
?select_next_designated_eo_target@@YGXXZ ENDP		; select_next_designated_eo_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?select_previous_eo_target@@YGXXZ
_TEXT	SEGMENT
tv175 = -84						; size = 4
tv151 = -84						; size = 4
tv130 = -84						; size = 4
tv79 = -84						; size = 4
tv167 = -80						; size = 4
tv143 = -80						; size = 4
tv91 = -80						; size = 4
tv71 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_previous_eo_target@@YGXXZ PROC			; select_previous_eo_target, COMDAT

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1744 : 	entity
; 1745 : 		*target,
; 1746 : 		*new__target,
; 1747 : 		*current_target;
; 1748 : 
; 1749 : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1750 : 
; 1751 : 	if (!eo_low_light)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light
  00017	0f 85 77 02 00
	00		 jne	 $LN6@select_pre

; 1752 : 	{
; 1753 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN14@select_pre
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b0	 mov	 DWORD PTR tv71[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN15@select_pre
$LN14@select_pre:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA
  00038	83 c2 0a	 add	 edx, 10			; 0000000aH
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN15@select_pre:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN16@select_pre
  0005c	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv79[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN17@select_pre
$LN16@select_pre:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA
  0006b	83 c2 0a	 add	 edx, 10			; 0000000aH
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN17@select_pre:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  00096	8b 45 ac	 mov	 eax, DWORD PTR tv79[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 1754 : 
; 1755 : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET) == NULL))

  000a5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	74 7d		 je	 SHORT $LN9@select_pre
  000ab	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000af	74 0a		 je	 SHORT $LN18@select_pre
  000b1	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	89 4d b0	 mov	 DWORD PTR tv91[ebp], ecx
  000b9	eb 1d		 jmp	 SHORT $LN19@select_pre
$LN18@select_pre:
  000bb	68 db 06 00 00	 push	 1755			; 000006dbH
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN19@select_pre:
  000d8	b8 01 00 00 00	 mov	 eax, 1
  000dd	85 c0		 test	 eax, eax
  000df	74 09		 je	 SHORT $LN20@select_pre
  000e1	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv130[ebp], 18 ; 00000012H
  000e8	eb 1d		 jmp	 SHORT $LN21@select_pre
$LN20@select_pre:
  000ea	68 db 06 00 00	 push	 1755			; 000006dbH
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fa	51		 push	 ecx
  000fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00100	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN21@select_pre:
  00107	6a 12		 push	 18			; 00000012H
  00109	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  0010c	52		 push	 edx
  0010d	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv91[ebp], 180
  00114	8b 4d ac	 mov	 ecx, DWORD PTR tv130[ebp]
  00117	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0011e	ff d2		 call	 edx
  00120	85 c0		 test	 eax, eax
  00122	0f 85 31 01 00
	00		 jne	 $LN7@select_pre
$LN9@select_pre:

; 1756 : 		{
; 1757 : 			//
; 1758 : 			// no current target or current target has been removed from the gunship target list
; 1759 : 			//
; 1760 : 
; 1761 : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_GUNSHIP_TARGET);

  00128	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0012f	74 0c		 je	 SHORT $LN22@select_pre
  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	89 4d b0	 mov	 DWORD PTR tv143[ebp], ecx
  0013b	eb 21		 jmp	 SHORT $LN23@select_pre
$LN22@select_pre:
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA
  00143	83 c2 12	 add	 edx, 18			; 00000012H
  00146	52		 push	 edx
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00157	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN23@select_pre:
  0015e	b9 01 00 00 00	 mov	 ecx, 1
  00163	85 c9		 test	 ecx, ecx
  00165	74 09		 je	 SHORT $LN24@select_pre
  00167	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv151[ebp], 18 ; 00000012H
  0016e	eb 21		 jmp	 SHORT $LN25@select_pre
$LN24@select_pre:
  00170	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA
  00176	83 c2 12	 add	 edx, 18			; 00000012H
  00179	52		 push	 edx
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN25@select_pre:
  00191	6a 12		 push	 18			; 00000012H
  00193	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00199	51		 push	 ecx
  0019a	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv143[ebp], 180
  001a1	8b 45 ac	 mov	 eax, DWORD PTR tv151[ebp]
  001a4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001ab	ff d1		 call	 ecx
  001ad	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_pre:

; 1762 : 
; 1763 : 			while (target)

  001b0	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001b4	0f 84 9d 00 00
	00		 je	 $LN3@select_pre

; 1764 : 			{
; 1765 : 				if (get_selectable_eo_target (target))

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  001c3	85 c0		 test	 eax, eax
  001c5	74 0b		 je	 SHORT $LN10@select_pre

; 1766 : 				{
; 1767 : 					new__target = target;

  001c7	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ca	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1768 : 
; 1769 : 					break;

  001cd	e9 85 00 00 00	 jmp	 $LN3@select_pre
$LN10@select_pre:

; 1770 : 				}
; 1771 : 
; 1772 : 				target = get_local_entity_child_succ (target, LIST_TYPE_GUNSHIP_TARGET);

  001d2	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001d6	74 0a		 je	 SHORT $LN26@select_pre
  001d8	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	89 4d b0	 mov	 DWORD PTR tv167[ebp], ecx
  001e0	eb 21		 jmp	 SHORT $LN27@select_pre
$LN26@select_pre:
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA
  001e8	83 c2 1d	 add	 edx, 29			; 0000001dH
  001eb	52		 push	 edx
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fc	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN27@select_pre:
  00203	b9 01 00 00 00	 mov	 ecx, 1
  00208	85 c9		 test	 ecx, ecx
  0020a	74 09		 je	 SHORT $LN28@select_pre
  0020c	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv175[ebp], 18 ; 00000012H
  00213	eb 21		 jmp	 SHORT $LN29@select_pre
$LN28@select_pre:
  00215	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_eo_target@@YGXXZ@4JA
  0021b	83 c2 1d	 add	 edx, 29			; 0000001dH
  0021e	52		 push	 edx
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN29@select_pre:
  00236	6a 12		 push	 18			; 00000012H
  00238	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0023b	51		 push	 ecx
  0023c	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 180
  00243	8b 45 ac	 mov	 eax, DWORD PTR tv175[ebp]
  00246	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0024d	ff d1		 call	 ecx
  0024f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1773 : 			}

  00252	e9 59 ff ff ff	 jmp	 $LN2@select_pre
$LN3@select_pre:

; 1774 : 		}
; 1775 : 		else

  00257	eb 3b		 jmp	 SHORT $LN6@select_pre
$LN7@select_pre:

; 1776 : 		{
; 1777 : 			target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00259	6a 12		 push	 18			; 00000012H
  0025b	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  0025e	50		 push	 eax
  0025f	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00264	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_pre:

; 1778 : 
; 1779 : 			while (target != current_target)

  00267	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0026a	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0026d	74 25		 je	 SHORT $LN6@select_pre

; 1780 : 			{
; 1781 : 				if (get_selectable_eo_target (target))

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  00278	85 c0		 test	 eax, eax
  0027a	74 08		 je	 SHORT $LN11@select_pre

; 1782 : 				{
; 1783 : 					new__target = target;

  0027c	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027f	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1784 : 
; 1785 : 					break;

  00282	eb 10		 jmp	 SHORT $LN6@select_pre
$LN11@select_pre:

; 1786 : 				}
; 1787 : 
; 1788 : 				target = get_local_entity_child_pred_circular (target, LIST_TYPE_GUNSHIP_TARGET);

  00284	6a 12		 push	 18			; 00000012H
  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  0028f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1789 : 			}

  00292	eb d3		 jmp	 SHORT $LN4@select_pre
$LN6@select_pre:

; 1790 : 		}
; 1791 : 	}
; 1792 : 
; 1793 : 	set_eo_slave_target(new__target);

  00294	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?set_eo_slave_target@@YGXPAUENTITY@@@Z ; set_eo_slave_target

; 1794 : 
; 1795 :   if(new__target)

  0029d	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  002a1	74 09		 je	 SHORT $LN1@select_pre

; 1796 :   {
; 1797 :     cpg_report_next_prev_target(new__target); //ataribaby 4/1/2009 added CPG next/prev target lock and ID

  002a3	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 ?cpg_report_next_prev_target@@YGXPAUENTITY@@@Z ; cpg_report_next_prev_target
$LN1@select_pre:

; 1798 :   }
; 1799 : }

  002ac	5f		 pop	 edi
  002ad	5e		 pop	 esi
  002ae	5b		 pop	 ebx
  002af	8b e5		 mov	 esp, ebp
  002b1	5d		 pop	 ebp
  002b2	c3		 ret	 0
?select_previous_eo_target@@YGXXZ ENDP			; select_previous_eo_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?select_next_eo_target@@YGXXZ
_TEXT	SEGMENT
tv175 = -84						; size = 4
tv151 = -84						; size = 4
tv130 = -84						; size = 4
tv79 = -84						; size = 4
tv167 = -80						; size = 4
tv143 = -80						; size = 4
tv91 = -80						; size = 4
tv71 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_next_eo_target@@YGXXZ PROC			; select_next_eo_target, COMDAT

; 1682 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1683 : 	entity
; 1684 : 		*target,
; 1685 : 		*new__target,
; 1686 : 		*current_target;
; 1687 : 
; 1688 : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1689 : 
; 1690 : 	if (!eo_low_light)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light
  00017	0f 85 77 02 00
	00		 jne	 $LN6@select_nex

; 1691 : 	{
; 1692 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN14@select_nex
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b0	 mov	 DWORD PTR tv71[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN15@select_nex
$LN14@select_nex:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA
  00038	83 c2 0a	 add	 edx, 10			; 0000000aH
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN15@select_nex:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN16@select_nex
  0005c	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv79[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN17@select_nex
$LN16@select_nex:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA
  0006b	83 c2 0a	 add	 edx, 10			; 0000000aH
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN17@select_nex:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  00096	8b 45 ac	 mov	 eax, DWORD PTR tv79[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 1693 : 
; 1694 : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET) == NULL))

  000a5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	74 7d		 je	 SHORT $LN9@select_nex
  000ab	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000af	74 0a		 je	 SHORT $LN18@select_nex
  000b1	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	89 4d b0	 mov	 DWORD PTR tv91[ebp], ecx
  000b9	eb 1d		 jmp	 SHORT $LN19@select_nex
$LN18@select_nex:
  000bb	68 9e 06 00 00	 push	 1694			; 0000069eH
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN19@select_nex:
  000d8	b8 01 00 00 00	 mov	 eax, 1
  000dd	85 c0		 test	 eax, eax
  000df	74 09		 je	 SHORT $LN20@select_nex
  000e1	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv130[ebp], 18 ; 00000012H
  000e8	eb 1d		 jmp	 SHORT $LN21@select_nex
$LN20@select_nex:
  000ea	68 9e 06 00 00	 push	 1694			; 0000069eH
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fa	51		 push	 ecx
  000fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00100	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN21@select_nex:
  00107	6a 12		 push	 18			; 00000012H
  00109	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  0010c	52		 push	 edx
  0010d	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv91[ebp], 180
  00114	8b 4d ac	 mov	 ecx, DWORD PTR tv130[ebp]
  00117	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0011e	ff d2		 call	 edx
  00120	85 c0		 test	 eax, eax
  00122	0f 85 31 01 00
	00		 jne	 $LN7@select_nex
$LN9@select_nex:

; 1695 : 		{
; 1696 : 			//
; 1697 : 			// no current target or current target has been removed from the gunship target list
; 1698 : 			//
; 1699 : 
; 1700 : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_GUNSHIP_TARGET);

  00128	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0012f	74 0c		 je	 SHORT $LN22@select_nex
  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	89 4d b0	 mov	 DWORD PTR tv143[ebp], ecx
  0013b	eb 21		 jmp	 SHORT $LN23@select_nex
$LN22@select_nex:
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA
  00143	83 c2 12	 add	 edx, 18			; 00000012H
  00146	52		 push	 edx
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00157	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN23@select_nex:
  0015e	b9 01 00 00 00	 mov	 ecx, 1
  00163	85 c9		 test	 ecx, ecx
  00165	74 09		 je	 SHORT $LN24@select_nex
  00167	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv151[ebp], 18 ; 00000012H
  0016e	eb 21		 jmp	 SHORT $LN25@select_nex
$LN24@select_nex:
  00170	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA
  00176	83 c2 12	 add	 edx, 18			; 00000012H
  00179	52		 push	 edx
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN25@select_nex:
  00191	6a 12		 push	 18			; 00000012H
  00193	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00199	51		 push	 ecx
  0019a	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv143[ebp], 180
  001a1	8b 45 ac	 mov	 eax, DWORD PTR tv151[ebp]
  001a4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001ab	ff d1		 call	 ecx
  001ad	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_nex:

; 1701 : 
; 1702 : 			while (target)

  001b0	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001b4	0f 84 9d 00 00
	00		 je	 $LN3@select_nex

; 1703 : 			{
; 1704 : 				if (get_selectable_eo_target (target))

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  001c3	85 c0		 test	 eax, eax
  001c5	74 0b		 je	 SHORT $LN10@select_nex

; 1705 : 				{
; 1706 : 					new__target = target;

  001c7	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ca	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1707 : 
; 1708 : 					break;

  001cd	e9 85 00 00 00	 jmp	 $LN3@select_nex
$LN10@select_nex:

; 1709 : 				}
; 1710 : 
; 1711 : 				target = get_local_entity_child_succ (target, LIST_TYPE_GUNSHIP_TARGET);

  001d2	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001d6	74 0a		 je	 SHORT $LN26@select_nex
  001d8	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	89 4d b0	 mov	 DWORD PTR tv167[ebp], ecx
  001e0	eb 21		 jmp	 SHORT $LN27@select_nex
$LN26@select_nex:
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA
  001e8	83 c2 1d	 add	 edx, 29			; 0000001dH
  001eb	52		 push	 edx
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fc	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN27@select_nex:
  00203	b9 01 00 00 00	 mov	 ecx, 1
  00208	85 c9		 test	 ecx, ecx
  0020a	74 09		 je	 SHORT $LN28@select_nex
  0020c	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv175[ebp], 18 ; 00000012H
  00213	eb 21		 jmp	 SHORT $LN29@select_nex
$LN28@select_nex:
  00215	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_eo_target@@YGXXZ@4JA
  0021b	83 c2 1d	 add	 edx, 29			; 0000001dH
  0021e	52		 push	 edx
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN29@select_nex:
  00236	6a 12		 push	 18			; 00000012H
  00238	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0023b	51		 push	 ecx
  0023c	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 180
  00243	8b 45 ac	 mov	 eax, DWORD PTR tv175[ebp]
  00246	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0024d	ff d1		 call	 ecx
  0024f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1712 : 			}

  00252	e9 59 ff ff ff	 jmp	 $LN2@select_nex
$LN3@select_nex:

; 1713 : 		}
; 1714 : 		else

  00257	eb 3b		 jmp	 SHORT $LN6@select_nex
$LN7@select_nex:

; 1715 : 		{
; 1716 : 			target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00259	6a 12		 push	 18			; 00000012H
  0025b	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  0025e	50		 push	 eax
  0025f	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00264	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_nex:

; 1717 : 
; 1718 : 			while (target != current_target)

  00267	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0026a	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0026d	74 25		 je	 SHORT $LN6@select_nex

; 1719 : 			{
; 1720 : 				if (get_selectable_eo_target (target))

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?get_selectable_eo_target@@YGHPAUENTITY@@@Z ; get_selectable_eo_target
  00278	85 c0		 test	 eax, eax
  0027a	74 08		 je	 SHORT $LN11@select_nex

; 1721 : 				{
; 1722 : 					new__target = target;

  0027c	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027f	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1723 : 
; 1724 : 					break;

  00282	eb 10		 jmp	 SHORT $LN6@select_nex
$LN11@select_nex:

; 1725 : 				}
; 1726 : 
; 1727 : 				target = get_local_entity_child_succ_circular (target, LIST_TYPE_GUNSHIP_TARGET);

  00284	6a 12		 push	 18			; 00000012H
  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  0028f	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1728 : 			}

  00292	eb d3		 jmp	 SHORT $LN4@select_nex
$LN6@select_nex:

; 1729 : 		}
; 1730 : 	}
; 1731 : 
; 1732 : 	set_eo_slave_target(new__target);

  00294	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?set_eo_slave_target@@YGXPAUENTITY@@@Z ; set_eo_slave_target

; 1733 : 
; 1734 : 	if(new__target)

  0029d	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  002a1	74 09		 je	 SHORT $LN1@select_nex

; 1735 : 		cpg_report_next_prev_target(new__target); //ataribaby 4/1/2009 added CPG next/prev target lock and ID

  002a3	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 ?cpg_report_next_prev_target@@YGXPAUENTITY@@@Z ; cpg_report_next_prev_target
$LN1@select_nex:

; 1736 : }

  002ac	5f		 pop	 edi
  002ad	5e		 pop	 esi
  002ae	5b		 pop	 ebx
  002af	8b e5		 mov	 esp, ebp
  002b1	5d		 pop	 ebp
  002b2	c3		 ret	 0
?select_next_eo_target@@YGXXZ ENDP			; select_next_eo_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?slave_common_eo_to_position@@YGXPAUVEC3D@@@Z
_TEXT	SEGMENT
tv128 = -160						; size = 4
tv82 = -160						; size = 4
tv129 = -156						; size = 4
tv83 = -156						; size = 4
_target_in_fov$ = -88					; size = 4
_offset_vector$ = -84					; size = 12
_target_vector$ = -72					; size = 12
_vp$ = -60						; size = 48
_aiming_eo_elevation$ = -12				; size = 4
_aiming_eo_azimuth$ = -8				; size = 4
_flat_range$ = -4					; size = 4
_target_position$ = 8					; size = 4
?slave_common_eo_to_position@@YGXPAUVEC3D@@@Z PROC	; slave_common_eo_to_position, COMDAT

; 1494 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1495 : 	float
; 1496 : 		flat_range,
; 1497 : 		aiming_eo_azimuth,
; 1498 : 		aiming_eo_elevation;
; 1499 : 
; 1500 : 	viewpoint
; 1501 : 		vp;
; 1502 : 
; 1503 : 	vec3d
; 1504 : 		target_vector,
; 1505 : 		offset_vector;
; 1506 : 
; 1507 : 	int
; 1508 : 		target_in_fov = FALSE;

  0000c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _target_in_fov$[ebp], 0

; 1509 : 
; 1510 : 	get_eo_centred_viewpoint (&vp);

  00013	8d 45 c4	 lea	 eax, DWORD PTR _vp$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_eo_centred_viewpoint

; 1511 : 
; 1512 : 	if (target_position)

  0001c	83 7d 08 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  00020	0f 84 c6 01 00
	00		 je	 $LN2@slave_comm

; 1513 : 	{
; 1514 : 		target_vector.x = target_position->x - vp.position.x;

  00026	8b 45 08	 mov	 eax, DWORD PTR _target_position$[ebp]
  00029	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002d	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _vp$[ebp]
  00032	f3 0f 11 45 b8	 movss	 DWORD PTR _target_vector$[ebp], xmm0

; 1515 : 		target_vector.y = target_position->y - vp.position.y;

  00037	8b 45 08	 mov	 eax, DWORD PTR _target_position$[ebp]
  0003a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0003f	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  00044	f3 0f 11 45 bc	 movss	 DWORD PTR _target_vector$[ebp+4], xmm0

; 1516 : 		target_vector.z = target_position->z - vp.position.z;

  00049	8b 45 08	 mov	 eax, DWORD PTR _target_position$[ebp]
  0004c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00051	f3 0f 5c 45 cc	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  00056	f3 0f 11 45 c0	 movss	 DWORD PTR _target_vector$[ebp+8], xmm0

; 1517 : 
; 1518 : 		multiply_transpose_matrix3x3_vec3d (&offset_vector, vp.attitude, &target_vector);

  0005b	8d 45 b8	 lea	 eax, DWORD PTR _target_vector$[ebp]
  0005e	50		 push	 eax
  0005f	8d 4d d0	 lea	 ecx, DWORD PTR _vp$[ebp+12]
  00062	51		 push	 ecx
  00063	8d 55 ac	 lea	 edx, DWORD PTR _offset_vector$[ebp]
  00066	52		 push	 edx
  00067	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 1519 : 
; 1520 : 		aiming_eo_azimuth = atan2 (offset_vector.x, offset_vector.z);

  0006c	51		 push	 ecx
  0006d	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+8]
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	51		 push	 ecx
  00078	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  0007d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00082	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00087	d9 5d f8	 fstp	 DWORD PTR _aiming_eo_azimuth$[ebp]

; 1521 : 
; 1522 : 		if (aiming_eo_azimuth < eo_min_azimuth || aiming_eo_azimuth > eo_max_azimuth)

  0008a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  00092	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _aiming_eo_azimuth$[ebp]
  00096	77 0e		 ja	 SHORT $LN6@slave_comm
  00098	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _aiming_eo_azimuth$[ebp]
  0009d	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  000a4	76 6c		 jbe	 SHORT $LN4@slave_comm
$LN6@slave_comm:

; 1523 : 			aiming_eo_azimuth = bound (aiming_eo_azimuth, eo_min_azimuth, eo_max_azimuth);

  000a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  000ae	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _aiming_eo_azimuth$[ebp]
  000b2	76 12		 jbe	 SHORT $LN16@slave_comm
  000b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  000bc	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR tv83[ebp], xmm0
  000c4	eb 3d		 jmp	 SHORT $LN17@slave_comm
$LN16@slave_comm:
  000c6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _aiming_eo_azimuth$[ebp]
  000cb	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  000d2	76 12		 jbe	 SHORT $LN14@slave_comm
  000d4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  000dc	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv82[ebp], xmm0
  000e4	eb 0d		 jmp	 SHORT $LN15@slave_comm
$LN14@slave_comm:
  000e6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _aiming_eo_azimuth$[ebp]
  000eb	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv82[ebp], xmm0
$LN15@slave_comm:
  000f3	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv82[ebp]
  000fb	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR tv83[ebp], xmm0
$LN17@slave_comm:
  00103	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv83[ebp]
  0010b	f3 0f 11 45 f8	 movss	 DWORD PTR _aiming_eo_azimuth$[ebp], xmm0

; 1524 : 		else

  00110	eb 07		 jmp	 SHORT $LN5@slave_comm
$LN4@slave_comm:

; 1525 : 			target_in_fov = TRUE;

  00112	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _target_in_fov$[ebp], 1
$LN5@slave_comm:

; 1526 : 
; 1527 : 		flat_range = sqrt ((offset_vector.x * offset_vector.x) + (offset_vector.z * offset_vector.z));

  00119	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  0011e	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _offset_vector$[ebp]
  00123	f3 0f 10 4d b4	 movss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  00128	f3 0f 59 4d b4	 mulss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  0012d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00131	51		 push	 ecx
  00132	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00137	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  0013c	d9 5d fc	 fstp	 DWORD PTR _flat_range$[ebp]

; 1528 : 
; 1529 : 		aiming_eo_elevation = atan2 (offset_vector.y, flat_range);

  0013f	51		 push	 ecx
  00140	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  00145	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014a	51		 push	 ecx
  0014b	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+4]
  00150	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00155	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0015a	d9 5d f4	 fstp	 DWORD PTR _aiming_eo_elevation$[ebp]

; 1530 : 
; 1531 : 		if (aiming_eo_elevation < eo_min_azimuth || aiming_eo_elevation > eo_max_azimuth)

  0015d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  00165	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _aiming_eo_elevation$[ebp]
  00169	77 0e		 ja	 SHORT $LN8@slave_comm
  0016b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _aiming_eo_elevation$[ebp]
  00170	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  00177	76 71		 jbe	 SHORT $LN7@slave_comm
$LN8@slave_comm:

; 1532 : 		{
; 1533 : 			aiming_eo_elevation = bound (aiming_eo_elevation, eo_min_elevation, eo_max_elevation);

  00179	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  00181	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _aiming_eo_elevation$[ebp]
  00185	76 12		 jbe	 SHORT $LN20@slave_comm
  00187	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  0018f	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR tv129[ebp], xmm0
  00197	eb 3d		 jmp	 SHORT $LN21@slave_comm
$LN20@slave_comm:
  00199	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _aiming_eo_elevation$[ebp]
  0019e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  001a5	76 12		 jbe	 SHORT $LN18@slave_comm
  001a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  001af	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv128[ebp], xmm0
  001b7	eb 0d		 jmp	 SHORT $LN19@slave_comm
$LN18@slave_comm:
  001b9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _aiming_eo_elevation$[ebp]
  001be	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv128[ebp], xmm0
$LN19@slave_comm:
  001c6	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv128[ebp]
  001ce	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR tv129[ebp], xmm0
$LN21@slave_comm:
  001d6	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv129[ebp]
  001de	f3 0f 11 45 f4	 movss	 DWORD PTR _aiming_eo_elevation$[ebp], xmm0

; 1534 : 			target_in_fov = FALSE;

  001e3	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _target_in_fov$[ebp], 0
$LN7@slave_comm:

; 1535 : 		}
; 1536 : 	}
; 1537 : 	else

  001ea	eb 1a		 jmp	 SHORT $LN3@slave_comm
$LN2@slave_comm:

; 1538 : 	{
; 1539 : 		aiming_eo_azimuth = eo_requested_azimuth;

  001ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_requested_azimuth@@3MA
  001f4	f3 0f 11 45 f8	 movss	 DWORD PTR _aiming_eo_azimuth$[ebp], xmm0

; 1540 : 
; 1541 : 		aiming_eo_elevation = eo_requested_elevation;

  001f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_requested_elevation@@3MA
  00201	f3 0f 11 45 f4	 movss	 DWORD PTR _aiming_eo_elevation$[ebp], xmm0
$LN3@slave_comm:

; 1542 : 	}
; 1543 : 
; 1544 : 
; 1545 : 	slew_eo(aiming_eo_elevation, aiming_eo_azimuth);

  00206	51		 push	 ecx
  00207	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _aiming_eo_azimuth$[ebp]
  0020c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00211	51		 push	 ecx
  00212	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _aiming_eo_elevation$[ebp]
  00217	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021c	e8 00 00 00 00	 call	 ?slew_eo@@YGXMM@Z	; slew_eo

; 1546 : 
; 1547 : 	//
; 1548 : 	// flag eo on target for "CP/G IDENTIFYING..." message
; 1549 : 	//
; 1550 : 
; 1551 : 	update_eo_visibility ();

  00221	e8 00 00 00 00	 call	 ?update_eo_visibility@@YGXXZ ; update_eo_visibility

; 1552 : 
; 1553 : 	if (target_in_fov &&

  00226	83 7d a8 00	 cmp	 DWORD PTR _target_in_fov$[ebp], 0
  0022a	74 26		 je	 SHORT $LN9@slave_comm
  0022c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_on_target@@3HA, 0 ; eo_on_target
  00233	75 0b		 jne	 SHORT $LN11@slave_comm
  00235	6a 00		 push	 0
  00237	e8 00 00 00 00	 call	 ?is_using_eo_system@@YGHH@Z ; is_using_eo_system
  0023c	85 c0		 test	 eax, eax
  0023e	75 12		 jne	 SHORT $LN9@slave_comm
$LN11@slave_comm:

; 1554 : 		(eo_on_target || !is_using_eo_system(FALSE)))
; 1555 : 	{
; 1556 : 		if (!command_line_manual_laser_radar)

  00240	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_manual_laser_radar@@3HA, 0 ; command_line_manual_laser_radar
  00247	75 07		 jne	 SHORT $LN12@slave_comm

; 1557 : 			set_laser_is_active(TRUE);

  00249	6a 01		 push	 1
  0024b	e8 00 00 00 00	 call	 ?set_laser_is_active@@YGXH@Z ; set_laser_is_active
$LN12@slave_comm:

; 1558 : 	}
; 1559 : 	else

  00250	eb 07		 jmp	 SHORT $LN10@slave_comm
$LN9@slave_comm:

; 1560 : 		set_laser_is_active(FALSE);

  00252	6a 00		 push	 0
  00254	e8 00 00 00 00	 call	 ?set_laser_is_active@@YGXH@Z ; set_laser_is_active
$LN10@slave_comm:

; 1561 : }

  00259	5f		 pop	 edi
  0025a	5e		 pop	 esi
  0025b	5b		 pop	 ebx
  0025c	8b e5		 mov	 esp, ebp
  0025e	5d		 pop	 ebp
  0025f	c2 04 00	 ret	 4
?slave_common_eo_to_position@@YGXPAUVEC3D@@@Z ENDP	; slave_common_eo_to_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?slave_common_eo_to_current_target@@YGXXZ
_TEXT	SEGMENT
tv79 = -88						; size = 4
tv71 = -84						; size = 4
_current_target$ = -16					; size = 4
_position$ = -12					; size = 12
?slave_common_eo_to_current_target@@YGXXZ PROC		; slave_common_eo_to_current_target, COMDAT

; 1474 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1475 : 	vec3d position;
; 1476 : 	entity* current_target;
; 1477 : 
; 1478 : 	if (slave_target)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  00010	74 0d		 je	 SHORT $LN2@slave_comm

; 1479 : 		current_target = slave_target;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?slave_target@@3PAUENTITY@@A ; slave_target
  00017	89 45 f0	 mov	 DWORD PTR _current_target$[ebp], eax

; 1480 : 	else

  0001a	e9 88 00 00 00	 jmp	 $LN3@slave_comm
$LN2@slave_comm:

; 1481 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00026	74 0c		 je	 SHORT $LN7@slave_comm
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	89 4d ac	 mov	 DWORD PTR tv71[ebp], ecx
  00032	eb 21		 jmp	 SHORT $LN8@slave_comm
$LN7@slave_comm:
  00034	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??slave_common_eo_to_current_target@@YGXXZ@4JA
  0003a	83 c2 07	 add	 edx, 7
  0003d	52		 push	 edx
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004e	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN8@slave_comm:
  00055	b9 01 00 00 00	 mov	 ecx, 1
  0005a	85 c9		 test	 ecx, ecx
  0005c	74 09		 je	 SHORT $LN9@slave_comm
  0005e	c7 45 a8 26 00
	00 00		 mov	 DWORD PTR tv79[ebp], 38	; 00000026H
  00065	eb 21		 jmp	 SHORT $LN10@slave_comm
$LN9@slave_comm:
  00067	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??slave_common_eo_to_current_target@@YGXXZ@4JA
  0006d	83 c2 07	 add	 edx, 7
  00070	52		 push	 edx
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00081	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN10@slave_comm:
  00088	6a 26		 push	 38			; 00000026H
  0008a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00090	51		 push	 ecx
  00091	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 180
  00098	8b 45 a8	 mov	 eax, DWORD PTR tv79[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	89 45 f0	 mov	 DWORD PTR _current_target$[ebp], eax
$LN3@slave_comm:

; 1482 : 
; 1483 : 	if (current_target)

  000a7	83 7d f0 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000ab	74 18		 je	 SHORT $LN4@slave_comm

; 1484 : 	{
; 1485 : 		get_local_entity_target_point (current_target, &position);

  000ad	8d 45 f4	 lea	 eax, DWORD PTR _position$[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d f0	 mov	 ecx, DWORD PTR _current_target$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 1486 : 		slave_common_eo_to_position (&position);

  000ba	8d 45 f4	 lea	 eax, DWORD PTR _position$[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?slave_common_eo_to_position@@YGXPAUVEC3D@@@Z ; slave_common_eo_to_position

; 1487 : 	}
; 1488 : 	else

  000c3	eb 07		 jmp	 SHORT $LN1@slave_comm
$LN4@slave_comm:

; 1489 : 		slave_common_eo_to_position (NULL);

  000c5	6a 00		 push	 0
  000c7	e8 00 00 00 00	 call	 ?slave_common_eo_to_position@@YGXPAUVEC3D@@@Z ; slave_common_eo_to_position
$LN1@slave_comm:

; 1490 : }

  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
?slave_common_eo_to_current_target@@YGXXZ ENDP		; slave_common_eo_to_current_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?slew_eo_to_direction@@YGXMM@Z
_TEXT	SEGMENT
_elevation$ = 8						; size = 4
_azimuth$ = 12						; size = 4
?slew_eo_to_direction@@YGXMM@Z PROC			; slew_eo_to_direction, COMDAT

; 1405 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1406 : 	eo_requested_azimuth = azimuth;

  00009	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _azimuth$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_requested_azimuth@@3MA, xmm0

; 1407 : 	eo_requested_elevation = elevation;

  00016	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _elevation$[ebp]
  0001b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_requested_elevation@@3MA, xmm0

; 1408 : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?slew_eo_to_direction@@YGXMM@Z ENDP			; slew_eo_to_direction
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?deactivate_common_eo@@YGXXZ
_TEXT	SEGMENT
?deactivate_common_eo@@YGXXZ PROC			; deactivate_common_eo, COMDAT

; 1397 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1398 : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?deactivate_common_eo@@YGXXZ ENDP			; deactivate_common_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?activate_common_eo@@YGXXZ
_TEXT	SEGMENT
?activate_common_eo@@YGXXZ PROC				; activate_common_eo, COMDAT

; 1379 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1380 : 	eo_target_locked = target_locked;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_locked@@3HA ; target_locked
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, eax ; eo_target_locked

; 1381 : 
; 1382 : 	eo_sensor = target_acquisition_system;

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; target_acquisition_system
  00018	a3 00 00 00 00	 mov	 DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A, eax ; eo_sensor

; 1383 : 
; 1384 : 	// start full_eo_range by GCsDriver  08-12-2007
; 1385 : 	if (command_line_eo_full_range)

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_eo_full_range@@3HA, 0 ; command_line_eo_full_range
  00024	74 05		 je	 SHORT $LN1@activate_c

; 1386 : 	{
; 1387 : 		update_eo_max_visual_range();

  00026	e8 00 00 00 00	 call	 ?update_eo_max_visual_range@@YGXXZ ; update_eo_max_visual_range
$LN1@activate_c:

; 1388 : 	}
; 1389 : 	// end full_eo_range by GCsDriver  08-12-2007
; 1390 : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?activate_common_eo@@YGXXZ ENDP				; activate_common_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?update_common_eo@@YGXXZ
_TEXT	SEGMENT
tv539 = -248						; size = 8
tv535 = -248						; size = 8
tv560 = -240						; size = 8
tv558 = -240						; size = 8
tv280 = -240						; size = 4
tv247 = -240						; size = 4
tv183 = -240						; size = 4
tv175 = -240						; size = 4
tv131 = -240						; size = 4
tv80 = -240						; size = 4
tv511 = -236						; size = 4
tv301 = -236						; size = 4
tv298 = -236						; size = 4
tv293 = -236						; size = 4
tv290 = -236						; size = 4
tv272 = -236						; size = 4
tv240 = -236						; size = 4
tv184 = -236						; size = 4
tv176 = -236						; size = 4
tv92 = -236						; size = 4
tv72 = -236						; size = 4
_frame_slew_rate$1 = -168				; size = 4
_frame_delta_eo_elevation$2 = -164			; size = 4
_frame_delta_eo_azimuth$3 = -160			; size = 4
_delta_eo_elevation$4 = -156				; size = 4
_delta_eo_azimuth$5 = -152				; size = 4
_req_elevation$6 = -148					; size = 4
_req_azimuth$7 = -144					; size = 4
_m$ = -140						; size = 36
_offset_vector$ = -104					; size = 12
_target_vector$ = -92					; size = 12
_target_position$ = -80					; size = 12
_vp$ = -68						; size = 48
_new__target$ = -20					; size = 4
_current_target$ = -16					; size = 4
_flat_range$ = -12					; size = 4
_adjusted_azimuth$ = -8					; size = 4
_adjusted_elevation$ = -4				; size = 4
?update_common_eo@@YGXXZ PROC				; update_common_eo, COMDAT

; 1165 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f8 00 00
	00		 sub	 esp, 248		; 000000f8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1166 : 	float
; 1167 : 		adjusted_elevation,
; 1168 : 		adjusted_azimuth,
; 1169 : 		flat_range;
; 1170 : 
; 1171 : 	entity
; 1172 : 		*current_target,
; 1173 : 		*new__target;
; 1174 : 
; 1175 : 	viewpoint
; 1176 : 		vp;
; 1177 : 
; 1178 : 	vec3d
; 1179 : 		target_position,
; 1180 : 		target_vector,
; 1181 : 		offset_vector;
; 1182 : 
; 1183 : 	matrix3x3
; 1184 : 		m;
; 1185 : 
; 1186 : 	if (get_time_acceleration() == TIME_ACCELERATION_PAUSE)

  0000c	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  00011	85 c0		 test	 eax, eax
  00013	75 05		 jne	 SHORT $LN2@update_com

; 1187 : 		return;

  00015	e9 20 09 00 00	 jmp	 $LN1@update_com
$LN2@update_com:

; 1188 : 
; 1189 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00021	74 0f		 je	 SHORT $LN36@update_com
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	89 8d 14 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  00030	eb 24		 jmp	 SHORT $LN37@update_com
$LN36@update_com:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_eo@@YGXXZ@4JA
  00038	83 c2 18	 add	 edx, 24			; 00000018H
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv72[ebp], 0
$LN37@update_com:
  00056	b9 01 00 00 00	 mov	 ecx, 1
  0005b	85 c9		 test	 ecx, ecx
  0005d	74 0c		 je	 SHORT $LN38@update_com
  0005f	c7 85 10 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv80[ebp], 38	; 00000026H
  00069	eb 24		 jmp	 SHORT $LN39@update_com
$LN38@update_com:
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_eo@@YGXXZ@4JA
  00071	83 c2 18	 add	 edx, 24			; 00000018H
  00074	52		 push	 edx
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv80[ebp], 0
$LN39@update_com:
  0008f	6a 26		 push	 38			; 00000026H
  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00097	51		 push	 ecx
  00098	69 95 14 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv72[ebp], 180
  000a2	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR tv80[ebp]
  000a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000af	ff d1		 call	 ecx
  000b1	89 45 f0	 mov	 DWORD PTR _current_target$[ebp], eax

; 1190 : 
; 1191 : 	if (slave_target)

  000b4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  000bb	0f 84 cf 00 00
	00		 je	 $LN3@update_com

; 1192 : 	{
; 1193 : 		if (get_local_entity_int_value (slave_target, INT_TYPE_TARGET_TYPE) == TARGET_TYPE_INVALID)

  000c1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target
  000c8	74 0f		 je	 SHORT $LN40@update_com
  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?slave_target@@3PAUENTITY@@A ; slave_target
  000cf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d1	89 8d 14 ff ff
	ff		 mov	 DWORD PTR tv92[ebp], ecx
  000d7	eb 20		 jmp	 SHORT $LN41@update_com
$LN40@update_com:
  000d9	68 a9 04 00 00	 push	 1193			; 000004a9H
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e9	52		 push	 edx
  000ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ef	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN41@update_com:
  000f9	b8 01 00 00 00	 mov	 eax, 1
  000fe	85 c0		 test	 eax, eax
  00100	74 0c		 je	 SHORT $LN42@update_com
  00102	c7 85 10 ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv131[ebp], 214 ; 000000d6H
  0010c	eb 20		 jmp	 SHORT $LN43@update_com
$LN42@update_com:
  0010e	68 a9 04 00 00	 push	 1193			; 000004a9H
  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00118	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0011e	51		 push	 ecx
  0011f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00124	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv131[ebp], 0
$LN43@update_com:
  0012e	68 d6 00 00 00	 push	 214			; 000000d6H
  00133	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?slave_target@@3PAUENTITY@@A ; slave_target
  00139	52		 push	 edx
  0013a	69 85 14 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv92[ebp], 1116
  00144	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR tv131[ebp]
  0014a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00151	ff d2		 call	 edx
  00153	85 c0		 test	 eax, eax
  00155	75 0c		 jne	 SHORT $LN5@update_com

; 1194 : 			slave_target = NULL;

  00157	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target

; 1195 : 
; 1196 : 		else

  00161	eb 2b		 jmp	 SHORT $LN6@update_com
$LN5@update_com:

; 1197 : 		{
; 1198 : 			slave_common_eo_to_current_target();

  00163	e8 00 00 00 00	 call	 ?slave_common_eo_to_current_target@@YGXXZ ; slave_common_eo_to_current_target

; 1199 : 
; 1200 : 			if (get_eo_boresight_target() != slave_target)

  00168	e8 00 00 00 00	 call	 ?get_eo_boresight_target@@YGPAUENTITY@@XZ ; get_eo_boresight_target
  0016d	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?slave_target@@3PAUENTITY@@A ; slave_target
  00173	74 05		 je	 SHORT $LN7@update_com

; 1201 : 				return;   // not done slewing to target yet

  00175	e9 c0 07 00 00	 jmp	 $LN1@update_com
$LN7@update_com:

; 1202 : 
; 1203 : 			slave_target = NULL;

  0017a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target

; 1204 : 			lock_target = TRUE;

  00184	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?lock_target@@3HA, 1
$LN6@update_com:

; 1205 : 		}

  0018e	eb 1a		 jmp	 SHORT $LN9@update_com
$LN3@update_com:

; 1206 : 	}
; 1207 : 	else if (eo_target_locked & TARGET_LOCK)

  00190	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  00195	83 e0 02	 and	 eax, 2
  00198	74 10		 je	 SHORT $LN9@update_com

; 1208 : 	{
; 1209 : 		if (!current_target)

  0019a	83 7d f0 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  0019e	75 0a		 jne	 SHORT $LN9@update_com

; 1210 : 			eo_target_locked = 0;

  001a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
$LN9@update_com:

; 1211 : 	}
; 1212 : 
; 1213 : 	get_eo_centred_viewpoint (&vp);

  001aa	8d 45 bc	 lea	 eax, DWORD PTR _vp$[ebp]
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?get_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_eo_centred_viewpoint

; 1214 : 
; 1215 : 	//
; 1216 : 	// track locked target or point
; 1217 : 	//
; 1218 : 
; 1219 : 	if (eo_target_locked)

  001b3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
  001ba	0f 84 36 03 00
	00		 je	 $LN18@update_com

; 1220 : 	{
; 1221 : 		float req_azimuth, req_elevation, delta_eo_azimuth, delta_eo_elevation, frame_delta_eo_azimuth, frame_delta_eo_elevation;
; 1222 : 		float frame_slew_rate = rad(60) * get_delta_time();

  001c0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f860a92
  001c8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  001d0	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _frame_slew_rate$1[ebp], xmm0

; 1223 : 
; 1224 : 		if (eo_target_locked & TARGET_LOCK)

  001d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  001dd	83 e0 02	 and	 eax, 2
  001e0	74 3c		 je	 SHORT $LN11@update_com

; 1225 : 		{
; 1226 : 			get_local_entity_target_point (current_target, &target_position);

  001e2	8d 45 b0	 lea	 eax, DWORD PTR _target_position$[ebp]
  001e5	50		 push	 eax
  001e6	8b 4d f0	 mov	 ecx, DWORD PTR _current_target$[ebp]
  001e9	51		 push	 ecx
  001ea	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 1227 : 
; 1228 : 			target_vector.x = target_position.x - vp.position.x;

  001ef	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  001f4	f3 0f 5c 45 bc	 subss	 xmm0, DWORD PTR _vp$[ebp]
  001f9	f3 0f 11 45 a4	 movss	 DWORD PTR _target_vector$[ebp], xmm0

; 1229 : 			target_vector.y = target_position.y - vp.position.y;

  001fe	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _target_position$[ebp+4]
  00203	f3 0f 5c 45 c0	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  00208	f3 0f 11 45 a8	 movss	 DWORD PTR _target_vector$[ebp+4], xmm0

; 1230 : 			target_vector.z = target_position.z - vp.position.z;

  0020d	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  00212	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  00217	f3 0f 11 45 ac	 movss	 DWORD PTR _target_vector$[ebp+8], xmm0

; 1231 : 		}
; 1232 : 		else

  0021c	eb 47		 jmp	 SHORT $LN12@update_com
$LN11@update_com:

; 1233 : 		{
; 1234 : 			target_vector = eo_tracking_point;

  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A
  00223	89 45 a4	 mov	 DWORD PTR _target_vector$[ebp], eax
  00226	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+4
  0022c	89 4d a8	 mov	 DWORD PTR _target_vector$[ebp+4], ecx
  0022f	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?eo_tracking_point@@3UVEC3D@@A+8
  00235	89 55 ac	 mov	 DWORD PTR _target_vector$[ebp+8], edx

; 1235 : 
; 1236 : 			target_vector.x -= vp.position.x;

  00238	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _target_vector$[ebp]
  0023d	f3 0f 5c 45 bc	 subss	 xmm0, DWORD PTR _vp$[ebp]
  00242	f3 0f 11 45 a4	 movss	 DWORD PTR _target_vector$[ebp], xmm0

; 1237 : 			target_vector.y -= vp.position.y;

  00247	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _target_vector$[ebp+4]
  0024c	f3 0f 5c 45 c0	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  00251	f3 0f 11 45 a8	 movss	 DWORD PTR _target_vector$[ebp+4], xmm0

; 1238 : 			target_vector.z -= vp.position.z;

  00256	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _target_vector$[ebp+8]
  0025b	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  00260	f3 0f 11 45 ac	 movss	 DWORD PTR _target_vector$[ebp+8], xmm0
$LN12@update_com:

; 1239 : 		}
; 1240 : 
; 1241 : 		multiply_transpose_matrix3x3_vec3d (&offset_vector, vp.attitude, &target_vector);

  00265	8d 45 a4	 lea	 eax, DWORD PTR _target_vector$[ebp]
  00268	50		 push	 eax
  00269	8d 4d c8	 lea	 ecx, DWORD PTR _vp$[ebp+12]
  0026c	51		 push	 ecx
  0026d	8d 55 98	 lea	 edx, DWORD PTR _offset_vector$[ebp]
  00270	52		 push	 edx
  00271	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 1242 : 
; 1243 : 		flat_range = sqrt ((offset_vector.x * offset_vector.x) + (offset_vector.z * offset_vector.z));

  00276	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  0027b	f3 0f 59 45 98	 mulss	 xmm0, DWORD PTR _offset_vector$[ebp]
  00280	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  00285	f3 0f 59 4d a0	 mulss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  0028a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0028e	51		 push	 ecx
  0028f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00294	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00299	d9 5d f4	 fstp	 DWORD PTR _flat_range$[ebp]

; 1244 : 		req_elevation = atan2(offset_vector.y, flat_range);

  0029c	51		 push	 ecx
  0029d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  002a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a7	51		 push	 ecx
  002a8	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+4]
  002ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b2	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  002b7	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR _req_elevation$6[ebp]

; 1245 : 		req_azimuth = atan2(offset_vector.x, offset_vector.z);

  002bd	51		 push	 ecx
  002be	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+8]
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	51		 push	 ecx
  002c9	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  002ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d3	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  002d8	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR _req_azimuth$7[ebp]

; 1246 : 
; 1247 : 		delta_eo_azimuth = req_azimuth - eo_azimuth;

  002de	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _req_azimuth$7[ebp]
  002e6	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  002ee	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _delta_eo_azimuth$5[ebp], xmm0

; 1248 : 		frame_delta_eo_azimuth = bound (delta_eo_azimuth, -frame_slew_rate, frame_slew_rate);

  002f6	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  002fe	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00305	0f 2f 85 68 ff
	ff ff		 comiss	 xmm0, DWORD PTR _delta_eo_azimuth$5[ebp]
  0030c	76 19		 jbe	 SHORT $LN46@update_com
  0030e	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  00316	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0031d	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv176[ebp], xmm0
  00325	eb 43		 jmp	 SHORT $LN47@update_com
$LN46@update_com:
  00327	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_eo_azimuth$5[ebp]
  0032f	0f 2f 85 58 ff
	ff ff		 comiss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  00336	76 12		 jbe	 SHORT $LN44@update_com
  00338	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  00340	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR tv175[ebp], xmm0
  00348	eb 10		 jmp	 SHORT $LN45@update_com
$LN44@update_com:
  0034a	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_eo_azimuth$5[ebp]
  00352	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR tv175[ebp], xmm0
$LN45@update_com:
  0035a	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR tv175[ebp]
  00362	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv176[ebp], xmm0
$LN47@update_com:
  0036a	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR tv176[ebp]
  00372	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _frame_delta_eo_azimuth$3[ebp], xmm0

; 1249 : 		eo_azimuth += frame_delta_eo_azimuth;

  0037a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00382	f3 0f 58 85 60
	ff ff ff	 addss	 xmm0, DWORD PTR _frame_delta_eo_azimuth$3[ebp]
  0038a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 1250 : 
; 1251 : 		delta_eo_elevation = req_elevation - eo_elevation;

  00392	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _req_elevation$6[ebp]
  0039a	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  003a2	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _delta_eo_elevation$4[ebp], xmm0

; 1252 : 		frame_delta_eo_elevation = bound (delta_eo_elevation, -frame_slew_rate, frame_slew_rate);

  003aa	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  003b2	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003b9	0f 2f 85 64 ff
	ff ff		 comiss	 xmm0, DWORD PTR _delta_eo_elevation$4[ebp]
  003c0	76 19		 jbe	 SHORT $LN50@update_com
  003c2	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  003ca	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003d1	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv184[ebp], xmm0
  003d9	eb 43		 jmp	 SHORT $LN51@update_com
$LN50@update_com:
  003db	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_eo_elevation$4[ebp]
  003e3	0f 2f 85 58 ff
	ff ff		 comiss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  003ea	76 12		 jbe	 SHORT $LN48@update_com
  003ec	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _frame_slew_rate$1[ebp]
  003f4	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR tv183[ebp], xmm0
  003fc	eb 10		 jmp	 SHORT $LN49@update_com
$LN48@update_com:
  003fe	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_eo_elevation$4[ebp]
  00406	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR tv183[ebp], xmm0
$LN49@update_com:
  0040e	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR tv183[ebp]
  00416	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv184[ebp], xmm0
$LN51@update_com:
  0041e	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR tv184[ebp]
  00426	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _frame_delta_eo_elevation$2[ebp], xmm0

; 1253 : 		eo_elevation += frame_delta_eo_elevation;

  0042e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00436	f3 0f 58 85 5c
	ff ff ff	 addss	 xmm0, DWORD PTR _frame_delta_eo_elevation$2[ebp]
  0043e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 1254 : 
; 1255 : 		if (eo_azimuth < eo_min_azimuth)

  00446	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  0044e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00455	76 1c		 jbe	 SHORT $LN13@update_com

; 1256 : 		{
; 1257 : 			eo_azimuth = eo_min_azimuth;

  00457	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  0045f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 1258 : 
; 1259 : 			eo_target_locked = FALSE;

  00467	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
  00471	eb 2b		 jmp	 SHORT $LN15@update_com
$LN13@update_com:

; 1260 : 		}
; 1261 : 		else if (eo_azimuth > eo_max_azimuth)

  00473	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  0047b	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  00482	76 1a		 jbe	 SHORT $LN15@update_com

; 1262 : 		{
; 1263 : 			eo_azimuth = eo_max_azimuth;

  00484	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  0048c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 1264 : 
; 1265 : 			eo_target_locked = FALSE;

  00494	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
$LN15@update_com:

; 1266 : 		}
; 1267 : 
; 1268 : 		if (eo_elevation < eo_min_elevation)

  0049e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  004a6	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  004ad	76 1c		 jbe	 SHORT $LN16@update_com

; 1269 : 		{
; 1270 : 			eo_elevation = eo_min_elevation;

  004af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  004b7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 1271 : 
; 1272 : 			eo_target_locked = FALSE;

  004bf	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
  004c9	eb 2b		 jmp	 SHORT $LN18@update_com
$LN16@update_com:

; 1273 : 		}
; 1274 : 		else if (eo_elevation > eo_max_elevation)

  004cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  004d3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  004da	76 1a		 jbe	 SHORT $LN18@update_com

; 1275 : 		{
; 1276 : 			eo_elevation = eo_max_elevation;

  004dc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  004e4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 1277 : 
; 1278 : 			eo_target_locked = FALSE;

  004ec	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
$LN18@update_com:

; 1279 : 		}
; 1280 : 	}
; 1281 : 
; 1282 : 	eo_vp.position = vp.position;

  004f6	8b 45 bc	 mov	 eax, DWORD PTR _vp$[ebp]
  004f9	a3 00 00 00 00	 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A, eax
  004fe	8b 4d c0	 mov	 ecx, DWORD PTR _vp$[ebp+4]
  00501	89 0d 04 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4, ecx
  00507	8b 55 c4	 mov	 edx, DWORD PTR _vp$[ebp+8]
  0050a	89 15 08 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8, edx

; 1283 : 
; 1284 : 	get_3d_transformation_matrix (m, eo_azimuth, eo_elevation, 0.0);

  00510	51		 push	 ecx
  00511	0f 57 c0	 xorps	 xmm0, xmm0
  00514	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00519	51		 push	 ecx
  0051a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00522	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00527	51		 push	 ecx
  00528	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00530	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00535	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _m$[ebp]
  0053b	50		 push	 eax
  0053c	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1285 : 
; 1286 : 	multiply_matrix3x3_matrix3x3 (eo_vp.attitude, m, vp.attitude);

  00541	8d 45 c8	 lea	 eax, DWORD PTR _vp$[ebp+12]
  00544	50		 push	 eax
  00545	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _m$[ebp]
  0054b	51		 push	 ecx
  0054c	68 0c 00 00 00	 push	 OFFSET ?eo_vp@@3UVIEWPOINT@@A+12
  00551	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3

; 1287 : 
; 1288 : 	//
; 1289 : 	// update target
; 1290 : 	//
; 1291 : 
; 1292 : 	update_eo_visibility ();

  00556	e8 00 00 00 00	 call	 ?update_eo_visibility@@YGXXZ ; update_eo_visibility

; 1293 : 
; 1294 : 	if (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_DVO)

  0055b	83 3d 00 00 00
	00 05		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 5 ; target_acquisition_system
  00562	75 09		 jne	 SHORT $LN19@update_com

; 1295 : 		new__target = NULL;

  00564	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1296 : 	else

  0056b	eb 08		 jmp	 SHORT $LN20@update_com
$LN19@update_com:

; 1297 : 		new__target = get_eo_boresight_target ();

  0056d	e8 00 00 00 00	 call	 ?get_eo_boresight_target@@YGPAUENTITY@@XZ ; get_eo_boresight_target
  00572	89 45 ec	 mov	 DWORD PTR _new__target$[ebp], eax
$LN20@update_com:

; 1298 : 
; 1299 : 	if (eo_target_locked & TARGET_LOCK)

  00575	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  0057a	83 e0 02	 and	 eax, 2
  0057d	74 12		 je	 SHORT $LN22@update_com

; 1300 : 	{
; 1301 : 		if (new__target != current_target)

  0057f	8b 45 ec	 mov	 eax, DWORD PTR _new__target$[ebp]
  00582	3b 45 f0	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00585	74 0a		 je	 SHORT $LN22@update_com

; 1302 : 			eo_target_locked = 0;

  00587	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked
$LN22@update_com:

; 1303 : 	}
; 1304 : 
; 1305 : 	// update target lock
; 1306 : 	if (new__target)

  00591	83 7d ec 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  00595	0f 84 ca 00 00
	00		 je	 $LN26@update_com

; 1307 : 	{
; 1308 : 		if (get_local_entity_parent (new__target, LIST_TYPE_GUNSHIP_TARGET) == NULL)

  0059b	83 7d ec 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  0059f	74 0d		 je	 SHORT $LN52@update_com
  005a1	8b 45 ec	 mov	 eax, DWORD PTR _new__target$[ebp]
  005a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a6	89 8d 14 ff ff
	ff		 mov	 DWORD PTR tv240[ebp], ecx
  005ac	eb 20		 jmp	 SHORT $LN53@update_com
$LN52@update_com:
  005ae	68 1c 05 00 00	 push	 1308			; 0000051cH
  005b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005be	52		 push	 edx
  005bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c4	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv240[ebp], 0
$LN53@update_com:
  005ce	b8 01 00 00 00	 mov	 eax, 1
  005d3	85 c0		 test	 eax, eax
  005d5	74 0c		 je	 SHORT $LN54@update_com
  005d7	c7 85 10 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv247[ebp], 18 ; 00000012H
  005e1	eb 20		 jmp	 SHORT $LN55@update_com
$LN54@update_com:
  005e3	68 1c 05 00 00	 push	 1308			; 0000051cH
  005e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  005f3	51		 push	 ecx
  005f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f9	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv247[ebp], 0
$LN55@update_com:
  00603	6a 12		 push	 18			; 00000012H
  00605	8b 55 ec	 mov	 edx, DWORD PTR _new__target$[ebp]
  00608	52		 push	 edx
  00609	69 85 14 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv240[ebp], 180
  00613	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR tv247[ebp]
  00619	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00620	ff d2		 call	 edx
  00622	85 c0		 test	 eax, eax
  00624	75 13		 jne	 SHORT $LN24@update_com

; 1309 : 			insert_local_entity_into_parents_child_list (new__target, LIST_TYPE_GUNSHIP_TARGET, get_gunship_entity (), NULL);

  00626	6a 00		 push	 0
  00628	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0062d	50		 push	 eax
  0062e	6a 12		 push	 18			; 00000012H
  00630	8b 4d ec	 mov	 ecx, DWORD PTR _new__target$[ebp]
  00633	51		 push	 ecx
  00634	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN24@update_com:

; 1310 : 
; 1311 : 		if (lock_target)

  00639	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?lock_target@@3HA, 0
  00640	74 16		 je	 SHORT $LN25@update_com

; 1312 : 		{
; 1313 : 			eo_target_locked = TARGET_LOCK;

  00642	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 2 ; eo_target_locked

; 1314 : 			lock_terrain = FALSE;

  0064c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 0

; 1315 : 		}
; 1316 : 		else

  00656	eb 0d		 jmp	 SHORT $LN26@update_com
$LN25@update_com:

; 1317 : 			eo_target_locked &= ~TARGET_LOCK;

  00658	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  0065d	83 e0 fd	 and	 eax, -3			; fffffffdH
  00660	a3 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, eax ; eo_target_locked
$LN26@update_com:

; 1318 : 	}
; 1319 : 
; 1320 : 	// update point lock
; 1321 : 	if (lock_terrain)

  00665	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?lock_terrain@@3HA, 0
  0066c	0f 84 ec 00 00
	00		 je	 $LN27@update_com

; 1322 : 	{
; 1323 : 		if (!eo_is_tracking_point())

  00672	e8 00 00 00 00	 call	 ?eo_is_tracking_point@@YGHXZ ; eo_is_tracking_point
  00677	85 c0		 test	 eax, eax
  00679	0f 85 dd 00 00
	00		 jne	 $LN29@update_com

; 1324 : 		{
; 1325 : 			// try locking onto point on ground
; 1326 : 			if (get_eo_los_intercept_point(&eo_tracking_point) < eo_max_visual_range)

  0067f	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  00684	e8 00 00 00 00	 call	 ?get_eo_los_intercept_point@@YGMPAUVEC3D@@@Z ; get_eo_los_intercept_point
  00689	d9 9d 14 ff ff
	ff		 fstp	 DWORD PTR tv511[ebp]
  0068f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  00697	0f 2f 85 14 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv511[ebp]
  0069e	76 0c		 jbe	 SHORT $LN30@update_com

; 1327 : 				eo_target_locked = POINT_LOCK;

  006a0	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 1 ; eo_target_locked

; 1328 : 			else

  006aa	eb 05		 jmp	 SHORT $LN31@update_com
$LN30@update_com:

; 1329 : 				eo_stop_tracking();

  006ac	e8 00 00 00 00	 call	 ?eo_stop_tracking@@YGXXZ ; eo_stop_tracking
$LN31@update_com:

; 1330 : 
; 1331 : 			// have to update server's tracking point so that missiles will aim in multiplayer
; 1332 : 			set_client_server_entity_vec3d(get_gunship_entity(), VEC3D_TYPE_EO_TRACKING_POINT, &eo_tracking_point);

  006b1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  006b8	74 0f		 je	 SHORT $LN56@update_com
  006ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  006bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  006c1	89 8d 14 ff ff
	ff		 mov	 DWORD PTR tv272[ebp], ecx
  006c7	eb 27		 jmp	 SHORT $LN57@update_com
$LN56@update_com:
  006c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_eo@@YGXXZ@4JA
  006cf	81 c2 a7 00 00
	00		 add	 edx, 167		; 000000a7H
  006d5	52		 push	 edx
  006d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  006db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006e0	50		 push	 eax
  006e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006e6	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
$LN57@update_com:
  006f0	b9 01 00 00 00	 mov	 ecx, 1
  006f5	85 c9		 test	 ecx, ecx
  006f7	74 0c		 je	 SHORT $LN58@update_com
  006f9	c7 85 10 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv280[ebp], 3
  00703	eb 27		 jmp	 SHORT $LN59@update_com
$LN58@update_com:
  00705	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_eo@@YGXXZ@4JA
  0070b	81 c2 a7 00 00
	00		 add	 edx, 167		; 000000a7H
  00711	52		 push	 edx
  00712	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00717	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0071c	50		 push	 eax
  0071d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00722	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv280[ebp], 0
$LN59@update_com:
  0072c	68 00 00 00 00	 push	 OFFSET ?eo_tracking_point@@3UVEC3D@@A
  00731	6a 03		 push	 3
  00733	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00739	51		 push	 ecx
  0073a	69 95 14 ff ff
	ff c0 00 00 00	 imul	 edx, DWORD PTR tv272[ebp], 192
  00744	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR tv280[ebp]
  0074a	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*8]
  00751	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00757	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0075a	ff d0		 call	 eax
$LN29@update_com:

; 1333 : 		}
; 1334 : 	}
; 1335 : 	else

  0075c	eb 05		 jmp	 SHORT $LN28@update_com
$LN27@update_com:

; 1336 : 		eo_stop_tracking();

  0075e	e8 00 00 00 00	 call	 ?eo_stop_tracking@@YGXXZ ; eo_stop_tracking
$LN28@update_com:

; 1337 : 
; 1338 : 	// update the requested lock status
; 1339 : 	lock_target = (eo_target_locked & TARGET_LOCK) != 0;

  00763	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  00768	83 e0 02	 and	 eax, 2
  0076b	74 0c		 je	 SHORT $LN60@update_com
  0076d	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv290[ebp], 1
  00777	eb 0a		 jmp	 SHORT $LN61@update_com
$LN60@update_com:
  00779	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv290[ebp], 0
$LN61@update_com:
  00783	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv290[ebp]
  00789	89 0d 00 00 00
	00		 mov	 DWORD PTR ?lock_target@@3HA, ecx

; 1340 : 	lock_terrain = (eo_target_locked & POINT_LOCK) != 0;

  0078f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  00794	83 e0 01	 and	 eax, 1
  00797	74 0c		 je	 SHORT $LN62@update_com
  00799	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv293[ebp], 1
  007a3	eb 0a		 jmp	 SHORT $LN63@update_com
$LN62@update_com:
  007a5	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv293[ebp], 0
$LN63@update_com:
  007af	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv293[ebp]
  007b5	89 0d 00 00 00
	00		 mov	 DWORD PTR ?lock_terrain@@3HA, ecx

; 1341 : 
; 1342 : 	set_gunship_target (new__target);

  007bb	8b 45 ec	 mov	 eax, DWORD PTR _new__target$[ebp]
  007be	50		 push	 eax
  007bf	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 1343 : 
; 1344 : 	target_locked = eo_target_locked;

  007c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_target_locked@@3HA ; eo_target_locked
  007c9	a3 00 00 00 00	 mov	 DWORD PTR ?target_locked@@3HA, eax ; target_locked

; 1345 : 
; 1346 : 	if (!command_line_manual_laser_radar)

  007ce	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_manual_laser_radar@@3HA, 0 ; command_line_manual_laser_radar
  007d5	75 31		 jne	 SHORT $LN32@update_com

; 1347 : 		set_laser_is_active(target_locked != 0 || new__target);

  007d7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?target_locked@@3HA, 0 ; target_locked
  007de	75 12		 jne	 SHORT $LN64@update_com
  007e0	83 7d ec 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  007e4	75 0c		 jne	 SHORT $LN64@update_com
  007e6	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv298[ebp], 0
  007f0	eb 0a		 jmp	 SHORT $LN65@update_com
$LN64@update_com:
  007f2	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv298[ebp], 1
$LN65@update_com:
  007fc	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv298[ebp]
  00802	50		 push	 eax
  00803	e8 00 00 00 00	 call	 ?set_laser_is_active@@YGXH@Z ; set_laser_is_active
$LN32@update_com:

; 1348 : 
; 1349 : 	//
; 1350 : 	// flag eo on target for "CP/G IDENTIFYING..." message
; 1351 : 	//
; 1352 : 
; 1353 : 	eo_on_target = new__target != NULL;

  00808	83 7d ec 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  0080c	74 0c		 je	 SHORT $LN66@update_com
  0080e	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv301[ebp], 1
  00818	eb 0a		 jmp	 SHORT $LN67@update_com
$LN66@update_com:
  0081a	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv301[ebp], 0
$LN67@update_com:
  00824	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv301[ebp]
  0082a	a3 00 00 00 00	 mov	 DWORD PTR ?eo_on_target@@3HA, eax ; eo_on_target

; 1354 : 
; 1355 : 	// apply camera shake
; 1356 : 	// do this after check for boresight, otherwise the shaking will make it
; 1357 : 	// lose lock on target
; 1358 : 	if (gun_is_firing)

  0082f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gun_is_firing@@3HA, 0 ; gun_is_firing
  00836	0f 84 8a 00 00
	00		 je	 $LN33@update_com

; 1359 : 	{
; 1360 : 		adjusted_elevation = eo_elevation + sfrand1norm() * MAX_GUN_SHAKE_DEFLECTION;

  0083c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_elevation@@3MA
  00844	f2 0f 11 85 10
	ff ff ff	 movsd	 QWORD PTR tv558[ebp], xmm0
  0084c	e8 00 00 00 00	 call	 ?sfrand1norm@@YGNXZ	; sfrand1norm
  00851	dd 9d 08 ff ff
	ff		 fstp	 QWORD PTR tv535[ebp]
  00857	f2 0f 10 85 08
	ff ff ff	 movsd	 xmm0, QWORD PTR tv535[ebp]
  0085f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f5c987100000000
  00867	f2 0f 10 8d 10
	ff ff ff	 movsd	 xmm1, QWORD PTR tv558[ebp]
  0086f	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00873	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00877	f3 0f 11 45 fc	 movss	 DWORD PTR _adjusted_elevation$[ebp], xmm0

; 1361 : 		adjusted_azimuth = eo_azimuth + sfrand1norm() * 0.5 * MAX_GUN_SHAKE_DEFLECTION;

  0087c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_azimuth@@3MA
  00884	f2 0f 11 85 10
	ff ff ff	 movsd	 QWORD PTR tv560[ebp], xmm0
  0088c	e8 00 00 00 00	 call	 ?sfrand1norm@@YGNXZ	; sfrand1norm
  00891	dd 9d 08 ff ff
	ff		 fstp	 QWORD PTR tv539[ebp]
  00897	f2 0f 10 85 08
	ff ff ff	 movsd	 xmm0, QWORD PTR tv539[ebp]
  0089f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  008a7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f5c987100000000
  008af	f2 0f 10 8d 10
	ff ff ff	 movsd	 xmm1, QWORD PTR tv560[ebp]
  008b7	f2 0f 58 c8	 addsd	 xmm1, xmm0
  008bb	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  008bf	f3 0f 11 45 f8	 movss	 DWORD PTR _adjusted_azimuth$[ebp], xmm0

; 1362 : 	}
; 1363 : 	else

  008c4	eb 1a		 jmp	 SHORT $LN34@update_com
$LN33@update_com:

; 1364 : 	{
; 1365 : 		adjusted_elevation = eo_elevation;

  008c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  008ce	f3 0f 11 45 fc	 movss	 DWORD PTR _adjusted_elevation$[ebp], xmm0

; 1366 : 		adjusted_azimuth = eo_azimuth;

  008d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  008db	f3 0f 11 45 f8	 movss	 DWORD PTR _adjusted_azimuth$[ebp], xmm0
$LN34@update_com:

; 1367 : 	}
; 1368 : 
; 1369 : 	eo_vp.position = vp.position;

  008e0	8b 45 bc	 mov	 eax, DWORD PTR _vp$[ebp]
  008e3	a3 00 00 00 00	 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A, eax
  008e8	8b 4d c0	 mov	 ecx, DWORD PTR _vp$[ebp+4]
  008eb	89 0d 04 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+4, ecx
  008f1	8b 55 c4	 mov	 edx, DWORD PTR _vp$[ebp+8]
  008f4	89 15 08 00 00
	00		 mov	 DWORD PTR ?eo_vp@@3UVIEWPOINT@@A+8, edx

; 1370 : 	get_3d_transformation_matrix (m, adjusted_azimuth, adjusted_elevation, 0.0);

  008fa	51		 push	 ecx
  008fb	0f 57 c0	 xorps	 xmm0, xmm0
  008fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00903	51		 push	 ecx
  00904	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _adjusted_elevation$[ebp]
  00909	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0090e	51		 push	 ecx
  0090f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _adjusted_azimuth$[ebp]
  00914	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00919	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _m$[ebp]
  0091f	50		 push	 eax
  00920	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1371 : 	multiply_matrix3x3_matrix3x3 (eo_vp.attitude, m, vp.attitude);

  00925	8d 45 c8	 lea	 eax, DWORD PTR _vp$[ebp+12]
  00928	50		 push	 eax
  00929	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _m$[ebp]
  0092f	51		 push	 ecx
  00930	68 0c 00 00 00	 push	 OFFSET ?eo_vp@@3UVIEWPOINT@@A+12
  00935	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3
$LN1@update_com:

; 1372 : }

  0093a	5f		 pop	 edi
  0093b	5e		 pop	 esi
  0093c	5b		 pop	 ebx
  0093d	8b e5		 mov	 esp, ebp
  0093f	5d		 pop	 ebp
  00940	c3		 ret	 0
?update_common_eo@@YGXXZ ENDP				; update_common_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?deinitialise_common_eo@@YGXXZ
_TEXT	SEGMENT
?deinitialise_common_eo@@YGXXZ PROC			; deinitialise_common_eo, COMDAT

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 221  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?deinitialise_common_eo@@YGXXZ ENDP			; deinitialise_common_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_eo.c
;	COMDAT ?initialise_common_eo@@YGXXZ
_TEXT	SEGMENT
tv86 = -76						; size = 4
tv79 = -72						; size = 4
tv71 = -68						; size = 4
?initialise_common_eo@@YGXXZ PROC			; initialise_common_eo, COMDAT

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 191  : 	laser_active = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?laser_active@@3HA, 0

; 192  : 
; 193  : 	eo_target_locked = 0;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_target_locked@@3HA, 0 ; eo_target_locked

; 194  : 
; 195  : 	eo_on_target = FALSE;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_on_target@@3HA, 0 ; eo_on_target

; 196  : 
; 197  : 	eo_low_light = FALSE;

  00027	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light

; 198  : 
; 199  : 	eo_requested_elevation = 0.0;

  00031	0f 57 c0	 xorps	 xmm0, xmm0
  00034	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_requested_elevation@@3MA, xmm0

; 200  : 	eo_requested_azimuth = 0.0;

  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_requested_azimuth@@3MA, xmm0

; 201  : 
; 202  : 	electrical_system_on = !command_line_dynamics_engine_startup || get_local_entity_int_value(get_gunship_entity(), INT_TYPE_AIRBORNE_AIRCRAFT);

  00047	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_dynamics_engine_startup@@3HA, 0 ; command_line_dynamics_engine_startup
  0004e	0f 84 92 00 00
	00		 je	 $LN7@initialise
  00054	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0005b	74 0c		 je	 SHORT $LN3@initialise
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	89 4d bc	 mov	 DWORD PTR tv71[ebp], ecx
  00067	eb 21		 jmp	 SHORT $LN4@initialise
$LN3@initialise:
  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_common_eo@@YGXXZ@4JA
  0006f	83 c2 0c	 add	 edx, 12			; 0000000cH
  00072	52		 push	 edx
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00083	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN4@initialise:
  0008a	b9 01 00 00 00	 mov	 ecx, 1
  0008f	85 c9		 test	 ecx, ecx
  00091	74 09		 je	 SHORT $LN5@initialise
  00093	c7 45 b8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  0009a	eb 21		 jmp	 SHORT $LN6@initialise
$LN5@initialise:
  0009c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_common_eo@@YGXXZ@4JA
  000a2	83 c2 0c	 add	 edx, 12			; 0000000cH
  000a5	52		 push	 edx
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@NAEBICOJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b6	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN6@initialise:
  000bd	6a 04		 push	 4
  000bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c5	51		 push	 ecx
  000c6	69 55 bc 5c 04
	00 00		 imul	 edx, DWORD PTR tv71[ebp], 1116
  000cd	8b 45 b8	 mov	 eax, DWORD PTR tv79[ebp]
  000d0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000d7	ff d1		 call	 ecx
  000d9	85 c0		 test	 eax, eax
  000db	75 09		 jne	 SHORT $LN7@initialise
  000dd	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
  000e4	eb 07		 jmp	 SHORT $LN8@initialise
$LN7@initialise:
  000e6	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv86[ebp], 1
$LN8@initialise:
  000ed	8b 55 b4	 mov	 edx, DWORD PTR tv86[ebp]
  000f0	89 15 00 00 00
	00		 mov	 DWORD PTR ?electrical_system_on@@3HA, edx

; 203  : 
; 204  : 	eo_stop_tracking();

  000f6	e8 00 00 00 00	 call	 ?eo_stop_tracking@@YGXXZ ; eo_stop_tracking

; 205  : 
; 206  : 	lock_target = FALSE;

  000fb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lock_target@@3HA, 0

; 207  : 	lock_terrain = FALSE;

  00105	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lock_terrain@@3HA, 0

; 208  : 
; 209  : 	slave_target = NULL;

  0010f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slave_target@@3PAUENTITY@@A, 0 ; slave_target

; 210  : 
; 211  : 	co_pilot_sweep_heading = -rad(90.0);

  00119	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc90fdb
  00121	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?co_pilot_sweep_heading@@3MA, xmm0

; 212  : 	time_until_next_co_pilot_sweep = 2.0;

  00129	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00131	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?time_until_next_co_pilot_sweep@@3MA, xmm0

; 213  : }

  00139	5f		 pop	 edi
  0013a	5e		 pop	 esi
  0013b	5b		 pop	 ebx
  0013c	8b e5		 mov	 esp, ebp
  0013e	5d		 pop	 ebp
  0013f	c3		 ret	 0
?initialise_common_eo@@YGXXZ ENDP			; initialise_common_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sqrt@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sqrt@@YGMM@Z PROC					; sqrt, COMDAT

; 294  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	return (_CSTD sqrtf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sqrtf
  00019	83 c4 04	 add	 esp, 4

; 296  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sqrt@@YGMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?pow@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?pow@@YGMMM@Z PROC					; pow, COMDAT

; 240  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 241  : 	return (_CSTD powf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _powf
  00024	83 c4 08	 add	 esp, 8

; 242  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?pow@@YGMMM@Z ENDP					; pow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?log@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?log@@YGMM@Z PROC					; log, COMDAT

; 183  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 184  : 	return (_CSTD logf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _logf
  00019	83 c4 04	 add	 esp, 4

; 185  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?log@@YGMM@Z ENDP					; log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 759  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  :             return (float)sqrt(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sqrt
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 761  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _powf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_powf	PROC						; COMDAT

; 744  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 745  :             return (float)pow(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _pow
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 746  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_powf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _logf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_logf	PROC						; COMDAT

; 731  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 732  :             return (float)log(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _log
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 733  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_logf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
