; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\palette.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?application_colour_table@@3PAUtagPALETTEENTRY@@A ; application_colour_table
_BSS	SEGMENT
?application_colour_table@@3PAUtagPALETTEENTRY@@A DD 0100H DUP (?) ; application_colour_table
_BSS	ENDS
PUBLIC	?initialise_application_palette@@YGXPBD@Z	; initialise_application_palette
PUBLIC	?get_best_colour_table_entry@@YGHHHH@Z		; get_best_colour_table_entry
PUBLIC	??_C@_0CP@OHLPKBGB@Error?5during?5initialise_applica@ ; `string'
PUBLIC	__real@4b800000
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?load_tga_file@@YGPAXPBDPAF1PAH@Z:PROC		; load_tga_file
EXTRN	?tga_image_palette@@3PAUtagPALETTEENTRY@@A:BYTE	; tga_image_palette
EXTRN	__fltused:DWORD
;	COMDAT __real@4b800000
CONST	SEGMENT
__real@4b800000 DD 04b800000r			; 1.67772e+07
CONST	ENDS
;	COMDAT ??_C@_0CP@OHLPKBGB@Error?5during?5initialise_applica@
CONST	SEGMENT
??_C@_0CP@OHLPKBGB@Error?5during?5initialise_applica@ DB 'Error during in'
	DB	'itialise_application_palette %s', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\palette.c
;	COMDAT ?get_best_colour_table_entry@@YGHHHH@Z
_TEXT	SEGMENT
_colour_b$ = -52					; size = 4
_colour_g$ = -48					; size = 4
_colour_r$ = -44					; size = 4
_b$ = -40						; size = 4
_g$ = -36						; size = 4
_r$ = -32						; size = 4
_gd$ = -28						; size = 4
_bd$ = -24						; size = 4
_rd$ = -20						; size = 4
_temp$ = -16						; size = 4
_distance$ = -12					; size = 4
_match$ = -8						; size = 4
_count$ = -4						; size = 4
_red$ = 8						; size = 4
_green$ = 12						; size = 4
_blue$ = 16						; size = 4
?get_best_colour_table_entry@@YGHHHH@Z PROC		; get_best_colour_table_entry, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 117  : 
; 118  : 	int
; 119  : 		count,
; 120  : 		match;
; 121  : 
; 122  : 	float
; 123  : 		distance,
; 124  : 		temp,
; 125  : 		rd,
; 126  : 		bd,
; 127  : 		gd,
; 128  : 		r,
; 129  : 		g,
; 130  : 		b,
; 131  : 		colour_r,
; 132  : 		colour_g,
; 133  : 		colour_b;
; 134  : 
; 135  : 	match = -1;

  00009	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _match$[ebp], -1

; 136  : 	distance = 256 * 256 * 256;

  00010	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4b800000
  00018	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 137  : 
; 138  : 	r = ( ( float ) red );

  0001d	f3 0f 2a 45 08	 cvtsi2ss xmm0, DWORD PTR _red$[ebp]
  00022	f3 0f 11 45 e0	 movss	 DWORD PTR _r$[ebp], xmm0

; 139  : 	g = ( ( float ) green );

  00027	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _green$[ebp]
  0002c	f3 0f 11 45 dc	 movss	 DWORD PTR _g$[ebp], xmm0

; 140  : 	b = ( ( float ) blue );

  00031	f3 0f 2a 45 10	 cvtsi2ss xmm0, DWORD PTR _blue$[ebp]
  00036	f3 0f 11 45 d8	 movss	 DWORD PTR _b$[ebp], xmm0

; 141  : 
; 142  : 	for ( count = 0; count < 256; count++ )

  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00042	eb 09		 jmp	 SHORT $LN4@get_best_c
$LN2@get_best_c:
  00044	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00047	83 c0 01	 add	 eax, 1
  0004a	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@get_best_c:
  0004d	81 7d fc 00 01
	00 00		 cmp	 DWORD PTR _count$[ebp], 256 ; 00000100H
  00054	0f 8d b4 00 00
	00		 jge	 $LN3@get_best_c

; 143  : 	{
; 144  : 
; 145  : 		colour_r = ( ( float ) application_colour_table[count].peRed );

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0005d	0f b6 0c 85 00
	00 00 00	 movzx	 ecx, BYTE PTR ?application_colour_table@@3PAUtagPALETTEENTRY@@A[eax*4]
  00065	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00069	f3 0f 11 45 d4	 movss	 DWORD PTR _colour_r$[ebp], xmm0

; 146  : 
; 147  : 		colour_g = ( ( float ) application_colour_table[count].peGreen );

  0006e	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00071	0f b6 0c 85 01
	00 00 00	 movzx	 ecx, BYTE PTR ?application_colour_table@@3PAUtagPALETTEENTRY@@A[eax*4+1]
  00079	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0007d	f3 0f 11 45 d0	 movss	 DWORD PTR _colour_g$[ebp], xmm0

; 148  : 
; 149  : 		colour_b = ( ( float ) application_colour_table[count].peBlue );

  00082	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00085	0f b6 0c 85 02
	00 00 00	 movzx	 ecx, BYTE PTR ?application_colour_table@@3PAUtagPALETTEENTRY@@A[eax*4+2]
  0008d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00091	f3 0f 11 45 cc	 movss	 DWORD PTR _colour_b$[ebp], xmm0

; 150  : 
; 151  : 		rd = r - colour_r;	//red - application_colour_table[count].peRed;

  00096	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _r$[ebp]
  0009b	f3 0f 5c 45 d4	 subss	 xmm0, DWORD PTR _colour_r$[ebp]
  000a0	f3 0f 11 45 ec	 movss	 DWORD PTR _rd$[ebp], xmm0

; 152  : 
; 153  : 		gd = g - colour_g;	//green - application_colour_table[count].peGreen;

  000a5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _g$[ebp]
  000aa	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _colour_g$[ebp]
  000af	f3 0f 11 45 e4	 movss	 DWORD PTR _gd$[ebp], xmm0

; 154  : 
; 155  : 		bd = b - colour_b;	//blue - application_colour_table[count].peBlue;

  000b4	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _b$[ebp]
  000b9	f3 0f 5c 45 cc	 subss	 xmm0, DWORD PTR _colour_b$[ebp]
  000be	f3 0f 11 45 e8	 movss	 DWORD PTR _bd$[ebp], xmm0

; 156  : 
; 157  : 		temp = ( rd * rd ) + ( gd * gd ) + ( bd * bd );

  000c3	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _rd$[ebp]
  000c8	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _rd$[ebp]
  000cd	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _gd$[ebp]
  000d2	f3 0f 59 4d e4	 mulss	 xmm1, DWORD PTR _gd$[ebp]
  000d7	f3 0f 58 c1	 addss	 xmm0, xmm1
  000db	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _bd$[ebp]
  000e0	f3 0f 59 4d e8	 mulss	 xmm1, DWORD PTR _bd$[ebp]
  000e5	f3 0f 58 c1	 addss	 xmm0, xmm1
  000e9	f3 0f 11 45 f0	 movss	 DWORD PTR _temp$[ebp], xmm0

; 158  : 
; 159  : 		if ( temp < distance )

  000ee	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _distance$[ebp]
  000f3	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _temp$[ebp]
  000f7	76 10		 jbe	 SHORT $LN5@get_best_c

; 160  : 		{
; 161  : 
; 162  : 			distance = temp;

  000f9	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _temp$[ebp]
  000fe	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 163  : 
; 164  : 			match = count;

  00103	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00106	89 45 f8	 mov	 DWORD PTR _match$[ebp], eax
$LN5@get_best_c:

; 165  : 		}
; 166  : 	}

  00109	e9 36 ff ff ff	 jmp	 $LN2@get_best_c
$LN3@get_best_c:

; 167  : 
; 168  : //	debug_log ( "Best distance: %d", distance );
; 169  : 
; 170  : 	return ( match );

  0010e	8b 45 f8	 mov	 eax, DWORD PTR _match$[ebp]

; 171  : }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 0c 00	 ret	 12			; 0000000cH
?get_best_colour_table_entry@@YGHHHH@Z ENDP		; get_best_colour_table_entry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\palette.c
;	COMDAT ?initialise_application_palette@@YGXPBD@Z
_TEXT	SEGMENT
_count$1 = -16						; size = 4
_bits$ = -12						; size = 4
_height$ = -8						; size = 2
_width$ = -4						; size = 2
_filename$ = 8						; size = 4
?initialise_application_palette@@YGXPBD@Z PROC		; initialise_application_palette, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 82   : 
; 83   : 	short int
; 84   : 		width,
; 85   : 		height;
; 86   : 
; 87   : 	int
; 88   : 		bits;
; 89   : 
; 90   : 	if ( load_tga_file ( filename, &width, &height, &bits ) )

  00009	8d 45 f4	 lea	 eax, DWORD PTR _bits$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR _height$[ebp]
  00010	51		 push	 ecx
  00011	8d 55 fc	 lea	 edx, DWORD PTR _width$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?load_tga_file@@YGPAXPBDPAF1PAH@Z ; load_tga_file
  0001e	85 c0		 test	 eax, eax
  00020	74 5b		 je	 SHORT $LN5@initialise

; 91   : 	{
; 92   : 
; 93   : 		int
; 94   : 			count;
; 95   : 
; 96   : 		for ( count = 0; count < 256; count ++ )

  00022	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00029	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _count$1[ebp]
  0002e	83 c0 01	 add	 eax, 1
  00031	89 45 f0	 mov	 DWORD PTR _count$1[ebp], eax
$LN4@initialise:
  00034	81 7d f0 00 01
	00 00		 cmp	 DWORD PTR _count$1[ebp], 256 ; 00000100H
  0003b	7d 3e		 jge	 SHORT $LN3@initialise

; 97   : 		{
; 98   : 
; 99   : 			application_colour_table[count].peRed = tga_image_palette[count].peRed;

  0003d	8b 45 f0	 mov	 eax, DWORD PTR _count$1[ebp]
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _count$1[ebp]
  00043	8a 14 8d 00 00
	00 00		 mov	 dl, BYTE PTR ?tga_image_palette@@3PAUtagPALETTEENTRY@@A[ecx*4]
  0004a	88 14 85 00 00
	00 00		 mov	 BYTE PTR ?application_colour_table@@3PAUtagPALETTEENTRY@@A[eax*4], dl

; 100  : 			application_colour_table[count].peGreen = tga_image_palette[count].peGreen;

  00051	8b 45 f0	 mov	 eax, DWORD PTR _count$1[ebp]
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _count$1[ebp]
  00057	8a 14 8d 01 00
	00 00		 mov	 dl, BYTE PTR ?tga_image_palette@@3PAUtagPALETTEENTRY@@A[ecx*4+1]
  0005e	88 14 85 01 00
	00 00		 mov	 BYTE PTR ?application_colour_table@@3PAUtagPALETTEENTRY@@A[eax*4+1], dl

; 101  : 			application_colour_table[count].peBlue = tga_image_palette[count].peBlue;

  00065	8b 45 f0	 mov	 eax, DWORD PTR _count$1[ebp]
  00068	8b 4d f0	 mov	 ecx, DWORD PTR _count$1[ebp]
  0006b	8a 14 8d 02 00
	00 00		 mov	 dl, BYTE PTR ?tga_image_palette@@3PAUtagPALETTEENTRY@@A[ecx*4+2]
  00072	88 14 85 02 00
	00 00		 mov	 BYTE PTR ?application_colour_table@@3PAUtagPALETTEENTRY@@A[eax*4+2], dl

; 102  : 		}

  00079	eb b0		 jmp	 SHORT $LN2@initialise
$LN3@initialise:

; 103  : 	}
; 104  : 	else

  0007b	eb 11		 jmp	 SHORT $LN1@initialise
$LN5@initialise:

; 105  : 	{
; 106  : 
; 107  : 		debug_fatal ( "Error during initialise_application_palette %s", filename );

  0007d	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00080	50		 push	 eax
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@OHLPKBGB@Error?5during?5initialise_applica@
  00086	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0008b	83 c4 08	 add	 esp, 8
$LN1@initialise:

; 108  : 	}
; 109  : }

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
?initialise_application_palette@@YGXPBD@Z ENDP		; initialise_application_palette
_TEXT	ENDS
END
