; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\camera\cm_eject.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?eject_fader@@3MA				; eject_fader
_BSS	SEGMENT
?eject_fader@@3MA DD 01H DUP (?)			; eject_fader
_BSS	ENDS
PUBLIC	?reset_eject_camera@@YGXPAUCAMERA@@@Z		; reset_eject_camera
PUBLIC	?update_eject_camera@@YGXPAUCAMERA@@@Z		; update_eject_camera
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA ; `reset_eject_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_03DGOGAGNC@raw@				; `string'
PUBLIC	??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ ; `string'
PUBLIC	??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@		; `string'
PUBLIC	?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA ; `update_eject_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f800000
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fd54fdf3b645a1d
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@403e000000000000
PUBLIC	__real@40490fdb
PUBLIC	__real@be7ada92
PUBLIC	__real@be860a92
PUBLIC	__real@c083ef9e
PUBLIC	__xmm@80000000000000008000000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z:PROC ; get_matrix3x3_from_unit_vec3d
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?get_local_weapon_entity_parachute_open@@YGHPAUENTITY@@@Z:PROC ; get_local_weapon_entity_parachute_open
EXTRN	?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z:PROC ; get_local_entity_weapon_available
EXTRN	?get_crew_role@@YG?AW4CREW_ROLES@@XZ:PROC	; get_crew_role
EXTRN	?exit_game_function@@YGXPAUEVENT@@@Z:PROC	; exit_game_function
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c083ef9e
CONST	SEGMENT
__real@c083ef9e DD 0c083ef9er			; -4.123
CONST	ENDS
;	COMDAT __real@be860a92
CONST	SEGMENT
__real@be860a92 DD 0be860a92r			; -0.261799
CONST	ENDS
;	COMDAT __real@be7ada92
CONST	SEGMENT
__real@be7ada92 DD 0be7ada92r			; -0.244974
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@403e000000000000
CONST	SEGMENT
__real@403e000000000000 DQ 0403e000000000000r	; 30
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fd54fdf3b645a1d
CONST	SEGMENT
__real@3fd54fdf3b645a1d DQ 03fd54fdf3b645a1dr	; 0.333
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA DD 0a7H ; `update_eject_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@
CONST	SEGMENT
??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@ DB 'z_min < z_max', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
CONST	SEGMENT
??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ DB 'raw->external_view_'
	DB	'entity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03DGOGAGNC@raw@
CONST	SEGMENT
??_C@_03DGOGAGNC@raw@ DB 'raw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\camera\cm_eje'
	DB	'ct.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA DD 057H ; `reset_eject_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_eject.c
;	COMDAT ?update_eject_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv354 = -144						; size = 8
tv483 = -136						; size = 8
tv372 = -136						; size = 4
tv355 = -136						; size = 8
tv272 = -136						; size = 4
tv242 = -136						; size = 4
tv183 = -136						; size = 4
tv162 = -136						; size = 4
tv143 = -136						; size = 4
tv90 = -136						; size = 4
tv364 = -132						; size = 4
tv264 = -132						; size = 4
tv234 = -132						; size = 4
tv175 = -132						; size = 4
tv155 = -132						; size = 4
tv136 = -132						; size = 4
tv82 = -132						; size = 4
$T1 = -128						; size = 4
_terrain_y$2 = -60					; size = 4
_heading$3 = -56					; size = 4
_rel_camera_position$4 = -52				; size = 12
_v$5 = -40						; size = 12
_pos$6 = -28						; size = 12
_track_target$ = -16					; size = 4
_ejected_pilot$ = -12					; size = 4
_launched_weapon$ = -8					; size = 4
_players_gunship$ = -4					; size = 4
_raw$ = 8						; size = 4
?update_eject_camera@@YGXPAUCAMERA@@@Z PROC		; update_eject_camera, COMDAT

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 168  : 	entity
; 169  : 		*players_gunship,
; 170  : 		*launched_weapon,
; 171  : 		*ejected_pilot,
; 172  : 		*track_target;
; 173  : 
; 174  : 	//
; 175  : 	// pre-amble (assume the external view entity is the player's gunship)
; 176  : 	//
; 177  : 
; 178  : 	ASSERT (raw);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@update_eje
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00017	83 c0 0b	 add	 eax, 11			; 0000000bH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_eje:

; 179  : 
; 180  : 	ASSERT (raw->external_view_entity);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002d	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00034	75 18		 jne	 SHORT $LN5@update_eje
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  0003b	83 c0 0d	 add	 eax, 13			; 0000000dH
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@update_eje:

; 181  : 
; 182  : 	players_gunship = raw->external_view_entity;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00051	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00057	89 4d fc	 mov	 DWORD PTR _players_gunship$[ebp], ecx

; 183  : 
; 184  : 	eject_fader = 0.0;

  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eject_fader@@3MA, xmm0

; 185  : 
; 186  : 	//
; 187  : 	// find the ejected pilot
; 188  : 	//
; 189  : 
; 190  : 	launched_weapon = get_local_entity_first_child (players_gunship, LIST_TYPE_LAUNCHED_WEAPON);

  00065	83 7d fc 00	 cmp	 DWORD PTR _players_gunship$[ebp], 0
  00069	74 0d		 je	 SHORT $LN24@update_eje
  0006b	8b 45 fc	 mov	 eax, DWORD PTR _players_gunship$[ebp]
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv82[ebp], ecx
  00076	eb 24		 jmp	 SHORT $LN25@update_eje
$LN24@update_eje:
  00078	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  0007e	83 c2 17	 add	 edx, 23			; 00000017H
  00081	52		 push	 edx
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00092	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN25@update_eje:
  0009c	b9 01 00 00 00	 mov	 ecx, 1
  000a1	85 c9		 test	 ecx, ecx
  000a3	74 0c		 je	 SHORT $LN26@update_eje
  000a5	c7 85 78 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR tv90[ebp], 24	; 00000018H
  000af	eb 24		 jmp	 SHORT $LN27@update_eje
$LN26@update_eje:
  000b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  000b7	83 c2 17	 add	 edx, 23			; 00000017H
  000ba	52		 push	 edx
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cb	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN27@update_eje:
  000d5	6a 18		 push	 24			; 00000018H
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _players_gunship$[ebp]
  000da	51		 push	 ecx
  000db	69 95 7c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv82[ebp], 180
  000e5	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv90[ebp]
  000eb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000f2	ff d1		 call	 ecx
  000f4	89 45 f8	 mov	 DWORD PTR _launched_weapon$[ebp], eax

; 191  : 
; 192  : 	ejected_pilot = NULL;

  000f7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _ejected_pilot$[ebp], 0
$LN2@update_eje:

; 193  : 
; 194  : 	while (launched_weapon)

  000fe	83 7d f8 00	 cmp	 DWORD PTR _launched_weapon$[ebp], 0
  00102	0f 84 d7 01 00
	00		 je	 $LN3@update_eje

; 195  : 	{
; 196  : 		if (get_crew_role () == CREW_ROLE_PILOT)

  00108	e8 00 00 00 00	 call	 ?get_crew_role@@YG?AW4CREW_ROLES@@XZ ; get_crew_role
  0010d	85 c0		 test	 eax, eax
  0010f	0f 85 9c 00 00
	00		 jne	 $LN6@update_eje

; 197  : 		{
; 198  : 			if (get_local_entity_int_value (launched_weapon, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_WEAPON_HOKUM_PILOT)

  00115	83 7d f8 00	 cmp	 DWORD PTR _launched_weapon$[ebp], 0
  00119	74 0d		 je	 SHORT $LN28@update_eje
  0011b	8b 45 f8	 mov	 eax, DWORD PTR _launched_weapon$[ebp]
  0011e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00120	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv136[ebp], ecx
  00126	eb 20		 jmp	 SHORT $LN29@update_eje
$LN28@update_eje:
  00128	68 c6 00 00 00	 push	 198			; 000000c6H
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00132	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN29@update_eje:
  00148	b8 01 00 00 00	 mov	 eax, 1
  0014d	85 c0		 test	 eax, eax
  0014f	74 0c		 je	 SHORT $LN30@update_eje
  00151	c7 85 78 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv143[ebp], 52 ; 00000034H
  0015b	eb 20		 jmp	 SHORT $LN31@update_eje
$LN30@update_eje:
  0015d	68 c6 00 00 00	 push	 198			; 000000c6H
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00167	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0016d	51		 push	 ecx
  0016e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00173	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv143[ebp], 0
$LN31@update_eje:
  0017d	6a 34		 push	 52			; 00000034H
  0017f	8b 55 f8	 mov	 edx, DWORD PTR _launched_weapon$[ebp]
  00182	52		 push	 edx
  00183	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv136[ebp], 1116
  0018d	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv143[ebp]
  00193	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0019a	ff d2		 call	 edx
  0019c	83 f8 48	 cmp	 eax, 72			; 00000048H
  0019f	75 0b		 jne	 SHORT $LN8@update_eje

; 199  : 			{
; 200  : 				ejected_pilot = launched_weapon;

  001a1	8b 45 f8	 mov	 eax, DWORD PTR _launched_weapon$[ebp]
  001a4	89 45 f4	 mov	 DWORD PTR _ejected_pilot$[ebp], eax

; 201  : 
; 202  : 				break;

  001a7	e9 33 01 00 00	 jmp	 $LN3@update_eje
$LN8@update_eje:

; 203  : 			}
; 204  : 		}
; 205  : 		else

  001ac	e9 97 00 00 00	 jmp	 $LN9@update_eje
$LN6@update_eje:

; 206  : 		{
; 207  : 			if (get_local_entity_int_value (launched_weapon, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_WEAPON_HOKUM_CO_PILOT)

  001b1	83 7d f8 00	 cmp	 DWORD PTR _launched_weapon$[ebp], 0
  001b5	74 0d		 je	 SHORT $LN32@update_eje
  001b7	8b 45 f8	 mov	 eax, DWORD PTR _launched_weapon$[ebp]
  001ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  001bc	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv155[ebp], ecx
  001c2	eb 20		 jmp	 SHORT $LN33@update_eje
$LN32@update_eje:
  001c4	68 cf 00 00 00	 push	 207			; 000000cfH
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d4	52		 push	 edx
  001d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001da	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv155[ebp], 0
$LN33@update_eje:
  001e4	b8 01 00 00 00	 mov	 eax, 1
  001e9	85 c0		 test	 eax, eax
  001eb	74 0c		 je	 SHORT $LN34@update_eje
  001ed	c7 85 78 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv162[ebp], 52 ; 00000034H
  001f7	eb 20		 jmp	 SHORT $LN35@update_eje
$LN34@update_eje:
  001f9	68 cf 00 00 00	 push	 207			; 000000cfH
  001fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00203	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00209	51		 push	 ecx
  0020a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
$LN35@update_eje:
  00219	6a 34		 push	 52			; 00000034H
  0021b	8b 55 f8	 mov	 edx, DWORD PTR _launched_weapon$[ebp]
  0021e	52		 push	 edx
  0021f	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv155[ebp], 1116
  00229	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv162[ebp]
  0022f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00236	ff d2		 call	 edx
  00238	83 f8 49	 cmp	 eax, 73			; 00000049H
  0023b	75 0b		 jne	 SHORT $LN9@update_eje

; 208  : 			{
; 209  : 				ejected_pilot = launched_weapon;

  0023d	8b 45 f8	 mov	 eax, DWORD PTR _launched_weapon$[ebp]
  00240	89 45 f4	 mov	 DWORD PTR _ejected_pilot$[ebp], eax

; 210  : 
; 211  : 				break;

  00243	e9 97 00 00 00	 jmp	 $LN3@update_eje
$LN9@update_eje:

; 212  : 			}
; 213  : 		}
; 214  : 
; 215  : 		launched_weapon = get_local_entity_child_succ (launched_weapon, LIST_TYPE_LAUNCHED_WEAPON);

  00248	83 7d f8 00	 cmp	 DWORD PTR _launched_weapon$[ebp], 0
  0024c	74 0d		 je	 SHORT $LN36@update_eje
  0024e	8b 45 f8	 mov	 eax, DWORD PTR _launched_weapon$[ebp]
  00251	8b 08		 mov	 ecx, DWORD PTR [eax]
  00253	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv175[ebp], ecx
  00259	eb 24		 jmp	 SHORT $LN37@update_eje
$LN36@update_eje:
  0025b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00261	83 c2 30	 add	 edx, 48			; 00000030H
  00264	52		 push	 edx
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026f	50		 push	 eax
  00270	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00275	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv175[ebp], 0
$LN37@update_eje:
  0027f	b9 01 00 00 00	 mov	 ecx, 1
  00284	85 c9		 test	 ecx, ecx
  00286	74 0c		 je	 SHORT $LN38@update_eje
  00288	c7 85 78 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR tv183[ebp], 24 ; 00000018H
  00292	eb 24		 jmp	 SHORT $LN39@update_eje
$LN38@update_eje:
  00294	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  0029a	83 c2 30	 add	 edx, 48			; 00000030H
  0029d	52		 push	 edx
  0029e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002a8	50		 push	 eax
  002a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ae	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN39@update_eje:
  002b8	6a 18		 push	 24			; 00000018H
  002ba	8b 4d f8	 mov	 ecx, DWORD PTR _launched_weapon$[ebp]
  002bd	51		 push	 ecx
  002be	69 95 7c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv175[ebp], 180
  002c8	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv183[ebp]
  002ce	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002d5	ff d1		 call	 ecx
  002d7	89 45 f8	 mov	 DWORD PTR _launched_weapon$[ebp], eax

; 216  : 	}

  002da	e9 1f fe ff ff	 jmp	 $LN2@update_eje
$LN3@update_eje:

; 217  : 
; 218  : 	//
; 219  : 	// sort out what to watch
; 220  : 	//
; 221  : 
; 222  : 	track_target = NULL;

  002df	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _track_target$[ebp], 0

; 223  : 
; 224  : 	if (ejected_pilot)

  002e6	83 7d f4 00	 cmp	 DWORD PTR _ejected_pilot$[ebp], 0
  002ea	74 15		 je	 SHORT $LN10@update_eje

; 225  : 	{
; 226  : 		if (!get_local_weapon_entity_parachute_open (ejected_pilot))

  002ec	8b 45 f4	 mov	 eax, DWORD PTR _ejected_pilot$[ebp]
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ?get_local_weapon_entity_parachute_open@@YGHPAUENTITY@@@Z ; get_local_weapon_entity_parachute_open
  002f5	85 c0		 test	 eax, eax
  002f7	75 06		 jne	 SHORT $LN12@update_eje

; 227  : 		{
; 228  : 			track_target = ejected_pilot;

  002f9	8b 45 f4	 mov	 eax, DWORD PTR _ejected_pilot$[ebp]
  002fc	89 45 f0	 mov	 DWORD PTR _track_target$[ebp], eax
$LN12@update_eje:

; 229  : 		}
; 230  : 	}
; 231  : 	else

  002ff	eb 2b		 jmp	 SHORT $LN13@update_eje
$LN10@update_eje:

; 232  : 	{
; 233  : 		track_target = players_gunship;

  00301	8b 45 fc	 mov	 eax, DWORD PTR _players_gunship$[ebp]
  00304	89 45 f0	 mov	 DWORD PTR _track_target$[ebp], eax

; 234  : 
; 235  : 		//
; 236  : 		// if either pilot or co-pilot fired then quit mission
; 237  : 		//
; 238  : 
; 239  : 		if
; 240  : 		(!

  00307	6a 48		 push	 72			; 00000048H
  00309	8b 45 fc	 mov	 eax, DWORD PTR _players_gunship$[ebp]
  0030c	50		 push	 eax
  0030d	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00312	85 c0		 test	 eax, eax
  00314	74 0f		 je	 SHORT $LN14@update_eje
  00316	6a 49		 push	 73			; 00000049H
  00318	8b 45 fc	 mov	 eax, DWORD PTR _players_gunship$[ebp]
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00321	85 c0		 test	 eax, eax
  00323	75 07		 jne	 SHORT $LN13@update_eje
$LN14@update_eje:

; 241  : 			(
; 242  : 				get_local_entity_weapon_available (players_gunship, ENTITY_SUB_TYPE_WEAPON_HOKUM_PILOT) &&
; 243  : 				get_local_entity_weapon_available (players_gunship, ENTITY_SUB_TYPE_WEAPON_HOKUM_CO_PILOT)
; 244  : 			)
; 245  : 		)
; 246  : 		{
; 247  : 			exit_game_function (NULL);

  00325	6a 00		 push	 0
  00327	e8 00 00 00 00	 call	 ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function
$LN13@update_eje:

; 248  : 		}
; 249  : 	}
; 250  : 
; 251  : 	if (track_target)

  0032c	83 7d f0 00	 cmp	 DWORD PTR _track_target$[ebp], 0
  00330	0f 84 c1 00 00
	00		 je	 $LN15@update_eje

; 252  : 	{
; 253  : 		////////////////////////////////////////
; 254  : 		//
; 255  : 		// TRACK GUNSHIP OR EJECTED PILOT
; 256  : 		//
; 257  : 		////////////////////////////////////////
; 258  : 
; 259  : 		vec3d
; 260  : 			pos,
; 261  : 			v;
; 262  : 
; 263  : 		//
; 264  : 		// get camera to entity vector
; 265  : 		//
; 266  : 
; 267  : 		get_local_entity_target_point (track_target, &pos);

  00336	8d 45 e4	 lea	 eax, DWORD PTR _pos$6[ebp]
  00339	50		 push	 eax
  0033a	8b 4d f0	 mov	 ecx, DWORD PTR _track_target$[ebp]
  0033d	51		 push	 ecx
  0033e	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 268  : 
; 269  : 		v.x = pos.x - raw->position.x;

  00343	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00346	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _pos$6[ebp]
  0034b	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0034f	f3 0f 11 45 d8	 movss	 DWORD PTR _v$5[ebp], xmm0

; 270  : 		v.y = pos.y - raw->position.y;

  00354	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00357	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _pos$6[ebp+4]
  0035c	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00361	f3 0f 11 45 dc	 movss	 DWORD PTR _v$5[ebp+4], xmm0

; 271  : 		v.z = pos.z - raw->position.z;

  00366	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00369	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _pos$6[ebp+8]
  0036e	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00373	f3 0f 11 45 e0	 movss	 DWORD PTR _v$5[ebp+8], xmm0

; 272  : 
; 273  : 		//
; 274  : 		// prevent divide by zero
; 275  : 		//
; 276  : 
; 277  : 		if (get_3d_vector_magnitude (&v) < 0.001)

  00378	8d 45 d8	 lea	 eax, DWORD PTR _v$5[ebp]
  0037b	50		 push	 eax
  0037c	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00381	dd 9d 78 ff ff
	ff		 fstp	 QWORD PTR tv483[ebp]
  00387	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0038f	66 0f 2f 85 78
	ff ff ff	 comisd	 xmm0, QWORD PTR tv483[ebp]
  00397	76 1d		 jbe	 SHORT $LN17@update_eje

; 278  : 		{
; 279  : 			v.x = 0.0;

  00399	0f 57 c0	 xorps	 xmm0, xmm0
  0039c	f3 0f 11 45 d8	 movss	 DWORD PTR _v$5[ebp], xmm0

; 280  : 			v.y = 0.0;

  003a1	0f 57 c0	 xorps	 xmm0, xmm0
  003a4	f3 0f 11 45 dc	 movss	 DWORD PTR _v$5[ebp+4], xmm0

; 281  : 			v.z = 1.0;

  003a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003b1	f3 0f 11 45 e0	 movss	 DWORD PTR _v$5[ebp+8], xmm0
$LN17@update_eje:

; 282  : 		}
; 283  : 
; 284  : 		//
; 285  : 		// get camera attitude
; 286  : 		//
; 287  : 
; 288  : 		normalise_3d_vector (&v);

  003b6	8d 45 d8	 lea	 eax, DWORD PTR _v$5[ebp]
  003b9	50		 push	 eax
  003ba	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  003bf	dd d8		 fstp	 ST(0)

; 289  : 
; 290  : 		get_matrix3x3_from_unit_vec3d (raw->attitude, &v);

  003c1	8d 45 d8	 lea	 eax, DWORD PTR _v$5[ebp]
  003c4	50		 push	 eax
  003c5	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  003c8	83 c1 18	 add	 ecx, 24			; 00000018H
  003cb	51		 push	 ecx
  003cc	e8 00 00 00 00	 call	 ?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z ; get_matrix3x3_from_unit_vec3d

; 291  : 
; 292  : 		//
; 293  : 		// motion vector
; 294  : 		//
; 295  : 
; 296  : 		raw->motion_vector.x = 0.0;

  003d1	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003d4	0f 57 c0	 xorps	 xmm0, xmm0
  003d7	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 297  : 		raw->motion_vector.y = 0.0;

  003dc	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003df	0f 57 c0	 xorps	 xmm0, xmm0
  003e2	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 298  : 		raw->motion_vector.z = 0.0;

  003e7	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003ea	0f 57 c0	 xorps	 xmm0, xmm0
  003ed	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 299  : 	}
; 300  : 	else

  003f2	e9 52 04 00 00	 jmp	 $LN16@update_eje
$LN15@update_eje:

; 301  : 	{
; 302  : 		////////////////////////////////////////
; 303  : 		//
; 304  : 		// WATCH EJECTED PILOT
; 305  : 		//
; 306  : 		////////////////////////////////////////
; 307  : 
; 308  : 		vec3d
; 309  : 			rel_camera_position;
; 310  : 
; 311  : 		float
; 312  : 			heading,
; 313  : 			terrain_y;
; 314  : 
; 315  : 		//
; 316  : 		// get camera attitude
; 317  : 		//
; 318  : 
; 319  : 		heading = get_local_entity_float_value (ejected_pilot, FLOAT_TYPE_HEADING);

  003f7	83 7d f4 00	 cmp	 DWORD PTR _ejected_pilot$[ebp], 0
  003fb	74 0d		 je	 SHORT $LN40@update_eje
  003fd	8b 45 f4	 mov	 eax, DWORD PTR _ejected_pilot$[ebp]
  00400	8b 08		 mov	 ecx, DWORD PTR [eax]
  00402	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv234[ebp], ecx
  00408	eb 27		 jmp	 SHORT $LN41@update_eje
$LN40@update_eje:
  0040a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00410	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  00416	52		 push	 edx
  00417	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00421	50		 push	 eax
  00422	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00427	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN41@update_eje:
  00431	b9 01 00 00 00	 mov	 ecx, 1
  00436	85 c9		 test	 ecx, ecx
  00438	74 0c		 je	 SHORT $LN42@update_eje
  0043a	c7 85 78 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv242[ebp], 52 ; 00000034H
  00444	eb 27		 jmp	 SHORT $LN43@update_eje
$LN42@update_eje:
  00446	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  0044c	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  00452	52		 push	 edx
  00453	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00458	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0045d	50		 push	 eax
  0045e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00463	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN43@update_eje:
  0046d	6a 34		 push	 52			; 00000034H
  0046f	8b 4d f4	 mov	 ecx, DWORD PTR _ejected_pilot$[ebp]
  00472	51		 push	 ecx
  00473	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv234[ebp], 700
  0047d	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv242[ebp]
  00483	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0048a	ff d1		 call	 ecx
  0048c	d9 5d c8	 fstp	 DWORD PTR _heading$3[ebp]

; 320  : 
; 321  : 		heading += rad (180);

  0048f	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _heading$3[ebp]
  00494	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40490fdb
  0049c	f3 0f 11 45 c8	 movss	 DWORD PTR _heading$3[ebp], xmm0

; 322  : 
; 323  : 		get_3d_transformation_matrix (raw->attitude, heading, rad (-14.036), 0.0);

  004a1	51		 push	 ecx
  004a2	0f 57 c0	 xorps	 xmm0, xmm0
  004a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004aa	51		 push	 ecx
  004ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be7ada92
  004b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b8	51		 push	 ecx
  004b9	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _heading$3[ebp]
  004be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c3	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  004c6	83 c0 18	 add	 eax, 24			; 00000018H
  004c9	50		 push	 eax
  004ca	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 324  : 
; 325  : 		//
; 326  : 		// get camera position
; 327  : 		//
; 328  : 
; 329  : 		rel_camera_position.x = 0.0;

  004cf	0f 57 c0	 xorps	 xmm0, xmm0
  004d2	f3 0f 11 45 cc	 movss	 DWORD PTR _rel_camera_position$4[ebp], xmm0

; 330  : 		rel_camera_position.y = 0.0;

  004d7	0f 57 c0	 xorps	 xmm0, xmm0
  004da	f3 0f 11 45 d0	 movss	 DWORD PTR _rel_camera_position$4[ebp+4], xmm0

; 331  : 		rel_camera_position.z = -4.123;

  004df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c083ef9e
  004e7	f3 0f 11 45 d4	 movss	 DWORD PTR _rel_camera_position$4[ebp+8], xmm0

; 332  : 
; 333  : 		multiply_matrix3x3_vec3d (&rel_camera_position, raw->attitude, &rel_camera_position);

  004ec	8d 45 cc	 lea	 eax, DWORD PTR _rel_camera_position$4[ebp]
  004ef	50		 push	 eax
  004f0	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  004f3	83 c1 18	 add	 ecx, 24			; 00000018H
  004f6	51		 push	 ecx
  004f7	8d 55 cc	 lea	 edx, DWORD PTR _rel_camera_position$4[ebp]
  004fa	52		 push	 edx
  004fb	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 334  : 
; 335  : 		get_local_entity_vec3d (ejected_pilot, VEC3D_TYPE_POSITION, &raw->position);

  00500	83 7d f4 00	 cmp	 DWORD PTR _ejected_pilot$[ebp], 0
  00504	74 0d		 je	 SHORT $LN44@update_eje
  00506	8b 45 f4	 mov	 eax, DWORD PTR _ejected_pilot$[ebp]
  00509	8b 08		 mov	 ecx, DWORD PTR [eax]
  0050b	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv264[ebp], ecx
  00511	eb 27		 jmp	 SHORT $LN45@update_eje
$LN44@update_eje:
  00513	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00519	81 c2 a8 00 00
	00		 add	 edx, 168		; 000000a8H
  0051f	52		 push	 edx
  00520	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00525	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0052a	50		 push	 eax
  0052b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00530	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN45@update_eje:
  0053a	b9 01 00 00 00	 mov	 ecx, 1
  0053f	85 c9		 test	 ecx, ecx
  00541	74 0c		 je	 SHORT $LN46@update_eje
  00543	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv272[ebp], 8
  0054d	eb 27		 jmp	 SHORT $LN47@update_eje
$LN46@update_eje:
  0054f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00555	81 c2 a8 00 00
	00		 add	 edx, 168		; 000000a8H
  0055b	52		 push	 edx
  0055c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00561	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00566	50		 push	 eax
  00567	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0056c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
$LN47@update_eje:
  00576	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00579	51		 push	 ecx
  0057a	6a 08		 push	 8
  0057c	8b 55 f4	 mov	 edx, DWORD PTR _ejected_pilot$[ebp]
  0057f	52		 push	 edx
  00580	6b 85 7c ff ff
	ff 60		 imul	 eax, DWORD PTR tv264[ebp], 96
  00587	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv272[ebp]
  0058d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00594	ff d2		 call	 edx

; 336  : 
; 337  : 		raw->position.x += rel_camera_position.x;

  00596	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00599	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0059d	f3 0f 58 45 cc	 addss	 xmm0, DWORD PTR _rel_camera_position$4[ebp]
  005a2	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  005a5	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 338  : 		raw->position.y += rel_camera_position.y;

  005a9	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  005ac	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  005b1	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _rel_camera_position$4[ebp+4]
  005b6	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  005b9	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 339  : 		raw->position.z += rel_camera_position.z;

  005be	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  005c1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  005c6	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _rel_camera_position$4[ebp+8]
  005cb	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  005ce	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 340  : 
; 341  : 		//
; 342  : 		// make camera level
; 343  : 		//
; 344  : 
; 345  : 		get_3d_transformation_matrix (raw->attitude, heading, 0.0, 0.0);

  005d3	51		 push	 ecx
  005d4	0f 57 c0	 xorps	 xmm0, xmm0
  005d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005dc	51		 push	 ecx
  005dd	0f 57 c0	 xorps	 xmm0, xmm0
  005e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e5	51		 push	 ecx
  005e6	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _heading$3[ebp]
  005eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f0	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  005f3	83 c0 18	 add	 eax, 24			; 00000018H
  005f6	50		 push	 eax
  005f7	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 346  : 
; 347  : 		//
; 348  : 		// keep point above ground (unless point off map)
; 349  : 		//
; 350  : 
; 351  : 		if (point_inside_map_area (&raw->position))

  005fc	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  005ff	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00603	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0060a	0f 82 89 01 00
	00		 jb	 $LN18@update_eje
  00610	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00613	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0061b	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0061e	0f 82 75 01 00
	00		 jb	 $LN18@update_eje
  00624	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00627	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0062c	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00633	0f 82 60 01 00
	00		 jb	 $LN18@update_eje
  00639	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0063c	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00644	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00648	0f 82 4b 01 00
	00		 jb	 $LN18@update_eje

; 352  : 		{
; 353  : 			terrain_y = get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info);

  0064e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00651	83 c0 50	 add	 eax, 80			; 00000050H
  00654	50		 push	 eax
  00655	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00658	51		 push	 ecx
  00659	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0065e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00663	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00666	51		 push	 ecx
  00667	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0066b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00670	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00675	d9 5d c4	 fstp	 DWORD PTR _terrain_y$2[ebp]

; 354  : 
; 355  : 			raw->position.y = max (raw->position.y, terrain_y + CAMERA_MIN_HEIGHT_ABOVE_GROUND);

  00678	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _terrain_y$2[ebp]
  0067d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f8ccccd
  00685	f3 0f 11 45 80	 movss	 DWORD PTR $T1[ebp], xmm0
  0068a	8d 45 80	 lea	 eax, DWORD PTR $T1[ebp]
  0068d	50		 push	 eax
  0068e	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00691	83 c1 04	 add	 ecx, 4
  00694	51		 push	 ecx
  00695	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0069a	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0069d	8b 00		 mov	 eax, DWORD PTR [eax]
  0069f	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 356  : 
; 357  : 			if (raw->position.y < (terrain_y + 10.0))

  006a2	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  006a5	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  006aa	f3 0f 5a 4d c4	 cvtss2sd xmm1, DWORD PTR _terrain_y$2[ebp]
  006af	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@4024000000000000
  006b7	66 0f 2f c8	 comisd	 xmm1, xmm0
  006bb	76 1c		 jbe	 SHORT $LN20@update_eje

; 358  : 			{
; 359  : 				exit_game_function (NULL);

  006bd	6a 00		 push	 0
  006bf	e8 00 00 00 00	 call	 ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function

; 360  : 
; 361  : 				eject_fader = 1.0;

  006c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  006cc	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eject_fader@@3MA, xmm0
  006d4	e9 be 00 00 00	 jmp	 $LN22@update_eje
$LN20@update_eje:

; 362  : 			}
; 363  : 			else if (raw->position.y < (terrain_y + 30.0))

  006d9	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  006dc	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  006e1	f3 0f 5a 4d c4	 cvtss2sd xmm1, DWORD PTR _terrain_y$2[ebp]
  006e6	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@403e000000000000
  006ee	66 0f 2f c8	 comisd	 xmm1, xmm0
  006f2	0f 86 9f 00 00
	00		 jbe	 $LN22@update_eje

; 364  : 			{
; 365  : 				eject_fader = ((terrain_y + 30.0) - raw->position.y) * (1.0 / 20.0);

  006f8	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _terrain_y$2[ebp]
  006fd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@403e000000000000
  00705	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00708	f3 0f 5a 48 04	 cvtss2sd xmm1, DWORD PTR [eax+4]
  0070d	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00711	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00719	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0071d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eject_fader@@3MA, xmm0

; 366  : 
; 367  : 				eject_fader = bound (eject_fader, 0.0, 1.0);

  00725	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eject_fader@@3MA
  0072d	0f 57 c9	 xorps	 xmm1, xmm1
  00730	66 0f 2f c8	 comisd	 xmm1, xmm0
  00734	76 0d		 jbe	 SHORT $LN50@update_eje
  00736	0f 57 c0	 xorps	 xmm0, xmm0
  00739	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR tv355[ebp], xmm0
  00741	eb 44		 jmp	 SHORT $LN51@update_eje
$LN50@update_eje:
  00743	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eject_fader@@3MA
  0074b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00753	76 12		 jbe	 SHORT $LN48@update_eje
  00755	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0075d	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv354[ebp], xmm0
  00765	eb 10		 jmp	 SHORT $LN49@update_eje
$LN48@update_eje:
  00767	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eject_fader@@3MA
  0076f	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv354[ebp], xmm0
$LN49@update_eje:
  00777	f2 0f 10 85 70
	ff ff ff	 movsd	 xmm0, QWORD PTR tv354[ebp]
  0077f	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR tv355[ebp], xmm0
$LN51@update_eje:
  00787	f2 0f 5a 85 78
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv355[ebp]
  0078f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eject_fader@@3MA, xmm0
$LN22@update_eje:

; 368  : 			}
; 369  : 		}
; 370  : 		else

  00797	eb 17		 jmp	 SHORT $LN19@update_eje
$LN18@update_eje:

; 371  : 		{
; 372  : 			exit_game_function (NULL);

  00799	6a 00		 push	 0
  0079b	e8 00 00 00 00	 call	 ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function

; 373  : 
; 374  : 			eject_fader = 1.0;

  007a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  007a8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eject_fader@@3MA, xmm0
$LN19@update_eje:

; 375  : 		}
; 376  : 
; 377  : 		//
; 378  : 		// motion vector
; 379  : 		//
; 380  : 
; 381  : 		get_local_entity_vec3d (ejected_pilot, VEC3D_TYPE_MOTION_VECTOR, &raw->motion_vector);

  007b0	83 7d f4 00	 cmp	 DWORD PTR _ejected_pilot$[ebp], 0
  007b4	74 0d		 je	 SHORT $LN52@update_eje
  007b6	8b 45 f4	 mov	 eax, DWORD PTR _ejected_pilot$[ebp]
  007b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  007bb	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv364[ebp], ecx
  007c1	eb 27		 jmp	 SHORT $LN53@update_eje
$LN52@update_eje:
  007c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  007c9	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  007cf	52		 push	 edx
  007d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  007d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007da	50		 push	 eax
  007db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007e0	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv364[ebp], 0
$LN53@update_eje:
  007ea	b9 01 00 00 00	 mov	 ecx, 1
  007ef	85 c9		 test	 ecx, ecx
  007f1	74 0c		 je	 SHORT $LN54@update_eje
  007f3	c7 85 78 ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv372[ebp], 6
  007fd	eb 27		 jmp	 SHORT $LN55@update_eje
$LN54@update_eje:
  007ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00805	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  0080b	52		 push	 edx
  0080c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00811	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00816	50		 push	 eax
  00817	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0081c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv372[ebp], 0
$LN55@update_eje:
  00826	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00829	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0082c	51		 push	 ecx
  0082d	6a 06		 push	 6
  0082f	8b 55 f4	 mov	 edx, DWORD PTR _ejected_pilot$[ebp]
  00832	52		 push	 edx
  00833	6b 85 7c ff ff
	ff 60		 imul	 eax, DWORD PTR tv364[ebp], 96
  0083a	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv372[ebp]
  00840	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00847	ff d2		 call	 edx
$LN16@update_eje:

; 382  : 	}
; 383  : }

  00849	5f		 pop	 edi
  0084a	5e		 pop	 esi
  0084b	5b		 pop	 ebx
  0084c	8b e5		 mov	 esp, ebp
  0084e	5d		 pop	 ebp
  0084f	c2 04 00	 ret	 4
?update_eject_camera@@YGXPAUCAMERA@@@Z ENDP		; update_eject_camera
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_eject.c
;	COMDAT ?reset_eject_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv166 = -152						; size = 4
tv146 = -152						; size = 4
tv90 = -152						; size = 4
tv317 = -148						; size = 4
tv158 = -148						; size = 4
tv138 = -148						; size = 4
tv82 = -148						; size = 4
$T1 = -144						; size = 4
_z_max$ = -76						; size = 4
_z_min$ = -72						; size = 4
_heading$ = -68						; size = 4
_m$ = -64						; size = 36
_v$ = -28						; size = 12
_pos$ = -16						; size = 12
_en$ = -4						; size = 4
_raw$ = 8						; size = 4
?reset_eject_camera@@YGXPAUCAMERA@@@Z PROC		; reset_eject_camera, COMDAT

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 88   : 	entity
; 89   : 		*en;
; 90   : 
; 91   : 	vec3d
; 92   : 		pos,
; 93   : 		v;
; 94   : 
; 95   : 	matrix3x3
; 96   : 		m;
; 97   : 
; 98   : 	float
; 99   : 		heading,
; 100  : 		z_min,
; 101  : 		z_max;
; 102  : 
; 103  : 	//
; 104  : 	// pre-amble
; 105  : 	//
; 106  : 
; 107  : 	ASSERT (raw);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@reset_ejec
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00017	83 c0 14	 add	 eax, 20			; 00000014H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_ejec:

; 108  : 
; 109  : 	ASSERT (raw->external_view_entity);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002d	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00034	75 18		 jne	 SHORT $LN3@reset_ejec
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  0003b	83 c0 16	 add	 eax, 22			; 00000016H
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@reset_ejec:

; 110  : 
; 111  : 	en = raw->external_view_entity;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00051	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00057	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 112  : 
; 113  : 	//
; 114  : 	// place camera behind object to prevent going inside object (especially when the object is stationary)
; 115  : 	//
; 116  : 
; 117  : 	heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  0005a	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005e	74 0d		 je	 SHORT $LN7@reset_ejec
  00060	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv82[ebp], ecx
  0006b	eb 24		 jmp	 SHORT $LN8@reset_ejec
$LN7@reset_ejec:
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00073	83 c2 1e	 add	 edx, 30			; 0000001eH
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00087	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN8@reset_ejec:
  00091	b9 01 00 00 00	 mov	 ecx, 1
  00096	85 c9		 test	 ecx, ecx
  00098	74 0c		 je	 SHORT $LN9@reset_ejec
  0009a	c7 85 68 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv90[ebp], 52	; 00000034H
  000a4	eb 24		 jmp	 SHORT $LN10@reset_ejec
$LN9@reset_ejec:
  000a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  000ac	83 c2 1e	 add	 edx, 30			; 0000001eH
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN10@reset_ejec:
  000ca	6a 34		 push	 52			; 00000034H
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  000cf	51		 push	 ecx
  000d0	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv82[ebp], 700
  000da	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv90[ebp]
  000e0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000e7	ff d1		 call	 ecx
  000e9	d9 5d bc	 fstp	 DWORD PTR _heading$[ebp]

; 118  : 
; 119  : 	get_3d_transformation_matrix (m, heading, CHASE_CAMERA_RESET_PITCH, 0.0);

  000ec	51		 push	 ecx
  000ed	0f 57 c0	 xorps	 xmm0, xmm0
  000f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f5	51		 push	 ecx
  000f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be860a92
  000fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00103	51		 push	 ecx
  00104	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00109	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010e	8d 45 c0	 lea	 eax, DWORD PTR _m$[ebp]
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 120  : 
; 121  : 	z_min = get_local_entity_float_value (en, FLOAT_TYPE_CHASE_VIEW_MIN_DISTANCE);

  00117	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0011b	74 0d		 je	 SHORT $LN11@reset_ejec
  0011d	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00120	8b 08		 mov	 ecx, DWORD PTR [eax]
  00122	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
  00128	eb 24		 jmp	 SHORT $LN12@reset_ejec
$LN11@reset_ejec:
  0012a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00130	83 c2 22	 add	 edx, 34			; 00000022H
  00133	52		 push	 edx
  00134	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00139	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00144	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], 0
$LN12@reset_ejec:
  0014e	b9 01 00 00 00	 mov	 ecx, 1
  00153	85 c9		 test	 ecx, ecx
  00155	74 0c		 je	 SHORT $LN13@reset_ejec
  00157	c7 85 68 ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv146[ebp], 21 ; 00000015H
  00161	eb 24		 jmp	 SHORT $LN14@reset_ejec
$LN13@reset_ejec:
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  00169	83 c2 22	 add	 edx, 34			; 00000022H
  0016c	52		 push	 edx
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
$LN14@reset_ejec:
  00187	6a 15		 push	 21			; 00000015H
  00189	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0018c	51		 push	 ecx
  0018d	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv138[ebp], 700
  00197	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv146[ebp]
  0019d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001a4	ff d1		 call	 ecx
  001a6	d9 5d b8	 fstp	 DWORD PTR _z_min$[ebp]

; 122  : 	z_max = get_local_entity_float_value (en, FLOAT_TYPE_CHASE_VIEW_MAX_DISTANCE);

  001a9	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ad	74 0d		 je	 SHORT $LN15@reset_ejec
  001af	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b4	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv158[ebp], ecx
  001ba	eb 24		 jmp	 SHORT $LN16@reset_ejec
$LN15@reset_ejec:
  001bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  001c2	83 c2 23	 add	 edx, 35			; 00000023H
  001c5	52		 push	 edx
  001c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d0	50		 push	 eax
  001d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d6	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN16@reset_ejec:
  001e0	b9 01 00 00 00	 mov	 ecx, 1
  001e5	85 c9		 test	 ecx, ecx
  001e7	74 0c		 je	 SHORT $LN17@reset_ejec
  001e9	c7 85 68 ff ff
	ff 13 00 00 00	 mov	 DWORD PTR tv166[ebp], 19 ; 00000013H
  001f3	eb 24		 jmp	 SHORT $LN18@reset_ejec
$LN17@reset_ejec:
  001f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  001fb	83 c2 23	 add	 edx, 35			; 00000023H
  001fe	52		 push	 edx
  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00204	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00209	50		 push	 eax
  0020a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020f	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
$LN18@reset_ejec:
  00219	6a 13		 push	 19			; 00000013H
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0021e	51		 push	 ecx
  0021f	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv158[ebp], 700
  00229	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv166[ebp]
  0022f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00236	ff d1		 call	 ecx
  00238	d9 5d b4	 fstp	 DWORD PTR _z_max$[ebp]

; 123  : 
; 124  : 	ASSERT (z_min < z_max);

  0023b	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  00240	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _z_min$[ebp]
  00244	77 18		 ja	 SHORT $LN4@reset_ejec
  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_eject_camera@@YGXPAUCAMERA@@@Z@4JA
  0024b	83 c0 25	 add	 eax, 37			; 00000025H
  0024e	50		 push	 eax
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@FIHFNFPC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00254	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@
  00259	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@reset_ejec:

; 125  : 
; 126  : 	v.x = 0.0;

  0025e	0f 57 c0	 xorps	 xmm0, xmm0
  00261	f3 0f 11 45 e4	 movss	 DWORD PTR _v$[ebp], xmm0

; 127  : 	v.y = 0.0;

  00266	0f 57 c0	 xorps	 xmm0, xmm0
  00269	f3 0f 11 45 e8	 movss	 DWORD PTR _v$[ebp+4], xmm0

; 128  : 	v.z = -(((z_max - z_min) * CHASE_CAMERA_RESET_ZOOM * CHASE_CAMERA_RESET_ZOOM) + z_min);

  0026e	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  00273	f3 0f 5c 45 b8	 subss	 xmm0, DWORD PTR _z_min$[ebp]
  00278	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0027c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd54fdf3b645a1d
  00284	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd54fdf3b645a1d
  0028c	f3 0f 5a 4d b8	 cvtss2sd xmm1, DWORD PTR _z_min$[ebp]
  00291	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00295	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  0029c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a0	f3 0f 11 45 ec	 movss	 DWORD PTR _v$[ebp+8], xmm0

; 129  : 
; 130  : 	multiply_matrix3x3_vec3d (&v, m, &v);

  002a5	8d 45 e4	 lea	 eax, DWORD PTR _v$[ebp]
  002a8	50		 push	 eax
  002a9	8d 4d c0	 lea	 ecx, DWORD PTR _m$[ebp]
  002ac	51		 push	 ecx
  002ad	8d 55 e4	 lea	 edx, DWORD PTR _v$[ebp]
  002b0	52		 push	 edx
  002b1	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 131  : 
; 132  : 	get_local_entity_target_point (en, &pos);

  002b6	8d 45 f0	 lea	 eax, DWORD PTR _pos$[ebp]
  002b9	50		 push	 eax
  002ba	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  002bd	51		 push	 ecx
  002be	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 133  : 
; 134  : 	raw->position.x = pos.x + v.x;

  002c3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pos$[ebp]
  002c8	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _v$[ebp]
  002cd	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002d0	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 135  : 	raw->position.y = pos.y + v.y;

  002d4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pos$[ebp+4]
  002d9	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _v$[ebp+4]
  002de	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002e1	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 136  : 	raw->position.z = pos.z + v.z;

  002e6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  002eb	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _v$[ebp+8]
  002f0	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002f3	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 137  : 
; 138  : 	//
; 139  : 	// keep point above ground (unless point off map)
; 140  : 	//
; 141  : 
; 142  : 	if (point_inside_map_area (&raw->position))

  002f8	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002fb	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002ff	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00306	0f 82 96 00 00
	00		 jb	 $LN5@reset_ejec
  0030c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0030f	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00317	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0031a	0f 82 82 00 00
	00		 jb	 $LN5@reset_ejec
  00320	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00323	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00328	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0032f	72 71		 jb	 SHORT $LN5@reset_ejec
  00331	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00334	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0033c	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00340	72 60		 jb	 SHORT $LN5@reset_ejec

; 143  : 	{
; 144  : 		raw->position.y = max (raw->position.y, get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info) + CAMERA_MIN_HEIGHT_ABOVE_GROUND);

  00342	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00345	83 c0 50	 add	 eax, 80			; 00000050H
  00348	50		 push	 eax
  00349	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0034c	51		 push	 ecx
  0034d	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00352	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00357	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0035a	51		 push	 ecx
  0035b	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0035f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00364	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00369	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv317[ebp]
  0036f	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv317[ebp]
  00377	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f8ccccd
  0037f	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00387	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0038d	50		 push	 eax
  0038e	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00391	83 c1 04	 add	 ecx, 4
  00394	51		 push	 ecx
  00395	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0039a	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0039d	8b 00		 mov	 eax, DWORD PTR [eax]
  0039f	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN5@reset_ejec:

; 145  : 	}
; 146  : 
; 147  : 	//
; 148  : 	// motion vector
; 149  : 	//
; 150  : 
; 151  : 	raw->motion_vector.x = 0.0;

  003a2	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003a5	0f 57 c0	 xorps	 xmm0, xmm0
  003a8	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 152  : 	raw->motion_vector.y = 0.0;

  003ad	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003b0	0f 57 c0	 xorps	 xmm0, xmm0
  003b3	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 153  : 	raw->motion_vector.z = 0.0;

  003b8	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003bb	0f 57 c0	 xorps	 xmm0, xmm0
  003be	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 154  : 
; 155  : 	//
; 156  : 	// fader
; 157  : 	//
; 158  : 
; 159  : 	eject_fader = 0.0;

  003c3	0f 57 c0	 xorps	 xmm0, xmm0
  003c6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eject_fader@@3MA, xmm0

; 160  : }

  003ce	5f		 pop	 edi
  003cf	5e		 pop	 esi
  003d0	5b		 pop	 ebx
  003d1	8b e5		 mov	 esp, ebp
  003d3	5d		 pop	 ebp
  003d4	c2 04 00	 ret	 4
?reset_eject_camera@@YGXPAUCAMERA@@@Z ENDP		; reset_eject_camera
_TEXT	ENDS
END
