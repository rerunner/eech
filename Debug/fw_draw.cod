; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_fixed_wing_draw_functions@@YGXXZ	; overload_fixed_wing_draw_functions
PUBLIC	?update_fixed_wing_sprite_light_timers@@YGXXZ	; update_fixed_wing_sprite_light_timers
PUBLIC	?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA ; `draw_local_3d_object'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@DEPKDDDM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	__real@3fb0000000000000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
EXTRN	_memcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?frac@@YGMM@Z:PROC				; frac
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z:PROC ; animate_and_draw_entity_muzzle_flash_effect
EXTRN	?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_loading_doors
EXTRN	?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_cargo_doors
EXTRN	?animate_aircraft_rudder@@YGXPAUENTITY@@@Z:PROC	; animate_aircraft_rudder
EXTRN	?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_undercarriage
EXTRN	?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_weapon_system_ready
EXTRN	?animate_aircraft_shadow@@YGXPAUENTITY@@@Z:PROC	; animate_aircraft_shadow
EXTRN	?animate_fixed_wing_afterburners@@YGXPAUENTITY@@@Z:PROC ; animate_fixed_wing_afterburners
EXTRN	?animate_fixed_wing_airbrakes@@YGXPAUENTITY@@@Z:PROC ; animate_fixed_wing_airbrakes
EXTRN	?animate_fixed_wing_flaps@@YGXPAUENTITY@@@Z:PROC ; animate_fixed_wing_flaps
EXTRN	?animate_fixed_wing_propellors@@YGXPAUENTITY@@@Z:PROC ; animate_fixed_wing_propellors
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA:BYTE ; fn_draw_local_entity_3d_object
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?sprite_light_timer@@3MA DD 01H DUP (?)			; sprite_light_timer
_BSS	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb0000000000000
CONST	SEGMENT
__real@3fb0000000000000 DQ 03fb0000000000000r	; 0.0625
CONST	ENDS
;	COMDAT ??_C@_0FF@DEPKDDDM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@DEPKDDDM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwi'
	DB	'ng\fw_draw.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA DD 05dH ; `draw_local_3d_object'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_draw.c
;	COMDAT ?draw_local_3d_object@@YGXPAUENTITY@@M@Z
_TEXT	SEGMENT
tv139 = -80						; size = 4
tv170 = -76						; size = 4
tv150 = -76						; size = 4
tv131 = -76						; size = 4
_day_segment_type$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_range$ = 12						; size = 4
?draw_local_3d_object@@YGXPAUENTITY@@M@Z PROC		; draw_local_3d_object, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 94   : 	fixed_wing
; 95   : 		*raw;
; 96   : 
; 97   : 	day_segment_types
; 98   : 		day_segment_type;
; 99   : 
; 100  : 	raw = (fixed_wing *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 101  : 
; 102  : 	//
; 103  : 	// update viewpoint
; 104  : 	//
; 105  : 
; 106  : 	raw->ac.inst3d->vp.position = raw->ac.mob.position;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	83 c0 04	 add	 eax, 4
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0001b	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00021	83 c2 08	 add	 edx, 8
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 0a		 mov	 DWORD PTR [edx], ecx
  00028	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0002e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 107  : 
; 108  : 	memcpy (&raw->ac.inst3d->vp.attitude, &raw->ac.mob.attitude, sizeof (matrix3x3));

  00034	6a 24		 push	 36			; 00000024H
  00036	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00039	83 c0 10	 add	 eax, 16			; 00000010H
  0003c	50		 push	 eax
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00040	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00046	83 c2 14	 add	 edx, 20			; 00000014H
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 _memcpy
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 109  : 
; 110  : 	//
; 111  : 	// animate
; 112  : 	//
; 113  : 
; 114  : 	animate_fixed_wing_afterburners (en);

  00052	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?animate_fixed_wing_afterburners@@YGXPAUENTITY@@@Z ; animate_fixed_wing_afterburners

; 115  : 
; 116  : 	animate_fixed_wing_airbrakes (en);

  0005b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?animate_fixed_wing_airbrakes@@YGXPAUENTITY@@@Z ; animate_fixed_wing_airbrakes

; 117  : 	
; 118  : 	animate_fixed_wing_flaps (en);

  00064	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?animate_fixed_wing_flaps@@YGXPAUENTITY@@@Z ; animate_fixed_wing_flaps

; 119  : 
; 120  : 	animate_fixed_wing_propellors (en);

  0006d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?animate_fixed_wing_propellors@@YGXPAUENTITY@@@Z ; animate_fixed_wing_propellors

; 121  : 	
; 122  : 	animate_aircraft_loading_doors (en);

  00076	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; animate_aircraft_loading_doors

; 123  : 
; 124  : 	animate_aircraft_cargo_doors (en);

  0007f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; animate_aircraft_cargo_doors

; 125  : 
; 126  : 	animate_aircraft_undercarriage (en);

  00088	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; animate_aircraft_undercarriage

; 127  : 
; 128  : 	animate_aircraft_weapon_system_ready (en);

  00091	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; animate_aircraft_weapon_system_ready

; 129  : 
; 130  : 	animate_aircraft_shadow (en);

  0009a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?animate_aircraft_shadow@@YGXPAUENTITY@@@Z ; animate_aircraft_shadow

; 131  : 
; 132  : 	animate_aircraft_rudder (en);

  000a3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?animate_aircraft_rudder@@YGXPAUENTITY@@@Z ; animate_aircraft_rudder

; 133  : 
; 134  : 	//
; 135  : 	// draw
; 136  : 	//
; 137  : 
; 138  : 	day_segment_type = (day_segment_types) get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE);

  000ac	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  000b3	74 0c		 je	 SHORT $LN3@draw_local
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	89 4d b4	 mov	 DWORD PTR tv131[ebp], ecx
  000bf	eb 21		 jmp	 SHORT $LN4@draw_local
$LN3@draw_local:
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  000c7	83 c2 2d	 add	 edx, 45			; 0000002dH
  000ca	52		 push	 edx
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@DEPKDDDM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN4@draw_local:
  000e2	b9 01 00 00 00	 mov	 ecx, 1
  000e7	85 c9		 test	 ecx, ecx
  000e9	74 09		 je	 SHORT $LN5@draw_local
  000eb	c7 45 b0 27 00
	00 00		 mov	 DWORD PTR tv139[ebp], 39 ; 00000027H
  000f2	eb 21		 jmp	 SHORT $LN6@draw_local
$LN5@draw_local:
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  000fa	83 c2 2d	 add	 edx, 45			; 0000002dH
  000fd	52		 push	 edx
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@DEPKDDDM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN6@draw_local:
  00115	6a 27		 push	 39			; 00000027H
  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0011d	51		 push	 ecx
  0011e	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv131[ebp], 1116
  00125	8b 45 b0	 mov	 eax, DWORD PTR tv139[ebp]
  00128	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0012f	ff d1		 call	 ecx
  00131	89 45 f8	 mov	 DWORD PTR _day_segment_type$[ebp], eax

; 139  : 
; 140  : 	raw->ac.inst3d->object_internal_lighting = ((day_segment_type == DAY_SEGMENT_TYPE_NIGHT) || (day_segment_type == DAY_SEGMENT_TYPE_DUSK));

  00134	83 7d f8 03	 cmp	 DWORD PTR _day_segment_type$[ebp], 3
  00138	74 0f		 je	 SHORT $LN7@draw_local
  0013a	83 7d f8 02	 cmp	 DWORD PTR _day_segment_type$[ebp], 2
  0013e	74 09		 je	 SHORT $LN7@draw_local
  00140	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
  00147	eb 07		 jmp	 SHORT $LN8@draw_local
$LN7@draw_local:
  00149	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv150[ebp], 1
$LN8@draw_local:
  00150	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00153	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00159	8b 55 b4	 mov	 edx, DWORD PTR tv150[ebp]
  0015c	83 e2 01	 and	 edx, 1
  0015f	c1 e2 03	 shl	 edx, 3
  00162	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00165	83 e0 f7	 and	 eax, -9			; fffffff7H
  00168	0b c2		 or	 eax, edx
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0016d	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00173	89 42 50	 mov	 DWORD PTR [edx+80], eax

; 141  : 
; 142  : 	raw->ac.inst3d->object_sprite_lights = (raw->ac.inst3d->object_internal_lighting && sprite_light_valid (en));

  00176	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00179	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0017f	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00182	c1 ea 03	 shr	 edx, 3
  00185	83 e2 01	 and	 edx, 1
  00188	74 16		 je	 SHORT $LN9@draw_local
  0018a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018d	50		 push	 eax
  0018e	e8 00 00 00 00	 call	 ?sprite_light_valid@@YGHPAUENTITY@@@Z ; sprite_light_valid
  00193	85 c0		 test	 eax, eax
  00195	74 09		 je	 SHORT $LN9@draw_local
  00197	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv170[ebp], 1
  0019e	eb 07		 jmp	 SHORT $LN10@draw_local
$LN9@draw_local:
  001a0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv170[ebp], 0
$LN10@draw_local:
  001a7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001aa	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  001b0	8b 45 b4	 mov	 eax, DWORD PTR tv170[ebp]
  001b3	83 e0 01	 and	 eax, 1
  001b6	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  001b9	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  001bc	81 e1 ff ef ff
	ff		 and	 ecx, -4097		; ffffefffH
  001c2	0b c8		 or	 ecx, eax
  001c4	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  001c7	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  001cd	89 48 50	 mov	 DWORD PTR [eax+80], ecx

; 143  : 
; 144  : 	animate_and_draw_entity_muzzle_flash_effect (en);

  001d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z ; animate_and_draw_entity_muzzle_flash_effect

; 145  : 
; 146  : 	insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, raw->ac.inst3d);

  001d9	51		 push	 ecx
  001da	0f 57 c0	 xorps	 xmm0, xmm0
  001dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001e5	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001eb	51		 push	 ecx
  001ec	6a 01		 push	 1
  001ee	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene

; 147  : 
; 148  : 	#if DEBUG_MODULE
; 149  : 
; 150  : 	if (en == get_external_view_entity ())
; 151  : 	{
; 152  : 		vec3d
; 153  : 			*pos,
; 154  : 			wp_pos;
; 155  : 
; 156  : 		draw_mobile_entity_debug_info (en);
; 157  : 
; 158  : 		if (get_local_entity_primary_task (en))
; 159  : 		{
; 160  : 			fixed_wing_movement_get_waypoint_position (en, &wp_pos);
; 161  : 	
; 162  : 			pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);
; 163  : 	
; 164  : 			create_debug_3d_line (pos, &wp_pos, sys_col_dark_green, 0.0);
; 165  : 		}
; 166  : 	}
; 167  : 	
; 168  : 	#endif
; 169  : }

  001f3	5f		 pop	 edi
  001f4	5e		 pop	 esi
  001f5	5b		 pop	 ebx
  001f6	8b e5		 mov	 esp, ebp
  001f8	5d		 pop	 ebp
  001f9	c2 08 00	 ret	 8
?draw_local_3d_object@@YGXPAUENTITY@@M@Z ENDP		; draw_local_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_draw.c
;	COMDAT ?sprite_light_valid@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv76 = -80						; size = 4
_float_offset$ = -12					; size = 4
_val$ = -8						; size = 4
_integer_offset$ = -4					; size = 4
_en$ = 8						; size = 4
?sprite_light_valid@@YGHPAUENTITY@@@Z PROC		; sprite_light_valid, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 	int
; 201  : 		integer_offset;
; 202  : 
; 203  : 	float
; 204  : 		val,
; 205  : 		float_offset;
; 206  : 
; 207  : 	//
; 208  : 	// uses entity index to offset sprite lights so that they are not all flashing in sync on all objects
; 209  : 	//
; 210  : 		
; 211  : 	integer_offset = get_local_entity_index (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00012	c1 f8 04	 sar	 eax, 4
  00015	89 45 fc	 mov	 DWORD PTR _integer_offset$[ebp], eax

; 212  : 
; 213  : 	integer_offset = integer_offset & 0x0f;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _integer_offset$[ebp]
  0001b	83 e0 0f	 and	 eax, 15			; 0000000fH
  0001e	89 45 fc	 mov	 DWORD PTR _integer_offset$[ebp], eax

; 214  : 
; 215  : 	float_offset = ((float)integer_offset) * 0.0625;

  00021	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _integer_offset$[ebp]
  00026	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0002a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb0000000000000
  00032	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00036	f3 0f 11 45 f4	 movss	 DWORD PTR _float_offset$[ebp], xmm0

; 216  : 
; 217  : 	val = frac (sprite_light_timer + float_offset);

  0003b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?sprite_light_timer@@3MA
  00043	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _float_offset$[ebp]
  00048	51		 push	 ecx
  00049	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004e	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  00053	d9 5d f8	 fstp	 DWORD PTR _val$[ebp]

; 218  : 	
; 219  : 	return (val < SPRITE_LIGHT_ON_THRESHOLD);

  00056	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _val$[ebp]
  0005b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb999999999999a
  00063	66 0f 2f c8	 comisd	 xmm1, xmm0
  00067	76 09		 jbe	 SHORT $LN3@sprite_lig
  00069	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00070	eb 07		 jmp	 SHORT $LN4@sprite_lig
$LN3@sprite_lig:
  00072	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@sprite_lig:
  00079	8b 45 b0	 mov	 eax, DWORD PTR tv76[ebp]

; 220  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?sprite_light_valid@@YGHPAUENTITY@@@Z ENDP		; sprite_light_valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_draw.c
;	COMDAT ?update_fixed_wing_sprite_light_timers@@YGXXZ
_TEXT	SEGMENT
?update_fixed_wing_sprite_light_timers@@YGXXZ PROC	; update_fixed_wing_sprite_light_timers, COMDAT

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  : 	sprite_light_timer += (get_delta_time () * SPRITE_LIGHT_TIMER_FREQUENCY);

  00009	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00011	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00019	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?sprite_light_timer@@3MA
  00021	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00025	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00029	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?sprite_light_timer@@3MA, xmm0

; 187  : 
; 188  : 	if (sprite_light_timer >= 1.0)

  00031	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?sprite_light_timer@@3MA
  00039	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00041	72 19		 jb	 SHORT $LN2@update_fix

; 189  : 	{
; 190  : 		sprite_light_timer = frac (sprite_light_timer);

  00043	51		 push	 ecx
  00044	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?sprite_light_timer@@3MA
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  00056	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?sprite_light_timer@@3MA
$LN2@update_fix:

; 191  : 	}
; 192  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?update_fixed_wing_sprite_light_timers@@YGXXZ ENDP	; update_fixed_wing_sprite_light_timers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_draw.c
;	COMDAT ?overload_fixed_wing_draw_functions@@YGXXZ
_TEXT	SEGMENT
?overload_fixed_wing_draw_functions@@YGXXZ PROC		; overload_fixed_wing_draw_functions, COMDAT

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 177  : 	fn_draw_local_entity_3d_object[ENTITY_TYPE_FIXED_WING]	= draw_local_3d_object;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 0a	 imul	 ecx, eax, 10
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA[ecx], OFFSET ?draw_local_3d_object@@YGXPAUENTITY@@M@Z ; draw_local_3d_object

; 178  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?overload_fixed_wing_draw_functions@@YGXXZ ENDP		; overload_fixed_wing_draw_functions
_TEXT	ENDS
END
