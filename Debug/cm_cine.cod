; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\camera\cm_cine.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?reset_cinematic_camera@@YGXPAUCAMERA@@@Z	; reset_cinematic_camera
PUBLIC	?reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z ; reset_cinematic_camera_for_new_view_entity
PUBLIC	?update_cinematic_camera@@YGXPAUCAMERA@@@Z	; update_cinematic_camera
PUBLIC	?update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z ; update_cinematic_camera_continued
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA ; `reset_cinematic_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_03DGOGAGNC@raw@				; `string'
PUBLIC	??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ ; `string'
PUBLIC	??_C@_0CF@NBGAHOMO@raw?9?$DOcinematic_camera_lifetime?5@ ; `string'
PUBLIC	?__LINE__Var@?0??reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z@4JA ; `reset_cinematic_camera_for_new_view_entity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA ; `update_cinematic_camera'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA ; `update_cinematic_camera_continued'::`1'::__LINE__Var
PUBLIC	??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@		; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fd54fdf3b645a1d
PUBLIC	__real@3fe921fb51000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@bfe921fb51000000
PUBLIC	__xmm@80000000000000008000000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?get_number_of_3d_object_cameras@@YGHPAUOBJECT_3D_INSTANCE@@H@Z:PROC ; get_number_of_3d_object_cameras
EXTRN	?get_object_3d_camera_lifetime@@YGMPAUOBJECT_3D_INSTANCE@@HH@Z:PROC ; get_object_3d_camera_lifetime
EXTRN	?get_object_3d_camera_position@@YGHPAUOBJECT_3D_INSTANCE@@HHMPAUVIEWPOINT@@@Z:PROC ; get_object_3d_camera_position
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?switch_auto_edit_entity@@YGPAUENTITY@@PAUCAMERA@@@Z:PROC ; switch_auto_edit_entity
EXTRN	?switch_auto_edit_camera_mode@@YGHPAUCAMERA@@@Z:PROC ; switch_auto_edit_camera_mode
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bfe921fb51000000
CONST	SEGMENT
__real@bfe921fb51000000 DQ 0bfe921fb51000000r	; -0.785398
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3fe921fb51000000
CONST	SEGMENT
__real@3fe921fb51000000 DQ 03fe921fb51000000r	; 0.785398
CONST	ENDS
;	COMDAT __real@3fd54fdf3b645a1d
CONST	SEGMENT
__real@3fd54fdf3b645a1d DQ 03fd54fdf3b645a1dr	; 0.333
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@
CONST	SEGMENT
??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@ DB 'z_min < z_max', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA DD 0174H ; `update_cinematic_camera_continued'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA DD 0124H ; `update_cinematic_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z@4JA DD 0117H ; `reset_cinematic_camera_for_new_view_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@NBGAHOMO@raw?9?$DOcinematic_camera_lifetime?5@
CONST	SEGMENT
??_C@_0CF@NBGAHOMO@raw?9?$DOcinematic_camera_lifetime?5@ DB 'raw->cinemat'
	DB	'ic_camera_lifetime > 0.0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
CONST	SEGMENT
??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ DB 'raw->external_view_'
	DB	'entity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03DGOGAGNC@raw@
CONST	SEGMENT
??_C@_03DGOGAGNC@raw@ DB 'raw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\camera\cm_cin'
	DB	'e.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA DD 050H ; `reset_cinematic_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_cine.c
;	COMDAT ?update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv396 = -160						; size = 4
tv317 = -160						; size = 4
tv297 = -160						; size = 4
tv250 = -160						; size = 4
tv230 = -160						; size = 4
tv172 = -160						; size = 4
tv152 = -160						; size = 4
tv92 = -160						; size = 4
tv592 = -156						; size = 4
tv388 = -156						; size = 4
tv331 = -156						; size = 4
tv309 = -156						; size = 4
tv289 = -156						; size = 4
tv264 = -156						; size = 4
tv242 = -156						; size = 4
tv222 = -156						; size = 4
tv164 = -156						; size = 4
tv144 = -156						; size = 4
tv84 = -156						; size = 4
tv77 = -156						; size = 4
$T1 = -152						; size = 4
_rel_camera_position$2 = -84				; size = 12
_z_max$3 = -72						; size = 4
_z_min$4 = -68						; size = 4
_combined_heading$5 = -64				; size = 4
_normalised_timer$ = -60				; size = 4
_vp$ = -56						; size = 48
_inst3d$ = -8						; size = 4
_en$ = -4						; size = 4
_raw$ = 8						; size = 4
?update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z PROC ; update_cinematic_camera_continued, COMDAT

; 372  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 373  : 	entity
; 374  : 		*en;
; 375  : 
; 376  : 	object_3d_instance
; 377  : 		*inst3d;
; 378  : 
; 379  : 	viewpoint
; 380  : 		vp;
; 381  : 
; 382  : 	float
; 383  : 		normalised_timer;
; 384  : 
; 385  : 	//
; 386  : 	// pre-amble
; 387  : 	//
; 388  : 
; 389  : 	ASSERT (raw);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@update_cin
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00017	83 c0 11	 add	 eax, 17			; 00000011H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_cin:

; 390  : 
; 391  : 	ASSERT (raw->external_view_entity);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002d	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00034	75 18		 jne	 SHORT $LN5@update_cin
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  0003b	83 c0 13	 add	 eax, 19			; 00000013H
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@update_cin:

; 392  : 
; 393  : 	en = raw->external_view_entity;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00051	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00057	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 394  : 
; 395  : 	//
; 396  : 	// get camera position and attitude
; 397  : 	//
; 398  : 
; 399  : 	switch (raw->cinematic_camera_index)

  0005a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0005d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00063	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv77[ebp], ecx
  00069	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR tv77[ebp], 0
  00070	74 1f		 je	 SHORT $LN6@update_cin
  00072	83 bd 64 ff ff
	ff 01		 cmp	 DWORD PTR tv77[ebp], 1
  00079	0f 84 d3 02 00
	00		 je	 $LN8@update_cin
  0007f	83 bd 64 ff ff
	ff 02		 cmp	 DWORD PTR tv77[ebp], 2
  00086	0f 84 ae 04 00
	00		 je	 $LN9@update_cin
  0008c	e9 79 06 00 00	 jmp	 $LN2@update_cin
$LN6@update_cin:

; 400  : 	{
; 401  : 		////////////////////////////////////////
; 402  : 		case OBJECT_3D_INVALID_CAMERA_INDEX:
; 403  : 		////////////////////////////////////////
; 404  : 		{
; 405  : 			float
; 406  : 				combined_heading,
; 407  : 				z_min,
; 408  : 				z_max;
; 409  : 
; 410  : 			vec3d
; 411  : 				rel_camera_position;
; 412  : 
; 413  : 			combined_heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  00091	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00095	74 0d		 je	 SHORT $LN12@update_cin
  00097	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0009a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009c	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv84[ebp], ecx
  000a2	eb 24		 jmp	 SHORT $LN13@update_cin
$LN12@update_cin:
  000a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  000aa	83 c2 29	 add	 edx, 41			; 00000029H
  000ad	52		 push	 edx
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000be	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN13@update_cin:
  000c8	b9 01 00 00 00	 mov	 ecx, 1
  000cd	85 c9		 test	 ecx, ecx
  000cf	74 0c		 je	 SHORT $LN14@update_cin
  000d1	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv92[ebp], 52	; 00000034H
  000db	eb 24		 jmp	 SHORT $LN15@update_cin
$LN14@update_cin:
  000dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  000e3	83 c2 29	 add	 edx, 41			; 00000029H
  000e6	52		 push	 edx
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f7	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN15@update_cin:
  00101	6a 34		 push	 52			; 00000034H
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00106	51		 push	 ecx
  00107	69 95 64 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv84[ebp], 700
  00111	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv92[ebp]
  00117	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0011e	ff d1		 call	 ecx
  00120	d9 5d c0	 fstp	 DWORD PTR _combined_heading$5[ebp]

; 414  : 
; 415  : 			combined_heading += raw->cinematic_camera_heading;

  00123	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00126	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _combined_heading$5[ebp]
  0012b	f3 0f 58 80 9c
	00 00 00	 addss	 xmm0, DWORD PTR [eax+156]
  00133	f3 0f 11 45 c0	 movss	 DWORD PTR _combined_heading$5[ebp], xmm0

; 416  : 
; 417  : 			get_3d_transformation_matrix (raw->attitude, combined_heading, raw->cinematic_camera_pitch, 0.0);

  00138	51		 push	 ecx
  00139	0f 57 c0	 xorps	 xmm0, xmm0
  0013c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00141	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00144	51		 push	 ecx
  00145	f3 0f 10 80 a0
	00 00 00	 movss	 xmm0, DWORD PTR [eax+160]
  0014d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00152	51		 push	 ecx
  00153	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _combined_heading$5[ebp]
  00158	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015d	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00160	83 c1 18	 add	 ecx, 24			; 00000018H
  00163	51		 push	 ecx
  00164	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 418  : 
; 419  : 			z_min = get_local_entity_float_value (en, FLOAT_TYPE_CHASE_VIEW_MIN_DISTANCE);

  00169	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0016d	74 0d		 je	 SHORT $LN16@update_cin
  0016f	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00172	8b 08		 mov	 ecx, DWORD PTR [eax]
  00174	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv144[ebp], ecx
  0017a	eb 24		 jmp	 SHORT $LN17@update_cin
$LN16@update_cin:
  0017c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00182	83 c2 2f	 add	 edx, 47			; 0000002fH
  00185	52		 push	 edx
  00186	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00196	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN17@update_cin:
  001a0	b9 01 00 00 00	 mov	 ecx, 1
  001a5	85 c9		 test	 ecx, ecx
  001a7	74 0c		 je	 SHORT $LN18@update_cin
  001a9	c7 85 60 ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv152[ebp], 21 ; 00000015H
  001b3	eb 24		 jmp	 SHORT $LN19@update_cin
$LN18@update_cin:
  001b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  001bb	83 c2 2f	 add	 edx, 47			; 0000002fH
  001be	52		 push	 edx
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cf	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv152[ebp], 0
$LN19@update_cin:
  001d9	6a 15		 push	 21			; 00000015H
  001db	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  001de	51		 push	 ecx
  001df	69 95 64 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv144[ebp], 700
  001e9	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv152[ebp]
  001ef	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001f6	ff d1		 call	 ecx
  001f8	d9 5d bc	 fstp	 DWORD PTR _z_min$4[ebp]

; 420  : 			z_max = get_local_entity_float_value (en, FLOAT_TYPE_CHASE_VIEW_MAX_DISTANCE);

  001fb	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ff	74 0d		 je	 SHORT $LN20@update_cin
  00201	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00204	8b 08		 mov	 ecx, DWORD PTR [eax]
  00206	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv164[ebp], ecx
  0020c	eb 24		 jmp	 SHORT $LN21@update_cin
$LN20@update_cin:
  0020e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00214	83 c2 30	 add	 edx, 48			; 00000030H
  00217	52		 push	 edx
  00218	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00228	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], 0
$LN21@update_cin:
  00232	b9 01 00 00 00	 mov	 ecx, 1
  00237	85 c9		 test	 ecx, ecx
  00239	74 0c		 je	 SHORT $LN22@update_cin
  0023b	c7 85 60 ff ff
	ff 13 00 00 00	 mov	 DWORD PTR tv172[ebp], 19 ; 00000013H
  00245	eb 24		 jmp	 SHORT $LN23@update_cin
$LN22@update_cin:
  00247	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  0024d	83 c2 30	 add	 edx, 48			; 00000030H
  00250	52		 push	 edx
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00256	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0025b	50		 push	 eax
  0025c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00261	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN23@update_cin:
  0026b	6a 13		 push	 19			; 00000013H
  0026d	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00270	51		 push	 ecx
  00271	69 95 64 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv164[ebp], 700
  0027b	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv172[ebp]
  00281	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00288	ff d1		 call	 ecx
  0028a	d9 5d b8	 fstp	 DWORD PTR _z_max$3[ebp]

; 421  : 
; 422  : 			ASSERT (z_min < z_max);

  0028d	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _z_max$3[ebp]
  00292	0f 2f 45 bc	 comiss	 xmm0, DWORD PTR _z_min$4[ebp]
  00296	77 18		 ja	 SHORT $LN7@update_cin
  00298	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  0029d	83 c0 32	 add	 eax, 50			; 00000032H
  002a0	50		 push	 eax
  002a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ICMHAKLN@z_min?5?$DM?5z_max@
  002ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@update_cin:

; 423  : 
; 424  : 			rel_camera_position.x = 0.0;

  002b0	0f 57 c0	 xorps	 xmm0, xmm0
  002b3	f3 0f 11 45 ac	 movss	 DWORD PTR _rel_camera_position$2[ebp], xmm0

; 425  : 			rel_camera_position.y = 0.0;

  002b8	0f 57 c0	 xorps	 xmm0, xmm0
  002bb	f3 0f 11 45 b0	 movss	 DWORD PTR _rel_camera_position$2[ebp+4], xmm0

; 426  : 			rel_camera_position.z = -(((z_max - z_min) * 0.1) + z_min);

  002c0	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _z_max$3[ebp]
  002c5	f3 0f 5c 45 bc	 subss	 xmm0, DWORD PTR _z_min$4[ebp]
  002ca	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002ce	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002d6	f3 0f 5a 4d bc	 cvtss2sd xmm1, DWORD PTR _z_min$4[ebp]
  002db	f2 0f 58 c1	 addsd	 xmm0, xmm1
  002df	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  002e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ea	f3 0f 11 45 b4	 movss	 DWORD PTR _rel_camera_position$2[ebp+8], xmm0

; 427  : 
; 428  : 			multiply_matrix3x3_vec3d (&rel_camera_position, raw->attitude, &rel_camera_position);

  002ef	8d 45 ac	 lea	 eax, DWORD PTR _rel_camera_position$2[ebp]
  002f2	50		 push	 eax
  002f3	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  002f6	83 c1 18	 add	 ecx, 24			; 00000018H
  002f9	51		 push	 ecx
  002fa	8d 55 ac	 lea	 edx, DWORD PTR _rel_camera_position$2[ebp]
  002fd	52		 push	 edx
  002fe	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 429  : 
; 430  : 			get_local_entity_target_point (en, &raw->position);

  00303	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00306	50		 push	 eax
  00307	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0030a	51		 push	 ecx
  0030b	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 431  : 
; 432  : 			raw->position.x += rel_camera_position.x;

  00310	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00313	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00317	f3 0f 58 45 ac	 addss	 xmm0, DWORD PTR _rel_camera_position$2[ebp]
  0031c	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0031f	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 433  : 			raw->position.y += rel_camera_position.y;

  00323	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00326	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0032b	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _rel_camera_position$2[ebp+4]
  00330	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00333	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 434  : 			raw->position.z += rel_camera_position.z;

  00338	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0033b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00340	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _rel_camera_position$2[ebp+8]
  00345	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00348	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 435  : 
; 436  : 			break;

  0034d	e9 b8 03 00 00	 jmp	 $LN2@update_cin
$LN8@update_cin:

; 437  : 		}
; 438  : 		////////////////////////////////////////
; 439  : 		case OBJECT_3D_CAMERA_SCENIC_MOVING:
; 440  : 		////////////////////////////////////////
; 441  : 		{
; 442  : 			normalised_timer = raw->cinematic_camera_timer / raw->cinematic_camera_lifetime;

  00352	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00355	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00358	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR [eax+152]
  00360	f3 0f 5e 81 94
	00 00 00	 divss	 xmm0, DWORD PTR [ecx+148]
  00368	f3 0f 11 45 c4	 movss	 DWORD PTR _normalised_timer$[ebp], xmm0

; 443  : 
; 444  : 			inst3d = (object_3d_instance *) get_local_entity_ptr_value (en, PTR_TYPE_INSTANCE_3D_OBJECT);

  0036d	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00371	74 0d		 je	 SHORT $LN24@update_cin
  00373	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00376	8b 08		 mov	 ecx, DWORD PTR [eax]
  00378	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv222[ebp], ecx
  0037e	eb 24		 jmp	 SHORT $LN25@update_cin
$LN24@update_cin:
  00380	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00386	83 c2 48	 add	 edx, 72			; 00000048H
  00389	52		 push	 edx
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00394	50		 push	 eax
  00395	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039a	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv222[ebp], 0
$LN25@update_cin:
  003a4	b9 01 00 00 00	 mov	 ecx, 1
  003a9	85 c9		 test	 ecx, ecx
  003ab	74 0c		 je	 SHORT $LN26@update_cin
  003ad	c7 85 60 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv230[ebp], 2
  003b7	eb 24		 jmp	 SHORT $LN27@update_cin
$LN26@update_cin:
  003b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  003bf	83 c2 48	 add	 edx, 72			; 00000048H
  003c2	52		 push	 edx
  003c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  003cd	50		 push	 eax
  003ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d3	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv230[ebp], 0
$LN27@update_cin:
  003dd	6a 02		 push	 2
  003df	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  003e2	51		 push	 ecx
  003e3	6b 95 64 ff ff
	ff 50		 imul	 edx, DWORD PTR tv222[ebp], 80
  003ea	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv230[ebp]
  003f0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  003f7	ff d1		 call	 ecx
  003f9	89 45 f8	 mov	 DWORD PTR _inst3d$[ebp], eax

; 445  : 
; 446  : 			get_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  003fc	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00400	74 0d		 je	 SHORT $LN28@update_cin
  00402	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00405	8b 08		 mov	 ecx, DWORD PTR [eax]
  00407	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv242[ebp], ecx
  0040d	eb 24		 jmp	 SHORT $LN29@update_cin
$LN28@update_cin:
  0040f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00415	83 c2 4a	 add	 edx, 74			; 0000004aH
  00418	52		 push	 edx
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00423	50		 push	 eax
  00424	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00429	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN29@update_cin:
  00433	b9 01 00 00 00	 mov	 ecx, 1
  00438	85 c9		 test	 ecx, ecx
  0043a	74 0c		 je	 SHORT $LN30@update_cin
  0043c	c7 85 60 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv250[ebp], 8
  00446	eb 24		 jmp	 SHORT $LN31@update_cin
$LN30@update_cin:
  00448	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  0044e	83 c2 4a	 add	 edx, 74			; 0000004aH
  00451	52		 push	 edx
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00457	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0045c	50		 push	 eax
  0045d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00462	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv250[ebp], 0
$LN31@update_cin:
  0046c	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0046f	83 c1 08	 add	 ecx, 8
  00472	51		 push	 ecx
  00473	6a 08		 push	 8
  00475	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00478	52		 push	 edx
  00479	6b 85 64 ff ff
	ff 60		 imul	 eax, DWORD PTR tv242[ebp], 96
  00480	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv250[ebp]
  00486	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0048d	ff d2		 call	 edx

; 447  : 
; 448  : 			get_local_entity_attitude_matrix (en, inst3d->vp.attitude);

  0048f	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00493	74 0d		 je	 SHORT $LN32@update_cin
  00495	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00498	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049a	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv264[ebp], ecx
  004a0	eb 24		 jmp	 SHORT $LN33@update_cin
$LN32@update_cin:
  004a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  004a8	83 c2 4c	 add	 edx, 76			; 0000004cH
  004ab	52		 push	 edx
  004ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004b6	50		 push	 eax
  004b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004bc	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN33@update_cin:
  004c6	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  004c9	83 c1 14	 add	 ecx, 20			; 00000014H
  004cc	51		 push	 ecx
  004cd	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  004d0	52		 push	 edx
  004d1	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv264[ebp]
  004d7	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  004de	ff d1		 call	 ecx

; 449  : 
; 450  : 			get_object_3d_camera_position (inst3d, raw->cinematic_camera_index, raw->cinematic_camera_depth, normalised_timer, &vp);

  004e0	8d 45 c8	 lea	 eax, DWORD PTR _vp$[ebp]
  004e3	50		 push	 eax
  004e4	51		 push	 ecx
  004e5	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _normalised_timer$[ebp]
  004ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ef	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  004f2	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [ecx+168]
  004f8	52		 push	 edx
  004f9	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  004fc	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00502	51		 push	 ecx
  00503	8b 55 f8	 mov	 edx, DWORD PTR _inst3d$[ebp]
  00506	52		 push	 edx
  00507	e8 00 00 00 00	 call	 ?get_object_3d_camera_position@@YGHPAUOBJECT_3D_INSTANCE@@HHMPAUVIEWPOINT@@@Z ; get_object_3d_camera_position

; 451  : 
; 452  : 			raw->position = vp.position;

  0050c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0050f	8b 4d c8	 mov	 ecx, DWORD PTR _vp$[ebp]
  00512	89 08		 mov	 DWORD PTR [eax], ecx
  00514	8b 55 cc	 mov	 edx, DWORD PTR _vp$[ebp+4]
  00517	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0051a	8b 4d d0	 mov	 ecx, DWORD PTR _vp$[ebp+8]
  0051d	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 453  : 
; 454  : 			memcpy (raw->attitude, vp.attitude, sizeof (matrix3x3));

  00520	6a 24		 push	 36			; 00000024H
  00522	8d 45 d4	 lea	 eax, DWORD PTR _vp$[ebp+12]
  00525	50		 push	 eax
  00526	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00529	83 c1 18	 add	 ecx, 24			; 00000018H
  0052c	51		 push	 ecx
  0052d	e8 00 00 00 00	 call	 _memcpy
  00532	83 c4 0c	 add	 esp, 12			; 0000000cH

; 455  : 
; 456  : 			break;

  00535	e9 d0 01 00 00	 jmp	 $LN2@update_cin
$LN9@update_cin:

; 457  : 		}
; 458  : 		////////////////////////////////////////
; 459  : 		case OBJECT_3D_CAMERA_SCENIC_STATIC:
; 460  : 		////////////////////////////////////////
; 461  : 		{
; 462  : 			normalised_timer = 0.0;

  0053a	0f 57 c0	 xorps	 xmm0, xmm0
  0053d	f3 0f 11 45 c4	 movss	 DWORD PTR _normalised_timer$[ebp], xmm0

; 463  : 
; 464  : 			inst3d = (object_3d_instance *) get_local_entity_ptr_value (en, PTR_TYPE_INSTANCE_3D_OBJECT);

  00542	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00546	74 0d		 je	 SHORT $LN34@update_cin
  00548	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0054b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0054d	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv289[ebp], ecx
  00553	eb 24		 jmp	 SHORT $LN35@update_cin
$LN34@update_cin:
  00555	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  0055b	83 c2 5c	 add	 edx, 92			; 0000005cH
  0055e	52		 push	 edx
  0055f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00564	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00569	50		 push	 eax
  0056a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0056f	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv289[ebp], 0
$LN35@update_cin:
  00579	b9 01 00 00 00	 mov	 ecx, 1
  0057e	85 c9		 test	 ecx, ecx
  00580	74 0c		 je	 SHORT $LN36@update_cin
  00582	c7 85 60 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv297[ebp], 2
  0058c	eb 24		 jmp	 SHORT $LN37@update_cin
$LN36@update_cin:
  0058e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00594	83 c2 5c	 add	 edx, 92			; 0000005cH
  00597	52		 push	 edx
  00598	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0059d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  005a2	50		 push	 eax
  005a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005a8	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv297[ebp], 0
$LN37@update_cin:
  005b2	6a 02		 push	 2
  005b4	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  005b7	51		 push	 ecx
  005b8	6b 95 64 ff ff
	ff 50		 imul	 edx, DWORD PTR tv289[ebp], 80
  005bf	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv297[ebp]
  005c5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  005cc	ff d1		 call	 ecx
  005ce	89 45 f8	 mov	 DWORD PTR _inst3d$[ebp], eax

; 465  : 
; 466  : 			get_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  005d1	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  005d5	74 0d		 je	 SHORT $LN38@update_cin
  005d7	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  005da	8b 08		 mov	 ecx, DWORD PTR [eax]
  005dc	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv309[ebp], ecx
  005e2	eb 24		 jmp	 SHORT $LN39@update_cin
$LN38@update_cin:
  005e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  005ea	83 c2 5e	 add	 edx, 94			; 0000005eH
  005ed	52		 push	 edx
  005ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005f8	50		 push	 eax
  005f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005fe	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv309[ebp], 0
$LN39@update_cin:
  00608	b9 01 00 00 00	 mov	 ecx, 1
  0060d	85 c9		 test	 ecx, ecx
  0060f	74 0c		 je	 SHORT $LN40@update_cin
  00611	c7 85 60 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv317[ebp], 8
  0061b	eb 24		 jmp	 SHORT $LN41@update_cin
$LN40@update_cin:
  0061d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00623	83 c2 5e	 add	 edx, 94			; 0000005eH
  00626	52		 push	 edx
  00627	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00631	50		 push	 eax
  00632	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00637	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv317[ebp], 0
$LN41@update_cin:
  00641	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00644	83 c1 08	 add	 ecx, 8
  00647	51		 push	 ecx
  00648	6a 08		 push	 8
  0064a	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  0064d	52		 push	 edx
  0064e	6b 85 64 ff ff
	ff 60		 imul	 eax, DWORD PTR tv309[ebp], 96
  00655	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv317[ebp]
  0065b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00662	ff d2		 call	 edx

; 467  : 
; 468  : 			get_local_entity_attitude_matrix (en, inst3d->vp.attitude);

  00664	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00668	74 0d		 je	 SHORT $LN42@update_cin
  0066a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0066d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0066f	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv331[ebp], ecx
  00675	eb 24		 jmp	 SHORT $LN43@update_cin
$LN42@update_cin:
  00677	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  0067d	83 c2 60	 add	 edx, 96			; 00000060H
  00680	52		 push	 edx
  00681	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00686	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0068b	50		 push	 eax
  0068c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00691	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv331[ebp], 0
$LN43@update_cin:
  0069b	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0069e	83 c1 14	 add	 ecx, 20			; 00000014H
  006a1	51		 push	 ecx
  006a2	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  006a5	52		 push	 edx
  006a6	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv331[ebp]
  006ac	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  006b3	ff d1		 call	 ecx

; 469  : 
; 470  : 			get_object_3d_camera_position (inst3d, raw->cinematic_camera_index, raw->cinematic_camera_depth, normalised_timer, &vp);

  006b5	8d 45 c8	 lea	 eax, DWORD PTR _vp$[ebp]
  006b8	50		 push	 eax
  006b9	51		 push	 ecx
  006ba	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _normalised_timer$[ebp]
  006bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c4	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  006c7	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [ecx+168]
  006cd	52		 push	 edx
  006ce	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  006d1	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  006d7	51		 push	 ecx
  006d8	8b 55 f8	 mov	 edx, DWORD PTR _inst3d$[ebp]
  006db	52		 push	 edx
  006dc	e8 00 00 00 00	 call	 ?get_object_3d_camera_position@@YGHPAUOBJECT_3D_INSTANCE@@HHMPAUVIEWPOINT@@@Z ; get_object_3d_camera_position

; 471  : 
; 472  : 			raw->position = vp.position;

  006e1	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  006e4	8b 4d c8	 mov	 ecx, DWORD PTR _vp$[ebp]
  006e7	89 08		 mov	 DWORD PTR [eax], ecx
  006e9	8b 55 cc	 mov	 edx, DWORD PTR _vp$[ebp+4]
  006ec	89 50 04	 mov	 DWORD PTR [eax+4], edx
  006ef	8b 4d d0	 mov	 ecx, DWORD PTR _vp$[ebp+8]
  006f2	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 473  : 
; 474  : 			memcpy (raw->attitude, vp.attitude, sizeof (matrix3x3));

  006f5	6a 24		 push	 36			; 00000024H
  006f7	8d 45 d4	 lea	 eax, DWORD PTR _vp$[ebp+12]
  006fa	50		 push	 eax
  006fb	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  006fe	83 c1 18	 add	 ecx, 24			; 00000018H
  00701	51		 push	 ecx
  00702	e8 00 00 00 00	 call	 _memcpy
  00707	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@update_cin:

; 475  : 
; 476  : 			break;
; 477  : 		}
; 478  : 	}
; 479  : 
; 480  : 	//
; 481  : 	// keep point above ground (unless point off map)
; 482  : 	//
; 483  : 
; 484  : 	if (point_inside_map_area (&raw->position))

  0070a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0070d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00711	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00718	0f 82 96 00 00
	00		 jb	 $LN10@update_cin
  0071e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00721	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00729	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0072c	0f 82 82 00 00
	00		 jb	 $LN10@update_cin
  00732	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00735	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0073a	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00741	72 71		 jb	 SHORT $LN10@update_cin
  00743	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00746	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0074e	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00752	72 60		 jb	 SHORT $LN10@update_cin

; 485  : 	{
; 486  : 		raw->position.y = max (raw->position.y, get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info) + 0.5f);

  00754	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00757	83 c0 50	 add	 eax, 80			; 00000050H
  0075a	50		 push	 eax
  0075b	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0075e	51		 push	 ecx
  0075f	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00764	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00769	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0076c	51		 push	 ecx
  0076d	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00771	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00776	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0077b	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR tv592[ebp]
  00781	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv592[ebp]
  00789	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00791	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00799	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0079f	50		 push	 eax
  007a0	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  007a3	83 c1 04	 add	 ecx, 4
  007a6	51		 push	 ecx
  007a7	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  007ac	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  007af	8b 00		 mov	 eax, DWORD PTR [eax]
  007b1	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN10@update_cin:

; 487  : 	}
; 488  : 
; 489  : 	//
; 490  : 	// motion vector
; 491  : 	//
; 492  : 
; 493  : 	get_local_entity_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &raw->motion_vector);

  007b4	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  007b8	74 0d		 je	 SHORT $LN44@update_cin
  007ba	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  007bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  007bf	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv388[ebp], ecx
  007c5	eb 24		 jmp	 SHORT $LN45@update_cin
$LN44@update_cin:
  007c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  007cd	83 c2 79	 add	 edx, 121		; 00000079H
  007d0	52		 push	 edx
  007d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  007d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007db	50		 push	 eax
  007dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007e1	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv388[ebp], 0
$LN45@update_cin:
  007eb	b9 01 00 00 00	 mov	 ecx, 1
  007f0	85 c9		 test	 ecx, ecx
  007f2	74 0c		 je	 SHORT $LN46@update_cin
  007f4	c7 85 60 ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv396[ebp], 6
  007fe	eb 24		 jmp	 SHORT $LN47@update_cin
$LN46@update_cin:
  00800	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z@4JA
  00806	83 c2 79	 add	 edx, 121		; 00000079H
  00809	52		 push	 edx
  0080a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0080f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00814	50		 push	 eax
  00815	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0081a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv396[ebp], 0
$LN47@update_cin:
  00824	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00827	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0082a	51		 push	 ecx
  0082b	6a 06		 push	 6
  0082d	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00830	52		 push	 edx
  00831	6b 85 64 ff ff
	ff 60		 imul	 eax, DWORD PTR tv388[ebp], 96
  00838	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv396[ebp]
  0083e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00845	ff d2		 call	 edx

; 494  : }

  00847	5f		 pop	 edi
  00848	5e		 pop	 esi
  00849	5b		 pop	 ebx
  0084a	8b e5		 mov	 esp, ebp
  0084c	5d		 pop	 ebp
  0084d	c2 04 00	 ret	 4
?update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z ENDP ; update_cinematic_camera_continued
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_cine.c
;	COMDAT ?update_cinematic_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv93 = -76						; size = 4
tv85 = -72						; size = 4
tv76 = -72						; size = 4
_inst3d$1 = -4						; size = 4
_raw$ = 8						; size = 4
?update_cinematic_camera@@YGXPAUCAMERA@@@Z PROC		; update_cinematic_camera, COMDAT

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 293  : 	//
; 294  : 	// pre-amble
; 295  : 	//
; 296  : 
; 297  : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@update_cin
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_cin:

; 298  : 
; 299  : 	ASSERT (raw->external_view_entity);

  00027	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00031	75 18		 jne	 SHORT $LN5@update_cin
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  00038	83 c0 07	 add	 eax, 7
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@update_cin:

; 300  : 
; 301  : 	////////////////////////////////////////
; 302  : 	//
; 303  : 	// This code has been added to protect against cases where an object
; 304  : 	// and its destroyed version have a different number of cameras.
; 305  : 	//
; 306  : 
; 307  : 	switch (raw->cinematic_camera_index)

  0004b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0004e	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00054	89 4d b8	 mov	 DWORD PTR tv76[ebp], ecx
  00057	83 7d b8 00	 cmp	 DWORD PTR tv76[ebp], 0
  0005b	0f 8e c3 00 00
	00		 jle	 $LN2@update_cin
  00061	83 7d b8 02	 cmp	 DWORD PTR tv76[ebp], 2
  00065	7e 05		 jle	 SHORT $LN6@update_cin
  00067	e9 b8 00 00 00	 jmp	 $LN2@update_cin
$LN6@update_cin:

; 308  : 	{
; 309  : 		case OBJECT_3D_CAMERA_SCENIC_MOVING:
; 310  : 		case OBJECT_3D_CAMERA_SCENIC_STATIC:
; 311  : 		{
; 312  : 			object_3d_instance
; 313  : 				*inst3d;
; 314  : 
; 315  : 			inst3d = (object_3d_instance *) get_local_entity_ptr_value (raw->external_view_entity, PTR_TYPE_INSTANCE_3D_OBJECT);

  0006c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0006f	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00076	74 10		 je	 SHORT $LN12@update_cin
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0007b	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  00081	8b 02		 mov	 eax, DWORD PTR [edx]
  00083	89 45 b8	 mov	 DWORD PTR tv85[ebp], eax
  00086	eb 22		 jmp	 SHORT $LN13@update_cin
$LN12@update_cin:
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  0008e	83 c1 17	 add	 ecx, 23			; 00000017H
  00091	51		 push	 ecx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00097	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009d	52		 push	 edx
  0009e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN13@update_cin:
  000aa	b8 01 00 00 00	 mov	 eax, 1
  000af	85 c0		 test	 eax, eax
  000b1	74 09		 je	 SHORT $LN14@update_cin
  000b3	c7 45 b4 02 00
	00 00		 mov	 DWORD PTR tv93[ebp], 2
  000ba	eb 22		 jmp	 SHORT $LN15@update_cin
$LN14@update_cin:
  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??update_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  000c2	83 c1 17	 add	 ecx, 23			; 00000017H
  000c5	51		 push	 ecx
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000d1	52		 push	 edx
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN15@update_cin:
  000de	6a 02		 push	 2
  000e0	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000e3	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  000e9	51		 push	 ecx
  000ea	6b 55 b8 50	 imul	 edx, DWORD PTR tv85[ebp], 80
  000ee	8b 45 b4	 mov	 eax, DWORD PTR tv93[ebp]
  000f1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000f8	ff d1		 call	 ecx
  000fa	89 45 fc	 mov	 DWORD PTR _inst3d$1[ebp], eax

; 316  : 
; 317  : 			if (raw->cinematic_camera_depth >= get_number_of_3d_object_cameras (inst3d, raw->cinematic_camera_index))

  000fd	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00100	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00106	51		 push	 ecx
  00107	8b 55 fc	 mov	 edx, DWORD PTR _inst3d$1[ebp]
  0010a	52		 push	 edx
  0010b	e8 00 00 00 00	 call	 ?get_number_of_3d_object_cameras@@YGHPAUOBJECT_3D_INSTANCE@@H@Z ; get_number_of_3d_object_cameras
  00110	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00113	39 81 a8 00 00
	00		 cmp	 DWORD PTR [ecx+168], eax
  00119	7c 09		 jl	 SHORT $LN7@update_cin

; 318  : 			{
; 319  : 				#if DEBUG_MODULE
; 320  : 
; 321  : 				debug_colour_log (DEBUG_COLOUR_RED, "CINEMATIC CAMERA ERROR - forced reset!!!");
; 322  : 
; 323  : 				#endif
; 324  : 
; 325  : 				reset_cinematic_camera (raw);

  0011b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ?reset_cinematic_camera@@YGXPAUCAMERA@@@Z ; reset_cinematic_camera
$LN7@update_cin:
$LN2@update_cin:

; 326  : 			}
; 327  : 
; 328  : 			break;
; 329  : 		}
; 330  : 	}
; 331  : 
; 332  : 	//
; 333  : 	////////////////////////////////////////
; 334  : 
; 335  : 	//
; 336  : 	// update timer
; 337  : 	//
; 338  : 
; 339  : 	raw->cinematic_camera_timer += get_delta_time ();

  00124	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00127	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR [eax+152]
  0012f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00137	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0013a	f3 0f 11 81 98
	00 00 00	 movss	 DWORD PTR [ecx+152], xmm0

; 340  : 
; 341  : 	if (raw->cinematic_camera_timer > raw->cinematic_camera_lifetime)

  00142	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00148	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR [eax+152]
  00150	0f 2f 81 94 00
	00 00		 comiss	 xmm0, DWORD PTR [ecx+148]
  00157	76 2a		 jbe	 SHORT $LN8@update_cin

; 342  : 	{
; 343  : 		if (raw->auto_edit)

  00159	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0015c	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00160	74 18		 je	 SHORT $LN10@update_cin

; 344  : 		{
; 345  : 			switch_auto_edit_entity (raw);

  00162	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 ?switch_auto_edit_entity@@YGPAUENTITY@@PAUCAMERA@@@Z ; switch_auto_edit_entity

; 346  : 
; 347  : 			if (switch_auto_edit_camera_mode (raw))

  0016b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ?switch_auto_edit_camera_mode@@YGHPAUCAMERA@@@Z ; switch_auto_edit_camera_mode
  00174	85 c0		 test	 eax, eax
  00176	74 02		 je	 SHORT $LN10@update_cin

; 348  : 			{
; 349  : 				//
; 350  : 				// switched to a different camera
; 351  : 				//
; 352  : 
; 353  : 				return;

  00178	eb 12		 jmp	 SHORT $LN1@update_cin
$LN10@update_cin:

; 354  : 			}
; 355  : 		}
; 356  : 
; 357  : 		reset_cinematic_camera (raw);

  0017a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?reset_cinematic_camera@@YGXPAUCAMERA@@@Z ; reset_cinematic_camera
$LN8@update_cin:

; 358  : 	}
; 359  : 
; 360  : 	//
; 361  : 	// continue update
; 362  : 	//
; 363  : 
; 364  : 	update_cinematic_camera_continued (raw);

  00183	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?update_cinematic_camera_continued@@YGXPAUCAMERA@@@Z ; update_cinematic_camera_continued
$LN1@update_cin:

; 365  : }

  0018c	5f		 pop	 edi
  0018d	5e		 pop	 esi
  0018e	5b		 pop	 ebx
  0018f	8b e5		 mov	 esp, ebp
  00191	5d		 pop	 ebp
  00192	c2 04 00	 ret	 4
?update_cinematic_camera@@YGXPAUCAMERA@@@Z ENDP		; update_cinematic_camera
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_cine.c
;	COMDAT ?reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
_raw$ = 8						; size = 4
?reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z PROC ; reset_cinematic_camera_for_new_view_entity, COMDAT

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@reset_cine
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_cine:

; 281  : 
; 282  : 	raw->cinematic_camera_previous_moving_depth = -1;

  00027	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	c7 80 ac 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+172], -1

; 283  : 
; 284  : 	raw->cinematic_camera_previous_static_depth = -1;

  00034	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00037	c7 80 b0 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+176], -1

; 285  : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?reset_cinematic_camera_for_new_view_entity@@YGXPAUCAMERA@@@Z ENDP ; reset_cinematic_camera_for_new_view_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_cine.c
;	COMDAT ?reset_cinematic_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv258 = -92						; size = 4
tv90 = -92						; size = 4
tv250 = -88						; size = 4
tv217 = -88						; size = 4
tv187 = -88						; size = 4
tv152 = -88						; size = 4
tv82 = -88						; size = 4
_attempts$ = -20					; size = 4
_num_static_cameras$ = -16				; size = 4
_num_moving_cameras$ = -12				; size = 4
_inst3d$ = -8						; size = 4
_en$ = -4						; size = 4
_raw$ = 8						; size = 4
?reset_cinematic_camera@@YGXPAUCAMERA@@@Z PROC		; reset_cinematic_camera, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	entity
; 82   : 		*en;
; 83   : 
; 84   : 	object_3d_instance
; 85   : 		*inst3d;
; 86   : 
; 87   : 	int
; 88   : 		num_moving_cameras,
; 89   : 		num_static_cameras,
; 90   : 		attempts;
; 91   : 
; 92   : 	//
; 93   : 	// pre-amble
; 94   : 	//
; 95   : 
; 96   : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN8@reset_cine
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 10	 add	 eax, 16			; 00000010H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@reset_cine:

; 97   : 
; 98   : 	ASSERT (raw->external_view_entity);

  00027	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00031	75 18		 jne	 SHORT $LN9@reset_cine
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  00038	83 c0 12	 add	 eax, 18			; 00000012H
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@reset_cine:

; 99   : 
; 100  : 	en = raw->external_view_entity;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0004e	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00054	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 101  : 
; 102  : 	inst3d = (object_3d_instance *) get_local_entity_ptr_value (en, PTR_TYPE_INSTANCE_3D_OBJECT);

  00057	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005b	74 0a		 je	 SHORT $LN29@reset_cine
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00060	8b 08		 mov	 ecx, DWORD PTR [eax]
  00062	89 4d a8	 mov	 DWORD PTR tv82[ebp], ecx
  00065	eb 21		 jmp	 SHORT $LN30@reset_cine
$LN29@reset_cine:
  00067	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  0006d	83 c2 16	 add	 edx, 22			; 00000016H
  00070	52		 push	 edx
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00081	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN30@reset_cine:
  00088	b9 01 00 00 00	 mov	 ecx, 1
  0008d	85 c9		 test	 ecx, ecx
  0008f	74 09		 je	 SHORT $LN31@reset_cine
  00091	c7 45 a4 02 00
	00 00		 mov	 DWORD PTR tv90[ebp], 2
  00098	eb 21		 jmp	 SHORT $LN32@reset_cine
$LN31@reset_cine:
  0009a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  000a0	83 c2 16	 add	 edx, 22			; 00000016H
  000a3	52		 push	 edx
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN32@reset_cine:
  000bb	6a 02		 push	 2
  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  000c0	51		 push	 ecx
  000c1	6b 55 a8 50	 imul	 edx, DWORD PTR tv82[ebp], 80
  000c5	8b 45 a4	 mov	 eax, DWORD PTR tv90[ebp]
  000c8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000cf	ff d1		 call	 ecx
  000d1	89 45 f8	 mov	 DWORD PTR _inst3d$[ebp], eax

; 103  : 
; 104  : 	//
; 105  : 	// select 3D camera
; 106  : 	//
; 107  : 
; 108  : 	raw->cinematic_camera_index = OBJECT_3D_INVALID_CAMERA_INDEX;

  000d4	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000d7	c7 80 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+164], 0

; 109  : 
; 110  : 	if (inst3d)

  000e1	83 7d f8 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  000e5	0f 84 ab 00 00
	00		 je	 $LN17@reset_cine

; 111  : 	{
; 112  : 		num_moving_cameras = get_number_of_3d_object_cameras (inst3d, OBJECT_3D_CAMERA_SCENIC_MOVING);

  000eb	6a 01		 push	 1
  000ed	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?get_number_of_3d_object_cameras@@YGHPAUOBJECT_3D_INSTANCE@@H@Z ; get_number_of_3d_object_cameras
  000f6	89 45 f4	 mov	 DWORD PTR _num_moving_cameras$[ebp], eax

; 113  : 
; 114  : 		num_static_cameras = get_number_of_3d_object_cameras (inst3d, OBJECT_3D_CAMERA_SCENIC_STATIC);

  000f9	6a 02		 push	 2
  000fb	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?get_number_of_3d_object_cameras@@YGHPAUOBJECT_3D_INSTANCE@@H@Z ; get_number_of_3d_object_cameras
  00104	89 45 f0	 mov	 DWORD PTR _num_static_cameras$[ebp], eax

; 115  : 
; 116  : 		if ((num_moving_cameras > 0) && (num_static_cameras > 0))

  00107	83 7d f4 00	 cmp	 DWORD PTR _num_moving_cameras$[ebp], 0
  0010b	7e 61		 jle	 SHORT $LN11@reset_cine
  0010d	83 7d f0 00	 cmp	 DWORD PTR _num_static_cameras$[ebp], 0
  00111	7e 5b		 jle	 SHORT $LN11@reset_cine

; 117  : 		{
; 118  : 			if (frand1 () < 0.333)

  00113	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0011d	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00122	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0012d	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00130	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00136	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  0013a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00142	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fd54fdf3b645a1d
  0014a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0014e	76 0f		 jbe	 SHORT $LN13@reset_cine

; 119  : 			{
; 120  : 				raw->cinematic_camera_index = OBJECT_3D_CAMERA_SCENIC_MOVING;

  00150	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00153	c7 80 a4 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+164], 1

; 121  : 			}
; 122  : 			else

  0015d	eb 0d		 jmp	 SHORT $LN14@reset_cine
$LN13@reset_cine:

; 123  : 			{
; 124  : 				raw->cinematic_camera_index = OBJECT_3D_CAMERA_SCENIC_STATIC;

  0015f	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00162	c7 80 a4 00 00
	00 02 00 00 00	 mov	 DWORD PTR [eax+164], 2
$LN14@reset_cine:

; 125  : 			}

  0016c	eb 28		 jmp	 SHORT $LN17@reset_cine
$LN11@reset_cine:

; 126  : 		}
; 127  : 		else if (num_moving_cameras > 0)

  0016e	83 7d f4 00	 cmp	 DWORD PTR _num_moving_cameras$[ebp], 0
  00172	7e 0f		 jle	 SHORT $LN15@reset_cine

; 128  : 		{
; 129  : 			raw->cinematic_camera_index = OBJECT_3D_CAMERA_SCENIC_MOVING;

  00174	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00177	c7 80 a4 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+164], 1
  00181	eb 13		 jmp	 SHORT $LN17@reset_cine
$LN15@reset_cine:

; 130  : 		}
; 131  : 		else if (num_static_cameras > 0)

  00183	83 7d f0 00	 cmp	 DWORD PTR _num_static_cameras$[ebp], 0
  00187	7e 0d		 jle	 SHORT $LN17@reset_cine

; 132  : 		{
; 133  : 			raw->cinematic_camera_index = OBJECT_3D_CAMERA_SCENIC_STATIC;

  00189	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0018c	c7 80 a4 00 00
	00 02 00 00 00	 mov	 DWORD PTR [eax+164], 2
$LN17@reset_cine:

; 134  : 		}
; 135  : 	}
; 136  : 
; 137  : 	switch (raw->cinematic_camera_index)

  00196	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00199	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0019f	89 4d a8	 mov	 DWORD PTR tv152[ebp], ecx
  001a2	83 7d a8 00	 cmp	 DWORD PTR tv152[ebp], 0
  001a6	74 19		 je	 SHORT $LN18@reset_cine
  001a8	83 7d a8 01	 cmp	 DWORD PTR tv152[ebp], 1
  001ac	0f 84 0d 01 00
	00		 je	 $LN19@reset_cine
  001b2	83 7d a8 02	 cmp	 DWORD PTR tv152[ebp], 2
  001b6	0f 84 e6 01 00
	00		 je	 $LN24@reset_cine
  001bc	e9 b8 02 00 00	 jmp	 $LN2@reset_cine
$LN18@reset_cine:

; 138  : 	{
; 139  : 		////////////////////////////////////////
; 140  : 		case OBJECT_3D_INVALID_CAMERA_INDEX:
; 141  : 		////////////////////////////////////////
; 142  : 		{
; 143  : 			raw->cinematic_camera_depth = 0;

  001c1	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  001c4	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0

; 144  : 
; 145  : 			raw->cinematic_camera_lifetime = (frand1 () * 2.0) + 2.0;

  001ce	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  001d8	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  001dd	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  001e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  001e8	c1 f9 10	 sar	 ecx, 16			; 00000010H
  001eb	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  001f1	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  001f5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  001fd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00205	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  0020d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00211	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00214	f3 0f 11 82 94
	00 00 00	 movss	 DWORD PTR [edx+148], xmm0

; 146  : 
; 147  : 			raw->cinematic_camera_heading = rad (45.0) * ((float) (rand16 () % 8));

  0021c	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00226	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0022b	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00230	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00236	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00239	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0023f	81 e1 07 00 00
	80		 and	 ecx, -2147483641	; 80000007H
  00245	79 05		 jns	 SHORT $LN37@reset_cine
  00247	49		 dec	 ecx
  00248	83 c9 f8	 or	 ecx, -8			; fffffff8H
  0024b	41		 inc	 ecx
$LN37@reset_cine:
  0024c	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00250	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00254	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe921fb51000000
  0025c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00260	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00263	f3 0f 11 82 9c
	00 00 00	 movss	 DWORD PTR [edx+156], xmm0

; 148  : 
; 149  : 			raw->cinematic_camera_pitch = rad (-45.0) * ((float) (rand16 () % 2));

  0026b	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00275	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0027a	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0027f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00285	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00288	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0028e	81 e1 01 00 00
	80		 and	 ecx, -2147483647	; 80000001H
  00294	79 05		 jns	 SHORT $LN38@reset_cine
  00296	49		 dec	 ecx
  00297	83 c9 fe	 or	 ecx, -2			; fffffffeH
  0029a	41		 inc	 ecx
$LN38@reset_cine:
  0029b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0029f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002a3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfe921fb51000000
  002ab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002af	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  002b2	f3 0f 11 82 a0
	00 00 00	 movss	 DWORD PTR [edx+160], xmm0

; 150  : 
; 151  : 			#if DEBUG_MODULE
; 152  : 
; 153  : 			debug_log
; 154  : 			(
; 155  : 				"CINEMATIC CAMERA is INVALID (object = %s, moving cameras = %d, static cameras = %d, depth = %d, lifetime = %.2f, heading = %.2f, pitch = %.2f)",
; 156  : 				get_local_entity_string (en, STRING_TYPE_FULL_NAME),
; 157  : 				num_moving_cameras,
; 158  : 				num_static_cameras,
; 159  : 		  		raw->cinematic_camera_depth,
; 160  : 				raw->cinematic_camera_lifetime,
; 161  : 				deg (raw->cinematic_camera_heading),
; 162  : 				deg (raw->cinematic_camera_pitch)
; 163  : 			);
; 164  : 
; 165  : 			#endif
; 166  : 
; 167  : 			break;

  002ba	e9 ba 01 00 00	 jmp	 $LN2@reset_cine
$LN19@reset_cine:

; 168  : 		}
; 169  : 		////////////////////////////////////////
; 170  : 		case OBJECT_3D_CAMERA_SCENIC_MOVING:
; 171  : 		////////////////////////////////////////
; 172  : 		{
; 173  : 			//
; 174  : 			// try and prevent using the same moving camera twice in succession
; 175  : 			//
; 176  : 
; 177  : 			if (num_moving_cameras > 1)

  002bf	83 7d f4 01	 cmp	 DWORD PTR _num_moving_cameras$[ebp], 1
  002c3	7e 64		 jle	 SHORT $LN20@reset_cine

; 178  : 			{
; 179  : 				attempts = 10;

  002c5	c7 45 ec 0a 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 10 ; 0000000aH
$LN4@reset_cine:

; 180  : 
; 181  : 				while (attempts--)

  002cc	8b 45 ec	 mov	 eax, DWORD PTR _attempts$[ebp]
  002cf	89 45 a8	 mov	 DWORD PTR tv187[ebp], eax
  002d2	8b 4d ec	 mov	 ecx, DWORD PTR _attempts$[ebp]
  002d5	83 e9 01	 sub	 ecx, 1
  002d8	89 4d ec	 mov	 DWORD PTR _attempts$[ebp], ecx
  002db	83 7d a8 00	 cmp	 DWORD PTR tv187[ebp], 0
  002df	74 46		 je	 SHORT $LN5@reset_cine

; 182  : 				{
; 183  : 					raw->cinematic_camera_depth = rand16 () % num_moving_cameras;

  002e1	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  002eb	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  002f0	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  002f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  002fa	c1 f8 10	 sar	 eax, 16			; 00000010H
  002fd	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  00302	99		 cdq
  00303	f7 7d f4	 idiv	 DWORD PTR _num_moving_cameras$[ebp]
  00306	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00309	89 91 a8 00 00
	00		 mov	 DWORD PTR [ecx+168], edx

; 184  : 
; 185  : 					if (raw->cinematic_camera_depth != raw->cinematic_camera_previous_moving_depth)

  0030f	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00312	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00315	8b 90 a8 00 00
	00		 mov	 edx, DWORD PTR [eax+168]
  0031b	3b 91 ac 00 00
	00		 cmp	 edx, DWORD PTR [ecx+172]
  00321	74 02		 je	 SHORT $LN22@reset_cine

; 186  : 					{
; 187  : 						break;

  00323	eb 02		 jmp	 SHORT $LN5@reset_cine
$LN22@reset_cine:

; 188  : 					}
; 189  : 				}

  00325	eb a5		 jmp	 SHORT $LN4@reset_cine
$LN5@reset_cine:

; 190  : 			}
; 191  : 			else

  00327	eb 0d		 jmp	 SHORT $LN21@reset_cine
$LN20@reset_cine:

; 192  : 			{
; 193  : 				raw->cinematic_camera_depth = 0;

  00329	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0032c	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0
$LN21@reset_cine:

; 194  : 			}
; 195  : 
; 196  : 			raw->cinematic_camera_previous_moving_depth = raw->cinematic_camera_depth;

  00336	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00339	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0033c	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [ecx+168]
  00342	89 90 ac 00 00
	00		 mov	 DWORD PTR [eax+172], edx

; 197  : 
; 198  : 			raw->cinematic_camera_lifetime = get_object_3d_camera_lifetime (inst3d, raw->cinematic_camera_index, raw->cinematic_camera_depth);

  00348	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0034b	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  00351	51		 push	 ecx
  00352	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00355	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0035b	50		 push	 eax
  0035c	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0035f	51		 push	 ecx
  00360	e8 00 00 00 00	 call	 ?get_object_3d_camera_lifetime@@YGMPAUOBJECT_3D_INSTANCE@@HH@Z ; get_object_3d_camera_lifetime
  00365	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00368	d9 9a 94 00 00
	00		 fstp	 DWORD PTR [edx+148]

; 199  : 
; 200  : 			#if DEBUG_MODULE
; 201  : 
; 202  : 			debug_log
; 203  : 			(
; 204  : 				"CINEMATIC CAMERA is MOVING (object = %s, moving cameras = %d, static cameras = %d, depth = %d, lifetime = %.2f)",
; 205  : 				get_local_entity_string (en, STRING_TYPE_FULL_NAME),
; 206  : 				num_moving_cameras,
; 207  : 				num_static_cameras,
; 208  : 		  		raw->cinematic_camera_depth,
; 209  : 				raw->cinematic_camera_lifetime
; 210  : 			);
; 211  : 
; 212  : 			#endif
; 213  : 
; 214  : 			ASSERT (raw->cinematic_camera_lifetime > 0.0);

  0036e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00371	f3 0f 5a 80 94
	00 00 00	 cvtss2sd xmm0, DWORD PTR [eax+148]
  00379	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00381	77 1a		 ja	 SHORT $LN23@reset_cine
  00383	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  00388	05 86 00 00 00	 add	 eax, 134		; 00000086H
  0038d	50		 push	 eax
  0038e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00393	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@NBGAHOMO@raw?9?$DOcinematic_camera_lifetime?5@
  00398	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN23@reset_cine:

; 215  : 
; 216  : 			break;

  0039d	e9 d7 00 00 00	 jmp	 $LN2@reset_cine
$LN24@reset_cine:

; 217  : 		}
; 218  : 		////////////////////////////////////////
; 219  : 		case OBJECT_3D_CAMERA_SCENIC_STATIC:
; 220  : 		////////////////////////////////////////
; 221  : 		{
; 222  : 			//
; 223  : 			// try and prevent using the same static camera twice in succession
; 224  : 			//
; 225  : 
; 226  : 			if (num_static_cameras > 1)

  003a2	83 7d f0 01	 cmp	 DWORD PTR _num_static_cameras$[ebp], 1
  003a6	7e 64		 jle	 SHORT $LN25@reset_cine

; 227  : 			{
; 228  : 				attempts = 10;

  003a8	c7 45 ec 0a 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 10 ; 0000000aH
$LN6@reset_cine:

; 229  : 
; 230  : 				while (attempts--)

  003af	8b 45 ec	 mov	 eax, DWORD PTR _attempts$[ebp]
  003b2	89 45 a8	 mov	 DWORD PTR tv217[ebp], eax
  003b5	8b 4d ec	 mov	 ecx, DWORD PTR _attempts$[ebp]
  003b8	83 e9 01	 sub	 ecx, 1
  003bb	89 4d ec	 mov	 DWORD PTR _attempts$[ebp], ecx
  003be	83 7d a8 00	 cmp	 DWORD PTR tv217[ebp], 0
  003c2	74 46		 je	 SHORT $LN7@reset_cine

; 231  : 				{
; 232  : 					raw->cinematic_camera_depth = rand16 () % num_static_cameras;

  003c4	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  003ce	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  003d3	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  003d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  003dd	c1 f8 10	 sar	 eax, 16			; 00000010H
  003e0	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  003e5	99		 cdq
  003e6	f7 7d f0	 idiv	 DWORD PTR _num_static_cameras$[ebp]
  003e9	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  003ec	89 91 a8 00 00
	00		 mov	 DWORD PTR [ecx+168], edx

; 233  : 
; 234  : 					if (raw->cinematic_camera_depth != raw->cinematic_camera_previous_static_depth)

  003f2	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  003f5	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  003f8	8b 90 a8 00 00
	00		 mov	 edx, DWORD PTR [eax+168]
  003fe	3b 91 b0 00 00
	00		 cmp	 edx, DWORD PTR [ecx+176]
  00404	74 02		 je	 SHORT $LN27@reset_cine

; 235  : 					{
; 236  : 						break;

  00406	eb 02		 jmp	 SHORT $LN7@reset_cine
$LN27@reset_cine:

; 237  : 					}
; 238  : 				}

  00408	eb a5		 jmp	 SHORT $LN6@reset_cine
$LN7@reset_cine:

; 239  : 			}
; 240  : 			else

  0040a	eb 0d		 jmp	 SHORT $LN26@reset_cine
$LN25@reset_cine:

; 241  : 			{
; 242  : 				raw->cinematic_camera_depth = 0;

  0040c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0040f	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0
$LN26@reset_cine:

; 243  : 			}
; 244  : 
; 245  : 			raw->cinematic_camera_previous_static_depth = raw->cinematic_camera_depth;

  00419	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0041c	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0041f	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [ecx+168]
  00425	89 90 b0 00 00
	00		 mov	 DWORD PTR [eax+176], edx

; 246  : 
; 247  : 			raw->cinematic_camera_lifetime = (frand1 () * 2.0) + 2.0;

  0042b	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00435	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0043a	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0043f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00445	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00448	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0044e	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00452	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  0045a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00462	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  0046a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0046e	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00471	f3 0f 11 82 94
	00 00 00	 movss	 DWORD PTR [edx+148], xmm0
$LN2@reset_cine:

; 248  : 
; 249  : 			#if DEBUG_MODULE
; 250  : 
; 251  : 			debug_log
; 252  : 			(
; 253  : 				"CINEMATIC CAMERA is STATIC (object = %s, moving cameras = %d, static cameras = %d, depth = %d, lifetime = %.2f)",
; 254  : 				get_local_entity_string (en, STRING_TYPE_FULL_NAME),
; 255  : 				num_moving_cameras,
; 256  : 				num_static_cameras,
; 257  : 		  		raw->cinematic_camera_depth,
; 258  : 				raw->cinematic_camera_lifetime
; 259  : 			);
; 260  : 
; 261  : 			#endif
; 262  : 		}
; 263  : 	}
; 264  : 
; 265  : 	raw->cinematic_camera_timer = 0.0;

  00479	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0047c	0f 57 c0	 xorps	 xmm0, xmm0
  0047f	f3 0f 11 80 98
	00 00 00	 movss	 DWORD PTR [eax+152], xmm0

; 266  : 
; 267  : 	//
; 268  : 	// motion vector
; 269  : 	//
; 270  : 
; 271  : 	get_local_entity_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &raw->motion_vector);

  00487	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0048b	74 0a		 je	 SHORT $LN33@reset_cine
  0048d	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00490	8b 08		 mov	 ecx, DWORD PTR [eax]
  00492	89 4d a8	 mov	 DWORD PTR tv250[ebp], ecx
  00495	eb 24		 jmp	 SHORT $LN34@reset_cine
$LN33@reset_cine:
  00497	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  0049d	81 c2 bf 00 00
	00		 add	 edx, 191		; 000000bfH
  004a3	52		 push	 edx
  004a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ae	50		 push	 eax
  004af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004b4	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv250[ebp], 0
$LN34@reset_cine:
  004bb	b9 01 00 00 00	 mov	 ecx, 1
  004c0	85 c9		 test	 ecx, ecx
  004c2	74 09		 je	 SHORT $LN35@reset_cine
  004c4	c7 45 a4 06 00
	00 00		 mov	 DWORD PTR tv258[ebp], 6
  004cb	eb 24		 jmp	 SHORT $LN36@reset_cine
$LN35@reset_cine:
  004cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??reset_cinematic_camera@@YGXPAUCAMERA@@@Z@4JA
  004d3	81 c2 bf 00 00
	00		 add	 edx, 191		; 000000bfH
  004d9	52		 push	 edx
  004da	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@FKCBGAKI@c?3?2users?2nhv90?2projects?2eech?2ap@
  004df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  004e4	50		 push	 eax
  004e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ea	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv258[ebp], 0
$LN36@reset_cine:
  004f1	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  004f4	83 c1 0c	 add	 ecx, 12			; 0000000cH
  004f7	51		 push	 ecx
  004f8	6a 06		 push	 6
  004fa	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  004fd	52		 push	 edx
  004fe	6b 45 a8 60	 imul	 eax, DWORD PTR tv250[ebp], 96
  00502	8b 4d a4	 mov	 ecx, DWORD PTR tv258[ebp]
  00505	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0050c	ff d2		 call	 edx

; 272  : }

  0050e	5f		 pop	 edi
  0050f	5e		 pop	 esi
  00510	5b		 pop	 ebx
  00511	8b e5		 mov	 esp, ebp
  00513	5d		 pop	 ebp
  00514	c2 04 00	 ret	 4
?reset_cinematic_camera@@YGXPAUCAMERA@@@Z ENDP		; reset_cinematic_camera
_TEXT	ENDS
END
