; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\sound\soundhlp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?create_and_load_sound_buffer@@YGPAUIDirectSoundBuffer@@PBDW4SAMPLE_TYPES@@H@Z ; create_and_load_sound_buffer
PUBLIC	??_C@_0CB@PLGEMOHH@Unable?5to?5find?5sound?5to?5load?3?5?$CF@ ; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0BP@MFGHCFHB@Unable?5to?5open?5buffer?5file?3?5?$CFs@ ; `string'
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fread:PROC
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?file_exist@@YGHPBD@Z:PROC			; file_exist
EXTRN	?file_size@@YGHPBD@Z:PROC			; file_size
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?dsound_create_sound_buffer@@YGPAUIDirectSoundBuffer@@W4SAMPLE_TYPES@@HH@Z:PROC ; dsound_create_sound_buffer
EXTRN	?dsound_destroy_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z:PROC ; dsound_destroy_sound_buffer
EXTRN	?dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z:PROC ; dsound_lock_sound_buffer
EXTRN	?dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z:PROC ; dsound_unlock_sound_buffer
;	COMDAT ??_C@_0BP@MFGHCFHB@Unable?5to?5open?5buffer?5file?3?5?$CFs@
CONST	SEGMENT
??_C@_0BP@MFGHCFHB@Unable?5to?5open?5buffer?5file?3?5?$CFs@ DB 'Unable to'
	DB	' open buffer file: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PLGEMOHH@Unable?5to?5find?5sound?5to?5load?3?5?$CF@
CONST	SEGMENT
??_C@_0CB@PLGEMOHH@Unable?5to?5find?5sound?5to?5load?3?5?$CF@ DB 'Unable '
	DB	'to find sound to load: %s', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\soundhlp.c
;	COMDAT ?create_and_load_sound_buffer@@YGPAUIDirectSoundBuffer@@PBDW4SAMPLE_TYPES@@H@Z
_TEXT	SEGMENT
_fp$ = -16						; size = 4
_data$ = -12						; size = 4
_size$ = -8						; size = 4
_buffer$ = -4						; size = 4
_filename$ = 8						; size = 4
_type$ = 12						; size = 4
_rate$ = 16						; size = 4
?create_and_load_sound_buffer@@YGPAUIDirectSoundBuffer@@PBDW4SAMPLE_TYPES@@H@Z PROC ; create_and_load_sound_buffer, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	LPDIRECTSOUNDBUFFER
; 77   : 		buffer;
; 78   : 
; 79   : 	int
; 80   : 		size;
; 81   : 
; 82   : 	unsigned char
; 83   : 		*data;
; 84   : 
; 85   : 	FILE
; 86   : 		*fp;
; 87   : 
; 88   : 	if ( !file_exist ( filename ) )

  00009	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  00012	85 c0		 test	 eax, eax
  00014	75 18		 jne	 SHORT $LN2@create_and

; 89   : 	{
; 90   : 
; 91   : 		debug_log ( "Unable to find sound to load: %s", filename );

  00016	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@PLGEMOHH@Unable?5to?5find?5sound?5to?5load?3?5?$CF@
  0001f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00024	83 c4 08	 add	 esp, 8

; 92   : 
; 93   : 		return ( NULL );

  00027	33 c0		 xor	 eax, eax
  00029	e9 bf 00 00 00	 jmp	 $LN1@create_and
$LN2@create_and:

; 94   : 	}
; 95   : 
; 96   : 	size = file_size ( filename );

  0002e	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?file_size@@YGHPBD@Z	; file_size
  00037	89 45 f8	 mov	 DWORD PTR _size$[ebp], eax

; 97   : 
; 98   : 	buffer = dsound_create_sound_buffer ( type, rate, size );

  0003a	8b 45 f8	 mov	 eax, DWORD PTR _size$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR _rate$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?dsound_create_sound_buffer@@YGPAUIDirectSoundBuffer@@W4SAMPLE_TYPES@@HH@Z ; dsound_create_sound_buffer
  0004b	89 45 fc	 mov	 DWORD PTR _buffer$[ebp], eax

; 99   : 
; 100  : 	if ( buffer )

  0004e	83 7d fc 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  00052	0f 84 92 00 00
	00		 je	 $LN3@create_and

; 101  : 	{
; 102  : 
; 103  : 		data = dsound_lock_sound_buffer ( buffer, 0, size );

  00058	8b 45 f8	 mov	 eax, DWORD PTR _size$[ebp]
  0005b	50		 push	 eax
  0005c	6a 00		 push	 0
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _buffer$[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ?dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z ; dsound_lock_sound_buffer
  00067	89 45 f4	 mov	 DWORD PTR _data$[ebp], eax

; 104  : 
; 105  : 		// JB 030311 Enable running out of separate directories
; 106  : 		fp = safe_fopen ( filename, "rb" );

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  0006f	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00078	89 45 f0	 mov	 DWORD PTR _fp$[ebp], eax

; 107  : 
; 108  : 		if ( fp )

  0007b	83 7d f0 00	 cmp	 DWORD PTR _fp$[ebp], 0
  0007f	74 37		 je	 SHORT $LN4@create_and

; 109  : 		{
; 110  : 
; 111  : 			fread ( data, 1, size, fp );

  00081	8b 45 f0	 mov	 eax, DWORD PTR _fp$[ebp]
  00084	50		 push	 eax
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _size$[ebp]
  00088	51		 push	 ecx
  00089	6a 01		 push	 1
  0008b	8b 55 f4	 mov	 edx, DWORD PTR _data$[ebp]
  0008e	52		 push	 edx
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00095	83 c4 10	 add	 esp, 16			; 00000010H

; 112  : 
; 113  : 			fclose ( fp );

  00098	8b 45 f0	 mov	 eax, DWORD PTR _fp$[ebp]
  0009b	50		 push	 eax
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  000a2	83 c4 04	 add	 esp, 4

; 114  : 
; 115  : 			dsound_unlock_sound_buffer ( buffer, data, size );

  000a5	8b 45 f8	 mov	 eax, DWORD PTR _size$[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d f4	 mov	 ecx, DWORD PTR _data$[ebp]
  000ac	51		 push	 ecx
  000ad	8b 55 fc	 mov	 edx, DWORD PTR _buffer$[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ?dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z ; dsound_unlock_sound_buffer

; 116  : 		}
; 117  : 		else

  000b6	eb 32		 jmp	 SHORT $LN3@create_and
$LN4@create_and:

; 118  : 		{
; 119  : 
; 120  : 			dsound_unlock_sound_buffer ( buffer, data, size );

  000b8	8b 45 f8	 mov	 eax, DWORD PTR _size$[ebp]
  000bb	50		 push	 eax
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR _data$[ebp]
  000bf	51		 push	 ecx
  000c0	8b 55 fc	 mov	 edx, DWORD PTR _buffer$[ebp]
  000c3	52		 push	 edx
  000c4	e8 00 00 00 00	 call	 ?dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z ; dsound_unlock_sound_buffer

; 121  : 
; 122  : 			dsound_destroy_sound_buffer ( buffer );

  000c9	8b 45 fc	 mov	 eax, DWORD PTR _buffer$[ebp]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ?dsound_destroy_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z ; dsound_destroy_sound_buffer

; 123  : 
; 124  : 			buffer = NULL;

  000d2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _buffer$[ebp], 0

; 125  : 
; 126  : 			debug_log ( "Unable to open buffer file: %s", filename );

  000d9	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  000dc	50		 push	 eax
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@MFGHCFHB@Unable?5to?5open?5buffer?5file?3?5?$CFs@
  000e2	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000e7	83 c4 08	 add	 esp, 8
$LN3@create_and:

; 127  : 		}
; 128  : 	}
; 129  : 
; 130  : 	return ( buffer );

  000ea	8b 45 fc	 mov	 eax, DWORD PTR _buffer$[ebp]
$LN1@create_and:

; 131  : }

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 0c 00	 ret	 12			; 0000000cH
?create_and_load_sound_buffer@@YGPAUIDirectSoundBuffer@@PBDW4SAMPLE_TYPES@@H@Z ENDP ; create_and_load_sound_buffer
_TEXT	ENDS
END
