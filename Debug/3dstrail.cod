; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3dstrail.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?smoke_trail_headers@@3PAUSMOKE_TRAIL_INFORMATION@@A ; smoke_trail_headers
PUBLIC	?smoke_trail_point_data@@3PAUSMOKE_TRAIL_DATA@@A ; smoke_trail_point_data
PUBLIC	?number_of_smoke_trail_headers_used@@3HA	; number_of_smoke_trail_headers_used
PUBLIC	?number_of_smoke_trail_points_used@@3HA		; number_of_smoke_trail_points_used
_BSS	SEGMENT
?smoke_trail_headers@@3PAUSMOKE_TRAIL_INFORMATION@@A DB 0e40H DUP (?) ; smoke_trail_headers
?smoke_trail_point_data@@3PAUSMOKE_TRAIL_DATA@@A DB 0b000H DUP (?) ; smoke_trail_point_data
?number_of_smoke_trail_headers_used@@3HA DD 01H DUP (?)	; number_of_smoke_trail_headers_used
?number_of_smoke_trail_points_used@@3HA DD 01H DUP (?)	; number_of_smoke_trail_points_used
_BSS	ENDS
PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?generate_lookup_outcode@@YGHHHHH@Z		; generate_lookup_outcode
PUBLIC	?reset_smoke_trail_rendering_information@@YGXXZ	; reset_smoke_trail_rendering_information
PUBLIC	?get_smoke_trail_header@@YGPAUSMOKE_TRAIL_INFORMATION@@XZ ; get_smoke_trail_header
PUBLIC	?get_smoke_trail_point_data@@YGPAUSMOKE_TRAIL_DATA@@H@Z ; get_smoke_trail_point_data
PUBLIC	?insert_zbiased_smoke_trail_into_3d_scene@@YGXHMHPAUSCREEN@@MMPAUSMOKE_TRAIL_DATA@@@Z ; insert_zbiased_smoke_trail_into_3d_scene
PUBLIC	?draw_3d_smoke_trail@@YGXPAUOBJECT_3D_SMOKE_TRAIL@@@Z ; draw_3d_smoke_trail
PUBLIC	?remove_smoke_trail_point_data@@YGXH@Z		; remove_smoke_trail_point_data
PUBLIC	?__LINE__Var@?0??remove_smoke_trail_point_data@@YGXH@Z@4JA ; `remove_smoke_trail_point_data'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@HFKGGGIP@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0CH@GNOPJKKB@number_of_smoke_trail_points_us@ ; `string'
PUBLIC	??_C@_0CF@GKCINKMP@SMOKE?5TRAIL?5OVERFLOWED?5OBJECT?5B@ ; `string'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fbc28f5c28f5c29
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fe2e147ae147ae1
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ffddddd2ae8e1d6
PUBLIC	__real@40000000
PUBLIC	__real@40800000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z:PROC	; clip_3d_polygon
EXTRN	?set_d3d_fog_face_intensity@@YGXH@Z:PROC	; set_d3d_fog_face_intensity
EXTRN	?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_gouraud_shaded_textured_renderstate
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?draw_wbuffered_gouraud_shaded_textured_polygon@@YGXPAUVERTEX@@@Z:PROC ; draw_wbuffered_gouraud_shaded_textured_polygon
EXTRN	?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ:PROC ; get_3d_scene_slot
EXTRN	?insert_high_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z:PROC ; insert_high_nonzbuffered_scene_slot_into_3d_scene
EXTRN	?insert_low_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z:PROC ; insert_low_nonzbuffered_scene_slot_into_3d_scene
EXTRN	?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z:PROC ; hither_clip_3d_polygon
EXTRN	?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; apply_perspective_to_polygon_texture
EXTRN	?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; remove_perspective_from_polygon_texture
EXTRN	?get_position_3d_relative_position@@YGXPAUVEC3D@@0@Z:PROC ; get_position_3d_relative_position
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?clip_3d_coord@@3HA:DWORD			; clip_3d_coord
EXTRN	?clip_hither@@3MA:DWORD				; clip_hither
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	?middle_scene_slot_height@@3MA:DWORD		; middle_scene_slot_height
EXTRN	?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A:BYTE	; ambient_3d_light
EXTRN	__fltused:DWORD
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ffddddd2ae8e1d6
CONST	SEGMENT
__real@3ffddddd2ae8e1d6 DQ 03ffddddd2ae8e1d6r	; 1.86667
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe2e147ae147ae1
CONST	SEGMENT
__real@3fe2e147ae147ae1 DQ 03fe2e147ae147ae1r	; 0.59
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fbc28f5c28f5c29
CONST	SEGMENT
__real@3fbc28f5c28f5c29 DQ 03fbc28f5c28f5c29r	; 0.11
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_C@_0CF@GKCINKMP@SMOKE?5TRAIL?5OVERFLOWED?5OBJECT?5B@
CONST	SEGMENT
??_C@_0CF@GKCINKMP@SMOKE?5TRAIL?5OVERFLOWED?5OBJECT?5B@ DB 'SMOKE TRAIL O'
	DB	'VERFLOWED OBJECT BUFFER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GNOPJKKB@number_of_smoke_trail_points_us@
CONST	SEGMENT
??_C@_0CH@GNOPJKKB@number_of_smoke_trail_points_us@ DB 'number_of_smoke_t'
	DB	'rail_points_used >= 0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@HFKGGGIP@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DD@HFKGGGIP@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3dstrail.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??remove_smoke_trail_point_data@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??remove_smoke_trail_point_data@@YGXH@Z@4JA DD 0aaH ; `remove_smoke_trail_point_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?remove_smoke_trail_point_data@@YGXH@Z
_TEXT	SEGMENT
_number_of_points$ = 8					; size = 4
?remove_smoke_trail_point_data@@YGXH@Z PROC		; remove_smoke_trail_point_data, COMDAT

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 171  : 
; 172  : 	number_of_smoke_trail_points_used -= number_of_points;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_smoke_trail_points_used@@3HA ; number_of_smoke_trail_points_used
  0000e	2b 45 08	 sub	 eax, DWORD PTR _number_of_points$[ebp]
  00011	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_smoke_trail_points_used@@3HA, eax ; number_of_smoke_trail_points_used

; 173  : 
; 174  : 	ASSERT ( number_of_smoke_trail_points_used >= 0 );

  00016	79 18		 jns	 SHORT $LN1@remove_smo
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??remove_smoke_trail_point_data@@YGXH@Z@4JA
  0001d	83 c0 04	 add	 eax, 4
  00020	50		 push	 eax
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@HFKGGGIP@c?3?2users?2nhv90?2projects?2eech?2mo@
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GNOPJKKB@number_of_smoke_trail_points_us@
  0002b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN1@remove_smo:

; 175  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
?remove_smoke_trail_point_data@@YGXH@Z ENDP		; remove_smoke_trail_point_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?render_smoke_trail_polygon@@YGXPAUVERTEX@@PAUSCREEN@@H@Z
_TEXT	SEGMENT
_tmp$ = -8						; size = 4
_outcode$ = -4						; size = 4
_poly$ = 8						; size = 4
_texture$ = 12						; size = 4
_additive$ = 16						; size = 4
?render_smoke_trail_polygon@@YGXPAUVERTEX@@PAUSCREEN@@H@Z PROC ; render_smoke_trail_polygon, COMDAT

; 657  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 658  : 
; 659  : 	int
; 660  : 		outcode;
; 661  : 
; 662  : 	vertex
; 663  : 		*tmp;
; 664  : 
; 665  : 	tmp = poly;

  00009	8b 45 08	 mov	 eax, DWORD PTR _poly$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR _tmp$[ebp], eax

; 666  : 
; 667  : 	outcode = 0;

  0000f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _outcode$[ebp], 0
$LN2@render_smo:

; 668  : 
; 669  : 	while ( tmp )

  00016	83 7d f8 00	 cmp	 DWORD PTR _tmp$[ebp], 0
  0001a	74 18		 je	 SHORT $LN3@render_smo

; 670  : 	{
; 671  : 
; 672  : 		outcode |= tmp->outcode;

  0001c	8b 45 f8	 mov	 eax, DWORD PTR _tmp$[ebp]
  0001f	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00023	0b 4d fc	 or	 ecx, DWORD PTR _outcode$[ebp]
  00026	89 4d fc	 mov	 DWORD PTR _outcode$[ebp], ecx

; 673  : 
; 674  : 		tmp = tmp->next_vertex;

  00029	8b 45 f8	 mov	 eax, DWORD PTR _tmp$[ebp]
  0002c	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0002f	89 4d f8	 mov	 DWORD PTR _tmp$[ebp], ecx

; 675  : 	}

  00032	eb e2		 jmp	 SHORT $LN2@render_smo
$LN3@render_smo:

; 676  : 
; 677  : 
; 678  : 	if ( outcode )

  00034	83 7d fc 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00038	74 5d		 je	 SHORT $LN4@render_smo

; 679  : 	{
; 680  : 
; 681  : 		clip_3d_coord = 0;

  0003a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 682  : 
; 683  : 		if ( outcode & CLIP_HITHER )

  00044	8b 45 fc	 mov	 eax, DWORD PTR _outcode$[ebp]
  00047	83 e0 20	 and	 eax, 32			; 00000020H
  0004a	74 1d		 je	 SHORT $LN5@render_smo

; 684  : 		{
; 685  : 	
; 686  : 			poly = hither_clip_3d_polygon ( poly, &outcode );

  0004c	8d 45 fc	 lea	 eax, DWORD PTR _outcode$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d 08	 mov	 ecx, DWORD PTR _poly$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00059	89 45 08	 mov	 DWORD PTR _poly$[ebp], eax

; 687  : 	
; 688  : 			if ( !poly )

  0005c	83 7d 08 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00060	75 07		 jne	 SHORT $LN5@render_smo

; 689  : 			{
; 690  : 
; 691  : 				outcode = 0;

  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _outcode$[ebp], 0
$LN5@render_smo:

; 692  : 			}
; 693  : 		}
; 694  : 	
; 695  : 		if ( outcode )

  00069	83 7d fc 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  0006d	74 28		 je	 SHORT $LN4@render_smo

; 696  : 		{
; 697  : 	
; 698  : 			apply_perspective_to_polygon_texture ( poly );

  0006f	8b 45 08	 mov	 eax, DWORD PTR _poly$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 699  : 	
; 700  : 			poly = clip_3d_polygon ( poly, outcode );

  00078	8b 45 fc	 mov	 eax, DWORD PTR _outcode$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _poly$[ebp]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00085	89 45 08	 mov	 DWORD PTR _poly$[ebp], eax

; 701  : 	
; 702  : 			if ( poly )

  00088	83 7d 08 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0008c	74 09		 je	 SHORT $LN4@render_smo

; 703  : 			{
; 704  : 
; 705  : 				remove_perspective_from_polygon_texture ( poly );

  0008e	8b 45 08	 mov	 eax, DWORD PTR _poly$[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN4@render_smo:

; 706  : 			}
; 707  : 		}
; 708  : 	}
; 709  : 
; 710  : 	if ( poly )

  00097	83 7d 08 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0009b	0f 84 90 00 00
	00		 je	 $LN1@render_smo

; 711  : 	{
; 712  : 
; 713  : //		d3d_fog_intensity = RGBA_MAKE ( 0, 0, 0, 255 );
; 714  : 
; 715  : 		//
; 716  : 		// Set the required renderstates
; 717  : 		//
; 718  : 
; 719  : 		set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  000a1	6a 00		 push	 0
  000a3	6a 1d		 push	 29			; 0000001dH
  000a5	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 720  : //		set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_NONE );
; 721  : 
; 722  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  000aa	6a 01		 push	 1
  000ac	6a 0d		 push	 13			; 0000000dH
  000ae	6a 00		 push	 0
  000b0	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 723  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  000b5	6a 01		 push	 1
  000b7	6a 0e		 push	 14			; 0000000eH
  000b9	6a 00		 push	 0
  000bb	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 724  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, D3DTFG_LINEAR );

  000c0	6a 02		 push	 2
  000c2	6a 10		 push	 16			; 00000010H
  000c4	6a 00		 push	 0
  000c6	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 725  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, D3DTFN_LINEAR );

  000cb	6a 02		 push	 2
  000cd	6a 11		 push	 17			; 00000011H
  000cf	6a 00		 push	 0
  000d1	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 726  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, D3DTFP_NONE );

  000d6	6a 01		 push	 1
  000d8	6a 12		 push	 18			; 00000012H
  000da	6a 00		 push	 0
  000dc	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 727  : 
; 728  : 		if ( additive )

  000e1	83 7d 10 00	 cmp	 DWORD PTR _additive$[ebp], 0
  000e5	74 26		 je	 SHORT $LN10@render_smo

; 729  : 		{
; 730  : 
; 731  : 			set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_ONE );

  000e7	6a 02		 push	 2
  000e9	6a 13		 push	 19			; 00000013H
  000eb	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 732  : 			set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_ONE );

  000f0	6a 02		 push	 2
  000f2	6a 14		 push	 20			; 00000014H
  000f4	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 733  : 
; 734  : 			set_d3d_gouraud_shaded_textured_renderstate ( texture );

  000f9	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_gouraud_shaded_textured_renderstate

; 735  : 			draw_wbuffered_gouraud_shaded_textured_polygon ( poly );

  00102	8b 45 08	 mov	 eax, DWORD PTR _poly$[ebp]
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_textured_polygon@@YGXPAUVERTEX@@@Z ; draw_wbuffered_gouraud_shaded_textured_polygon

; 736  : 		}
; 737  : 		else

  0010b	eb 24		 jmp	 SHORT $LN1@render_smo
$LN10@render_smo:

; 738  : 		{
; 739  : 
; 740  : 			set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, D3DBLEND_SRCALPHA );

  0010d	6a 05		 push	 5
  0010f	6a 13		 push	 19			; 00000013H
  00111	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 741  : 			set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, D3DBLEND_INVSRCALPHA );

  00116	6a 06		 push	 6
  00118	6a 14		 push	 20			; 00000014H
  0011a	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 742  : 
; 743  : 			set_d3d_gouraud_shaded_textured_renderstate ( texture );

  0011f	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ?set_d3d_gouraud_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_gouraud_shaded_textured_renderstate

; 744  : 			draw_wbuffered_gouraud_shaded_textured_polygon ( poly );

  00128	8b 45 08	 mov	 eax, DWORD PTR _poly$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_textured_polygon@@YGXPAUVERTEX@@@Z ; draw_wbuffered_gouraud_shaded_textured_polygon
$LN1@render_smo:

; 745  : 		}
; 746  : 
; 747  : //		set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );
; 748  : 	}
; 749  : }

  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c2 0c 00	 ret	 12			; 0000000cH
?render_smoke_trail_polygon@@YGXPAUVERTEX@@PAUSCREEN@@H@Z ENDP ; render_smoke_trail_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?light_smoke_colour@@YG?AUREAL_COLOUR@@U1@H@Z
_TEXT	SEGMENT
tv160 = -104						; size = 4
tv156 = -104						; size = 4
tv152 = -104						; size = 4
tv161 = -100						; size = 4
tv157 = -100						; size = 4
tv153 = -100						; size = 4
_ib$ = -32						; size = 4
_ig$ = -28						; size = 4
_ir$ = -24						; size = 4
_intensity$ = -20					; size = 4
_b$ = -16						; size = 4
_g$ = -12						; size = 4
_r$ = -8						; size = 4
_result$ = -4						; size = 4
_colour$ = 8						; size = 4
_additive$ = 12						; size = 4
?light_smoke_colour@@YG?AUREAL_COLOUR@@U1@H@Z PROC	; light_smoke_colour, COMDAT

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 381  : 
; 382  : 	real_colour
; 383  : 		result;
; 384  : 
; 385  : 	float
; 386  : 		r,
; 387  : 		g,
; 388  : 		b,
; 389  : 		intensity;
; 390  : 
; 391  : 	int
; 392  : 		ir,
; 393  : 		ig,
; 394  : 		ib;
; 395  : 
; 396  : 	result.colour = colour.colour;

  00009	8b 45 08	 mov	 eax, DWORD PTR _colour$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax

; 397  : 
; 398  : 	if ( additive )

  0000f	83 7d 0c 00	 cmp	 DWORD PTR _additive$[ebp], 0
  00013	0f 84 02 01 00
	00		 je	 $LN2@light_smok

; 399  : 	{
; 400  : 
; 401  : 		if (active_3d_environment->render_filter != RENDER_CLEAR )

  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0001e	83 b8 d0 02 00
	00 01		 cmp	 DWORD PTR [eax+720], 1
  00025	0f 84 e5 00 00
	00		 je	 $LN4@light_smok

; 402  : 		{
; 403  : 
; 404  : 			//
; 405  : 			// Colour the additive to the light colour
; 406  : 			//
; 407  : 
; 408  : 			r = colour.red;

  0002b	0f b6 45 0a	 movzx	 eax, BYTE PTR _colour$[ebp+2]
  0002f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00033	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 409  : 			g = colour.green;

  00038	0f b6 45 09	 movzx	 eax, BYTE PTR _colour$[ebp+1]
  0003c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00040	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 410  : 			b = colour.blue;

  00045	0f b6 45 08	 movzx	 eax, BYTE PTR _colour$[ebp]
  00049	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0004d	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 411  : 
; 412  : 			intensity = ( 0.3 * r ) + ( 0.59 * g ) + ( 0.11 * b );

  00052	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _r$[ebp]
  00057	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  0005f	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _g$[ebp]
  00064	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  0006c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00070	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _b$[ebp]
  00075	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  0007d	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00081	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00085	f3 0f 11 45 ec	 movss	 DWORD PTR _intensity$[ebp], xmm0

; 413  : 
; 414  : 			r = intensity * ambient_3d_light.colour.red;

  0008a	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _intensity$[ebp]
  0008f	f3 0f 59 05 18
	00 00 00	 mulss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+24
  00097	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 415  : 			g = intensity * ambient_3d_light.colour.green;

  0009c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _intensity$[ebp]
  000a1	f3 0f 59 05 1c
	00 00 00	 mulss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+28
  000a9	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 416  : 			b = intensity * ambient_3d_light.colour.blue;

  000ae	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _intensity$[ebp]
  000b3	f3 0f 59 05 20
	00 00 00	 mulss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+32
  000bb	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 417  : 
; 418  : 			asm_convert_float_to_int ( r, &ir );

  000c0	8d 45 e8	 lea	 eax, DWORD PTR _ir$[ebp]
  000c3	50		 push	 eax
  000c4	51		 push	 ecx
  000c5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  000ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cf	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 419  : 			asm_convert_float_to_int ( g, &ig );

  000d4	8d 45 e4	 lea	 eax, DWORD PTR _ig$[ebp]
  000d7	50		 push	 eax
  000d8	51		 push	 ecx
  000d9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  000de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 420  : 			asm_convert_float_to_int ( b, &ib );

  000e8	8d 45 e0	 lea	 eax, DWORD PTR _ib$[ebp]
  000eb	50		 push	 eax
  000ec	51		 push	 ecx
  000ed	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  000f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f7	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 421  : 
; 422  : 			result.red = ir;

  000fc	8a 45 e8	 mov	 al, BYTE PTR _ir$[ebp]
  000ff	88 45 fe	 mov	 BYTE PTR _result$[ebp+2], al

; 423  : 			result.green = ig;

  00102	8a 45 e4	 mov	 al, BYTE PTR _ig$[ebp]
  00105	88 45 fd	 mov	 BYTE PTR _result$[ebp+1], al

; 424  : 			result.blue = ib;

  00108	8a 45 e0	 mov	 al, BYTE PTR _ib$[ebp]
  0010b	88 45 fc	 mov	 BYTE PTR _result$[ebp], al

; 425  : 		}
; 426  : 		else

  0010e	eb 06		 jmp	 SHORT $LN5@light_smok
$LN4@light_smok:

; 427  : 		{
; 428  : 
; 429  : 			result = colour;

  00110	8b 45 08	 mov	 eax, DWORD PTR _colour$[ebp]
  00113	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax
$LN5@light_smok:

; 430  : 		}
; 431  : 	}
; 432  : 	else

  00116	e9 74 01 00 00	 jmp	 $LN3@light_smok
$LN2@light_smok:

; 433  : 	{
; 434  : 
; 435  : 		r = colour.red;

  0011b	0f b6 45 0a	 movzx	 eax, BYTE PTR _colour$[ebp+2]
  0011f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00123	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 436  : 		g = colour.green;

  00128	0f b6 45 09	 movzx	 eax, BYTE PTR _colour$[ebp+1]
  0012c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00130	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 437  : 		b = colour.blue;

  00135	0f b6 45 08	 movzx	 eax, BYTE PTR _colour$[ebp]
  00139	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0013d	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 438  : 
; 439  : 		r *= ambient_3d_light.colour.red * 1.866666;		//2.8;

  00142	f3 0f 5a 05 18
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+24
  0014a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ffddddd2ae8e1d6
  00152	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _r$[ebp]
  00157	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0015b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0015f	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 440  : 		g *= ambient_3d_light.colour.green * 1.866666;	//2.8;

  00164	f3 0f 5a 05 1c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+28
  0016c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ffddddd2ae8e1d6
  00174	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _g$[ebp]
  00179	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0017d	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00181	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 441  : 		b *= ambient_3d_light.colour.blue * 1.866666;	//2.8;

  00186	f3 0f 5a 05 20
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+32
  0018e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ffddddd2ae8e1d6
  00196	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _b$[ebp]
  0019b	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0019f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001a3	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 442  : 
; 443  : 		asm_convert_float_to_int ( r, &ir );

  001a8	8d 45 e8	 lea	 eax, DWORD PTR _ir$[ebp]
  001ab	50		 push	 eax
  001ac	51		 push	 ecx
  001ad	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  001b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b7	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 444  : 		asm_convert_float_to_int ( g, &ig );

  001bc	8d 45 e4	 lea	 eax, DWORD PTR _ig$[ebp]
  001bf	50		 push	 eax
  001c0	51		 push	 ecx
  001c1	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  001c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cb	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 445  : 		asm_convert_float_to_int ( b, &ib );

  001d0	8d 45 e0	 lea	 eax, DWORD PTR _ib$[ebp]
  001d3	50		 push	 eax
  001d4	51		 push	 ecx
  001d5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  001da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001df	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 446  : 
; 447  : 		ir = bound ( ir, 0, 255 );

  001e4	83 7d e8 00	 cmp	 DWORD PTR _ir$[ebp], 0
  001e8	7d 09		 jge	 SHORT $LN9@light_smok
  001ea	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
  001f1	eb 1e		 jmp	 SHORT $LN10@light_smok
$LN9@light_smok:
  001f3	81 7d e8 ff 00
	00 00		 cmp	 DWORD PTR _ir$[ebp], 255 ; 000000ffH
  001fa	7e 09		 jle	 SHORT $LN7@light_smok
  001fc	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR tv152[ebp], 255 ; 000000ffH
  00203	eb 06		 jmp	 SHORT $LN8@light_smok
$LN7@light_smok:
  00205	8b 45 e8	 mov	 eax, DWORD PTR _ir$[ebp]
  00208	89 45 98	 mov	 DWORD PTR tv152[ebp], eax
$LN8@light_smok:
  0020b	8b 4d 98	 mov	 ecx, DWORD PTR tv152[ebp]
  0020e	89 4d 9c	 mov	 DWORD PTR tv153[ebp], ecx
$LN10@light_smok:
  00211	8b 55 9c	 mov	 edx, DWORD PTR tv153[ebp]
  00214	89 55 e8	 mov	 DWORD PTR _ir$[ebp], edx

; 448  : 		ig = bound ( ig, 0, 255 );

  00217	83 7d e4 00	 cmp	 DWORD PTR _ig$[ebp], 0
  0021b	7d 09		 jge	 SHORT $LN13@light_smok
  0021d	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
  00224	eb 1e		 jmp	 SHORT $LN14@light_smok
$LN13@light_smok:
  00226	81 7d e4 ff 00
	00 00		 cmp	 DWORD PTR _ig$[ebp], 255 ; 000000ffH
  0022d	7e 09		 jle	 SHORT $LN11@light_smok
  0022f	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR tv156[ebp], 255 ; 000000ffH
  00236	eb 06		 jmp	 SHORT $LN12@light_smok
$LN11@light_smok:
  00238	8b 45 e4	 mov	 eax, DWORD PTR _ig$[ebp]
  0023b	89 45 98	 mov	 DWORD PTR tv156[ebp], eax
$LN12@light_smok:
  0023e	8b 4d 98	 mov	 ecx, DWORD PTR tv156[ebp]
  00241	89 4d 9c	 mov	 DWORD PTR tv157[ebp], ecx
$LN14@light_smok:
  00244	8b 55 9c	 mov	 edx, DWORD PTR tv157[ebp]
  00247	89 55 e4	 mov	 DWORD PTR _ig$[ebp], edx

; 449  : 		ib = bound ( ib, 0, 255 );

  0024a	83 7d e0 00	 cmp	 DWORD PTR _ib$[ebp], 0
  0024e	7d 09		 jge	 SHORT $LN17@light_smok
  00250	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
  00257	eb 1e		 jmp	 SHORT $LN18@light_smok
$LN17@light_smok:
  00259	81 7d e0 ff 00
	00 00		 cmp	 DWORD PTR _ib$[ebp], 255 ; 000000ffH
  00260	7e 09		 jle	 SHORT $LN15@light_smok
  00262	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR tv160[ebp], 255 ; 000000ffH
  00269	eb 06		 jmp	 SHORT $LN16@light_smok
$LN15@light_smok:
  0026b	8b 45 e0	 mov	 eax, DWORD PTR _ib$[ebp]
  0026e	89 45 98	 mov	 DWORD PTR tv160[ebp], eax
$LN16@light_smok:
  00271	8b 4d 98	 mov	 ecx, DWORD PTR tv160[ebp]
  00274	89 4d 9c	 mov	 DWORD PTR tv161[ebp], ecx
$LN18@light_smok:
  00277	8b 55 9c	 mov	 edx, DWORD PTR tv161[ebp]
  0027a	89 55 e0	 mov	 DWORD PTR _ib$[ebp], edx

; 450  : 
; 451  : 		result.red = ir;

  0027d	8a 45 e8	 mov	 al, BYTE PTR _ir$[ebp]
  00280	88 45 fe	 mov	 BYTE PTR _result$[ebp+2], al

; 452  : 		result.green = ig;

  00283	8a 45 e4	 mov	 al, BYTE PTR _ig$[ebp]
  00286	88 45 fd	 mov	 BYTE PTR _result$[ebp+1], al

; 453  : 		result.blue = ib;

  00289	8a 45 e0	 mov	 al, BYTE PTR _ib$[ebp]
  0028c	88 45 fc	 mov	 BYTE PTR _result$[ebp], al
$LN3@light_smok:

; 454  : 	}
; 455  : 
; 456  : 	return ( result );

  0028f	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 457  : }

  00292	5f		 pop	 edi
  00293	5e		 pop	 esi
  00294	5b		 pop	 ebx
  00295	8b e5		 mov	 esp, ebp
  00297	5d		 pop	 ebp
  00298	c2 08 00	 ret	 8
?light_smoke_colour@@YG?AUREAL_COLOUR@@U1@H@Z ENDP	; light_smoke_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?draw_3d_smoke_trail@@YGXPAUOBJECT_3D_SMOKE_TRAIL@@@Z
_TEXT	SEGMENT
_iymin$1 = -444						; size = 4
_iymax$2 = -440						; size = 4
_ixmin$3 = -436						; size = 4
_ixmax$4 = -432						; size = 4
_j$5 = -428						; size = 4
_i$6 = -424						; size = 4
_q$7 = -420						; size = 4
_oymin$8 = -416						; size = 4
_oymax$9 = -412						; size = 4
_oxmin$10 = -408					; size = 4
_oxmax$11 = -404					; size = 4
_outcode2$ = -400					; size = 4
_outcode$ = -396					; size = 4
_count$ = -392						; size = 4
_segment$ = -388					; size = 4
_points$ = -384						; size = 384
_smoke$ = 8						; size = 4
?draw_3d_smoke_trail@@YGXPAUOBJECT_3D_SMOKE_TRAIL@@@Z PROC ; draw_3d_smoke_trail, COMDAT

; 464  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 01 00
	00		 sub	 esp, 508		; 000001fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 465  : 
; 466  : 	vertex
; 467  : 		points[6];
; 468  : 
; 469  : 	int
; 470  : 		segment,
; 471  : 		count,
; 472  : 		outcode,
; 473  : 		outcode2;
; 474  : 
; 475  : 	segment = smoke->segment;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 8d 7c fe ff
	ff		 mov	 DWORD PTR _segment$[ebp], ecx

; 476  : 
; 477  : 	set_d3d_fog_face_intensity ( 255 );

  00018	68 ff 00 00 00	 push	 255			; 000000ffH
  0001d	e8 00 00 00 00	 call	 ?set_d3d_fog_face_intensity@@YGXH@Z ; set_d3d_fog_face_intensity

; 478  : 
; 479  : 	//
; 480  : 	// Copy the 3d coordinates into a local quad
; 481  : 	//
; 482  : 
; 483  : 	points[0].x = smoke->trail->points[segment].point1.x * active_3d_environment->screen_i_scale;

  00022	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  0002e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00037	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0003c	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00040	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00045	6b c2 00	 imul	 eax, edx, 0
  00048	f3 0f 11 84 05
	80 fe ff ff	 movss	 DWORD PTR _points$[ebp+eax], xmm0

; 484  : 	points[0].y = smoke->trail->points[segment].point1.y * active_3d_environment->screen_j_scale;

  00051	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00054	8b 08		 mov	 ecx, DWORD PTR [eax]
  00056	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  0005d	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00066	f3 0f 10 44 10
	04		 movss	 xmm0, DWORD PTR [eax+edx+4]
  0006c	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00071	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00076	6b c2 00	 imul	 eax, edx, 0
  00079	f3 0f 11 84 05
	84 fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+4], xmm0

; 485  : 	points[0].z = smoke->trail->points[segment].point1.z;

  00082	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00085	8b 08		 mov	 ecx, DWORD PTR [eax]
  00087	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  0008e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00091	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00096	6b c9 00	 imul	 ecx, ecx, 0
  00099	8b 54 10 08	 mov	 edx, DWORD PTR [eax+edx+8]
  0009d	89 94 0d 88 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+8], edx

; 486  : 	points[0].u = smoke->trail->points[segment].texture_u;

  000a4	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  000b0	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  000b3	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  000b8	6b c9 00	 imul	 ecx, ecx, 0
  000bb	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  000bf	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 487  : 
; 488  : 	points[1].x = smoke->trail->points[segment].centre.x * active_3d_environment->screen_i_scale;

  000c6	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  000d2	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  000db	f3 0f 10 44 10
	18		 movss	 xmm0, DWORD PTR [eax+edx+24]
  000e1	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  000e5	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  000ea	c1 e2 00	 shl	 edx, 0
  000ed	f3 0f 11 84 15
	80 fe ff ff	 movss	 DWORD PTR _points$[ebp+edx], xmm0

; 489  : 	points[1].y = smoke->trail->points[segment].centre.y * active_3d_environment->screen_j_scale;

  000f6	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00102	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0010b	f3 0f 10 44 10
	1c		 movss	 xmm0, DWORD PTR [eax+edx+28]
  00111	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00116	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0011b	c1 e2 00	 shl	 edx, 0
  0011e	f3 0f 11 84 15
	84 fe ff ff	 movss	 DWORD PTR _points$[ebp+edx+4], xmm0

; 490  : 	points[1].z = smoke->trail->points[segment].centre.z;

  00127	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00133	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00136	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0013b	c1 e1 00	 shl	 ecx, 0
  0013e	8b 54 10 20	 mov	 edx, DWORD PTR [eax+edx+32]
  00142	89 94 0d 88 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+8], edx

; 491  : 	points[1].u = smoke->trail->points[segment].texture_u;

  00149	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0014c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014e	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00155	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00158	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0015d	c1 e1 00	 shl	 ecx, 0
  00160	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  00164	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 492  : 
; 493  : 	points[2].x = smoke->trail->points[segment].point2.x * active_3d_environment->screen_i_scale;

  0016b	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0016e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00170	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00177	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0017a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00180	f3 0f 10 44 10
	0c		 movss	 xmm0, DWORD PTR [eax+edx+12]
  00186	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  0018a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0018f	d1 e2		 shl	 edx, 1
  00191	f3 0f 11 84 15
	80 fe ff ff	 movss	 DWORD PTR _points$[ebp+edx], xmm0

; 494  : 	points[2].y = smoke->trail->points[segment].point2.y * active_3d_environment->screen_j_scale;

  0019a	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0019d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019f	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  001a6	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001af	f3 0f 10 44 10
	10		 movss	 xmm0, DWORD PTR [eax+edx+16]
  001b5	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  001ba	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  001bf	d1 e2		 shl	 edx, 1
  001c1	f3 0f 11 84 15
	84 fe ff ff	 movss	 DWORD PTR _points$[ebp+edx+4], xmm0

; 495  : 	points[2].z = smoke->trail->points[segment].point2.z;

  001ca	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  001cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cf	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  001d6	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  001d9	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  001de	d1 e1		 shl	 ecx, 1
  001e0	8b 54 10 14	 mov	 edx, DWORD PTR [eax+edx+20]
  001e4	89 94 0d 88 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+8], edx

; 496  : 	points[2].u = smoke->trail->points[segment].texture_u;

  001eb	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  001ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f0	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  001f7	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  001fa	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  001ff	d1 e1		 shl	 ecx, 1
  00201	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  00205	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 497  : 
; 498  : 	points[3].x = smoke->trail->points[segment+1].point1.x * active_3d_environment->screen_i_scale;

  0020c	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0020f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00211	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00217	83 c2 01	 add	 edx, 1
  0021a	6b c2 2c	 imul	 eax, edx, 44
  0021d	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00220	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00226	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0022b	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  0022f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00234	6b c8 03	 imul	 ecx, eax, 3
  00237	f3 0f 11 84 0d
	80 fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx], xmm0

; 499  : 	points[3].y = smoke->trail->points[segment+1].point1.y * active_3d_environment->screen_j_scale;

  00240	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00243	8b 08		 mov	 ecx, DWORD PTR [eax]
  00245	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  0024b	83 c2 01	 add	 edx, 1
  0024e	6b c2 2c	 imul	 eax, edx, 44
  00251	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00254	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0025a	f3 0f 10 44 01
	04		 movss	 xmm0, DWORD PTR [ecx+eax+4]
  00260	f3 0f 59 42 04	 mulss	 xmm0, DWORD PTR [edx+4]
  00265	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0026a	6b c8 03	 imul	 ecx, eax, 3
  0026d	f3 0f 11 84 0d
	84 fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx+4], xmm0

; 500  : 	points[3].z = smoke->trail->points[segment+1].point1.z;

  00276	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00279	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027b	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00281	83 c2 01	 add	 edx, 1
  00284	6b c2 2c	 imul	 eax, edx, 44
  00287	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0028a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0028f	6b d2 03	 imul	 edx, edx, 3
  00292	8b 44 01 08	 mov	 eax, DWORD PTR [ecx+eax+8]
  00296	89 84 15 88 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+8], eax

; 501  : 	points[3].u = smoke->trail->points[segment+1].texture_u;

  0029d	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  002a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a2	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  002a8	83 c2 01	 add	 edx, 1
  002ab	6b c2 2c	 imul	 eax, edx, 44
  002ae	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  002b1	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  002b6	6b d2 03	 imul	 edx, edx, 3
  002b9	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  002bd	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 502  : 
; 503  : 	points[4].x = smoke->trail->points[segment+1].centre.x * active_3d_environment->screen_i_scale;

  002c4	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  002c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c9	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  002cf	83 c2 01	 add	 edx, 1
  002d2	6b c2 2c	 imul	 eax, edx, 44
  002d5	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  002d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  002de	f3 0f 10 44 01
	18		 movss	 xmm0, DWORD PTR [ecx+eax+24]
  002e4	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  002e8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002ed	c1 e0 02	 shl	 eax, 2
  002f0	f3 0f 11 84 05
	80 fe ff ff	 movss	 DWORD PTR _points$[ebp+eax], xmm0

; 504  : 	points[4].y = smoke->trail->points[segment+1].centre.y * active_3d_environment->screen_j_scale;

  002f9	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  002fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fe	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00304	83 c2 01	 add	 edx, 1
  00307	6b c2 2c	 imul	 eax, edx, 44
  0030a	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0030d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00313	f3 0f 10 44 01
	1c		 movss	 xmm0, DWORD PTR [ecx+eax+28]
  00319	f3 0f 59 42 04	 mulss	 xmm0, DWORD PTR [edx+4]
  0031e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00323	c1 e0 02	 shl	 eax, 2
  00326	f3 0f 11 84 05
	84 fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+4], xmm0

; 505  : 	points[4].z = smoke->trail->points[segment+1].centre.z;

  0032f	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00332	8b 08		 mov	 ecx, DWORD PTR [eax]
  00334	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  0033a	83 c2 01	 add	 edx, 1
  0033d	6b c2 2c	 imul	 eax, edx, 44
  00340	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00343	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00348	c1 e2 02	 shl	 edx, 2
  0034b	8b 44 01 20	 mov	 eax, DWORD PTR [ecx+eax+32]
  0034f	89 84 15 88 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+8], eax

; 506  : 	points[4].u = smoke->trail->points[segment+1].texture_u;

  00356	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00359	8b 08		 mov	 ecx, DWORD PTR [eax]
  0035b	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00361	83 c2 01	 add	 edx, 1
  00364	6b c2 2c	 imul	 eax, edx, 44
  00367	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0036a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0036f	c1 e2 02	 shl	 edx, 2
  00372	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  00376	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 507  : 
; 508  : 	points[5].x = smoke->trail->points[segment+1].point2.x * active_3d_environment->screen_i_scale;

  0037d	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00380	8b 08		 mov	 ecx, DWORD PTR [eax]
  00382	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00388	83 c2 01	 add	 edx, 1
  0038b	6b c2 2c	 imul	 eax, edx, 44
  0038e	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00391	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00397	f3 0f 10 44 01
	0c		 movss	 xmm0, DWORD PTR [ecx+eax+12]
  0039d	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  003a1	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003a6	6b c8 05	 imul	 ecx, eax, 5
  003a9	f3 0f 11 84 0d
	80 fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx], xmm0

; 509  : 	points[5].y = smoke->trail->points[segment+1].point2.y * active_3d_environment->screen_j_scale;

  003b2	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  003b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b7	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  003bd	83 c2 01	 add	 edx, 1
  003c0	6b c2 2c	 imul	 eax, edx, 44
  003c3	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  003c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  003cc	f3 0f 10 44 01
	10		 movss	 xmm0, DWORD PTR [ecx+eax+16]
  003d2	f3 0f 59 42 04	 mulss	 xmm0, DWORD PTR [edx+4]
  003d7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003dc	6b c8 05	 imul	 ecx, eax, 5
  003df	f3 0f 11 84 0d
	84 fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx+4], xmm0

; 510  : 	points[5].z = smoke->trail->points[segment+1].point2.z;

  003e8	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  003eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ed	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  003f3	83 c2 01	 add	 edx, 1
  003f6	6b c2 2c	 imul	 eax, edx, 44
  003f9	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  003fc	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00401	6b d2 05	 imul	 edx, edx, 5
  00404	8b 44 01 14	 mov	 eax, DWORD PTR [ecx+eax+20]
  00408	89 84 15 88 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+8], eax

; 511  : 	points[5].u = smoke->trail->points[segment+1].texture_u;

  0040f	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00412	8b 08		 mov	 ecx, DWORD PTR [eax]
  00414	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  0041a	83 c2 01	 add	 edx, 1
  0041d	6b c2 2c	 imul	 eax, edx, 44
  00420	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00423	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00428	6b d2 05	 imul	 edx, edx, 5
  0042b	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  0042f	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 512  : 
; 513  : 	//
; 514  : 	// Transform the points and outcode the quad at the same time
; 515  : 	//
; 516  : 
; 517  : 	outcode = 0;

  00436	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _outcode$[ebp], 0

; 518  : 	outcode2 = CLIP_HITHER | CLIP_LEFT | CLIP_RIGHT | CLIP_TOP | CLIP_BOTTOM;

  00440	c7 85 70 fe ff
	ff 2f 00 00 00	 mov	 DWORD PTR _outcode2$[ebp], 47 ; 0000002fH

; 519  : 
; 520  : 	for ( count = 0; count < 6; count++ )

  0044a	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _count$[ebp], 0
  00454	eb 0f		 jmp	 SHORT $LN4@draw_3d_sm
$LN2@draw_3d_sm:
  00456	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  0045c	83 c0 01	 add	 eax, 1
  0045f	89 85 78 fe ff
	ff		 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_sm:
  00465	83 bd 78 fe ff
	ff 06		 cmp	 DWORD PTR _count$[ebp], 6
  0046c	0f 8d 1f 02 00
	00		 jge	 $LN3@draw_3d_sm

; 521  : 	{
; 522  : 
; 523  : 		if ( *( ( int * ) &points[count].z ) >= *( ( int * ) &clip_hither ) )

  00472	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00478	c1 e0 06	 shl	 eax, 6
  0047b	8b 8c 05 88 fe
	ff ff		 mov	 ecx, DWORD PTR _points$[ebp+eax+8]
  00482	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?clip_hither@@3MA
  00488	0f 8c b3 01 00
	00		 jl	 $LN5@draw_3d_sm

; 524  : 		{
; 525  : 
; 526  : 			float
; 527  : 				oxmax,
; 528  : 				oxmin,
; 529  : 				oymax,
; 530  : 				oymin,
; 531  : 				q,
; 532  : 				i,
; 533  : 				j;
; 534  : 		
; 535  : 			int
; 536  : 				ixmax,
; 537  : 				ixmin,
; 538  : 				iymax,
; 539  : 				iymin;
; 540  : 
; 541  : 			q = 1.0 / points[count].z;

  0048e	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00494	c1 e0 06	 shl	 eax, 6
  00497	f3 0f 5a 84 05
	88 fe ff ff	 cvtss2sd xmm0, DWORD PTR _points$[ebp+eax+8]
  004a0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  004a8	f2 0f 5e c8	 divsd	 xmm1, xmm0
  004ac	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  004b0	f3 0f 11 85 5c
	fe ff ff	 movss	 DWORD PTR _q$7[ebp], xmm0

; 542  : 
; 543  : 			i = ( points[count].x * q );

  004b8	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  004be	c1 e0 06	 shl	 eax, 6
  004c1	f3 0f 10 84 05
	80 fe ff ff	 movss	 xmm0, DWORD PTR _points$[ebp+eax]
  004ca	f3 0f 59 85 5c
	fe ff ff	 mulss	 xmm0, DWORD PTR _q$7[ebp]
  004d2	f3 0f 11 85 58
	fe ff ff	 movss	 DWORD PTR _i$6[ebp], xmm0

; 544  : 			j = ( points[count].y * q );

  004da	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  004e0	c1 e0 06	 shl	 eax, 6
  004e3	f3 0f 10 84 05
	84 fe ff ff	 movss	 xmm0, DWORD PTR _points$[ebp+eax+4]
  004ec	f3 0f 59 85 5c
	fe ff ff	 mulss	 xmm0, DWORD PTR _q$7[ebp]
  004f4	f3 0f 11 85 54
	fe ff ff	 movss	 DWORD PTR _j$5[ebp], xmm0

; 545  : 
; 546  : 			j = active_3d_environment->y_origin - j;

  004fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00501	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00506	f3 0f 5c 85 54
	fe ff ff	 subss	 xmm0, DWORD PTR _j$5[ebp]
  0050e	f3 0f 11 85 54
	fe ff ff	 movss	 DWORD PTR _j$5[ebp], xmm0

; 547  : 			i = active_3d_environment->x_origin + i;

  00516	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0051b	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00520	f3 0f 58 85 58
	fe ff ff	 addss	 xmm0, DWORD PTR _i$6[ebp]
  00528	f3 0f 11 85 58
	fe ff ff	 movss	 DWORD PTR _i$6[ebp], xmm0

; 548  : 
; 549  : 			points[count].j = j;

  00530	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00536	c1 e0 06	 shl	 eax, 6
  00539	f3 0f 10 85 54
	fe ff ff	 movss	 xmm0, DWORD PTR _j$5[ebp]
  00541	f3 0f 11 84 05
	94 fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+20], xmm0

; 550  : 			points[count].i = i;

  0054a	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00550	c1 e0 06	 shl	 eax, 6
  00553	f3 0f 10 85 58
	fe ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  0055b	f3 0f 11 84 05
	90 fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+16], xmm0

; 551  : 			points[count].q = q;

  00564	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  0056a	c1 e0 06	 shl	 eax, 6
  0056d	f3 0f 10 85 5c
	fe ff ff	 movss	 xmm0, DWORD PTR _q$7[ebp]
  00575	f3 0f 11 84 05
	8c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+12], xmm0

; 552  : 
; 553  : 			oxmax = active_viewport.x_max - i;

  0057e	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  00586	f3 0f 5c 85 58
	fe ff ff	 subss	 xmm0, DWORD PTR _i$6[ebp]
  0058e	f3 0f 11 85 6c
	fe ff ff	 movss	 DWORD PTR _oxmax$11[ebp], xmm0

; 554  : 			oxmin = i - active_viewport.x_min;

  00596	f3 0f 10 85 58
	fe ff ff	 movss	 xmm0, DWORD PTR _i$6[ebp]
  0059e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  005a6	f3 0f 11 85 68
	fe ff ff	 movss	 DWORD PTR _oxmin$10[ebp], xmm0

; 555  : 			oymax = active_viewport.y_max - j;

  005ae	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  005b6	f3 0f 5c 85 54
	fe ff ff	 subss	 xmm0, DWORD PTR _j$5[ebp]
  005be	f3 0f 11 85 64
	fe ff ff	 movss	 DWORD PTR _oymax$9[ebp], xmm0

; 556  : 			oymin = j - active_viewport.y_min;

  005c6	f3 0f 10 85 54
	fe ff ff	 movss	 xmm0, DWORD PTR _j$5[ebp]
  005ce	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  005d6	f3 0f 11 85 60
	fe ff ff	 movss	 DWORD PTR _oymin$8[ebp], xmm0

; 557  : 		
; 558  : 			ixmax = *( ( int * ) &oxmax );

  005de	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _oxmax$11[ebp]
  005e4	89 85 50 fe ff
	ff		 mov	 DWORD PTR _ixmax$4[ebp], eax

; 559  : 			ixmin = *( ( int * ) &oxmin );

  005ea	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _oxmin$10[ebp]
  005f0	89 85 4c fe ff
	ff		 mov	 DWORD PTR _ixmin$3[ebp], eax

; 560  : 			iymax = *( ( int * ) &oymax );

  005f6	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _oymax$9[ebp]
  005fc	89 85 48 fe ff
	ff		 mov	 DWORD PTR _iymax$2[ebp], eax

; 561  : 			iymin = *( ( int * ) &oymin );

  00602	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _oymin$8[ebp]
  00608	89 85 44 fe ff
	ff		 mov	 DWORD PTR _iymin$1[ebp], eax

; 562  : 		
; 563  : 			points[count].outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  0060e	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR _iymax$2[ebp]
  00614	50		 push	 eax
  00615	8b 8d 50 fe ff
	ff		 mov	 ecx, DWORD PTR _ixmax$4[ebp]
  0061b	51		 push	 ecx
  0061c	8b 95 44 fe ff
	ff		 mov	 edx, DWORD PTR _iymin$1[ebp]
  00622	52		 push	 edx
  00623	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR _ixmin$3[ebp]
  00629	50		 push	 eax
  0062a	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  0062f	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR _count$[ebp]
  00635	c1 e1 06	 shl	 ecx, 6
  00638	88 84 0d ac fe
	ff ff		 mov	 BYTE PTR _points$[ebp+ecx+44], al

; 564  : 		}
; 565  : 		else

  0063f	eb 11		 jmp	 SHORT $LN6@draw_3d_sm
$LN5@draw_3d_sm:

; 566  : 		{
; 567  : 
; 568  : 			points[count].outcode = CLIP_HITHER;

  00641	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00647	c1 e0 06	 shl	 eax, 6
  0064a	c6 84 05 ac fe
	ff ff 20	 mov	 BYTE PTR _points$[ebp+eax+44], 32 ; 00000020H
$LN6@draw_3d_sm:

; 569  : 		}
; 570  : 
; 571  : 		outcode |= points[count].outcode;

  00652	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00658	c1 e0 06	 shl	 eax, 6
  0065b	0f b6 8c 05 ac
	fe ff ff	 movzx	 ecx, BYTE PTR _points$[ebp+eax+44]
  00663	0b 8d 74 fe ff
	ff		 or	 ecx, DWORD PTR _outcode$[ebp]
  00669	89 8d 74 fe ff
	ff		 mov	 DWORD PTR _outcode$[ebp], ecx

; 572  : 		outcode2 &= points[count].outcode;

  0066f	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00675	c1 e0 06	 shl	 eax, 6
  00678	0f b6 8c 05 ac
	fe ff ff	 movzx	 ecx, BYTE PTR _points$[ebp+eax+44]
  00680	23 8d 70 fe ff
	ff		 and	 ecx, DWORD PTR _outcode2$[ebp]
  00686	89 8d 70 fe ff
	ff		 mov	 DWORD PTR _outcode2$[ebp], ecx

; 573  : 	}

  0068c	e9 c5 fd ff ff	 jmp	 $LN2@draw_3d_sm
$LN3@draw_3d_sm:

; 574  : 
; 575  : 	if ( outcode2 == 0 )

  00691	83 bd 70 fe ff
	ff 00		 cmp	 DWORD PTR _outcode2$[ebp], 0
  00698	0f 85 53 06 00
	00		 jne	 $LN7@draw_3d_sm

; 576  : 	{
; 577  : 
; 578  : 		points[0].u = smoke->trail->points[segment].texture_u;

  0069e	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  006a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  006a3	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  006aa	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  006ad	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  006b2	6b c9 00	 imul	 ecx, ecx, 0
  006b5	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  006b9	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 579  : 		points[0].v = 0;

  006c0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006c5	6b c8 00	 imul	 ecx, eax, 0
  006c8	0f 57 c0	 xorps	 xmm0, xmm0
  006cb	f3 0f 11 84 0d
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx+28], xmm0

; 580  : 		points[0].colour = smoke->trail->points[segment].colour.colour;

  006d4	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  006d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  006d9	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  006e0	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  006e3	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  006e8	6b c9 00	 imul	 ecx, ecx, 0
  006eb	8b 54 10 28	 mov	 edx, DWORD PTR [eax+edx+40]
  006ef	89 94 0d b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+48], edx

; 581  : 
; 582  : 		points[3].u = smoke->trail->points[segment+1].texture_u;

  006f6	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  006f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  006fb	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00701	83 c2 01	 add	 edx, 1
  00704	6b c2 2c	 imul	 eax, edx, 44
  00707	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0070a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0070f	6b d2 03	 imul	 edx, edx, 3
  00712	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  00716	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 583  : 		points[3].v = 0;

  0071d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00722	6b c8 03	 imul	 ecx, eax, 3
  00725	0f 57 c0	 xorps	 xmm0, xmm0
  00728	f3 0f 11 84 0d
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx+28], xmm0

; 584  : 		points[3].colour = smoke->trail->points[segment+1].colour.colour;

  00731	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00734	8b 08		 mov	 ecx, DWORD PTR [eax]
  00736	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  0073c	83 c2 01	 add	 edx, 1
  0073f	6b c2 2c	 imul	 eax, edx, 44
  00742	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00745	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0074a	6b d2 03	 imul	 edx, edx, 3
  0074d	8b 44 01 28	 mov	 eax, DWORD PTR [ecx+eax+40]
  00751	89 84 15 b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+48], eax

; 585  : 
; 586  : 		points[4].u = smoke->trail->points[segment+1].texture_u;

  00758	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0075b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0075d	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00763	83 c2 01	 add	 edx, 1
  00766	6b c2 2c	 imul	 eax, edx, 44
  00769	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0076c	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00771	c1 e2 02	 shl	 edx, 2
  00774	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  00778	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 587  : 		points[4].v = 0.5;

  0077f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00784	c1 e0 02	 shl	 eax, 2
  00787	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0078f	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 588  : 		points[4].colour = smoke->trail->points[segment+1].colour.colour;

  00798	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0079b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0079d	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  007a3	83 c2 01	 add	 edx, 1
  007a6	6b c2 2c	 imul	 eax, edx, 44
  007a9	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  007ac	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  007b1	c1 e2 02	 shl	 edx, 2
  007b4	8b 44 01 28	 mov	 eax, DWORD PTR [ecx+eax+40]
  007b8	89 84 15 b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+48], eax

; 589  : 
; 590  : 		points[0].next_vertex = &points[3];

  007bf	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007c4	6b c8 03	 imul	 ecx, eax, 3
  007c7	8d 94 0d 80 fe
	ff ff		 lea	 edx, DWORD PTR _points$[ebp+ecx]
  007ce	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007d3	6b c8 00	 imul	 ecx, eax, 0
  007d6	89 94 0d a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+40], edx

; 591  : 		points[3].next_vertex = &points[4];

  007dd	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007e2	c1 e0 02	 shl	 eax, 2
  007e5	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  007ec	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  007f1	6b c2 03	 imul	 eax, edx, 3
  007f4	89 8c 05 a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+eax+40], ecx

; 592  : 		points[4].next_vertex = NULL;

  007fb	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00800	c1 e0 02	 shl	 eax, 2
  00803	c7 84 05 a8 fe
	ff ff 00 00 00
	00		 mov	 DWORD PTR _points$[ebp+eax+40], 0

; 593  : 
; 594  : 		render_smoke_trail_polygon ( &points[0], smoke->trail->texture, smoke->trail->additive );

  0080e	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00811	8b 08		 mov	 ecx, DWORD PTR [eax]
  00813	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00816	52		 push	 edx
  00817	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0081a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0081c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0081e	52		 push	 edx
  0081f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00824	6b c8 00	 imul	 ecx, eax, 0
  00827	8d 94 0d 80 fe
	ff ff		 lea	 edx, DWORD PTR _points$[ebp+ecx]
  0082e	52		 push	 edx
  0082f	e8 00 00 00 00	 call	 ?render_smoke_trail_polygon@@YGXPAUVERTEX@@PAUSCREEN@@H@Z ; render_smoke_trail_polygon

; 595  : 
; 596  : 		points[0].u = smoke->trail->points[segment].texture_u;

  00834	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00837	8b 08		 mov	 ecx, DWORD PTR [eax]
  00839	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00840	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00843	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00848	6b c9 00	 imul	 ecx, ecx, 0
  0084b	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  0084f	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 597  : 		points[0].v = 0;

  00856	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0085b	6b c8 00	 imul	 ecx, eax, 0
  0085e	0f 57 c0	 xorps	 xmm0, xmm0
  00861	f3 0f 11 84 0d
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx+28], xmm0

; 598  : 		points[0].colour = smoke->trail->points[segment].colour.colour;

  0086a	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0086d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0086f	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00876	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00879	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0087e	6b c9 00	 imul	 ecx, ecx, 0
  00881	8b 54 10 28	 mov	 edx, DWORD PTR [eax+edx+40]
  00885	89 94 0d b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+48], edx

; 599  : 
; 600  : 		points[1].u = smoke->trail->points[segment].texture_u;

  0088c	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0088f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00891	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00898	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0089b	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  008a0	c1 e1 00	 shl	 ecx, 0
  008a3	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  008a7	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 601  : 		points[1].v = 0.5;

  008ae	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008b3	c1 e0 00	 shl	 eax, 0
  008b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  008be	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 602  : 		points[1].colour = smoke->trail->points[segment].colour.colour;

  008c7	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  008ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  008cc	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  008d3	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  008d6	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  008db	c1 e1 00	 shl	 ecx, 0
  008de	8b 54 10 28	 mov	 edx, DWORD PTR [eax+edx+40]
  008e2	89 94 0d b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+48], edx

; 603  : 
; 604  : 		points[4].u = smoke->trail->points[segment+1].texture_u;

  008e9	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  008ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  008ee	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  008f4	83 c2 01	 add	 edx, 1
  008f7	6b c2 2c	 imul	 eax, edx, 44
  008fa	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  008fd	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00902	c1 e2 02	 shl	 edx, 2
  00905	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  00909	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 605  : 		points[4].v = 0.5;

  00910	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00915	c1 e0 02	 shl	 eax, 2
  00918	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00920	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 606  : 		points[4].colour = smoke->trail->points[segment+1].colour.colour;

  00929	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  0092c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0092e	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00934	83 c2 01	 add	 edx, 1
  00937	6b c2 2c	 imul	 eax, edx, 44
  0093a	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0093d	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00942	c1 e2 02	 shl	 edx, 2
  00945	8b 44 01 28	 mov	 eax, DWORD PTR [ecx+eax+40]
  00949	89 84 15 b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+48], eax

; 607  : 
; 608  : 		points[0].next_vertex = &points[4];

  00950	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00955	c1 e0 02	 shl	 eax, 2
  00958	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  0095f	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00964	6b c2 00	 imul	 eax, edx, 0
  00967	89 8c 05 a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+eax+40], ecx

; 609  : 		points[4].next_vertex = &points[1];

  0096e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00973	c1 e0 00	 shl	 eax, 0
  00976	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  0097d	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00982	c1 e2 02	 shl	 edx, 2
  00985	89 8c 15 a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+40], ecx

; 610  : 		points[1].next_vertex = NULL;

  0098c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00991	c1 e0 00	 shl	 eax, 0
  00994	c7 84 05 a8 fe
	ff ff 00 00 00
	00		 mov	 DWORD PTR _points$[ebp+eax+40], 0

; 611  : 
; 612  : 		render_smoke_trail_polygon ( &points[0], smoke->trail->texture, smoke->trail->additive );

  0099f	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  009a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  009a4	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  009a7	52		 push	 edx
  009a8	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  009ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  009ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  009af	52		 push	 edx
  009b0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009b5	6b c8 00	 imul	 ecx, eax, 0
  009b8	8d 94 0d 80 fe
	ff ff		 lea	 edx, DWORD PTR _points$[ebp+ecx]
  009bf	52		 push	 edx
  009c0	e8 00 00 00 00	 call	 ?render_smoke_trail_polygon@@YGXPAUVERTEX@@PAUSCREEN@@H@Z ; render_smoke_trail_polygon

; 613  : 
; 614  : 		points[1].u = smoke->trail->points[segment].texture_u;

  009c5	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  009c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  009ca	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  009d1	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  009d4	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  009d9	c1 e1 00	 shl	 ecx, 0
  009dc	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  009e0	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 615  : 		points[1].v = 0.5;

  009e7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009ec	c1 e0 00	 shl	 eax, 0
  009ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  009f7	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 616  : 		points[1].colour = smoke->trail->points[segment].colour.colour;

  00a00	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00a03	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a05	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00a0c	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00a0f	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00a14	c1 e1 00	 shl	 ecx, 0
  00a17	8b 54 10 28	 mov	 edx, DWORD PTR [eax+edx+40]
  00a1b	89 94 0d b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+48], edx

; 617  : 
; 618  : 		points[2].u = smoke->trail->points[segment].texture_u;

  00a22	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00a25	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a27	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00a2e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00a31	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00a36	d1 e1		 shl	 ecx, 1
  00a38	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  00a3c	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 619  : 		points[2].v = 1;

  00a43	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a48	d1 e0		 shl	 eax, 1
  00a4a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a52	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 620  : 		points[2].colour = smoke->trail->points[segment].colour.colour;

  00a5b	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00a5e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a60	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00a67	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00a6a	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00a6f	d1 e1		 shl	 ecx, 1
  00a71	8b 54 10 28	 mov	 edx, DWORD PTR [eax+edx+40]
  00a75	89 94 0d b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+48], edx

; 621  : 
; 622  : 		points[4].u = smoke->trail->points[segment+1].texture_u;

  00a7c	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00a7f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a81	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00a87	83 c2 01	 add	 edx, 1
  00a8a	6b c2 2c	 imul	 eax, edx, 44
  00a8d	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00a90	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00a95	c1 e2 02	 shl	 edx, 2
  00a98	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  00a9c	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 623  : 		points[4].v = 0.5;

  00aa3	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00aa8	c1 e0 02	 shl	 eax, 2
  00aab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00ab3	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 624  : 		points[4].colour = smoke->trail->points[segment+1].colour.colour;

  00abc	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00abf	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ac1	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00ac7	83 c2 01	 add	 edx, 1
  00aca	6b c2 2c	 imul	 eax, edx, 44
  00acd	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00ad0	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00ad5	c1 e2 02	 shl	 edx, 2
  00ad8	8b 44 01 28	 mov	 eax, DWORD PTR [ecx+eax+40]
  00adc	89 84 15 b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+48], eax

; 625  : 
; 626  : 		points[1].next_vertex = &points[4];

  00ae3	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00ae8	c1 e0 02	 shl	 eax, 2
  00aeb	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  00af2	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00af7	c1 e2 00	 shl	 edx, 0
  00afa	89 8c 15 a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+40], ecx

; 627  : 		points[4].next_vertex = &points[2];

  00b01	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b06	d1 e0		 shl	 eax, 1
  00b08	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  00b0f	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00b14	c1 e2 02	 shl	 edx, 2
  00b17	89 8c 15 a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+40], ecx

; 628  : 		points[2].next_vertex = NULL;

  00b1e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b23	d1 e0		 shl	 eax, 1
  00b25	c7 84 05 a8 fe
	ff ff 00 00 00
	00		 mov	 DWORD PTR _points$[ebp+eax+40], 0

; 629  : 
; 630  : 		render_smoke_trail_polygon ( &points[1], smoke->trail->texture, smoke->trail->additive );

  00b30	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00b33	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b35	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00b38	52		 push	 edx
  00b39	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00b3c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b3e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00b40	52		 push	 edx
  00b41	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b46	c1 e0 00	 shl	 eax, 0
  00b49	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  00b50	51		 push	 ecx
  00b51	e8 00 00 00 00	 call	 ?render_smoke_trail_polygon@@YGXPAUVERTEX@@PAUSCREEN@@H@Z ; render_smoke_trail_polygon

; 631  : 
; 632  : 		points[2].u = smoke->trail->points[segment].texture_u;

  00b56	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00b59	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b5b	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00b62	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00b65	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00b6a	d1 e1		 shl	 ecx, 1
  00b6c	8b 54 10 24	 mov	 edx, DWORD PTR [eax+edx+36]
  00b70	89 94 0d 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+24], edx

; 633  : 		points[2].v = 1;

  00b77	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b7c	d1 e0		 shl	 eax, 1
  00b7e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00b86	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 634  : 		points[2].colour = smoke->trail->points[segment].colour.colour;

  00b8f	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00b92	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b94	6b 95 7c fe ff
	ff 2c		 imul	 edx, DWORD PTR _segment$[ebp], 44
  00b9b	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00b9e	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00ba3	d1 e1		 shl	 ecx, 1
  00ba5	8b 54 10 28	 mov	 edx, DWORD PTR [eax+edx+40]
  00ba9	89 94 0d b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+ecx+48], edx

; 635  : 
; 636  : 		points[4].u = smoke->trail->points[segment+1].texture_u;

  00bb0	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00bb3	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bb5	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00bbb	83 c2 01	 add	 edx, 1
  00bbe	6b c2 2c	 imul	 eax, edx, 44
  00bc1	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00bc4	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00bc9	c1 e2 02	 shl	 edx, 2
  00bcc	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  00bd0	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 637  : 		points[4].v = 0.5;

  00bd7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00bdc	c1 e0 02	 shl	 eax, 2
  00bdf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00be7	f3 0f 11 84 05
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+eax+28], xmm0

; 638  : 		points[4].colour = smoke->trail->points[segment+1].colour.colour;

  00bf0	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00bf3	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bf5	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00bfb	83 c2 01	 add	 edx, 1
  00bfe	6b c2 2c	 imul	 eax, edx, 44
  00c01	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00c04	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00c09	c1 e2 02	 shl	 edx, 2
  00c0c	8b 44 01 28	 mov	 eax, DWORD PTR [ecx+eax+40]
  00c10	89 84 15 b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+48], eax

; 639  : 
; 640  : 		points[5].u = smoke->trail->points[segment+1].texture_u;

  00c17	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00c1a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c1c	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00c22	83 c2 01	 add	 edx, 1
  00c25	6b c2 2c	 imul	 eax, edx, 44
  00c28	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00c2b	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00c30	6b d2 05	 imul	 edx, edx, 5
  00c33	8b 44 01 24	 mov	 eax, DWORD PTR [ecx+eax+36]
  00c37	89 84 15 98 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+24], eax

; 641  : 		points[5].v = 1;

  00c3e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00c43	6b c8 05	 imul	 ecx, eax, 5
  00c46	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00c4e	f3 0f 11 84 0d
	9c fe ff ff	 movss	 DWORD PTR _points$[ebp+ecx+28], xmm0

; 642  : 		points[5].colour = smoke->trail->points[segment+1].colour.colour;

  00c57	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00c5a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c5c	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _segment$[ebp]
  00c62	83 c2 01	 add	 edx, 1
  00c65	6b c2 2c	 imul	 eax, edx, 44
  00c68	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00c6b	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00c70	6b d2 05	 imul	 edx, edx, 5
  00c73	8b 44 01 28	 mov	 eax, DWORD PTR [ecx+eax+40]
  00c77	89 84 15 b0 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+48], eax

; 643  : 
; 644  : 		points[2].next_vertex = &points[4];

  00c7e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00c83	c1 e0 02	 shl	 eax, 2
  00c86	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  00c8d	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00c92	d1 e2		 shl	 edx, 1
  00c94	89 8c 15 a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+edx+40], ecx

; 645  : 		points[4].next_vertex = &points[5];

  00c9b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00ca0	6b c8 05	 imul	 ecx, eax, 5
  00ca3	8d 94 0d 80 fe
	ff ff		 lea	 edx, DWORD PTR _points$[ebp+ecx]
  00caa	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00caf	c1 e0 02	 shl	 eax, 2
  00cb2	89 94 05 a8 fe
	ff ff		 mov	 DWORD PTR _points$[ebp+eax+40], edx

; 646  : 		points[5].next_vertex = NULL;

  00cb9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00cbe	6b c8 05	 imul	 ecx, eax, 5
  00cc1	c7 84 0d a8 fe
	ff ff 00 00 00
	00		 mov	 DWORD PTR _points$[ebp+ecx+40], 0

; 647  : 
; 648  : 		render_smoke_trail_polygon ( &points[2], smoke->trail->texture, smoke->trail->additive );

  00ccc	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00ccf	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cd1	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00cd4	52		 push	 edx
  00cd5	8b 45 08	 mov	 eax, DWORD PTR _smoke$[ebp]
  00cd8	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cda	8b 11		 mov	 edx, DWORD PTR [ecx]
  00cdc	52		 push	 edx
  00cdd	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00ce2	d1 e0		 shl	 eax, 1
  00ce4	8d 8c 05 80 fe
	ff ff		 lea	 ecx, DWORD PTR _points$[ebp+eax]
  00ceb	51		 push	 ecx
  00cec	e8 00 00 00 00	 call	 ?render_smoke_trail_polygon@@YGXPAUVERTEX@@PAUSCREEN@@H@Z ; render_smoke_trail_polygon
$LN7@draw_3d_sm:

; 649  : 	}
; 650  : }

  00cf1	5f		 pop	 edi
  00cf2	5e		 pop	 esi
  00cf3	5b		 pop	 ebx
  00cf4	8b e5		 mov	 esp, ebp
  00cf6	5d		 pop	 ebp
  00cf7	c2 04 00	 ret	 4
?draw_3d_smoke_trail@@YGXPAUOBJECT_3D_SMOKE_TRAIL@@@Z ENDP ; draw_3d_smoke_trail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?insert_zbiased_smoke_trail_into_3d_scene@@YGXHMHPAUSCREEN@@MMPAUSMOKE_TRAIL_DATA@@@Z
_TEXT	SEGMENT
tv456 = -144						; size = 4
$T1 = -140						; size = 4
$T2 = -136						; size = 4
_average_z$3 = -68					; size = 4
_buffer$4 = -64						; size = 4
_texture_temp_distance$5 = -60				; size = 4
_length_vector$6 = -56					; size = 12
_centre_point2$7 = -44					; size = 12
_centre_point1$8 = -32					; size = 12
_texture_u$9 = -20					; size = 4
_smoke_trail$10 = -16					; size = 4
_visible$ = -12						; size = 4
_count$ = -8						; size = 4
_rotated_points$ = -4					; size = 4
_number_of_points$ = 8					; size = 4
_zbias$ = 12						; size = 4
_additive$ = 16						; size = 4
_texture$ = 20						; size = 4
_texture_distance$ = 24					; size = 4
_texture_size$ = 28					; size = 4
_points$ = 32						; size = 4
?insert_zbiased_smoke_trail_into_3d_scene@@YGXHMHPAUSCREEN@@MMPAUSMOKE_TRAIL_DATA@@@Z PROC ; insert_zbiased_smoke_trail_into_3d_scene, COMDAT

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 183  : 
; 184  : 	smoke_trail_data
; 185  : 		*rotated_points;
; 186  : 
; 187  : 	int
; 188  : 		count,
; 189  : 		visible;
; 190  : 
; 191  : 	//
; 192  : 	// First, copy the ROTATED point data over to an internal 3d visual buffer ( checking for visibility )
; 193  : 	//
; 194  : 
; 195  : 	visible = FALSE;

  0000c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _visible$[ebp], 0

; 196  : 
; 197  : 	rotated_points = get_smoke_trail_point_data ( number_of_points );

  00013	8b 45 08	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?get_smoke_trail_point_data@@YGPAUSMOKE_TRAIL_DATA@@H@Z ; get_smoke_trail_point_data
  0001c	89 45 fc	 mov	 DWORD PTR _rotated_points$[ebp], eax

; 198  : 
; 199  : 	if ( rotated_points )

  0001f	83 7d fc 00	 cmp	 DWORD PTR _rotated_points$[ebp], 0
  00023	0f 84 01 05 00
	00		 je	 $LN15@insert_zbi

; 200  : 	{
; 201  : 	
; 202  : 		for ( count = 0; count < number_of_points; count++ )

  00029	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00030	eb 09		 jmp	 SHORT $LN4@insert_zbi
$LN2@insert_zbi:
  00032	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00035	83 c0 01	 add	 eax, 1
  00038	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@insert_zbi:
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0003e	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  00041	0f 8d fd 00 00
	00		 jge	 $LN3@insert_zbi

; 203  : 		{
; 204  : 	
; 205  : 			get_position_3d_relative_position ( &points[count].point1, &rotated_points[count].point1 );

  00047	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  0004b	03 45 fc	 add	 eax, DWORD PTR _rotated_points$[ebp]
  0004e	50		 push	 eax
  0004f	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  00053	03 4d 20	 add	 ecx, DWORD PTR _points$[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ?get_position_3d_relative_position@@YGXPAUVEC3D@@0@Z ; get_position_3d_relative_position

; 206  : 	
; 207  : 			if ( rotated_points[count].point1.z > clip_hither )

  0005c	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  00063	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  00069	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?clip_hither@@3MA
  00070	76 07		 jbe	 SHORT $LN12@insert_zbi

; 208  : 			{
; 209  : 	
; 210  : 				visible = TRUE;

  00072	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _visible$[ebp], 1
$LN12@insert_zbi:

; 211  : 			}
; 212  : 	
; 213  : 			get_position_3d_relative_position ( &points[count].point2, &rotated_points[count].point2 );

  00079	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  00080	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00084	52		 push	 edx
  00085	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  00089	8b 4d 20	 mov	 ecx, DWORD PTR _points$[ebp]
  0008c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00090	52		 push	 edx
  00091	e8 00 00 00 00	 call	 ?get_position_3d_relative_position@@YGXPAUVEC3D@@0@Z ; get_position_3d_relative_position

; 214  : 	
; 215  : 			if ( rotated_points[count].point2.z > clip_hither )

  00096	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  0009d	f3 0f 10 44 01
	14		 movss	 xmm0, DWORD PTR [ecx+eax+20]
  000a3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?clip_hither@@3MA
  000aa	76 07		 jbe	 SHORT $LN13@insert_zbi

; 216  : 			{
; 217  : 	
; 218  : 				visible = TRUE;

  000ac	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _visible$[ebp], 1
$LN13@insert_zbi:

; 219  : 			}
; 220  : 
; 221  : 			rotated_points[count].centre.x = ( rotated_points[count].point1.x + rotated_points[count].point2.x ) / 2;

  000b3	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  000b7	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  000be	8b 75 fc	 mov	 esi, DWORD PTR _rotated_points$[ebp]
  000c1	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  000c6	f3 0f 58 44 0e
	0c		 addss	 xmm0, DWORD PTR [esi+ecx+12]
  000cc	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  000d4	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  000d8	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  000db	f3 0f 11 44 01
	18		 movss	 DWORD PTR [ecx+eax+24], xmm0

; 222  : 			rotated_points[count].centre.y = ( rotated_points[count].point1.y + rotated_points[count].point2.y ) / 2;

  000e1	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  000e5	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  000e9	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  000ec	8b 75 fc	 mov	 esi, DWORD PTR _rotated_points$[ebp]
  000ef	f3 0f 10 44 02
	04		 movss	 xmm0, DWORD PTR [edx+eax+4]
  000f5	f3 0f 58 44 0e
	10		 addss	 xmm0, DWORD PTR [esi+ecx+16]
  000fb	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00103	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  00107	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  0010a	f3 0f 11 44 01
	1c		 movss	 DWORD PTR [ecx+eax+28], xmm0

; 223  : 			rotated_points[count].centre.z = ( rotated_points[count].point1.z + rotated_points[count].point2.z ) / 2;

  00110	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  00114	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  00118	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  0011b	8b 75 fc	 mov	 esi, DWORD PTR _rotated_points$[ebp]
  0011e	f3 0f 10 44 02
	08		 movss	 xmm0, DWORD PTR [edx+eax+8]
  00124	f3 0f 58 44 0e
	14		 addss	 xmm0, DWORD PTR [esi+ecx+20]
  0012a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00132	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  00139	f3 0f 11 44 01
	20		 movss	 DWORD PTR [ecx+eax+32], xmm0

; 224  : 		}

  0013f	e9 ee fe ff ff	 jmp	 $LN2@insert_zbi
$LN3@insert_zbi:

; 225  : 	
; 226  : 		if ( visible )

  00144	83 7d f4 00	 cmp	 DWORD PTR _visible$[ebp], 0
  00148	0f 84 d3 03 00
	00		 je	 $LN14@insert_zbi

; 227  : 		{
; 228  : 	
; 229  : 			smoke_trail_information
; 230  : 				*smoke_trail;
; 231  : 	
; 232  : 			float
; 233  : 				texture_u;
; 234  : 	
; 235  : 			//
; 236  : 			// Some part ( or all ) of the smoke trail is visible - generate a smoke trail header.
; 237  : 			//
; 238  : 	
; 239  : 			smoke_trail = get_smoke_trail_header ();

  0014e	e8 00 00 00 00	 call	 ?get_smoke_trail_header@@YGPAUSMOKE_TRAIL_INFORMATION@@XZ ; get_smoke_trail_header
  00153	89 45 f0	 mov	 DWORD PTR _smoke_trail$10[ebp], eax

; 240  : 
; 241  : 			if ( smoke_trail )

  00156	83 7d f0 00	 cmp	 DWORD PTR _smoke_trail$10[ebp], 0
  0015a	0f 84 bf 03 00
	00		 je	 $LN16@insert_zbi

; 242  : 			{
; 243  : 
; 244  : 				smoke_trail->additive = additive;

  00160	8b 45 f0	 mov	 eax, DWORD PTR _smoke_trail$10[ebp]
  00163	8b 4d 10	 mov	 ecx, DWORD PTR _additive$[ebp]
  00166	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 245  : 
; 246  : 				smoke_trail->texture = texture;

  00169	8b 45 f0	 mov	 eax, DWORD PTR _smoke_trail$10[ebp]
  0016c	8b 4d 14	 mov	 ecx, DWORD PTR _texture$[ebp]
  0016f	89 08		 mov	 DWORD PTR [eax], ecx

; 247  : 		
; 248  : 				smoke_trail->texture_size = texture_size;

  00171	8b 45 f0	 mov	 eax, DWORD PTR _smoke_trail$10[ebp]
  00174	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _texture_size$[ebp]
  00179	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 249  : 		
; 250  : 				smoke_trail->number_of_points = number_of_points;

  0017e	8b 45 f0	 mov	 eax, DWORD PTR _smoke_trail$10[ebp]
  00181	8b 4d 08	 mov	 ecx, DWORD PTR _number_of_points$[ebp]
  00184	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 251  : 		
; 252  : 				smoke_trail->points = rotated_points;

  00187	8b 45 f0	 mov	 eax, DWORD PTR _smoke_trail$10[ebp]
  0018a	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  0018d	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 253  : 		
; 254  : 				//
; 255  : 				// Go calculate the u texture coordinates
; 256  : 				//
; 257  : 		
; 258  : 				texture_u = texture_distance / texture_size;

  00190	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _texture_distance$[ebp]
  00195	f3 0f 5e 45 1c	 divss	 xmm0, DWORD PTR _texture_size$[ebp]
  0019a	f3 0f 11 45 ec	 movss	 DWORD PTR _texture_u$9[ebp], xmm0

; 259  : 		
; 260  : 				rotated_points[0].texture_u = texture_u;

  0019f	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  001a4	6b c8 00	 imul	 ecx, eax, 0
  001a7	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  001aa	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _texture_u$9[ebp]
  001af	f3 0f 11 44 0a
	24		 movss	 DWORD PTR [edx+ecx+36], xmm0

; 261  : 
; 262  : 				rotated_points[0].colour = light_smoke_colour ( points[0].colour, additive );

  001b5	8b 45 10	 mov	 eax, DWORD PTR _additive$[ebp]
  001b8	50		 push	 eax
  001b9	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  001be	6b d1 00	 imul	 edx, ecx, 0
  001c1	8b 45 20	 mov	 eax, DWORD PTR _points$[ebp]
  001c4	8b 4c 10 28	 mov	 ecx, DWORD PTR [eax+edx+40]
  001c8	51		 push	 ecx
  001c9	e8 00 00 00 00	 call	 ?light_smoke_colour@@YG?AUREAL_COLOUR@@U1@H@Z ; light_smoke_colour
  001ce	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  001d4	ba 2c 00 00 00	 mov	 edx, 44			; 0000002cH
  001d9	6b c2 00	 imul	 eax, edx, 0
  001dc	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  001df	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  001e5	89 54 01 28	 mov	 DWORD PTR [ecx+eax+40], edx

; 263  : 		
; 264  : 				for ( count = 0; count < ( number_of_points - 1 ); count++ )

  001e9	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  001f0	eb 09		 jmp	 SHORT $LN7@insert_zbi
$LN5@insert_zbi:
  001f2	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  001f5	83 c0 01	 add	 eax, 1
  001f8	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@insert_zbi:
  001fb	8b 45 08	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  001fe	83 e8 01	 sub	 eax, 1
  00201	39 45 f8	 cmp	 DWORD PTR _count$[ebp], eax
  00204	0f 8d b5 01 00
	00		 jge	 $LN6@insert_zbi

; 265  : 				{
; 266  : 		
; 267  : 					vec3d
; 268  : 						centre_point1,
; 269  : 						centre_point2,
; 270  : 						length_vector;
; 271  : 		
; 272  : 					float
; 273  : 						texture_temp_distance;
; 274  : 		
; 275  : 					centre_point1.x = ( points[count].point1.x + points[count].point2.x ) / 2;

  0020a	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  0020e	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  00212	8b 55 20	 mov	 edx, DWORD PTR _points$[ebp]
  00215	8b 75 20	 mov	 esi, DWORD PTR _points$[ebp]
  00218	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0021d	f3 0f 58 44 0e
	0c		 addss	 xmm0, DWORD PTR [esi+ecx+12]
  00223	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  0022b	f3 0f 11 45 e0	 movss	 DWORD PTR _centre_point1$8[ebp], xmm0

; 276  : 					centre_point1.y = ( points[count].point1.y + points[count].point2.y ) / 2;

  00230	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  00234	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  00238	8b 55 20	 mov	 edx, DWORD PTR _points$[ebp]
  0023b	8b 75 20	 mov	 esi, DWORD PTR _points$[ebp]
  0023e	f3 0f 10 44 02
	04		 movss	 xmm0, DWORD PTR [edx+eax+4]
  00244	f3 0f 58 44 0e
	10		 addss	 xmm0, DWORD PTR [esi+ecx+16]
  0024a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00252	f3 0f 11 45 e4	 movss	 DWORD PTR _centre_point1$8[ebp+4], xmm0

; 277  : 					centre_point1.z = ( points[count].point1.z + points[count].point2.z ) / 2;

  00257	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  0025b	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  0025f	8b 55 20	 mov	 edx, DWORD PTR _points$[ebp]
  00262	8b 75 20	 mov	 esi, DWORD PTR _points$[ebp]
  00265	f3 0f 10 44 02
	08		 movss	 xmm0, DWORD PTR [edx+eax+8]
  0026b	f3 0f 58 44 0e
	14		 addss	 xmm0, DWORD PTR [esi+ecx+20]
  00271	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00279	f3 0f 11 45 e8	 movss	 DWORD PTR _centre_point1$8[ebp+8], xmm0

; 278  : 		
; 279  : 					centre_point2.x = ( points[count+1].point1.x + points[count+1].point2.x ) / 2;

  0027e	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00281	83 c0 01	 add	 eax, 1
  00284	6b c8 2c	 imul	 ecx, eax, 44
  00287	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  0028a	83 c2 01	 add	 edx, 1
  0028d	6b c2 2c	 imul	 eax, edx, 44
  00290	8b 55 20	 mov	 edx, DWORD PTR _points$[ebp]
  00293	8b 75 20	 mov	 esi, DWORD PTR _points$[ebp]
  00296	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0029b	f3 0f 58 44 06
	0c		 addss	 xmm0, DWORD PTR [esi+eax+12]
  002a1	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  002a9	f3 0f 11 45 d4	 movss	 DWORD PTR _centre_point2$7[ebp], xmm0

; 280  : 					centre_point2.y = ( points[count+1].point1.y + points[count+1].point2.y ) / 2;

  002ae	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  002b1	83 c0 01	 add	 eax, 1
  002b4	6b c8 2c	 imul	 ecx, eax, 44
  002b7	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  002ba	83 c2 01	 add	 edx, 1
  002bd	6b c2 2c	 imul	 eax, edx, 44
  002c0	8b 55 20	 mov	 edx, DWORD PTR _points$[ebp]
  002c3	8b 75 20	 mov	 esi, DWORD PTR _points$[ebp]
  002c6	f3 0f 10 44 0a
	04		 movss	 xmm0, DWORD PTR [edx+ecx+4]
  002cc	f3 0f 58 44 06
	10		 addss	 xmm0, DWORD PTR [esi+eax+16]
  002d2	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  002da	f3 0f 11 45 d8	 movss	 DWORD PTR _centre_point2$7[ebp+4], xmm0

; 281  : 					centre_point2.z = ( points[count+1].point1.z + points[count+1].point2.z ) / 2;

  002df	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  002e2	83 c0 01	 add	 eax, 1
  002e5	6b c8 2c	 imul	 ecx, eax, 44
  002e8	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  002eb	83 c2 01	 add	 edx, 1
  002ee	6b c2 2c	 imul	 eax, edx, 44
  002f1	8b 55 20	 mov	 edx, DWORD PTR _points$[ebp]
  002f4	8b 75 20	 mov	 esi, DWORD PTR _points$[ebp]
  002f7	f3 0f 10 44 0a
	08		 movss	 xmm0, DWORD PTR [edx+ecx+8]
  002fd	f3 0f 58 44 06
	14		 addss	 xmm0, DWORD PTR [esi+eax+20]
  00303	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  0030b	f3 0f 11 45 dc	 movss	 DWORD PTR _centre_point2$7[ebp+8], xmm0

; 282  : 		
; 283  : 					length_vector.x = centre_point2.x - centre_point1.x;

  00310	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _centre_point2$7[ebp]
  00315	f3 0f 5c 45 e0	 subss	 xmm0, DWORD PTR _centre_point1$8[ebp]
  0031a	f3 0f 11 45 c8	 movss	 DWORD PTR _length_vector$6[ebp], xmm0

; 284  : 					length_vector.y = centre_point2.y - centre_point1.y;

  0031f	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _centre_point2$7[ebp+4]
  00324	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _centre_point1$8[ebp+4]
  00329	f3 0f 11 45 cc	 movss	 DWORD PTR _length_vector$6[ebp+4], xmm0

; 285  : 					length_vector.z = centre_point2.z - centre_point1.z;

  0032e	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _centre_point2$7[ebp+8]
  00333	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _centre_point1$8[ebp+8]
  00338	f3 0f 11 45 d0	 movss	 DWORD PTR _length_vector$6[ebp+8], xmm0

; 286  : 		
; 287  : 					//
; 288  : 					// Calculate the length of line connecting the two centre points
; 289  : 					//
; 290  : 		
; 291  : 					texture_temp_distance = ( get_3d_vector_magnitude ( &length_vector ) / texture_size );

  0033d	8d 45 c8	 lea	 eax, DWORD PTR _length_vector$6[ebp]
  00340	50		 push	 eax
  00341	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00346	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv456[ebp]
  0034c	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv456[ebp]
  00354	f3 0f 5e 45 1c	 divss	 xmm0, DWORD PTR _texture_size$[ebp]
  00359	f3 0f 11 45 c4	 movss	 DWORD PTR _texture_temp_distance$5[ebp], xmm0

; 292  : 		
; 293  : 					texture_u += texture_temp_distance;

  0035e	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _texture_u$9[ebp]
  00363	f3 0f 58 45 c4	 addss	 xmm0, DWORD PTR _texture_temp_distance$5[ebp]
  00368	f3 0f 11 45 ec	 movss	 DWORD PTR _texture_u$9[ebp], xmm0

; 294  : 		
; 295  : 					rotated_points[count+1].texture_u = texture_u;

  0036d	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00370	83 c0 01	 add	 eax, 1
  00373	6b c8 2c	 imul	 ecx, eax, 44
  00376	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  00379	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _texture_u$9[ebp]
  0037e	f3 0f 11 44 0a
	24		 movss	 DWORD PTR [edx+ecx+36], xmm0

; 296  : 					rotated_points[count+1].colour = light_smoke_colour ( points[count+1].colour, additive );

  00384	8b 45 10	 mov	 eax, DWORD PTR _additive$[ebp]
  00387	50		 push	 eax
  00388	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  0038b	83 c1 01	 add	 ecx, 1
  0038e	6b d1 2c	 imul	 edx, ecx, 44
  00391	8b 45 20	 mov	 eax, DWORD PTR _points$[ebp]
  00394	8b 4c 10 28	 mov	 ecx, DWORD PTR [eax+edx+40]
  00398	51		 push	 ecx
  00399	e8 00 00 00 00	 call	 ?light_smoke_colour@@YG?AUREAL_COLOUR@@U1@H@Z ; light_smoke_colour
  0039e	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  003a4	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  003a7	83 c2 01	 add	 edx, 1
  003aa	6b c2 2c	 imul	 eax, edx, 44
  003ad	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  003b0	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  003b6	89 54 01 28	 mov	 DWORD PTR [ecx+eax+40], edx

; 297  : 				}

  003ba	e9 33 fe ff ff	 jmp	 $LN5@insert_zbi
$LN6@insert_zbi:

; 298  : 		
; 299  : 				//
; 300  : 				// Now insert each segment dependant on it being visible or not.
; 301  : 				//
; 302  : 		
; 303  : 				for ( count = 0; count < ( number_of_points - 1 ); count++ )

  003bf	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  003c6	eb 09		 jmp	 SHORT $LN10@insert_zbi
$LN8@insert_zbi:
  003c8	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  003cb	83 c0 01	 add	 eax, 1
  003ce	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN10@insert_zbi:
  003d1	8b 45 08	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  003d4	83 e8 01	 sub	 eax, 1
  003d7	39 45 f8	 cmp	 DWORD PTR _count$[ebp], eax
  003da	0f 8d 3f 01 00
	00		 jge	 $LN9@insert_zbi

; 304  : 				{
; 305  : 		
; 306  : 					if (	( rotated_points[count].point1.z > clip_hither ) || ( rotated_points[count].point2.z > clip_hither ) ||
; 307  : 							( rotated_points[count+1].point1.z > clip_hither ) || ( rotated_points[count+1].point1.z > clip_hither ) )

  003e0	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  003e4	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  003e7	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  003ed	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?clip_hither@@3MA
  003f4	77 50		 ja	 SHORT $LN19@insert_zbi
  003f6	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  003fa	8b 4d fc	 mov	 ecx, DWORD PTR _rotated_points$[ebp]
  003fd	f3 0f 10 44 01
	14		 movss	 xmm0, DWORD PTR [ecx+eax+20]
  00403	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?clip_hither@@3MA
  0040a	77 3a		 ja	 SHORT $LN19@insert_zbi
  0040c	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0040f	83 c0 01	 add	 eax, 1
  00412	6b c8 2c	 imul	 ecx, eax, 44
  00415	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  00418	f3 0f 10 44 0a
	08		 movss	 xmm0, DWORD PTR [edx+ecx+8]
  0041e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?clip_hither@@3MA
  00425	77 1f		 ja	 SHORT $LN19@insert_zbi
  00427	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0042a	83 c0 01	 add	 eax, 1
  0042d	6b c8 2c	 imul	 ecx, eax, 44
  00430	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  00433	f3 0f 10 44 0a
	08		 movss	 xmm0, DWORD PTR [edx+ecx+8]
  00439	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?clip_hither@@3MA
  00440	0f 86 d4 00 00
	00		 jbe	 $LN21@insert_zbi
$LN19@insert_zbi:

; 308  : 					{
; 309  : 		
; 310  : 						scene_slot_drawing_list
; 311  : 							*buffer;
; 312  : 		
; 313  : 						float
; 314  : 							average_z;
; 315  : 		
; 316  : 						average_z = (	( rotated_points[count].point1.z + rotated_points[count].point2.z ) +

  00446	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  0044a	6b 4d f8 2c	 imul	 ecx, DWORD PTR _count$[ebp], 44
  0044e	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  00451	8b 75 fc	 mov	 esi, DWORD PTR _rotated_points$[ebp]
  00454	f3 0f 10 44 02
	08		 movss	 xmm0, DWORD PTR [edx+eax+8]
  0045a	f3 0f 58 44 0e
	14		 addss	 xmm0, DWORD PTR [esi+ecx+20]
  00460	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00463	83 c0 01	 add	 eax, 1
  00466	6b c8 2c	 imul	 ecx, eax, 44
  00469	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  0046c	83 c2 01	 add	 edx, 1
  0046f	6b c2 2c	 imul	 eax, edx, 44
  00472	8b 55 fc	 mov	 edx, DWORD PTR _rotated_points$[ebp]
  00475	8b 75 fc	 mov	 esi, DWORD PTR _rotated_points$[ebp]
  00478	f3 0f 10 4c 0a
	08		 movss	 xmm1, DWORD PTR [edx+ecx+8]
  0047e	f3 0f 58 4c 06
	14		 addss	 xmm1, DWORD PTR [esi+eax+20]
  00484	f3 0f 58 c1	 addss	 xmm0, xmm1
  00488	f3 0f 11 45 bc	 movss	 DWORD PTR _average_z$3[ebp], xmm0

; 317  : 											( rotated_points[count+1].point1.z + rotated_points[count+1].point2.z ) );
; 318  : 		
; 319  : 						average_z /= 4;

  0048d	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _average_z$3[ebp]
  00492	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40800000
  0049a	f3 0f 11 45 bc	 movss	 DWORD PTR _average_z$3[ebp], xmm0

; 320  : 
; 321  : 						average_z += zbias;

  0049f	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _average_z$3[ebp]
  004a4	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _zbias$[ebp]
  004a9	f3 0f 11 45 bc	 movss	 DWORD PTR _average_z$3[ebp], xmm0

; 322  : 		
; 323  : 						buffer = get_3d_scene_slot ();

  004ae	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  004b3	89 45 c0	 mov	 DWORD PTR _buffer$4[ebp], eax

; 324  : 			
; 325  : 						if ( buffer )

  004b6	83 7d c0 00	 cmp	 DWORD PTR _buffer$4[ebp], 0
  004ba	74 51		 je	 SHORT $LN20@insert_zbi

; 326  : 						{
; 327  : 		
; 328  : 							buffer->type = OBJECT_3D_DRAW_TYPE_SMOKE_TRAIL;

  004bc	8b 45 c0	 mov	 eax, DWORD PTR _buffer$4[ebp]
  004bf	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 329  : 			
; 330  : 							buffer->z = *( ( int * ) &average_z );

  004c6	8b 45 c0	 mov	 eax, DWORD PTR _buffer$4[ebp]
  004c9	8b 4d bc	 mov	 ecx, DWORD PTR _average_z$3[ebp]
  004cc	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 331  : 			
; 332  : 							buffer->smoke_trail.trail = smoke_trail;

  004cf	8b 45 c0	 mov	 eax, DWORD PTR _buffer$4[ebp]
  004d2	8b 4d f0	 mov	 ecx, DWORD PTR _smoke_trail$10[ebp]
  004d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 333  : 		
; 334  : 							buffer->smoke_trail.segment = count;

  004d8	8b 45 c0	 mov	 eax, DWORD PTR _buffer$4[ebp]
  004db	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  004de	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 335  : 		
; 336  : 							if ( points[count].point1.y > middle_scene_slot_height )

  004e1	6b 45 f8 2c	 imul	 eax, DWORD PTR _count$[ebp], 44
  004e5	8b 4d 20	 mov	 ecx, DWORD PTR _points$[ebp]
  004e8	f3 0f 10 44 01
	04		 movss	 xmm0, DWORD PTR [ecx+eax+4]
  004ee	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?middle_scene_slot_height@@3MA
  004f5	76 0b		 jbe	 SHORT $LN22@insert_zbi

; 337  : 							{
; 338  : 			
; 339  : 								insert_high_nonzbuffered_scene_slot_into_3d_scene ( buffer );

  004f7	8b 45 c0	 mov	 eax, DWORD PTR _buffer$4[ebp]
  004fa	50		 push	 eax
  004fb	e8 00 00 00 00	 call	 ?insert_high_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_high_nonzbuffered_scene_slot_into_3d_scene

; 340  : 							}
; 341  : 							else

  00500	eb 09		 jmp	 SHORT $LN23@insert_zbi
$LN22@insert_zbi:

; 342  : 							{
; 343  : 		
; 344  : 								insert_low_nonzbuffered_scene_slot_into_3d_scene ( buffer );

  00502	8b 45 c0	 mov	 eax, DWORD PTR _buffer$4[ebp]
  00505	50		 push	 eax
  00506	e8 00 00 00 00	 call	 ?insert_low_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_low_nonzbuffered_scene_slot_into_3d_scene
$LN23@insert_zbi:

; 345  : 							}
; 346  : 						}
; 347  : 						else

  0050b	eb 0d		 jmp	 SHORT $LN21@insert_zbi
$LN20@insert_zbi:

; 348  : 						{
; 349  : 
; 350  : 							debug_log ( "SMOKE TRAIL OVERFLOWED OBJECT BUFFER" );

  0050d	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@GKCINKMP@SMOKE?5TRAIL?5OVERFLOWED?5OBJECT?5B@
  00512	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00517	83 c4 04	 add	 esp, 4
$LN21@insert_zbi:

; 351  : 						}
; 352  : 					}
; 353  : 				}

  0051a	e9 a9 fe ff ff	 jmp	 $LN8@insert_zbi
$LN9@insert_zbi:
$LN16@insert_zbi:

; 354  : 			}
; 355  : 			else
; 356  : 			{
; 357  : 
; 358  : 				//
; 359  : 				// No point in freeing up the smoke trail point data, as all the headers are used up!
; 360  : 				//
; 361  : 			}
; 362  : 		}
; 363  : 		else

  0051f	eb 09		 jmp	 SHORT $LN15@insert_zbi
$LN14@insert_zbi:

; 364  : 		{
; 365  : 	
; 366  : 			//
; 367  : 			// Free up the reserved smoke trail point data slots
; 368  : 			//
; 369  : 	
; 370  : 			remove_smoke_trail_point_data ( number_of_points );

  00521	8b 45 08	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  00524	50		 push	 eax
  00525	e8 00 00 00 00	 call	 ?remove_smoke_trail_point_data@@YGXH@Z ; remove_smoke_trail_point_data
$LN15@insert_zbi:

; 371  : 		}
; 372  : 	}
; 373  : }

  0052a	5f		 pop	 edi
  0052b	5e		 pop	 esi
  0052c	5b		 pop	 ebx
  0052d	8b e5		 mov	 esp, ebp
  0052f	5d		 pop	 ebp
  00530	c2 1c 00	 ret	 28			; 0000001cH
?insert_zbiased_smoke_trail_into_3d_scene@@YGXHMHPAUSCREEN@@MMPAUSMOKE_TRAIL_DATA@@@Z ENDP ; insert_zbiased_smoke_trail_into_3d_scene
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?get_smoke_trail_point_data@@YGPAUSMOKE_TRAIL_DATA@@H@Z
_TEXT	SEGMENT
_index$1 = -4						; size = 4
_number_of_points$ = 8					; size = 4
?get_smoke_trail_point_data@@YGPAUSMOKE_TRAIL_DATA@@H@Z PROC ; get_smoke_trail_point_data, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 
; 146  : 	if ( ( number_of_smoke_trail_points_used + number_of_points ) < MAX_3D_SMOKE_TRAIL_POINTS )

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_smoke_trail_points_used@@3HA ; number_of_smoke_trail_points_used
  0000e	03 45 08	 add	 eax, DWORD PTR _number_of_points$[ebp]
  00011	3d 00 04 00 00	 cmp	 eax, 1024		; 00000400H
  00016	7d 22		 jge	 SHORT $LN2@get_smoke_

; 147  : 	{
; 148  : 	
; 149  : 		int
; 150  : 			index;
; 151  : 	
; 152  : 		index = number_of_smoke_trail_points_used;

  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_smoke_trail_points_used@@3HA ; number_of_smoke_trail_points_used
  0001d	89 45 fc	 mov	 DWORD PTR _index$1[ebp], eax

; 153  : 	
; 154  : 		number_of_smoke_trail_points_used += number_of_points;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_smoke_trail_points_used@@3HA ; number_of_smoke_trail_points_used
  00025	03 45 08	 add	 eax, DWORD PTR _number_of_points$[ebp]
  00028	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_smoke_trail_points_used@@3HA, eax ; number_of_smoke_trail_points_used

; 155  : 	
; 156  : 		return ( &smoke_trail_point_data[index] );

  0002d	6b 45 fc 2c	 imul	 eax, DWORD PTR _index$1[ebp], 44
  00031	05 00 00 00 00	 add	 eax, OFFSET ?smoke_trail_point_data@@3PAUSMOKE_TRAIL_DATA@@A ; smoke_trail_point_data
  00036	eb 04		 jmp	 SHORT $LN1@get_smoke_

; 157  : 	}
; 158  : 	else

  00038	eb 02		 jmp	 SHORT $LN1@get_smoke_
$LN2@get_smoke_:

; 159  : 	{
; 160  : 
; 161  : 		return ( NULL );

  0003a	33 c0		 xor	 eax, eax
$LN1@get_smoke_:

; 162  : 	}
; 163  : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?get_smoke_trail_point_data@@YGPAUSMOKE_TRAIL_DATA@@H@Z ENDP ; get_smoke_trail_point_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?get_smoke_trail_header@@YGPAUSMOKE_TRAIL_INFORMATION@@XZ
_TEXT	SEGMENT
_index$1 = -4						; size = 4
?get_smoke_trail_header@@YGPAUSMOKE_TRAIL_INFORMATION@@XZ PROC ; get_smoke_trail_header, COMDAT

; 118  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 119  : 
; 120  : 	if ( ( number_of_smoke_trail_headers_used + 1 ) < MAX_3D_SMOKE_TRAILS )

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_smoke_trail_headers_used@@3HA ; number_of_smoke_trail_headers_used
  0000e	83 c0 01	 add	 eax, 1
  00011	3d 98 00 00 00	 cmp	 eax, 152		; 00000098H
  00016	7d 22		 jge	 SHORT $LN2@get_smoke_

; 121  : 	{
; 122  : 	
; 123  : 		int
; 124  : 			index;
; 125  : 	
; 126  : 		index = number_of_smoke_trail_headers_used;

  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_smoke_trail_headers_used@@3HA ; number_of_smoke_trail_headers_used
  0001d	89 45 fc	 mov	 DWORD PTR _index$1[ebp], eax

; 127  : 	
; 128  : 		number_of_smoke_trail_headers_used++;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_smoke_trail_headers_used@@3HA ; number_of_smoke_trail_headers_used
  00025	83 c0 01	 add	 eax, 1
  00028	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_smoke_trail_headers_used@@3HA, eax ; number_of_smoke_trail_headers_used

; 129  : 	
; 130  : 		return ( &smoke_trail_headers[index] );

  0002d	6b 45 fc 18	 imul	 eax, DWORD PTR _index$1[ebp], 24
  00031	05 00 00 00 00	 add	 eax, OFFSET ?smoke_trail_headers@@3PAUSMOKE_TRAIL_INFORMATION@@A ; smoke_trail_headers
  00036	eb 04		 jmp	 SHORT $LN1@get_smoke_

; 131  : 	}
; 132  : 	else

  00038	eb 02		 jmp	 SHORT $LN1@get_smoke_
$LN2@get_smoke_:

; 133  : 	{
; 134  : 
; 135  : 		return ( NULL );

  0003a	33 c0		 xor	 eax, eax
$LN1@get_smoke_:

; 136  : 	}
; 137  : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?get_smoke_trail_header@@YGPAUSMOKE_TRAIL_INFORMATION@@XZ ENDP ; get_smoke_trail_header
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dstrail.c
;	COMDAT ?reset_smoke_trail_rendering_information@@YGXXZ
_TEXT	SEGMENT
?reset_smoke_trail_rendering_information@@YGXXZ PROC	; reset_smoke_trail_rendering_information, COMDAT

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 107  : 
; 108  : 	number_of_smoke_trail_headers_used = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_smoke_trail_headers_used@@3HA, 0 ; number_of_smoke_trail_headers_used

; 109  : 
; 110  : 	number_of_smoke_trail_points_used = 0;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_smoke_trail_points_used@@3HA, 0 ; number_of_smoke_trail_points_used

; 111  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?reset_smoke_trail_rendering_information@@YGXXZ ENDP	; reset_smoke_trail_rendering_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.h
;	COMDAT ?generate_lookup_outcode@@YGHHHHH@Z
_TEXT	SEGMENT
_xmin$ = 8						; size = 4
_ymin$ = 12						; size = 4
_xmax$ = 16						; size = 4
_ymax$ = 20						; size = 4
?generate_lookup_outcode@@YGHHHHH@Z PROC		; generate_lookup_outcode, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 
; 201  : 	__asm mov eax, xmin;

  00009	8b 45 08	 mov	 eax, DWORD PTR _xmin$[ebp]
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _ymin$[ebp]
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR _xmax$[ebp]
  00012	8b 55 14	 mov	 edx, DWORD PTR _ymax$[ebp]
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	81 e3 00 00 00
	80		 and	 ebx, -2147483648	; 80000000H
  0001e	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00021	81 e2 00 00 00
	80		 and	 edx, -2147483648	; 80000000H
  00027	c1 eb 1e	 shr	 ebx, 30			; 0000001eH
  0002a	83 e0 01	 and	 eax, 1
  0002d	c1 ea 1c	 shr	 edx, 28			; 0000001cH
  00030	83 e1 04	 and	 ecx, 4
  00033	0b c3		 or	 eax, ebx
  00035	0b ca		 or	 ecx, edx
  00037	0b c1		 or	 eax, ecx
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?generate_lookup_outcode@@YGHHHHH@Z ENDP		; generate_lookup_outcode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
END
