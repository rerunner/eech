; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\division\division.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
PUBLIC	?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z	; add_group_to_division
PUBLIC	?get_number_extension@@YGXHPAD@Z		; get_number_extension
PUBLIC	?set_local_division_name@@YGHPAUENTITY@@PAD@Z	; set_local_division_name
PUBLIC	?initialise_division_database@@YGXXZ		; initialise_division_database
PUBLIC	?deinitialise_division_database@@YGXXZ		; deinitialise_division_database
PUBLIC	?pack_local_division_database@@YGXW4PACK_MODES@@@Z ; pack_local_division_database
PUBLIC	?unpack_local_division_database@@YGXW4PACK_MODES@@@Z ; unpack_local_division_database
PUBLIC	?add_division_id_data@@YGXHHHPAH@Z		; add_division_id_data
PUBLIC	?get_next_free_division_id@@YGHHH@Z		; get_next_free_division_id
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?__LINE__Var@?0??create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU2@1H@Z@4JA ; `create_new_division'::`1'::__LINE__Var
PUBLIC	??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA ; `add_group_to_division'::`1'::__LINE__Var
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@ ; `string'
PUBLIC	??_C@_05BINPNAAL@force@				; `string'
PUBLIC	??_C@_0CP@IJLCELPA@entity_sub_type_division_valid?5@ ; `string'
PUBLIC	??_C@_0DE@CKACJOFC@entity_sub_type_division_valid?5@ ; `string'
PUBLIC	??_C@_07FBNBNOMI@keysite@			; `string'
PUBLIC	??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
PUBLIC	??_C@_0DD@KIPMLNBB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
PUBLIC	??_C@_0O@BHIBHEOK@main_division@		; `string'
PUBLIC	??_C@_08DHDHNDEI@division@			; `string'
PUBLIC	?__LINE__Var@?0??get_number_extension@@YGXHPAD@Z@4JA ; `get_number_extension'::`1'::__LINE__Var
PUBLIC	??_C@_09ODADEDNA@extension@			; `string'
PUBLIC	??_C@_02POGCAHMO@th@				; `string'
PUBLIC	??_C@_02BNFKEMBG@st@				; `string'
PUBLIC	??_C@_02EDGGGOGE@nd@				; `string'
PUBLIC	??_C@_02FGFKDEHA@rd@				; `string'
PUBLIC	?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA ; `set_local_division_name'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_01LKDEMHDF@s@				; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_0BL@MLGKIHDJ@Invalid?5Platoon?5Id?5Type?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??deinitialise_division_database@@YGXXZ@4JA ; `deinitialise_division_database'::`1'::__LINE__Var
PUBLIC	??_C@_0CM@JBHGAFOL@division_id_database?5?$FLside?$FN?$FLtyp@ ; `string'
PUBLIC	??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?0??pack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA ; `pack_local_division_database'::`1'::__LINE__Var
PUBLIC	??_C@_09DMMLFBJB@count?5?$DO?50@		; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA ; `unpack_local_division_database'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_division_id_data@@YGXHHHPAH@Z@4JA ; `add_division_id_data'::`1'::__LINE__Var
PUBLIC	??_C@_0CN@BBPKCNOE@division_id_database?5?$FLside?$FN?$FLtyp@ ; `string'
PUBLIC	??_C@_0CP@PBNOJAOJ@?$CBdivision_id_database?5?$FLside?$FN?$FLty@ ; `string'
PUBLIC	??_C@_0M@IFJMMDBE@number_list@			; `string'
PUBLIC	?__LINE__Var@?0??get_next_free_division_id@@YGHHH@Z@4JA ; `get_next_free_division_id'::`1'::__LINE__Var
PUBLIC	??_C@_0CE@PAMAOEJI@DIVISION?3?5Side?5?$CFs?5Type?5?$CFd?5not?5v@ ; `string'
PUBLIC	??_C@_0O@EIEEOCMN@index?5?$DM?5count@		; `string'
PUBLIC	??_C@_0DE@BDPJKP@DIVISION?3?5WARNING?5Side?5?$CFs?5?9?5?$CFs?5@ ; `string'
PUBLIC	__real@447a0000
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_filtered_log@@YAXPBDZZ:PROC		; debug_filtered_log
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?set_client_server_entity_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z:PROC ; set_client_server_entity_parent
EXTRN	?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ:PROC ; create_local_entity
EXTRN	?create_client_server_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ:PROC ; create_client_server_entity
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z:PROC ; get_closest_keysite
EXTRN	?entity_sub_type_division_names@@3PAPBDA:BYTE	; entity_sub_type_division_names
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_side_short_names@@3PAPBDA:BYTE		; entity_side_short_names
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?division_database@@3QBUDIVISION_DATA@@B:BYTE	; division_database
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A DB 0330H DUP (?) ; division_id_database
_BSS	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT ??_C@_0DE@BDPJKP@DIVISION?3?5WARNING?5Side?5?$CFs?5?9?5?$CFs?5@
CONST	SEGMENT
??_C@_0DE@BDPJKP@DIVISION?3?5WARNING?5Side?5?$CFs?5?9?5?$CFs?5@ DB 'DIVIS'
	DB	'ION: WARNING Side %s - %s wrapped (count = %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EIEEOCMN@index?5?$DM?5count@
CONST	SEGMENT
??_C@_0O@EIEEOCMN@index?5?$DM?5count@ DB 'index < count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PAMAOEJI@DIVISION?3?5Side?5?$CFs?5Type?5?$CFd?5not?5v@
CONST	SEGMENT
??_C@_0CE@PAMAOEJI@DIVISION?3?5Side?5?$CFs?5Type?5?$CFd?5not?5v@ DB 'DIVI'
	DB	'SION: Side %s Type %d not valid', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_next_free_division_id@@YGHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_next_free_division_id@@YGHHH@Z@4JA DD 02f0H ; `get_next_free_division_id'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@IFJMMDBE@number_list@
CONST	SEGMENT
??_C@_0M@IFJMMDBE@number_list@ DB 'number_list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PBNOJAOJ@?$CBdivision_id_database?5?$FLside?$FN?$FLty@
CONST	SEGMENT
??_C@_0CP@PBNOJAOJ@?$CBdivision_id_database?5?$FLside?$FN?$FLty@ DB '!div'
	DB	'ision_id_database [side][type].number_list', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BBPKCNOE@division_id_database?5?$FLside?$FN?$FLtyp@
CONST	SEGMENT
??_C@_0CN@BBPKCNOE@division_id_database?5?$FLside?$FN?$FLtyp@ DB 'divisio'
	DB	'n_id_database [side][type].count == 0', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_division_id_data@@YGXHHHPAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_division_id_data@@YGXHHHPAH@Z@4JA DD 02d7H ; `add_division_id_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA DD 02aaH ; `unpack_local_division_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09DMMLFBJB@count?5?$DO?50@
CONST	SEGMENT
??_C@_09DMMLFBJB@count?5?$DO?50@ DB 'count > 0', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA DD 027fH ; `pack_local_division_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ DB 'ASSERT %s (%s'
	DB	':%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@JBHGAFOL@division_id_database?5?$FLside?$FN?$FLtyp@
CONST	SEGMENT
??_C@_0CM@JBHGAFOL@division_id_database?5?$FLside?$FN?$FLtyp@ DB 'divisio'
	DB	'n_id_database [side][type].count > 0', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??deinitialise_division_database@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??deinitialise_division_database@@YGXXZ@4JA DD 025bH ; `deinitialise_division_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@MLGKIHDJ@Invalid?5Platoon?5Id?5Type?5?$CFd@
CONST	SEGMENT
??_C@_0BL@MLGKIHDJ@Invalid?5Platoon?5Id?5Type?5?$CFd@ DB 'Invalid Platoon'
	DB	' Id Type %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LKDEMHDF@s@
CONST	SEGMENT
??_C@_01LKDEMHDF@s@ DB 's', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA DD 01c9H ; `set_local_division_name'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02FGFKDEHA@rd@
CONST	SEGMENT
??_C@_02FGFKDEHA@rd@ DB 'rd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EDGGGOGE@nd@
CONST	SEGMENT
??_C@_02EDGGGOGE@nd@ DB 'nd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BNFKEMBG@st@
CONST	SEGMENT
??_C@_02BNFKEMBG@st@ DB 'st', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02POGCAHMO@th@
CONST	SEGMENT
??_C@_02POGCAHMO@th@ DB 'th', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09ODADEDNA@extension@
CONST	SEGMENT
??_C@_09ODADEDNA@extension@ DB 'extension', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_number_extension@@YGXHPAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_number_extension@@YGXHPAD@Z@4JA DD 0195H ; `get_number_extension'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08DHDHNDEI@division@
CONST	SEGMENT
??_C@_08DHDHNDEI@division@ DB 'division', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BHIBHEOK@main_division@
CONST	SEGMENT
??_C@_0O@BHIBHEOK@main_division@ DB 'main_division', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KIPMLNBB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0DD@KIPMLNBB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_DIVISION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FBNBNOMI@keysite@
CONST	SEGMENT
??_C@_07FBNBNOMI@keysite@ DB 'keysite', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CKACJOFC@entity_sub_type_division_valid?5@
CONST	SEGMENT
??_C@_0DE@CKACJOFC@entity_sub_type_division_valid?5@ DB 'entity_sub_type_'
	DB	'division_valid (main_division_type)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IJLCELPA@entity_sub_type_division_valid?5@
CONST	SEGMENT
??_C@_0CP@IJLCELPA@entity_sub_type_division_valid?5@ DB 'entity_sub_type_'
	DB	'division_valid (division_type)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BINPNAAL@force@
CONST	SEGMENT
??_C@_05BINPNAAL@force@ DB 'force', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@
CONST	SEGMENT
??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@ DB '!get_local'
	DB	'_entity_parent (group, LIST_TYPE_DIVISION)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA DD 096H ; `add_group_to_division'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\division\divi'
	DB	'sion.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU2@1H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU2@1H@Z@4JA DD 066H ; `create_new_division'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?get_next_free_division_id@@YGHHH@Z
_TEXT	SEGMENT
_count$ = -12						; size = 4
_index$ = -8						; size = 4
_id$ = -4						; size = 4
_side$ = 8						; size = 4
_type$ = 12						; size = 4
?get_next_free_division_id@@YGHHH@Z PROC		; get_next_free_division_id, COMDAT

; 752  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 753  : 	int
; 754  : 		id,
; 755  : 		index,
; 756  : 		count;
; 757  : 
; 758  : 	if (!division_id_database [side][type].valid)

  00009	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00013	c1 e1 04	 shl	 ecx, 4
  00016	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx], 0
  0001e	75 1c		 jne	 SHORT $LN2@get_next_f

; 759  : 	{
; 760  : 		debug_fatal ("DIVISION: Side %s Type %d not valid", entity_side_short_names [side], type);

  00020	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  00027	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?entity_side_short_names@@3PAPBDA[ecx*4]
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@PAMAOEJI@DIVISION?3?5Side?5?$CFs?5Type?5?$CFd?5not?5v@
  00034	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@get_next_f:

; 761  : 	}
; 762  : 
; 763  : 	index = division_id_database [side][type].next;

  0003c	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00046	c1 e1 04	 shl	 ecx, 4
  00049	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+8]
  00050	89 55 f8	 mov	 DWORD PTR _index$[ebp], edx

; 764  : 
; 765  : 	count = division_id_database [side][type].count;

  00053	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  0005d	c1 e1 04	 shl	 ecx, 4
  00060	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+4]
  00067	89 55 f4	 mov	 DWORD PTR _count$[ebp], edx

; 766  : 
; 767  : 	debug_assert (count > 0);

  0006a	83 7d f4 00	 cmp	 DWORD PTR _count$[ebp], 0
  0006e	7f 20		 jg	 SHORT $LN3@get_next_f
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_next_free_division_id@@YGHHH@Z@4JA
  00075	83 c0 0f	 add	 eax, 15			; 0000000fH
  00078	50		 push	 eax
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_09DMMLFBJB@count?5?$DO?50@
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  00088	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0008d	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@get_next_f:

; 768  : 
; 769  : 	debug_assert (index < count);

  00090	8b 45 f8	 mov	 eax, DWORD PTR _index$[ebp]
  00093	3b 45 f4	 cmp	 eax, DWORD PTR _count$[ebp]
  00096	7c 20		 jl	 SHORT $LN4@get_next_f
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_next_free_division_id@@YGHHH@Z@4JA
  0009d	83 c0 11	 add	 eax, 17			; 00000011H
  000a0	50		 push	 eax
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EIEEOCMN@index?5?$DM?5count@
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  000b0	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000b5	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@get_next_f:

; 770  : 
; 771  : 	id = division_id_database [side][type].number_list [index];

  000b8	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000bf	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  000c2	c1 e1 04	 shl	 ecx, 4
  000c5	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+12]
  000cc	8b 45 f8	 mov	 eax, DWORD PTR _index$[ebp]
  000cf	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  000d2	89 4d fc	 mov	 DWORD PTR _id$[ebp], ecx

; 772  : 
; 773  : 	index ++;

  000d5	8b 45 f8	 mov	 eax, DWORD PTR _index$[ebp]
  000d8	83 c0 01	 add	 eax, 1
  000db	89 45 f8	 mov	 DWORD PTR _index$[ebp], eax

; 774  : 
; 775  : 	if (index == count)

  000de	8b 45 f8	 mov	 eax, DWORD PTR _index$[ebp]
  000e1	3b 45 f4	 cmp	 eax, DWORD PTR _count$[ebp]
  000e4	75 2e		 jne	 SHORT $LN5@get_next_f

; 776  : 	{
; 777  : 		debug_filtered_log ("DIVISION: WARNING Side %s - %s wrapped (count = %d)",

  000e6	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000e9	50		 push	 eax
  000ea	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  000ed	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?entity_sub_type_division_names@@3PAPBDA[ecx*4]
  000f4	52		 push	 edx
  000f5	8b 45 08	 mov	 eax, DWORD PTR _side$[ebp]
  000f8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?entity_side_short_names@@3PAPBDA[eax*4]
  000ff	51		 push	 ecx
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@BDPJKP@DIVISION?3?5WARNING?5Side?5?$CFs?5?9?5?$CFs?5@
  00105	e8 00 00 00 00	 call	 ?debug_filtered_log@@YAXPBDZZ ; debug_filtered_log
  0010a	83 c4 10	 add	 esp, 16			; 00000010H

; 778  : 											entity_side_short_names [side], 
; 779  : 											entity_sub_type_division_names [type],
; 780  : 											count);
; 781  : 
; 782  : 		index = 0;

  0010d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _index$[ebp], 0
$LN5@get_next_f:

; 783  : 	}
; 784  : 
; 785  : 	division_id_database [side][type].next = index;

  00114	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  0011b	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  0011e	c1 e1 04	 shl	 ecx, 4
  00121	8b 55 f8	 mov	 edx, DWORD PTR _index$[ebp]
  00124	89 94 08 08 00
	00 00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+8], edx

; 786  : 
; 787  : 	return id;

  0012b	8b 45 fc	 mov	 eax, DWORD PTR _id$[ebp]

; 788  : }

  0012e	5f		 pop	 edi
  0012f	5e		 pop	 esi
  00130	5b		 pop	 ebx
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c2 08 00	 ret	 8
?get_next_free_division_id@@YGHHH@Z ENDP		; get_next_free_division_id
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?add_division_id_data@@YGXHHHPAH@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_type$ = 12						; size = 4
_count$ = 16						; size = 4
_number_list$ = 20					; size = 4
?add_division_id_data@@YGXHHHPAH@Z PROC			; add_division_id_data, COMDAT

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 728  : 	debug_assert (division_id_database [side][type].count == 0);

  00009	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00013	c1 e1 04	 shl	 ecx, 4
  00016	83 bc 08 04 00
	00 00 00	 cmp	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+4], 0
  0001e	74 20		 je	 SHORT $LN2@add_divisi
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_division_id_data@@YGXHHHPAH@Z@4JA
  00025	83 c0 01	 add	 eax, 1
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@BBPKCNOE@division_id_database?5?$FLside?$FN?$FLtyp@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  00038	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0003d	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@add_divisi:

; 729  : 
; 730  : 	debug_assert (!division_id_database [side][type].number_list);

  00040	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  0004a	c1 e1 04	 shl	 ecx, 4
  0004d	83 bc 08 0c 00
	00 00 00	 cmp	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+12], 0
  00055	74 20		 je	 SHORT $LN3@add_divisi
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_division_id_data@@YGXHHHPAH@Z@4JA
  0005c	83 c0 03	 add	 eax, 3
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PBNOJAOJ@?$CBdivision_id_database?5?$FLside?$FN?$FLty@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  0006f	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00074	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@add_divisi:

; 731  : 
; 732  : 	debug_assert (count > 0);

  00077	83 7d 10 00	 cmp	 DWORD PTR _count$[ebp], 0
  0007b	7f 20		 jg	 SHORT $LN4@add_divisi
  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_division_id_data@@YGXHHHPAH@Z@4JA
  00082	83 c0 05	 add	 eax, 5
  00085	50		 push	 eax
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_09DMMLFBJB@count?5?$DO?50@
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  00095	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0009a	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@add_divisi:

; 733  : 
; 734  : 	debug_assert (number_list);

  0009d	83 7d 14 00	 cmp	 DWORD PTR _number_list$[ebp], 0
  000a1	75 20		 jne	 SHORT $LN5@add_divisi
  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_division_id_data@@YGXHHHPAH@Z@4JA
  000a8	83 c0 07	 add	 eax, 7
  000ab	50		 push	 eax
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IFJMMDBE@number_list@
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  000bb	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000c0	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@add_divisi:

; 735  : 
; 736  : 	division_id_database [side][type].valid = TRUE;

  000c3	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000ca	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  000cd	c1 e1 04	 shl	 ecx, 4
  000d0	c7 84 08 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx], 1

; 737  : 
; 738  : 	division_id_database [side][type].count = count;

  000db	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000e2	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  000e5	c1 e1 04	 shl	 ecx, 4
  000e8	8b 55 10	 mov	 edx, DWORD PTR _count$[ebp]
  000eb	89 94 08 04 00
	00 00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+4], edx

; 739  : 
; 740  : 	division_id_database [side][type].next = 0;

  000f2	69 45 08 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000f9	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  000fc	c1 e1 04	 shl	 ecx, 4
  000ff	c7 84 08 08 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+8], 0

; 741  : 
; 742  : 	division_id_database [side][type].number_list = (int *) malloc_heap_mem (sizeof (int) * count);

  0010a	8b 45 10	 mov	 eax, DWORD PTR _count$[ebp]
  0010d	c1 e0 02	 shl	 eax, 2
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00116	69 4d 08 10 01
	00 00		 imul	 ecx, DWORD PTR _side$[ebp], 272
  0011d	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  00120	c1 e2 04	 shl	 edx, 4
  00123	89 84 11 0c 00
	00 00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[ecx+edx+12], eax

; 743  : 
; 744  : 	memcpy (division_id_database [side][type].number_list, number_list, sizeof (int) * count);

  0012a	8b 45 10	 mov	 eax, DWORD PTR _count$[ebp]
  0012d	c1 e0 02	 shl	 eax, 2
  00130	50		 push	 eax
  00131	8b 4d 14	 mov	 ecx, DWORD PTR _number_list$[ebp]
  00134	51		 push	 ecx
  00135	69 55 08 10 01
	00 00		 imul	 edx, DWORD PTR _side$[ebp], 272
  0013c	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  0013f	c1 e0 04	 shl	 eax, 4
  00142	8b 8c 02 0c 00
	00 00		 mov	 ecx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[edx+eax+12]
  00149	51		 push	 ecx
  0014a	e8 00 00 00 00	 call	 _memcpy
  0014f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 745  : }

  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 10 00	 ret	 16			; 00000010H
?add_division_id_data@@YGXHHHPAH@Z ENDP			; add_division_id_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?unpack_local_division_database@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
_valid$ = -20						; size = 4
_count$ = -16						; size = 4
_loop$ = -12						; size = 4
_type$ = -8						; size = 4
_side$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_local_division_database@@YGXW4PACK_MODES@@@Z PROC ; unpack_local_division_database, COMDAT

; 682  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	int
; 684  : 		side,
; 685  : 		type,
; 686  : 		loop,
; 687  : 		count,
; 688  : 		valid;
; 689  : 
; 690  : 	if (mode == PACK_MODE_SERVER_SESSION)

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	0f 85 2f 01 00
	00		 jne	 $LN1@unpack_loc

; 691  : 	{
; 692  : 		for (side = 0; side < NUM_ENTITY_SIDES; side ++)

  00013	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@unpack_loc
$LN2@unpack_loc:
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax
$LN4@unpack_loc:
  00025	83 7d fc 03	 cmp	 DWORD PTR _side$[ebp], 3
  00029	0f 8d 13 01 00
	00		 jge	 $LN1@unpack_loc

; 693  : 		{
; 694  : 			for (type = 0; type < NUM_ENTITY_SUB_TYPE_DIVISIONS; type ++)

  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _type$[ebp], 0
  00036	eb 09		 jmp	 SHORT $LN7@unpack_loc
$LN5@unpack_loc:
  00038	8b 45 f8	 mov	 eax, DWORD PTR _type$[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 f8	 mov	 DWORD PTR _type$[ebp], eax
$LN7@unpack_loc:
  00041	83 7d f8 11	 cmp	 DWORD PTR _type$[ebp], 17 ; 00000011H
  00045	0f 8d f2 00 00
	00		 jge	 $LN6@unpack_loc

; 695  : 			{
; 696  : 				valid = unpack_int_value (NULL, INT_TYPE_VALID);

  0004b	68 ef 00 00 00	 push	 239			; 000000efH
  00050	6a 00		 push	 0
  00052	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00057	89 45 ec	 mov	 DWORD PTR _valid$[ebp], eax

; 697  : 	
; 698  : 				division_id_database [side][type].valid = valid;

  0005a	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  00064	c1 e1 04	 shl	 ecx, 4
  00067	8b 55 ec	 mov	 edx, DWORD PTR _valid$[ebp]
  0006a	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx], edx

; 699  : 	
; 700  : 				if (valid)

  00071	83 7d ec 00	 cmp	 DWORD PTR _valid$[ebp], 0
  00075	0f 84 bd 00 00
	00		 je	 $LN12@unpack_loc

; 701  : 				{
; 702  : 					count = unpack_int_value (NULL, INT_TYPE_COUNT);

  0007b	6a 21		 push	 33			; 00000021H
  0007d	6a 00		 push	 0
  0007f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00084	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 703  : 	
; 704  : 					ASSERT (count > 0);

  00087	83 7d f0 00	 cmp	 DWORD PTR _count$[ebp], 0
  0008b	7f 18		 jg	 SHORT $LN13@unpack_loc
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA
  00092	83 c0 16	 add	 eax, 22			; 00000016H
  00095	50		 push	 eax
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_09DMMLFBJB@count?5?$DO?50@
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@unpack_loc:

; 705  : 	
; 706  : 					division_id_database [side][type].count = count;

  000a5	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  000af	c1 e1 04	 shl	 ecx, 4
  000b2	8b 55 f0	 mov	 edx, DWORD PTR _count$[ebp]
  000b5	89 94 08 04 00
	00 00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+4], edx

; 707  : 	
; 708  : 					division_id_database [side][type].next = unpack_int_value (NULL, INT_TYPE_COUNT);

  000bc	6a 21		 push	 33			; 00000021H
  000be	6a 00		 push	 0
  000c0	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000c5	69 4d fc 10 01
	00 00		 imul	 ecx, DWORD PTR _side$[ebp], 272
  000cc	8b 55 f8	 mov	 edx, DWORD PTR _type$[ebp]
  000cf	c1 e2 04	 shl	 edx, 4
  000d2	89 84 11 08 00
	00 00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[ecx+edx+8], eax

; 709  : 	
; 710  : 					division_id_database [side][type].number_list = (int *) malloc_heap_mem (sizeof (int) * count);

  000d9	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000dc	c1 e0 02	 shl	 eax, 2
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  000e5	69 4d fc 10 01
	00 00		 imul	 ecx, DWORD PTR _side$[ebp], 272
  000ec	8b 55 f8	 mov	 edx, DWORD PTR _type$[ebp]
  000ef	c1 e2 04	 shl	 edx, 4
  000f2	89 84 11 0c 00
	00 00		 mov	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[ecx+edx+12], eax

; 711  : 	
; 712  : 					for (loop = 0; loop < count; loop ++)

  000f9	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00100	eb 09		 jmp	 SHORT $LN10@unpack_loc
$LN8@unpack_loc:
  00102	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00105	83 c0 01	 add	 eax, 1
  00108	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN10@unpack_loc:
  0010b	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  0010e	3b 45 f0	 cmp	 eax, DWORD PTR _count$[ebp]
  00111	7d 25		 jge	 SHORT $LN12@unpack_loc

; 713  : 					{
; 714  : 						division_id_database [side][type].number_list [loop] = unpack_int_value (NULL, INT_TYPE_COUNT);

  00113	6a 21		 push	 33			; 00000021H
  00115	6a 00		 push	 0
  00117	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0011c	69 4d fc 10 01
	00 00		 imul	 ecx, DWORD PTR _side$[ebp], 272
  00123	8b 55 f8	 mov	 edx, DWORD PTR _type$[ebp]
  00126	c1 e2 04	 shl	 edx, 4
  00129	8b 8c 11 0c 00
	00 00		 mov	 ecx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[ecx+edx+12]
  00130	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  00133	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax

; 715  : 					}

  00136	eb ca		 jmp	 SHORT $LN8@unpack_loc
$LN12@unpack_loc:

; 716  : 				}
; 717  : 			}

  00138	e9 fb fe ff ff	 jmp	 $LN5@unpack_loc
$LN6@unpack_loc:

; 718  : 		}

  0013d	e9 da fe ff ff	 jmp	 $LN2@unpack_loc
$LN1@unpack_loc:

; 719  : 	}
; 720  : }

  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	5b		 pop	 ebx
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c2 04 00	 ret	 4
?unpack_local_division_database@@YGXW4PACK_MODES@@@Z ENDP ; unpack_local_division_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?pack_local_division_database@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
_valid$ = -20						; size = 4
_count$ = -16						; size = 4
_loop$ = -12						; size = 4
_type$ = -8						; size = 4
_side$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_local_division_database@@YGXW4PACK_MODES@@@Z PROC	; pack_local_division_database, COMDAT

; 639  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 640  : 	int
; 641  : 		side,
; 642  : 		type,
; 643  : 		loop,
; 644  : 		count,
; 645  : 		valid;
; 646  : 
; 647  : 	if (mode == PACK_MODE_SERVER_SESSION)

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	0f 85 13 01 00
	00		 jne	 $LN1@pack_local

; 648  : 	{
; 649  : 		for (side = 0; side < NUM_ENTITY_SIDES; side ++)

  00013	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@pack_local
$LN2@pack_local:
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax
$LN4@pack_local:
  00025	83 7d fc 03	 cmp	 DWORD PTR _side$[ebp], 3
  00029	0f 8d f7 00 00
	00		 jge	 $LN1@pack_local

; 650  : 		{
; 651  : 			for (type = 0; type < NUM_ENTITY_SUB_TYPE_DIVISIONS; type ++)

  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _type$[ebp], 0
  00036	eb 09		 jmp	 SHORT $LN7@pack_local
$LN5@pack_local:
  00038	8b 45 f8	 mov	 eax, DWORD PTR _type$[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 f8	 mov	 DWORD PTR _type$[ebp], eax
$LN7@pack_local:
  00041	83 7d f8 11	 cmp	 DWORD PTR _type$[ebp], 17 ; 00000011H
  00045	0f 8d d6 00 00
	00		 jge	 $LN6@pack_local

; 652  : 			{
; 653  : 				valid = division_id_database [side][type].valid;

  0004b	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  00055	c1 e1 04	 shl	 ecx, 4
  00058	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx]
  0005f	89 55 ec	 mov	 DWORD PTR _valid$[ebp], edx

; 654  : 	
; 655  : 				pack_int_value (NULL, INT_TYPE_VALID, valid);

  00062	8b 45 ec	 mov	 eax, DWORD PTR _valid$[ebp]
  00065	50		 push	 eax
  00066	68 ef 00 00 00	 push	 239			; 000000efH
  0006b	6a 00		 push	 0
  0006d	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 656  : 	
; 657  : 				if (valid)

  00072	83 7d ec 00	 cmp	 DWORD PTR _valid$[ebp], 0
  00076	0f 84 a0 00 00
	00		 je	 $LN12@pack_local

; 658  : 				{
; 659  : 					count = division_id_database [side][type].count;

  0007c	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  00086	c1 e1 04	 shl	 ecx, 4
  00089	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+4]
  00090	89 55 f0	 mov	 DWORD PTR _count$[ebp], edx

; 660  : 					
; 661  : 					ASSERT(count > 0);			

  00093	83 7d f0 00	 cmp	 DWORD PTR _count$[ebp], 0
  00097	7f 18		 jg	 SHORT $LN13@pack_local
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_division_database@@YGXW4PACK_MODES@@@Z@4JA
  0009e	83 c0 16	 add	 eax, 22			; 00000016H
  000a1	50		 push	 eax
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_09DMMLFBJB@count?5?$DO?50@
  000ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@pack_local:

; 662  : 	
; 663  : 					pack_int_value (NULL, INT_TYPE_COUNT, count);

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000b4	50		 push	 eax
  000b5	6a 21		 push	 33			; 00000021H
  000b7	6a 00		 push	 0
  000b9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 664  : 	
; 665  : 					pack_int_value (NULL, INT_TYPE_COUNT, division_id_database [side][type].next);

  000be	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000c5	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  000c8	c1 e1 04	 shl	 ecx, 4
  000cb	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+8]
  000d2	52		 push	 edx
  000d3	6a 21		 push	 33			; 00000021H
  000d5	6a 00		 push	 0
  000d7	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 666  : 	
; 667  : 					for (loop = 0; loop < count; loop ++)

  000dc	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  000e3	eb 09		 jmp	 SHORT $LN10@pack_local
$LN8@pack_local:
  000e5	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  000e8	83 c0 01	 add	 eax, 1
  000eb	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN10@pack_local:
  000ee	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  000f1	3b 45 f0	 cmp	 eax, DWORD PTR _count$[ebp]
  000f4	7d 26		 jge	 SHORT $LN12@pack_local

; 668  : 					{
; 669  : 						pack_int_value (NULL, INT_TYPE_COUNT, division_id_database [side][type].number_list [loop]);

  000f6	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000fd	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  00100	c1 e1 04	 shl	 ecx, 4
  00103	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+12]
  0010a	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  0010d	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00110	51		 push	 ecx
  00111	6a 21		 push	 33			; 00000021H
  00113	6a 00		 push	 0
  00115	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 670  : 					}

  0011a	eb c9		 jmp	 SHORT $LN8@pack_local
$LN12@pack_local:

; 671  : 				}
; 672  : 			}

  0011c	e9 17 ff ff ff	 jmp	 $LN5@pack_local
$LN6@pack_local:

; 673  : 		}

  00121	e9 f6 fe ff ff	 jmp	 $LN2@pack_local
$LN1@pack_local:

; 674  : 	}
; 675  : }

  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c2 04 00	 ret	 4
?pack_local_division_database@@YGXW4PACK_MODES@@@Z ENDP	; pack_local_division_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?deinitialise_division_database@@YGXXZ
_TEXT	SEGMENT
_type$ = -8						; size = 4
_side$ = -4						; size = 4
?deinitialise_division_database@@YGXXZ PROC		; deinitialise_division_database, COMDAT

; 603  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 604  : 	int
; 605  : 		side,
; 606  : 		type;
; 607  : 
; 608  : 	for (side = 0; side < NUM_ENTITY_SIDES; side ++)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@deinitiali
$LN2@deinitiali:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax
$LN4@deinitiali:
  0001b	83 7d fc 03	 cmp	 DWORD PTR _side$[ebp], 3
  0001f	0f 8d af 00 00
	00		 jge	 $LN1@deinitiali

; 609  : 	{
; 610  : 		for (type = 0; type < NUM_ENTITY_SUB_TYPE_DIVISIONS; type ++)

  00025	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _type$[ebp], 0
  0002c	eb 09		 jmp	 SHORT $LN7@deinitiali
$LN5@deinitiali:
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _type$[ebp]
  00031	83 c0 01	 add	 eax, 1
  00034	89 45 f8	 mov	 DWORD PTR _type$[ebp], eax
$LN7@deinitiali:
  00037	83 7d f8 11	 cmp	 DWORD PTR _type$[ebp], 17 ; 00000011H
  0003b	0f 8d 8e 00 00
	00		 jge	 $LN6@deinitiali

; 611  : 		{
; 612  : 			if (division_id_database [side][type].valid)

  00041	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  0004b	c1 e1 04	 shl	 ecx, 4
  0004e	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx], 0
  00056	74 72		 je	 SHORT $LN8@deinitiali

; 613  : 			{
; 614  : 				#if DEBUG_MODULE
; 615  : 
; 616  : 				debug_filtered_log ("SIDE %s - %s : Used %d / %d",
; 617  : 											entity_side_short_names [side], 
; 618  : 											entity_sub_type_division_names [type],
; 619  : 											division_id_database [side][type].next,
; 620  : 											division_id_database [side][type].count);
; 621  : 
; 622  : 				#endif
; 623  : 
; 624  : 				debug_assert (division_id_database [side][type].count > 0);

  00058	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	c1 e1 04	 shl	 ecx, 4
  00065	83 bc 08 04 00
	00 00 00	 cmp	 DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+4], 0
  0006d	7f 20		 jg	 SHORT $LN9@deinitiali
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??deinitialise_division_database@@YGXXZ@4JA
  00074	83 c0 15	 add	 eax, 21			; 00000015H
  00077	50		 push	 eax
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@JBHGAFOL@division_id_database?5?$FLside?$FN?$FLtyp@
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  00087	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0008c	83 c4 10	 add	 esp, 16			; 00000010H
$LN9@deinitiali:

; 625  : 
; 626  : 				free_mem (division_id_database [side][type].number_list);

  0008f	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  00099	c1 e1 04	 shl	 ecx, 4
  0009c	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx+12]
  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 627  : 
; 628  : 				memset (&division_id_database [side][type], 0, sizeof (division_id_data));

  000a9	6a 10		 push	 16			; 00000010H
  000ab	6a 00		 push	 0
  000ad	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  000b4	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  000b7	c1 e1 04	 shl	 ecx, 4
  000ba	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx]
  000c1	52		 push	 edx
  000c2	e8 00 00 00 00	 call	 _memset
  000c7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@deinitiali:

; 629  : 			}
; 630  : 		}

  000ca	e9 5f ff ff ff	 jmp	 $LN5@deinitiali
$LN6@deinitiali:

; 631  : 	}

  000cf	e9 3e ff ff ff	 jmp	 $LN2@deinitiali
$LN1@deinitiali:

; 632  : }

  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?deinitialise_division_database@@YGXXZ ENDP		; deinitialise_division_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?initialise_division_database@@YGXXZ
_TEXT	SEGMENT
_type$ = -8						; size = 4
_side$ = -4						; size = 4
?initialise_division_database@@YGXXZ PROC		; initialise_division_database, COMDAT

; 584  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 585  : 	int
; 586  : 		side,
; 587  : 		type;
; 588  : 
; 589  : 	for (side = 0; side < NUM_ENTITY_SIDES; side ++)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax
$LN4@initialise:
  0001b	83 7d fc 03	 cmp	 DWORD PTR _side$[ebp], 3
  0001f	7d 3d		 jge	 SHORT $LN1@initialise

; 590  : 	{
; 591  : 		for (type = 0; type < NUM_ENTITY_SUB_TYPE_DIVISIONS; type ++)

  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _type$[ebp], 0
  00028	eb 09		 jmp	 SHORT $LN7@initialise
$LN5@initialise:
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _type$[ebp]
  0002d	83 c0 01	 add	 eax, 1
  00030	89 45 f8	 mov	 DWORD PTR _type$[ebp], eax
$LN7@initialise:
  00033	83 7d f8 11	 cmp	 DWORD PTR _type$[ebp], 17 ; 00000011H
  00037	7d 23		 jge	 SHORT $LN6@initialise

; 592  : 		{
; 593  : 			memset (&division_id_database [side][type], 0, sizeof (division_id_data));

  00039	6a 10		 push	 16			; 00000010H
  0003b	6a 00		 push	 0
  0003d	69 45 fc 10 01
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 272
  00044	8b 4d f8	 mov	 ecx, DWORD PTR _type$[ebp]
  00047	c1 e1 04	 shl	 ecx, 4
  0004a	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR ?division_id_database@@3PAY0BB@UDIVISION_ID_DATA@@A[eax+ecx]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 594  : 		}

  0005a	eb ce		 jmp	 SHORT $LN5@initialise
$LN6@initialise:

; 595  : 	}

  0005c	eb b4		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 596  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?initialise_division_database@@YGXXZ ENDP		; initialise_division_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?set_local_division_name@@YGHPAUENTITY@@PAD@Z
_TEXT	SEGMENT
tv380 = -116						; size = 4
tv354 = -116						; size = 4
tv334 = -116						; size = 4
tv306 = -116						; size = 4
tv247 = -116						; size = 4
tv220 = -116						; size = 4
tv199 = -116						; size = 4
tv181 = -116						; size = 4
tv159 = -116						; size = 4
tv95 = -116						; size = 4
tv372 = -112						; size = 4
tv346 = -112						; size = 4
tv326 = -112						; size = 4
tv318 = -112						; size = 4
tv298 = -112						; size = 4
tv271 = -112						; size = 4
tv258 = -112						; size = 4
tv239 = -112						; size = 4
tv212 = -112						; size = 4
tv192 = -112						; size = 4
tv173 = -112						; size = 4
tv151 = -112						; size = 4
tv139 = -112						; size = 4
tv87 = -112						; size = 4
tv79 = -112						; size = 4
_division$1 = -44					; size = 4
_keysite$2 = -40					; size = 4
_group$ = -36						; size = 4
_id_string$ = -32					; size = 10
_extension$ = -20					; size = 10
_division_id$ = -8					; size = 4
_division_type$ = -4					; size = 4
_en$ = 8						; size = 4
_s$ = 12						; size = 4
?set_local_division_name@@YGHPAUENTITY@@PAD@Z PROC	; set_local_division_name, COMDAT

; 457  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 458  : 	int
; 459  : 		division_type,
; 460  : 		division_id;
; 461  : 
; 462  : 	char
; 463  : 		extension [10],
; 464  : 		id_string [10];
; 465  : 
; 466  : 	entity
; 467  : 		*group;
; 468  : 
; 469  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@set_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@set_local_:

; 470  : 
; 471  : 	ASSERT (s);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _s$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN7@set_local_
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00032	83 c0 0e	 add	 eax, 14			; 0000000eH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_01LKDEMHDF@s@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@set_local_:

; 472  : 
; 473  : 	if (get_local_entity_type (en) == ENTITY_TYPE_DIVISION)

  00045	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00049	74 0a		 je	 SHORT $LN24@set_local_
  0004b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00050	89 4d 90	 mov	 DWORD PTR tv79[ebp], ecx
  00053	eb 1d		 jmp	 SHORT $LN25@set_local_
$LN24@set_local_:
  00055	68 d9 01 00 00	 push	 473			; 000001d9H
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00065	52		 push	 edx
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006b	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN25@set_local_:
  00072	83 7d 90 08	 cmp	 DWORD PTR tv79[ebp], 8
  00076	0f 85 85 00 00
	00		 jne	 $LN8@set_local_

; 474  : 	{
; 475  : 		division_id = get_local_entity_int_value (en, INT_TYPE_DIVISION_ID);

  0007c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00080	74 0a		 je	 SHORT $LN26@set_local_
  00082	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00085	8b 08		 mov	 ecx, DWORD PTR [eax]
  00087	89 4d 90	 mov	 DWORD PTR tv87[ebp], ecx
  0008a	eb 21		 jmp	 SHORT $LN27@set_local_
$LN26@set_local_:
  0008c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00092	83 c2 12	 add	 edx, 18			; 00000012H
  00095	52		 push	 edx
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a6	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN27@set_local_:
  000ad	b9 01 00 00 00	 mov	 ecx, 1
  000b2	85 c9		 test	 ecx, ecx
  000b4	74 09		 je	 SHORT $LN28@set_local_
  000b6	c7 45 8c 30 00
	00 00		 mov	 DWORD PTR tv95[ebp], 48	; 00000030H
  000bd	eb 21		 jmp	 SHORT $LN29@set_local_
$LN28@set_local_:
  000bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  000c5	83 c2 12	 add	 edx, 18			; 00000012H
  000c8	52		 push	 edx
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d9	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN29@set_local_:
  000e0	6a 30		 push	 48			; 00000030H
  000e2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000e5	51		 push	 ecx
  000e6	69 55 90 5c 04
	00 00		 imul	 edx, DWORD PTR tv87[ebp], 1116
  000ed	8b 45 8c	 mov	 eax, DWORD PTR tv95[ebp]
  000f0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000f7	ff d1		 call	 ecx
  000f9	89 45 f8	 mov	 DWORD PTR _division_id$[ebp], eax

; 476  : 	}
; 477  : 	else

  000fc	e9 6d 02 00 00	 jmp	 $LN9@set_local_
$LN8@set_local_:

; 478  : 	{
; 479  : 		ASSERT (get_local_entity_type (en) == ENTITY_TYPE_GROUP);

  00101	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00105	74 0a		 je	 SHORT $LN30@set_local_
  00107	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0010a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010c	89 4d 90	 mov	 DWORD PTR tv139[ebp], ecx
  0010f	eb 21		 jmp	 SHORT $LN31@set_local_
$LN30@set_local_:
  00111	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00117	83 c2 16	 add	 edx, 22			; 00000016H
  0011a	52		 push	 edx
  0011b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012b	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN31@set_local_:
  00132	83 7d 90 0c	 cmp	 DWORD PTR tv139[ebp], 12 ; 0000000cH
  00136	74 18		 je	 SHORT $LN10@set_local_
  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  0013d	83 c0 16	 add	 eax, 22			; 00000016H
  00140	50		 push	 eax
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00146	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0014b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@set_local_:

; 480  : 
; 481  : 		division_id = 1;

  00150	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _division_id$[ebp], 1

; 482  : 
; 483  : 		group = en;

  00157	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015a	89 45 dc	 mov	 DWORD PTR _group$[ebp], eax
$LN2@set_local_:

; 484  : 
; 485  : 		while (get_local_entity_child_succ (group, LIST_TYPE_DIVISION))

  0015d	83 7d dc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00161	74 0a		 je	 SHORT $LN32@set_local_
  00163	8b 45 dc	 mov	 eax, DWORD PTR _group$[ebp]
  00166	8b 08		 mov	 ecx, DWORD PTR [eax]
  00168	89 4d 90	 mov	 DWORD PTR tv151[ebp], ecx
  0016b	eb 21		 jmp	 SHORT $LN33@set_local_
$LN32@set_local_:
  0016d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00173	83 c2 1c	 add	 edx, 28			; 0000001cH
  00176	52		 push	 edx
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00187	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN33@set_local_:
  0018e	b9 01 00 00 00	 mov	 ecx, 1
  00193	85 c9		 test	 ecx, ecx
  00195	74 09		 je	 SHORT $LN34@set_local_
  00197	c7 45 8c 0b 00
	00 00		 mov	 DWORD PTR tv159[ebp], 11 ; 0000000bH
  0019e	eb 21		 jmp	 SHORT $LN35@set_local_
$LN34@set_local_:
  001a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  001a6	83 c2 1c	 add	 edx, 28			; 0000001cH
  001a9	52		 push	 edx
  001aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ba	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN35@set_local_:
  001c1	6a 0b		 push	 11			; 0000000bH
  001c3	8b 4d dc	 mov	 ecx, DWORD PTR _group$[ebp]
  001c6	51		 push	 ecx
  001c7	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv151[ebp], 180
  001ce	8b 45 8c	 mov	 eax, DWORD PTR tv159[ebp]
  001d1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001d8	ff d1		 call	 ecx
  001da	85 c0		 test	 eax, eax
  001dc	0f 84 8e 00 00
	00		 je	 $LN3@set_local_

; 486  : 		{
; 487  : 			division_id ++;

  001e2	8b 45 f8	 mov	 eax, DWORD PTR _division_id$[ebp]
  001e5	83 c0 01	 add	 eax, 1
  001e8	89 45 f8	 mov	 DWORD PTR _division_id$[ebp], eax

; 488  : 
; 489  : 			group = get_local_entity_child_succ (group, LIST_TYPE_DIVISION);

  001eb	83 7d dc 00	 cmp	 DWORD PTR _group$[ebp], 0
  001ef	74 0a		 je	 SHORT $LN36@set_local_
  001f1	8b 45 dc	 mov	 eax, DWORD PTR _group$[ebp]
  001f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f6	89 4d 90	 mov	 DWORD PTR tv173[ebp], ecx
  001f9	eb 21		 jmp	 SHORT $LN37@set_local_
$LN36@set_local_:
  001fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00201	83 c2 20	 add	 edx, 32			; 00000020H
  00204	52		 push	 edx
  00205	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0020f	50		 push	 eax
  00210	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00215	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN37@set_local_:
  0021c	b9 01 00 00 00	 mov	 ecx, 1
  00221	85 c9		 test	 ecx, ecx
  00223	74 09		 je	 SHORT $LN38@set_local_
  00225	c7 45 8c 0b 00
	00 00		 mov	 DWORD PTR tv181[ebp], 11 ; 0000000bH
  0022c	eb 21		 jmp	 SHORT $LN39@set_local_
$LN38@set_local_:
  0022e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00234	83 c2 20	 add	 edx, 32			; 00000020H
  00237	52		 push	 edx
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00248	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN39@set_local_:
  0024f	6a 0b		 push	 11			; 0000000bH
  00251	8b 4d dc	 mov	 ecx, DWORD PTR _group$[ebp]
  00254	51		 push	 ecx
  00255	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv173[ebp], 180
  0025c	8b 45 8c	 mov	 eax, DWORD PTR tv181[ebp]
  0025f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00266	ff d1		 call	 ecx
  00268	89 45 dc	 mov	 DWORD PTR _group$[ebp], eax

; 490  : 		}

  0026b	e9 ed fe ff ff	 jmp	 $LN2@set_local_
$LN3@set_local_:

; 491  : 
; 492  : 		if (!get_local_entity_int_value (en, INT_TYPE_AIRCRAFT_GROUP))

  00270	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00274	74 0a		 je	 SHORT $LN40@set_local_
  00276	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00279	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027b	89 4d 90	 mov	 DWORD PTR tv192[ebp], ecx
  0027e	eb 1d		 jmp	 SHORT $LN41@set_local_
$LN40@set_local_:
  00280	68 ec 01 00 00	 push	 492			; 000001ecH
  00285	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00290	52		 push	 edx
  00291	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00296	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv192[ebp], 0
$LN41@set_local_:
  0029d	b8 01 00 00 00	 mov	 eax, 1
  002a2	85 c0		 test	 eax, eax
  002a4	74 09		 je	 SHORT $LN42@set_local_
  002a6	c7 45 8c 05 00
	00 00		 mov	 DWORD PTR tv199[ebp], 5
  002ad	eb 1d		 jmp	 SHORT $LN43@set_local_
$LN42@set_local_:
  002af	68 ec 01 00 00	 push	 492			; 000001ecH
  002b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002bf	51		 push	 ecx
  002c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c5	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN43@set_local_:
  002cc	6a 05		 push	 5
  002ce	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002d1	52		 push	 edx
  002d2	69 45 90 5c 04
	00 00		 imul	 eax, DWORD PTR tv192[ebp], 1116
  002d9	8b 4d 8c	 mov	 ecx, DWORD PTR tv199[ebp]
  002dc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002e3	ff d2		 call	 edx
  002e5	85 c0		 test	 eax, eax
  002e7	0f 85 81 00 00
	00		 jne	 $LN9@set_local_

; 493  : 		{
; 494  : 			set_local_entity_int_value (en, INT_TYPE_GROUP_CALLSIGN, division_id);

  002ed	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002f1	74 0a		 je	 SHORT $LN44@set_local_
  002f3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f8	89 4d 90	 mov	 DWORD PTR tv212[ebp], ecx
  002fb	eb 21		 jmp	 SHORT $LN45@set_local_
$LN44@set_local_:
  002fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00303	83 c2 25	 add	 edx, 37			; 00000025H
  00306	52		 push	 edx
  00307	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00311	50		 push	 eax
  00312	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00317	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN45@set_local_:
  0031e	b9 01 00 00 00	 mov	 ecx, 1
  00323	85 c9		 test	 ecx, ecx
  00325	74 09		 je	 SHORT $LN46@set_local_
  00327	c7 45 8c 44 00
	00 00		 mov	 DWORD PTR tv220[ebp], 68 ; 00000044H
  0032e	eb 21		 jmp	 SHORT $LN47@set_local_
$LN46@set_local_:
  00330	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00336	83 c2 25	 add	 edx, 37			; 00000025H
  00339	52		 push	 edx
  0033a	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00344	50		 push	 eax
  00345	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034a	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN47@set_local_:
  00351	8b 4d f8	 mov	 ecx, DWORD PTR _division_id$[ebp]
  00354	51		 push	 ecx
  00355	6a 44		 push	 68			; 00000044H
  00357	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0035a	52		 push	 edx
  0035b	69 45 90 5c 04
	00 00		 imul	 eax, DWORD PTR tv212[ebp], 1116
  00362	8b 4d 8c	 mov	 ecx, DWORD PTR tv220[ebp]
  00365	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  0036c	ff d2		 call	 edx
$LN9@set_local_:

; 495  : 		}
; 496  : 	}
; 497  : 
; 498  : 	sprintf (id_string, "%d", division_id);

  0036e	8b 45 f8	 mov	 eax, DWORD PTR _division_id$[ebp]
  00371	50		 push	 eax
  00372	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00377	8d 4d e0	 lea	 ecx, DWORD PTR _id_string$[ebp]
  0037a	51		 push	 ecx
  0037b	e8 00 00 00 00	 call	 _sprintf
  00380	83 c4 0c	 add	 esp, 12			; 0000000cH

; 499  : 
; 500  : 	//
; 501  : 	// Specify extension after number (bloody English language)
; 502  : 	//	
; 503  : 
; 504  : 	get_number_extension (division_id, extension);

  00383	8d 45 ec	 lea	 eax, DWORD PTR _extension$[ebp]
  00386	50		 push	 eax
  00387	8b 4d f8	 mov	 ecx, DWORD PTR _division_id$[ebp]
  0038a	51		 push	 ecx
  0038b	e8 00 00 00 00	 call	 ?get_number_extension@@YGXHPAD@Z ; get_number_extension

; 505  : 
; 506  : 	strcat (id_string, extension);

  00390	8d 45 ec	 lea	 eax, DWORD PTR _extension$[ebp]
  00393	50		 push	 eax
  00394	8d 4d e0	 lea	 ecx, DWORD PTR _id_string$[ebp]
  00397	51		 push	 ecx
  00398	e8 00 00 00 00	 call	 _strcat
  0039d	83 c4 08	 add	 esp, 8

; 507  : 
; 508  : 	//
; 509  : 	// Store result
; 510  : 	//
; 511  : 	
; 512  : 	division_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  003a0	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003a4	74 0a		 je	 SHORT $LN48@set_local_
  003a6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ab	89 4d 90	 mov	 DWORD PTR tv239[ebp], ecx
  003ae	eb 21		 jmp	 SHORT $LN49@set_local_
$LN48@set_local_:
  003b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  003b6	83 c2 37	 add	 edx, 55			; 00000037H
  003b9	52		 push	 edx
  003ba	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003c4	50		 push	 eax
  003c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ca	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv239[ebp], 0
$LN49@set_local_:
  003d1	b9 01 00 00 00	 mov	 ecx, 1
  003d6	85 c9		 test	 ecx, ecx
  003d8	74 09		 je	 SHORT $LN50@set_local_
  003da	c7 45 8c 34 00
	00 00		 mov	 DWORD PTR tv247[ebp], 52 ; 00000034H
  003e1	eb 21		 jmp	 SHORT $LN51@set_local_
$LN50@set_local_:
  003e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  003e9	83 c2 37	 add	 edx, 55			; 00000037H
  003ec	52		 push	 edx
  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003fd	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv247[ebp], 0
$LN51@set_local_:
  00404	6a 34		 push	 52			; 00000034H
  00406	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00409	51		 push	 ecx
  0040a	69 55 90 5c 04
	00 00		 imul	 edx, DWORD PTR tv239[ebp], 1116
  00411	8b 45 8c	 mov	 eax, DWORD PTR tv247[ebp]
  00414	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0041b	ff d1		 call	 ecx
  0041d	89 45 fc	 mov	 DWORD PTR _division_type$[ebp], eax

; 513  : 	
; 514  : 	if (get_local_entity_type (en) == ENTITY_TYPE_DIVISION)

  00420	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00424	74 0a		 je	 SHORT $LN52@set_local_
  00426	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00429	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042b	89 4d 90	 mov	 DWORD PTR tv258[ebp], ecx
  0042e	eb 1d		 jmp	 SHORT $LN53@set_local_
$LN52@set_local_:
  00430	68 02 02 00 00	 push	 514			; 00000202H
  00435	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00440	52		 push	 edx
  00441	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00446	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv258[ebp], 0
$LN53@set_local_:
  0044d	83 7d 90 08	 cmp	 DWORD PTR tv258[ebp], 8
  00451	75 20		 jne	 SHORT $LN12@set_local_

; 515  : 	{
; 516  : 		sprintf (s, division_database [division_type].full_name, id_string);

  00453	8d 45 e0	 lea	 eax, DWORD PTR _id_string$[ebp]
  00456	50		 push	 eax
  00457	6b 4d fc 0c	 imul	 ecx, DWORD PTR _division_type$[ebp], 12
  0045b	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?division_database@@3QBUDIVISION_DATA@@B[ecx]
  00461	52		 push	 edx
  00462	8b 45 0c	 mov	 eax, DWORD PTR _s$[ebp]
  00465	50		 push	 eax
  00466	e8 00 00 00 00	 call	 _sprintf
  0046b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 517  : 	}
; 518  : 	else

  0046e	e9 21 03 00 00	 jmp	 $LN13@set_local_
$LN12@set_local_:

; 519  : 	{
; 520  : 		switch (group_database [division_type].platoon_id_type)

  00473	6b 45 fc 64	 imul	 eax, DWORD PTR _division_type$[ebp], 100
  00477	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  0047d	c1 e9 05	 shr	 ecx, 5
  00480	83 e1 07	 and	 ecx, 7
  00483	89 4d 90	 mov	 DWORD PTR tv271[ebp], ecx
  00486	83 7d 90 04	 cmp	 DWORD PTR tv271[ebp], 4
  0048a	0f 87 e6 02 00
	00		 ja	 $LN22@set_local_
  00490	8b 55 90	 mov	 edx, DWORD PTR tv271[ebp]
  00493	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN72@set_local_[edx*4]
$LN14@set_local_:

; 521  : 		{
; 522  : 			case PLATOON_ID_NONE:
; 523  : 			{
; 524  : 				sprintf (s, group_database [division_type].platoon_name);

  0049a	6b 45 fc 64	 imul	 eax, DWORD PTR _division_type$[ebp], 100
  0049e	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+52]
  004a4	51		 push	 ecx
  004a5	8b 55 0c	 mov	 edx, DWORD PTR _s$[ebp]
  004a8	52		 push	 edx
  004a9	e8 00 00 00 00	 call	 _sprintf
  004ae	83 c4 08	 add	 esp, 8

; 525  : 
; 526  : 				break;

  004b1	e9 de 02 00 00	 jmp	 $LN13@set_local_
$LN15@set_local_:

; 527  : 			}
; 528  : 			case PLATOON_ID_NUMBER:
; 529  : 			{
; 530  : 				sprintf (s, group_database [division_type].platoon_name, id_string);

  004b6	8d 45 e0	 lea	 eax, DWORD PTR _id_string$[ebp]
  004b9	50		 push	 eax
  004ba	6b 4d fc 64	 imul	 ecx, DWORD PTR _division_type$[ebp], 100
  004be	8b 91 34 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52]
  004c4	52		 push	 edx
  004c5	8b 45 0c	 mov	 eax, DWORD PTR _s$[ebp]
  004c8	50		 push	 eax
  004c9	e8 00 00 00 00	 call	 _sprintf
  004ce	83 c4 0c	 add	 esp, 12			; 0000000cH

; 531  : 
; 532  : 				break;

  004d1	e9 be 02 00 00	 jmp	 $LN13@set_local_
$LN16@set_local_:

; 533  : 			}
; 534  : 			case PLATOON_ID_LETTER:
; 535  : 			{
; 536  : 				sprintf (s, group_database [division_type].platoon_name, ((division_id - 1) + 'A'));

  004d6	8b 45 f8	 mov	 eax, DWORD PTR _division_id$[ebp]
  004d9	83 c0 40	 add	 eax, 64			; 00000040H
  004dc	50		 push	 eax
  004dd	6b 4d fc 64	 imul	 ecx, DWORD PTR _division_type$[ebp], 100
  004e1	8b 91 34 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+52]
  004e7	52		 push	 edx
  004e8	8b 45 0c	 mov	 eax, DWORD PTR _s$[ebp]
  004eb	50		 push	 eax
  004ec	e8 00 00 00 00	 call	 _sprintf
  004f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 537  : 
; 538  : 				break;

  004f4	e9 9b 02 00 00	 jmp	 $LN13@set_local_
$LN17@set_local_:

; 539  : 			}
; 540  : 			case PLATOON_ID_CALLSIGN:
; 541  : 			{
; 542  : 				strcpy (s, get_local_entity_string (en, STRING_TYPE_GROUP_CALLSIGN));

  004f9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004fd	74 0a		 je	 SHORT $LN54@set_local_
  004ff	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00502	8b 08		 mov	 ecx, DWORD PTR [eax]
  00504	89 4d 90	 mov	 DWORD PTR tv298[ebp], ecx
  00507	eb 21		 jmp	 SHORT $LN55@set_local_
$LN54@set_local_:
  00509	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  0050f	83 c2 55	 add	 edx, 85			; 00000055H
  00512	52		 push	 edx
  00513	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00518	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0051d	50		 push	 eax
  0051e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00523	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv298[ebp], 0
$LN55@set_local_:
  0052a	b9 01 00 00 00	 mov	 ecx, 1
  0052f	85 c9		 test	 ecx, ecx
  00531	74 09		 je	 SHORT $LN56@set_local_
  00533	c7 45 8c 04 00
	00 00		 mov	 DWORD PTR tv306[ebp], 4
  0053a	eb 21		 jmp	 SHORT $LN57@set_local_
$LN56@set_local_:
  0053c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00542	83 c2 55	 add	 edx, 85			; 00000055H
  00545	52		 push	 edx
  00546	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00550	50		 push	 eax
  00551	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00556	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv306[ebp], 0
$LN57@set_local_:
  0055d	6a 04		 push	 4
  0055f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00562	51		 push	 ecx
  00563	6b 55 90 34	 imul	 edx, DWORD PTR tv298[ebp], 52
  00567	8b 45 8c	 mov	 eax, DWORD PTR tv306[ebp]
  0056a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00571	ff d1		 call	 ecx
  00573	50		 push	 eax
  00574	8b 55 0c	 mov	 edx, DWORD PTR _s$[ebp]
  00577	52		 push	 edx
  00578	e8 00 00 00 00	 call	 _strcpy
  0057d	83 c4 08	 add	 esp, 8

; 543  : 
; 544  : 				break;

  00580	e9 0f 02 00 00	 jmp	 $LN13@set_local_
$LN18@set_local_:

; 545  : 			}
; 546  : 			case PLATOON_ID_KEYSITE:
; 547  : 			{
; 548  : 				entity
; 549  : 					*keysite,
; 550  : 					*division;
; 551  : 
; 552  : 				if (get_local_entity_type (en) == ENTITY_TYPE_GROUP)

  00585	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00589	74 0a		 je	 SHORT $LN58@set_local_
  0058b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0058e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00590	89 4d 90	 mov	 DWORD PTR tv318[ebp], ecx
  00593	eb 1d		 jmp	 SHORT $LN59@set_local_
$LN58@set_local_:
  00595	68 28 02 00 00	 push	 552			; 00000228H
  0059a	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0059f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005a5	52		 push	 edx
  005a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ab	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv318[ebp], 0
$LN59@set_local_:
  005b2	83 7d 90 0c	 cmp	 DWORD PTR tv318[ebp], 12 ; 0000000cH
  005b6	0f 85 82 00 00
	00		 jne	 $LN19@set_local_

; 553  : 				{
; 554  : 					division = get_local_entity_parent (en, LIST_TYPE_DIVISION);

  005bc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  005c0	74 0a		 je	 SHORT $LN60@set_local_
  005c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005c7	89 4d 90	 mov	 DWORD PTR tv326[ebp], ecx
  005ca	eb 21		 jmp	 SHORT $LN61@set_local_
$LN60@set_local_:
  005cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  005d2	83 c2 61	 add	 edx, 97			; 00000061H
  005d5	52		 push	 edx
  005d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  005db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005e0	50		 push	 eax
  005e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e6	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv326[ebp], 0
$LN61@set_local_:
  005ed	b9 01 00 00 00	 mov	 ecx, 1
  005f2	85 c9		 test	 ecx, ecx
  005f4	74 09		 je	 SHORT $LN62@set_local_
  005f6	c7 45 8c 0b 00
	00 00		 mov	 DWORD PTR tv334[ebp], 11 ; 0000000bH
  005fd	eb 21		 jmp	 SHORT $LN63@set_local_
$LN62@set_local_:
  005ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  00605	83 c2 61	 add	 edx, 97			; 00000061H
  00608	52		 push	 edx
  00609	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0060e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00613	50		 push	 eax
  00614	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00619	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv334[ebp], 0
$LN63@set_local_:
  00620	6a 0b		 push	 11			; 0000000bH
  00622	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00625	51		 push	 ecx
  00626	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv326[ebp], 180
  0062d	8b 45 8c	 mov	 eax, DWORD PTR tv334[ebp]
  00630	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00637	ff d1		 call	 ecx
  00639	89 45 d4	 mov	 DWORD PTR _division$1[ebp], eax

; 555  : 				}
; 556  : 				else

  0063c	eb 06		 jmp	 SHORT $LN20@set_local_
$LN19@set_local_:

; 557  : 				{
; 558  : 					division = en;

  0063e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00641	89 45 d4	 mov	 DWORD PTR _division$1[ebp], eax
$LN20@set_local_:

; 559  : 				}
; 560  : 
; 561  : 				keysite = get_local_entity_parent (division, LIST_TYPE_DIVISION_HEADQUARTERS);

  00644	83 7d d4 00	 cmp	 DWORD PTR _division$1[ebp], 0
  00648	74 0a		 je	 SHORT $LN64@set_local_
  0064a	8b 45 d4	 mov	 eax, DWORD PTR _division$1[ebp]
  0064d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0064f	89 4d 90	 mov	 DWORD PTR tv346[ebp], ecx
  00652	eb 21		 jmp	 SHORT $LN65@set_local_
$LN64@set_local_:
  00654	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  0065a	83 c2 68	 add	 edx, 104		; 00000068H
  0065d	52		 push	 edx
  0065e	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00663	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00668	50		 push	 eax
  00669	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0066e	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv346[ebp], 0
$LN65@set_local_:
  00675	b9 01 00 00 00	 mov	 ecx, 1
  0067a	85 c9		 test	 ecx, ecx
  0067c	74 09		 je	 SHORT $LN66@set_local_
  0067e	c7 45 8c 0c 00
	00 00		 mov	 DWORD PTR tv354[ebp], 12 ; 0000000cH
  00685	eb 21		 jmp	 SHORT $LN67@set_local_
$LN66@set_local_:
  00687	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  0068d	83 c2 68	 add	 edx, 104		; 00000068H
  00690	52		 push	 edx
  00691	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00696	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0069b	50		 push	 eax
  0069c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006a1	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv354[ebp], 0
$LN67@set_local_:
  006a8	6a 0c		 push	 12			; 0000000cH
  006aa	8b 4d d4	 mov	 ecx, DWORD PTR _division$1[ebp]
  006ad	51		 push	 ecx
  006ae	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv346[ebp], 180
  006b5	8b 45 8c	 mov	 eax, DWORD PTR tv354[ebp]
  006b8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  006bf	ff d1		 call	 ecx
  006c1	89 45 d8	 mov	 DWORD PTR _keysite$2[ebp], eax

; 562  : 
; 563  : 				ASSERT (keysite);

  006c4	83 7d d8 00	 cmp	 DWORD PTR _keysite$2[ebp], 0
  006c8	75 18		 jne	 SHORT $LN21@set_local_
  006ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  006cf	83 c0 6a	 add	 eax, 106		; 0000006aH
  006d2	50		 push	 eax
  006d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  006d8	68 00 00 00 00	 push	 OFFSET ??_C@_07FBNBNOMI@keysite@
  006dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN21@set_local_:

; 564  : 				
; 565  : 				sprintf (s, group_database [division_type].platoon_name, get_local_entity_string (keysite, STRING_TYPE_KEYSITE_NAME));

  006e2	83 7d d8 00	 cmp	 DWORD PTR _keysite$2[ebp], 0
  006e6	74 0a		 je	 SHORT $LN68@set_local_
  006e8	8b 45 d8	 mov	 eax, DWORD PTR _keysite$2[ebp]
  006eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  006ed	89 4d 90	 mov	 DWORD PTR tv372[ebp], ecx
  006f0	eb 21		 jmp	 SHORT $LN69@set_local_
$LN68@set_local_:
  006f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  006f8	83 c2 6c	 add	 edx, 108		; 0000006cH
  006fb	52		 push	 edx
  006fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00701	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00706	50		 push	 eax
  00707	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0070c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv372[ebp], 0
$LN69@set_local_:
  00713	b9 01 00 00 00	 mov	 ecx, 1
  00718	85 c9		 test	 ecx, ecx
  0071a	74 09		 je	 SHORT $LN70@set_local_
  0071c	c7 45 8c 07 00
	00 00		 mov	 DWORD PTR tv380[ebp], 7
  00723	eb 21		 jmp	 SHORT $LN71@set_local_
$LN70@set_local_:
  00725	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_division_name@@YGHPAUENTITY@@PAD@Z@4JA
  0072b	83 c2 6c	 add	 edx, 108		; 0000006cH
  0072e	52		 push	 edx
  0072f	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00734	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00739	50		 push	 eax
  0073a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0073f	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv380[ebp], 0
$LN71@set_local_:
  00746	6a 07		 push	 7
  00748	8b 4d d8	 mov	 ecx, DWORD PTR _keysite$2[ebp]
  0074b	51		 push	 ecx
  0074c	6b 55 90 34	 imul	 edx, DWORD PTR tv372[ebp], 52
  00750	8b 45 8c	 mov	 eax, DWORD PTR tv380[ebp]
  00753	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  0075a	ff d1		 call	 ecx
  0075c	50		 push	 eax
  0075d	6b 55 fc 64	 imul	 edx, DWORD PTR _division_type$[ebp], 100
  00761	8b 82 34 00 00
	00		 mov	 eax, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[edx+52]
  00767	50		 push	 eax
  00768	8b 4d 0c	 mov	 ecx, DWORD PTR _s$[ebp]
  0076b	51		 push	 ecx
  0076c	e8 00 00 00 00	 call	 _sprintf
  00771	83 c4 0c	 add	 esp, 12			; 0000000cH

; 566  : 
; 567  : 				break;

  00774	eb 1e		 jmp	 SHORT $LN13@set_local_
$LN22@set_local_:

; 568  : 			}
; 569  : 			default:
; 570  : 			{
; 571  : 				debug_fatal ("Invalid Platoon Id Type %d", group_database [division_type].platoon_id_type);

  00776	6b 45 fc 64	 imul	 eax, DWORD PTR _division_type$[ebp], 100
  0077a	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  00780	c1 e9 05	 shr	 ecx, 5
  00783	83 e1 07	 and	 ecx, 7
  00786	51		 push	 ecx
  00787	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MLGKIHDJ@Invalid?5Platoon?5Id?5Type?5?$CFd@
  0078c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00791	83 c4 08	 add	 esp, 8
$LN13@set_local_:

; 572  : 			}
; 573  : 		}
; 574  : 	}
; 575  : 
; 576  : 	return TRUE;

  00794	b8 01 00 00 00	 mov	 eax, 1

; 577  : }

  00799	5f		 pop	 edi
  0079a	5e		 pop	 esi
  0079b	5b		 pop	 ebx
  0079c	8b e5		 mov	 esp, ebp
  0079e	5d		 pop	 ebp
  0079f	c2 08 00	 ret	 8
  007a2	66 90		 npad	 2
$LN72@set_local_:
  007a4	00 00 00 00	 DD	 $LN14@set_local_
  007a8	00 00 00 00	 DD	 $LN15@set_local_
  007ac	00 00 00 00	 DD	 $LN16@set_local_
  007b0	00 00 00 00	 DD	 $LN17@set_local_
  007b4	00 00 00 00	 DD	 $LN18@set_local_
?set_local_division_name@@YGHPAUENTITY@@PAD@Z ENDP	; set_local_division_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?get_number_extension@@YGXHPAD@Z
_TEXT	SEGMENT
tv75 = -72						; size = 4
_remainder$ = -4					; size = 4
_number$ = 8						; size = 4
_extension$ = 12					; size = 4
?get_number_extension@@YGXHPAD@Z PROC			; get_number_extension, COMDAT

; 405  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 406  : 	int
; 407  : 		remainder;
; 408  : 
; 409  : 	ASSERT (extension);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _extension$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_number
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_number_extension@@YGXHPAD@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09ODADEDNA@extension@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_number:

; 410  : 
; 411  : 	remainder = (number / 10) % 10;

  00027	8b 45 08	 mov	 eax, DWORD PTR _number$[ebp]
  0002a	99		 cdq
  0002b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00030	f7 f9		 idiv	 ecx
  00032	99		 cdq
  00033	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00038	f7 f9		 idiv	 ecx
  0003a	89 55 fc	 mov	 DWORD PTR _remainder$[ebp], edx

; 412  : 
; 413  : 	if (remainder == 1)

  0003d	83 7d fc 01	 cmp	 DWORD PTR _remainder$[ebp], 1
  00041	75 13		 jne	 SHORT $LN5@get_number

; 414  : 	{
; 415  : 		// (special case for 11th, 111th, 211th etc.)
; 416  : 		sprintf (extension, "th");

  00043	68 00 00 00 00	 push	 OFFSET ??_C@_02POGCAHMO@th@
  00048	8b 45 0c	 mov	 eax, DWORD PTR _extension$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _sprintf
  00051	83 c4 08	 add	 esp, 8

; 417  : 	}
; 418  : 	else

  00054	eb 72		 jmp	 SHORT $LN1@get_number
$LN5@get_number:

; 419  : 	{
; 420  : 		remainder = number % 10;

  00056	8b 45 08	 mov	 eax, DWORD PTR _number$[ebp]
  00059	99		 cdq
  0005a	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0005f	f7 f9		 idiv	 ecx
  00061	89 55 fc	 mov	 DWORD PTR _remainder$[ebp], edx

; 421  : 		
; 422  : 		switch (remainder)

  00064	8b 45 fc	 mov	 eax, DWORD PTR _remainder$[ebp]
  00067	89 45 b8	 mov	 DWORD PTR tv75[ebp], eax
  0006a	83 7d b8 01	 cmp	 DWORD PTR tv75[ebp], 1
  0006e	74 0e		 je	 SHORT $LN7@get_number
  00070	83 7d b8 02	 cmp	 DWORD PTR tv75[ebp], 2
  00074	74 1b		 je	 SHORT $LN8@get_number
  00076	83 7d b8 03	 cmp	 DWORD PTR tv75[ebp], 3
  0007a	74 28		 je	 SHORT $LN9@get_number
  0007c	eb 39		 jmp	 SHORT $LN10@get_number
$LN7@get_number:

; 423  : 		{
; 424  : 			case 1:
; 425  : 			{
; 426  : 				sprintf (extension, "st");

  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_02BNFKEMBG@st@
  00083	8b 45 0c	 mov	 eax, DWORD PTR _extension$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 _sprintf
  0008c	83 c4 08	 add	 esp, 8

; 427  : 	
; 428  : 				break;

  0008f	eb 37		 jmp	 SHORT $LN1@get_number
$LN8@get_number:

; 429  : 			}
; 430  : 			case 2:
; 431  : 			{
; 432  : 				sprintf (extension, "nd");

  00091	68 00 00 00 00	 push	 OFFSET ??_C@_02EDGGGOGE@nd@
  00096	8b 45 0c	 mov	 eax, DWORD PTR _extension$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _sprintf
  0009f	83 c4 08	 add	 esp, 8

; 433  : 		
; 434  : 				break;

  000a2	eb 24		 jmp	 SHORT $LN1@get_number
$LN9@get_number:

; 435  : 			}
; 436  : 			case 3:
; 437  : 			{
; 438  : 				sprintf (extension, "rd");

  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_02FGFKDEHA@rd@
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _extension$[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 _sprintf
  000b2	83 c4 08	 add	 esp, 8

; 439  : 		
; 440  : 				break;

  000b5	eb 11		 jmp	 SHORT $LN1@get_number
$LN10@get_number:

; 441  : 			}
; 442  : 			default:
; 443  : 			{
; 444  : 				sprintf (extension, "th");

  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_02POGCAHMO@th@
  000bc	8b 45 0c	 mov	 eax, DWORD PTR _extension$[ebp]
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 _sprintf
  000c5	83 c4 08	 add	 esp, 8
$LN1@get_number:

; 445  : 		
; 446  : 				break;
; 447  : 			}
; 448  : 		}
; 449  : 	}
; 450  : }

  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
?get_number_extension@@YGXHPAD@Z ENDP			; get_number_extension
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z
_TEXT	SEGMENT
tv583 = -124						; size = 4
tv562 = -124						; size = 4
tv540 = -124						; size = 4
tv509 = -124						; size = 4
tv487 = -124						; size = 4
tv468 = -124						; size = 4
tv444 = -124						; size = 4
tv423 = -124						; size = 4
tv389 = -124						; size = 4
tv367 = -124						; size = 4
tv348 = -124						; size = 4
tv283 = -124						; size = 4
tv250 = -124						; size = 4
tv229 = -124						; size = 4
tv186 = -124						; size = 4
tv165 = -124						; size = 4
tv145 = -124						; size = 4
tv88 = -124						; size = 4
tv575 = -120						; size = 4
tv554 = -120						; size = 4
tv533 = -120						; size = 4
tv522 = -120						; size = 4
tv501 = -120						; size = 4
tv480 = -120						; size = 4
tv460 = -120						; size = 4
tv436 = -120						; size = 4
tv415 = -120						; size = 4
tv402 = -120						; size = 4
tv381 = -120						; size = 4
tv360 = -120						; size = 4
tv340 = -120						; size = 4
tv275 = -120						; size = 4
tv242 = -120						; size = 4
tv222 = -120						; size = 4
tv178 = -120						; size = 4
tv157 = -120						; size = 4
tv137 = -120						; size = 4
tv80 = -120						; size = 4
_main_division$1 = -52					; size = 4
_group_pos$ = -48					; size = 4
_division$ = -44					; size = 4
_keysite$ = -40						; size = 4
_force$ = -36						; size = 4
_en$ = -32						; size = 4
_main_division_type$ = -28				; size = 4
_division_type$ = -24					; size = 4
_keysite_type$ = -20					; size = 4
_group_type$ = -16					; size = 4
_max_count$ = -12					; size = 4
_count$ = -8						; size = 4
_side$ = -4						; size = 4
_group$ = 8						; size = 4
_specified_division$ = 12				; size = 4
?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z PROC	; add_group_to_division, COMDAT

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 151  : 	entity_sides
; 152  : 		side;
; 153  : 
; 154  : 	int
; 155  : 		count,
; 156  : 		max_count,
; 157  : 		group_type,
; 158  : 		keysite_type,
; 159  : 		division_type,
; 160  : 		main_division_type;
; 161  : 
; 162  : 	entity
; 163  : 		*en,
; 164  : 		*force,
; 165  : 		*keysite,
; 166  : 		*division;
; 167  : 
; 168  : 	vec3d
; 169  : 		*group_pos;
; 170  : 		
; 171  : 	ASSERT (group);

  00009	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN10@add_group_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00014	83 c0 15	 add	 eax, 21			; 00000015H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@add_group_:

; 172  : 
; 173  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	74 18		 je	 SHORT $LN11@add_group_
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00035	83 c0 17	 add	 eax, 23			; 00000017H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@add_group_:

; 174  : 
; 175  : 	ASSERT (!get_local_entity_parent (group, LIST_TYPE_DIVISION));

  00048	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN48@add_group_
  0004e	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d 88	 mov	 DWORD PTR tv80[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN49@add_group_
$LN48@add_group_:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  0005e	83 c2 19	 add	 edx, 25			; 00000019H
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN49@add_group_:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN50@add_group_
  00082	c7 45 84 0b 00
	00 00		 mov	 DWORD PTR tv88[ebp], 11	; 0000000bH
  00089	eb 21		 jmp	 SHORT $LN51@add_group_
$LN50@add_group_:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00091	83 c2 19	 add	 edx, 25			; 00000019H
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN51@add_group_:
  000ac	6a 0b		 push	 11			; 0000000bH
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  000b1	51		 push	 ecx
  000b2	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 180
  000b9	8b 45 84	 mov	 eax, DWORD PTR tv88[ebp]
  000bc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c3	ff d1		 call	 ecx
  000c5	85 c0		 test	 eax, eax
  000c7	74 18		 je	 SHORT $LN12@add_group_
  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  000ce	83 c0 19	 add	 eax, 25			; 00000019H
  000d1	50		 push	 eax
  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ECKNBMKD@?$CBget_local_entity_parent?5?$CIgroup@
  000dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@add_group_:

; 176  : 
; 177  : 	group_type = get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE);

  000e1	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  000e5	74 0a		 je	 SHORT $LN52@add_group_
  000e7	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  000ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ec	89 4d 88	 mov	 DWORD PTR tv137[ebp], ecx
  000ef	eb 21		 jmp	 SHORT $LN53@add_group_
$LN52@add_group_:
  000f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  000f7	83 c2 1b	 add	 edx, 27			; 0000001bH
  000fa	52		 push	 edx
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010b	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN53@add_group_:
  00112	b9 01 00 00 00	 mov	 ecx, 1
  00117	85 c9		 test	 ecx, ecx
  00119	74 09		 je	 SHORT $LN54@add_group_
  0011b	c7 45 84 34 00
	00 00		 mov	 DWORD PTR tv145[ebp], 52 ; 00000034H
  00122	eb 21		 jmp	 SHORT $LN55@add_group_
$LN54@add_group_:
  00124	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  0012a	83 c2 1b	 add	 edx, 27			; 0000001bH
  0012d	52		 push	 edx
  0012e	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00133	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013e	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN55@add_group_:
  00145	6a 34		 push	 52			; 00000034H
  00147	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  0014a	51		 push	 ecx
  0014b	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 1116
  00152	8b 45 84	 mov	 eax, DWORD PTR tv145[ebp]
  00155	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0015c	ff d1		 call	 ecx
  0015e	89 45 f0	 mov	 DWORD PTR _group_type$[ebp], eax

; 178  : 	
; 179  : 	group_pos = get_local_entity_vec3d_ptr (group, VEC3D_TYPE_POSITION);

  00161	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00165	74 0a		 je	 SHORT $LN56@add_group_
  00167	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  0016a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016c	89 4d 88	 mov	 DWORD PTR tv157[ebp], ecx
  0016f	eb 21		 jmp	 SHORT $LN57@add_group_
$LN56@add_group_:
  00171	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00177	83 c2 1d	 add	 edx, 29			; 0000001dH
  0017a	52		 push	 edx
  0017b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00180	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018b	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN57@add_group_:
  00192	b9 01 00 00 00	 mov	 ecx, 1
  00197	85 c9		 test	 ecx, ecx
  00199	74 09		 je	 SHORT $LN58@add_group_
  0019b	c7 45 84 08 00
	00 00		 mov	 DWORD PTR tv165[ebp], 8
  001a2	eb 21		 jmp	 SHORT $LN59@add_group_
$LN58@add_group_:
  001a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  001aa	83 c2 1d	 add	 edx, 29			; 0000001dH
  001ad	52		 push	 edx
  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001be	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN59@add_group_:
  001c5	6a 08		 push	 8
  001c7	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  001ca	51		 push	 ecx
  001cb	6b 55 88 60	 imul	 edx, DWORD PTR tv157[ebp], 96
  001cf	8b 45 84	 mov	 eax, DWORD PTR tv165[ebp]
  001d2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001d9	ff d1		 call	 ecx
  001db	89 45 d0	 mov	 DWORD PTR _group_pos$[ebp], eax

; 180  : 	
; 181  : 	if (specified_division)

  001de	83 7d 0c 00	 cmp	 DWORD PTR _specified_division$[ebp], 0
  001e2	74 0b		 je	 SHORT $LN13@add_group_

; 182  : 	{
; 183  : 		division = specified_division;

  001e4	8b 45 0c	 mov	 eax, DWORD PTR _specified_division$[ebp]
  001e7	89 45 d4	 mov	 DWORD PTR _division$[ebp], eax

; 184  : 	}
; 185  : 	else

  001ea	e9 05 0b 00 00	 jmp	 $LN37@add_group_
$LN13@add_group_:

; 186  : 	{
; 187  : 		side = (entity_sides) get_local_entity_int_value (group, INT_TYPE_SIDE);

  001ef	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  001f3	74 0a		 je	 SHORT $LN60@add_group_
  001f5	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  001f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fa	89 4d 88	 mov	 DWORD PTR tv178[ebp], ecx
  001fd	eb 21		 jmp	 SHORT $LN61@add_group_
$LN60@add_group_:
  001ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00205	83 c2 25	 add	 edx, 37			; 00000025H
  00208	52		 push	 edx
  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00219	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
$LN61@add_group_:
  00220	b9 01 00 00 00	 mov	 ecx, 1
  00225	85 c9		 test	 ecx, ecx
  00227	74 09		 je	 SHORT $LN62@add_group_
  00229	c7 45 84 bb 00
	00 00		 mov	 DWORD PTR tv186[ebp], 187 ; 000000bbH
  00230	eb 21		 jmp	 SHORT $LN63@add_group_
$LN62@add_group_:
  00232	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00238	83 c2 25	 add	 edx, 37			; 00000025H
  0023b	52		 push	 edx
  0023c	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00241	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00246	50		 push	 eax
  00247	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0024c	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
$LN63@add_group_:
  00253	68 bb 00 00 00	 push	 187			; 000000bbH
  00258	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  0025b	51		 push	 ecx
  0025c	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv178[ebp], 1116
  00263	8b 45 84	 mov	 eax, DWORD PTR tv186[ebp]
  00266	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0026d	ff d1		 call	 ecx
  0026f	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax

; 188  : 	
; 189  : 		force = get_local_force_entity (side);

  00272	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  0027b	89 45 dc	 mov	 DWORD PTR _force$[ebp], eax

; 190  : 	
; 191  : 		ASSERT (force);

  0027e	83 7d dc 00	 cmp	 DWORD PTR _force$[ebp], 0
  00282	75 18		 jne	 SHORT $LN15@add_group_
  00284	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00289	83 c0 29	 add	 eax, 41			; 00000029H
  0028c	50		 push	 eax
  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00292	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00297	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN15@add_group_:

; 192  : 	
; 193  : 		division_type = group_database [group_type].default_group_division;

  0029c	6b 45 f0 64	 imul	 eax, DWORD PTR _group_type$[ebp], 100
  002a0	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+44]
  002a6	89 4d e8	 mov	 DWORD PTR _division_type$[ebp], ecx

; 194  : 	
; 195  : 		ASSERT (entity_sub_type_division_valid (division_type));

  002a9	83 7d e8 00	 cmp	 DWORD PTR _division_type$[ebp], 0
  002ad	7c 06		 jl	 SHORT $LN17@add_group_
  002af	83 7d e8 11	 cmp	 DWORD PTR _division_type$[ebp], 17 ; 00000011H
  002b3	7c 18		 jl	 SHORT $LN16@add_group_
$LN17@add_group_:
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  002ba	83 c0 2d	 add	 eax, 45			; 0000002dH
  002bd	50		 push	 eax
  002be	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c3	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IJLCELPA@entity_sub_type_division_valid?5@
  002c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@add_group_:

; 196  : 	
; 197  : 		main_division_type = division_database [division_type].default_group_division;

  002cd	6b 45 e8 0c	 imul	 eax, DWORD PTR _division_type$[ebp], 12
  002d1	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?division_database@@3QBUDIVISION_DATA@@B[eax+4]
  002d7	89 4d e4	 mov	 DWORD PTR _main_division_type$[ebp], ecx

; 198  : 	
; 199  : 		ASSERT (entity_sub_type_division_valid (main_division_type));

  002da	83 7d e4 00	 cmp	 DWORD PTR _main_division_type$[ebp], 0
  002de	7c 06		 jl	 SHORT $LN19@add_group_
  002e0	83 7d e4 11	 cmp	 DWORD PTR _main_division_type$[ebp], 17 ; 00000011H
  002e4	7c 18		 jl	 SHORT $LN18@add_group_
$LN19@add_group_:
  002e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  002eb	83 c0 31	 add	 eax, 49			; 00000031H
  002ee	50		 push	 eax
  002ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CKACJOFC@entity_sub_type_division_valid?5@
  002f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@add_group_:

; 200  : 	
; 201  : 		//
; 202  : 		// Find the keysite the company should be attached to
; 203  : 		//
; 204  : 
; 205  : 		keysite = NULL;

  002fe	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _keysite$[ebp], 0

; 206  : 	
; 207  : 		if (get_local_entity_int_value (group, INT_TYPE_GROUP_LIST_TYPE) == LIST_TYPE_KEYSITE_GROUP)

  00305	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00309	74 0a		 je	 SHORT $LN64@add_group_
  0030b	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  0030e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00310	89 4d 88	 mov	 DWORD PTR tv222[ebp], ecx
  00313	eb 1d		 jmp	 SHORT $LN65@add_group_
$LN64@add_group_:
  00315	68 cf 00 00 00	 push	 207			; 000000cfH
  0031a	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00325	52		 push	 edx
  00326	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032b	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv222[ebp], 0
$LN65@add_group_:
  00332	b8 01 00 00 00	 mov	 eax, 1
  00337	85 c0		 test	 eax, eax
  00339	74 09		 je	 SHORT $LN66@add_group_
  0033b	c7 45 84 49 00
	00 00		 mov	 DWORD PTR tv229[ebp], 73 ; 00000049H
  00342	eb 1d		 jmp	 SHORT $LN67@add_group_
$LN66@add_group_:
  00344	68 cf 00 00 00	 push	 207			; 000000cfH
  00349	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00354	51		 push	 ecx
  00355	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035a	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv229[ebp], 0
$LN67@add_group_:
  00361	6a 49		 push	 73			; 00000049H
  00363	8b 55 08	 mov	 edx, DWORD PTR _group$[ebp]
  00366	52		 push	 edx
  00367	69 45 88 5c 04
	00 00		 imul	 eax, DWORD PTR tv222[ebp], 1116
  0036e	8b 4d 84	 mov	 ecx, DWORD PTR tv229[ebp]
  00371	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00378	ff d2		 call	 edx
  0037a	83 f8 16	 cmp	 eax, 22			; 00000016H
  0037d	0f 85 5f 01 00
	00		 jne	 $LN20@add_group_

; 208  : 		{
; 209  : 			keysite = get_local_entity_parent (group, LIST_TYPE_KEYSITE_GROUP);

  00383	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00387	74 0a		 je	 SHORT $LN68@add_group_
  00389	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  0038c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038e	89 4d 88	 mov	 DWORD PTR tv242[ebp], ecx
  00391	eb 21		 jmp	 SHORT $LN69@add_group_
$LN68@add_group_:
  00393	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00399	83 c2 3b	 add	 edx, 59			; 0000003bH
  0039c	52		 push	 edx
  0039d	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a7	50		 push	 eax
  003a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ad	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv242[ebp], 0
$LN69@add_group_:
  003b4	b9 01 00 00 00	 mov	 ecx, 1
  003b9	85 c9		 test	 ecx, ecx
  003bb	74 09		 je	 SHORT $LN70@add_group_
  003bd	c7 45 84 16 00
	00 00		 mov	 DWORD PTR tv250[ebp], 22 ; 00000016H
  003c4	eb 21		 jmp	 SHORT $LN71@add_group_
$LN70@add_group_:
  003c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  003cc	83 c2 3b	 add	 edx, 59			; 0000003bH
  003cf	52		 push	 edx
  003d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003da	50		 push	 eax
  003db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003e0	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv250[ebp], 0
$LN71@add_group_:
  003e7	6a 16		 push	 22			; 00000016H
  003e9	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  003ec	51		 push	 ecx
  003ed	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv242[ebp], 180
  003f4	8b 45 84	 mov	 eax, DWORD PTR tv250[ebp]
  003f7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003fe	ff d1		 call	 ecx
  00400	89 45 d8	 mov	 DWORD PTR _keysite$[ebp], eax

; 210  : 
; 211  : 			if (!keysite)

  00403	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00407	75 24		 jne	 SHORT $LN22@add_group_

; 212  : 			{
; 213  : 				keysite = get_closest_keysite (NUM_ENTITY_SUB_TYPE_KEYSITES, side, group_pos, 1.0 * KILOMETRE, NULL, NULL);

  00409	6a 00		 push	 0
  0040b	6a 00		 push	 0
  0040d	51		 push	 ecx
  0040e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  00416	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041b	8b 45 d0	 mov	 eax, DWORD PTR _group_pos$[ebp]
  0041e	50		 push	 eax
  0041f	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  00422	51		 push	 ecx
  00423	6a 09		 push	 9
  00425	e8 00 00 00 00	 call	 ?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z ; get_closest_keysite
  0042a	89 45 d8	 mov	 DWORD PTR _keysite$[ebp], eax
$LN22@add_group_:

; 214  : 			}
; 215  : 	
; 216  : 			ASSERT (keysite);

  0042d	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00431	75 18		 jne	 SHORT $LN23@add_group_
  00433	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00438	83 c0 42	 add	 eax, 66			; 00000042H
  0043b	50		 push	 eax
  0043c	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00441	68 00 00 00 00	 push	 OFFSET ??_C@_07FBNBNOMI@keysite@
  00446	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN23@add_group_:

; 217  : 	
; 218  : 			keysite_type = get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE);

  0044b	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0044f	74 0a		 je	 SHORT $LN72@add_group_
  00451	8b 45 d8	 mov	 eax, DWORD PTR _keysite$[ebp]
  00454	8b 08		 mov	 ecx, DWORD PTR [eax]
  00456	89 4d 88	 mov	 DWORD PTR tv275[ebp], ecx
  00459	eb 21		 jmp	 SHORT $LN73@add_group_
$LN72@add_group_:
  0045b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00461	83 c2 44	 add	 edx, 68			; 00000044H
  00464	52		 push	 edx
  00465	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0046a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0046f	50		 push	 eax
  00470	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00475	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv275[ebp], 0
$LN73@add_group_:
  0047c	b9 01 00 00 00	 mov	 ecx, 1
  00481	85 c9		 test	 ecx, ecx
  00483	74 09		 je	 SHORT $LN74@add_group_
  00485	c7 45 84 34 00
	00 00		 mov	 DWORD PTR tv283[ebp], 52 ; 00000034H
  0048c	eb 21		 jmp	 SHORT $LN75@add_group_
$LN74@add_group_:
  0048e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00494	83 c2 44	 add	 edx, 68			; 00000044H
  00497	52		 push	 edx
  00498	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004a2	50		 push	 eax
  004a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a8	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv283[ebp], 0
$LN75@add_group_:
  004af	6a 34		 push	 52			; 00000034H
  004b1	8b 4d d8	 mov	 ecx, DWORD PTR _keysite$[ebp]
  004b4	51		 push	 ecx
  004b5	69 55 88 5c 04
	00 00		 imul	 edx, DWORD PTR tv275[ebp], 1116
  004bc	8b 45 84	 mov	 eax, DWORD PTR tv283[ebp]
  004bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004c6	ff d1		 call	 ecx
  004c8	89 45 ec	 mov	 DWORD PTR _keysite_type$[ebp], eax

; 219  : 	
; 220  : 			if ((keysite_type == ENTITY_SUB_TYPE_KEYSITE_AIRBASE) || (keysite_type == ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE))

  004cb	83 7d ec 00	 cmp	 DWORD PTR _keysite_type$[ebp], 0
  004cf	74 06		 je	 SHORT $LN26@add_group_
  004d1	83 7d ec 01	 cmp	 DWORD PTR _keysite_type$[ebp], 1
  004d5	75 02		 jne	 SHORT $LN24@add_group_
$LN26@add_group_:

; 221  : 			{
; 222  : 				//
; 223  : 				// Use keysite landed at
; 224  : 				//
; 225  : 			}
; 226  : 			else

  004d7	eb 07		 jmp	 SHORT $LN25@add_group_
$LN24@add_group_:

; 227  : 			{
; 228  : 				//
; 229  : 				// Find nearest keysite (below)
; 230  : 				//
; 231  : 
; 232  : 				keysite = NULL;

  004d9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _keysite$[ebp], 0
$LN25@add_group_:

; 233  : 			}
; 234  : 		}
; 235  : 		else

  004e0	eb 2c		 jmp	 SHORT $LN27@add_group_
$LN20@add_group_:

; 236  : 		{
; 237  : 			if (group_database [group_type].movement_type == MOVEMENT_TYPE_SEA)

  004e2	6b 45 f0 64	 imul	 eax, DWORD PTR _group_type$[ebp], 100
  004e6	83 b8 14 00 00
	00 03		 cmp	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+20], 3
  004ed	75 1f		 jne	 SHORT $LN27@add_group_

; 238  : 			{
; 239  : 				//
; 240  : 				// Find nearest carrier
; 241  : 				//
; 242  : 			
; 243  : 				keysite = get_closest_keysite (ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE, side, group_pos, 0.0, NULL, NULL);

  004ef	6a 00		 push	 0
  004f1	6a 00		 push	 0
  004f3	51		 push	 ecx
  004f4	0f 57 c0	 xorps	 xmm0, xmm0
  004f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fc	8b 45 d0	 mov	 eax, DWORD PTR _group_pos$[ebp]
  004ff	50		 push	 eax
  00500	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  00503	51		 push	 ecx
  00504	6a 01		 push	 1
  00506	e8 00 00 00 00	 call	 ?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z ; get_closest_keysite
  0050b	89 45 d8	 mov	 DWORD PTR _keysite$[ebp], eax
$LN27@add_group_:

; 244  : 			}
; 245  : 		}
; 246  : 
; 247  : 		if (!keysite)

  0050e	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00512	75 69		 jne	 SHORT $LN30@add_group_

; 248  : 		{
; 249  : 			//
; 250  : 			// Find nearest airbase
; 251  : 			//
; 252  : 			
; 253  : 			keysite = get_closest_keysite (ENTITY_SUB_TYPE_KEYSITE_AIRBASE, side, group_pos, 0.0, NULL, NULL);

  00514	6a 00		 push	 0
  00516	6a 00		 push	 0
  00518	51		 push	 ecx
  00519	0f 57 c0	 xorps	 xmm0, xmm0
  0051c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00521	8b 45 d0	 mov	 eax, DWORD PTR _group_pos$[ebp]
  00524	50		 push	 eax
  00525	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  00528	51		 push	 ecx
  00529	6a 00		 push	 0
  0052b	e8 00 00 00 00	 call	 ?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z ; get_closest_keysite
  00530	89 45 d8	 mov	 DWORD PTR _keysite$[ebp], eax

; 254  : 
; 255  : 			if (!keysite)

  00533	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00537	75 44		 jne	 SHORT $LN30@add_group_

; 256  : 			{
; 257  : 				//
; 258  : 				// Find nearest military base
; 259  : 				//
; 260  : 				
; 261  : 				keysite = get_closest_keysite (ENTITY_SUB_TYPE_KEYSITE_MILITARY_BASE, side, group_pos, 0.0, NULL, NULL);

  00539	6a 00		 push	 0
  0053b	6a 00		 push	 0
  0053d	51		 push	 ecx
  0053e	0f 57 c0	 xorps	 xmm0, xmm0
  00541	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00546	8b 45 d0	 mov	 eax, DWORD PTR _group_pos$[ebp]
  00549	50		 push	 eax
  0054a	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  0054d	51		 push	 ecx
  0054e	6a 04		 push	 4
  00550	e8 00 00 00 00	 call	 ?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z ; get_closest_keysite
  00555	89 45 d8	 mov	 DWORD PTR _keysite$[ebp], eax

; 262  : 
; 263  : 				if (!keysite)

  00558	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0055c	75 1f		 jne	 SHORT $LN30@add_group_

; 264  : 				{
; 265  : 					//
; 266  : 					// Find nearest FARP  
; 267  : 					//
; 268  : 				
; 269  : 					keysite = get_closest_keysite (ENTITY_SUB_TYPE_KEYSITE_FARP, side, group_pos, 0.0, NULL, NULL);

  0055e	6a 00		 push	 0
  00560	6a 00		 push	 0
  00562	51		 push	 ecx
  00563	0f 57 c0	 xorps	 xmm0, xmm0
  00566	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0056b	8b 45 d0	 mov	 eax, DWORD PTR _group_pos$[ebp]
  0056e	50		 push	 eax
  0056f	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  00572	51		 push	 ecx
  00573	6a 03		 push	 3
  00575	e8 00 00 00 00	 call	 ?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z ; get_closest_keysite
  0057a	89 45 d8	 mov	 DWORD PTR _keysite$[ebp], eax
$LN30@add_group_:

; 270  : 				}
; 271  : 			}
; 272  : 		}
; 273  : 	
; 274  : 		ASSERT (keysite);

  0057d	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00581	75 18		 jne	 SHORT $LN31@add_group_
  00583	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00588	83 c0 7c	 add	 eax, 124		; 0000007cH
  0058b	50		 push	 eax
  0058c	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00591	68 00 00 00 00	 push	 OFFSET ??_C@_07FBNBNOMI@keysite@
  00596	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN31@add_group_:

; 275  : 	
; 276  : 		//
; 277  : 		// Check all companies at this keysite to see if they have vacancies....
; 278  : 		//
; 279  : 	
; 280  : 		max_count = group_database [group_type].maximum_groups_per_division;

  0059b	6b 45 f0 64	 imul	 eax, DWORD PTR _group_type$[ebp], 100
  0059f	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+48]
  005a5	89 4d f4	 mov	 DWORD PTR _max_count$[ebp], ecx

; 281  : 	
; 282  : 		division = get_local_entity_first_child (keysite, LIST_TYPE_DIVISION_HEADQUARTERS);

  005a8	83 7d d8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  005ac	74 0a		 je	 SHORT $LN76@add_group_
  005ae	8b 45 d8	 mov	 eax, DWORD PTR _keysite$[ebp]
  005b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b3	89 4d 88	 mov	 DWORD PTR tv340[ebp], ecx
  005b6	eb 24		 jmp	 SHORT $LN77@add_group_
$LN76@add_group_:
  005b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  005be	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  005c4	52		 push	 edx
  005c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005cf	50		 push	 eax
  005d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005d5	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv340[ebp], 0
$LN77@add_group_:
  005dc	b9 01 00 00 00	 mov	 ecx, 1
  005e1	85 c9		 test	 ecx, ecx
  005e3	74 09		 je	 SHORT $LN78@add_group_
  005e5	c7 45 84 0c 00
	00 00		 mov	 DWORD PTR tv348[ebp], 12 ; 0000000cH
  005ec	eb 24		 jmp	 SHORT $LN79@add_group_
$LN78@add_group_:
  005ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  005f4	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  005fa	52		 push	 edx
  005fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00600	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00605	50		 push	 eax
  00606	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060b	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv348[ebp], 0
$LN79@add_group_:
  00612	6a 0c		 push	 12			; 0000000cH
  00614	8b 4d d8	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00617	51		 push	 ecx
  00618	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv340[ebp], 180
  0061f	8b 45 84	 mov	 eax, DWORD PTR tv348[ebp]
  00622	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00629	ff d1		 call	 ecx
  0062b	89 45 d4	 mov	 DWORD PTR _division$[ebp], eax
$LN2@add_group_:

; 283  : 	
; 284  : 		while (division)

  0062e	83 7d d4 00	 cmp	 DWORD PTR _division$[ebp], 0
  00632	0f 84 a0 02 00
	00		 je	 $LN3@add_group_

; 285  : 		{
; 286  : 			if (get_local_entity_int_value (division, INT_TYPE_ENTITY_SUB_TYPE) == division_type)

  00638	83 7d d4 00	 cmp	 DWORD PTR _division$[ebp], 0
  0063c	74 0a		 je	 SHORT $LN80@add_group_
  0063e	8b 45 d4	 mov	 eax, DWORD PTR _division$[ebp]
  00641	8b 08		 mov	 ecx, DWORD PTR [eax]
  00643	89 4d 88	 mov	 DWORD PTR tv360[ebp], ecx
  00646	eb 1d		 jmp	 SHORT $LN81@add_group_
$LN80@add_group_:
  00648	68 1e 01 00 00	 push	 286			; 0000011eH
  0064d	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00652	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00658	52		 push	 edx
  00659	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0065e	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv360[ebp], 0
$LN81@add_group_:
  00665	b8 01 00 00 00	 mov	 eax, 1
  0066a	85 c0		 test	 eax, eax
  0066c	74 09		 je	 SHORT $LN82@add_group_
  0066e	c7 45 84 34 00
	00 00		 mov	 DWORD PTR tv367[ebp], 52 ; 00000034H
  00675	eb 1d		 jmp	 SHORT $LN83@add_group_
$LN82@add_group_:
  00677	68 1e 01 00 00	 push	 286			; 0000011eH
  0067c	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00681	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00687	51		 push	 ecx
  00688	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0068d	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv367[ebp], 0
$LN83@add_group_:
  00694	6a 34		 push	 52			; 00000034H
  00696	8b 55 d4	 mov	 edx, DWORD PTR _division$[ebp]
  00699	52		 push	 edx
  0069a	69 45 88 5c 04
	00 00		 imul	 eax, DWORD PTR tv360[ebp], 1116
  006a1	8b 4d 84	 mov	 ecx, DWORD PTR tv367[ebp]
  006a4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006ab	ff d2		 call	 edx
  006ad	3b 45 e8	 cmp	 eax, DWORD PTR _division_type$[ebp]
  006b0	0f 85 97 01 00
	00		 jne	 $LN35@add_group_

; 287  : 			{
; 288  : 				if (max_count == 0)

  006b6	83 7d f4 00	 cmp	 DWORD PTR _max_count$[ebp], 0
  006ba	75 05		 jne	 SHORT $LN33@add_group_

; 289  : 				{
; 290  : 					break;

  006bc	e9 17 02 00 00	 jmp	 $LN3@add_group_
$LN33@add_group_:

; 291  : 				}
; 292  : 	
; 293  : 				count = 0;

  006c1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 294  : 	
; 295  : 				en = get_local_entity_first_child (division, LIST_TYPE_DIVISION);

  006c8	83 7d d4 00	 cmp	 DWORD PTR _division$[ebp], 0
  006cc	74 0a		 je	 SHORT $LN84@add_group_
  006ce	8b 45 d4	 mov	 eax, DWORD PTR _division$[ebp]
  006d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  006d3	89 4d 88	 mov	 DWORD PTR tv381[ebp], ecx
  006d6	eb 24		 jmp	 SHORT $LN85@add_group_
$LN84@add_group_:
  006d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  006de	81 c2 91 00 00
	00		 add	 edx, 145		; 00000091H
  006e4	52		 push	 edx
  006e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  006ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006ef	50		 push	 eax
  006f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f5	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv381[ebp], 0
$LN85@add_group_:
  006fc	b9 01 00 00 00	 mov	 ecx, 1
  00701	85 c9		 test	 ecx, ecx
  00703	74 09		 je	 SHORT $LN86@add_group_
  00705	c7 45 84 0b 00
	00 00		 mov	 DWORD PTR tv389[ebp], 11 ; 0000000bH
  0070c	eb 24		 jmp	 SHORT $LN87@add_group_
$LN86@add_group_:
  0070e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00714	81 c2 91 00 00
	00		 add	 edx, 145		; 00000091H
  0071a	52		 push	 edx
  0071b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00720	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00725	50		 push	 eax
  00726	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0072b	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv389[ebp], 0
$LN87@add_group_:
  00732	6a 0b		 push	 11			; 0000000bH
  00734	8b 4d d4	 mov	 ecx, DWORD PTR _division$[ebp]
  00737	51		 push	 ecx
  00738	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv381[ebp], 180
  0073f	8b 45 84	 mov	 eax, DWORD PTR tv389[ebp]
  00742	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00749	ff d1		 call	 ecx
  0074b	89 45 e0	 mov	 DWORD PTR _en$[ebp], eax
$LN4@add_group_:

; 296  : 	
; 297  : 				while (en)

  0074e	83 7d e0 00	 cmp	 DWORD PTR _en$[ebp], 0
  00752	0f 84 e8 00 00
	00		 je	 $LN5@add_group_

; 298  : 				{
; 299  : 					ASSERT (get_local_entity_type (en) == ENTITY_TYPE_GROUP);

  00758	83 7d e0 00	 cmp	 DWORD PTR _en$[ebp], 0
  0075c	74 0a		 je	 SHORT $LN88@add_group_
  0075e	8b 45 e0	 mov	 eax, DWORD PTR _en$[ebp]
  00761	8b 08		 mov	 ecx, DWORD PTR [eax]
  00763	89 4d 88	 mov	 DWORD PTR tv402[ebp], ecx
  00766	eb 24		 jmp	 SHORT $LN89@add_group_
$LN88@add_group_:
  00768	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  0076e	81 c2 95 00 00
	00		 add	 edx, 149		; 00000095H
  00774	52		 push	 edx
  00775	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0077a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0077f	50		 push	 eax
  00780	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00785	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv402[ebp], 0
$LN89@add_group_:
  0078c	83 7d 88 0c	 cmp	 DWORD PTR tv402[ebp], 12 ; 0000000cH
  00790	74 1a		 je	 SHORT $LN34@add_group_
  00792	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00797	05 95 00 00 00	 add	 eax, 149		; 00000095H
  0079c	50		 push	 eax
  0079d	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a2	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  007a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN34@add_group_:

; 300  : 	
; 301  : 					count ++;

  007ac	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  007af	83 c0 01	 add	 eax, 1
  007b2	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax

; 302  : 	
; 303  : 					en = get_local_entity_child_succ (en, LIST_TYPE_DIVISION);

  007b5	83 7d e0 00	 cmp	 DWORD PTR _en$[ebp], 0
  007b9	74 0a		 je	 SHORT $LN90@add_group_
  007bb	8b 45 e0	 mov	 eax, DWORD PTR _en$[ebp]
  007be	8b 08		 mov	 ecx, DWORD PTR [eax]
  007c0	89 4d 88	 mov	 DWORD PTR tv415[ebp], ecx
  007c3	eb 24		 jmp	 SHORT $LN91@add_group_
$LN90@add_group_:
  007c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  007cb	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  007d1	52		 push	 edx
  007d2	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007dc	50		 push	 eax
  007dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007e2	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv415[ebp], 0
$LN91@add_group_:
  007e9	b9 01 00 00 00	 mov	 ecx, 1
  007ee	85 c9		 test	 ecx, ecx
  007f0	74 09		 je	 SHORT $LN92@add_group_
  007f2	c7 45 84 0b 00
	00 00		 mov	 DWORD PTR tv423[ebp], 11 ; 0000000bH
  007f9	eb 24		 jmp	 SHORT $LN93@add_group_
$LN92@add_group_:
  007fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00801	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00807	52		 push	 edx
  00808	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0080d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00812	50		 push	 eax
  00813	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00818	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv423[ebp], 0
$LN93@add_group_:
  0081f	6a 0b		 push	 11			; 0000000bH
  00821	8b 4d e0	 mov	 ecx, DWORD PTR _en$[ebp]
  00824	51		 push	 ecx
  00825	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv415[ebp], 180
  0082c	8b 45 84	 mov	 eax, DWORD PTR tv423[ebp]
  0082f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00836	ff d1		 call	 ecx
  00838	89 45 e0	 mov	 DWORD PTR _en$[ebp], eax

; 304  : 				}

  0083b	e9 0e ff ff ff	 jmp	 $LN4@add_group_
$LN5@add_group_:

; 305  : 	
; 306  : 				if (count < max_count)

  00840	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00843	3b 45 f4	 cmp	 eax, DWORD PTR _max_count$[ebp]
  00846	7d 05		 jge	 SHORT $LN35@add_group_

; 307  : 				{
; 308  : 					break;

  00848	e9 8b 00 00 00	 jmp	 $LN3@add_group_
$LN35@add_group_:

; 309  : 				}
; 310  : 			}
; 311  : 	
; 312  : 			division = get_local_entity_child_succ (division, LIST_TYPE_DIVISION_HEADQUARTERS);

  0084d	83 7d d4 00	 cmp	 DWORD PTR _division$[ebp], 0
  00851	74 0a		 je	 SHORT $LN94@add_group_
  00853	8b 45 d4	 mov	 eax, DWORD PTR _division$[ebp]
  00856	8b 08		 mov	 ecx, DWORD PTR [eax]
  00858	89 4d 88	 mov	 DWORD PTR tv436[ebp], ecx
  0085b	eb 24		 jmp	 SHORT $LN95@add_group_
$LN94@add_group_:
  0085d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00863	81 c2 a2 00 00
	00		 add	 edx, 162		; 000000a2H
  00869	52		 push	 edx
  0086a	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0086f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00874	50		 push	 eax
  00875	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0087a	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv436[ebp], 0
$LN95@add_group_:
  00881	b9 01 00 00 00	 mov	 ecx, 1
  00886	85 c9		 test	 ecx, ecx
  00888	74 09		 je	 SHORT $LN96@add_group_
  0088a	c7 45 84 0c 00
	00 00		 mov	 DWORD PTR tv444[ebp], 12 ; 0000000cH
  00891	eb 24		 jmp	 SHORT $LN97@add_group_
$LN96@add_group_:
  00893	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00899	81 c2 a2 00 00
	00		 add	 edx, 162		; 000000a2H
  0089f	52		 push	 edx
  008a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  008a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  008aa	50		 push	 eax
  008ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008b0	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv444[ebp], 0
$LN97@add_group_:
  008b7	6a 0c		 push	 12			; 0000000cH
  008b9	8b 4d d4	 mov	 ecx, DWORD PTR _division$[ebp]
  008bc	51		 push	 ecx
  008bd	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv436[ebp], 180
  008c4	8b 45 84	 mov	 eax, DWORD PTR tv444[ebp]
  008c7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  008ce	ff d1		 call	 ecx
  008d0	89 45 d4	 mov	 DWORD PTR _division$[ebp], eax

; 313  : 		}

  008d3	e9 56 fd ff ff	 jmp	 $LN2@add_group_
$LN3@add_group_:

; 314  : 	
; 315  : 		if (division)

  008d8	83 7d d4 00	 cmp	 DWORD PTR _division$[ebp], 0
  008dc	74 05		 je	 SHORT $LN36@add_group_

; 316  : 		{
; 317  : 			//
; 318  : 			// found an existing division with space available
; 319  : 			//
; 320  : 		}
; 321  : 		else

  008de	e9 11 04 00 00	 jmp	 $LN37@add_group_
$LN36@add_group_:

; 322  : 		{
; 323  : 			//
; 324  : 			// create a new division
; 325  : 			//
; 326  : 	
; 327  : 			entity
; 328  : 				*main_division;
; 329  : 	
; 330  : 			max_count = division_database [division_type].maximum_groups_per_division;

  008e3	6b 45 e8 0c	 imul	 eax, DWORD PTR _division_type$[ebp], 12
  008e7	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?division_database@@3QBUDIVISION_DATA@@B[eax+8]
  008ed	89 4d f4	 mov	 DWORD PTR _max_count$[ebp], ecx

; 331  : 	
; 332  : 			main_division = get_local_entity_first_child (force, LIST_TYPE_DIVISION);

  008f0	83 7d dc 00	 cmp	 DWORD PTR _force$[ebp], 0
  008f4	74 0a		 je	 SHORT $LN98@add_group_
  008f6	8b 45 dc	 mov	 eax, DWORD PTR _force$[ebp]
  008f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  008fb	89 4d 88	 mov	 DWORD PTR tv460[ebp], ecx
  008fe	eb 24		 jmp	 SHORT $LN99@add_group_
$LN98@add_group_:
  00900	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00906	81 c2 b6 00 00
	00		 add	 edx, 182		; 000000b6H
  0090c	52		 push	 edx
  0090d	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00912	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00917	50		 push	 eax
  00918	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0091d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv460[ebp], 0
$LN99@add_group_:
  00924	b9 01 00 00 00	 mov	 ecx, 1
  00929	85 c9		 test	 ecx, ecx
  0092b	74 09		 je	 SHORT $LN100@add_group_
  0092d	c7 45 84 0b 00
	00 00		 mov	 DWORD PTR tv468[ebp], 11 ; 0000000bH
  00934	eb 24		 jmp	 SHORT $LN101@add_group_
$LN100@add_group_:
  00936	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  0093c	81 c2 b6 00 00
	00		 add	 edx, 182		; 000000b6H
  00942	52		 push	 edx
  00943	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00948	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0094d	50		 push	 eax
  0094e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00953	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv468[ebp], 0
$LN101@add_group_:
  0095a	6a 0b		 push	 11			; 0000000bH
  0095c	8b 4d dc	 mov	 ecx, DWORD PTR _force$[ebp]
  0095f	51		 push	 ecx
  00960	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv460[ebp], 180
  00967	8b 45 84	 mov	 eax, DWORD PTR tv468[ebp]
  0096a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00971	ff d1		 call	 ecx
  00973	89 45 cc	 mov	 DWORD PTR _main_division$1[ebp], eax
$LN6@add_group_:

; 333  : 	
; 334  : 			while (main_division)

  00976	83 7d cc 00	 cmp	 DWORD PTR _main_division$1[ebp], 0
  0097a	0f 84 1a 03 00
	00		 je	 $LN7@add_group_

; 335  : 			{
; 336  : 				if (get_local_entity_int_value (main_division, INT_TYPE_ENTITY_SUB_TYPE) == main_division_type)

  00980	83 7d cc 00	 cmp	 DWORD PTR _main_division$1[ebp], 0
  00984	74 0a		 je	 SHORT $LN102@add_group_
  00986	8b 45 cc	 mov	 eax, DWORD PTR _main_division$1[ebp]
  00989	8b 08		 mov	 ecx, DWORD PTR [eax]
  0098b	89 4d 88	 mov	 DWORD PTR tv480[ebp], ecx
  0098e	eb 1d		 jmp	 SHORT $LN103@add_group_
$LN102@add_group_:
  00990	68 50 01 00 00	 push	 336			; 00000150H
  00995	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0099a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009a0	52		 push	 edx
  009a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a6	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv480[ebp], 0
$LN103@add_group_:
  009ad	b8 01 00 00 00	 mov	 eax, 1
  009b2	85 c0		 test	 eax, eax
  009b4	74 09		 je	 SHORT $LN104@add_group_
  009b6	c7 45 84 34 00
	00 00		 mov	 DWORD PTR tv487[ebp], 52 ; 00000034H
  009bd	eb 1d		 jmp	 SHORT $LN105@add_group_
$LN104@add_group_:
  009bf	68 50 01 00 00	 push	 336			; 00000150H
  009c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  009c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009cf	51		 push	 ecx
  009d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009d5	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv487[ebp], 0
$LN105@add_group_:
  009dc	6a 34		 push	 52			; 00000034H
  009de	8b 55 cc	 mov	 edx, DWORD PTR _main_division$1[ebp]
  009e1	52		 push	 edx
  009e2	69 45 88 5c 04
	00 00		 imul	 eax, DWORD PTR tv480[ebp], 1116
  009e9	8b 4d 84	 mov	 ecx, DWORD PTR tv487[ebp]
  009ec	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  009f3	ff d2		 call	 edx
  009f5	3b 45 e4	 cmp	 eax, DWORD PTR _main_division_type$[ebp]
  009f8	0f 85 11 02 00
	00		 jne	 $LN42@add_group_

; 337  : 				{
; 338  : 					//
; 339  : 					// check division for vacancies
; 340  : 					//
; 341  : 	
; 342  : 					if (max_count == 0)

  009fe	83 7d f4 00	 cmp	 DWORD PTR _max_count$[ebp], 0
  00a02	75 05		 jne	 SHORT $LN39@add_group_

; 343  : 					{
; 344  : 						break;

  00a04	e9 91 02 00 00	 jmp	 $LN7@add_group_
$LN39@add_group_:

; 345  : 					}
; 346  : 	
; 347  : 					count = 0;

  00a09	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 348  : 	
; 349  : 					en = get_local_entity_first_child (main_division, LIST_TYPE_DIVISION);

  00a10	83 7d cc 00	 cmp	 DWORD PTR _main_division$1[ebp], 0
  00a14	74 0a		 je	 SHORT $LN106@add_group_
  00a16	8b 45 cc	 mov	 eax, DWORD PTR _main_division$1[ebp]
  00a19	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a1b	89 4d 88	 mov	 DWORD PTR tv501[ebp], ecx
  00a1e	eb 24		 jmp	 SHORT $LN107@add_group_
$LN106@add_group_:
  00a20	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00a26	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  00a2c	52		 push	 edx
  00a2d	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a32	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a37	50		 push	 eax
  00a38	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a3d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv501[ebp], 0
$LN107@add_group_:
  00a44	b9 01 00 00 00	 mov	 ecx, 1
  00a49	85 c9		 test	 ecx, ecx
  00a4b	74 09		 je	 SHORT $LN108@add_group_
  00a4d	c7 45 84 0b 00
	00 00		 mov	 DWORD PTR tv509[ebp], 11 ; 0000000bH
  00a54	eb 24		 jmp	 SHORT $LN109@add_group_
$LN108@add_group_:
  00a56	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00a5c	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  00a62	52		 push	 edx
  00a63	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a68	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00a6d	50		 push	 eax
  00a6e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a73	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv509[ebp], 0
$LN109@add_group_:
  00a7a	6a 0b		 push	 11			; 0000000bH
  00a7c	8b 4d cc	 mov	 ecx, DWORD PTR _main_division$1[ebp]
  00a7f	51		 push	 ecx
  00a80	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv501[ebp], 180
  00a87	8b 45 84	 mov	 eax, DWORD PTR tv509[ebp]
  00a8a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00a91	ff d1		 call	 ecx
  00a93	89 45 e0	 mov	 DWORD PTR _en$[ebp], eax
$LN8@add_group_:

; 350  : 	
; 351  : 					while (en)

  00a96	83 7d e0 00	 cmp	 DWORD PTR _en$[ebp], 0
  00a9a	0f 84 62 01 00
	00		 je	 $LN9@add_group_

; 352  : 					{
; 353  : 						ASSERT (get_local_entity_type (en) == ENTITY_TYPE_DIVISION);

  00aa0	83 7d e0 00	 cmp	 DWORD PTR _en$[ebp], 0
  00aa4	74 0a		 je	 SHORT $LN110@add_group_
  00aa6	8b 45 e0	 mov	 eax, DWORD PTR _en$[ebp]
  00aa9	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aab	89 4d 88	 mov	 DWORD PTR tv522[ebp], ecx
  00aae	eb 24		 jmp	 SHORT $LN111@add_group_
$LN110@add_group_:
  00ab0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00ab6	81 c2 cb 00 00
	00		 add	 edx, 203		; 000000cbH
  00abc	52		 push	 edx
  00abd	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ac2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ac7	50		 push	 eax
  00ac8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00acd	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv522[ebp], 0
$LN111@add_group_:
  00ad4	83 7d 88 08	 cmp	 DWORD PTR tv522[ebp], 8
  00ad8	74 1a		 je	 SHORT $LN40@add_group_
  00ada	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00adf	05 cb 00 00 00	 add	 eax, 203		; 000000cbH
  00ae4	50		 push	 eax
  00ae5	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aea	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KIPMLNBB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  00aef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN40@add_group_:

; 354  : 	
; 355  : 						if (get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE) == division_type)

  00af4	83 7d e0 00	 cmp	 DWORD PTR _en$[ebp], 0
  00af8	74 0a		 je	 SHORT $LN112@add_group_
  00afa	8b 45 e0	 mov	 eax, DWORD PTR _en$[ebp]
  00afd	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aff	89 4d 88	 mov	 DWORD PTR tv533[ebp], ecx
  00b02	eb 1d		 jmp	 SHORT $LN113@add_group_
$LN112@add_group_:
  00b04	68 63 01 00 00	 push	 355			; 00000163H
  00b09	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b0e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b14	52		 push	 edx
  00b15	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b1a	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv533[ebp], 0
$LN113@add_group_:
  00b21	b8 01 00 00 00	 mov	 eax, 1
  00b26	85 c0		 test	 eax, eax
  00b28	74 09		 je	 SHORT $LN114@add_group_
  00b2a	c7 45 84 34 00
	00 00		 mov	 DWORD PTR tv540[ebp], 52 ; 00000034H
  00b31	eb 1d		 jmp	 SHORT $LN115@add_group_
$LN114@add_group_:
  00b33	68 63 01 00 00	 push	 355			; 00000163H
  00b38	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b3d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b43	51		 push	 ecx
  00b44	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b49	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv540[ebp], 0
$LN115@add_group_:
  00b50	6a 34		 push	 52			; 00000034H
  00b52	8b 55 e0	 mov	 edx, DWORD PTR _en$[ebp]
  00b55	52		 push	 edx
  00b56	69 45 88 5c 04
	00 00		 imul	 eax, DWORD PTR tv533[ebp], 1116
  00b5d	8b 4d 84	 mov	 ecx, DWORD PTR tv540[ebp]
  00b60	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00b67	ff d2		 call	 edx
  00b69	3b 45 e8	 cmp	 eax, DWORD PTR _division_type$[ebp]
  00b6c	75 09		 jne	 SHORT $LN41@add_group_

; 356  : 						{
; 357  : 							count ++;

  00b6e	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00b71	83 c0 01	 add	 eax, 1
  00b74	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN41@add_group_:

; 358  : 						}
; 359  : 						
; 360  : 						en = get_local_entity_child_succ (en, LIST_TYPE_DIVISION);

  00b77	83 7d e0 00	 cmp	 DWORD PTR _en$[ebp], 0
  00b7b	74 0a		 je	 SHORT $LN116@add_group_
  00b7d	8b 45 e0	 mov	 eax, DWORD PTR _en$[ebp]
  00b80	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b82	89 4d 88	 mov	 DWORD PTR tv554[ebp], ecx
  00b85	eb 24		 jmp	 SHORT $LN117@add_group_
$LN116@add_group_:
  00b87	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00b8d	81 c2 d2 00 00
	00		 add	 edx, 210		; 000000d2H
  00b93	52		 push	 edx
  00b94	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b99	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b9e	50		 push	 eax
  00b9f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ba4	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv554[ebp], 0
$LN117@add_group_:
  00bab	b9 01 00 00 00	 mov	 ecx, 1
  00bb0	85 c9		 test	 ecx, ecx
  00bb2	74 09		 je	 SHORT $LN118@add_group_
  00bb4	c7 45 84 0b 00
	00 00		 mov	 DWORD PTR tv562[ebp], 11 ; 0000000bH
  00bbb	eb 24		 jmp	 SHORT $LN119@add_group_
$LN118@add_group_:
  00bbd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00bc3	81 c2 d2 00 00
	00		 add	 edx, 210		; 000000d2H
  00bc9	52		 push	 edx
  00bca	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bcf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00bd4	50		 push	 eax
  00bd5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bda	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv562[ebp], 0
$LN119@add_group_:
  00be1	6a 0b		 push	 11			; 0000000bH
  00be3	8b 4d e0	 mov	 ecx, DWORD PTR _en$[ebp]
  00be6	51		 push	 ecx
  00be7	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv554[ebp], 180
  00bee	8b 45 84	 mov	 eax, DWORD PTR tv562[ebp]
  00bf1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00bf8	ff d1		 call	 ecx
  00bfa	89 45 e0	 mov	 DWORD PTR _en$[ebp], eax

; 361  : 					}

  00bfd	e9 94 fe ff ff	 jmp	 $LN8@add_group_
$LN9@add_group_:

; 362  : 	
; 363  : 					if (count < max_count)

  00c02	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00c05	3b 45 f4	 cmp	 eax, DWORD PTR _max_count$[ebp]
  00c08	7d 05		 jge	 SHORT $LN42@add_group_

; 364  : 					{
; 365  : 						break;

  00c0a	e9 8b 00 00 00	 jmp	 $LN7@add_group_
$LN42@add_group_:

; 366  : 					}
; 367  : 				}
; 368  : 	
; 369  : 				main_division = get_local_entity_child_succ (main_division, LIST_TYPE_DIVISION);

  00c0f	83 7d cc 00	 cmp	 DWORD PTR _main_division$1[ebp], 0
  00c13	74 0a		 je	 SHORT $LN120@add_group_
  00c15	8b 45 cc	 mov	 eax, DWORD PTR _main_division$1[ebp]
  00c18	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c1a	89 4d 88	 mov	 DWORD PTR tv575[ebp], ecx
  00c1d	eb 24		 jmp	 SHORT $LN121@add_group_
$LN120@add_group_:
  00c1f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00c25	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  00c2b	52		 push	 edx
  00c2c	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c31	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c36	50		 push	 eax
  00c37	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c3c	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv575[ebp], 0
$LN121@add_group_:
  00c43	b9 01 00 00 00	 mov	 ecx, 1
  00c48	85 c9		 test	 ecx, ecx
  00c4a	74 09		 je	 SHORT $LN122@add_group_
  00c4c	c7 45 84 0b 00
	00 00		 mov	 DWORD PTR tv583[ebp], 11 ; 0000000bH
  00c53	eb 24		 jmp	 SHORT $LN123@add_group_
$LN122@add_group_:
  00c55	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00c5b	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  00c61	52		 push	 edx
  00c62	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c67	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00c6c	50		 push	 eax
  00c6d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c72	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv583[ebp], 0
$LN123@add_group_:
  00c79	6a 0b		 push	 11			; 0000000bH
  00c7b	8b 4d cc	 mov	 ecx, DWORD PTR _main_division$1[ebp]
  00c7e	51		 push	 ecx
  00c7f	69 55 88 b4 00
	00 00		 imul	 edx, DWORD PTR tv575[ebp], 180
  00c86	8b 45 84	 mov	 eax, DWORD PTR tv583[ebp]
  00c89	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00c90	ff d1		 call	 ecx
  00c92	89 45 cc	 mov	 DWORD PTR _main_division$1[ebp], eax

; 370  : 			}

  00c95	e9 dc fc ff ff	 jmp	 $LN6@add_group_
$LN7@add_group_:

; 371  : 	
; 372  : 			if (main_division)

  00c9a	83 7d cc 00	 cmp	 DWORD PTR _main_division$1[ebp], 0
  00c9e	74 02		 je	 SHORT $LN43@add_group_

; 373  : 			{
; 374  : 				//
; 375  : 				// found an existing division with space available
; 376  : 				//
; 377  : 			}
; 378  : 			else

  00ca0	eb 18		 jmp	 SHORT $LN44@add_group_
$LN43@add_group_:

; 379  : 			{
; 380  : 				//
; 381  : 				// create a new division
; 382  : 				//
; 383  : 	
; 384  : 				main_division = create_new_division (main_division_type, side, force, NULL, FALSE);

  00ca2	6a 00		 push	 0
  00ca4	6a 00		 push	 0
  00ca6	8b 45 dc	 mov	 eax, DWORD PTR _force$[ebp]
  00ca9	50		 push	 eax
  00caa	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  00cad	51		 push	 ecx
  00cae	8b 55 e4	 mov	 edx, DWORD PTR _main_division_type$[ebp]
  00cb1	52		 push	 edx
  00cb2	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  00cb7	89 45 cc	 mov	 DWORD PTR _main_division$1[ebp], eax
$LN44@add_group_:

; 385  : 			}
; 386  : 	
; 387  : 			ASSERT (main_division);

  00cba	83 7d cc 00	 cmp	 DWORD PTR _main_division$1[ebp], 0
  00cbe	75 1a		 jne	 SHORT $LN45@add_group_
  00cc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00cc5	05 ed 00 00 00	 add	 eax, 237		; 000000edH
  00cca	50		 push	 eax
  00ccb	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cd0	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BHIBHEOK@main_division@
  00cd5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN45@add_group_:

; 388  : 	
; 389  : 			division = create_new_division (division_type, side, main_division, keysite, FALSE);

  00cda	6a 00		 push	 0
  00cdc	8b 45 d8	 mov	 eax, DWORD PTR _keysite$[ebp]
  00cdf	50		 push	 eax
  00ce0	8b 4d cc	 mov	 ecx, DWORD PTR _main_division$1[ebp]
  00ce3	51		 push	 ecx
  00ce4	8b 55 fc	 mov	 edx, DWORD PTR _side$[ebp]
  00ce7	52		 push	 edx
  00ce8	8b 45 e8	 mov	 eax, DWORD PTR _division_type$[ebp]
  00ceb	50		 push	 eax
  00cec	e8 00 00 00 00	 call	 ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ; create_new_division
  00cf1	89 45 d4	 mov	 DWORD PTR _division$[ebp], eax
$LN37@add_group_:

; 390  : 		}
; 391  : 	}
; 392  : 
; 393  : 	ASSERT (division);

  00cf4	83 7d d4 00	 cmp	 DWORD PTR _division$[ebp], 0
  00cf8	75 1a		 jne	 SHORT $LN46@add_group_
  00cfa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_group_to_division@@YGPAUENTITY@@PAU2@0@Z@4JA
  00cff	05 f3 00 00 00	 add	 eax, 243		; 000000f3H
  00d04	50		 push	 eax
  00d05	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d0a	68 00 00 00 00	 push	 OFFSET ??_C@_08DHDHNDEI@division@
  00d0f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN46@add_group_:

; 394  : 
; 395  : 	set_client_server_entity_parent (group, LIST_TYPE_DIVISION, division);

  00d14	8b 45 d4	 mov	 eax, DWORD PTR _division$[ebp]
  00d17	50		 push	 eax
  00d18	6a 0b		 push	 11			; 0000000bH
  00d1a	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  00d1d	51		 push	 ecx
  00d1e	e8 00 00 00 00	 call	 ?set_client_server_entity_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_client_server_entity_parent

; 396  : 
; 397  : 	return division;

  00d23	8b 45 d4	 mov	 eax, DWORD PTR _division$[ebp]

; 398  : }

  00d26	5f		 pop	 edi
  00d27	5e		 pop	 esi
  00d28	5b		 pop	 ebx
  00d29	8b e5		 mov	 esp, ebp
  00d2b	5d		 pop	 ebp
  00d2c	c2 08 00	 ret	 8
?add_group_to_division@@YGPAUENTITY@@PAU1@0@Z ENDP	; add_group_to_division
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\division\division.c
;	COMDAT ?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z
_TEXT	SEGMENT
_id$ = -8						; size = 4
_new_entity$ = -4					; size = 4
_type$ = 8						; size = 4
_side$ = 12						; size = 4
_parent$ = 16						; size = 4
_hq$ = 20						; size = 4
_local_only$ = 24					; size = 4
?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z PROC ; create_new_division, COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 103  : 	entity
; 104  : 		*new_entity;
; 105  : 
; 106  : 	int
; 107  : 		id;
; 108  : 
; 109  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@create_new
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU2@1H@Z@4JA
  00017	83 c0 07	 add	 eax, 7
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_new:

; 110  : 
; 111  : 	ASSERT (parent);

  0002a	83 7d 10 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@create_new
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU2@1H@Z@4JA
  00035	83 c0 09	 add	 eax, 9
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@DPAMNIJB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@create_new:

; 112  : 
; 113  : 	id = get_next_free_division_id (side, type);

  00048	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ?get_next_free_division_id@@YGHHH@Z ; get_next_free_division_id
  00055	89 45 f8	 mov	 DWORD PTR _id$[ebp], eax

; 114  : 
; 115  : 	if (local_only)

  00058	83 7d 18 00	 cmp	 DWORD PTR _local_only$[ebp], 0
  0005c	74 33		 je	 SHORT $LN4@create_new

; 116  : 	{
; 117  : 		new_entity = create_local_entity

  0005e	6a 00		 push	 0
  00060	8b 45 f8	 mov	 eax, DWORD PTR _id$[ebp]
  00063	50		 push	 eax
  00064	6a 30		 push	 48			; 00000030H
  00066	6a 05		 push	 5
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  0006b	51		 push	 ecx
  0006c	6a 34		 push	 52			; 00000034H
  0006e	6a 05		 push	 5
  00070	8b 55 14	 mov	 edx, DWORD PTR _hq$[ebp]
  00073	52		 push	 edx
  00074	6a 0c		 push	 12			; 0000000cH
  00076	6a 06		 push	 6
  00078	8b 45 10	 mov	 eax, DWORD PTR _parent$[ebp]
  0007b	50		 push	 eax
  0007c	6a 0b		 push	 11			; 0000000bH
  0007e	6a 06		 push	 6
  00080	6a ff		 push	 -1
  00082	6a 08		 push	 8
  00084	e8 00 00 00 00	 call	 ?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_local_entity
  00089	83 c4 3c	 add	 esp, 60			; 0000003cH
  0008c	89 45 fc	 mov	 DWORD PTR _new_entity$[ebp], eax

; 118  : 		(
; 119  : 			ENTITY_TYPE_DIVISION,
; 120  : 			ENTITY_INDEX_DONT_CARE,
; 121  : 			ENTITY_ATTR_PARENT (LIST_TYPE_DIVISION, parent),
; 122  : 			ENTITY_ATTR_PARENT (LIST_TYPE_DIVISION_HEADQUARTERS, hq),
; 123  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_ENTITY_SUB_TYPE, type),
; 124  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_DIVISION_ID, id),
; 125  : 			ENTITY_ATTR_END
; 126  : 		);
; 127  : 	}
; 128  : 	else

  0008f	eb 31		 jmp	 SHORT $LN5@create_new
$LN4@create_new:

; 129  : 	{
; 130  : 		new_entity = create_client_server_entity

  00091	6a 00		 push	 0
  00093	8b 45 f8	 mov	 eax, DWORD PTR _id$[ebp]
  00096	50		 push	 eax
  00097	6a 30		 push	 48			; 00000030H
  00099	6a 05		 push	 5
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  0009e	51		 push	 ecx
  0009f	6a 34		 push	 52			; 00000034H
  000a1	6a 05		 push	 5
  000a3	8b 55 14	 mov	 edx, DWORD PTR _hq$[ebp]
  000a6	52		 push	 edx
  000a7	6a 0c		 push	 12			; 0000000cH
  000a9	6a 06		 push	 6
  000ab	8b 45 10	 mov	 eax, DWORD PTR _parent$[ebp]
  000ae	50		 push	 eax
  000af	6a 0b		 push	 11			; 0000000bH
  000b1	6a 06		 push	 6
  000b3	6a ff		 push	 -1
  000b5	6a 08		 push	 8
  000b7	e8 00 00 00 00	 call	 ?create_client_server_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_client_server_entity
  000bc	83 c4 3c	 add	 esp, 60			; 0000003cH
  000bf	89 45 fc	 mov	 DWORD PTR _new_entity$[ebp], eax
$LN5@create_new:

; 131  : 		(
; 132  : 			ENTITY_TYPE_DIVISION,
; 133  : 			ENTITY_INDEX_DONT_CARE,
; 134  : 			ENTITY_ATTR_PARENT (LIST_TYPE_DIVISION, parent),
; 135  : 			ENTITY_ATTR_PARENT (LIST_TYPE_DIVISION_HEADQUARTERS, hq),
; 136  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_ENTITY_SUB_TYPE, type),
; 137  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_DIVISION_ID, id),
; 138  : 			ENTITY_ATTR_END
; 139  : 		);
; 140  : 	}
; 141  : 
; 142  : 	return new_entity;

  000c2	8b 45 fc	 mov	 eax, DWORD PTR _new_entity$[ebp]

; 143  : }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 14 00	 ret	 20			; 00000014H
?create_new_division@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAU1@1H@Z ENDP ; create_new_division
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
