; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_first_available_weapon_sub_type
PUBLIC	?get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_next_available_weapon_sub_type
PUBLIC	?get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_previous_available_weapon_sub_type
PUBLIC	?__LINE__Var@?0??get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_apache_next_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@ ; `string'
PUBLIC	?__LINE__Var@?0??get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_apache_previous_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_havoc_next_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_havoc_previous_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_comanche_next_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_comanche_previous_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_hokum_next_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_hokum_previous_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_first_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_next_available_weapon_sub_type'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA ; `get_previous_available_weapon_sub_type'::`1'::__LINE__Var
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z:PROC ; get_local_entity_weapon_available
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
;	COMDAT ?__LINE__Var@?0??get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 0471H ; `get_previous_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 040fH ; `get_next_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 03f6H ; `get_first_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 037eH ; `get_hokum_previous_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 030cH ; `get_hokum_next_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 0296H ; `get_comanche_previous_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 022cH ; `get_comanche_next_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 01aeH ; `get_havoc_previous_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 013cH ; `get_havoc_next_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 0c6H ; `get_apache_previous_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
CONST	SEGMENT
??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@ DB 'entity_sub_ty'
	DB	'pe_weapon_valid (weapon_sub_type)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selc'
	DB	't.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA DD 05cH ; `get_apache_next_available_weapon_sub_type'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_previous_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_hokum_previous_available_weapon_sub_type, COMDAT

; 894  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 895  : 	entity_sub_types
; 896  : 		weapon_sub_type,
; 897  : 		previous_weapon_sub_type;
; 898  : 
; 899  : 	int
; 900  : 		attempts;
; 901  : 
; 902  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_hokum_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_hokum_:

; 903  : 
; 904  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN20@get_hokum_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN21@get_hokum_
$LN20@get_hokum_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN21@get_hokum_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN22@get_hokum_
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN23@get_hokum_
$LN22@get_hokum_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN23@get_hokum_:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 905  : 
; 906  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_hokum_
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_hokum_
$LN8@get_hokum_:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_hokum_:

; 907  : 
; 908  : 	previous_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], 0

; 909  : 
; 910  : 	attempts = NUM_HOKUM_WEAPON_TYPES;

  000d5	c7 45 f4 07 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 7
$LN2@get_hokum_:

; 911  : 
; 912  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 93 00 00
	00		 je	 $LN3@get_hokum_

; 913  : 	{
; 914  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 32	 cmp	 DWORD PTR tv128[ebp], 50 ; 00000032H
  000f0	77 59		 ja	 SHORT $LN17@get_hokum_
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN24@get_hokum_[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN25@get_hokum_[edx*4]
$LN9@get_hokum_:

; 915  : 		{
; 916  : 			////////////////////////////////////////
; 917  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 918  : 			////////////////////////////////////////
; 919  : 			{
; 920  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00103	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 921  : 
; 922  : 				break;

  0010a	eb 46		 jmp	 SHORT $LN4@get_hokum_
$LN10@get_hokum_:

; 923  : 			}
; 924  : 			////////////////////////////////////////
; 925  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND:
; 926  : 			////////////////////////////////////////
; 927  : 			{
; 928  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND;

  0010c	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 15 ; 0000000fH

; 929  : 
; 930  : 				break;

  00113	eb 3d		 jmp	 SHORT $LN4@get_hokum_
$LN11@get_hokum_:

; 931  : 			}
; 932  : 			////////////////////////////////////////
; 933  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND:
; 934  : 			////////////////////////////////////////
; 935  : 			{
; 936  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00115	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 937  : 
; 938  : 				break;

  0011c	eb 34		 jmp	 SHORT $LN4@get_hokum_
$LN12@get_hokum_:

; 939  : 			}
; 940  : 			////////////////////////////////////////
; 941  : 			case ENTITY_SUB_TYPE_WEAPON_IGLA_V:
; 942  : 			////////////////////////////////////////
; 943  : 			{
; 944  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND;

  0011e	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 20 ; 00000014H

; 945  : 
; 946  : 				break;

  00125	eb 2b		 jmp	 SHORT $LN4@get_hokum_
$LN13@get_hokum_:

; 947  : 			}
; 948  : 			////////////////////////////////////////
; 949  : 			case ENTITY_SUB_TYPE_WEAPON_VIKHR:
; 950  : 			////////////////////////////////////////
; 951  : 			{
; 952  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_IGLA_V;

  00127	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 39 ; 00000027H

; 953  : 
; 954  : 				break;

  0012e	eb 22		 jmp	 SHORT $LN4@get_hokum_
$LN14@get_hokum_:

; 955  : 			}
; 956  : 			////////////////////////////////////////
; 957  : 			case ENTITY_SUB_TYPE_WEAPON_S8:
; 958  : 			////////////////////////////////////////
; 959  : 			{
; 960  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_VIKHR;

  00130	c7 45 fc 32 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 50 ; 00000032H

; 961  : 
; 962  : 				break;

  00137	eb 19		 jmp	 SHORT $LN4@get_hokum_
$LN15@get_hokum_:

; 963  : 			}
; 964  : 			////////////////////////////////////////
; 965  : 			case ENTITY_SUB_TYPE_WEAPON_S13:
; 966  : 			////////////////////////////////////////
; 967  : 			{
; 968  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S8;

  00139	c7 45 fc 22 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 34 ; 00000022H

; 969  : 
; 970  : 				break;

  00140	eb 10		 jmp	 SHORT $LN4@get_hokum_
$LN16@get_hokum_:

; 971  : 			}
; 972  : 			////////////////////////////////////////
; 973  : 			case ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND:
; 974  : 			////////////////////////////////////////
; 975  : 			{
; 976  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S13;

  00142	c7 45 fc 23 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 35 ; 00000023H

; 977  : 
; 978  : 				break;

  00149	eb 07		 jmp	 SHORT $LN4@get_hokum_
$LN17@get_hokum_:

; 979  : 			}
; 980  : 			////////////////////////////////////////
; 981  : 			default:
; 982  : 			////////////////////////////////////////
; 983  : 			{
; 984  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  0014b	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H
$LN4@get_hokum_:

; 985  : 
; 986  : 				break;
; 987  : 			}
; 988  : 		}
; 989  : 
; 990  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00152	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00155	50		 push	 eax
  00156	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00159	51		 push	 ecx
  0015a	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  0015f	85 c0		 test	 eax, eax
  00161	74 08		 je	 SHORT $LN18@get_hokum_

; 991  : 		{
; 992  : 			previous_weapon_sub_type = weapon_sub_type;

  00163	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00166	89 45 f8	 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], eax

; 993  : 
; 994  : 			break;

  00169	eb 0e		 jmp	 SHORT $LN3@get_hokum_
$LN18@get_hokum_:

; 995  : 		}
; 996  : 
; 997  : 		attempts--;

  0016b	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  0016e	83 e8 01	 sub	 eax, 1
  00171	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 998  : 	}

  00174	e9 63 ff ff ff	 jmp	 $LN2@get_hokum_
$LN3@get_hokum_:

; 999  : 
; 1000 : 	return (previous_weapon_sub_type);

  00179	8b 45 f8	 mov	 eax, DWORD PTR _previous_weapon_sub_type$[ebp]

; 1001 : }

  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 04 00	 ret	 4
  00185	0f 1f 00	 npad	 3
$LN25@get_hokum_:
  00188	00 00 00 00	 DD	 $LN9@get_hokum_
  0018c	00 00 00 00	 DD	 $LN16@get_hokum_
  00190	00 00 00 00	 DD	 $LN10@get_hokum_
  00194	00 00 00 00	 DD	 $LN11@get_hokum_
  00198	00 00 00 00	 DD	 $LN14@get_hokum_
  0019c	00 00 00 00	 DD	 $LN15@get_hokum_
  001a0	00 00 00 00	 DD	 $LN12@get_hokum_
  001a4	00 00 00 00	 DD	 $LN13@get_hokum_
  001a8	00 00 00 00	 DD	 $LN17@get_hokum_
$LN24@get_hokum_:
  001ac	00		 DB	 0
  001ad	08		 DB	 8
  001ae	08		 DB	 8
  001af	08		 DB	 8
  001b0	08		 DB	 8
  001b1	08		 DB	 8
  001b2	08		 DB	 8
  001b3	08		 DB	 8
  001b4	08		 DB	 8
  001b5	08		 DB	 8
  001b6	08		 DB	 8
  001b7	08		 DB	 8
  001b8	08		 DB	 8
  001b9	08		 DB	 8
  001ba	08		 DB	 8
  001bb	01		 DB	 1
  001bc	08		 DB	 8
  001bd	08		 DB	 8
  001be	08		 DB	 8
  001bf	02		 DB	 2
  001c0	03		 DB	 3
  001c1	08		 DB	 8
  001c2	08		 DB	 8
  001c3	08		 DB	 8
  001c4	08		 DB	 8
  001c5	08		 DB	 8
  001c6	08		 DB	 8
  001c7	08		 DB	 8
  001c8	08		 DB	 8
  001c9	08		 DB	 8
  001ca	08		 DB	 8
  001cb	08		 DB	 8
  001cc	08		 DB	 8
  001cd	08		 DB	 8
  001ce	04		 DB	 4
  001cf	05		 DB	 5
  001d0	08		 DB	 8
  001d1	08		 DB	 8
  001d2	08		 DB	 8
  001d3	06		 DB	 6
  001d4	08		 DB	 8
  001d5	08		 DB	 8
  001d6	08		 DB	 8
  001d7	08		 DB	 8
  001d8	08		 DB	 8
  001d9	08		 DB	 8
  001da	08		 DB	 8
  001db	08		 DB	 8
  001dc	08		 DB	 8
  001dd	08		 DB	 8
  001de	07		 DB	 7
?get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_hokum_previous_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_next_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_hokum_next_available_weapon_sub_type, COMDAT

; 780  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 781  : 	entity_sub_types
; 782  : 		weapon_sub_type,
; 783  : 		next_weapon_sub_type;
; 784  : 
; 785  : 	int
; 786  : 		attempts;
; 787  : 
; 788  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_hokum_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_hokum_:

; 789  : 
; 790  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN20@get_hokum_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN21@get_hokum_
$LN20@get_hokum_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN21@get_hokum_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN22@get_hokum_
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN23@get_hokum_
$LN22@get_hokum_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN23@get_hokum_:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 791  : 
; 792  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_hokum_
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_hokum_
$LN8@get_hokum_:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_hokum_:

; 793  : 
; 794  : 	next_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _next_weapon_sub_type$[ebp], 0

; 795  : 
; 796  : 	attempts = NUM_HOKUM_WEAPON_TYPES;

  000d5	c7 45 f4 07 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 7
$LN2@get_hokum_:

; 797  : 
; 798  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 93 00 00
	00		 je	 $LN3@get_hokum_

; 799  : 	{
; 800  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 32	 cmp	 DWORD PTR tv128[ebp], 50 ; 00000032H
  000f0	77 59		 ja	 SHORT $LN17@get_hokum_
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN24@get_hokum_[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN25@get_hokum_[edx*4]
$LN9@get_hokum_:

; 801  : 		{
; 802  : 			////////////////////////////////////////
; 803  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 804  : 			////////////////////////////////////////
; 805  : 			{
; 806  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00103	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 807  : 
; 808  : 				break;

  0010a	eb 46		 jmp	 SHORT $LN4@get_hokum_
$LN10@get_hokum_:

; 809  : 			}
; 810  : 			////////////////////////////////////////
; 811  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND:
; 812  : 			////////////////////////////////////////
; 813  : 			{
; 814  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND;

  0010c	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 20 ; 00000014H

; 815  : 
; 816  : 				break;

  00113	eb 3d		 jmp	 SHORT $LN4@get_hokum_
$LN11@get_hokum_:

; 817  : 			}
; 818  : 			////////////////////////////////////////
; 819  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND:
; 820  : 			////////////////////////////////////////
; 821  : 			{
; 822  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_IGLA_V;

  00115	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 39 ; 00000027H

; 823  : 
; 824  : 				break;

  0011c	eb 34		 jmp	 SHORT $LN4@get_hokum_
$LN12@get_hokum_:

; 825  : 			}
; 826  : 			////////////////////////////////////////
; 827  : 			case ENTITY_SUB_TYPE_WEAPON_IGLA_V:
; 828  : 			////////////////////////////////////////
; 829  : 			{
; 830  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_VIKHR;

  0011e	c7 45 fc 32 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 50 ; 00000032H

; 831  : 
; 832  : 				break;

  00125	eb 2b		 jmp	 SHORT $LN4@get_hokum_
$LN13@get_hokum_:

; 833  : 			}
; 834  : 			////////////////////////////////////////
; 835  : 			case ENTITY_SUB_TYPE_WEAPON_VIKHR:
; 836  : 			////////////////////////////////////////
; 837  : 			{
; 838  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S8;

  00127	c7 45 fc 22 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 34 ; 00000022H

; 839  : 
; 840  : 				break;

  0012e	eb 22		 jmp	 SHORT $LN4@get_hokum_
$LN14@get_hokum_:

; 841  : 			}
; 842  : 			////////////////////////////////////////
; 843  : 			case ENTITY_SUB_TYPE_WEAPON_S8:
; 844  : 			////////////////////////////////////////
; 845  : 			{
; 846  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S13;

  00130	c7 45 fc 23 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 35 ; 00000023H

; 847  : 
; 848  : 				break;

  00137	eb 19		 jmp	 SHORT $LN4@get_hokum_
$LN15@get_hokum_:

; 849  : 			}
; 850  : 			////////////////////////////////////////
; 851  : 			case ENTITY_SUB_TYPE_WEAPON_S13:
; 852  : 			////////////////////////////////////////
; 853  : 			{
; 854  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND;

  00139	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 15 ; 0000000fH

; 855  : 
; 856  : 				break;

  00140	eb 10		 jmp	 SHORT $LN4@get_hokum_
$LN16@get_hokum_:

; 857  : 			}
; 858  : 			////////////////////////////////////////
; 859  : 			case ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND:
; 860  : 			////////////////////////////////////////
; 861  : 			{
; 862  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00142	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 863  : 
; 864  : 				break;

  00149	eb 07		 jmp	 SHORT $LN4@get_hokum_
$LN17@get_hokum_:

; 865  : 			}
; 866  : 			////////////////////////////////////////
; 867  : 			default:
; 868  : 			////////////////////////////////////////
; 869  : 			{
; 870  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  0014b	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H
$LN4@get_hokum_:

; 871  : 
; 872  : 				break;
; 873  : 			}
; 874  : 		}
; 875  : 
; 876  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00152	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00155	50		 push	 eax
  00156	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00159	51		 push	 ecx
  0015a	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  0015f	85 c0		 test	 eax, eax
  00161	74 08		 je	 SHORT $LN18@get_hokum_

; 877  : 		{
; 878  : 			next_weapon_sub_type = weapon_sub_type;

  00163	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00166	89 45 f8	 mov	 DWORD PTR _next_weapon_sub_type$[ebp], eax

; 879  : 
; 880  : 			break;

  00169	eb 0e		 jmp	 SHORT $LN3@get_hokum_
$LN18@get_hokum_:

; 881  : 		}
; 882  : 
; 883  : 		attempts--;

  0016b	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  0016e	83 e8 01	 sub	 eax, 1
  00171	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 884  : 	}

  00174	e9 63 ff ff ff	 jmp	 $LN2@get_hokum_
$LN3@get_hokum_:

; 885  : 
; 886  : 	return (next_weapon_sub_type);

  00179	8b 45 f8	 mov	 eax, DWORD PTR _next_weapon_sub_type$[ebp]

; 887  : }

  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 04 00	 ret	 4
  00185	0f 1f 00	 npad	 3
$LN25@get_hokum_:
  00188	00 00 00 00	 DD	 $LN9@get_hokum_
  0018c	00 00 00 00	 DD	 $LN16@get_hokum_
  00190	00 00 00 00	 DD	 $LN10@get_hokum_
  00194	00 00 00 00	 DD	 $LN11@get_hokum_
  00198	00 00 00 00	 DD	 $LN14@get_hokum_
  0019c	00 00 00 00	 DD	 $LN15@get_hokum_
  001a0	00 00 00 00	 DD	 $LN12@get_hokum_
  001a4	00 00 00 00	 DD	 $LN13@get_hokum_
  001a8	00 00 00 00	 DD	 $LN17@get_hokum_
$LN24@get_hokum_:
  001ac	00		 DB	 0
  001ad	08		 DB	 8
  001ae	08		 DB	 8
  001af	08		 DB	 8
  001b0	08		 DB	 8
  001b1	08		 DB	 8
  001b2	08		 DB	 8
  001b3	08		 DB	 8
  001b4	08		 DB	 8
  001b5	08		 DB	 8
  001b6	08		 DB	 8
  001b7	08		 DB	 8
  001b8	08		 DB	 8
  001b9	08		 DB	 8
  001ba	08		 DB	 8
  001bb	01		 DB	 1
  001bc	08		 DB	 8
  001bd	08		 DB	 8
  001be	08		 DB	 8
  001bf	02		 DB	 2
  001c0	03		 DB	 3
  001c1	08		 DB	 8
  001c2	08		 DB	 8
  001c3	08		 DB	 8
  001c4	08		 DB	 8
  001c5	08		 DB	 8
  001c6	08		 DB	 8
  001c7	08		 DB	 8
  001c8	08		 DB	 8
  001c9	08		 DB	 8
  001ca	08		 DB	 8
  001cb	08		 DB	 8
  001cc	08		 DB	 8
  001cd	08		 DB	 8
  001ce	04		 DB	 4
  001cf	05		 DB	 5
  001d0	08		 DB	 8
  001d1	08		 DB	 8
  001d2	08		 DB	 8
  001d3	06		 DB	 6
  001d4	08		 DB	 8
  001d5	08		 DB	 8
  001d6	08		 DB	 8
  001d7	08		 DB	 8
  001d8	08		 DB	 8
  001d9	08		 DB	 8
  001da	08		 DB	 8
  001db	08		 DB	 8
  001dc	08		 DB	 8
  001dd	08		 DB	 8
  001de	07		 DB	 7
?get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_hokum_next_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_previous_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_comanche_previous_available_weapon_sub_type, COMDAT

; 662  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 663  : 	entity_sub_types
; 664  : 		weapon_sub_type,
; 665  : 		previous_weapon_sub_type;
; 666  : 
; 667  : 	int
; 668  : 		attempts;
; 669  : 
; 670  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_comanc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_comanc:

; 671  : 
; 672  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN19@get_comanc
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN20@get_comanc
$LN19@get_comanc:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN20@get_comanc:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN21@get_comanc
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN22@get_comanc
$LN21@get_comanc:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN22@get_comanc:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 673  : 
; 674  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_comanc
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_comanc
$LN8@get_comanc:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_comanc:

; 675  : 
; 676  : 	previous_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], 0

; 677  : 
; 678  : 	attempts = NUM_COMANCHE_WEAPON_TYPES;

  000d5	c7 45 f4 06 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 6
$LN2@get_comanc:

; 679  : 
; 680  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 8a 00 00
	00		 je	 $LN3@get_comanc

; 681  : 	{
; 682  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 2e	 cmp	 DWORD PTR tv128[ebp], 46 ; 0000002eH
  000f0	77 50		 ja	 SHORT $LN16@get_comanc
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN23@get_comanc[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN24@get_comanc[edx*4]
$LN9@get_comanc:

; 683  : 		{
; 684  : 			////////////////////////////////////////
; 685  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 686  : 			////////////////////////////////////////
; 687  : 			{
; 688  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND;

  00103	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 3

; 689  : 
; 690  : 				break;

  0010a	eb 3d		 jmp	 SHORT $LN4@get_comanc
$LN10@get_comanc:

; 691  : 			}
; 692  : 			////////////////////////////////////////
; 693  : 			case ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND:
; 694  : 			////////////////////////////////////////
; 695  : 			{
; 696  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261;

  0010c	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 31 ; 0000001fH

; 697  : 
; 698  : 				break;

  00113	eb 34		 jmp	 SHORT $LN4@get_comanc
$LN11@get_comanc:

; 699  : 			}
; 700  : 			////////////////////////////////////////
; 701  : 			case ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER:
; 702  : 			////////////////////////////////////////
; 703  : 			{
; 704  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND;

  00115	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 3

; 705  : 
; 706  : 				break;

  0011c	eb 2b		 jmp	 SHORT $LN4@get_comanc
$LN12@get_comanc:

; 707  : 			}
; 708  : 			////////////////////////////////////////
; 709  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE:
; 710  : 			////////////////////////////////////////
; 711  : 			{
; 712  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER;

  0011e	c7 45 fc 24 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 36 ; 00000024H

; 713  : 
; 714  : 				break;

  00125	eb 22		 jmp	 SHORT $LN4@get_comanc
$LN13@get_comanc:

; 715  : 			}
; 716  : 			////////////////////////////////////////
; 717  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II:
; 718  : 			////////////////////////////////////////
; 719  : 			{
; 720  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE;

  00127	c7 45 fc 2d 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 45 ; 0000002dH

; 721  : 
; 722  : 				break;

  0012e	eb 19		 jmp	 SHORT $LN4@get_comanc
$LN14@get_comanc:

; 723  : 			}
; 724  : 			////////////////////////////////////////
; 725  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 726  : 			////////////////////////////////////////
; 727  : 			{
; 728  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II;

  00130	c7 45 fc 2e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 46 ; 0000002eH

; 729  : 
; 730  : 				break;

  00137	eb 10		 jmp	 SHORT $LN4@get_comanc
$LN15@get_comanc:

; 731  : 			}
; 732  : 			////////////////////////////////////////
; 733  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 734  : 			////////////////////////////////////////
; 735  : 			{
; 736  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255;

  00139	c7 45 fc 1e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 30 ; 0000001eH

; 737  : 
; 738  : 				break;

  00140	eb 07		 jmp	 SHORT $LN4@get_comanc
$LN16@get_comanc:

; 739  : 			}
; 740  : 			////////////////////////////////////////
; 741  : 			default:
; 742  : 			////////////////////////////////////////
; 743  : 			{
; 744  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND;

  00142	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 3
$LN4@get_comanc:

; 745  : 
; 746  : 				break;
; 747  : 			}
; 748  : 		}
; 749  : 
; 750  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00149	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00156	85 c0		 test	 eax, eax
  00158	74 08		 je	 SHORT $LN17@get_comanc

; 751  : 		{
; 752  : 			previous_weapon_sub_type = weapon_sub_type;

  0015a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0015d	89 45 f8	 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], eax

; 753  : 
; 754  : 			break;

  00160	eb 0e		 jmp	 SHORT $LN3@get_comanc
$LN17@get_comanc:

; 755  : 		}
; 756  : 
; 757  : 		attempts--;

  00162	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  00165	83 e8 01	 sub	 eax, 1
  00168	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 758  : 	}

  0016b	e9 6c ff ff ff	 jmp	 $LN2@get_comanc
$LN3@get_comanc:

; 759  : 
; 760  : 	return (previous_weapon_sub_type);

  00170	8b 45 f8	 mov	 eax, DWORD PTR _previous_weapon_sub_type$[ebp]

; 761  : }

  00173	5f		 pop	 edi
  00174	5e		 pop	 esi
  00175	5b		 pop	 ebx
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c2 04 00	 ret	 4
$LN24@get_comanc:
  0017c	00 00 00 00	 DD	 $LN9@get_comanc
  00180	00 00 00 00	 DD	 $LN10@get_comanc
  00184	00 00 00 00	 DD	 $LN14@get_comanc
  00188	00 00 00 00	 DD	 $LN15@get_comanc
  0018c	00 00 00 00	 DD	 $LN11@get_comanc
  00190	00 00 00 00	 DD	 $LN12@get_comanc
  00194	00 00 00 00	 DD	 $LN13@get_comanc
  00198	00 00 00 00	 DD	 $LN16@get_comanc
$LN23@get_comanc:
  0019c	00		 DB	 0
  0019d	07		 DB	 7
  0019e	07		 DB	 7
  0019f	01		 DB	 1
  001a0	07		 DB	 7
  001a1	07		 DB	 7
  001a2	07		 DB	 7
  001a3	07		 DB	 7
  001a4	07		 DB	 7
  001a5	07		 DB	 7
  001a6	07		 DB	 7
  001a7	07		 DB	 7
  001a8	07		 DB	 7
  001a9	07		 DB	 7
  001aa	07		 DB	 7
  001ab	07		 DB	 7
  001ac	07		 DB	 7
  001ad	07		 DB	 7
  001ae	07		 DB	 7
  001af	07		 DB	 7
  001b0	07		 DB	 7
  001b1	07		 DB	 7
  001b2	07		 DB	 7
  001b3	07		 DB	 7
  001b4	07		 DB	 7
  001b5	07		 DB	 7
  001b6	07		 DB	 7
  001b7	07		 DB	 7
  001b8	07		 DB	 7
  001b9	07		 DB	 7
  001ba	02		 DB	 2
  001bb	03		 DB	 3
  001bc	07		 DB	 7
  001bd	07		 DB	 7
  001be	07		 DB	 7
  001bf	07		 DB	 7
  001c0	04		 DB	 4
  001c1	07		 DB	 7
  001c2	07		 DB	 7
  001c3	07		 DB	 7
  001c4	07		 DB	 7
  001c5	07		 DB	 7
  001c6	07		 DB	 7
  001c7	07		 DB	 7
  001c8	07		 DB	 7
  001c9	05		 DB	 5
  001ca	06		 DB	 6
?get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_comanche_previous_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_next_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_comanche_next_available_weapon_sub_type, COMDAT

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 557  : 	entity_sub_types
; 558  : 		weapon_sub_type,
; 559  : 		next_weapon_sub_type;
; 560  : 
; 561  : 	int
; 562  : 		attempts;
; 563  : 
; 564  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_comanc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_comanc:

; 565  : 
; 566  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN19@get_comanc
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN20@get_comanc
$LN19@get_comanc:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN20@get_comanc:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN21@get_comanc
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN22@get_comanc
$LN21@get_comanc:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN22@get_comanc:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 567  : 
; 568  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_comanc
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_comanc
$LN8@get_comanc:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_comanc:

; 569  : 
; 570  : 	next_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _next_weapon_sub_type$[ebp], 0

; 571  : 
; 572  : 	attempts = NUM_COMANCHE_WEAPON_TYPES;

  000d5	c7 45 f4 06 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 6
$LN2@get_comanc:

; 573  : 
; 574  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 8a 00 00
	00		 je	 $LN3@get_comanc

; 575  : 	{
; 576  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 2e	 cmp	 DWORD PTR tv128[ebp], 46 ; 0000002eH
  000f0	77 50		 ja	 SHORT $LN16@get_comanc
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN23@get_comanc[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN24@get_comanc[edx*4]
$LN9@get_comanc:

; 577  : 		{
; 578  : 			////////////////////////////////////////
; 579  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 580  : 			////////////////////////////////////////
; 581  : 			{
; 582  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND;

  00103	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 3

; 583  : 
; 584  : 				break;

  0010a	eb 3d		 jmp	 SHORT $LN4@get_comanc
$LN10@get_comanc:

; 585  : 			}
; 586  : 			////////////////////////////////////////
; 587  : 			case ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND:
; 588  : 			////////////////////////////////////////
; 589  : 			{
; 590  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER;

  0010c	c7 45 fc 24 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 36 ; 00000024H

; 591  : 
; 592  : 				break;

  00113	eb 34		 jmp	 SHORT $LN4@get_comanc
$LN11@get_comanc:

; 593  : 			}
; 594  : 			////////////////////////////////////////
; 595  : 			case ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER:
; 596  : 			////////////////////////////////////////
; 597  : 			{
; 598  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE;

  00115	c7 45 fc 2d 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 45 ; 0000002dH

; 599  : 
; 600  : 				break;

  0011c	eb 2b		 jmp	 SHORT $LN4@get_comanc
$LN12@get_comanc:

; 601  : 			}
; 602  : 			////////////////////////////////////////
; 603  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE:
; 604  : 			////////////////////////////////////////
; 605  : 			{
; 606  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II;

  0011e	c7 45 fc 2e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 46 ; 0000002eH

; 607  : 
; 608  : 				break;

  00125	eb 22		 jmp	 SHORT $LN4@get_comanc
$LN13@get_comanc:

; 609  : 			}
; 610  : 			////////////////////////////////////////
; 611  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II:
; 612  : 			////////////////////////////////////////
; 613  : 			{
; 614  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255;

  00127	c7 45 fc 1e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 30 ; 0000001eH

; 615  : 
; 616  : 				break;

  0012e	eb 19		 jmp	 SHORT $LN4@get_comanc
$LN14@get_comanc:

; 617  : 			}
; 618  : 			////////////////////////////////////////
; 619  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 620  : 			////////////////////////////////////////
; 621  : 			{
; 622  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261;

  00130	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 31 ; 0000001fH

; 623  : 
; 624  : 				break;

  00137	eb 10		 jmp	 SHORT $LN4@get_comanc
$LN15@get_comanc:

; 625  : 			}
; 626  : 			////////////////////////////////////////
; 627  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 628  : 			////////////////////////////////////////
; 629  : 			{
; 630  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND;

  00139	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 3

; 631  : 
; 632  : 				break;

  00140	eb 07		 jmp	 SHORT $LN4@get_comanc
$LN16@get_comanc:

; 633  : 			}
; 634  : 			////////////////////////////////////////
; 635  : 			default:
; 636  : 			////////////////////////////////////////
; 637  : 			{
; 638  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M197_20MM_ROUND;

  00142	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 3
$LN4@get_comanc:

; 639  : 
; 640  : 				break;
; 641  : 			}
; 642  : 		}
; 643  : 
; 644  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00149	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00156	85 c0		 test	 eax, eax
  00158	74 08		 je	 SHORT $LN17@get_comanc

; 645  : 		{
; 646  : 			next_weapon_sub_type = weapon_sub_type;

  0015a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0015d	89 45 f8	 mov	 DWORD PTR _next_weapon_sub_type$[ebp], eax

; 647  : 
; 648  : 			break;

  00160	eb 0e		 jmp	 SHORT $LN3@get_comanc
$LN17@get_comanc:

; 649  : 		}
; 650  : 
; 651  : 		attempts--;

  00162	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  00165	83 e8 01	 sub	 eax, 1
  00168	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 652  : 	}

  0016b	e9 6c ff ff ff	 jmp	 $LN2@get_comanc
$LN3@get_comanc:

; 653  : 
; 654  : 	return (next_weapon_sub_type);

  00170	8b 45 f8	 mov	 eax, DWORD PTR _next_weapon_sub_type$[ebp]

; 655  : }

  00173	5f		 pop	 edi
  00174	5e		 pop	 esi
  00175	5b		 pop	 ebx
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c2 04 00	 ret	 4
$LN24@get_comanc:
  0017c	00 00 00 00	 DD	 $LN9@get_comanc
  00180	00 00 00 00	 DD	 $LN10@get_comanc
  00184	00 00 00 00	 DD	 $LN14@get_comanc
  00188	00 00 00 00	 DD	 $LN15@get_comanc
  0018c	00 00 00 00	 DD	 $LN11@get_comanc
  00190	00 00 00 00	 DD	 $LN12@get_comanc
  00194	00 00 00 00	 DD	 $LN13@get_comanc
  00198	00 00 00 00	 DD	 $LN16@get_comanc
$LN23@get_comanc:
  0019c	00		 DB	 0
  0019d	07		 DB	 7
  0019e	07		 DB	 7
  0019f	01		 DB	 1
  001a0	07		 DB	 7
  001a1	07		 DB	 7
  001a2	07		 DB	 7
  001a3	07		 DB	 7
  001a4	07		 DB	 7
  001a5	07		 DB	 7
  001a6	07		 DB	 7
  001a7	07		 DB	 7
  001a8	07		 DB	 7
  001a9	07		 DB	 7
  001aa	07		 DB	 7
  001ab	07		 DB	 7
  001ac	07		 DB	 7
  001ad	07		 DB	 7
  001ae	07		 DB	 7
  001af	07		 DB	 7
  001b0	07		 DB	 7
  001b1	07		 DB	 7
  001b2	07		 DB	 7
  001b3	07		 DB	 7
  001b4	07		 DB	 7
  001b5	07		 DB	 7
  001b6	07		 DB	 7
  001b7	07		 DB	 7
  001b8	07		 DB	 7
  001b9	07		 DB	 7
  001ba	02		 DB	 2
  001bb	03		 DB	 3
  001bc	07		 DB	 7
  001bd	07		 DB	 7
  001be	07		 DB	 7
  001bf	07		 DB	 7
  001c0	04		 DB	 4
  001c1	07		 DB	 7
  001c2	07		 DB	 7
  001c3	07		 DB	 7
  001c4	07		 DB	 7
  001c5	07		 DB	 7
  001c6	07		 DB	 7
  001c7	07		 DB	 7
  001c8	07		 DB	 7
  001c9	05		 DB	 5
  001ca	06		 DB	 6
?get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_comanche_next_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_previous_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_havoc_previous_available_weapon_sub_type, COMDAT

; 430  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 431  : 	entity_sub_types
; 432  : 		weapon_sub_type,
; 433  : 		previous_weapon_sub_type;
; 434  : 
; 435  : 	int
; 436  : 		attempts;
; 437  : 
; 438  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_havoc_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_havoc_:

; 439  : 
; 440  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN20@get_havoc_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN21@get_havoc_
$LN20@get_havoc_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN21@get_havoc_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN22@get_havoc_
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN23@get_havoc_
$LN22@get_havoc_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN23@get_havoc_:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 441  : 
; 442  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_havoc_
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_havoc_
$LN8@get_havoc_:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_havoc_:

; 443  : 
; 444  : 	previous_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], 0

; 445  : 
; 446  : 	attempts = NUM_HAVOC_WEAPON_TYPES;

  000d5	c7 45 f4 07 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 7
$LN2@get_havoc_:

; 447  : 
; 448  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 93 00 00
	00		 je	 $LN3@get_havoc_

; 449  : 	{
; 450  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 31	 cmp	 DWORD PTR tv128[ebp], 49 ; 00000031H
  000f0	77 59		 ja	 SHORT $LN17@get_havoc_
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN24@get_havoc_[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN25@get_havoc_[edx*4]
$LN9@get_havoc_:

; 451  : 		{
; 452  : 			////////////////////////////////////////
; 453  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 454  : 			////////////////////////////////////////
; 455  : 			{
; 456  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00103	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 457  : 
; 458  : 				break;

  0010a	eb 46		 jmp	 SHORT $LN4@get_havoc_
$LN10@get_havoc_:

; 459  : 			}
; 460  : 			////////////////////////////////////////
; 461  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND:
; 462  : 			////////////////////////////////////////
; 463  : 			{
; 464  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND;

  0010c	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 15 ; 0000000fH

; 465  : 
; 466  : 				break;

  00113	eb 3d		 jmp	 SHORT $LN4@get_havoc_
$LN11@get_havoc_:

; 467  : 			}
; 468  : 			////////////////////////////////////////
; 469  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND:
; 470  : 			////////////////////////////////////////
; 471  : 			{
; 472  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00115	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 473  : 
; 474  : 				break;

  0011c	eb 34		 jmp	 SHORT $LN4@get_havoc_
$LN12@get_havoc_:

; 475  : 			}
; 476  : 			////////////////////////////////////////
; 477  : 			case ENTITY_SUB_TYPE_WEAPON_IGLA_V:
; 478  : 			////////////////////////////////////////
; 479  : 			{
; 480  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND;

  0011e	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 20 ; 00000014H

; 481  : 
; 482  : 				break;

  00125	eb 2b		 jmp	 SHORT $LN4@get_havoc_
$LN13@get_havoc_:

; 483  : 			}
; 484  : 			////////////////////////////////////////
; 485  : 			case ENTITY_SUB_TYPE_WEAPON_ATAKA:
; 486  : 			////////////////////////////////////////
; 487  : 			{
; 488  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_IGLA_V;

  00127	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 39 ; 00000027H

; 489  : 
; 490  : 				break;

  0012e	eb 22		 jmp	 SHORT $LN4@get_havoc_
$LN14@get_havoc_:

; 491  : 			}
; 492  : 			////////////////////////////////////////
; 493  : 			case ENTITY_SUB_TYPE_WEAPON_S8:
; 494  : 			////////////////////////////////////////
; 495  : 			{
; 496  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_ATAKA;

  00130	c7 45 fc 31 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 49 ; 00000031H

; 497  : 
; 498  : 				break;

  00137	eb 19		 jmp	 SHORT $LN4@get_havoc_
$LN15@get_havoc_:

; 499  : 			}
; 500  : 			////////////////////////////////////////
; 501  : 			case ENTITY_SUB_TYPE_WEAPON_S13:
; 502  : 			////////////////////////////////////////
; 503  : 			{
; 504  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S8;

  00139	c7 45 fc 22 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 34 ; 00000022H

; 505  : 
; 506  : 				break;

  00140	eb 10		 jmp	 SHORT $LN4@get_havoc_
$LN16@get_havoc_:

; 507  : 			}
; 508  : 			////////////////////////////////////////
; 509  : 			case ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND:
; 510  : 			////////////////////////////////////////
; 511  : 			{
; 512  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S13;

  00142	c7 45 fc 23 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 35 ; 00000023H

; 513  : 
; 514  : 				break;

  00149	eb 07		 jmp	 SHORT $LN4@get_havoc_
$LN17@get_havoc_:

; 515  : 			}
; 516  : 			////////////////////////////////////////
; 517  : 			default:
; 518  : 			////////////////////////////////////////
; 519  : 			{
; 520  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  0014b	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H
$LN4@get_havoc_:

; 521  : 
; 522  : 				break;
; 523  : 			}
; 524  : 		}
; 525  : 
; 526  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00152	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00155	50		 push	 eax
  00156	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00159	51		 push	 ecx
  0015a	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  0015f	85 c0		 test	 eax, eax
  00161	74 08		 je	 SHORT $LN18@get_havoc_

; 527  : 		{
; 528  : 			previous_weapon_sub_type = weapon_sub_type;

  00163	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00166	89 45 f8	 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], eax

; 529  : 
; 530  : 			break;

  00169	eb 0e		 jmp	 SHORT $LN3@get_havoc_
$LN18@get_havoc_:

; 531  : 		}
; 532  : 
; 533  : 		attempts--;

  0016b	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  0016e	83 e8 01	 sub	 eax, 1
  00171	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 534  : 	}

  00174	e9 63 ff ff ff	 jmp	 $LN2@get_havoc_
$LN3@get_havoc_:

; 535  : 
; 536  : 	return (previous_weapon_sub_type);

  00179	8b 45 f8	 mov	 eax, DWORD PTR _previous_weapon_sub_type$[ebp]

; 537  : }

  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 04 00	 ret	 4
  00185	0f 1f 00	 npad	 3
$LN25@get_havoc_:
  00188	00 00 00 00	 DD	 $LN9@get_havoc_
  0018c	00 00 00 00	 DD	 $LN16@get_havoc_
  00190	00 00 00 00	 DD	 $LN10@get_havoc_
  00194	00 00 00 00	 DD	 $LN11@get_havoc_
  00198	00 00 00 00	 DD	 $LN14@get_havoc_
  0019c	00 00 00 00	 DD	 $LN15@get_havoc_
  001a0	00 00 00 00	 DD	 $LN12@get_havoc_
  001a4	00 00 00 00	 DD	 $LN13@get_havoc_
  001a8	00 00 00 00	 DD	 $LN17@get_havoc_
$LN24@get_havoc_:
  001ac	00		 DB	 0
  001ad	08		 DB	 8
  001ae	08		 DB	 8
  001af	08		 DB	 8
  001b0	08		 DB	 8
  001b1	08		 DB	 8
  001b2	08		 DB	 8
  001b3	08		 DB	 8
  001b4	08		 DB	 8
  001b5	08		 DB	 8
  001b6	08		 DB	 8
  001b7	08		 DB	 8
  001b8	08		 DB	 8
  001b9	08		 DB	 8
  001ba	08		 DB	 8
  001bb	01		 DB	 1
  001bc	08		 DB	 8
  001bd	08		 DB	 8
  001be	08		 DB	 8
  001bf	02		 DB	 2
  001c0	03		 DB	 3
  001c1	08		 DB	 8
  001c2	08		 DB	 8
  001c3	08		 DB	 8
  001c4	08		 DB	 8
  001c5	08		 DB	 8
  001c6	08		 DB	 8
  001c7	08		 DB	 8
  001c8	08		 DB	 8
  001c9	08		 DB	 8
  001ca	08		 DB	 8
  001cb	08		 DB	 8
  001cc	08		 DB	 8
  001cd	08		 DB	 8
  001ce	04		 DB	 4
  001cf	05		 DB	 5
  001d0	08		 DB	 8
  001d1	08		 DB	 8
  001d2	08		 DB	 8
  001d3	06		 DB	 6
  001d4	08		 DB	 8
  001d5	08		 DB	 8
  001d6	08		 DB	 8
  001d7	08		 DB	 8
  001d8	08		 DB	 8
  001d9	08		 DB	 8
  001da	08		 DB	 8
  001db	08		 DB	 8
  001dc	08		 DB	 8
  001dd	07		 DB	 7
?get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_havoc_previous_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_next_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_havoc_next_available_weapon_sub_type, COMDAT

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 317  : 	entity_sub_types
; 318  : 		weapon_sub_type,
; 319  : 		next_weapon_sub_type;
; 320  : 
; 321  : 	int
; 322  : 		attempts;
; 323  : 
; 324  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_havoc_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_havoc_:

; 325  : 
; 326  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN20@get_havoc_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN21@get_havoc_
$LN20@get_havoc_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN21@get_havoc_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN22@get_havoc_
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN23@get_havoc_
$LN22@get_havoc_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN23@get_havoc_:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 327  : 
; 328  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_havoc_
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_havoc_
$LN8@get_havoc_:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_havoc_:

; 329  : 
; 330  : 	next_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _next_weapon_sub_type$[ebp], 0

; 331  : 
; 332  : 	attempts = NUM_HAVOC_WEAPON_TYPES;

  000d5	c7 45 f4 07 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 7
$LN2@get_havoc_:

; 333  : 
; 334  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 93 00 00
	00		 je	 $LN3@get_havoc_

; 335  : 	{
; 336  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 31	 cmp	 DWORD PTR tv128[ebp], 49 ; 00000031H
  000f0	77 59		 ja	 SHORT $LN17@get_havoc_
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN24@get_havoc_[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN25@get_havoc_[edx*4]
$LN9@get_havoc_:

; 337  : 		{
; 338  : 			////////////////////////////////////////
; 339  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 340  : 			////////////////////////////////////////
; 341  : 			{
; 342  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00103	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 343  : 
; 344  : 				break;

  0010a	eb 46		 jmp	 SHORT $LN4@get_havoc_
$LN10@get_havoc_:

; 345  : 			}
; 346  : 			////////////////////////////////////////
; 347  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND:
; 348  : 			////////////////////////////////////////
; 349  : 			{
; 350  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND;

  0010c	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 20 ; 00000014H

; 351  : 
; 352  : 				break;

  00113	eb 3d		 jmp	 SHORT $LN4@get_havoc_
$LN11@get_havoc_:

; 353  : 			}
; 354  : 			////////////////////////////////////////
; 355  : 			case ENTITY_SUB_TYPE_WEAPON_2A42_30MM_AP_ROUND:
; 356  : 			////////////////////////////////////////
; 357  : 			{
; 358  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_IGLA_V;

  00115	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 39 ; 00000027H

; 359  : 
; 360  : 				break;

  0011c	eb 34		 jmp	 SHORT $LN4@get_havoc_
$LN12@get_havoc_:

; 361  : 			}
; 362  : 			////////////////////////////////////////
; 363  : 			case ENTITY_SUB_TYPE_WEAPON_IGLA_V:
; 364  : 			////////////////////////////////////////
; 365  : 			{
; 366  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_ATAKA;

  0011e	c7 45 fc 31 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 49 ; 00000031H

; 367  : 
; 368  : 				break;

  00125	eb 2b		 jmp	 SHORT $LN4@get_havoc_
$LN13@get_havoc_:

; 369  : 			}
; 370  : 			////////////////////////////////////////
; 371  : 			case ENTITY_SUB_TYPE_WEAPON_ATAKA:
; 372  : 			////////////////////////////////////////
; 373  : 			{
; 374  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S8;

  00127	c7 45 fc 22 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 34 ; 00000022H

; 375  : 
; 376  : 				break;

  0012e	eb 22		 jmp	 SHORT $LN4@get_havoc_
$LN14@get_havoc_:

; 377  : 			}
; 378  : 			////////////////////////////////////////
; 379  : 			case ENTITY_SUB_TYPE_WEAPON_S8:
; 380  : 			////////////////////////////////////////
; 381  : 			{
; 382  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_S13;

  00130	c7 45 fc 23 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 35 ; 00000023H

; 383  : 
; 384  : 				break;

  00137	eb 19		 jmp	 SHORT $LN4@get_havoc_
$LN15@get_havoc_:

; 385  : 			}
; 386  : 			////////////////////////////////////////
; 387  : 			case ENTITY_SUB_TYPE_WEAPON_S13:
; 388  : 			////////////////////////////////////////
; 389  : 			{
; 390  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND;

  00139	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 15 ; 0000000fH

; 391  : 
; 392  : 				break;

  00140	eb 10		 jmp	 SHORT $LN4@get_havoc_
$LN16@get_havoc_:

; 393  : 			}
; 394  : 			////////////////////////////////////////
; 395  : 			case ENTITY_SUB_TYPE_WEAPON_GSH23L_23MM_ROUND:
; 396  : 			////////////////////////////////////////
; 397  : 			{
; 398  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  00142	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H

; 399  : 
; 400  : 				break;

  00149	eb 07		 jmp	 SHORT $LN4@get_havoc_
$LN17@get_havoc_:

; 401  : 			}
; 402  : 			////////////////////////////////////////
; 403  : 			default:
; 404  : 			////////////////////////////////////////
; 405  : 			{
; 406  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_2A42_30MM_HE_ROUND;

  0014b	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 19 ; 00000013H
$LN4@get_havoc_:

; 407  : 
; 408  : 				break;
; 409  : 			}
; 410  : 		}
; 411  : 
; 412  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00152	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00155	50		 push	 eax
  00156	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00159	51		 push	 ecx
  0015a	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  0015f	85 c0		 test	 eax, eax
  00161	74 08		 je	 SHORT $LN18@get_havoc_

; 413  : 		{
; 414  : 			next_weapon_sub_type = weapon_sub_type;

  00163	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00166	89 45 f8	 mov	 DWORD PTR _next_weapon_sub_type$[ebp], eax

; 415  : 
; 416  : 			break;

  00169	eb 0e		 jmp	 SHORT $LN3@get_havoc_
$LN18@get_havoc_:

; 417  : 		}
; 418  : 
; 419  : 		attempts--;

  0016b	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  0016e	83 e8 01	 sub	 eax, 1
  00171	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 420  : 	}

  00174	e9 63 ff ff ff	 jmp	 $LN2@get_havoc_
$LN3@get_havoc_:

; 421  : 
; 422  : 	return (next_weapon_sub_type);

  00179	8b 45 f8	 mov	 eax, DWORD PTR _next_weapon_sub_type$[ebp]

; 423  : }

  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 04 00	 ret	 4
  00185	0f 1f 00	 npad	 3
$LN25@get_havoc_:
  00188	00 00 00 00	 DD	 $LN9@get_havoc_
  0018c	00 00 00 00	 DD	 $LN16@get_havoc_
  00190	00 00 00 00	 DD	 $LN10@get_havoc_
  00194	00 00 00 00	 DD	 $LN11@get_havoc_
  00198	00 00 00 00	 DD	 $LN14@get_havoc_
  0019c	00 00 00 00	 DD	 $LN15@get_havoc_
  001a0	00 00 00 00	 DD	 $LN12@get_havoc_
  001a4	00 00 00 00	 DD	 $LN13@get_havoc_
  001a8	00 00 00 00	 DD	 $LN17@get_havoc_
$LN24@get_havoc_:
  001ac	00		 DB	 0
  001ad	08		 DB	 8
  001ae	08		 DB	 8
  001af	08		 DB	 8
  001b0	08		 DB	 8
  001b1	08		 DB	 8
  001b2	08		 DB	 8
  001b3	08		 DB	 8
  001b4	08		 DB	 8
  001b5	08		 DB	 8
  001b6	08		 DB	 8
  001b7	08		 DB	 8
  001b8	08		 DB	 8
  001b9	08		 DB	 8
  001ba	08		 DB	 8
  001bb	01		 DB	 1
  001bc	08		 DB	 8
  001bd	08		 DB	 8
  001be	08		 DB	 8
  001bf	02		 DB	 2
  001c0	03		 DB	 3
  001c1	08		 DB	 8
  001c2	08		 DB	 8
  001c3	08		 DB	 8
  001c4	08		 DB	 8
  001c5	08		 DB	 8
  001c6	08		 DB	 8
  001c7	08		 DB	 8
  001c8	08		 DB	 8
  001c9	08		 DB	 8
  001ca	08		 DB	 8
  001cb	08		 DB	 8
  001cc	08		 DB	 8
  001cd	08		 DB	 8
  001ce	04		 DB	 4
  001cf	05		 DB	 5
  001d0	08		 DB	 8
  001d1	08		 DB	 8
  001d2	08		 DB	 8
  001d3	06		 DB	 6
  001d4	08		 DB	 8
  001d5	08		 DB	 8
  001d6	08		 DB	 8
  001d7	08		 DB	 8
  001d8	08		 DB	 8
  001d9	08		 DB	 8
  001da	08		 DB	 8
  001db	08		 DB	 8
  001dc	08		 DB	 8
  001dd	07		 DB	 7
?get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_havoc_next_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_previous_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_apache_previous_available_weapon_sub_type, COMDAT

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 199  : 	entity_sub_types
; 200  : 		weapon_sub_type,
; 201  : 		previous_weapon_sub_type;
; 202  : 
; 203  : 	int
; 204  : 		attempts;
; 205  : 
; 206  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_apache
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_apache:

; 207  : 
; 208  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN19@get_apache
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN20@get_apache
$LN19@get_apache:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN20@get_apache:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN21@get_apache
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN22@get_apache
$LN21@get_apache:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN22@get_apache:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 209  : 
; 210  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_apache
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_apache
$LN8@get_apache:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_apache:

; 211  : 
; 212  : 	previous_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], 0

; 213  : 
; 214  : 	attempts = NUM_APACHE_WEAPON_TYPES;

  000d5	c7 45 f4 06 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 6
$LN2@get_apache:

; 215  : 
; 216  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 8a 00 00
	00		 je	 $LN3@get_apache

; 217  : 	{
; 218  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 2e	 cmp	 DWORD PTR tv128[ebp], 46 ; 0000002eH
  000f0	77 50		 ja	 SHORT $LN16@get_apache
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN23@get_apache[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN24@get_apache[edx*4]
$LN9@get_apache:

; 219  : 		{
; 220  : 			////////////////////////////////////////
; 221  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 222  : 			////////////////////////////////////////
; 223  : 			{
; 224  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND;

  00103	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 7

; 225  : 
; 226  : 				break;

  0010a	eb 3d		 jmp	 SHORT $LN4@get_apache
$LN10@get_apache:

; 227  : 			}
; 228  : 			////////////////////////////////////////
; 229  : 			case ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND:
; 230  : 			////////////////////////////////////////
; 231  : 			{
; 232  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261;

  0010c	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 31 ; 0000001fH

; 233  : 
; 234  : 				break;

  00113	eb 34		 jmp	 SHORT $LN4@get_apache
$LN11@get_apache:

; 235  : 			}
; 236  : 			////////////////////////////////////////
; 237  : 			case ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER:
; 238  : 			////////////////////////////////////////
; 239  : 			{
; 240  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND;

  00115	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 7

; 241  : 
; 242  : 				break;

  0011c	eb 2b		 jmp	 SHORT $LN4@get_apache
$LN12@get_apache:

; 243  : 			}
; 244  : 			////////////////////////////////////////
; 245  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE:
; 246  : 			////////////////////////////////////////
; 247  : 			{
; 248  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER;

  0011e	c7 45 fc 24 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 36 ; 00000024H

; 249  : 
; 250  : 				break;

  00125	eb 22		 jmp	 SHORT $LN4@get_apache
$LN13@get_apache:

; 251  : 			}
; 252  : 			////////////////////////////////////////
; 253  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II:
; 254  : 			////////////////////////////////////////
; 255  : 			{
; 256  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE;

  00127	c7 45 fc 2d 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 45 ; 0000002dH

; 257  : 
; 258  : 				break;

  0012e	eb 19		 jmp	 SHORT $LN4@get_apache
$LN14@get_apache:

; 259  : 			}
; 260  : 			////////////////////////////////////////
; 261  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 262  : 			////////////////////////////////////////
; 263  : 			{
; 264  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II;

  00130	c7 45 fc 2e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 46 ; 0000002eH

; 265  : 
; 266  : 				break;

  00137	eb 10		 jmp	 SHORT $LN4@get_apache
$LN15@get_apache:

; 267  : 			}
; 268  : 			////////////////////////////////////////
; 269  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 270  : 			////////////////////////////////////////
; 271  : 			{
; 272  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255;

  00139	c7 45 fc 1e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 30 ; 0000001eH

; 273  : 
; 274  : 				break;

  00140	eb 07		 jmp	 SHORT $LN4@get_apache
$LN16@get_apache:

; 275  : 			}
; 276  : 			////////////////////////////////////////
; 277  : 			default:
; 278  : 			////////////////////////////////////////
; 279  : 			{
; 280  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND;

  00142	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 7
$LN4@get_apache:

; 281  : 
; 282  : 				break;
; 283  : 			}
; 284  : 		}
; 285  : 
; 286  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00149	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00156	85 c0		 test	 eax, eax
  00158	74 08		 je	 SHORT $LN17@get_apache

; 287  : 		{
; 288  : 			previous_weapon_sub_type = weapon_sub_type;

  0015a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0015d	89 45 f8	 mov	 DWORD PTR _previous_weapon_sub_type$[ebp], eax

; 289  : 
; 290  : 			break;

  00160	eb 0e		 jmp	 SHORT $LN3@get_apache
$LN17@get_apache:

; 291  : 		}
; 292  : 
; 293  : 		attempts--;

  00162	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  00165	83 e8 01	 sub	 eax, 1
  00168	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 294  : 	}

  0016b	e9 6c ff ff ff	 jmp	 $LN2@get_apache
$LN3@get_apache:

; 295  : 
; 296  : 	return (previous_weapon_sub_type);

  00170	8b 45 f8	 mov	 eax, DWORD PTR _previous_weapon_sub_type$[ebp]

; 297  : }

  00173	5f		 pop	 edi
  00174	5e		 pop	 esi
  00175	5b		 pop	 ebx
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c2 04 00	 ret	 4
$LN24@get_apache:
  0017c	00 00 00 00	 DD	 $LN9@get_apache
  00180	00 00 00 00	 DD	 $LN10@get_apache
  00184	00 00 00 00	 DD	 $LN14@get_apache
  00188	00 00 00 00	 DD	 $LN15@get_apache
  0018c	00 00 00 00	 DD	 $LN11@get_apache
  00190	00 00 00 00	 DD	 $LN12@get_apache
  00194	00 00 00 00	 DD	 $LN13@get_apache
  00198	00 00 00 00	 DD	 $LN16@get_apache
$LN23@get_apache:
  0019c	00		 DB	 0
  0019d	07		 DB	 7
  0019e	07		 DB	 7
  0019f	07		 DB	 7
  001a0	07		 DB	 7
  001a1	07		 DB	 7
  001a2	07		 DB	 7
  001a3	01		 DB	 1
  001a4	07		 DB	 7
  001a5	07		 DB	 7
  001a6	07		 DB	 7
  001a7	07		 DB	 7
  001a8	07		 DB	 7
  001a9	07		 DB	 7
  001aa	07		 DB	 7
  001ab	07		 DB	 7
  001ac	07		 DB	 7
  001ad	07		 DB	 7
  001ae	07		 DB	 7
  001af	07		 DB	 7
  001b0	07		 DB	 7
  001b1	07		 DB	 7
  001b2	07		 DB	 7
  001b3	07		 DB	 7
  001b4	07		 DB	 7
  001b5	07		 DB	 7
  001b6	07		 DB	 7
  001b7	07		 DB	 7
  001b8	07		 DB	 7
  001b9	07		 DB	 7
  001ba	02		 DB	 2
  001bb	03		 DB	 3
  001bc	07		 DB	 7
  001bd	07		 DB	 7
  001be	07		 DB	 7
  001bf	07		 DB	 7
  001c0	04		 DB	 4
  001c1	07		 DB	 7
  001c2	07		 DB	 7
  001c3	07		 DB	 7
  001c4	07		 DB	 7
  001c5	07		 DB	 7
  001c6	07		 DB	 7
  001c7	07		 DB	 7
  001c8	07		 DB	 7
  001c9	05		 DB	 5
  001ca	06		 DB	 6
?get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_apache_previous_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv128 = -80						; size = 4
tv75 = -80						; size = 4
_attempts$ = -12					; size = 4
_next_weapon_sub_type$ = -8				; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_apache_next_available_weapon_sub_type, COMDAT

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 93   : 	entity_sub_types
; 94   : 		weapon_sub_type,
; 95   : 		next_weapon_sub_type;
; 96   : 
; 97   : 	int
; 98   : 		attempts;
; 99   : 
; 100  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@get_apache
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_apache:

; 101  : 
; 102  : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN19@get_apache
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN20@get_apache
$LN19@get_apache:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN20@get_apache:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN21@get_apache
  00061	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv83[ebp], 184 ; 000000b8H
  00068	eb 21		 jmp	 SHORT $LN22@get_apache
$LN21@get_apache:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 0a	 add	 edx, 10			; 0000000aH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN22@get_apache:
  0008b	68 b8 00 00 00	 push	 184			; 000000b8H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 103  : 
; 104  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  000aa	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ae	7c 06		 jl	 SHORT $LN8@get_apache
  000b0	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  000b4	7c 18		 jl	 SHORT $LN7@get_apache
$LN8@get_apache:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  000bb	83 c0 0c	 add	 eax, 12			; 0000000cH
  000be	50		 push	 eax
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_apache:

; 105  : 
; 106  : 	next_weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _next_weapon_sub_type$[ebp], 0

; 107  : 
; 108  : 	attempts = NUM_APACHE_WEAPON_TYPES;

  000d5	c7 45 f4 06 00
	00 00		 mov	 DWORD PTR _attempts$[ebp], 6
$LN2@get_apache:

; 109  : 
; 110  : 	while (attempts)

  000dc	83 7d f4 00	 cmp	 DWORD PTR _attempts$[ebp], 0
  000e0	0f 84 8a 00 00
	00		 je	 $LN3@get_apache

; 111  : 	{
; 112  : 		switch (weapon_sub_type)

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000e9	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000ec	83 7d b0 2e	 cmp	 DWORD PTR tv128[ebp], 46 ; 0000002eH
  000f0	77 50		 ja	 SHORT $LN16@get_apache
  000f2	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000f5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN23@get_apache[ecx]
  000fc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN24@get_apache[edx*4]
$LN9@get_apache:

; 113  : 		{
; 114  : 			////////////////////////////////////////
; 115  : 			case ENTITY_SUB_TYPE_WEAPON_NO_WEAPON:
; 116  : 			////////////////////////////////////////
; 117  : 			{
; 118  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND;

  00103	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 7

; 119  : 
; 120  : 				break;

  0010a	eb 3d		 jmp	 SHORT $LN4@get_apache
$LN10@get_apache:

; 121  : 			}
; 122  : 			////////////////////////////////////////
; 123  : 			case ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND:
; 124  : 			////////////////////////////////////////
; 125  : 			{
; 126  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER;

  0010c	c7 45 fc 24 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 36 ; 00000024H

; 127  : 
; 128  : 				break;

  00113	eb 34		 jmp	 SHORT $LN4@get_apache
$LN11@get_apache:

; 129  : 			}
; 130  : 			////////////////////////////////////////
; 131  : 			case ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER:
; 132  : 			////////////////////////////////////////
; 133  : 			{
; 134  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE;

  00115	c7 45 fc 2d 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 45 ; 0000002dH

; 135  : 
; 136  : 				break;

  0011c	eb 2b		 jmp	 SHORT $LN4@get_apache
$LN12@get_apache:

; 137  : 			}
; 138  : 			////////////////////////////////////////
; 139  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE:
; 140  : 			////////////////////////////////////////
; 141  : 			{
; 142  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II;

  0011e	c7 45 fc 2e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 46 ; 0000002eH

; 143  : 
; 144  : 				break;

  00125	eb 22		 jmp	 SHORT $LN4@get_apache
$LN13@get_apache:

; 145  : 			}
; 146  : 			////////////////////////////////////////
; 147  : 			case ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II:
; 148  : 			////////////////////////////////////////
; 149  : 			{
; 150  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255;

  00127	c7 45 fc 1e 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 30 ; 0000001eH

; 151  : 
; 152  : 				break;

  0012e	eb 19		 jmp	 SHORT $LN4@get_apache
$LN14@get_apache:

; 153  : 			}
; 154  : 			////////////////////////////////////////
; 155  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 156  : 			////////////////////////////////////////
; 157  : 			{
; 158  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261;

  00130	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 31 ; 0000001fH

; 159  : 
; 160  : 				break;

  00137	eb 10		 jmp	 SHORT $LN4@get_apache
$LN15@get_apache:

; 161  : 			}
; 162  : 			////////////////////////////////////////
; 163  : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 164  : 			////////////////////////////////////////
; 165  : 			{
; 166  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND;

  00139	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 7

; 167  : 
; 168  : 				break;

  00140	eb 07		 jmp	 SHORT $LN4@get_apache
$LN16@get_apache:

; 169  : 			}
; 170  : 			////////////////////////////////////////
; 171  : 			default:
; 172  : 			////////////////////////////////////////
; 173  : 			{
; 174  : 				weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND;

  00142	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 7
$LN4@get_apache:

; 175  : 
; 176  : 				break;
; 177  : 			}
; 178  : 		}
; 179  : 
; 180  : 		if (get_local_entity_weapon_available (en, weapon_sub_type))

  00149	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00156	85 c0		 test	 eax, eax
  00158	74 08		 je	 SHORT $LN17@get_apache

; 181  : 		{
; 182  : 			next_weapon_sub_type = weapon_sub_type;

  0015a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0015d	89 45 f8	 mov	 DWORD PTR _next_weapon_sub_type$[ebp], eax

; 183  : 
; 184  : 			break;

  00160	eb 0e		 jmp	 SHORT $LN3@get_apache
$LN17@get_apache:

; 185  : 		}
; 186  : 
; 187  : 		attempts--;

  00162	8b 45 f4	 mov	 eax, DWORD PTR _attempts$[ebp]
  00165	83 e8 01	 sub	 eax, 1
  00168	89 45 f4	 mov	 DWORD PTR _attempts$[ebp], eax

; 188  : 	}

  0016b	e9 6c ff ff ff	 jmp	 $LN2@get_apache
$LN3@get_apache:

; 189  : 
; 190  : 	return (next_weapon_sub_type);

  00170	8b 45 f8	 mov	 eax, DWORD PTR _next_weapon_sub_type$[ebp]

; 191  : }

  00173	5f		 pop	 edi
  00174	5e		 pop	 esi
  00175	5b		 pop	 ebx
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c2 04 00	 ret	 4
$LN24@get_apache:
  0017c	00 00 00 00	 DD	 $LN9@get_apache
  00180	00 00 00 00	 DD	 $LN10@get_apache
  00184	00 00 00 00	 DD	 $LN14@get_apache
  00188	00 00 00 00	 DD	 $LN15@get_apache
  0018c	00 00 00 00	 DD	 $LN11@get_apache
  00190	00 00 00 00	 DD	 $LN12@get_apache
  00194	00 00 00 00	 DD	 $LN13@get_apache
  00198	00 00 00 00	 DD	 $LN16@get_apache
$LN23@get_apache:
  0019c	00		 DB	 0
  0019d	07		 DB	 7
  0019e	07		 DB	 7
  0019f	07		 DB	 7
  001a0	07		 DB	 7
  001a1	07		 DB	 7
  001a2	07		 DB	 7
  001a3	01		 DB	 1
  001a4	07		 DB	 7
  001a5	07		 DB	 7
  001a6	07		 DB	 7
  001a7	07		 DB	 7
  001a8	07		 DB	 7
  001a9	07		 DB	 7
  001aa	07		 DB	 7
  001ab	07		 DB	 7
  001ac	07		 DB	 7
  001ad	07		 DB	 7
  001ae	07		 DB	 7
  001af	07		 DB	 7
  001b0	07		 DB	 7
  001b1	07		 DB	 7
  001b2	07		 DB	 7
  001b3	07		 DB	 7
  001b4	07		 DB	 7
  001b5	07		 DB	 7
  001b6	07		 DB	 7
  001b7	07		 DB	 7
  001b8	07		 DB	 7
  001b9	07		 DB	 7
  001ba	02		 DB	 2
  001bb	03		 DB	 3
  001bc	07		 DB	 7
  001bd	07		 DB	 7
  001be	07		 DB	 7
  001bf	07		 DB	 7
  001c0	04		 DB	 4
  001c1	07		 DB	 7
  001c2	07		 DB	 7
  001c3	07		 DB	 7
  001c4	07		 DB	 7
  001c5	07		 DB	 7
  001c6	07		 DB	 7
  001c7	07		 DB	 7
  001c8	07		 DB	 7
  001c9	05		 DB	 5
  001ca	06		 DB	 6
?get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_apache_next_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv138 = -84						; size = 4
tv162 = -80						; size = 4
tv132 = -80						; size = 4
tv81 = -80						; size = 4
tv154 = -76						; size = 4
tv93 = -76						; size = 4
tv74 = -76						; size = 4
_i$ = -8						; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_previous_available_weapon_sub_type, COMDAT

; 1137 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1138 : 	entity_sub_types
; 1139 : 		weapon_sub_type;
; 1140 : 
; 1141 : 	int
; 1142 : 		i;
; 1143 : 
; 1144 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@get_previo
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_previo:

; 1145 : 
; 1146 : 	////////////////////////////////////////
; 1147 : 	//
; 1148 : 	// customised weapon selection for featured helicopters
; 1149 : 	//
; 1150 : 	////////////////////////////////////////
; 1151 : 
; 1152 : 	if (get_local_entity_int_value (en, INT_TYPE_IDENTIFY_HELICOPTER))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN19@get_previo
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b4	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN20@get_previo
$LN19@get_previo:
  00037	68 80 04 00 00	 push	 1152			; 00000480H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN20@get_previo:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN21@get_previo
  0005d	c7 45 b0 5c 00
	00 00		 mov	 DWORD PTR tv81[ebp], 92	; 0000005cH
  00064	eb 1d		 jmp	 SHORT $LN22@get_previo
$LN21@get_previo:
  00066	68 80 04 00 00	 push	 1152			; 00000480H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN22@get_previo:
  00083	6a 5c		 push	 92			; 0000005cH
  00085	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00088	52		 push	 edx
  00089	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b0	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	85 c0		 test	 eax, eax
  0009e	0f 84 de 00 00
	00		 je	 $LN8@get_previo

; 1153 : 	{
; 1154 : 		switch (get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE))

  000a4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a8	74 0a		 je	 SHORT $LN23@get_previo
  000aa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	89 4d b4	 mov	 DWORD PTR tv93[ebp], ecx
  000b2	eb 1d		 jmp	 SHORT $LN24@get_previo
$LN23@get_previo:
  000b4	68 82 04 00 00	 push	 1154			; 00000482H
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c4	52		 push	 edx
  000c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ca	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN24@get_previo:
  000d1	b8 01 00 00 00	 mov	 eax, 1
  000d6	85 c0		 test	 eax, eax
  000d8	74 09		 je	 SHORT $LN25@get_previo
  000da	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv132[ebp], 52 ; 00000034H
  000e1	eb 1d		 jmp	 SHORT $LN26@get_previo
$LN25@get_previo:
  000e3	68 82 04 00 00	 push	 1154			; 00000482H
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f9	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN26@get_previo:
  00100	6a 34		 push	 52			; 00000034H
  00102	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00105	52		 push	 edx
  00106	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 1116
  0010d	8b 4d b0	 mov	 ecx, DWORD PTR tv132[ebp]
  00110	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00117	ff d2		 call	 edx
  00119	89 45 ac	 mov	 DWORD PTR tv138[ebp], eax
  0011c	83 7d ac 03	 cmp	 DWORD PTR tv138[ebp], 3
  00120	77 60		 ja	 SHORT $LN8@get_previo
  00122	8b 45 ac	 mov	 eax, DWORD PTR tv138[ebp]
  00125	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN31@get_previo[eax*4]
$LN9@get_previo:

; 1155 : 		{
; 1156 : 			////////////////////////////////////////
; 1157 : 			case ENTITY_SUB_TYPE_AIRCRAFT_AH64D_APACHE_LONGBOW:
; 1158 : 			////////////////////////////////////////
; 1159 : 			{
; 1160 : 				weapon_sub_type = get_apache_previous_available_weapon_sub_type (en);

  0012c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?get_apache_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_apache_previous_available_weapon_sub_type
  00135	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1161 : 
; 1162 : 				return (weapon_sub_type);

  00138	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0013b	e9 43 01 00 00	 jmp	 $LN1@get_previo

; 1163 : 
; 1164 : 				break;

  00140	eb 40		 jmp	 SHORT $LN8@get_previo
$LN10@get_previo:

; 1165 : 			}
; 1166 : 			////////////////////////////////////////
; 1167 : 			case ENTITY_SUB_TYPE_AIRCRAFT_MI28N_HAVOC_B:
; 1168 : 			////////////////////////////////////////
; 1169 : 			{
; 1170 : 				weapon_sub_type = get_havoc_previous_available_weapon_sub_type (en);

  00142	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 ?get_havoc_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_havoc_previous_available_weapon_sub_type
  0014b	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1171 : 
; 1172 : 				return (weapon_sub_type);

  0014e	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00151	e9 2d 01 00 00	 jmp	 $LN1@get_previo

; 1173 : 
; 1174 : 				break;

  00156	eb 2a		 jmp	 SHORT $LN8@get_previo
$LN11@get_previo:

; 1175 : 			}
; 1176 : 			////////////////////////////////////////
; 1177 : 			case ENTITY_SUB_TYPE_AIRCRAFT_RAH66_COMANCHE:
; 1178 : 			////////////////////////////////////////
; 1179 : 			{
; 1180 : 				weapon_sub_type = get_comanche_previous_available_weapon_sub_type (en);

  00158	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?get_comanche_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_comanche_previous_available_weapon_sub_type
  00161	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1181 : 
; 1182 : 				return (weapon_sub_type);

  00164	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00167	e9 17 01 00 00	 jmp	 $LN1@get_previo

; 1183 : 
; 1184 : 				break;

  0016c	eb 14		 jmp	 SHORT $LN8@get_previo
$LN12@get_previo:

; 1185 : 			}
; 1186 : 			////////////////////////////////////////
; 1187 : 			case ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B:
; 1188 : 			////////////////////////////////////////
; 1189 : 			{
; 1190 : 				weapon_sub_type = get_hokum_previous_available_weapon_sub_type (en);

  0016e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 ?get_hokum_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_hokum_previous_available_weapon_sub_type
  00177	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1191 : 
; 1192 : 				return (weapon_sub_type);

  0017a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0017d	e9 01 01 00 00	 jmp	 $LN1@get_previo
$LN8@get_previo:

; 1193 : 
; 1194 : 				break;
; 1195 : 			}
; 1196 : 		}
; 1197 : 	}
; 1198 : 
; 1199 : 	////////////////////////////////////////
; 1200 : 	//
; 1201 : 	// general weapon selection
; 1202 : 	//
; 1203 : 	////////////////////////////////////////
; 1204 : 
; 1205 : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00182	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00186	74 0a		 je	 SHORT $LN27@get_previo
  00188	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018d	89 4d b4	 mov	 DWORD PTR tv154[ebp], ecx
  00190	eb 21		 jmp	 SHORT $LN28@get_previo
$LN27@get_previo:
  00192	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00198	83 c2 44	 add	 edx, 68			; 00000044H
  0019b	52		 push	 edx
  0019c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ac	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN28@get_previo:
  001b3	b9 01 00 00 00	 mov	 ecx, 1
  001b8	85 c9		 test	 ecx, ecx
  001ba	74 09		 je	 SHORT $LN29@get_previo
  001bc	c7 45 b0 b8 00
	00 00		 mov	 DWORD PTR tv162[ebp], 184 ; 000000b8H
  001c3	eb 21		 jmp	 SHORT $LN30@get_previo
$LN29@get_previo:
  001c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  001cb	83 c2 44	 add	 edx, 68			; 00000044H
  001ce	52		 push	 edx
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001d9	50		 push	 eax
  001da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001df	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN30@get_previo:
  001e6	68 b8 00 00 00	 push	 184			; 000000b8H
  001eb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ee	51		 push	 ecx
  001ef	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv154[ebp], 1116
  001f6	8b 45 b0	 mov	 eax, DWORD PTR tv162[ebp]
  001f9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00200	ff d1		 call	 ecx
  00202	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1206 : 
; 1207 : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  00205	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  00209	7c 06		 jl	 SHORT $LN14@get_previo
  0020b	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  0020f	7c 18		 jl	 SHORT $LN13@get_previo
$LN14@get_previo:
  00211	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00216	83 c0 46	 add	 eax, 70			; 00000046H
  00219	50		 push	 eax
  0021a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  00224	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_previo:

; 1208 : 
; 1209 : 	for (i = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON + 1; i < NUM_ENTITY_SUB_TYPE_WEAPONS; i++)

  00229	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  00230	eb 09		 jmp	 SHORT $LN6@get_previo
$LN4@get_previo:
  00232	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00235	83 c0 01	 add	 eax, 1
  00238	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN6@get_previo:
  0023b	83 7d f8 4c	 cmp	 DWORD PTR _i$[ebp], 76	; 0000004cH
  0023f	7d 40		 jge	 SHORT $LN5@get_previo

; 1210 : 	{
; 1211 : 		weapon_sub_type--;

  00241	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00244	83 e8 01	 sub	 eax, 1
  00247	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1212 : 
; 1213 : 		if (weapon_sub_type <= ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0024a	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0024e	7f 07		 jg	 SHORT $LN15@get_previo

; 1214 : 		{
; 1215 : 			weapon_sub_type = NUM_ENTITY_SUB_TYPE_WEAPONS - 1;

  00250	c7 45 fc 4b 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 75 ; 0000004bH
$LN15@get_previo:

; 1216 : 		}
; 1217 : 
; 1218 : 		if (!(weapon_database[weapon_sub_type].weapon_class & (WEAPON_CLASS_DECOY | WEAPON_CLASS_CARGO | WEAPON_CLASS_DEBRIS)))

  00257	69 45 fc e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  0025e	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  00264	83 e1 70	 and	 ecx, 112		; 00000070H
  00267	75 16		 jne	 SHORT $LN16@get_previo

; 1219 : 		{
; 1220 : 			if (get_local_entity_weapon_available (en, weapon_sub_type))

  00269	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0026c	50		 push	 eax
  0026d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00270	51		 push	 ecx
  00271	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00276	85 c0		 test	 eax, eax
  00278	74 05		 je	 SHORT $LN16@get_previo

; 1221 : 			{
; 1222 : 				return (weapon_sub_type);

  0027a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0027d	eb 04		 jmp	 SHORT $LN1@get_previo
$LN16@get_previo:

; 1223 : 			}
; 1224 : 		}
; 1225 : 	}

  0027f	eb b1		 jmp	 SHORT $LN4@get_previo
$LN5@get_previo:

; 1226 : 
; 1227 : 	return (ENTITY_SUB_TYPE_WEAPON_NO_WEAPON);

  00281	33 c0		 xor	 eax, eax
$LN1@get_previo:

; 1228 : }

  00283	5f		 pop	 edi
  00284	5e		 pop	 esi
  00285	5b		 pop	 ebx
  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c2 04 00	 ret	 4
$LN31@get_previo:
  0028c	00 00 00 00	 DD	 $LN9@get_previo
  00290	00 00 00 00	 DD	 $LN10@get_previo
  00294	00 00 00 00	 DD	 $LN11@get_previo
  00298	00 00 00 00	 DD	 $LN12@get_previo
?get_previous_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_previous_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv138 = -84						; size = 4
tv162 = -80						; size = 4
tv132 = -80						; size = 4
tv81 = -80						; size = 4
tv154 = -76						; size = 4
tv93 = -76						; size = 4
tv74 = -76						; size = 4
_i$ = -8						; size = 4
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_next_available_weapon_sub_type, COMDAT

; 1039 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1040 : 	entity_sub_types
; 1041 : 		weapon_sub_type;
; 1042 : 
; 1043 : 	int
; 1044 : 		i;
; 1045 : 
; 1046 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@get_next_a
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_next_a:

; 1047 : 
; 1048 : 	////////////////////////////////////////
; 1049 : 	//
; 1050 : 	// customised weapon selection for featured helicopters
; 1051 : 	//
; 1052 : 	////////////////////////////////////////
; 1053 : 
; 1054 : 	if (get_local_entity_int_value (en, INT_TYPE_IDENTIFY_HELICOPTER))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN19@get_next_a
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b4	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN20@get_next_a
$LN19@get_next_a:
  00037	68 1e 04 00 00	 push	 1054			; 0000041eH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN20@get_next_a:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN21@get_next_a
  0005d	c7 45 b0 5c 00
	00 00		 mov	 DWORD PTR tv81[ebp], 92	; 0000005cH
  00064	eb 1d		 jmp	 SHORT $LN22@get_next_a
$LN21@get_next_a:
  00066	68 1e 04 00 00	 push	 1054			; 0000041eH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN22@get_next_a:
  00083	6a 5c		 push	 92			; 0000005cH
  00085	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00088	52		 push	 edx
  00089	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b0	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	85 c0		 test	 eax, eax
  0009e	0f 84 de 00 00
	00		 je	 $LN8@get_next_a

; 1055 : 	{
; 1056 : 		switch (get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE))

  000a4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a8	74 0a		 je	 SHORT $LN23@get_next_a
  000aa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	89 4d b4	 mov	 DWORD PTR tv93[ebp], ecx
  000b2	eb 1d		 jmp	 SHORT $LN24@get_next_a
$LN23@get_next_a:
  000b4	68 20 04 00 00	 push	 1056			; 00000420H
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c4	52		 push	 edx
  000c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ca	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN24@get_next_a:
  000d1	b8 01 00 00 00	 mov	 eax, 1
  000d6	85 c0		 test	 eax, eax
  000d8	74 09		 je	 SHORT $LN25@get_next_a
  000da	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv132[ebp], 52 ; 00000034H
  000e1	eb 1d		 jmp	 SHORT $LN26@get_next_a
$LN25@get_next_a:
  000e3	68 20 04 00 00	 push	 1056			; 00000420H
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f9	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN26@get_next_a:
  00100	6a 34		 push	 52			; 00000034H
  00102	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00105	52		 push	 edx
  00106	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 1116
  0010d	8b 4d b0	 mov	 ecx, DWORD PTR tv132[ebp]
  00110	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00117	ff d2		 call	 edx
  00119	89 45 ac	 mov	 DWORD PTR tv138[ebp], eax
  0011c	83 7d ac 03	 cmp	 DWORD PTR tv138[ebp], 3
  00120	77 60		 ja	 SHORT $LN8@get_next_a
  00122	8b 45 ac	 mov	 eax, DWORD PTR tv138[ebp]
  00125	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN31@get_next_a[eax*4]
$LN9@get_next_a:

; 1057 : 		{
; 1058 : 			////////////////////////////////////////
; 1059 : 			case ENTITY_SUB_TYPE_AIRCRAFT_AH64D_APACHE_LONGBOW:
; 1060 : 			////////////////////////////////////////
; 1061 : 			{
; 1062 : 				weapon_sub_type = get_apache_next_available_weapon_sub_type (en);

  0012c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?get_apache_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_apache_next_available_weapon_sub_type
  00135	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1063 : 
; 1064 : 				return (weapon_sub_type);

  00138	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0013b	e9 43 01 00 00	 jmp	 $LN1@get_next_a

; 1065 : 
; 1066 : 				break;

  00140	eb 40		 jmp	 SHORT $LN8@get_next_a
$LN10@get_next_a:

; 1067 : 			}
; 1068 : 			////////////////////////////////////////
; 1069 : 			case ENTITY_SUB_TYPE_AIRCRAFT_MI28N_HAVOC_B:
; 1070 : 			////////////////////////////////////////
; 1071 : 			{
; 1072 : 				weapon_sub_type = get_havoc_next_available_weapon_sub_type (en);

  00142	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 ?get_havoc_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_havoc_next_available_weapon_sub_type
  0014b	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1073 : 
; 1074 : 				return (weapon_sub_type);

  0014e	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00151	e9 2d 01 00 00	 jmp	 $LN1@get_next_a

; 1075 : 
; 1076 : 				break;

  00156	eb 2a		 jmp	 SHORT $LN8@get_next_a
$LN11@get_next_a:

; 1077 : 			}
; 1078 : 			////////////////////////////////////////
; 1079 : 			case ENTITY_SUB_TYPE_AIRCRAFT_RAH66_COMANCHE:
; 1080 : 			////////////////////////////////////////
; 1081 : 			{
; 1082 : 				weapon_sub_type = get_comanche_next_available_weapon_sub_type (en);

  00158	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?get_comanche_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_comanche_next_available_weapon_sub_type
  00161	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1083 : 
; 1084 : 				return (weapon_sub_type);

  00164	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00167	e9 17 01 00 00	 jmp	 $LN1@get_next_a

; 1085 : 
; 1086 : 				break;

  0016c	eb 14		 jmp	 SHORT $LN8@get_next_a
$LN12@get_next_a:

; 1087 : 			}
; 1088 : 			////////////////////////////////////////
; 1089 : 			case ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B:
; 1090 : 			////////////////////////////////////////
; 1091 : 			{
; 1092 : 				weapon_sub_type = get_hokum_next_available_weapon_sub_type (en);

  0016e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 ?get_hokum_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ; get_hokum_next_available_weapon_sub_type
  00177	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1093 : 
; 1094 : 				return (weapon_sub_type);

  0017a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0017d	e9 01 01 00 00	 jmp	 $LN1@get_next_a
$LN8@get_next_a:

; 1095 : 
; 1096 : 				break;
; 1097 : 			}
; 1098 : 		}
; 1099 : 	}
; 1100 : 
; 1101 : 	////////////////////////////////////////
; 1102 : 	//
; 1103 : 	// general weapon selection
; 1104 : 	//
; 1105 : 	////////////////////////////////////////
; 1106 : 
; 1107 : 	weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON);

  00182	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00186	74 0a		 je	 SHORT $LN27@get_next_a
  00188	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018d	89 4d b4	 mov	 DWORD PTR tv154[ebp], ecx
  00190	eb 21		 jmp	 SHORT $LN28@get_next_a
$LN27@get_next_a:
  00192	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00198	83 c2 44	 add	 edx, 68			; 00000044H
  0019b	52		 push	 edx
  0019c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ac	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN28@get_next_a:
  001b3	b9 01 00 00 00	 mov	 ecx, 1
  001b8	85 c9		 test	 ecx, ecx
  001ba	74 09		 je	 SHORT $LN29@get_next_a
  001bc	c7 45 b0 b8 00
	00 00		 mov	 DWORD PTR tv162[ebp], 184 ; 000000b8H
  001c3	eb 21		 jmp	 SHORT $LN30@get_next_a
$LN29@get_next_a:
  001c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  001cb	83 c2 44	 add	 edx, 68			; 00000044H
  001ce	52		 push	 edx
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001d9	50		 push	 eax
  001da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001df	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN30@get_next_a:
  001e6	68 b8 00 00 00	 push	 184			; 000000b8H
  001eb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ee	51		 push	 ecx
  001ef	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv154[ebp], 1116
  001f6	8b 45 b0	 mov	 eax, DWORD PTR tv162[ebp]
  001f9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00200	ff d1		 call	 ecx
  00202	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1108 : 
; 1109 : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  00205	83 7d fc 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  00209	7c 06		 jl	 SHORT $LN14@get_next_a
  0020b	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  0020f	7c 18		 jl	 SHORT $LN13@get_next_a
$LN14@get_next_a:
  00211	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00216	83 c0 46	 add	 eax, 70			; 00000046H
  00219	50		 push	 eax
  0021a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  00224	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_next_a:

; 1110 : 
; 1111 : 	for (i = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON + 1; i < NUM_ENTITY_SUB_TYPE_WEAPONS; i++)

  00229	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  00230	eb 09		 jmp	 SHORT $LN6@get_next_a
$LN4@get_next_a:
  00232	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00235	83 c0 01	 add	 eax, 1
  00238	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN6@get_next_a:
  0023b	83 7d f8 4c	 cmp	 DWORD PTR _i$[ebp], 76	; 0000004cH
  0023f	7d 40		 jge	 SHORT $LN5@get_next_a

; 1112 : 	{
; 1113 : 		weapon_sub_type++;

  00241	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00244	83 c0 01	 add	 eax, 1
  00247	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1114 : 
; 1115 : 		if (weapon_sub_type == NUM_ENTITY_SUB_TYPE_WEAPONS)

  0024a	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  0024e	75 07		 jne	 SHORT $LN15@get_next_a

; 1116 : 		{
; 1117 : 			weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON + 1;

  00250	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 1
$LN15@get_next_a:

; 1118 : 		}
; 1119 : 
; 1120 : 		if (!(weapon_database[weapon_sub_type].weapon_class & (WEAPON_CLASS_DECOY | WEAPON_CLASS_CARGO | WEAPON_CLASS_DEBRIS)))

  00257	69 45 fc e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  0025e	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  00264	83 e1 70	 and	 ecx, 112		; 00000070H
  00267	75 16		 jne	 SHORT $LN16@get_next_a

; 1121 : 		{
; 1122 : 			if (get_local_entity_weapon_available (en, weapon_sub_type))

  00269	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0026c	50		 push	 eax
  0026d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00270	51		 push	 ecx
  00271	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  00276	85 c0		 test	 eax, eax
  00278	74 05		 je	 SHORT $LN16@get_next_a

; 1123 : 			{
; 1124 : 				return (weapon_sub_type);

  0027a	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0027d	eb 04		 jmp	 SHORT $LN1@get_next_a
$LN16@get_next_a:

; 1125 : 			}
; 1126 : 		}
; 1127 : 	}

  0027f	eb b1		 jmp	 SHORT $LN4@get_next_a
$LN5@get_next_a:

; 1128 : 
; 1129 : 	return (ENTITY_SUB_TYPE_WEAPON_NO_WEAPON);

  00281	33 c0		 xor	 eax, eax
$LN1@get_next_a:

; 1130 : }

  00283	5f		 pop	 edi
  00284	5e		 pop	 esi
  00285	5b		 pop	 ebx
  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c2 04 00	 ret	 4
$LN31@get_next_a:
  0028c	00 00 00 00	 DD	 $LN9@get_next_a
  00290	00 00 00 00	 DD	 $LN10@get_next_a
  00294	00 00 00 00	 DD	 $LN11@get_next_a
  00298	00 00 00 00	 DD	 $LN12@get_next_a
?get_next_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_next_available_weapon_sub_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_selct.c
;	COMDAT ?get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
_weapon_sub_type$ = -4					; size = 4
_en$ = 8						; size = 4
?get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z PROC ; get_first_available_weapon_sub_type, COMDAT

; 1014 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1015 : 	entity_sub_types
; 1016 : 		weapon_sub_type;
; 1017 : 
; 1018 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@get_first_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@NKIKLFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_first_:

; 1019 : 
; 1020 : 	for (weapon_sub_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON + 1; weapon_sub_type < NUM_ENTITY_SUB_TYPE_WEAPONS; weapon_sub_type++)

  00027	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weapon_sub_type$[ebp], 1
  0002e	eb 09		 jmp	 SHORT $LN4@get_first_
$LN2@get_first_:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00033	83 c0 01	 add	 eax, 1
  00036	89 45 fc	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax
$LN4@get_first_:
  00039	83 7d fc 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  0003d	7d 2a		 jge	 SHORT $LN3@get_first_

; 1021 : 	{
; 1022 : 		if (!(weapon_database[weapon_sub_type].weapon_class & (WEAPON_CLASS_DECOY | WEAPON_CLASS_CARGO | WEAPON_CLASS_DEBRIS)))

  0003f	69 45 fc e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  00046	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  0004c	83 e1 70	 and	 ecx, 112		; 00000070H
  0004f	75 16		 jne	 SHORT $LN6@get_first_

; 1023 : 		{
; 1024 : 			if (get_local_entity_weapon_available (en, weapon_sub_type))

  00051	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  0005e	85 c0		 test	 eax, eax
  00060	74 05		 je	 SHORT $LN6@get_first_

; 1025 : 			{
; 1026 : 				return (weapon_sub_type);

  00062	8b 45 fc	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00065	eb 04		 jmp	 SHORT $LN1@get_first_
$LN6@get_first_:

; 1027 : 			}
; 1028 : 		}
; 1029 : 	}

  00067	eb c7		 jmp	 SHORT $LN2@get_first_
$LN3@get_first_:

; 1030 : 
; 1031 : 	return (ENTITY_SUB_TYPE_WEAPON_NO_WEAPON);

  00069	33 c0		 xor	 eax, eax
$LN1@get_first_:

; 1032 : }

  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
?get_first_available_weapon_sub_type@@YGHPAUENTITY@@@Z ENDP ; get_first_available_weapon_sub_type
_TEXT	ENDS
END
