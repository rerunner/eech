; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\downwash\downwash.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_cosf
PUBLIC	_sinf
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z ; create_downwash_effect
PUBLIC	?count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z ; count_entities_in_downwash
PUBLIC	?draw_downwash_effect@@YGXPAUENTITY@@@Z		; draw_downwash_effect
PUBLIC	?__LINE__Var@?0??create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z@4JA ; `create_downwash_effect'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_09DGPOGGIJ@type?5?$DO?$DN?50@		; `string'
PUBLIC	??_C@_0BK@JDJBJBKJ@type?5?$DM?5NUM_DOWNWASH_TYPES@ ; `string'
PUBLIC	??_C@_0BL@CICMAFGI@type?5?$CB?$DN?5DOWNWASH_TYPE_NONE@ ; `string'
PUBLIC	??_C@_05IOMEMJEC@count@				; `string'
PUBLIC	??_C@_0DP@MGFLGLNH@DOWNWASH?5?3?5trying?5to?5create?5an?5@ ; `string'
PUBLIC	?__LINE__Var@?0??count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z@4JA ; `count_entities_in_downwash'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA ; `draw_downwash_effect'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff921fb60000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4059000000000000
EXTRN	_memset:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?get_terrain_surface_type@@YGHH@Z:PROC		; get_terrain_surface_type
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_elevation
EXTRN	?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_type
EXTRN	?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_volume
EXTRN	?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ:PROC ; create_local_entity
EXTRN	?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z:PROC ; get_terrain_type_class
EXTRN	?get_time_acceleration@@YGHXZ:PROC		; get_time_acceleration
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?downwash_database@@3PAUDOWNWASH_DATA@@A:BYTE	; downwash_database
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff921fb60000000
CONST	SEGMENT
__real@3ff921fb60000000 DQ 03ff921fb60000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_HELICOPTER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA DD 0182H ; `draw_downwash_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z@4JA DD 0152H ; `count_entities_in_downwash'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DP@MGFLGLNH@DOWNWASH?5?3?5trying?5to?5create?5an?5@
CONST	SEGMENT
??_C@_0DP@MGFLGLNH@DOWNWASH?5?3?5trying?5to?5create?5an?5@ DB 'DOWNWASH :'
	DB	' trying to create an unrecogniseable downwash effect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IOMEMJEC@count@
CONST	SEGMENT
??_C@_05IOMEMJEC@count@ DB 'count', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CICMAFGI@type?5?$CB?$DN?5DOWNWASH_TYPE_NONE@
CONST	SEGMENT
??_C@_0BL@CICMAFGI@type?5?$CB?$DN?5DOWNWASH_TYPE_NONE@ DB 'type != DOWNWA'
	DB	'SH_TYPE_NONE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JDJBJBKJ@type?5?$DM?5NUM_DOWNWASH_TYPES@
CONST	SEGMENT
??_C@_0BK@JDJBJBKJ@type?5?$DM?5NUM_DOWNWASH_TYPES@ DB 'type < NUM_DOWNWAS'
	DB	'H_TYPES', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09DGPOGGIJ@type?5?$DO?$DN?50@
CONST	SEGMENT
??_C@_09DGPOGGIJ@type?5?$DO?$DN?50@ DB 'type >= 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\effect\downwa'
	DB	'sh\downwash.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z@4JA DD 02aH ; `create_downwash_effect'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\downwash\downwash.c
;	COMDAT ?create_downwash_effect_component@@YGHPAUDOWNWASH_COMPONENT@@W4DOWNWASH_TYPES@@PAUVEC3D@@PAHMMM@Z
_TEXT	SEGMENT
tv469 = -236						; size = 4
tv462 = -236						; size = 4
tv430 = -236						; size = 8
tv530 = -232						; size = 4
tv528 = -232						; size = 4
tv147 = -232						; size = 4
_new_entity$ = -164					; size = 4
_terrain_info$ = -160					; size = 44
_iv$ = -116						; size = 12
_offset$ = -104						; size = 12
_pos$ = -92						; size = 12
_main_rotor_radius_minus_altitude$ = -80		; size = 4
_half_altitude$ = -76					; size = 4
_altitude$ = -72					; size = 4
_height$ = -68						; size = 4
_relative_radius$ = -64					; size = 4
_radius$ = -60						; size = 4
_angle$ = -56						; size = 4
_scale$ = -52						; size = 4
_scale_max$ = -48					; size = 4
_scale_min$ = -44					; size = 4
_lifetime_max$ = -40					; size = 4
_lifetime_min$ = -36					; size = 4
_lifetime$ = -32					; size = 4
_alpha_percentage$ = -25				; size = 1
_quadrant_z$ = -24					; size = 2
_quadrant_x$ = -20					; size = 2
_trail_type$ = -16					; size = 4
_terrain_type$ = -12					; size = 4
_count$ = -8						; size = 4
_loop$ = -4						; size = 4
_this_downwash_component$ = 8				; size = 4
_downwash_type$ = 12					; size = 4
_position$ = 16						; size = 4
_entity_index_list$ = 20				; size = 4
_main_rotor_radius$ = 24				; size = 4
_main_rotor_rpm$ = 28					; size = 4
_min_altitude$ = 32					; size = 4
?create_downwash_effect_component@@YGHPAUDOWNWASH_COMPONENT@@W4DOWNWASH_TYPES@@PAUVEC3D@@PAHMMM@Z PROC ; create_downwash_effect_component, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 116  : 	int
; 117  : 		loop,
; 118  : 		count,
; 119  : 		terrain_type,
; 120  : 		trail_type;
; 121  : 
; 122  : 	short int
; 123  : 		quadrant_x,
; 124  : 		quadrant_z;
; 125  : 	
; 126  : 	unsigned char
; 127  : 		alpha_percentage;
; 128  : 
; 129  : 	float
; 130  : 		lifetime,
; 131  : 		lifetime_min,
; 132  : 		lifetime_max,
; 133  : 		scale_min,
; 134  : 		scale_max,
; 135  : 		scale,
; 136  : 		angle,
; 137  : 		radius,
; 138  : 		relative_radius,
; 139  : 		height,
; 140  : 		altitude,
; 141  : 		half_altitude,
; 142  : 		main_rotor_radius_minus_altitude;
; 143  : 
; 144  : 	vec3d
; 145  : 		pos,
; 146  : 		offset,
; 147  : 		iv;
; 148  : 
; 149  : 	terrain_3d_point_data
; 150  : 		terrain_info;
; 151  : 
; 152  : 	entity
; 153  : 		*new_entity;
; 154  : 
; 155  : 	memset (&terrain_info, 0, sizeof (terrain_3d_point_data));

  0000c	6a 2c		 push	 44			; 0000002cH
  0000e	6a 00		 push	 0
  00010	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _terrain_info$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 _memset
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 156  : 
; 157  : 	count = this_downwash_component->trail_count;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx

; 158  : 
; 159  : 	if ( count < 1 )

  00027	83 7d f8 01	 cmp	 DWORD PTR _count$[ebp], 1
  0002b	7d 07		 jge	 SHORT $LN7@create_dow

; 160  : 	{
; 161  : 		return 0;

  0002d	33 c0		 xor	 eax, eax
  0002f	e9 ff 06 00 00	 jmp	 $LN1@create_dow
$LN7@create_dow:

; 162  : 	}
; 163  : 
; 164  : 	// Xhit: This is the altitude of the helicopter relative to the ground level. (030328)
; 165  : 	altitude = position->y - min_altitude;

  00034	8b 45 10	 mov	 eax, DWORD PTR _position$[ebp]
  00037	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0003c	f3 0f 5c 45 20	 subss	 xmm0, DWORD PTR _min_altitude$[ebp]
  00041	f3 0f 11 45 b8	 movss	 DWORD PTR _altitude$[ebp], xmm0

; 166  : 	half_altitude = (altitude / 2.0);

  00046	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  0004b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00053	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00057	f3 0f 11 45 b4	 movss	 DWORD PTR _half_altitude$[ebp], xmm0

; 167  : 
; 168  : 	main_rotor_radius_minus_altitude = main_rotor_radius - altitude;

  0005c	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _main_rotor_radius$[ebp]
  00061	f3 0f 5c 45 b8	 subss	 xmm0, DWORD PTR _altitude$[ebp]
  00066	f3 0f 11 45 b0	 movss	 DWORD PTR _main_rotor_radius_minus_altitude$[ebp], xmm0

; 169  : 
; 170  : 	scale_min = this_downwash_component->scale_min;

  0006b	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  0006e	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  00073	f3 0f 11 45 d4	 movss	 DWORD PTR _scale_min$[ebp], xmm0

; 171  : 	scale_max = this_downwash_component->scale_max;

  00078	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  0007b	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00080	f3 0f 11 45 d0	 movss	 DWORD PTR _scale_max$[ebp], xmm0

; 172  : 
; 173  : 	lifetime_min = this_downwash_component->lifetime_min;

  00085	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  00088	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0008d	f3 0f 11 45 dc	 movss	 DWORD PTR _lifetime_min$[ebp], xmm0

; 174  : 	lifetime_max = this_downwash_component->lifetime_max;

  00092	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  00095	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0009a	f3 0f 11 45 d8	 movss	 DWORD PTR _lifetime_max$[ebp], xmm0

; 175  : 
; 176  : 	// Xhit: initialising quadrant variables (030328)
; 177  : 	quadrant_x = 1;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	66 89 45 ec	 mov	 WORD PTR _quadrant_x$[ebp], ax

; 178  : 	quadrant_z = 1;

  000a8	b8 01 00 00 00	 mov	 eax, 1
  000ad	66 89 45 e8	 mov	 WORD PTR _quadrant_z$[ebp], ax

; 179  : 
; 180  : 	//
; 181  : 	// create smoke trails
; 182  : 	//
; 183  : 
; 184  : 	for ( loop = 0 ; loop < count ; loop ++ )

  000b1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  000b8	eb 09		 jmp	 SHORT $LN4@create_dow
$LN2@create_dow:
  000ba	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000bd	83 c0 01	 add	 eax, 1
  000c0	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@create_dow:
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000c6	3b 45 f8	 cmp	 eax, DWORD PTR _count$[ebp]
  000c9	0f 8d 61 06 00
	00		 jge	 $LN3@create_dow

; 185  : 	{
; 186  : 		lifetime = lifetime_min + fabs( ( lifetime_max - lifetime_min ) * sfrand1() );

  000cf	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  000d9	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  000de	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  000e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  000e9	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000ec	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  000f2	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  000f8	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  000fc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  00104	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _lifetime_max$[ebp]
  00109	f3 0f 5c 4d dc	 subss	 xmm1, DWORD PTR _lifetime_min$[ebp]
  0010e	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00112	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00116	83 ec 08	 sub	 esp, 8
  00119	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  0011e	e8 00 00 00 00	 call	 _fabs
  00123	83 c4 08	 add	 esp, 8
  00126	dd 9d 14 ff ff
	ff		 fstp	 QWORD PTR tv430[ebp]
  0012c	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _lifetime_min$[ebp]
  00131	f2 0f 58 85 14
	ff ff ff	 addsd	 xmm0, QWORD PTR tv430[ebp]
  00139	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013d	f3 0f 11 45 e0	 movss	 DWORD PTR _lifetime$[ebp], xmm0

; 187  : 
; 188  : 		angle = frand1() * PI_OVER_TWO;

  00142	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0014c	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00151	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00156	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0015c	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0015f	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00165	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00169	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00171	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff921fb60000000
  00179	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0017d	f3 0f 11 45 c8	 movss	 DWORD PTR _angle$[ebp], xmm0

; 189  : 
; 190  : 		relative_radius = main_rotor_radius * frand1();

  00182	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0018c	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00191	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00196	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0019c	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0019f	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  001a5	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  001a9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  001b1	f3 0f 5a 4d 18	 cvtss2sd xmm1, DWORD PTR _main_rotor_radius$[ebp]
  001b6	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  001ba	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001be	f3 0f 11 45 c0	 movss	 DWORD PTR _relative_radius$[ebp], xmm0

; 191  : 
; 192  : 		scale = relative_radius + scale_min;

  001c3	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _relative_radius$[ebp]
  001c8	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _scale_min$[ebp]
  001cd	f3 0f 11 45 cc	 movss	 DWORD PTR _scale$[ebp], xmm0

; 193  : 		if(scale > scale_max)

  001d2	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _scale$[ebp]
  001d7	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _scale_max$[ebp]
  001db	76 0a		 jbe	 SHORT $LN8@create_dow

; 194  : 				scale = scale_max;

  001dd	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _scale_max$[ebp]
  001e2	f3 0f 11 45 cc	 movss	 DWORD PTR _scale$[ebp], xmm0
$LN8@create_dow:

; 195  : 
; 196  : 		switch(downwash_type)

  001e7	8b 45 0c	 mov	 eax, DWORD PTR _downwash_type$[ebp]
  001ea	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv147[ebp], eax
  001f0	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv147[ebp]
  001f6	83 e9 01	 sub	 ecx, 1
  001f9	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  001ff	83 bd 18 ff ff
	ff 03		 cmp	 DWORD PTR tv147[ebp], 3
  00206	0f 87 4f 01 00
	00		 ja	 $LN15@create_dow
  0020c	8b 95 18 ff ff
	ff		 mov	 edx, DWORD PTR tv147[ebp]
  00212	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN23@create_dow[edx*4]
$LN9@create_dow:

; 197  : 		{
; 198  : 			case DOWNWASH_TYPE_LAND:
; 199  : 			case DOWNWASH_TYPE_LAND_DUAL_ROTORS:
; 200  : 			{
; 201  : 				//Xhit: If altitude bigger than main rotor radius then the smoke should be centered beneath the helicopter. (030328)
; 202  : 				if(altitude >= main_rotor_radius)

  00219	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  0021e	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _main_rotor_radius$[ebp]
  00222	72 60		 jb	 SHORT $LN10@create_dow

; 203  : 				{
; 204  : 					radius = relative_radius;

  00224	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _relative_radius$[ebp]
  00229	f3 0f 11 45 c4	 movss	 DWORD PTR _radius$[ebp], xmm0

; 205  : 					height = (half_altitude * (radius / main_rotor_radius) + half_altitude) * frand1();

  0022e	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00238	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0023d	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00242	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00248	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0024b	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00251	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00255	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  0025d	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _radius$[ebp]
  00262	f3 0f 5e 4d 18	 divss	 xmm1, DWORD PTR _main_rotor_radius$[ebp]
  00267	f3 0f 59 4d b4	 mulss	 xmm1, DWORD PTR _half_altitude$[ebp]
  0026c	f3 0f 58 4d b4	 addss	 xmm1, DWORD PTR _half_altitude$[ebp]
  00271	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00275	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00279	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0027d	f3 0f 11 45 bc	 movss	 DWORD PTR _height$[ebp], xmm0

; 206  : 			
; 207  : 				}else

  00282	eb 6d		 jmp	 SHORT $LN11@create_dow
$LN10@create_dow:

; 208  : 				{
; 209  : 					radius = relative_radius + main_rotor_radius_minus_altitude;

  00284	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _relative_radius$[ebp]
  00289	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _main_rotor_radius_minus_altitude$[ebp]
  0028e	f3 0f 11 45 c4	 movss	 DWORD PTR _radius$[ebp], xmm0

; 210  : 					height = (half_altitude * ((radius - main_rotor_radius_minus_altitude) / main_rotor_radius) + half_altitude + scale ) * frand1();

  00293	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0029d	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  002a2	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  002a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  002ad	c1 f9 10	 sar	 ecx, 16			; 00000010H
  002b0	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  002b6	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  002ba	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  002c2	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _radius$[ebp]
  002c7	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _main_rotor_radius_minus_altitude$[ebp]
  002cc	f3 0f 5e 4d 18	 divss	 xmm1, DWORD PTR _main_rotor_radius$[ebp]
  002d1	f3 0f 59 4d b4	 mulss	 xmm1, DWORD PTR _half_altitude$[ebp]
  002d6	f3 0f 58 4d b4	 addss	 xmm1, DWORD PTR _half_altitude$[ebp]
  002db	f3 0f 58 4d cc	 addss	 xmm1, DWORD PTR _scale$[ebp]
  002e0	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  002e4	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  002e8	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002ec	f3 0f 11 45 bc	 movss	 DWORD PTR _height$[ebp], xmm0
$LN11@create_dow:

; 211  : 				}
; 212  : 				break;

  002f1	eb 75		 jmp	 SHORT $LN5@create_dow
$LN12@create_dow:

; 213  : 			}
; 214  : 			case DOWNWASH_TYPE_WATER:
; 215  : 			case DOWNWASH_TYPE_WATER_DUAL_ROTORS:
; 216  : 			{
; 217  : 				if(altitude >= main_rotor_radius)

  002f3	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  002f8	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _main_rotor_radius$[ebp]
  002fc	72 0c		 jb	 SHORT $LN13@create_dow

; 218  : 				{
; 219  : 					radius = relative_radius;

  002fe	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _relative_radius$[ebp]
  00303	f3 0f 11 45 c4	 movss	 DWORD PTR _radius$[ebp], xmm0

; 220  : 			
; 221  : 				}else

  00308	eb 0f		 jmp	 SHORT $LN14@create_dow
$LN13@create_dow:

; 222  : 				{
; 223  : 					radius = relative_radius + main_rotor_radius_minus_altitude;

  0030a	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _relative_radius$[ebp]
  0030f	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _main_rotor_radius_minus_altitude$[ebp]
  00314	f3 0f 11 45 c4	 movss	 DWORD PTR _radius$[ebp], xmm0
$LN14@create_dow:

; 224  : 				}
; 225  : 
; 226  : 				// Xhit: Changed to 2 instead of main_rotor_radius so smoke is created just over water level (030515)
; 227  : 				height =  2 * frand1();

  00319	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00323	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00328	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0032d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00333	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00336	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0033c	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00340	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00348	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00350	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00354	f3 0f 11 45 bc	 movss	 DWORD PTR _height$[ebp], xmm0

; 228  : 				break;

  00359	eb 0d		 jmp	 SHORT $LN5@create_dow
$LN15@create_dow:

; 229  : 			}
; 230  : 			default:
; 231  : 			{
; 232  : 				debug_fatal("DOWNWASH : trying to create an unrecogniseable downwash effect");

  0035b	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@MGFLGLNH@DOWNWASH?5?3?5trying?5to?5create?5an?5@
  00360	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00365	83 c4 04	 add	 esp, 4
$LN5@create_dow:

; 233  : 				break;
; 234  : 			}
; 235  : 		}
; 236  : 
; 237  : 
; 238  : 		//Xhit: If main rotor(s) only (not displaced main rotors) then. (030328)
; 239  : 		if((this_downwash_component->create_in_all_quadrants) && (loop < 4))

  00368	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  0036b	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0036e	80 e1 01	 and	 cl, 1
  00371	0f b6 d1	 movzx	 edx, cl
  00374	85 d2		 test	 edx, edx
  00376	0f 84 b7 00 00
	00		 je	 $LN16@create_dow
  0037c	83 7d fc 04	 cmp	 DWORD PTR _loop$[ebp], 4
  00380	0f 8d ad 00 00
	00		 jge	 $LN16@create_dow

; 240  : 		{
; 241  : 			//Xhit:	This cryptical thing is to determine in which quadrant this sprite is going to be created. (030328)
; 242  : 			//		 ^z
; 243  : 			//		 |
; 244  : 			//		1|0  x
; 245  : 			//		-+--->
; 246  : 			//		3|2
; 247  : 			//
; 248  : 			//		loop = 0 -> x=	1,	z=	1; loop = 1 -> x=	-1, z=	 1;
; 249  : 			//		loop = 2 -> x=   1,	z= -1; loop = 3 -> x=	-1, z=	-1;
; 250  : 			quadrant_x = 1 | -(loop & 1);

  00386	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00389	83 e0 01	 and	 eax, 1
  0038c	f7 d8		 neg	 eax
  0038e	83 c8 01	 or	 eax, 1
  00391	66 89 45 ec	 mov	 WORD PTR _quadrant_x$[ebp], ax

; 251  : 			quadrant_z = 1 | -(loop & 2);

  00395	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00398	83 e0 02	 and	 eax, 2
  0039b	f7 d8		 neg	 eax
  0039d	83 c8 01	 or	 eax, 1
  003a0	66 89 45 e8	 mov	 WORD PTR _quadrant_z$[ebp], ax

; 252  : 						
; 253  : 			offset.x = quadrant_x * radius * ( cos ( angle ) );

  003a4	0f bf 45 ec	 movsx	 eax, WORD PTR _quadrant_x$[ebp]
  003a8	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003ac	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  003b1	51		 push	 ecx
  003b2	f3 0f 10 4d c8	 movss	 xmm1, DWORD PTR _angle$[ebp]
  003b7	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  003bc	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv528[ebp], xmm0
  003c4	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  003c9	d9 9d 14 ff ff
	ff		 fstp	 DWORD PTR tv462[ebp]
  003cf	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv528[ebp]
  003d7	f3 0f 59 85 14
	ff ff ff	 mulss	 xmm0, DWORD PTR tv462[ebp]
  003df	f3 0f 11 45 98	 movss	 DWORD PTR _offset$[ebp], xmm0

; 254  : 			offset.y = height;

  003e4	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _height$[ebp]
  003e9	f3 0f 11 45 9c	 movss	 DWORD PTR _offset$[ebp+4], xmm0

; 255  : 			offset.z = quadrant_z * radius * ( sin ( angle ) );

  003ee	0f bf 45 e8	 movsx	 eax, WORD PTR _quadrant_z$[ebp]
  003f2	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003f6	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  003fb	51		 push	 ecx
  003fc	f3 0f 10 4d c8	 movss	 xmm1, DWORD PTR _angle$[ebp]
  00401	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00406	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR tv530[ebp], xmm0
  0040e	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00413	d9 9d 14 ff ff
	ff		 fstp	 DWORD PTR tv469[ebp]
  00419	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv530[ebp]
  00421	f3 0f 59 85 14
	ff ff ff	 mulss	 xmm0, DWORD PTR tv469[ebp]
  00429	f3 0f 11 45 a0	 movss	 DWORD PTR _offset$[ebp+8], xmm0

; 256  : 
; 257  : 		}else

  0042e	e9 f0 00 00 00	 jmp	 $LN19@create_dow
$LN16@create_dow:

; 258  : 		//Xhit:	If scattered downwash effect and if the heli got more than one main rotor (on different axis) then 
; 259  : 		//			add two more trails at the sides of the heli. (030328)
; 260  : 		if((this_downwash_component->create_in_all_quadrants) && (loop >= 4) && (count == 6))

  00433	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  00436	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  00439	80 e1 01	 and	 cl, 1
  0043c	0f b6 d1	 movzx	 edx, cl
  0043f	85 d2		 test	 edx, edx
  00441	0f 84 cf 00 00
	00		 je	 $LN18@create_dow
  00447	83 7d fc 04	 cmp	 DWORD PTR _loop$[ebp], 4
  0044b	0f 8c c5 00 00
	00		 jl	 $LN18@create_dow
  00451	83 7d f8 06	 cmp	 DWORD PTR _count$[ebp], 6
  00455	0f 85 bb 00 00
	00		 jne	 $LN18@create_dow

; 261  : 		{
; 262  : 			//Xhit: loop = 4 -> x=	1; loop = 5 -> x=	-1; (030328)
; 263  : 			quadrant_x = 1 | -(loop & 1);

  0045b	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0045e	83 e0 01	 and	 eax, 1
  00461	f7 d8		 neg	 eax
  00463	83 c8 01	 or	 eax, 1
  00466	66 89 45 ec	 mov	 WORD PTR _quadrant_x$[ebp], ax

; 264  : 
; 265  : 			relative_radius = main_rotor_radius * frand1();

  0046a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00474	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00479	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0047e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00484	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00487	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0048d	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00491	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00499	f3 0f 5a 4d 18	 cvtss2sd xmm1, DWORD PTR _main_rotor_radius$[ebp]
  0049e	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  004a2	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  004a6	f3 0f 11 45 c0	 movss	 DWORD PTR _relative_radius$[ebp], xmm0

; 266  : 
; 267  : 			offset.x = quadrant_x * radius;

  004ab	0f bf 45 ec	 movsx	 eax, WORD PTR _quadrant_x$[ebp]
  004af	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  004b3	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  004b8	f3 0f 11 45 98	 movss	 DWORD PTR _offset$[ebp], xmm0

; 268  : 			offset.y = height;

  004bd	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _height$[ebp]
  004c2	f3 0f 11 45 9c	 movss	 DWORD PTR _offset$[ebp+4], xmm0

; 269  : 			offset.z = frand1() * (main_rotor_radius / 2);

  004c7	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  004d1	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  004d6	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  004db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  004e1	c1 f9 10	 sar	 ecx, 16			; 00000010H
  004e4	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  004ea	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  004ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  004f6	f3 0f 10 4d 18	 movss	 xmm1, DWORD PTR _main_rotor_radius$[ebp]
  004fb	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@40000000
  00503	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00507	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0050b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0050f	f3 0f 11 45 a0	 movss	 DWORD PTR _offset$[ebp+8], xmm0

; 270  : 		}else

  00514	eb 0d		 jmp	 SHORT $LN19@create_dow
$LN18@create_dow:

; 271  : 		{
; 272  : 			debug_fatal("DOWNWASH : trying to create an unrecogniseable downwash effect");

  00516	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@MGFLGLNH@DOWNWASH?5?3?5trying?5to?5create?5an?5@
  0051b	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00520	83 c4 04	 add	 esp, 4
$LN19@create_dow:

; 273  : 		}
; 274  : 
; 275  : 		pos.x = position->x + offset.x ;

  00523	8b 45 10	 mov	 eax, DWORD PTR _position$[ebp]
  00526	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0052a	f3 0f 58 45 98	 addss	 xmm0, DWORD PTR _offset$[ebp]
  0052f	f3 0f 11 45 a4	 movss	 DWORD PTR _pos$[ebp], xmm0

; 276  : 		pos.z = position->z + offset.z;

  00534	8b 45 10	 mov	 eax, DWORD PTR _position$[ebp]
  00537	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0053c	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _offset$[ebp+8]
  00541	f3 0f 11 45 ac	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 277  : 
; 278  : 		//Xhit: This is necessary if it's going to work on tilting terrain. (030328)
; 279  : 		get_3d_terrain_point_data (pos.x, pos.z, &terrain_info);

  00546	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _terrain_info$[ebp]
  0054c	50		 push	 eax
  0054d	51		 push	 ecx
  0054e	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  00553	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00558	51		 push	 ecx
  00559	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _pos$[ebp]
  0055e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00563	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00568	dd d8		 fstp	 ST(0)

; 280  : 		pos.y = get_3d_terrain_point_data_elevation (&terrain_info);

  0056a	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _terrain_info$[ebp]
  00570	50		 push	 eax
  00571	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  00576	d9 5d a8	 fstp	 DWORD PTR _pos$[ebp+4]

; 281  : 
; 282  : 		pos.y = pos.y + offset.y;

  00579	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _pos$[ebp+4]
  0057e	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR _offset$[ebp+4]
  00583	f3 0f 11 45 a8	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 283  : 
; 284  : 		bound_position_to_map_volume( &pos );

  00588	8d 45 a4	 lea	 eax, DWORD PTR _pos$[ebp]
  0058b	50		 push	 eax
  0058c	e8 00 00 00 00	 call	 ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_map_volume

; 285  : 
; 286  : 		//Xhit: Decide which trail type is going to be used, this makes mapping to type of downwash effect fast. (030328)
; 287  : 		terrain_type = get_3d_terrain_point_data_type(&terrain_info);

  00591	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _terrain_info$[ebp]
  00597	50		 push	 eax
  00598	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  0059d	89 45 f4	 mov	 DWORD PTR _terrain_type$[ebp], eax

; 288  : 		trail_type = get_terrain_surface_type(terrain_type) + SMOKE_LIST_TYPE_DOWNWASH_START;

  005a0	8b 45 f4	 mov	 eax, DWORD PTR _terrain_type$[ebp]
  005a3	50		 push	 eax
  005a4	e8 00 00 00 00	 call	 ?get_terrain_surface_type@@YGHH@Z ; get_terrain_surface_type
  005a9	83 c0 15	 add	 eax, 21			; 00000015H
  005ac	89 45 f0	 mov	 DWORD PTR _trail_type$[ebp], eax

; 289  : 
; 290  : 		#if DEBUG_MODULE
; 291  : 		
; 292  : 		debug_log("DOWNWASH.C: terrain_type: %d, trail_type: %d", terrain_type, trail_type);
; 293  : 
; 294  : 		#endif		
; 295  : 
; 296  : 		iv.x = pos.x - position->x;

  005af	8b 45 10	 mov	 eax, DWORD PTR _position$[ebp]
  005b2	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _pos$[ebp]
  005b7	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  005bb	f3 0f 11 45 8c	 movss	 DWORD PTR _iv$[ebp], xmm0

; 297  : 		iv.y = relative_radius;

  005c0	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _relative_radius$[ebp]
  005c5	f3 0f 11 45 90	 movss	 DWORD PTR _iv$[ebp+4], xmm0

; 298  : 		iv.z = pos.z - position->z;

  005ca	8b 45 10	 mov	 eax, DWORD PTR _position$[ebp]
  005cd	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  005d2	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  005d7	f3 0f 11 45 94	 movss	 DWORD PTR _iv$[ebp+8], xmm0

; 299  : 
; 300  : 		//Xhit:	If heli on ground then let the dust-smoke fade in according to increasing main_rotor_rpm
; 301  : 		//		otherwise set it according to the altitude of the heli (higher = less dust smoke) (030328)
; 302  : 		if(altitude < 1.0)

  005dc	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  005e1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  005e9	66 0f 2f c8	 comisd	 xmm1, xmm0
  005ed	76 0a		 jbe	 SHORT $LN20@create_dow

; 303  : 		{
; 304  : 			alpha_percentage = (unsigned char)(main_rotor_rpm);

  005ef	f3 0f 2c 45 1c	 cvttss2si eax, DWORD PTR _main_rotor_rpm$[ebp]
  005f4	88 45 e7	 mov	 BYTE PTR _alpha_percentage$[ebp], al

; 305  : 		}else

  005f7	eb 39		 jmp	 SHORT $LN21@create_dow
$LN20@create_dow:

; 306  : 		{
; 307  : 			//Xhit: "+ 1.0" is to guarantee that alpha_percentage > 0. (030328)
; 308  : 			alpha_percentage = (unsigned char)((1.0 - (altitude / (DOWNWASH_EFFECT_MAX_ALTITUDE + 1.0))) * 100);

  005f9	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  005fe	f3 0f 5a 4d 18	 cvtss2sd xmm1, DWORD PTR _main_rotor_radius$[ebp]
  00603	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4008000000000000
  0060b	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00613	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00617	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0061f	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00623	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4059000000000000
  0062b	f2 0f 2c c1	 cvttsd2si eax, xmm1
  0062f	88 45 e7	 mov	 BYTE PTR _alpha_percentage$[ebp], al
$LN21@create_dow:

; 309  : 		}
; 310  : 
; 311  : 		new_entity = create_local_entity

  00632	6a 00		 push	 0
  00634	f3 0f 5a 45 ac	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+8]
  00639	83 ec 08	 sub	 esp, 8
  0063c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00641	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+4]
  00646	83 ec 08	 sub	 esp, 8
  00649	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0064e	f3 0f 5a 45 a4	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00653	83 ec 08	 sub	 esp, 8
  00656	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0065b	6a 08		 push	 8
  0065d	6a 09		 push	 9
  0065f	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _iv$[ebp+8]
  00664	83 ec 08	 sub	 esp, 8
  00667	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0066c	f3 0f 5a 45 90	 cvtss2sd xmm0, DWORD PTR _iv$[ebp+4]
  00671	83 ec 08	 sub	 esp, 8
  00674	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00679	f3 0f 5a 45 8c	 cvtss2sd xmm0, DWORD PTR _iv$[ebp]
  0067e	83 ec 08	 sub	 esp, 8
  00681	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00686	6a 05		 push	 5
  00688	6a 09		 push	 9
  0068a	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _scale$[ebp]
  0068f	83 ec 08	 sub	 esp, 8
  00692	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00697	6a 73		 push	 115			; 00000073H
  00699	6a 04		 push	 4
  0069b	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _lifetime$[ebp]
  006a0	83 ec 08	 sub	 esp, 8
  006a3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006a8	6a 76		 push	 118			; 00000076H
  006aa	6a 04		 push	 4
  006ac	8b 45 08	 mov	 eax, DWORD PTR _this_downwash_component$[ebp]
  006af	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  006b4	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006b8	83 ec 08	 sub	 esp, 8
  006bb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006c0	6a 2d		 push	 45			; 0000002dH
  006c2	6a 04		 push	 4
  006c4	8b 4d 08	 mov	 ecx, DWORD PTR _this_downwash_component$[ebp]
  006c7	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  006cc	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006d0	83 ec 08	 sub	 esp, 8
  006d3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006d8	6a 32		 push	 50			; 00000032H
  006da	6a 04		 push	 4
  006dc	0f b6 55 e7	 movzx	 edx, BYTE PTR _alpha_percentage$[ebp]
  006e0	52		 push	 edx
  006e1	6a 1d		 push	 29			; 0000001dH
  006e3	6a 05		 push	 5
  006e5	8b 45 f0	 mov	 eax, DWORD PTR _trail_type$[ebp]
  006e8	50		 push	 eax
  006e9	68 bd 00 00 00	 push	 189			; 000000bdH
  006ee	6a 05		 push	 5
  006f0	6a 01		 push	 1
  006f2	6a 34		 push	 52			; 00000034H
  006f4	6a 05		 push	 5
  006f6	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  006f9	8b 55 14	 mov	 edx, DWORD PTR _entity_index_list$[ebp]
  006fc	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  006ff	50		 push	 eax
  00700	6a 1f		 push	 31			; 0000001fH
  00702	e8 00 00 00 00	 call	 ?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_local_entity
  00707	81 c4 b0 00 00
	00		 add	 esp, 176		; 000000b0H
  0070d	89 85 5c ff ff
	ff		 mov	 DWORD PTR _new_entity$[ebp], eax

; 312  : 		(
; 313  : 			ENTITY_TYPE_SMOKE_LIST,
; 314  : 			entity_index_list[ loop ],
; 315  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_ENTITY_SUB_TYPE, ENTITY_SUB_TYPE_EFFECT_SMOKE_LIST_DOWNWASH),
; 316  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_SMOKE_TYPE, trail_type),
; 317  : 			ENTITY_ATTR_INT_VALUE (INT_TYPE_COLOUR_ALPHA, alpha_percentage),
; 318  : 			ENTITY_ATTR_FLOAT_VALUE (FLOAT_TYPE_GENERATOR_LIFETIME, this_downwash_component->generator_lifetime),
; 319  : 			ENTITY_ATTR_FLOAT_VALUE (FLOAT_TYPE_FREQUENCY, this_downwash_component->frequency),
; 320  : 			ENTITY_ATTR_FLOAT_VALUE (FLOAT_TYPE_SMOKE_LIFETIME, lifetime),
; 321  : 			ENTITY_ATTR_FLOAT_VALUE (FLOAT_TYPE_SCALE, scale),
; 322  : 			ENTITY_ATTR_VEC3D (VEC3D_TYPE_INITIAL_VELOCITY, iv.x, iv.y, iv.z),
; 323  : 			ENTITY_ATTR_VEC3D (VEC3D_TYPE_POSITION, pos.x, pos.y, pos.z),
; 324  : 			ENTITY_ATTR_END
; 325  : 		);
; 326  : 
; 327  : 		entity_index_list[ loop ] = get_local_entity_index( new_entity );

  00713	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _new_entity$[ebp]
  00719	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  0071f	c1 f8 04	 sar	 eax, 4
  00722	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00725	8b 55 14	 mov	 edx, DWORD PTR _entity_index_list$[ebp]
  00728	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 328  : 	}

  0072b	e9 8a f9 ff ff	 jmp	 $LN2@create_dow
$LN3@create_dow:

; 329  : 
; 330  : 	return count;

  00730	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
$LN1@create_dow:

; 331  : }

  00733	5f		 pop	 edi
  00734	5e		 pop	 esi
  00735	5b		 pop	 ebx
  00736	8b e5		 mov	 esp, ebp
  00738	5d		 pop	 ebp
  00739	c2 1c 00	 ret	 28			; 0000001cH
$LN23@create_dow:
  0073c	00 00 00 00	 DD	 $LN9@create_dow
  00740	00 00 00 00	 DD	 $LN9@create_dow
  00744	00 00 00 00	 DD	 $LN12@create_dow
  00748	00 00 00 00	 DD	 $LN12@create_dow
?create_downwash_effect_component@@YGHPAUDOWNWASH_COMPONENT@@W4DOWNWASH_TYPES@@PAUVEC3D@@PAHMMM@Z ENDP ; create_downwash_effect_component
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\downwash\downwash.c
;	COMDAT ?draw_downwash_effect@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv272 = -156						; size = 4
tv242 = -156						; size = 4
tv212 = -156						; size = 4
tv190 = -156						; size = 4
tv170 = -156						; size = 4
tv144 = -156						; size = 4
tv93 = -156						; size = 4
tv286 = -152						; size = 4
tv264 = -152						; size = 4
tv234 = -152						; size = 4
tv204 = -152						; size = 4
tv182 = -152						; size = 4
tv162 = -152						; size = 4
tv137 = -152						; size = 4
tv86 = -152						; size = 4
tv75 = -152						; size = 4
_type_of_downwash$ = -84				; size = 4
_type_of_terrain$ = -80					; size = 4
_number_of_main_rotors$ = -76				; size = 4
_min_altitude$ = -72					; size = 4
_main_rotor_rpm$ = -68					; size = 4
_main_rotor_radius$ = -64				; size = 4
_terrain_info$ = -60					; size = 44
_pos$ = -16						; size = 12
_position$ = -4						; size = 4
_en$ = 8						; size = 4
?draw_downwash_effect@@YGXPAUENTITY@@@Z PROC		; draw_downwash_effect, COMDAT

; 386  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 387  : 
; 388  : 	vec3d
; 389  : 		*position,
; 390  : 		pos;
; 391  : 
; 392  : 	terrain_3d_point_data
; 393  : 		terrain_info;
; 394  : 
; 395  : 	float
; 396  : 		main_rotor_radius,
; 397  : 		main_rotor_rpm,
; 398  : 		min_altitude;
; 399  : 
; 400  : 	int
; 401  : 		number_of_main_rotors;
; 402  : 
; 403  : 	terrain_types
; 404  : 		type_of_terrain;
; 405  : 
; 406  : 	downwash_types
; 407  : 		type_of_downwash;
; 408  : 
; 409  : 
; 410  : 	ASSERT( en );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@draw_downw
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 18	 add	 eax, 24			; 00000018H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@draw_downw:

; 411  : 
; 412  : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN18@draw_downw
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN19@draw_downw
$LN18@draw_downw:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  00043	83 c2 1a	 add	 edx, 26			; 0000001aH
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN19@draw_downw:
  00061	83 bd 68 ff ff
	ff 0e		 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  00068	74 18		 je	 SHORT $LN5@draw_downw
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  0006f	83 c0 1a	 add	 eax, 26			; 0000001aH
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@draw_downw:

; 413  : 
; 414  : 	if (!get_local_entity_int_value (en, INT_TYPE_ALIVE))

  00082	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00086	74 0d		 je	 SHORT $LN20@draw_downw
  00088	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  00093	eb 20		 jmp	 SHORT $LN21@draw_downw
$LN20@draw_downw:
  00095	68 9e 01 00 00	 push	 414			; 0000019eH
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a5	52		 push	 edx
  000a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ab	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN21@draw_downw:
  000b5	b8 01 00 00 00	 mov	 eax, 1
  000ba	85 c0		 test	 eax, eax
  000bc	74 0c		 je	 SHORT $LN22@draw_downw
  000be	c7 85 64 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv93[ebp], 7
  000c8	eb 20		 jmp	 SHORT $LN23@draw_downw
$LN22@draw_downw:
  000ca	68 9e 01 00 00	 push	 414			; 0000019eH
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e0	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN23@draw_downw:
  000ea	6a 07		 push	 7
  000ec	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000ef	52		 push	 edx
  000f0	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv86[ebp], 1116
  000fa	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  00100	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00107	ff d2		 call	 edx
  00109	85 c0		 test	 eax, eax
  0010b	75 05		 jne	 SHORT $LN6@draw_downw

; 415  : 	{
; 416  : 		return;

  0010d	e9 f8 04 00 00	 jmp	 $LN1@draw_downw
$LN6@draw_downw:

; 417  : 	}
; 418  : 
; 419  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00112	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00116	74 0d		 je	 SHORT $LN24@draw_downw
  00118	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011d	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv137[ebp], ecx
  00123	eb 20		 jmp	 SHORT $LN25@draw_downw
$LN24@draw_downw:
  00125	68 a3 01 00 00	 push	 419			; 000001a3H
  0012a	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00135	52		 push	 edx
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013b	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN25@draw_downw:
  00145	b8 01 00 00 00	 mov	 eax, 1
  0014a	85 c0		 test	 eax, eax
  0014c	74 0c		 je	 SHORT $LN26@draw_downw
  0014e	c7 85 64 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv144[ebp], 147 ; 00000093H
  00158	eb 20		 jmp	 SHORT $LN27@draw_downw
$LN26@draw_downw:
  0015a	68 a3 01 00 00	 push	 419			; 000001a3H
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00164	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0016a	51		 push	 ecx
  0016b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00170	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN27@draw_downw:
  0017a	68 93 00 00 00	 push	 147			; 00000093H
  0017f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00182	52		 push	 edx
  00183	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv137[ebp], 1116
  0018d	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv144[ebp]
  00193	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0019a	ff d2		 call	 edx
  0019c	85 c0		 test	 eax, eax
  0019e	74 05		 je	 SHORT $LN7@draw_downw

; 420  : 	{
; 421  : 		return;

  001a0	e9 65 04 00 00	 jmp	 $LN1@draw_downw
$LN7@draw_downw:

; 422  : 	}
; 423  : 
; 424  : 	if (get_time_acceleration () == TIME_ACCELERATION_PAUSE)

  001a5	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  001aa	85 c0		 test	 eax, eax
  001ac	75 05		 jne	 SHORT $LN8@draw_downw

; 425  : 	{
; 426  : 		return;

  001ae	e9 57 04 00 00	 jmp	 $LN1@draw_downw
$LN8@draw_downw:

; 427  : 	}
; 428  : 
; 429  : 	memset (&terrain_info, 0, sizeof (terrain_3d_point_data));

  001b3	6a 2c		 push	 44			; 0000002cH
  001b5	6a 00		 push	 0
  001b7	8d 45 c4	 lea	 eax, DWORD PTR _terrain_info$[ebp]
  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 _memset
  001c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 430  : 
; 431  : 	main_rotor_rpm = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_RPM);

  001c3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001c7	74 0d		 je	 SHORT $LN28@draw_downw
  001c9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ce	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv162[ebp], ecx
  001d4	eb 24		 jmp	 SHORT $LN29@draw_downw
$LN28@draw_downw:
  001d6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  001dc	83 c2 2d	 add	 edx, 45			; 0000002dH
  001df	52		 push	 edx
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ea	50		 push	 eax
  001eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f0	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
$LN29@draw_downw:
  001fa	b9 01 00 00 00	 mov	 ecx, 1
  001ff	85 c9		 test	 ecx, ecx
  00201	74 0c		 je	 SHORT $LN30@draw_downw
  00203	c7 85 64 ff ff
	ff 48 00 00 00	 mov	 DWORD PTR tv170[ebp], 72 ; 00000048H
  0020d	eb 24		 jmp	 SHORT $LN31@draw_downw
$LN30@draw_downw:
  0020f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  00215	83 c2 2d	 add	 edx, 45			; 0000002dH
  00218	52		 push	 edx
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00229	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv170[ebp], 0
$LN31@draw_downw:
  00233	6a 48		 push	 72			; 00000048H
  00235	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00238	51		 push	 ecx
  00239	69 95 68 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv162[ebp], 700
  00243	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv170[ebp]
  00249	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00250	ff d1		 call	 ecx
  00252	d9 5d bc	 fstp	 DWORD PTR _main_rotor_rpm$[ebp]

; 432  : 
; 433  : 	position = get_local_entity_vec3d_ptr(en, VEC3D_TYPE_POSITION);

  00255	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00259	74 0d		 je	 SHORT $LN32@draw_downw
  0025b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0025e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00260	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv182[ebp], ecx
  00266	eb 24		 jmp	 SHORT $LN33@draw_downw
$LN32@draw_downw:
  00268	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  0026e	83 c2 2f	 add	 edx, 47			; 0000002fH
  00271	52		 push	 edx
  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00277	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00282	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN33@draw_downw:
  0028c	b9 01 00 00 00	 mov	 ecx, 1
  00291	85 c9		 test	 ecx, ecx
  00293	74 0c		 je	 SHORT $LN34@draw_downw
  00295	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv190[ebp], 8
  0029f	eb 24		 jmp	 SHORT $LN35@draw_downw
$LN34@draw_downw:
  002a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  002a7	83 c2 2f	 add	 edx, 47			; 0000002fH
  002aa	52		 push	 edx
  002ab	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bb	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv190[ebp], 0
$LN35@draw_downw:
  002c5	6a 08		 push	 8
  002c7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002ca	51		 push	 ecx
  002cb	6b 95 68 ff ff
	ff 60		 imul	 edx, DWORD PTR tv182[ebp], 96
  002d2	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv190[ebp]
  002d8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  002df	ff d1		 call	 ecx
  002e1	89 45 fc	 mov	 DWORD PTR _position$[ebp], eax

; 434  : 
; 435  : 	pos.x = position->x;

  002e4	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  002e7	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002eb	f3 0f 11 45 f0	 movss	 DWORD PTR _pos$[ebp], xmm0

; 436  : 	pos.y = position->y - aircraft_database [get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE)].centre_of_gravity_to_ground_distance;

  002f0	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002f4	74 0d		 je	 SHORT $LN36@draw_downw
  002f6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fb	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv204[ebp], ecx
  00301	eb 24		 jmp	 SHORT $LN37@draw_downw
$LN36@draw_downw:
  00303	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  00309	83 c2 32	 add	 edx, 50			; 00000032H
  0030c	52		 push	 edx
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00312	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00317	50		 push	 eax
  00318	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031d	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv204[ebp], 0
$LN37@draw_downw:
  00327	b9 01 00 00 00	 mov	 ecx, 1
  0032c	85 c9		 test	 ecx, ecx
  0032e	74 0c		 je	 SHORT $LN38@draw_downw
  00330	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv212[ebp], 52 ; 00000034H
  0033a	eb 24		 jmp	 SHORT $LN39@draw_downw
$LN38@draw_downw:
  0033c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  00342	83 c2 32	 add	 edx, 50			; 00000032H
  00345	52		 push	 edx
  00346	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00350	50		 push	 eax
  00351	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00356	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv212[ebp], 0
$LN39@draw_downw:
  00360	6a 34		 push	 52			; 00000034H
  00362	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00365	51		 push	 ecx
  00366	69 95 68 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv204[ebp], 1116
  00370	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv212[ebp]
  00376	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0037d	ff d1		 call	 ecx
  0037f	69 d0 f4 00 00
	00		 imul	 edx, eax, 244
  00385	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  00388	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0038d	f3 0f 5c 82 54
	00 00 00	 subss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+84]
  00395	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 437  : 	pos.z = position->z;

  0039a	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  0039d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003a2	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 438  : 
; 439  : 	get_3d_terrain_point_data (pos.x, pos.z, &terrain_info);

  003a7	8d 45 c4	 lea	 eax, DWORD PTR _terrain_info$[ebp]
  003aa	50		 push	 eax
  003ab	51		 push	 ecx
  003ac	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  003b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b6	51		 push	 ecx
  003b7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pos$[ebp]
  003bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c1	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  003c6	dd d8		 fstp	 ST(0)

; 440  : 	min_altitude = get_3d_terrain_point_data_elevation (&terrain_info);

  003c8	8d 45 c4	 lea	 eax, DWORD PTR _terrain_info$[ebp]
  003cb	50		 push	 eax
  003cc	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  003d1	d9 5d b8	 fstp	 DWORD PTR _min_altitude$[ebp]

; 441  : 
; 442  : 	//Xhit: main_rotor_radius is got here because DOWNWASH_EFFECT_MAX_ALTITUDE depends on it. (030328)
; 443  : 	main_rotor_radius = aircraft_database [get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE)].main_rotor_radius;

  003d4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003d8	74 0d		 je	 SHORT $LN40@draw_downw
  003da	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv234[ebp], ecx
  003e5	eb 24		 jmp	 SHORT $LN41@draw_downw
$LN40@draw_downw:
  003e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  003ed	83 c2 39	 add	 edx, 57			; 00000039H
  003f0	52		 push	 edx
  003f1	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003fb	50		 push	 eax
  003fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00401	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN41@draw_downw:
  0040b	b9 01 00 00 00	 mov	 ecx, 1
  00410	85 c9		 test	 ecx, ecx
  00412	74 0c		 je	 SHORT $LN42@draw_downw
  00414	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv242[ebp], 52 ; 00000034H
  0041e	eb 24		 jmp	 SHORT $LN43@draw_downw
$LN42@draw_downw:
  00420	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  00426	83 c2 39	 add	 edx, 57			; 00000039H
  00429	52		 push	 edx
  0042a	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0042f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00434	50		 push	 eax
  00435	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043a	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN43@draw_downw:
  00444	6a 34		 push	 52			; 00000034H
  00446	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00449	51		 push	 ecx
  0044a	69 95 68 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv234[ebp], 1116
  00454	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv242[ebp]
  0045a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00461	ff d1		 call	 ecx
  00463	69 d0 f4 00 00
	00		 imul	 edx, eax, 244
  00469	f3 0f 10 82 dc
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+220]
  00471	f3 0f 11 45 c0	 movss	 DWORD PTR _main_rotor_radius$[ebp], xmm0

; 444  : 
; 445  : 	if((main_rotor_rpm > 1.0) && ((pos.y - min_altitude) < DOWNWASH_EFFECT_MAX_ALTITUDE))

  00476	f3 0f 5a 45 bc	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  0047b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00483	0f 86 81 01 00
	00		 jbe	 $LN2@draw_downw
  00489	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pos$[ebp+4]
  0048e	f3 0f 5c 45 b8	 subss	 xmm0, DWORD PTR _min_altitude$[ebp]
  00493	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00497	f3 0f 5a 4d c0	 cvtss2sd xmm1, DWORD PTR _main_rotor_radius$[ebp]
  0049c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4008000000000000
  004a4	66 0f 2f c8	 comisd	 xmm1, xmm0
  004a8	0f 86 5c 01 00
	00		 jbe	 $LN2@draw_downw

; 446  : 	{
; 447  : 		
; 448  : 		number_of_main_rotors = (int) aircraft_database [get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE)].number_of_main_rotors;

  004ae	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004b2	74 0d		 je	 SHORT $LN44@draw_downw
  004b4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b9	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv264[ebp], ecx
  004bf	eb 24		 jmp	 SHORT $LN45@draw_downw
$LN44@draw_downw:
  004c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  004c7	83 c2 3e	 add	 edx, 62			; 0000003eH
  004ca	52		 push	 edx
  004cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004d5	50		 push	 eax
  004d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004db	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN45@draw_downw:
  004e5	b9 01 00 00 00	 mov	 ecx, 1
  004ea	85 c9		 test	 ecx, ecx
  004ec	74 0c		 je	 SHORT $LN46@draw_downw
  004ee	c7 85 64 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv272[ebp], 52 ; 00000034H
  004f8	eb 24		 jmp	 SHORT $LN47@draw_downw
$LN46@draw_downw:
  004fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_downwash_effect@@YGXPAUENTITY@@@Z@4JA
  00500	83 c2 3e	 add	 edx, 62			; 0000003eH
  00503	52		 push	 edx
  00504	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00509	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0050e	50		 push	 eax
  0050f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00514	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
$LN47@draw_downw:
  0051e	6a 34		 push	 52			; 00000034H
  00520	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00523	51		 push	 ecx
  00524	69 95 68 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv264[ebp], 1116
  0052e	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv272[ebp]
  00534	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0053b	ff d1		 call	 ecx
  0053d	69 d0 f4 00 00
	00		 imul	 edx, eax, 244
  00543	f3 0f 2c 82 d8
	00 00 00	 cvttss2si eax, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+216]
  0054b	89 45 b4	 mov	 DWORD PTR _number_of_main_rotors$[ebp], eax

; 449  : 
; 450  : 		type_of_terrain = get_3d_terrain_point_data_type(&terrain_info);

  0054e	8d 45 c4	 lea	 eax, DWORD PTR _terrain_info$[ebp]
  00551	50		 push	 eax
  00552	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  00557	89 45 b0	 mov	 DWORD PTR _type_of_terrain$[ebp], eax

; 451  : 
; 452  : 		switch( get_terrain_type_class(type_of_terrain) )

  0055a	8b 45 b0	 mov	 eax, DWORD PTR _type_of_terrain$[ebp]
  0055d	50		 push	 eax
  0055e	e8 00 00 00 00	 call	 ?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z ; get_terrain_type_class
  00563	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv286[ebp], eax
  00569	83 bd 68 ff ff
	ff 01		 cmp	 DWORD PTR tv286[ebp], 1
  00570	74 54		 je	 SHORT $LN13@draw_downw
  00572	83 bd 68 ff ff
	ff 03		 cmp	 DWORD PTR tv286[ebp], 3
  00579	74 05		 je	 SHORT $LN10@draw_downw
  0057b	e9 8a 00 00 00	 jmp	 $LN16@draw_downw
$LN10@draw_downw:

; 453  : 		{
; 454  : 			case TERRAIN_CLASS_LAND: 
; 455  : 			{
; 456  : 
; 457  : 				if(number_of_main_rotors > 1)

  00580	83 7d b4 01	 cmp	 DWORD PTR _number_of_main_rotors$[ebp], 1
  00584	7e 09		 jle	 SHORT $LN11@draw_downw

; 458  : 					type_of_downwash = DOWNWASH_TYPE_LAND_DUAL_ROTORS;

  00586	c7 45 ac 02 00
	00 00		 mov	 DWORD PTR _type_of_downwash$[ebp], 2

; 459  : 				else

  0058d	eb 07		 jmp	 SHORT $LN12@draw_downw
$LN11@draw_downw:

; 460  : 					type_of_downwash = DOWNWASH_TYPE_LAND;

  0058f	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR _type_of_downwash$[ebp], 1
$LN12@draw_downw:

; 461  : 				
; 462  : 				create_downwash_effect(type_of_downwash, &pos, main_rotor_radius, main_rotor_rpm, min_altitude);

  00596	51		 push	 ecx
  00597	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _min_altitude$[ebp]
  0059c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a1	51		 push	 ecx
  005a2	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  005a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ac	51		 push	 ecx
  005ad	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _main_rotor_radius$[ebp]
  005b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b7	8d 45 f0	 lea	 eax, DWORD PTR _pos$[ebp]
  005ba	50		 push	 eax
  005bb	8b 4d ac	 mov	 ecx, DWORD PTR _type_of_downwash$[ebp]
  005be	51		 push	 ecx
  005bf	e8 00 00 00 00	 call	 ?create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z ; create_downwash_effect

; 463  : 				break;

  005c4	eb 44		 jmp	 SHORT $LN2@draw_downw
$LN13@draw_downw:

; 464  : 			}
; 465  : 			case TERRAIN_CLASS_WATER:
; 466  : 			{
; 467  : 				
; 468  : 				if(number_of_main_rotors > 1)

  005c6	83 7d b4 01	 cmp	 DWORD PTR _number_of_main_rotors$[ebp], 1
  005ca	7e 09		 jle	 SHORT $LN14@draw_downw

; 469  : 					type_of_downwash = DOWNWASH_TYPE_WATER_DUAL_ROTORS;

  005cc	c7 45 ac 04 00
	00 00		 mov	 DWORD PTR _type_of_downwash$[ebp], 4

; 470  : 				else

  005d3	eb 07		 jmp	 SHORT $LN15@draw_downw
$LN14@draw_downw:

; 471  : 					type_of_downwash = DOWNWASH_TYPE_WATER;

  005d5	c7 45 ac 03 00
	00 00		 mov	 DWORD PTR _type_of_downwash$[ebp], 3
$LN15@draw_downw:

; 472  : 
; 473  : 				create_downwash_effect(type_of_downwash, &pos, main_rotor_radius, main_rotor_rpm, min_altitude);

  005dc	51		 push	 ecx
  005dd	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _min_altitude$[ebp]
  005e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e7	51		 push	 ecx
  005e8	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  005ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f2	51		 push	 ecx
  005f3	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _main_rotor_radius$[ebp]
  005f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fd	8d 45 f0	 lea	 eax, DWORD PTR _pos$[ebp]
  00600	50		 push	 eax
  00601	8b 4d ac	 mov	 ecx, DWORD PTR _type_of_downwash$[ebp]
  00604	51		 push	 ecx
  00605	e8 00 00 00 00	 call	 ?create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z ; create_downwash_effect
$LN16@draw_downw:
$LN2@draw_downw:
$LN1@draw_downw:

; 474  : 				break;
; 475  : 			}
; 476  : 			//Xhit: No downwash effect for FORESTS. (030328)
; 477  : 			case TERRAIN_CLASS_FOREST:
; 478  : 			default:
; 479  : 			{
; 480  : 				break;
; 481  : 			}
; 482  : 		}
; 483  : 	}
; 484  : 	
; 485  : 	return;
; 486  : }

  0060a	5f		 pop	 edi
  0060b	5e		 pop	 esi
  0060c	5b		 pop	 ebx
  0060d	8b e5		 mov	 esp, ebp
  0060f	5d		 pop	 ebp
  00610	c2 04 00	 ret	 4
?draw_downwash_effect@@YGXPAUENTITY@@@Z ENDP		; draw_downwash_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\downwash\downwash.c
;	COMDAT ?count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z
_TEXT	SEGMENT
_downwash_component$ = -16				; size = 4
_num_components$ = -12					; size = 4
_index_counter$ = -8					; size = 4
_comp$ = -4						; size = 4
_type$ = 8						; size = 4
?count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z PROC ; count_entities_in_downwash, COMDAT

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 339  : 	int
; 340  : 		comp,
; 341  : 		index_counter,
; 342  : 		num_components;
; 343  : 
; 344  : 	downwash_component
; 345  : 		*downwash_component;
; 346  : 	
; 347  : 	ASSERT (type >= 0);

  00009	83 7d 08 00	 cmp	 DWORD PTR _type$[ebp], 0
  0000d	7d 18		 jge	 SHORT $LN5@count_enti
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z@4JA
  00014	83 c0 09	 add	 eax, 9
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09DGPOGGIJ@type?5?$DO?$DN?50@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@count_enti:

; 348  : 
; 349  : 	ASSERT (type < NUM_DOWNWASH_TYPES);

  00027	83 7d 08 05	 cmp	 DWORD PTR _type$[ebp], 5
  0002b	7c 18		 jl	 SHORT $LN6@count_enti
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z@4JA
  00032	83 c0 0b	 add	 eax, 11			; 0000000bH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@JDJBJBKJ@type?5?$DM?5NUM_DOWNWASH_TYPES@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@count_enti:

; 350  : 
; 351  : 	ASSERT (type != DOWNWASH_TYPE_NONE);

  00045	83 7d 08 00	 cmp	 DWORD PTR _type$[ebp], 0
  00049	75 18		 jne	 SHORT $LN7@count_enti
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z@4JA
  00050	83 c0 0d	 add	 eax, 13			; 0000000dH
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CICMAFGI@type?5?$CB?$DN?5DOWNWASH_TYPE_NONE@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@count_enti:

; 352  : 
; 353  : 	index_counter = 0;

  00063	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _index_counter$[ebp], 0

; 354  : 
; 355  : 	num_components = downwash_database[ type ].number_of_components;

  0006a	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0006d	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?downwash_database@@3PAUDOWNWASH_DATA@@A[eax*8]
  00074	89 4d f4	 mov	 DWORD PTR _num_components$[ebp], ecx

; 356  : 
; 357  : 	for ( comp = 0 ; comp < num_components ; comp ++ )

  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _comp$[ebp], 0
  0007e	eb 09		 jmp	 SHORT $LN4@count_enti
$LN2@count_enti:
  00080	8b 45 fc	 mov	 eax, DWORD PTR _comp$[ebp]
  00083	83 c0 01	 add	 eax, 1
  00086	89 45 fc	 mov	 DWORD PTR _comp$[ebp], eax
$LN4@count_enti:
  00089	8b 45 fc	 mov	 eax, DWORD PTR _comp$[ebp]
  0008c	3b 45 f4	 cmp	 eax, DWORD PTR _num_components$[ebp]
  0008f	7d 20		 jge	 SHORT $LN3@count_enti

; 358  : 	{
; 359  : 
; 360  : 		downwash_component = &(downwash_database[ type ].component[ comp ]);

  00091	8b 45 fc	 mov	 eax, DWORD PTR _comp$[ebp]
  00094	c1 e0 05	 shl	 eax, 5
  00097	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  0009a	03 04 cd 04 00
	00 00		 add	 eax, DWORD PTR ?downwash_database@@3PAUDOWNWASH_DATA@@A[ecx*8+4]
  000a1	89 45 f0	 mov	 DWORD PTR _downwash_component$[ebp], eax

; 361  : 
; 362  : 		index_counter += downwash_component->trail_count;

  000a4	8b 45 f0	 mov	 eax, DWORD PTR _downwash_component$[ebp]
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _index_counter$[ebp]
  000aa	03 08		 add	 ecx, DWORD PTR [eax]
  000ac	89 4d f8	 mov	 DWORD PTR _index_counter$[ebp], ecx

; 363  : 
; 364  : 	}

  000af	eb cf		 jmp	 SHORT $LN2@count_enti
$LN3@count_enti:

; 365  : 	
; 366  : 	return index_counter;

  000b1	8b 45 f8	 mov	 eax, DWORD PTR _index_counter$[ebp]

; 367  : }

  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 04 00	 ret	 4
?count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z ENDP ; count_entities_in_downwash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\downwash\downwash.c
;	COMDAT ?create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z
_TEXT	SEGMENT
_this_downwash_component$ = -28				; size = 4
_entity_index_list$ = -24				; size = 4
_index_counter$ = -20					; size = 4
_comp$ = -16						; size = 4
_num_components$ = -12					; size = 4
_count$ = -8						; size = 4
_loop$ = -4						; size = 4
_type$ = 8						; size = 4
_position$ = 12						; size = 4
_main_rotor_radius$ = 16				; size = 4
_main_rotor_rpm$ = 20					; size = 4
_min_altitude$ = 24					; size = 4
?create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z PROC ; create_downwash_effect, COMDAT

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 43   : 	int	
; 44   : 		loop,
; 45   : 		count,
; 46   : 		num_components,
; 47   : 		comp,
; 48   : 		index_counter,
; 49   : 		*entity_index_list;
; 50   : 
; 51   : 	downwash_component
; 52   : 		*this_downwash_component;
; 53   : 
; 54   : 	ASSERT (type >= 0);

  00009	83 7d 08 00	 cmp	 DWORD PTR _type$[ebp], 0
  0000d	7d 18		 jge	 SHORT $LN8@create_dow
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09DGPOGGIJ@type?5?$DO?$DN?50@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@create_dow:

; 55   : 
; 56   : 	ASSERT (type < NUM_DOWNWASH_TYPES);

  00027	83 7d 08 05	 cmp	 DWORD PTR _type$[ebp], 5
  0002b	7c 18		 jl	 SHORT $LN9@create_dow
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z@4JA
  00032	83 c0 0e	 add	 eax, 14			; 0000000eH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@JDJBJBKJ@type?5?$DM?5NUM_DOWNWASH_TYPES@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@create_dow:

; 57   : 
; 58   : 	ASSERT (type != DOWNWASH_TYPE_NONE);

  00045	83 7d 08 00	 cmp	 DWORD PTR _type$[ebp], 0
  00049	75 18		 jne	 SHORT $LN10@create_dow
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z@4JA
  00050	83 c0 10	 add	 eax, 16			; 00000010H
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CICMAFGI@type?5?$CB?$DN?5DOWNWASH_TYPE_NONE@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@create_dow:

; 59   : 
; 60   : 	//
; 61   : 	// create an array of entity index numbers and fill them all with ENTITY_INDEX_DONT_CARE
; 62   : 	//
; 63   : 
; 64   : 	count = count_entities_in_downwash (type);

  00063	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?count_entities_in_downwash@@YGHW4DOWNWASH_TYPES@@@Z ; count_entities_in_downwash
  0006c	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax

; 65   : 
; 66   : 	ASSERT (count);

  0006f	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00073	75 18		 jne	 SHORT $LN11@create_dow
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z@4JA
  0007a	83 c0 18	 add	 eax, 24			; 00000018H
  0007d	50		 push	 eax
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMIBMBGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_05IOMEMJEC@count@
  00088	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@create_dow:

; 67   : 
; 68   : 	entity_index_list = (int *) malloc_fast_mem (sizeof (int) * count);

  0008d	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00090	c1 e0 02	 shl	 eax, 2
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00099	89 45 e8	 mov	 DWORD PTR _entity_index_list$[ebp], eax

; 69   : 
; 70   : 	//Xhit replaced ENTITY_INDEX_DONT_CARE with ENTITY_INDEX_CREATE_LOCAL (030428)
; 71   : 	//This and the changes made to the entity heap and some smoke functions
; 72   : 	//clears the MP-bug caused by that local entities were not allowed to be created on a client
; 73   : 	for ( loop = 0 ; loop < count ; loop ++ )

  0009c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  000a3	eb 09		 jmp	 SHORT $LN4@create_dow
$LN2@create_dow:
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000a8	83 c0 01	 add	 eax, 1
  000ab	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@create_dow:
  000ae	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000b1	3b 45 f8	 cmp	 eax, DWORD PTR _count$[ebp]
  000b4	7d 0f		 jge	 SHORT $LN3@create_dow

; 74   : 	{
; 75   : 		entity_index_list [loop] = ENTITY_INDEX_CREATE_LOCAL;

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  000b9	8b 4d e8	 mov	 ecx, DWORD PTR _entity_index_list$[ebp]
  000bc	c7 04 81 fe ff
	ff ff		 mov	 DWORD PTR [ecx+eax*4], -2 ; fffffffeH

; 76   : 	}

  000c3	eb e0		 jmp	 SHORT $LN2@create_dow
$LN3@create_dow:

; 77   : 
; 78   : 	index_counter = 0;

  000c5	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _index_counter$[ebp], 0

; 79   : 
; 80   : 	num_components = downwash_database[ type ].number_of_components;

  000cc	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000cf	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?downwash_database@@3PAUDOWNWASH_DATA@@A[eax*8]
  000d6	89 4d f4	 mov	 DWORD PTR _num_components$[ebp], ecx

; 81   : 
; 82   : 	for ( comp = 0 ; comp < num_components ; comp ++ )

  000d9	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _comp$[ebp], 0
  000e0	eb 09		 jmp	 SHORT $LN7@create_dow
$LN5@create_dow:
  000e2	8b 45 f0	 mov	 eax, DWORD PTR _comp$[ebp]
  000e5	83 c0 01	 add	 eax, 1
  000e8	89 45 f0	 mov	 DWORD PTR _comp$[ebp], eax
$LN7@create_dow:
  000eb	8b 45 f0	 mov	 eax, DWORD PTR _comp$[ebp]
  000ee	3b 45 f4	 cmp	 eax, DWORD PTR _num_components$[ebp]
  000f1	7d 57		 jge	 SHORT $LN6@create_dow

; 83   : 	{
; 84   : 
; 85   : 		this_downwash_component = &(downwash_database[ type ].component[ comp ]);

  000f3	8b 45 f0	 mov	 eax, DWORD PTR _comp$[ebp]
  000f6	c1 e0 05	 shl	 eax, 5
  000f9	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  000fc	03 04 cd 04 00
	00 00		 add	 eax, DWORD PTR ?downwash_database@@3PAUDOWNWASH_DATA@@A[ecx*8+4]
  00103	89 45 e4	 mov	 DWORD PTR _this_downwash_component$[ebp], eax

; 86   : 		index_counter += create_downwash_effect_component( this_downwash_component, type, position, &entity_index_list[ index_counter ], main_rotor_radius, main_rotor_rpm, min_altitude);	

  00106	51		 push	 ecx
  00107	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _min_altitude$[ebp]
  0010c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00111	51		 push	 ecx
  00112	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _main_rotor_radius$[ebp]
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	8b 45 ec	 mov	 eax, DWORD PTR _index_counter$[ebp]
  0012a	8b 4d e8	 mov	 ecx, DWORD PTR _entity_index_list$[ebp]
  0012d	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00130	52		 push	 edx
  00131	8b 45 0c	 mov	 eax, DWORD PTR _position$[ebp]
  00134	50		 push	 eax
  00135	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  00138	51		 push	 ecx
  00139	8b 55 e4	 mov	 edx, DWORD PTR _this_downwash_component$[ebp]
  0013c	52		 push	 edx
  0013d	e8 00 00 00 00	 call	 ?create_downwash_effect_component@@YGHPAUDOWNWASH_COMPONENT@@W4DOWNWASH_TYPES@@PAUVEC3D@@PAHMMM@Z ; create_downwash_effect_component
  00142	03 45 ec	 add	 eax, DWORD PTR _index_counter$[ebp]
  00145	89 45 ec	 mov	 DWORD PTR _index_counter$[ebp], eax

; 87   : 
; 88   : 	}

  00148	eb 98		 jmp	 SHORT $LN5@create_dow
$LN6@create_dow:

; 89   : 	
; 90   : 	free_mem (entity_index_list);

  0014a	8b 45 e8	 mov	 eax, DWORD PTR _entity_index_list$[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 91   : 
; 92   : 	return 0;

  00153	33 c0		 xor	 eax, eax

; 93   : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 14 00	 ret	 20			; 00000014H
?create_downwash_effect@@YGHW4DOWNWASH_TYPES@@PAUVEC3D@@MMM@Z ENDP ; create_downwash_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
END
