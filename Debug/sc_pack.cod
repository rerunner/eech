; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\sector\sc_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_sector_pack_functions@@YGXXZ		; overload_sector_pack_functions
PUBLIC	?pack_local_sector_data@@YGXW4PACK_MODES@@@Z	; pack_local_sector_data
PUBLIC	?unpack_local_sector_data@@YGXW4PACK_MODES@@@Z	; unpack_local_sector_data
PUBLIC	?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA ; `pack_local_sector_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@ ; `string'
PUBLIC	??_C@_0L@LIIAMOHE@RLE?5SECTOR@			; `string'
PUBLIC	??_C@_0BM@BDMELEFE@SC_PACK?5?3?5packed?5?$CFd?5sectors@ ; `string'
PUBLIC	??_C@_0DM@EMCHHJLC@total_side_count?5?$DN?$DN?5?$CINUM_MAP_Z_@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA ; `unpack_local_sector_data'::`1'::__LINE__Var
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?effect_database@@3QBUEFFECT_DATA@@B:BYTE	; effect_database
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	__fltused:DWORD
;	COMDAT ?__LINE__Var@?0??unpack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA DD 012cH ; `unpack_local_sector_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DM@EMCHHJLC@total_side_count?5?$DN?$DN?5?$CINUM_MAP_Z_@
CONST	SEGMENT
??_C@_0DM@EMCHHJLC@total_side_count?5?$DN?$DN?5?$CINUM_MAP_Z_@ DB 'total_'
	DB	'side_count == (NUM_MAP_Z_SECTORS * NUM_MAP_X_SECTORS)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BDMELEFE@SC_PACK?5?3?5packed?5?$CFd?5sectors@
CONST	SEGMENT
??_C@_0BM@BDMELEFE@SC_PACK?5?3?5packed?5?$CFd?5sectors@ DB 'SC_PACK : pac'
	DB	'ked %d sectors', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LIIAMOHE@RLE?5SECTOR@
CONST	SEGMENT
??_C@_0L@LIIAMOHE@RLE?5SECTOR@ DB 'RLE SECTOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
CONST	SEGMENT
??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@ DB 'mode != P'
	DB	'ACK_MODE_UPDATE_ENTITY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\sector\sc_pac'
	DB	'k.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA DD 06bH ; `pack_local_sector_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 89   : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_pack.c
;	COMDAT ?unpack_local_sector_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv197 = -92						; size = 4
tv175 = -92						; size = 4
tv143 = -92						; size = 4
_side_count$ = -24					; size = 4
_x_sec$ = -20						; size = 4
_z_sec$ = -16						; size = 4
_side$ = -12						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_local_sector_data@@YGXW4PACK_MODES@@@Z PROC	; unpack_local_sector_data, COMDAT

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 301  : 
; 302  : 	entity
; 303  : 		*en;
; 304  : 
; 305  : 	sector
; 306  : 		*raw;
; 307  : 
; 308  : 	entity_sides
; 309  : 		side;
; 310  : 
; 311  : 	int
; 312  : 		z_sec,
; 313  : 		x_sec,
; 314  : 		side_count;
; 315  : 
; 316  : 	ASSERT (mode != PACK_MODE_UPDATE_ENTITY);

  00009	83 7d 08 03	 cmp	 DWORD PTR _mode$[ebp], 3
  0000d	75 18		 jne	 SHORT $LN18@unpack_loc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  00014	83 c0 10	 add	 eax, 16			; 00000010H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@unpack_loc:

; 317  : 
; 318  : 	if (mode == PACK_MODE_BROWSE_SESSION)

  00027	83 7d 08 02	 cmp	 DWORD PTR _mode$[ebp], 2
  0002b	75 05		 jne	 SHORT $LN19@unpack_loc

; 319  : 	{
; 320  : 		return;

  0002d	e9 be 02 00 00	 jmp	 $LN1@unpack_loc
$LN19@unpack_loc:

; 321  : 	}
; 322  : 
; 323  : 	//
; 324  : 	// RLE unencode the sector sides
; 325  : 	//
; 326  : 
; 327  : 	debug_log ("RLE SECTOR");

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LIIAMOHE@RLE?5SECTOR@
  00037	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0003c	83 c4 04	 add	 esp, 4

; 328  : 
; 329  : 	en = NULL;

  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _en$[ebp], 0

; 330  : 
; 331  : 	side = (entity_sides) unpack_int_value (NULL, INT_TYPE_SIDE);

  00046	68 bb 00 00 00	 push	 187			; 000000bbH
  0004b	6a 00		 push	 0
  0004d	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00052	89 45 f4	 mov	 DWORD PTR _side$[ebp], eax

; 332  : 
; 333  : 	side_count = unpack_int_value (NULL, INT_TYPE_LENGTH);

  00055	6a 79		 push	 121			; 00000079H
  00057	6a 00		 push	 0
  00059	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0005e	89 45 e8	 mov	 DWORD PTR _side_count$[ebp], eax

; 334  : 
; 335  : 	en = *entity_sector_map;

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx
$LN2@unpack_loc:

; 336  : 
; 337  : 	while (side_count != 0)

  0006b	83 7d e8 00	 cmp	 DWORD PTR _side_count$[ebp], 0
  0006f	74 5d		 je	 SHORT $LN3@unpack_loc
$LN4@unpack_loc:

; 338  : 	{
; 339  : 
; 340  : 		while (side_count > 0)

  00071	83 7d e8 00	 cmp	 DWORD PTR _side_count$[ebp], 0
  00075	7e 3a		 jle	 SHORT $LN5@unpack_loc

; 341  : 		{
; 342  : 
; 343  : 			raw = (sector *) get_local_entity_data (en);

  00077	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0007a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007d	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 344  : 
; 345  : 			raw->side = side;

  00080	8b 45 f4	 mov	 eax, DWORD PTR _side$[ebp]
  00083	83 e0 03	 and	 eax, 3
  00086	c1 e0 18	 shl	 eax, 24			; 00000018H
  00089	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  0008c	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0008f	81 e2 ff ff ff
	fc		 and	 edx, -50331649		; fcffffffH
  00095	0b d0		 or	 edx, eax
  00097	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0009a	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 346  : 
; 347  : 			side_count --;

  0009d	8b 45 e8	 mov	 eax, DWORD PTR _side_count$[ebp]
  000a0	83 e8 01	 sub	 eax, 1
  000a3	89 45 e8	 mov	 DWORD PTR _side_count$[ebp], eax

; 348  : 
; 349  : 			en ++;

  000a6	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000a9	83 c0 10	 add	 eax, 16			; 00000010H
  000ac	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 350  : 		}

  000af	eb c0		 jmp	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:

; 351  : 
; 352  : 		side = (entity_sides) unpack_int_value (NULL, INT_TYPE_SIDE);

  000b1	68 bb 00 00 00	 push	 187			; 000000bbH
  000b6	6a 00		 push	 0
  000b8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000bd	89 45 f4	 mov	 DWORD PTR _side$[ebp], eax

; 353  : 
; 354  : 		side_count = unpack_int_value (NULL, INT_TYPE_LENGTH);

  000c0	6a 79		 push	 121			; 00000079H
  000c2	6a 00		 push	 0
  000c4	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000c9	89 45 e8	 mov	 DWORD PTR _side_count$[ebp], eax

; 355  : 	}

  000cc	eb 9d		 jmp	 SHORT $LN2@unpack_loc
$LN3@unpack_loc:

; 356  : 
; 357  : 	//
; 358  : 	// Unpack FOG OF WAR
; 359  : 	//
; 360  : 
; 361  : 	for (z_sec = MIN_MAP_Z_SECTOR; z_sec <= MAX_MAP_Z_SECTOR; z_sec++)

  000ce	a1 18 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  000d3	89 45 f0	 mov	 DWORD PTR _z_sec$[ebp], eax
  000d6	eb 09		 jmp	 SHORT $LN8@unpack_loc
$LN6@unpack_loc:
  000d8	8b 45 f0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  000db	83 c0 01	 add	 eax, 1
  000de	89 45 f0	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN8@unpack_loc:
  000e1	8b 45 f0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  000e4	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  000ea	0f 8f c2 00 00
	00		 jg	 $LN7@unpack_loc

; 362  : 	{
; 363  : 		for (x_sec = MIN_MAP_X_SECTOR; x_sec <= MAX_MAP_X_SECTOR; x_sec++)

  000f0	a1 14 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  000f5	89 45 ec	 mov	 DWORD PTR _x_sec$[ebp], eax
  000f8	eb 09		 jmp	 SHORT $LN11@unpack_loc
$LN9@unpack_loc:
  000fa	8b 45 ec	 mov	 eax, DWORD PTR _x_sec$[ebp]
  000fd	83 c0 01	 add	 eax, 1
  00100	89 45 ec	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN11@unpack_loc:
  00103	8b 45 ec	 mov	 eax, DWORD PTR _x_sec$[ebp]
  00106	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  0010c	0f 8f 9b 00 00
	00		 jg	 $LN10@unpack_loc

; 364  : 		{
; 365  : 			en = get_local_raw_sector_entity(x_sec, z_sec);

  00112	8b 45 f0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00115	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0011c	03 45 ec	 add	 eax, DWORD PTR _x_sec$[ebp]
  0011f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00125	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00129	74 1a		 je	 SHORT $LN24@unpack_loc
  0012b	8b 55 f0	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0012e	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00135	03 55 ec	 add	 edx, DWORD PTR _x_sec$[ebp]
  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0013d	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00140	89 4d a4	 mov	 DWORD PTR tv143[ebp], ecx
  00143	eb 21		 jmp	 SHORT $LN25@unpack_loc
$LN24@unpack_loc:
  00145	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  0014b	83 c2 41	 add	 edx, 65			; 00000041H
  0014e	52		 push	 edx
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00154	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN25@unpack_loc:
  00166	8b 4d a4	 mov	 ecx, DWORD PTR tv143[ebp]
  00169	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 366  : 
; 367  : 			raw = (sector *) get_local_entity_data (en);

  0016c	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0016f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00172	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 368  : 
; 369  : 			raw->fog_of_war [ENTITY_SIDE_BLUE_FORCE] = unpack_float_value (en, FLOAT_TYPE_FOG_OF_WAR);

  00175	6a 2b		 push	 43			; 0000002bH
  00177	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00180	b9 04 00 00 00	 mov	 ecx, 4
  00185	c1 e1 00	 shl	 ecx, 0
  00188	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  0018b	d9 5c 0a 20	 fstp	 DWORD PTR [edx+ecx+32]

; 370  : 			raw->fog_of_war [ENTITY_SIDE_RED_FORCE] = unpack_float_value (en, FLOAT_TYPE_FOG_OF_WAR);

  0018f	6a 2b		 push	 43			; 0000002bH
  00191	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0019a	b9 04 00 00 00	 mov	 ecx, 4
  0019f	d1 e1		 shl	 ecx, 1
  001a1	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  001a4	d9 5c 0a 20	 fstp	 DWORD PTR [edx+ecx+32]

; 371  : 		}

  001a8	e9 4d ff ff ff	 jmp	 $LN9@unpack_loc
$LN10@unpack_loc:

; 372  : 	}

  001ad	e9 26 ff ff ff	 jmp	 $LN6@unpack_loc
$LN7@unpack_loc:

; 373  : 
; 374  : 	//
; 375  : 	// If loading game read in sector values (threat etc)
; 376  : 	//
; 377  : 
; 378  : 	if (mode == PACK_MODE_SERVER_SESSION)

  001b2	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  001b6	0f 85 34 01 00
	00		 jne	 $LN13@unpack_loc

; 379  : 	{
; 380  : 
; 381  : 		for (z_sec = MIN_MAP_Z_SECTOR; z_sec <= MAX_MAP_Z_SECTOR; z_sec++)

  001bc	a1 18 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  001c1	89 45 f0	 mov	 DWORD PTR _z_sec$[ebp], eax
  001c4	eb 09		 jmp	 SHORT $LN14@unpack_loc
$LN12@unpack_loc:
  001c6	8b 45 f0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  001c9	83 c0 01	 add	 eax, 1
  001cc	89 45 f0	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN14@unpack_loc:
  001cf	8b 45 f0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  001d2	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  001d8	0f 8f 12 01 00
	00		 jg	 $LN13@unpack_loc

; 382  : 		{
; 383  : 
; 384  : 			for (x_sec = MIN_MAP_X_SECTOR; x_sec <= MAX_MAP_X_SECTOR; x_sec++)

  001de	a1 14 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  001e3	89 45 ec	 mov	 DWORD PTR _x_sec$[ebp], eax
  001e6	eb 09		 jmp	 SHORT $LN17@unpack_loc
$LN15@unpack_loc:
  001e8	8b 45 ec	 mov	 eax, DWORD PTR _x_sec$[ebp]
  001eb	83 c0 01	 add	 eax, 1
  001ee	89 45 ec	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN17@unpack_loc:
  001f1	8b 45 ec	 mov	 eax, DWORD PTR _x_sec$[ebp]
  001f4	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  001fa	0f 8f eb 00 00
	00		 jg	 $LN16@unpack_loc

; 385  : 			{
; 386  : 
; 387  : 				en = get_local_raw_sector_entity(x_sec, z_sec);

  00200	8b 45 f0	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00203	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0020a	03 45 ec	 add	 eax, DWORD PTR _x_sec$[ebp]
  0020d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00213	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00217	74 1a		 je	 SHORT $LN26@unpack_loc
  00219	8b 55 f0	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0021c	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00223	03 55 ec	 add	 edx, DWORD PTR _x_sec$[ebp]
  00226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0022b	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0022e	89 4d a4	 mov	 DWORD PTR tv175[ebp], ecx
  00231	eb 21		 jmp	 SHORT $LN27@unpack_loc
$LN26@unpack_loc:
  00233	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  00239	83 c2 57	 add	 edx, 87			; 00000057H
  0023c	52		 push	 edx
  0023d	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00242	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00247	50		 push	 eax
  00248	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0024d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN27@unpack_loc:
  00254	8b 4d a4	 mov	 ecx, DWORD PTR tv175[ebp]
  00257	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 388  : 
; 389  : 				raw = (sector *) get_local_entity_data (en);

  0025a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0025d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00260	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 390  : 
; 391  : 				if (unpack_int_value (en, INT_TYPE_VALID))

  00263	68 ef 00 00 00	 push	 239			; 000000efH
  00268	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00271	85 c0		 test	 eax, eax
  00273	74 12		 je	 SHORT $LN21@unpack_loc

; 392  : 				{
; 393  : 
; 394  : 					unpack_list_root (en, LIST_TYPE_SECTOR_TASK, &raw->sector_task_root);

  00275	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00278	83 c0 04	 add	 eax, 4
  0027b	50		 push	 eax
  0027c	6a 22		 push	 34			; 00000022H
  0027e	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00281	51		 push	 ecx
  00282	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root
$LN21@unpack_loc:

; 395  : 				}
; 396  : 
; 397  : 				if (unpack_int_value (en, INT_TYPE_VALID))

  00287	68 ef 00 00 00	 push	 239			; 000000efH
  0028c	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0028f	50		 push	 eax
  00290	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00295	85 c0		 test	 eax, eax
  00297	74 12		 je	 SHORT $LN22@unpack_loc

; 398  : 				{
; 399  : 
; 400  : 					unpack_list_root (en, LIST_TYPE_SPECIAL_EFFECT, &raw->special_effect_root);

  00299	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0029c	83 c0 08	 add	 eax, 8
  0029f	50		 push	 eax
  002a0	6a 24		 push	 36			; 00000024H
  002a2	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  002a5	51		 push	 ecx
  002a6	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root
$LN22@unpack_loc:

; 401  : 				}
; 402  : 
; 403  : 				//debug_log ("SC_PACK: unpacking sector %d, %d", raw->x_sector, raw->z_sector);
; 404  : 
; 405  : 				raw->keysite_count = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_COUNT);

  002ab	6a 11		 push	 17			; 00000011H
  002ad	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  002b0	50		 push	 eax
  002b1	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002b6	89 45 a4	 mov	 DWORD PTR tv197[ebp], eax
  002b9	8b 4d a4	 mov	 ecx, DWORD PTR tv197[ebp]
  002bc	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  002c2	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  002c5	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002c8	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  002cd	0b c1		 or	 eax, ecx
  002cf	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  002d2	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 406  : 
; 407  : 				raw->tallest_structure_height = unpack_float_value (en, FLOAT_TYPE_PROTOTYPE_1);

  002d5	6a 64		 push	 100			; 00000064H
  002d7	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  002da	50		 push	 eax
  002db	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  002e0	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  002e3	d9 59 10	 fstp	 DWORD PTR [ecx+16]

; 408  : 			}

  002e6	e9 fd fe ff ff	 jmp	 $LN15@unpack_loc
$LN16@unpack_loc:

; 409  : 		}

  002eb	e9 d6 fe ff ff	 jmp	 $LN12@unpack_loc
$LN13@unpack_loc:
$LN1@unpack_loc:

; 410  : 	}
; 411  : }

  002f0	5f		 pop	 edi
  002f1	5e		 pop	 esi
  002f2	5b		 pop	 ebx
  002f3	8b e5		 mov	 esp, ebp
  002f5	5d		 pop	 ebp
  002f6	c2 04 00	 ret	 4
?unpack_local_sector_data@@YGXW4PACK_MODES@@@Z ENDP	; unpack_local_sector_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_pack.c
;	COMDAT ?pack_local_sector_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv271 = -104						; size = 4
tv264 = -100						; size = 4
tv237 = -100						; size = 4
tv205 = -100						; size = 4
tv145 = -100						; size = 4
tv84 = -100						; size = 4
_total_side_count$ = -32				; size = 4
_z_sec$ = -28						; size = 4
_x_sec$ = -24						; size = 4
_side_count$ = -20					; size = 4
_sector_pack_size$ = -16				; size = 4
_current_side$ = -12					; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_local_sector_data@@YGXW4PACK_MODES@@@Z PROC	; pack_local_sector_data, COMDAT

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 108  : 	entity
; 109  : 		*en;
; 110  : 
; 111  : 	sector
; 112  : 		*raw;
; 113  : 
; 114  : 	entity_sides
; 115  : 		current_side;
; 116  : 
; 117  : 	int
; 118  : 		sector_pack_size,
; 119  : 		side_count,
; 120  : 		x_sec,
; 121  : 		z_sec,
; 122  : 		total_side_count;
; 123  : 
; 124  : 	ASSERT (mode != PACK_MODE_UPDATE_ENTITY);

  00009	83 7d 08 03	 cmp	 DWORD PTR _mode$[ebp], 3
  0000d	75 18		 jne	 SHORT $LN20@pack_local
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN20@pack_local:

; 125  : 
; 126  : 	if (mode == PACK_MODE_BROWSE_SESSION)

  00027	83 7d 08 02	 cmp	 DWORD PTR _mode$[ebp], 2
  0002b	75 05		 jne	 SHORT $LN21@pack_local

; 127  : 	{
; 128  : 		return;

  0002d	e9 3a 05 00 00	 jmp	 $LN1@pack_local
$LN21@pack_local:

; 129  : 	}
; 130  : 
; 131  : 	//
; 132  : 	// RLE encode the sector sides
; 133  : 	//
; 134  : 
; 135  : 	debug_log ("RLE SECTOR");

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LIIAMOHE@RLE?5SECTOR@
  00037	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0003c	83 c4 04	 add	 esp, 4

; 136  : 
; 137  : 	sector_pack_size = 0;

  0003f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _sector_pack_size$[ebp], 0

; 138  : 
; 139  : 	en = get_local_raw_sector_entity (0, 0);

  00046	6b 05 08 00 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8, 0
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00053	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00057	74 14		 je	 SHORT $LN31@pack_local
  00059	6b 15 08 00 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8, 0
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00065	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00068	89 4d 9c	 mov	 DWORD PTR tv84[ebp], ecx
  0006b	eb 21		 jmp	 SHORT $LN32@pack_local
$LN31@pack_local:
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  00073	83 c2 20	 add	 edx, 32			; 00000020H
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00087	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN32@pack_local:
  0008e	8b 4d 9c	 mov	 ecx, DWORD PTR tv84[ebp]
  00091	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 140  : 
; 141  : 	raw = (sector *) get_local_entity_data (en);

  00094	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 142  : 
; 143  : 	pack_int_value (NULL, INT_TYPE_SIDE, raw->side);

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000a0	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000a3	c1 e9 18	 shr	 ecx, 24			; 00000018H
  000a6	83 e1 03	 and	 ecx, 3
  000a9	51		 push	 ecx
  000aa	68 bb 00 00 00	 push	 187			; 000000bbH
  000af	6a 00		 push	 0
  000b1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 144  : 
; 145  : 	sector_pack_size += NUM_SIDE_BITS;

  000b6	8b 45 f0	 mov	 eax, DWORD PTR _sector_pack_size$[ebp]
  000b9	83 c0 02	 add	 eax, 2
  000bc	89 45 f0	 mov	 DWORD PTR _sector_pack_size$[ebp], eax

; 146  : 
; 147  : 	current_side = (entity_sides) raw->side;

  000bf	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000c2	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000c5	c1 e9 18	 shr	 ecx, 24			; 00000018H
  000c8	83 e1 03	 and	 ecx, 3
  000cb	89 4d f4	 mov	 DWORD PTR _current_side$[ebp], ecx

; 148  : 
; 149  : 	side_count = 0;

  000ce	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _side_count$[ebp], 0

; 150  : 
; 151  : 	total_side_count = 0;

  000d5	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _total_side_count$[ebp], 0

; 152  : 
; 153  : 	for (z_sec = MIN_MAP_Z_SECTOR; z_sec <= MAX_MAP_Z_SECTOR; z_sec++)

  000dc	a1 18 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  000e1	89 45 e4	 mov	 DWORD PTR _z_sec$[ebp], eax
  000e4	eb 09		 jmp	 SHORT $LN4@pack_local
$LN2@pack_local:
  000e6	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  000e9	83 c0 01	 add	 eax, 1
  000ec	89 45 e4	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN4@pack_local:
  000ef	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  000f2	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  000f8	0f 8f 02 01 00
	00		 jg	 $LN3@pack_local

; 154  : 	{
; 155  : 
; 156  : 		for (x_sec = MIN_MAP_X_SECTOR; x_sec <= MAX_MAP_X_SECTOR; x_sec++)

  000fe	a1 14 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  00103	89 45 e8	 mov	 DWORD PTR _x_sec$[ebp], eax
  00106	eb 09		 jmp	 SHORT $LN7@pack_local
$LN5@pack_local:
  00108	8b 45 e8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  0010b	83 c0 01	 add	 eax, 1
  0010e	89 45 e8	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN7@pack_local:
  00111	8b 45 e8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  00114	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  0011a	0f 8f db 00 00
	00		 jg	 $LN6@pack_local

; 157  : 		{
; 158  : 
; 159  : 			en = get_local_raw_sector_entity(x_sec, z_sec);

  00120	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00123	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0012a	03 45 e8	 add	 eax, DWORD PTR _x_sec$[ebp]
  0012d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00133	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00137	74 1a		 je	 SHORT $LN33@pack_local
  00139	8b 55 e4	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0013c	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00143	03 55 e8	 add	 edx, DWORD PTR _x_sec$[ebp]
  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0014b	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0014e	89 4d 9c	 mov	 DWORD PTR tv145[ebp], ecx
  00151	eb 21		 jmp	 SHORT $LN34@pack_local
$LN33@pack_local:
  00153	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  00159	83 c2 34	 add	 edx, 52			; 00000034H
  0015c	52		 push	 edx
  0015d	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00162	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00167	50		 push	 eax
  00168	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016d	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN34@pack_local:
  00174	8b 4d 9c	 mov	 ecx, DWORD PTR tv145[ebp]
  00177	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 160  : 
; 161  : 			raw = (sector *) get_local_entity_data (en);

  0017a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0017d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00180	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 162  : 
; 163  : 			if (current_side != raw->side)

  00183	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00186	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00189	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0018c	83 e1 03	 and	 ecx, 3
  0018f	39 4d f4	 cmp	 DWORD PTR _current_side$[ebp], ecx
  00192	74 59		 je	 SHORT $LN22@pack_local

; 164  : 			{
; 165  : 
; 166  : 				current_side = (entity_sides) raw->side;

  00194	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00197	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0019a	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0019d	83 e1 03	 and	 ecx, 3
  001a0	89 4d f4	 mov	 DWORD PTR _current_side$[ebp], ecx

; 167  : 
; 168  : 				pack_int_value (NULL, INT_TYPE_LENGTH, side_count);

  001a3	8b 45 ec	 mov	 eax, DWORD PTR _side_count$[ebp]
  001a6	50		 push	 eax
  001a7	6a 79		 push	 121			; 00000079H
  001a9	6a 00		 push	 0
  001ab	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 169  : 
; 170  : 				#if DEBUG_MODULE
; 171  : 
; 172  : 				debug_log ("SC_PACK : packed %d sectors for %s", side_count, entity_side_names [current_side]);
; 173  : 
; 174  : 				#endif
; 175  : 
; 176  : 				total_side_count += side_count;

  001b0	8b 45 e0	 mov	 eax, DWORD PTR _total_side_count$[ebp]
  001b3	03 45 ec	 add	 eax, DWORD PTR _side_count$[ebp]
  001b6	89 45 e0	 mov	 DWORD PTR _total_side_count$[ebp], eax

; 177  : 
; 178  : 				sector_pack_size += NUM_LENGTH_BITS;

  001b9	8b 45 f0	 mov	 eax, DWORD PTR _sector_pack_size$[ebp]
  001bc	83 c0 10	 add	 eax, 16			; 00000010H
  001bf	89 45 f0	 mov	 DWORD PTR _sector_pack_size$[ebp], eax

; 179  : 
; 180  : 				pack_int_value (NULL, INT_TYPE_SIDE, raw->side);

  001c2	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  001c5	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  001c8	c1 e9 18	 shr	 ecx, 24			; 00000018H
  001cb	83 e1 03	 and	 ecx, 3
  001ce	51		 push	 ecx
  001cf	68 bb 00 00 00	 push	 187			; 000000bbH
  001d4	6a 00		 push	 0
  001d6	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 181  : 
; 182  : 				sector_pack_size += NUM_SIDE_BITS;

  001db	8b 45 f0	 mov	 eax, DWORD PTR _sector_pack_size$[ebp]
  001de	83 c0 02	 add	 eax, 2
  001e1	89 45 f0	 mov	 DWORD PTR _sector_pack_size$[ebp], eax

; 183  : 
; 184  : 				side_count = 1;

  001e4	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _side_count$[ebp], 1

; 185  : 			}
; 186  : 			else

  001eb	eb 09		 jmp	 SHORT $LN23@pack_local
$LN22@pack_local:

; 187  : 			{
; 188  : 
; 189  : 				side_count ++;

  001ed	8b 45 ec	 mov	 eax, DWORD PTR _side_count$[ebp]
  001f0	83 c0 01	 add	 eax, 1
  001f3	89 45 ec	 mov	 DWORD PTR _side_count$[ebp], eax
$LN23@pack_local:

; 190  : 			}
; 191  : 		}

  001f6	e9 0d ff ff ff	 jmp	 $LN5@pack_local
$LN6@pack_local:

; 192  : 	}

  001fb	e9 e6 fe ff ff	 jmp	 $LN2@pack_local
$LN3@pack_local:

; 193  : 
; 194  : 	pack_int_value (NULL, INT_TYPE_LENGTH, side_count);

  00200	8b 45 ec	 mov	 eax, DWORD PTR _side_count$[ebp]
  00203	50		 push	 eax
  00204	6a 79		 push	 121			; 00000079H
  00206	6a 00		 push	 0
  00208	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 195  : 
; 196  : 	#if DEBUG_MODULE
; 197  : 
; 198  : 	debug_log ("SC_PACK : packed %d sectors for %s", side_count, entity_side_names [current_side]);
; 199  : 
; 200  : 	#endif
; 201  : 
; 202  : 	total_side_count += side_count;

  0020d	8b 45 e0	 mov	 eax, DWORD PTR _total_side_count$[ebp]
  00210	03 45 ec	 add	 eax, DWORD PTR _side_count$[ebp]
  00213	89 45 e0	 mov	 DWORD PTR _total_side_count$[ebp], eax

; 203  : 
; 204  : 	sector_pack_size += NUM_LENGTH_BITS;

  00216	8b 45 f0	 mov	 eax, DWORD PTR _sector_pack_size$[ebp]
  00219	83 c0 10	 add	 eax, 16			; 00000010H
  0021c	89 45 f0	 mov	 DWORD PTR _sector_pack_size$[ebp], eax

; 205  : 
; 206  : 	//
; 207  : 	// Termination
; 208  : 	//
; 209  : 
; 210  : 	pack_int_value (NULL, INT_TYPE_SIDE, ENTITY_SIDE_NEUTRAL);

  0021f	6a 00		 push	 0
  00221	68 bb 00 00 00	 push	 187			; 000000bbH
  00226	6a 00		 push	 0
  00228	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 211  : 	sector_pack_size += NUM_SIDE_BITS;

  0022d	8b 45 f0	 mov	 eax, DWORD PTR _sector_pack_size$[ebp]
  00230	83 c0 02	 add	 eax, 2
  00233	89 45 f0	 mov	 DWORD PTR _sector_pack_size$[ebp], eax

; 212  : 
; 213  : 	pack_int_value (NULL, INT_TYPE_LENGTH, 0);

  00236	6a 00		 push	 0
  00238	6a 79		 push	 121			; 00000079H
  0023a	6a 00		 push	 0
  0023c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 214  : 	sector_pack_size += NUM_LENGTH_BITS;

  00241	8b 45 f0	 mov	 eax, DWORD PTR _sector_pack_size$[ebp]
  00244	83 c0 10	 add	 eax, 16			; 00000010H
  00247	89 45 f0	 mov	 DWORD PTR _sector_pack_size$[ebp], eax

; 215  : 
; 216  : 	debug_log ("SC_PACK : packed %d sectors", total_side_count);

  0024a	8b 45 e0	 mov	 eax, DWORD PTR _total_side_count$[ebp]
  0024d	50		 push	 eax
  0024e	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BDMELEFE@SC_PACK?5?3?5packed?5?$CFd?5sectors@
  00253	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00258	83 c4 08	 add	 esp, 8

; 217  : 
; 218  : 	ASSERT (total_side_count == (NUM_MAP_Z_SECTORS * NUM_MAP_X_SECTORS));

  0025b	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  00260	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00267	39 45 e0	 cmp	 DWORD PTR _total_side_count$[ebp], eax
  0026a	74 18		 je	 SHORT $LN24@pack_local
  0026c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  00271	83 c0 6f	 add	 eax, 111		; 0000006fH
  00274	50		 push	 eax
  00275	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027a	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@EMCHHJLC@total_side_count?5?$DN?$DN?5?$CINUM_MAP_Z_@
  0027f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN24@pack_local:

; 219  : 
; 220  : 	//
; 221  : 	// Pack FOG OF WAR
; 222  : 	//
; 223  : 
; 224  : 	for (z_sec = MIN_MAP_Z_SECTOR; z_sec <= MAX_MAP_Z_SECTOR; z_sec++)

  00284	a1 18 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  00289	89 45 e4	 mov	 DWORD PTR _z_sec$[ebp], eax
  0028c	eb 09		 jmp	 SHORT $LN10@pack_local
$LN8@pack_local:
  0028e	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00291	83 c0 01	 add	 eax, 1
  00294	89 45 e4	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN10@pack_local:
  00297	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0029a	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  002a0	0f 8f d2 00 00
	00		 jg	 $LN9@pack_local

; 225  : 	{
; 226  : 		for (x_sec = MIN_MAP_X_SECTOR; x_sec <= MAX_MAP_X_SECTOR; x_sec++)

  002a6	a1 14 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  002ab	89 45 e8	 mov	 DWORD PTR _x_sec$[ebp], eax
  002ae	eb 09		 jmp	 SHORT $LN13@pack_local
$LN11@pack_local:
  002b0	8b 45 e8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  002b3	83 c0 01	 add	 eax, 1
  002b6	89 45 e8	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN13@pack_local:
  002b9	8b 45 e8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  002bc	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  002c2	0f 8f ab 00 00
	00		 jg	 $LN12@pack_local

; 227  : 		{
; 228  : 			en = get_local_raw_sector_entity(x_sec, z_sec);

  002c8	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  002cb	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  002d2	03 45 e8	 add	 eax, DWORD PTR _x_sec$[ebp]
  002d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  002db	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  002df	74 1a		 je	 SHORT $LN35@pack_local
  002e1	8b 55 e4	 mov	 edx, DWORD PTR _z_sec$[ebp]
  002e4	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  002eb	03 55 e8	 add	 edx, DWORD PTR _x_sec$[ebp]
  002ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  002f3	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  002f6	89 4d 9c	 mov	 DWORD PTR tv205[ebp], ecx
  002f9	eb 21		 jmp	 SHORT $LN36@pack_local
$LN35@pack_local:
  002fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  00301	83 c2 79	 add	 edx, 121		; 00000079H
  00304	52		 push	 edx
  00305	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0030f	50		 push	 eax
  00310	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00315	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN36@pack_local:
  0031c	8b 4d 9c	 mov	 ecx, DWORD PTR tv205[ebp]
  0031f	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 229  : 
; 230  : 			raw = (sector *) get_local_entity_data (en);

  00322	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00325	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00328	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 231  : 
; 232  : 			pack_float_value (en, FLOAT_TYPE_FOG_OF_WAR, raw->fog_of_war [ENTITY_SIDE_BLUE_FORCE]);

  0032b	b8 04 00 00 00	 mov	 eax, 4
  00330	c1 e0 00	 shl	 eax, 0
  00333	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00336	51		 push	 ecx
  00337	f3 0f 10 44 01
	20		 movss	 xmm0, DWORD PTR [ecx+eax+32]
  0033d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00342	6a 2b		 push	 43			; 0000002bH
  00344	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00347	52		 push	 edx
  00348	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 233  : 			pack_float_value (en, FLOAT_TYPE_FOG_OF_WAR, raw->fog_of_war [ENTITY_SIDE_RED_FORCE]);

  0034d	b8 04 00 00 00	 mov	 eax, 4
  00352	d1 e0		 shl	 eax, 1
  00354	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00357	51		 push	 ecx
  00358	f3 0f 10 44 01
	20		 movss	 xmm0, DWORD PTR [ecx+eax+32]
  0035e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00363	6a 2b		 push	 43			; 0000002bH
  00365	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00368	52		 push	 edx
  00369	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 234  : 		}

  0036e	e9 3d ff ff ff	 jmp	 $LN11@pack_local
$LN12@pack_local:

; 235  : 	}

  00373	e9 16 ff ff ff	 jmp	 $LN8@pack_local
$LN9@pack_local:

; 236  : 
; 237  : 	//
; 238  : 	// If saving game write out sector values (threat etc)
; 239  : 	//
; 240  : 
; 241  : 	if (mode == PACK_MODE_SERVER_SESSION)

  00378	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0037c	0f 85 ea 01 00
	00		 jne	 $LN15@pack_local

; 242  : 	{
; 243  : 
; 244  : 		for (z_sec = MIN_MAP_Z_SECTOR; z_sec <= MAX_MAP_Z_SECTOR; z_sec++)

  00382	a1 18 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  00387	89 45 e4	 mov	 DWORD PTR _z_sec$[ebp], eax
  0038a	eb 09		 jmp	 SHORT $LN16@pack_local
$LN14@pack_local:
  0038c	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0038f	83 c0 01	 add	 eax, 1
  00392	89 45 e4	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN16@pack_local:
  00395	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00398	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  0039e	0f 8f c8 01 00
	00		 jg	 $LN15@pack_local

; 245  : 		{
; 246  : 
; 247  : 			for (x_sec = MIN_MAP_X_SECTOR; x_sec <= MAX_MAP_X_SECTOR; x_sec++)

  003a4	a1 14 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  003a9	89 45 e8	 mov	 DWORD PTR _x_sec$[ebp], eax
  003ac	eb 09		 jmp	 SHORT $LN19@pack_local
$LN17@pack_local:
  003ae	8b 45 e8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  003b1	83 c0 01	 add	 eax, 1
  003b4	89 45 e8	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN19@pack_local:
  003b7	8b 45 e8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  003ba	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  003c0	0f 8f a1 01 00
	00		 jg	 $LN18@pack_local

; 248  : 			{
; 249  : 
; 250  : 				en = get_local_raw_sector_entity(x_sec, z_sec);

  003c6	8b 45 e4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  003c9	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  003d0	03 45 e8	 add	 eax, DWORD PTR _x_sec$[ebp]
  003d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  003d9	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  003dd	74 1a		 je	 SHORT $LN37@pack_local
  003df	8b 55 e4	 mov	 edx, DWORD PTR _z_sec$[ebp]
  003e2	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  003e9	03 55 e8	 add	 edx, DWORD PTR _x_sec$[ebp]
  003ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  003f1	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  003f4	89 4d 9c	 mov	 DWORD PTR tv237[ebp], ecx
  003f7	eb 24		 jmp	 SHORT $LN38@pack_local
$LN37@pack_local:
  003f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_sector_data@@YGXW4PACK_MODES@@@Z@4JA
  003ff	81 c2 8f 00 00
	00		 add	 edx, 143		; 0000008fH
  00405	52		 push	 edx
  00406	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00410	50		 push	 eax
  00411	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00416	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv237[ebp], 0
$LN38@pack_local:
  0041d	8b 4d 9c	 mov	 ecx, DWORD PTR tv237[ebp]
  00420	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 251  : 
; 252  : 				raw = (sector *) get_local_entity_data (en);

  00423	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00426	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00429	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 253  : 
; 254  : 				/////////////////////////////////////////////////////////////////
; 255  : 				if (raw->sector_task_root.first_child)

  0042c	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0042f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00433	74 24		 je	 SHORT $LN26@pack_local

; 256  : 				{
; 257  : 
; 258  : 					pack_int_value (en, INT_TYPE_VALID, TRUE);

  00435	6a 01		 push	 1
  00437	68 ef 00 00 00	 push	 239			; 000000efH
  0043c	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0043f	50		 push	 eax
  00440	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 259  : 
; 260  : 					pack_list_root (en, LIST_TYPE_SECTOR_TASK, &raw->sector_task_root);

  00445	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00448	83 c0 04	 add	 eax, 4
  0044b	50		 push	 eax
  0044c	6a 22		 push	 34			; 00000022H
  0044e	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00451	51		 push	 ecx
  00452	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 261  : 				}
; 262  : 				else

  00457	eb 10		 jmp	 SHORT $LN27@pack_local
$LN26@pack_local:

; 263  : 				{
; 264  : 
; 265  : 					pack_int_value (en, INT_TYPE_VALID, FALSE);

  00459	6a 00		 push	 0
  0045b	68 ef 00 00 00	 push	 239			; 000000efH
  00460	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00463	50		 push	 eax
  00464	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN27@pack_local:

; 266  : 				}
; 267  : 				/////////////////////////////////////////////////////////////////
; 268  : 
; 269  : 				// TODO: should probably save the other elements of the list which doesn't have the construct_locally attribute
; 270  : 				if (raw->special_effect_root.first_child
; 271  : 					&& !effect_database [get_local_entity_int_value (raw->special_effect_root.first_child, INT_TYPE_ENTITY_SUB_TYPE)].constructed_locally)

  00469	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0046c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00470	0f 84 ab 00 00
	00		 je	 $LN28@pack_local
  00476	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00479	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0047d	74 0d		 je	 SHORT $LN39@pack_local
  0047f	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00482	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00485	8b 02		 mov	 eax, DWORD PTR [edx]
  00487	89 45 9c	 mov	 DWORD PTR tv264[ebp], eax
  0048a	eb 1d		 jmp	 SHORT $LN40@pack_local
$LN39@pack_local:
  0048c	68 0f 01 00 00	 push	 271			; 0000010fH
  00491	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00496	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0049c	51		 push	 ecx
  0049d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a2	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv264[ebp], 0
$LN40@pack_local:
  004a9	ba 01 00 00 00	 mov	 edx, 1
  004ae	85 d2		 test	 edx, edx
  004b0	74 09		 je	 SHORT $LN41@pack_local
  004b2	c7 45 98 34 00
	00 00		 mov	 DWORD PTR tv271[ebp], 52 ; 00000034H
  004b9	eb 1c		 jmp	 SHORT $LN42@pack_local
$LN41@pack_local:
  004bb	68 0f 01 00 00	 push	 271			; 0000010fH
  004c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EKGEGEFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004ca	50		 push	 eax
  004cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d0	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv271[ebp], 0
$LN42@pack_local:
  004d7	6a 34		 push	 52			; 00000034H
  004d9	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  004dc	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  004df	52		 push	 edx
  004e0	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv264[ebp], 1116
  004e7	8b 4d 98	 mov	 ecx, DWORD PTR tv271[ebp]
  004ea	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004f1	ff d2		 call	 edx
  004f3	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR ?effect_database@@3QBUEFFECT_DATA@@B[eax*4], 0
  004fb	75 24		 jne	 SHORT $LN28@pack_local

; 272  : 				{
; 273  : 					pack_int_value (en, INT_TYPE_VALID, TRUE);

  004fd	6a 01		 push	 1
  004ff	68 ef 00 00 00	 push	 239			; 000000efH
  00504	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00507	50		 push	 eax
  00508	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 274  : 
; 275  : 					pack_list_root (en, LIST_TYPE_SPECIAL_EFFECT, &raw->special_effect_root);

  0050d	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00510	83 c0 08	 add	 eax, 8
  00513	50		 push	 eax
  00514	6a 24		 push	 36			; 00000024H
  00516	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00519	51		 push	 ecx
  0051a	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 276  : 				}
; 277  : 				else

  0051f	eb 10		 jmp	 SHORT $LN29@pack_local
$LN28@pack_local:

; 278  : 				{
; 279  : 
; 280  : 					pack_int_value (en, INT_TYPE_VALID, FALSE);

  00521	6a 00		 push	 0
  00523	68 ef 00 00 00	 push	 239			; 000000efH
  00528	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0052b	50		 push	 eax
  0052c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN29@pack_local:

; 281  : 				}
; 282  : 
; 283  : 				//debug_log ("SC_PACK: packing sector %d, %d", raw->x_sector, raw->z_sector);
; 284  : 
; 285  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_COUNT, raw->keysite_count);

  00531	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00534	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00537	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0053d	51		 push	 ecx
  0053e	6a 11		 push	 17			; 00000011H
  00540	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00543	52		 push	 edx
  00544	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 286  : 
; 287  : 				pack_float_value (en, FLOAT_TYPE_PROTOTYPE_1, raw->tallest_structure_height);

  00549	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0054c	51		 push	 ecx
  0054d	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00552	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00557	6a 64		 push	 100			; 00000064H
  00559	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0055c	51		 push	 ecx
  0055d	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 288  : 			}

  00562	e9 47 fe ff ff	 jmp	 $LN17@pack_local
$LN18@pack_local:

; 289  : 		}

  00567	e9 20 fe ff ff	 jmp	 $LN14@pack_local
$LN15@pack_local:
$LN1@pack_local:

; 290  : 	}
; 291  : 
; 292  : 	//debug_log ("SC_PACK: packing %d sectors took %d bytes (%d bits)", NUM_MAP_X_SECTORS * NUM_MAP_Z_SECTORS, sector_pack_size / 8, sector_pack_size);
; 293  : }

  0056c	5f		 pop	 edi
  0056d	5e		 pop	 esi
  0056e	5b		 pop	 ebx
  0056f	8b e5		 mov	 esp, ebp
  00571	5d		 pop	 ebp
  00572	c2 04 00	 ret	 4
?pack_local_sector_data@@YGXW4PACK_MODES@@@Z ENDP	; pack_local_sector_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_pack.c
;	COMDAT ?overload_sector_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_sector_pack_functions@@YGXXZ PROC		; overload_sector_pack_functions, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   : 	fn_pack_local_entity_data[ENTITY_TYPE_SECTOR]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 19	 imul	 ecx, eax, 25
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 98   : 
; 99   : 	fn_unpack_local_entity_data[ENTITY_TYPE_SECTOR]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 19	 imul	 ecx, eax, 25
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 100  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_sector_pack_functions@@YGXXZ ENDP		; overload_sector_pack_functions
_TEXT	ENDS
END
