; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\weapon\wn_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_weapon_pack_functions@@YGXXZ		; overload_weapon_pack_functions
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@PHNHBLBC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3dcccccd
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memset:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; pack_list_link
EXTRN	?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; unpack_list_link
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?pack_mobile_data@@YGXPAUENTITY@@PAUMOBILE@@W4PACK_MODES@@@Z:PROC ; pack_mobile_data
EXTRN	?unpack_mobile_data@@YGXPAUENTITY@@PAUMOBILE@@W4PACK_MODES@@@Z:PROC ; unpack_mobile_data
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 099H ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@PHNHBLBC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@PHNHBLBC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_pack'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv147 = -84						; size = 4
tv131 = -84						; size = 4
tv279 = -80						; size = 4
tv213 = -80						; size = 4
tv203 = -80						; size = 4
tv189 = -80						; size = 4
tv148 = -80						; size = 4
tv132 = -80						; size = 4
tv70 = -80						; size = 4
$T1 = -76						; size = 4
_raw$2 = -8						; size = 4
_index$3 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 154  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@PHNHBLBC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 155  : 
; 156  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c 93 02 00
	00		 jl	 $LN2@unpack_loc
  0003d	83 7d b0 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN6@unpack_loc
  00043	e9 88 02 00 00	 jmp	 $LN2@unpack_loc
$LN6@unpack_loc:

; 157  : 	{
; 158  : 		////////////////////////////////////////
; 159  : 		case PACK_MODE_SERVER_SESSION:
; 160  : 		case PACK_MODE_CLIENT_SESSION:
; 161  : 		////////////////////////////////////////
; 162  : 		{
; 163  : 			int
; 164  : 				index;
; 165  : 
; 166  : 			weapon
; 167  : 				*raw;
; 168  : 
; 169  : 			//
; 170  : 			// create entity
; 171  : 			//
; 172  : 
; 173  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 fc	 mov	 DWORD PTR _index$3[ebp], eax

; 174  : 
; 175  : 			en = get_free_entity (index);

  00050	8b 45 fc	 mov	 eax, DWORD PTR _index$3[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 176  : 
; 177  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 178  : 
; 179  : 			raw = (weapon *) malloc_fast_mem (sizeof (weapon));

  00064	68 a8 00 00 00	 push	 168			; 000000a8H
  00069	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0006e	89 45 f8	 mov	 DWORD PTR _raw$2[ebp], eax

; 180  : 
; 181  : 			set_local_entity_data (en, raw);

  00071	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  00077	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 182  : 
; 183  : 			memset (raw, 0, sizeof (weapon));

  0007a	68 a8 00 00 00	 push	 168			; 000000a8H
  0007f	6a 00		 push	 0
  00081	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 _memset
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 184  : 
; 185  : 			//
; 186  : 			// unpack data (in exactly the same order as the data was packed)
; 187  : 			//
; 188  : 
; 189  : 			unpack_mobile_data (en, &raw->mob, mode);

  0008d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  00094	51		 push	 ecx
  00095	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00098	52		 push	 edx
  00099	e8 00 00 00 00	 call	 ?unpack_mobile_data@@YGXPAUENTITY@@PAUMOBILE@@W4PACK_MODES@@@Z ; unpack_mobile_data

; 190  : 
; 191  : 			//
; 192  : 			// safeguard position from truncation errors
; 193  : 			//
; 194  : 
; 195  : 			raw->mob.position.x = bound (raw->mob.position.x, MIN_MAP_X, MAX_MAP_X);

  0009e	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  000a1	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  000a9	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  000ad	76 0f		 jbe	 SHORT $LN13@unpack_loc
  000af	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  000b7	f3 0f 11 45 b0	 movss	 DWORD PTR tv132[ebp], xmm0
  000bc	eb 37		 jmp	 SHORT $LN14@unpack_loc
$LN13@unpack_loc:
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  000c1	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  000c6	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  000cd	76 0f		 jbe	 SHORT $LN11@unpack_loc
  000cf	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  000d7	f3 0f 11 45 ac	 movss	 DWORD PTR tv131[ebp], xmm0
  000dc	eb 0d		 jmp	 SHORT $LN12@unpack_loc
$LN11@unpack_loc:
  000de	8b 55 f8	 mov	 edx, DWORD PTR _raw$2[ebp]
  000e1	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  000e6	f3 0f 11 45 ac	 movss	 DWORD PTR tv131[ebp], xmm0
$LN12@unpack_loc:
  000eb	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv131[ebp]
  000f0	f3 0f 11 45 b0	 movss	 DWORD PTR tv132[ebp], xmm0
$LN14@unpack_loc:
  000f5	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  000f8	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv132[ebp]
  000fd	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 196  : 
; 197  : 			raw->mob.position.z = bound (raw->mob.position.z, MIN_MAP_Z, MAX_MAP_Z);

  00102	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  00105	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0010d	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  00111	76 0f		 jbe	 SHORT $LN17@unpack_loc
  00113	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0011b	f3 0f 11 45 b0	 movss	 DWORD PTR tv148[ebp], xmm0
  00120	eb 37		 jmp	 SHORT $LN18@unpack_loc
$LN17@unpack_loc:
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  00125	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  0012a	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00131	76 0f		 jbe	 SHORT $LN15@unpack_loc
  00133	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0013b	f3 0f 11 45 ac	 movss	 DWORD PTR tv147[ebp], xmm0
  00140	eb 0d		 jmp	 SHORT $LN16@unpack_loc
$LN15@unpack_loc:
  00142	8b 55 f8	 mov	 edx, DWORD PTR _raw$2[ebp]
  00145	f3 0f 10 42 0c	 movss	 xmm0, DWORD PTR [edx+12]
  0014a	f3 0f 11 45 ac	 movss	 DWORD PTR tv147[ebp], xmm0
$LN16@unpack_loc:
  0014f	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv147[ebp]
  00154	f3 0f 11 45 b0	 movss	 DWORD PTR tv148[ebp], xmm0
$LN18@unpack_loc:
  00159	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  0015c	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv148[ebp]
  00161	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 198  : 
; 199  : 			raw->mob.position.y = max (raw->mob.position.y, get_3d_terrain_elevation (raw->mob.position.x, raw->mob.position.z) + 0.10f);

  00166	6a 00		 push	 0
  00168	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  0016b	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00170	51		 push	 ecx
  00171	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00176	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  00179	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0017e	51		 push	 ecx
  0017f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00184	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00189	d9 5d b0	 fstp	 DWORD PTR tv279[ebp]
  0018c	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv279[ebp]
  00191	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3dcccccd
  00199	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  0019e	8d 55 b4	 lea	 edx, DWORD PTR $T1[ebp]
  001a1	52		 push	 edx
  001a2	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  001a5	83 c0 08	 add	 eax, 8
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  001ae	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  001b1	8b 10		 mov	 edx, DWORD PTR [eax]
  001b3	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 200  : 
; 201  : 			//
; 202  : 			//
; 203  : 			//
; 204  : 
; 205  : 			raw->mob.velocity = unpack_float_value (en, FLOAT_TYPE_VERY_HIGH_VELOCITY);

  001b6	68 94 00 00 00	 push	 148			; 00000094H
  001bb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001be	50		 push	 eax
  001bf	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001c4	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  001c7	d9 59 40	 fstp	 DWORD PTR [ecx+64]

; 206  : 
; 207  : 			raw->weapon_lifetime = unpack_float_value (en, FLOAT_TYPE_WEAPON_LIFETIME);

  001ca	68 97 00 00 00	 push	 151			; 00000097H
  001cf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001d8	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  001db	d9 99 80 00 00
	00		 fstp	 DWORD PTR [ecx+128]

; 208  : 
; 209  : 			if (mode == PACK_MODE_SERVER_SESSION)

  001e1	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  001e5	75 14		 jne	 SHORT $LN7@unpack_loc

; 210  : 			{
; 211  : 				raw->decoy_timer = unpack_float_value (en, FLOAT_TYPE_DECOY_TIMER);

  001e7	6a 1d		 push	 29			; 0000001dH
  001e9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001f2	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  001f5	d9 99 84 00 00
	00		 fstp	 DWORD PTR [ecx+132]
$LN7@unpack_loc:

; 212  : 			}
; 213  : 
; 214  : 			// burst_size
; 215  : 
; 216  : 			// kill_code
; 217  : 
; 218  : 			raw->weapon_on_ground = unpack_int_value (en, INT_TYPE_WEAPON_ON_GROUND);

  001fb	68 0a 01 00 00	 push	 266			; 0000010aH
  00200	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00209	89 45 b0	 mov	 DWORD PTR tv189[ebp], eax
  0020c	8b 4d b0	 mov	 ecx, DWORD PTR tv189[ebp]
  0020f	83 e1 01	 and	 ecx, 1
  00212	c1 e1 03	 shl	 ecx, 3
  00215	8b 55 f8	 mov	 edx, DWORD PTR _raw$2[ebp]
  00218	8b 82 8c 00 00
	00		 mov	 eax, DWORD PTR [edx+140]
  0021e	83 e0 f7	 and	 eax, -9			; fffffff7H
  00221	0b c1		 or	 eax, ecx
  00223	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  00226	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 219  : 
; 220  : 			// parachute_status
; 221  : 
; 222  : 			unpack_list_link (en, LIST_TYPE_LAUNCHED_WEAPON, &raw->launched_weapon_link);

  0022c	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  0022f	05 90 00 00 00	 add	 eax, 144		; 00000090H
  00234	50		 push	 eax
  00235	6a 18		 push	 24			; 00000018H
  00237	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0023a	51		 push	 ecx
  0023b	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 223  : 
; 224  : 			// view_weapon_link
; 225  : 
; 226  : 			raw->loal_mode = unpack_int_value (en, INT_TYPE_LOCK_ON_AFTER_LAUNCH);

  00240	6a 7e		 push	 126			; 0000007eH
  00242	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00245	50		 push	 eax
  00246	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0024b	89 45 b0	 mov	 DWORD PTR tv203[ebp], eax
  0024e	8b 4d b0	 mov	 ecx, DWORD PTR tv203[ebp]
  00251	83 e1 01	 and	 ecx, 1
  00254	c1 e1 07	 shl	 ecx, 7
  00257	8b 55 f8	 mov	 edx, DWORD PTR _raw$2[ebp]
  0025a	8b 82 8c 00 00
	00		 mov	 eax, DWORD PTR [edx+140]
  00260	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  00265	0b c1		 or	 eax, ecx
  00267	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  0026a	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 227  : 			raw->missile_phase = unpack_int_value (en, INT_TYPE_WEAPON_MISSILE_PHASE);

  00270	68 09 01 00 00	 push	 265			; 00000109H
  00275	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0027e	89 45 b0	 mov	 DWORD PTR tv213[ebp], eax
  00281	8b 4d b0	 mov	 ecx, DWORD PTR tv213[ebp]
  00284	83 e1 07	 and	 ecx, 7
  00287	c1 e1 08	 shl	 ecx, 8
  0028a	8b 55 f8	 mov	 edx, DWORD PTR _raw$2[ebp]
  0028d	8b 82 8c 00 00
	00		 mov	 eax, DWORD PTR [edx+140]
  00293	25 ff f8 ff ff	 and	 eax, -1793		; fffff8ffH
  00298	0b c1		 or	 eax, ecx
  0029a	8b 4d f8	 mov	 ecx, DWORD PTR _raw$2[ebp]
  0029d	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 228  : 
; 229  : 			//
; 230  : 			// link into system
; 231  : 			//
; 232  : 
; 233  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_SECTOR, get_local_sector_entity (&raw->mob.position), NULL);

  002a3	6a 00		 push	 0
  002a5	8b 45 f8	 mov	 eax, DWORD PTR _raw$2[ebp]
  002a8	83 c0 04	 add	 eax, 4
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  002b1	50		 push	 eax
  002b2	6a 21		 push	 33			; 00000021H
  002b4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002b7	51		 push	 ecx
  002b8	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 234  : 
; 235  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  002bd	6a 00		 push	 0
  002bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  002c4	50		 push	 eax
  002c5	6a 29		 push	 41			; 00000029H
  002c7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002ca	51		 push	 ecx
  002cb	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN2@unpack_loc:

; 236  : 
; 237  : 			#if DEBUG_MODULE
; 238  : 
; 239  : 			debug_log ("WN_PACK: Unpacked %s (%d)", weapon_database [raw->mob.sub_type].full_name, get_local_entity_safe_index (en));
; 240  : 
; 241  : 			#endif
; 242  : 
; 243  : 			break;
; 244  : 		}
; 245  : 		////////////////////////////////////////
; 246  : 		case PACK_MODE_BROWSE_SESSION:
; 247  : 		////////////////////////////////////////
; 248  : 		{
; 249  : 			break;
; 250  : 		}
; 251  : 		////////////////////////////////////////
; 252  : 		case PACK_MODE_UPDATE_ENTITY:
; 253  : 		////////////////////////////////////////
; 254  : 		{
; 255  : 			//
; 256  : 			// always use access functions to set the data
; 257  : 			//
; 258  : 
; 259  : 			break;
; 260  : 		}
; 261  : 	}
; 262  : }

  002d0	5f		 pop	 edi
  002d1	5e		 pop	 esi
  002d2	5b		 pop	 ebx
  002d3	8b e5		 mov	 esp, ebp
  002d5	5d		 pop	 ebp
  002d6	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_raw$1 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@PHNHBLBC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b8 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c 30 01 00
	00		 jl	 $LN2@pack_local
  0003d	83 7d b8 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN6@pack_local
  00043	e9 25 01 00 00	 jmp	 $LN2@pack_local
$LN6@pack_local:

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		case PACK_MODE_CLIENT_SESSION:
; 88   : 		////////////////////////////////////////
; 89   : 		{
; 90   : 			weapon
; 91   : 				*raw;
; 92   : 
; 93   : 			raw = (weapon *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$1[ebp], ecx

; 94   : 
; 95   : 			pack_entity_type (get_local_entity_type (en));

  00051	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00055	74 0a		 je	 SHORT $LN11@pack_local
  00057	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 4d b8	 mov	 DWORD PTR tv78[ebp], ecx
  0005f	eb 21		 jmp	 SHORT $LN12@pack_local
$LN11@pack_local:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00067	83 c2 0f	 add	 edx, 15			; 0000000fH
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@PHNHBLBC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN12@pack_local:
  00082	8b 4d b8	 mov	 ecx, DWORD PTR tv78[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 96   : 
; 97   : 			pack_entity_safe_ptr (en);

  0008b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 98   : 
; 99   : 			pack_mobile_data (en, &raw->mob, mode);

  00094	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?pack_mobile_data@@YGXPAUENTITY@@PAUMOBILE@@W4PACK_MODES@@@Z ; pack_mobile_data

; 100  : 
; 101  : 			pack_float_value (en, FLOAT_TYPE_VERY_HIGH_VELOCITY, raw->mob.velocity);

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000a8	51		 push	 ecx
  000a9	f3 0f 10 40 40	 movss	 xmm0, DWORD PTR [eax+64]
  000ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b3	68 94 00 00 00	 push	 148			; 00000094H
  000b8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000bb	51		 push	 ecx
  000bc	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 102  : 
; 103  : 			pack_float_value (en, FLOAT_TYPE_WEAPON_LIFETIME, raw->weapon_lifetime);

  000c1	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000c4	51		 push	 ecx
  000c5	f3 0f 10 80 80
	00 00 00	 movss	 xmm0, DWORD PTR [eax+128]
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	68 97 00 00 00	 push	 151			; 00000097H
  000d7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 104  : 
; 105  : 			if (mode == PACK_MODE_SERVER_SESSION)

  000e0	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  000e4	75 1c		 jne	 SHORT $LN7@pack_local

; 106  : 			{
; 107  : 				pack_float_value (en, FLOAT_TYPE_DECOY_TIMER, raw->decoy_timer);

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000e9	51		 push	 ecx
  000ea	f3 0f 10 80 84
	00 00 00	 movss	 xmm0, DWORD PTR [eax+132]
  000f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f7	6a 1d		 push	 29			; 0000001dH
  000f9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value
$LN7@pack_local:

; 108  : 			}
; 109  : 
; 110  : 			// burst_size
; 111  : 
; 112  : 			// kill_code
; 113  : 
; 114  : 			pack_int_value (en, INT_TYPE_WEAPON_ON_GROUND, raw->weapon_on_ground);

  00102	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00105	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  0010b	c1 e9 03	 shr	 ecx, 3
  0010e	83 e1 01	 and	 ecx, 1
  00111	51		 push	 ecx
  00112	68 0a 01 00 00	 push	 266			; 0000010aH
  00117	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0011a	52		 push	 edx
  0011b	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 115  : 
; 116  : 			// parachute_status
; 117  : 
; 118  : 			pack_list_link (en, LIST_TYPE_LAUNCHED_WEAPON, &raw->launched_weapon_link);

  00120	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00123	05 90 00 00 00	 add	 eax, 144		; 00000090H
  00128	50		 push	 eax
  00129	6a 18		 push	 24			; 00000018H
  0012b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0012e	51		 push	 ecx
  0012f	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 119  : 
; 120  : 			// view_weapon_link
; 121  : 
; 122  : 			pack_int_value (en, INT_TYPE_LOCK_ON_AFTER_LAUNCH, raw->loal_mode);

  00134	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00137	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  0013d	c1 e9 07	 shr	 ecx, 7
  00140	83 e1 01	 and	 ecx, 1
  00143	51		 push	 ecx
  00144	6a 7e		 push	 126			; 0000007eH
  00146	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00149	52		 push	 edx
  0014a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 123  : 			pack_int_value (en, INT_TYPE_WEAPON_MISSILE_PHASE, raw->missile_phase);

  0014f	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00152	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00158	c1 e9 08	 shr	 ecx, 8
  0015b	83 e1 07	 and	 ecx, 7
  0015e	51		 push	 ecx
  0015f	68 09 01 00 00	 push	 265			; 00000109H
  00164	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00167	52		 push	 edx
  00168	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN2@pack_local:

; 124  : 
; 125  : 			#if DEBUG_MODULE
; 126  : 
; 127  : 			debug_log ("WN_PACK: Packed %s (%d)", weapon_database [raw->mob.sub_type].full_name, get_local_entity_safe_index (en));
; 128  : 
; 129  : 			#endif
; 130  : 
; 131  : 			break;
; 132  : 		}
; 133  : 		////////////////////////////////////////
; 134  : 		case PACK_MODE_BROWSE_SESSION:
; 135  : 		////////////////////////////////////////
; 136  : 		{
; 137  : 			break;
; 138  : 		}
; 139  : 		////////////////////////////////////////
; 140  : 		case PACK_MODE_UPDATE_ENTITY:
; 141  : 		////////////////////////////////////////
; 142  : 		{
; 143  : 			break;
; 144  : 		}
; 145  : 	}
; 146  : }

  0016d	5f		 pop	 edi
  0016e	5e		 pop	 esi
  0016f	5b		 pop	 ebx
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_pack.c
;	COMDAT ?overload_weapon_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_weapon_pack_functions@@YGXXZ PROC		; overload_weapon_pack_functions, COMDAT

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 270  : 	fn_pack_local_entity_data[ENTITY_TYPE_WEAPON]	= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 25	 imul	 ecx, eax, 37
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 271  : 
; 272  : 	fn_unpack_local_entity_data[ENTITY_TYPE_WEAPON]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 25	 imul	 ecx, eax, 37
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 273  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_weapon_pack_functions@@YGXXZ ENDP		; overload_weapon_pack_functions
_TEXT	ENDS
END
