; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\area\ar_pos.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_area_ui_object_position_functions@@YGXH@Z ; overload_area_ui_object_position_functions
EXTRN	?get_screen_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_width
EXTRN	?get_screen_height@@YGHPAUSCREEN@@@Z:PROC	; get_screen_height
EXTRN	?get_ui_object_bounded_t_value@@YGMPAUUI_OBJECT@@@Z:PROC ; get_ui_object_bounded_t_value
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?fn_set_ui_object_x@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_set_ui_object_y@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_end
EXTRN	?fn_get_ui_object_x_end@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_end
EXTRN	?fn_set_ui_object_y_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_end
EXTRN	?fn_get_ui_object_y_end@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_end
EXTRN	?fn_set_ui_object_x_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_start
EXTRN	?fn_get_ui_object_x_start@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_start
EXTRN	?fn_set_ui_object_y_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_start
EXTRN	?fn_get_ui_object_y_start@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_start
EXTRN	?fn_set_ui_object_cx@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_cx
EXTRN	?fn_get_ui_object_cx@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_cx
EXTRN	?fn_set_ui_object_cy@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_cy
EXTRN	?fn_get_ui_object_cy@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_cy
EXTRN	?fn_set_ui_object_virtual_x@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_x
EXTRN	?fn_get_ui_object_virtual_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_x
EXTRN	?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y
EXTRN	?fn_get_ui_object_virtual_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_virtual_coords@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_coords
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_virtual_y@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv194 = -104						; size = 4
tv208 = -100						; size = 4
tv187 = -96						; size = 4
tv210 = -92						; size = 4
tv206 = -92						; size = 4
tv201 = -88						; size = 4
tv180 = -88						; size = 4
tv168 = -88						; size = 4
_parent$1 = -20						; size = 4
_y$2 = -16						; size = 4
_parent$ = -12						; size = 4
_py$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_virtual_y@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_virtual_y, COMDAT

; 499  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 500  : 	
; 501  : 	area_ui_object
; 502  : 		*area;
; 503  : 
; 504  : 	float
; 505  : 		py = 0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f8	 movss	 DWORD PTR _py$[ebp], xmm0

; 506  : 
; 507  : 	ui_object
; 508  : 		*parent;
; 509  : 
; 510  : 	if (get_ui_object_virtual_coords (obj))

  00011	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_coords@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	85 c0		 test	 eax, eax
  00025	74 3d		 je	 SHORT $LN2@get_area_u

; 511  : 	{
; 512  : 
; 513  : 		// is this right ? check
; 514  : 	
; 515  : 		parent = get_ui_object_parent (obj);

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00037	ff d0		 call	 eax
  00039	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 516  : 	
; 517  : 		if (parent)
; 518  : 		{
; 519  : 	
; 520  : 			//py = get_ui_object_virtual_y (parent);
; 521  : 		}
; 522  : 	
; 523  : 		area = (area_ui_object *) obj->data;

  0003c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 524  : 	
; 525  : 		return area->y_start + py;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00048	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0004d	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _py$[ebp]
  00052	f3 0f 11 45 a8	 movss	 DWORD PTR tv168[ebp], xmm0
  00057	d9 45 a8	 fld	 DWORD PTR tv168[ebp]
  0005a	e9 c9 00 00 00	 jmp	 $LN3@get_area_u

; 526  : 	}
; 527  : 	else

  0005f	e9 c4 00 00 00	 jmp	 $LN3@get_area_u
$LN2@get_area_u:

; 528  : 	{
; 529  : 
; 530  : 		float
; 531  : 			y;
; 532  : 
; 533  : 		ui_object
; 534  : 			*parent;
; 535  : 	
; 536  : 		parent = get_ui_object_parent (obj);

  00064	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00067	50		 push	 eax
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00074	ff d0		 call	 eax
  00076	89 45 ec	 mov	 DWORD PTR _parent$1[ebp], eax

; 537  : 	
; 538  : 		if (parent)

  00079	83 7d ec 00	 cmp	 DWORD PTR _parent$1[ebp], 0
  0007d	74 69		 je	 SHORT $LN5@get_area_u

; 539  : 		{
; 540  : 			
; 541  : 			y = (get_ui_object_y (obj) - get_ui_object_y (parent)) / get_ui_object_y_size (parent);

  0007f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0008f	ff d0		 call	 eax
  00091	d9 5d a8	 fstp	 DWORD PTR tv180[ebp]
  00094	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv180[ebp]
  00099	8b 4d ec	 mov	 ecx, DWORD PTR _parent$1[ebp]
  0009c	51		 push	 ecx
  0009d	8b 55 ec	 mov	 edx, DWORD PTR _parent$1[ebp]
  000a0	8b 02		 mov	 eax, DWORD PTR [edx]
  000a2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  000a9	f3 0f 11 45 a4	 movss	 DWORD PTR tv206[ebp], xmm0
  000ae	ff d1		 call	 ecx
  000b0	d9 5d a0	 fstp	 DWORD PTR tv187[ebp]
  000b3	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv206[ebp]
  000b8	f3 0f 5c 45 a0	 subss	 xmm0, DWORD PTR tv187[ebp]
  000bd	8b 55 ec	 mov	 edx, DWORD PTR _parent$1[ebp]
  000c0	52		 push	 edx
  000c1	8b 45 ec	 mov	 eax, DWORD PTR _parent$1[ebp]
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  000cd	f3 0f 11 45 9c	 movss	 DWORD PTR tv208[ebp], xmm0
  000d2	ff d2		 call	 edx
  000d4	d9 5d 98	 fstp	 DWORD PTR tv194[ebp]
  000d7	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv208[ebp]
  000dc	f3 0f 5e 45 98	 divss	 xmm0, DWORD PTR tv194[ebp]
  000e1	f3 0f 11 45 f0	 movss	 DWORD PTR _y$2[ebp], xmm0

; 542  : 		}
; 543  : 		else

  000e6	eb 3d		 jmp	 SHORT $LN6@get_area_u
$LN5@get_area_u:

; 544  : 		{
; 545  : 
; 546  : 			y = get_ui_object_y (obj) / get_screen_height (video_screen);

  000e8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000f8	ff d0		 call	 eax
  000fa	d9 5d a8	 fstp	 DWORD PTR tv201[ebp]
  000fd	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv201[ebp]
  00102	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00108	51		 push	 ecx
  00109	f3 0f 11 45 a4	 movss	 DWORD PTR tv210[ebp], xmm0
  0010e	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00113	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00117	f3 0f 10 4d a4	 movss	 xmm1, DWORD PTR tv210[ebp]
  0011c	f3 0f 5e c8	 divss	 xmm1, xmm0
  00120	f3 0f 11 4d f0	 movss	 DWORD PTR _y$2[ebp], xmm1
$LN6@get_area_u:

; 547  : 		}
; 548  : 
; 549  : 		return y;

  00125	d9 45 f0	 fld	 DWORD PTR _y$2[ebp]
$LN3@get_area_u:

; 550  : 	}
; 551  : }

  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 04 00	 ret	 4
?get_area_ui_object_virtual_y@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_virtual_y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_virtual_y@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y$ = 12						; size = 4
?set_area_ui_object_virtual_y@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_virtual_y, COMDAT

; 479  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 480  : 	
; 481  : 	area_ui_object
; 482  : 		*area;
; 483  : 
; 484  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 485  : 
; 486  : 	area->virtual_coords = TRUE;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00018	83 c9 04	 or	 ecx, 4
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0001e	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx

; 487  : 
; 488  : 	area->y_end = y;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00024	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00029	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 489  : 	area->y_start = y;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00031	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00036	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 490  : 
; 491  : 	set_ui_object_redraw (obj, TRUE);

  0003b	6a 01		 push	 1
  0003d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00040	50		 push	 eax
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0004d	ff d0		 call	 eax

; 492  : }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
?set_area_ui_object_virtual_y@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_virtual_y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_virtual_x@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv194 = -104						; size = 4
tv208 = -100						; size = 4
tv187 = -96						; size = 4
tv210 = -92						; size = 4
tv206 = -92						; size = 4
tv201 = -88						; size = 4
tv180 = -88						; size = 4
tv168 = -88						; size = 4
_parent$1 = -20						; size = 4
_x$2 = -16						; size = 4
_parent$ = -12						; size = 4
_px$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_virtual_x@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_virtual_x, COMDAT

; 420  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 421  : 	
; 422  : 	area_ui_object
; 423  : 		*area;
; 424  : 
; 425  : 	float
; 426  : 		px = 0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f8	 movss	 DWORD PTR _px$[ebp], xmm0

; 427  : 
; 428  : 	ui_object
; 429  : 		*parent;
; 430  : 
; 431  : 	if (get_ui_object_virtual_coords (obj))

  00011	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_coords@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	85 c0		 test	 eax, eax
  00025	74 3d		 je	 SHORT $LN2@get_area_u

; 432  : 	{
; 433  : 
; 434  : 		// is this right ? check
; 435  : 	
; 436  : 		parent = get_ui_object_parent (obj);

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00037	ff d0		 call	 eax
  00039	89 45 f4	 mov	 DWORD PTR _parent$[ebp], eax

; 437  : 	
; 438  : 		if (parent)
; 439  : 		{
; 440  : 	
; 441  : 			//px = get_ui_object_virtual_x (parent);
; 442  : 		}
; 443  : 	
; 444  : 		area = (area_ui_object *) obj->data;

  0003c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 445  : 	
; 446  : 		return area->x_start + px;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00048	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0004d	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _px$[ebp]
  00052	f3 0f 11 45 a8	 movss	 DWORD PTR tv168[ebp], xmm0
  00057	d9 45 a8	 fld	 DWORD PTR tv168[ebp]
  0005a	e9 c9 00 00 00	 jmp	 $LN3@get_area_u

; 447  : 	}
; 448  : 	else

  0005f	e9 c4 00 00 00	 jmp	 $LN3@get_area_u
$LN2@get_area_u:

; 449  : 	{
; 450  : 
; 451  : 		float
; 452  : 			x;
; 453  : 
; 454  : 		ui_object
; 455  : 			*parent;
; 456  : 	
; 457  : 		parent = get_ui_object_parent (obj);

  00064	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00067	50		 push	 eax
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00074	ff d0		 call	 eax
  00076	89 45 ec	 mov	 DWORD PTR _parent$1[ebp], eax

; 458  : 	
; 459  : 		if (parent)

  00079	83 7d ec 00	 cmp	 DWORD PTR _parent$1[ebp], 0
  0007d	74 69		 je	 SHORT $LN5@get_area_u

; 460  : 		{
; 461  : 			
; 462  : 			x = (get_ui_object_x (obj) - get_ui_object_x (parent)) / get_ui_object_x_size (parent);

  0007f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0008f	ff d0		 call	 eax
  00091	d9 5d a8	 fstp	 DWORD PTR tv180[ebp]
  00094	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv180[ebp]
  00099	8b 4d ec	 mov	 ecx, DWORD PTR _parent$1[ebp]
  0009c	51		 push	 ecx
  0009d	8b 55 ec	 mov	 edx, DWORD PTR _parent$1[ebp]
  000a0	8b 02		 mov	 eax, DWORD PTR [edx]
  000a2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  000a9	f3 0f 11 45 a4	 movss	 DWORD PTR tv206[ebp], xmm0
  000ae	ff d1		 call	 ecx
  000b0	d9 5d a0	 fstp	 DWORD PTR tv187[ebp]
  000b3	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv206[ebp]
  000b8	f3 0f 5c 45 a0	 subss	 xmm0, DWORD PTR tv187[ebp]
  000bd	8b 55 ec	 mov	 edx, DWORD PTR _parent$1[ebp]
  000c0	52		 push	 edx
  000c1	8b 45 ec	 mov	 eax, DWORD PTR _parent$1[ebp]
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  000cd	f3 0f 11 45 9c	 movss	 DWORD PTR tv208[ebp], xmm0
  000d2	ff d2		 call	 edx
  000d4	d9 5d 98	 fstp	 DWORD PTR tv194[ebp]
  000d7	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv208[ebp]
  000dc	f3 0f 5e 45 98	 divss	 xmm0, DWORD PTR tv194[ebp]
  000e1	f3 0f 11 45 f0	 movss	 DWORD PTR _x$2[ebp], xmm0

; 463  : 		}
; 464  : 		else

  000e6	eb 3d		 jmp	 SHORT $LN6@get_area_u
$LN5@get_area_u:

; 465  : 		{
; 466  : 			
; 467  : 			x = get_ui_object_x (obj) / get_screen_width (video_screen);

  000e8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000f8	ff d0		 call	 eax
  000fa	d9 5d a8	 fstp	 DWORD PTR tv201[ebp]
  000fd	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv201[ebp]
  00102	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00108	51		 push	 ecx
  00109	f3 0f 11 45 a4	 movss	 DWORD PTR tv210[ebp], xmm0
  0010e	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00113	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00117	f3 0f 10 4d a4	 movss	 xmm1, DWORD PTR tv210[ebp]
  0011c	f3 0f 5e c8	 divss	 xmm1, xmm0
  00120	f3 0f 11 4d f0	 movss	 DWORD PTR _x$2[ebp], xmm1
$LN6@get_area_u:

; 468  : 		}
; 469  : 
; 470  : 		return x;

  00125	d9 45 f0	 fld	 DWORD PTR _x$2[ebp]
$LN3@get_area_u:

; 471  : 	}
; 472  : }

  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 04 00	 ret	 4
?get_area_ui_object_virtual_x@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_virtual_x
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_virtual_x@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x$ = 12						; size = 4
?set_area_ui_object_virtual_x@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_virtual_x, COMDAT

; 400  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 401  : 	
; 402  : 	area_ui_object
; 403  : 		*area;
; 404  : 
; 405  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 406  : 
; 407  : 	area->virtual_coords = TRUE;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00018	83 c9 04	 or	 ecx, 4
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0001e	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx

; 408  : 
; 409  : 	area->x_end = x;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00024	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  00029	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 410  : 	area->x_start = x;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00030	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  00035	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 411  : 
; 412  : 	set_ui_object_redraw (obj, TRUE);

  0003a	6a 01		 push	 1
  0003c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00043	8b 11		 mov	 edx, DWORD PTR [ecx]
  00045	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0004c	ff d0		 call	 eax

; 413  : }

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
?set_area_ui_object_virtual_x@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_virtual_x
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_cy@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_cy@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_cy, COMDAT

; 385  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 386  : 	
; 387  : 	area_ui_object
; 388  : 		*area;
; 389  : 
; 390  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 391  : 
; 392  : 	return area->cy;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 24	 fld	 DWORD PTR [eax+36]

; 393  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_cy@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_cy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_cy@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_cy$ = 12						; size = 4
?set_area_ui_object_cy@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_cy, COMDAT

; 370  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 371  : 	
; 372  : 	area_ui_object
; 373  : 		*area;
; 374  : 
; 375  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 376  : 
; 377  : 	area->cy = cy;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _cy$[ebp]
  0001a	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 378  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?set_area_ui_object_cy@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_cy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_cx@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_cx@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_cx, COMDAT

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 356  : 	
; 357  : 	area_ui_object
; 358  : 		*area;
; 359  : 
; 360  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 361  : 
; 362  : 	return area->cx;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 20	 fld	 DWORD PTR [eax+32]

; 363  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_cx@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_cx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_cx@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_cx$ = 12						; size = 4
?set_area_ui_object_cx@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_cx, COMDAT

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 341  : 	
; 342  : 	area_ui_object
; 343  : 		*area;
; 344  : 
; 345  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 346  : 	
; 347  : 	area->cx = cx;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _cx$[ebp]
  0001a	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 348  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?set_area_ui_object_cx@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_cx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_y_start@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_y_start@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_y_start, COMDAT

; 325  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 326  : 	
; 327  : 	area_ui_object
; 328  : 		*area;
; 329  : 
; 330  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 331  : 
; 332  : 	return area->y_start;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 0c	 fld	 DWORD PTR [eax+12]

; 333  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_y_start@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_y_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_y_start@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y$ = 12						; size = 4
?set_area_ui_object_y_start@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_y_start, COMDAT

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 309  : 	
; 310  : 	area_ui_object
; 311  : 		*area;
; 312  : 
; 313  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 314  : 
; 315  : 	area->y_start = y;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  0001a	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 316  : 
; 317  : 	set_ui_object_redraw (obj, TRUE);

  0001f	6a 01		 push	 1
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00031	ff d0		 call	 eax

; 318  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_area_ui_object_y_start@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_y_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_x_start@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_x_start@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_x_start, COMDAT

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 294  : 	
; 295  : 	area_ui_object
; 296  : 		*area;
; 297  : 
; 298  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 299  : 
; 300  : 	return area->x_start;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 04	 fld	 DWORD PTR [eax+4]

; 301  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_x_start@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_x_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_x_start@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x$ = 12						; size = 4
?set_area_ui_object_x_start@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_x_start, COMDAT

; 276  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 277  : 	
; 278  : 	area_ui_object
; 279  : 		*area;
; 280  : 
; 281  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 282  : 
; 283  : 	area->x_start = x;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  0001a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 284  : 
; 285  : 	set_ui_object_redraw (obj, TRUE);

  0001f	6a 01		 push	 1
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00031	ff d0		 call	 eax

; 286  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_area_ui_object_x_start@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_x_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_y_end@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_y_end@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_y_end, COMDAT

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 262  : 	
; 263  : 	area_ui_object
; 264  : 		*area;
; 265  : 
; 266  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 267  : 
; 268  : 	return area->y_end;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 08	 fld	 DWORD PTR [eax+8]

; 269  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_y_end@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_y_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_y_end@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y$ = 12						; size = 4
?set_area_ui_object_y_end@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_y_end, COMDAT

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 245  : 	
; 246  : 	area_ui_object
; 247  : 		*area;
; 248  : 
; 249  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 250  : 
; 251  : 	area->y_end = y;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  0001a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 252  : 
; 253  : 	set_ui_object_redraw (obj, TRUE);

  0001f	6a 01		 push	 1
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00031	ff d0		 call	 eax

; 254  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_area_ui_object_y_end@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_y_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_x_end@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_x_end@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_x_end, COMDAT

; 229  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 230  : 	
; 231  : 	area_ui_object
; 232  : 		*area;
; 233  : 
; 234  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 235  : 
; 236  : 	return area->x_end;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 00		 fld	 DWORD PTR [eax]

; 237  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?get_area_ui_object_x_end@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_x_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_x_end@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x$ = 12						; size = 4
?set_area_ui_object_x_end@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_x_end, COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 213  : 	
; 214  : 	area_ui_object
; 215  : 		*area;
; 216  : 
; 217  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 218  : 
; 219  : 	area->x_end = x;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  0001a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 220  : 
; 221  : 	set_ui_object_redraw (obj, TRUE);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00030	ff d0		 call	 eax

; 222  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?set_area_ui_object_x_end@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_x_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_y@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv174 = -84						; size = 4
tv167 = -84						; size = 4
tv153 = -84						; size = 4
_parent$ = -16						; size = 4
_py$ = -12						; size = 4
_y$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_y@@YGMPAUUI_OBJECT@@@Z PROC		; get_area_ui_object_y, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 166  : 	
; 167  : 	area_ui_object
; 168  : 		*area;
; 169  : 
; 170  : 	float
; 171  : 		y,
; 172  : 		py = 0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f4	 movss	 DWORD PTR _py$[ebp], xmm0

; 173  : 
; 174  : 	ui_object
; 175  : 		*parent;
; 176  : 
; 177  : 	parent = get_ui_object_parent (obj);

  00011	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	89 45 f0	 mov	 DWORD PTR _parent$[ebp], eax

; 178  : 
; 179  : 	if (parent)

  00026	83 7d f0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0002a	74 15		 je	 SHORT $LN2@get_area_u

; 180  : 	{
; 181  : 
; 182  : 		py = get_ui_object_y (parent);

  0002c	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0003c	ff d0		 call	 eax
  0003e	d9 5d f4	 fstp	 DWORD PTR _py$[ebp]
$LN2@get_area_u:

; 183  : 	}
; 184  : 
; 185  : 	area = (area_ui_object *) obj->data;

  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00047	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 186  : 
; 187  : 	y = area->y_start + (get_ui_object_bounded_t_value (obj) * (area->y_end - area->y_start));

  0004a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?get_ui_object_bounded_t_value@@YGMPAUUI_OBJECT@@@Z ; get_ui_object_bounded_t_value
  00053	d9 5d ac	 fstp	 DWORD PTR tv153[ebp]
  00056	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv153[ebp]
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  0005e	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00061	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00066	f3 0f 5c 4a 0c	 subss	 xmm1, DWORD PTR [edx+12]
  0006b	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00072	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  00077	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0

; 188  : 						
; 189  : 	if (area->virtual_coords)

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0007f	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00082	c1 e9 02	 shr	 ecx, 2
  00085	83 e1 01	 and	 ecx, 1
  00088	74 45		 je	 SHORT $LN5@get_area_u

; 190  : 	{
; 191  : 
; 192  : 		if (parent)

  0008a	83 7d f0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0008e	74 26		 je	 SHORT $LN4@get_area_u

; 193  : 		{
; 194  : 
; 195  : 			y *= get_ui_object_y_size (parent);

  00090	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  00093	50		 push	 eax
  00094	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00097	8b 11		 mov	 edx, DWORD PTR [ecx]
  00099	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a0	ff d0		 call	 eax
  000a2	d9 5d ac	 fstp	 DWORD PTR tv167[ebp]
  000a5	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv167[ebp]
  000aa	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _y$[ebp]
  000af	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0

; 196  : 		}
; 197  : 		else

  000b4	eb 19		 jmp	 SHORT $LN5@get_area_u
$LN4@get_area_u:

; 198  : 		{
; 199  : 
; 200  : 			y *= get_screen_height (video_screen);

  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  000c1	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000c5	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _y$[ebp]
  000ca	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0
$LN5@get_area_u:

; 201  : 		}
; 202  : 	}
; 203  : 
; 204  : 	return y + py;

  000cf	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000d4	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _py$[ebp]
  000d9	f3 0f 11 45 ac	 movss	 DWORD PTR tv174[ebp], xmm0
  000de	d9 45 ac	 fld	 DWORD PTR tv174[ebp]

; 205  : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
?get_area_ui_object_y@@YGMPAUUI_OBJECT@@@Z ENDP		; get_area_ui_object_y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_y@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y$ = 12						; size = 4
?set_area_ui_object_y@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_y, COMDAT

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	
; 145  : 	area_ui_object
; 146  : 		*area;
; 147  : 
; 148  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 149  : 
; 150  : 	//if (area->y != y)
; 151  : 	{
; 152  : 		
; 153  : 		area->y_end = y;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  0001a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 154  : 		area->y_start = y;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00022	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00027	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 155  : 	
; 156  : 		set_ui_object_redraw (obj, TRUE);

  0002c	6a 01		 push	 1
  0002e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00035	8b 11		 mov	 edx, DWORD PTR [ecx]
  00037	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0003e	ff d0		 call	 eax

; 157  : 	}
; 158  : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?set_area_ui_object_y@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?get_area_ui_object_x@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv174 = -84						; size = 4
tv167 = -84						; size = 4
tv153 = -84						; size = 4
_parent$ = -16						; size = 4
_px$ = -12						; size = 4
_x$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_x@@YGMPAUUI_OBJECT@@@Z PROC		; get_area_ui_object_x, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   : 	
; 98   : 	area_ui_object
; 99   : 		*area;
; 100  : 
; 101  : 	float
; 102  : 		x,
; 103  : 		px = 0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f4	 movss	 DWORD PTR _px$[ebp], xmm0

; 104  : 
; 105  : 	ui_object
; 106  : 		*parent;
; 107  : 
; 108  : 	parent = get_ui_object_parent (obj);

  00011	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	89 45 f0	 mov	 DWORD PTR _parent$[ebp], eax

; 109  : 
; 110  : 	if (parent)

  00026	83 7d f0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0002a	74 15		 je	 SHORT $LN2@get_area_u

; 111  : 	{
; 112  : 
; 113  : 		px = get_ui_object_x (parent);

  0002c	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0003c	ff d0		 call	 eax
  0003e	d9 5d f4	 fstp	 DWORD PTR _px$[ebp]
$LN2@get_area_u:

; 114  : 	}
; 115  : 
; 116  : 	area = (area_ui_object *) obj->data;

  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00047	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 117  : 
; 118  : 	x = area->x_start + ( get_ui_object_bounded_t_value (obj) * ( area->x_end - area->x_start ) );

  0004a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?get_ui_object_bounded_t_value@@YGMPAUUI_OBJECT@@@Z ; get_ui_object_bounded_t_value
  00053	d9 5d ac	 fstp	 DWORD PTR tv153[ebp]
  00056	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv153[ebp]
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  0005e	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  00061	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  00065	f3 0f 5c 4a 04	 subss	 xmm1, DWORD PTR [edx+4]
  0006a	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00071	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  00076	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 119  : 
; 120  : 	if (area->virtual_coords)

  0007b	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0007e	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00081	c1 e9 02	 shr	 ecx, 2
  00084	83 e1 01	 and	 ecx, 1
  00087	74 45		 je	 SHORT $LN5@get_area_u

; 121  : 	{
; 122  : 
; 123  : 		if (parent)

  00089	83 7d f0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0008d	74 26		 je	 SHORT $LN4@get_area_u

; 124  : 		{
; 125  : 
; 126  : 			x *= get_ui_object_x_size (parent);

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  00092	50		 push	 eax
  00093	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00096	8b 11		 mov	 edx, DWORD PTR [ecx]
  00098	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0009f	ff d0		 call	 eax
  000a1	d9 5d ac	 fstp	 DWORD PTR tv167[ebp]
  000a4	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv167[ebp]
  000a9	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _x$[ebp]
  000ae	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 127  : 		}
; 128  : 		else

  000b3	eb 19		 jmp	 SHORT $LN5@get_area_u
$LN4@get_area_u:

; 129  : 		{
; 130  : 
; 131  : 			x *= get_screen_width (video_screen);

  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  000c0	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000c4	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _x$[ebp]
  000c9	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0
$LN5@get_area_u:

; 132  : 		}
; 133  : 	}
; 134  : 
; 135  : 	return x + px;

  000ce	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  000d3	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _px$[ebp]
  000d8	f3 0f 11 45 ac	 movss	 DWORD PTR tv174[ebp], xmm0
  000dd	d9 45 ac	 fld	 DWORD PTR tv174[ebp]

; 136  : }

  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 04 00	 ret	 4
?get_area_ui_object_x@@YGMPAUUI_OBJECT@@@Z ENDP		; get_area_ui_object_x
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?set_area_ui_object_x@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x$ = 12						; size = 4
?set_area_ui_object_x@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_x, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 	
; 76   : 	area_ui_object
; 77   : 		*area;
; 78   : 
; 79   : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 80   : 
; 81   : 	//if (area->x != x)
; 82   : 	{
; 83   : 	
; 84   : 		area->x_end = x;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  0001a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 85   : 		area->x_start = x;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00021	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  00026	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 86   : 	
; 87   : 		set_ui_object_redraw (obj, TRUE);

  0002b	6a 01		 push	 1
  0002d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00034	8b 11		 mov	 edx, DWORD PTR [ecx]
  00036	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0003d	ff d0		 call	 eax

; 88   : 	}
; 89   : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?set_area_ui_object_x@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_x
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_pos.c
;	COMDAT ?overload_area_ui_object_position_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_area_ui_object_position_functions@@YGXH@Z PROC ; overload_area_ui_object_position_functions, COMDAT

; 558  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 559  : 	
; 560  : 	fn_set_ui_object_x [type] = set_area_ui_object_x;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_x@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_x@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_x

; 561  : 
; 562  : 	fn_get_ui_object_x [type] = get_area_ui_object_x;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_x@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_x

; 563  : 
; 564  : 
; 565  : 	fn_set_ui_object_y [type] = set_area_ui_object_y;

  00025	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00028	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_y@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_y

; 566  : 
; 567  : 	fn_get_ui_object_y [type] = get_area_ui_object_y;

  00033	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00036	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_y@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_y

; 568  : 
; 569  : 	
; 570  : 	fn_set_ui_object_x_end [type] = set_area_ui_object_x_end;

  00041	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00044	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_x_end@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_x_end

; 571  : 
; 572  : 	fn_get_ui_object_x_end [type] = get_area_ui_object_x_end;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00052	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_x_end@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_x_end@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_x_end

; 573  : 
; 574  : 
; 575  : 	fn_set_ui_object_y_end [type] = set_area_ui_object_y_end;

  0005d	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00060	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_y_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_y_end@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_y_end

; 576  : 
; 577  : 	fn_get_ui_object_y_end [type] = get_area_ui_object_y_end;

  0006b	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0006e	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_y_end@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_y_end@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_y_end

; 578  : 
; 579  : 	
; 580  : 	fn_set_ui_object_x_start [type] = set_area_ui_object_x_start;

  00079	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0007c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_x_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_x_start@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_x_start

; 581  : 
; 582  : 	fn_get_ui_object_x_start [type] = get_area_ui_object_x_start;

  00087	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0008a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_x_start@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_x_start@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_x_start

; 583  : 
; 584  : 
; 585  : 	fn_set_ui_object_y_start [type] = set_area_ui_object_y_start;

  00095	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00098	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_y_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_y_start@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_y_start

; 586  : 
; 587  : 	fn_get_ui_object_y_start [type] = get_area_ui_object_y_start;

  000a3	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000a6	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_y_start@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_y_start@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_y_start

; 588  : 
; 589  : 	
; 590  : 	fn_set_ui_object_cx [type] = set_area_ui_object_cx;

  000b1	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000b4	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_cx@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_cx@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_cx

; 591  : 
; 592  : 	fn_get_ui_object_cx [type] = get_area_ui_object_cx;

  000bf	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000c2	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_cx@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_cx@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_cx

; 593  : 
; 594  : 
; 595  : 	fn_set_ui_object_cy [type] = set_area_ui_object_cy;

  000cd	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000d0	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_cy@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_cy@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_cy

; 596  : 
; 597  : 	fn_get_ui_object_cy [type] = get_area_ui_object_cy;

  000db	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000de	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_cy@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_cy@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_cy

; 598  : 	
; 599  : 
; 600  : 	fn_set_ui_object_virtual_x [type] = set_area_ui_object_virtual_x;

  000e9	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000ec	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_virtual_x@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_virtual_x@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_virtual_x

; 601  : 
; 602  : 	fn_get_ui_object_virtual_x [type] = get_area_ui_object_virtual_x;

  000f7	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000fa	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_virtual_x@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_virtual_x@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_virtual_x

; 603  : 
; 604  : 
; 605  : 	fn_set_ui_object_virtual_y [type] = set_area_ui_object_virtual_y;

  00105	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00108	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_virtual_y@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_virtual_y

; 606  : 
; 607  : 	fn_get_ui_object_virtual_y [type] = get_area_ui_object_virtual_y;

  00113	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00116	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_virtual_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_virtual_y@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_virtual_y

; 608  : }

  00121	5f		 pop	 edi
  00122	5e		 pop	 esi
  00123	5b		 pop	 ebx
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 04 00	 ret	 4
?overload_area_ui_object_position_functions@@YGXH@Z ENDP ; overload_area_ui_object_position_functions
_TEXT	ENDS
END
