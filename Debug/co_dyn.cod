; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?trim_button_held@@3HA				; trim_button_held
_BSS	SEGMENT
?trim_button_held@@3HA DD 01H DUP (?)			; trim_button_held
_BSS	ENDS
PUBLIC	_asinf
PUBLIC	_fabsf
PUBLIC	_powf
PUBLIC	_sinf
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?pow@@YGMMM@Z					; pow
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?set_trim_control@@YGXPAUEVENT@@@Z		; set_trim_control
PUBLIC	?clear_trim_control@@YGXPAUEVENT@@@Z		; clear_trim_control
PUBLIC	?adjust_pitch_trim@@YGXPAUEVENT@@@Z		; adjust_pitch_trim
PUBLIC	?adjust_roll_trim@@YGXPAUEVENT@@@Z		; adjust_roll_trim
PUBLIC	?adjust_pedal_trim@@YGXPAUEVENT@@@Z		; adjust_pedal_trim
PUBLIC	?initialise_common_dynamics@@YGXXZ		; initialise_common_dynamics
PUBLIC	?update_common_attitude_dynamics@@YGXXZ		; update_common_attitude_dynamics
PUBLIC	??$min@N@std@@YGABNABN0@Z			; std::min<double>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0CA@NJJBFJAE@CO_DYN?3?5setting?5trim?5?$CFf?0?5?$CFf?0?5?$CFf@ ; `string'
PUBLIC	??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CC@EEIPICNB@CO_DYN?3?5pitch?5trim?5adjusted?5to?5@ ; `string'
PUBLIC	??_C@_0CB@KCBCMAMP@CO_DYN?3?5roll?5trim?5adjusted?5to?5?$CF@ ; `string'
PUBLIC	??_C@_0CC@FNGFGEEJ@CO_DYN?3?5pedal?5trim?5adjusted?5to?5@ ; `string'
PUBLIC	?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA ; `update_common_attitude_dynamics'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@EHBODOFB@DYNAMICS?3?5UNSTABLE@	; `string'
PUBLIC	??_C@_0BD@BBEFFKGJ@Middle?5rotor?5force@	; `string'
PUBLIC	??_C@_0BC@MEMJFFEH@Front?5rotor?5force@		; `string'
PUBLIC	??_C@_0BB@LJEAAOI@Back?5rotor?5force@		; `string'
PUBLIC	??_C@_0BB@JNCAICOI@Left?5rotor?5force@		; `string'
PUBLIC	??_C@_0BC@BCPABIID@Right?5rotor?5force@		; `string'
PUBLIC	??_C@_0BJ@INGIGFJO@Angular?5tail?5rotor?5force@	; `string'
PUBLIC	??_C@_07JMGDFJEK@Gravity@			; `string'
PUBLIC	??_C@_0BC@GCGACPAK@Transitional?5lift@		; `string'
PUBLIC	??_C@_0BH@HFGLNDFM@Retreating?5blade?5stall@	; `string'
PUBLIC	??_C@_0BG@LPCPLOKH@Advancing?5blade?5stall@	; `string'
PUBLIC	??_C@_0O@JIJAGCOD@Sonic?5buildup@		; `string'
PUBLIC	??_C@_0BK@DILBAPLM@Main?5rotor?5angular?5torque@ ; `string'
PUBLIC	??_C@_0BB@FPOJGHNF@Pitch?5resistance@		; `string'
PUBLIC	??_C@_0BA@JHNCKIDL@Roll?5resistance@		; `string'
PUBLIC	??_C@_0P@OJCKBBIP@Yaw?5resistance@		; `string'
PUBLIC	??_C@_0BH@EICDHFJI@Realign?5force?5?$CIY?5axis?$CJ@ ; `string'
PUBLIC	??_C@_0BH@IEIJHFAG@Realign?5force?5?$CIX?5axis?$CJ@ ; `string'
PUBLIC	??_C@_0BE@JPPEFMCN@Forward?5motion?5drag@	; `string'
PUBLIC	??_C@_0BE@DICEDONG@Lateral?5motion?5drag@	; `string'
PUBLIC	??_C@_0BF@LAMOPNAJ@Vertical?5motion?5drag@	; `string'
PUBLIC	??_C@_0BL@CBNCBPEP@Middle?5rotor?5Ground?5effect@ ; `string'
PUBLIC	??_C@_0BK@BDABDLEI@Front?5rotor?5Ground?5effect@ ; `string'
PUBLIC	??_C@_0BJ@MKNEGMFL@Back?5rotor?5Ground?5effect@	; `string'
PUBLIC	??_C@_0BJ@KEABEFD@Left?5rotor?5Ground?5effect@	; `string'
PUBLIC	??_C@_0BK@ONPBLKKA@Right?5rotor?5Ground?5effect@ ; `string'
PUBLIC	??_C@_0BC@MPODPIKD@Vortex?5ring?5force@		; `string'
PUBLIC	??_C@_04LGBIOLDJ@Wind@				; `string'
PUBLIC	??_C@_0BG@EBOEKGCA@Ground?5Friction?5force@	; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3a03126f
PUBLIC	__real@3aa3d70a
PUBLIC	__real@3b23d70a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3ecccccd
PUBLIC	__real@3ecda922
PUBLIC	__real@3f000000
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f666666
PUBLIC	__real@3f689374bc6a7efa
PUBLIC	__real@3f800000
PUBLIC	__real@3f99999a
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fb6571848000000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe3333333333333
PUBLIC	__real@3fe4cccccccccccd
PUBLIC	__real@3feccccccccccccd
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@400921fb60000000
PUBLIC	__real@4012000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@403e000000000000
PUBLIC	__real@40400000
PUBLIC	__real@4046800000000000
PUBLIC	__real@404ccccd
PUBLIC	__real@4059000000000000
PUBLIC	__real@405e000000000000
PUBLIC	__real@40600000
PUBLIC	__real@4099c40000000000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@41000000
PUBLIC	__real@411cf5c3
PUBLIC	__real@41a00000
PUBLIC	__real@42240000
PUBLIC	__real@42460000
PUBLIC	__real@42652ee0
PUBLIC	__real@447a0000
PUBLIC	__real@bda44a62
PUBLIC	__real@bf800000
PUBLIC	__real@bfd999999999999a
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c000000000000000
PUBLIC	__real@c059000000000000
PUBLIC	__real@c0a00000
PUBLIC	__real@c1a00000
PUBLIC	__real@c2200000
PUBLIC	__real@c2480000
PUBLIC	__real@c2540000
PUBLIC	__real@c2600000
PUBLIC	__real@c2740000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memset:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_asin:PROC
EXTRN	_exp:PROC
EXTRN	_fabs:PROC
EXTRN	_pow:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_any_3d_vector
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?invert_3d_vector@@YGXPAUVEC3D@@@Z:PROC		; invert_3d_vector
EXTRN	?get_3d_transformation_heading_pitch_matrix@@YGXQAY02MMM@Z:PROC ; get_3d_transformation_heading_pitch_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_transpose_matrix3x3_vec3d
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_elevation
EXTRN	?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_adjusted_map_volume
EXTRN	?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z:PROC ; play_client_server_cpg_message
EXTRN	?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z:PROC ; get_session_wind_velocity_at_point
EXTRN	?dynamics_damage_model@@YGXIH@Z:PROC		; dynamics_damage_model
EXTRN	?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z:PROC	; add_dynamic_force
EXTRN	?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z:PROC ; get_current_dynamics_options
EXTRN	?set_flight_dynamics_mass@@YGMXZ:PROC		; set_flight_dynamics_mass
EXTRN	?create_rotor_vibration@@YGXM@Z:PROC		; create_rotor_vibration
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?command_line_dynamics_retreating_blade_stall_effect@@3MA:DWORD ; command_line_dynamics_retreating_blade_stall_effect
EXTRN	?command_line_dynamics_main_rotor_lift@@3MA:DWORD ; command_line_dynamics_main_rotor_lift
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_kill_client_server_entity
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_client_server_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_client_server_entity_vec3d
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?debug_var_y@@3MA:DWORD				; debug_var_y
EXTRN	?fixed_collision_count@@3HA:DWORD		; fixed_collision_count
EXTRN	?moving_collision_count@@3HA:DWORD		; moving_collision_count
EXTRN	?current_flight_dynamics_landed_at_keysite@@3PAUENTITY@@A:DWORD ; current_flight_dynamics_landed_at_keysite
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?right_g_e_force@@3MA DD 01H DUP (?)			; right_g_e_force
?left_g_e_force@@3MA DD 01H DUP (?)			; left_g_e_force
?back_g_e_force@@3MA DD 01H DUP (?)			; back_g_e_force
?front_g_e_force@@3MA DD 01H DUP (?)			; front_g_e_force
?this_reaction_force@@3MA DD 01H DUP (?)		; this_reaction_force
?time@?EO@??update_common_attitude_dynamics@@YGXXZ@4MA DD 01H DUP (?) ; `update_common_attitude_dynamics'::`78'::time
?v@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA DD 01H DUP (?) ; `update_common_attitude_dynamics'::`87'::v
?relative_air_flow_angle@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA DD 01H DUP (?) ; `update_common_attitude_dynamics'::`87'::relative_air_flow_angle
?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA DD 01H DUP (?) ; `update_common_attitude_dynamics'::`87'::torque
?force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA DD 01H DUP (?) ; `update_common_attitude_dynamics'::`188'::force
?desired_force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA DD 01H DUP (?) ; `update_common_attitude_dynamics'::`188'::desired_force
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c2740000
CONST	SEGMENT
__real@c2740000 DD 0c2740000r			; -61
CONST	ENDS
;	COMDAT __real@c2600000
CONST	SEGMENT
__real@c2600000 DD 0c2600000r			; -56
CONST	ENDS
;	COMDAT __real@c2540000
CONST	SEGMENT
__real@c2540000 DD 0c2540000r			; -53
CONST	ENDS
;	COMDAT __real@c2480000
CONST	SEGMENT
__real@c2480000 DD 0c2480000r			; -50
CONST	ENDS
;	COMDAT __real@c2200000
CONST	SEGMENT
__real@c2200000 DD 0c2200000r			; -40
CONST	ENDS
;	COMDAT __real@c1a00000
CONST	SEGMENT
__real@c1a00000 DD 0c1a00000r			; -20
CONST	ENDS
;	COMDAT __real@c0a00000
CONST	SEGMENT
__real@c0a00000 DD 0c0a00000r			; -5
CONST	ENDS
;	COMDAT __real@c059000000000000
CONST	SEGMENT
__real@c059000000000000 DQ 0c059000000000000r	; -100
CONST	ENDS
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@bfd999999999999a
CONST	SEGMENT
__real@bfd999999999999a DQ 0bfd999999999999ar	; -0.4
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bda44a62
CONST	SEGMENT
__real@bda44a62 DD 0bda44a62r			; -0.08022
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@42460000
CONST	SEGMENT
__real@42460000 DD 042460000r			; 49.5
CONST	ENDS
;	COMDAT __real@42240000
CONST	SEGMENT
__real@42240000 DD 042240000r			; 41
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@411cf5c3
CONST	SEGMENT
__real@411cf5c3 DD 0411cf5c3r			; 9.81
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4099c40000000000
CONST	SEGMENT
__real@4099c40000000000 DQ 04099c40000000000r	; 1649
CONST	ENDS
;	COMDAT __real@40600000
CONST	SEGMENT
__real@40600000 DD 040600000r			; 3.5
CONST	ENDS
;	COMDAT __real@405e000000000000
CONST	SEGMENT
__real@405e000000000000 DQ 0405e000000000000r	; 120
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@404ccccd
CONST	SEGMENT
__real@404ccccd DD 0404ccccdr			; 3.2
CONST	ENDS
;	COMDAT __real@4046800000000000
CONST	SEGMENT
__real@4046800000000000 DQ 04046800000000000r	; 45
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@403e000000000000
CONST	SEGMENT
__real@403e000000000000 DQ 0403e000000000000r	; 30
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4012000000000000
CONST	SEGMENT
__real@4012000000000000 DQ 04012000000000000r	; 4.5
CONST	ENDS
;	COMDAT __real@400921fb60000000
CONST	SEGMENT
__real@400921fb60000000 DQ 0400921fb60000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT __real@3fe4cccccccccccd
CONST	SEGMENT
__real@3fe4cccccccccccd DQ 03fe4cccccccccccdr	; 0.65
CONST	ENDS
;	COMDAT __real@3fe3333333333333
CONST	SEGMENT
__real@3fe3333333333333 DQ 03fe3333333333333r	; 0.6
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb6571848000000
CONST	SEGMENT
__real@3fb6571848000000 DQ 03fb6571848000000r	; 0.0872665
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3f99999a
CONST	SEGMENT
__real@3f99999a DD 03f99999ar			; 1.2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f689374bc6a7efa
CONST	SEGMENT
__real@3f689374bc6a7efa DQ 03f689374bc6a7efar	; 0.003
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ecda922
CONST	SEGMENT
__real@3ecda922 DD 03ecda922r			; 0.401681
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3b23d70a
CONST	SEGMENT
__real@3b23d70a DD 03b23d70ar			; 0.0025
CONST	ENDS
;	COMDAT __real@3aa3d70a
CONST	SEGMENT
__real@3aa3d70a DD 03aa3d70ar			; 0.00125
CONST	ENDS
;	COMDAT __real@3a03126f
CONST	SEGMENT
__real@3a03126f DD 03a03126fr			; 0.0005
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EBOEKGCA@Ground?5Friction?5force@
CONST	SEGMENT
??_C@_0BG@EBOEKGCA@Ground?5Friction?5force@ DB 'Ground Friction force', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LGBIOLDJ@Wind@
CONST	SEGMENT
??_C@_04LGBIOLDJ@Wind@ DB 'Wind', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MPODPIKD@Vortex?5ring?5force@
CONST	SEGMENT
??_C@_0BC@MPODPIKD@Vortex?5ring?5force@ DB 'Vortex ring force', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ONPBLKKA@Right?5rotor?5Ground?5effect@
CONST	SEGMENT
??_C@_0BK@ONPBLKKA@Right?5rotor?5Ground?5effect@ DB 'Right rotor Ground e'
	DB	'ffect', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KEABEFD@Left?5rotor?5Ground?5effect@
CONST	SEGMENT
??_C@_0BJ@KEABEFD@Left?5rotor?5Ground?5effect@ DB 'Left rotor Ground effe'
	DB	'ct', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MKNEGMFL@Back?5rotor?5Ground?5effect@
CONST	SEGMENT
??_C@_0BJ@MKNEGMFL@Back?5rotor?5Ground?5effect@ DB 'Back rotor Ground eff'
	DB	'ect', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BDABDLEI@Front?5rotor?5Ground?5effect@
CONST	SEGMENT
??_C@_0BK@BDABDLEI@Front?5rotor?5Ground?5effect@ DB 'Front rotor Ground e'
	DB	'ffect', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CBNCBPEP@Middle?5rotor?5Ground?5effect@
CONST	SEGMENT
??_C@_0BL@CBNCBPEP@Middle?5rotor?5Ground?5effect@ DB 'Middle rotor Ground'
	DB	' effect', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LAMOPNAJ@Vertical?5motion?5drag@
CONST	SEGMENT
??_C@_0BF@LAMOPNAJ@Vertical?5motion?5drag@ DB 'Vertical motion drag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DICEDONG@Lateral?5motion?5drag@
CONST	SEGMENT
??_C@_0BE@DICEDONG@Lateral?5motion?5drag@ DB 'Lateral motion drag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JPPEFMCN@Forward?5motion?5drag@
CONST	SEGMENT
??_C@_0BE@JPPEFMCN@Forward?5motion?5drag@ DB 'Forward motion drag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IEIJHFAG@Realign?5force?5?$CIX?5axis?$CJ@
CONST	SEGMENT
??_C@_0BH@IEIJHFAG@Realign?5force?5?$CIX?5axis?$CJ@ DB 'Realign force (X '
	DB	'axis)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EICDHFJI@Realign?5force?5?$CIY?5axis?$CJ@
CONST	SEGMENT
??_C@_0BH@EICDHFJI@Realign?5force?5?$CIY?5axis?$CJ@ DB 'Realign force (Y '
	DB	'axis)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OJCKBBIP@Yaw?5resistance@
CONST	SEGMENT
??_C@_0P@OJCKBBIP@Yaw?5resistance@ DB 'Yaw resistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JHNCKIDL@Roll?5resistance@
CONST	SEGMENT
??_C@_0BA@JHNCKIDL@Roll?5resistance@ DB 'Roll resistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FPOJGHNF@Pitch?5resistance@
CONST	SEGMENT
??_C@_0BB@FPOJGHNF@Pitch?5resistance@ DB 'Pitch resistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DILBAPLM@Main?5rotor?5angular?5torque@
CONST	SEGMENT
??_C@_0BK@DILBAPLM@Main?5rotor?5angular?5torque@ DB 'Main rotor angular t'
	DB	'orque', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JIJAGCOD@Sonic?5buildup@
CONST	SEGMENT
??_C@_0O@JIJAGCOD@Sonic?5buildup@ DB 'Sonic buildup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LPCPLOKH@Advancing?5blade?5stall@
CONST	SEGMENT
??_C@_0BG@LPCPLOKH@Advancing?5blade?5stall@ DB 'Advancing blade stall', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HFGLNDFM@Retreating?5blade?5stall@
CONST	SEGMENT
??_C@_0BH@HFGLNDFM@Retreating?5blade?5stall@ DB 'Retreating blade stall', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GCGACPAK@Transitional?5lift@
CONST	SEGMENT
??_C@_0BC@GCGACPAK@Transitional?5lift@ DB 'Transitional lift', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JMGDFJEK@Gravity@
CONST	SEGMENT
??_C@_07JMGDFJEK@Gravity@ DB 'Gravity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@INGIGFJO@Angular?5tail?5rotor?5force@
CONST	SEGMENT
??_C@_0BJ@INGIGFJO@Angular?5tail?5rotor?5force@ DB 'Angular tail rotor fo'
	DB	'rce', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BCPABIID@Right?5rotor?5force@
CONST	SEGMENT
??_C@_0BC@BCPABIID@Right?5rotor?5force@ DB 'Right rotor force', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JNCAICOI@Left?5rotor?5force@
CONST	SEGMENT
??_C@_0BB@JNCAICOI@Left?5rotor?5force@ DB 'Left rotor force', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LJEAAOI@Back?5rotor?5force@
CONST	SEGMENT
??_C@_0BB@LJEAAOI@Back?5rotor?5force@ DB 'Back rotor force', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MEMJFFEH@Front?5rotor?5force@
CONST	SEGMENT
??_C@_0BC@MEMJFFEH@Front?5rotor?5force@ DB 'Front rotor force', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BBEFFKGJ@Middle?5rotor?5force@
CONST	SEGMENT
??_C@_0BD@BBEFFKGJ@Middle?5rotor?5force@ DB 'Middle rotor force', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EHBODOFB@DYNAMICS?3?5UNSTABLE@
CONST	SEGMENT
??_C@_0BD@EHBODOFB@DYNAMICS?3?5UNSTABLE@ DB 'DYNAMICS: UNSTABLE', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?res@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA DD 040c00000r ; 6 ; `update_common_attitude_dynamics'::`87'::res
?mass@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA DD 042200000r ; 40 ; `update_common_attitude_dynamics'::`87'::mass
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA DD 0e9H ; `update_common_attitude_dynamics'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CC@FNGFGEEJ@CO_DYN?3?5pedal?5trim?5adjusted?5to?5@
CONST	SEGMENT
??_C@_0CC@FNGFGEEJ@CO_DYN?3?5pedal?5trim?5adjusted?5to?5@ DB 'CO_DYN: ped'
	DB	'al trim adjusted to %f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KCBCMAMP@CO_DYN?3?5roll?5trim?5adjusted?5to?5?$CF@
CONST	SEGMENT
??_C@_0CB@KCBCMAMP@CO_DYN?3?5roll?5trim?5adjusted?5to?5?$CF@ DB 'CO_DYN: '
	DB	'roll trim adjusted to %f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EEIPICNB@CO_DYN?3?5pitch?5trim?5adjusted?5to?5@
CONST	SEGMENT
??_C@_0CC@EEIPICNB@CO_DYN?3?5pitch?5trim?5adjusted?5to?5@ DB 'CO_DYN: pit'
	DB	'ch trim adjusted to %f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\dynamics\common\co_'
	DB	'dyn.c', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NJJBFJAE@CO_DYN?3?5setting?5trim?5?$CFf?0?5?$CFf?0?5?$CFf@
CONST	SEGMENT
??_C@_0CA@NJJBFJAE@CO_DYN?3?5setting?5trim?5?$CFf?0?5?$CFf?0?5?$CFf@ DB 'C'
	DB	'O_DYN: setting trim %f, %f, %f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@N@std@@YGABNABN0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@N@std@@YGABNABN0@Z PROC				; std::min<double>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00013	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00017	76 65		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00019	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00023	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00027	77 02		 ja	 SHORT $LN9@min
  00029	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00035	6a 00		 push	 0
  00037	68 36 15 00 00	 push	 5430			; 00001536H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN12@min
  00051	cc		 int	 3
$LN12@min:
  00052	6a 00		 push	 0
  00054	68 36 15 00 00	 push	 5430			; 00001536H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006e	83 c4 14	 add	 esp, 20			; 00000014H
  00071	33 c0		 xor	 eax, eax
  00073	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00075	33 c0		 xor	 eax, eax
  00077	75 a0		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00079	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007c	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
??$min@N@std@@YGABNABN0@Z ENDP				; std::min<double>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
;	COMDAT ?update_common_attitude_dynamics@@YGXXZ
_TEXT	SEGMENT
tv3132 = -808						; size = 8
tv2797 = -808						; size = 8
tv1827 = -808						; size = 8
tv1746 = -808						; size = 8
tv1662 = -808						; size = 8
tv1579 = -808						; size = 8
tv1495 = -808						; size = 8
tv1411 = -808						; size = 8
tv1210 = -808						; size = 8
tv1072 = -808						; size = 8
tv980 = -808						; size = 8
tv3159 = -804						; size = 4
tv3106 = -804						; size = 4
tv90 = -804						; size = 4
tv3666 = -800						; size = 4
tv3664 = -800						; size = 8
tv3662 = -800						; size = 4
tv3658 = -800						; size = 8
tv3589 = -800						; size = 8
tv3553 = -800						; size = 8
tv3191 = -800						; size = 8
tv3000 = -800						; size = 8
tv2912 = -800						; size = 8
tv2878 = -800						; size = 4
tv2822 = -800						; size = 8
tv2811 = -800						; size = 8
tv2721 = -800						; size = 8
tv2712 = -800						; size = 8
tv2571 = -800						; size = 8
tv2010 = -800						; size = 4
tv1828 = -800						; size = 8
tv1747 = -800						; size = 8
tv1663 = -800						; size = 8
tv1580 = -800						; size = 8
tv1496 = -800						; size = 8
tv1412 = -800						; size = 8
tv1361 = -800						; size = 8
tv1211 = -800						; size = 8
tv1073 = -800						; size = 8
tv1028 = -800						; size = 4
tv981 = -800						; size = 8
tv278 = -800						; size = 4
tv256 = -800						; size = 4
tv179 = -800						; size = 4
tv83 = -800						; size = 4
tv3660 = -796						; size = 4
tv3509 = -796						; size = 4
tv3489 = -796						; size = 4
tv3482 = -796						; size = 4
tv3476 = -796						; size = 4
tv3455 = -796						; size = 4
tv3428 = -796						; size = 4
tv3395 = -796						; size = 4
tv3368 = -796						; size = 4
tv3335 = -796						; size = 4
tv3308 = -796						; size = 4
tv3275 = -796						; size = 4
tv3248 = -796						; size = 4
tv3212 = -796						; size = 4
tv3149 = -796						; size = 4
tv3096 = -796						; size = 4
tv3074 = -796						; size = 4
tv2695 = -796						; size = 4
tv2003 = -796						; size = 4
tv1029 = -796						; size = 4
tv293 = -796						; size = 4
tv270 = -796						; size = 4
tv248 = -796						; size = 4
tv172 = -796						; size = 4
tv129 = -796						; size = 4
tv75 = -796						; size = 4
$T1 = -792						; size = 4
$T2 = -788						; size = 4
$T3 = -784						; size = 4
$T4 = -780						; size = 4
$T5 = -776						; size = 4
$T6 = -772						; size = 4
$T7 = -768						; size = 4
$T8 = -764						; size = 4
$T9 = -760						; size = 4
$T10 = -756						; size = 4
$T11 = -752						; size = 4
$T12 = -748						; size = 4
$T13 = -744						; size = 8
$T14 = -736						; size = 8
$T15 = -728						; size = 4
$T16 = -724						; size = 8
$T17 = -716						; size = 8
$T18 = -708						; size = 8
$T19 = -700						; size = 8
_position$20 = -564					; size = 12
_direction$21 = -552					; size = 12
_force$22 = -540					; size = 4
_velocity_factor$23 = -536				; size = 4
_vibration_limit$24 = -532				; size = 4
_air_over_rotor$25 = -528				; size = 4
_tuning_value$26 = -524					; size = 4
_tuning_value$27 = -520					; size = 4
_tuning_value$28 = -516					; size = 4
_tuning_value$29 = -512					; size = 4
_over_all_g_e_force$30 = -508				; size = 4
_world_position$31 = -504				; size = 12
_terrain_info$32 = -492					; size = 44
_altitude$33 = -448					; size = 4
_Fmax$34 = -444						; size = 4
_sideways_drag$35 = -440				; size = 4
_drag$36 = -436						; size = 4
_Fmax$37 = -432						; size = 4
_drag$38 = -428						; size = 4
_sign$39 = -424						; size = 4
_unnormalised_direction$40 = -420			; size = 12
_drag$41 = -408						; size = 4
_scaling$42 = -404					; size = 4
_a$43 = -400						; size = 4
_rotor_drag$44 = -396					; size = 4
_rotor_induced$45 = -392				; size = 4
_rotor_parasitic$46 = -388				; size = 4
_rotor_friction$47 = -384				; size = 4
_u$48 = -380						; size = 4
_a$49 = -376						; size = 4
_blade_pitch$50 = -372					; size = 4
_engine_response$51 = -368				; size = 4
_i$52 = -364						; size = 4
_p$53 = -360						; size = 4
_f$54 = -356						; size = 4
_normalised_world_motion_vector$55 = -352		; size = 12
_motion_vector_pitch$56 = -340				; size = 4
_vel$57 = -336						; size = 4
_force$58 = -332					; size = 4
_normalised_model_motion_vector$59 = -328		; size = 12
_position$60 = -316					; size = 12
_wind$61 = -304						; size = 12
_temp_model_motion_vector$62 = -292			; size = 12
_mass_percentage$63 = -280				; size = 4
_model_motion_vector$ = -276				; size = 12
_world_motion_vector$ = -264				; size = 12
_direction$ = -252					; size = 12
_rotor_direction$ = -240				; size = 12
_position$ = -228					; size = 12
_model_wind$ = -216					; size = 12
_wind$ = -204						; size = 12
_main_blade_pitch_value$ = -192				; size = 4
_horizontal_velocity$ = -188				; size = 4
_velocity_z_value$ = -184				; size = 4
_main_blade_y_pitch_value$ = -180			; size = 4
_main_blade_x_pitch_value$ = -176			; size = 4
_pitch_value$ = -172					; size = 4
_roll_inertia_value$ = -168				; size = 4
_pitch_inertia_value$ = -164				; size = 4
_heading_inertia_value$ = -160				; size = 4
_tail_rotor_induced_air_value$ = -156			; size = 4
_main_rotor_roll_angle_value$ = -152			; size = 4
_main_rotor_rpm_value$ = -148				; size = 4
_main_rotor_pitch_angle_value$ = -144			; size = 4
_main_rotor_induced_air_value$ = -140			; size = 4
_tail_angular_force$ = -136				; size = 4
_main_angular_force$ = -132				; size = 4
_reaction_force$ = -128					; size = 4
_right_rotor_force$ = -124				; size = 4
_left_rotor_force$ = -120				; size = 4
_back_rotor_force$ = -116				; size = 4
_front_rotor_force$ = -112				; size = 4
_rotor_force$ = -108					; size = 4
_force$ = -104						; size = 4
_edge_rotor_split$ = -100				; size = 4
_rotor_split$ = -96					; size = 4
_motion_vector_magnitude$ = -92				; size = 4
_rotor_edge_value$ = -88				; size = 4
_angle$ = -84						; size = 4
_rotor_radius$ = -80					; size = 4
_attitude$ = -76					; size = 36
_rotor_attitude$ = -40					; size = 36
_model_landed$ = -4					; size = 4
?update_common_attitude_dynamics@@YGXXZ PROC		; update_common_attitude_dynamics, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 03 00
	00		 sub	 esp, 808		; 00000328H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 234  : 
; 235  : 	int
; 236  : 		model_landed;
; 237  : 
; 238  : 	matrix3x3
; 239  : 		rotor_attitude,
; 240  : 		attitude;
; 241  : 
; 242  : 	float
; 243  : 		rotor_radius = current_flight_dynamics->main_rotor_diameter.value * 0.5,

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00011	f3 0f 5a 80 9c
	1d 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7580]
  00019	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00021	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00025	f3 0f 11 45 b0	 movss	 DWORD PTR _rotor_radius$[ebp], xmm0

; 244  : 		angle,
; 245  : 		rotor_edge_value,
; 246  : 		motion_vector_magnitude,
; 247  : 		rotor_split,
; 248  : 		edge_rotor_split,
; 249  : 		force,
; 250  : 		rotor_force,
; 251  : 		front_rotor_force,
; 252  : 		back_rotor_force,
; 253  : 		left_rotor_force,
; 254  : 		right_rotor_force,
; 255  : 		reaction_force,
; 256  : 		main_angular_force,
; 257  : 		tail_angular_force;
; 258  : 
; 259  : 	float
; 260  : 		main_rotor_induced_air_value,
; 261  : 		main_rotor_pitch_angle_value,
; 262  : 		main_rotor_rpm_value,
; 263  : 		main_rotor_roll_angle_value,
; 264  : 		tail_rotor_induced_air_value,
; 265  : 		heading_inertia_value,
; 266  : 		pitch_inertia_value,
; 267  : 		roll_inertia_value,
; 268  : 		pitch_value,
; 269  : 		main_blade_x_pitch_value,
; 270  : 		main_blade_y_pitch_value,
; 271  : 		velocity_z_value,
; 272  : 		horizontal_velocity,
; 273  : 		main_blade_pitch_value;
; 274  : 
; 275  : 	vec3d
; 276  : 		wind,
; 277  : 		model_wind,
; 278  : 		position,
; 279  : 		rotor_direction,
; 280  : 		direction,
; 281  : 		world_motion_vector,
; 282  : 		model_motion_vector;
; 283  : 
; 284  : 	model_landed = !get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT);

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00031	74 0f		 je	 SHORT $LN76@update_com
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00040	eb 24		 jmp	 SHORT $LN77@update_com
$LN76@update_com:
  00042	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  00048	83 c2 33	 add	 edx, 51			; 00000033H
  0004b	52		 push	 edx
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005c	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN77@update_com:
  00066	b9 01 00 00 00	 mov	 ecx, 1
  0006b	85 c9		 test	 ecx, ecx
  0006d	74 0c		 je	 SHORT $LN78@update_com
  0006f	c7 85 e0 fc ff
	ff 04 00 00 00	 mov	 DWORD PTR tv83[ebp], 4
  00079	eb 24		 jmp	 SHORT $LN79@update_com
$LN78@update_com:
  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  00081	83 c2 33	 add	 edx, 51			; 00000033H
  00084	52		 push	 edx
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00095	c7 85 e0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN79@update_com:
  0009f	6a 04		 push	 4
  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000a7	51		 push	 ecx
  000a8	69 95 e4 fc ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  000b2	8b 85 e0 fc ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000bf	ff d1		 call	 ecx
  000c1	85 c0		 test	 eax, eax
  000c3	75 0c		 jne	 SHORT $LN80@update_com
  000c5	c7 85 dc fc ff
	ff 01 00 00 00	 mov	 DWORD PTR tv90[ebp], 1
  000cf	eb 0a		 jmp	 SHORT $LN81@update_com
$LN80@update_com:
  000d1	c7 85 dc fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN81@update_com:
  000db	8b 95 dc fc ff
	ff		 mov	 edx, DWORD PTR tv90[ebp]
  000e1	89 55 fc	 mov	 DWORD PTR _model_landed$[ebp], edx

; 285  : 
; 286  : 	get_local_entity_attitude_matrix (get_gunship_entity (), attitude);

  000e4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000eb	74 0f		 je	 SHORT $LN82@update_com
  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000f2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f4	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv129[ebp], ecx
  000fa	eb 24		 jmp	 SHORT $LN83@update_com
$LN82@update_com:
  000fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  00102	83 c2 35	 add	 edx, 53			; 00000035H
  00105	52		 push	 edx
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00116	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN83@update_com:
  00120	8d 4d b4	 lea	 ecx, DWORD PTR _attitude$[ebp]
  00123	51		 push	 ecx
  00124	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0012a	52		 push	 edx
  0012b	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  00131	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00138	ff d1		 call	 ecx

; 287  : 
; 288  : 	world_motion_vector = current_flight_dynamics->world_motion_vector;

  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0013f	05 3c 1c 00 00	 add	 eax, 7228		; 00001c3cH
  00144	8b 08		 mov	 ecx, DWORD PTR [eax]
  00146	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _world_motion_vector$[ebp], ecx
  0014c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014f	89 95 fc fe ff
	ff		 mov	 DWORD PTR _world_motion_vector$[ebp+4], edx
  00155	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00158	89 85 00 ff ff
	ff		 mov	 DWORD PTR _world_motion_vector$[ebp+8], eax

; 289  : 	model_motion_vector = current_flight_dynamics->model_motion_vector;

  0015e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00163	05 30 1c 00 00	 add	 eax, 7216		; 00001c30H
  00168	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016a	89 8d ec fe ff
	ff		 mov	 DWORD PTR _model_motion_vector$[ebp], ecx
  00170	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00173	89 95 f0 fe ff
	ff		 mov	 DWORD PTR _model_motion_vector$[ebp+4], edx
  00179	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0017c	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _model_motion_vector$[ebp+8], eax

; 290  : 
; 291  : 	//
; 292  : 	// allow for wind
; 293  : 	//
; 294  : 
; 295  : 	position.x = current_flight_dynamics->position.x;

  00182	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00187	f2 0f 5a 80 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+172]
  0018f	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 296  : 	position.y = current_flight_dynamics->position.y;

  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0019c	f2 0f 5a 80 b4
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+180]
  001a4	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 297  : 	position.z = current_flight_dynamics->position.z;

  001ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001b1	f2 0f 5a 80 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+188]
  001b9	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 298  : 
; 299  : 	if (get_current_dynamics_options (DYNAMICS_OPTIONS_WIND))

  001c1	6a 0c		 push	 12			; 0000000cH
  001c3	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  001c8	85 c0		 test	 eax, eax
  001ca	0f 84 c5 00 00
	00		 je	 $LN2@update_com

; 300  : 	{
; 301  : 
; 302  : 		get_session_wind_velocity_at_point (&position, &wind);

  001d0	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _wind$[ebp]
  001d6	50		 push	 eax
  001d7	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  001dd	51		 push	 ecx
  001de	e8 00 00 00 00	 call	 ?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z ; get_session_wind_velocity_at_point
  001e3	dd d8		 fstp	 ST(0)

; 303  : 
; 304  : 		multiply_matrix3x3_vec3d (&model_wind, current_flight_dynamics->attitude, &wind);

  001e5	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _wind$[ebp]
  001eb	50		 push	 eax
  001ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f2	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  001f8	51		 push	 ecx
  001f9	8d 95 28 ff ff
	ff		 lea	 edx, DWORD PTR _model_wind$[ebp]
  001ff	52		 push	 edx
  00200	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 305  : 
; 306  : 		world_motion_vector.x -= wind.x;

  00205	f3 0f 10 85 f8
	fe ff ff	 movss	 xmm0, DWORD PTR _world_motion_vector$[ebp]
  0020d	f3 0f 5c 85 34
	ff ff ff	 subss	 xmm0, DWORD PTR _wind$[ebp]
  00215	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _world_motion_vector$[ebp], xmm0

; 307  : 		world_motion_vector.y -= wind.y;

  0021d	f3 0f 10 85 fc
	fe ff ff	 movss	 xmm0, DWORD PTR _world_motion_vector$[ebp+4]
  00225	f3 0f 5c 85 38
	ff ff ff	 subss	 xmm0, DWORD PTR _wind$[ebp+4]
  0022d	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR _world_motion_vector$[ebp+4], xmm0

; 308  : 		world_motion_vector.z -= wind.z;

  00235	f3 0f 10 85 00
	ff ff ff	 movss	 xmm0, DWORD PTR _world_motion_vector$[ebp+8]
  0023d	f3 0f 5c 85 3c
	ff ff ff	 subss	 xmm0, DWORD PTR _wind$[ebp+8]
  00245	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _world_motion_vector$[ebp+8], xmm0

; 309  : 
; 310  : 		model_motion_vector.x -= model_wind.x;

  0024d	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp]
  00255	f3 0f 5c 85 28
	ff ff ff	 subss	 xmm0, DWORD PTR _model_wind$[ebp]
  0025d	f3 0f 11 85 ec
	fe ff ff	 movss	 DWORD PTR _model_motion_vector$[ebp], xmm0

; 311  : 		model_motion_vector.y -= model_wind.y;

  00265	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp+4]
  0026d	f3 0f 5c 85 2c
	ff ff ff	 subss	 xmm0, DWORD PTR _model_wind$[ebp+4]
  00275	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _model_motion_vector$[ebp+4], xmm0

; 312  : 		model_motion_vector.z -= model_wind.z;

  0027d	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp+8]
  00285	f3 0f 5c 85 30
	ff ff ff	 subss	 xmm0, DWORD PTR _model_wind$[ebp+8]
  0028d	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _model_motion_vector$[ebp+8], xmm0
$LN2@update_com:

; 313  : 	}
; 314  : 
; 315  : 	motion_vector_magnitude = get_3d_vector_magnitude (&current_flight_dynamics->model_motion_vector);

  00295	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0029a	05 30 1c 00 00	 add	 eax, 7216		; 00001c30H
  0029f	50		 push	 eax
  002a0	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  002a5	d9 5d a4	 fstp	 DWORD PTR _motion_vector_magnitude$[ebp]

; 316  : 
; 317  : 	//////////////////////////////////////////////////////////
; 318  : 	// safey check
; 319  : 	//////////////////////////////////////////////////////////
; 320  : 	if (motion_vector_magnitude > 1000)

  002a8	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  002ad	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@447a0000
  002b4	0f 86 1c 03 00
	00		 jbe	 $LN3@update_com

; 321  : 	{
; 322  : 
; 323  : 		debug_log ("DYNAMICS: UNSTABLE");

  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EHBODOFB@DYNAMICS?3?5UNSTABLE@
  002bf	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  002c4	83 c4 04	 add	 esp, 4

; 324  : 
; 325  : 		if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_ALIVE))

  002c7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  002ce	74 0f		 je	 SHORT $LN84@update_com
  002d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d7	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv172[ebp], ecx
  002dd	eb 20		 jmp	 SHORT $LN85@update_com
$LN84@update_com:
  002df	68 45 01 00 00	 push	 325			; 00000145H
  002e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ef	52		 push	 edx
  002f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f5	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN85@update_com:
  002ff	b8 01 00 00 00	 mov	 eax, 1
  00304	85 c0		 test	 eax, eax
  00306	74 0c		 je	 SHORT $LN86@update_com
  00308	c7 85 e0 fc ff
	ff 07 00 00 00	 mov	 DWORD PTR tv179[ebp], 7
  00312	eb 20		 jmp	 SHORT $LN87@update_com
$LN86@update_com:
  00314	68 45 01 00 00	 push	 325			; 00000145H
  00319	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032a	c7 85 e0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv179[ebp], 0
$LN87@update_com:
  00334	6a 07		 push	 7
  00336	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0033c	52		 push	 edx
  0033d	69 85 e4 fc ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv172[ebp], 1116
  00347	8b 8d e0 fc ff
	ff		 mov	 ecx, DWORD PTR tv179[ebp]
  0034d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00354	ff d2		 call	 edx
  00356	85 c0		 test	 eax, eax
  00358	0f 84 73 02 00
	00		 je	 $LN4@update_com

; 326  : 		{
; 327  : 
; 328  : 			current_flight_dynamics->model_motion_vector.x = 0.0;

  0035e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00363	0f 57 c0	 xorps	 xmm0, xmm0
  00366	f3 0f 11 80 30
	1c 00 00	 movss	 DWORD PTR [eax+7216], xmm0

; 329  : 			current_flight_dynamics->model_motion_vector.y = 0.0;

  0036e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00373	0f 57 c0	 xorps	 xmm0, xmm0
  00376	f3 0f 11 80 34
	1c 00 00	 movss	 DWORD PTR [eax+7220], xmm0

; 330  : 			current_flight_dynamics->model_motion_vector.z = 0.0;

  0037e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00383	0f 57 c0	 xorps	 xmm0, xmm0
  00386	f3 0f 11 80 38
	1c 00 00	 movss	 DWORD PTR [eax+7224], xmm0

; 331  : 
; 332  : 			current_flight_dynamics->model_acceleration_vector.x = 0.0;

  0038e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00393	0f 57 c0	 xorps	 xmm0, xmm0
  00396	f3 0f 11 80 48
	1c 00 00	 movss	 DWORD PTR [eax+7240], xmm0

; 333  : 			current_flight_dynamics->model_acceleration_vector.y = 0.0;

  0039e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003a3	0f 57 c0	 xorps	 xmm0, xmm0
  003a6	f3 0f 11 80 4c
	1c 00 00	 movss	 DWORD PTR [eax+7244], xmm0

; 334  : 			current_flight_dynamics->model_acceleration_vector.z = 0.0;

  003ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003b3	0f 57 c0	 xorps	 xmm0, xmm0
  003b6	f3 0f 11 80 50
	1c 00 00	 movss	 DWORD PTR [eax+7248], xmm0

; 335  : 
; 336  : 			current_flight_dynamics->world_motion_vector.x = 0.0;

  003be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003c3	0f 57 c0	 xorps	 xmm0, xmm0
  003c6	f3 0f 11 80 3c
	1c 00 00	 movss	 DWORD PTR [eax+7228], xmm0

; 337  : 			current_flight_dynamics->world_motion_vector.y = 0.0;

  003ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003d3	0f 57 c0	 xorps	 xmm0, xmm0
  003d6	f3 0f 11 80 40
	1c 00 00	 movss	 DWORD PTR [eax+7232], xmm0

; 338  : 			current_flight_dynamics->world_motion_vector.z = 0.0;

  003de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003e3	0f 57 c0	 xorps	 xmm0, xmm0
  003e6	f3 0f 11 80 44
	1c 00 00	 movss	 DWORD PTR [eax+7236], xmm0

; 339  : 
; 340  : 			current_flight_dynamics->world_acceleration_vector.x = 0.0;

  003ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003f3	0f 57 c0	 xorps	 xmm0, xmm0
  003f6	f3 0f 11 80 54
	1c 00 00	 movss	 DWORD PTR [eax+7252], xmm0

; 341  : 			current_flight_dynamics->world_acceleration_vector.y = 0.0;

  003fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00403	0f 57 c0	 xorps	 xmm0, xmm0
  00406	f3 0f 11 80 58
	1c 00 00	 movss	 DWORD PTR [eax+7256], xmm0

; 342  : 			current_flight_dynamics->world_acceleration_vector.z = 0.0;

  0040e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00413	0f 57 c0	 xorps	 xmm0, xmm0
  00416	f3 0f 11 80 5c
	1c 00 00	 movss	 DWORD PTR [eax+7260], xmm0

; 343  : 
; 344  : 			set_client_server_entity_float_value (get_gunship_entity (), FLOAT_TYPE_VELOCITY, 0.0);

  0041e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00425	74 0f		 je	 SHORT $LN88@update_com
  00427	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0042c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042e	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv248[ebp], ecx
  00434	eb 24		 jmp	 SHORT $LN89@update_com
$LN88@update_com:
  00436	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  0043c	83 c2 6f	 add	 edx, 111		; 0000006fH
  0043f	52		 push	 edx
  00440	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00445	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0044a	50		 push	 eax
  0044b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00450	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp], 0
$LN89@update_com:
  0045a	b9 01 00 00 00	 mov	 ecx, 1
  0045f	85 c9		 test	 ecx, ecx
  00461	74 0c		 je	 SHORT $LN90@update_com
  00463	c7 85 e0 fc ff
	ff 93 00 00 00	 mov	 DWORD PTR tv256[ebp], 147 ; 00000093H
  0046d	eb 24		 jmp	 SHORT $LN91@update_com
$LN90@update_com:
  0046f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  00475	83 c2 6f	 add	 edx, 111		; 0000006fH
  00478	52		 push	 edx
  00479	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00483	50		 push	 eax
  00484	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00489	c7 85 e0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv256[ebp], 0
$LN91@update_com:
  00493	51		 push	 ecx
  00494	0f 57 c0	 xorps	 xmm0, xmm0
  00497	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049c	68 93 00 00 00	 push	 147			; 00000093H
  004a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004a7	51		 push	 ecx
  004a8	69 95 e4 fc ff
	ff 78 05 00 00	 imul	 edx, DWORD PTR tv248[ebp], 1400
  004b2	8b 85 e0 fc ff
	ff		 mov	 eax, DWORD PTR tv256[ebp]
  004b8	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  004bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  004c5	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  004c8	ff d0		 call	 eax

; 345  : 
; 346  : 			set_client_server_entity_vec3d (get_gunship_entity (), VEC3D_TYPE_MOTION_VECTOR, &current_flight_dynamics->model_motion_vector);

  004ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  004d1	74 0f		 je	 SHORT $LN92@update_com
  004d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004da	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv270[ebp], ecx
  004e0	eb 24		 jmp	 SHORT $LN93@update_com
$LN92@update_com:
  004e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  004e8	83 c2 71	 add	 edx, 113		; 00000071H
  004eb	52		 push	 edx
  004ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004f6	50		 push	 eax
  004f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004fc	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv270[ebp], 0
$LN93@update_com:
  00506	b9 01 00 00 00	 mov	 ecx, 1
  0050b	85 c9		 test	 ecx, ecx
  0050d	74 0c		 je	 SHORT $LN94@update_com
  0050f	c7 85 e0 fc ff
	ff 06 00 00 00	 mov	 DWORD PTR tv278[ebp], 6
  00519	eb 24		 jmp	 SHORT $LN95@update_com
$LN94@update_com:
  0051b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  00521	83 c2 71	 add	 edx, 113		; 00000071H
  00524	52		 push	 edx
  00525	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0052f	50		 push	 eax
  00530	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00535	c7 85 e0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv278[ebp], 0
$LN95@update_com:
  0053f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00545	81 c1 30 1c 00
	00		 add	 ecx, 7216		; 00001c30H
  0054b	51		 push	 ecx
  0054c	6a 06		 push	 6
  0054e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00554	52		 push	 edx
  00555	69 85 e4 fc ff
	ff c0 00 00 00	 imul	 eax, DWORD PTR tv270[ebp], 192
  0055f	8b 8d e0 fc ff
	ff		 mov	 ecx, DWORD PTR tv278[ebp]
  00565	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*8]
  0056c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00571	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00574	ff d1		 call	 ecx

; 347  : 
; 348  : 			kill_client_server_entity (get_gunship_entity ());

  00576	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0057d	74 0f		 je	 SHORT $LN96@update_com
  0057f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00584	8b 08		 mov	 ecx, DWORD PTR [eax]
  00586	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv293[ebp], ecx
  0058c	eb 24		 jmp	 SHORT $LN97@update_com
$LN96@update_com:
  0058e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_attitude_dynamics@@YGXXZ@4JA
  00594	83 c2 73	 add	 edx, 115		; 00000073H
  00597	52		 push	 edx
  00598	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0059d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005a2	50		 push	 eax
  005a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005a8	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv293[ebp], 0
$LN97@update_com:
  005b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  005b8	51		 push	 ecx
  005b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  005bf	c1 e2 02	 shl	 edx, 2
  005c2	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR tv293[ebp]
  005c8	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  005cf	ff d1		 call	 ecx
$LN4@update_com:

; 349  : 
; 350  : //			start_game_exit (GAME_EXIT_CRASH, FALSE);
; 351  : 		}
; 352  : 
; 353  : 		return;

  005d1	e9 23 3b 00 00	 jmp	 $LN1@update_com
$LN3@update_com:

; 354  : 	}
; 355  : 	//////////////////////////////////////////////////////////
; 356  : 
; 357  : 	//
; 358  : 	// Set up variables
; 359  : 	//
; 360  : 
; 361  : 	main_rotor_induced_air_value = current_flight_dynamics->main_rotor_induced_air.value * current_flight_dynamics->main_rotor_induced_air.modifier;

  005d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005e1	f3 0f 10 80 6c
	1d 00 00	 movss	 xmm0, DWORD PTR [eax+7532]
  005e9	f3 0f 59 81 68
	1d 00 00	 mulss	 xmm0, DWORD PTR [ecx+7528]
  005f1	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _main_rotor_induced_air_value$[ebp], xmm0

; 362  : 	main_rotor_pitch_angle_value = current_flight_dynamics->main_rotor_pitch_angle.value * current_flight_dynamics->main_rotor_pitch_angle.modifier;

  005f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00604	f3 0f 10 80 fc
	1d 00 00	 movss	 xmm0, DWORD PTR [eax+7676]
  0060c	f3 0f 59 81 f8
	1d 00 00	 mulss	 xmm0, DWORD PTR [ecx+7672]
  00614	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _main_rotor_pitch_angle_value$[ebp], xmm0

; 363  : 	main_rotor_rpm_value = current_flight_dynamics->main_rotor_rpm.value * current_flight_dynamics->main_rotor_rpm.modifier;

  0061c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00621	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00627	f3 0f 10 80 14
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7700]
  0062f	f3 0f 59 81 10
	1e 00 00	 mulss	 xmm0, DWORD PTR [ecx+7696]
  00637	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _main_rotor_rpm_value$[ebp], xmm0

; 364  : 	main_rotor_roll_angle_value = current_flight_dynamics->main_rotor_roll_angle.value * current_flight_dynamics->main_rotor_roll_angle.modifier;

  0063f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00644	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0064a	f3 0f 10 80 e4
	1d 00 00	 movss	 xmm0, DWORD PTR [eax+7652]
  00652	f3 0f 59 81 e0
	1d 00 00	 mulss	 xmm0, DWORD PTR [ecx+7648]
  0065a	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _main_rotor_roll_angle_value$[ebp], xmm0

; 365  : 	tail_rotor_induced_air_value = current_flight_dynamics->tail_rotor_induced_air.value * current_flight_dynamics->tail_rotor_induced_air.modifier;

  00662	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00667	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0066d	f3 0f 10 80 04
	1f 00 00	 movss	 xmm0, DWORD PTR [eax+7940]
  00675	f3 0f 59 81 00
	1f 00 00	 mulss	 xmm0, DWORD PTR [ecx+7936]
  0067d	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _tail_rotor_induced_air_value$[ebp], xmm0

; 366  : 	heading_inertia_value = current_flight_dynamics->heading_inertia.value * current_flight_dynamics->heading_inertia.modifier;

  00685	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0068a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00690	f3 0f 10 80 34
	22 00 00	 movss	 xmm0, DWORD PTR [eax+8756]
  00698	f3 0f 59 81 30
	22 00 00	 mulss	 xmm0, DWORD PTR [ecx+8752]
  006a0	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _heading_inertia_value$[ebp], xmm0

; 367  : 	pitch_inertia_value = current_flight_dynamics->pitch_inertia.value * current_flight_dynamics->pitch_inertia.modifier;

  006a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006b3	f3 0f 10 80 4c
	22 00 00	 movss	 xmm0, DWORD PTR [eax+8780]
  006bb	f3 0f 59 81 48
	22 00 00	 mulss	 xmm0, DWORD PTR [ecx+8776]
  006c3	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _pitch_inertia_value$[ebp], xmm0

; 368  : 	roll_inertia_value = current_flight_dynamics->roll_inertia.value * current_flight_dynamics->roll_inertia.modifier;

  006cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006d6	f3 0f 10 80 64
	22 00 00	 movss	 xmm0, DWORD PTR [eax+8804]
  006de	f3 0f 59 81 60
	22 00 00	 mulss	 xmm0, DWORD PTR [ecx+8800]
  006e6	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _roll_inertia_value$[ebp], xmm0

; 369  : 	pitch_value = current_flight_dynamics->pitch.value * current_flight_dynamics->pitch.modifier; // + debug_var_y * rad(1.0);

  006ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006f9	f3 0f 10 80 5c
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8540]
  00701	f3 0f 59 81 58
	21 00 00	 mulss	 xmm0, DWORD PTR [ecx+8536]
  00709	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _pitch_value$[ebp], xmm0

; 370  : 	main_blade_x_pitch_value = current_flight_dynamics->main_blade_x_pitch.value * current_flight_dynamics->main_blade_x_pitch.modifier;

  00711	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00716	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0071c	f3 0f 10 80 a4
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7844]
  00724	f3 0f 59 81 a0
	1e 00 00	 mulss	 xmm0, DWORD PTR [ecx+7840]
  0072c	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _main_blade_x_pitch_value$[ebp], xmm0

; 371  : 	main_blade_y_pitch_value = current_flight_dynamics->main_blade_y_pitch.value * current_flight_dynamics->main_blade_y_pitch.modifier;

  00734	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00739	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0073f	f3 0f 10 80 bc
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7868]
  00747	f3 0f 59 81 b8
	1e 00 00	 mulss	 xmm0, DWORD PTR [ecx+7864]
  0074f	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _main_blade_y_pitch_value$[ebp], xmm0

; 372  : 	velocity_z_value = current_flight_dynamics->velocity_z.value * current_flight_dynamics->velocity_z.modifier;

  00757	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0075c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00762	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  0076a	f3 0f 59 81 98
	20 00 00	 mulss	 xmm0, DWORD PTR [ecx+8344]
  00772	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _velocity_z_value$[ebp], xmm0

; 373  : 	main_blade_pitch_value = current_flight_dynamics->main_blade_pitch.value * current_flight_dynamics->main_blade_pitch.modifier;

  0077a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0077f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00785	f3 0f 10 80 8c
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7820]
  0078d	f3 0f 59 81 88
	1e 00 00	 mulss	 xmm0, DWORD PTR [ecx+7816]
  00795	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _main_blade_pitch_value$[ebp], xmm0

; 374  : 
; 375  : 	rotor_direction.x = 0.0;

  0079d	0f 57 c0	 xorps	 xmm0, xmm0
  007a0	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _rotor_direction$[ebp], xmm0

; 376  : 	rotor_direction.y = 1.0;

  007a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  007b0	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _rotor_direction$[ebp+4], xmm0

; 377  : 	rotor_direction.z = 0.0;

  007b8	0f 57 c0	 xorps	 xmm0, xmm0
  007bb	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _rotor_direction$[ebp+8], xmm0

; 378  : 
; 379  : 	get_3d_transformation_heading_pitch_matrix(rotor_attitude, main_rotor_roll_angle_value, rad(5.0) - main_rotor_pitch_angle_value);

  007c3	f3 0f 5a 85 70
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_pitch_angle_value$[ebp]
  007cb	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb6571848000000
  007d3	f2 0f 5c c8	 subsd	 xmm1, xmm0
  007d7	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  007db	51		 push	 ecx
  007dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e1	51		 push	 ecx
  007e2	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_roll_angle_value$[ebp]
  007ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ef	8d 45 d8	 lea	 eax, DWORD PTR _rotor_attitude$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?get_3d_transformation_heading_pitch_matrix@@YGXQAY02MMM@Z ; get_3d_transformation_heading_pitch_matrix

; 380  : 	multiply_transpose_matrix3x3_vec3d(&rotor_direction, rotor_attitude, &rotor_direction);

  007f8	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  007fe	50		 push	 eax
  007ff	8d 4d d8	 lea	 ecx, DWORD PTR _rotor_attitude$[ebp]
  00802	51		 push	 ecx
  00803	8d 95 10 ff ff
	ff		 lea	 edx, DWORD PTR _rotor_direction$[ebp]
  00809	52		 push	 edx
  0080a	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 381  : 
; 382  : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 383  : 	// Rotor Force Analysis
; 384  : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 385  : 
; 386  : 	angle = 1.0;

  0080f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00817	f3 0f 11 45 ac	 movss	 DWORD PTR _angle$[ebp], xmm0

; 387  : 	rotor_split = 0.90;

  0081c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00824	f3 0f 11 45 a0	 movss	 DWORD PTR _rotor_split$[ebp], xmm0

; 388  : 
; 389  : 	edge_rotor_split = 1.0 - rotor_split;

  00829	f3 0f 5a 45 a0	 cvtss2sd xmm0, DWORD PTR _rotor_split$[ebp]
  0082e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00836	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0083a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0083e	f3 0f 11 45 9c	 movss	 DWORD PTR _edge_rotor_split$[ebp], xmm0

; 390  : 	edge_rotor_split /= 8.0;

  00843	f3 0f 5a 45 9c	 cvtss2sd xmm0, DWORD PTR _edge_rotor_split$[ebp]
  00848	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4020000000000000
  00850	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00854	f3 0f 11 45 9c	 movss	 DWORD PTR _edge_rotor_split$[ebp], xmm0

; 391  : 
; 392  : 	rotor_edge_value = 0.401681;

  00859	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecda922
  00861	f3 0f 11 45 a8	 movss	 DWORD PTR _rotor_edge_value$[ebp], xmm0

; 393  : 
; 394  : 	////////////////////////////////////////////
; 395  : 	// middle of rotor disc
; 396  : 	////////////////////////////////////////////
; 397  : 	{
; 398  : 
; 399  : 		rotor_force = rotor_split * main_rotor_induced_air_value;

  00866	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _rotor_split$[ebp]
  0086b	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  00873	f3 0f 11 45 94	 movss	 DWORD PTR _rotor_force$[ebp], xmm0

; 400  : 
; 401  : 		if ((current_flight_dynamics->rotor_brake) && (current_flight_dynamics->main_rotor_rpm.max != 0.0))

  00878	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0087d	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00883	c1 e9 05	 shr	 ecx, 5
  00886	83 e1 01	 and	 ecx, 1
  00889	74 3a		 je	 SHORT $LN5@update_com
  0088b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00890	f3 0f 5a 80 20
	1e 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7712]
  00898	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  008a0	9f		 lahf
  008a1	f6 c4 44	 test	 ah, 68			; 00000044H
  008a4	7b 1f		 jnp	 SHORT $LN5@update_com

; 402  : 		{
; 403  : 
; 404  : 			rotor_force *= main_rotor_rpm_value / current_flight_dynamics->main_rotor_rpm.max;

  008a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008ab	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_rpm_value$[ebp]
  008b3	f3 0f 5e 80 20
	1e 00 00	 divss	 xmm0, DWORD PTR [eax+7712]
  008bb	f3 0f 59 45 94	 mulss	 xmm0, DWORD PTR _rotor_force$[ebp]
  008c0	f3 0f 11 45 94	 movss	 DWORD PTR _rotor_force$[ebp], xmm0
$LN5@update_com:

; 405  : 		}
; 406  : 
; 407  : 		position.x = 0.0;

  008c5	0f 57 c0	 xorps	 xmm0, xmm0
  008c8	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 408  : 		position.y = 0.0;

  008d0	0f 57 c0	 xorps	 xmm0, xmm0
  008d3	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 409  : 		position.z = 0.0;

  008db	0f 57 c0	 xorps	 xmm0, xmm0
  008de	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 410  : 
; 411  : 		add_dynamic_force ("Middle rotor force", command_line_dynamics_main_rotor_lift * rotor_force, 0.0, &position, &rotor_direction, FALSE);

  008e6	6a 00		 push	 0
  008e8	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  008ee	50		 push	 eax
  008ef	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  008f5	51		 push	 ecx
  008f6	51		 push	 ecx
  008f7	0f 57 c0	 xorps	 xmm0, xmm0
  008fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?command_line_dynamics_main_rotor_lift@@3MA
  00907	f3 0f 59 45 94	 mulss	 xmm0, DWORD PTR _rotor_force$[ebp]
  0090c	51		 push	 ecx
  0090d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00912	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BBEFFKGJ@Middle?5rotor?5force@
  00917	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 412  : 	}
; 413  : 
; 414  : 	////////////////////////////////////////////
; 415  : 	// front of rotor disc
; 416  : 	////////////////////////////////////////////
; 417  : 	{
; 418  : 
; 419  : 		angle = main_rotor_pitch_angle_value;

  0091c	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_pitch_angle_value$[ebp]
  00924	f3 0f 11 45 ac	 movss	 DWORD PTR _angle$[ebp], xmm0

; 420  : 
; 421  : 		front_rotor_force = rotor_edge_value +

  00929	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _rotor_edge_value$[ebp]
  0092e	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _angle$[ebp]
  00933	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe3333333333333
  0093b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00940	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00946	f3 0f 10 90 08
	1e 00 00	 movss	 xmm2, DWORD PTR [eax+7688]
  0094e	f3 0f 5c 91 04
	1e 00 00	 subss	 xmm2, DWORD PTR [ecx+7684]
  00956	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  0095a	f2 0f 5e ca	 divsd	 xmm1, xmm2
  0095e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00962	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00968	f3 0f 5a 8a a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [edx+7080]
  00970	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fc999999999999a
  00978	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0097d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00983	f3 0f 10 90 b4
	1b 00 00	 movss	 xmm2, DWORD PTR [eax+7092]
  0098b	f3 0f 5c 91 b0
	1b 00 00	 subss	 xmm2, DWORD PTR [ecx+7088]
  00993	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  00997	f2 0f 5e ca	 divsd	 xmm1, xmm2
  0099b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0099f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009a3	f3 0f 11 45 90	 movss	 DWORD PTR _front_rotor_force$[ebp], xmm0

; 422  : 				(0.6 * angle) / (current_flight_dynamics->main_rotor_pitch_angle.max - current_flight_dynamics->main_rotor_pitch_angle.min) +
; 423  : 				(0.2 * current_flight_dynamics->input_data.collective.value) / (current_flight_dynamics->input_data.collective.max - current_flight_dynamics->input_data.collective.min);
; 424  : 
; 425  : 		front_rotor_force *= main_rotor_rpm_value / current_flight_dynamics->main_rotor_rpm.max;

  009a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  009ad	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_rpm_value$[ebp]
  009b5	f3 0f 5e 80 20
	1e 00 00	 divss	 xmm0, DWORD PTR [eax+7712]
  009bd	f3 0f 59 45 90	 mulss	 xmm0, DWORD PTR _front_rotor_force$[ebp]
  009c2	f3 0f 11 45 90	 movss	 DWORD PTR _front_rotor_force$[ebp], xmm0

; 426  : 
; 427  : 		position.x = 0.0;

  009c7	0f 57 c0	 xorps	 xmm0, xmm0
  009ca	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 428  : 		position.y = 0.0;

  009d2	0f 57 c0	 xorps	 xmm0, xmm0
  009d5	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 429  : 		position.z = rotor_radius;

  009dd	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  009e2	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 430  : 
; 431  : 		add_dynamic_force ("Front rotor force", command_line_dynamics_main_rotor_lift * front_rotor_force, 0.0, &position, &rotor_direction, FALSE);

  009ea	6a 00		 push	 0
  009ec	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  009f2	50		 push	 eax
  009f3	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  009f9	51		 push	 ecx
  009fa	51		 push	 ecx
  009fb	0f 57 c0	 xorps	 xmm0, xmm0
  009fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a03	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?command_line_dynamics_main_rotor_lift@@3MA
  00a0b	f3 0f 59 45 90	 mulss	 xmm0, DWORD PTR _front_rotor_force$[ebp]
  00a10	51		 push	 ecx
  00a11	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a16	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MEMJFFEH@Front?5rotor?5force@
  00a1b	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 432  : 	}
; 433  : 	////////////////////////////////////////////
; 434  : 	// back of rotor disc
; 435  : 	////////////////////////////////////////////
; 436  : 	{
; 437  : 
; 438  : 		angle = main_rotor_pitch_angle_value;

  00a20	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_pitch_angle_value$[ebp]
  00a28	f3 0f 11 45 ac	 movss	 DWORD PTR _angle$[ebp], xmm0

; 439  : 
; 440  : 		back_rotor_force = rotor_edge_value -

  00a2d	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _rotor_edge_value$[ebp]
  00a32	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _angle$[ebp]
  00a37	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe3333333333333
  00a3f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a44	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a4a	f3 0f 10 90 08
	1e 00 00	 movss	 xmm2, DWORD PTR [eax+7688]
  00a52	f3 0f 5c 91 04
	1e 00 00	 subss	 xmm2, DWORD PTR [ecx+7684]
  00a5a	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  00a5e	f2 0f 5e ca	 divsd	 xmm1, xmm2
  00a62	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00a66	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a6c	f3 0f 5a 8a a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [edx+7080]
  00a74	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fc999999999999a
  00a7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a81	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a87	f3 0f 10 90 b4
	1b 00 00	 movss	 xmm2, DWORD PTR [eax+7092]
  00a8f	f3 0f 5c 91 b0
	1b 00 00	 subss	 xmm2, DWORD PTR [ecx+7088]
  00a97	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  00a9b	f2 0f 5e ca	 divsd	 xmm1, xmm2
  00a9f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00aa3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00aa7	f3 0f 11 45 8c	 movss	 DWORD PTR _back_rotor_force$[ebp], xmm0

; 441  : 				(0.6 * angle) / (current_flight_dynamics->main_rotor_pitch_angle.max - current_flight_dynamics->main_rotor_pitch_angle.min) +
; 442  : 				(0.2 * current_flight_dynamics->input_data.collective.value) / (current_flight_dynamics->input_data.collective.max - current_flight_dynamics->input_data.collective.min);
; 443  : 
; 444  : 		back_rotor_force *= main_rotor_rpm_value / current_flight_dynamics->main_rotor_rpm.max;

  00aac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ab1	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_rpm_value$[ebp]
  00ab9	f3 0f 5e 80 20
	1e 00 00	 divss	 xmm0, DWORD PTR [eax+7712]
  00ac1	f3 0f 59 45 8c	 mulss	 xmm0, DWORD PTR _back_rotor_force$[ebp]
  00ac6	f3 0f 11 45 8c	 movss	 DWORD PTR _back_rotor_force$[ebp], xmm0

; 445  : 
; 446  : 		position.x = 0.0;

  00acb	0f 57 c0	 xorps	 xmm0, xmm0
  00ace	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 447  : 		position.y = 0.0;

  00ad6	0f 57 c0	 xorps	 xmm0, xmm0
  00ad9	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 448  : 		position.z = -rotor_radius;

  00ae1	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  00ae6	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00aed	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 449  : 
; 450  : 		add_dynamic_force ("Back rotor force", command_line_dynamics_main_rotor_lift * back_rotor_force, 0.0, &position, &rotor_direction, FALSE);

  00af5	6a 00		 push	 0
  00af7	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  00afd	50		 push	 eax
  00afe	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  00b04	51		 push	 ecx
  00b05	51		 push	 ecx
  00b06	0f 57 c0	 xorps	 xmm0, xmm0
  00b09	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b0e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?command_line_dynamics_main_rotor_lift@@3MA
  00b16	f3 0f 59 45 8c	 mulss	 xmm0, DWORD PTR _back_rotor_force$[ebp]
  00b1b	51		 push	 ecx
  00b1c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b21	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LJEAAOI@Back?5rotor?5force@
  00b26	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 451  : 	}
; 452  : 	////////////////////////////////////////////
; 453  : 	// left of rotor disc
; 454  : 	////////////////////////////////////////////
; 455  : 	{
; 456  : 
; 457  : 		angle = main_rotor_roll_angle_value;

  00b2b	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_roll_angle_value$[ebp]
  00b33	f3 0f 11 45 ac	 movss	 DWORD PTR _angle$[ebp], xmm0

; 458  : 
; 459  : 		left_rotor_force = rotor_edge_value -

  00b38	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _rotor_edge_value$[ebp]
  00b3d	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _angle$[ebp]
  00b42	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe3333333333333
  00b4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b4f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b55	f3 0f 10 90 f0
	1d 00 00	 movss	 xmm2, DWORD PTR [eax+7664]
  00b5d	f3 0f 5c 91 ec
	1d 00 00	 subss	 xmm2, DWORD PTR [ecx+7660]
  00b65	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  00b69	f2 0f 5e ca	 divsd	 xmm1, xmm2
  00b6d	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00b71	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b77	f3 0f 5a 8a a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [edx+7080]
  00b7f	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fc999999999999a
  00b87	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b8c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b92	f3 0f 10 90 b4
	1b 00 00	 movss	 xmm2, DWORD PTR [eax+7092]
  00b9a	f3 0f 5c 91 b0
	1b 00 00	 subss	 xmm2, DWORD PTR [ecx+7088]
  00ba2	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  00ba6	f2 0f 5e ca	 divsd	 xmm1, xmm2
  00baa	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00bae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bb2	f3 0f 11 45 88	 movss	 DWORD PTR _left_rotor_force$[ebp], xmm0

; 460  : 				(0.6 * angle) / (current_flight_dynamics->main_rotor_roll_angle.max - current_flight_dynamics->main_rotor_roll_angle.min) +
; 461  : 				(0.2 * current_flight_dynamics->input_data.collective.value) / (current_flight_dynamics->input_data.collective.max - current_flight_dynamics->input_data.collective.min);
; 462  : 
; 463  : 		left_rotor_force *= main_rotor_rpm_value / current_flight_dynamics->main_rotor_rpm.max;

  00bb7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00bbc	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_rpm_value$[ebp]
  00bc4	f3 0f 5e 80 20
	1e 00 00	 divss	 xmm0, DWORD PTR [eax+7712]
  00bcc	f3 0f 59 45 88	 mulss	 xmm0, DWORD PTR _left_rotor_force$[ebp]
  00bd1	f3 0f 11 45 88	 movss	 DWORD PTR _left_rotor_force$[ebp], xmm0

; 464  : 
; 465  : 		position.x = rotor_radius;

  00bd6	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  00bdb	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 466  : 		position.y = 0.0;

  00be3	0f 57 c0	 xorps	 xmm0, xmm0
  00be6	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 467  : 		position.z = 0.0;

  00bee	0f 57 c0	 xorps	 xmm0, xmm0
  00bf1	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 468  : 
; 469  : 		add_dynamic_force ("Left rotor force", command_line_dynamics_main_rotor_lift * left_rotor_force, 0.0, &position, &rotor_direction, FALSE);

  00bf9	6a 00		 push	 0
  00bfb	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  00c01	50		 push	 eax
  00c02	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  00c08	51		 push	 ecx
  00c09	51		 push	 ecx
  00c0a	0f 57 c0	 xorps	 xmm0, xmm0
  00c0d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c12	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?command_line_dynamics_main_rotor_lift@@3MA
  00c1a	f3 0f 59 45 88	 mulss	 xmm0, DWORD PTR _left_rotor_force$[ebp]
  00c1f	51		 push	 ecx
  00c20	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c25	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JNCAICOI@Left?5rotor?5force@
  00c2a	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 470  : 	}
; 471  : 	////////////////////////////////////////////
; 472  : 	// right of rotor disc
; 473  : 	////////////////////////////////////////////
; 474  : 	{
; 475  : 
; 476  : 		angle = main_rotor_roll_angle_value;

  00c2f	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_roll_angle_value$[ebp]
  00c37	f3 0f 11 45 ac	 movss	 DWORD PTR _angle$[ebp], xmm0

; 477  : 
; 478  : 		right_rotor_force = rotor_edge_value +

  00c3c	f3 0f 5a 45 a8	 cvtss2sd xmm0, DWORD PTR _rotor_edge_value$[ebp]
  00c41	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _angle$[ebp]
  00c46	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe3333333333333
  00c4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c53	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c59	f3 0f 10 90 f0
	1d 00 00	 movss	 xmm2, DWORD PTR [eax+7664]
  00c61	f3 0f 5c 91 ec
	1d 00 00	 subss	 xmm2, DWORD PTR [ecx+7660]
  00c69	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  00c6d	f2 0f 5e ca	 divsd	 xmm1, xmm2
  00c71	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00c75	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c7b	f3 0f 5a 8a a8
	1b 00 00	 cvtss2sd xmm1, DWORD PTR [edx+7080]
  00c83	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fc999999999999a
  00c8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c90	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c96	f3 0f 10 90 b4
	1b 00 00	 movss	 xmm2, DWORD PTR [eax+7092]
  00c9e	f3 0f 5c 91 b0
	1b 00 00	 subss	 xmm2, DWORD PTR [ecx+7088]
  00ca6	f3 0f 5a d2	 cvtss2sd xmm2, xmm2
  00caa	f2 0f 5e ca	 divsd	 xmm1, xmm2
  00cae	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00cb2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cb6	f3 0f 11 45 84	 movss	 DWORD PTR _right_rotor_force$[ebp], xmm0

; 479  : 				(0.6 * angle) / (current_flight_dynamics->main_rotor_roll_angle.max - current_flight_dynamics->main_rotor_roll_angle.min) +
; 480  : 				(0.2 * current_flight_dynamics->input_data.collective.value) / (current_flight_dynamics->input_data.collective.max - current_flight_dynamics->input_data.collective.min);
; 481  : 
; 482  : 		right_rotor_force *= main_rotor_rpm_value / current_flight_dynamics->main_rotor_rpm.max;

  00cbb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00cc0	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_rpm_value$[ebp]
  00cc8	f3 0f 5e 80 20
	1e 00 00	 divss	 xmm0, DWORD PTR [eax+7712]
  00cd0	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _right_rotor_force$[ebp]
  00cd5	f3 0f 11 45 84	 movss	 DWORD PTR _right_rotor_force$[ebp], xmm0

; 483  : 
; 484  : 		position.x = -rotor_radius;

  00cda	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  00cdf	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00ce6	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 485  : 		position.y = 0.0;

  00cee	0f 57 c0	 xorps	 xmm0, xmm0
  00cf1	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 486  : 		position.z = 0.0;

  00cf9	0f 57 c0	 xorps	 xmm0, xmm0
  00cfc	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 487  : 
; 488  : 		add_dynamic_force ("Right rotor force", command_line_dynamics_main_rotor_lift * right_rotor_force, 0.0, &position, &rotor_direction, FALSE);

  00d04	6a 00		 push	 0
  00d06	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  00d0c	50		 push	 eax
  00d0d	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  00d13	51		 push	 ecx
  00d14	51		 push	 ecx
  00d15	0f 57 c0	 xorps	 xmm0, xmm0
  00d18	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d1d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?command_line_dynamics_main_rotor_lift@@3MA
  00d25	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _right_rotor_force$[ebp]
  00d2a	51		 push	 ecx
  00d2b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d30	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BCPABIID@Right?5rotor?5force@
  00d35	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 489  : 	}
; 490  : 	////////////////////////////////////////////
; 491  : 	// tail rotor disc
; 492  : 	////////////////////////////////////////////
; 493  : 	{
; 494  : 
; 495  : 		tail_angular_force = tail_rotor_induced_air_value * current_flight_dynamics->tail_boom_length.value;

  00d3a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d3f	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _tail_rotor_induced_air_value$[ebp]
  00d47	f3 0f 59 80 ac
	1f 00 00	 mulss	 xmm0, DWORD PTR [eax+8108]
  00d4f	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _tail_angular_force$[ebp], xmm0

; 496  : 		tail_angular_force *= heading_inertia_value;

  00d57	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _tail_angular_force$[ebp]
  00d5f	f3 0f 59 85 60
	ff ff ff	 mulss	 xmm0, DWORD PTR _heading_inertia_value$[ebp]
  00d67	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _tail_angular_force$[ebp], xmm0

; 497  : 
; 498  : 		position.x = 0.0;

  00d6f	0f 57 c0	 xorps	 xmm0, xmm0
  00d72	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 499  : 		position.y = 0.0; // -0.08022;

  00d7a	0f 57 c0	 xorps	 xmm0, xmm0
  00d7d	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 500  : 		position.z = -current_flight_dynamics->tail_boom_length.value;

  00d85	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d8a	f3 0f 10 80 ac
	1f 00 00	 movss	 xmm0, DWORD PTR [eax+8108]
  00d92	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00d99	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 501  : 
; 502  : 		direction.x = -current_flight_dynamics->rotor_rotation_direction;

  00da1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00da6	0f bf 88 1c 25
	00 00		 movsx	 ecx, WORD PTR [eax+9500]
  00dad	f7 d9		 neg	 ecx
  00daf	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00db3	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 503  : 		direction.y = 0.0;

  00dbb	0f 57 c0	 xorps	 xmm0, xmm0
  00dbe	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 504  : 		direction.z = 0.0;

  00dc6	0f 57 c0	 xorps	 xmm0, xmm0
  00dc9	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 505  : 
; 506  : 		if (model_landed)

  00dd1	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  00dd5	0f 84 a0 00 00
	00		 je	 $LN8@update_com

; 507  : 		{
; 508  : 
; 509  : 			position.y = 0.0;

  00ddb	0f 57 c0	 xorps	 xmm0, xmm0
  00dde	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 510  : 
; 511  : 			if ((current_flight_dynamics->input_data.pedal_input_pressure != PEDAL_PRESSURE_LEFT) &&

  00de6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00deb	83 b8 20 1c 00
	00 01		 cmp	 DWORD PTR [eax+7200], 1
  00df2	74 1b		 je	 SHORT $LN7@update_com
  00df4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00df9	83 b8 20 1c 00
	00 02		 cmp	 DWORD PTR [eax+7200], 2
  00e00	74 0d		 je	 SHORT $LN7@update_com

; 512  : 				(current_flight_dynamics->input_data.pedal_input_pressure != PEDAL_PRESSURE_RIGHT))
; 513  : 			{
; 514  : 
; 515  : 				tail_angular_force = 0.0;

  00e02	0f 57 c0	 xorps	 xmm0, xmm0
  00e05	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _tail_angular_force$[ebp], xmm0

; 516  : 			}
; 517  : 			else

  00e0d	eb 6c		 jmp	 SHORT $LN8@update_com
$LN7@update_com:

; 518  : 			{
; 519  : 
; 520  : 				tail_angular_force *= min (fabs (velocity_z_value) / 15.0, 1.0);

  00e0f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00e17	f2 0f 11 85 44
	fd ff ff	 movsd	 QWORD PTR $T19[ebp], xmm0
  00e1f	51		 push	 ecx
  00e20	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  00e28	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e2d	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00e32	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv2571[ebp]
  00e38	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv2571[ebp]
  00e40	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@402e000000000000
  00e48	f2 0f 11 85 3c
	fd ff ff	 movsd	 QWORD PTR $T18[ebp], xmm0
  00e50	8d 85 44 fd ff
	ff		 lea	 eax, DWORD PTR $T19[ebp]
  00e56	50		 push	 eax
  00e57	8d 8d 3c fd ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  00e5d	51		 push	 ecx
  00e5e	e8 00 00 00 00	 call	 ??$min@N@std@@YGABNABN0@Z ; std::min<double>
  00e63	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _tail_angular_force$[ebp]
  00e6b	f2 0f 59 00	 mulsd	 xmm0, QWORD PTR [eax]
  00e6f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00e73	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _tail_angular_force$[ebp], xmm0
$LN8@update_com:

; 521  : 			}
; 522  : 		}
; 523  : 
; 524  : 		add_dynamic_force ("Angular tail rotor force", tail_angular_force, 0.0, &position, &direction, FALSE);

  00e7b	6a 00		 push	 0
  00e7d	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  00e83	50		 push	 eax
  00e84	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  00e8a	51		 push	 ecx
  00e8b	51		 push	 ecx
  00e8c	0f 57 c0	 xorps	 xmm0, xmm0
  00e8f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e94	51		 push	 ecx
  00e95	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _tail_angular_force$[ebp]
  00e9d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ea2	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@INGIGFJO@Angular?5tail?5rotor?5force@
  00ea7	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 525  : 	}
; 526  : 
; 527  : 	////////////////////////////////////////////
; 528  : 	// gravity
; 529  : 	////////////////////////////////////////////
; 530  : 	{
; 531  : 
; 532  : 		float
; 533  : 			mass_percentage;
; 534  : 
; 535  : 		set_flight_dynamics_mass ();

  00eac	e8 00 00 00 00	 call	 ?set_flight_dynamics_mass@@YGMXZ ; set_flight_dynamics_mass
  00eb1	dd d8		 fstp	 ST(0)

; 536  : 
; 537  : 		mass_percentage = current_flight_dynamics->mass.value;

  00eb3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00eb8	f3 0f 10 80 b4
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9140]
  00ec0	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _mass_percentage$63[ebp], xmm0

; 538  : 		mass_percentage /= (current_flight_dynamics->mass.min + current_flight_dynamics->fuel_weight.max);

  00ec8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ecd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ed3	f3 0f 10 80 bc
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9148]
  00edb	f3 0f 58 81 b0
	24 00 00	 addss	 xmm0, DWORD PTR [ecx+9392]
  00ee3	f3 0f 10 8d e8
	fe ff ff	 movss	 xmm1, DWORD PTR _mass_percentage$63[ebp]
  00eeb	f3 0f 5e c8	 divss	 xmm1, xmm0
  00eef	f3 0f 11 8d e8
	fe ff ff	 movss	 DWORD PTR _mass_percentage$63[ebp], xmm1

; 539  : 
; 540  : 		force = G * mass_percentage;

  00ef7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@411cf5c3
  00eff	f3 0f 59 85 e8
	fe ff ff	 mulss	 xmm0, DWORD PTR _mass_percentage$63[ebp]
  00f07	f3 0f 11 45 98	 movss	 DWORD PTR _force$[ebp], xmm0

; 541  : 
; 542  : 		position.x = current_flight_dynamics->centre_of_gravity.x;

  00f0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f11	f3 0f 10 80 24
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7204]
  00f19	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 543  : 		position.y = current_flight_dynamics->centre_of_gravity.y;

  00f21	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f26	f3 0f 10 80 28
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7208]
  00f2e	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 544  : 		position.z = current_flight_dynamics->centre_of_gravity.z;

  00f36	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f3b	f3 0f 10 80 2c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7212]
  00f43	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 545  : 
; 546  : 		direction.x = 0.0;

  00f4b	0f 57 c0	 xorps	 xmm0, xmm0
  00f4e	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 547  : 		direction.y = -1.0;

  00f56	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00f5e	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 548  : 		direction.z = 0.0;

  00f66	0f 57 c0	 xorps	 xmm0, xmm0
  00f69	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 549  : 
; 550  : 		multiply_transpose_matrix3x3_vec3d (&direction, attitude, &direction);

  00f71	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  00f77	50		 push	 eax
  00f78	8d 4d b4	 lea	 ecx, DWORD PTR _attitude$[ebp]
  00f7b	51		 push	 ecx
  00f7c	8d 95 04 ff ff
	ff		 lea	 edx, DWORD PTR _direction$[ebp]
  00f82	52		 push	 edx
  00f83	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 551  : 
; 552  : 		//debug_log("force: %.2f", force);
; 553  : 
; 554  : 		add_dynamic_force ("Gravity", force, 0.0, &position, &direction, FALSE);

  00f88	6a 00		 push	 0
  00f8a	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  00f90	50		 push	 eax
  00f91	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  00f97	51		 push	 ecx
  00f98	51		 push	 ecx
  00f99	0f 57 c0	 xorps	 xmm0, xmm0
  00f9c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fa1	51		 push	 ecx
  00fa2	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _force$[ebp]
  00fa7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fac	68 00 00 00 00	 push	 OFFSET ??_C@_07JMGDFJEK@Gravity@
  00fb1	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 555  : 	}
; 556  : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 557  : 	// Rotor Aerodynamic Analysis
; 558  : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 559  : 
; 560  : 	{
; 561  : 		vec3d
; 562  : 			temp_model_motion_vector;
; 563  : 
; 564  : 		temp_model_motion_vector = current_flight_dynamics->model_motion_vector;

  00fb6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00fbb	05 30 1c 00 00	 add	 eax, 7216		; 00001c30H
  00fc0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fc2	89 8d dc fe ff
	ff		 mov	 DWORD PTR _temp_model_motion_vector$62[ebp], ecx
  00fc8	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00fcb	89 95 e0 fe ff
	ff		 mov	 DWORD PTR _temp_model_motion_vector$62[ebp+4], edx
  00fd1	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00fd4	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _temp_model_motion_vector$62[ebp+8], eax

; 565  : 		temp_model_motion_vector.y = 0.0;

  00fda	0f 57 c0	 xorps	 xmm0, xmm0
  00fdd	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _temp_model_motion_vector$62[ebp+4], xmm0

; 566  : 		horizontal_velocity = (get_3d_vector_magnitude (&temp_model_motion_vector));

  00fe5	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _temp_model_motion_vector$62[ebp]
  00feb	50		 push	 eax
  00fec	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00ff1	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR _horizontal_velocity$[ebp]

; 567  : 	}
; 568  : 
; 569  : 	////////////////////////////////////////////
; 570  : 	// Transitional Lift generated by 'Wing' effect
; 571  : 	////////////////////////////////////////////
; 572  : 
; 573  : 	if ((get_current_dynamics_options (DYNAMICS_OPTIONS_TRANSITIONAL_LIFT)) &&

  00ff7	6a 0a		 push	 10			; 0000000aH
  00ff9	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  00ffe	85 c0		 test	 eax, eax
  01000	0f 84 bb 04 00
	00		 je	 $LN14@update_com
  01006	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0100b	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  01011	83 e1 02	 and	 ecx, 2
  01014	0f 85 a7 04 00
	00		 jne	 $LN14@update_com

; 574  : 		(!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR)))
; 575  : 	{
; 576  : 
; 577  : 		vec3d
; 578  : 			wind,
; 579  : 			position,
; 580  : 			normalised_model_motion_vector;
; 581  : 
; 582  : 		float
; 583  : 			force,
; 584  : 			vel;
; 585  : 
; 586  : 		normalised_model_motion_vector = model_motion_vector;

  0101a	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _model_motion_vector$[ebp]
  01020	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _normalised_model_motion_vector$59[ebp], eax
  01026	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _model_motion_vector$[ebp+4]
  0102c	89 8d bc fe ff
	ff		 mov	 DWORD PTR _normalised_model_motion_vector$59[ebp+4], ecx
  01032	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _model_motion_vector$[ebp+8]
  01038	89 95 c0 fe ff
	ff		 mov	 DWORD PTR _normalised_model_motion_vector$59[ebp+8], edx

; 587  : 
; 588  : 		position.x = current_flight_dynamics->position.x;

  0103e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01043	f2 0f 5a 80 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+172]
  0104b	f3 0f 11 85 c4
	fe ff ff	 movss	 DWORD PTR _position$60[ebp], xmm0

; 589  : 		position.y = current_flight_dynamics->position.y;

  01053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01058	f2 0f 5a 80 b4
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+180]
  01060	f3 0f 11 85 c8
	fe ff ff	 movss	 DWORD PTR _position$60[ebp+4], xmm0

; 590  : 		position.z = current_flight_dynamics->position.z;

  01068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0106d	f2 0f 5a 80 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+188]
  01075	f3 0f 11 85 cc
	fe ff ff	 movss	 DWORD PTR _position$60[ebp+8], xmm0

; 591  : 
; 592  : 		if (get_current_dynamics_options (DYNAMICS_OPTIONS_WIND))

  0107d	6a 0c		 push	 12			; 0000000cH
  0107f	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  01084	85 c0		 test	 eax, eax
  01086	74 7d		 je	 SHORT $LN10@update_com

; 593  : 		{
; 594  : 
; 595  : 			get_session_wind_velocity_at_point (&position, &wind);

  01088	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _wind$61[ebp]
  0108e	50		 push	 eax
  0108f	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _position$60[ebp]
  01095	51		 push	 ecx
  01096	e8 00 00 00 00	 call	 ?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z ; get_session_wind_velocity_at_point
  0109b	dd d8		 fstp	 ST(0)

; 596  : 
; 597  : 			multiply_transpose_matrix3x3_vec3d (&wind, current_flight_dynamics->attitude, &wind);

  0109d	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _wind$61[ebp]
  010a3	50		 push	 eax
  010a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  010aa	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  010b0	51		 push	 ecx
  010b1	8d 95 d0 fe ff
	ff		 lea	 edx, DWORD PTR _wind$61[ebp]
  010b7	52		 push	 edx
  010b8	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 598  : 
; 599  : 			normalised_model_motion_vector.x -= wind.x;

  010bd	f3 0f 10 85 b8
	fe ff ff	 movss	 xmm0, DWORD PTR _normalised_model_motion_vector$59[ebp]
  010c5	f3 0f 5c 85 d0
	fe ff ff	 subss	 xmm0, DWORD PTR _wind$61[ebp]
  010cd	f3 0f 11 85 b8
	fe ff ff	 movss	 DWORD PTR _normalised_model_motion_vector$59[ebp], xmm0

; 600  : 			normalised_model_motion_vector.y -= wind.y;

  010d5	f3 0f 10 85 bc
	fe ff ff	 movss	 xmm0, DWORD PTR _normalised_model_motion_vector$59[ebp+4]
  010dd	f3 0f 5c 85 d4
	fe ff ff	 subss	 xmm0, DWORD PTR _wind$61[ebp+4]
  010e5	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR _normalised_model_motion_vector$59[ebp+4], xmm0

; 601  : 			normalised_model_motion_vector.z -= wind.z;

  010ed	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR _normalised_model_motion_vector$59[ebp+8]
  010f5	f3 0f 5c 85 d8
	fe ff ff	 subss	 xmm0, DWORD PTR _wind$61[ebp+8]
  010fd	f3 0f 11 85 c0
	fe ff ff	 movss	 DWORD PTR _normalised_model_motion_vector$59[ebp+8], xmm0
$LN10@update_com:

; 602  : 		}
; 603  : 
; 604  : 		normalised_model_motion_vector.y = 0.0;

  01105	0f 57 c0	 xorps	 xmm0, xmm0
  01108	f3 0f 11 85 bc
	fe ff ff	 movss	 DWORD PTR _normalised_model_motion_vector$59[ebp+4], xmm0

; 605  : 
; 606  : 		vel = normalise_any_3d_vector (&normalised_model_motion_vector);

  01110	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _normalised_model_motion_vector$59[ebp]
  01116	50		 push	 eax
  01117	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  0111c	d9 9d b0 fe ff
	ff		 fstp	 DWORD PTR _vel$57[ebp]

; 607  : 
; 608  : 		// * 3 because induced air at normal is 9 and max is about 26... needs to scale 0.0 -> 1.0
; 609  : 		vel *= min (fabs ((3.0 * current_flight_dynamics->main_rotor_induced_air.value) / (current_flight_dynamics->main_rotor_induced_air.max - current_flight_dynamics->main_rotor_induced_air.min)), 1.0);

  01122	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0112a	f2 0f 11 85 34
	fd ff ff	 movsd	 QWORD PTR $T17[ebp], xmm0
  01132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01137	f3 0f 5a 80 6c
	1d 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7532]
  0113f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4008000000000000
  01147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0114d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01153	f3 0f 10 89 78
	1d 00 00	 movss	 xmm1, DWORD PTR [ecx+7544]
  0115b	f3 0f 5c 8a 74
	1d 00 00	 subss	 xmm1, DWORD PTR [edx+7540]
  01163	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  01167	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0116b	83 ec 08	 sub	 esp, 8
  0116e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01173	e8 00 00 00 00	 call	 _fabs
  01178	83 c4 08	 add	 esp, 8
  0117b	dd 9d 2c fd ff
	ff		 fstp	 QWORD PTR $T16[ebp]
  01181	8d 85 34 fd ff
	ff		 lea	 eax, DWORD PTR $T17[ebp]
  01187	50		 push	 eax
  01188	8d 8d 2c fd ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  0118e	51		 push	 ecx
  0118f	e8 00 00 00 00	 call	 ??$min@N@std@@YGABNABN0@Z ; std::min<double>
  01194	f3 0f 5a 85 b0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _vel$57[ebp]
  0119c	f2 0f 59 00	 mulsd	 xmm0, QWORD PTR [eax]
  011a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  011a4	f3 0f 11 85 b0
	fe ff ff	 movss	 DWORD PTR _vel$57[ebp], xmm0

; 610  : 
; 611  : 		if (vel >= current_flight_dynamics->translational_lift.min)

  011ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  011b1	f3 0f 10 85 b0
	fe ff ff	 movss	 xmm0, DWORD PTR _vel$57[ebp]
  011b9	0f 2f 80 c4 21
	00 00		 comiss	 xmm0, DWORD PTR [eax+8644]
  011c0	0f 82 31 01 00
	00		 jb	 $LN11@update_com

; 612  : 		{
; 613  : 
; 614  : 			if (vel <= current_flight_dynamics->translational_lift.max)

  011c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  011cb	f3 0f 10 80 c8
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8648]
  011d3	0f 2f 85 b0 fe
	ff ff		 comiss	 xmm0, DWORD PTR _vel$57[ebp]
  011da	72 4c		 jb	 SHORT $LN12@update_com

; 615  : 			{
; 616  : 
; 617  : 				force = (current_flight_dynamics->translational_lift.value * (vel - current_flight_dynamics->translational_lift.min)) / (current_flight_dynamics->translational_lift.max - current_flight_dynamics->translational_lift.min);

  011dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  011e1	f3 0f 10 85 b0
	fe ff ff	 movss	 xmm0, DWORD PTR _vel$57[ebp]
  011e9	f3 0f 5c 80 c4
	21 00 00	 subss	 xmm0, DWORD PTR [eax+8644]
  011f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  011f7	f3 0f 59 81 bc
	21 00 00	 mulss	 xmm0, DWORD PTR [ecx+8636]
  011ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01205	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0120a	f3 0f 10 8a c8
	21 00 00	 movss	 xmm1, DWORD PTR [edx+8648]
  01212	f3 0f 5c 88 c4
	21 00 00	 subss	 xmm1, DWORD PTR [eax+8644]
  0121a	f3 0f 5e c1	 divss	 xmm0, xmm1
  0121e	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR _force$58[ebp], xmm0

; 618  : 			}
; 619  : 			else

  01226	eb 15		 jmp	 SHORT $LN13@update_com
$LN12@update_com:

; 620  : 			{
; 621  : 
; 622  : 				force = current_flight_dynamics->translational_lift.value;

  01228	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0122d	f3 0f 10 80 bc
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8636]
  01235	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR _force$58[ebp], xmm0
$LN13@update_com:

; 623  : 			}
; 624  : 
; 625  : 			position.x = (current_flight_dynamics->translational_lift.modifier * current_flight_dynamics->main_rotor_diameter.value / 2.0) * normalised_model_motion_vector.x;

  0123d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01242	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01248	f3 0f 10 80 b8
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8632]
  01250	f3 0f 59 81 9c
	1d 00 00	 mulss	 xmm0, DWORD PTR [ecx+7580]
  01258	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0125c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  01264	f3 0f 5a 8d b8
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _normalised_model_motion_vector$59[ebp]
  0126c	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  01270	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01274	f3 0f 11 85 c4
	fe ff ff	 movss	 DWORD PTR _position$60[ebp], xmm0

; 626  : 			position.y = 0.0;

  0127c	0f 57 c0	 xorps	 xmm0, xmm0
  0127f	f3 0f 11 85 c8
	fe ff ff	 movss	 DWORD PTR _position$60[ebp+4], xmm0

; 627  : 			position.z = (current_flight_dynamics->translational_lift.modifier * current_flight_dynamics->main_rotor_diameter.value / 2.0) * normalised_model_motion_vector.z;

  01287	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0128c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01292	f3 0f 10 80 b8
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8632]
  0129a	f3 0f 59 81 9c
	1d 00 00	 mulss	 xmm0, DWORD PTR [ecx+7580]
  012a2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  012a6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  012ae	f3 0f 5a 8d c0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _normalised_model_motion_vector$59[ebp+8]
  012b6	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  012ba	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  012be	f3 0f 11 85 cc
	fe ff ff	 movss	 DWORD PTR _position$60[ebp+8], xmm0

; 628  : 
; 629  : 			add_dynamic_force ("Transitional lift", force, 0.0, &position, &rotor_direction, FALSE);

  012c6	6a 00		 push	 0
  012c8	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  012ce	50		 push	 eax
  012cf	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _position$60[ebp]
  012d5	51		 push	 ecx
  012d6	51		 push	 ecx
  012d7	0f 57 c0	 xorps	 xmm0, xmm0
  012da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012df	51		 push	 ecx
  012e0	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR _force$58[ebp]
  012e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012ed	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GCGACPAK@Transitional?5lift@
  012f2	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN11@update_com:

; 630  : /*
; 631  : 			// debug
; 632  : 			{
; 633  : 				multiply_matrix3x3_vec3d (&position, current_flight_dynamics->attitude, &position);
; 634  : 
; 635  : 				multiply_matrix3x3_vec3d (&direction, current_flight_dynamics->attitude, &direction);
; 636  : 
; 637  : 				position.x += current_flight_dynamics->position.x;
; 638  : 				position.y += current_flight_dynamics->position.y;
; 639  : 				position.z += current_flight_dynamics->position.z;
; 640  : 
; 641  : 				create_vectored_debug_3d_object (&position, &direction, OBJECT_3D_ARROW_FORCES, 0, 10.0);
; 642  : 			}
; 643  : 			// debug
; 644  : */
; 645  : 		}
; 646  : #ifdef DEBUG
; 647  : 		if (debug_var_y >0)

  012f7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?debug_var_y@@3MA
  012ff	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  01306	0f 86 b5 01 00
	00		 jbe	 $LN14@update_com

; 648  : 		{
; 649  : 			float
; 650  : 				motion_vector_pitch;
; 651  : 
; 652  : 			vec3d
; 653  : 				normalised_world_motion_vector;
; 654  : 
; 655  : 			normalised_world_motion_vector = world_motion_vector;

  0130c	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _world_motion_vector$[ebp]
  01312	89 85 a0 fe ff
	ff		 mov	 DWORD PTR _normalised_world_motion_vector$55[ebp], eax
  01318	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _world_motion_vector$[ebp+4]
  0131e	89 8d a4 fe ff
	ff		 mov	 DWORD PTR _normalised_world_motion_vector$55[ebp+4], ecx
  01324	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR _world_motion_vector$[ebp+8]
  0132a	89 95 a8 fe ff
	ff		 mov	 DWORD PTR _normalised_world_motion_vector$55[ebp+8], edx

; 656  : 			normalise_any_3d_vector (&normalised_world_motion_vector);

  01330	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR _normalised_world_motion_vector$55[ebp]
  01336	50		 push	 eax
  01337	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  0133c	dd d8		 fstp	 ST(0)

; 657  : 			motion_vector_pitch = asin (normalised_world_motion_vector.y) - aircraft_database [current_flight_dynamics->sub_type].main_rotor_shaft_angle;

  0133e	51		 push	 ecx
  0133f	f3 0f 10 85 a4
	fe ff ff	 movss	 xmm0, DWORD PTR _normalised_world_motion_vector$55[ebp+4]
  01347	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0134c	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  01351	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv2695[ebp]
  01357	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv2695[ebp]
  0135f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01364	69 48 04 f4 00
	00 00		 imul	 ecx, DWORD PTR [eax+4], 244
  0136b	f3 0f 5c 81 88
	00 00 00	 subss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+136]
  01373	f3 0f 11 85 ac
	fe ff ff	 movss	 DWORD PTR _motion_vector_pitch$56[ebp], xmm0

; 658  : 
; 659  : 			if (current_flight_dynamics->model_motion_vector.z < 0.0)

  0137b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01380	f3 0f 5a 80 38
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7224]
  01388	0f 57 c9	 xorps	 xmm1, xmm1
  0138b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0138f	76 1c		 jbe	 SHORT $LN15@update_com

; 660  : 			{
; 661  : 
; 662  : 				pitch_value *= -1.0;

  01391	f3 0f 5a 85 54
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _pitch_value$[ebp]
  01399	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  013a1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  013a5	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _pitch_value$[ebp], xmm0
$LN15@update_com:

; 663  : 			}
; 664  : 
; 665  : 			force = horizontal_velocity *

  013ad	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _pitch_value$[ebp]
  013b5	f3 0f 58 85 70
	ff ff ff	 addss	 xmm0, DWORD PTR _main_rotor_pitch_angle_value$[ebp]
  013bd	f3 0f 5c 85 ac
	fe ff ff	 subss	 xmm0, DWORD PTR _motion_vector_pitch$56[ebp]
  013c5	f3 0f 59 85 44
	ff ff ff	 mulss	 xmm0, DWORD PTR _horizontal_velocity$[ebp]
  013cd	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR _force$58[ebp], xmm0

; 666  : 						((pitch_value +
; 667  : 						main_rotor_pitch_angle_value) -
; 668  : 						motion_vector_pitch);
; 669  : 
; 670  : 			force = max (force, 0.0f);

  013d5	0f 57 c0	 xorps	 xmm0, xmm0
  013d8	f3 0f 11 85 28
	fd ff ff	 movss	 DWORD PTR $T15[ebp], xmm0
  013e0	8d 85 28 fd ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  013e6	50		 push	 eax
  013e7	8d 8d b4 fe ff
	ff		 lea	 ecx, DWORD PTR _force$58[ebp]
  013ed	51		 push	 ecx
  013ee	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  013f3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  013f7	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR _force$58[ebp], xmm0

; 671  : 
; 672  : 			position.x = -0.4 * sin (main_blade_x_pitch_value);

  013ff	51		 push	 ecx
  01400	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _main_blade_x_pitch_value$[ebp]
  01408	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0140d	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  01412	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv2712[ebp]
  01418	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv2712[ebp]
  01420	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfd999999999999a
  01428	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0142c	f3 0f 11 85 c4
	fe ff ff	 movss	 DWORD PTR _position$60[ebp], xmm0

; 673  : 			position.y = 0.0;

  01434	0f 57 c0	 xorps	 xmm0, xmm0
  01437	f3 0f 11 85 c8
	fe ff ff	 movss	 DWORD PTR _position$60[ebp+4], xmm0

; 674  : 			position.z = 0.4 * sin (main_blade_y_pitch_value);

  0143f	51		 push	 ecx
  01440	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_blade_y_pitch_value$[ebp]
  01448	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0144d	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  01452	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv2721[ebp]
  01458	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv2721[ebp]
  01460	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd999999999999a
  01468	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0146c	f3 0f 11 85 cc
	fe ff ff	 movss	 DWORD PTR _position$60[ebp+8], xmm0

; 675  : 
; 676  : 			// arneh - this force seems too strong, impossible to decend faster than
; 677  : 			// about 7-8 m/s by default with forward speed. So reduce it a little
; 678  : 			force *= 0.9;

  01474	f3 0f 5a 85 b4
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _force$58[ebp]
  0147c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feccccccccccccd
  01484	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01488	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR _force$58[ebp], xmm0

; 679  : 			add_dynamic_force ("Transitional lift", force, 0.0, &position, &rotor_direction, FALSE);

  01490	6a 00		 push	 0
  01492	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  01498	50		 push	 eax
  01499	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _position$60[ebp]
  0149f	51		 push	 ecx
  014a0	51		 push	 ecx
  014a1	0f 57 c0	 xorps	 xmm0, xmm0
  014a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  014a9	51		 push	 ecx
  014aa	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR _force$58[ebp]
  014b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  014b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GCGACPAK@Transitional?5lift@
  014bc	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN14@update_com:

; 680  : 		}
; 681  : #endif
; 682  : 	}
; 683  : 
; 684  : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 685  : 	// Secondary effects
; 686  : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 687  : 
; 688  : 	////////////////////////////////////////////
; 689  : 	// Retreating blade lift loss
; 690  : 	////////////////////////////////////////////
; 691  : 	if (get_current_dynamics_options (DYNAMICS_OPTIONS_RETREATING_BLADE_STALL))

  014c1	6a 08		 push	 8
  014c3	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  014c8	85 c0		 test	 eax, eax
  014ca	0f 84 5f 01 00
	00		 je	 $LN19@update_com

; 692  : 	{
; 693  : 
; 694  : 		if (!(get_current_dynamics_options (DYNAMICS_OPTIONS_KEYBOARD_ASSISTANCE) && (get_global_cyclic_input () == KEYBOARD_INPUT)))

  014d0	6a 05		 push	 5
  014d2	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  014d7	85 c0		 test	 eax, eax
  014d9	74 0d		 je	 SHORT $LN18@update_com
  014db	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+40, 1
  014e2	0f 84 47 01 00
	00		 je	 $LN19@update_com
$LN18@update_com:

; 695  : 		{
; 696  : 
; 697  : 			if (!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR))

  014e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  014ed	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  014f3	83 e1 02	 and	 ecx, 2
  014f6	0f 85 33 01 00
	00		 jne	 $LN19@update_com

; 698  : 			{
; 699  : 
; 700  : 				left_rotor_force = 0.1 * ((edge_rotor_split * main_rotor_induced_air_value) -

  014fc	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _edge_rotor_split$[ebp]
  01501	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  01509	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _edge_rotor_split$[ebp]
  0150e	f3 0f 59 8d 74
	ff ff ff	 mulss	 xmm1, DWORD PTR _main_rotor_induced_air_value$[ebp]
  01516	f3 0f 59 8d 68
	ff ff ff	 mulss	 xmm1, DWORD PTR _main_rotor_roll_angle_value$[ebp]
  0151e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01523	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01529	f3 0f 10 90 f0
	1d 00 00	 movss	 xmm2, DWORD PTR [eax+7664]
  01531	f3 0f 5c 91 ec
	1d 00 00	 subss	 xmm2, DWORD PTR [ecx+7660]
  01539	f3 0f 5e ca	 divss	 xmm1, xmm2
  0153d	f3 0f 5c c1	 subss	 xmm0, xmm1
  01541	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  01545	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0154d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01551	f3 0f 11 45 88	 movss	 DWORD PTR _left_rotor_force$[ebp], xmm0

; 701  : 							((edge_rotor_split * main_rotor_induced_air_value * main_rotor_roll_angle_value) /
; 702  : 							(current_flight_dynamics->main_rotor_roll_angle.max - current_flight_dynamics->main_rotor_roll_angle.min)));
; 703  : 
; 704  : 				left_rotor_force *= (motion_vector_magnitude *

  01556	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  0155b	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  01560	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  01565	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0156a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01570	f3 0f 10 88 a8
	20 00 00	 movss	 xmm1, DWORD PTR [eax+8360]
  01578	f3 0f 59 89 a8
	20 00 00	 mulss	 xmm1, DWORD PTR [ecx+8360]
  01580	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01586	f3 0f 59 8a a8
	20 00 00	 mulss	 xmm1, DWORD PTR [edx+8360]
  0158e	f3 0f 5e c1	 divss	 xmm0, xmm1
  01592	f3 0f 59 45 88	 mulss	 xmm0, DWORD PTR _left_rotor_force$[ebp]
  01597	f3 0f 11 45 88	 movss	 DWORD PTR _left_rotor_force$[ebp], xmm0

; 705  : 											motion_vector_magnitude *
; 706  : 											motion_vector_magnitude) /
; 707  : 											(current_flight_dynamics->velocity_z.max *
; 708  : 											current_flight_dynamics->velocity_z.max *
; 709  : 											current_flight_dynamics->velocity_z.max);
; 710  : 
; 711  : 				left_rotor_force *= command_line_dynamics_retreating_blade_stall_effect;

  0159c	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _left_rotor_force$[ebp]
  015a1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?command_line_dynamics_retreating_blade_stall_effect@@3MA
  015a9	f3 0f 11 45 88	 movss	 DWORD PTR _left_rotor_force$[ebp], xmm0

; 712  : 
; 713  : 				position.x = rotor_radius;

  015ae	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  015b3	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 714  : 				position.y = 0.0;

  015bb	0f 57 c0	 xorps	 xmm0, xmm0
  015be	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 715  : 				position.z = 0.0;

  015c6	0f 57 c0	 xorps	 xmm0, xmm0
  015c9	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 716  : 
; 717  : 				direction.x = 0.0;

  015d1	0f 57 c0	 xorps	 xmm0, xmm0
  015d4	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 718  : 				direction.y = -current_flight_dynamics->rotor_rotation_direction;

  015dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  015e1	0f bf 88 1c 25
	00 00		 movsx	 ecx, WORD PTR [eax+9500]
  015e8	f7 d9		 neg	 ecx
  015ea	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  015ee	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 719  : 				direction.z = 0.0;

  015f6	0f 57 c0	 xorps	 xmm0, xmm0
  015f9	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 720  : 
; 721  : 				add_dynamic_force ("Retreating blade stall", left_rotor_force, 0.0, &position, &direction, FALSE);

  01601	6a 00		 push	 0
  01603	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  01609	50		 push	 eax
  0160a	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  01610	51		 push	 ecx
  01611	51		 push	 ecx
  01612	0f 57 c0	 xorps	 xmm0, xmm0
  01615	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0161a	51		 push	 ecx
  0161b	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _left_rotor_force$[ebp]
  01620	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01625	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HFGLNDFM@Retreating?5blade?5stall@
  0162a	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN19@update_com:

; 722  : 			}
; 723  : 		}
; 724  : 	}
; 725  : 	////////////////////////////////////////////
; 726  : 	// Advancing Blade lift gain
; 727  : 	////////////////////////////////////////////
; 728  : 	if (get_current_dynamics_options (DYNAMICS_OPTIONS_RETREATING_BLADE_STALL))

  0162f	6a 08		 push	 8
  01631	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  01636	85 c0		 test	 eax, eax
  01638	0f 84 64 01 00
	00		 je	 $LN23@update_com

; 729  : 	{
; 730  : 
; 731  : 		if (!(get_current_dynamics_options (DYNAMICS_OPTIONS_KEYBOARD_ASSISTANCE) && (get_global_cyclic_input () == KEYBOARD_INPUT)))

  0163e	6a 05		 push	 5
  01640	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  01645	85 c0		 test	 eax, eax
  01647	74 0d		 je	 SHORT $LN22@update_com
  01649	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+40, 1
  01650	0f 84 4c 01 00
	00		 je	 $LN23@update_com
$LN22@update_com:

; 732  : 		{
; 733  : 
; 734  : 			if (!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR))

  01656	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0165b	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  01661	83 e1 02	 and	 ecx, 2
  01664	0f 85 38 01 00
	00		 jne	 $LN23@update_com

; 735  : 			{
; 736  : 
; 737  : 				right_rotor_force = 0.1 * ((edge_rotor_split * main_rotor_induced_air_value) +

  0166a	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _edge_rotor_split$[ebp]
  0166f	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  01677	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _edge_rotor_split$[ebp]
  0167c	f3 0f 59 8d 74
	ff ff ff	 mulss	 xmm1, DWORD PTR _main_rotor_induced_air_value$[ebp]
  01684	f3 0f 59 8d 68
	ff ff ff	 mulss	 xmm1, DWORD PTR _main_rotor_roll_angle_value$[ebp]
  0168c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01691	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01697	f3 0f 10 90 f0
	1d 00 00	 movss	 xmm2, DWORD PTR [eax+7664]
  0169f	f3 0f 5c 91 ec
	1d 00 00	 subss	 xmm2, DWORD PTR [ecx+7660]
  016a7	f3 0f 5e ca	 divss	 xmm1, xmm2
  016ab	f3 0f 58 c1	 addss	 xmm0, xmm1
  016af	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  016b3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  016bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  016bf	f3 0f 11 45 84	 movss	 DWORD PTR _right_rotor_force$[ebp], xmm0

; 738  : 							((edge_rotor_split * main_rotor_induced_air_value * main_rotor_roll_angle_value) /
; 739  : 							(current_flight_dynamics->main_rotor_roll_angle.max - current_flight_dynamics->main_rotor_roll_angle.min)));
; 740  : 
; 741  : 				right_rotor_force *= (motion_vector_magnitude *

  016c4	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  016c9	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  016ce	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  016d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  016d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  016de	f3 0f 10 88 a8
	20 00 00	 movss	 xmm1, DWORD PTR [eax+8360]
  016e6	f3 0f 59 89 a8
	20 00 00	 mulss	 xmm1, DWORD PTR [ecx+8360]
  016ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  016f4	f3 0f 59 8a a8
	20 00 00	 mulss	 xmm1, DWORD PTR [edx+8360]
  016fc	f3 0f 5e c1	 divss	 xmm0, xmm1
  01700	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _right_rotor_force$[ebp]
  01705	f3 0f 11 45 84	 movss	 DWORD PTR _right_rotor_force$[ebp], xmm0

; 742  : 											motion_vector_magnitude *
; 743  : 											motion_vector_magnitude) /
; 744  : 											(current_flight_dynamics->velocity_z.max *
; 745  : 											current_flight_dynamics->velocity_z.max *
; 746  : 											current_flight_dynamics->velocity_z.max);
; 747  : 
; 748  : 				right_rotor_force *= command_line_dynamics_retreating_blade_stall_effect;

  0170a	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _right_rotor_force$[ebp]
  0170f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?command_line_dynamics_retreating_blade_stall_effect@@3MA
  01717	f3 0f 11 45 84	 movss	 DWORD PTR _right_rotor_force$[ebp], xmm0

; 749  : 
; 750  : 				position.x = -rotor_radius;

  0171c	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  01721	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01728	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 751  : 				position.y = 0.0;

  01730	0f 57 c0	 xorps	 xmm0, xmm0
  01733	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 752  : 				position.z = 0.0;

  0173b	0f 57 c0	 xorps	 xmm0, xmm0
  0173e	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 753  : 
; 754  : 				direction.x = 0.0;

  01746	0f 57 c0	 xorps	 xmm0, xmm0
  01749	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 755  : 				direction.y = current_flight_dynamics->rotor_rotation_direction;

  01751	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01756	0f bf 88 1c 25
	00 00		 movsx	 ecx, WORD PTR [eax+9500]
  0175d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  01761	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 756  : 				direction.z = 0.0;

  01769	0f 57 c0	 xorps	 xmm0, xmm0
  0176c	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 757  : 
; 758  : 				add_dynamic_force ("Advancing blade stall", right_rotor_force, 0.0, &position, &direction, FALSE);

  01774	6a 00		 push	 0
  01776	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  0177c	50		 push	 eax
  0177d	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  01783	51		 push	 ecx
  01784	51		 push	 ecx
  01785	0f 57 c0	 xorps	 xmm0, xmm0
  01788	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0178d	51		 push	 ecx
  0178e	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _right_rotor_force$[ebp]
  01793	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01798	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LPCPLOKH@Advancing?5blade?5stall@
  0179d	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN23@update_com:

; 759  : 			}
; 760  : 		}
; 761  : 	}
; 762  : 	////////////////////////////////////////////
; 763  : 	// Advancing Blade Sonic Buildup effect
; 764  : 	////////////////////////////////////////////
; 765  : 	if (!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR))

  017a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  017a7	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  017ad	83 e1 02	 and	 ecx, 2
  017b0	0f 85 9d 02 00
	00		 jne	 $LN24@update_com

; 766  : 	{
; 767  : 
; 768  : 		// 0.2 defines the buildup
; 769  : 		force = sfrand1 () * exp (0.2 * (velocity_z_value - current_flight_dynamics->velocity_z.max));

  017b6	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  017c0	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  017c5	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  017ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  017d0	c1 f9 10	 sar	 ecx, 16			; 00000010H
  017d3	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  017d9	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  017df	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  017e3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  017eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  017f1	f3 0f 10 8d 48
	ff ff ff	 movss	 xmm1, DWORD PTR _velocity_z_value$[ebp]
  017f9	f3 0f 5c 8a a8
	20 00 00	 subss	 xmm1, DWORD PTR [edx+8360]
  01801	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  01805	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fc999999999999a
  0180d	83 ec 08	 sub	 esp, 8
  01810	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  01815	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv3658[ebp], xmm0
  0181d	e8 00 00 00 00	 call	 _exp
  01822	83 c4 08	 add	 esp, 8
  01825	dd 9d d8 fc ff
	ff		 fstp	 QWORD PTR tv2797[ebp]
  0182b	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv3658[ebp]
  01833	f2 0f 59 85 d8
	fc ff ff	 mulsd	 xmm0, QWORD PTR tv2797[ebp]
  0183b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0183f	f3 0f 11 45 98	 movss	 DWORD PTR _force$[ebp], xmm0

; 770  : 
; 771  : 		// scale on blade pitch.
; 772  : 		force *= ((current_flight_dynamics->main_blade_pitch.value - current_flight_dynamics->main_blade_pitch.min) / (current_flight_dynamics->main_blade_pitch.max - current_flight_dynamics->main_blade_pitch.min));

  01844	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01849	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0184f	f3 0f 10 80 8c
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7820]
  01857	f3 0f 5c 81 94
	1e 00 00	 subss	 xmm0, DWORD PTR [ecx+7828]
  0185f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01865	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0186a	f3 0f 10 8a 98
	1e 00 00	 movss	 xmm1, DWORD PTR [edx+7832]
  01872	f3 0f 5c 88 94
	1e 00 00	 subss	 xmm1, DWORD PTR [eax+7828]
  0187a	f3 0f 5e c1	 divss	 xmm0, xmm1
  0187e	f3 0f 59 45 98	 mulss	 xmm0, DWORD PTR _force$[ebp]
  01883	f3 0f 11 45 98	 movss	 DWORD PTR _force$[ebp], xmm0

; 773  : 
; 774  : 		if (fabs (force) > 2.0)

  01888	51		 push	 ecx
  01889	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _force$[ebp]
  0188e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01893	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  01898	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv2811[ebp]
  0189e	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv2811[ebp]
  018a6	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4000000000000000
  018ae	76 7e		 jbe	 SHORT $LN25@update_com

; 775  : 		{
; 776  : 
; 777  : 			dynamics_damage_model (DYNAMICS_DAMAGE_MAIN_ROTOR, FALSE);

  018b0	6a 00		 push	 0
  018b2	6a 02		 push	 2
  018b4	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 778  : 
; 779  : 			force = bound (force, -2.0, 2.0);

  018b9	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _force$[ebp]
  018be	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c000000000000000
  018c6	66 0f 2f c8	 comisd	 xmm1, xmm0
  018ca	76 12		 jbe	 SHORT $LN100@update_com
  018cc	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c000000000000000
  018d4	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv981[ebp], xmm0
  018dc	eb 3e		 jmp	 SHORT $LN101@update_com
$LN100@update_com:
  018de	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _force$[ebp]
  018e3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4000000000000000
  018eb	76 12		 jbe	 SHORT $LN98@update_com
  018ed	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4000000000000000
  018f5	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv980[ebp], xmm0
  018fd	eb 0d		 jmp	 SHORT $LN99@update_com
$LN98@update_com:
  018ff	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _force$[ebp]
  01904	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv980[ebp], xmm0
$LN99@update_com:
  0190c	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv980[ebp]
  01914	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv981[ebp], xmm0
$LN101@update_com:
  0191c	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv981[ebp]
  01924	f3 0f 11 45 98	 movss	 DWORD PTR _force$[ebp], xmm0
  01929	e9 9f 00 00 00	 jmp	 $LN28@update_com
$LN25@update_com:

; 780  : 		}
; 781  : 		else if (fabs (force) > 1.0)

  0192e	51		 push	 ecx
  0192f	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _force$[ebp]
  01934	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01939	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0193e	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv2822[ebp]
  01944	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv2822[ebp]
  0194c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  01954	76 77		 jbe	 SHORT $LN28@update_com

; 782  : 		{
; 783  : 
; 784  : 			static float
; 785  : 				time = 0.0;
; 786  : 
; 787  : 			// Approaching VNE speech
; 788  : 
; 789  : 			time -= get_model_delta_time ();

  01956	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0195b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?time@?EO@??update_common_attitude_dynamics@@YGXXZ@4MA
  01963	f3 0f 5c 80 90
	00 00 00	 subss	 xmm0, DWORD PTR [eax+144]
  0196b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?time@?EO@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0

; 790  : 
; 791  : 			if (time <= 0.0)

  01973	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?time@?EO@??update_common_attitude_dynamics@@YGXXZ@4MA
  0197b	0f 57 c9	 xorps	 xmm1, xmm1
  0197e	66 0f 2f c8	 comisd	 xmm1, xmm0
  01982	72 49		 jb	 SHORT $LN28@update_com

; 792  : 			{
; 793  : 
; 794  : 				play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_HOVER_HOLD_TOO_FAST1);

  01984	6a 0a		 push	 10			; 0000000aH
  01986	51		 push	 ecx
  01987	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0198f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01994	6a 04		 push	 4
  01996	51		 push	 ecx
  01997	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0199f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019a4	51		 push	 ecx
  019a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  019ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  019b7	50		 push	 eax
  019b8	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message

; 795  : 
; 796  : 				time = DYNAMICS_EXCEEDING_VNE_SPEECH_TIME;

  019bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  019c5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?time@?EO@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0
$LN28@update_com:

; 797  : 			}
; 798  : 		}
; 799  : 
; 800  : 		position.x = -rotor_radius;

  019cd	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  019d2	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  019d9	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 801  : 		position.y = 0.0;

  019e1	0f 57 c0	 xorps	 xmm0, xmm0
  019e4	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 802  : 		position.z = 0.0;

  019ec	0f 57 c0	 xorps	 xmm0, xmm0
  019ef	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 803  : 
; 804  : 		direction.x = 0.0;

  019f7	0f 57 c0	 xorps	 xmm0, xmm0
  019fa	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 805  : 		direction.y = current_flight_dynamics->rotor_rotation_direction;

  01a02	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01a07	0f bf 88 1c 25
	00 00		 movsx	 ecx, WORD PTR [eax+9500]
  01a0e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  01a12	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 806  : 		direction.z = 0.0;

  01a1a	0f 57 c0	 xorps	 xmm0, xmm0
  01a1d	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 807  : 
; 808  : 		add_dynamic_force ("Sonic buildup", force, 0.0, &position, &direction, FALSE);

  01a25	6a 00		 push	 0
  01a27	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  01a2d	50		 push	 eax
  01a2e	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  01a34	51		 push	 ecx
  01a35	51		 push	 ecx
  01a36	0f 57 c0	 xorps	 xmm0, xmm0
  01a39	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a3e	51		 push	 ecx
  01a3f	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _force$[ebp]
  01a44	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a49	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JIJAGCOD@Sonic?5buildup@
  01a4e	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN24@update_com:

; 809  : 	}
; 810  : 	////////////////////////////////////////////
; 811  : 	// main rotor disc torque effect
; 812  : 	////////////////////////////////////////////
; 813  : 
; 814  : 	{
; 815  : 		// arneh - main rotor produces no torque when disengaged from
; 816  : 		// engine or if running with cross coupling enabled
; 817  : 		if (current_flight_dynamics->rotor_brake ||

  01a53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01a58	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  01a5e	c1 e9 05	 shr	 ecx, 5
  01a61	83 e1 01	 and	 ecx, 1
  01a64	75 1b		 jne	 SHORT $LN31@update_com
  01a66	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01a6b	0f b7 88 d4 1f
	00 00		 movzx	 ecx, WORD PTR [eax+8148]
  01a72	85 c9		 test	 ecx, ecx
  01a74	75 1b		 jne	 SHORT $LN29@update_com
  01a76	6a 00		 push	 0
  01a78	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  01a7d	85 c0		 test	 eax, eax
  01a7f	74 10		 je	 SHORT $LN29@update_com
$LN31@update_com:

; 818  : 			(!current_flight_dynamics->cross_coupling_effect.damaged) &&
; 819  : 			(get_current_dynamics_options (DYNAMICS_OPTIONS_CROSS_COUPLING)))
; 820  : 		{
; 821  : 			main_angular_force = 0.0;

  01a81	0f 57 c0	 xorps	 xmm0, xmm0
  01a84	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _main_angular_force$[ebp], xmm0

; 822  : 		}
; 823  : 		else

  01a8c	e9 61 04 00 00	 jmp	 $LN30@update_com
$LN29@update_com:

; 824  : 		{
; 825  : 
; 826  : 			static float
; 827  : 				v = 0.0,
; 828  : 				relative_air_flow_angle = 0,
; 829  : 				res = 6,
; 830  : 				mass = 40.0,
; 831  : 				torque = 0.0;
; 832  : 
; 833  : 			float
; 834  : 				f = 0.0,

  01a91	0f 57 c0	 xorps	 xmm0, xmm0
  01a94	f3 0f 11 85 9c
	fe ff ff	 movss	 DWORD PTR _f$54[ebp], xmm0

; 835  : 				p = 0.0025,

  01a9c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3b23d70a
  01aa4	f3 0f 11 85 98
	fe ff ff	 movss	 DWORD PTR _p$53[ebp], xmm0

; 836  : 				i = 0.00125,

  01aac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3aa3d70a
  01ab4	f3 0f 11 85 94
	fe ff ff	 movss	 DWORD PTR _i$52[ebp], xmm0

; 837  : 				engine_response = 8.0,

  01abc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  01ac4	f3 0f 11 85 90
	fe ff ff	 movss	 DWORD PTR _engine_response$51[ebp], xmm0

; 838  : 				blade_pitch,
; 839  : 				a,
; 840  : 				u,
; 841  : 				rotor_friction,
; 842  : 				rotor_parasitic,
; 843  : 				rotor_induced,
; 844  : 				rotor_drag;
; 845  : 
; 846  : 			u = main_rotor_rpm_value;

  01acc	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_rpm_value$[ebp]
  01ad4	f3 0f 11 85 84
	fe ff ff	 movss	 DWORD PTR _u$48[ebp], xmm0

; 847  : 
; 848  : 			blade_pitch = bound (main_blade_pitch_value, current_flight_dynamics->main_blade_pitch.min, current_flight_dynamics->main_blade_pitch.max);

  01adc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01ae1	f3 0f 10 80 94
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7828]
  01ae9	0f 2f 85 40 ff
	ff ff		 comiss	 xmm0, DWORD PTR _main_blade_pitch_value$[ebp]
  01af0	76 18		 jbe	 SHORT $LN104@update_com
  01af2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01af8	f3 0f 10 81 94
	1e 00 00	 movss	 xmm0, DWORD PTR [ecx+7828]
  01b00	f3 0f 11 85 e4
	fc ff ff	 movss	 DWORD PTR tv1029[ebp], xmm0
  01b08	eb 4e		 jmp	 SHORT $LN105@update_com
$LN104@update_com:
  01b0a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01b10	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _main_blade_pitch_value$[ebp]
  01b18	0f 2f 82 98 1e
	00 00		 comiss	 xmm0, DWORD PTR [edx+7832]
  01b1f	76 17		 jbe	 SHORT $LN102@update_com
  01b21	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01b26	f3 0f 10 80 98
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7832]
  01b2e	f3 0f 11 85 e0
	fc ff ff	 movss	 DWORD PTR tv1028[ebp], xmm0
  01b36	eb 10		 jmp	 SHORT $LN103@update_com
$LN102@update_com:
  01b38	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _main_blade_pitch_value$[ebp]
  01b40	f3 0f 11 85 e0
	fc ff ff	 movss	 DWORD PTR tv1028[ebp], xmm0
$LN103@update_com:
  01b48	f3 0f 10 85 e0
	fc ff ff	 movss	 xmm0, DWORD PTR tv1028[ebp]
  01b50	f3 0f 11 85 e4
	fc ff ff	 movss	 DWORD PTR tv1029[ebp], xmm0
$LN105@update_com:
  01b58	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv1029[ebp]
  01b60	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _blade_pitch$50[ebp], xmm0

; 849  : 
; 850  : 			blade_pitch = main_blade_pitch_value - current_flight_dynamics->main_blade_pitch.min;

  01b68	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01b6d	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _main_blade_pitch_value$[ebp]
  01b75	f3 0f 5c 80 94
	1e 00 00	 subss	 xmm0, DWORD PTR [eax+7828]
  01b7d	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _blade_pitch$50[ebp], xmm0

; 851  : 
; 852  : 			////////////////////////////////////////////////////////////
; 853  : 
; 854  : 			relative_air_flow_angle = 0.0;

  01b85	0f 57 c0	 xorps	 xmm0, xmm0
  01b88	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?relative_air_flow_angle@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0

; 855  : 
; 856  : 			rotor_friction = u * f;

  01b90	f3 0f 10 85 84
	fe ff ff	 movss	 xmm0, DWORD PTR _u$48[ebp]
  01b98	f3 0f 59 85 9c
	fe ff ff	 mulss	 xmm0, DWORD PTR _f$54[ebp]
  01ba0	f3 0f 11 85 80
	fe ff ff	 movss	 DWORD PTR _rotor_friction$47[ebp], xmm0

; 857  : 			rotor_parasitic = (u * u) * p;

  01ba8	f3 0f 10 85 84
	fe ff ff	 movss	 xmm0, DWORD PTR _u$48[ebp]
  01bb0	f3 0f 59 85 84
	fe ff ff	 mulss	 xmm0, DWORD PTR _u$48[ebp]
  01bb8	f3 0f 59 85 98
	fe ff ff	 mulss	 xmm0, DWORD PTR _p$53[ebp]
  01bc0	f3 0f 11 85 7c
	fe ff ff	 movss	 DWORD PTR _rotor_parasitic$46[ebp], xmm0

; 858  : 			rotor_induced = (u * u) * i * deg (fabs (blade_pitch + relative_air_flow_angle));

  01bc8	f3 0f 10 85 84
	fe ff ff	 movss	 xmm0, DWORD PTR _u$48[ebp]
  01bd0	f3 0f 59 85 84
	fe ff ff	 mulss	 xmm0, DWORD PTR _u$48[ebp]
  01bd8	f3 0f 59 85 94
	fe ff ff	 mulss	 xmm0, DWORD PTR _i$52[ebp]
  01be0	f3 0f 10 8d 8c
	fe ff ff	 movss	 xmm1, DWORD PTR _blade_pitch$50[ebp]
  01be8	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR ?relative_air_flow_angle@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01bf0	51		 push	 ecx
  01bf1	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  01bf6	f3 0f 11 85 e4
	fc ff ff	 movss	 DWORD PTR tv3660[ebp], xmm0
  01bfe	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  01c03	d9 9d e0 fc ff
	ff		 fstp	 DWORD PTR tv2878[ebp]
  01c09	f3 0f 10 85 e0
	fc ff ff	 movss	 xmm0, DWORD PTR tv2878[ebp]
  01c11	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  01c19	f3 0f 10 8d e4
	fc ff ff	 movss	 xmm1, DWORD PTR tv3660[ebp]
  01c21	f3 0f 59 c8	 mulss	 xmm1, xmm0
  01c25	f3 0f 11 8d 78
	fe ff ff	 movss	 DWORD PTR _rotor_induced$45[ebp], xmm1

; 859  : 			rotor_drag = rotor_friction + rotor_parasitic + rotor_induced;

  01c2d	f3 0f 10 85 80
	fe ff ff	 movss	 xmm0, DWORD PTR _rotor_friction$47[ebp]
  01c35	f3 0f 58 85 7c
	fe ff ff	 addss	 xmm0, DWORD PTR _rotor_parasitic$46[ebp]
  01c3d	f3 0f 58 85 78
	fe ff ff	 addss	 xmm0, DWORD PTR _rotor_induced$45[ebp]
  01c45	f3 0f 11 85 74
	fe ff ff	 movss	 DWORD PTR _rotor_drag$44[ebp], xmm0

; 860  : 
; 861  : 			if (current_flight_dynamics->rotor_brake)

  01c4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01c52	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  01c58	c1 e9 05	 shr	 ecx, 5
  01c5b	83 e1 01	 and	 ecx, 1
  01c5e	74 1a		 je	 SHORT $LN32@update_com

; 862  : 			{
; 863  : 
; 864  : 				a = rotor_drag / mass;

  01c60	f3 0f 10 85 74
	fe ff ff	 movss	 xmm0, DWORD PTR _rotor_drag$44[ebp]
  01c68	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?mass@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01c70	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _a$49[ebp], xmm0

; 865  : 			}
; 866  : 			else

  01c78	eb 20		 jmp	 SHORT $LN33@update_com
$LN32@update_com:

; 867  : 			{
; 868  : 
; 869  : 				a = (torque - rotor_drag) / mass;

  01c7a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01c82	f3 0f 5c 85 74
	fe ff ff	 subss	 xmm0, DWORD PTR _rotor_drag$44[ebp]
  01c8a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?mass@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01c92	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _a$49[ebp], xmm0
$LN33@update_com:

; 870  : 			}
; 871  : 
; 872  : 			v = u + (a * get_model_delta_time ());

  01c9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01c9f	f3 0f 10 85 88
	fe ff ff	 movss	 xmm0, DWORD PTR _a$49[ebp]
  01ca7	f3 0f 59 80 90
	00 00 00	 mulss	 xmm0, DWORD PTR [eax+144]
  01caf	f3 0f 58 85 84
	fe ff ff	 addss	 xmm0, DWORD PTR _u$48[ebp]
  01cb7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?v@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0

; 873  : 
; 874  : 			// engine management
; 875  : 
; 876  : 			torque += engine_response * (100.0 - (v + (a * res))) * get_model_delta_time ();

  01cbf	f3 0f 5a 85 90
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _engine_response$51[ebp]
  01cc7	f3 0f 10 8d 88
	fe ff ff	 movss	 xmm1, DWORD PTR _a$49[ebp]
  01ccf	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR ?res@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01cd7	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR ?v@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01cdf	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  01ce3	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4059000000000000
  01ceb	f2 0f 5c d1	 subsd	 xmm2, xmm1
  01cef	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  01cf3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01cf8	f3 0f 5a 88 90
	00 00 00	 cvtss2sd xmm1, DWORD PTR [eax+144]
  01d00	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  01d04	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01d0c	f2 0f 58 c8	 addsd	 xmm1, xmm0
  01d10	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  01d14	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0

; 877  : 			torque = bound (torque, 0.0, 120.0);

  01d1c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01d24	0f 57 c9	 xorps	 xmm1, xmm1
  01d27	66 0f 2f c8	 comisd	 xmm1, xmm0
  01d2b	76 0d		 jbe	 SHORT $LN108@update_com
  01d2d	0f 57 c0	 xorps	 xmm0, xmm0
  01d30	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1073[ebp], xmm0
  01d38	eb 44		 jmp	 SHORT $LN109@update_com
$LN108@update_com:
  01d3a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01d42	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@405e000000000000
  01d4a	76 12		 jbe	 SHORT $LN106@update_com
  01d4c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405e000000000000
  01d54	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1072[ebp], xmm0
  01d5c	eb 10		 jmp	 SHORT $LN107@update_com
$LN106@update_com:
  01d5e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01d66	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1072[ebp], xmm0
$LN107@update_com:
  01d6e	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1072[ebp]
  01d76	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1073[ebp], xmm0
$LN109@update_com:
  01d7e	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1073[ebp]
  01d86	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0

; 878  : 
; 879  : 			main_angular_force = heading_inertia_value * (torque * 2.0 * PI * (current_flight_dynamics->main_rotor_diameter.value / 2.0)) / 1649.0;

  01d8e	f3 0f 5a 85 60
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _heading_inertia_value$[ebp]
  01d96	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?torque@?FH@??update_common_attitude_dynamics@@YGXXZ@4MA
  01d9e	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  01da6	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@400921fb60000000
  01dae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01db3	f3 0f 5a 90 9c
	1d 00 00	 cvtss2sd xmm2, DWORD PTR [eax+7580]
  01dbb	f2 0f 5e 15 00
	00 00 00	 divsd	 xmm2, QWORD PTR __real@4000000000000000
  01dc3	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  01dc7	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  01dcb	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4099c40000000000
  01dd3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01dd7	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _main_angular_force$[ebp], xmm0

; 880  : 
; 881  : 			position.x = 0.0;

  01ddf	0f 57 c0	 xorps	 xmm0, xmm0
  01de2	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 882  : 			position.y = 0.0; // -0.08022;

  01dea	0f 57 c0	 xorps	 xmm0, xmm0
  01ded	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 883  : 			position.z = -current_flight_dynamics->tail_boom_length.value;

  01df5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01dfa	f3 0f 10 80 ac
	1f 00 00	 movss	 xmm0, DWORD PTR [eax+8108]
  01e02	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01e09	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 884  : 
; 885  : 			direction.x = current_flight_dynamics->rotor_rotation_direction;

  01e11	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01e16	0f bf 88 1c 25
	00 00		 movsx	 ecx, WORD PTR [eax+9500]
  01e1d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  01e21	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 886  : 			direction.y = 0.0;

  01e29	0f 57 c0	 xorps	 xmm0, xmm0
  01e2c	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 887  : 			direction.z = 0.0;

  01e34	0f 57 c0	 xorps	 xmm0, xmm0
  01e37	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 888  : 
; 889  : 			//main_angular_force = (9) + main_angular_force;
; 890  : 
; 891  : 			if (model_landed)

  01e3f	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  01e43	74 7c		 je	 SHORT $LN34@update_com

; 892  : 			{
; 893  : 
; 894  : 				position.y = 0.0;

  01e45	0f 57 c0	 xorps	 xmm0, xmm0
  01e48	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 895  : 
; 896  : /*				if ((current_flight_dynamics->input_data.pedal_input_pressure != PEDAL_PRESSURE_LEFT) &&
; 897  : 					(current_flight_dynamics->input_data.pedal_input_pressure != PEDAL_PRESSURE_RIGHT))
; 898  : 				{
; 899  : 
; 900  : 					main_angular_force = 0.0;
; 901  : 				}
; 902  : 				else */
; 903  : 				{
; 904  : 
; 905  : 					main_angular_force *= min (fabs (current_flight_dynamics->velocity_z.value) / 15.0, 1.0);

  01e50	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  01e58	f2 0f 11 85 20
	fd ff ff	 movsd	 QWORD PTR $T14[ebp], xmm0
  01e60	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01e65	51		 push	 ecx
  01e66	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  01e6e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01e73	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  01e78	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv2912[ebp]
  01e7e	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv2912[ebp]
  01e86	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@402e000000000000
  01e8e	f2 0f 11 85 18
	fd ff ff	 movsd	 QWORD PTR $T13[ebp], xmm0
  01e96	8d 8d 20 fd ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  01e9c	51		 push	 ecx
  01e9d	8d 95 18 fd ff
	ff		 lea	 edx, DWORD PTR $T13[ebp]
  01ea3	52		 push	 edx
  01ea4	e8 00 00 00 00	 call	 ??$min@N@std@@YGABNABN0@Z ; std::min<double>
  01ea9	f3 0f 5a 85 7c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _main_angular_force$[ebp]
  01eb1	f2 0f 59 00	 mulsd	 xmm0, QWORD PTR [eax]
  01eb5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01eb9	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _main_angular_force$[ebp], xmm0
$LN34@update_com:

; 906  : 				}
; 907  : 			}
; 908  : 
; 909  : 			add_dynamic_force ("Main rotor angular torque", main_angular_force, 0.0, &position, &direction, FALSE);

  01ec1	6a 00		 push	 0
  01ec3	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  01ec9	50		 push	 eax
  01eca	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  01ed0	51		 push	 ecx
  01ed1	51		 push	 ecx
  01ed2	0f 57 c0	 xorps	 xmm0, xmm0
  01ed5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01eda	51		 push	 ecx
  01edb	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _main_angular_force$[ebp]
  01ee3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01ee8	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DILBAPLM@Main?5rotor?5angular?5torque@
  01eed	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN30@update_com:

; 910  : /*			position.z = current_flight_dynamics->tail_boom_length.value * 0.5;
; 911  : 			direction.x = -current_flight_dynamics->rotor_rotation_direction;
; 912  : 			add_dynamic_force ("Main rotor angular torque 2", main_angular_force * 0.5, 0.0, &position, &direction, FALSE); */
; 913  : 		}
; 914  : 	}
; 915  : 	////////////////////////////////////////////
; 916  : 	// Rotor Resistance to movement (Pitch) raw delta pitch
; 917  : 	////////////////////////////////////////////
; 918  : 	{
; 919  : 
; 920  : 		reaction_force = pitch_inertia_value *

  01ef2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01ef7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01efd	f3 0f 10 80 60
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8544]
  01f05	f3 0f 58 81 00
	1e 00 00	 addss	 xmm0, DWORD PTR [ecx+7680]
  01f0d	f3 0f 59 85 5c
	ff ff ff	 mulss	 xmm0, DWORD PTR _pitch_inertia_value$[ebp]
  01f15	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 921  : 							(current_flight_dynamics->pitch.delta + current_flight_dynamics->main_rotor_pitch_angle.delta);
; 922  : 
; 923  : 		position.x = 0.0;

  01f1a	0f 57 c0	 xorps	 xmm0, xmm0
  01f1d	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 924  : 		position.y = 0.0;

  01f25	0f 57 c0	 xorps	 xmm0, xmm0
  01f28	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 925  : 		position.z = rotor_radius;

  01f30	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  01f35	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 926  : 
; 927  : 		direction.x = 0.0;

  01f3d	0f 57 c0	 xorps	 xmm0, xmm0
  01f40	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 928  : 		direction.y = -1.0;

  01f48	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  01f50	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 929  : 		direction.z = 0.0;

  01f58	0f 57 c0	 xorps	 xmm0, xmm0
  01f5b	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 930  : 
; 931  : 		add_dynamic_force ("Pitch resistance", reaction_force, 0.0, &position, &direction, FALSE);

  01f63	6a 00		 push	 0
  01f65	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  01f6b	50		 push	 eax
  01f6c	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  01f72	51		 push	 ecx
  01f73	51		 push	 ecx
  01f74	0f 57 c0	 xorps	 xmm0, xmm0
  01f77	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01f7c	51		 push	 ecx
  01f7d	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _reaction_force$[ebp]
  01f82	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01f87	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FPOJGHNF@Pitch?5resistance@
  01f8c	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 932  : 	}
; 933  : 	////////////////////////////////////////////
; 934  : 	// Rotor Resistance to movement (Roll)
; 935  : 	////////////////////////////////////////////
; 936  : 	{
; 937  : 
; 938  : 		reaction_force = roll_inertia_value *

  01f91	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01f96	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  01f9c	f3 0f 10 80 78
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8568]
  01fa4	f3 0f 58 81 e8
	1d 00 00	 addss	 xmm0, DWORD PTR [ecx+7656]
  01fac	f3 0f 59 85 58
	ff ff ff	 mulss	 xmm0, DWORD PTR _roll_inertia_value$[ebp]
  01fb4	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 939  : 							(current_flight_dynamics->roll.delta + current_flight_dynamics->main_rotor_roll_angle.delta);
; 940  : 
; 941  : 		position.x = rotor_radius;

  01fb9	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  01fbe	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 942  : 		position.y = 0.0;

  01fc6	0f 57 c0	 xorps	 xmm0, xmm0
  01fc9	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 943  : 		position.z = 0.0;

  01fd1	0f 57 c0	 xorps	 xmm0, xmm0
  01fd4	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 944  : 
; 945  : 		add_dynamic_force ("Roll resistance", reaction_force, 0.0, &position, &rotor_direction, FALSE);

  01fdc	6a 00		 push	 0
  01fde	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  01fe4	50		 push	 eax
  01fe5	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  01feb	51		 push	 ecx
  01fec	51		 push	 ecx
  01fed	0f 57 c0	 xorps	 xmm0, xmm0
  01ff0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01ff5	51		 push	 ecx
  01ff6	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _reaction_force$[ebp]
  01ffb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JHNCKIDL@Roll?5resistance@
  02005	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 946  : 	}
; 947  : 	////////////////////////////////////////////
; 948  : 	// Tail Rotor Resistance to movement. raw delta heading resistance
; 949  : 	////////////////////////////////////////////
; 950  : 
; 951  : 	{
; 952  : 
; 953  : 		float
; 954  : 			a,
; 955  : 			scaling,
; 956  : 			drag;
; 957  : 
; 958  : 		drag = -40.0;

  0200a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2200000
  02012	f3 0f 11 85 68
	fe ff ff	 movss	 DWORD PTR _drag$41[ebp], xmm0

; 959  : 
; 960  : 		reaction_force = drag * current_flight_dynamics->heading.delta * current_flight_dynamics->tail_boom_length.value;

  0201a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0201f	f3 0f 10 85 68
	fe ff ff	 movss	 xmm0, DWORD PTR _drag$41[ebp]
  02027	f3 0f 59 80 90
	21 00 00	 mulss	 xmm0, DWORD PTR [eax+8592]
  0202f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02035	f3 0f 59 81 ac
	1f 00 00	 mulss	 xmm0, DWORD PTR [ecx+8108]
  0203d	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 961  : 
; 962  : 		a = exp (velocity_z_value / 45.0);

  02042	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _velocity_z_value$[ebp]
  0204a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4046800000000000
  02052	83 ec 08	 sub	 esp, 8
  02055	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0205a	e8 00 00 00 00	 call	 _exp
  0205f	83 c4 08	 add	 esp, 8
  02062	d9 9d 70 fe ff
	ff		 fstp	 DWORD PTR _a$43[ebp]

; 963  : 
; 964  : 		if (a != 0.0)

  02068	f3 0f 5a 85 70
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _a$43[ebp]
  02070	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  02078	9f		 lahf
  02079	f6 c4 44	 test	 ah, 68			; 00000044H
  0207c	7b 2c		 jnp	 SHORT $LN35@update_com

; 965  : 		{
; 966  : 
; 967  : 			scaling = 1.0 - (1.0 / a);

  0207e	f3 0f 5a 85 70
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _a$43[ebp]
  02086	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0208e	f2 0f 5e c8	 divsd	 xmm1, xmm0
  02092	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0209a	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0209e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  020a2	f3 0f 11 85 6c
	fe ff ff	 movss	 DWORD PTR _scaling$42[ebp], xmm0
$LN35@update_com:

; 968  : 		}
; 969  : 
; 970  : 		scaling = min (fabs (scaling), 1.0f);

  020aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  020b2	f3 0f 11 85 14
	fd ff ff	 movss	 DWORD PTR $T12[ebp], xmm0
  020ba	51		 push	 ecx
  020bb	f3 0f 10 85 6c
	fe ff ff	 movss	 xmm0, DWORD PTR _scaling$42[ebp]
  020c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  020c8	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  020cd	d9 9d 10 fd ff
	ff		 fstp	 DWORD PTR $T11[ebp]
  020d3	8d 85 14 fd ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
  020d9	50		 push	 eax
  020da	8d 8d 10 fd ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  020e0	51		 push	 ecx
  020e1	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  020e6	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  020ea	f3 0f 11 85 6c
	fe ff ff	 movss	 DWORD PTR _scaling$42[ebp], xmm0

; 971  : 
; 972  : 		reaction_force += (tail_angular_force - main_angular_force) * scaling;

  020f2	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _tail_angular_force$[ebp]
  020fa	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _main_angular_force$[ebp]
  02102	f3 0f 59 85 6c
	fe ff ff	 mulss	 xmm0, DWORD PTR _scaling$42[ebp]
  0210a	f3 0f 58 45 80	 addss	 xmm0, DWORD PTR _reaction_force$[ebp]
  0210f	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 973  : 
; 974  : 		position.x = 0.0;

  02114	0f 57 c0	 xorps	 xmm0, xmm0
  02117	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 975  : 		position.y = -0.08022;

  0211f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bda44a62
  02127	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 976  : 		position.z = -current_flight_dynamics->tail_boom_length.value;

  0212f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02134	f3 0f 10 80 ac
	1f 00 00	 movss	 xmm0, DWORD PTR [eax+8108]
  0213c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  02143	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 977  : 
; 978  : 		if (model_landed)

  0214b	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  0214f	74 0b		 je	 SHORT $LN36@update_com

; 979  : 		{
; 980  : 
; 981  : 			position.y = 0.0;

  02151	0f 57 c0	 xorps	 xmm0, xmm0
  02154	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0
$LN36@update_com:

; 982  : 		}
; 983  : 
; 984  : 		direction.x = 1.0;

  0215c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02164	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 985  : 		direction.y = 0.0;

  0216c	0f 57 c0	 xorps	 xmm0, xmm0
  0216f	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 986  : 		direction.z = 0.0;

  02177	0f 57 c0	 xorps	 xmm0, xmm0
  0217a	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 987  : 
; 988  : 		if (current_flight_dynamics->tail_rotor_rpm.damaged)

  02182	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02187	0f b7 88 5c 1f
	00 00		 movzx	 ecx, WORD PTR [eax+8028]
  0218e	85 c9		 test	 ecx, ecx
  02190	74 3b		 je	 SHORT $LN37@update_com

; 989  : 		{
; 990  : 
; 991  : 			reaction_force *= 0.25 + 0.65 * (velocity_z_value / current_flight_dynamics->velocity_z.max);

  02192	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02197	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  0219f	f3 0f 5e 80 a8
	20 00 00	 divss	 xmm0, DWORD PTR [eax+8360]
  021a7	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  021ab	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  021b3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  021bb	f3 0f 5a 4d 80	 cvtss2sd xmm1, DWORD PTR _reaction_force$[ebp]
  021c0	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  021c4	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  021c8	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0
$LN37@update_com:

; 992  : 		}
; 993  : 
; 994  : 		add_dynamic_force ("Yaw resistance", reaction_force, 0.0, &position, &direction, FALSE);

  021cd	6a 00		 push	 0
  021cf	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  021d5	50		 push	 eax
  021d6	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  021dc	51		 push	 ecx
  021dd	51		 push	 ecx
  021de	0f 57 c0	 xorps	 xmm0, xmm0
  021e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  021e6	51		 push	 ecx
  021e7	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _reaction_force$[ebp]
  021ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  021f1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OJCKBBIP@Yaw?5resistance@
  021f6	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 995  : 	}
; 996  : 	////////////////////////////////////////////
; 997  : 	// Fuselage aerodynamics motion_vector -> attitude realignment force in the y axis
; 998  : 	////////////////////////////////////////////
; 999  : 	if ((!model_landed) &&

  021fb	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  021ff	0f 85 f7 01 00
	00		 jne	 $LN39@update_com
  02205	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0220a	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  02210	83 e1 02	 and	 ecx, 2
  02213	0f 85 e3 01 00
	00		 jne	 $LN39@update_com

; 1000 : 		(!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR)))
; 1001 : 	{
; 1002 : 
; 1003 : 		if (!check_zero_3d_vector (&model_motion_vector))

  02219	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _model_motion_vector$[ebp]
  0221f	50		 push	 eax
  02220	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  02225	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv3000[ebp]
  0222b	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv3000[ebp]
  02233	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0223b	9f		 lahf
  0223c	f6 c4 44	 test	 ah, 68			; 00000044H
  0223f	0f 8b b7 01 00
	00		 jnp	 $LN39@update_com

; 1004 : 		{
; 1005 : 
; 1006 : 			vec3d
; 1007 : 				unnormalised_direction;
; 1008 : 
; 1009 : 			direction = model_motion_vector;

  02245	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _model_motion_vector$[ebp]
  0224b	89 85 04 ff ff
	ff		 mov	 DWORD PTR _direction$[ebp], eax
  02251	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _model_motion_vector$[ebp+4]
  02257	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _direction$[ebp+4], ecx
  0225d	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _model_motion_vector$[ebp+8]
  02263	89 95 0c ff ff
	ff		 mov	 DWORD PTR _direction$[ebp+8], edx

; 1010 : 
; 1011 : 			invert_3d_vector (&direction);

  02269	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  0226f	50		 push	 eax
  02270	e8 00 00 00 00	 call	 ?invert_3d_vector@@YGXPAUVEC3D@@@Z ; invert_3d_vector

; 1012 : 
; 1013 : 			unnormalised_direction = direction;

  02275	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR _direction$[ebp]
  0227b	89 85 5c fe ff
	ff		 mov	 DWORD PTR _unnormalised_direction$40[ebp], eax
  02281	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _direction$[ebp+4]
  02287	89 8d 60 fe ff
	ff		 mov	 DWORD PTR _unnormalised_direction$40[ebp+4], ecx
  0228d	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _direction$[ebp+8]
  02293	89 95 64 fe ff
	ff		 mov	 DWORD PTR _unnormalised_direction$40[ebp+8], edx

; 1014 : 
; 1015 : 			// arneh, 20060813 - reduce banking effect on heading change at slow speed
; 1016 : 			force = 0.0030 * (horizontal_velocity * horizontal_velocity) * current_flight_dynamics->tail_boom_length.value;

  02299	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _horizontal_velocity$[ebp]
  022a1	f3 0f 59 85 44
	ff ff ff	 mulss	 xmm0, DWORD PTR _horizontal_velocity$[ebp]
  022a9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  022ad	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f689374bc6a7efa
  022b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  022ba	f3 0f 5a 88 ac
	1f 00 00	 cvtss2sd xmm1, DWORD PTR [eax+8108]
  022c2	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  022c6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  022ca	f3 0f 11 45 98	 movss	 DWORD PTR _force$[ebp], xmm0

; 1017 : //			force = (motion_vector_magnitude * motion_vector_magnitude) / (3.5 * current_flight_dynamics->tail_boom_length.value);
; 1018 : 
; 1019 : 			this_reaction_force += (force - this_reaction_force) * get_model_delta_time ();

  022cf	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _force$[ebp]
  022d4	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?this_reaction_force@@3MA
  022dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  022e1	f3 0f 59 80 90
	00 00 00	 mulss	 xmm0, DWORD PTR [eax+144]
  022e9	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?this_reaction_force@@3MA
  022f1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?this_reaction_force@@3MA, xmm0

; 1020 : 
; 1021 : 			this_reaction_force = bound (this_reaction_force, -100.0, 100.0);

  022f9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?this_reaction_force@@3MA
  02301	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c059000000000000
  02309	66 0f 2f c8	 comisd	 xmm1, xmm0
  0230d	76 12		 jbe	 SHORT $LN112@update_com
  0230f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c059000000000000
  02317	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1211[ebp], xmm0
  0231f	eb 44		 jmp	 SHORT $LN113@update_com
$LN112@update_com:
  02321	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?this_reaction_force@@3MA
  02329	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  02331	76 12		 jbe	 SHORT $LN110@update_com
  02333	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  0233b	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1210[ebp], xmm0
  02343	eb 10		 jmp	 SHORT $LN111@update_com
$LN110@update_com:
  02345	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?this_reaction_force@@3MA
  0234d	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1210[ebp], xmm0
$LN111@update_com:
  02355	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1210[ebp]
  0235d	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1211[ebp], xmm0
$LN113@update_com:
  02365	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1211[ebp]
  0236d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?this_reaction_force@@3MA, xmm0

; 1022 : 
; 1023 : 			normalise_any_3d_vector (&direction);

  02375	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  0237b	50		 push	 eax
  0237c	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  02381	dd d8		 fstp	 ST(0)

; 1024 : 
; 1025 : 			direction.y = 0.0;

  02383	0f 57 c0	 xorps	 xmm0, xmm0
  02386	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 1026 : 			direction.z = 0.0;

  0238e	0f 57 c0	 xorps	 xmm0, xmm0
  02391	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 1027 : 
; 1028 : 			position.x = 0.0;

  02399	0f 57 c0	 xorps	 xmm0, xmm0
  0239c	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1029 : 			position.y = 0.0;

  023a4	0f 57 c0	 xorps	 xmm0, xmm0
  023a7	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1030 : 			position.z = -current_flight_dynamics->tail_boom_length.value;

  023af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  023b4	f3 0f 10 80 ac
	1f 00 00	 movss	 xmm0, DWORD PTR [eax+8108]
  023bc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  023c3	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1031 : 
; 1032 : 			add_dynamic_force ("Realign force (Y axis)", this_reaction_force, 0.0, &position, &direction, FALSE);

  023cb	6a 00		 push	 0
  023cd	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  023d3	50		 push	 eax
  023d4	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  023da	51		 push	 ecx
  023db	51		 push	 ecx
  023dc	0f 57 c0	 xorps	 xmm0, xmm0
  023df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  023e4	51		 push	 ecx
  023e5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?this_reaction_force@@3MA
  023ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  023f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EICDHFJI@Realign?5force?5?$CIY?5axis?$CJ@
  023f7	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN39@update_com:

; 1033 : 		}
; 1034 : 	}
; 1035 : 
; 1036 : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1037 : 	// Aerodynamics
; 1038 : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1039 : 
; 1040 : 	////////////////////////////////////////////
; 1041 : 	// Fuselage aerodynamics motion_vector -> attitude realignment force in the x axis
; 1042 : 	////////////////////////////////////////////
; 1043 : 	if ((!model_landed) &&

  023fc	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  02400	0f 85 fc 00 00
	00		 jne	 $LN40@update_com
  02406	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0240b	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  02411	83 e1 02	 and	 ecx, 2
  02414	0f 85 e8 00 00
	00		 jne	 $LN40@update_com

; 1044 : 		(!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR)))
; 1045 : 	{
; 1046 : 
; 1047 : 		reaction_force = 30.0 * (current_flight_dynamics->pitch.delta + current_flight_dynamics->main_rotor_pitch_angle.delta);

  0241a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0241f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02425	f3 0f 10 80 60
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8544]
  0242d	f3 0f 58 81 00
	1e 00 00	 addss	 xmm0, DWORD PTR [ecx+7680]
  02435	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  02439	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@403e000000000000
  02441	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02445	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 1048 : 
; 1049 : 		if (current_flight_dynamics->velocity_z.max != 0.0)

  0244a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0244f	f3 0f 5a 80 a8
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8360]
  02457	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0245f	9f		 lahf
  02460	f6 c4 44	 test	 ah, 68			; 00000044H
  02463	7b 1e		 jnp	 SHORT $LN41@update_com

; 1050 : 			reaction_force *= motion_vector_magnitude / current_flight_dynamics->velocity_z.max;

  02465	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0246a	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  0246f	f3 0f 5e 80 a8
	20 00 00	 divss	 xmm0, DWORD PTR [eax+8360]
  02477	f3 0f 59 45 80	 mulss	 xmm0, DWORD PTR _reaction_force$[ebp]
  0247c	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 1051 : 		else

  02481	eb 08		 jmp	 SHORT $LN42@update_com
$LN41@update_com:

; 1052 : 			reaction_force = 0.0;

  02483	0f 57 c0	 xorps	 xmm0, xmm0
  02486	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0
$LN42@update_com:

; 1053 : 
; 1054 : 		position.x = 0.0;

  0248b	0f 57 c0	 xorps	 xmm0, xmm0
  0248e	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1055 : 		position.y = 0.0;

  02496	0f 57 c0	 xorps	 xmm0, xmm0
  02499	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1056 : 		position.z = rotor_radius;

  024a1	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  024a6	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1057 : 
; 1058 : 		direction.x = 0.0;

  024ae	0f 57 c0	 xorps	 xmm0, xmm0
  024b1	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 1059 : 		direction.y = -1.0;

  024b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  024c1	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 1060 : 		direction.z = 0.0;

  024c9	0f 57 c0	 xorps	 xmm0, xmm0
  024cc	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 1061 : 
; 1062 : 		add_dynamic_force ("Realign force (X axis)", reaction_force, 0.0, &position, &direction, FALSE);

  024d4	6a 00		 push	 0
  024d6	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  024dc	50		 push	 eax
  024dd	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  024e3	51		 push	 ecx
  024e4	51		 push	 ecx
  024e5	0f 57 c0	 xorps	 xmm0, xmm0
  024e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  024ed	51		 push	 ecx
  024ee	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _reaction_force$[ebp]
  024f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  024f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IEIJHFAG@Realign?5force?5?$CIX?5axis?$CJ@
  024fd	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN40@update_com:

; 1063 : 	}
; 1064 : 
; 1065 : 	////////////////////////////////////////////
; 1066 : 	// Resistance to forward movement
; 1067 : 	////////////////////////////////////////////
; 1068 : 	if (!model_landed)

  02502	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  02506	0f 85 fc 00 00
	00		 jne	 $LN43@update_com

; 1069 : 	{
; 1070 : 
; 1071 : 		float
; 1072 : 			sign,
; 1073 : 			drag;
; 1074 : 
; 1075 : 		drag = 0.0005;

  0250c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3a03126f
  02514	f3 0f 11 85 54
	fe ff ff	 movss	 DWORD PTR _drag$38[ebp], xmm0

; 1076 : 
; 1077 : 		reaction_force = drag * motion_vector_magnitude * motion_vector_magnitude;

  0251c	f3 0f 10 85 54
	fe ff ff	 movss	 xmm0, DWORD PTR _drag$38[ebp]
  02524	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  02529	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _motion_vector_magnitude$[ebp]
  0252e	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 1078 : 
; 1079 : 		sign = 0.0;

  02533	0f 57 c0	 xorps	 xmm0, xmm0
  02536	f3 0f 11 85 58
	fe ff ff	 movss	 DWORD PTR _sign$39[ebp], xmm0

; 1080 : 
; 1081 : 		if (velocity_z_value != 0.0)

  0253e	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _velocity_z_value$[ebp]
  02546	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0254e	9f		 lahf
  0254f	f6 c4 44	 test	 ah, 68			; 00000044H
  02552	7b 31		 jnp	 SHORT $LN44@update_com

; 1082 : 		{
; 1083 : 
; 1084 : 			sign = fabs (velocity_z_value) / velocity_z_value;

  02554	51		 push	 ecx
  02555	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  0255d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02562	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  02567	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3074[ebp]
  0256d	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv3074[ebp]
  02575	f3 0f 5e 85 48
	ff ff ff	 divss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  0257d	f3 0f 11 85 58
	fe ff ff	 movss	 DWORD PTR _sign$39[ebp], xmm0
$LN44@update_com:

; 1085 : 		}
; 1086 : 
; 1087 : 		position.x = 0.0;

  02585	0f 57 c0	 xorps	 xmm0, xmm0
  02588	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1088 : 		position.y = 0.0;

  02590	0f 57 c0	 xorps	 xmm0, xmm0
  02593	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1089 : 		position.z = rotor_radius;

  0259b	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  025a0	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1090 : 
; 1091 : 		direction.x = 0.0;

  025a8	0f 57 c0	 xorps	 xmm0, xmm0
  025ab	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 1092 : 		direction.y = 0.0;

  025b3	0f 57 c0	 xorps	 xmm0, xmm0
  025b6	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 1093 : 		direction.z = -1.0 * sign;

  025be	f3 0f 5a 85 58
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _sign$39[ebp]
  025c6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  025ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  025d2	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 1094 : 
; 1095 : 		add_dynamic_force ("Forward motion drag", reaction_force, 0.0, &position, &direction, FALSE);

  025da	6a 00		 push	 0
  025dc	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  025e2	50		 push	 eax
  025e3	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  025e9	51		 push	 ecx
  025ea	51		 push	 ecx
  025eb	0f 57 c0	 xorps	 xmm0, xmm0
  025ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  025f3	51		 push	 ecx
  025f4	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _reaction_force$[ebp]
  025f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  025fe	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JPPEFMCN@Forward?5motion?5drag@
  02603	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN43@update_com:

; 1096 : 	}
; 1097 : 	////////////////////////////////////////////
; 1098 : 	// Resistance to lateral movement
; 1099 : 	////////////////////////////////////////////
; 1100 : 	if (!model_landed)

  02608	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  0260c	0f 85 1c 01 00
	00		 jne	 $LN45@update_com

; 1101 : 	{
; 1102 : 
; 1103 : 		float
; 1104 : 			Fmax;
; 1105 : 
; 1106 : 		Fmax = 0.5;

  02612	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0261a	f3 0f 11 85 50
	fe ff ff	 movss	 DWORD PTR _Fmax$37[ebp], xmm0

; 1107 : 
; 1108 : 		if (current_flight_dynamics->velocity_x.max != 0.0)

  02622	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02627	f3 0f 5a 80 78
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8312]
  0262f	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  02637	9f		 lahf
  02638	f6 c4 44	 test	 ah, 68			; 00000044H
  0263b	7b 7a		 jnp	 SHORT $LN46@update_com

; 1109 : 		{
; 1110 : 
; 1111 : 			reaction_force = Fmax * (fabs (model_motion_vector.x) * model_motion_vector.x) / pow (current_flight_dynamics->velocity_x.max, 2.0f);

  0263d	51		 push	 ecx
  0263e	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp]
  02646	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0264b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  02650	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3096[ebp]
  02656	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv3096[ebp]
  0265e	f3 0f 59 85 ec
	fe ff ff	 mulss	 xmm0, DWORD PTR _model_motion_vector$[ebp]
  02666	f3 0f 59 85 50
	fe ff ff	 mulss	 xmm0, DWORD PTR _Fmax$37[ebp]
  0266e	51		 push	 ecx
  0266f	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40000000
  02677	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0267c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02681	51		 push	 ecx
  02682	f3 0f 10 88 78
	20 00 00	 movss	 xmm1, DWORD PTR [eax+8312]
  0268a	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0268f	f3 0f 11 85 e0
	fc ff ff	 movss	 DWORD PTR tv3662[ebp], xmm0
  02697	e8 00 00 00 00	 call	 ?pow@@YGMMM@Z		; pow
  0269c	d9 9d dc fc ff
	ff		 fstp	 DWORD PTR tv3106[ebp]
  026a2	f3 0f 10 85 e0
	fc ff ff	 movss	 xmm0, DWORD PTR tv3662[ebp]
  026aa	f3 0f 5e 85 dc
	fc ff ff	 divss	 xmm0, DWORD PTR tv3106[ebp]
  026b2	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0
$LN46@update_com:

; 1112 : 		}
; 1113 : 
; 1114 : 		position.x = rotor_radius;

  026b7	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  026bc	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1115 : 		position.y = 0.0;

  026c4	0f 57 c0	 xorps	 xmm0, xmm0
  026c7	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1116 : 		position.z = 0.0;

  026cf	0f 57 c0	 xorps	 xmm0, xmm0
  026d2	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1117 : 
; 1118 : 		direction.x = -1.0;

  026da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  026e2	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 1119 : 		direction.y = 0.0;

  026ea	0f 57 c0	 xorps	 xmm0, xmm0
  026ed	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 1120 : 		direction.z = 0.0;

  026f5	0f 57 c0	 xorps	 xmm0, xmm0
  026f8	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 1121 : 
; 1122 : 		add_dynamic_force ("Lateral motion drag", reaction_force, 0.0, &position, &direction, FALSE);

  02700	6a 00		 push	 0
  02702	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  02708	50		 push	 eax
  02709	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  0270f	51		 push	 ecx
  02710	51		 push	 ecx
  02711	0f 57 c0	 xorps	 xmm0, xmm0
  02714	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02719	51		 push	 ecx
  0271a	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _reaction_force$[ebp]
  0271f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02724	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DICEDONG@Lateral?5motion?5drag@
  02729	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN45@update_com:

; 1123 : 	}
; 1124 : 	////////////////////////////////////////////
; 1125 : 	// Resistance to vertical movement
; 1126 : 	////////////////////////////////////////////
; 1127 : 
; 1128 : 	// if we're in contact with something then the helicopter may not move afterall
; 1129 : 	// and what we thought were downward movement isn't actually, and when we then
; 1130 : 	// apply "drag" we're actually creating a force which moves the helicopter in the
; 1131 : 	// opposite direction.  So disable the drag if we're in contact with something else
; 1132 : 	// (most commonly the ground)
; 1133 : 	if (!fixed_collision_count && !moving_collision_count)

  0272e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?fixed_collision_count@@3HA, 0 ; fixed_collision_count
  02735	0f 85 45 02 00
	00		 jne	 $LN47@update_com
  0273b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?moving_collision_count@@3HA, 0 ; moving_collision_count
  02742	0f 85 38 02 00
	00		 jne	 $LN47@update_com

; 1134 : 	{
; 1135 : 
; 1136 : 		float
; 1137 : 			drag,
; 1138 : 			sideways_drag,
; 1139 : 			Fmax;
; 1140 : 
; 1141 : 		// ball park figures
; 1142 : 		drag = 0.4;

  02748	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  02750	f3 0f 11 85 4c
	fe ff ff	 movss	 DWORD PTR _drag$36[ebp], xmm0

; 1143 : 
; 1144 : 		Fmax = 0.0;

  02758	0f 57 c0	 xorps	 xmm0, xmm0
  0275b	f3 0f 11 85 44
	fe ff ff	 movss	 DWORD PTR _Fmax$34[ebp], xmm0

; 1145 : 		// arneh 20060813 - reduce drag in sideway flight - compensated by reduced lift.
; 1146 : 		// makes it impossible to keep flying sideways at insane bank angles without losing altitude
; 1147 : 		sideways_drag = 5.0 * (model_motion_vector.x * model_motion_vector.x) / pow (current_flight_dynamics->velocity_x.max, 2.0f);

  02763	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp]
  0276b	f3 0f 59 85 ec
	fe ff ff	 mulss	 xmm0, DWORD PTR _model_motion_vector$[ebp]
  02773	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  02777	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  0277f	51		 push	 ecx
  02780	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40000000
  02788	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0278d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02792	51		 push	 ecx
  02793	f3 0f 10 88 78
	20 00 00	 movss	 xmm1, DWORD PTR [eax+8312]
  0279b	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  027a0	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv3664[ebp], xmm0
  027a8	e8 00 00 00 00	 call	 ?pow@@YGMMM@Z		; pow
  027ad	dd 9d d8 fc ff
	ff		 fstp	 QWORD PTR tv3132[ebp]
  027b3	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv3664[ebp]
  027bb	f2 0f 5e 85 d8
	fc ff ff	 divsd	 xmm0, QWORD PTR tv3132[ebp]
  027c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  027c7	f3 0f 11 85 48
	fe ff ff	 movss	 DWORD PTR _sideways_drag$35[ebp], xmm0

; 1148 : 
; 1149 : 
; 1150 : 		if (current_flight_dynamics->main_rotor_rpm.max != 0.0)

  027cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  027d4	f3 0f 5a 80 20
	1e 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7712]
  027dc	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  027e4	9f		 lahf
  027e5	f6 c4 44	 test	 ah, 68			; 00000044H
  027e8	7b 45		 jnp	 SHORT $LN48@update_com

; 1151 : 		{
; 1152 : 
; 1153 : 			Fmax = drag + sideways_drag + 4.5 * (main_rotor_rpm_value / current_flight_dynamics->main_rotor_rpm.max);

  027ea	f3 0f 10 85 4c
	fe ff ff	 movss	 xmm0, DWORD PTR _drag$36[ebp]
  027f2	f3 0f 58 85 48
	fe ff ff	 addss	 xmm0, DWORD PTR _sideways_drag$35[ebp]
  027fa	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  027fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02803	f3 0f 10 8d 6c
	ff ff ff	 movss	 xmm1, DWORD PTR _main_rotor_rpm_value$[ebp]
  0280b	f3 0f 5e 88 20
	1e 00 00	 divss	 xmm1, DWORD PTR [eax+7712]
  02813	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  02817	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4012000000000000
  0281f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  02823	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02827	f3 0f 11 85 44
	fe ff ff	 movss	 DWORD PTR _Fmax$34[ebp], xmm0
$LN48@update_com:

; 1154 : 		}
; 1155 : 
; 1156 : 		reaction_force = 0.0;

  0282f	0f 57 c0	 xorps	 xmm0, xmm0
  02832	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0

; 1157 : 
; 1158 : 		if (current_flight_dynamics->velocity_y.max != 0.0)

  02837	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0283c	f3 0f 5a 80 90
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8336]
  02844	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0284c	9f		 lahf
  0284d	f6 c4 44	 test	 ah, 68			; 00000044H
  02850	7b 7a		 jnp	 SHORT $LN49@update_com

; 1159 : 		{
; 1160 : 
; 1161 : 			reaction_force = Fmax * (fabs (model_motion_vector.y) * model_motion_vector.y) / pow (current_flight_dynamics->velocity_y.max, 2.0f);

  02852	51		 push	 ecx
  02853	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp+4]
  0285b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02860	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  02865	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3149[ebp]
  0286b	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv3149[ebp]
  02873	f3 0f 59 85 f0
	fe ff ff	 mulss	 xmm0, DWORD PTR _model_motion_vector$[ebp+4]
  0287b	f3 0f 59 85 44
	fe ff ff	 mulss	 xmm0, DWORD PTR _Fmax$34[ebp]
  02883	51		 push	 ecx
  02884	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40000000
  0288c	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  02891	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02896	51		 push	 ecx
  02897	f3 0f 10 88 90
	20 00 00	 movss	 xmm1, DWORD PTR [eax+8336]
  0289f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  028a4	f3 0f 11 85 e0
	fc ff ff	 movss	 DWORD PTR tv3666[ebp], xmm0
  028ac	e8 00 00 00 00	 call	 ?pow@@YGMMM@Z		; pow
  028b1	d9 9d dc fc ff
	ff		 fstp	 DWORD PTR tv3159[ebp]
  028b7	f3 0f 10 85 e0
	fc ff ff	 movss	 xmm0, DWORD PTR tv3666[ebp]
  028bf	f3 0f 5e 85 dc
	fc ff ff	 divss	 xmm0, DWORD PTR tv3159[ebp]
  028c7	f3 0f 11 45 80	 movss	 DWORD PTR _reaction_force$[ebp], xmm0
$LN49@update_com:

; 1162 : 		}
; 1163 : 
; 1164 : 		//
; 1165 : 		// Only add resistane lift
; 1166 : 		//
; 1167 : 
; 1168 : //		if (reaction_force > 0.0)
; 1169 : 		{
; 1170 : 
; 1171 : 			position.x = 0.0;

  028cc	0f 57 c0	 xorps	 xmm0, xmm0
  028cf	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1172 : 			position.y = 1.0;

  028d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  028df	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1173 : 			position.z = 0.0;

  028e7	0f 57 c0	 xorps	 xmm0, xmm0
  028ea	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1174 : 
; 1175 : 			direction.x = 0.0;

  028f2	0f 57 c0	 xorps	 xmm0, xmm0
  028f5	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 1176 : 			direction.y = (reaction_force > 0.0) ? -1.0 : 1.0;

  028fd	f3 0f 5a 45 80	 cvtss2sd xmm0, DWORD PTR _reaction_force$[ebp]
  02902	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0290a	76 12		 jbe	 SHORT $LN114@update_com
  0290c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bff0000000000000
  02914	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1361[ebp], xmm0
  0291c	eb 10		 jmp	 SHORT $LN115@update_com
$LN114@update_com:
  0291e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  02926	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1361[ebp], xmm0
$LN115@update_com:
  0292e	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1361[ebp]
  02936	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 1177 : 			direction.z = 0.0;

  0293e	0f 57 c0	 xorps	 xmm0, xmm0
  02941	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 1178 : 
; 1179 : 			add_dynamic_force ("Vertical motion drag", fabs(reaction_force), 0.0, &position, &direction, FALSE);

  02949	6a 00		 push	 0
  0294b	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  02951	50		 push	 eax
  02952	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  02958	51		 push	 ecx
  02959	51		 push	 ecx
  0295a	0f 57 c0	 xorps	 xmm0, xmm0
  0295d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02962	51		 push	 ecx
  02963	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _reaction_force$[ebp]
  02968	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0296d	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  02972	51		 push	 ecx
  02973	d9 1c 24	 fstp	 DWORD PTR [esp]
  02976	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@LAMOPNAJ@Vertical?5motion?5drag@
  0297b	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN47@update_com:

; 1180 : 		}
; 1181 : 	}
; 1182 : 
; 1183 : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1184 : 	// External forces
; 1185 : 	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 1186 : 
; 1187 : 	////////////////////////////////////////////
; 1188 : 	// In Ground Effect
; 1189 : 	////////////////////////////////////////////
; 1190 : 	if ((get_current_dynamics_options (DYNAMICS_OPTIONS_GROUND_EFFECT)) &&

  02980	6a 04		 push	 4
  02982	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  02987	85 c0		 test	 eax, eax
  02989	0f 84 d2 0e 00
	00		 je	 $LN58@update_com
  0298f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02994	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  0299a	83 e1 02	 and	 ecx, 2
  0299d	0f 85 be 0e 00
	00		 jne	 $LN58@update_com

; 1191 : 		(!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR)))
; 1192 : 	{
; 1193 : 
; 1194 : 		float
; 1195 : 			altitude;
; 1196 : 
; 1197 : 		terrain_3d_point_data
; 1198 : 			terrain_info;
; 1199 : 
; 1200 : 		vec3d
; 1201 : 			world_position;
; 1202 : 
; 1203 : 		memset (&terrain_info, 0, sizeof (terrain_3d_point_data));

  029a3	6a 2c		 push	 44			; 0000002cH
  029a5	6a 00		 push	 0
  029a7	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  029ad	50		 push	 eax
  029ae	e8 00 00 00 00	 call	 _memset
  029b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1204 : 
; 1205 : 		get_3d_terrain_point_data (current_flight_dynamics->position.x, current_flight_dynamics->position.z, &terrain_info);

  029b6	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  029bc	50		 push	 eax
  029bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  029c3	f2 0f 5a 81 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [ecx+188]
  029cb	51		 push	 ecx
  029cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  029d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  029d7	f2 0f 5a 82 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [edx+172]
  029df	51		 push	 ecx
  029e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  029e5	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  029ea	dd d8		 fstp	 ST(0)

; 1206 : 
; 1207 : 		altitude = current_flight_dynamics->position.y - get_3d_terrain_point_data_elevation (&terrain_info);

  029ec	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  029f2	50		 push	 eax
  029f3	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  029f8	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv3191[ebp]
  029fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02a04	f2 0f 10 81 b4
	00 00 00	 movsd	 xmm0, QWORD PTR [ecx+180]
  02a0c	f2 0f 5c 85 e0
	fc ff ff	 subsd	 xmm0, QWORD PTR tv3191[ebp]
  02a14	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02a18	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1208 : 
; 1209 : 		////////////////////////////////////////////
; 1210 : 		// In Ground Effect on middle side of rotor disc
; 1211 : 		////////////////////////////////////////////
; 1212 : 		{
; 1213 : 
; 1214 : 			float
; 1215 : 				over_all_g_e_force;
; 1216 : 
; 1217 : 			over_all_g_e_force = (1.0 - ((altitude * altitude) / (current_flight_dynamics->main_rotor_diameter.value * current_flight_dynamics->main_rotor_diameter.value)));

  02a20	f3 0f 10 85 40
	fe ff ff	 movss	 xmm0, DWORD PTR _altitude$33[ebp]
  02a28	f3 0f 59 85 40
	fe ff ff	 mulss	 xmm0, DWORD PTR _altitude$33[ebp]
  02a30	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02a35	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02a3b	f3 0f 10 88 9c
	1d 00 00	 movss	 xmm1, DWORD PTR [eax+7580]
  02a43	f3 0f 59 89 9c
	1d 00 00	 mulss	 xmm1, DWORD PTR [ecx+7580]
  02a4b	f3 0f 5e c1	 divss	 xmm0, xmm1
  02a4f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  02a53	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  02a5b	f2 0f 5c c8	 subsd	 xmm1, xmm0
  02a5f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  02a63	f3 0f 11 85 04
	fe ff ff	 movss	 DWORD PTR _over_all_g_e_force$30[ebp], xmm0

; 1218 : 
; 1219 : 			over_all_g_e_force = bound (over_all_g_e_force, 0.0, 1.0);

  02a6b	f3 0f 5a 85 04
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _over_all_g_e_force$30[ebp]
  02a73	0f 57 c9	 xorps	 xmm1, xmm1
  02a76	66 0f 2f c8	 comisd	 xmm1, xmm0
  02a7a	76 0d		 jbe	 SHORT $LN118@update_com
  02a7c	0f 57 c0	 xorps	 xmm0, xmm0
  02a7f	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1412[ebp], xmm0
  02a87	eb 44		 jmp	 SHORT $LN119@update_com
$LN118@update_com:
  02a89	f3 0f 5a 85 04
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _over_all_g_e_force$30[ebp]
  02a91	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  02a99	76 12		 jbe	 SHORT $LN116@update_com
  02a9b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  02aa3	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1411[ebp], xmm0
  02aab	eb 10		 jmp	 SHORT $LN117@update_com
$LN116@update_com:
  02aad	f3 0f 5a 85 04
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _over_all_g_e_force$30[ebp]
  02ab5	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1411[ebp], xmm0
$LN117@update_com:
  02abd	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1411[ebp]
  02ac5	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1412[ebp], xmm0
$LN119@update_com:
  02acd	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1412[ebp]
  02ad5	f3 0f 11 85 04
	fe ff ff	 movss	 DWORD PTR _over_all_g_e_force$30[ebp], xmm0

; 1220 : 
; 1221 : 			over_all_g_e_force *= 0.1 * main_rotor_induced_air_value;

  02add	f3 0f 5a 85 74
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  02ae5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  02aed	f3 0f 5a 8d 04
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _over_all_g_e_force$30[ebp]
  02af5	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  02af9	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  02afd	f3 0f 11 85 04
	fe ff ff	 movss	 DWORD PTR _over_all_g_e_force$30[ebp], xmm0

; 1222 : 
; 1223 : 			if (current_flight_dynamics->velocity_z.max != 0.0)

  02b05	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02b0a	f3 0f 5a 80 a8
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8360]
  02b12	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  02b1a	9f		 lahf
  02b1b	f6 c4 44	 test	 ah, 68			; 00000044H
  02b1e	7b 4c		 jnp	 SHORT $LN51@update_com

; 1224 : 			{
; 1225 : 
; 1226 : 				over_all_g_e_force *= (current_flight_dynamics->velocity_z.max - fabs (velocity_z_value)) / current_flight_dynamics->velocity_z.max;

  02b20	51		 push	 ecx
  02b21	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  02b29	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02b2e	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  02b33	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3212[ebp]
  02b39	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02b3e	f3 0f 10 80 a8
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8360]
  02b46	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3212[ebp]
  02b4e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02b54	f3 0f 5e 81 a8
	20 00 00	 divss	 xmm0, DWORD PTR [ecx+8360]
  02b5c	f3 0f 59 85 04
	fe ff ff	 mulss	 xmm0, DWORD PTR _over_all_g_e_force$30[ebp]
  02b64	f3 0f 11 85 04
	fe ff ff	 movss	 DWORD PTR _over_all_g_e_force$30[ebp], xmm0
$LN51@update_com:

; 1227 : 			}
; 1228 : 
; 1229 : 			position.x = 0.0;

  02b6c	0f 57 c0	 xorps	 xmm0, xmm0
  02b6f	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1230 : 			position.y = 0.0;

  02b77	0f 57 c0	 xorps	 xmm0, xmm0
  02b7a	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1231 : 			position.z = 0.0;

  02b82	0f 57 c0	 xorps	 xmm0, xmm0
  02b85	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1232 : 
; 1233 : 			over_all_g_e_force *= current_flight_dynamics->ground_effect.modifier;

  02b8d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02b92	f3 0f 10 85 04
	fe ff ff	 movss	 xmm0, DWORD PTR _over_all_g_e_force$30[ebp]
  02b9a	f3 0f 59 80 e0
	23 00 00	 mulss	 xmm0, DWORD PTR [eax+9184]
  02ba2	f3 0f 11 85 04
	fe ff ff	 movss	 DWORD PTR _over_all_g_e_force$30[ebp], xmm0

; 1234 : 
; 1235 : 			add_dynamic_force ("Middle rotor Ground effect", over_all_g_e_force, 0.0, &position, &rotor_direction, FALSE);

  02baa	6a 00		 push	 0
  02bac	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  02bb2	50		 push	 eax
  02bb3	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  02bb9	51		 push	 ecx
  02bba	51		 push	 ecx
  02bbb	0f 57 c0	 xorps	 xmm0, xmm0
  02bbe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02bc3	51		 push	 ecx
  02bc4	f3 0f 10 85 04
	fe ff ff	 movss	 xmm0, DWORD PTR _over_all_g_e_force$30[ebp]
  02bcc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02bd1	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CBNCBPEP@Middle?5rotor?5Ground?5effect@
  02bd6	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force

; 1236 : 		}
; 1237 : 		////////////////////////////////////////////
; 1238 : 		// In Ground Effect on front side of rotor disc
; 1239 : 		////////////////////////////////////////////
; 1240 : 		{
; 1241 : 
; 1242 : 			float
; 1243 : 				tuning_value;
; 1244 : 
; 1245 : 			tuning_value = 0.1;

  02bdb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  02be3	f3 0f 11 85 00
	fe ff ff	 movss	 DWORD PTR _tuning_value$29[ebp], xmm0

; 1246 : 
; 1247 : 			position.x = 0.0;

  02beb	0f 57 c0	 xorps	 xmm0, xmm0
  02bee	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1248 : 			position.y = 0.0;

  02bf6	0f 57 c0	 xorps	 xmm0, xmm0
  02bf9	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1249 : 			position.z = rotor_radius;

  02c01	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  02c06	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1250 : 
; 1251 : 			multiply_matrix3x3_vec3d (&world_position, current_flight_dynamics->attitude, &position);

  02c0e	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR _position$[ebp]
  02c14	50		 push	 eax
  02c15	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02c1b	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  02c21	51		 push	 ecx
  02c22	8d 95 08 fe ff
	ff		 lea	 edx, DWORD PTR _world_position$31[ebp]
  02c28	52		 push	 edx
  02c29	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 1252 : 
; 1253 : 			world_position.x += current_flight_dynamics->position.x;

  02c2e	f3 0f 5a 85 08
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp]
  02c36	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02c3b	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  02c43	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02c47	f3 0f 11 85 08
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp], xmm0

; 1254 : 			world_position.y += current_flight_dynamics->position.y;

  02c4f	f3 0f 5a 85 0c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+4]
  02c57	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02c5c	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  02c64	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02c68	f3 0f 11 85 0c
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+4], xmm0

; 1255 : 			world_position.z += current_flight_dynamics->position.z;

  02c70	f3 0f 5a 85 10
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+8]
  02c78	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02c7d	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  02c85	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02c89	f3 0f 11 85 10
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+8], xmm0

; 1256 : 
; 1257 : 			bound_position_to_adjusted_map_volume (&world_position);

  02c91	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _world_position$31[ebp]
  02c97	50		 push	 eax
  02c98	e8 00 00 00 00	 call	 ?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_volume

; 1258 : 
; 1259 : 			get_3d_terrain_point_data (world_position.x, world_position.z, &terrain_info);

  02c9d	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  02ca3	50		 push	 eax
  02ca4	51		 push	 ecx
  02ca5	f3 0f 10 85 10
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+8]
  02cad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02cb2	51		 push	 ecx
  02cb3	f3 0f 10 85 08
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp]
  02cbb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02cc0	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  02cc5	dd d8		 fstp	 ST(0)

; 1260 : 
; 1261 : 			altitude = world_position.y - get_3d_terrain_point_data_elevation (&terrain_info);

  02cc7	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  02ccd	50		 push	 eax
  02cce	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  02cd3	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3248[ebp]
  02cd9	f3 0f 10 85 0c
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+4]
  02ce1	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3248[ebp]
  02ce9	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1262 : 
; 1263 : 			altitude = max (altitude, 0.0f);

  02cf1	0f 57 c0	 xorps	 xmm0, xmm0
  02cf4	f3 0f 11 85 0c
	fd ff ff	 movss	 DWORD PTR $T10[ebp], xmm0
  02cfc	8d 85 0c fd ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  02d02	50		 push	 eax
  02d03	8d 8d 40 fe ff
	ff		 lea	 ecx, DWORD PTR _altitude$33[ebp]
  02d09	51		 push	 ecx
  02d0a	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  02d0f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  02d13	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1264 : 
; 1265 : 			front_g_e_force += ((0.05 - ((altitude * altitude) / (20.0 * current_flight_dynamics->main_rotor_diameter.value * current_flight_dynamics->main_rotor_diameter.value))) - front_g_e_force) * get_model_delta_time ();

  02d1b	f3 0f 10 85 40
	fe ff ff	 movss	 xmm0, DWORD PTR _altitude$33[ebp]
  02d23	f3 0f 59 85 40
	fe ff ff	 mulss	 xmm0, DWORD PTR _altitude$33[ebp]
  02d2b	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  02d2f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02d34	f3 0f 5a 88 9c
	1d 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7580]
  02d3c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4034000000000000
  02d44	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02d4a	f3 0f 5a 91 9c
	1d 00 00	 cvtss2sd xmm2, DWORD PTR [ecx+7580]
  02d52	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  02d56	f2 0f 5e c1	 divsd	 xmm0, xmm1
  02d5a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fa999999999999a
  02d62	f2 0f 5c c8	 subsd	 xmm1, xmm0
  02d66	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?front_g_e_force@@3MA
  02d6e	f2 0f 5c c8	 subsd	 xmm1, xmm0
  02d72	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02d78	f3 0f 5a 82 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR [edx+144]
  02d80	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  02d84	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?front_g_e_force@@3MA
  02d8c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  02d90	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02d94	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?front_g_e_force@@3MA, xmm0

; 1266 : 
; 1267 : 			front_g_e_force = bound (front_g_e_force, 0.0, 0.05);

  02d9c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?front_g_e_force@@3MA
  02da4	0f 57 c9	 xorps	 xmm1, xmm1
  02da7	66 0f 2f c8	 comisd	 xmm1, xmm0
  02dab	76 0d		 jbe	 SHORT $LN122@update_com
  02dad	0f 57 c0	 xorps	 xmm0, xmm0
  02db0	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1496[ebp], xmm0
  02db8	eb 44		 jmp	 SHORT $LN123@update_com
$LN122@update_com:
  02dba	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?front_g_e_force@@3MA
  02dc2	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fa999999999999a
  02dca	76 12		 jbe	 SHORT $LN120@update_com
  02dcc	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa999999999999a
  02dd4	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1495[ebp], xmm0
  02ddc	eb 10		 jmp	 SHORT $LN121@update_com
$LN120@update_com:
  02dde	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?front_g_e_force@@3MA
  02de6	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1495[ebp], xmm0
$LN121@update_com:
  02dee	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1495[ebp]
  02df6	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1496[ebp], xmm0
$LN123@update_com:
  02dfe	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1496[ebp]
  02e06	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?front_g_e_force@@3MA, xmm0

; 1268 : 
; 1269 : 			if (front_g_e_force > 0.0)

  02e0e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?front_g_e_force@@3MA
  02e16	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  02e1e	0f 86 d5 00 00
	00		 jbe	 $LN52@update_com

; 1270 : 			{
; 1271 : 
; 1272 : 				front_g_e_force *= tuning_value * main_rotor_induced_air_value;

  02e24	f3 0f 10 85 00
	fe ff ff	 movss	 xmm0, DWORD PTR _tuning_value$29[ebp]
  02e2c	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  02e34	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?front_g_e_force@@3MA
  02e3c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?front_g_e_force@@3MA, xmm0

; 1273 : 
; 1274 : 				if (current_flight_dynamics->velocity_z.max != 0.0)

  02e44	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02e49	f3 0f 5a 80 a8
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8360]
  02e51	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  02e59	9f		 lahf
  02e5a	f6 c4 44	 test	 ah, 68			; 00000044H
  02e5d	7b 4c		 jnp	 SHORT $LN53@update_com

; 1275 : 				{
; 1276 : 
; 1277 : 					front_g_e_force *= (current_flight_dynamics->velocity_z.max - fabs (velocity_z_value)) / current_flight_dynamics->velocity_z.max;

  02e5f	51		 push	 ecx
  02e60	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  02e68	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02e6d	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  02e72	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3275[ebp]
  02e78	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02e7d	f3 0f 10 80 a8
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8360]
  02e85	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3275[ebp]
  02e8d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02e93	f3 0f 5e 81 a8
	20 00 00	 divss	 xmm0, DWORD PTR [ecx+8360]
  02e9b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?front_g_e_force@@3MA
  02ea3	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?front_g_e_force@@3MA, xmm0
$LN53@update_com:

; 1278 : 				}
; 1279 : 
; 1280 : 				#if DEBUG_MODULE
; 1281 : 
; 1282 : 				debug_log ("DYNAMICS: IGE front force %f, alt %f, y %f, el %f, x %f, z %f, tuning %f induced %f",
; 1283 : 								front_g_e_force, altitude, current_flight_dynamics->position.y,
; 1284 : 								get_3d_terrain_point_data_elevation (&terrain_info), world_position.x, world_position.z,
; 1285 : 								tuning_value, main_rotor_induced_air_value);
; 1286 : 
; 1287 : 				create_vectored_debug_3d_object (&world_position, &direction, OBJECT_3D_ARROW_FORCES, 0, 20.0 * front_g_e_force);
; 1288 : 
; 1289 : 				#endif
; 1290 : 
; 1291 : 				front_g_e_force *= current_flight_dynamics->ground_effect.modifier;

  02eab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02eb0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?front_g_e_force@@3MA
  02eb8	f3 0f 59 80 e0
	23 00 00	 mulss	 xmm0, DWORD PTR [eax+9184]
  02ec0	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?front_g_e_force@@3MA, xmm0

; 1292 : 
; 1293 : 				add_dynamic_force ("Front rotor Ground effect", front_g_e_force, 0.0, &position, &rotor_direction, FALSE);

  02ec8	6a 00		 push	 0
  02eca	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  02ed0	50		 push	 eax
  02ed1	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  02ed7	51		 push	 ecx
  02ed8	51		 push	 ecx
  02ed9	0f 57 c0	 xorps	 xmm0, xmm0
  02edc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02ee1	51		 push	 ecx
  02ee2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?front_g_e_force@@3MA
  02eea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02eef	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BDABDLEI@Front?5rotor?5Ground?5effect@
  02ef4	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN52@update_com:

; 1294 : 			}
; 1295 : 		}
; 1296 : 		////////////////////////////////////////////
; 1297 : 		// In Ground Effect on back side of rotor disc
; 1298 : 		////////////////////////////////////////////
; 1299 : 		{
; 1300 : 
; 1301 : 			float
; 1302 : 				tuning_value = 0.1;

  02ef9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  02f01	f3 0f 11 85 fc
	fd ff ff	 movss	 DWORD PTR _tuning_value$28[ebp], xmm0

; 1303 : 
; 1304 : 			position.x = 0.0;

  02f09	0f 57 c0	 xorps	 xmm0, xmm0
  02f0c	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1305 : 			position.y = 0.0;

  02f14	0f 57 c0	 xorps	 xmm0, xmm0
  02f17	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1306 : 			position.z = -rotor_radius;

  02f1f	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  02f24	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  02f2b	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1307 : 
; 1308 : 			multiply_matrix3x3_vec3d (&world_position, current_flight_dynamics->attitude, &position);

  02f33	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR _position$[ebp]
  02f39	50		 push	 eax
  02f3a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02f40	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  02f46	51		 push	 ecx
  02f47	8d 95 08 fe ff
	ff		 lea	 edx, DWORD PTR _world_position$31[ebp]
  02f4d	52		 push	 edx
  02f4e	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 1309 : 
; 1310 : 			world_position.x += current_flight_dynamics->position.x;

  02f53	f3 0f 5a 85 08
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp]
  02f5b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02f60	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  02f68	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02f6c	f3 0f 11 85 08
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp], xmm0

; 1311 : 			world_position.y += current_flight_dynamics->position.y;

  02f74	f3 0f 5a 85 0c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+4]
  02f7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02f81	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  02f89	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02f8d	f3 0f 11 85 0c
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+4], xmm0

; 1312 : 			world_position.z += current_flight_dynamics->position.z;

  02f95	f3 0f 5a 85 10
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+8]
  02f9d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  02fa2	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  02faa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  02fae	f3 0f 11 85 10
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+8], xmm0

; 1313 : 
; 1314 : 			bound_position_to_adjusted_map_volume (&world_position);

  02fb6	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _world_position$31[ebp]
  02fbc	50		 push	 eax
  02fbd	e8 00 00 00 00	 call	 ?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_volume

; 1315 : 
; 1316 : 			get_3d_terrain_point_data (world_position.x, world_position.z, &terrain_info);

  02fc2	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  02fc8	50		 push	 eax
  02fc9	51		 push	 ecx
  02fca	f3 0f 10 85 10
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+8]
  02fd2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02fd7	51		 push	 ecx
  02fd8	f3 0f 10 85 08
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp]
  02fe0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  02fe5	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  02fea	dd d8		 fstp	 ST(0)

; 1317 : 
; 1318 : 			altitude = world_position.y - get_3d_terrain_point_data_elevation (&terrain_info);

  02fec	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  02ff2	50		 push	 eax
  02ff3	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  02ff8	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3308[ebp]
  02ffe	f3 0f 10 85 0c
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+4]
  03006	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3308[ebp]
  0300e	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1319 : 
; 1320 : 			altitude = max (altitude, 0.0f);

  03016	0f 57 c0	 xorps	 xmm0, xmm0
  03019	f3 0f 11 85 08
	fd ff ff	 movss	 DWORD PTR $T9[ebp], xmm0
  03021	8d 85 08 fd ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  03027	50		 push	 eax
  03028	8d 8d 40 fe ff
	ff		 lea	 ecx, DWORD PTR _altitude$33[ebp]
  0302e	51		 push	 ecx
  0302f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  03034	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  03038	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1321 : 
; 1322 : 			back_g_e_force += ((0.05 - ((altitude * altitude) / (20.0 * current_flight_dynamics->main_rotor_diameter.value * current_flight_dynamics->main_rotor_diameter.value))) - back_g_e_force) * get_model_delta_time ();

  03040	f3 0f 10 85 40
	fe ff ff	 movss	 xmm0, DWORD PTR _altitude$33[ebp]
  03048	f3 0f 59 85 40
	fe ff ff	 mulss	 xmm0, DWORD PTR _altitude$33[ebp]
  03050	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  03054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03059	f3 0f 5a 88 9c
	1d 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7580]
  03061	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4034000000000000
  03069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0306f	f3 0f 5a 91 9c
	1d 00 00	 cvtss2sd xmm2, DWORD PTR [ecx+7580]
  03077	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  0307b	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0307f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fa999999999999a
  03087	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0308b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?back_g_e_force@@3MA
  03093	f2 0f 5c c8	 subsd	 xmm1, xmm0
  03097	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0309d	f3 0f 5a 82 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR [edx+144]
  030a5	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  030a9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?back_g_e_force@@3MA
  030b1	f2 0f 58 c1	 addsd	 xmm0, xmm1
  030b5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  030b9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?back_g_e_force@@3MA, xmm0

; 1323 : 
; 1324 : 			back_g_e_force = bound (back_g_e_force, 0.0, 0.05);

  030c1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?back_g_e_force@@3MA
  030c9	0f 57 c9	 xorps	 xmm1, xmm1
  030cc	66 0f 2f c8	 comisd	 xmm1, xmm0
  030d0	76 0d		 jbe	 SHORT $LN126@update_com
  030d2	0f 57 c0	 xorps	 xmm0, xmm0
  030d5	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1580[ebp], xmm0
  030dd	eb 44		 jmp	 SHORT $LN127@update_com
$LN126@update_com:
  030df	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?back_g_e_force@@3MA
  030e7	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fa999999999999a
  030ef	76 12		 jbe	 SHORT $LN124@update_com
  030f1	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa999999999999a
  030f9	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1579[ebp], xmm0
  03101	eb 10		 jmp	 SHORT $LN125@update_com
$LN124@update_com:
  03103	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?back_g_e_force@@3MA
  0310b	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1579[ebp], xmm0
$LN125@update_com:
  03113	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1579[ebp]
  0311b	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1580[ebp], xmm0
$LN127@update_com:
  03123	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1580[ebp]
  0312b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?back_g_e_force@@3MA, xmm0

; 1325 : 
; 1326 : 			if (back_g_e_force > 0.0)

  03133	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?back_g_e_force@@3MA
  0313b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  03143	0f 86 d5 00 00
	00		 jbe	 $LN54@update_com

; 1327 : 			{
; 1328 : 
; 1329 : 				back_g_e_force *= tuning_value * main_rotor_induced_air_value;

  03149	f3 0f 10 85 fc
	fd ff ff	 movss	 xmm0, DWORD PTR _tuning_value$28[ebp]
  03151	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  03159	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?back_g_e_force@@3MA
  03161	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?back_g_e_force@@3MA, xmm0

; 1330 : 
; 1331 : 				if (current_flight_dynamics->velocity_z.max != 0.0)

  03169	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0316e	f3 0f 5a 80 a8
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8360]
  03176	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0317e	9f		 lahf
  0317f	f6 c4 44	 test	 ah, 68			; 00000044H
  03182	7b 4c		 jnp	 SHORT $LN55@update_com

; 1332 : 				{
; 1333 : 
; 1334 : 					back_g_e_force *= (current_flight_dynamics->velocity_z.max - fabs (velocity_z_value)) / current_flight_dynamics->velocity_z.max;

  03184	51		 push	 ecx
  03185	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  0318d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03192	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  03197	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3335[ebp]
  0319d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  031a2	f3 0f 10 80 a8
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8360]
  031aa	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3335[ebp]
  031b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  031b8	f3 0f 5e 81 a8
	20 00 00	 divss	 xmm0, DWORD PTR [ecx+8360]
  031c0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?back_g_e_force@@3MA
  031c8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?back_g_e_force@@3MA, xmm0
$LN55@update_com:

; 1335 : 				}
; 1336 : 
; 1337 : 				#if DEBUG_MODULE
; 1338 : 
; 1339 : 				debug_log ("DYNAMICS: IGE back force %f, alt %f, y %f, el %f, x %f, z %f",
; 1340 : 								back_g_e_force, altitude, current_flight_dynamics->position.y,
; 1341 : 								get_3d_terrain_point_data_elevation (&terrain_info), world_position.x, world_position.z);
; 1342 : 
; 1343 : 				create_vectored_debug_3d_object (&world_position, &direction, OBJECT_3D_ARROW_FORCES, 0, 20.0 * back_g_e_force);
; 1344 : 
; 1345 : 				#endif
; 1346 : 
; 1347 : 				back_g_e_force *= current_flight_dynamics->ground_effect.modifier;

  031d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  031d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?back_g_e_force@@3MA
  031dd	f3 0f 59 80 e0
	23 00 00	 mulss	 xmm0, DWORD PTR [eax+9184]
  031e5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?back_g_e_force@@3MA, xmm0

; 1348 : 
; 1349 : 				add_dynamic_force ("Back rotor Ground effect", back_g_e_force, 0.0, &position, &rotor_direction, FALSE);

  031ed	6a 00		 push	 0
  031ef	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  031f5	50		 push	 eax
  031f6	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  031fc	51		 push	 ecx
  031fd	51		 push	 ecx
  031fe	0f 57 c0	 xorps	 xmm0, xmm0
  03201	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03206	51		 push	 ecx
  03207	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?back_g_e_force@@3MA
  0320f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03214	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@MKNEGMFL@Back?5rotor?5Ground?5effect@
  03219	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN54@update_com:

; 1350 : 			}
; 1351 : 		}
; 1352 : 		////////////////////////////////////////////
; 1353 : 		// In Ground Effect on left side of rotor disc
; 1354 : 		////////////////////////////////////////////
; 1355 : 		{
; 1356 : 
; 1357 : 			float
; 1358 : 				tuning_value = 0.1;

  0321e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  03226	f3 0f 11 85 f8
	fd ff ff	 movss	 DWORD PTR _tuning_value$27[ebp], xmm0

; 1359 : 
; 1360 : 			position.x = rotor_radius;

  0322e	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  03233	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1361 : 			position.y = 0.0;

  0323b	0f 57 c0	 xorps	 xmm0, xmm0
  0323e	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1362 : 			position.z = 0.0;

  03246	0f 57 c0	 xorps	 xmm0, xmm0
  03249	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1363 : 
; 1364 : 			multiply_matrix3x3_vec3d (&world_position, current_flight_dynamics->attitude, &position);

  03251	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR _position$[ebp]
  03257	50		 push	 eax
  03258	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0325e	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  03264	51		 push	 ecx
  03265	8d 95 08 fe ff
	ff		 lea	 edx, DWORD PTR _world_position$31[ebp]
  0326b	52		 push	 edx
  0326c	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 1365 : 
; 1366 : 			world_position.x += current_flight_dynamics->position.x;

  03271	f3 0f 5a 85 08
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp]
  03279	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0327e	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  03286	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0328a	f3 0f 11 85 08
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp], xmm0

; 1367 : 			world_position.y += current_flight_dynamics->position.y;

  03292	f3 0f 5a 85 0c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+4]
  0329a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0329f	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  032a7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  032ab	f3 0f 11 85 0c
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+4], xmm0

; 1368 : 			world_position.z += current_flight_dynamics->position.z;

  032b3	f3 0f 5a 85 10
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+8]
  032bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  032c0	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  032c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  032cc	f3 0f 11 85 10
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+8], xmm0

; 1369 : 
; 1370 : 			bound_position_to_adjusted_map_volume (&world_position);

  032d4	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _world_position$31[ebp]
  032da	50		 push	 eax
  032db	e8 00 00 00 00	 call	 ?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_volume

; 1371 : 
; 1372 : 			get_3d_terrain_point_data (world_position.x, world_position.z, &terrain_info);

  032e0	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  032e6	50		 push	 eax
  032e7	51		 push	 ecx
  032e8	f3 0f 10 85 10
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+8]
  032f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  032f5	51		 push	 ecx
  032f6	f3 0f 10 85 08
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp]
  032fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03303	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  03308	dd d8		 fstp	 ST(0)

; 1373 : 
; 1374 : 			altitude = world_position.y - get_3d_terrain_point_data_elevation (&terrain_info);

  0330a	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  03310	50		 push	 eax
  03311	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  03316	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3368[ebp]
  0331c	f3 0f 10 85 0c
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+4]
  03324	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3368[ebp]
  0332c	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1375 : 
; 1376 : 			altitude = max (altitude, 0.0f);

  03334	0f 57 c0	 xorps	 xmm0, xmm0
  03337	f3 0f 11 85 04
	fd ff ff	 movss	 DWORD PTR $T8[ebp], xmm0
  0333f	8d 85 04 fd ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  03345	50		 push	 eax
  03346	8d 8d 40 fe ff
	ff		 lea	 ecx, DWORD PTR _altitude$33[ebp]
  0334c	51		 push	 ecx
  0334d	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  03352	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  03356	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1377 : 
; 1378 : 			left_g_e_force += ((0.05 - ((altitude * altitude) / (20.0 * current_flight_dynamics->main_rotor_diameter.value * current_flight_dynamics->main_rotor_diameter.value))) - left_g_e_force) * get_model_delta_time ();

  0335e	f3 0f 10 85 40
	fe ff ff	 movss	 xmm0, DWORD PTR _altitude$33[ebp]
  03366	f3 0f 59 85 40
	fe ff ff	 mulss	 xmm0, DWORD PTR _altitude$33[ebp]
  0336e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  03372	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03377	f3 0f 5a 88 9c
	1d 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7580]
  0337f	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4034000000000000
  03387	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0338d	f3 0f 5a 91 9c
	1d 00 00	 cvtss2sd xmm2, DWORD PTR [ecx+7580]
  03395	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  03399	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0339d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fa999999999999a
  033a5	f2 0f 5c c8	 subsd	 xmm1, xmm0
  033a9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?left_g_e_force@@3MA
  033b1	f2 0f 5c c8	 subsd	 xmm1, xmm0
  033b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  033bb	f3 0f 5a 82 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR [edx+144]
  033c3	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  033c7	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?left_g_e_force@@3MA
  033cf	f2 0f 58 c1	 addsd	 xmm0, xmm1
  033d3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  033d7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?left_g_e_force@@3MA, xmm0

; 1379 : 
; 1380 : 			left_g_e_force = bound (left_g_e_force, 0.0, 0.05);

  033df	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?left_g_e_force@@3MA
  033e7	0f 57 c9	 xorps	 xmm1, xmm1
  033ea	66 0f 2f c8	 comisd	 xmm1, xmm0
  033ee	76 0d		 jbe	 SHORT $LN130@update_com
  033f0	0f 57 c0	 xorps	 xmm0, xmm0
  033f3	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1663[ebp], xmm0
  033fb	eb 44		 jmp	 SHORT $LN131@update_com
$LN130@update_com:
  033fd	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?left_g_e_force@@3MA
  03405	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fa999999999999a
  0340d	76 12		 jbe	 SHORT $LN128@update_com
  0340f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa999999999999a
  03417	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1662[ebp], xmm0
  0341f	eb 10		 jmp	 SHORT $LN129@update_com
$LN128@update_com:
  03421	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?left_g_e_force@@3MA
  03429	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1662[ebp], xmm0
$LN129@update_com:
  03431	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1662[ebp]
  03439	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1663[ebp], xmm0
$LN131@update_com:
  03441	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1663[ebp]
  03449	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?left_g_e_force@@3MA, xmm0

; 1381 : 
; 1382 : 			if (left_g_e_force > 0.0)

  03451	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?left_g_e_force@@3MA
  03459	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  03461	0f 86 d5 00 00
	00		 jbe	 $LN56@update_com

; 1383 : 			{
; 1384 : 
; 1385 : 				left_g_e_force *= tuning_value * main_rotor_induced_air_value;

  03467	f3 0f 10 85 f8
	fd ff ff	 movss	 xmm0, DWORD PTR _tuning_value$27[ebp]
  0346f	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  03477	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?left_g_e_force@@3MA
  0347f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?left_g_e_force@@3MA, xmm0

; 1386 : 
; 1387 : 				if (current_flight_dynamics->velocity_z.max != 0.0)

  03487	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0348c	f3 0f 5a 80 a8
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8360]
  03494	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0349c	9f		 lahf
  0349d	f6 c4 44	 test	 ah, 68			; 00000044H
  034a0	7b 4c		 jnp	 SHORT $LN57@update_com

; 1388 : 				{
; 1389 : 
; 1390 : 					left_g_e_force *= (current_flight_dynamics->velocity_z.max - fabs (velocity_z_value)) / current_flight_dynamics->velocity_z.max;

  034a2	51		 push	 ecx
  034a3	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  034ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  034b0	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  034b5	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3395[ebp]
  034bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  034c0	f3 0f 10 80 a8
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8360]
  034c8	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3395[ebp]
  034d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  034d6	f3 0f 5e 81 a8
	20 00 00	 divss	 xmm0, DWORD PTR [ecx+8360]
  034de	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?left_g_e_force@@3MA
  034e6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?left_g_e_force@@3MA, xmm0
$LN57@update_com:

; 1391 : 				}
; 1392 : 
; 1393 : 				#if DEBUG_MODULE
; 1394 : 
; 1395 : 				debug_log ("DYNAMICS: IGE left force %f, alt %f, y %f, el %f, x %f, z %f",
; 1396 : 								left_g_e_force, altitude, current_flight_dynamics->position.y,
; 1397 : 								get_3d_terrain_point_data_elevation (&terrain_info), world_position.x, world_position.z);
; 1398 : 
; 1399 : 				create_vectored_debug_3d_object (&world_position, &direction, OBJECT_3D_ARROW_FORCES, 0, 20.0 * left_g_e_force);
; 1400 : 
; 1401 : 				#endif
; 1402 : 
; 1403 : 				left_g_e_force *= current_flight_dynamics->ground_effect.modifier;

  034ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  034f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?left_g_e_force@@3MA
  034fb	f3 0f 59 80 e0
	23 00 00	 mulss	 xmm0, DWORD PTR [eax+9184]
  03503	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?left_g_e_force@@3MA, xmm0

; 1404 : 
; 1405 : 				add_dynamic_force ("Left rotor Ground effect", left_g_e_force, 0.0, &position, &rotor_direction, FALSE);

  0350b	6a 00		 push	 0
  0350d	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  03513	50		 push	 eax
  03514	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  0351a	51		 push	 ecx
  0351b	51		 push	 ecx
  0351c	0f 57 c0	 xorps	 xmm0, xmm0
  0351f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03524	51		 push	 ecx
  03525	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?left_g_e_force@@3MA
  0352d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03532	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KEABEFD@Left?5rotor?5Ground?5effect@
  03537	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN56@update_com:

; 1406 : 			}
; 1407 : 		}
; 1408 : 		////////////////////////////////////////////
; 1409 : 		// In Ground Effect on right side of rotor disc
; 1410 : 		////////////////////////////////////////////
; 1411 : 		{
; 1412 : 
; 1413 : 			float
; 1414 : 				tuning_value = 0.1;

  0353c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  03544	f3 0f 11 85 f4
	fd ff ff	 movss	 DWORD PTR _tuning_value$26[ebp], xmm0

; 1415 : 
; 1416 : 			position.x = -rotor_radius;

  0354c	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _rotor_radius$[ebp]
  03551	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  03558	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1417 : 			position.y = 0.0;

  03560	0f 57 c0	 xorps	 xmm0, xmm0
  03563	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1418 : 			position.z = 0.0;

  0356b	0f 57 c0	 xorps	 xmm0, xmm0
  0356e	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1419 : 
; 1420 : 			multiply_matrix3x3_vec3d (&world_position, current_flight_dynamics->attitude, &position);

  03576	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR _position$[ebp]
  0357c	50		 push	 eax
  0357d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03583	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  03589	51		 push	 ecx
  0358a	8d 95 08 fe ff
	ff		 lea	 edx, DWORD PTR _world_position$31[ebp]
  03590	52		 push	 edx
  03591	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 1421 : 
; 1422 : 			world_position.x += current_flight_dynamics->position.x;

  03596	f3 0f 5a 85 08
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp]
  0359e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  035a3	f2 0f 58 80 ac
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+172]
  035ab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  035af	f3 0f 11 85 08
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp], xmm0

; 1423 : 			world_position.y += current_flight_dynamics->position.y;

  035b7	f3 0f 5a 85 0c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+4]
  035bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  035c4	f2 0f 58 80 b4
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+180]
  035cc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  035d0	f3 0f 11 85 0c
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+4], xmm0

; 1424 : 			world_position.z += current_flight_dynamics->position.z;

  035d8	f3 0f 5a 85 10
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _world_position$31[ebp+8]
  035e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  035e5	f2 0f 58 80 bc
	00 00 00	 addsd	 xmm0, QWORD PTR [eax+188]
  035ed	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  035f1	f3 0f 11 85 10
	fe ff ff	 movss	 DWORD PTR _world_position$31[ebp+8], xmm0

; 1425 : 
; 1426 : 			bound_position_to_adjusted_map_volume (&world_position);

  035f9	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _world_position$31[ebp]
  035ff	50		 push	 eax
  03600	e8 00 00 00 00	 call	 ?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_volume

; 1427 : 
; 1428 : 			get_3d_terrain_point_data (world_position.x, world_position.z, &terrain_info);

  03605	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  0360b	50		 push	 eax
  0360c	51		 push	 ecx
  0360d	f3 0f 10 85 10
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+8]
  03615	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0361a	51		 push	 ecx
  0361b	f3 0f 10 85 08
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp]
  03623	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03628	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0362d	dd d8		 fstp	 ST(0)

; 1429 : 
; 1430 : 			altitude = world_position.y - get_3d_terrain_point_data_elevation (&terrain_info);

  0362f	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _terrain_info$32[ebp]
  03635	50		 push	 eax
  03636	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_elevation@@YGMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_elevation
  0363b	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3428[ebp]
  03641	f3 0f 10 85 0c
	fe ff ff	 movss	 xmm0, DWORD PTR _world_position$31[ebp+4]
  03649	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3428[ebp]
  03651	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1431 : 
; 1432 : 			altitude = max (altitude, 0.0f);

  03659	0f 57 c0	 xorps	 xmm0, xmm0
  0365c	f3 0f 11 85 00
	fd ff ff	 movss	 DWORD PTR $T7[ebp], xmm0
  03664	8d 85 00 fd ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  0366a	50		 push	 eax
  0366b	8d 8d 40 fe ff
	ff		 lea	 ecx, DWORD PTR _altitude$33[ebp]
  03671	51		 push	 ecx
  03672	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  03677	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0367b	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _altitude$33[ebp], xmm0

; 1433 : 
; 1434 : 			right_g_e_force += ((0.05 - ((altitude * altitude) / (20.0 * current_flight_dynamics->main_rotor_diameter.value * current_flight_dynamics->main_rotor_diameter.value))) - right_g_e_force) * get_model_delta_time ();

  03683	f3 0f 10 85 40
	fe ff ff	 movss	 xmm0, DWORD PTR _altitude$33[ebp]
  0368b	f3 0f 59 85 40
	fe ff ff	 mulss	 xmm0, DWORD PTR _altitude$33[ebp]
  03693	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  03697	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0369c	f3 0f 5a 88 9c
	1d 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7580]
  036a4	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4034000000000000
  036ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  036b2	f3 0f 5a 91 9c
	1d 00 00	 cvtss2sd xmm2, DWORD PTR [ecx+7580]
  036ba	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  036be	f2 0f 5e c1	 divsd	 xmm0, xmm1
  036c2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fa999999999999a
  036ca	f2 0f 5c c8	 subsd	 xmm1, xmm0
  036ce	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?right_g_e_force@@3MA
  036d6	f2 0f 5c c8	 subsd	 xmm1, xmm0
  036da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  036e0	f3 0f 5a 82 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR [edx+144]
  036e8	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  036ec	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?right_g_e_force@@3MA
  036f4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  036f8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  036fc	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?right_g_e_force@@3MA, xmm0

; 1435 : 
; 1436 : 			right_g_e_force = bound (right_g_e_force, 0.0, 0.05);

  03704	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?right_g_e_force@@3MA
  0370c	0f 57 c9	 xorps	 xmm1, xmm1
  0370f	66 0f 2f c8	 comisd	 xmm1, xmm0
  03713	76 0d		 jbe	 SHORT $LN134@update_com
  03715	0f 57 c0	 xorps	 xmm0, xmm0
  03718	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1747[ebp], xmm0
  03720	eb 44		 jmp	 SHORT $LN135@update_com
$LN134@update_com:
  03722	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?right_g_e_force@@3MA
  0372a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fa999999999999a
  03732	76 12		 jbe	 SHORT $LN132@update_com
  03734	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0373c	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1746[ebp], xmm0
  03744	eb 10		 jmp	 SHORT $LN133@update_com
$LN132@update_com:
  03746	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?right_g_e_force@@3MA
  0374e	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1746[ebp], xmm0
$LN133@update_com:
  03756	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1746[ebp]
  0375e	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1747[ebp], xmm0
$LN135@update_com:
  03766	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1747[ebp]
  0376e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?right_g_e_force@@3MA, xmm0

; 1437 : 
; 1438 : 			if (right_g_e_force > 0.0)

  03776	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?right_g_e_force@@3MA
  0377e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  03786	0f 86 d5 00 00
	00		 jbe	 $LN58@update_com

; 1439 : 			{
; 1440 : 
; 1441 : 				right_g_e_force *= tuning_value * main_rotor_induced_air_value;

  0378c	f3 0f 10 85 f4
	fd ff ff	 movss	 xmm0, DWORD PTR _tuning_value$26[ebp]
  03794	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  0379c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?right_g_e_force@@3MA
  037a4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?right_g_e_force@@3MA, xmm0

; 1442 : 
; 1443 : 				if (current_flight_dynamics->velocity_z.max != 0.0)

  037ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  037b1	f3 0f 5a 80 a8
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8360]
  037b9	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  037c1	9f		 lahf
  037c2	f6 c4 44	 test	 ah, 68			; 00000044H
  037c5	7b 4c		 jnp	 SHORT $LN59@update_com

; 1444 : 				{
; 1445 : 
; 1446 : 					right_g_e_force *= (current_flight_dynamics->velocity_z.max - fabs (velocity_z_value)) / current_flight_dynamics->velocity_z.max;

  037c7	51		 push	 ecx
  037c8	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _velocity_z_value$[ebp]
  037d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  037d5	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  037da	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3455[ebp]
  037e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  037e5	f3 0f 10 80 a8
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8360]
  037ed	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3455[ebp]
  037f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  037fb	f3 0f 5e 81 a8
	20 00 00	 divss	 xmm0, DWORD PTR [ecx+8360]
  03803	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?right_g_e_force@@3MA
  0380b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?right_g_e_force@@3MA, xmm0
$LN59@update_com:

; 1447 : 				}
; 1448 : 
; 1449 : 				#if DEBUG_MODULE
; 1450 : 
; 1451 : 				debug_log ("DYNAMICS: IGE right force %f, alt %f, y %f, el %f, x %f, z %f",
; 1452 : 								right_g_e_force, altitude, current_flight_dynamics->position.y,
; 1453 : 								get_3d_terrain_point_data_elevation (&terrain_info), world_position.x, world_position.z);
; 1454 : 
; 1455 : 				create_vectored_debug_3d_object (&world_position, &direction, OBJECT_3D_ARROW_FORCES, 0, 20.0 * right_g_e_force);
; 1456 : 
; 1457 : 				#endif
; 1458 : 
; 1459 : 				right_g_e_force *= current_flight_dynamics->ground_effect.modifier;

  03813	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03818	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?right_g_e_force@@3MA
  03820	f3 0f 59 80 e0
	23 00 00	 mulss	 xmm0, DWORD PTR [eax+9184]
  03828	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?right_g_e_force@@3MA, xmm0

; 1460 : 
; 1461 : 				add_dynamic_force ("Right rotor Ground effect", right_g_e_force, 0.0, &position, &rotor_direction, FALSE);

  03830	6a 00		 push	 0
  03832	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _rotor_direction$[ebp]
  03838	50		 push	 eax
  03839	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  0383f	51		 push	 ecx
  03840	51		 push	 ecx
  03841	0f 57 c0	 xorps	 xmm0, xmm0
  03844	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03849	51		 push	 ecx
  0384a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?right_g_e_force@@3MA
  03852	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03857	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@ONPBLKKA@Right?5rotor?5Ground?5effect@
  0385c	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN58@update_com:

; 1462 : 			}
; 1463 : 		}
; 1464 : 	}
; 1465 : 	////////////////////////////////////////////
; 1466 : 	// Vortex ring
; 1467 : 	////////////////////////////////////////////
; 1468 : 	if ((!model_landed) &&
; 1469 : 		(get_current_dynamics_options (DYNAMICS_OPTIONS_VORTEX_RING)) &&

  03861	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  03865	0f 85 ee 02 00
	00		 jne	 $LN62@update_com
  0386b	6a 0b		 push	 11			; 0000000bH
  0386d	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  03872	85 c0		 test	 eax, eax
  03874	0f 84 df 02 00
	00		 je	 $LN62@update_com
  0387a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0387f	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  03885	83 e1 02	 and	 ecx, 2
  03888	0f 85 cb 02 00
	00		 jne	 $LN62@update_com

; 1470 : 		(!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR)))
; 1471 : 	{
; 1472 : 		float air_over_rotor = -fabs(main_rotor_induced_air_value) - model_motion_vector.y;

  0388e	51		 push	 ecx
  0388f	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  03897	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0389c	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  038a1	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3476[ebp]
  038a7	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv3476[ebp]
  038af	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  038b6	f3 0f 5c 85 f0
	fe ff ff	 subss	 xmm0, DWORD PTR _model_motion_vector$[ebp+4]
  038be	f3 0f 11 85 f0
	fd ff ff	 movss	 DWORD PTR _air_over_rotor$25[ebp], xmm0

; 1473 : 		float vibration_limit = -fabs(main_rotor_induced_air_value) - model_motion_vector.y * 0.6;

  038c6	51		 push	 ecx
  038c7	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  038cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  038d4	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  038d9	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3482[ebp]
  038df	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv3482[ebp]
  038e7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  038ee	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  038f2	f3 0f 5a 8d f0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _model_motion_vector$[ebp+4]
  038fa	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe3333333333333
  03902	f2 0f 5c c1	 subsd	 xmm0, xmm1
  03906	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0390a	f3 0f 11 85 ec
	fd ff ff	 movss	 DWORD PTR _vibration_limit$24[ebp], xmm0

; 1474 : 		float velocity_factor = max (((current_flight_dynamics->main_rotor_induced_vortex_air_flow.min -

  03912	0f 57 c0	 xorps	 xmm0, xmm0
  03915	f3 0f 11 85 fc
	fc ff ff	 movss	 DWORD PTR $T6[ebp], xmm0
  0391d	51		 push	 ecx
  0391e	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _model_motion_vector$[ebp+8]
  03926	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0392b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  03930	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3489[ebp]
  03936	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0393b	f3 0f 10 80 8c
	1d 00 00	 movss	 xmm0, DWORD PTR [eax+7564]
  03943	f3 0f 5c 85 e4
	fc ff ff	 subss	 xmm0, DWORD PTR tv3489[ebp]
  0394b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03951	f3 0f 5e 81 8c
	1d 00 00	 divss	 xmm0, DWORD PTR [ecx+7564]
  03959	f3 0f 11 85 f8
	fc ff ff	 movss	 DWORD PTR $T5[ebp], xmm0
  03961	8d 95 fc fc ff
	ff		 lea	 edx, DWORD PTR $T6[ebp]
  03967	52		 push	 edx
  03968	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  0396e	50		 push	 eax
  0396f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  03974	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  03978	f3 0f 11 85 e8
	fd ff ff	 movss	 DWORD PTR _velocity_factor$23[ebp], xmm0

; 1475 : 					   fabs (model_motion_vector.z)) / current_flight_dynamics->main_rotor_induced_vortex_air_flow.min), 0.0f);
; 1476 : 
; 1477 : 		// arneh - create vibration when close to vortex ring state
; 1478 : 		if (vibration_limit > 0.0 && !(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE) && velocity_factor > 0.0)

  03980	f3 0f 5a 85 ec
	fd ff ff	 cvtss2sd xmm0, DWORD PTR _vibration_limit$24[ebp]
  03988	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  03990	0f 86 de 00 00
	00		 jbe	 $LN61@update_com
  03996	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0399b	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  039a1	81 e1 00 00 01
	00		 and	 ecx, 65536		; 00010000H
  039a7	0f 85 c7 00 00
	00		 jne	 $LN61@update_com
  039ad	f3 0f 5a 85 e8
	fd ff ff	 cvtss2sd xmm0, DWORD PTR _velocity_factor$23[ebp]
  039b5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  039bd	0f 86 b1 00 00
	00		 jbe	 $LN61@update_com

; 1479 : 			create_rotor_vibration(bound(vibration_limit * 0.3 * velocity_factor, 0.0, 1.0));

  039c3	f3 0f 5a 85 ec
	fd ff ff	 cvtss2sd xmm0, DWORD PTR _vibration_limit$24[ebp]
  039cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  039d3	f3 0f 5a 8d e8
	fd ff ff	 cvtss2sd xmm1, DWORD PTR _velocity_factor$23[ebp]
  039db	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  039df	0f 57 c9	 xorps	 xmm1, xmm1
  039e2	66 0f 2f c8	 comisd	 xmm1, xmm0
  039e6	76 0d		 jbe	 SHORT $LN138@update_com
  039e8	0f 57 c0	 xorps	 xmm0, xmm0
  039eb	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1828[ebp], xmm0
  039f3	eb 6c		 jmp	 SHORT $LN139@update_com
$LN138@update_com:
  039f5	f3 0f 5a 85 ec
	fd ff ff	 cvtss2sd xmm0, DWORD PTR _vibration_limit$24[ebp]
  039fd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  03a05	f3 0f 5a 8d e8
	fd ff ff	 cvtss2sd xmm1, DWORD PTR _velocity_factor$23[ebp]
  03a0d	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  03a11	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  03a19	76 12		 jbe	 SHORT $LN136@update_com
  03a1b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  03a23	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1827[ebp], xmm0
  03a2b	eb 24		 jmp	 SHORT $LN137@update_com
$LN136@update_com:
  03a2d	f3 0f 5a 85 ec
	fd ff ff	 cvtss2sd xmm0, DWORD PTR _vibration_limit$24[ebp]
  03a35	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  03a3d	f3 0f 5a 8d e8
	fd ff ff	 cvtss2sd xmm1, DWORD PTR _velocity_factor$23[ebp]
  03a45	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  03a49	f2 0f 11 85 d8
	fc ff ff	 movsd	 QWORD PTR tv1827[ebp], xmm0
$LN137@update_com:
  03a51	f2 0f 10 85 d8
	fc ff ff	 movsd	 xmm0, QWORD PTR tv1827[ebp]
  03a59	f2 0f 11 85 e0
	fc ff ff	 movsd	 QWORD PTR tv1828[ebp], xmm0
$LN139@update_com:
  03a61	f2 0f 5a 85 e0
	fc ff ff	 cvtsd2ss xmm0, QWORD PTR tv1828[ebp]
  03a69	51		 push	 ecx
  03a6a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03a6f	e8 00 00 00 00	 call	 ?create_rotor_vibration@@YGXM@Z ; create_rotor_vibration
$LN61@update_com:

; 1480 : 
; 1481 : 		if (air_over_rotor > 0.0)     //model_motion_vector.y < -fabs (main_rotor_induced_air_value))

  03a74	f3 0f 5a 85 f0
	fd ff ff	 cvtss2sd xmm0, DWORD PTR _air_over_rotor$25[ebp]
  03a7c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  03a84	0f 86 cf 00 00
	00		 jbe	 $LN62@update_com

; 1482 : 		{
; 1483 : 
; 1484 : 			force = current_flight_dynamics->main_rotor_induced_vortex_air_flow.modifier * fabs (main_rotor_induced_air_value) * velocity_factor;

  03a8a	51		 push	 ecx
  03a8b	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_induced_air_value$[ebp]
  03a93	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03a98	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  03a9d	d9 9d e4 fc ff
	ff		 fstp	 DWORD PTR tv3509[ebp]
  03aa3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03aa8	f3 0f 10 85 e4
	fc ff ff	 movss	 xmm0, DWORD PTR tv3509[ebp]
  03ab0	f3 0f 59 80 80
	1d 00 00	 mulss	 xmm0, DWORD PTR [eax+7552]
  03ab8	f3 0f 59 85 e8
	fd ff ff	 mulss	 xmm0, DWORD PTR _velocity_factor$23[ebp]
  03ac0	f3 0f 11 45 98	 movss	 DWORD PTR _force$[ebp], xmm0

; 1485 : 
; 1486 : 			force *= deg (current_flight_dynamics->main_blade_pitch.value);

  03ac5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03aca	f3 0f 10 80 8c
	1e 00 00	 movss	 xmm0, DWORD PTR [eax+7820]
  03ad2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  03ada	f3 0f 59 45 98	 mulss	 xmm0, DWORD PTR _force$[ebp]
  03adf	f3 0f 11 45 98	 movss	 DWORD PTR _force$[ebp], xmm0

; 1487 : 
; 1488 : 			position.x = 0.0;

  03ae4	0f 57 c0	 xorps	 xmm0, xmm0
  03ae7	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1489 : 			position.y = 0.0;

  03aef	0f 57 c0	 xorps	 xmm0, xmm0
  03af2	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1490 : 			position.z = 0.0;

  03afa	0f 57 c0	 xorps	 xmm0, xmm0
  03afd	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1491 : 
; 1492 : 			direction.x = 0.0;

  03b05	0f 57 c0	 xorps	 xmm0, xmm0
  03b08	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _direction$[ebp], xmm0

; 1493 : 			direction.y = -1.0;

  03b10	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  03b18	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+4], xmm0

; 1494 : 			direction.z = 0.0;

  03b20	0f 57 c0	 xorps	 xmm0, xmm0
  03b23	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _direction$[ebp+8], xmm0

; 1495 : 
; 1496 : 			add_dynamic_force ("Vortex ring force", force, 0.0, &position, &direction, FALSE);

  03b2b	6a 00		 push	 0
  03b2d	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  03b33	50		 push	 eax
  03b34	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  03b3a	51		 push	 ecx
  03b3b	51		 push	 ecx
  03b3c	0f 57 c0	 xorps	 xmm0, xmm0
  03b3f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03b44	51		 push	 ecx
  03b45	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _force$[ebp]
  03b4a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03b4f	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MPODPIKD@Vortex?5ring?5force@
  03b54	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN62@update_com:

; 1497 : 		}
; 1498 : 	}
; 1499 : 
; 1500 : 	////////////////////////////////////////////
; 1501 : 	// Wind
; 1502 : 	////////////////////////////////////////////
; 1503 : 	if ((!model_landed) &&
; 1504 : 		(get_current_dynamics_options (DYNAMICS_OPTIONS_WIND)) &&

  03b59	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  03b5d	0f 85 ab 01 00
	00		 jne	 $LN63@update_com
  03b63	6a 0c		 push	 12			; 0000000cH
  03b65	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  03b6a	85 c0		 test	 eax, eax
  03b6c	0f 84 9c 01 00
	00		 je	 $LN63@update_com
  03b72	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03b77	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  03b7d	83 e1 02	 and	 ecx, 2
  03b80	0f 85 88 01 00
	00		 jne	 $LN63@update_com

; 1505 : 		(!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR)))
; 1506 : 	{
; 1507 : 
; 1508 : 		static float
; 1509 : 			force = 0.0,
; 1510 : 			desired_force = 0.0;
; 1511 : 
; 1512 : 		position.x = current_flight_dynamics->position.x;

  03b86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03b8b	f2 0f 5a 80 ac
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+172]
  03b93	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1513 : 		position.y = current_flight_dynamics->position.y;

  03b9b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03ba0	f2 0f 5a 80 b4
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+180]
  03ba8	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1514 : 		position.z = current_flight_dynamics->position.z;

  03bb0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03bb5	f2 0f 5a 80 bc
	00 00 00	 cvtsd2ss xmm0, QWORD PTR [eax+188]
  03bbd	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1515 : 
; 1516 : 		get_session_wind_velocity_at_point (&position, &direction);

  03bc5	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  03bcb	50		 push	 eax
  03bcc	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  03bd2	51		 push	 ecx
  03bd3	e8 00 00 00 00	 call	 ?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z ; get_session_wind_velocity_at_point
  03bd8	dd d8		 fstp	 ST(0)

; 1517 : 
; 1518 : 		position.x = current_flight_dynamics->rotation_origin.x;

  03bda	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03bdf	f3 0f 10 80 c4
	00 00 00	 movss	 xmm0, DWORD PTR [eax+196]
  03be7	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _position$[ebp], xmm0

; 1519 : 		position.y = current_flight_dynamics->rotation_origin.y;

  03bef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03bf4	f3 0f 10 80 c8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+200]
  03bfc	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 1520 : 		position.z = current_flight_dynamics->rotation_origin.z;

  03c04	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03c09	f3 0f 10 80 cc
	00 00 00	 movss	 xmm0, DWORD PTR [eax+204]
  03c11	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 1521 : 
; 1522 : 		multiply_transpose_matrix3x3_vec3d (&direction, attitude, &direction);

  03c19	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  03c1f	50		 push	 eax
  03c20	8d 4d b4	 lea	 ecx, DWORD PTR _attitude$[ebp]
  03c23	51		 push	 ecx
  03c24	8d 95 04 ff ff
	ff		 lea	 edx, DWORD PTR _direction$[ebp]
  03c2a	52		 push	 edx
  03c2b	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 1523 : 
; 1524 : 		force += (desired_force - force) * get_model_delta_time ();

  03c30	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?desired_force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA
  03c38	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA
  03c40	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03c45	f3 0f 59 80 90
	00 00 00	 mulss	 xmm0, DWORD PTR [eax+144]
  03c4d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA
  03c55	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0

; 1525 : 
; 1526 : 		if ((fabs (force - desired_force) < 0.001))

  03c5d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA
  03c65	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?desired_force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA
  03c6d	51		 push	 ecx
  03c6e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03c73	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  03c78	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv3553[ebp]
  03c7e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  03c86	66 0f 2f 85 e0
	fc ff ff	 comisd	 xmm0, QWORD PTR tv3553[ebp]
  03c8e	76 4d		 jbe	 SHORT $LN64@update_com

; 1527 : 		{
; 1528 : 
; 1529 : 			desired_force = frand1 () * get_model_delta_time ();

  03c90	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  03c9a	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  03c9f	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  03ca4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  03caa	c1 f9 10	 sar	 ecx, 16			; 00000010H
  03cad	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  03cb3	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  03cb7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  03cbf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03cc5	f3 0f 5a 8a 90
	00 00 00	 cvtss2sd xmm1, DWORD PTR [edx+144]
  03ccd	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  03cd1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  03cd5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?desired_force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA, xmm0
$LN64@update_com:

; 1530 : 		}
; 1531 : 
; 1532 : 		add_dynamic_force ("Wind", force, 0.0, &position, &direction, FALSE);

  03cdd	6a 00		 push	 0
  03cdf	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _direction$[ebp]
  03ce5	50		 push	 eax
  03ce6	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _position$[ebp]
  03cec	51		 push	 ecx
  03ced	51		 push	 ecx
  03cee	0f 57 c0	 xorps	 xmm0, xmm0
  03cf1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03cf6	51		 push	 ecx
  03cf7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?force@?LM@??update_common_attitude_dynamics@@YGXXZ@4MA
  03cff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03d04	68 00 00 00 00	 push	 OFFSET ??_C@_04LGBIOLDJ@Wind@
  03d09	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN63@update_com:

; 1533 : 	}
; 1534 : 	////////////////////////////////////////////
; 1535 : 
; 1536 : 	// If colliding with something, then the collision will move the helicopter. Combined with gravity
; 1537 : 	// and no drag this can make the helicopter fall down hillsides very rapidly.  So add some "friction"
; 1538 : 	// so it won't move as fast.
; 1539 : 	if (fixed_collision_count || moving_collision_count)

  03d0e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?fixed_collision_count@@3HA, 0 ; fixed_collision_count
  03d15	75 0d		 jne	 SHORT $LN66@update_com
  03d17	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?moving_collision_count@@3HA, 0 ; moving_collision_count
  03d1e	0f 84 3f 01 00
	00		 je	 $LN65@update_com
$LN66@update_com:

; 1540 : 	{
; 1541 : 
; 1542 : 		float
; 1543 : 			force;
; 1544 : 
; 1545 : 		vec3d
; 1546 : 			direction,
; 1547 : 			position;
; 1548 : 
; 1549 : 		direction = current_flight_dynamics->model_motion_vector;

  03d24	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03d29	05 30 1c 00 00	 add	 eax, 7216		; 00001c30H
  03d2e	8b 08		 mov	 ecx, DWORD PTR [eax]
  03d30	89 8d d8 fd ff
	ff		 mov	 DWORD PTR _direction$21[ebp], ecx
  03d36	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  03d39	89 95 dc fd ff
	ff		 mov	 DWORD PTR _direction$21[ebp+4], edx
  03d3f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  03d42	89 85 e0 fd ff
	ff		 mov	 DWORD PTR _direction$21[ebp+8], eax

; 1550 : 
; 1551 : 		direction.x += current_flight_dynamics->model_acceleration_vector.x * get_model_delta_time ();

  03d48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03d4d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03d53	f3 0f 10 80 48
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7240]
  03d5b	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  03d63	f3 0f 58 85 d8
	fd ff ff	 addss	 xmm0, DWORD PTR _direction$21[ebp]
  03d6b	f3 0f 11 85 d8
	fd ff ff	 movss	 DWORD PTR _direction$21[ebp], xmm0

; 1552 : 		direction.y += current_flight_dynamics->model_acceleration_vector.y * get_model_delta_time ();

  03d73	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03d78	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03d7e	f3 0f 10 80 4c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7244]
  03d86	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  03d8e	f3 0f 58 85 dc
	fd ff ff	 addss	 xmm0, DWORD PTR _direction$21[ebp+4]
  03d96	f3 0f 11 85 dc
	fd ff ff	 movss	 DWORD PTR _direction$21[ebp+4], xmm0

; 1553 : 		direction.z += current_flight_dynamics->model_acceleration_vector.z * get_model_delta_time ();

  03d9e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03da3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03da9	f3 0f 10 80 50
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7248]
  03db1	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  03db9	f3 0f 58 85 e0
	fd ff ff	 addss	 xmm0, DWORD PTR _direction$21[ebp+8]
  03dc1	f3 0f 11 85 e0
	fd ff ff	 movss	 DWORD PTR _direction$21[ebp+8], xmm0

; 1554 : 
; 1555 : 		force = 3.0 * get_3d_vector_magnitude(&direction);// / get_model_delta_time ();

  03dc9	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _direction$21[ebp]
  03dcf	50		 push	 eax
  03dd0	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  03dd5	dd 9d e0 fc ff
	ff		 fstp	 QWORD PTR tv3589[ebp]
  03ddb	f2 0f 10 85 e0
	fc ff ff	 movsd	 xmm0, QWORD PTR tv3589[ebp]
  03de3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4008000000000000
  03deb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  03def	f3 0f 11 85 e4
	fd ff ff	 movss	 DWORD PTR _force$22[ebp], xmm0

; 1556 : 
; 1557 : 		invert_3d_vector (&direction);

  03df7	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _direction$21[ebp]
  03dfd	50		 push	 eax
  03dfe	e8 00 00 00 00	 call	 ?invert_3d_vector@@YGXPAUVEC3D@@@Z ; invert_3d_vector

; 1558 : 
; 1559 : 		normalise_any_3d_vector (&direction);

  03e03	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _direction$21[ebp]
  03e09	50		 push	 eax
  03e0a	e8 00 00 00 00	 call	 ?normalise_any_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_any_3d_vector
  03e0f	dd d8		 fstp	 ST(0)

; 1560 : 
; 1561 : 		position.x = 0.0;

  03e11	0f 57 c0	 xorps	 xmm0, xmm0
  03e14	f3 0f 11 85 cc
	fd ff ff	 movss	 DWORD PTR _position$20[ebp], xmm0

; 1562 : 		position.y = 0.0;

  03e1c	0f 57 c0	 xorps	 xmm0, xmm0
  03e1f	f3 0f 11 85 d0
	fd ff ff	 movss	 DWORD PTR _position$20[ebp+4], xmm0

; 1563 : 		position.z = 0.0;

  03e27	0f 57 c0	 xorps	 xmm0, xmm0
  03e2a	f3 0f 11 85 d4
	fd ff ff	 movss	 DWORD PTR _position$20[ebp+8], xmm0

; 1564 : 
; 1565 : 		add_dynamic_force ("Ground Friction force", force, 0.0, &position, &direction, TRUE);

  03e32	6a 01		 push	 1
  03e34	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _direction$21[ebp]
  03e3a	50		 push	 eax
  03e3b	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _position$20[ebp]
  03e41	51		 push	 ecx
  03e42	51		 push	 ecx
  03e43	0f 57 c0	 xorps	 xmm0, xmm0
  03e46	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03e4b	51		 push	 ecx
  03e4c	f3 0f 10 85 e4
	fd ff ff	 movss	 xmm0, DWORD PTR _force$22[ebp]
  03e54	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03e59	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EBOEKGCA@Ground?5Friction?5force@
  03e5e	e8 00 00 00 00	 call	 ?add_dynamic_force@@YGXPBDMMPAUVEC3D@@1H@Z ; add_dynamic_force
$LN65@update_com:

; 1566 : 
; 1567 : 		#if DEBUG_MODULE
; 1568 : 
; 1569 : 		multiply_matrix3x3_vec3d (&direction, raw->ac.mob.attitude, &direction);
; 1570 : 
; 1571 : 		position.x += current_flight_dynamics->position.x;
; 1572 : 		position.y += current_flight_dynamics->position.y;
; 1573 : 		position.z += current_flight_dynamics->position.z;
; 1574 : 
; 1575 : 		create_vectored_debug_3d_object (&position, &direction, OBJECT_3D_ARROW_FORCES, 0, 5 * force);
; 1576 : 
; 1577 : 		#endif
; 1578 : 	}
; 1579 : 
; 1580 : 	if (current_flight_dynamics_landed_at_keysite
; 1581 : 		&& get_local_entity_int_value(current_flight_dynamics_landed_at_keysite, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE)

  03e63	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics_landed_at_keysite@@3PAUENTITY@@A, 0 ; current_flight_dynamics_landed_at_keysite
  03e6a	0f 84 5d 02 00
	00		 je	 $LN73@update_com
  03e70	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics_landed_at_keysite@@3PAUENTITY@@A, 0 ; current_flight_dynamics_landed_at_keysite
  03e77	74 0f		 je	 SHORT $LN140@update_com
  03e79	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics_landed_at_keysite@@3PAUENTITY@@A ; current_flight_dynamics_landed_at_keysite
  03e7e	8b 08		 mov	 ecx, DWORD PTR [eax]
  03e80	89 8d e4 fc ff
	ff		 mov	 DWORD PTR tv2003[ebp], ecx
  03e86	eb 20		 jmp	 SHORT $LN141@update_com
$LN140@update_com:
  03e88	68 2d 06 00 00	 push	 1581			; 0000062dH
  03e8d	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  03e92	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03e98	52		 push	 edx
  03e99	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03e9e	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2003[ebp], 0
$LN141@update_com:
  03ea8	b8 01 00 00 00	 mov	 eax, 1
  03ead	85 c0		 test	 eax, eax
  03eaf	74 0c		 je	 SHORT $LN142@update_com
  03eb1	c7 85 e0 fc ff
	ff 34 00 00 00	 mov	 DWORD PTR tv2010[ebp], 52 ; 00000034H
  03ebb	eb 20		 jmp	 SHORT $LN143@update_com
$LN142@update_com:
  03ebd	68 2d 06 00 00	 push	 1581			; 0000062dH
  03ec2	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  03ec7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  03ecd	51		 push	 ecx
  03ece	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03ed3	c7 85 e0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2010[ebp], 0
$LN143@update_com:
  03edd	6a 34		 push	 52			; 00000034H
  03edf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics_landed_at_keysite@@3PAUENTITY@@A ; current_flight_dynamics_landed_at_keysite
  03ee5	52		 push	 edx
  03ee6	69 85 e4 fc ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv2003[ebp], 1116
  03ef0	8b 8d e0 fc ff
	ff		 mov	 ecx, DWORD PTR tv2010[ebp]
  03ef6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  03efd	ff d2		 call	 edx
  03eff	83 f8 01	 cmp	 eax, 1
  03f02	0f 85 c5 01 00
	00		 jne	 $LN73@update_com

; 1582 : 	{
; 1583 : 		// cludge to make carrier landings possible.  New suspension doesn't work there,
; 1584 : 		// but at least don't let the helicopter roll off the deck
; 1585 : 		if (current_flight_dynamics->wheel_brake)

  03f08	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03f0d	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  03f13	c1 e9 06	 shr	 ecx, 6
  03f16	83 e1 01	 and	 ecx, 1
  03f19	0f 84 ae 01 00
	00		 je	 $LN73@update_com

; 1586 : 		{
; 1587 : 			if (current_flight_dynamics->world_motion_vector.x > 0)

  03f1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03f24	f3 0f 10 80 3c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7228]
  03f2c	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  03f33	76 58		 jbe	 SHORT $LN69@update_com

; 1588 : 				current_flight_dynamics->world_motion_vector.x -= min(20.0f * get_model_delta_time (), current_flight_dynamics->world_motion_vector.x );

  03f35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03f3a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  03f42	f3 0f 59 80 90
	00 00 00	 mulss	 xmm0, DWORD PTR [eax+144]
  03f4a	f3 0f 11 85 f4
	fc ff ff	 movss	 DWORD PTR $T4[ebp], xmm0
  03f52	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03f58	81 c1 3c 1c 00
	00		 add	 ecx, 7228		; 00001c3cH
  03f5e	51		 push	 ecx
  03f5f	8d 95 f4 fc ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  03f65	52		 push	 edx
  03f66	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  03f6b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03f71	f3 0f 10 81 3c
	1c 00 00	 movss	 xmm0, DWORD PTR [ecx+7228]
  03f79	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  03f7d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03f83	f3 0f 11 82 3c
	1c 00 00	 movss	 DWORD PTR [edx+7228], xmm0

; 1589 : 			else

  03f8b	eb 56		 jmp	 SHORT $LN70@update_com
$LN69@update_com:

; 1590 : 				current_flight_dynamics->world_motion_vector.x -= max(-20.0f * get_model_delta_time (), current_flight_dynamics->world_motion_vector.x );

  03f8d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03f92	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1a00000
  03f9a	f3 0f 59 80 90
	00 00 00	 mulss	 xmm0, DWORD PTR [eax+144]
  03fa2	f3 0f 11 85 f0
	fc ff ff	 movss	 DWORD PTR $T3[ebp], xmm0
  03faa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03fb0	81 c1 3c 1c 00
	00		 add	 ecx, 7228		; 00001c3cH
  03fb6	51		 push	 ecx
  03fb7	8d 95 f0 fc ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  03fbd	52		 push	 edx
  03fbe	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  03fc3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03fc9	f3 0f 10 81 3c
	1c 00 00	 movss	 xmm0, DWORD PTR [ecx+7228]
  03fd1	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  03fd5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03fdb	f3 0f 11 82 3c
	1c 00 00	 movss	 DWORD PTR [edx+7228], xmm0
$LN70@update_com:

; 1591 : 
; 1592 : 			if (current_flight_dynamics->world_motion_vector.z > 0)

  03fe3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03fe8	f3 0f 10 80 44
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7236]
  03ff0	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  03ff7	76 58		 jbe	 SHORT $LN71@update_com

; 1593 : 				current_flight_dynamics->world_motion_vector.z -= min(5.0f * get_model_delta_time (), current_flight_dynamics->world_motion_vector.z);

  03ff9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  03ffe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  04006	f3 0f 59 80 90
	00 00 00	 mulss	 xmm0, DWORD PTR [eax+144]
  0400e	f3 0f 11 85 ec
	fc ff ff	 movss	 DWORD PTR $T2[ebp], xmm0
  04016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0401c	81 c1 44 1c 00
	00		 add	 ecx, 7236		; 00001c44H
  04022	51		 push	 ecx
  04023	8d 95 ec fc ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  04029	52		 push	 edx
  0402a	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0402f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  04035	f3 0f 10 81 44
	1c 00 00	 movss	 xmm0, DWORD PTR [ecx+7236]
  0403d	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  04041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  04047	f3 0f 11 82 44
	1c 00 00	 movss	 DWORD PTR [edx+7236], xmm0

; 1594 : 			else

  0404f	eb 56		 jmp	 SHORT $LN72@update_com
$LN71@update_com:

; 1595 : 				current_flight_dynamics->world_motion_vector.z -= max(-5.0f * get_model_delta_time (), current_flight_dynamics->world_motion_vector.z);

  04051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  04056	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0a00000
  0405e	f3 0f 59 80 90
	00 00 00	 mulss	 xmm0, DWORD PTR [eax+144]
  04066	f3 0f 11 85 e8
	fc ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  0406e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  04074	81 c1 44 1c 00
	00		 add	 ecx, 7236		; 00001c44H
  0407a	51		 push	 ecx
  0407b	8d 95 e8 fc ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  04081	52		 push	 edx
  04082	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  04087	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0408d	f3 0f 10 81 44
	1c 00 00	 movss	 xmm0, DWORD PTR [ecx+7236]
  04095	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  04099	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0409f	f3 0f 11 82 44
	1c 00 00	 movss	 DWORD PTR [edx+7236], xmm0
$LN72@update_com:

; 1596 : 
; 1597 : 			if (current_flight_dynamics->world_motion_vector.y < 0.0)

  040a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  040ac	f3 0f 5a 80 40
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7232]
  040b4	0f 57 c9	 xorps	 xmm1, xmm1
  040b7	66 0f 2f c8	 comisd	 xmm1, xmm0
  040bb	76 10		 jbe	 SHORT $LN73@update_com

; 1598 : 				current_flight_dynamics->world_motion_vector.y = 0.0;

  040bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  040c2	0f 57 c0	 xorps	 xmm0, xmm0
  040c5	f3 0f 11 80 40
	1c 00 00	 movss	 DWORD PTR [eax+7232], xmm0
$LN73@update_com:

; 1599 : 		}
; 1600 : 	}
; 1601 : /*	else if (current_flight_dynamics->wheel_brake && weight_on_wheels())  // cludge to stop helicopter completetly
; 1602 : 	{
; 1603 : 		float load = get_load_on_wheels();
; 1604 : 		debug_log("load: %.2f, x: %.3f, y: %.3f", load, current_flight_dynamics->world_motion_vector.x, current_flight_dynamics->world_motion_vector.z);
; 1605 : 
; 1606 : 		if (fabs(current_flight_dynamics->world_motion_vector.x) < 0.2)
; 1607 : 			if (current_flight_dynamics->world_motion_vector.x > 0)
; 1608 : 				current_flight_dynamics->world_motion_vector.x -= min(2.0 * get_model_delta_time () * load, current_flight_dynamics->world_motion_vector.x );
; 1609 : 			else
; 1610 : 				current_flight_dynamics->world_motion_vector.x -= max(-2.0 * get_model_delta_time () * load, current_flight_dynamics->world_motion_vector.x );
; 1611 : 
; 1612 : 		if (fabs(current_flight_dynamics->world_motion_vector.z) < 0.2)
; 1613 : 			if (current_flight_dynamics->world_motion_vector.z > 0)
; 1614 : 				current_flight_dynamics->world_motion_vector.z -= min(1.0 * get_model_delta_time () * load, current_flight_dynamics->world_motion_vector.z);
; 1615 : 			else
; 1616 : 				current_flight_dynamics->world_motion_vector.z -= max(-1.0 * get_model_delta_time () * load, current_flight_dynamics->world_motion_vector.z);
; 1617 : 	}
; 1618 : */
; 1619 : 	// arneh - add vibration if rotor damaged
; 1620 : 	if (!model_landed && current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE)

  040cd	83 7d fc 00	 cmp	 DWORD PTR _model_landed$[ebp], 0
  040d1	75 26		 jne	 SHORT $LN74@update_com
  040d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  040d8	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  040de	81 e1 00 00 01
	00		 and	 ecx, 65536		; 00010000H
  040e4	74 13		 je	 SHORT $LN74@update_com

; 1621 : 		create_rotor_vibration(1.2);

  040e6	51		 push	 ecx
  040e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f99999a
  040ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  040f4	e8 00 00 00 00	 call	 ?create_rotor_vibration@@YGXM@Z ; create_rotor_vibration
$LN74@update_com:
$LN1@update_com:

; 1622 : }

  040f9	5f		 pop	 edi
  040fa	5e		 pop	 esi
  040fb	5b		 pop	 ebx
  040fc	8b e5		 mov	 esp, ebp
  040fe	5d		 pop	 ebp
  040ff	c3		 ret	 0
?update_common_attitude_dynamics@@YGXXZ ENDP		; update_common_attitude_dynamics
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
;	COMDAT ?initialise_common_dynamics@@YGXXZ
_TEXT	SEGMENT
?initialise_common_dynamics@@YGXXZ PROC			; initialise_common_dynamics, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 220  : 	right_g_e_force = 0.0,

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?right_g_e_force@@3MA, xmm0
  00014	0f 57 c0	 xorps	 xmm0, xmm0
  00017	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?left_g_e_force@@3MA, xmm0
  0001f	0f 57 c0	 xorps	 xmm0, xmm0
  00022	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?back_g_e_force@@3MA, xmm0
  0002a	0f 57 c0	 xorps	 xmm0, xmm0
  0002d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?front_g_e_force@@3MA, xmm0
  00035	0f 57 c0	 xorps	 xmm0, xmm0
  00038	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?this_reaction_force@@3MA, xmm0

; 221  : 	left_g_e_force = 0.0,
; 222  : 	back_g_e_force = 0.0,
; 223  : 	front_g_e_force = 0.0,
; 224  : 	this_reaction_force = 0.0;
; 225  : 	trim_button_held = FALSE;

  00040	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?trim_button_held@@3HA, 0 ; trim_button_held

; 226  : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?initialise_common_dynamics@@YGXXZ ENDP			; initialise_common_dynamics
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
;	COMDAT ?adjust_pedal_trim@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv67 = -76						; size = 8
_adjustment$ = -4					; size = 4
_ev$ = 8						; size = 4
?adjust_pedal_trim@@YGXPAUEVENT@@@Z PROC		; adjust_pedal_trim, COMDAT

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 207  : 	float adjustment = (ev->key == DIK_X) ? +0.5 : -0.5;

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00010	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  00013	75 0f		 jne	 SHORT $LN3@adjust_ped
  00015	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0001d	f2 0f 11 45 b4	 movsd	 QWORD PTR tv67[ebp], xmm0
  00022	eb 0d		 jmp	 SHORT $LN4@adjust_ped
$LN3@adjust_ped:
  00024	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfe0000000000000
  0002c	f2 0f 11 45 b4	 movsd	 QWORD PTR tv67[ebp], xmm0
$LN4@adjust_ped:
  00031	f2 0f 5a 45 b4	 cvtsd2ss xmm0, QWORD PTR tv67[ebp]
  00036	f3 0f 11 45 fc	 movss	 DWORD PTR _adjustment$[ebp], xmm0

; 208  : 
; 209  : 	current_flight_dynamics->input_data.pedal_trim.value += adjustment;

  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00040	f3 0f 10 80 f4
	1b 00 00	 movss	 xmm0, DWORD PTR [eax+7156]
  00048	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _adjustment$[ebp]
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00053	f3 0f 11 81 f4
	1b 00 00	 movss	 DWORD PTR [ecx+7156], xmm0

; 210  : 
; 211  : 	debug_log ("CO_DYN: pedal trim adjusted to %f", current_flight_dynamics->input_data.pedal_trim.value);

  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00060	f3 0f 5a 80 f4
	1b 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7156]
  00068	83 ec 08	 sub	 esp, 8
  0006b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@FNGFGEEJ@CO_DYN?3?5pedal?5trim?5adjusted?5to?5@
  00075	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 212  : }

  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?adjust_pedal_trim@@YGXPAUEVENT@@@Z ENDP		; adjust_pedal_trim
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
;	COMDAT ?adjust_roll_trim@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv67 = -72						; size = 4
_adjustment$ = -4					; size = 4
_ev$ = 8						; size = 4
?adjust_roll_trim@@YGXPAUEVENT@@@Z PROC			; adjust_roll_trim, COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  : 	int adjustment = (ev->key == DIK_RIGHT) ? +1 : -1;

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00010	81 f9 cd 00 00
	00		 cmp	 ecx, 205		; 000000cdH
  00016	75 09		 jne	 SHORT $LN3@adjust_rol
  00018	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  0001f	eb 07		 jmp	 SHORT $LN4@adjust_rol
$LN3@adjust_rol:
  00021	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv67[ebp], -1
$LN4@adjust_rol:
  00028	8b 55 b8	 mov	 edx, DWORD PTR tv67[ebp]
  0002b	89 55 fc	 mov	 DWORD PTR _adjustment$[ebp], edx

; 195  : 
; 196  : 	current_flight_dynamics->input_data.cyclic_x_trim.value += adjustment;

  0002e	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _adjustment$[ebp]
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00038	f3 0f 58 80 28
	01 00 00	 addss	 xmm0, DWORD PTR [eax+296]
  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00046	f3 0f 11 81 28
	01 00 00	 movss	 DWORD PTR [ecx+296], xmm0

; 197  : 
; 198  : 	debug_log ("CO_DYN: roll trim adjusted to %f", current_flight_dynamics->input_data.cyclic_x_trim.value);

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00053	f3 0f 5a 80 28
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+296]
  0005b	83 ec 08	 sub	 esp, 8
  0005e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KCBCMAMP@CO_DYN?3?5roll?5trim?5adjusted?5to?5?$CF@
  00068	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 199  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
?adjust_roll_trim@@YGXPAUEVENT@@@Z ENDP			; adjust_roll_trim
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
;	COMDAT ?adjust_pitch_trim@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv67 = -72						; size = 4
_adjustment$ = -4					; size = 4
_ev$ = 8						; size = 4
?adjust_pitch_trim@@YGXPAUEVENT@@@Z PROC		; adjust_pitch_trim, COMDAT

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 181  : 	int adjustment = (ev->key == DIK_UP) ? +1 : -1;

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00010	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  00016	75 09		 jne	 SHORT $LN3@adjust_pit
  00018	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  0001f	eb 07		 jmp	 SHORT $LN4@adjust_pit
$LN3@adjust_pit:
  00021	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv67[ebp], -1
$LN4@adjust_pit:
  00028	8b 55 b8	 mov	 edx, DWORD PTR tv67[ebp]
  0002b	89 55 fc	 mov	 DWORD PTR _adjustment$[ebp], edx

; 182  : 
; 183  : 	current_flight_dynamics->input_data.cyclic_y_trim.value += adjustment;

  0002e	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _adjustment$[ebp]
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00038	f3 0f 58 80 40
	01 00 00	 addss	 xmm0, DWORD PTR [eax+320]
  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00046	f3 0f 11 81 40
	01 00 00	 movss	 DWORD PTR [ecx+320], xmm0

; 184  : 
; 185  : 	debug_log ("CO_DYN: pitch trim adjusted to %f", current_flight_dynamics->input_data.cyclic_y_trim.value);

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00053	f3 0f 5a 80 40
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+320]
  0005b	83 ec 08	 sub	 esp, 8
  0005e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@EEIPICNB@CO_DYN?3?5pitch?5trim?5adjusted?5to?5@
  00068	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 186  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
?adjust_pitch_trim@@YGXPAUEVENT@@@Z ENDP		; adjust_pitch_trim
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
;	COMDAT ?clear_trim_control@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv147 = -80						; size = 4
tv140 = -76						; size = 4
tv68 = -76						; size = 4
_centre_pedal_trim$ = -8				; size = 4
_centre_trim$ = -4					; size = 4
_ev$ = 8						; size = 4
?clear_trim_control@@YGXPAUEVENT@@@Z PROC		; clear_trim_control, COMDAT

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 105  : 	float centre_trim = 0.0, centre_pedal_trim = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0
  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0

; 106  : 
; 107  : 	if (!ev || ev->state == KEY_STATE_DOWN)

  00019	83 7d 08 00	 cmp	 DWORD PTR _ev$[ebp], 0
  0001d	74 10		 je	 SHORT $LN5@clear_trim
  0001f	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00022	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00026	83 f9 02	 cmp	 ecx, 2
  00029	0f 85 69 02 00
	00		 jne	 $LN27@clear_trim
$LN5@clear_trim:

; 108  : 	{
; 109  : 		// arneh 20060817 - trim for hover
; 110  : 		switch (get_global_gunship_type ())

  0002f	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  00034	89 45 b4	 mov	 DWORD PTR tv68[ebp], eax
  00037	83 7d b4 09	 cmp	 DWORD PTR tv68[ebp], 9
  0003b	0f 87 6b 01 00
	00		 ja	 $LN24@clear_trim
  00041	8b 4d b4	 mov	 ecx, DWORD PTR tv68[ebp]
  00044	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN33@clear_trim[ecx*4]
$LN6@clear_trim:

; 111  : 		{
; 112  : 		case GUNSHIP_TYPE_COMANCHE:
; 113  : 			centre_trim = 2.0;

  0004b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00053	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 114  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  00058	6a 00		 push	 0
  0005a	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  0005f	85 c0		 test	 eax, eax
  00061	75 0d		 jne	 SHORT $LN7@clear_trim

; 115  : 				centre_pedal_trim = -56.0;

  00063	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2600000
  0006b	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN7@clear_trim:

; 116  : 			break;

  00070	e9 5c 01 00 00	 jmp	 $LN2@clear_trim
$LN8@clear_trim:

; 117  : 		case GUNSHIP_TYPE_APACHE:
; 118  : 			centre_trim = 3.5;

  00075	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40600000
  0007d	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 119  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  00082	6a 00		 push	 0
  00084	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  00089	85 c0		 test	 eax, eax
  0008b	75 0d		 jne	 SHORT $LN9@clear_trim

; 120  : 				centre_pedal_trim = -56.0;

  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2600000
  00095	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN9@clear_trim:

; 121  : 			break;

  0009a	e9 32 01 00 00	 jmp	 $LN2@clear_trim
$LN10@clear_trim:

; 122  : 		case GUNSHIP_TYPE_AH64A:
; 123  : 			centre_trim = 3.2;

  0009f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@404ccccd
  000a7	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 124  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  000ac	6a 00		 push	 0
  000ae	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  000b3	85 c0		 test	 eax, eax
  000b5	75 0d		 jne	 SHORT $LN11@clear_trim

; 125  : 				centre_pedal_trim = -53.0;

  000b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2540000
  000bf	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN11@clear_trim:

; 126  : 			break;

  000c4	e9 08 01 00 00	 jmp	 $LN2@clear_trim
$LN12@clear_trim:

; 127  : 		case GUNSHIP_TYPE_BLACKHAWK:
; 128  : 			centre_trim = 3.0;

  000c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  000d1	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 129  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  000d6	6a 00		 push	 0
  000d8	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  000dd	85 c0		 test	 eax, eax
  000df	75 0d		 jne	 SHORT $LN13@clear_trim

; 130  : 				centre_pedal_trim = -61.0;

  000e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2740000
  000e9	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN13@clear_trim:

; 131  : 			break;

  000ee	e9 de 00 00 00	 jmp	 $LN2@clear_trim
$LN14@clear_trim:

; 132  : 		case GUNSHIP_TYPE_HOKUM:
; 133  : 			centre_trim = 0.0;

  000f3	0f 57 c0	 xorps	 xmm0, xmm0
  000f6	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 134  : 			break;

  000fb	e9 d1 00 00 00	 jmp	 $LN2@clear_trim
$LN15@clear_trim:

; 135  : 		case GUNSHIP_TYPE_KA50:
; 136  : 			centre_trim = 5.0;

  00100	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00108	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 137  : 			break;

  0010d	e9 bf 00 00 00	 jmp	 $LN2@clear_trim
$LN16@clear_trim:

; 138  : 		case GUNSHIP_TYPE_HIND:
; 139  : 			centre_trim = 0.0;

  00112	0f 57 c0	 xorps	 xmm0, xmm0
  00115	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 140  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  0011a	6a 00		 push	 0
  0011c	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  00121	85 c0		 test	 eax, eax
  00123	75 0d		 jne	 SHORT $LN17@clear_trim

; 141  : 				centre_pedal_trim = 41.0;

  00125	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42240000
  0012d	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN17@clear_trim:

; 142  : 			break;

  00132	e9 9a 00 00 00	 jmp	 $LN2@clear_trim
$LN18@clear_trim:

; 143  : 		case GUNSHIP_TYPE_HAVOC:
; 144  : 			centre_trim = 6.0;

  00137	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c00000
  0013f	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 145  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  00144	6a 00		 push	 0
  00146	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  0014b	85 c0		 test	 eax, eax
  0014d	75 0d		 jne	 SHORT $LN19@clear_trim

; 146  : 				centre_pedal_trim = 49.5;

  0014f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42460000
  00157	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN19@clear_trim:

; 147  : 			break;

  0015c	eb 73		 jmp	 SHORT $LN2@clear_trim
$LN20@clear_trim:

; 148  : 		case GUNSHIP_TYPE_VIPER:
; 149  : 			centre_trim = 2.0;

  0015e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00166	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 150  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  0016b	6a 00		 push	 0
  0016d	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  00172	85 c0		 test	 eax, eax
  00174	75 0d		 jne	 SHORT $LN21@clear_trim

; 151  : 				centre_pedal_trim = -56.0;

  00176	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2600000
  0017e	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN21@clear_trim:

; 152  : 			break;

  00183	eb 4c		 jmp	 SHORT $LN2@clear_trim
$LN22@clear_trim:

; 153  : 		case GUNSHIP_TYPE_KIOWA:
; 154  : 			centre_trim = 2.0;

  00185	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0018d	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 155  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  00192	6a 00		 push	 0
  00194	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  00199	85 c0		 test	 eax, eax
  0019b	75 0d		 jne	 SHORT $LN23@clear_trim

; 156  : 				centre_pedal_trim = -56.0;

  0019d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2600000
  001a5	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN23@clear_trim:

; 157  : 			break;

  001aa	eb 25		 jmp	 SHORT $LN2@clear_trim
$LN24@clear_trim:

; 158  : 		default:
; 159  : 			centre_trim = 6.0;

  001ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c00000
  001b4	f3 0f 11 45 fc	 movss	 DWORD PTR _centre_trim$[ebp], xmm0

; 160  : 			if (!get_current_dynamics_options(DYNAMICS_OPTIONS_CROSS_COUPLING))

  001b9	6a 00		 push	 0
  001bb	e8 00 00 00 00	 call	 ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
  001c0	85 c0		 test	 eax, eax
  001c2	75 0d		 jne	 SHORT $LN25@clear_trim

; 161  : 				centre_pedal_trim = -50.0;

  001c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2480000
  001cc	f3 0f 11 45 f8	 movss	 DWORD PTR _centre_pedal_trim$[ebp], xmm0
$LN25@clear_trim:
$LN2@clear_trim:

; 162  : 			break;
; 163  : 		}
; 164  : 
; 165  : 
; 166  : 		current_flight_dynamics->input_data.cyclic_x_trim.value = 0.0;

  001d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001d6	0f 57 c0	 xorps	 xmm0, xmm0
  001d9	f3 0f 11 80 28
	01 00 00	 movss	 DWORD PTR [eax+296], xmm0

; 167  : 		current_flight_dynamics->input_data.cyclic_y_trim.value = centre_trim;

  001e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001e6	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _centre_trim$[ebp]
  001eb	f3 0f 11 80 40
	01 00 00	 movss	 DWORD PTR [eax+320], xmm0

; 168  : 		if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT))

  001f3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  001fa	74 0c		 je	 SHORT $LN29@clear_trim
  001fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00201	8b 08		 mov	 ecx, DWORD PTR [eax]
  00203	89 4d b4	 mov	 DWORD PTR tv140[ebp], ecx
  00206	eb 1d		 jmp	 SHORT $LN30@clear_trim
$LN29@clear_trim:
  00208	68 a8 00 00 00	 push	 168			; 000000a8H
  0020d	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00212	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00218	52		 push	 edx
  00219	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0021e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN30@clear_trim:
  00225	b8 01 00 00 00	 mov	 eax, 1
  0022a	85 c0		 test	 eax, eax
  0022c	74 09		 je	 SHORT $LN31@clear_trim
  0022e	c7 45 b0 04 00
	00 00		 mov	 DWORD PTR tv147[ebp], 4
  00235	eb 1d		 jmp	 SHORT $LN32@clear_trim
$LN31@clear_trim:
  00237	68 a8 00 00 00	 push	 168			; 000000a8H
  0023c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CLEKGDOC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00241	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00247	51		 push	 ecx
  00248	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0024d	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN32@clear_trim:
  00254	6a 04		 push	 4
  00256	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0025c	52		 push	 edx
  0025d	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv140[ebp], 1116
  00264	8b 4d b0	 mov	 ecx, DWORD PTR tv147[ebp]
  00267	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0026e	ff d2		 call	 edx
  00270	85 c0		 test	 eax, eax
  00272	74 12		 je	 SHORT $LN26@clear_trim

; 169  : 			current_flight_dynamics->input_data.pedal_trim.value = 0.0;

  00274	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00279	0f 57 c0	 xorps	 xmm0, xmm0
  0027c	f3 0f 11 80 f4
	1b 00 00	 movss	 DWORD PTR [eax+7156], xmm0

; 170  : 		else

  00284	eb 12		 jmp	 SHORT $LN27@clear_trim
$LN26@clear_trim:

; 171  : 			current_flight_dynamics->input_data.pedal_trim.value = centre_pedal_trim;

  00286	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0028b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _centre_pedal_trim$[ebp]
  00290	f3 0f 11 80 f4
	1b 00 00	 movss	 DWORD PTR [eax+7156], xmm0
$LN27@clear_trim:

; 172  : 	}
; 173  : }

  00298	5f		 pop	 edi
  00299	5e		 pop	 esi
  0029a	5b		 pop	 ebx
  0029b	8b e5		 mov	 esp, ebp
  0029d	5d		 pop	 ebp
  0029e	c2 04 00	 ret	 4
  002a1	0f 1f 00	 npad	 3
$LN33@clear_trim:
  002a4	00 00 00 00	 DD	 $LN8@clear_trim
  002a8	00 00 00 00	 DD	 $LN18@clear_trim
  002ac	00 00 00 00	 DD	 $LN6@clear_trim
  002b0	00 00 00 00	 DD	 $LN14@clear_trim
  002b4	00 00 00 00	 DD	 $LN12@clear_trim
  002b8	00 00 00 00	 DD	 $LN16@clear_trim
  002bc	00 00 00 00	 DD	 $LN10@clear_trim
  002c0	00 00 00 00	 DD	 $LN15@clear_trim
  002c4	00 00 00 00	 DD	 $LN20@clear_trim
  002c8	00 00 00 00	 DD	 $LN22@clear_trim
?clear_trim_control@@YGXPAUEVENT@@@Z ENDP		; clear_trim_control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dyn.c
;	COMDAT ?set_trim_control@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?set_trim_control@@YGXPAUEVENT@@@Z PROC			; set_trim_control, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 85   : 	if (ev->state == KEY_STATE_DOWN)

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00010	83 f9 02	 cmp	 ecx, 2
  00013	0f 85 9f 00 00
	00		 jne	 $LN2@set_trim_c

; 86   : 	{
; 87   : 		current_flight_dynamics->input_data.cyclic_x_trim.value = current_flight_dynamics->input_data.cyclic_x.value;

  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00024	8b 91 f8 00 00
	00		 mov	 edx, DWORD PTR [ecx+248]
  0002a	89 90 28 01 00
	00		 mov	 DWORD PTR [eax+296], edx

; 88   : 		current_flight_dynamics->input_data.cyclic_y_trim.value = current_flight_dynamics->input_data.cyclic_y.value;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00035	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003b	8b 91 10 01 00
	00		 mov	 edx, DWORD PTR [ecx+272]
  00041	89 90 40 01 00
	00		 mov	 DWORD PTR [eax+320], edx

; 89   : 
; 90   : 		current_flight_dynamics->input_data.pedal_trim.value = current_flight_dynamics->input_data.pedal.value;

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00052	8b 91 dc 1b 00
	00		 mov	 edx, DWORD PTR [ecx+7132]
  00058	89 90 f4 1b 00
	00		 mov	 DWORD PTR [eax+7156], edx

; 91   : 
; 92   : 		trim_button_held = TRUE;

  0005e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?trim_button_held@@3HA, 1 ; trim_button_held

; 93   : 		debug_log ("CO_DYN: setting trim %f, %f, %f", current_flight_dynamics->input_data.cyclic_x.value, current_flight_dynamics->input_data.cyclic_y.value, current_flight_dynamics->input_data.pedal.value);

  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0006d	f3 0f 5a 80 dc
	1b 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7132]
  00075	83 ec 08	 sub	 esp, 8
  00078	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00083	f3 0f 5a 81 10
	01 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+272]
  0008b	83 ec 08	 sub	 esp, 8
  0008e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00093	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00099	f3 0f 5a 82 f8
	00 00 00	 cvtss2sd xmm0, DWORD PTR [edx+248]
  000a1	83 ec 08	 sub	 esp, 8
  000a4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NJJBFJAE@CO_DYN?3?5setting?5trim?5?$CFf?0?5?$CFf?0?5?$CFf@
  000ae	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000b3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 94   : 	}
; 95   : 	else

  000b6	eb 0a		 jmp	 SHORT $LN3@set_trim_c
$LN2@set_trim_c:

; 96   : 		trim_button_held = FALSE;

  000b8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?trim_button_held@@3HA, 0 ; trim_button_held
$LN3@set_trim_c:

; 97   : }

  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5b		 pop	 ebx
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 04 00	 ret	 4
?set_trim_control@@YGXPAUEVENT@@@Z ENDP			; set_trim_control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?pow@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?pow@@YGMMM@Z PROC					; pow, COMDAT

; 240  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 241  : 	return (_CSTD powf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _powf
  00024	83 c4 08	 add	 esp, 8

; 242  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?pow@@YGMMM@Z ENDP					; pow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _powf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_powf	PROC						; COMDAT

; 744  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 745  :             return (float)pow(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _pow
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 746  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_powf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
END
