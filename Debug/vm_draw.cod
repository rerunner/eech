; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\views\vm_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_fmodf
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?initialise_status_message@@YGXXZ		; initialise_status_message
PUBLIC	?set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z ; set_status_message
PUBLIC	?get_status_message_displayed@@YGHXZ		; get_status_message_displayed
PUBLIC	?get_status_message_type@@YG?AW4STATUS_MESSAGE_TYPES@@XZ ; get_status_message_type
PUBLIC	?draw_view@@YGXXZ				; draw_view
PUBLIC	?ShowFramerate@@YGXXZ				; ShowFramerate
PUBLIC	?clear_status_message@@YGXXZ			; clear_status_message
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z@4JA ; `set_status_message'::`1'::__LINE__Var
PUBLIC	??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0DB@EHOCGBKO@?$CItype?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CItype?5?$DM?5NUM_STAT@ ; `string'
PUBLIC	??_C@_0M@GDOOBFHG@Press?5SPACE@			; `string'
PUBLIC	??_C@_06IFNLNCGM@Paused@			; `string'
PUBLIC	??_C@_03EPCHICDI@x?$CFd@			; `string'
PUBLIC	??_C@_0BH@KFJLEDAI@Invalid?5view?5mode?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_01MCMALHOG@a@				; `string'
PUBLIC	??_C@_0O@JGJNLNBH@framerate?4txt@		; `string'
PUBLIC	??_C@_06KNOGIDLD@?$CF6?41f?6@			; `string'
PUBLIC	??_C@_0M@FKGDCBFN@?$CF6?41f?5?$CF6?41f@		; `string'
PUBLIC	??_C@_05GBNOBMHE@?$CF6?41f@			; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c8efa35
PUBLIC	__real@3eaa7efa
PUBLIC	__real@3f32b8c2
PUBLIC	__real@3f7fbe77
PUBLIC	__real@3f800000
PUBLIC	__real@3f8604da
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fed555555555555
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff0c15236000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4014f1a6c3800000
PUBLIC	__real@40400000
PUBLIC	__real@409fd70a
PUBLIC	__real@41200000
PUBLIC	__real@41c00000
PUBLIC	__real@461c4000
PUBLIC	__real@c61c4000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_fmod:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_joystick_axis@@YGHHH@Z:PROC		; get_joystick_axis
EXTRN	?query_TIR_active@@YAHXZ:PROC			; query_TIR_active
EXTRN	?TIR_Poll@@YGXXZ:PROC				; TIR_Poll
EXTRN	?get_screen_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_width
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_ui_font_colour
EXTRN	?begin_3d_scene@@YGHXZ:PROC			; begin_3d_scene
EXTRN	?end_3d_scene@@YGXXZ:PROC			; end_3d_scene
EXTRN	?set_view_angles@@YGXM@Z:PROC			; set_view_angles
EXTRN	?set_full_screen_viewport@@YGXXZ:PROC		; set_full_screen_viewport
EXTRN	?draw_external_3d_view@@YGXXZ:PROC		; draw_external_3d_view
EXTRN	?draw_fixed_cockpit_3d_view@@YGXXZ:PROC		; draw_fixed_cockpit_3d_view
EXTRN	?get_max_fov@@YGHXZ:PROC			; get_max_fov
EXTRN	?set_view_mode@@YGHW4VIEW_MODES@@@Z:PROC	; set_view_mode
EXTRN	?draw_safe_3d_view@@YGXXZ:PROC			; draw_safe_3d_view
EXTRN	?draw_virtual_cockpit_3d_view@@YGXXZ:PROC	; draw_virtual_cockpit_3d_view
EXTRN	?draw_virtual_cockpit_3d_crew_view@@YGXXZ:PROC	; draw_virtual_cockpit_3d_crew_view
EXTRN	?draw_virtual_cockpit_3d_hud_view@@YGXXZ:PROC	; draw_virtual_cockpit_3d_hud_view
EXTRN	?draw_virtual_cockpit_3d_periscope_view@@YGXXZ:PROC ; draw_virtual_cockpit_3d_periscope_view
EXTRN	?draw_virtual_cockpit_3d_display_view@@YGXXZ:PROC ; draw_virtual_cockpit_3d_display_view
EXTRN	?getViewpointOffsetX@@YGMM@Z:PROC		; getViewpointOffsetX
EXTRN	?getViewpointOffsetY@@YGMM@Z:PROC		; getViewpointOffsetY
EXTRN	?getViewpointOffsetZ@@YGMM@Z:PROC		; getViewpointOffsetZ
EXTRN	?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z:PROC	; draw_cockpit
EXTRN	?TIR_looking_in_periscope@@YGHXZ:PROC		; TIR_looking_in_periscope
EXTRN	?display_in_flight_messages@@YGXXZ:PROC		; display_in_flight_messages
EXTRN	?get_time_acceleration@@YGHXZ:PROC		; get_time_acceleration
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?system_one_over_delta_time@@3MA:DWORD		; system_one_over_delta_time
EXTRN	?application_video_colourdepth@@3HA:DWORD	; application_video_colourdepth
EXTRN	?active_screen@@3PAUSCREEN@@A:DWORD		; active_screen
EXTRN	?command_line_mouse_look@@3HA:DWORD		; command_line_mouse_look
EXTRN	?command_line_min_fov@@3HA:DWORD		; command_line_min_fov
EXTRN	?command_line_eo_zoom_joystick_index@@3HA:DWORD	; command_line_eo_zoom_joystick_index
EXTRN	?command_line_field_of_view_joystick_index@@3HA:DWORD ; command_line_field_of_view_joystick_index
EXTRN	?command_line_field_of_view_joystick_axis@@3HA:DWORD ; command_line_field_of_view_joystick_axis
EXTRN	?command_line_framerate@@3HA:DWORD		; command_line_framerate
EXTRN	?command_line_TIR_6DOF@@3HA:DWORD		; command_line_TIR_6DOF
EXTRN	?command_line_disable_message_text@@3HA:DWORD	; command_line_disable_message_text
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	?full_screen_y_max@@3MA:DWORD			; full_screen_y_max
EXTRN	?full_screen_width_view_angle@@3MA:DWORD	; full_screen_width_view_angle
EXTRN	?full_screen_hi_res@@3HA:DWORD			; full_screen_hi_res
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A:BYTE ; current_custom_cockpit_viewpoint
EXTRN	?framerate@@3MA:DWORD				; framerate
EXTRN	?timeframes@@3MA:DWORD				; timeframes
EXTRN	?frames@@3HA:DWORD				; frames
EXTRN	?ext_col_message@@3UREAL_COLOUR@@A:DWORD	; ext_col_message
EXTRN	?ext_col_alert_message@@3UREAL_COLOUR@@A:DWORD	; ext_col_alert_message
EXTRN	?mouse_wheel_up@@3HA:DWORD			; mouse_wheel_up
EXTRN	?mouse_wheel_down@@3HA:DWORD			; mouse_wheel_down
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?status_message@@3PADA DB 0c8H DUP (?)			; status_message
?status_message_timer@@3MA DD 01H DUP (?)		; status_message_timer
?status_message_type@@3W4STATUS_MESSAGE_TYPES@@A DD 01H DUP (?) ; status_message_type
?in_tir_periscope@@3HA DD 01H DUP (?)			; in_tir_periscope
_BSS	ENDS
;	COMDAT __real@c61c4000
CONST	SEGMENT
__real@c61c4000 DD 0c61c4000r			; -10000
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@41c00000
CONST	SEGMENT
__real@41c00000 DD 041c00000r			; 24
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@409fd70a
CONST	SEGMENT
__real@409fd70a DD 0409fd70ar			; 4.995
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4014f1a6c3800000
CONST	SEGMENT
__real@4014f1a6c3800000 DQ 04014f1a6c3800000r	; 5.23599
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0c15236000000
CONST	SEGMENT
__real@3ff0c15236000000 DQ 03ff0c15236000000r	; 1.0472
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fed555555555555
CONST	SEGMENT
__real@3fed555555555555 DQ 03fed555555555555r	; 0.916667
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f8604da
CONST	SEGMENT
__real@3f8604da DD 03f8604dar			; 1.04702
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fbe77
CONST	SEGMENT
__real@3f7fbe77 DD 03f7fbe77r			; 0.999
CONST	ENDS
;	COMDAT __real@3f32b8c2
CONST	SEGMENT
__real@3f32b8c2 DD 03f32b8c2r			; 0.698132
CONST	ENDS
;	COMDAT __real@3eaa7efa
CONST	SEGMENT
__real@3eaa7efa DD 03eaa7efar			; 0.333
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GBNOBMHE@?$CF6?41f@
CONST	SEGMENT
??_C@_05GBNOBMHE@?$CF6?41f@ DB '%6.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FKGDCBFN@?$CF6?41f?5?$CF6?41f@
CONST	SEGMENT
??_C@_0M@FKGDCBFN@?$CF6?41f?5?$CF6?41f@ DB '%6.1f %6.1f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KNOGIDLD@?$CF6?41f?6@
CONST	SEGMENT
??_C@_06KNOGIDLD@?$CF6?41f?6@ DB '%6.1f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JGJNLNBH@framerate?4txt@
CONST	SEGMENT
??_C@_0O@JGJNLNBH@framerate?4txt@ DB 'framerate.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01MCMALHOG@a@
CONST	SEGMENT
??_C@_01MCMALHOG@a@ DB 'a', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KFJLEDAI@Invalid?5view?5mode?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BH@KFJLEDAI@Invalid?5view?5mode?5?$DN?5?$CFd@ DB 'Invalid view mod'
	DB	'e = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03EPCHICDI@x?$CFd@
CONST	SEGMENT
??_C@_03EPCHICDI@x?$CFd@ DB 'x%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IFNLNCGM@Paused@
CONST	SEGMENT
??_C@_06IFNLNCGM@Paused@ DB 'Paused', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GDOOBFHG@Press?5SPACE@
CONST	SEGMENT
??_C@_0M@GDOOBFHG@Press?5SPACE@ DB 'Press SPACE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@EHOCGBKO@?$CItype?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CItype?5?$DM?5NUM_STAT@
CONST	SEGMENT
??_C@_0DB@EHOCGBKO@?$CItype?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CItype?5?$DM?5NUM_STAT@ DB '('
	DB	'type >= 0) && (type < NUM_STATUS_MESSAGE_TYPES)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\views\vm_draw.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z@4JA DD 07cH ; `set_status_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?update_field_of_view@@YGXXZ
_TEXT	SEGMENT
tv198 = -92						; size = 8
tv159 = -92						; size = 8
tv199 = -84						; size = 8
tv160 = -84						; size = 8
_fov$1 = -12						; size = 4
_joyval$2 = -8						; size = 4
_max_fov$ = -4						; size = 4
?update_field_of_view@@YGXXZ PROC			; update_field_of_view, COMDAT

; 336  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 337  : 	int
; 338  : 		max_fov = get_max_fov ();

  00009	e8 00 00 00 00	 call	 ?get_max_fov@@YGHXZ	; get_max_fov
  0000e	89 45 fc	 mov	 DWORD PTR _max_fov$[ebp], eax

; 339  : 
; 340  : 	if (command_line_field_of_view_joystick_index != -1)

  00011	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_field_of_view_joystick_index@@3HA, -1 ; command_line_field_of_view_joystick_index
  00018	0f 84 bb 00 00
	00		 je	 $LN2@update_fie

; 341  : 	{
; 342  : 		int joyval = get_joystick_axis(command_line_field_of_view_joystick_index, command_line_field_of_view_joystick_axis);

  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_field_of_view_joystick_axis@@3HA ; command_line_field_of_view_joystick_axis
  00023	50		 push	 eax
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_field_of_view_joystick_index@@3HA ; command_line_field_of_view_joystick_index
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  00030	89 45 f8	 mov	 DWORD PTR _joyval$2[ebp], eax

; 343  : 		float fov;
; 344  : 
; 345  : 		if (joyval <= 0)

  00033	83 7d f8 00	 cmp	 DWORD PTR _joyval$2[ebp], 0
  00037	7f 4c		 jg	 SHORT $LN4@update_fie

; 346  : 			fov = DEFAULT_FOV - (((float)joyval / JOYSTICK_AXIS_MINIMUM) * (DEFAULT_FOV - rad(command_line_min_fov)));

  00039	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _joyval$2[ebp]
  0003e	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@c61c4000
  00046	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0004a	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_min_fov@@3HA ; command_line_min_fov
  00052	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  0005a	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0005e	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0c15236000000
  00066	f2 0f 5c d1	 subsd	 xmm2, xmm1
  0006a	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  0006e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0c15236000000
  00076	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0007a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0007e	f3 0f 11 45 f4	 movss	 DWORD PTR _fov$1[ebp], xmm0

; 347  : 		else

  00083	eb 3f		 jmp	 SHORT $LN5@update_fie
$LN4@update_fie:

; 348  : 			fov = DEFAULT_FOV + (((float)joyval / JOYSTICK_AXIS_MAXIMUM) * (rad(max_fov) - DEFAULT_FOV));

  00085	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _joyval$2[ebp]
  0008a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@461c4000
  00092	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00096	f3 0f 2a 4d fc	 cvtsi2ss xmm1, DWORD PTR _max_fov$[ebp]
  0009b	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  000a3	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  000a7	f2 0f 5c 0d 00
	00 00 00	 subsd	 xmm1, QWORD PTR __real@3ff0c15236000000
  000af	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000b3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0c15236000000
  000bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000bf	f3 0f 11 45 f4	 movss	 DWORD PTR _fov$1[ebp], xmm0
$LN5@update_fie:

; 349  : 
; 350  : 		set_view_angles(fov);

  000c4	51		 push	 ecx
  000c5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _fov$1[ebp]
  000ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cf	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles
  000d4	e9 fd 01 00 00	 jmp	 $LN10@update_fie
$LN2@update_fie:

; 351  : 	}
; 352  : 
; 353  : 	// fov control by mouse wheel thealx 130212
; 354  : 
; 355  : 	else if ((command_line_mouse_look == MOUSELOOK_ON) || (command_line_eo_zoom_joystick_index != -1) )

  000d9	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_mouse_look@@3HA, 3 ; command_line_mouse_look
  000e0	74 0d		 je	 SHORT $LN7@update_fie
  000e2	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_zoom_joystick_index@@3HA, -1 ; command_line_eo_zoom_joystick_index
  000e9	0f 84 e7 01 00
	00		 je	 $LN10@update_fie
$LN7@update_fie:

; 356  : 	{		
; 357  : 		if (mouse_wheel_up)

  000ef	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_up@@3HA, 0 ; mouse_wheel_up
  000f6	0f 84 e9 00 00
	00		 je	 $LN8@update_fie

; 358  : 		{
; 359  : 				set_view_angles(bound((full_screen_width_view_angle - 10 * FOV_CHANGE_RATE * get_delta_time()), rad(command_line_min_fov), rad(max_fov)));

  000fc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  00104	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  0010c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4014f1a6c3800000
  00114	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00118	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_min_fov@@3HA ; command_line_min_fov
  00120	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  00128	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0012c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00130	76 1b		 jbe	 SHORT $LN14@update_fie
  00132	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?command_line_min_fov@@3HA ; command_line_min_fov
  0013a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00142	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00146	f2 0f 11 45 ac	 movsd	 QWORD PTR tv160[ebp], xmm0
  0014b	eb 76		 jmp	 SHORT $LN15@update_fie
$LN14@update_fie:
  0014d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  00155	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  0015d	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4014f1a6c3800000
  00165	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00169	f3 0f 2a 4d fc	 cvtsi2ss xmm1, DWORD PTR _max_fov$[ebp]
  0016e	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  00176	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0017a	66 0f 2f c1	 comisd	 xmm0, xmm1
  0017e	76 18		 jbe	 SHORT $LN12@update_fie
  00180	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _max_fov$[ebp]
  00185	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0018d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00191	f2 0f 11 45 a4	 movsd	 QWORD PTR tv159[ebp], xmm0
  00196	eb 21		 jmp	 SHORT $LN13@update_fie
$LN12@update_fie:
  00198	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  001a0	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  001a8	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4014f1a6c3800000
  001b0	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001b4	f2 0f 11 45 a4	 movsd	 QWORD PTR tv159[ebp], xmm0
$LN13@update_fie:
  001b9	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv159[ebp]
  001be	f2 0f 11 45 ac	 movsd	 QWORD PTR tv160[ebp], xmm0
$LN15@update_fie:
  001c3	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv160[ebp]
  001c8	51		 push	 ecx
  001c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ce	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles

; 360  : 				mouse_wheel_up--;

  001d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_up@@3HA ; mouse_wheel_up
  001d8	83 e8 01	 sub	 eax, 1
  001db	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_up@@3HA, eax ; mouse_wheel_up
  001e0	e9 f1 00 00 00	 jmp	 $LN10@update_fie
$LN8@update_fie:

; 361  : 		}
; 362  : 		else if (mouse_wheel_down)

  001e5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_down@@3HA, 0 ; mouse_wheel_down
  001ec	0f 84 e4 00 00
	00		 je	 $LN10@update_fie

; 363  : 		{
; 364  : 				set_view_angles(bound((full_screen_width_view_angle + 10 * FOV_CHANGE_RATE * get_delta_time()), rad(command_line_min_fov), rad(max_fov)));

  001f2	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  001fa	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  00202	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4014f1a6c3800000
  0020a	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0020e	f3 0f 2a 0d 00
	00 00 00	 cvtsi2ss xmm1, DWORD PTR ?command_line_min_fov@@3HA ; command_line_min_fov
  00216	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  0021e	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00222	66 0f 2f c8	 comisd	 xmm1, xmm0
  00226	76 1b		 jbe	 SHORT $LN18@update_fie
  00228	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?command_line_min_fov@@3HA ; command_line_min_fov
  00230	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00238	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0023c	f2 0f 11 45 ac	 movsd	 QWORD PTR tv199[ebp], xmm0
  00241	eb 76		 jmp	 SHORT $LN19@update_fie
$LN18@update_fie:
  00243	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  0024b	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  00253	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4014f1a6c3800000
  0025b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0025f	f3 0f 2a 4d fc	 cvtsi2ss xmm1, DWORD PTR _max_fov$[ebp]
  00264	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  0026c	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00270	66 0f 2f c1	 comisd	 xmm0, xmm1
  00274	76 18		 jbe	 SHORT $LN16@update_fie
  00276	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _max_fov$[ebp]
  0027b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00283	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00287	f2 0f 11 45 a4	 movsd	 QWORD PTR tv198[ebp], xmm0
  0028c	eb 21		 jmp	 SHORT $LN17@update_fie
$LN16@update_fie:
  0028e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  00296	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  0029e	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4014f1a6c3800000
  002a6	f2 0f 58 c1	 addsd	 xmm0, xmm1
  002aa	f2 0f 11 45 a4	 movsd	 QWORD PTR tv198[ebp], xmm0
$LN17@update_fie:
  002af	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv198[ebp]
  002b4	f2 0f 11 45 ac	 movsd	 QWORD PTR tv199[ebp], xmm0
$LN19@update_fie:
  002b9	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv199[ebp]
  002be	51		 push	 ecx
  002bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c4	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles

; 365  : 				mouse_wheel_down--;

  002c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_down@@3HA ; mouse_wheel_down
  002ce	83 e8 01	 sub	 eax, 1
  002d1	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_down@@3HA, eax ; mouse_wheel_down
$LN10@update_fie:

; 366  : 		}
; 367  : 	}
; 368  : }

  002d6	5f		 pop	 edi
  002d7	5e		 pop	 esi
  002d8	5b		 pop	 ebx
  002d9	8b e5		 mov	 esp, ebp
  002db	5d		 pop	 ebp
  002dc	c3		 ret	 0
?update_field_of_view@@YGXXZ ENDP			; update_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?display_time_acceleration@@YGXXZ
_TEXT	SEGMENT
tv135 = -164						; size = 4
tv143 = -160						; size = 4
_y$ = -92						; size = 4
_x$ = -88						; size = 4
_buffer$ = -84						; size = 80
_s$ = -4						; size = 4
?display_time_acceleration@@YGXXZ PROC			; display_time_acceleration, COMDAT

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 291  : 	const char
; 292  : 		*s;
; 293  : 	char
; 294  : 		buffer[80];
; 295  : 
; 296  : 	float
; 297  : 		x,
; 298  : 		y;
; 299  : 
; 300  : 	s = NULL;

  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], 0

; 301  : 
; 302  : 	if (command_line_disable_message_text)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_disable_message_text@@3HA, 0 ; command_line_disable_message_text
  0001a	74 05		 je	 SHORT $LN2@display_ti

; 303  : 		return;

  0001c	e9 cf 00 00 00	 jmp	 $LN1@display_ti
$LN2@display_ti:

; 304  : 
; 305  : 	if (get_time_acceleration () == 0)

  00021	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  00026	85 c0		 test	 eax, eax
  00028	75 0f		 jne	 SHORT $LN3@display_ti

; 306  : 	{
; 307  : 		s = get_trans ("Paused");

  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_06IFNLNCGM@Paused@
  0002f	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00034	89 45 fc	 mov	 DWORD PTR _s$[ebp], eax
  00037	eb 27		 jmp	 SHORT $LN5@display_ti
$LN3@display_ti:

; 308  : 	}
; 309  : 	else if (get_time_acceleration () > 1)

  00039	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  0003e	83 f8 01	 cmp	 eax, 1
  00041	7e 1d		 jle	 SHORT $LN5@display_ti

; 310  : 	{
; 311  : 		sprintf (buffer, "x%d", get_time_acceleration ());

  00043	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_03EPCHICDI@x?$CFd@
  0004e	8d 45 ac	 lea	 eax, DWORD PTR _buffer$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _sprintf
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 312  : 
; 313  : 		s = buffer;

  0005a	8d 45 ac	 lea	 eax, DWORD PTR _buffer$[ebp]
  0005d	89 45 fc	 mov	 DWORD PTR _s$[ebp], eax
$LN5@display_ti:

; 314  : 	}
; 315  : 
; 316  : 	if (s)

  00060	83 7d fc 00	 cmp	 DWORD PTR _s$[ebp], 0
  00064	0f 84 86 00 00
	00		 je	 $LN6@display_ti

; 317  : 	{
; 318  : 		set_ui_font_type (UI_FONT_ARIAL_16);

  0006a	6a 03		 push	 3
  0006c	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 319  : 
; 320  : 		set_ui_font_colour (ext_col_message);

  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_message@@3UREAL_COLOUR@@A ; ext_col_message
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 321  : 
; 322  : 		x = get_screen_width (active_screen) - ui_get_string_length (s) - 2.0;

  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00087	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _s$[ebp]
  0008e	51		 push	 ecx
  0008f	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv143[ebp], xmm0
  00097	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  0009c	d9 9d 5c ff ff
	ff		 fstp	 DWORD PTR tv135[ebp]
  000a2	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv143[ebp]
  000aa	f3 0f 5c 85 5c
	ff ff ff	 subss	 xmm0, DWORD PTR tv135[ebp]
  000b2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000b6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4000000000000000
  000be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c2	f3 0f 11 45 a8	 movss	 DWORD PTR _x$[ebp], xmm0

; 323  : 
; 324  : 		y = 0.0;

  000c7	0f 57 c0	 xorps	 xmm0, xmm0
  000ca	f3 0f 11 45 a4	 movss	 DWORD PTR _y$[ebp], xmm0

; 325  : 
; 326  : 		ui_display_text (s, x, y);

  000cf	51		 push	 ecx
  000d0	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _y$[ebp]
  000d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000da	51		 push	 ecx
  000db	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _x$[ebp]
  000e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e5	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  000ee	dd d8		 fstp	 ST(0)
$LN6@display_ti:
$LN1@display_ti:

; 327  : 	}
; 328  : }

  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c3		 ret	 0
?display_time_acceleration@@YGXXZ ENDP			; display_time_acceleration
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?display_eject_message@@YGXXZ
_TEXT	SEGMENT
tv210 = -88						; size = 4
tv148 = -88						; size = 4
tv129 = -88						; size = 4
tv77 = -88						; size = 4
tv217 = -84						; size = 4
tv141 = -84						; size = 4
tv90 = -84						; size = 4
tv70 = -84						; size = 4
_y$ = -16						; size = 4
_x$ = -12						; size = 4
_s$ = -8						; size = 4
_display_message$ = -4					; size = 4
?display_eject_message@@YGXXZ PROC			; display_eject_message, COMDAT

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 236  : 	int
; 237  : 		display_message;
; 238  : 
; 239  : 	const char
; 240  : 		*s;
; 241  : 
; 242  : 	float
; 243  : 		x,
; 244  : 		y;
; 245  : 
; 246  : 	if (command_line_disable_message_text)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_disable_message_text@@3HA, 0 ; command_line_disable_message_text
  00010	74 05		 je	 SHORT $LN2@display_ej

; 247  : 		return;

  00012	e9 51 02 00 00	 jmp	 $LN1@display_ej
$LN2@display_ej:

; 248  : 	
; 249  : 	display_message = FALSE;

  00017	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _display_message$[ebp], 0

; 250  : 
; 251  : 	if (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE) == CAMERA_MODE_EJECT)

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00025	74 0c		 je	 SHORT $LN10@display_ej
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	89 4d ac	 mov	 DWORD PTR tv70[ebp], ecx
  00031	eb 1d		 jmp	 SHORT $LN11@display_ej
$LN10@display_ej:
  00033	68 fb 00 00 00	 push	 251			; 000000fbH
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00049	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN11@display_ej:
  00050	b8 01 00 00 00	 mov	 eax, 1
  00055	85 c0		 test	 eax, eax
  00057	74 09		 je	 SHORT $LN12@display_ej
  00059	c7 45 a8 10 00
	00 00		 mov	 DWORD PTR tv77[ebp], 16	; 00000010H
  00060	eb 1d		 jmp	 SHORT $LN13@display_ej
$LN12@display_ej:
  00062	68 fb 00 00 00	 push	 251			; 000000fbH
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00078	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN13@display_ej:
  0007f	6a 10		 push	 16			; 00000010H
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00087	52		 push	 edx
  00088	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv70[ebp], 1116
  0008f	8b 4d a8	 mov	 ecx, DWORD PTR tv77[ebp]
  00092	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00099	ff d2		 call	 edx
  0009b	83 f8 05	 cmp	 eax, 5
  0009e	75 0c		 jne	 SHORT $LN3@display_ej

; 252  : 	{
; 253  : 		display_message = TRUE;

  000a0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _display_message$[ebp], 1

; 254  : 	}
; 255  : 	else

  000a7	e9 1a 01 00 00	 jmp	 $LN7@display_ej
$LN3@display_ej:

; 256  : 	{
; 257  : 		if (get_gunship_entity ())

  000ac	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000b3	0f 84 0d 01 00
	00		 je	 $LN7@display_ej

; 258  : 		{
; 259  : 			if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_EJECTED))

  000b9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000c0	74 0c		 je	 SHORT $LN14@display_ej
  000c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c9	89 4d ac	 mov	 DWORD PTR tv90[ebp], ecx
  000cc	eb 1d		 jmp	 SHORT $LN15@display_ej
$LN14@display_ej:
  000ce	68 03 01 00 00	 push	 259			; 00000103H
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000de	52		 push	 edx
  000df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e4	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN15@display_ej:
  000eb	b8 01 00 00 00	 mov	 eax, 1
  000f0	85 c0		 test	 eax, eax
  000f2	74 09		 je	 SHORT $LN16@display_ej
  000f4	c7 45 a8 31 00
	00 00		 mov	 DWORD PTR tv129[ebp], 49 ; 00000031H
  000fb	eb 1d		 jmp	 SHORT $LN17@display_ej
$LN16@display_ej:
  000fd	68 03 01 00 00	 push	 259			; 00000103H
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00107	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0010d	51		 push	 ecx
  0010e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00113	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN17@display_ej:
  0011a	6a 31		 push	 49			; 00000031H
  0011c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00122	52		 push	 edx
  00123	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 1116
  0012a	8b 4d a8	 mov	 ecx, DWORD PTR tv129[ebp]
  0012d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00134	ff d2		 call	 edx
  00136	85 c0		 test	 eax, eax
  00138	0f 84 88 00 00
	00		 je	 $LN7@display_ej

; 260  : 			{
; 261  : 				if (!get_local_entity_int_value (get_gunship_entity (), INT_TYPE_ALIVE))

  0013e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00145	74 0c		 je	 SHORT $LN18@display_ej
  00147	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0014c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014e	89 4d ac	 mov	 DWORD PTR tv141[ebp], ecx
  00151	eb 1d		 jmp	 SHORT $LN19@display_ej
$LN18@display_ej:
  00153	68 05 01 00 00	 push	 261			; 00000105H
  00158	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00163	52		 push	 edx
  00164	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00169	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN19@display_ej:
  00170	b8 01 00 00 00	 mov	 eax, 1
  00175	85 c0		 test	 eax, eax
  00177	74 09		 je	 SHORT $LN20@display_ej
  00179	c7 45 a8 07 00
	00 00		 mov	 DWORD PTR tv148[ebp], 7
  00180	eb 1d		 jmp	 SHORT $LN21@display_ej
$LN20@display_ej:
  00182	68 05 01 00 00	 push	 261			; 00000105H
  00187	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00192	51		 push	 ecx
  00193	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00198	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN21@display_ej:
  0019f	6a 07		 push	 7
  001a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001a7	52		 push	 edx
  001a8	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv141[ebp], 1116
  001af	8b 4d a8	 mov	 ecx, DWORD PTR tv148[ebp]
  001b2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001b9	ff d2		 call	 edx
  001bb	85 c0		 test	 eax, eax
  001bd	75 07		 jne	 SHORT $LN7@display_ej

; 262  : 				{
; 263  : 					display_message = TRUE;

  001bf	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _display_message$[ebp], 1
$LN7@display_ej:

; 264  : 				}
; 265  : 			}
; 266  : 		}
; 267  : 	}
; 268  : 
; 269  : 	if (display_message)

  001c6	83 7d fc 00	 cmp	 DWORD PTR _display_message$[ebp], 0
  001ca	0f 84 98 00 00
	00		 je	 $LN8@display_ej

; 270  : 	{
; 271  : 		s = get_trans ("Press SPACE");

  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GDOOBFHG@Press?5SPACE@
  001d5	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  001da	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax

; 272  : 
; 273  : 		set_ui_font_type (UI_FONT_ARIAL_16);

  001dd	6a 03		 push	 3
  001df	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 274  : 
; 275  : 		set_ui_font_colour (ext_col_message);

  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_message@@3UREAL_COLOUR@@A ; ext_col_message
  001e9	50		 push	 eax
  001ea	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 276  : 
; 277  : 		x = (get_screen_width (active_screen) - ui_get_string_length (s)) * 0.5;

  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  001fa	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001fe	8b 4d f8	 mov	 ecx, DWORD PTR _s$[ebp]
  00201	51		 push	 ecx
  00202	f3 0f 11 45 ac	 movss	 DWORD PTR tv217[ebp], xmm0
  00207	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  0020c	d9 5d a8	 fstp	 DWORD PTR tv210[ebp]
  0020f	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv217[ebp]
  00214	f3 0f 5c 45 a8	 subss	 xmm0, DWORD PTR tv210[ebp]
  00219	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0021d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00225	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00229	f3 0f 11 45 f4	 movss	 DWORD PTR _x$[ebp], xmm0

; 278  : 
; 279  : 		y = full_screen_y_max * (440.0 / 480.0);

  0022e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00236	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fed555555555555
  0023e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00242	f3 0f 11 45 f0	 movss	 DWORD PTR _y$[ebp], xmm0

; 280  : 
; 281  : 		ui_display_text (s, x, y);

  00247	51		 push	 ecx
  00248	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y$[ebp]
  0024d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00252	51		 push	 ecx
  00253	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  00258	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025d	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  00260	50		 push	 eax
  00261	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00266	dd d8		 fstp	 ST(0)
$LN8@display_ej:
$LN1@display_ej:

; 282  : 	}
; 283  : }

  00268	5f		 pop	 edi
  00269	5e		 pop	 esi
  0026a	5b		 pop	 ebx
  0026b	8b e5		 mov	 esp, ebp
  0026d	5d		 pop	 ebp
  0026e	c3		 ret	 0
?display_eject_message@@YGXXZ ENDP			; display_eject_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?display_status_message@@YGXXZ
_TEXT	SEGMENT
tv169 = -92						; size = 8
tv156 = -92						; size = 8
tv183 = -84						; size = 8
tv181 = -84						; size = 8
tv148 = -80						; size = 4
$T1 = -76						; size = 4
_y$ = -8						; size = 4
_x$ = -4						; size = 4
?display_status_message@@YGXXZ PROC			; display_status_message, COMDAT

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 164  : 	float
; 165  : 		x,
; 166  : 		y;
; 167  : 
; 168  : 	if (command_line_disable_message_text)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_disable_message_text@@3HA, 0 ; command_line_disable_message_text
  00010	74 05		 je	 SHORT $LN2@display_st

; 169  : 		return;

  00012	e9 9d 01 00 00	 jmp	 $LN1@display_st
$LN2@display_st:

; 170  : 	
; 171  : 	if (status_message_timer > 0.0)

  00017	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?status_message_timer@@3MA
  0001f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00027	0f 86 87 01 00
	00		 jbe	 $LN7@display_st

; 172  : 	{
; 173  : 		set_ui_font_type (UI_FONT_ARIAL_16);

  0002d	6a 03		 push	 3
  0002f	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 174  : 
; 175  : 		if (status_message_type == STATUS_MESSAGE_TYPE_ALERT)

  00034	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?status_message_type@@3W4STATUS_MESSAGE_TYPES@@A, 1
  0003b	0f 85 b1 00 00
	00		 jne	 $LN4@display_st

; 176  : 		{
; 177  : 			if (fmod (status_message_timer, STATUS_MESSAGE_FLASH_PERIOD) >= STATUS_MESSAGE_FLASH_OFF_TIME)

  00041	51		 push	 ecx
  00042	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  0004a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004f	51		 push	 ecx
  00050	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?status_message_timer@@3MA
  00058	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005d	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  00062	d9 5d b0	 fstp	 DWORD PTR tv148[ebp]
  00065	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv148[ebp]
  0006a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3eaa7efa
  00071	72 7d		 jb	 SHORT $LN6@display_st

; 178  : 			{
; 179  : 				set_ui_font_colour (ext_col_alert_message);

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_alert_message@@3UREAL_COLOUR@@A ; ext_col_alert_message
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 180  : 
; 181  : 				x = (get_screen_width (active_screen) * 0.5) - (ui_get_string_length (status_message) * 0.5);

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00089	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0008d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00095	68 00 00 00 00	 push	 OFFSET ?status_message@@3PADA
  0009a	f2 0f 11 45 ac	 movsd	 QWORD PTR tv181[ebp], xmm0
  0009f	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  000a4	dd 5d a4	 fstp	 QWORD PTR tv156[ebp]
  000a7	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv156[ebp]
  000ac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000b4	f2 0f 10 4d ac	 movsd	 xmm1, QWORD PTR tv181[ebp]
  000b9	f2 0f 5c c8	 subsd	 xmm1, xmm0
  000bd	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000c1	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0

; 182  : 
; 183  : 				y = 0.0;

  000c6	0f 57 c0	 xorps	 xmm0, xmm0
  000c9	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0

; 184  : 
; 185  : 				ui_display_text (status_message, x, y);

  000ce	51		 push	 ecx
  000cf	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d9	51		 push	 ecx
  000da	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	68 00 00 00 00	 push	 OFFSET ?status_message@@3PADA
  000e9	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  000ee	dd d8		 fstp	 ST(0)
$LN6@display_st:

; 186  : 			}
; 187  : 		}
; 188  : 		else

  000f0	eb 7d		 jmp	 SHORT $LN5@display_st
$LN4@display_st:

; 189  : 		{
; 190  : 			set_ui_font_colour (ext_col_message);

  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_message@@3UREAL_COLOUR@@A ; ext_col_message
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 191  : 
; 192  : 			x = (get_screen_width (active_screen) * 0.5) - (ui_get_string_length (status_message) * 0.5);

  000fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00108	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0010c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00114	68 00 00 00 00	 push	 OFFSET ?status_message@@3PADA
  00119	f2 0f 11 45 ac	 movsd	 QWORD PTR tv183[ebp], xmm0
  0011e	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00123	dd 5d a4	 fstp	 QWORD PTR tv169[ebp]
  00126	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv169[ebp]
  0012b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00133	f2 0f 10 4d ac	 movsd	 xmm1, QWORD PTR tv183[ebp]
  00138	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0013c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00140	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0

; 193  : 
; 194  : 			y = 0.0;

  00145	0f 57 c0	 xorps	 xmm0, xmm0
  00148	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0

; 195  : 
; 196  : 			ui_display_text (status_message, x, y);

  0014d	51		 push	 ecx
  0014e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  00153	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00158	51		 push	 ecx
  00159	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  0015e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00163	68 00 00 00 00	 push	 OFFSET ?status_message@@3PADA
  00168	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0016d	dd d8		 fstp	 ST(0)
$LN5@display_st:

; 197  : 		}
; 198  : 
; 199  : 		//
; 200  : 		// (screen resolution switching can be time consuming - limit delta time to ensure the message gets displayed)
; 201  : 		//
; 202  : 
; 203  : 		status_message_timer -= min (get_delta_time (), 1.0f);

  0016f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00177	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  0017c	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  0017f	50		 push	 eax
  00180	68 00 00 00 00	 push	 OFFSET ?system_delta_time@@3MA ; system_delta_time
  00185	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0018a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?status_message_timer@@3MA
  00192	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00196	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?status_message_timer@@3MA, xmm0

; 204  : 
; 205  : 		if (status_message_timer < 0.0)

  0019e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?status_message_timer@@3MA
  001a6	0f 57 c9	 xorps	 xmm1, xmm1
  001a9	66 0f 2f c8	 comisd	 xmm1, xmm0
  001ad	76 05		 jbe	 SHORT $LN7@display_st

; 206  : 		{
; 207  : 			clear_status_message ();

  001af	e8 00 00 00 00	 call	 ?clear_status_message@@YGXXZ ; clear_status_message
$LN7@display_st:
$LN1@display_st:

; 208  : 		}
; 209  : 	}
; 210  : }

  001b4	5f		 pop	 edi
  001b5	5e		 pop	 esi
  001b6	5b		 pop	 ebx
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c3		 ret	 0
?display_status_message@@YGXXZ ENDP			; display_status_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?clear_status_message@@YGXXZ
_TEXT	SEGMENT
?clear_status_message@@YGXXZ PROC			; clear_status_message, COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 103  : 	status_message[0] = '\0';

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	c6 81 00 00 00
	00 00		 mov	 BYTE PTR ?status_message@@3PADA[ecx], 0

; 104  : 
; 105  : 	status_message_timer = 0.0;

  00018	0f 57 c0	 xorps	 xmm0, xmm0
  0001b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?status_message_timer@@3MA, xmm0

; 106  : 
; 107  : 	status_message_type = STATUS_MESSAGE_TYPE_NONE;

  00023	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?status_message_type@@3W4STATUS_MESSAGE_TYPES@@A, 0

; 108  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?clear_status_message@@YGXXZ ENDP			; clear_status_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?ShowFramerate@@YGXXZ
_TEXT	SEGMENT
_file$1 = -32						; size = 4
_buf$ = -28						; size = 25
?ShowFramerate@@YGXXZ PROC				; ShowFramerate, COMDAT

; 909  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 910  : 	char buf[25];
; 911  : 
; 912  : 	timeframes += get_delta_time ();

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timeframes@@3MA
  00011	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00019	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timeframes@@3MA, xmm0

; 913  : 	frames++; 

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?frames@@3HA ; frames
  00026	83 c0 01	 add	 eax, 1
  00029	a3 00 00 00 00	 mov	 DWORD PTR ?frames@@3HA, eax ; frames

; 914  : 
; 915  : 	if (timeframes >= 1.0)

  0002e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timeframes@@3MA
  00036	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  0003e	72 7a		 jb	 SHORT $LN3@ShowFramer

; 916  : 	{
; 917  : 		framerate = frames / timeframes;

  00040	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?frames@@3HA ; frames
  00048	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?timeframes@@3MA
  00050	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?framerate@@3MA, xmm0

; 918  : 		frames = 0;

  00058	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?frames@@3HA, 0 ; frames

; 919  : 		timeframes = 0;

  00062	0f 57 c0	 xorps	 xmm0, xmm0
  00065	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timeframes@@3MA, xmm0

; 920  : 
; 921  : 		if (command_line_framerate == 2)

  0006d	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?command_line_framerate@@3HA, 2 ; command_line_framerate
  00074	75 44		 jne	 SHORT $LN3@ShowFramer

; 922  : 		{
; 923  : 			FILE *file = fopen ("framerate.txt", "a");

  00076	68 00 00 00 00	 push	 OFFSET ??_C@_01MCMALHOG@a@
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JGJNLNBH@framerate?4txt@
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00086	83 c4 08	 add	 esp, 8
  00089	89 45 e0	 mov	 DWORD PTR _file$1[ebp], eax

; 924  : 			fprintf (file, "%6.1f\n", framerate);

  0008c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?framerate@@3MA
  00094	83 ec 08	 sub	 esp, 8
  00097	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_06KNOGIDLD@?$CF6?41f?6@
  000a1	8b 45 e0	 mov	 eax, DWORD PTR _file$1[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 _fprintf
  000aa	83 c4 10	 add	 esp, 16			; 00000010H

; 925  : 			fclose (file);

  000ad	8b 45 e0	 mov	 eax, DWORD PTR _file$1[ebp]
  000b0	50		 push	 eax
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  000b7	83 c4 04	 add	 esp, 4
$LN3@ShowFramer:

; 926  : 		}
; 927  : 	}
; 928  : 
; 929  : 	if (command_line_framerate == 3)

  000ba	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_framerate@@3HA, 3 ; command_line_framerate
  000c1	75 33		 jne	 SHORT $LN4@ShowFramer

; 930  : 	{
; 931  : 		sprintf (buf, "%6.1f %6.1f", framerate, get_one_over_delta_time ());

  000c3	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_one_over_delta_time@@3MA
  000cb	83 ec 08	 sub	 esp, 8
  000ce	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000d3	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?framerate@@3MA
  000db	83 ec 08	 sub	 esp, 8
  000de	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FKGDCBFN@?$CF6?41f?5?$CF6?41f@
  000e8	8d 45 e4	 lea	 eax, DWORD PTR _buf$[ebp]
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 _sprintf
  000f1	83 c4 18	 add	 esp, 24			; 00000018H

; 932  : 	}
; 933  : 	else

  000f4	eb 21		 jmp	 SHORT $LN5@ShowFramer
$LN4@ShowFramer:

; 934  : 	{
; 935  : 		sprintf (buf, "%6.1f", framerate);

  000f6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?framerate@@3MA
  000fe	83 ec 08	 sub	 esp, 8
  00101	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_05GBNOBMHE@?$CF6?41f@
  0010b	8d 45 e4	 lea	 eax, DWORD PTR _buf$[ebp]
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 _sprintf
  00114	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@ShowFramer:

; 936  : 	}
; 937  : 	ui_display_text (buf, 10, 24);

  00117	51		 push	 ecx
  00118	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c00000
  00120	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00125	51		 push	 ecx
  00126	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  0012e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00133	8d 45 e4	 lea	 eax, DWORD PTR _buf$[ebp]
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0013c	dd d8		 fstp	 ST(0)

; 938  : }

  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c3		 ret	 0
?ShowFramerate@@YGXXZ ENDP				; ShowFramerate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?draw_view@@YGXXZ
_TEXT	SEGMENT
tv75 = -84						; size = 4
_old_angle$1 = -16					; size = 4
_old_angle$2 = -12					; size = 4
_old_angle$3 = -8					; size = 4
_old_angle$4 = -4					; size = 4
?draw_view@@YGXXZ PROC					; draw_view, COMDAT

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 376  : 	TIR_Poll (); // Retro 6Feb2005

  00009	e8 00 00 00 00	 call	 ?TIR_Poll@@YGXXZ	; TIR_Poll

; 377  : 
; 378  : 	update_field_of_view();	

  0000e	e8 00 00 00 00	 call	 ?update_field_of_view@@YGXXZ ; update_field_of_view

; 379  : 
; 380  : 	// Retro 6Feb2005 (whole block)
; 381  : 	if ((command_line_TIR_6DOF)&&(query_TIR_active() == TRUE)&&

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_TIR_6DOF@@3HA, 0 ; command_line_TIR_6DOF
  0001a	74 67		 je	 SHORT $LN4@draw_view
  0001c	e8 00 00 00 00	 call	 ?query_TIR_active@@YAHXZ ; query_TIR_active
  00021	83 f8 01	 cmp	 eax, 1
  00024	75 5d		 jne	 SHORT $LN4@draw_view
  00026	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 32 ; view_mode, 00000020H
  0002d	74 09		 je	 SHORT $LN5@draw_view
  0002f	83 3d 00 00 00
	00 25		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 37 ; view_mode, 00000025H
  00036	75 4b		 jne	 SHORT $LN4@draw_view
$LN5@draw_view:

; 382  : 		(( view_mode == VIEW_MODE_VIRTUAL_COCKPIT)||( view_mode == VIEW_MODE_VIRTUAL_COCKPIT_PERISCOPE )))
; 383  : 	{
; 384  : 		current_custom_cockpit_viewpoint.x = getViewpointOffsetX(current_custom_cockpit_viewpoint.x);

  00038	51		 push	 ecx
  00039	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A
  00041	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00046	e8 00 00 00 00	 call	 ?getViewpointOffsetX@@YGMM@Z ; getViewpointOffsetX
  0004b	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A

; 385  : 		current_custom_cockpit_viewpoint.y = getViewpointOffsetY(current_custom_cockpit_viewpoint.y);

  00051	51		 push	 ecx
  00052	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A+4
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	e8 00 00 00 00	 call	 ?getViewpointOffsetY@@YGMM@Z ; getViewpointOffsetY
  00064	d9 1d 04 00 00
	00		 fstp	 DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A+4

; 386  : 		current_custom_cockpit_viewpoint.z = getViewpointOffsetZ(current_custom_cockpit_viewpoint.z);

  0006a	51		 push	 ecx
  0006b	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A+8
  00073	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00078	e8 00 00 00 00	 call	 ?getViewpointOffsetZ@@YGMM@Z ; getViewpointOffsetZ
  0007d	d9 1d 08 00 00
	00		 fstp	 DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A+8
$LN4@draw_view:

; 387  : 	}
; 388  : 
; 389  :    switch (view_mode)

  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?view_mode@@3W4VIEW_MODES@@A ; view_mode
  00088	89 45 ac	 mov	 DWORD PTR tv75[ebp], eax
  0008b	83 7d ac 2b	 cmp	 DWORD PTR tv75[ebp], 43	; 0000002bH
  0008f	0f 87 11 04 00
	00		 ja	 $LN62@draw_view
  00095	8b 4d ac	 mov	 ecx, DWORD PTR tv75[ebp]
  00098	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN66@draw_view[ecx*4]
$LN6@draw_view:

; 390  :    {
; 391  : 	////////////////////////////////////////
; 392  : 	case VIEW_MODE_COCKPIT_PANEL_UP40_LEFT90:
; 393  : 	////////////////////////////////////////
; 394  : 	{
; 395  : 		 draw_fixed_cockpit_3d_view ();

  0009f	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 396  : 
; 397  : 		 draw_cockpit (COCKPIT_PANEL_UP40_LEFT90);

  000a4	6a 00		 push	 0
  000a6	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 398  : 
; 399  : 		 break;

  000ab	e9 09 04 00 00	 jmp	 $LN2@draw_view
$LN7@draw_view:

; 400  : 	}
; 401  : 	////////////////////////////////////////
; 402  : 	case VIEW_MODE_COCKPIT_PANEL_UP40_LEFT60:
; 403  : 	////////////////////////////////////////
; 404  : 	{
; 405  : 		 draw_fixed_cockpit_3d_view ();

  000b0	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 406  : 
; 407  : 		 draw_cockpit (COCKPIT_PANEL_UP40_LEFT60);

  000b5	6a 01		 push	 1
  000b7	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 408  : 
; 409  : 		 break;

  000bc	e9 f8 03 00 00	 jmp	 $LN2@draw_view
$LN8@draw_view:

; 410  : 	}
; 411  : 	////////////////////////////////////////
; 412  : 	case VIEW_MODE_COCKPIT_PANEL_UP40_LEFT30:
; 413  : 	////////////////////////////////////////
; 414  : 	{
; 415  : 		 draw_fixed_cockpit_3d_view ();

  000c1	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 416  : 
; 417  : 		 draw_cockpit (COCKPIT_PANEL_UP40_LEFT30);

  000c6	6a 02		 push	 2
  000c8	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 418  : 
; 419  : 		 break;

  000cd	e9 e7 03 00 00	 jmp	 $LN2@draw_view
$LN9@draw_view:

; 420  : 	}
; 421  : 	////////////////////////////////////////
; 422  : 	case VIEW_MODE_COCKPIT_PANEL_UP40_AHEAD:
; 423  : 	////////////////////////////////////////
; 424  : 	{
; 425  : 		 draw_fixed_cockpit_3d_view ();

  000d2	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 426  : 
; 427  : 		 draw_cockpit (COCKPIT_PANEL_UP40_AHEAD);

  000d7	6a 03		 push	 3
  000d9	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 428  : 
; 429  : 		 break;

  000de	e9 d6 03 00 00	 jmp	 $LN2@draw_view
$LN10@draw_view:

; 430  : 	}
; 431  : 	////////////////////////////////////////
; 432  : 	case VIEW_MODE_COCKPIT_PANEL_UP40_RIGHT30:
; 433  : 	////////////////////////////////////////
; 434  : 	{
; 435  : 		 draw_fixed_cockpit_3d_view ();

  000e3	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 436  : 
; 437  : 		 draw_cockpit (COCKPIT_PANEL_UP40_RIGHT30);

  000e8	6a 04		 push	 4
  000ea	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 438  : 
; 439  : 		 break;

  000ef	e9 c5 03 00 00	 jmp	 $LN2@draw_view
$LN11@draw_view:

; 440  : 	}
; 441  : 	////////////////////////////////////////
; 442  : 	case VIEW_MODE_COCKPIT_PANEL_UP40_RIGHT60:
; 443  : 	////////////////////////////////////////
; 444  : 	{
; 445  : 		 draw_fixed_cockpit_3d_view ();

  000f4	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 446  : 
; 447  : 		 draw_cockpit (COCKPIT_PANEL_UP40_RIGHT60);

  000f9	6a 05		 push	 5
  000fb	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 448  : 
; 449  : 		 break;

  00100	e9 b4 03 00 00	 jmp	 $LN2@draw_view
$LN12@draw_view:

; 450  : 	}
; 451  : 	////////////////////////////////////////
; 452  : 	case VIEW_MODE_COCKPIT_PANEL_UP40_RIGHT90:
; 453  : 	////////////////////////////////////////
; 454  : 	{
; 455  : 		 draw_fixed_cockpit_3d_view ();

  00105	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 456  : 
; 457  : 		 draw_cockpit (COCKPIT_PANEL_UP40_RIGHT90);

  0010a	6a 06		 push	 6
  0010c	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 458  : 
; 459  : 		 break;

  00111	e9 a3 03 00 00	 jmp	 $LN2@draw_view
$LN13@draw_view:

; 460  : 	}
; 461  : 	////////////////////////////////////////
; 462  : 	case VIEW_MODE_COCKPIT_PANEL_UP20_LEFT90:
; 463  : 	////////////////////////////////////////
; 464  : 	{
; 465  : 		 draw_fixed_cockpit_3d_view ();

  00116	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 466  : 
; 467  : 		 draw_cockpit (COCKPIT_PANEL_UP20_LEFT90);

  0011b	6a 07		 push	 7
  0011d	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 468  : 
; 469  : 		 break;

  00122	e9 92 03 00 00	 jmp	 $LN2@draw_view
$LN14@draw_view:

; 470  : 	}
; 471  : 	////////////////////////////////////////
; 472  : 	case VIEW_MODE_COCKPIT_PANEL_UP20_LEFT60:
; 473  : 	////////////////////////////////////////
; 474  : 	{
; 475  : 		 draw_fixed_cockpit_3d_view ();

  00127	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 476  : 
; 477  : 		 draw_cockpit (COCKPIT_PANEL_UP20_LEFT60);

  0012c	6a 08		 push	 8
  0012e	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 478  : 
; 479  : 		 break;

  00133	e9 81 03 00 00	 jmp	 $LN2@draw_view
$LN15@draw_view:

; 480  : 	}
; 481  : 	////////////////////////////////////////
; 482  : 	case VIEW_MODE_COCKPIT_PANEL_UP20_LEFT30:
; 483  : 	////////////////////////////////////////
; 484  : 	{
; 485  : 		 draw_fixed_cockpit_3d_view ();

  00138	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 486  : 
; 487  : 		 draw_cockpit (COCKPIT_PANEL_UP20_LEFT30);

  0013d	6a 09		 push	 9
  0013f	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 488  : 
; 489  : 		 break;

  00144	e9 70 03 00 00	 jmp	 $LN2@draw_view
$LN16@draw_view:

; 490  : 	}
; 491  : 	////////////////////////////////////////
; 492  : 	case VIEW_MODE_COCKPIT_PANEL_UP20_AHEAD:
; 493  : 	////////////////////////////////////////
; 494  : 	{
; 495  : 		 draw_fixed_cockpit_3d_view ();

  00149	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 496  : 
; 497  : 		 draw_cockpit (COCKPIT_PANEL_UP20_AHEAD);

  0014e	6a 0a		 push	 10			; 0000000aH
  00150	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 498  : 
; 499  : 		 break;

  00155	e9 5f 03 00 00	 jmp	 $LN2@draw_view
$LN17@draw_view:

; 500  : 	}
; 501  : 	////////////////////////////////////////
; 502  : 	case VIEW_MODE_COCKPIT_PANEL_UP20_RIGHT30:
; 503  : 	////////////////////////////////////////
; 504  : 	{
; 505  : 		 draw_fixed_cockpit_3d_view ();

  0015a	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 506  : 
; 507  : 		 draw_cockpit (COCKPIT_PANEL_UP20_RIGHT30);

  0015f	6a 0b		 push	 11			; 0000000bH
  00161	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 508  : 
; 509  : 		 break;

  00166	e9 4e 03 00 00	 jmp	 $LN2@draw_view
$LN18@draw_view:

; 510  : 	}
; 511  : 	////////////////////////////////////////
; 512  : 	case VIEW_MODE_COCKPIT_PANEL_UP20_RIGHT60:
; 513  : 	////////////////////////////////////////
; 514  : 	{
; 515  : 		 draw_fixed_cockpit_3d_view ();

  0016b	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 516  : 
; 517  : 		 draw_cockpit (COCKPIT_PANEL_UP20_RIGHT60);

  00170	6a 0c		 push	 12			; 0000000cH
  00172	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 518  : 
; 519  : 		 break;

  00177	e9 3d 03 00 00	 jmp	 $LN2@draw_view
$LN19@draw_view:

; 520  : 	}
; 521  : 	////////////////////////////////////////
; 522  : 	case VIEW_MODE_COCKPIT_PANEL_UP20_RIGHT90:
; 523  : 	////////////////////////////////////////
; 524  : 	{
; 525  : 		 draw_fixed_cockpit_3d_view ();

  0017c	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 526  : 
; 527  : 		 draw_cockpit (COCKPIT_PANEL_UP20_RIGHT90);

  00181	6a 0d		 push	 13			; 0000000dH
  00183	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 528  : 
; 529  : 		 break;

  00188	e9 2c 03 00 00	 jmp	 $LN2@draw_view
$LN20@draw_view:

; 530  : 	}
; 531  : 	////////////////////////////////////////
; 532  : 	case VIEW_MODE_COCKPIT_PANEL_LEVEL_LEFT90:
; 533  : 	////////////////////////////////////////
; 534  : 	{
; 535  : 		 draw_fixed_cockpit_3d_view ();

  0018d	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 536  : 
; 537  : 		 draw_cockpit (COCKPIT_PANEL_LEVEL_LEFT90);

  00192	6a 0e		 push	 14			; 0000000eH
  00194	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 538  : 
; 539  : 		 break;

  00199	e9 1b 03 00 00	 jmp	 $LN2@draw_view
$LN21@draw_view:

; 540  : 	}
; 541  : 	////////////////////////////////////////
; 542  : 	case VIEW_MODE_COCKPIT_PANEL_LEVEL_LEFT60:
; 543  : 	////////////////////////////////////////
; 544  : 	{
; 545  : 		 draw_fixed_cockpit_3d_view ();

  0019e	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 546  : 
; 547  : 		 draw_cockpit (COCKPIT_PANEL_LEVEL_LEFT60);

  001a3	6a 0f		 push	 15			; 0000000fH
  001a5	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 548  : 
; 549  : 		 break;

  001aa	e9 0a 03 00 00	 jmp	 $LN2@draw_view
$LN22@draw_view:

; 550  : 	}
; 551  : 	////////////////////////////////////////
; 552  : 	case VIEW_MODE_COCKPIT_PANEL_LEVEL_LEFT30:
; 553  : 	////////////////////////////////////////
; 554  : 	{
; 555  : 		 draw_fixed_cockpit_3d_view ();

  001af	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 556  : 
; 557  : 		 draw_cockpit (COCKPIT_PANEL_LEVEL_LEFT30);

  001b4	6a 10		 push	 16			; 00000010H
  001b6	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 558  : 
; 559  : 		 break;

  001bb	e9 f9 02 00 00	 jmp	 $LN2@draw_view
$LN23@draw_view:

; 560  : 	}
; 561  : 	////////////////////////////////////////
; 562  : 	case VIEW_MODE_COCKPIT_PANEL_LEVEL_AHEAD:
; 563  : 	////////////////////////////////////////
; 564  : 	{
; 565  : 		 draw_fixed_cockpit_3d_view ();

  001c0	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 566  : 
; 567  : 		 draw_cockpit (COCKPIT_PANEL_LEVEL_AHEAD);

  001c5	6a 11		 push	 17			; 00000011H
  001c7	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 568  : 
; 569  : 		 break;

  001cc	e9 e8 02 00 00	 jmp	 $LN2@draw_view
$LN24@draw_view:

; 570  : 	}
; 571  : 	////////////////////////////////////////
; 572  : 	case VIEW_MODE_COCKPIT_PANEL_LEVEL_RIGHT30:
; 573  : 	////////////////////////////////////////
; 574  : 	{
; 575  : 		 draw_fixed_cockpit_3d_view ();

  001d1	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 576  : 
; 577  : 		 draw_cockpit (COCKPIT_PANEL_LEVEL_RIGHT30);

  001d6	6a 12		 push	 18			; 00000012H
  001d8	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 578  : 
; 579  : 		 break;

  001dd	e9 d7 02 00 00	 jmp	 $LN2@draw_view
$LN25@draw_view:

; 580  : 	}
; 581  : 	////////////////////////////////////////
; 582  : 	case VIEW_MODE_COCKPIT_PANEL_LEVEL_RIGHT60:
; 583  : 	////////////////////////////////////////
; 584  : 	{
; 585  : 		 draw_fixed_cockpit_3d_view ();

  001e2	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 586  : 
; 587  : 		 draw_cockpit (COCKPIT_PANEL_LEVEL_RIGHT60);

  001e7	6a 13		 push	 19			; 00000013H
  001e9	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 588  : 
; 589  : 		 break;

  001ee	e9 c6 02 00 00	 jmp	 $LN2@draw_view
$LN26@draw_view:

; 590  : 	}
; 591  : 	////////////////////////////////////////
; 592  : 	case VIEW_MODE_COCKPIT_PANEL_LEVEL_RIGHT90:
; 593  : 	////////////////////////////////////////
; 594  : 	{
; 595  : 		 draw_fixed_cockpit_3d_view ();

  001f3	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 596  : 
; 597  : 		 draw_cockpit (COCKPIT_PANEL_LEVEL_RIGHT90);

  001f8	6a 14		 push	 20			; 00000014H
  001fa	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 598  : 
; 599  : 		 break;

  001ff	e9 b5 02 00 00	 jmp	 $LN2@draw_view
$LN27@draw_view:

; 600  : 	}
; 601  : 	////////////////////////////////////////
; 602  : 	case VIEW_MODE_COCKPIT_PANEL_DOWN20_LEFT90:
; 603  : 	////////////////////////////////////////
; 604  : 	{
; 605  : 		 draw_fixed_cockpit_3d_view ();

  00204	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 606  : 
; 607  : 		 draw_cockpit (COCKPIT_PANEL_DOWN20_LEFT90);

  00209	6a 15		 push	 21			; 00000015H
  0020b	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 608  : 
; 609  : 		 break;

  00210	e9 a4 02 00 00	 jmp	 $LN2@draw_view
$LN28@draw_view:

; 610  : 	}
; 611  : 	////////////////////////////////////////
; 612  : 	case VIEW_MODE_COCKPIT_PANEL_DOWN20_LEFT60:
; 613  : 	////////////////////////////////////////
; 614  : 	{
; 615  : 		 draw_fixed_cockpit_3d_view ();

  00215	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 616  : 
; 617  : 		 draw_cockpit (COCKPIT_PANEL_DOWN20_LEFT60);

  0021a	6a 16		 push	 22			; 00000016H
  0021c	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 618  : 
; 619  : 		 break;

  00221	e9 93 02 00 00	 jmp	 $LN2@draw_view
$LN29@draw_view:

; 620  : 	}
; 621  : 	////////////////////////////////////////
; 622  : 	case VIEW_MODE_COCKPIT_PANEL_DOWN20_LEFT30:
; 623  : 	////////////////////////////////////////
; 624  : 	{
; 625  : 		 draw_fixed_cockpit_3d_view ();

  00226	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 626  : 
; 627  : 			draw_cockpit (COCKPIT_PANEL_DOWN20_LEFT30);

  0022b	6a 17		 push	 23			; 00000017H
  0022d	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 628  : 
; 629  : 			break;

  00232	e9 82 02 00 00	 jmp	 $LN2@draw_view
$LN30@draw_view:

; 630  : 		}
; 631  : 		////////////////////////////////////////
; 632  : 		case VIEW_MODE_COCKPIT_PANEL_DOWN20_AHEAD:
; 633  : 		////////////////////////////////////////
; 634  : 		{
; 635  : 			draw_fixed_cockpit_3d_view ();

  00237	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 636  : 
; 637  : 			draw_cockpit (COCKPIT_PANEL_DOWN20_AHEAD);

  0023c	6a 18		 push	 24			; 00000018H
  0023e	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 638  : 
; 639  : 			break;

  00243	e9 71 02 00 00	 jmp	 $LN2@draw_view
$LN31@draw_view:

; 640  : 		}
; 641  : 		////////////////////////////////////////
; 642  : 		case VIEW_MODE_COCKPIT_PANEL_DOWN20_RIGHT30:
; 643  : 		////////////////////////////////////////
; 644  : 		{
; 645  : 			draw_fixed_cockpit_3d_view ();

  00248	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 646  : 
; 647  : 			draw_cockpit (COCKPIT_PANEL_DOWN20_RIGHT30);

  0024d	6a 19		 push	 25			; 00000019H
  0024f	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 648  : 
; 649  : 			break;

  00254	e9 60 02 00 00	 jmp	 $LN2@draw_view
$LN32@draw_view:

; 650  : 		}
; 651  : 		////////////////////////////////////////
; 652  : 		case VIEW_MODE_COCKPIT_PANEL_DOWN20_RIGHT60:
; 653  : 		////////////////////////////////////////
; 654  : 		{
; 655  : 			draw_fixed_cockpit_3d_view ();

  00259	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 656  : 
; 657  : 			draw_cockpit (COCKPIT_PANEL_DOWN20_RIGHT60);

  0025e	6a 1a		 push	 26			; 0000001aH
  00260	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 658  : 
; 659  : 			break;

  00265	e9 4f 02 00 00	 jmp	 $LN2@draw_view
$LN33@draw_view:

; 660  : 		}
; 661  : 		////////////////////////////////////////
; 662  : 		case VIEW_MODE_COCKPIT_PANEL_DOWN20_RIGHT90:
; 663  : 		////////////////////////////////////////
; 664  : 		{
; 665  : 			draw_fixed_cockpit_3d_view ();

  0026a	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 666  : 
; 667  : 			draw_cockpit (COCKPIT_PANEL_DOWN20_RIGHT90);

  0026f	6a 1b		 push	 27			; 0000001bH
  00271	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 668  : 
; 669  : 			break;

  00276	e9 3e 02 00 00	 jmp	 $LN2@draw_view
$LN34@draw_view:

; 670  : 		}
; 671  : 		////////////////////////////////////////
; 672  : 		case VIEW_MODE_COCKPIT_PANEL_SPECIAL_APACHE_LHS_MFD:
; 673  : 		////////////////////////////////////////
; 674  : 		{
; 675  : 			if ((!full_screen_hi_res) && (application_video_colourdepth == 16))

  0027b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?full_screen_hi_res@@3HA, 0 ; full_screen_hi_res
  00282	75 12		 jne	 SHORT $LN35@draw_view
  00284	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?application_video_colourdepth@@3HA, 16 ; application_video_colourdepth, 00000010H
  0028b	75 09		 jne	 SHORT $LN35@draw_view

; 676  : 			{
; 677  : 				draw_cockpit (COCKPIT_PANEL_SPECIAL_APACHE_LHS_MFD);

  0028d	6a 1c		 push	 28			; 0000001cH
  0028f	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 678  : 			}
; 679  : 			else

  00294	eb 35		 jmp	 SHORT $LN36@draw_view
$LN35@draw_view:

; 680  : 			{
; 681  : 				float old_angle = full_screen_width_view_angle;

  00296	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  0029e	f3 0f 11 45 fc	 movss	 DWORD PTR _old_angle$4[ebp], xmm0

; 682  : 
; 683  : 				set_view_angles(rad(59.99));

  002a3	51		 push	 ecx
  002a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f8604da
  002ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b1	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles

; 684  : 
; 685  : 				draw_virtual_cockpit_3d_display_view ();

  002b6	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_display_view@@YGXXZ ; draw_virtual_cockpit_3d_display_view

; 686  : 
; 687  : 				set_view_angles(old_angle);

  002bb	51		 push	 ecx
  002bc	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _old_angle$4[ebp]
  002c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c6	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles
$LN36@draw_view:

; 688  : 			}
; 689  : 
; 690  : 			break;

  002cb	e9 e9 01 00 00	 jmp	 $LN2@draw_view
$LN37@draw_view:

; 691  : 		}
; 692  : 		////////////////////////////////////////
; 693  : 		case VIEW_MODE_COCKPIT_PANEL_SPECIAL_APACHE_RHS_MFD:
; 694  : 		////////////////////////////////////////
; 695  : 		{
; 696  : 			if ((!full_screen_hi_res) && (application_video_colourdepth == 16))

  002d0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?full_screen_hi_res@@3HA, 0 ; full_screen_hi_res
  002d7	75 12		 jne	 SHORT $LN38@draw_view
  002d9	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?application_video_colourdepth@@3HA, 16 ; application_video_colourdepth, 00000010H
  002e0	75 09		 jne	 SHORT $LN38@draw_view

; 697  : 			{
; 698  : 				draw_cockpit (COCKPIT_PANEL_SPECIAL_APACHE_RHS_MFD);

  002e2	6a 1d		 push	 29			; 0000001dH
  002e4	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 699  : 			}
; 700  : 			else

  002e9	eb 35		 jmp	 SHORT $LN39@draw_view
$LN38@draw_view:

; 701  : 			{
; 702  : 				float old_angle = full_screen_width_view_angle;

  002eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  002f3	f3 0f 11 45 f8	 movss	 DWORD PTR _old_angle$3[ebp], xmm0

; 703  : 
; 704  : 				set_view_angles(rad(59.99));

  002f8	51		 push	 ecx
  002f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f8604da
  00301	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00306	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles

; 705  : 				
; 706  : 				draw_virtual_cockpit_3d_display_view ();

  0030b	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_display_view@@YGXXZ ; draw_virtual_cockpit_3d_display_view

; 707  : 
; 708  : 				set_view_angles(old_angle);

  00310	51		 push	 ecx
  00311	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _old_angle$3[ebp]
  00316	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031b	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles
$LN39@draw_view:

; 709  : 			}
; 710  : 
; 711  : 			break;

  00320	e9 94 01 00 00	 jmp	 $LN2@draw_view
$LN40@draw_view:

; 712  : 		}
; 713  : 		////////////////////////////////////////
; 714  : 		case VIEW_MODE_COCKPIT_PANEL_SPECIAL_HAVOC_TV:
; 715  : 		////////////////////////////////////////
; 716  : 		{
; 717  : 			if ((!full_screen_hi_res) && (application_video_colourdepth == 16))

  00325	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?full_screen_hi_res@@3HA, 0 ; full_screen_hi_res
  0032c	75 12		 jne	 SHORT $LN41@draw_view
  0032e	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?application_video_colourdepth@@3HA, 16 ; application_video_colourdepth, 00000010H
  00335	75 09		 jne	 SHORT $LN41@draw_view

; 718  : 			{
; 719  : 				draw_cockpit (COCKPIT_PANEL_SPECIAL_HAVOC_TV);

  00337	6a 1e		 push	 30			; 0000001eH
  00339	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 720  : 			}
; 721  : 			else

  0033e	eb 35		 jmp	 SHORT $LN42@draw_view
$LN41@draw_view:

; 722  : 			{
; 723  : 				float old_angle = full_screen_width_view_angle;

  00340	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  00348	f3 0f 11 45 f4	 movss	 DWORD PTR _old_angle$2[ebp], xmm0

; 724  : 
; 725  : 				set_view_angles(rad(59.99));

  0034d	51		 push	 ecx
  0034e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f8604da
  00356	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035b	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles

; 726  : 				
; 727  : 				draw_virtual_cockpit_3d_display_view ();

  00360	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_display_view@@YGXXZ ; draw_virtual_cockpit_3d_display_view

; 728  : 
; 729  : 				set_view_angles(old_angle);

  00365	51		 push	 ecx
  00366	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _old_angle$2[ebp]
  0036b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00370	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles
$LN42@draw_view:

; 730  : 			}
; 731  : 
; 732  : 			break;

  00375	e9 3f 01 00 00	 jmp	 $LN2@draw_view
$LN43@draw_view:

; 733  : 		}
; 734  : 		////////////////////////////////////////
; 735  : 		case VIEW_MODE_COCKPIT_PANEL_SPECIAL_HAVOC_HUD:
; 736  : 		////////////////////////////////////////
; 737  : 		{
; 738  : 			if ((!full_screen_hi_res) && (application_video_colourdepth == 16))

  0037a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?full_screen_hi_res@@3HA, 0 ; full_screen_hi_res
  00381	75 17		 jne	 SHORT $LN44@draw_view
  00383	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?application_video_colourdepth@@3HA, 16 ; application_video_colourdepth, 00000010H
  0038a	75 0e		 jne	 SHORT $LN44@draw_view

; 739  : 			{
; 740  : 				draw_fixed_cockpit_3d_view ();

  0038c	e8 00 00 00 00	 call	 ?draw_fixed_cockpit_3d_view@@YGXXZ ; draw_fixed_cockpit_3d_view

; 741  : 
; 742  : 				draw_cockpit (COCKPIT_PANEL_SPECIAL_HAVOC_HUD);

  00391	6a 1f		 push	 31			; 0000001fH
  00393	e8 00 00 00 00	 call	 ?draw_cockpit@@YGXW4COCKPIT_PANELS@@@Z ; draw_cockpit

; 743  : 			}
; 744  : 			else

  00398	eb 35		 jmp	 SHORT $LN45@draw_view
$LN44@draw_view:

; 745  : 			{
; 746  : 				float old_angle = full_screen_width_view_angle;

  0039a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  003a2	f3 0f 11 45 f0	 movss	 DWORD PTR _old_angle$1[ebp], xmm0

; 747  : 
; 748  : 				set_view_angles(rad(40.0));

  003a7	51		 push	 ecx
  003a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f32b8c2
  003b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b5	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles

; 749  : 
; 750  : 				draw_virtual_cockpit_3d_hud_view ();

  003ba	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_hud_view@@YGXXZ ; draw_virtual_cockpit_3d_hud_view

; 751  : 				
; 752  : 				set_view_angles(old_angle);

  003bf	51		 push	 ecx
  003c0	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _old_angle$1[ebp]
  003c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ca	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles
$LN45@draw_view:

; 753  : 			}
; 754  : 
; 755  : 			break;

  003cf	e9 e5 00 00 00	 jmp	 $LN2@draw_view
$LN46@draw_view:

; 756  : 		}
; 757  : 		////////////////////////////////////////
; 758  : 		case VIEW_MODE_VIRTUAL_COCKPIT:
; 759  : 		////////////////////////////////////////
; 760  : 		{
; 761  : 			if (command_line_TIR_6DOF && query_TIR_active() && TIR_looking_in_periscope())

  003d4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_TIR_6DOF@@3HA, 0 ; command_line_TIR_6DOF
  003db	74 2a		 je	 SHORT $LN47@draw_view
  003dd	e8 00 00 00 00	 call	 ?query_TIR_active@@YAHXZ ; query_TIR_active
  003e2	85 c0		 test	 eax, eax
  003e4	74 21		 je	 SHORT $LN47@draw_view
  003e6	e8 00 00 00 00	 call	 ?TIR_looking_in_periscope@@YGHXZ ; TIR_looking_in_periscope
  003eb	85 c0		 test	 eax, eax
  003ed	74 18		 je	 SHORT $LN47@draw_view

; 762  : 			{
; 763  : 				in_tir_periscope = TRUE;

  003ef	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?in_tir_periscope@@3HA, 1

; 764  : 				set_view_mode ( VIEW_MODE_VIRTUAL_COCKPIT_PERISCOPE);

  003f9	6a 25		 push	 37			; 00000025H
  003fb	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode

; 765  : 				draw_virtual_cockpit_3d_periscope_view ();

  00400	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_periscope_view@@YGXXZ ; draw_virtual_cockpit_3d_periscope_view

; 766  : 			}
; 767  : 			else

  00405	eb 05		 jmp	 SHORT $LN48@draw_view
$LN47@draw_view:

; 768  : 				draw_virtual_cockpit_3d_view ();

  00407	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_view@@YGXXZ ; draw_virtual_cockpit_3d_view
$LN48@draw_view:

; 769  : 
; 770  : 			break;

  0040c	e9 a8 00 00 00	 jmp	 $LN2@draw_view
$LN49@draw_view:

; 771  : 		}
; 772  : 		////////////////////////////////////////
; 773  : 		case VIEW_MODE_VIRTUAL_COCKPIT_PADLOCK:
; 774  : 		////////////////////////////////////////
; 775  : 		{
; 776  : 			draw_virtual_cockpit_3d_view ();

  00411	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_view@@YGXXZ ; draw_virtual_cockpit_3d_view

; 777  : 
; 778  : 			break;

  00416	e9 9e 00 00 00	 jmp	 $LN2@draw_view
$LN50@draw_view:

; 779  : 		}
; 780  : 		////////////////////////////////////////
; 781  : 		case VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET:
; 782  : 		////////////////////////////////////////
; 783  : 		{
; 784  : 			draw_virtual_cockpit_3d_view ();

  0041b	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_view@@YGXXZ ; draw_virtual_cockpit_3d_view

; 785  : 
; 786  : 			break;

  00420	e9 94 00 00 00	 jmp	 $LN2@draw_view
$LN51@draw_view:

; 787  : 		}
; 788  : 		////////////////////////////////////////
; 789  : 		case VIEW_MODE_VIRTUAL_COCKPIT_CREW:
; 790  : 		////////////////////////////////////////
; 791  : 		{
; 792  : 			draw_virtual_cockpit_3d_crew_view ();

  00425	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_crew_view@@YGXXZ ; draw_virtual_cockpit_3d_crew_view

; 793  : 
; 794  : 			break;

  0042a	e9 8a 00 00 00	 jmp	 $LN2@draw_view
$LN52@draw_view:

; 795  : 		}
; 796  : 		////////////////////////////////////////
; 797  : 		case VIEW_MODE_VIRTUAL_COCKPIT_HUD:
; 798  : 		////////////////////////////////////////
; 799  : 		{
; 800  : 			draw_virtual_cockpit_3d_hud_view ();

  0042f	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_hud_view@@YGXXZ ; draw_virtual_cockpit_3d_hud_view

; 801  : 
; 802  : 			break;

  00434	e9 80 00 00 00	 jmp	 $LN2@draw_view
$LN53@draw_view:

; 803  : 		}
; 804  : 		////////////////////////////////////////
; 805  : 		case VIEW_MODE_VIRTUAL_COCKPIT_PERISCOPE:
; 806  : 		////////////////////////////////////////
; 807  : 		{
; 808  : 			if (in_tir_periscope && command_line_TIR_6DOF && query_TIR_active() && !TIR_looking_in_periscope())

  00439	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_tir_periscope@@3HA, 0
  00440	74 33		 je	 SHORT $LN54@draw_view
  00442	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_TIR_6DOF@@3HA, 0 ; command_line_TIR_6DOF
  00449	74 2a		 je	 SHORT $LN54@draw_view
  0044b	e8 00 00 00 00	 call	 ?query_TIR_active@@YAHXZ ; query_TIR_active
  00450	85 c0		 test	 eax, eax
  00452	74 21		 je	 SHORT $LN54@draw_view
  00454	e8 00 00 00 00	 call	 ?TIR_looking_in_periscope@@YGHXZ ; TIR_looking_in_periscope
  00459	85 c0		 test	 eax, eax
  0045b	75 18		 jne	 SHORT $LN54@draw_view

; 809  : 			{
; 810  : 				set_view_mode ( VIEW_MODE_VIRTUAL_COCKPIT );

  0045d	6a 20		 push	 32			; 00000020H
  0045f	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode

; 811  : 				draw_virtual_cockpit_3d_view ();

  00464	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_view@@YGXXZ ; draw_virtual_cockpit_3d_view

; 812  : 				in_tir_periscope = FALSE;

  00469	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?in_tir_periscope@@3HA, 0

; 813  : 			}
; 814  : 			else	// original Razorworks call..

  00473	eb 05		 jmp	 SHORT $LN55@draw_view
$LN54@draw_view:

; 815  : 				draw_virtual_cockpit_3d_periscope_view ();

  00475	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_periscope_view@@YGXXZ ; draw_virtual_cockpit_3d_periscope_view
$LN55@draw_view:

; 816  : 
; 817  : 			break;

  0047a	eb 3d		 jmp	 SHORT $LN2@draw_view
$LN56@draw_view:

; 818  : 		}
; 819  : 		////////////////////////////////////////
; 820  : 		case VIEW_MODE_VIRTUAL_COCKPIT_PILOT_LHS_DISPLAY:
; 821  : 		////////////////////////////////////////
; 822  : 		{
; 823  : 			draw_virtual_cockpit_3d_display_view ();

  0047c	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_display_view@@YGXXZ ; draw_virtual_cockpit_3d_display_view

; 824  : 
; 825  : 			break;

  00481	eb 36		 jmp	 SHORT $LN2@draw_view
$LN57@draw_view:

; 826  : 		}
; 827  : 		////////////////////////////////////////
; 828  : 		case VIEW_MODE_VIRTUAL_COCKPIT_PILOT_RHS_DISPLAY:
; 829  : 		////////////////////////////////////////
; 830  : 		{
; 831  : 			draw_virtual_cockpit_3d_display_view ();

  00483	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_display_view@@YGXXZ ; draw_virtual_cockpit_3d_display_view

; 832  : 
; 833  : 			break;

  00488	eb 2f		 jmp	 SHORT $LN2@draw_view
$LN58@draw_view:

; 834  : 		}
; 835  : 		////////////////////////////////////////
; 836  : 		case VIEW_MODE_VIRTUAL_COCKPIT_CO_PILOT_LHS_DISPLAY:
; 837  : 		////////////////////////////////////////
; 838  : 		{
; 839  : 			draw_virtual_cockpit_3d_display_view ();

  0048a	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_display_view@@YGXXZ ; draw_virtual_cockpit_3d_display_view

; 840  : 
; 841  : 			break;

  0048f	eb 28		 jmp	 SHORT $LN2@draw_view
$LN59@draw_view:

; 842  : 		}
; 843  : 		////////////////////////////////////////
; 844  : 		case VIEW_MODE_VIRTUAL_COCKPIT_CO_PILOT_RHS_DISPLAY:
; 845  : 		////////////////////////////////////////
; 846  : 		{
; 847  : 			draw_virtual_cockpit_3d_display_view ();

  00491	e8 00 00 00 00	 call	 ?draw_virtual_cockpit_3d_display_view@@YGXXZ ; draw_virtual_cockpit_3d_display_view

; 848  : 
; 849  : 			break;

  00496	eb 21		 jmp	 SHORT $LN2@draw_view
$LN60@draw_view:

; 850  : 		}
; 851  : 		////////////////////////////////////////
; 852  : 		case VIEW_MODE_EXTERNAL:
; 853  : 		////////////////////////////////////////
; 854  : 		{
; 855  : 			draw_external_3d_view ();

  00498	e8 00 00 00 00	 call	 ?draw_external_3d_view@@YGXXZ ; draw_external_3d_view

; 856  : 
; 857  : 			break;

  0049d	eb 1a		 jmp	 SHORT $LN2@draw_view
$LN61@draw_view:

; 858  : 		}
; 859  : 		////////////////////////////////////////
; 860  : 		case VIEW_MODE_SAFE:
; 861  : 		////////////////////////////////////////
; 862  : 		{
; 863  : 			draw_safe_3d_view ();

  0049f	e8 00 00 00 00	 call	 ?draw_safe_3d_view@@YGXXZ ; draw_safe_3d_view

; 864  : 
; 865  : 			break;

  004a4	eb 13		 jmp	 SHORT $LN2@draw_view
$LN62@draw_view:

; 866  : 		}
; 867  : 		////////////////////////////////////////
; 868  : 		default:
; 869  : 		////////////////////////////////////////
; 870  : 		{
; 871  : 			debug_fatal ("Invalid view mode = %d", view_mode);

  004a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?view_mode@@3W4VIEW_MODES@@A ; view_mode
  004ab	50		 push	 eax
  004ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KFJLEDAI@Invalid?5view?5mode?5?$DN?5?$CFd@
  004b1	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  004b6	83 c4 08	 add	 esp, 8
$LN2@draw_view:

; 872  : 
; 873  : 			break;
; 874  : 		}
; 875  : 	}
; 876  : 
; 877  : 	////////////////////////////////////////
; 878  : 	//
; 879  : 	// display text
; 880  : 	//
; 881  : 	////////////////////////////////////////
; 882  : 
; 883  : 	if (begin_3d_scene ())

  004b9	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  004be	85 c0		 test	 eax, eax
  004c0	74 2c		 je	 SHORT $LN63@draw_view

; 884  : 	{
; 885  : 
; 886  : 		set_full_screen_viewport ();

  004c2	e8 00 00 00 00	 call	 ?set_full_screen_viewport@@YGXXZ ; set_full_screen_viewport

; 887  : 
; 888  : 		display_in_flight_messages ();

  004c7	e8 00 00 00 00	 call	 ?display_in_flight_messages@@YGXXZ ; display_in_flight_messages

; 889  : 
; 890  : 		display_time_acceleration ();

  004cc	e8 00 00 00 00	 call	 ?display_time_acceleration@@YGXXZ ; display_time_acceleration

; 891  : 
; 892  : 		display_status_message ();

  004d1	e8 00 00 00 00	 call	 ?display_status_message@@YGXXZ ; display_status_message

; 893  : 
; 894  : 		display_eject_message ();

  004d6	e8 00 00 00 00	 call	 ?display_eject_message@@YGXXZ ; display_eject_message

; 895  : 
; 896  : //VJ framerate 24-mar-03
; 897  : 		if (command_line_framerate)

  004db	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_framerate@@3HA, 0 ; command_line_framerate
  004e2	74 05		 je	 SHORT $LN64@draw_view

; 898  : 			ShowFramerate();

  004e4	e8 00 00 00 00	 call	 ?ShowFramerate@@YGXXZ	; ShowFramerate
$LN64@draw_view:

; 899  : 
; 900  : 		end_3d_scene ();

  004e9	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN63@draw_view:

; 901  : 	}
; 902  : }

  004ee	5f		 pop	 edi
  004ef	5e		 pop	 esi
  004f0	5b		 pop	 ebx
  004f1	8b e5		 mov	 esp, ebp
  004f3	5d		 pop	 ebp
  004f4	c3		 ret	 0
  004f5	0f 1f 00	 npad	 3
$LN66@draw_view:
  004f8	00 00 00 00	 DD	 $LN6@draw_view
  004fc	00 00 00 00	 DD	 $LN7@draw_view
  00500	00 00 00 00	 DD	 $LN8@draw_view
  00504	00 00 00 00	 DD	 $LN9@draw_view
  00508	00 00 00 00	 DD	 $LN10@draw_view
  0050c	00 00 00 00	 DD	 $LN11@draw_view
  00510	00 00 00 00	 DD	 $LN12@draw_view
  00514	00 00 00 00	 DD	 $LN13@draw_view
  00518	00 00 00 00	 DD	 $LN14@draw_view
  0051c	00 00 00 00	 DD	 $LN15@draw_view
  00520	00 00 00 00	 DD	 $LN16@draw_view
  00524	00 00 00 00	 DD	 $LN17@draw_view
  00528	00 00 00 00	 DD	 $LN18@draw_view
  0052c	00 00 00 00	 DD	 $LN19@draw_view
  00530	00 00 00 00	 DD	 $LN20@draw_view
  00534	00 00 00 00	 DD	 $LN21@draw_view
  00538	00 00 00 00	 DD	 $LN22@draw_view
  0053c	00 00 00 00	 DD	 $LN23@draw_view
  00540	00 00 00 00	 DD	 $LN24@draw_view
  00544	00 00 00 00	 DD	 $LN25@draw_view
  00548	00 00 00 00	 DD	 $LN26@draw_view
  0054c	00 00 00 00	 DD	 $LN27@draw_view
  00550	00 00 00 00	 DD	 $LN28@draw_view
  00554	00 00 00 00	 DD	 $LN29@draw_view
  00558	00 00 00 00	 DD	 $LN30@draw_view
  0055c	00 00 00 00	 DD	 $LN31@draw_view
  00560	00 00 00 00	 DD	 $LN32@draw_view
  00564	00 00 00 00	 DD	 $LN33@draw_view
  00568	00 00 00 00	 DD	 $LN34@draw_view
  0056c	00 00 00 00	 DD	 $LN37@draw_view
  00570	00 00 00 00	 DD	 $LN40@draw_view
  00574	00 00 00 00	 DD	 $LN43@draw_view
  00578	00 00 00 00	 DD	 $LN46@draw_view
  0057c	00 00 00 00	 DD	 $LN49@draw_view
  00580	00 00 00 00	 DD	 $LN50@draw_view
  00584	00 00 00 00	 DD	 $LN51@draw_view
  00588	00 00 00 00	 DD	 $LN52@draw_view
  0058c	00 00 00 00	 DD	 $LN53@draw_view
  00590	00 00 00 00	 DD	 $LN56@draw_view
  00594	00 00 00 00	 DD	 $LN57@draw_view
  00598	00 00 00 00	 DD	 $LN58@draw_view
  0059c	00 00 00 00	 DD	 $LN59@draw_view
  005a0	00 00 00 00	 DD	 $LN60@draw_view
  005a4	00 00 00 00	 DD	 $LN61@draw_view
?draw_view@@YGXXZ ENDP					; draw_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?get_status_message_type@@YG?AW4STATUS_MESSAGE_TYPES@@XZ
_TEXT	SEGMENT
?get_status_message_type@@YG?AW4STATUS_MESSAGE_TYPES@@XZ PROC ; get_status_message_type, COMDAT

; 226  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 227  : 	return (status_message_type);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?status_message_type@@3W4STATUS_MESSAGE_TYPES@@A

; 228  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_status_message_type@@YG?AW4STATUS_MESSAGE_TYPES@@XZ ENDP ; get_status_message_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?get_status_message_displayed@@YGHXZ
_TEXT	SEGMENT
tv66 = -68						; size = 4
?get_status_message_displayed@@YGHXZ PROC		; get_status_message_displayed, COMDAT

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 218  : 	return (status_message_timer > 0.0);

  00009	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?status_message_timer@@3MA
  00011	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00019	76 09		 jbe	 SHORT $LN3@get_status
  0001b	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN4@get_status
$LN3@get_status:
  00024	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@get_status:
  0002b	8b 45 bc	 mov	 eax, DWORD PTR tv66[ebp]

; 219  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?get_status_message_displayed@@YGHXZ ENDP		; get_status_message_displayed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_type$ = 12						; size = 4
?set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z PROC ; set_status_message, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 125  : 	ASSERT ((type >= 0) && (type < NUM_STATUS_MESSAGE_TYPES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _type$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@set_status
  0000f	83 7d 0c 03	 cmp	 DWORD PTR _type$[ebp], 3
  00013	7c 18		 jl	 SHORT $LN2@set_status
$LN3@set_status:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@LMCEIHGD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@EHOCGBKO@?$CItype?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CItype?5?$DM?5NUM_STAT@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_status:

; 126  : 
; 127  : 	if (status_message_type != STATUS_MESSAGE_TYPE_ALERT)

  0002d	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?status_message_type@@3W4STATUS_MESSAGE_TYPES@@A, 1
  00034	74 65		 je	 SHORT $LN6@set_status

; 128  : 	{
; 129  : 		if (s)

  00036	83 7d 08 00	 cmp	 DWORD PTR _s$[ebp], 0
  0003a	74 5a		 je	 SHORT $LN5@set_status

; 130  : 		{
; 131  : 			if (strlen (s))

  0003c	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 _strlen
  00045	83 c4 04	 add	 esp, 4
  00048	85 c0		 test	 eax, eax
  0004a	74 43		 je	 SHORT $LN7@set_status

; 132  : 			{
; 133  : 				strcpy (status_message, s);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  0004f	50		 push	 eax
  00050	68 00 00 00 00	 push	 OFFSET ?status_message@@3PADA
  00055	e8 00 00 00 00	 call	 _strcpy
  0005a	83 c4 08	 add	 esp, 8

; 134  : 
; 135  : 				if (type == STATUS_MESSAGE_TYPE_ALERT)

  0005d	83 7d 0c 01	 cmp	 DWORD PTR _type$[ebp], 1
  00061	75 12		 jne	 SHORT $LN9@set_status

; 136  : 				{
; 137  : 					status_message_timer = 5.0 * STATUS_MESSAGE_FLASH_PERIOD;

  00063	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@409fd70a
  0006b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?status_message_timer@@3MA, xmm0

; 138  : 				}
; 139  : 				else

  00073	eb 10		 jmp	 SHORT $LN10@set_status
$LN9@set_status:

; 140  : 				{
; 141  : 					status_message_timer = 3.0;

  00075	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  0007d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?status_message_timer@@3MA, xmm0
$LN10@set_status:

; 142  : 				}
; 143  : 
; 144  : 				status_message_type = type;

  00085	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00088	a3 00 00 00 00	 mov	 DWORD PTR ?status_message_type@@3W4STATUS_MESSAGE_TYPES@@A, eax

; 145  : 			}
; 146  : 			else

  0008d	eb 05		 jmp	 SHORT $LN8@set_status
$LN7@set_status:

; 147  : 			{
; 148  : 				clear_status_message ();

  0008f	e8 00 00 00 00	 call	 ?clear_status_message@@YGXXZ ; clear_status_message
$LN8@set_status:

; 149  : 			}
; 150  : 		}
; 151  : 		else

  00094	eb 05		 jmp	 SHORT $LN6@set_status
$LN5@set_status:

; 152  : 		{
; 153  : 			clear_status_message ();

  00096	e8 00 00 00 00	 call	 ?clear_status_message@@YGXXZ ; clear_status_message
$LN6@set_status:

; 154  : 		}
; 155  : 	}
; 156  : }

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
?set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z ENDP ; set_status_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_draw.c
;	COMDAT ?initialise_status_message@@YGXXZ
_TEXT	SEGMENT
?initialise_status_message@@YGXXZ PROC			; initialise_status_message, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 116  : 	clear_status_message ();

  00009	e8 00 00 00 00	 call	 ?clear_status_message@@YGXXZ ; clear_status_message

; 117  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?initialise_status_message@@YGXXZ ENDP			; initialise_status_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 835  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Stream$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vfprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 840  :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 841  :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 842  :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	52		 push	 edx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  0002b	83 c4 18	 add	 esp, 24			; 00000018H

; 644  :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
