; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\misc\airspeed.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_fmodf
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?get_air_density@@YGMM@Z			; get_air_density
PUBLIC	?convert_true_airspeed_to_indicated_airspeed@@YGMMM@Z ; convert_true_airspeed_to_indicated_airspeed
PUBLIC	?convert_indicated_airspeed_to_true_airspeed@@YGMMM@Z ; convert_indicated_airspeed_to_true_airspeed
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@4051f948
PUBLIC	__real@408f400000000000
PUBLIC	__real@40f116f000000000
PUBLIC	__real@447a0000
EXTRN	_fmod:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@40f116f000000000
CONST	SEGMENT
__real@40f116f000000000 DQ 040f116f000000000r	; 69999
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4051f948
CONST	SEGMENT
__real@4051f948 DD 04051f948r			; 3.28084
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
_DATA	SEGMENT
?air_density_table@@3PAMA DD 03f800000r		; 1	; air_density_table
	DD	03f7c28f6r			; 0.985
	DD	03f789375r			; 0.971
	DD	03f74fdf4r			; 0.957
	DD	03f7126e9r			; 0.942
	DD	03f6d9168r			; 0.928
	DD	03f69fbe7r			; 0.914
	DD	03f666666r			; 0.9
	DD	03f63126fr			; 0.887
	DD	03f5f7ceer			; 0.873
	DD	03f5be76dr			; 0.859
	DD	03f589375r			; 0.846
	DD	03f553f7dr			; 0.833
	DD	03f51a9fcr			; 0.819
	DD	03f4e5604r			; 0.806
	DD	03f4b020cr			; 0.793
	DD	03f47ae14r			; 0.78
	DD	03f449ba6r			; 0.768
	DD	03f4147aer			; 0.755
	DD	03f3df3b6r			; 0.742
	DD	03f3ae148r			; 0.73
	DD	03f37ced9r			; 0.718
	DD	03f347ae1r			; 0.705
	DD	03f316873r			; 0.693
	DD	03f2e5604r			; 0.681
	DD	03f2b4396r			; 0.669
	DD	03f272b02r			; 0.653
	DD	03f256042r			; 0.646
	DD	03f228f5cr			; 0.635
	DD	03f1f7ceer			; 0.623
	DD	03f1cac08r			; 0.612
	DD	03f19db23r			; 0.601
	DD	03f16c8b4r			; 0.589
	DD	03f13f7cfr			; 0.578
	DD	03f116873r			; 0.568
	DD	03f0e978dr			; 0.557
	DD	03f0bc6a8r			; 0.546
	DD	03f0872b0r			; 0.533
	DD	03f056042r			; 0.521
	DD	03f020c4ar			; 0.508
	DD	03efdf3b6r			; 0.496
	DD	03ef851ecr			; 0.485
	DD	03ef22d0er			; 0.473
	DD	03eec8b44r			; 0.462
	DD	03ee6e979r			; 0.451
	DD	03ee147aer			; 0.44
	DD	03edc28f6r			; 0.43
	DD	03ed6872br			; 0.419
	DD	03ed16873r			; 0.409
	DD	03ecccccdr			; 0.4
	DD	03ec7ae14r			; 0.39
	DD	03ec3126fr			; 0.381
	DD	03ebe76c9r			; 0.372
	DD	03eb9db23r			; 0.363
	DD	03eb53f7dr			; 0.354
	DD	03eb126e9r			; 0.346
	DD	03eac8b44r			; 0.337
	DD	03ea872b0r			; 0.329
	DD	03ea4dd2fr			; 0.322
	DD	03ea0c49cr			; 0.314
	DD	03e9d2f1br			; 0.307
	DD	03e991687r			; 0.299
	DD	03e958106r			; 0.292
	DD	03e91eb85r			; 0.285
	DD	03e8e5604r			; 0.278
	DD	03e8b4396r			; 0.272
	DD	03e87ae14r			; 0.265
	DD	03e849ba6r			; 0.259
	DD	03e810625r			; 0.252
	DD	03e7be76dr			; 0.246
	DD	03e76c8b4r			; 0.241
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\airspeed.c
;	COMDAT ?convert_indicated_airspeed_to_true_airspeed@@YGMMM@Z
_TEXT	SEGMENT
_true_airspeed$ = -8					; size = 4
_air_density$ = -4					; size = 4
_indicated_airspeed$ = 8				; size = 4
_altitude$ = 12						; size = 4
?convert_indicated_airspeed_to_true_airspeed@@YGMMM@Z PROC ; convert_indicated_airspeed_to_true_airspeed, COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 213  : 	float
; 214  : 		air_density,
; 215  : 		true_airspeed;
; 216  : 
; 217  : 	air_density = get_air_density (altitude);

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?get_air_density@@YGMM@Z ; get_air_density
  00019	d9 5d fc	 fstp	 DWORD PTR _air_density$[ebp]

; 218  : 
; 219  : 	true_airspeed = indicated_airspeed / air_density;

  0001c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _indicated_airspeed$[ebp]
  00021	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _air_density$[ebp]
  00026	f3 0f 11 45 f8	 movss	 DWORD PTR _true_airspeed$[ebp], xmm0

; 220  : 
; 221  : 	return (true_airspeed);

  0002b	d9 45 f8	 fld	 DWORD PTR _true_airspeed$[ebp]

; 222  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?convert_indicated_airspeed_to_true_airspeed@@YGMMM@Z ENDP ; convert_indicated_airspeed_to_true_airspeed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\airspeed.c
;	COMDAT ?convert_true_airspeed_to_indicated_airspeed@@YGMMM@Z
_TEXT	SEGMENT
_indicated_airspeed$ = -8				; size = 4
_air_density$ = -4					; size = 4
_true_airspeed$ = 8					; size = 4
_altitude$ = 12						; size = 4
?convert_true_airspeed_to_indicated_airspeed@@YGMMM@Z PROC ; convert_true_airspeed_to_indicated_airspeed, COMDAT

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 196  : 	float
; 197  : 		air_density,
; 198  : 		indicated_airspeed;
; 199  : 
; 200  : 	air_density = get_air_density (altitude);

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?get_air_density@@YGMM@Z ; get_air_density
  00019	d9 5d fc	 fstp	 DWORD PTR _air_density$[ebp]

; 201  : 
; 202  : 	indicated_airspeed = true_airspeed * air_density;

  0001c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _true_airspeed$[ebp]
  00021	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _air_density$[ebp]
  00026	f3 0f 11 45 f8	 movss	 DWORD PTR _indicated_airspeed$[ebp], xmm0

; 203  : 
; 204  : 	return (indicated_airspeed);

  0002b	d9 45 f8	 fld	 DWORD PTR _indicated_airspeed$[ebp]

; 205  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?convert_true_airspeed_to_indicated_airspeed@@YGMMM@Z ENDP ; convert_true_airspeed_to_indicated_airspeed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\airspeed.c
;	COMDAT ?get_air_density@@YGMM@Z
_TEXT	SEGMENT
tv70 = -92						; size = 8
tv71 = -84						; size = 8
_air_density$ = -12					; size = 4
_mod$ = -8						; size = 4
_index$ = -4						; size = 4
_altitude$ = 8						; size = 4
?get_air_density@@YGMM@Z PROC				; get_air_density, COMDAT

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 164  : 	int
; 165  : 		index;
; 166  : 
; 167  : 	float
; 168  : 		mod,
; 169  : 		air_density;
; 170  : 
; 171  : 	altitude = feet (altitude);

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  0000e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  00016	f3 0f 11 45 08	 movss	 DWORD PTR _altitude$[ebp], xmm0

; 172  : 
; 173  : 	altitude = bound (altitude, 0.0, 69999.0);

  0001b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00020	0f 57 c9	 xorps	 xmm1, xmm1
  00023	66 0f 2f c8	 comisd	 xmm1, xmm0
  00027	76 0a		 jbe	 SHORT $LN5@get_air_de
  00029	0f 57 c0	 xorps	 xmm0, xmm0
  0002c	f2 0f 11 45 ac	 movsd	 QWORD PTR tv71[ebp], xmm0
  00031	eb 32		 jmp	 SHORT $LN6@get_air_de
$LN5@get_air_de:
  00033	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00038	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@40f116f000000000
  00040	76 0f		 jbe	 SHORT $LN3@get_air_de
  00042	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@40f116f000000000
  0004a	f2 0f 11 45 a4	 movsd	 QWORD PTR tv70[ebp], xmm0
  0004f	eb 0a		 jmp	 SHORT $LN4@get_air_de
$LN3@get_air_de:
  00051	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00056	f2 0f 11 45 a4	 movsd	 QWORD PTR tv70[ebp], xmm0
$LN4@get_air_de:
  0005b	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv70[ebp]
  00060	f2 0f 11 45 ac	 movsd	 QWORD PTR tv71[ebp], xmm0
$LN6@get_air_de:
  00065	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv71[ebp]
  0006a	f3 0f 11 45 08	 movss	 DWORD PTR _altitude$[ebp], xmm0

; 174  : 
; 175  : 	index = (int) (altitude / 1000.0);

  0006f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _altitude$[ebp]
  00074	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@408f400000000000
  0007c	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00080	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 176  : 
; 177  : 	mod = fmod (altitude, 1000.0f);

  00083	51		 push	 ecx
  00084	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  0008c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00091	51		 push	 ecx
  00092	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  00097	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009c	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  000a1	d9 5d f8	 fstp	 DWORD PTR _mod$[ebp]

; 178  : 
; 179  : 	air_density = air_density_table[index + 1] - air_density_table[index];

  000a4	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _index$[ebp]
  000aa	f3 0f 10 04 85
	04 00 00 00	 movss	 xmm0, DWORD PTR ?air_density_table@@3PAMA[eax*4+4]
  000b3	f3 0f 5c 04 8d
	00 00 00 00	 subss	 xmm0, DWORD PTR ?air_density_table@@3PAMA[ecx*4]
  000bc	f3 0f 11 45 f4	 movss	 DWORD PTR _air_density$[ebp], xmm0

; 180  : 
; 181  : 	air_density *= mod;

  000c1	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _air_density$[ebp]
  000c6	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _mod$[ebp]
  000cb	f3 0f 11 45 f4	 movss	 DWORD PTR _air_density$[ebp], xmm0

; 182  : 
; 183  : 	air_density *= 0.001;

  000d0	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _air_density$[ebp]
  000d5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  000dd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e1	f3 0f 11 45 f4	 movss	 DWORD PTR _air_density$[ebp], xmm0

; 184  : 
; 185  : 	air_density += air_density_table[index];

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  000e9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _air_density$[ebp]
  000ee	f3 0f 58 04 85
	00 00 00 00	 addss	 xmm0, DWORD PTR ?air_density_table@@3PAMA[eax*4]
  000f7	f3 0f 11 45 f4	 movss	 DWORD PTR _air_density$[ebp], xmm0

; 186  : 
; 187  : 	return (air_density);

  000fc	d9 45 f4	 fld	 DWORD PTR _air_density$[ebp]

; 188  : }

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 04 00	 ret	 4
?get_air_density@@YGMM@Z ENDP				; get_air_density
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
END
