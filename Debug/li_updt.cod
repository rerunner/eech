; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\list\li_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_list_ui_object_update_functions@@YGXH@Z ; overload_list_ui_object_update_functions
PUBLIC	??_C@_0CK@FIPEHIME@LI_UPDT?3?5WARNING?3?5list?5exceeded@ ; `string'
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_clip_area@@YGHPAM000@Z:PROC			; ui_clip_area
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_update_ui_object
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0CK@FIPEHIME@LI_UPDT?3?5WARNING?3?5list?5exceeded@
CONST	SEGMENT
??_C@_0CK@FIPEHIME@LI_UPDT?3?5WARNING?3?5list?5exceeded@ DB 'LI_UPDT: WAR'
	DB	'NING: list exceeded 100 items', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\li_updt.c
;	COMDAT ?update_list_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv490 = -144						; size = 4
tv482 = -144						; size = 4
tv462 = -144						; size = 4
tv454 = -144						; size = 4
tv380 = -144						; size = 4
tv372 = -144						; size = 4
_count$1 = -76						; size = 4
_child$2 = -72						; size = 4
_old_viewport_y2$ = -68					; size = 4
_old_viewport_x2$ = -64					; size = 4
_old_viewport_y1$ = -60					; size = 4
_old_viewport_x1$ = -56					; size = 4
_area$ = -52						; size = 4
_parent$ = -48						; size = 4
_grand_parent$ = -44					; size = 4
_grand_parent_y_origin$ = -40				; size = 4
_grand_parent_x_origin$ = -36				; size = 4
_parent_y2$ = -32					; size = 4
_parent_x2$ = -28					; size = 4
_parent_y1$ = -24					; size = 4
_parent_x1$ = -20					; size = 4
_y2$ = -16						; size = 4
_x2$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_obj$ = 8						; size = 4
?update_list_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; update_list_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 75   : 
; 76   : 	float
; 77   : 		x1,
; 78   : 		y1,
; 79   : 		x2,
; 80   : 		y2,
; 81   : 		parent_x1,
; 82   : 		parent_y1,
; 83   : 		parent_x2,
; 84   : 		parent_y2,
; 85   : 		grand_parent_x_origin = 0.0,

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 dc	 movss	 DWORD PTR _grand_parent_x_origin$[ebp], xmm0

; 86   : 		grand_parent_y_origin = 0.0;

  00014	0f 57 c0	 xorps	 xmm0, xmm0
  00017	f3 0f 11 45 d8	 movss	 DWORD PTR _grand_parent_y_origin$[ebp], xmm0

; 87   : 
; 88   : 	ui_object
; 89   : 		*grand_parent,
; 90   : 		*parent;
; 91   : 
; 92   :    area_ui_object
; 93   :       *area;
; 94   : 
; 95   : 	float
; 96   : 		old_viewport_x1,
; 97   : 		old_viewport_y1,
; 98   : 		old_viewport_x2,
; 99   : 		old_viewport_y2;
; 100  : 
; 101  :    // store parents viewport data
; 102  : 
; 103  : 	old_viewport_x1 = active_viewport.x_min;

  0001c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  00024	f3 0f 11 45 c8	 movss	 DWORD PTR _old_viewport_x1$[ebp], xmm0

; 104  : 	old_viewport_y1 = active_viewport.y_min;

  00029	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  00031	f3 0f 11 45 c4	 movss	 DWORD PTR _old_viewport_y1$[ebp], xmm0

; 105  : 	old_viewport_x2 = active_viewport.x_max;

  00036	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0003e	f3 0f 11 45 c0	 movss	 DWORD PTR _old_viewport_x2$[ebp], xmm0

; 106  : 	old_viewport_y2 = active_viewport.y_max;

  00043	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  0004b	f3 0f 11 45 bc	 movss	 DWORD PTR _old_viewport_y2$[ebp], xmm0

; 107  : 
; 108  :    area = (area_ui_object *) obj->data;

  00050	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00053	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00056	89 4d cc	 mov	 DWORD PTR _area$[ebp], ecx

; 109  : 
; 110  : 	#if DEBUG
; 111  : 	//////////////////////////////////////////////////////////////////
; 112  : 	//
; 113  : 	// debug check
; 114  : 	//
; 115  : 	//////////////////////////////////////////////////////////////////
; 116  : 	{
; 117  : 
; 118  : 		ui_object
; 119  : 			*child;
; 120  : 
; 121  : 		int
; 122  : 			count;
; 123  : 
; 124  : 		child = get_ui_object_child (obj);

  00059	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00060	8b 11		 mov	 edx, DWORD PTR [ecx]
  00062	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00069	ff d0		 call	 eax
  0006b	89 45 b8	 mov	 DWORD PTR _child$2[ebp], eax

; 125  : 	
; 126  : 		count = 0;

  0006e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
$LN2@update_lis:

; 127  : 	
; 128  : 		while (child)

  00075	83 7d b8 00	 cmp	 DWORD PTR _child$2[ebp], 0
  00079	74 20		 je	 SHORT $LN3@update_lis

; 129  : 		{
; 130  : 	
; 131  : 			count ++;

  0007b	8b 45 b4	 mov	 eax, DWORD PTR _count$1[ebp]
  0007e	83 c0 01	 add	 eax, 1
  00081	89 45 b4	 mov	 DWORD PTR _count$1[ebp], eax

; 132  : 	
; 133  : 			child = get_ui_object_next (child);

  00084	8b 45 b8	 mov	 eax, DWORD PTR _child$2[ebp]
  00087	50		 push	 eax
  00088	8b 4d b8	 mov	 ecx, DWORD PTR _child$2[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00094	ff d0		 call	 eax
  00096	89 45 b8	 mov	 DWORD PTR _child$2[ebp], eax

; 134  : 		}

  00099	eb da		 jmp	 SHORT $LN2@update_lis
$LN3@update_lis:

; 135  : 	
; 136  : 		if (count > 100)

  0009b	83 7d b4 64	 cmp	 DWORD PTR _count$1[ebp], 100 ; 00000064H
  0009f	7e 0d		 jle	 SHORT $LN4@update_lis

; 137  : 		{
; 138  : 	
; 139  : 			debug_log ("LI_UPDT: WARNING: list exceeded 100 items");

  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@FIPEHIME@LI_UPDT?3?5WARNING?3?5list?5exceeded@
  000a6	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000ab	83 c4 04	 add	 esp, 4
$LN4@update_lis:

; 140  : 		}
; 141  : 	}
; 142  : 	//////////////////////////////////////////////////////////////////
; 143  : 	//
; 144  : 	//
; 145  : 	//
; 146  : 	//////////////////////////////////////////////////////////////////
; 147  : 	#endif
; 148  : 
; 149  : 	// store parents viewport data
; 150  : 
; 151  : 	parent = get_ui_object_parent (obj);

  000ae	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000b1	50		 push	 eax
  000b2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000be	ff d0		 call	 eax
  000c0	89 45 d0	 mov	 DWORD PTR _parent$[ebp], eax

; 152  : 
; 153  : 	grand_parent = get_ui_object_parent (parent);

  000c3	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  000ca	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000d3	ff d0		 call	 eax
  000d5	89 45 d4	 mov	 DWORD PTR _grand_parent$[ebp], eax

; 154  : 
; 155  : 	if (parent)

  000d8	83 7d d0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000dc	0f 84 73 01 00
	00		 je	 $LN5@update_lis

; 156  : 	{
; 157  : 	
; 158  :   		if (grand_parent)

  000e2	83 7d d4 00	 cmp	 DWORD PTR _grand_parent$[ebp], 0
  000e6	74 2a		 je	 SHORT $LN6@update_lis

; 159  : 		{
; 160  : 	
; 161  : 			grand_parent_x_origin = get_ui_object_x_origin (grand_parent);

  000e8	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000f8	ff d0		 call	 eax
  000fa	d9 5d dc	 fstp	 DWORD PTR _grand_parent_x_origin$[ebp]

; 162  : 
; 163  : 			grand_parent_y_origin = get_ui_object_y_origin (grand_parent);

  000fd	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  00100	50		 push	 eax
  00101	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  00104	8b 11		 mov	 edx, DWORD PTR [ecx]
  00106	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0010d	ff d0		 call	 eax
  0010f	d9 5d d8	 fstp	 DWORD PTR _grand_parent_y_origin$[ebp]
$LN6@update_lis:

; 164  : 		}
; 165  : 
; 166  : 		ui_set_origin (grand_parent_x_origin, grand_parent_y_origin);

  00112	51		 push	 ecx
  00113	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  00118	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011d	51		 push	 ecx
  0011e	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  00123	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00128	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 167  : 
; 168  : 		parent_x1 = get_ui_object_x (parent);

  0012d	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00130	50		 push	 eax
  00131	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00134	8b 11		 mov	 edx, DWORD PTR [ecx]
  00136	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0013d	ff d0		 call	 eax
  0013f	d9 5d ec	 fstp	 DWORD PTR _parent_x1$[ebp]

; 169  : 
; 170  : 		parent_y1 = get_ui_object_y (parent);

  00142	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00145	50		 push	 eax
  00146	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00149	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00152	ff d0		 call	 eax
  00154	d9 5d e8	 fstp	 DWORD PTR _parent_y1$[ebp]

; 171  : 
; 172  : 		parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  00157	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0015a	50		 push	 eax
  0015b	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0015e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00160	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00167	ff d0		 call	 eax
  00169	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv372[ebp]
  0016f	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv372[ebp]
  00177	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  0017c	f3 0f 11 45 e4	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 173  : 
; 174  : 		parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  00181	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00184	50		 push	 eax
  00185	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00188	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00191	ff d0		 call	 eax
  00193	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv380[ebp]
  00199	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv380[ebp]
  001a1	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  001a6	f3 0f 11 45 e0	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 175  : 
; 176  : 		x1 = parent_x1;

  001ab	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  001b0	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 177  : 
; 178  : 		y1 = parent_y1;

  001b5	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  001ba	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 179  : 
; 180  : 		x2 = parent_x2;

  001bf	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  001c4	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 181  : 
; 182  : 		y2 = parent_y2;

  001c9	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  001ce	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 183  : 
; 184  : 		ui_clip_area (&x1, &y1, &x2, &y2);

  001d3	8d 45 f0	 lea	 eax, DWORD PTR _y2$[ebp]
  001d6	50		 push	 eax
  001d7	8d 4d f4	 lea	 ecx, DWORD PTR _x2$[ebp]
  001da	51		 push	 ecx
  001db	8d 55 f8	 lea	 edx, DWORD PTR _y1$[ebp]
  001de	52		 push	 edx
  001df	8d 45 fc	 lea	 eax, DWORD PTR _x1$[ebp]
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 ?ui_clip_area@@YGHPAM000@Z ; ui_clip_area

; 185  : 
; 186  : 		x1 += grand_parent_x_origin;

  001e8	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001ed	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  001f2	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 187  : 
; 188  : 		y1 += grand_parent_y_origin;

  001f7	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001fc	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  00201	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 189  : 
; 190  : 		x2 += grand_parent_x_origin;

  00206	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0020b	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  00210	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 191  : 
; 192  : 		y2 += grand_parent_y_origin;

  00215	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0021a	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  0021f	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 193  : 
; 194  : 		set_viewport (x1, y1, x2, y2);

  00224	51		 push	 ecx
  00225	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0022a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022f	51		 push	 ecx
  00230	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00235	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023a	51		 push	 ecx
  0023b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	51		 push	 ecx
  00246	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0024b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00250	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport
$LN5@update_lis:

; 195  : 	}
; 196  : 
; 197  :    if (area->drawable)

  00255	8b 45 cc	 mov	 eax, DWORD PTR _area$[ebp]
  00258	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0025b	c1 e9 05	 shr	 ecx, 5
  0025e	83 e1 01	 and	 ecx, 1
  00261	74 12		 je	 SHORT $LN7@update_lis

; 198  :    {
; 199  : 
; 200  :       draw_ui_object (obj);

  00263	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00266	50		 push	 eax
  00267	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0026a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0026c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[edx*4]
  00273	ff d0		 call	 eax
$LN7@update_lis:

; 201  : 	}
; 202  : 
; 203  : 	set_viewport (old_viewport_x1, old_viewport_y1, old_viewport_x2, old_viewport_y2);

  00275	51		 push	 ecx
  00276	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _old_viewport_y2$[ebp]
  0027b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00280	51		 push	 ecx
  00281	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _old_viewport_x2$[ebp]
  00286	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028b	51		 push	 ecx
  0028c	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _old_viewport_y1$[ebp]
  00291	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00296	51		 push	 ecx
  00297	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _old_viewport_x1$[ebp]
  0029c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a1	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 204  : 
; 205  : 	if (area->next)

  002a6	8b 45 cc	 mov	 eax, DWORD PTR _area$[ebp]
  002a9	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  002ad	0f 84 f1 01 00
	00		 je	 $LN8@update_lis

; 206  : 	{
; 207  : 
; 208  : 		parent = get_ui_object_parent (obj);

  002b3	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002b6	50		 push	 eax
  002b7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  002bc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  002c3	ff d0		 call	 eax
  002c5	89 45 d0	 mov	 DWORD PTR _parent$[ebp], eax

; 209  : 
; 210  : 		grand_parent = get_ui_object_parent (parent);

  002c8	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  002cb	50		 push	 eax
  002cc	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  002cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  002d8	ff d0		 call	 eax
  002da	89 45 d4	 mov	 DWORD PTR _grand_parent$[ebp], eax

; 211  : 
; 212  : 		if (parent)

  002dd	83 7d d0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  002e1	0f 84 a5 01 00
	00		 je	 $LN9@update_lis

; 213  : 		{
; 214  : 
; 215  : 			if (grand_parent)

  002e7	83 7d d4 00	 cmp	 DWORD PTR _grand_parent$[ebp], 0
  002eb	74 2a		 je	 SHORT $LN10@update_lis

; 216  : 			{
; 217  : 		
; 218  : 				grand_parent_x_origin = get_ui_object_x_origin (grand_parent);

  002ed	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  002f0	50		 push	 eax
  002f1	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  002f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  002f6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  002fd	ff d0		 call	 eax
  002ff	d9 5d dc	 fstp	 DWORD PTR _grand_parent_x_origin$[ebp]

; 219  : 
; 220  : 				grand_parent_y_origin = get_ui_object_y_origin (grand_parent);

  00302	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  00305	50		 push	 eax
  00306	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  00309	8b 11		 mov	 edx, DWORD PTR [ecx]
  0030b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00312	ff d0		 call	 eax
  00314	d9 5d d8	 fstp	 DWORD PTR _grand_parent_y_origin$[ebp]
$LN10@update_lis:

; 221  : 			}
; 222  : 
; 223  : 			ui_set_origin (grand_parent_x_origin, grand_parent_y_origin);

  00317	51		 push	 ecx
  00318	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  0031d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00322	51		 push	 ecx
  00323	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  00328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032d	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 224  : 	
; 225  : 			parent_x1 = get_ui_object_x (parent);

  00332	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00335	50		 push	 eax
  00336	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00339	8b 11		 mov	 edx, DWORD PTR [ecx]
  0033b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00342	ff d0		 call	 eax
  00344	d9 5d ec	 fstp	 DWORD PTR _parent_x1$[ebp]

; 226  : 
; 227  : 			parent_y1 = get_ui_object_y (parent);

  00347	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0034a	50		 push	 eax
  0034b	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0034e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00350	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00357	ff d0		 call	 eax
  00359	d9 5d e8	 fstp	 DWORD PTR _parent_y1$[ebp]

; 228  : 
; 229  : 			parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  0035c	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0035f	50		 push	 eax
  00360	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00363	8b 11		 mov	 edx, DWORD PTR [ecx]
  00365	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0036c	ff d0		 call	 eax
  0036e	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv454[ebp]
  00374	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv454[ebp]
  0037c	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00381	f3 0f 11 45 e4	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 230  : 
; 231  : 			parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  00386	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00389	50		 push	 eax
  0038a	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0038d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0038f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00396	ff d0		 call	 eax
  00398	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv462[ebp]
  0039e	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv462[ebp]
  003a6	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  003ab	f3 0f 11 45 e0	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 232  : 	
; 233  : 			x1 = parent_x1 + grand_parent_x_origin;

  003b0	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  003b5	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  003ba	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 234  : 
; 235  : 			y1 = parent_y1 + grand_parent_y_origin;

  003bf	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  003c4	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  003c9	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 236  : 
; 237  : 			x2 = parent_x2 + grand_parent_x_origin;

  003ce	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  003d3	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  003d8	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 238  : 
; 239  : 			y2 = parent_y2 + grand_parent_y_origin;

  003dd	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  003e2	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  003e7	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 240  : 
; 241  : 			set_viewport (x1, y1, x2, y2);

  003ec	51		 push	 ecx
  003ed	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  003f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f7	51		 push	 ecx
  003f8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  003fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00402	51		 push	 ecx
  00403	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00408	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040d	51		 push	 ecx
  0040e	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00413	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00418	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 242  : 			
; 243  : 			parent_x1 += get_ui_object_x_origin (parent);

  0041d	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00420	50		 push	 eax
  00421	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00424	8b 11		 mov	 edx, DWORD PTR [ecx]
  00426	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0042d	ff d0		 call	 eax
  0042f	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv482[ebp]
  00435	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv482[ebp]
  0043d	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00442	f3 0f 11 45 ec	 movss	 DWORD PTR _parent_x1$[ebp], xmm0

; 244  : 
; 245  : 			parent_y1 += get_ui_object_y_origin (parent);

  00447	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0044a	50		 push	 eax
  0044b	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0044e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00450	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00457	ff d0		 call	 eax
  00459	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv490[ebp]
  0045f	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv490[ebp]
  00467	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  0046c	f3 0f 11 45 e8	 movss	 DWORD PTR _parent_y1$[ebp], xmm0

; 246  : 
; 247  : 			ui_set_origin (parent_x1, parent_y1);

  00471	51		 push	 ecx
  00472	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00477	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047c	51		 push	 ecx
  0047d	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00482	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00487	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin
$LN9@update_lis:

; 248  : 		}
; 249  : 
; 250  : 		update_ui_object (area->next);

  0048c	8b 45 cc	 mov	 eax, DWORD PTR _area$[ebp]
  0048f	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00492	51		 push	 ecx
  00493	8b 55 cc	 mov	 edx, DWORD PTR _area$[ebp]
  00496	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00499	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049b	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  004a2	ff d2		 call	 edx
$LN8@update_lis:

; 251  : 	}
; 252  : }

  004a4	5f		 pop	 edi
  004a5	5e		 pop	 esi
  004a6	5b		 pop	 ebx
  004a7	8b e5		 mov	 esp, ebp
  004a9	5d		 pop	 ebp
  004aa	c2 04 00	 ret	 4
?update_list_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; update_list_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\li_updt.c
;	COMDAT ?overload_list_ui_object_update_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_list_ui_object_update_functions@@YGXH@Z PROC	; overload_list_ui_object_update_functions, COMDAT

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 260  : 
; 261  : 	fn_update_ui_object [type] = update_list_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?update_list_ui_object@@YGXPAUUI_OBJECT@@@Z ; update_list_ui_object

; 262  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_list_ui_object_update_functions@@YGXH@Z ENDP	; overload_list_ui_object_update_functions
_TEXT	ENDS
END
