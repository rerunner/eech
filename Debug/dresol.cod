; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\dresol.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?number_of_graphics_resolution_modes_available@@3HA ; number_of_graphics_resolution_modes_available
PUBLIC	?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A ; graphics_resolution_modes_available
_BSS	SEGMENT
?number_of_graphics_resolution_modes_available@@3HA DD 01H DUP (?) ; number_of_graphics_resolution_modes_available
?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A DB 0c00H DUP (?) ; graphics_resolution_modes_available
_BSS	ENDS
PUBLIC	?get_graphics_resolution_index@@YGHHH@Z		; get_graphics_resolution_index
PUBLIC	?assess_graphic_device_resolutions@@YGHXZ	; assess_graphic_device_resolutions
PUBLIC	?initialise_graphics_resolution_modes@@YGXXZ	; initialise_graphics_resolution_modes
PUBLIC	?__LINE__Var@?0??assess_graphic_device_resolutions@@YGHXZ@4JA ; `assess_graphic_device_resolutions'::`1'::__LINE__Var
PUBLIC	??_C@_0DH@GGPONDID@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_05MAJJAKPI@FALSE@				; `string'
PUBLIC	??_C@_0BP@KBDNBIPB@Graphics?5mode?3?5?$CFd?5x?5?$CFd?5enabled@ ; `string'
PUBLIC	??_C@_0CG@KFIOHCMG@?$CFd?5x?5?$CFd?5failed?5video?5resolution@ ; `string'
PUBLIC	??_C@_0DI@BOJMHILD@?$CFd?5x?5?$CFd?5is?5below?5minimum?5resolu@ ; `string'
EXTRN	__imp__GetWindowLongA@8:PROC
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?ddraw_set_cooperative_level@@YGHW4DDRAW_COOPERATIVE_LEVEL@@@Z:PROC ; ddraw_set_cooperative_level
EXTRN	?f3d_test_video_resolution@@YGHHHH@Z:PROC	; f3d_test_video_resolution
EXTRN	?application_window@@3PAUHWND__@@A:DWORD	; application_window
EXTRN	?number_display_modes@@3HA:DWORD		; number_display_modes
EXTRN	?display_modes@@3PAUDISPLAY_FORMAT@@A:BYTE	; display_modes
EXTRN	?command_line_display_bpp@@3HA:DWORD		; command_line_display_bpp
;	COMDAT ??_C@_0DI@BOJMHILD@?$CFd?5x?5?$CFd?5is?5below?5minimum?5resolu@
CONST	SEGMENT
??_C@_0DI@BOJMHILD@?$CFd?5x?5?$CFd?5is?5below?5minimum?5resolu@ DB '%d x '
	DB	'%d is below minimum resolution dimensions 640x480!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KFIOHCMG@?$CFd?5x?5?$CFd?5failed?5video?5resolution@
CONST	SEGMENT
??_C@_0CG@KFIOHCMG@?$CFd?5x?5?$CFd?5failed?5video?5resolution@ DB '%d x %'
	DB	'd failed video resolution test!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KBDNBIPB@Graphics?5mode?3?5?$CFd?5x?5?$CFd?5enabled@
CONST	SEGMENT
??_C@_0BP@KBDNBIPB@Graphics?5mode?3?5?$CFd?5x?5?$CFd?5enabled@ DB 'Graphi'
	DB	'cs mode: %d x %d enabled', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MAJJAKPI@FALSE@
CONST	SEGMENT
??_C@_05MAJJAKPI@FALSE@ DB 'FALSE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GGPONDID@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DH@GGPONDID@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\graphics\dresol.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??assess_graphic_device_resolutions@@YGHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assess_graphic_device_resolutions@@YGHXZ@4JA DD 090H ; `assess_graphic_device_resolutions'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\dresol.c
;	COMDAT ?supported_resolution@@YGHHH@Z
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?supported_resolution@@YGHHH@Z PROC			; supported_resolution, COMDAT

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 400  : 	//Minimum supported screen resolution: 640x480
; 401  : 	//The maximum depends on your monitor and graphics card, and will be determined by DirectX.
; 402  : 	if ( ( width >= 640 ) && ( height >= 480 ) )

  00009	81 7d 08 80 02
	00 00		 cmp	 DWORD PTR _width$[ebp], 640 ; 00000280H
  00010	7c 10		 jl	 SHORT $LN2@supported_
  00012	81 7d 0c e0 01
	00 00		 cmp	 DWORD PTR _height$[ebp], 480 ; 000001e0H
  00019	7c 07		 jl	 SHORT $LN2@supported_

; 403  : 	{
; 404  : 		return ( TRUE );

  0001b	b8 01 00 00 00	 mov	 eax, 1
  00020	eb 02		 jmp	 SHORT $LN1@supported_
$LN2@supported_:

; 405  : 	}
; 406  : 	return ( FALSE );

  00022	33 c0		 xor	 eax, eax
$LN1@supported_:

; 407  : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?supported_resolution@@YGHHH@Z ENDP			; supported_resolution
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\dresol.c
;	COMDAT ?initialise_graphics_resolution_modes@@YGXXZ
_TEXT	SEGMENT
?initialise_graphics_resolution_modes@@YGXXZ PROC	; initialise_graphics_resolution_modes, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 116  : 	number_of_graphics_resolution_modes_available = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 0 ; number_of_graphics_resolution_modes_available

; 117  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?initialise_graphics_resolution_modes@@YGXXZ ENDP	; initialise_graphics_resolution_modes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\dresol.c
;	COMDAT ?assess_graphic_device_resolutions@@YGHXZ
_TEXT	SEGMENT
tv64 = -96						; size = 4
_height$1 = -28						; size = 4
_width$2 = -24						; size = 4
_depth$3 = -20						; size = 4
_dwStyle$4 = -16					; size = 4
_count$ = -12						; size = 4
_high_water_mark$ = -8					; size = 4
_low_water_mark$ = -4					; size = 4
?assess_graphic_device_resolutions@@YGHXZ PROC		; assess_graphic_device_resolutions, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 	int
; 146  : 		low_water_mark,
; 147  : 		high_water_mark,
; 148  : 		count;
; 149  : 
; 150  : 	//
; 151  : 	// Go through all the physically available graphics modes, validating them
; 152  : 	//
; 153  : 	//	NB - this should only be used for FULLSCREEN running
; 154  : 	//
; 155  : 
; 156  : 	number_of_graphics_resolution_modes_available = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 0 ; number_of_graphics_resolution_modes_available

; 157  : 
; 158  : 	switch ( command_line_display_bpp )

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_display_bpp@@3HA ; command_line_display_bpp
  00018	89 45 a0	 mov	 DWORD PTR tv64[ebp], eax
  0001b	83 7d a0 10	 cmp	 DWORD PTR tv64[ebp], 16	; 00000010H
  0001f	74 08		 je	 SHORT $LN7@assess_gra
  00021	83 7d a0 20	 cmp	 DWORD PTR tv64[ebp], 32	; 00000020H
  00025	74 12		 je	 SHORT $LN8@assess_gra
  00027	eb 20		 jmp	 SHORT $LN9@assess_gra
$LN7@assess_gra:

; 159  : 	{
; 160  : 		case 16:
; 161  : 		{
; 162  : 			high_water_mark = 16;

  00029	c7 45 f8 10 00
	00 00		 mov	 DWORD PTR _high_water_mark$[ebp], 16 ; 00000010H

; 163  : 			low_water_mark = 12;

  00030	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR _low_water_mark$[ebp], 12 ; 0000000cH

; 164  : 			break;

  00037	eb 31		 jmp	 SHORT $LN2@assess_gra
$LN8@assess_gra:

; 165  : 		}
; 166  : 
; 167  : 		case 32:
; 168  : 		{
; 169  : 			high_water_mark = 32;

  00039	c7 45 f8 20 00
	00 00		 mov	 DWORD PTR _high_water_mark$[ebp], 32 ; 00000020H

; 170  : 			low_water_mark = 24;

  00040	c7 45 fc 18 00
	00 00		 mov	 DWORD PTR _low_water_mark$[ebp], 24 ; 00000018H

; 171  : 			break;

  00047	eb 21		 jmp	 SHORT $LN2@assess_gra
$LN9@assess_gra:

; 172  : 		}
; 173  : 
; 174  : 		default:
; 175  : 			ASSERT ( FALSE );

  00049	b8 01 00 00 00	 mov	 eax, 1
  0004e	85 c0		 test	 eax, eax
  00050	74 18		 je	 SHORT $LN2@assess_gra
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assess_graphic_device_resolutions@@YGHXZ@4JA
  00057	83 c0 1f	 add	 eax, 31			; 0000001fH
  0005a	50		 push	 eax
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GGPONDID@c?3?2users?2nhv90?2projects?2eech?2mo@
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_05MAJJAKPI@FALSE@
  00065	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@assess_gra:

; 176  : 	}
; 177  : 
; 178  : 	if ( number_display_modes )

  0006a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?number_display_modes@@3HA, 0 ; number_display_modes
  00071	0f 84 8b 01 00
	00		 je	 $LN11@assess_gra

; 179  : 	{
; 180  : 		DWORD
; 181  : 			dwStyle;
; 182  : 	
; 183  : 		//
; 184  : 		// Set the cooperative mode settings.
; 185  : 		//
; 186  : 		ddraw_set_cooperative_level ( COOPERATIVE_LEVEL_EXCLUSIVE );

  00077	6a 02		 push	 2
  00079	e8 00 00 00 00	 call	 ?ddraw_set_cooperative_level@@YGHW4DDRAW_COOPERATIVE_LEVEL@@@Z ; ddraw_set_cooperative_level

; 187  : 	
; 188  : 		//
; 189  : 		// Setup the window style for a fullscreen application
; 190  : 		//
; 191  : 		dwStyle = GetWindowStyle ( application_window );

  0007e	6a f0		 push	 -16			; fffffff0H
  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?application_window@@3PAUHWND__@@A ; application_window
  00085	50		 push	 eax
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  0008c	89 45 f0	 mov	 DWORD PTR _dwStyle$4[ebp], eax

; 192  : 		dwStyle &= ~( WS_OVERLAPPED | WS_CAPTION | WS_THICKFRAME | WS_MINIMIZEBOX );

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _dwStyle$4[ebp]
  00092	25 ff ff 39 ff	 and	 eax, -12976129		; ff39ffffH
  00097	89 45 f0	 mov	 DWORD PTR _dwStyle$4[ebp], eax

; 193  : 		dwStyle |= WS_POPUP;

  0009a	8b 45 f0	 mov	 eax, DWORD PTR _dwStyle$4[ebp]
  0009d	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  000a2	89 45 f0	 mov	 DWORD PTR _dwStyle$4[ebp], eax

; 194  : 		SetWindowLong ( application_window, GWL_STYLE, dwStyle );

  000a5	8b 45 f0	 mov	 eax, DWORD PTR _dwStyle$4[ebp]
  000a8	50		 push	 eax
  000a9	6a f0		 push	 -16			; fffffff0H
  000ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?application_window@@3PAUHWND__@@A ; application_window
  000b1	51		 push	 ecx
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 195  : 
; 196  : 		//
; 197  : 		// Go through all the graphics modes
; 198  : 		//
; 199  : 		for ( count = 0; count < number_display_modes; count++ )

  000b8	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  000bf	eb 09		 jmp	 SHORT $LN6@assess_gra
$LN4@assess_gra:
  000c1	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000c4	83 c0 01	 add	 eax, 1
  000c7	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax
$LN6@assess_gra:
  000ca	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000cd	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_display_modes@@3HA ; number_display_modes
  000d3	0f 8d 22 01 00
	00		 jge	 $LN5@assess_gra

; 200  : 		{
; 201  : 			if ( !display_modes[count].palette )

  000d9	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000dc	c1 e0 07	 shl	 eax, 7
  000df	83 b8 00 00 00
	00 00		 cmp	 DWORD PTR ?display_modes@@3PAUDISPLAY_FORMAT@@A[eax], 0
  000e6	0f 85 0a 01 00
	00		 jne	 $LN12@assess_gra

; 202  : 			{
; 203  : 				int
; 204  : 					depth;
; 205  : 				depth = ( display_modes[count].bpp_red + display_modes[count].bpp_green + display_modes[count].bpp_blue );

  000ec	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000ef	c1 e0 07	 shl	 eax, 7
  000f2	8b 4d f4	 mov	 ecx, DWORD PTR _count$[ebp]
  000f5	c1 e1 07	 shl	 ecx, 7
  000f8	8b 90 08 00 00
	00		 mov	 edx, DWORD PTR ?display_modes@@3PAUDISPLAY_FORMAT@@A[eax+8]
  000fe	03 91 0c 00 00
	00		 add	 edx, DWORD PTR ?display_modes@@3PAUDISPLAY_FORMAT@@A[ecx+12]
  00104	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00107	c1 e0 07	 shl	 eax, 7
  0010a	03 90 10 00 00
	00		 add	 edx, DWORD PTR ?display_modes@@3PAUDISPLAY_FORMAT@@A[eax+16]
  00110	89 55 ec	 mov	 DWORD PTR _depth$3[ebp], edx

; 206  : 				if ( ( depth >= low_water_mark ) && ( depth <= high_water_mark ) )

  00113	8b 45 ec	 mov	 eax, DWORD PTR _depth$3[ebp]
  00116	3b 45 fc	 cmp	 eax, DWORD PTR _low_water_mark$[ebp]
  00119	0f 8c d7 00 00
	00		 jl	 $LN12@assess_gra
  0011f	8b 45 ec	 mov	 eax, DWORD PTR _depth$3[ebp]
  00122	3b 45 f8	 cmp	 eax, DWORD PTR _high_water_mark$[ebp]
  00125	0f 8f cb 00 00
	00		 jg	 $LN12@assess_gra

; 207  : 				{
; 208  : 					int
; 209  : 						width,
; 210  : 						height;
; 211  : 					width = display_modes[count].ddsd.dwWidth;

  0012b	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0012e	c1 e0 07	 shl	 eax, 7
  00131	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?display_modes@@3PAUDISPLAY_FORMAT@@A[eax+32]
  00137	89 4d e8	 mov	 DWORD PTR _width$2[ebp], ecx

; 212  : 					height = display_modes[count].ddsd.dwHeight;

  0013a	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0013d	c1 e0 07	 shl	 eax, 7
  00140	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?display_modes@@3PAUDISPLAY_FORMAT@@A[eax+28]
  00146	89 4d e4	 mov	 DWORD PTR _height$1[ebp], ecx

; 213  : 					if ( supported_resolution ( width, height ) )

  00149	8b 45 e4	 mov	 eax, DWORD PTR _height$1[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d e8	 mov	 ecx, DWORD PTR _width$2[ebp]
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ?supported_resolution@@YGHHH@Z ; supported_resolution
  00156	85 c0		 test	 eax, eax
  00158	0f 84 83 00 00
	00		 je	 $LN14@assess_gra

; 214  : 					{
; 215  : 						if ( f3d_test_video_resolution ( width, height, command_line_display_bpp ) )

  0015e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_display_bpp@@3HA ; command_line_display_bpp
  00163	50		 push	 eax
  00164	8b 4d e4	 mov	 ecx, DWORD PTR _height$1[ebp]
  00167	51		 push	 ecx
  00168	8b 55 e8	 mov	 edx, DWORD PTR _width$2[ebp]
  0016b	52		 push	 edx
  0016c	e8 00 00 00 00	 call	 ?f3d_test_video_resolution@@YGHHHH@Z ; f3d_test_video_resolution
  00171	85 c0		 test	 eax, eax
  00173	74 55		 je	 SHORT $LN16@assess_gra

; 216  : 						{
; 217  : 							debug_log ( "Graphics mode: %d x %d enabled", width, height );

  00175	8b 45 e4	 mov	 eax, DWORD PTR _height$1[ebp]
  00178	50		 push	 eax
  00179	8b 4d e8	 mov	 ecx, DWORD PTR _width$2[ebp]
  0017c	51		 push	 ecx
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@KBDNBIPB@Graphics?5mode?3?5?$CFd?5x?5?$CFd?5enabled@
  00182	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00187	83 c4 0c	 add	 esp, 12			; 0000000cH

; 218  : 							graphics_resolution_modes_available[number_of_graphics_resolution_modes_available].width = width;

  0018a	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 12 ; number_of_graphics_resolution_modes_available
  00191	8b 4d e8	 mov	 ecx, DWORD PTR _width$2[ebp]
  00194	89 88 00 00 00
	00		 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax], ecx

; 219  : 							graphics_resolution_modes_available[number_of_graphics_resolution_modes_available].height = height;

  0019a	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 12 ; number_of_graphics_resolution_modes_available
  001a1	8b 4d e4	 mov	 ecx, DWORD PTR _height$1[ebp]
  001a4	89 88 04 00 00
	00		 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4], ecx

; 220  : 							graphics_resolution_modes_available[number_of_graphics_resolution_modes_available].compressed_texture_mode = FALSE;

  001aa	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 12 ; number_of_graphics_resolution_modes_available
  001b1	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+8], 0

; 221  : 
; 222  : 							number_of_graphics_resolution_modes_available++;

  001bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA ; number_of_graphics_resolution_modes_available
  001c0	83 c0 01	 add	 eax, 1
  001c3	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, eax ; number_of_graphics_resolution_modes_available

; 223  : /*
; 224  : 							//
; 225  : 							// Create the d3d device & set its abilities
; 226  : 							//
; 227  : 							if ( create_test_d3d_device ( width, height ) )
; 228  : 							{
; 229  : 								//
; 230  : 								// Now check for available texture memory
; 231  : 								//
; 232  : 								initialise_system_texture_formats ();
; 233  : 								compress_system_textures = FALSE;
; 234  : 								{
; 235  : 									//
; 236  : 									// We can go into this mode
; 237  : 									//
; 238  : 									debug_log ( "Graphics mode: %d x %d enabled", width, height );
; 239  : 									graphics_resolution_modes_available[number_of_graphics_resolution_modes_available].width = width;
; 240  : 									graphics_resolution_modes_available[number_of_graphics_resolution_modes_available].height = height;
; 241  : 									graphics_resolution_modes_available[number_of_graphics_resolution_modes_available].compressed_texture_mode = FALSE;
; 242  : 		
; 243  : 									number_of_graphics_resolution_modes_available++;
; 244  : 								}
; 245  : 							}
; 246  : 
; 247  : 							//
; 248  : 							// Release the d3d device
; 249  : 							//
; 250  : 							release_test_d3d_device ();
; 251  : 							*/
; 252  : 						}
; 253  : 						else

  001c8	eb 15		 jmp	 SHORT $LN17@assess_gra
$LN16@assess_gra:

; 254  : 							debug_log ( "%d x %d failed video resolution test!", width, height );

  001ca	8b 45 e4	 mov	 eax, DWORD PTR _height$1[ebp]
  001cd	50		 push	 eax
  001ce	8b 4d e8	 mov	 ecx, DWORD PTR _width$2[ebp]
  001d1	51		 push	 ecx
  001d2	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KFIOHCMG@?$CFd?5x?5?$CFd?5failed?5video?5resolution@
  001d7	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001dc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN17@assess_gra:

; 255  : 					}
; 256  : 					else

  001df	eb 15		 jmp	 SHORT $LN12@assess_gra
$LN14@assess_gra:

; 257  : 						debug_log ( "%d x %d is below minimum resolution dimensions 640x480!", width, height );

  001e1	8b 45 e4	 mov	 eax, DWORD PTR _height$1[ebp]
  001e4	50		 push	 eax
  001e5	8b 4d e8	 mov	 ecx, DWORD PTR _width$2[ebp]
  001e8	51		 push	 ecx
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@BOJMHILD@?$CFd?5x?5?$CFd?5is?5below?5minimum?5resolu@
  001ee	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  001f3	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@assess_gra:

; 258  : 				}
; 259  : 			}
; 260  : 		}

  001f6	e9 c6 fe ff ff	 jmp	 $LN4@assess_gra
$LN5@assess_gra:

; 261  : 
; 262  : 		//
; 263  : 		// Reset the cooperative mode settings
; 264  : 		//
; 265  : 		ddraw_set_cooperative_level ( COOPERATIVE_LEVEL_NORMAL );

  001fb	6a 01		 push	 1
  001fd	e8 00 00 00 00	 call	 ?ddraw_set_cooperative_level@@YGHW4DDRAW_COOPERATIVE_LEVEL@@@Z ; ddraw_set_cooperative_level
$LN11@assess_gra:

; 266  : 	}
; 267  : 
; 268  : 	return ( TRUE );

  00202	b8 01 00 00 00	 mov	 eax, 1

; 269  : }

  00207	5f		 pop	 edi
  00208	5e		 pop	 esi
  00209	5b		 pop	 ebx
  0020a	8b e5		 mov	 esp, ebp
  0020c	5d		 pop	 ebp
  0020d	c3		 ret	 0
?assess_graphic_device_resolutions@@YGHXZ ENDP		; assess_graphic_device_resolutions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\dresol.c
;	COMDAT ?get_graphics_resolution_index@@YGHHH@Z
_TEXT	SEGMENT
_count$ = -4						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?get_graphics_resolution_index@@YGHHH@Z PROC		; get_graphics_resolution_index, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 125  : 	int
; 126  : 		count;
; 127  : 
; 128  : 	for ( count = 0; count < number_of_graphics_resolution_modes_available; count++ )

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@get_graphi
$LN2@get_graphi:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@get_graphi:
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0001e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA ; number_of_graphics_resolution_modes_available
  00024	7d 25		 jge	 SHORT $LN3@get_graphi

; 129  : 	{
; 130  : 		if ( ( graphics_resolution_modes_available[count].width == width ) && ( graphics_resolution_modes_available[count].height == height ) )

  00026	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  0002a	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax]
  00030	3b 4d 08	 cmp	 ecx, DWORD PTR _width$[ebp]
  00033	75 14		 jne	 SHORT $LN5@get_graphi
  00035	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00039	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4]
  0003f	3b 4d 0c	 cmp	 ecx, DWORD PTR _height$[ebp]
  00042	75 05		 jne	 SHORT $LN5@get_graphi

; 131  : 		{
; 132  : 			return ( count );

  00044	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00047	eb 05		 jmp	 SHORT $LN1@get_graphi
$LN5@get_graphi:

; 133  : 		}
; 134  : 	}

  00049	eb c7		 jmp	 SHORT $LN2@get_graphi
$LN3@get_graphi:

; 135  : 
; 136  : 	return ( -1 );

  0004b	83 c8 ff	 or	 eax, -1
$LN1@get_graphi:

; 137  : }

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
?get_graphics_resolution_index@@YGHHH@Z ENDP		; get_graphics_resolution_index
_TEXT	ENDS
END
