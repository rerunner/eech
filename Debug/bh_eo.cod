; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?blackhawk_flir@@3UEO_PARAMS@@A			; blackhawk_flir
PUBLIC	?blackhawk_dtv@@3UEO_PARAMS@@A			; blackhawk_dtv
PUBLIC	?blackhawk_dvo@@3UEO_PARAMS@@A			; blackhawk_dvo
_BSS	SEGMENT
?blackhawk_flir@@3UEO_PARAMS@@A DB 0cH DUP (?)		; blackhawk_flir
?blackhawk_dtv@@3UEO_PARAMS@@A DB 0cH DUP (?)		; blackhawk_dtv
?blackhawk_dvo@@3UEO_PARAMS@@A DB 0cH DUP (?)		; blackhawk_dvo
_BSS	ENDS
PUBLIC	?initialise_blackhawk_eo@@YGXXZ			; initialise_blackhawk_eo
PUBLIC	?deinitialise_blackhawk_eo@@YGXXZ		; deinitialise_blackhawk_eo
PUBLIC	?get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ; get_blackhawk_eo_centred_viewpoint
PUBLIC	?update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z	; update_blackhawk_eo
PUBLIC	?centre_blackhawk_eo@@YGXXZ			; centre_blackhawk_eo
PUBLIC	?animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_blackhawk_eo
PUBLIC	?slave_blackhawk_eo_to_current_target@@YGXXZ	; slave_blackhawk_eo_to_current_target
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA ; `get_blackhawk_eo_centred_viewpoint'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02HPPNELPJ@vp@				; `string'
PUBLIC	??_C@_06DDNABPCD@inst3d@			; `string'
PUBLIC	??_C@_0DM@OPDFHCEJ@OBJECT_3D_SUB_OBJECT_AH64D_TADS@ ; `string'
PUBLIC	?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `inc_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	??_C@_02KMMHFIEO@eo@				; `string'
PUBLIC	?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `fast_inc_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `dec_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA ; `fast_dec_eo_field_of_view'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z@4JA ; `update_blackhawk_eo'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA ; `animate_blackhawk_eo'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3dd67750
PUBLIC	__real@3f060a92
PUBLIC	__real@3f4c987100000000
PUBLIC	__real@3f567750
PUBLIC	__real@3f71df46a0000000
PUBLIC	__real@3f81df46a0000000
PUBLIC	__real@3f857254c0000000
PUBLIC	__real@3f91df46a0000000
PUBLIC	__real@3fa6571848000000
PUBLIC	__real@3fb1df46a0000000
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fd6571848000000
PUBLIC	__real@3ff6571848000000
PUBLIC	__real@40060a92
PUBLIC	__real@4014000000000000
PUBLIC	__real@459c4000
PUBLIC	__real@bf860a92
PUBLIC	__real@c0060a92
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?get_joystick_axis@@YGHHH@Z:PROC		; get_joystick_axis
EXTRN	?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z:PROC ; get_3d_sub_object_world_viewpoint
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z:PROC ; find_object_3d_sub_object_from_sub_object
EXTRN	?select_next_eo_target@@YGXXZ:PROC		; select_next_eo_target
EXTRN	?select_previous_eo_target@@YGXXZ:PROC		; select_previous_eo_target
EXTRN	?select_next_designated_eo_target@@YGXXZ:PROC	; select_next_designated_eo_target
EXTRN	?select_previous_designated_eo_target@@YGXXZ:PROC ; select_previous_designated_eo_target
EXTRN	?make_panning_offset_from_axis@@YGMJ@Z:PROC	; make_panning_offset_from_axis
EXTRN	?get_eo_azimuth@@YGMMMMMMM@Z:PROC		; get_eo_azimuth
EXTRN	?get_eo_elevation@@YGMMMMMMM@Z:PROC		; get_eo_elevation
EXTRN	?get_old_eo_zoom@@YGMMMM@Z:PROC			; get_old_eo_zoom
EXTRN	__ftol2_sse:PROC
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_mouse_look_speed@@3HA:DWORD	; command_line_mouse_look_speed
EXTRN	?command_line_eo_pan_joystick_index@@3HA:DWORD	; command_line_eo_pan_joystick_index
EXTRN	?command_line_eo_pan_vertical_joystick_axis@@3HA:DWORD ; command_line_eo_pan_vertical_joystick_axis
EXTRN	?command_line_eo_pan_horizontal_joystick_axis@@3HA:DWORD ; command_line_eo_pan_horizontal_joystick_axis
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?pilot_head_heading@@3MA:DWORD			; pilot_head_heading
EXTRN	?continuous_target_acquisition_system_steer_left_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_left_key
EXTRN	?continuous_target_acquisition_system_steer_right_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_right_key
EXTRN	?continuous_target_acquisition_system_steer_up_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_up_key
EXTRN	?continuous_target_acquisition_system_steer_down_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_down_key
EXTRN	?single_target_acquisition_system_inc_range_key@@3HA:DWORD ; single_target_acquisition_system_inc_range_key
EXTRN	?single_target_acquisition_system_dec_range_key@@3HA:DWORD ; single_target_acquisition_system_dec_range_key
EXTRN	?single_target_acquisition_system_select_next_target_key@@3HA:DWORD ; single_target_acquisition_system_select_next_target_key
EXTRN	?single_target_acquisition_system_select_previous_target_key@@3HA:DWORD ; single_target_acquisition_system_select_previous_target_key
EXTRN	?single_target_acquisition_system_select_next_designated_key@@3HA:DWORD ; single_target_acquisition_system_select_next_designated_key
EXTRN	?single_target_acquisition_system_select_previous_designated_key@@3HA:DWORD ; single_target_acquisition_system_select_previous_designated_key
EXTRN	?continuous_target_acquisition_system_steer_left_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_left_fast_key
EXTRN	?continuous_target_acquisition_system_steer_right_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_right_fast_key
EXTRN	?continuous_target_acquisition_system_steer_up_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_up_fast_key
EXTRN	?continuous_target_acquisition_system_steer_down_fast_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_down_fast_key
EXTRN	?single_target_acquisition_system_inc_range_fast_key@@3HA:DWORD ; single_target_acquisition_system_inc_range_fast_key
EXTRN	?single_target_acquisition_system_dec_range_fast_key@@3HA:DWORD ; single_target_acquisition_system_dec_range_fast_key
EXTRN	?continuous_target_acquisition_system_steer_left_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_left_fine_key
EXTRN	?continuous_target_acquisition_system_steer_right_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_right_fine_key
EXTRN	?continuous_target_acquisition_system_steer_up_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_up_fine_key
EXTRN	?continuous_target_acquisition_system_steer_down_fine_key@@3HA:DWORD ; continuous_target_acquisition_system_steer_down_fine_key
EXTRN	?eo_on_target@@3HA:DWORD			; eo_on_target
EXTRN	?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; eo_sensor
EXTRN	?eo_azimuth@@3MA:DWORD				; eo_azimuth
EXTRN	?eo_min_azimuth@@3MA:DWORD			; eo_min_azimuth
EXTRN	?eo_max_azimuth@@3MA:DWORD			; eo_max_azimuth
EXTRN	?eo_elevation@@3MA:DWORD			; eo_elevation
EXTRN	?eo_min_elevation@@3MA:DWORD			; eo_min_elevation
EXTRN	?eo_max_elevation@@3MA:DWORD			; eo_max_elevation
EXTRN	?eo_max_visual_range@@3MA:DWORD			; eo_max_visual_range
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0060a92
CONST	SEGMENT
__real@c0060a92 DD 0c0060a92r			; -2.0944
CONST	ENDS
;	COMDAT __real@bf860a92
CONST	SEGMENT
__real@bf860a92 DD 0bf860a92r			; -1.0472
CONST	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@40060a92
CONST	SEGMENT
__real@40060a92 DD 040060a92r			; 2.0944
CONST	ENDS
;	COMDAT __real@3ff6571848000000
CONST	SEGMENT
__real@3ff6571848000000 DQ 03ff6571848000000r	; 1.39626
CONST	ENDS
;	COMDAT __real@3fd6571848000000
CONST	SEGMENT
__real@3fd6571848000000 DQ 03fd6571848000000r	; 0.349066
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3fb1df46a0000000
CONST	SEGMENT
__real@3fb1df46a0000000 DQ 03fb1df46a0000000r	; 0.0698132
CONST	ENDS
;	COMDAT __real@3fa6571848000000
CONST	SEGMENT
__real@3fa6571848000000 DQ 03fa6571848000000r	; 0.0436332
CONST	ENDS
;	COMDAT __real@3f91df46a0000000
CONST	SEGMENT
__real@3f91df46a0000000 DQ 03f91df46a0000000r	; 0.0174533
CONST	ENDS
;	COMDAT __real@3f857254c0000000
CONST	SEGMENT
__real@3f857254c0000000 DQ 03f857254c0000000r	; 0.010472
CONST	ENDS
;	COMDAT __real@3f81df46a0000000
CONST	SEGMENT
__real@3f81df46a0000000 DQ 03f81df46a0000000r	; 0.00872665
CONST	ENDS
;	COMDAT __real@3f71df46a0000000
CONST	SEGMENT
__real@3f71df46a0000000 DQ 03f71df46a0000000r	; 0.00436332
CONST	ENDS
;	COMDAT __real@3f567750
CONST	SEGMENT
__real@3f567750 DD 03f567750r			; 0.837758
CONST	ENDS
;	COMDAT __real@3f4c987100000000
CONST	SEGMENT
__real@3f4c987100000000 DQ 03f4c987100000000r	; 0.000872665
CONST	ENDS
;	COMDAT __real@3f060a92
CONST	SEGMENT
__real@3f060a92 DD 03f060a92r			; 0.523599
CONST	ENDS
;	COMDAT __real@3dd67750
CONST	SEGMENT
__real@3dd67750 DD 03dd67750r			; 0.10472
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA DD 0209H ; `animate_blackhawk_eo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@ DB 'Invalid fie'
	DB	'ld of view = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z@4JA DD 0dbH ; `update_blackhawk_eo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0d0H ; `fast_dec_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0c2H ; `dec_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0b7H ; `fast_inc_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02KMMHFIEO@eo@
CONST	SEGMENT
??_C@_02KMMHFIEO@eo@ DB 'eo', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA DD 0a9H ; `inc_eo_field_of_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DM@OPDFHCEJ@OBJECT_3D_SUB_OBJECT_AH64D_TADS@
CONST	SEGMENT
??_C@_0DM@OPDFHCEJ@OBJECT_3D_SUB_OBJECT_AH64D_TADS@ DB 'OBJECT_3D_SUB_OBJ'
	DB	'ECT_AH64D_TADS_HEADING missing from Apache', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DDNABPCD@inst3d@
CONST	SEGMENT
??_C@_06DDNABPCD@inst3d@ DB 'inst3d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HPPNELPJ@vp@
CONST	SEGMENT
??_C@_02HPPNELPJ@vp@ DB 'vp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\'
	DB	'bh_eo.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA DD 078H ; `get_blackhawk_eo_centred_viewpoint'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC	; fast_dec_eo_field_of_view, COMDAT

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 209  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@fast_dec_e
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@fast_dec_e:

; 210  : 
; 211  : 	eo->field_of_view = eo->min_field_of_view;

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00030	89 10		 mov	 DWORD PTR [eax], edx

; 212  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP	; fast_dec_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC		; dec_eo_field_of_view, COMDAT

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 195  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@dec_eo_fie
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dec_eo_fie:

; 196  : 
; 197  : 	if (eo->field_of_view > eo->min_field_of_view)

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00032	7e 0d		 jle	 SHORT $LN1@dec_eo_fie

; 198  : 	{
; 199  : 		eo->field_of_view--;

  00034	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	83 e9 01	 sub	 ecx, 1
  0003c	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  0003f	89 0a		 mov	 DWORD PTR [edx], ecx
$LN1@dec_eo_fie:

; 200  : 	}
; 201  : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP		; dec_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC	; fast_inc_eo_field_of_view, COMDAT

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 184  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@fast_inc_e
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@fast_inc_e:

; 185  : 
; 186  : 	eo->field_of_view = eo->max_field_of_view;

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00030	89 10		 mov	 DWORD PTR [eax], edx

; 187  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP	; fast_inc_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
_eo$ = 8						; size = 4
?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z PROC		; inc_eo_field_of_view, COMDAT

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 170  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_eo_fie
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_eo_fie:

; 171  : 
; 172  : 	if (eo->field_of_view < eo->max_field_of_view)

  00027	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00032	7d 0d		 jge	 SHORT $LN1@inc_eo_fie

; 173  : 	{
; 174  : 		eo->field_of_view++;

  00034	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	83 c1 01	 add	 ecx, 1
  0003c	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  0003f	89 0a		 mov	 DWORD PTR [edx], ecx
$LN1@inc_eo_fie:

; 175  : 	}
; 176  : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ENDP		; inc_eo_field_of_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?slave_blackhawk_eo_to_current_target@@YGXXZ
_TEXT	SEGMENT
tv69 = -68						; size = 4
tv65 = -68						; size = 4
?slave_blackhawk_eo_to_current_target@@YGXXZ PROC	; slave_blackhawk_eo_to_current_target, COMDAT

; 568  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 569  : 	if (eo_on_target)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_on_target@@3HA, 0 ; eo_on_target
  00010	74 40		 je	 SHORT $LN6@slave_blac

; 570  : 	{
; 571  : 		switch (eo_sensor)

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; eo_sensor
  00017	89 45 bc	 mov	 DWORD PTR tv65[ebp], eax
  0001a	83 7d bc 03	 cmp	 DWORD PTR tv65[ebp], 3
  0001e	74 0e		 je	 SHORT $LN8@slave_blac
  00020	83 7d bc 04	 cmp	 DWORD PTR tv65[ebp], 4
  00024	74 14		 je	 SHORT $LN9@slave_blac
  00026	83 7d bc 05	 cmp	 DWORD PTR tv65[ebp], 5
  0002a	74 1a		 je	 SHORT $LN10@slave_blac
  0002c	eb 22		 jmp	 SHORT $LN2@slave_blac
$LN8@slave_blac:

; 572  : 		{
; 573  : 			case TARGET_ACQUISITION_SYSTEM_FLIR:
; 574  : 			{
; 575  : 				blackhawk_flir.field_of_view = blackhawk_flir.min_field_of_view;

  0002e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?blackhawk_flir@@3UEO_PARAMS@@A+4
  00033	a3 00 00 00 00	 mov	 DWORD PTR ?blackhawk_flir@@3UEO_PARAMS@@A, eax

; 576  : 
; 577  : 				break;

  00038	eb 16		 jmp	 SHORT $LN2@slave_blac
$LN9@slave_blac:

; 578  : 			}
; 579  : 			case TARGET_ACQUISITION_SYSTEM_DTV:
; 580  : 			{
; 581  : 				blackhawk_dtv.field_of_view = blackhawk_dtv.min_field_of_view;

  0003a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?blackhawk_dtv@@3UEO_PARAMS@@A+4
  0003f	a3 00 00 00 00	 mov	 DWORD PTR ?blackhawk_dtv@@3UEO_PARAMS@@A, eax

; 582  : 
; 583  : 				break;

  00044	eb 0a		 jmp	 SHORT $LN2@slave_blac
$LN10@slave_blac:

; 584  : 			}
; 585  : 			case TARGET_ACQUISITION_SYSTEM_DVO:
; 586  : 			{
; 587  : 				blackhawk_dvo.field_of_view = blackhawk_dvo.min_field_of_view;

  00046	a1 04 00 00 00	 mov	 eax, DWORD PTR ?blackhawk_dvo@@3UEO_PARAMS@@A+4
  0004b	a3 00 00 00 00	 mov	 DWORD PTR ?blackhawk_dvo@@3UEO_PARAMS@@A, eax
$LN2@slave_blac:

; 588  : 
; 589  : 				break;
; 590  : 			}
; 591  : 		}
; 592  : 	}
; 593  : 	else

  00050	eb 3e		 jmp	 SHORT $LN1@slave_blac
$LN6@slave_blac:

; 594  : 	{
; 595  : 		switch (eo_sensor)

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; eo_sensor
  00057	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  0005a	83 7d bc 03	 cmp	 DWORD PTR tv69[ebp], 3
  0005e	74 0e		 je	 SHORT $LN11@slave_blac
  00060	83 7d bc 04	 cmp	 DWORD PTR tv69[ebp], 4
  00064	74 14		 je	 SHORT $LN12@slave_blac
  00066	83 7d bc 05	 cmp	 DWORD PTR tv69[ebp], 5
  0006a	74 1a		 je	 SHORT $LN13@slave_blac
  0006c	eb 22		 jmp	 SHORT $LN1@slave_blac
$LN11@slave_blac:

; 596  : 		{
; 597  : 			case TARGET_ACQUISITION_SYSTEM_FLIR:
; 598  : 			{
; 599  : 				blackhawk_flir.field_of_view = blackhawk_flir.max_field_of_view;

  0006e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?blackhawk_flir@@3UEO_PARAMS@@A+8
  00073	a3 00 00 00 00	 mov	 DWORD PTR ?blackhawk_flir@@3UEO_PARAMS@@A, eax

; 600  : 
; 601  : 				break;

  00078	eb 16		 jmp	 SHORT $LN1@slave_blac
$LN12@slave_blac:

; 602  : 			}
; 603  : 			case TARGET_ACQUISITION_SYSTEM_DTV:
; 604  : 			{
; 605  : 				blackhawk_dtv.field_of_view = blackhawk_dtv.max_field_of_view;

  0007a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?blackhawk_dtv@@3UEO_PARAMS@@A+8
  0007f	a3 00 00 00 00	 mov	 DWORD PTR ?blackhawk_dtv@@3UEO_PARAMS@@A, eax

; 606  : 
; 607  : 				break;

  00084	eb 0a		 jmp	 SHORT $LN1@slave_blac
$LN13@slave_blac:

; 608  : 			}
; 609  : 			case TARGET_ACQUISITION_SYSTEM_DVO:
; 610  : 			{
; 611  : 				blackhawk_dvo.field_of_view = blackhawk_dvo.max_field_of_view;

  00086	a1 08 00 00 00	 mov	 eax, DWORD PTR ?blackhawk_dvo@@3UEO_PARAMS@@A+8
  0008b	a3 00 00 00 00	 mov	 DWORD PTR ?blackhawk_dvo@@3UEO_PARAMS@@A, eax
$LN1@slave_blac:

; 612  : 
; 613  : 				break;
; 614  : 			}
; 615  : 		}
; 616  : 	}
; 617  : }

  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?slave_blackhawk_eo_to_current_target@@YGXXZ ENDP	; slave_blackhawk_eo_to_current_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z
_TEXT	SEGMENT
_search_pitch$ = -112					; size = 56
_search_heading$ = -56					; size = 56
_inst3d$ = 8						; size = 4
?animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z PROC ; animate_blackhawk_eo, COMDAT

; 521  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 522  : 	object_3d_sub_object_search_data
; 523  : 		search_heading,
; 524  : 		search_pitch;
; 525  : 
; 526  : 	ASSERT (inst3d);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@animate_bl
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_bl:

; 527  : 
; 528  : 	//
; 529  : 	// TADS
; 530  : 	//
; 531  : 
; 532  : 	search_heading.search_depth = 0;

  0002a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _search_heading$[ebp+8], 0

; 533  : 	search_heading.search_object = inst3d;

  00031	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00034	89 45 c8	 mov	 DWORD PTR _search_heading$[ebp], eax

; 534  : 	search_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_AH64D_TADS_HEADING;

  00037	c7 45 d4 0b 00
	00 00		 mov	 DWORD PTR _search_heading$[ebp+12], 11 ; 0000000bH

; 535  : 
; 536  : 	if (find_object_3d_sub_object (&search_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0003e	8d 45 c8	 lea	 eax, DWORD PTR _search_heading$[ebp]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00047	83 f8 01	 cmp	 eax, 1
  0004a	75 47		 jne	 SHORT $LN4@animate_bl

; 537  : 	{
; 538  : 		search_heading.result_sub_object->relative_heading = eo_azimuth;

  0004c	8b 45 cc	 mov	 eax, DWORD PTR _search_heading$[ebp+4]
  0004f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00057	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 539  : 
; 540  : 		search_pitch.search_depth = 0;

  0005c	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _search_pitch$[ebp+8], 0

; 541  : 		search_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_AH64D_TADS_PITCH;

  00063	c7 45 9c 20 00
	00 00		 mov	 DWORD PTR _search_pitch$[ebp+12], 32 ; 00000020H

; 542  : 
; 543  : 		if (find_object_3d_sub_object_from_sub_object (&search_heading, &search_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0006a	8d 45 90	 lea	 eax, DWORD PTR _search_pitch$[ebp]
  0006d	50		 push	 eax
  0006e	8d 4d c8	 lea	 ecx, DWORD PTR _search_heading$[ebp]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00077	83 f8 01	 cmp	 eax, 1
  0007a	75 17		 jne	 SHORT $LN4@animate_bl

; 544  : 		{
; 545  : 			search_pitch.result_sub_object->relative_pitch = -eo_elevation;

  0007c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00084	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0008b	8b 45 94	 mov	 eax, DWORD PTR _search_pitch$[ebp+4]
  0008e	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0
$LN4@animate_bl:

; 546  : 		}
; 547  : 	}
; 548  : 
; 549  : 	//
; 550  : 	// PNVS
; 551  : 	//
; 552  : 
; 553  : 	search_heading.search_depth = 0;

  00093	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _search_heading$[ebp+8], 0

; 554  : 	search_heading.search_object = inst3d;

  0009a	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0009d	89 45 c8	 mov	 DWORD PTR _search_heading$[ebp], eax

; 555  : 	search_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_AH64D_PNVS_HEADING;

  000a0	c7 45 d4 0a 00
	00 00		 mov	 DWORD PTR _search_heading$[ebp+12], 10 ; 0000000aH

; 556  : 
; 557  : 	if (find_object_3d_sub_object (&search_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000a7	8d 45 c8	 lea	 eax, DWORD PTR _search_heading$[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  000b0	83 f8 01	 cmp	 eax, 1
  000b3	75 17		 jne	 SHORT $LN5@animate_bl

; 558  : 	{
; 559  : 		search_heading.result_sub_object->relative_heading = -pilot_head_heading;

  000b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  000bd	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000c4	8b 45 cc	 mov	 eax, DWORD PTR _search_heading$[ebp+4]
  000c7	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
$LN5@animate_bl:

; 560  : 	}
; 561  : }

  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 04 00	 ret	 4
?animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ENDP ; animate_blackhawk_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?centre_blackhawk_eo@@YGXXZ
_TEXT	SEGMENT
?centre_blackhawk_eo@@YGXXZ PROC			; centre_blackhawk_eo, COMDAT

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 511  : 	eo_azimuth = rad (0.0);

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 512  : 
; 513  : 	eo_elevation = rad (0.0);

  00014	0f 57 c0	 xorps	 xmm0, xmm0
  00017	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 514  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?centre_blackhawk_eo@@YGXXZ ENDP			; centre_blackhawk_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z
_TEXT	SEGMENT
tv82 = -104						; size = 4
_vertical_value$1 = -36					; size = 4
_horizontal_value$2 = -32				; size = 4
_panning_offset_vert$3 = -28				; size = 4
_panning_offset_horiz$4 = -24				; size = 4
_ROTATE_RATE$5 = -20					; size = 4
_coarse_slew_rate$ = -16				; size = 4
_mouse_slew_rate$ = -12					; size = 4
_medium_slew_rate$ = -8					; size = 4
_fine_slew_rate$ = -4					; size = 4
_eo$ = 8						; size = 4
?update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z PROC		; update_blackhawk_eo, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 220  : 	float
; 221  : 		fine_slew_rate,
; 222  : 		medium_slew_rate,
; 223  : 		mouse_slew_rate, // Jabberwock 030930 
; 224  : 		coarse_slew_rate;
; 225  : 
; 226  : 	ASSERT (eo);

  00009	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN20@update_bla
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN20@update_bla:

; 227  : 
; 228  : 	////////////////////////////////////////
; 229  : 	//
; 230  : 	// field of view
; 231  : 	//
; 232  : 	////////////////////////////////////////
; 233  : 
; 234  : 	while (single_target_acquisition_system_inc_range_key)

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_inc_range_key@@3HA, 0 ; single_target_acquisition_system_inc_range_key
  0002e	74 18		 je	 SHORT $LN3@update_bla

; 235  : 	{
; 236  : 		dec_eo_field_of_view (eo);

  00030	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; dec_eo_field_of_view

; 237  : 
; 238  : 		single_target_acquisition_system_inc_range_key--;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_inc_range_key@@3HA ; single_target_acquisition_system_inc_range_key
  0003e	83 e8 01	 sub	 eax, 1
  00041	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_inc_range_key@@3HA, eax ; single_target_acquisition_system_inc_range_key

; 239  : 	}

  00046	eb df		 jmp	 SHORT $LN20@update_bla
$LN3@update_bla:

; 240  : 
; 241  : 	while (single_target_acquisition_system_inc_range_fast_key)

  00048	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_inc_range_fast_key@@3HA, 0 ; single_target_acquisition_system_inc_range_fast_key
  0004f	74 18		 je	 SHORT $LN5@update_bla

; 242  : 	{
; 243  : 		fast_dec_eo_field_of_view (eo);

  00051	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?fast_dec_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; fast_dec_eo_field_of_view

; 244  : 
; 245  : 		single_target_acquisition_system_inc_range_fast_key--;

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_inc_range_fast_key@@3HA ; single_target_acquisition_system_inc_range_fast_key
  0005f	83 e8 01	 sub	 eax, 1
  00062	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_inc_range_fast_key@@3HA, eax ; single_target_acquisition_system_inc_range_fast_key

; 246  : 	}

  00067	eb df		 jmp	 SHORT $LN3@update_bla
$LN5@update_bla:

; 247  : 
; 248  : 	////////////////////////////////////////
; 249  : 
; 250  : 	while (single_target_acquisition_system_dec_range_key)

  00069	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_dec_range_key@@3HA, 0 ; single_target_acquisition_system_dec_range_key
  00070	74 18		 je	 SHORT $LN7@update_bla

; 251  : 	{
; 252  : 		inc_eo_field_of_view (eo);

  00072	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; inc_eo_field_of_view

; 253  : 
; 254  : 		single_target_acquisition_system_dec_range_key--;

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_dec_range_key@@3HA ; single_target_acquisition_system_dec_range_key
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_dec_range_key@@3HA, eax ; single_target_acquisition_system_dec_range_key

; 255  : 	}

  00088	eb df		 jmp	 SHORT $LN5@update_bla
$LN7@update_bla:

; 256  : 
; 257  : 	while (single_target_acquisition_system_dec_range_fast_key)

  0008a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_dec_range_fast_key@@3HA, 0 ; single_target_acquisition_system_dec_range_fast_key
  00091	74 18		 je	 SHORT $LN9@update_bla

; 258  : 	{
; 259  : 		fast_inc_eo_field_of_view (eo);

  00093	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?fast_inc_eo_field_of_view@@YGXPAUEO_PARAMS@@@Z ; fast_inc_eo_field_of_view

; 260  : 
; 261  : 		single_target_acquisition_system_dec_range_fast_key--;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_dec_range_fast_key@@3HA ; single_target_acquisition_system_dec_range_fast_key
  000a1	83 e8 01	 sub	 eax, 1
  000a4	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_dec_range_fast_key@@3HA, eax ; single_target_acquisition_system_dec_range_fast_key

; 262  : 	}

  000a9	eb df		 jmp	 SHORT $LN7@update_bla
$LN9@update_bla:

; 263  : 
; 264  : 	////////////////////////////////////////
; 265  : 	//
; 266  : 	// slew optics
; 267  : 	//
; 268  : 	////////////////////////////////////////
; 269  : 
; 270  : 	switch (eo->field_of_view)

  000ab	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	89 4d 98	 mov	 DWORD PTR tv82[ebp], ecx
  000b3	83 7d 98 01	 cmp	 DWORD PTR tv82[ebp], 1
  000b7	74 15		 je	 SHORT $LN21@update_bla
  000b9	83 7d 98 02	 cmp	 DWORD PTR tv82[ebp], 2
  000bd	74 78		 je	 SHORT $LN22@update_bla
  000bf	83 7d 98 03	 cmp	 DWORD PTR tv82[ebp], 3
  000c3	0f 84 d0 00 00
	00		 je	 $LN23@update_bla
  000c9	e9 2d 01 00 00	 jmp	 $LN24@update_bla
$LN21@update_bla:

; 271  : 	{
; 272  : 		////////////////////////////////////////
; 273  : 		case EO_FOV_NARROW:
; 274  : 		////////////////////////////////////////
; 275  : 		{
; 276  : 			fine_slew_rate = rad (0.05) * get_delta_time ();

  000ce	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  000d6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f4c987100000000
  000de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e2	f3 0f 11 45 fc	 movss	 DWORD PTR _fine_slew_rate$[ebp], xmm0

; 277  : 
; 278  : 			medium_slew_rate = rad (0.25) * get_delta_time ();

  000e7	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  000ef	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f71df46a0000000
  000f7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000fb	f3 0f 11 45 f8	 movss	 DWORD PTR _medium_slew_rate$[ebp], xmm0

; 279  : 
; 280  : 			mouse_slew_rate = rad (0.6) * get_delta_time ();	// Jabberwock 030930

  00100	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00108	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f857254c0000000
  00110	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00114	f3 0f 11 45 f4	 movss	 DWORD PTR _mouse_slew_rate$[ebp], xmm0

; 281  : 			
; 282  : 			coarse_slew_rate = rad (1.0) * get_delta_time ();

  00119	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00121	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  00129	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0012d	f3 0f 11 45 f0	 movss	 DWORD PTR _coarse_slew_rate$[ebp], xmm0

; 283  : 
; 284  : 			break;

  00132	e9 d7 00 00 00	 jmp	 $LN10@update_bla
$LN22@update_bla:

; 285  : 		}
; 286  : 		////////////////////////////////////////
; 287  : 		case EO_FOV_MEDIUM:
; 288  : 		////////////////////////////////////////
; 289  : 		{
; 290  : 			fine_slew_rate = rad (0.5) * get_delta_time ();

  00137	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0013f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f81df46a0000000
  00147	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014b	f3 0f 11 45 fc	 movss	 DWORD PTR _fine_slew_rate$[ebp], xmm0

; 291  : 
; 292  : 			medium_slew_rate = rad (2.5) * get_delta_time ();

  00150	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00158	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa6571848000000
  00160	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00164	f3 0f 11 45 f8	 movss	 DWORD PTR _medium_slew_rate$[ebp], xmm0

; 293  : 
; 294  : 			mouse_slew_rate = rad (6) * get_delta_time ();	// Jabberwock 030930

  00169	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dd67750
  00171	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00179	f3 0f 11 45 f4	 movss	 DWORD PTR _mouse_slew_rate$[ebp], xmm0

; 295  : 			
; 296  : 			coarse_slew_rate = rad (10.0) * get_delta_time ();

  0017e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00186	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc6571848000000
  0018e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00192	f3 0f 11 45 f0	 movss	 DWORD PTR _coarse_slew_rate$[ebp], xmm0

; 297  : 
; 298  : 			break;

  00197	eb 75		 jmp	 SHORT $LN10@update_bla
$LN23@update_bla:

; 299  : 		}
; 300  : 		////////////////////////////////////////
; 301  : 		case EO_FOV_WIDE:
; 302  : 		////////////////////////////////////////
; 303  : 		{
; 304  : 			fine_slew_rate = rad (4.0) * get_delta_time ();

  00199	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001a1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb1df46a0000000
  001a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ad	f3 0f 11 45 fc	 movss	 DWORD PTR _fine_slew_rate$[ebp], xmm0

; 305  : 
; 306  : 			medium_slew_rate = rad (20.0) * get_delta_time ();

  001b2	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001ba	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd6571848000000
  001c2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c6	f3 0f 11 45 f8	 movss	 DWORD PTR _medium_slew_rate$[ebp], xmm0

; 307  : 
; 308  : 			mouse_slew_rate = rad (48) * get_delta_time ();	// Jabberwock 030930

  001cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f567750
  001d3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  001db	f3 0f 11 45 f4	 movss	 DWORD PTR _mouse_slew_rate$[ebp], xmm0

; 309  : 			
; 310  : 			coarse_slew_rate = rad (80.0) * get_delta_time ();

  001e0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  001e8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff6571848000000
  001f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001f4	f3 0f 11 45 f0	 movss	 DWORD PTR _coarse_slew_rate$[ebp], xmm0

; 311  : 
; 312  : 			break;

  001f9	eb 13		 jmp	 SHORT $LN10@update_bla
$LN24@update_bla:

; 313  : 		}
; 314  : 		////////////////////////////////////////
; 315  : 		default:
; 316  : 		////////////////////////////////////////
; 317  : 		{
; 318  : 			debug_fatal ("Invalid field of view = %d", eo->field_of_view);

  001fb	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  001fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00200	51		 push	 ecx
  00201	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@
  00206	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0020b	83 c4 08	 add	 esp, 8
$LN10@update_bla:

; 319  : 
; 320  : 			break;
; 321  : 		}
; 322  : 	}
; 323  : 
; 324  : 	////////////////////////////////////////
; 325  : 
; 326  : 	if (continuous_target_acquisition_system_steer_left_fast_key)

  0020e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_fast_key
  00215	74 32		 je	 SHORT $LN25@update_bla

; 327  : 	{
; 328  : 		eo_azimuth -= coarse_slew_rate;

  00217	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  0021f	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00224	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 329  : 
; 330  : 		eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  0022c	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  00231	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  00236	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0023b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0023f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
  00247	eb 74		 jmp	 SHORT $LN29@update_bla
$LN25@update_bla:

; 331  : 	}
; 332  : 	else if (continuous_target_acquisition_system_steer_left_fine_key)

  00249	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_fine_key
  00250	74 32		 je	 SHORT $LN27@update_bla

; 333  : 	{
; 334  : 		eo_azimuth -= fine_slew_rate;

  00252	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  0025a	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  0025f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 335  : 
; 336  : 		eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  00267	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  0026c	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  00271	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00276	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0027a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
  00282	eb 39		 jmp	 SHORT $LN29@update_bla
$LN27@update_bla:

; 337  : 	}
; 338  : 	else if (continuous_target_acquisition_system_steer_left_key)

  00284	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_left_key@@3HA, 0 ; continuous_target_acquisition_system_steer_left_key
  0028b	74 30		 je	 SHORT $LN29@update_bla

; 339  : 	{
; 340  : 		eo_azimuth -= medium_slew_rate;

  0028d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00295	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  0029a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 341  : 
; 342  : 		eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  002a2	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  002a7	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  002ac	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  002b1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
$LN29@update_bla:

; 343  : 	}
; 344  : 
; 345  : 	////////////////////////////////////////
; 346  : 
; 347  : 	if (continuous_target_acquisition_system_steer_right_fast_key)

  002bd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_fast_key
  002c4	74 32		 je	 SHORT $LN30@update_bla

; 348  : 	{
; 349  : 		eo_azimuth += coarse_slew_rate;

  002c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  002ce	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  002d3	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 350  : 
; 351  : 		eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  002db	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  002e0	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  002e5	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  002ea	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002ee	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
  002f6	eb 74		 jmp	 SHORT $LN34@update_bla
$LN30@update_bla:

; 352  : 	}
; 353  : 	else if (continuous_target_acquisition_system_steer_right_fine_key)

  002f8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_fine_key
  002ff	74 32		 je	 SHORT $LN32@update_bla

; 354  : 	{
; 355  : 		eo_azimuth += fine_slew_rate;

  00301	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00309	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  0030e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 356  : 
; 357  : 		eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  00316	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  0031b	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  00320	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00325	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00329	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
  00331	eb 39		 jmp	 SHORT $LN34@update_bla
$LN32@update_bla:

; 358  : 	}
; 359  : 	else if (continuous_target_acquisition_system_steer_right_key)

  00333	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_right_key@@3HA, 0 ; continuous_target_acquisition_system_steer_right_key
  0033a	74 30		 je	 SHORT $LN34@update_bla

; 360  : 	{
; 361  : 		eo_azimuth += medium_slew_rate;

  0033c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00344	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  00349	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 362  : 
; 363  : 		eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  00351	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  00356	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  0035b	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00360	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00364	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
$LN34@update_bla:

; 364  : 	}
; 365  : 
; 366  : 	////////////////////////////////////////
; 367  : 
; 368  : 	if (continuous_target_acquisition_system_steer_up_fast_key)

  0036c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_fast_key
  00373	74 32		 je	 SHORT $LN35@update_bla

; 369  : 	{
; 370  : 		eo_elevation += coarse_slew_rate;

  00375	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  0037d	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00382	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 371  : 
; 372  : 		eo_elevation = min (eo_elevation, eo_max_elevation);

  0038a	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  0038f	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  00394	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00399	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0039d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
  003a5	eb 74		 jmp	 SHORT $LN39@update_bla
$LN35@update_bla:

; 373  : 	}
; 374  : 	else if (continuous_target_acquisition_system_steer_up_fine_key)

  003a7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_fine_key
  003ae	74 32		 je	 SHORT $LN37@update_bla

; 375  : 	{
; 376  : 		eo_elevation += fine_slew_rate;

  003b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  003b8	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  003bd	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 377  : 
; 378  : 		eo_elevation = min (eo_elevation, eo_max_elevation);

  003c5	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  003ca	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  003cf	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003d4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003d8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
  003e0	eb 39		 jmp	 SHORT $LN39@update_bla
$LN37@update_bla:

; 379  : 	}
; 380  : 	else if (continuous_target_acquisition_system_steer_up_key)

  003e2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_up_key@@3HA, 0 ; continuous_target_acquisition_system_steer_up_key
  003e9	74 30		 je	 SHORT $LN39@update_bla

; 381  : 	{
; 382  : 		eo_elevation += medium_slew_rate;

  003eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  003f3	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  003f8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 383  : 
; 384  : 		eo_elevation = min (eo_elevation, eo_max_elevation);

  00400	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  00405	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  0040a	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0040f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00413	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
$LN39@update_bla:

; 385  : 	}
; 386  : 
; 387  : 	////////////////////////////////////////
; 388  : 
; 389  : 	if (continuous_target_acquisition_system_steer_down_fast_key)

  0041b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_fast_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_fast_key
  00422	74 32		 je	 SHORT $LN40@update_bla

; 390  : 	{
; 391  : 		eo_elevation -= coarse_slew_rate;

  00424	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  0042c	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00431	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 392  : 
; 393  : 		eo_elevation = max (eo_elevation, eo_min_elevation);

  00439	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  0043e	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  00443	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00448	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0044c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
  00454	eb 74		 jmp	 SHORT $LN44@update_bla
$LN40@update_bla:

; 394  : 	}
; 395  : 	else if (continuous_target_acquisition_system_steer_down_fine_key)

  00456	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_fine_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_fine_key
  0045d	74 32		 je	 SHORT $LN42@update_bla

; 396  : 	{
; 397  : 		eo_elevation -= fine_slew_rate;

  0045f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00467	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _fine_slew_rate$[ebp]
  0046c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 398  : 
; 399  : 		eo_elevation = max (eo_elevation, eo_min_elevation);

  00474	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  00479	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  0047e	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00483	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00487	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
  0048f	eb 39		 jmp	 SHORT $LN44@update_bla
$LN42@update_bla:

; 400  : 	}
; 401  : 	else if (continuous_target_acquisition_system_steer_down_key)

  00491	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?continuous_target_acquisition_system_steer_down_key@@3HA, 0 ; continuous_target_acquisition_system_steer_down_key
  00498	74 30		 je	 SHORT $LN44@update_bla

; 402  : 	{
; 403  : 		eo_elevation -= medium_slew_rate;

  0049a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  004a2	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _medium_slew_rate$[ebp]
  004a7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 404  : 
; 405  : 		eo_elevation = max (eo_elevation, eo_min_elevation);

  004af	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  004b4	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  004b9	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  004be	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  004c2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
$LN44@update_bla:

; 406  : 	}
; 407  : 
; 408  : 	////////////////////////////////////////
; 409  : 
; 410  : 	while (single_target_acquisition_system_select_next_target_key)

  004ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_next_target_key@@3HA, 0 ; single_target_acquisition_system_select_next_target_key
  004d1	74 14		 je	 SHORT $LN13@update_bla

; 411  : 	{
; 412  : 		select_next_eo_target ();

  004d3	e8 00 00 00 00	 call	 ?select_next_eo_target@@YGXXZ ; select_next_eo_target

; 413  : 
; 414  : 		single_target_acquisition_system_select_next_target_key--;

  004d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_next_target_key@@3HA ; single_target_acquisition_system_select_next_target_key
  004dd	83 e8 01	 sub	 eax, 1
  004e0	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_next_target_key@@3HA, eax ; single_target_acquisition_system_select_next_target_key

; 415  : 	}

  004e5	eb e3		 jmp	 SHORT $LN44@update_bla
$LN13@update_bla:

; 416  : 
; 417  : 	////////////////////////////////////////
; 418  : 
; 419  : 	while (single_target_acquisition_system_select_previous_target_key)

  004e7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_previous_target_key@@3HA, 0 ; single_target_acquisition_system_select_previous_target_key
  004ee	74 14		 je	 SHORT $LN15@update_bla

; 420  : 	{
; 421  : 		select_previous_eo_target ();

  004f0	e8 00 00 00 00	 call	 ?select_previous_eo_target@@YGXXZ ; select_previous_eo_target

; 422  : 
; 423  : 		single_target_acquisition_system_select_previous_target_key--;

  004f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_previous_target_key@@3HA ; single_target_acquisition_system_select_previous_target_key
  004fa	83 e8 01	 sub	 eax, 1
  004fd	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_previous_target_key@@3HA, eax ; single_target_acquisition_system_select_previous_target_key

; 424  : 	}

  00502	eb e3		 jmp	 SHORT $LN13@update_bla
$LN15@update_bla:

; 425  : 
; 426  : // Jabberwock 031107 Designated targets
; 427  : 	
; 428  : 	while (single_target_acquisition_system_select_next_designated_key)

  00504	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_next_designated_key@@3HA, 0 ; single_target_acquisition_system_select_next_designated_key
  0050b	74 14		 je	 SHORT $LN17@update_bla

; 429  : 	{
; 430  : 		select_next_designated_eo_target ();

  0050d	e8 00 00 00 00	 call	 ?select_next_designated_eo_target@@YGXXZ ; select_next_designated_eo_target

; 431  : 
; 432  : 		single_target_acquisition_system_select_next_designated_key--;

  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_next_designated_key@@3HA ; single_target_acquisition_system_select_next_designated_key
  00517	83 e8 01	 sub	 eax, 1
  0051a	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_next_designated_key@@3HA, eax ; single_target_acquisition_system_select_next_designated_key

; 433  : 	}

  0051f	eb e3		 jmp	 SHORT $LN15@update_bla
$LN17@update_bla:

; 434  : 
; 435  : 	////////////////////////////////////////
; 436  : 
; 437  : 	while (single_target_acquisition_system_select_previous_designated_key)

  00521	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?single_target_acquisition_system_select_previous_designated_key@@3HA, 0 ; single_target_acquisition_system_select_previous_designated_key
  00528	74 14		 je	 SHORT $LN19@update_bla

; 438  : 	{
; 439  : 		select_previous_designated_eo_target ();

  0052a	e8 00 00 00 00	 call	 ?select_previous_designated_eo_target@@YGXXZ ; select_previous_designated_eo_target

; 440  : 
; 441  : 		single_target_acquisition_system_select_previous_designated_key--;

  0052f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?single_target_acquisition_system_select_previous_designated_key@@3HA ; single_target_acquisition_system_select_previous_designated_key
  00534	83 e8 01	 sub	 eax, 1
  00537	a3 00 00 00 00	 mov	 DWORD PTR ?single_target_acquisition_system_select_previous_designated_key@@3HA, eax ; single_target_acquisition_system_select_previous_designated_key

; 442  : 	}	

  0053c	eb e3		 jmp	 SHORT $LN17@update_bla
$LN19@update_bla:

; 443  : 
; 444  : // Jabberwock 031107 ends	
; 445  : 
; 446  : 	if ( command_line_eo_pan_joystick_index == -1 )

  0053e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_pan_joystick_index@@3HA, -1 ; command_line_eo_pan_joystick_index
  00545	0f 85 c9 00 00
	00		 jne	 $LN45@update_bla

; 447  : 	{						
; 448  : 		float ROTATE_RATE = (float) command_line_mouse_look_speed / 5.0;

  0054b	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?command_line_mouse_look_speed@@3HA ; command_line_mouse_look_speed
  00553	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00557	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4014000000000000
  0055f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00563	f3 0f 11 45 ec	 movss	 DWORD PTR _ROTATE_RATE$5[ebp], xmm0

; 449  : 
; 450  : 		eo_azimuth = get_eo_azimuth (ROTATE_RATE, coarse_slew_rate, eo_azimuth, eo_min_azimuth, eo_max_azimuth, mouse_slew_rate);

  00568	51		 push	 ecx
  00569	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _mouse_slew_rate$[ebp]
  0056e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00573	51		 push	 ecx
  00574	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  0057c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00581	51		 push	 ecx
  00582	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_azimuth@@3MA
  0058a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058f	51		 push	 ecx
  00590	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00598	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0059d	51		 push	 ecx
  0059e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  005a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a8	51		 push	 ecx
  005a9	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ROTATE_RATE$5[ebp]
  005ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b3	e8 00 00 00 00	 call	 ?get_eo_azimuth@@YGMMMMMMM@Z ; get_eo_azimuth
  005b8	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?eo_azimuth@@3MA ; eo_azimuth

; 451  : 		eo_elevation = get_eo_elevation (ROTATE_RATE, coarse_slew_rate, eo_elevation, eo_min_elevation, eo_max_elevation, mouse_slew_rate);

  005be	51		 push	 ecx
  005bf	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _mouse_slew_rate$[ebp]
  005c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c9	51		 push	 ecx
  005ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  005d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d7	51		 push	 ecx
  005d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  005e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e5	51		 push	 ecx
  005e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  005ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f3	51		 push	 ecx
  005f4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  005f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fe	51		 push	 ecx
  005ff	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ROTATE_RATE$5[ebp]
  00604	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00609	e8 00 00 00 00	 call	 ?get_eo_elevation@@YGMMMMMMM@Z ; get_eo_elevation
  0060e	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?eo_elevation@@3MA ; eo_elevation
$LN45@update_bla:

; 452  : 	}
; 453  : 	
; 454  : 	eo->field_of_view = get_old_eo_zoom(eo->field_of_view, eo->max_field_of_view, eo->min_field_of_view);

  00614	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00617	f3 0f 2a 40 04	 cvtsi2ss xmm0, DWORD PTR [eax+4]
  0061c	51		 push	 ecx
  0061d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00622	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  00625	f3 0f 2a 41 08	 cvtsi2ss xmm0, DWORD PTR [ecx+8]
  0062a	51		 push	 ecx
  0062b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00630	8b 55 08	 mov	 edx, DWORD PTR _eo$[ebp]
  00633	f3 0f 2a 02	 cvtsi2ss xmm0, DWORD PTR [edx]
  00637	51		 push	 ecx
  00638	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0063d	e8 00 00 00 00	 call	 ?get_old_eo_zoom@@YGMMMM@Z ; get_old_eo_zoom
  00642	e8 00 00 00 00	 call	 __ftol2_sse
  00647	8b 4d 08	 mov	 ecx, DWORD PTR _eo$[ebp]
  0064a	89 01		 mov	 DWORD PTR [ecx], eax

; 455  : 
; 456  : 	////////////////////////////////////////
; 457  : 
; 458  : 	// Retro 31Oct2004 - copy+paste of loke's comanche EO slew code
; 459  : 	// loke 030315
; 460  : 	// added code to allow the user to slew the eo device using joystick axes
; 461  : 
; 462  : 	if (command_line_eo_pan_joystick_index != -1)

  0064c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?command_line_eo_pan_joystick_index@@3HA, -1 ; command_line_eo_pan_joystick_index
  00653	0f 84 01 01 00
	00		 je	 $LN50@update_bla

; 463  : 	{
; 464  : 		float
; 465  : 			panning_offset_horiz,
; 466  : 			panning_offset_vert;
; 467  : 
; 468  : 		int
; 469  : 			horizontal_value,
; 470  : 			vertical_value;
; 471  : 		
; 472  : 		horizontal_value = get_joystick_axis (command_line_eo_pan_joystick_index, command_line_eo_pan_horizontal_joystick_axis);

  00659	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_eo_pan_horizontal_joystick_axis@@3HA ; command_line_eo_pan_horizontal_joystick_axis
  0065e	50		 push	 eax
  0065f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_eo_pan_joystick_index@@3HA ; command_line_eo_pan_joystick_index
  00665	51		 push	 ecx
  00666	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  0066b	89 45 e0	 mov	 DWORD PTR _horizontal_value$2[ebp], eax

; 473  : 
; 474  : 		panning_offset_horiz = make_panning_offset_from_axis (horizontal_value);

  0066e	8b 45 e0	 mov	 eax, DWORD PTR _horizontal_value$2[ebp]
  00671	50		 push	 eax
  00672	e8 00 00 00 00	 call	 ?make_panning_offset_from_axis@@YGMJ@Z ; make_panning_offset_from_axis
  00677	d9 5d e8	 fstp	 DWORD PTR _panning_offset_horiz$4[ebp]

; 475  : 
; 476  : 		eo_azimuth += panning_offset_horiz * coarse_slew_rate;

  0067a	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _panning_offset_horiz$4[ebp]
  0067f	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00684	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  0068c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 477  : 
; 478  : 		if (panning_offset_horiz > 0)

  00694	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _panning_offset_horiz$4[ebp]
  00699	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  006a0	76 1d		 jbe	 SHORT $LN47@update_bla

; 479  : 		{
; 480  : 			eo_azimuth = min (eo_azimuth, eo_max_azimuth);

  006a2	68 00 00 00 00	 push	 OFFSET ?eo_max_azimuth@@3MA ; eo_max_azimuth
  006a7	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  006ac	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  006b1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006b5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 481  : 		}
; 482  : 		else

  006bd	eb 1b		 jmp	 SHORT $LN48@update_bla
$LN47@update_bla:

; 483  : 		{
; 484  : 			eo_azimuth = max (eo_azimuth, eo_min_azimuth);

  006bf	68 00 00 00 00	 push	 OFFSET ?eo_min_azimuth@@3MA ; eo_min_azimuth
  006c4	68 00 00 00 00	 push	 OFFSET ?eo_azimuth@@3MA	; eo_azimuth
  006c9	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  006ce	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006d2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0
$LN48@update_bla:

; 485  : 		}
; 486  : 
; 487  : 
; 488  : 		vertical_value = get_joystick_axis (command_line_eo_pan_joystick_index, command_line_eo_pan_vertical_joystick_axis);

  006da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_eo_pan_vertical_joystick_axis@@3HA ; command_line_eo_pan_vertical_joystick_axis
  006df	50		 push	 eax
  006e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_eo_pan_joystick_index@@3HA ; command_line_eo_pan_joystick_index
  006e6	51		 push	 ecx
  006e7	e8 00 00 00 00	 call	 ?get_joystick_axis@@YGHHH@Z ; get_joystick_axis
  006ec	89 45 dc	 mov	 DWORD PTR _vertical_value$1[ebp], eax

; 489  : 
; 490  : 		panning_offset_vert = make_panning_offset_from_axis (vertical_value);

  006ef	8b 45 dc	 mov	 eax, DWORD PTR _vertical_value$1[ebp]
  006f2	50		 push	 eax
  006f3	e8 00 00 00 00	 call	 ?make_panning_offset_from_axis@@YGMJ@Z ; make_panning_offset_from_axis
  006f8	d9 5d e4	 fstp	 DWORD PTR _panning_offset_vert$3[ebp]

; 491  : 
; 492  : 		eo_elevation -= panning_offset_vert * coarse_slew_rate;

  006fb	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _panning_offset_vert$3[ebp]
  00700	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _coarse_slew_rate$[ebp]
  00705	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?eo_elevation@@3MA
  0070d	f3 0f 5c c8	 subss	 xmm1, xmm0
  00711	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm1

; 493  : 
; 494  : 		if (panning_offset_vert < 0)

  00719	0f 57 c0	 xorps	 xmm0, xmm0
  0071c	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _panning_offset_vert$3[ebp]
  00720	76 1d		 jbe	 SHORT $LN49@update_bla

; 495  : 		{
; 496  : 			eo_elevation = min (eo_elevation, eo_max_elevation);

  00722	68 00 00 00 00	 push	 OFFSET ?eo_max_elevation@@3MA ; eo_max_elevation
  00727	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  0072c	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00731	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00735	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 497  : 		}
; 498  : 		else

  0073d	eb 1b		 jmp	 SHORT $LN50@update_bla
$LN49@update_bla:

; 499  : 		{
; 500  : 			eo_elevation = max (eo_elevation, eo_min_elevation);

  0073f	68 00 00 00 00	 push	 OFFSET ?eo_min_elevation@@3MA ; eo_min_elevation
  00744	68 00 00 00 00	 push	 OFFSET ?eo_elevation@@3MA ; eo_elevation
  00749	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0074e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00752	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0
$LN50@update_bla:

; 501  : 		}
; 502  : 	}
; 503  : }

  0075a	5f		 pop	 edi
  0075b	5e		 pop	 esi
  0075c	5b		 pop	 ebx
  0075d	8b e5		 mov	 esp, ebp
  0075f	5d		 pop	 ebp
  00760	c2 04 00	 ret	 4
?update_blackhawk_eo@@YGXPAUEO_PARAMS@@@Z ENDP		; update_blackhawk_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z
_TEXT	SEGMENT
tv140 = -136						; size = 4
tv83 = -136						; size = 4
tv154 = -132						; size = 4
tv132 = -132						; size = 4
tv75 = -132						; size = 4
_search$ = -64						; size = 56
_inst3d$ = -8						; size = 4
_source$ = -4						; size = 4
_vp$ = 8						; size = 4
?get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z PROC ; get_blackhawk_eo_centred_viewpoint, COMDAT

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 121  : 	entity
; 122  : 		*source;
; 123  : 
; 124  : 	object_3d_instance
; 125  : 		*inst3d;
; 126  : 
; 127  : 	object_3d_sub_object_search_data
; 128  : 		search;
; 129  : 
; 130  : 	ASSERT (vp);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _vp$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@get_blackh
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  00017	83 c0 0a	 add	 eax, 10			; 0000000aH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02HPPNELPJ@vp@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_blackh:

; 131  : 
; 132  : 	source = get_gunship_entity ();

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002f	89 45 fc	 mov	 DWORD PTR _source$[ebp], eax

; 133  : 
; 134  : 	inst3d = (object_3d_instance *) get_local_entity_ptr_value (source, PTR_TYPE_INSTANCE_3D_OBJECT);

  00032	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  00036	74 0d		 je	 SHORT $LN7@get_blackh
  00038	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00043	eb 24		 jmp	 SHORT $LN8@get_blackh
$LN7@get_blackh:
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  0004b	83 c2 0e	 add	 edx, 14			; 0000000eH
  0004e	52		 push	 edx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN8@get_blackh:
  00069	b9 01 00 00 00	 mov	 ecx, 1
  0006e	85 c9		 test	 ecx, ecx
  00070	74 0c		 je	 SHORT $LN9@get_blackh
  00072	c7 85 78 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv83[ebp], 2
  0007c	eb 24		 jmp	 SHORT $LN10@get_blackh
$LN9@get_blackh:
  0007e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  00084	83 c2 0e	 add	 edx, 14			; 0000000eH
  00087	52		 push	 edx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00098	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN10@get_blackh:
  000a2	6a 02		 push	 2
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _source$[ebp]
  000a7	51		 push	 ecx
  000a8	6b 95 7c ff ff
	ff 50		 imul	 edx, DWORD PTR tv75[ebp], 80
  000af	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000bc	ff d1		 call	 ecx
  000be	89 45 f8	 mov	 DWORD PTR _inst3d$[ebp], eax

; 135  : 
; 136  : 	ASSERT (inst3d);

  000c1	83 7d f8 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  000c5	75 18		 jne	 SHORT $LN3@get_blackh
  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  000cc	83 c0 10	 add	 eax, 16			; 00000010H
  000cf	50		 push	 eax
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_blackh:

; 137  : 
; 138  : 	get_local_entity_vec3d (source, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  000df	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  000e3	74 0d		 je	 SHORT $LN11@get_blackh
  000e5	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  000e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ea	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv132[ebp], ecx
  000f0	eb 24		 jmp	 SHORT $LN12@get_blackh
$LN11@get_blackh:
  000f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  000f8	83 c2 12	 add	 edx, 18			; 00000012H
  000fb	52		 push	 edx
  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN12@get_blackh:
  00116	b9 01 00 00 00	 mov	 ecx, 1
  0011b	85 c9		 test	 ecx, ecx
  0011d	74 0c		 je	 SHORT $LN13@get_blackh
  0011f	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv140[ebp], 8
  00129	eb 24		 jmp	 SHORT $LN14@get_blackh
$LN13@get_blackh:
  0012b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  00131	83 c2 12	 add	 edx, 18			; 00000012H
  00134	52		 push	 edx
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00145	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN14@get_blackh:
  0014f	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00152	83 c1 08	 add	 ecx, 8
  00155	51		 push	 ecx
  00156	6a 08		 push	 8
  00158	8b 55 fc	 mov	 edx, DWORD PTR _source$[ebp]
  0015b	52		 push	 edx
  0015c	6b 85 7c ff ff
	ff 60		 imul	 eax, DWORD PTR tv132[ebp], 96
  00163	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv140[ebp]
  00169	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00170	ff d2		 call	 edx

; 139  : 
; 140  : 	get_local_entity_attitude_matrix (source, inst3d->vp.attitude);

  00172	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  00176	74 0d		 je	 SHORT $LN15@get_blackh
  00178	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  0017b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv154[ebp], ecx
  00183	eb 24		 jmp	 SHORT $LN16@get_blackh
$LN15@get_blackh:
  00185	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z@4JA
  0018b	83 c2 14	 add	 edx, 20			; 00000014H
  0018e	52		 push	 edx
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NKFIKCLK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00194	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv154[ebp], 0
$LN16@get_blackh:
  001a9	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  001ac	83 c1 14	 add	 ecx, 20			; 00000014H
  001af	51		 push	 ecx
  001b0	8b 55 fc	 mov	 edx, DWORD PTR _source$[ebp]
  001b3	52		 push	 edx
  001b4	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv154[ebp]
  001ba	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  001c1	ff d1		 call	 ecx

; 141  : 
; 142  : 	search.search_depth = 0;

  001c3	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _search$[ebp+8], 0

; 143  : 	search.search_object = inst3d;

  001ca	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  001cd	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 144  : 	search.sub_object_index = OBJECT_3D_SUB_OBJECT_AH64D_TADS_HEADING;

  001d0	c7 45 cc 0b 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 11 ; 0000000bH

; 145  : 
; 146  : 	if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  001d7	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  001da	50		 push	 eax
  001db	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  001e0	83 f8 01	 cmp	 eax, 1
  001e3	75 0f		 jne	 SHORT $LN4@get_blackh

; 147  : 	{
; 148  : 		get_3d_sub_object_world_viewpoint (search.result_sub_object, vp);

  001e5	8b 45 08	 mov	 eax, DWORD PTR _vp$[ebp]
  001e8	50		 push	 eax
  001e9	8b 4d c4	 mov	 ecx, DWORD PTR _search$[ebp+4]
  001ec	51		 push	 ecx
  001ed	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 149  : 	}
; 150  : 	else

  001f2	eb 22		 jmp	 SHORT $LN5@get_blackh
$LN4@get_blackh:

; 151  : 	{
; 152  : 		//
; 153  : 		// can happpen if the object is being destroyed
; 154  : 		//
; 155  : 
; 156  : 		memcpy (&vp->position, &inst3d->vp.position, sizeof (vec3d));

  001f4	6a 0c		 push	 12			; 0000000cH
  001f6	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  001f9	83 c0 08	 add	 eax, 8
  001fc	50		 push	 eax
  001fd	8b 4d 08	 mov	 ecx, DWORD PTR _vp$[ebp]
  00200	51		 push	 ecx
  00201	e8 00 00 00 00	 call	 _memcpy
  00206	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 
; 158  : 		debug_log ("OBJECT_3D_SUB_OBJECT_AH64D_TADS_HEADING missing from Apache");

  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@OPDFHCEJ@OBJECT_3D_SUB_OBJECT_AH64D_TADS@
  0020e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00213	83 c4 04	 add	 esp, 4
$LN5@get_blackh:

; 159  : 	}
; 160  : 
; 161  : 	memcpy (&vp->attitude, &inst3d->vp.attitude, sizeof (matrix3x3));

  00216	6a 24		 push	 36			; 00000024H
  00218	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0021b	83 c0 14	 add	 eax, 20			; 00000014H
  0021e	50		 push	 eax
  0021f	8b 4d 08	 mov	 ecx, DWORD PTR _vp$[ebp]
  00222	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00225	51		 push	 ecx
  00226	e8 00 00 00 00	 call	 _memcpy
  0022b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 162  : }

  0022e	5f		 pop	 edi
  0022f	5e		 pop	 esi
  00230	5b		 pop	 ebx
  00231	8b e5		 mov	 esp, ebp
  00233	5d		 pop	 ebp
  00234	c2 04 00	 ret	 4
?get_blackhawk_eo_centred_viewpoint@@YGXPAUVIEWPOINT@@@Z ENDP ; get_blackhawk_eo_centred_viewpoint
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?deinitialise_blackhawk_eo@@YGXXZ
_TEXT	SEGMENT
?deinitialise_blackhawk_eo@@YGXXZ PROC			; deinitialise_blackhawk_eo, COMDAT

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?deinitialise_blackhawk_eo@@YGXXZ ENDP			; deinitialise_blackhawk_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\blackhawk\bh_eo.c
;	COMDAT ?initialise_blackhawk_eo@@YGXXZ
_TEXT	SEGMENT
?initialise_blackhawk_eo@@YGXXZ PROC			; initialise_blackhawk_eo, COMDAT

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 84   : 	eo_sensor							= TARGET_ACQUISITION_SYSTEM_FLIR;

  00009	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 3 ; eo_sensor

; 85   : 
; 86   : 	eo_azimuth							= rad (0.0);

  00013	0f 57 c0	 xorps	 xmm0, xmm0
  00016	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_azimuth@@3MA, xmm0

; 87   : 	eo_min_azimuth						= rad (-120.0);

  0001e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0060a92
  00026	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_min_azimuth@@3MA, xmm0

; 88   : 	eo_max_azimuth						= rad (120.0);

  0002e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40060a92
  00036	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_azimuth@@3MA, xmm0

; 89   : 	eo_elevation						= rad (0.0);

  0003e	0f 57 c0	 xorps	 xmm0, xmm0
  00041	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_elevation@@3MA, xmm0

; 90   : 	eo_min_elevation					= rad (-60.0);

  00049	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf860a92
  00051	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_min_elevation@@3MA, xmm0

; 91   : 	eo_max_elevation					= rad (30.0);

  00059	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f060a92
  00061	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_elevation@@3MA, xmm0

; 92   : 	eo_max_visual_range				= 5000.0;

  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@459c4000
  00071	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?eo_max_visual_range@@3MA, xmm0

; 93   : 
; 94   : 	blackhawk_flir.field_of_view		= EO_FOV_WIDE;

  00079	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?blackhawk_flir@@3UEO_PARAMS@@A, 3

; 95   : 	blackhawk_flir.min_field_of_view	= EO_FOV_NARROW;

  00083	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?blackhawk_flir@@3UEO_PARAMS@@A+4, 1

; 96   : 	blackhawk_flir.max_field_of_view	= EO_FOV_WIDE;

  0008d	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?blackhawk_flir@@3UEO_PARAMS@@A+8, 3

; 97   : 
; 98   : 	blackhawk_dtv.field_of_view		= EO_FOV_NARROW;

  00097	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?blackhawk_dtv@@3UEO_PARAMS@@A, 1

; 99   : 	blackhawk_dtv.min_field_of_view	= EO_FOV_NARROW;

  000a1	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?blackhawk_dtv@@3UEO_PARAMS@@A+4, 1

; 100  : 	blackhawk_dtv.max_field_of_view	= EO_FOV_NARROW;

  000ab	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?blackhawk_dtv@@3UEO_PARAMS@@A+8, 1

; 101  : 
; 102  : 	blackhawk_dvo.field_of_view		= EO_FOV_MEDIUM;

  000b5	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?blackhawk_dvo@@3UEO_PARAMS@@A, 2

; 103  : 	blackhawk_dvo.min_field_of_view	= EO_FOV_NARROW;

  000bf	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?blackhawk_dvo@@3UEO_PARAMS@@A+4, 1

; 104  : 	blackhawk_dvo.max_field_of_view	= EO_FOV_MEDIUM;

  000c9	c7 05 08 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?blackhawk_dvo@@3UEO_PARAMS@@A+8, 2

; 105  : };

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c3		 ret	 0
?initialise_blackhawk_eo@@YGXXZ ENDP			; initialise_blackhawk_eo
_TEXT	ENDS
END
