; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\2d\2dview.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?active_2d_environment@@3PAUENV_2D@@A		; active_2d_environment
_BSS	SEGMENT
?active_2d_environment@@3PAUENV_2D@@A DD 01H DUP (?)	; active_2d_environment
_BSS	ENDS
PUBLIC	?create_2d_environment@@YGPAUENV_2D@@XZ		; create_2d_environment
PUBLIC	?destroy_2d_environment@@YGXPAUENV_2D@@@Z	; destroy_2d_environment
PUBLIC	?set_2d_active_environment@@YGXPAUENV_2D@@@Z	; set_2d_active_environment
PUBLIC	?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z		; set_2d_viewport
PUBLIC	?set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z	; set_2d_viewport_origin
PUBLIC	?set_2d_window@@YGXPAUENV_2D@@MMMM@Z		; set_2d_window
PUBLIC	?set_2d_window_rotation@@YGXPAUENV_2D@@M@Z	; set_2d_window_rotation
PUBLIC	?set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z	; set_2d_instance_scaling
PUBLIC	?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z	; set_2d_instance_rotation
PUBLIC	?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z	; set_2d_instance_position
PUBLIC	?reset_2d_instance@@YGXPAUENV_2D@@@Z		; reset_2d_instance
PUBLIC	?get_2d_composite_transformation_matrix@@YGXPAUENV_2D@@@Z ; get_2d_composite_transformation_matrix
PUBLIC	?get_2d_inverse_composite_transformation_matrix@@YGXPAUENV_2D@@@Z ; get_2d_inverse_composite_transformation_matrix
PUBLIC	?set_2d_view_offset@@YGXPAUENV_2D@@MM@Z		; set_2d_view_offset
PUBLIC	?reset_2d_view_offset@@YGXPAUENV_2D@@@Z		; reset_2d_view_offset
PUBLIC	?__LINE__Var@?0??destroy_2d_environment@@YGXPAUENV_2D@@@Z@4JA ; `destroy_2d_environment'::`1'::__LINE__Var
PUBLIC	??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_03OJGPBPII@env@				; `string'
PUBLIC	?__LINE__Var@?0??set_2d_active_environment@@YGXPAUENV_2D@@@Z@4JA ; `set_2d_active_environment'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z@4JA ; `set_2d_viewport'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z@4JA ; `set_2d_viewport_origin'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_window@@YGXPAUENV_2D@@MMMM@Z@4JA ; `set_2d_window'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_window_rotation@@YGXPAUENV_2D@@M@Z@4JA ; `set_2d_window_rotation'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z@4JA ; `set_2d_instance_scaling'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z@4JA ; `set_2d_instance_rotation'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_instance_position@@YGXPAUENV_2D@@MM@Z@4JA ; `set_2d_instance_position'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_2d_instance@@YGXPAUENV_2D@@@Z@4JA ; `reset_2d_instance'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_2d_view_offset@@YGXPAUENV_2D@@MM@Z@4JA ; `set_2d_view_offset'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_2d_view_offset@@YGXPAUENV_2D@@@Z@4JA ; `reset_2d_view_offset'::`1'::__LINE__Var
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@40845f306446f9b4
PUBLIC	__real@43efffdf
PUBLIC	__real@441ffff0
PUBLIC	__real@bf800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_memcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3_2d
EXTRN	?get_identity_matrix3x3@@YGXQAY02M@Z:PROC	; get_identity_matrix3x3
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?sine_table@@3PAMA:BYTE				; sine_table
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@441ffff0
CONST	SEGMENT
__real@441ffff0 DD 0441ffff0r			; 639.999
CONST	ENDS
;	COMDAT __real@43efffdf
CONST	SEGMENT
__real@43efffdf DD 043efffdfr			; 479.999
CONST	ENDS
;	COMDAT __real@40845f306446f9b4
CONST	SEGMENT
__real@40845f306446f9b4 DQ 040845f306446f9b4r	; 651.899
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_2d_view_offset@@YGXPAUENV_2D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_2d_view_offset@@YGXPAUENV_2D@@@Z@4JA DD 0209H ; `reset_2d_view_offset'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_view_offset@@YGXPAUENV_2D@@MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_view_offset@@YGXPAUENV_2D@@MM@Z@4JA DD 01fdH ; `set_2d_view_offset'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_2d_instance@@YGXPAUENV_2D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_2d_instance@@YGXPAUENV_2D@@@Z@4JA DD 019cH ; `reset_2d_instance'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_instance_position@@YGXPAUENV_2D@@MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_instance_position@@YGXPAUENV_2D@@MM@Z@4JA DD 0188H ; `set_2d_instance_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z@4JA DD 016cH ; `set_2d_instance_rotation'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z@4JA DD 0158H ; `set_2d_instance_scaling'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_window_rotation@@YGXPAUENV_2D@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_window_rotation@@YGXPAUENV_2D@@M@Z@4JA DD 0136H ; `set_2d_window_rotation'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_window@@YGXPAUENV_2D@@MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_window@@YGXPAUENV_2D@@MMMM@Z@4JA DD 0101H ; `set_2d_window'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z@4JA DD 0e0H ; `set_2d_viewport_origin'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z@4JA DD 0a2H ; `set_2d_viewport'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_2d_active_environment@@YGXPAUENV_2D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_2d_active_environment@@YGXPAUENV_2D@@@Z@4JA DD 095H ; `set_2d_active_environment'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03OJGPBPII@env@
CONST	SEGMENT
??_C@_03OJGPBPII@env@ DB 'env', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\2d\2dview.c', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??destroy_2d_environment@@YGXPAUENV_2D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??destroy_2d_environment@@YGXPAUENV_2D@@@Z@4JA DD 085H ; `destroy_2d_environment'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?reset_2d_view_offset@@YGXPAUENV_2D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?reset_2d_view_offset@@YGXPAUENV_2D@@@Z PROC		; reset_2d_view_offset, COMDAT

; 521  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 522  : 	ASSERT(env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@reset_2d_v
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_2d_view_offset@@YGXPAUENV_2D@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_2d_v:

; 523  : 	
; 524  : 	env->offset_x = 0.0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	0f 57 c0	 xorps	 xmm0, xmm0
  0002d	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 525  : 	env->offset_y = 0.0;

  00032	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00035	0f 57 c0	 xorps	 xmm0, xmm0
  00038	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 526  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?reset_2d_view_offset@@YGXPAUENV_2D@@@Z ENDP		; reset_2d_view_offset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_view_offset@@YGXPAUENV_2D@@MM@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_dx$ = 12						; size = 4
_dy$ = 16						; size = 4
?set_2d_view_offset@@YGXPAUENV_2D@@MM@Z PROC		; set_2d_view_offset, COMDAT

; 509  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 510  : 	ASSERT(env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_vie
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_view_offset@@YGXPAUENV_2D@@MM@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_vie:

; 511  : 	
; 512  : 	env->offset_x = dx;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0002f	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 513  : 	env->offset_y = dy;

  00034	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00037	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _dy$[ebp]
  0003c	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 514  : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 0c 00	 ret	 12			; 0000000cH
?set_2d_view_offset@@YGXPAUENV_2D@@MM@Z ENDP		; set_2d_view_offset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?get_2d_inverse_composite_transformation_matrix@@YGXPAUENV_2D@@@Z
_TEXT	SEGMENT
_m3$ = -108						; size = 36
_m2$ = -72						; size = 36
_m1$ = -36						; size = 36
_env$ = 8						; size = 4
?get_2d_inverse_composite_transformation_matrix@@YGXPAUENV_2D@@@Z PROC ; get_2d_inverse_composite_transformation_matrix, COMDAT

; 479  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 480  : 	matrix3x3
; 481  : 		m1,
; 482  : 		m2,
; 483  : 		m3;
; 484  : 
; 485  : 	memcpy (m1, env->inverse_viewport_translation, sizeof (matrix3x3));

  0000c	6a 24		 push	 36			; 00000024H
  0000e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00011	05 6c 01 00 00	 add	 eax, 364		; 0000016cH
  00016	50		 push	 eax
  00017	8d 4d dc	 lea	 ecx, DWORD PTR _m1$[ebp]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 _memcpy
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 486  : 
; 487  : 	//
; 488  : 	// mirror about x axis (flip y)
; 489  : 	//
; 490  : 
; 491  : 	m1[0][1] = -m1[0][1];

  00023	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00028	6b c8 00	 imul	 ecx, eax, 0
  0002b	8d 54 0d dc	 lea	 edx, DWORD PTR _m1$[ebp+ecx]
  0002f	b8 04 00 00 00	 mov	 eax, 4
  00034	c1 e0 00	 shl	 eax, 0
  00037	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0003c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00043	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00048	6b d1 00	 imul	 edx, ecx, 0
  0004b	8d 44 15 dc	 lea	 eax, DWORD PTR _m1$[ebp+edx]
  0004f	b9 04 00 00 00	 mov	 ecx, 4
  00054	c1 e1 00	 shl	 ecx, 0
  00057	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 492  : 	m1[1][1] = -m1[1][1];

  0005c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00061	c1 e0 00	 shl	 eax, 0
  00064	8d 4c 05 dc	 lea	 ecx, DWORD PTR _m1$[ebp+eax]
  00068	ba 04 00 00 00	 mov	 edx, 4
  0006d	c1 e2 00	 shl	 edx, 0
  00070	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00075	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0007c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00081	c1 e0 00	 shl	 eax, 0
  00084	8d 4c 05 dc	 lea	 ecx, DWORD PTR _m1$[ebp+eax]
  00088	ba 04 00 00 00	 mov	 edx, 4
  0008d	c1 e2 00	 shl	 edx, 0
  00090	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 493  : 	m1[2][1] = -m1[2][1];

  00095	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0009a	d1 e0		 shl	 eax, 1
  0009c	8d 4c 05 dc	 lea	 ecx, DWORD PTR _m1$[ebp+eax]
  000a0	ba 04 00 00 00	 mov	 edx, 4
  000a5	c1 e2 00	 shl	 edx, 0
  000a8	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  000ad	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000b4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b9	d1 e0		 shl	 eax, 1
  000bb	8d 4c 05 dc	 lea	 ecx, DWORD PTR _m1$[ebp+eax]
  000bf	ba 04 00 00 00	 mov	 edx, 4
  000c4	c1 e2 00	 shl	 edx, 0
  000c7	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 494  : 
; 495  : 	multiply_matrix3x3_matrix3x3_2d (m2, m1, env->inverse_window_rotation);

  000cc	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  000cf	05 90 01 00 00	 add	 eax, 400		; 00000190H
  000d4	50		 push	 eax
  000d5	8d 4d dc	 lea	 ecx, DWORD PTR _m1$[ebp]
  000d8	51		 push	 ecx
  000d9	8d 55 b8	 lea	 edx, DWORD PTR _m2$[ebp]
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 496  : 
; 497  : 	multiply_matrix3x3_matrix3x3_2d (m3, m2, env->inverse_window_scaling);

  000e2	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  000e5	05 b4 01 00 00	 add	 eax, 436		; 000001b4H
  000ea	50		 push	 eax
  000eb	8d 4d b8	 lea	 ecx, DWORD PTR _m2$[ebp]
  000ee	51		 push	 ecx
  000ef	8d 55 94	 lea	 edx, DWORD PTR _m3$[ebp]
  000f2	52		 push	 edx
  000f3	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 498  : 
; 499  : 	multiply_matrix3x3_matrix3x3_2d (env->inverse_composite_transformation, m3, env->inverse_window_translation);

  000f8	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  000fb	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  00100	50		 push	 eax
  00101	8d 4d 94	 lea	 ecx, DWORD PTR _m3$[ebp]
  00104	51		 push	 ecx
  00105	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00108	81 c2 fc 01 00
	00		 add	 edx, 508		; 000001fcH
  0010e	52		 push	 edx
  0010f	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 500  : 
; 501  : 	env->inverse_composite_transformation_matrix_valid = TRUE;

  00114	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00117	c7 80 28 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+552], 1

; 502  : }

  00121	5f		 pop	 edi
  00122	5e		 pop	 esi
  00123	5b		 pop	 ebx
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 04 00	 ret	 4
?get_2d_inverse_composite_transformation_matrix@@YGXPAUENV_2D@@@Z ENDP ; get_2d_inverse_composite_transformation_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?get_2d_composite_transformation_matrix@@YGXPAUENV_2D@@@Z
_TEXT	SEGMENT
_m3$ = -108						; size = 36
_m2$ = -72						; size = 36
_m1$ = -36						; size = 36
_env$ = 8						; size = 4
?get_2d_composite_transformation_matrix@@YGXPAUENV_2D@@@Z PROC ; get_2d_composite_transformation_matrix, COMDAT

; 440  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 441  : 	matrix3x3
; 442  : 		m1,
; 443  : 		m2,
; 444  : 		m3;
; 445  : 
; 446  : 	if (!env->instance_transformation_matrix_valid)

  0000c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0000f	83 b8 20 02 00
	00 00		 cmp	 DWORD PTR [eax+544], 0
  00016	75 3e		 jne	 SHORT $LN2@get_2d_com

; 447  : 	{
; 448  : 		multiply_matrix3x3_matrix3x3_2d (m1, env->instance_scaling, env->instance_rotation);

  00018	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0001b	83 c0 4c	 add	 eax, 76			; 0000004cH
  0001e	50		 push	 eax
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00022	83 c1 28	 add	 ecx, 40			; 00000028H
  00025	51		 push	 ecx
  00026	8d 55 dc	 lea	 edx, DWORD PTR _m1$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 449  : 
; 450  : 		multiply_matrix3x3_matrix3x3_2d (env->instance_transformation, m1, env->instance_translation);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00032	83 c0 70	 add	 eax, 112		; 00000070H
  00035	50		 push	 eax
  00036	8d 4d dc	 lea	 ecx, DWORD PTR _m1$[ebp]
  00039	51		 push	 ecx
  0003a	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0003d	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 451  : 
; 452  : 		env->instance_transformation_matrix_valid = TRUE;

  00049	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0004c	c7 80 20 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+544], 1
$LN2@get_2d_com:

; 453  : 	}
; 454  : 
; 455  : 	multiply_matrix3x3_matrix3x3_2d (m1, env->instance_transformation, env->window_translation);

  00056	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00059	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  0005e	50		 push	 eax
  0005f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00062	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00068	51		 push	 ecx
  00069	8d 55 dc	 lea	 edx, DWORD PTR _m1$[ebp]
  0006c	52		 push	 edx
  0006d	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 456  : 
; 457  : 	multiply_matrix3x3_matrix3x3_2d (m2, m1, env->window_scaling);

  00072	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00075	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  0007a	50		 push	 eax
  0007b	8d 4d dc	 lea	 ecx, DWORD PTR _m1$[ebp]
  0007e	51		 push	 ecx
  0007f	8d 55 b8	 lea	 edx, DWORD PTR _m2$[ebp]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 458  : 
; 459  : 	multiply_matrix3x3_matrix3x3_2d (m3, m2, env->window_rotation);

  00088	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0008b	05 00 01 00 00	 add	 eax, 256		; 00000100H
  00090	50		 push	 eax
  00091	8d 4d b8	 lea	 ecx, DWORD PTR _m2$[ebp]
  00094	51		 push	 ecx
  00095	8d 55 94	 lea	 edx, DWORD PTR _m3$[ebp]
  00098	52		 push	 edx
  00099	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 460  : 
; 461  : 	//
; 462  : 	// mirror about x axis (flip y)
; 463  : 	//
; 464  : 
; 465  : 	m3[0][1] = -m3[0][1];

  0009e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a3	6b c8 00	 imul	 ecx, eax, 0
  000a6	8d 54 0d 94	 lea	 edx, DWORD PTR _m3$[ebp+ecx]
  000aa	b8 04 00 00 00	 mov	 eax, 4
  000af	c1 e0 00	 shl	 eax, 0
  000b2	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  000b7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000be	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000c3	6b d1 00	 imul	 edx, ecx, 0
  000c6	8d 44 15 94	 lea	 eax, DWORD PTR _m3$[ebp+edx]
  000ca	b9 04 00 00 00	 mov	 ecx, 4
  000cf	c1 e1 00	 shl	 ecx, 0
  000d2	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 466  : 	m3[1][1] = -m3[1][1];

  000d7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000dc	c1 e0 00	 shl	 eax, 0
  000df	8d 4c 05 94	 lea	 ecx, DWORD PTR _m3$[ebp+eax]
  000e3	ba 04 00 00 00	 mov	 edx, 4
  000e8	c1 e2 00	 shl	 edx, 0
  000eb	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  000f0	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000f7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000fc	c1 e0 00	 shl	 eax, 0
  000ff	8d 4c 05 94	 lea	 ecx, DWORD PTR _m3$[ebp+eax]
  00103	ba 04 00 00 00	 mov	 edx, 4
  00108	c1 e2 00	 shl	 edx, 0
  0010b	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 467  : 	m3[2][1] = -m3[2][1];

  00110	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00115	d1 e0		 shl	 eax, 1
  00117	8d 4c 05 94	 lea	 ecx, DWORD PTR _m3$[ebp+eax]
  0011b	ba 04 00 00 00	 mov	 edx, 4
  00120	c1 e2 00	 shl	 edx, 0
  00123	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00128	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0012f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00134	d1 e0		 shl	 eax, 1
  00136	8d 4c 05 94	 lea	 ecx, DWORD PTR _m3$[ebp+eax]
  0013a	ba 04 00 00 00	 mov	 edx, 4
  0013f	c1 e2 00	 shl	 edx, 0
  00142	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 468  : 
; 469  : 	multiply_matrix3x3_matrix3x3_2d (env->composite_transformation, m3, env->viewport_translation);

  00147	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0014a	05 24 01 00 00	 add	 eax, 292		; 00000124H
  0014f	50		 push	 eax
  00150	8d 4d 94	 lea	 ecx, DWORD PTR _m3$[ebp]
  00153	51		 push	 ecx
  00154	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00157	81 c2 48 01 00
	00		 add	 edx, 328		; 00000148H
  0015d	52		 push	 edx
  0015e	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d

; 470  : 
; 471  : 	env->composite_transformation_matrix_valid = TRUE;

  00163	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00166	c7 80 24 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+548], 1

; 472  : }

  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	5b		 pop	 ebx
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c2 04 00	 ret	 4
?get_2d_composite_transformation_matrix@@YGXPAUENV_2D@@@Z ENDP ; get_2d_composite_transformation_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?reset_2d_instance@@YGXPAUENV_2D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?reset_2d_instance@@YGXPAUENV_2D@@@Z PROC		; reset_2d_instance, COMDAT

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 413  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@reset_2d_i
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_2d_instance@@YGXPAUENV_2D@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_2d_i:

; 414  : 
; 415  : 	env->instance_rotation[0][0] = 1.0;

  00027	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00032	8d 44 0a 4c	 lea	 eax, DWORD PTR [edx+ecx+76]
  00036	b9 04 00 00 00	 mov	 ecx, 4
  0003b	6b d1 00	 imul	 edx, ecx, 0
  0003e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00046	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 416  : 	env->instance_rotation[0][1] = 0.0;

  0004b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00050	6b c8 00	 imul	 ecx, eax, 0
  00053	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00056	8d 44 0a 4c	 lea	 eax, DWORD PTR [edx+ecx+76]
  0005a	b9 04 00 00 00	 mov	 ecx, 4
  0005f	c1 e1 00	 shl	 ecx, 0
  00062	0f 57 c0	 xorps	 xmm0, xmm0
  00065	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 417  : 	env->instance_rotation[1][0] = 0.0;

  0006a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0006f	c1 e0 00	 shl	 eax, 0
  00072	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00075	8d 54 01 4c	 lea	 edx, DWORD PTR [ecx+eax+76]
  00079	b8 04 00 00 00	 mov	 eax, 4
  0007e	6b c8 00	 imul	 ecx, eax, 0
  00081	0f 57 c0	 xorps	 xmm0, xmm0
  00084	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 418  : 	env->instance_rotation[1][1] = 1.0;

  00089	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0008e	c1 e0 00	 shl	 eax, 0
  00091	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00094	8d 54 01 4c	 lea	 edx, DWORD PTR [ecx+eax+76]
  00098	b8 04 00 00 00	 mov	 eax, 4
  0009d	c1 e0 00	 shl	 eax, 0
  000a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000a8	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 419  : 
; 420  : 	env->instance_scaling[0][0] = 1.0;

  000ad	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b2	6b c8 00	 imul	 ecx, eax, 0
  000b5	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000b8	8d 44 0a 28	 lea	 eax, DWORD PTR [edx+ecx+40]
  000bc	b9 04 00 00 00	 mov	 ecx, 4
  000c1	6b d1 00	 imul	 edx, ecx, 0
  000c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000cc	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 421  : 	env->instance_scaling[1][1] = 1.0;

  000d1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000d6	c1 e0 00	 shl	 eax, 0
  000d9	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000dc	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  000e0	b8 04 00 00 00	 mov	 eax, 4
  000e5	c1 e0 00	 shl	 eax, 0
  000e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000f0	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 422  : 
; 423  : 	env->instance_translation[2][0] = 0.0;

  000f5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000fa	d1 e0		 shl	 eax, 1
  000fc	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ff	8d 54 01 70	 lea	 edx, DWORD PTR [ecx+eax+112]
  00103	b8 04 00 00 00	 mov	 eax, 4
  00108	6b c8 00	 imul	 ecx, eax, 0
  0010b	0f 57 c0	 xorps	 xmm0, xmm0
  0010e	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 424  : 	env->instance_translation[2][1] = 0.0;

  00113	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00118	d1 e0		 shl	 eax, 1
  0011a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0011d	8d 54 01 70	 lea	 edx, DWORD PTR [ecx+eax+112]
  00121	b8 04 00 00 00	 mov	 eax, 4
  00126	c1 e0 00	 shl	 eax, 0
  00129	0f 57 c0	 xorps	 xmm0, xmm0
  0012c	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 425  : 
; 426  : 	//
; 427  : 	// flags
; 428  : 	//
; 429  : 
; 430  : 	env->instance_transformation_matrix_valid = FALSE;

  00131	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00134	c7 80 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+544], 0

; 431  : 	env->composite_transformation_matrix_valid = FALSE;

  0013e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00141	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 432  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  0014b	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0014e	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 433  : }

  00158	5f		 pop	 edi
  00159	5e		 pop	 esi
  0015a	5b		 pop	 ebx
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c2 04 00	 ret	 4
?reset_2d_instance@@YGXPAUENV_2D@@@Z ENDP		; reset_2d_instance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z PROC	; set_2d_instance_position, COMDAT

; 392  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 393  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_ins
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_instance_position@@YGXPAUENV_2D@@MM@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_ins:

; 394  : 
; 395  : 	env->instance_translation[2][0] = x;

  00027	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0002c	d1 e0		 shl	 eax, 1
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00031	8d 54 01 70	 lea	 edx, DWORD PTR [ecx+eax+112]
  00035	b8 04 00 00 00	 mov	 eax, 4
  0003a	6b c8 00	 imul	 ecx, eax, 0
  0003d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  00042	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 396  : 	env->instance_translation[2][1] = y;

  00047	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0004c	d1 e0		 shl	 eax, 1
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00051	8d 54 01 70	 lea	 edx, DWORD PTR [ecx+eax+112]
  00055	b8 04 00 00 00	 mov	 eax, 4
  0005a	c1 e0 00	 shl	 eax, 0
  0005d	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y$[ebp]
  00062	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 397  : 
; 398  : 	//
; 399  : 	// flags
; 400  : 	//
; 401  : 
; 402  : 	env->instance_transformation_matrix_valid = FALSE;

  00067	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0006a	c7 80 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+544], 0

; 403  : 	env->composite_transformation_matrix_valid = FALSE;

  00074	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00077	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 404  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  00081	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00084	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 405  : }

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 0c 00	 ret	 12			; 0000000cH
?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z ENDP	; set_2d_instance_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z
_TEXT	SEGMENT
_index$1 = -12						; size = 4
_cos_theta$ = -8					; size = 4
_sin_theta$ = -4					; size = 4
_env$ = 8						; size = 4
_theta$ = 12						; size = 4
?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z PROC	; set_2d_instance_rotation, COMDAT

; 364  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 365  : 	float
; 366  : 		sin_theta,
; 367  : 		cos_theta;
; 368  : 
; 369  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_ins
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_ins:

; 370  : 
; 371  : 	sine_cosine (theta, &sin_theta, &cos_theta);

  00027	8d 45 f4	 lea	 eax, DWORD PTR _index$1[ebp]
  0002a	50		 push	 eax
  0002b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00030	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40845f306446f9b4
  00038	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003c	51		 push	 ecx
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00047	8b 45 f4	 mov	 eax, DWORD PTR _index$1[ebp]
  0004a	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0004f	89 45 f4	 mov	 DWORD PTR _index$1[ebp], eax
  00052	8b 45 f4	 mov	 eax, DWORD PTR _index$1[ebp]
  00055	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  0005e	f3 0f 11 45 fc	 movss	 DWORD PTR _sin_theta$[ebp], xmm0
  00063	8b 45 f4	 mov	 eax, DWORD PTR _index$1[ebp]
  00066	05 00 04 00 00	 add	 eax, 1024		; 00000400H
  0006b	89 45 f4	 mov	 DWORD PTR _index$1[ebp], eax
  0006e	8b 45 f4	 mov	 eax, DWORD PTR _index$1[ebp]
  00071	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00076	89 45 f4	 mov	 DWORD PTR _index$1[ebp], eax
  00079	8b 45 f4	 mov	 eax, DWORD PTR _index$1[ebp]
  0007c	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  00085	f3 0f 11 45 f8	 movss	 DWORD PTR _cos_theta$[ebp], xmm0

; 372  : 
; 373  : 	env->instance_rotation[0][0] = cos_theta;

  0008a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0008f	6b c8 00	 imul	 ecx, eax, 0
  00092	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00095	8d 44 0a 4c	 lea	 eax, DWORD PTR [edx+ecx+76]
  00099	b9 04 00 00 00	 mov	 ecx, 4
  0009e	6b d1 00	 imul	 edx, ecx, 0
  000a1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cos_theta$[ebp]
  000a6	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 374  : 	env->instance_rotation[0][1] = sin_theta;

  000ab	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b0	6b c8 00	 imul	 ecx, eax, 0
  000b3	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000b6	8d 44 0a 4c	 lea	 eax, DWORD PTR [edx+ecx+76]
  000ba	b9 04 00 00 00	 mov	 ecx, 4
  000bf	c1 e1 00	 shl	 ecx, 0
  000c2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sin_theta$[ebp]
  000c7	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 375  : 	env->instance_rotation[1][0] = -sin_theta;

  000cc	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sin_theta$[ebp]
  000d1	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000d8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000dd	c1 e0 00	 shl	 eax, 0
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000e3	8d 54 01 4c	 lea	 edx, DWORD PTR [ecx+eax+76]
  000e7	b8 04 00 00 00	 mov	 eax, 4
  000ec	6b c8 00	 imul	 ecx, eax, 0
  000ef	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 376  : 	env->instance_rotation[1][1] = cos_theta;

  000f4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f9	c1 e0 00	 shl	 eax, 0
  000fc	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ff	8d 54 01 4c	 lea	 edx, DWORD PTR [ecx+eax+76]
  00103	b8 04 00 00 00	 mov	 eax, 4
  00108	c1 e0 00	 shl	 eax, 0
  0010b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cos_theta$[ebp]
  00110	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 377  : 
; 378  : 	//
; 379  : 	// flags
; 380  : 	//
; 381  : 
; 382  : 	env->instance_transformation_matrix_valid = FALSE;

  00115	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00118	c7 80 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+544], 0

; 383  : 	env->composite_transformation_matrix_valid = FALSE;

  00122	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00125	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 384  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  0012f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00132	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 385  : }

  0013c	5f		 pop	 edi
  0013d	5e		 pop	 esi
  0013e	5b		 pop	 ebx
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c2 08 00	 ret	 8
?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ENDP	; set_2d_instance_rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_x_scale$ = 12						; size = 4
_y_scale$ = 16						; size = 4
?set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z PROC	; set_2d_instance_scaling, COMDAT

; 344  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 345  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_ins
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_ins:

; 346  : 
; 347  : 	env->instance_scaling[0][0] = x_scale;

  00027	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00032	8d 44 0a 28	 lea	 eax, DWORD PTR [edx+ecx+40]
  00036	b9 04 00 00 00	 mov	 ecx, 4
  0003b	6b d1 00	 imul	 edx, ecx, 0
  0003e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_scale$[ebp]
  00043	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 348  : 	env->instance_scaling[1][1] = y_scale;

  00048	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0004d	c1 e0 00	 shl	 eax, 0
  00050	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00053	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  00057	b8 04 00 00 00	 mov	 eax, 4
  0005c	c1 e0 00	 shl	 eax, 0
  0005f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y_scale$[ebp]
  00064	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 349  : 
; 350  : 	//
; 351  : 	// flags
; 352  : 	//
; 353  : 
; 354  : 	env->instance_transformation_matrix_valid = FALSE;

  00069	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0006c	c7 80 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+544], 0

; 355  : 	env->composite_transformation_matrix_valid = FALSE;

  00076	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00079	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 356  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  00083	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00086	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 357  : }

  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 0c 00	 ret	 12			; 0000000cH
?set_2d_instance_scaling@@YGXPAUENV_2D@@MM@Z ENDP	; set_2d_instance_scaling
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_window_rotation@@YGXPAUENV_2D@@M@Z
_TEXT	SEGMENT
_index$1 = -16						; size = 4
_index$2 = -12						; size = 4
_cos_theta$ = -8					; size = 4
_sin_theta$ = -4					; size = 4
_env$ = 8						; size = 4
_theta$ = 12						; size = 4
?set_2d_window_rotation@@YGXPAUENV_2D@@M@Z PROC		; set_2d_window_rotation, COMDAT

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 311  : 	float
; 312  : 		sin_theta,
; 313  : 		cos_theta;
; 314  : 
; 315  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_win
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_window_rotation@@YGXPAUENV_2D@@M@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_win:

; 316  : 
; 317  : 	sine_cosine (theta, &sin_theta, &cos_theta);

  00027	8d 45 f4	 lea	 eax, DWORD PTR _index$2[ebp]
  0002a	50		 push	 eax
  0002b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00030	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40845f306446f9b4
  00038	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003c	51		 push	 ecx
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00047	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  0004a	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0004f	89 45 f4	 mov	 DWORD PTR _index$2[ebp], eax
  00052	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  00055	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  0005e	f3 0f 11 45 fc	 movss	 DWORD PTR _sin_theta$[ebp], xmm0
  00063	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  00066	05 00 04 00 00	 add	 eax, 1024		; 00000400H
  0006b	89 45 f4	 mov	 DWORD PTR _index$2[ebp], eax
  0006e	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  00071	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00076	89 45 f4	 mov	 DWORD PTR _index$2[ebp], eax
  00079	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  0007c	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  00085	f3 0f 11 45 f8	 movss	 DWORD PTR _cos_theta$[ebp], xmm0

; 318  : 
; 319  : 	env->window_rotation[0][0] = cos_theta;

  0008a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0008f	6b c8 00	 imul	 ecx, eax, 0
  00092	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00095	8d 84 0a 00 01
	00 00		 lea	 eax, DWORD PTR [edx+ecx+256]
  0009c	b9 04 00 00 00	 mov	 ecx, 4
  000a1	6b d1 00	 imul	 edx, ecx, 0
  000a4	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cos_theta$[ebp]
  000a9	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 320  : 	env->window_rotation[0][1] = sin_theta;

  000ae	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b3	6b c8 00	 imul	 ecx, eax, 0
  000b6	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000b9	8d 84 0a 00 01
	00 00		 lea	 eax, DWORD PTR [edx+ecx+256]
  000c0	b9 04 00 00 00	 mov	 ecx, 4
  000c5	c1 e1 00	 shl	 ecx, 0
  000c8	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sin_theta$[ebp]
  000cd	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 321  : 	env->window_rotation[1][0] = -sin_theta;

  000d2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sin_theta$[ebp]
  000d7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000de	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000e3	c1 e0 00	 shl	 eax, 0
  000e6	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000e9	8d 94 01 00 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+256]
  000f0	b8 04 00 00 00	 mov	 eax, 4
  000f5	6b c8 00	 imul	 ecx, eax, 0
  000f8	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 322  : 	env->window_rotation[1][1] = cos_theta;

  000fd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00102	c1 e0 00	 shl	 eax, 0
  00105	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00108	8d 94 01 00 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+256]
  0010f	b8 04 00 00 00	 mov	 eax, 4
  00114	c1 e0 00	 shl	 eax, 0
  00117	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cos_theta$[ebp]
  0011c	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 323  : 
; 324  : 	sine_cosine (-theta, &sin_theta, &cos_theta);

  00121	8d 45 f0	 lea	 eax, DWORD PTR _index$1[ebp]
  00124	50		 push	 eax
  00125	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _theta$[ebp]
  0012a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00131	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00135	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40845f306446f9b4
  0013d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00141	51		 push	 ecx
  00142	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00147	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0014c	8b 45 f0	 mov	 eax, DWORD PTR _index$1[ebp]
  0014f	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00154	89 45 f0	 mov	 DWORD PTR _index$1[ebp], eax
  00157	8b 45 f0	 mov	 eax, DWORD PTR _index$1[ebp]
  0015a	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  00163	f3 0f 11 45 fc	 movss	 DWORD PTR _sin_theta$[ebp], xmm0
  00168	8b 45 f0	 mov	 eax, DWORD PTR _index$1[ebp]
  0016b	05 00 04 00 00	 add	 eax, 1024		; 00000400H
  00170	89 45 f0	 mov	 DWORD PTR _index$1[ebp], eax
  00173	8b 45 f0	 mov	 eax, DWORD PTR _index$1[ebp]
  00176	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0017b	89 45 f0	 mov	 DWORD PTR _index$1[ebp], eax
  0017e	8b 45 f0	 mov	 eax, DWORD PTR _index$1[ebp]
  00181	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  0018a	f3 0f 11 45 f8	 movss	 DWORD PTR _cos_theta$[ebp], xmm0

; 325  : 
; 326  : 	env->inverse_window_rotation[0][0] = cos_theta;

  0018f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00194	6b c8 00	 imul	 ecx, eax, 0
  00197	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0019a	8d 84 0a 90 01
	00 00		 lea	 eax, DWORD PTR [edx+ecx+400]
  001a1	b9 04 00 00 00	 mov	 ecx, 4
  001a6	6b d1 00	 imul	 edx, ecx, 0
  001a9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cos_theta$[ebp]
  001ae	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 327  : 	env->inverse_window_rotation[0][1] = sin_theta;

  001b3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001b8	6b c8 00	 imul	 ecx, eax, 0
  001bb	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  001be	8d 84 0a 90 01
	00 00		 lea	 eax, DWORD PTR [edx+ecx+400]
  001c5	b9 04 00 00 00	 mov	 ecx, 4
  001ca	c1 e1 00	 shl	 ecx, 0
  001cd	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sin_theta$[ebp]
  001d2	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 328  : 	env->inverse_window_rotation[1][0] = -sin_theta;

  001d7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sin_theta$[ebp]
  001dc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001e3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001e8	c1 e0 00	 shl	 eax, 0
  001eb	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001ee	8d 94 01 90 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+400]
  001f5	b8 04 00 00 00	 mov	 eax, 4
  001fa	6b c8 00	 imul	 ecx, eax, 0
  001fd	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 329  : 	env->inverse_window_rotation[1][1] = cos_theta;

  00202	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00207	c1 e0 00	 shl	 eax, 0
  0020a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0020d	8d 94 01 90 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+400]
  00214	b8 04 00 00 00	 mov	 eax, 4
  00219	c1 e0 00	 shl	 eax, 0
  0021c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cos_theta$[ebp]
  00221	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 330  : 
; 331  : 	//
; 332  : 	// flags
; 333  : 	//
; 334  : 
; 335  : 	env->composite_transformation_matrix_valid = FALSE;

  00226	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00229	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 336  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  00233	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00236	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 337  : }

  00240	5f		 pop	 edi
  00241	5e		 pop	 esi
  00242	5b		 pop	 ebx
  00243	8b e5		 mov	 esp, ebp
  00245	5d		 pop	 ebp
  00246	c2 08 00	 ret	 8
?set_2d_window_rotation@@YGXPAUENV_2D@@M@Z ENDP		; set_2d_window_rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z
_TEXT	SEGMENT
_y_scale$ = -16						; size = 4
_x_scale$ = -12						; size = 4
_y_translate$ = -8					; size = 4
_x_translate$ = -4					; size = 4
_env$ = 8						; size = 4
_x_min$ = 12						; size = 4
_y_min$ = 16						; size = 4
_x_max$ = 20						; size = 4
_y_max$ = 24						; size = 4
?set_2d_window@@YGXPAUENV_2D@@MMMM@Z PROC		; set_2d_window, COMDAT

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 258  : 	float
; 259  : 		x_translate,
; 260  : 		y_translate,
; 261  : 		x_scale,
; 262  : 		y_scale;
; 263  : 
; 264  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_win
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_window@@YGXPAUENV_2D@@MMMM@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_win:

; 265  : 
; 266  : 	env->window_x_min = x_min;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  0002f	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 267  : 	env->window_y_min = y_min;

  00034	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00037	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  0003c	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 268  : 	env->window_x_max = x_max;

  00041	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00044	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00049	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 269  : 	env->window_y_max = y_max;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00051	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  00056	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 270  : 
; 271  : 	//
; 272  : 	// set window origin (centre of window)
; 273  : 	//
; 274  : 
; 275  : 	x_translate = -(env->window_x_min + env->window_x_max) / 2.0;

  0005b	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00061	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00066	f3 0f 58 41 18	 addss	 xmm0, DWORD PTR [ecx+24]
  0006b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00072	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00076	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0007e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00082	f3 0f 11 45 fc	 movss	 DWORD PTR _x_translate$[ebp], xmm0

; 276  : 	y_translate = -(env->window_y_min + env->window_y_max) / 2.0;

  00087	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008d	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00092	f3 0f 58 41 1c	 addss	 xmm0, DWORD PTR [ecx+28]
  00097	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0009e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000a2	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  000aa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ae	f3 0f 11 45 f8	 movss	 DWORD PTR _y_translate$[ebp], xmm0

; 277  : 
; 278  : 	env->window_translation[2][0] = x_translate;

  000b3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b8	d1 e0		 shl	 eax, 1
  000ba	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000bd	8d 94 01 b8 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+184]
  000c4	b8 04 00 00 00	 mov	 eax, 4
  000c9	6b c8 00	 imul	 ecx, eax, 0
  000cc	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_translate$[ebp]
  000d1	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 279  : 	env->window_translation[2][1] = y_translate;

  000d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000db	d1 e0		 shl	 eax, 1
  000dd	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000e0	8d 94 01 b8 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+184]
  000e7	b8 04 00 00 00	 mov	 eax, 4
  000ec	c1 e0 00	 shl	 eax, 0
  000ef	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_translate$[ebp]
  000f4	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 280  : 
; 281  : 	env->inverse_window_translation[2][0] = -x_translate;

  000f9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_translate$[ebp]
  000fe	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00105	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0010a	d1 e0		 shl	 eax, 1
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0010f	8d 94 01 d8 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+472]
  00116	b8 04 00 00 00	 mov	 eax, 4
  0011b	6b c8 00	 imul	 ecx, eax, 0
  0011e	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 282  : 	env->inverse_window_translation[2][1] = -y_translate;

  00123	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_translate$[ebp]
  00128	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0012f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00134	d1 e0		 shl	 eax, 1
  00136	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00139	8d 94 01 d8 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+472]
  00140	b8 04 00 00 00	 mov	 eax, 4
  00145	c1 e0 00	 shl	 eax, 0
  00148	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 283  : 
; 284  : 	//
; 285  : 	// calc window to viewport scaling
; 286  : 	//
; 287  : 
; 288  : 	x_scale = (env->vp.x_max - env->vp.x_min) / (env->window_x_max - env->window_x_min);

  0014d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00150	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00153	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00158	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0015c	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0015f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00162	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  00167	f3 0f 5c 48 10	 subss	 xmm1, DWORD PTR [eax+16]
  0016c	f3 0f 5e c1	 divss	 xmm0, xmm1
  00170	f3 0f 11 45 f4	 movss	 DWORD PTR _x_scale$[ebp], xmm0

; 289  : 	y_scale = (env->vp.y_max - env->vp.y_min) / (env->window_y_max - env->window_y_min);

  00175	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00178	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0017b	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00180	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00185	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00188	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0018b	f3 0f 10 4a 1c	 movss	 xmm1, DWORD PTR [edx+28]
  00190	f3 0f 5c 48 14	 subss	 xmm1, DWORD PTR [eax+20]
  00195	f3 0f 5e c1	 divss	 xmm0, xmm1
  00199	f3 0f 11 45 f0	 movss	 DWORD PTR _y_scale$[ebp], xmm0

; 290  : 
; 291  : 	env->window_scaling[0][0] = x_scale;

  0019e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001a3	6b c8 00	 imul	 ecx, eax, 0
  001a6	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  001a9	8d 84 0a dc 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+220]
  001b0	b9 04 00 00 00	 mov	 ecx, 4
  001b5	6b d1 00	 imul	 edx, ecx, 0
  001b8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x_scale$[ebp]
  001bd	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 292  : 	env->window_scaling[1][1] = y_scale;

  001c2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001c7	c1 e0 00	 shl	 eax, 0
  001ca	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001cd	8d 94 01 dc 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+220]
  001d4	b8 04 00 00 00	 mov	 eax, 4
  001d9	c1 e0 00	 shl	 eax, 0
  001dc	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_scale$[ebp]
  001e1	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 293  : 
; 294  : 	env->inverse_window_scaling[0][0] = 1.0 / x_scale;

  001e6	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x_scale$[ebp]
  001eb	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  001f3	f2 0f 5e c8	 divsd	 xmm1, xmm0
  001f7	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001fb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00200	6b c8 00	 imul	 ecx, eax, 0
  00203	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00206	8d 84 0a b4 01
	00 00		 lea	 eax, DWORD PTR [edx+ecx+436]
  0020d	b9 04 00 00 00	 mov	 ecx, 4
  00212	6b d1 00	 imul	 edx, ecx, 0
  00215	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 295  : 	env->inverse_window_scaling[1][1] = 1.0 / y_scale;

  0021a	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _y_scale$[ebp]
  0021f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00227	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0022b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0022f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00234	c1 e0 00	 shl	 eax, 0
  00237	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0023a	8d 94 01 b4 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+436]
  00241	b8 04 00 00 00	 mov	 eax, 4
  00246	c1 e0 00	 shl	 eax, 0
  00249	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 296  : 
; 297  : 	//
; 298  : 	// flags
; 299  : 	//
; 300  : 
; 301  : 	env->composite_transformation_matrix_valid = FALSE;

  0024e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00251	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 302  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  0025b	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0025e	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 303  : }

  00268	5f		 pop	 edi
  00269	5e		 pop	 esi
  0026a	5b		 pop	 ebx
  0026b	8b e5		 mov	 esp, ebp
  0026d	5d		 pop	 ebp
  0026e	c2 14 00	 ret	 20			; 00000014H
?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ENDP		; set_2d_window
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z
_TEXT	SEGMENT
_y_translate$ = -8					; size = 4
_x_translate$ = -4					; size = 4
_env$ = 8						; size = 4
_x_org$ = 12						; size = 4
_y_org$ = 16						; size = 4
?set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z PROC	; set_2d_viewport_origin, COMDAT

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 225  : 	float
; 226  : 		x_translate,
; 227  : 		y_translate;
; 228  : 
; 229  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_vie
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_vie:

; 230  : 
; 231  : 	//
; 232  : 	// set viewport origin, relative to top left hand corner of viewport
; 233  : 	//
; 234  : 
; 235  : 	x_translate = env->vp.x_min + x_org;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002e	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _x_org$[ebp]
  00033	f3 0f 11 45 fc	 movss	 DWORD PTR _x_translate$[ebp], xmm0

; 236  : 	y_translate = env->vp.y_min + y_org;

  00038	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00040	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _y_org$[ebp]
  00045	f3 0f 11 45 f8	 movss	 DWORD PTR _y_translate$[ebp], xmm0

; 237  : 
; 238  : 	env->viewport_translation[2][0] = x_translate;

  0004a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0004f	d1 e0		 shl	 eax, 1
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00054	8d 94 01 24 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+292]
  0005b	b8 04 00 00 00	 mov	 eax, 4
  00060	6b c8 00	 imul	 ecx, eax, 0
  00063	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_translate$[ebp]
  00068	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 239  : 	env->viewport_translation[2][1] = y_translate;

  0006d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00072	d1 e0		 shl	 eax, 1
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00077	8d 94 01 24 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+292]
  0007e	b8 04 00 00 00	 mov	 eax, 4
  00083	c1 e0 00	 shl	 eax, 0
  00086	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_translate$[ebp]
  0008b	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 240  : 
; 241  : 	env->inverse_viewport_translation[2][0] = -x_translate;

  00090	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_translate$[ebp]
  00095	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0009c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a1	d1 e0		 shl	 eax, 1
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000a6	8d 94 01 6c 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+364]
  000ad	b8 04 00 00 00	 mov	 eax, 4
  000b2	6b c8 00	 imul	 ecx, eax, 0
  000b5	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 242  : 	env->inverse_viewport_translation[2][1] = -y_translate;

  000ba	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_translate$[ebp]
  000bf	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000c6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000cb	d1 e0		 shl	 eax, 1
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000d0	8d 94 01 6c 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+364]
  000d7	b8 04 00 00 00	 mov	 eax, 4
  000dc	c1 e0 00	 shl	 eax, 0
  000df	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 243  : 
; 244  : 	//
; 245  : 	// flags
; 246  : 	//
; 247  : 
; 248  : 	env->composite_transformation_matrix_valid = FALSE;

  000e4	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  000e7	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 249  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  000f1	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  000f4	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 250  : }

  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 0c 00	 ret	 12			; 0000000cH
?set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z ENDP	; set_2d_viewport_origin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z
_TEXT	SEGMENT
_y_scale$ = -16						; size = 4
_x_scale$ = -12						; size = 4
_y_translate$ = -8					; size = 4
_x_translate$ = -4					; size = 4
_env$ = 8						; size = 4
_x_min$ = 12						; size = 4
_y_min$ = 16						; size = 4
_x_max$ = 20						; size = 4
_y_max$ = 24						; size = 4
?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z PROC		; set_2d_viewport, COMDAT

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 163  : 	float
; 164  : 		x_translate,
; 165  : 		y_translate,
; 166  : 		x_scale,
; 167  : 		y_scale;
; 168  : 
; 169  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_vie
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_vie:

; 170  : 
; 171  : 	env->vp.x_min = x_min;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  0002f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 172  : 	env->vp.y_min = y_min;

  00033	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00036	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  0003b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 173  : 	env->vp.x_max = x_max;

  00040	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00043	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00048	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 174  : 	env->vp.y_max = y_max;

  0004d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00050	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  00055	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 175  : 
; 176  : 	//
; 177  : 	// set viewport origin (centre of viewport)
; 178  : 	//
; 179  : 
; 180  : 	x_translate = (env->vp.x_min + env->vp.x_max) / 2.0;

  0005a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0005d	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00060	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00064	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00069	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0006d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00075	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00079	f3 0f 11 45 fc	 movss	 DWORD PTR _x_translate$[ebp], xmm0

; 181  : 	y_translate = (env->vp.y_min + env->vp.y_max) / 2.0;

  0007e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00084	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00089	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
  0008e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00092	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	f3 0f 11 45 f8	 movss	 DWORD PTR _y_translate$[ebp], xmm0

; 182  : 
; 183  : 	env->viewport_translation[2][0] = x_translate;

  000a3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a8	d1 e0		 shl	 eax, 1
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ad	8d 94 01 24 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+292]
  000b4	b8 04 00 00 00	 mov	 eax, 4
  000b9	6b c8 00	 imul	 ecx, eax, 0
  000bc	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_translate$[ebp]
  000c1	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 184  : 	env->viewport_translation[2][1] = y_translate;

  000c6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000cb	d1 e0		 shl	 eax, 1
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000d0	8d 94 01 24 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+292]
  000d7	b8 04 00 00 00	 mov	 eax, 4
  000dc	c1 e0 00	 shl	 eax, 0
  000df	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_translate$[ebp]
  000e4	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 185  : 
; 186  : 	env->inverse_viewport_translation[2][0] = -x_translate;

  000e9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_translate$[ebp]
  000ee	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000f5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000fa	d1 e0		 shl	 eax, 1
  000fc	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ff	8d 94 01 6c 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+364]
  00106	b8 04 00 00 00	 mov	 eax, 4
  0010b	6b c8 00	 imul	 ecx, eax, 0
  0010e	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 187  : 	env->inverse_viewport_translation[2][1] = -y_translate;

  00113	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_translate$[ebp]
  00118	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0011f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00124	d1 e0		 shl	 eax, 1
  00126	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00129	8d 94 01 6c 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+364]
  00130	b8 04 00 00 00	 mov	 eax, 4
  00135	c1 e0 00	 shl	 eax, 0
  00138	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 188  : 
; 189  : 	//
; 190  : 	// calc window to viewport scaling
; 191  : 	//
; 192  : 
; 193  : 	x_scale = (env->vp.x_max - env->vp.x_min) / (env->window_x_max - env->window_x_min);

  0013d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00140	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00143	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00148	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0014c	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0014f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00152	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  00157	f3 0f 5c 48 10	 subss	 xmm1, DWORD PTR [eax+16]
  0015c	f3 0f 5e c1	 divss	 xmm0, xmm1
  00160	f3 0f 11 45 f4	 movss	 DWORD PTR _x_scale$[ebp], xmm0

; 194  : 	y_scale = (env->vp.y_max - env->vp.y_min) / (env->window_y_max - env->window_y_min);

  00165	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00168	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0016b	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00170	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00175	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00178	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0017b	f3 0f 10 4a 1c	 movss	 xmm1, DWORD PTR [edx+28]
  00180	f3 0f 5c 48 14	 subss	 xmm1, DWORD PTR [eax+20]
  00185	f3 0f 5e c1	 divss	 xmm0, xmm1
  00189	f3 0f 11 45 f0	 movss	 DWORD PTR _y_scale$[ebp], xmm0

; 195  : 
; 196  : 	env->window_scaling[0][0] = x_scale;

  0018e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00193	6b c8 00	 imul	 ecx, eax, 0
  00196	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00199	8d 84 0a dc 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+220]
  001a0	b9 04 00 00 00	 mov	 ecx, 4
  001a5	6b d1 00	 imul	 edx, ecx, 0
  001a8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x_scale$[ebp]
  001ad	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 197  : 	env->window_scaling[1][1] = y_scale;

  001b2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001b7	c1 e0 00	 shl	 eax, 0
  001ba	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001bd	8d 94 01 dc 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+220]
  001c4	b8 04 00 00 00	 mov	 eax, 4
  001c9	c1 e0 00	 shl	 eax, 0
  001cc	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_scale$[ebp]
  001d1	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 198  : 
; 199  : 	env->inverse_window_scaling[0][0] = 1.0 / x_scale;

  001d6	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x_scale$[ebp]
  001db	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  001e3	f2 0f 5e c8	 divsd	 xmm1, xmm0
  001e7	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001eb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001f0	6b c8 00	 imul	 ecx, eax, 0
  001f3	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  001f6	8d 84 0a b4 01
	00 00		 lea	 eax, DWORD PTR [edx+ecx+436]
  001fd	b9 04 00 00 00	 mov	 ecx, 4
  00202	6b d1 00	 imul	 edx, ecx, 0
  00205	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 200  : 	env->inverse_window_scaling[1][1] = 1.0 / y_scale;

  0020a	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _y_scale$[ebp]
  0020f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00217	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0021b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0021f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00224	c1 e0 00	 shl	 eax, 0
  00227	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0022a	8d 94 01 b4 01
	00 00		 lea	 edx, DWORD PTR [ecx+eax+436]
  00231	b8 04 00 00 00	 mov	 eax, 4
  00236	c1 e0 00	 shl	 eax, 0
  00239	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 201  : 
; 202  : 	//
; 203  : 	// flags
; 204  : 	//
; 205  : 
; 206  : 	env->composite_transformation_matrix_valid = FALSE;

  0023e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00241	c7 80 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+548], 0

; 207  : 	env->inverse_composite_transformation_matrix_valid = FALSE;

  0024b	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0024e	c7 80 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+552], 0

; 208  : 
; 209  : 	//
; 210  : 	// set graphics system viewport
; 211  : 	//
; 212  : 
; 213  : 	if (env == active_2d_environment)

  00258	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0025b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  00261	75 3c		 jne	 SHORT $LN3@set_2d_vie

; 214  : 	{
; 215  : 		set_viewport (env->vp.x_min, env->vp.y_min, env->vp.x_max, env->vp.y_max);

  00263	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00266	51		 push	 ecx
  00267	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0026c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00271	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00274	51		 push	 ecx
  00275	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0027a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027f	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00282	51		 push	 ecx
  00283	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00288	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00290	51		 push	 ecx
  00291	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00295	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029a	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport
$LN3@set_2d_vie:

; 216  : 	}
; 217  : }

  0029f	5f		 pop	 edi
  002a0	5e		 pop	 esi
  002a1	5b		 pop	 ebx
  002a2	8b e5		 mov	 esp, ebp
  002a4	5d		 pop	 ebp
  002a5	c2 14 00	 ret	 20			; 00000014H
?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ENDP		; set_2d_viewport
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?set_2d_active_environment@@YGXPAUENV_2D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?set_2d_active_environment@@YGXPAUENV_2D@@@Z PROC	; set_2d_active_environment, COMDAT

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 150  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_2d_act
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_2d_active_environment@@YGXPAUENV_2D@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_2d_act:

; 151  : 
; 152  : 	active_2d_environment = env;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	a3 00 00 00 00	 mov	 DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A, eax ; active_2d_environment

; 153  : 
; 154  : 	set_viewport (env->vp.x_min, env->vp.y_min, env->vp.x_max, env->vp.y_max);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00032	51		 push	 ecx
  00033	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00040	51		 push	 ecx
  00041	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00046	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004b	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0004e	51		 push	 ecx
  0004f	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0005c	51		 push	 ecx
  0005d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00061	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00066	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 155  : }

  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
?set_2d_active_environment@@YGXPAUENV_2D@@@Z ENDP	; set_2d_active_environment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?destroy_2d_environment@@YGXPAUENV_2D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?destroy_2d_environment@@YGXPAUENV_2D@@@Z PROC		; destroy_2d_environment, COMDAT

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 134  : 	ASSERT (env);

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@destroy_2d
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??destroy_2d_environment@@YGXPAUENV_2D@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CBODPIIN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@destroy_2d:

; 135  : 
; 136  : 	if (env == active_2d_environment)

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  00030	75 0a		 jne	 SHORT $LN3@destroy_2d

; 137  : 	{
; 138  : 		active_2d_environment = NULL;

  00032	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A, 0 ; active_2d_environment
$LN3@destroy_2d:

; 139  : 	}
; 140  : 
; 141  : 	safe_free (env);

  0003c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 142  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?destroy_2d_environment@@YGXPAUENV_2D@@@Z ENDP		; destroy_2d_environment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\2d\2dview.c
;	COMDAT ?create_2d_environment@@YGPAUENV_2D@@XZ
_TEXT	SEGMENT
_env$ = -4						; size = 4
?create_2d_environment@@YGPAUENV_2D@@XZ PROC		; create_2d_environment, COMDAT

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 84   : 	env_2d
; 85   : 		*env;
; 86   : 
; 87   : 	env = (env_2d *) safe_malloc (sizeof (env_2d));

  00009	68 2c 02 00 00	 push	 556			; 0000022cH
  0000e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00013	89 45 fc	 mov	 DWORD PTR _env$[ebp], eax

; 88   : 
; 89   : 	//
; 90   : 	// initialise 'safe' values
; 91   : 	//
; 92   : 
; 93   : 	env->vp.x_min = 0.0;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00019	0f 57 c0	 xorps	 xmm0, xmm0
  0001c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 94   : 	env->vp.y_min = 0.0;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00023	0f 57 c0	 xorps	 xmm0, xmm0
  00026	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 95   : 	env->vp.x_max = 639.999;

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0002e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@441ffff0
  00036	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 96   : 	env->vp.y_max = 479.999;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0003e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43efffdf
  00046	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 97   : 
; 98   : 	env->window_x_min = -1.0;

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0004e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00056	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 99   : 	env->window_y_min = -1.0;

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0005e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00066	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 100  : 	env->window_x_max = 1.0;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00076	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 101  : 	env->window_y_max = 1.0;

  0007b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0007e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00086	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 102  : 	
; 103  : 	env->offset_x = env->offset_y = 0.0;

  0008b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0008e	0f 57 c0	 xorps	 xmm0, xmm0
  00091	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _env$[ebp]
  00099	0f 57 c0	 xorps	 xmm0, xmm0
  0009c	f3 0f 11 41 20	 movss	 DWORD PTR [ecx+32], xmm0

; 104  : 
; 105  : 	get_identity_matrix3x3 (env->instance_scaling);

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  000a4	83 c0 28	 add	 eax, 40			; 00000028H
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 106  : 	get_identity_matrix3x3 (env->instance_rotation);

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  000b0	83 c0 4c	 add	 eax, 76			; 0000004cH
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 107  : 	get_identity_matrix3x3 (env->instance_translation);

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  000bc	83 c0 70	 add	 eax, 112		; 00000070H
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 108  : 	get_identity_matrix3x3 (env->instance_transformation);

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  000c8	05 94 00 00 00	 add	 eax, 148		; 00000094H
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 109  : 	get_identity_matrix3x3 (env->window_translation);

  000d3	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  000d6	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 110  : 	get_identity_matrix3x3 (env->window_scaling);

  000e1	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  000e4	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 111  : 	get_identity_matrix3x3 (env->window_rotation);

  000ef	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  000f2	05 00 01 00 00	 add	 eax, 256		; 00000100H
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 112  : 	get_identity_matrix3x3 (env->viewport_translation);

  000fd	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00100	05 24 01 00 00	 add	 eax, 292		; 00000124H
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 113  : 	get_identity_matrix3x3 (env->composite_transformation);

  0010b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0010e	05 48 01 00 00	 add	 eax, 328		; 00000148H
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 114  : 
; 115  : 	get_identity_matrix3x3 (env->inverse_viewport_translation);

  00119	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0011c	05 6c 01 00 00	 add	 eax, 364		; 0000016cH
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 116  : 	get_identity_matrix3x3 (env->inverse_window_rotation);

  00127	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0012a	05 90 01 00 00	 add	 eax, 400		; 00000190H
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 117  : 	get_identity_matrix3x3 (env->inverse_window_scaling);

  00135	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00138	05 b4 01 00 00	 add	 eax, 436		; 000001b4H
  0013d	50		 push	 eax
  0013e	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 118  : 	get_identity_matrix3x3 (env->inverse_window_translation);

  00143	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00146	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  0014b	50		 push	 eax
  0014c	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 119  : 	get_identity_matrix3x3 (env->inverse_composite_transformation);

  00151	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00154	05 fc 01 00 00	 add	 eax, 508		; 000001fcH
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3

; 120  : 
; 121  : 	env->instance_transformation_matrix_valid = TRUE;

  0015f	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00162	c7 80 20 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+544], 1

; 122  : 	env->composite_transformation_matrix_valid = TRUE;

  0016c	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0016f	c7 80 24 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+548], 1

; 123  : 	env->inverse_composite_transformation_matrix_valid = TRUE;

  00179	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0017c	c7 80 28 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+552], 1

; 124  : 
; 125  : 	return (env);

  00186	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]

; 126  : }

  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi
  0018b	5b		 pop	 ebx
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c3		 ret	 0
?create_2d_environment@@YGPAUENV_2D@@XZ ENDP		; create_2d_environment
_TEXT	ENDS
END
