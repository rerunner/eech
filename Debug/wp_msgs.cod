; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\waypoint\wp_msgs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_cosf
PUBLIC	_sinf
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?overload_waypoint_message_responses@@YGXXZ	; overload_waypoint_message_responses
PUBLIC	?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_set_entity_position'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_waypoint_action'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@ ; `string'
PUBLIC	??_C@_06HDFDANIG@member@			; `string'
PUBLIC	?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_waypoint_reached'::`1'::__LINE__Var
PUBLIC	??_C@_04GGKLLKOO@task@				; `string'
PUBLIC	??_C@_02HODPCBMO@wp@				; `string'
PUBLIC	??_C@_0CL@EHMDLOFP@state?5?$CB?$DN?5VERBOSE_OPERATIONAL_ST@ ; `string'
EXTRN	_cos:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?set_group_verbose_operational_state@@YGXPAUENTITY@@H@Z:PROC ; set_group_verbose_operational_state
EXTRN	?set_guide_new_waypoint@@YGHPAUENTITY@@0@Z:PROC	; set_guide_new_waypoint
EXTRN	?set_guide_next_waypoint@@YGHPAUENTITY@@@Z:PROC	; set_guide_next_waypoint
EXTRN	?update_local_entity_waypoint_list_tags@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_waypoint_list_tags
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA:BYTE ; message_responses
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?waypoint_database@@3PAUWAYPOINT_DATA@@A:BYTE	; waypoint_database
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0CL@EHMDLOFP@state?5?$CB?$DN?5VERBOSE_OPERATIONAL_ST@
CONST	SEGMENT
??_C@_0CL@EHMDLOFP@state?5?$CB?$DN?5VERBOSE_OPERATIONAL_ST@ DB 'state != '
	DB	'VERBOSE_OPERATIONAL_STATE_UNKNOWN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HODPCBMO@wp@
CONST	SEGMENT
??_C@_02HODPCBMO@wp@ DB 'wp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGKLLKOO@task@
CONST	SEGMENT
??_C@_04GGKLLKOO@task@ DB 'task', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 011eH ; `response_to_waypoint_reached'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06HDFDANIG@member@
CONST	SEGMENT
??_C@_06HDFDANIG@member@ DB 'member', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@
CONST	SEGMENT
??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@ DB 'get_local'
	DB	'_entity_type (sender) == ENTITY_TYPE_GUIDE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 0e9H ; `response_to_waypoint_action'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\waypoint\wp_m'
	DB	'sgs.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 0aaH ; `response_to_set_entity_position'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_msgs.c
;	COMDAT ?response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv331 = -112						; size = 4
tv285 = -112						; size = 4
tv264 = -112						; size = 4
tv245 = -112						; size = 4
tv224 = -112						; size = 4
tv201 = -112						; size = 4
tv180 = -112						; size = 4
tv148 = -112						; size = 4
tv128 = -112						; size = 4
tv323 = -108						; size = 4
tv277 = -108						; size = 4
tv257 = -108						; size = 4
tv237 = -108						; size = 4
tv217 = -108						; size = 4
tv193 = -108						; size = 4
tv173 = -108						; size = 4
tv167 = -108						; size = 4
tv140 = -108						; size = 4
tv88 = -108						; size = 4
tv75 = -108						; size = 4
_state$1 = -40						; size = 4
_task$2 = -36						; size = 4
_wp$3 = -32						; size = 4
_member$ = -28						; size = 4
_group$ = -24						; size = 4
_force$ = -20						; size = 4
_raw$ = -16						; size = 4
_set_next_waypoint$ = -12				; size = 4
_return_msg$ = -8					; size = 4
_msg$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_waypoint_reached, COMDAT

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 287  : 
; 288  : 	int
; 289  : 		msg,
; 290  : 		return_msg,
; 291  : 		set_next_waypoint;
; 292  : 
; 293  : 	waypoint
; 294  : 		*raw;
; 295  : 
; 296  : 	entity
; 297  : 		*force,
; 298  : 		*group,
; 299  : 		*member;
; 300  : 
; 301  : 	#if DEBUG_MODULE >= 3
; 302  : 
; 303  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 304  : 
; 305  : 	#endif
; 306  : 
; 307  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN6@response_t
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00017	83 c0 15	 add	 eax, 21			; 00000015H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@response_t:

; 308  : 
; 309  : 	ASSERT (get_local_entity_type (sender) == ENTITY_TYPE_GUIDE);

  0002a	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0002e	74 0a		 je	 SHORT $LN20@response_t
  00030	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d 94	 mov	 DWORD PTR tv75[ebp], ecx
  00038	eb 21		 jmp	 SHORT $LN21@response_t
$LN20@response_t:
  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00040	83 c2 17	 add	 edx, 23			; 00000017H
  00043	52		 push	 edx
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00054	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN21@response_t:
  0005b	83 7d 94 0d	 cmp	 DWORD PTR tv75[ebp], 13	; 0000000dH
  0005f	74 18		 je	 SHORT $LN7@response_t
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00066	83 c0 17	 add	 eax, 23			; 00000017H
  00069	50		 push	 eax
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@response_t:

; 310  : 
; 311  : 	raw = (waypoint *) get_local_entity_data (receiver);

  00079	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4d f0	 mov	 DWORD PTR _raw$[ebp], ecx

; 312  : 
; 313  : 	member = (entity *) get_local_entity_ptr_value (sender, PTR_TYPE_TASK_LEADER);

  00082	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00086	74 0a		 je	 SHORT $LN22@response_t
  00088	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 4d 94	 mov	 DWORD PTR tv88[ebp], ecx
  00090	eb 21		 jmp	 SHORT $LN23@response_t
$LN22@response_t:
  00092	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00098	83 c2 1b	 add	 edx, 27			; 0000001bH
  0009b	52		 push	 edx
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ac	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN23@response_t:
  000b3	b9 01 00 00 00	 mov	 ecx, 1
  000b8	85 c9		 test	 ecx, ecx
  000ba	74 09		 je	 SHORT $LN24@response_t
  000bc	c7 45 90 0f 00
	00 00		 mov	 DWORD PTR tv128[ebp], 15 ; 0000000fH
  000c3	eb 21		 jmp	 SHORT $LN25@response_t
$LN24@response_t:
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000cb	83 c2 1b	 add	 edx, 27			; 0000001bH
  000ce	52		 push	 edx
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000df	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN25@response_t:
  000e6	6a 0f		 push	 15			; 0000000fH
  000e8	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  000eb	51		 push	 ecx
  000ec	6b 55 94 50	 imul	 edx, DWORD PTR tv88[ebp], 80
  000f0	8b 45 90	 mov	 eax, DWORD PTR tv128[ebp]
  000f3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000fa	ff d1		 call	 ecx
  000fc	89 45 e4	 mov	 DWORD PTR _member$[ebp], eax

; 314  : 
; 315  : 	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 316  : 	//
; 317  : 	// send message for each waypoint
; 318  : 	//
; 319  : 	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 320  : 
; 321  : 	group = get_local_entity_parent (sender, LIST_TYPE_GUIDE_STACK);

  000ff	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00103	74 0a		 je	 SHORT $LN26@response_t
  00105	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00108	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010a	89 4d 94	 mov	 DWORD PTR tv140[ebp], ecx
  0010d	eb 21		 jmp	 SHORT $LN27@response_t
$LN26@response_t:
  0010f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00115	83 c2 23	 add	 edx, 35			; 00000023H
  00118	52		 push	 edx
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00129	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN27@response_t:
  00130	b9 01 00 00 00	 mov	 ecx, 1
  00135	85 c9		 test	 ecx, ecx
  00137	74 09		 je	 SHORT $LN28@response_t
  00139	c7 45 90 11 00
	00 00		 mov	 DWORD PTR tv148[ebp], 17 ; 00000011H
  00140	eb 21		 jmp	 SHORT $LN29@response_t
$LN28@response_t:
  00142	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00148	83 c2 23	 add	 edx, 35			; 00000023H
  0014b	52		 push	 edx
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00151	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN29@response_t:
  00163	6a 11		 push	 17			; 00000011H
  00165	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00168	51		 push	 ecx
  00169	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv140[ebp], 180
  00170	8b 45 90	 mov	 eax, DWORD PTR tv148[ebp]
  00173	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0017a	ff d1		 call	 ecx
  0017c	89 45 e8	 mov	 DWORD PTR _group$[ebp], eax

; 322  : 
; 323  : 	//
; 324  : 	// get default message
; 325  : 	//
; 326  : 
; 327  : 	msg =	waypoint_database [raw->sub_type].waypoint_reached_message;

  0017f	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  00182	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  00185	8b 91 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[ecx+4]
  0018b	c1 ea 10	 shr	 edx, 16			; 00000010H
  0018e	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00194	89 55 fc	 mov	 DWORD PTR _msg$[ebp], edx

; 328  : 
; 329  : 	return_msg = waypoint_database [raw->sub_type].waypoint_reached_return_value;

  00197	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  0019a	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  0019d	8b 91 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[ecx+4]
  001a3	c1 ea 19	 shr	 edx, 25			; 00000019H
  001a6	83 e2 0f	 and	 edx, 15			; 0000000fH
  001a9	89 55 f8	 mov	 DWORD PTR _return_msg$[ebp], edx

; 330  : 
; 331  : 	set_next_waypoint = TRUE;

  001ac	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _set_next_waypoint$[ebp], 1

; 332  : 
; 333  : 	//
; 334  : 	// special cases for some waypoint types
; 335  : 	//
; 336  : 
; 337  : 	switch (raw->sub_type)

  001b3	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  001b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b8	89 4d 94	 mov	 DWORD PTR tv167[ebp], ecx
  001bb	83 7d 94 02	 cmp	 DWORD PTR tv167[ebp], 2
  001bf	0f 84 9a 00 00
	00		 je	 $LN10@response_t
  001c5	83 7d 94 15	 cmp	 DWORD PTR tv167[ebp], 21 ; 00000015H
  001c9	74 05		 je	 SHORT $LN8@response_t
  001cb	e9 6d 03 00 00	 jmp	 $LN2@response_t
$LN8@response_t:

; 338  : 	{
; 339  : 		case ENTITY_SUB_TYPE_WAYPOINT_RECON:
; 340  : 		{
; 341  : 			//
; 342  : 			// If Human Player is task leader then waypoint cannot be met simply through range - Player must use comms to transmit recon
; 343  : 			//
; 344  : 
; 345  : 			if (get_local_entity_int_value (member, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  001d0	83 7d e4 00	 cmp	 DWORD PTR _member$[ebp], 0
  001d4	74 0a		 je	 SHORT $LN30@response_t
  001d6	8b 45 e4	 mov	 eax, DWORD PTR _member$[ebp]
  001d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001db	89 4d 94	 mov	 DWORD PTR tv173[ebp], ecx
  001de	eb 1d		 jmp	 SHORT $LN31@response_t
$LN30@response_t:
  001e0	68 59 01 00 00	 push	 345			; 00000159H
  001e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f0	52		 push	 edx
  001f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f6	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN31@response_t:
  001fd	b8 01 00 00 00	 mov	 eax, 1
  00202	85 c0		 test	 eax, eax
  00204	74 09		 je	 SHORT $LN32@response_t
  00206	c7 45 90 9c 00
	00 00		 mov	 DWORD PTR tv180[ebp], 156 ; 0000009cH
  0020d	eb 1d		 jmp	 SHORT $LN33@response_t
$LN32@response_t:
  0020f	68 59 01 00 00	 push	 345			; 00000159H
  00214	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00219	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0021f	51		 push	 ecx
  00220	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00225	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN33@response_t:
  0022c	68 9c 00 00 00	 push	 156			; 0000009cH
  00231	8b 55 e4	 mov	 edx, DWORD PTR _member$[ebp]
  00234	52		 push	 edx
  00235	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv173[ebp], 1116
  0023c	8b 4d 90	 mov	 ecx, DWORD PTR tv180[ebp]
  0023f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00246	ff d2		 call	 edx
  00248	85 c0		 test	 eax, eax
  0024a	74 0e		 je	 SHORT $LN9@response_t

; 346  : 			{
; 347  : 				return_msg = WAYPOINT_REACHED_FALSE;

  0024c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _return_msg$[ebp], 0

; 348  : 
; 349  : 				msg = NUM_ENTITY_MESSAGES;

  00253	c7 45 fc 61 00
	00 00		 mov	 DWORD PTR _msg$[ebp], 97 ; 00000061H
$LN9@response_t:

; 350  : 			}
; 351  : 
; 352  : 			break;

  0025a	e9 de 02 00 00	 jmp	 $LN2@response_t
$LN10@response_t:

; 353  : 		}
; 354  : 
; 355  : 		case ENTITY_SUB_TYPE_WAYPOINT_CAP_LOOP:
; 356  : 		{
; 357  : 			//
; 358  : 			// Loop back to start waypoint (unless task complete) 
; 359  : 			//
; 360  : 
; 361  : 			entity
; 362  : 				*wp,
; 363  : 				*task;
; 364  : 
; 365  : 			task = get_local_entity_parent (receiver, LIST_TYPE_WAYPOINT);

  0025f	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00263	74 0a		 je	 SHORT $LN34@response_t
  00265	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00268	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026a	89 4d 94	 mov	 DWORD PTR tv193[ebp], ecx
  0026d	eb 21		 jmp	 SHORT $LN35@response_t
$LN34@response_t:
  0026f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00275	83 c2 4f	 add	 edx, 79			; 0000004fH
  00278	52		 push	 edx
  00279	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00289	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN35@response_t:
  00290	b9 01 00 00 00	 mov	 ecx, 1
  00295	85 c9		 test	 ecx, ecx
  00297	74 09		 je	 SHORT $LN36@response_t
  00299	c7 45 90 2c 00
	00 00		 mov	 DWORD PTR tv201[ebp], 44 ; 0000002cH
  002a0	eb 21		 jmp	 SHORT $LN37@response_t
$LN36@response_t:
  002a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002a8	83 c2 4f	 add	 edx, 79			; 0000004fH
  002ab	52		 push	 edx
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002b6	50		 push	 eax
  002b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bc	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv201[ebp], 0
$LN37@response_t:
  002c3	6a 2c		 push	 44			; 0000002cH
  002c5	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002c8	51		 push	 ecx
  002c9	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv193[ebp], 180
  002d0	8b 45 90	 mov	 eax, DWORD PTR tv201[ebp]
  002d3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002da	ff d1		 call	 ecx
  002dc	89 45 dc	 mov	 DWORD PTR _task$2[ebp], eax

; 366  : 
; 367  : 			ASSERT (task);

  002df	83 7d dc 00	 cmp	 DWORD PTR _task$2[ebp], 0
  002e3	75 18		 jne	 SHORT $LN11@response_t
  002e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002ea	83 c0 51	 add	 eax, 81			; 00000051H
  002ed	50		 push	 eax
  002ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  002f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@response_t:

; 368  : 			
; 369  : 			if (get_local_entity_int_value (task, INT_TYPE_TASK_COMPLETED) == TASK_INCOMPLETE)

  002fd	83 7d dc 00	 cmp	 DWORD PTR _task$2[ebp], 0
  00301	74 0a		 je	 SHORT $LN38@response_t
  00303	8b 45 dc	 mov	 eax, DWORD PTR _task$2[ebp]
  00306	8b 08		 mov	 ecx, DWORD PTR [eax]
  00308	89 4d 94	 mov	 DWORD PTR tv217[ebp], ecx
  0030b	eb 1d		 jmp	 SHORT $LN39@response_t
$LN38@response_t:
  0030d	68 71 01 00 00	 push	 369			; 00000171H
  00312	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00317	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0031d	52		 push	 edx
  0031e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00323	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv217[ebp], 0
$LN39@response_t:
  0032a	b8 01 00 00 00	 mov	 eax, 1
  0032f	85 c0		 test	 eax, eax
  00331	74 09		 je	 SHORT $LN40@response_t
  00333	c7 45 90 d9 00
	00 00		 mov	 DWORD PTR tv224[ebp], 217 ; 000000d9H
  0033a	eb 1d		 jmp	 SHORT $LN41@response_t
$LN40@response_t:
  0033c	68 71 01 00 00	 push	 369			; 00000171H
  00341	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00346	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0034c	51		 push	 ecx
  0034d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00352	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv224[ebp], 0
$LN41@response_t:
  00359	68 d9 00 00 00	 push	 217			; 000000d9H
  0035e	8b 55 dc	 mov	 edx, DWORD PTR _task$2[ebp]
  00361	52		 push	 edx
  00362	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv217[ebp], 1116
  00369	8b 4d 90	 mov	 ecx, DWORD PTR tv224[ebp]
  0036c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00373	ff d2		 call	 edx
  00375	85 c0		 test	 eax, eax
  00377	0f 85 c0 01 00
	00		 jne	 $LN2@response_t

; 370  : 			{
; 371  : 				wp = get_local_entity_first_child (task, LIST_TYPE_WAYPOINT);

  0037d	83 7d dc 00	 cmp	 DWORD PTR _task$2[ebp], 0
  00381	74 0a		 je	 SHORT $LN42@response_t
  00383	8b 45 dc	 mov	 eax, DWORD PTR _task$2[ebp]
  00386	8b 08		 mov	 ecx, DWORD PTR [eax]
  00388	89 4d 94	 mov	 DWORD PTR tv237[ebp], ecx
  0038b	eb 21		 jmp	 SHORT $LN43@response_t
$LN42@response_t:
  0038d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00393	83 c2 55	 add	 edx, 85			; 00000055H
  00396	52		 push	 edx
  00397	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a1	50		 push	 eax
  003a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a7	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv237[ebp], 0
$LN43@response_t:
  003ae	b9 01 00 00 00	 mov	 ecx, 1
  003b3	85 c9		 test	 ecx, ecx
  003b5	74 09		 je	 SHORT $LN44@response_t
  003b7	c7 45 90 2c 00
	00 00		 mov	 DWORD PTR tv245[ebp], 44 ; 0000002cH
  003be	eb 21		 jmp	 SHORT $LN45@response_t
$LN44@response_t:
  003c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  003c6	83 c2 55	 add	 edx, 85			; 00000055H
  003c9	52		 push	 edx
  003ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003da	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv245[ebp], 0
$LN45@response_t:
  003e1	6a 2c		 push	 44			; 0000002cH
  003e3	8b 4d dc	 mov	 ecx, DWORD PTR _task$2[ebp]
  003e6	51		 push	 ecx
  003e7	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv237[ebp], 180
  003ee	8b 45 90	 mov	 eax, DWORD PTR tv245[ebp]
  003f1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003f8	ff d1		 call	 ecx
  003fa	89 45 e0	 mov	 DWORD PTR _wp$3[ebp], eax
$LN4@response_t:

; 372  : 
; 373  : 				while (wp)

  003fd	83 7d e0 00	 cmp	 DWORD PTR _wp$3[ebp], 0
  00401	0f 84 04 01 00
	00		 je	 $LN5@response_t

; 374  : 				{
; 375  : 					if (get_local_entity_int_value (wp, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_WAYPOINT_CAP_START)

  00407	83 7d e0 00	 cmp	 DWORD PTR _wp$3[ebp], 0
  0040b	74 0a		 je	 SHORT $LN46@response_t
  0040d	8b 45 e0	 mov	 eax, DWORD PTR _wp$3[ebp]
  00410	8b 08		 mov	 ecx, DWORD PTR [eax]
  00412	89 4d 94	 mov	 DWORD PTR tv257[ebp], ecx
  00415	eb 1d		 jmp	 SHORT $LN47@response_t
$LN46@response_t:
  00417	68 77 01 00 00	 push	 375			; 00000177H
  0041c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00421	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00427	52		 push	 edx
  00428	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv257[ebp], 0
$LN47@response_t:
  00434	b8 01 00 00 00	 mov	 eax, 1
  00439	85 c0		 test	 eax, eax
  0043b	74 09		 je	 SHORT $LN48@response_t
  0043d	c7 45 90 34 00
	00 00		 mov	 DWORD PTR tv264[ebp], 52 ; 00000034H
  00444	eb 1d		 jmp	 SHORT $LN49@response_t
$LN48@response_t:
  00446	68 77 01 00 00	 push	 375			; 00000177H
  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00450	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00456	51		 push	 ecx
  00457	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv264[ebp], 0
$LN49@response_t:
  00463	6a 34		 push	 52			; 00000034H
  00465	8b 55 e0	 mov	 edx, DWORD PTR _wp$3[ebp]
  00468	52		 push	 edx
  00469	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv257[ebp], 1116
  00470	8b 4d 90	 mov	 ecx, DWORD PTR tv264[ebp]
  00473	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0047a	ff d2		 call	 edx
  0047c	83 f8 03	 cmp	 eax, 3
  0047f	75 05		 jne	 SHORT $LN13@response_t

; 376  : 					{
; 377  : 						break;

  00481	e9 85 00 00 00	 jmp	 $LN5@response_t
$LN13@response_t:

; 378  : 					}
; 379  : 
; 380  : 					wp = get_local_entity_child_succ (wp, LIST_TYPE_WAYPOINT);

  00486	83 7d e0 00	 cmp	 DWORD PTR _wp$3[ebp], 0
  0048a	74 0a		 je	 SHORT $LN50@response_t
  0048c	8b 45 e0	 mov	 eax, DWORD PTR _wp$3[ebp]
  0048f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00491	89 4d 94	 mov	 DWORD PTR tv277[ebp], ecx
  00494	eb 21		 jmp	 SHORT $LN51@response_t
$LN50@response_t:
  00496	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0049c	83 c2 5e	 add	 edx, 94			; 0000005eH
  0049f	52		 push	 edx
  004a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004aa	50		 push	 eax
  004ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004b0	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv277[ebp], 0
$LN51@response_t:
  004b7	b9 01 00 00 00	 mov	 ecx, 1
  004bc	85 c9		 test	 ecx, ecx
  004be	74 09		 je	 SHORT $LN52@response_t
  004c0	c7 45 90 2c 00
	00 00		 mov	 DWORD PTR tv285[ebp], 44 ; 0000002cH
  004c7	eb 21		 jmp	 SHORT $LN53@response_t
$LN52@response_t:
  004c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  004cf	83 c2 5e	 add	 edx, 94			; 0000005eH
  004d2	52		 push	 edx
  004d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004dd	50		 push	 eax
  004de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e3	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv285[ebp], 0
$LN53@response_t:
  004ea	6a 2c		 push	 44			; 0000002cH
  004ec	8b 4d e0	 mov	 ecx, DWORD PTR _wp$3[ebp]
  004ef	51		 push	 ecx
  004f0	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv277[ebp], 180
  004f7	8b 45 90	 mov	 eax, DWORD PTR tv285[ebp]
  004fa	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00501	ff d1		 call	 ecx
  00503	89 45 e0	 mov	 DWORD PTR _wp$3[ebp], eax

; 381  : 				}

  00506	e9 f2 fe ff ff	 jmp	 $LN4@response_t
$LN5@response_t:

; 382  : 
; 383  : 				ASSERT (wp);

  0050b	83 7d e0 00	 cmp	 DWORD PTR _wp$3[ebp], 0
  0050f	75 18		 jne	 SHORT $LN14@response_t
  00511	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00516	83 c0 61	 add	 eax, 97			; 00000061H
  00519	50		 push	 eax
  0051a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0051f	68 00 00 00 00	 push	 OFFSET ??_C@_02HODPCBMO@wp@
  00524	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@response_t:

; 384  : 				
; 385  : 				set_guide_new_waypoint (sender, wp);

  00529	8b 45 e0	 mov	 eax, DWORD PTR _wp$3[ebp]
  0052c	50		 push	 eax
  0052d	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00530	51		 push	 ecx
  00531	e8 00 00 00 00	 call	 ?set_guide_new_waypoint@@YGHPAUENTITY@@0@Z ; set_guide_new_waypoint

; 386  : 
; 387  : 				set_next_waypoint = FALSE;

  00536	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _set_next_waypoint$[ebp], 0
$LN2@response_t:

; 388  : 			}
; 389  : 
; 390  : 			break;
; 391  : 		}
; 392  : 	}
; 393  : 
; 394  : 	//
; 395  : 	// notify member/s and return
; 396  : 	//
; 397  : 
; 398  : 	if (return_msg != WAYPOINT_REACHED_FALSE)

  0053d	83 7d f8 00	 cmp	 DWORD PTR _return_msg$[ebp], 0
  00541	0f 84 10 01 00
	00		 je	 $LN15@response_t

; 399  : 	{
; 400  : 
; 401  : 		int
; 402  : 			state;
; 403  : 
; 404  : 		// get task and group before notifying first member of wp_reached because it may destroy the task.
; 405  : 		// remember wp may be internal, i.e. parent is not a task but a mobile
; 406  : 
; 407  : 		//
; 408  : 		// set guide waypoint
; 409  : 		//
; 410  : 
; 411  : 		if (set_next_waypoint)

  00547	83 7d f4 00	 cmp	 DWORD PTR _set_next_waypoint$[ebp], 0
  0054b	74 09		 je	 SHORT $LN16@response_t

; 412  : 		{
; 413  : 			set_guide_next_waypoint (sender);

  0054d	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00550	50		 push	 eax
  00551	e8 00 00 00 00	 call	 ?set_guide_next_waypoint@@YGHPAUENTITY@@@Z ; set_guide_next_waypoint
$LN16@response_t:

; 414  : 		}
; 415  : 
; 416  : 		//
; 417  : 		// set verbose operational state
; 418  : 		//
; 419  : 
; 420  : 		state = waypoint_database [raw->sub_type].verbose_operational_state;

  00556	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  00559	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  0055c	8b 91 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[ecx+4]
  00562	c1 e2 1a	 shl	 edx, 26			; 0000001aH
  00565	c1 fa 1a	 sar	 edx, 26			; 0000001aH
  00568	89 55 d8	 mov	 DWORD PTR _state$1[ebp], edx

; 421  : 
; 422  : 		ASSERT (state != VERBOSE_OPERATIONAL_STATE_UNKNOWN);

  0056b	83 7d d8 00	 cmp	 DWORD PTR _state$1[ebp], 0
  0056f	75 1a		 jne	 SHORT $LN17@response_t
  00571	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00576	05 88 00 00 00	 add	 eax, 136		; 00000088H
  0057b	50		 push	 eax
  0057c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00581	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@EHMDLOFP@state?5?$CB?$DN?5VERBOSE_OPERATIONAL_ST@
  00586	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@response_t:

; 423  : 
; 424  : 		set_group_verbose_operational_state (group, state);

  0058b	8b 45 d8	 mov	 eax, DWORD PTR _state$1[ebp]
  0058e	50		 push	 eax
  0058f	8b 4d e8	 mov	 ecx, DWORD PTR _group$[ebp]
  00592	51		 push	 ecx
  00593	e8 00 00 00 00	 call	 ?set_group_verbose_operational_state@@YGXPAUENTITY@@H@Z ; set_group_verbose_operational_state

; 425  : 
; 426  : 		//
; 427  : 		// notify force that waypoints reached
; 428  : 		//
; 429  : 
; 430  : 		force = get_local_force_entity ((entity_sides) get_local_entity_int_value (group, INT_TYPE_SIDE));

  00598	83 7d e8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0059c	74 0a		 je	 SHORT $LN54@response_t
  0059e	8b 45 e8	 mov	 eax, DWORD PTR _group$[ebp]
  005a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a3	89 4d 94	 mov	 DWORD PTR tv323[ebp], ecx
  005a6	eb 24		 jmp	 SHORT $LN55@response_t
$LN54@response_t:
  005a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  005ae	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  005b4	52		 push	 edx
  005b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005bf	50		 push	 eax
  005c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c5	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv323[ebp], 0
$LN55@response_t:
  005cc	b9 01 00 00 00	 mov	 ecx, 1
  005d1	85 c9		 test	 ecx, ecx
  005d3	74 09		 je	 SHORT $LN56@response_t
  005d5	c7 45 90 bb 00
	00 00		 mov	 DWORD PTR tv331[ebp], 187 ; 000000bbH
  005dc	eb 24		 jmp	 SHORT $LN57@response_t
$LN56@response_t:
  005de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  005e4	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  005ea	52		 push	 edx
  005eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005f5	50		 push	 eax
  005f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005fb	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv331[ebp], 0
$LN57@response_t:
  00602	68 bb 00 00 00	 push	 187			; 000000bbH
  00607	8b 4d e8	 mov	 ecx, DWORD PTR _group$[ebp]
  0060a	51		 push	 ecx
  0060b	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv323[ebp], 1116
  00612	8b 45 90	 mov	 eax, DWORD PTR tv331[ebp]
  00615	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0061c	ff d1		 call	 ecx
  0061e	50		 push	 eax
  0061f	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00624	89 45 ec	 mov	 DWORD PTR _force$[ebp], eax

; 431  : 
; 432  : 		notify_local_entity (ENTITY_MESSAGE_FORCE_WAYPOINT_REACHED, force, receiver, sender);

  00627	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0062a	50		 push	 eax
  0062b	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0062e	51		 push	 ecx
  0062f	8b 55 ec	 mov	 edx, DWORD PTR _force$[ebp]
  00632	52		 push	 edx
  00633	6a 1c		 push	 28			; 0000001cH
  00635	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0063a	83 c4 10	 add	 esp, 16			; 00000010H

; 433  : 
; 434  : 		//
; 435  : 		// only notify the task leader of waypoint reached - he will sort out the rest
; 436  : 		//
; 437  : 		
; 438  : 		if (msg != NUM_ENTITY_MESSAGES)

  0063d	83 7d fc 61	 cmp	 DWORD PTR _msg$[ebp], 97 ; 00000061H
  00641	74 14		 je	 SHORT $LN15@response_t

; 439  : 		{
; 440  : 			notify_local_entity ((entity_messages) msg, member, receiver);

  00643	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00646	50		 push	 eax
  00647	8b 4d e4	 mov	 ecx, DWORD PTR _member$[ebp]
  0064a	51		 push	 ecx
  0064b	8b 55 fc	 mov	 edx, DWORD PTR _msg$[ebp]
  0064e	52		 push	 edx
  0064f	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00654	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@response_t:

; 441  : 		}
; 442  : 	}
; 443  : 
; 444  : 	return (return_msg);

  00657	8b 45 f8	 mov	 eax, DWORD PTR _return_msg$[ebp]

; 445  : }

  0065a	5f		 pop	 edi
  0065b	5e		 pop	 esi
  0065c	5b		 pop	 ebx
  0065d	8b e5		 mov	 esp, ebp
  0065f	5d		 pop	 ebp
  00660	c2 10 00	 ret	 16			; 00000010H
?response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_waypoint_reached
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_msgs.c
;	COMDAT ?response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv128 = -84						; size = 4
tv88 = -80						; size = 4
tv75 = -80						; size = 4
_member$ = -12						; size = 4
_raw$ = -8						; size = 4
_msg$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_waypoint_action, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 234  : 	int
; 235  : 		msg;
; 236  : 
; 237  : 	waypoint
; 238  : 		*raw;
; 239  : 
; 240  : 	entity
; 241  : 		*member;
; 242  : 
; 243  : 	#if DEBUG_MODULE >= 3
; 244  : 
; 245  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 246  : 
; 247  : 	#endif
; 248  : 
; 249  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@response_t
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00017	83 c0 10	 add	 eax, 16			; 00000010H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@response_t:

; 250  : 
; 251  : 	ASSERT (get_local_entity_type (sender) == ENTITY_TYPE_GUIDE);

  0002a	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0002e	74 0a		 je	 SHORT $LN8@response_t
  00030	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00038	eb 21		 jmp	 SHORT $LN9@response_t
$LN8@response_t:
  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00040	83 c2 12	 add	 edx, 18			; 00000012H
  00043	52		 push	 edx
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00054	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@response_t:
  0005b	83 7d b0 0d	 cmp	 DWORD PTR tv75[ebp], 13	; 0000000dH
  0005f	74 18		 je	 SHORT $LN3@response_t
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00066	83 c0 12	 add	 eax, 18			; 00000012H
  00069	50		 push	 eax
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@response_t:

; 252  : 
; 253  : 	raw = (waypoint *) get_local_entity_data (receiver);

  00079	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 254  : 
; 255  : 	member = (entity *) get_local_entity_ptr_value (sender, PTR_TYPE_TASK_LEADER);

  00082	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00086	74 0a		 je	 SHORT $LN10@response_t
  00088	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 4d b0	 mov	 DWORD PTR tv88[ebp], ecx
  00090	eb 21		 jmp	 SHORT $LN11@response_t
$LN10@response_t:
  00092	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00098	83 c2 16	 add	 edx, 22			; 00000016H
  0009b	52		 push	 edx
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ac	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN11@response_t:
  000b3	b9 01 00 00 00	 mov	 ecx, 1
  000b8	85 c9		 test	 ecx, ecx
  000ba	74 09		 je	 SHORT $LN12@response_t
  000bc	c7 45 ac 0f 00
	00 00		 mov	 DWORD PTR tv128[ebp], 15 ; 0000000fH
  000c3	eb 21		 jmp	 SHORT $LN13@response_t
$LN12@response_t:
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000cb	83 c2 16	 add	 edx, 22			; 00000016H
  000ce	52		 push	 edx
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000df	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@response_t:
  000e6	6a 0f		 push	 15			; 0000000fH
  000e8	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  000eb	51		 push	 ecx
  000ec	6b 55 b0 50	 imul	 edx, DWORD PTR tv88[ebp], 80
  000f0	8b 45 ac	 mov	 eax, DWORD PTR tv128[ebp]
  000f3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000fa	ff d1		 call	 ecx
  000fc	89 45 f4	 mov	 DWORD PTR _member$[ebp], eax

; 256  : 
; 257  : 	ASSERT (member);

  000ff	83 7d f4 00	 cmp	 DWORD PTR _member$[ebp], 0
  00103	75 18		 jne	 SHORT $LN4@response_t
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0010a	83 c0 18	 add	 eax, 24			; 00000018H
  0010d	50		 push	 eax
  0010e	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00113	68 00 00 00 00	 push	 OFFSET ??_C@_06HDFDANIG@member@
  00118	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@response_t:

; 258  : 
; 259  : 	//
; 260  : 	// get default message
; 261  : 	//
; 262  : 
; 263  : 	msg =	waypoint_database [raw->sub_type].waypoint_action_message;

  0011d	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00120	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  00123	8b 91 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[ecx+4]
  00129	c1 ea 07	 shr	 edx, 7
  0012c	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00132	89 55 fc	 mov	 DWORD PTR _msg$[ebp], edx

; 264  : 
; 265  : 	//
; 266  : 	// only notify the task leader of waypoint reached - he will sort out the rest
; 267  : 	//
; 268  : 		
; 269  : 	if (msg != NUM_ENTITY_MESSAGES)

  00135	83 7d fc 61	 cmp	 DWORD PTR _msg$[ebp], 97 ; 00000061H
  00139	74 1d		 je	 SHORT $LN5@response_t

; 270  : 	{
; 271  : 		notify_local_entity ((entity_messages) msg, member, receiver);

  0013b	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0013e	50		 push	 eax
  0013f	8b 4d f4	 mov	 ecx, DWORD PTR _member$[ebp]
  00142	51		 push	 ecx
  00143	8b 55 fc	 mov	 edx, DWORD PTR _msg$[ebp]
  00146	52		 push	 edx
  00147	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0014c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 272  : 
; 273  : 		return TRUE;

  0014f	b8 01 00 00 00	 mov	 eax, 1
  00154	eb 04		 jmp	 SHORT $LN1@response_t

; 274  : 	}
; 275  : 	else

  00156	eb 02		 jmp	 SHORT $LN1@response_t
$LN5@response_t:

; 276  : 	{
; 277  : 		return FALSE;

  00158	33 c0		 xor	 eax, eax
$LN1@response_t:

; 278  : 	}
; 279  : }

  0015a	5f		 pop	 edi
  0015b	5e		 pop	 esi
  0015c	5b		 pop	 ebx
  0015d	8b e5		 mov	 esp, ebp
  0015f	5d		 pop	 ebp
  00160	c2 10 00	 ret	 16			; 00000010H
?response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_waypoint_action
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_msgs.c
;	COMDAT ?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv193 = -120						; size = 4
tv173 = -120						; size = 4
tv89 = -120						; size = 4
tv185 = -116						; size = 4
tv165 = -116						; size = 4
tv81 = -116						; size = 4
_raw$ = -48						; size = 4
_heading$ = -44						; size = 4
_sin_heading$ = -40					; size = 4
_cos_heading$ = -36					; size = 4
_parent_position$ = -32					; size = 4
_delta_position$ = -28					; size = 12
_wp_position$ = -16					; size = 12
_position$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_set_entity_position, COMDAT

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 171  : 
; 172  : 	vec3d
; 173  : 		*position,
; 174  : 		wp_position,
; 175  : 		delta_position,
; 176  : 		*parent_position;
; 177  : 
; 178  : 	float
; 179  : 		cos_heading,
; 180  : 		sin_heading,
; 181  : 		heading;
; 182  : 
; 183  : 	waypoint
; 184  : 		*raw;
; 185  : 
; 186  : 	raw = (waypoint *) get_local_entity_data (receiver);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d d0	 mov	 DWORD PTR _raw$[ebp], ecx

; 187  : 	
; 188  : 	position = va_arg (pargs, vec3d *);

  00012	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00015	83 c0 04	 add	 eax, 4
  00018	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  0001b	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0001e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00021	89 55 fc	 mov	 DWORD PTR _position$[ebp], edx

; 189  : 	
; 190  : 	heading = (float) va_arg (pargs, double);

  00024	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00027	83 c0 08	 add	 eax, 8
  0002a	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  0002d	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00030	f2 0f 10 41 f8	 movsd	 xmm0, QWORD PTR [ecx-8]
  00035	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00039	f3 0f 11 45 d4	 movss	 DWORD PTR _heading$[ebp], xmm0

; 191  : 
; 192  : 	//
; 193  : 	// Set position, only if relative to parent
; 194  : 	//
; 195  : 
; 196  : 	if (raw->position_type == POSITION_TYPE_RELATIVE)

  0003e	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  00041	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00044	c1 e9 04	 shr	 ecx, 4
  00047	83 e1 03	 and	 ecx, 3
  0004a	83 f9 01	 cmp	 ecx, 1
  0004d	0f 85 52 02 00
	00		 jne	 $LN2@response_t

; 197  : 	{
; 198  : 
; 199  : 		parent_position = get_local_entity_vec3d_ptr (sender, VEC3D_TYPE_POSITION);

  00053	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00057	74 0a		 je	 SHORT $LN4@response_t
  00059	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d 8c	 mov	 DWORD PTR tv81[ebp], ecx
  00061	eb 21		 jmp	 SHORT $LN5@response_t
$LN4@response_t:
  00063	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00069	83 c2 1d	 add	 edx, 29			; 0000001dH
  0006c	52		 push	 edx
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007d	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN5@response_t:
  00084	b9 01 00 00 00	 mov	 ecx, 1
  00089	85 c9		 test	 ecx, ecx
  0008b	74 09		 je	 SHORT $LN6@response_t
  0008d	c7 45 88 08 00
	00 00		 mov	 DWORD PTR tv89[ebp], 8
  00094	eb 21		 jmp	 SHORT $LN7@response_t
$LN6@response_t:
  00096	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0009c	83 c2 1d	 add	 edx, 29			; 0000001dH
  0009f	52		 push	 edx
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b0	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN7@response_t:
  000b7	6a 08		 push	 8
  000b9	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  000bc	51		 push	 ecx
  000bd	6b 55 8c 60	 imul	 edx, DWORD PTR tv81[ebp], 96
  000c1	8b 45 88	 mov	 eax, DWORD PTR tv89[ebp]
  000c4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000cb	ff d1		 call	 ecx
  000cd	89 45 e0	 mov	 DWORD PTR _parent_position$[ebp], eax

; 200  : 
; 201  : 		delta_position.x = (raw->position.x - parent_position->x);

  000d0	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  000d3	8b 4d e0	 mov	 ecx, DWORD PTR _parent_position$[ebp]
  000d6	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  000db	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  000df	f3 0f 11 45 e4	 movss	 DWORD PTR _delta_position$[ebp], xmm0

; 202  : 		delta_position.y = (raw->position.y - parent_position->y);

  000e4	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  000e7	8b 4d e0	 mov	 ecx, DWORD PTR _parent_position$[ebp]
  000ea	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  000ef	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  000f4	f3 0f 11 45 e8	 movss	 DWORD PTR _delta_position$[ebp+4], xmm0

; 203  : 		delta_position.z = (raw->position.z - parent_position->z);

  000f9	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  000fc	8b 4d e0	 mov	 ecx, DWORD PTR _parent_position$[ebp]
  000ff	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  00104	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00109	f3 0f 11 45 ec	 movss	 DWORD PTR _delta_position$[ebp+8], xmm0

; 204  : 
; 205  : 		cos_heading = cos (heading - raw->heading);

  0010e	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  00111	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00116	f3 0f 5c 40 28	 subss	 xmm0, DWORD PTR [eax+40]
  0011b	51		 push	 ecx
  0011c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00121	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00126	d9 5d dc	 fstp	 DWORD PTR _cos_heading$[ebp]

; 206  : 		sin_heading = sin (heading - raw->heading);

  00129	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  0012c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00131	f3 0f 5c 40 28	 subss	 xmm0, DWORD PTR [eax+40]
  00136	51		 push	 ecx
  00137	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013c	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00141	d9 5d d8	 fstp	 DWORD PTR _sin_heading$[ebp]

; 207  : 
; 208  : 		wp_position.x = position->x + (cos_heading * delta_position.x) + (sin_heading * delta_position.z);

  00144	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cos_heading$[ebp]
  00149	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _delta_position$[ebp]
  0014e	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  00151	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00155	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _sin_heading$[ebp]
  0015a	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _delta_position$[ebp+8]
  0015f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00163	f3 0f 11 45 f0	 movss	 DWORD PTR _wp_position$[ebp], xmm0

; 209  : 		wp_position.y = position->y + delta_position.y;

  00168	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  0016b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00170	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _delta_position$[ebp+4]
  00175	f3 0f 11 45 f4	 movss	 DWORD PTR _wp_position$[ebp+4], xmm0

; 210  : 		wp_position.z = position->z + (cos_heading * delta_position.z) - (sin_heading * delta_position.x);

  0017a	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cos_heading$[ebp]
  0017f	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _delta_position$[ebp+8]
  00184	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  00187	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  0018c	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _sin_heading$[ebp]
  00191	f3 0f 59 4d e4	 mulss	 xmm1, DWORD PTR _delta_position$[ebp]
  00196	f3 0f 5c c1	 subss	 xmm0, xmm1
  0019a	f3 0f 11 45 f8	 movss	 DWORD PTR _wp_position$[ebp+8], xmm0

; 211  : 
; 212  : 		#if DEBUG_MODULE
; 213  : 
; 214  : 		debug_log ("WP_MSGS: setting position, rel pos %f, %f, %f, heading %f, (delta pos %f, %f, %f, old heading %f)",
; 215  : 						position->x, position->y, position->z, deg (heading),
; 216  : 						delta_position.x, delta_position.y, delta_position.z, deg (raw->heading));
; 217  : 
; 218  : 		#endif
; 219  : 
; 220  : 		set_local_entity_vec3d (receiver, VEC3D_TYPE_POSITION, &wp_position);

  0019f	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  001a3	74 0a		 je	 SHORT $LN8@response_t
  001a5	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  001a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001aa	89 4d 8c	 mov	 DWORD PTR tv165[ebp], ecx
  001ad	eb 21		 jmp	 SHORT $LN9@response_t
$LN8@response_t:
  001af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001b5	83 c2 32	 add	 edx, 50			; 00000032H
  001b8	52		 push	 edx
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001c3	50		 push	 eax
  001c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c9	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN9@response_t:
  001d0	b9 01 00 00 00	 mov	 ecx, 1
  001d5	85 c9		 test	 ecx, ecx
  001d7	74 09		 je	 SHORT $LN10@response_t
  001d9	c7 45 88 08 00
	00 00		 mov	 DWORD PTR tv173[ebp], 8
  001e0	eb 21		 jmp	 SHORT $LN11@response_t
$LN10@response_t:
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001e8	83 c2 32	 add	 edx, 50			; 00000032H
  001eb	52		 push	 edx
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fc	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN11@response_t:
  00203	8d 4d f0	 lea	 ecx, DWORD PTR _wp_position$[ebp]
  00206	51		 push	 ecx
  00207	6a 08		 push	 8
  00209	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  0020c	52		 push	 edx
  0020d	6b 45 8c 60	 imul	 eax, DWORD PTR tv165[ebp], 96
  00211	8b 4d 88	 mov	 ecx, DWORD PTR tv173[ebp]
  00214	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0021b	ff d2		 call	 edx

; 221  : 	
; 222  : 		set_local_entity_float_value (receiver, FLOAT_TYPE_HEADING, heading);

  0021d	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00221	74 0a		 je	 SHORT $LN12@response_t
  00223	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00226	8b 08		 mov	 ecx, DWORD PTR [eax]
  00228	89 4d 8c	 mov	 DWORD PTR tv185[ebp], ecx
  0022b	eb 21		 jmp	 SHORT $LN13@response_t
$LN12@response_t:
  0022d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00233	83 c2 34	 add	 edx, 52			; 00000034H
  00236	52		 push	 edx
  00237	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00247	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN13@response_t:
  0024e	b9 01 00 00 00	 mov	 ecx, 1
  00253	85 c9		 test	 ecx, ecx
  00255	74 09		 je	 SHORT $LN14@response_t
  00257	c7 45 88 34 00
	00 00		 mov	 DWORD PTR tv193[ebp], 52 ; 00000034H
  0025e	eb 21		 jmp	 SHORT $LN15@response_t
$LN14@response_t:
  00260	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00266	83 c2 34	 add	 edx, 52			; 00000034H
  00269	52		 push	 edx
  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@EDOOPPKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027a	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN15@response_t:
  00281	51		 push	 ecx
  00282	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00287	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028c	6a 34		 push	 52			; 00000034H
  0028e	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00291	51		 push	 ecx
  00292	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv185[ebp], 700
  00299	8b 45 88	 mov	 eax, DWORD PTR tv193[ebp]
  0029c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  002a3	ff d1		 call	 ecx
$LN2@response_t:

; 223  : 	}
; 224  : 
; 225  : 	return (TRUE);

  002a5	b8 01 00 00 00	 mov	 eax, 1

; 226  : }

  002aa	5f		 pop	 edi
  002ab	5e		 pop	 esi
  002ac	5b		 pop	 ebx
  002ad	8b e5		 mov	 esp, ebp
  002af	5d		 pop	 ebp
  002b0	c2 10 00	 ret	 16			; 00000010H
?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_set_entity_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_msgs.c
;	COMDAT ?response_to_unlink_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
_type$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_unlink_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_unlink_parent, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 143  : 	list_types
; 144  : 		type;
; 145  : 
; 146  : 	#if DEBUG_MODULE >= 3
; 147  : 
; 148  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 149  : 
; 150  : 	#endif
; 151  : 
; 152  : 	type = va_arg (pargs, list_types);

  00009	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00012	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00015	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00018	89 55 fc	 mov	 DWORD PTR _type$[ebp], edx

; 153  : 
; 154  : 	if (type == LIST_TYPE_WAYPOINT)

  0001b	83 7d fc 2c	 cmp	 DWORD PTR _type$[ebp], 44 ; 0000002cH
  0001f	75 0f		 jne	 SHORT $LN2@response_t

; 155  : 	{
; 156  : 		if (sender)

  00021	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00025	74 09		 je	 SHORT $LN2@response_t

; 157  : 		{
; 158  : 			update_local_entity_waypoint_list_tags (sender);

  00027	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?update_local_entity_waypoint_list_tags@@YGXPAUENTITY@@@Z ; update_local_entity_waypoint_list_tags
$LN2@response_t:

; 159  : 		}
; 160  : 	}
; 161  : 
; 162  : 	return (TRUE);

  00030	b8 01 00 00 00	 mov	 eax, 1

; 163  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 10 00	 ret	 16			; 00000010H
?response_to_unlink_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_unlink_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_msgs.c
;	COMDAT ?response_to_link_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
_type$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_link_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_link_parent, COMDAT

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 115  : 	list_types
; 116  : 		type;
; 117  : 
; 118  : 	#if DEBUG_MODULE >= 3
; 119  : 
; 120  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 121  : 
; 122  : 	#endif
; 123  : 
; 124  : 	type = va_arg (pargs, list_types);

  00009	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00012	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00015	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00018	89 55 fc	 mov	 DWORD PTR _type$[ebp], edx

; 125  : 
; 126  : 	if (type == LIST_TYPE_WAYPOINT)

  0001b	83 7d fc 2c	 cmp	 DWORD PTR _type$[ebp], 44 ; 0000002cH
  0001f	75 0f		 jne	 SHORT $LN2@response_t

; 127  : 	{
; 128  : 		if (sender)

  00021	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00025	74 09		 je	 SHORT $LN2@response_t

; 129  : 		{
; 130  : 			update_local_entity_waypoint_list_tags (sender);

  00027	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?update_local_entity_waypoint_list_tags@@YGXPAUENTITY@@@Z ; update_local_entity_waypoint_list_tags
$LN2@response_t:

; 131  : 		}
; 132  : 	}
; 133  : 
; 134  : 	return (TRUE);

  00030	b8 01 00 00 00	 mov	 eax, 1

; 135  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 10 00	 ret	 16			; 00000010H
?response_to_link_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_link_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_msgs.c
;	COMDAT ?overload_waypoint_message_responses@@YGXXZ
_TEXT	SEGMENT
?overload_waypoint_message_responses@@YGXXZ PROC	; overload_waypoint_message_responses, COMDAT

; 452  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 453  : 	#if DEBUG_MODULE >= 2
; 454  : 
; 455  : 	message_responses[ENTITY_TYPE_WAYPOINT][ENTITY_MESSAGE_LINK_CHILD]				= response_to_link_child;
; 456  : 
; 457  : 	message_responses[ENTITY_TYPE_WAYPOINT][ENTITY_MESSAGE_UNLINK_CHILD]				= response_to_unlink_child;
; 458  : 
; 459  : 	#endif
; 460  : 
; 461  : 	message_responses[ENTITY_TYPE_WAYPOINT][ENTITY_MESSAGE_LINK_PARENT] 				= response_to_link_parent;

  00009	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  0000e	6b c8 24	 imul	 ecx, eax, 36
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 24	 imul	 eax, edx, 36
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_link_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_link_parent

; 462  : 
; 463  : 	message_responses[ENTITY_TYPE_WAYPOINT][ENTITY_MESSAGE_UNLINK_PARENT]			= response_to_unlink_parent;

  00024	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00029	6b c8 24	 imul	 ecx, eax, 36
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	6b c2 38	 imul	 eax, edx, 56
  00034	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_unlink_parent@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_unlink_parent

; 464  : 
; 465  : 	message_responses[ENTITY_TYPE_WAYPOINT][ENTITY_MESSAGE_SET_ENTITY_POSITION]	= response_to_set_entity_position;

  0003f	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00044	6b c8 24	 imul	 ecx, eax, 36
  00047	ba 04 00 00 00	 mov	 edx, 4
  0004c	6b c2 30	 imul	 eax, edx, 48
  0004f	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_set_entity_position

; 466  : 
; 467  : 	message_responses[ENTITY_TYPE_WAYPOINT][ENTITY_MESSAGE_WAYPOINT_ACTION]			= response_to_waypoint_action;

  0005a	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  0005f	6b c8 24	 imul	 ecx, eax, 36
  00062	ba 04 00 00 00	 mov	 edx, 4
  00067	6b c2 3d	 imul	 eax, edx, 61
  0006a	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_waypoint_action@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_waypoint_action

; 468  : 
; 469  : 	message_responses[ENTITY_TYPE_WAYPOINT][ENTITY_MESSAGE_WAYPOINT_REACHED]		= response_to_waypoint_reached;

  00075	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  0007a	6b c8 24	 imul	 ecx, eax, 36
  0007d	ba 04 00 00 00	 mov	 edx, 4
  00082	6b c2 4f	 imul	 eax, edx, 79
  00085	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_waypoint_reached@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_waypoint_reached

; 470  : }

  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?overload_waypoint_message_responses@@YGXXZ ENDP	; overload_waypoint_message_responses
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
END
