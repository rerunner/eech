; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_anti_aircraft_pack_functions@@YGXXZ	; overload_anti_aircraft_pack_functions
PUBLIC	?pack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z ; pack_local_anti_aircraft_data
PUBLIC	?unpack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z ; unpack_local_anti_aircraft_data
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@DCEDHLEB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0O@KMADEFAE@RLE?5SAM?5?$CG?5AAA@		; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?kill_local_restored_anti_aircraft_entity@@YGXPAUENTITY@@@Z:PROC ; kill_local_restored_anti_aircraft_entity
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?first_used_entity@@3PAUENTITY@@A:DWORD		; first_used_entity
;	COMDAT ??_C@_0O@KMADEFAE@RLE?5SAM?5?$CG?5AAA@
CONST	SEGMENT
??_C@_0O@KMADEFAE@RLE?5SAM?5?$CG?5AAA@ DB 'RLE SAM & AAA', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 06dH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@DCEDHLEB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@DCEDHLEB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_a'
	DB	'ir\aa_pack.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 110  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@DCEDHLEB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 111  : 
; 112  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax

; 113  : 	{
; 114  : 		////////////////////////////////////////
; 115  : 		case PACK_MODE_SERVER_SESSION:
; 116  : 		case PACK_MODE_CLIENT_SESSION:
; 117  : 		case PACK_MODE_BROWSE_SESSION:
; 118  : 		////////////////////////////////////////
; 119  : 		{
; 120  : 
; 121  : 			break;
; 122  : 		}
; 123  : 		////////////////////////////////////////
; 124  : 		case PACK_MODE_UPDATE_ENTITY:
; 125  : 		////////////////////////////////////////
; 126  : 		{
; 127  : 
; 128  : 			break;
; 129  : 		}
; 130  : 	}
; 131  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@DCEDHLEB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		case PACK_MODE_CLIENT_SESSION:
; 88   : 		case PACK_MODE_BROWSE_SESSION:
; 89   : 		////////////////////////////////////////
; 90   : 		{
; 91   : 
; 92   : 			break;
; 93   : 		}
; 94   : 		////////////////////////////////////////
; 95   : 		case PACK_MODE_UPDATE_ENTITY:
; 96   : 		////////////////////////////////////////
; 97   : 		{
; 98   : 
; 99   : 			break;
; 100  : 		}
; 101  : 	}
; 102  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_pack.c
;	COMDAT ?unpack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv80 = -88						; size = 4
_alive$ = -20						; size = 4
_count$ = -16						; size = 4
_en$ = -12						; size = 4
_destroy_en$ = -8					; size = 4
_raw$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z PROC ; unpack_local_anti_aircraft_data, COMDAT

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 241  : 
; 242  : 	anti_aircraft
; 243  : 		*raw;
; 244  : 
; 245  : 	entity
; 246  : 		*destroy_en,
; 247  : 		*en;
; 248  : 
; 249  : 	int
; 250  : 		count,
; 251  : 		alive;
; 252  : 
; 253  : 	if ((mode != PACK_MODE_SERVER_SESSION) && (mode != PACK_MODE_CLIENT_SESSION))

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	74 0b		 je	 SHORT $LN4@unpack_loc
  0000f	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00013	74 05		 je	 SHORT $LN4@unpack_loc

; 254  : 	{
; 255  : 
; 256  : 		return;

  00015	e9 cc 00 00 00	 jmp	 $LN1@unpack_loc
$LN4@unpack_loc:

; 257  : 	}
; 258  : 
; 259  : 	//
; 260  : 	// RLE encoded
; 261  : 	//
; 262  : 
; 263  : 	debug_log ("RLE SAM & AAA");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KMADEFAE@RLE?5SAM?5?$CG?5AAA@
  0001f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00024	83 c4 04	 add	 esp, 4

; 264  : 
; 265  : 	en = get_local_entity_list ();

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  0002c	89 45 f4	 mov	 DWORD PTR _en$[ebp], eax

; 266  : 
; 267  : 	count = unpack_int_value (NULL, INT_TYPE_LENGTH);

  0002f	6a 79		 push	 121			; 00000079H
  00031	6a 00		 push	 0
  00033	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00038	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 268  : 
; 269  : 	alive = unpack_int_value (NULL, INT_TYPE_ALIVE);

  0003b	6a 07		 push	 7
  0003d	6a 00		 push	 0
  0003f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00044	89 45 ec	 mov	 DWORD PTR _alive$[ebp], eax
$LN2@unpack_loc:

; 270  : 
; 271  : 	#if DEBUG_MODULE
; 272  : 
; 273  : 	debug_log ("AA_PACK: unpacking count %d, alive %d", count, alive);
; 274  : 
; 275  : 	#endif
; 276  : 
; 277  : 	while (en)

  00047	83 7d f4 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004b	0f 84 95 00 00
	00		 je	 $LN1@unpack_loc

; 278  : 	{
; 279  : 
; 280  : 		destroy_en = en;

  00051	8b 45 f4	 mov	 eax, DWORD PTR _en$[ebp]
  00054	89 45 f8	 mov	 DWORD PTR _destroy_en$[ebp], eax

; 281  : 
; 282  : 		en = get_local_entity_succ (en);

  00057	8b 45 f4	 mov	 eax, DWORD PTR _en$[ebp]
  0005a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005d	89 4d f4	 mov	 DWORD PTR _en$[ebp], ecx

; 283  : 
; 284  : 		if (get_local_entity_type (destroy_en) == ENTITY_TYPE_ANTI_AIRCRAFT)

  00060	83 7d f8 00	 cmp	 DWORD PTR _destroy_en$[ebp], 0
  00064	74 0a		 je	 SHORT $LN9@unpack_loc
  00066	8b 45 f8	 mov	 eax, DWORD PTR _destroy_en$[ebp]
  00069	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006b	89 4d a8	 mov	 DWORD PTR tv80[ebp], ecx
  0006e	eb 1d		 jmp	 SHORT $LN10@unpack_loc
$LN9@unpack_loc:
  00070	68 1c 01 00 00	 push	 284			; 0000011cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@DCEDHLEB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00080	52		 push	 edx
  00081	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00086	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN10@unpack_loc:
  0008d	83 7d a8 01	 cmp	 DWORD PTR tv80[ebp], 1
  00091	75 4e		 jne	 SHORT $LN5@unpack_loc

; 285  : 		{
; 286  : 
; 287  : 			if (count == 0)

  00093	83 7d f0 00	 cmp	 DWORD PTR _count$[ebp], 0
  00097	75 18		 jne	 SHORT $LN6@unpack_loc

; 288  : 			{
; 289  : 
; 290  : 				count = unpack_int_value (NULL, INT_TYPE_LENGTH);

  00099	6a 79		 push	 121			; 00000079H
  0009b	6a 00		 push	 0
  0009d	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000a2	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 291  : 
; 292  : 				alive = unpack_int_value (NULL, INT_TYPE_ALIVE);

  000a5	6a 07		 push	 7
  000a7	6a 00		 push	 0
  000a9	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000ae	89 45 ec	 mov	 DWORD PTR _alive$[ebp], eax
$LN6@unpack_loc:

; 293  : 
; 294  : 				#if DEBUG_MODULE
; 295  : 
; 296  : 				debug_log ("AA_PACK: unpacking count %d, alive %d", count, alive);
; 297  : 
; 298  : 				#endif
; 299  : 			}
; 300  : 
; 301  : 			count --;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000b4	83 e8 01	 sub	 eax, 1
  000b7	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 302  : 
; 303  : 			raw = (anti_aircraft *) get_local_entity_data (destroy_en);

  000ba	8b 45 f8	 mov	 eax, DWORD PTR _destroy_en$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 304  : 
; 305  : 			raw->vh.mob.alive = TRUE;

  000c3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c6	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000c9	83 c9 01	 or	 ecx, 1
  000cc	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000cf	89 4a 7c	 mov	 DWORD PTR [edx+124], ecx

; 306  : 
; 307  : 			if (!alive)

  000d2	83 7d ec 00	 cmp	 DWORD PTR _alive$[ebp], 0
  000d6	75 09		 jne	 SHORT $LN5@unpack_loc

; 308  : 			{
; 309  : 
; 310  : 				kill_local_restored_anti_aircraft_entity (destroy_en);

  000d8	8b 45 f8	 mov	 eax, DWORD PTR _destroy_en$[ebp]
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?kill_local_restored_anti_aircraft_entity@@YGXPAUENTITY@@@Z ; kill_local_restored_anti_aircraft_entity
$LN5@unpack_loc:

; 311  : 			}
; 312  : 		}
; 313  : 	}

  000e1	e9 61 ff ff ff	 jmp	 $LN2@unpack_loc
$LN1@unpack_loc:

; 314  : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5b		 pop	 ebx
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 04 00	 ret	 4
?unpack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z ENDP ; unpack_local_anti_aircraft_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_pack.c
;	COMDAT ?pack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv73 = -92						; size = 4
_total$ = -24						; size = 4
_alive$ = -20						; size = 4
_count$ = -16						; size = 4
_pack_size$ = -12					; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z PROC ; pack_local_anti_aircraft_data, COMDAT

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 150  : 
; 151  : 	entity
; 152  : 		*en;
; 153  : 
; 154  : 	anti_aircraft
; 155  : 		*raw;
; 156  : 
; 157  : 	int
; 158  : 		pack_size,
; 159  : 		count,
; 160  : 		alive,
; 161  : 		total;
; 162  : 
; 163  : 	if ((mode != PACK_MODE_SERVER_SESSION) && (mode != PACK_MODE_CLIENT_SESSION))

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	74 0b		 je	 SHORT $LN4@pack_local
  0000f	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00013	74 05		 je	 SHORT $LN4@pack_local

; 164  : 	{
; 165  : 
; 166  : 		return;

  00015	e9 12 01 00 00	 jmp	 $LN1@pack_local
$LN4@pack_local:

; 167  : 	}
; 168  : 
; 169  : 	debug_log ("RLE SAM & AAA");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KMADEFAE@RLE?5SAM?5?$CG?5AAA@
  0001f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00024	83 c4 04	 add	 esp, 4

; 170  : 
; 171  : 	pack_size = 0;

  00027	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pack_size$[ebp], 0

; 172  : 
; 173  : 	count = 0;

  0002e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 174  : 
; 175  : 	alive = TRUE;

  00035	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _alive$[ebp], 1

; 176  : 
; 177  : 	total = 0;

  0003c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _total$[ebp], 0

; 178  : 
; 179  : 	en = get_local_entity_list ();

  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  00048	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@pack_local:

; 180  : 
; 181  : 	while (en)

  0004b	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004f	0f 84 ab 00 00
	00		 je	 $LN3@pack_local

; 182  : 	{
; 183  : 
; 184  : 		if (get_local_entity_type (en) == ENTITY_TYPE_ANTI_AIRCRAFT)

  00055	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00059	74 0a		 je	 SHORT $LN9@pack_local
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	89 4d a4	 mov	 DWORD PTR tv73[ebp], ecx
  00063	eb 1d		 jmp	 SHORT $LN10@pack_local
$LN9@pack_local:
  00065	68 b8 00 00 00	 push	 184			; 000000b8H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@DCEDHLEB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN10@pack_local:
  00082	83 7d a4 01	 cmp	 DWORD PTR tv73[ebp], 1
  00086	75 6a		 jne	 SHORT $LN5@pack_local

; 185  : 		{
; 186  : 
; 187  : 			total ++;

  00088	8b 45 e8	 mov	 eax, DWORD PTR _total$[ebp]
  0008b	83 c0 01	 add	 eax, 1
  0008e	89 45 e8	 mov	 DWORD PTR _total$[ebp], eax

; 188  : 
; 189  : 			raw = (anti_aircraft *) get_local_entity_data (en);

  00091	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00094	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00097	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 190  : 
; 191  : 			if (alive == raw->vh.mob.alive)

  0009a	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0009d	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000a0	83 e1 01	 and	 ecx, 1
  000a3	39 4d ec	 cmp	 DWORD PTR _alive$[ebp], ecx
  000a6	75 0b		 jne	 SHORT $LN6@pack_local

; 192  : 			{
; 193  : 
; 194  : 				count ++;

  000a8	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000ab	83 c0 01	 add	 eax, 1
  000ae	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 195  : 			}
; 196  : 			else

  000b1	eb 3f		 jmp	 SHORT $LN5@pack_local
$LN6@pack_local:

; 197  : 			{
; 198  : 
; 199  : 				pack_int_value (NULL, INT_TYPE_LENGTH, count);

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000b6	50		 push	 eax
  000b7	6a 79		 push	 121			; 00000079H
  000b9	6a 00		 push	 0
  000bb	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 200  : 				pack_size += NUM_LENGTH_BITS;

  000c0	8b 45 f4	 mov	 eax, DWORD PTR _pack_size$[ebp]
  000c3	83 c0 10	 add	 eax, 16			; 00000010H
  000c6	89 45 f4	 mov	 DWORD PTR _pack_size$[ebp], eax

; 201  : 
; 202  : 				pack_int_value (NULL, INT_TYPE_ALIVE, alive);

  000c9	8b 45 ec	 mov	 eax, DWORD PTR _alive$[ebp]
  000cc	50		 push	 eax
  000cd	6a 07		 push	 7
  000cf	6a 00		 push	 0
  000d1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 203  : 				pack_size += NUM_ALIVE_BITS;

  000d6	8b 45 f4	 mov	 eax, DWORD PTR _pack_size$[ebp]
  000d9	83 c0 01	 add	 eax, 1
  000dc	89 45 f4	 mov	 DWORD PTR _pack_size$[ebp], eax

; 204  : 
; 205  : 				#if DEBUG_MODULE
; 206  : 
; 207  : 				debug_log ("AA_PACK: packing count %d, alive %d", count, alive);
; 208  : 
; 209  : 				#endif
; 210  : 
; 211  : 				alive = raw->vh.mob.alive;

  000df	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000e2	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000e5	83 e1 01	 and	 ecx, 1
  000e8	89 4d ec	 mov	 DWORD PTR _alive$[ebp], ecx

; 212  : 
; 213  : 				count = 1;

  000eb	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
$LN5@pack_local:

; 214  : 			}
; 215  : 		}
; 216  : 
; 217  : 		en = get_local_entity_succ (en);

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000f5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f8	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 218  : 	}

  000fb	e9 4b ff ff ff	 jmp	 $LN2@pack_local
$LN3@pack_local:

; 219  : 
; 220  : 	pack_int_value (NULL, INT_TYPE_LENGTH, count);

  00100	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  00103	50		 push	 eax
  00104	6a 79		 push	 121			; 00000079H
  00106	6a 00		 push	 0
  00108	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 221  : 	pack_size += NUM_LENGTH_BITS;

  0010d	8b 45 f4	 mov	 eax, DWORD PTR _pack_size$[ebp]
  00110	83 c0 10	 add	 eax, 16			; 00000010H
  00113	89 45 f4	 mov	 DWORD PTR _pack_size$[ebp], eax

; 222  : 
; 223  : 	pack_int_value (NULL, INT_TYPE_ALIVE, alive);

  00116	8b 45 ec	 mov	 eax, DWORD PTR _alive$[ebp]
  00119	50		 push	 eax
  0011a	6a 07		 push	 7
  0011c	6a 00		 push	 0
  0011e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 224  : 	pack_size += NUM_ALIVE_BITS;

  00123	8b 45 f4	 mov	 eax, DWORD PTR _pack_size$[ebp]
  00126	83 c0 01	 add	 eax, 1
  00129	89 45 f4	 mov	 DWORD PTR _pack_size$[ebp], eax
$LN1@pack_local:

; 225  : 
; 226  : 	#if DEBUG_MODULE
; 227  : 
; 228  : 	debug_log ("AA_PACK: packing count %d, alive %d", count, alive);
; 229  : 
; 230  : 	#endif
; 231  : 
; 232  : 	//debug_log ("AA_PACK: packing %d anti_aircraft took %d bytes (%d bits)", total, pack_size / 8, pack_size);
; 233  : }

  0012c	5f		 pop	 edi
  0012d	5e		 pop	 esi
  0012e	5b		 pop	 ebx
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 04 00	 ret	 4
?pack_local_anti_aircraft_data@@YGXW4PACK_MODES@@@Z ENDP ; pack_local_anti_aircraft_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_pack.c
;	COMDAT ?overload_anti_aircraft_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_anti_aircraft_pack_functions@@YGXXZ PROC	; overload_anti_aircraft_pack_functions, COMDAT

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 139  : 	fn_pack_local_entity_data[ENTITY_TYPE_ANTI_AIRCRAFT]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	c1 e0 00	 shl	 eax, 0
  00011	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[eax], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 140  : 
; 141  : 	fn_unpack_local_entity_data[ENTITY_TYPE_ANTI_AIRCRAFT]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	c1 e0 00	 shl	 eax, 0
  00023	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[eax], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 142  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_anti_aircraft_pack_functions@@YGXXZ ENDP	; overload_anti_aircraft_pack_functions
_TEXT	ENDS
END
