; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\camera\camera.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?camera_mode_names@@3PAPBDA			; camera_mode_names
PUBLIC	?camera_action_names@@3PAPBDA			; camera_action_names
PUBLIC	?camera_entity@@3PAUENTITY@@A			; camera_entity
PUBLIC	?camera_previous_mouse_update_flag@@3HA		; camera_previous_mouse_update_flag
PUBLIC	??_C@_0BC@EADGLAJD@CAMERA_MODE_CHASE@		; `string'
PUBLIC	??_C@_0BL@JKHKGFFP@CAMERA_MODE_END_OF_MISSION@	; `string'
PUBLIC	??_C@_0BB@EDDKFFNH@CAMERA_MODE_DROP@		; `string'
PUBLIC	??_C@_0BD@DFBFHHHL@CAMERA_MODE_STATIC@		; `string'
PUBLIC	??_C@_0BG@JEJIAPKM@CAMERA_MODE_SATELLITE@	; `string'
PUBLIC	??_C@_0BC@CMDCBHNJ@CAMERA_MODE_EJECT@		; `string'
PUBLIC	??_C@_0BD@NEJPAKJM@CAMERA_MODE_FLY_BY@		; `string'
PUBLIC	??_C@_0BG@DGIOAOEM@CAMERA_MODE_CINEMATIC@	; `string'
PUBLIC	??_C@_0BF@PLMALEFH@CAMERA_MODE_BUILDING@	; `string'
PUBLIC	??_C@_0BD@DHJBBHPO@CAMERA_MODE_WEAPON@		; `string'
PUBLIC	??_C@_0BN@LGIFOEOB@CAMERA_MODE_WEAPON_EXPLOSION@ ; `string'
PUBLIC	??_C@_0BH@BOAPFFOI@CAMERA_MODE_DEBRIEFING@	; `string'
PUBLIC	??_C@_0CH@GJGHOEG@CAMERA_MODE_RECOGNITION_GUIDE_T@ ; `string'
PUBLIC	??_C@_0CI@FABBLONH@CAMERA_MODE_RECOGNITION_GUIDE_S@ ; `string'
PUBLIC	??_C@_0CJ@KAABMAIA@CAMERA_MODE_RECOGNITION_GUIDE_F@ ; `string'
PUBLIC	??_C@_0CG@IIDPHOJA@CAMERA_MODE_RECOGNITION_GUIDE_3@ ; `string'
PUBLIC	??_C@_0BB@DNIGFHF@CAMERA_MODE_FREE@		; `string'
PUBLIC	??_C@_0BE@BJKFLENK@CAMERA_ACTION_CHASE@		; `string'
PUBLIC	??_C@_0CD@BBDOEPJN@CAMERA_ACTION_RESET_CHASE_POSIT@ ; `string'
PUBLIC	??_C@_0CH@LKOHPBHD@CAMERA_ACTION_TOGGLE_CHASE_LOCK@ ; `string'
PUBLIC	??_C@_0BN@JJKAOLGH@CAMERA_ACTION_END_OF_MISSION@ ; `string'
PUBLIC	??_C@_0BD@GDADALKL@CAMERA_ACTION_DROP@		; `string'
PUBLIC	??_C@_0BF@DKEMBNEL@CAMERA_ACTION_STATIC@	; `string'
PUBLIC	??_C@_0BI@DNFGIAEO@CAMERA_ACTION_SATELLITE@	; `string'
PUBLIC	??_C@_0BE@HFKBBDJA@CAMERA_ACTION_EJECT@		; `string'
PUBLIC	??_C@_0BF@NLMGGAKM@CAMERA_ACTION_FLY_BY@	; `string'
PUBLIC	??_C@_0BI@JPEAIBKO@CAMERA_ACTION_CINEMATIC@	; `string'
PUBLIC	??_C@_0BH@IJOBAFLL@CAMERA_ACTION_BUILDING@	; `string'
PUBLIC	??_C@_0BF@DIMIHNMO@CAMERA_ACTION_WEAPON@	; `string'
PUBLIC	??_C@_0BP@KLBKPFOH@CAMERA_ACTION_WEAPON_EXPLOSION@ ; `string'
PUBLIC	??_C@_0BI@HGEOEEAC@CAMERA_ACTION_AUTO_EDIT@	; `string'
PUBLIC	??_C@_0BJ@FAKCBIDD@CAMERA_ACTION_DEBRIEFING@	; `string'
PUBLIC	??_C@_0CJ@EAJKADGA@CAMERA_ACTION_RECOGNITION_GUIDE@ ; `string'
PUBLIC	??_C@_0CK@ICFKDHFH@CAMERA_ACTION_RECOGNITION_GUIDE@ ; `string'
PUBLIC	??_C@_0CL@ENGLAICJ@CAMERA_ACTION_RECOGNITION_GUIDE@ ; `string'
PUBLIC	??_C@_0CI@ONPMCBDP@CAMERA_ACTION_RECOGNITION_GUIDE@ ; `string'
PUBLIC	??_C@_0BD@CDOBDLAJ@CAMERA_ACTION_FREE@		; `string'
_BSS	SEGMENT
?camera_entity@@3PAUENTITY@@A DD 01H DUP (?)		; camera_entity
_BSS	ENDS
;	COMDAT ??_C@_0BD@CDOBDLAJ@CAMERA_ACTION_FREE@
CONST	SEGMENT
??_C@_0BD@CDOBDLAJ@CAMERA_ACTION_FREE@ DB 'CAMERA_ACTION_FREE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@ONPMCBDP@CAMERA_ACTION_RECOGNITION_GUIDE@
CONST	SEGMENT
??_C@_0CI@ONPMCBDP@CAMERA_ACTION_RECOGNITION_GUIDE@ DB 'CAMERA_ACTION_REC'
	DB	'OGNITION_GUIDE_3D_VIEW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@ENGLAICJ@CAMERA_ACTION_RECOGNITION_GUIDE@
CONST	SEGMENT
??_C@_0CL@ENGLAICJ@CAMERA_ACTION_RECOGNITION_GUIDE@ DB 'CAMERA_ACTION_REC'
	DB	'OGNITION_GUIDE_FRONT_VIEW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@ICFKDHFH@CAMERA_ACTION_RECOGNITION_GUIDE@
CONST	SEGMENT
??_C@_0CK@ICFKDHFH@CAMERA_ACTION_RECOGNITION_GUIDE@ DB 'CAMERA_ACTION_REC'
	DB	'OGNITION_GUIDE_SIDE_VIEW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EAJKADGA@CAMERA_ACTION_RECOGNITION_GUIDE@
CONST	SEGMENT
??_C@_0CJ@EAJKADGA@CAMERA_ACTION_RECOGNITION_GUIDE@ DB 'CAMERA_ACTION_REC'
	DB	'OGNITION_GUIDE_TOP_VIEW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FAKCBIDD@CAMERA_ACTION_DEBRIEFING@
CONST	SEGMENT
??_C@_0BJ@FAKCBIDD@CAMERA_ACTION_DEBRIEFING@ DB 'CAMERA_ACTION_DEBRIEFING'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HGEOEEAC@CAMERA_ACTION_AUTO_EDIT@
CONST	SEGMENT
??_C@_0BI@HGEOEEAC@CAMERA_ACTION_AUTO_EDIT@ DB 'CAMERA_ACTION_AUTO_EDIT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KLBKPFOH@CAMERA_ACTION_WEAPON_EXPLOSION@
CONST	SEGMENT
??_C@_0BP@KLBKPFOH@CAMERA_ACTION_WEAPON_EXPLOSION@ DB 'CAMERA_ACTION_WEAP'
	DB	'ON_EXPLOSION', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DIMIHNMO@CAMERA_ACTION_WEAPON@
CONST	SEGMENT
??_C@_0BF@DIMIHNMO@CAMERA_ACTION_WEAPON@ DB 'CAMERA_ACTION_WEAPON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IJOBAFLL@CAMERA_ACTION_BUILDING@
CONST	SEGMENT
??_C@_0BH@IJOBAFLL@CAMERA_ACTION_BUILDING@ DB 'CAMERA_ACTION_BUILDING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JPEAIBKO@CAMERA_ACTION_CINEMATIC@
CONST	SEGMENT
??_C@_0BI@JPEAIBKO@CAMERA_ACTION_CINEMATIC@ DB 'CAMERA_ACTION_CINEMATIC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NLMGGAKM@CAMERA_ACTION_FLY_BY@
CONST	SEGMENT
??_C@_0BF@NLMGGAKM@CAMERA_ACTION_FLY_BY@ DB 'CAMERA_ACTION_FLY_BY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HFKBBDJA@CAMERA_ACTION_EJECT@
CONST	SEGMENT
??_C@_0BE@HFKBBDJA@CAMERA_ACTION_EJECT@ DB 'CAMERA_ACTION_EJECT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DNFGIAEO@CAMERA_ACTION_SATELLITE@
CONST	SEGMENT
??_C@_0BI@DNFGIAEO@CAMERA_ACTION_SATELLITE@ DB 'CAMERA_ACTION_SATELLITE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DKEMBNEL@CAMERA_ACTION_STATIC@
CONST	SEGMENT
??_C@_0BF@DKEMBNEL@CAMERA_ACTION_STATIC@ DB 'CAMERA_ACTION_STATIC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GDADALKL@CAMERA_ACTION_DROP@
CONST	SEGMENT
??_C@_0BD@GDADALKL@CAMERA_ACTION_DROP@ DB 'CAMERA_ACTION_DROP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JJKAOLGH@CAMERA_ACTION_END_OF_MISSION@
CONST	SEGMENT
??_C@_0BN@JJKAOLGH@CAMERA_ACTION_END_OF_MISSION@ DB 'CAMERA_ACTION_END_OF'
	DB	'_MISSION', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LKOHPBHD@CAMERA_ACTION_TOGGLE_CHASE_LOCK@
CONST	SEGMENT
??_C@_0CH@LKOHPBHD@CAMERA_ACTION_TOGGLE_CHASE_LOCK@ DB 'CAMERA_ACTION_TOG'
	DB	'GLE_CHASE_LOCK_ROTATE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BBDOEPJN@CAMERA_ACTION_RESET_CHASE_POSIT@
CONST	SEGMENT
??_C@_0CD@BBDOEPJN@CAMERA_ACTION_RESET_CHASE_POSIT@ DB 'CAMERA_ACTION_RES'
	DB	'ET_CHASE_POSITION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BJKFLENK@CAMERA_ACTION_CHASE@
CONST	SEGMENT
??_C@_0BE@BJKFLENK@CAMERA_ACTION_CHASE@ DB 'CAMERA_ACTION_CHASE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DNIGFHF@CAMERA_MODE_FREE@
CONST	SEGMENT
??_C@_0BB@DNIGFHF@CAMERA_MODE_FREE@ DB 'CAMERA_MODE_FREE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IIDPHOJA@CAMERA_MODE_RECOGNITION_GUIDE_3@
CONST	SEGMENT
??_C@_0CG@IIDPHOJA@CAMERA_MODE_RECOGNITION_GUIDE_3@ DB 'CAMERA_MODE_RECOG'
	DB	'NITION_GUIDE_3D_VIEW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KAABMAIA@CAMERA_MODE_RECOGNITION_GUIDE_F@
CONST	SEGMENT
??_C@_0CJ@KAABMAIA@CAMERA_MODE_RECOGNITION_GUIDE_F@ DB 'CAMERA_MODE_RECOG'
	DB	'NITION_GUIDE_FRONT_VIEW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FABBLONH@CAMERA_MODE_RECOGNITION_GUIDE_S@
CONST	SEGMENT
??_C@_0CI@FABBLONH@CAMERA_MODE_RECOGNITION_GUIDE_S@ DB 'CAMERA_MODE_RECOG'
	DB	'NITION_GUIDE_SIDE_VIEW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GJGHOEG@CAMERA_MODE_RECOGNITION_GUIDE_T@
CONST	SEGMENT
??_C@_0CH@GJGHOEG@CAMERA_MODE_RECOGNITION_GUIDE_T@ DB 'CAMERA_MODE_RECOGN'
	DB	'ITION_GUIDE_TOP_VIEW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BOAPFFOI@CAMERA_MODE_DEBRIEFING@
CONST	SEGMENT
??_C@_0BH@BOAPFFOI@CAMERA_MODE_DEBRIEFING@ DB 'CAMERA_MODE_DEBRIEFING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LGIFOEOB@CAMERA_MODE_WEAPON_EXPLOSION@
CONST	SEGMENT
??_C@_0BN@LGIFOEOB@CAMERA_MODE_WEAPON_EXPLOSION@ DB 'CAMERA_MODE_WEAPON_E'
	DB	'XPLOSION', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHJBBHPO@CAMERA_MODE_WEAPON@
CONST	SEGMENT
??_C@_0BD@DHJBBHPO@CAMERA_MODE_WEAPON@ DB 'CAMERA_MODE_WEAPON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PLMALEFH@CAMERA_MODE_BUILDING@
CONST	SEGMENT
??_C@_0BF@PLMALEFH@CAMERA_MODE_BUILDING@ DB 'CAMERA_MODE_BUILDING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DGIOAOEM@CAMERA_MODE_CINEMATIC@
CONST	SEGMENT
??_C@_0BG@DGIOAOEM@CAMERA_MODE_CINEMATIC@ DB 'CAMERA_MODE_CINEMATIC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NEJPAKJM@CAMERA_MODE_FLY_BY@
CONST	SEGMENT
??_C@_0BD@NEJPAKJM@CAMERA_MODE_FLY_BY@ DB 'CAMERA_MODE_FLY_BY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CMDCBHNJ@CAMERA_MODE_EJECT@
CONST	SEGMENT
??_C@_0BC@CMDCBHNJ@CAMERA_MODE_EJECT@ DB 'CAMERA_MODE_EJECT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JEJIAPKM@CAMERA_MODE_SATELLITE@
CONST	SEGMENT
??_C@_0BG@JEJIAPKM@CAMERA_MODE_SATELLITE@ DB 'CAMERA_MODE_SATELLITE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFBFHHHL@CAMERA_MODE_STATIC@
CONST	SEGMENT
??_C@_0BD@DFBFHHHL@CAMERA_MODE_STATIC@ DB 'CAMERA_MODE_STATIC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EDDKFFNH@CAMERA_MODE_DROP@
CONST	SEGMENT
??_C@_0BB@EDDKFFNH@CAMERA_MODE_DROP@ DB 'CAMERA_MODE_DROP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JKHKGFFP@CAMERA_MODE_END_OF_MISSION@
CONST	SEGMENT
??_C@_0BL@JKHKGFFP@CAMERA_MODE_END_OF_MISSION@ DB 'CAMERA_MODE_END_OF_MIS'
	DB	'SION', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EADGLAJD@CAMERA_MODE_CHASE@
CONST	SEGMENT
??_C@_0BC@EADGLAJD@CAMERA_MODE_CHASE@ DB 'CAMERA_MODE_CHASE', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?camera_mode_names@@3PAPBDA DD FLAT:??_C@_0BC@EADGLAJD@CAMERA_MODE_CHASE@ ; camera_mode_names
	DD	FLAT:??_C@_0BL@JKHKGFFP@CAMERA_MODE_END_OF_MISSION@
	DD	FLAT:??_C@_0BB@EDDKFFNH@CAMERA_MODE_DROP@
	DD	FLAT:??_C@_0BD@DFBFHHHL@CAMERA_MODE_STATIC@
	DD	FLAT:??_C@_0BG@JEJIAPKM@CAMERA_MODE_SATELLITE@
	DD	FLAT:??_C@_0BC@CMDCBHNJ@CAMERA_MODE_EJECT@
	DD	FLAT:??_C@_0BD@NEJPAKJM@CAMERA_MODE_FLY_BY@
	DD	FLAT:??_C@_0BG@DGIOAOEM@CAMERA_MODE_CINEMATIC@
	DD	FLAT:??_C@_0BF@PLMALEFH@CAMERA_MODE_BUILDING@
	DD	FLAT:??_C@_0BD@DHJBBHPO@CAMERA_MODE_WEAPON@
	DD	FLAT:??_C@_0BN@LGIFOEOB@CAMERA_MODE_WEAPON_EXPLOSION@
	DD	FLAT:??_C@_0BH@BOAPFFOI@CAMERA_MODE_DEBRIEFING@
	DD	FLAT:??_C@_0CH@GJGHOEG@CAMERA_MODE_RECOGNITION_GUIDE_T@
	DD	FLAT:??_C@_0CI@FABBLONH@CAMERA_MODE_RECOGNITION_GUIDE_S@
	DD	FLAT:??_C@_0CJ@KAABMAIA@CAMERA_MODE_RECOGNITION_GUIDE_F@
	DD	FLAT:??_C@_0CG@IIDPHOJA@CAMERA_MODE_RECOGNITION_GUIDE_3@
	DD	FLAT:??_C@_0BB@DNIGFHF@CAMERA_MODE_FREE@
?camera_previous_mouse_update_flag@@3HA DD 01H		; camera_previous_mouse_update_flag
?camera_action_names@@3PAPBDA DD FLAT:??_C@_0BE@BJKFLENK@CAMERA_ACTION_CHASE@ ; camera_action_names
	DD	FLAT:??_C@_0CD@BBDOEPJN@CAMERA_ACTION_RESET_CHASE_POSIT@
	DD	FLAT:??_C@_0CH@LKOHPBHD@CAMERA_ACTION_TOGGLE_CHASE_LOCK@
	DD	FLAT:??_C@_0BN@JJKAOLGH@CAMERA_ACTION_END_OF_MISSION@
	DD	FLAT:??_C@_0BD@GDADALKL@CAMERA_ACTION_DROP@
	DD	FLAT:??_C@_0BF@DKEMBNEL@CAMERA_ACTION_STATIC@
	DD	FLAT:??_C@_0BI@DNFGIAEO@CAMERA_ACTION_SATELLITE@
	DD	FLAT:??_C@_0BE@HFKBBDJA@CAMERA_ACTION_EJECT@
	DD	FLAT:??_C@_0BF@NLMGGAKM@CAMERA_ACTION_FLY_BY@
	DD	FLAT:??_C@_0BI@JPEAIBKO@CAMERA_ACTION_CINEMATIC@
	DD	FLAT:??_C@_0BH@IJOBAFLL@CAMERA_ACTION_BUILDING@
	DD	FLAT:??_C@_0BF@DIMIHNMO@CAMERA_ACTION_WEAPON@
	DD	FLAT:??_C@_0BP@KLBKPFOH@CAMERA_ACTION_WEAPON_EXPLOSION@
	DD	FLAT:??_C@_0BI@HGEOEEAC@CAMERA_ACTION_AUTO_EDIT@
	DD	FLAT:??_C@_0BJ@FAKCBIDD@CAMERA_ACTION_DEBRIEFING@
	DD	FLAT:??_C@_0CJ@EAJKADGA@CAMERA_ACTION_RECOGNITION_GUIDE@
	DD	FLAT:??_C@_0CK@ICFKDHFH@CAMERA_ACTION_RECOGNITION_GUIDE@
	DD	FLAT:??_C@_0CL@ENGLAICJ@CAMERA_ACTION_RECOGNITION_GUIDE@
	DD	FLAT:??_C@_0CI@ONPMCBDP@CAMERA_ACTION_RECOGNITION_GUIDE@
	DD	FLAT:??_C@_0BD@CDOBDLAJ@CAMERA_ACTION_FREE@
_DATA	ENDS
PUBLIC	_fabsf
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?set_camera_entity@@YGXPAUENTITY@@@Z		; set_camera_entity
PUBLIC	?get_local_entity_view_list_pred@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_view_list_pred
PUBLIC	?get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z	; get_camera_mode_name
PUBLIC	?adjust_camera_zoom@@YGXPAUCAMERA@@@Z		; adjust_camera_zoom
PUBLIC	?adjust_camera_smooth@@YGXPAUCAMERA@@PAUVEC3D@@@Z ; adjust_camera_smooth
PUBLIC	?adjust_offset@@YGXPAUCAMERA@@@Z		; adjust_offset
PUBLIC	?reset_offset@@YGXPAUCAMERA@@@Z			; reset_offset
PUBLIC	?add_turbulence@@YGXPAUCAMERA@@PAUVEC3D@@@Z	; add_turbulence
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA ; `get_local_entity_view_list_pred'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@	; `string'
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	?__LINE__Var@?0??get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z@4JA ; `get_camera_mode_name'::`1'::__LINE__Var
PUBLIC	??_C@_0N@ICALFHKC@Chase?5camera@		; `string'
PUBLIC	??_C@_0M@HAHHIMB@Drop?5camera@			; `string'
PUBLIC	??_C@_0O@HMDKFHGF@Static?5camera@		; `string'
PUBLIC	??_C@_0BB@IBHNFKIO@Satellite?5camera@		; `string'
PUBLIC	??_C@_0O@LIMGDLGI@Fly?9by?5camera@		; `string'
PUBLIC	??_C@_0BB@EBEDJMJA@Cinematic?5camera@		; `string'
PUBLIC	??_C@_0BB@NNNNDJOE@Structure?5camera@		; `string'
PUBLIC	??_C@_0O@EAIPEDLD@Weapon?5camera@		; `string'
PUBLIC	??_C@_0M@BKEJHBKJ@Free?5camera@			; `string'
PUBLIC	??_C@_0BJ@HJPODAMB@Invalid?5camera?5mode?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@41a00000
PUBLIC	__real@c010000000000000
PUBLIC	__real@c1a00000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_fabs:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?system_one_over_delta_time@@3MA:DWORD		; system_one_over_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?command_line_wobbly_camera@@3HA:DWORD		; command_line_wobbly_camera
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?move_view_left_key@@3HA:DWORD			; move_view_left_key
EXTRN	?move_view_right_key@@3HA:DWORD			; move_view_right_key
EXTRN	?move_view_forward_key@@3HA:DWORD		; move_view_forward_key
EXTRN	?move_view_backward_key@@3HA:DWORD		; move_view_backward_key
EXTRN	?adjust_view_zoom_in_key@@3HA:DWORD		; adjust_view_zoom_in_key
EXTRN	?adjust_view_zoom_out_key@@3HA:DWORD		; adjust_view_zoom_out_key
EXTRN	?mouse_wheel_up@@3HA:DWORD			; mouse_wheel_up
EXTRN	?mouse_wheel_down@@3HA:DWORD			; mouse_wheel_down
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c1a00000
CONST	SEGMENT
__real@c1a00000 DD 0c1a00000r			; -20
CONST	ENDS
;	COMDAT __real@c010000000000000
CONST	SEGMENT
__real@c010000000000000 DQ 0c010000000000000r	; -4
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HJPODAMB@Invalid?5camera?5mode?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BJ@HJPODAMB@Invalid?5camera?5mode?5?$DN?5?$CFd@ DB 'Invalid camera'
	DB	' mode = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BKEJHBKJ@Free?5camera@
CONST	SEGMENT
??_C@_0M@BKEJHBKJ@Free?5camera@ DB 'Free camera', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EAIPEDLD@Weapon?5camera@
CONST	SEGMENT
??_C@_0O@EAIPEDLD@Weapon?5camera@ DB 'Weapon camera', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NNNNDJOE@Structure?5camera@
CONST	SEGMENT
??_C@_0BB@NNNNDJOE@Structure?5camera@ DB 'Structure camera', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EBEDJMJA@Cinematic?5camera@
CONST	SEGMENT
??_C@_0BB@EBEDJMJA@Cinematic?5camera@ DB 'Cinematic camera', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LIMGDLGI@Fly?9by?5camera@
CONST	SEGMENT
??_C@_0O@LIMGDLGI@Fly?9by?5camera@ DB 'Fly-by camera', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IBHNFKIO@Satellite?5camera@
CONST	SEGMENT
??_C@_0BB@IBHNFKIO@Satellite?5camera@ DB 'Satellite camera', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HMDKFHGF@Static?5camera@
CONST	SEGMENT
??_C@_0O@HMDKFHGF@Static?5camera@ DB 'Static camera', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HAHHIMB@Drop?5camera@
CONST	SEGMENT
??_C@_0M@HAHHIMB@Drop?5camera@ DB 'Drop camera', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ICALFHKC@Chase?5camera@
CONST	SEGMENT
??_C@_0N@ICALFHKC@Chase?5camera@ DB 'Chase camera', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z@4JA DD 0d4H ; `get_camera_mode_name'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@ DB 'get_camera_entity ()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\camera\camera'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA DD 0b3H ; `get_local_entity_view_list_pred'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?add_turbulence@@YGXPAUCAMERA@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv436 = -164						; size = 4
tv535 = -160						; size = 8
tv429 = -152						; size = 4
tv533 = -148						; size = 4
tv422 = -144						; size = 4
tv153 = -140						; size = 8
tv414 = -132						; size = 4
tv531 = -128						; size = 8
tv407 = -120						; size = 4
tv529 = -116						; size = 4
tv400 = -112						; size = 4
tv154 = -108						; size = 8
tv391 = -100						; size = 4
tv527 = -96						; size = 8
tv384 = -88						; size = 4
tv525 = -84						; size = 4
tv377 = -80						; size = 4
_acceleration$ = -12					; size = 4
_zoom_factor$ = -8					; size = 4
_velocity_factor$ = -4					; size = 4
_cam$ = 8						; size = 4
_position$ = 12						; size = 4
?add_turbulence@@YGXPAUCAMERA@@PAUVEC3D@@@Z PROC	; add_turbulence, COMDAT

; 429  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 430  : 	float
; 431  : 		velocity_factor,
; 432  : 		zoom_factor = 0.1,

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00014	f3 0f 11 45 f8	 movss	 DWORD PTR _zoom_factor$[ebp], xmm0

; 433  : 		acceleration;
; 434  : 
; 435  : 	if (!command_line_wobbly_camera)

  00019	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_wobbly_camera@@3HA, 0 ; command_line_wobbly_camera
  00020	75 05		 jne	 SHORT $LN2@add_turbul

; 436  : 		return;

  00022	e9 86 06 00 00	 jmp	 $LN1@add_turbul
$LN2@add_turbul:

; 437  : 
; 438  : 	velocity_factor = bound(fabs(cam->motion_vector.x) + fabs(cam->motion_vector.y) + fabs(cam->motion_vector.z) * 1/200.0, 0.0, 1.0);

  00027	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  0002a	51		 push	 ecx
  0002b	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0003a	d9 5d b0	 fstp	 DWORD PTR tv377[ebp]
  0003d	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv377[ebp]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  00045	51		 push	 ecx
  00046	f3 0f 10 49 10	 movss	 xmm1, DWORD PTR [ecx+16]
  0004b	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00050	f3 0f 11 45 ac	 movss	 DWORD PTR tv525[ebp], xmm0
  00055	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0005a	d9 5d a8	 fstp	 DWORD PTR tv384[ebp]
  0005d	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv525[ebp]
  00062	f3 0f 58 45 a8	 addss	 xmm0, DWORD PTR tv384[ebp]
  00067	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0006b	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  0006e	51		 push	 ecx
  0006f	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  00074	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00079	f2 0f 11 45 a0	 movsd	 QWORD PTR tv527[ebp], xmm0
  0007e	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00083	d9 5d 9c	 fstp	 DWORD PTR tv391[ebp]
  00086	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv391[ebp]
  0008b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f800000
  00093	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00097	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4069000000000000
  0009f	f2 0f 10 4d a0	 movsd	 xmm1, QWORD PTR tv527[ebp]
  000a4	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000a8	0f 57 c0	 xorps	 xmm0, xmm0
  000ab	66 0f 2f c1	 comisd	 xmm0, xmm1
  000af	76 0d		 jbe	 SHORT $LN19@add_turbul
  000b1	0f 57 c0	 xorps	 xmm0, xmm0
  000b4	f2 0f 11 45 94	 movsd	 QWORD PTR tv154[ebp], xmm0
  000b9	e9 5a 01 00 00	 jmp	 $LN20@add_turbul
$LN19@add_turbul:
  000be	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  000c1	51		 push	 ecx
  000c2	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  000c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cc	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000d1	d9 5d 90	 fstp	 DWORD PTR tv400[ebp]
  000d4	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv400[ebp]
  000d9	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  000dc	51		 push	 ecx
  000dd	f3 0f 10 49 10	 movss	 xmm1, DWORD PTR [ecx+16]
  000e2	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000e7	f3 0f 11 45 8c	 movss	 DWORD PTR tv529[ebp], xmm0
  000ec	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000f1	d9 5d 88	 fstp	 DWORD PTR tv407[ebp]
  000f4	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv529[ebp]
  000f9	f3 0f 58 45 88	 addss	 xmm0, DWORD PTR tv407[ebp]
  000fe	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00102	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  00105	51		 push	 ecx
  00106	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  0010b	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00110	f2 0f 11 45 80	 movsd	 QWORD PTR tv531[ebp], xmm0
  00115	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0011a	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv414[ebp]
  00120	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv414[ebp]
  00128	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f800000
  00130	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00134	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4069000000000000
  0013c	f2 0f 10 4d 80	 movsd	 xmm1, QWORD PTR tv531[ebp]
  00141	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00145	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@3ff0000000000000
  0014d	76 15		 jbe	 SHORT $LN17@add_turbul
  0014f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00157	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv153[ebp], xmm0
  0015f	e9 a7 00 00 00	 jmp	 $LN18@add_turbul
$LN17@add_turbul:
  00164	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00167	51		 push	 ecx
  00168	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00177	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv422[ebp]
  0017d	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv422[ebp]
  00185	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  00188	51		 push	 ecx
  00189	f3 0f 10 49 10	 movss	 xmm1, DWORD PTR [ecx+16]
  0018e	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00193	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR tv533[ebp], xmm0
  0019b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  001a0	d9 9d 68 ff ff
	ff		 fstp	 DWORD PTR tv429[ebp]
  001a6	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv533[ebp]
  001ae	f3 0f 58 85 68
	ff ff ff	 addss	 xmm0, DWORD PTR tv429[ebp]
  001b6	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001ba	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  001bd	51		 push	 ecx
  001be	f3 0f 10 4a 14	 movss	 xmm1, DWORD PTR [edx+20]
  001c3	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001c8	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv535[ebp], xmm0
  001d0	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  001d5	d9 9d 5c ff ff
	ff		 fstp	 DWORD PTR tv436[ebp]
  001db	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR tv436[ebp]
  001e3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f800000
  001eb	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001ef	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4069000000000000
  001f7	f2 0f 10 8d 60
	ff ff ff	 movsd	 xmm1, QWORD PTR tv535[ebp]
  001ff	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00203	f2 0f 11 8d 74
	ff ff ff	 movsd	 QWORD PTR tv153[ebp], xmm1
$LN18@add_turbul:
  0020b	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv153[ebp]
  00213	f2 0f 11 45 94	 movsd	 QWORD PTR tv154[ebp], xmm0
$LN20@add_turbul:
  00218	f2 0f 5a 45 94	 cvtsd2ss xmm0, QWORD PTR tv154[ebp]
  0021d	f3 0f 11 45 fc	 movss	 DWORD PTR _velocity_factor$[ebp], xmm0

; 439  : 	if (cam->chase_camera_zoom)

  00222	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00225	f3 0f 10 80 88
	00 00 00	 movss	 xmm0, DWORD PTR [eax+136]
  0022d	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00234	9f		 lahf
  00235	f6 c4 44	 test	 ah, 68			; 00000044H
  00238	7b 1c		 jnp	 SHORT $LN3@add_turbul

; 440  : 		zoom_factor = cam->chase_camera_zoom + 0.25;

  0023a	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  0023d	f3 0f 5a 80 88
	00 00 00	 cvtss2sd xmm0, DWORD PTR [eax+136]
  00245	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  0024d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00251	f3 0f 11 45 f8	 movss	 DWORD PTR _zoom_factor$[ebp], xmm0
$LN3@add_turbul:

; 441  : 
; 442  : 	// add random turbulence
; 443  : 	if (velocity_factor > 0.1 && (rand() % (int)(get_one_over_delta_time())) == 0)

  00256	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _velocity_factor$[ebp]
  0025b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  00263	76 7a		 jbe	 SHORT $LN4@add_turbul
  00265	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  0026b	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?system_one_over_delta_time@@3MA
  00273	99		 cdq
  00274	f7 f9		 idiv	 ecx
  00276	85 d2		 test	 edx, edx
  00278	75 65		 jne	 SHORT $LN4@add_turbul

; 444  : 		cam->turbulence_movement.x += sfrand1() * velocity_factor * zoom_factor;

  0027a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00284	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00289	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0028e	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _zoom_factor$[ebp]
  00293	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _velocity_factor$[ebp]
  00298	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0029e	c1 f9 10	 sar	 ecx, 16			; 00000010H
  002a1	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  002a7	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  002ad	f2 0f 2a d1	 cvtsi2sd xmm2, ecx
  002b1	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3f10000000000000
  002b9	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  002bd	f2 0f 59 d0	 mulsd	 xmm2, xmm0
  002c1	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  002c4	f3 0f 5a 82 58
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+344]
  002cc	f2 0f 58 c2	 addsd	 xmm0, xmm2
  002d0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002d4	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  002d7	f3 0f 11 80 58
	01 00 00	 movss	 DWORD PTR [eax+344], xmm0
$LN4@add_turbul:

; 445  : 	if (velocity_factor > 0.1 && (rand() % (int)(get_one_over_delta_time())) == 0)

  002df	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _velocity_factor$[ebp]
  002e4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  002ec	76 7a		 jbe	 SHORT $LN5@add_turbul
  002ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  002f4	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?system_one_over_delta_time@@3MA
  002fc	99		 cdq
  002fd	f7 f9		 idiv	 ecx
  002ff	85 d2		 test	 edx, edx
  00301	75 65		 jne	 SHORT $LN5@add_turbul

; 446  : 		cam->turbulence_movement.y += sfrand1() * velocity_factor * zoom_factor;

  00303	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0030d	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00312	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00317	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _zoom_factor$[ebp]
  0031c	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _velocity_factor$[ebp]
  00321	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00327	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0032a	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00330	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00336	f2 0f 2a d1	 cvtsi2sd xmm2, ecx
  0033a	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3f10000000000000
  00342	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00346	f2 0f 59 d0	 mulsd	 xmm2, xmm0
  0034a	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  0034d	f3 0f 5a 82 5c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+348]
  00355	f2 0f 58 c2	 addsd	 xmm0, xmm2
  00359	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0035d	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00360	f3 0f 11 80 5c
	01 00 00	 movss	 DWORD PTR [eax+348], xmm0
$LN5@add_turbul:

; 447  : 	if (velocity_factor > 0.1 && (rand() % (int)(get_one_over_delta_time())) == 0)

  00368	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _velocity_factor$[ebp]
  0036d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  00375	76 7a		 jbe	 SHORT $LN6@add_turbul
  00377	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  0037d	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?system_one_over_delta_time@@3MA
  00385	99		 cdq
  00386	f7 f9		 idiv	 ecx
  00388	85 d2		 test	 edx, edx
  0038a	75 65		 jne	 SHORT $LN6@add_turbul

; 448  : 		cam->turbulence_movement.z += sfrand1() * velocity_factor * zoom_factor;

  0038c	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00396	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0039b	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  003a0	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _zoom_factor$[ebp]
  003a5	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _velocity_factor$[ebp]
  003aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  003b0	c1 f9 10	 sar	 ecx, 16			; 00000010H
  003b3	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  003b9	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  003bf	f2 0f 2a d1	 cvtsi2sd xmm2, ecx
  003c3	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3f10000000000000
  003cb	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  003cf	f2 0f 59 d0	 mulsd	 xmm2, xmm0
  003d3	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  003d6	f3 0f 5a 82 60
	01 00 00	 cvtss2sd xmm0, DWORD PTR [edx+352]
  003de	f2 0f 58 c2	 addsd	 xmm0, xmm2
  003e2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003e6	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  003e9	f3 0f 11 80 60
	01 00 00	 movss	 DWORD PTR [eax+352], xmm0
$LN6@add_turbul:

; 449  : 
; 450  : 	// bungy effect of camera trying to get itself back in position
; 451  : 	acceleration = -cam->turbulence_offset.x * 0.5 ;

  003f1	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  003f4	f3 0f 10 80 4c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+332]
  003fc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00403	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00407	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0040f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00413	f3 0f 11 45 f4	 movss	 DWORD PTR _acceleration$[ebp], xmm0

; 452  : 	if (same_sign(acceleration, cam->turbulence_movement.x))

  00418	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  0041d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00425	72 15		 jb	 SHORT $LN9@add_turbul
  00427	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  0042a	f3 0f 5a 80 58
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+344]
  00432	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0043a	73 22		 jae	 SHORT $LN8@add_turbul
$LN9@add_turbul:
  0043c	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  00441	0f 57 c9	 xorps	 xmm1, xmm1
  00444	66 0f 2f c8	 comisd	 xmm1, xmm0
  00448	76 2a		 jbe	 SHORT $LN7@add_turbul
  0044a	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  0044d	f3 0f 5a 80 58
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+344]
  00455	0f 57 c9	 xorps	 xmm1, xmm1
  00458	66 0f 2f c8	 comisd	 xmm1, xmm0
  0045c	76 16		 jbe	 SHORT $LN7@add_turbul
$LN8@add_turbul:

; 453  : 		acceleration *= 0.5;

  0045e	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  00463	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0046b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0046f	f3 0f 11 45 f4	 movss	 DWORD PTR _acceleration$[ebp], xmm0
$LN7@add_turbul:

; 454  : 	cam->turbulence_movement.x += acceleration * get_delta_time();

  00474	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _acceleration$[ebp]
  00479	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00481	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00484	f3 0f 58 80 58
	01 00 00	 addss	 xmm0, DWORD PTR [eax+344]
  0048c	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  0048f	f3 0f 11 81 58
	01 00 00	 movss	 DWORD PTR [ecx+344], xmm0

; 455  : 	cam->turbulence_offset.x += cam->turbulence_movement.x * get_delta_time();

  00497	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  0049a	f3 0f 10 80 58
	01 00 00	 movss	 xmm0, DWORD PTR [eax+344]
  004a2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  004aa	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  004ad	f3 0f 58 81 4c
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+332]
  004b5	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  004b8	f3 0f 11 82 4c
	01 00 00	 movss	 DWORD PTR [edx+332], xmm0

; 456  : 
; 457  : 	acceleration = -cam->turbulence_offset.y * 0.5 ;

  004c0	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  004c3	f3 0f 10 80 50
	01 00 00	 movss	 xmm0, DWORD PTR [eax+336]
  004cb	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  004d2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  004d6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  004de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004e2	f3 0f 11 45 f4	 movss	 DWORD PTR _acceleration$[ebp], xmm0

; 458  : 	if (same_sign(acceleration, cam->turbulence_movement.y))

  004e7	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  004ec	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  004f4	72 15		 jb	 SHORT $LN12@add_turbul
  004f6	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  004f9	f3 0f 5a 80 5c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+348]
  00501	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00509	73 22		 jae	 SHORT $LN11@add_turbul
$LN12@add_turbul:
  0050b	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  00510	0f 57 c9	 xorps	 xmm1, xmm1
  00513	66 0f 2f c8	 comisd	 xmm1, xmm0
  00517	76 2a		 jbe	 SHORT $LN10@add_turbul
  00519	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  0051c	f3 0f 5a 80 5c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+348]
  00524	0f 57 c9	 xorps	 xmm1, xmm1
  00527	66 0f 2f c8	 comisd	 xmm1, xmm0
  0052b	76 16		 jbe	 SHORT $LN10@add_turbul
$LN11@add_turbul:

; 459  : 		acceleration *= 0.5;

  0052d	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  00532	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0053a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0053e	f3 0f 11 45 f4	 movss	 DWORD PTR _acceleration$[ebp], xmm0
$LN10@add_turbul:

; 460  : 	cam->turbulence_movement.y += acceleration * get_delta_time();

  00543	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _acceleration$[ebp]
  00548	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00550	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00553	f3 0f 58 80 5c
	01 00 00	 addss	 xmm0, DWORD PTR [eax+348]
  0055b	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  0055e	f3 0f 11 81 5c
	01 00 00	 movss	 DWORD PTR [ecx+348], xmm0

; 461  : 	cam->turbulence_offset.y += cam->turbulence_movement.y * get_delta_time();

  00566	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00569	f3 0f 10 80 5c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+348]
  00571	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00579	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  0057c	f3 0f 58 81 50
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+336]
  00584	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  00587	f3 0f 11 82 50
	01 00 00	 movss	 DWORD PTR [edx+336], xmm0

; 462  : 
; 463  : 	acceleration = -cam->turbulence_offset.z * 0.5 ;

  0058f	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00592	f3 0f 10 80 54
	01 00 00	 movss	 xmm0, DWORD PTR [eax+340]
  0059a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  005a1	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  005a5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  005ad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b1	f3 0f 11 45 f4	 movss	 DWORD PTR _acceleration$[ebp], xmm0

; 464  : 	if (same_sign(acceleration, cam->turbulence_movement.z))

  005b6	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  005bb	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  005c3	72 15		 jb	 SHORT $LN15@add_turbul
  005c5	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  005c8	f3 0f 5a 80 60
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+352]
  005d0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  005d8	73 22		 jae	 SHORT $LN14@add_turbul
$LN15@add_turbul:
  005da	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  005df	0f 57 c9	 xorps	 xmm1, xmm1
  005e2	66 0f 2f c8	 comisd	 xmm1, xmm0
  005e6	76 2a		 jbe	 SHORT $LN13@add_turbul
  005e8	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  005eb	f3 0f 5a 80 60
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+352]
  005f3	0f 57 c9	 xorps	 xmm1, xmm1
  005f6	66 0f 2f c8	 comisd	 xmm1, xmm0
  005fa	76 16		 jbe	 SHORT $LN13@add_turbul
$LN14@add_turbul:

; 465  : 		acceleration *= 0.5;

  005fc	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _acceleration$[ebp]
  00601	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00609	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0060d	f3 0f 11 45 f4	 movss	 DWORD PTR _acceleration$[ebp], xmm0
$LN13@add_turbul:

; 466  : 	cam->turbulence_movement.z += acceleration * get_delta_time();

  00612	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _acceleration$[ebp]
  00617	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0061f	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00622	f3 0f 58 80 60
	01 00 00	 addss	 xmm0, DWORD PTR [eax+352]
  0062a	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  0062d	f3 0f 11 81 60
	01 00 00	 movss	 DWORD PTR [ecx+352], xmm0

; 467  : 	cam->turbulence_offset.z += cam->turbulence_movement.z * get_delta_time();

  00635	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00638	f3 0f 10 80 60
	01 00 00	 movss	 xmm0, DWORD PTR [eax+352]
  00640	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00648	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  0064b	f3 0f 58 81 54
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+340]
  00653	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  00656	f3 0f 11 82 54
	01 00 00	 movss	 DWORD PTR [edx+340], xmm0

; 468  : 
; 469  : 	// move due to turbulence
; 470  : 	cam->position.x += cam->turbulence_offset.x;

  0065e	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00661	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  00664	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00668	f3 0f 58 81 4c
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+332]
  00670	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  00673	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 471  : 	cam->position.y += cam->turbulence_offset.y;

  00677	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  0067a	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  0067d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00682	f3 0f 58 81 50
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+336]
  0068a	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  0068d	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 472  : 	cam->position.z += cam->turbulence_offset.z;

  00692	8b 45 08	 mov	 eax, DWORD PTR _cam$[ebp]
  00695	8b 4d 08	 mov	 ecx, DWORD PTR _cam$[ebp]
  00698	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0069d	f3 0f 58 81 54
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+340]
  006a5	8b 55 08	 mov	 edx, DWORD PTR _cam$[ebp]
  006a8	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
$LN1@add_turbul:

; 473  : }

  006ad	5f		 pop	 edi
  006ae	5e		 pop	 esi
  006af	5b		 pop	 ebx
  006b0	8b e5		 mov	 esp, ebp
  006b2	5d		 pop	 ebp
  006b3	c2 08 00	 ret	 8
?add_turbulence@@YGXPAUCAMERA@@PAUVEC3D@@@Z ENDP	; add_turbulence
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?reset_offset@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
_raw$ = 8						; size = 4
?reset_offset@@YGXPAUCAMERA@@@Z PROC			; reset_offset, COMDAT

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 381  : 	raw->offset.x = 0.0;

  00009	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 80 34
	01 00 00	 movss	 DWORD PTR [eax+308], xmm0

; 382  : 	raw->offset.y = 0.0;

  00017	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0001a	0f 57 c0	 xorps	 xmm0, xmm0
  0001d	f3 0f 11 80 38
	01 00 00	 movss	 DWORD PTR [eax+312], xmm0

; 383  : 	raw->offset.z = 0.0;

  00025	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00028	0f 57 c0	 xorps	 xmm0, xmm0
  0002b	f3 0f 11 80 3c
	01 00 00	 movss	 DWORD PTR [eax+316], xmm0

; 384  : 
; 385  : #if 0
; 386  : 	raw->post_adjust_position.x = MID_MAP_X;
; 387  : 	raw->post_adjust_position.y = MID_MAP_Y;
; 388  : 	raw->post_adjust_position.z = MID_MAP_Z;
; 389  : #endif
; 390  : 	raw->turbulence_offset.x = 0.0;

  00033	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00036	0f 57 c0	 xorps	 xmm0, xmm0
  00039	f3 0f 11 80 4c
	01 00 00	 movss	 DWORD PTR [eax+332], xmm0

; 391  : 	raw->turbulence_offset.y = 0.0;

  00041	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00044	0f 57 c0	 xorps	 xmm0, xmm0
  00047	f3 0f 11 80 50
	01 00 00	 movss	 DWORD PTR [eax+336], xmm0

; 392  : 	raw->turbulence_offset.z = 0.0;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 80 54
	01 00 00	 movss	 DWORD PTR [eax+340], xmm0

; 393  : 
; 394  : 	raw->turbulence_movement.x = 0.0;

  0005d	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00060	0f 57 c0	 xorps	 xmm0, xmm0
  00063	f3 0f 11 80 58
	01 00 00	 movss	 DWORD PTR [eax+344], xmm0

; 395  : 	raw->turbulence_movement.y = 0.0;

  0006b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0006e	0f 57 c0	 xorps	 xmm0, xmm0
  00071	f3 0f 11 80 5c
	01 00 00	 movss	 DWORD PTR [eax+348], xmm0

; 396  : 	raw->turbulence_movement.z = 0.0;

  00079	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0007c	0f 57 c0	 xorps	 xmm0, xmm0
  0007f	f3 0f 11 80 60
	01 00 00	 movss	 DWORD PTR [eax+352], xmm0

; 397  : }

  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5b		 pop	 ebx
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
?reset_offset@@YGXPAUCAMERA@@@Z ENDP			; reset_offset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?adjust_offset@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv201 = -76						; size = 4
tv177 = -76						; size = 4
tv202 = -72						; size = 4
tv178 = -72						; size = 4
_acceleration$ = -4					; size = 4
_raw$ = 8						; size = 4
?adjust_offset@@YGXPAUCAMERA@@@Z PROC			; adjust_offset, COMDAT

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 335  : 	float acceleration = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _acceleration$[ebp], xmm0

; 336  : 
; 337  : 	if (command_line_wobbly_camera)

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_wobbly_camera@@3HA, 0 ; command_line_wobbly_camera
  00018	0f 84 03 01 00
	00		 je	 $LN2@adjust_off

; 338  : 	{
; 339  : 		if (move_view_forward_key)

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_forward_key@@3HA, 0 ; move_view_forward_key
  00025	74 17		 je	 SHORT $LN4@adjust_off

; 340  : 			acceleration = OFFSET_MOVEMENT_RATE * move_view_forward_key;

  00027	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_forward_key@@3HA ; move_view_forward_key
  0002f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41a00000
  00037	f3 0f 11 45 fc	 movss	 DWORD PTR _acceleration$[ebp], xmm0
  0003c	eb 3c		 jmp	 SHORT $LN7@adjust_off
$LN4@adjust_off:

; 341  : 		else if (move_view_backward_key)

  0003e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_backward_key@@3HA, 0 ; move_view_backward_key
  00045	74 17		 je	 SHORT $LN6@adjust_off

; 342  : 			acceleration = -OFFSET_MOVEMENT_RATE * move_view_backward_key;

  00047	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_backward_key@@3HA ; move_view_backward_key
  0004f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c1a00000
  00057	f3 0f 11 45 fc	 movss	 DWORD PTR _acceleration$[ebp], xmm0

; 343  : 		else

  0005c	eb 1c		 jmp	 SHORT $LN7@adjust_off
$LN6@adjust_off:

; 344  : 			acceleration = -4.0 * raw->offset_movement.y;

  0005e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00061	f3 0f 5a 80 44
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+324]
  00069	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c010000000000000
  00071	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00075	f3 0f 11 45 fc	 movss	 DWORD PTR _acceleration$[ebp], xmm0
$LN7@adjust_off:

; 345  : 	
; 346  : 		raw->offset_movement.y += acceleration * get_delta_time();

  0007a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _acceleration$[ebp]
  0007f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00087	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0008a	f3 0f 58 80 44
	01 00 00	 addss	 xmm0, DWORD PTR [eax+324]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00095	f3 0f 11 81 44
	01 00 00	 movss	 DWORD PTR [ecx+324], xmm0

; 347  : 
; 348  : 		if (move_view_right_key)

  0009d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_right_key@@3HA, 0 ; move_view_right_key
  000a4	74 17		 je	 SHORT $LN8@adjust_off

; 349  : 			acceleration = OFFSET_MOVEMENT_RATE * move_view_right_key;

  000a6	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_right_key@@3HA ; move_view_right_key
  000ae	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41a00000
  000b6	f3 0f 11 45 fc	 movss	 DWORD PTR _acceleration$[ebp], xmm0
  000bb	eb 3c		 jmp	 SHORT $LN11@adjust_off
$LN8@adjust_off:

; 350  : 		else if (move_view_left_key)

  000bd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_left_key@@3HA, 0 ; move_view_left_key
  000c4	74 17		 je	 SHORT $LN10@adjust_off

; 351  : 			acceleration = -OFFSET_MOVEMENT_RATE * move_view_left_key;

  000c6	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_left_key@@3HA ; move_view_left_key
  000ce	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c1a00000
  000d6	f3 0f 11 45 fc	 movss	 DWORD PTR _acceleration$[ebp], xmm0

; 352  : 		else

  000db	eb 1c		 jmp	 SHORT $LN11@adjust_off
$LN10@adjust_off:

; 353  : 			acceleration = -4.0 * raw->offset_movement.x;

  000dd	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000e0	f3 0f 5a 80 40
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+320]
  000e8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c010000000000000
  000f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f4	f3 0f 11 45 fc	 movss	 DWORD PTR _acceleration$[ebp], xmm0
$LN11@adjust_off:

; 354  : 	
; 355  : 		raw->offset_movement.x += acceleration * get_delta_time();

  000f9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _acceleration$[ebp]
  000fe	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00106	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00109	f3 0f 58 80 40
	01 00 00	 addss	 xmm0, DWORD PTR [eax+320]
  00111	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00114	f3 0f 11 81 40
	01 00 00	 movss	 DWORD PTR [ecx+320], xmm0

; 356  : 	}
; 357  : 	else

  0011c	e9 b4 00 00 00	 jmp	 $LN19@adjust_off
$LN2@adjust_off:

; 358  : 	{
; 359  : 		if (move_view_forward_key)

  00121	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_forward_key@@3HA, 0 ; move_view_forward_key
  00128	74 1d		 je	 SHORT $LN12@adjust_off

; 360  : 			raw->offset_movement.y = OFFSET_MOVEMENT_RATE * move_view_forward_key;

  0012a	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_forward_key@@3HA ; move_view_forward_key
  00132	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41a00000
  0013a	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0013d	f3 0f 11 80 44
	01 00 00	 movss	 DWORD PTR [eax+324], xmm0
  00145	eb 34		 jmp	 SHORT $LN15@adjust_off
$LN12@adjust_off:

; 361  : 		else if (move_view_backward_key)

  00147	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_backward_key@@3HA, 0 ; move_view_backward_key
  0014e	74 1d		 je	 SHORT $LN14@adjust_off

; 362  : 			raw->offset_movement.y = -OFFSET_MOVEMENT_RATE * move_view_backward_key;

  00150	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_backward_key@@3HA ; move_view_backward_key
  00158	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c1a00000
  00160	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00163	f3 0f 11 80 44
	01 00 00	 movss	 DWORD PTR [eax+324], xmm0

; 363  : 		else

  0016b	eb 0e		 jmp	 SHORT $LN15@adjust_off
$LN14@adjust_off:

; 364  : 			raw->offset_movement.y = 0.0;

  0016d	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00170	0f 57 c0	 xorps	 xmm0, xmm0
  00173	f3 0f 11 80 44
	01 00 00	 movss	 DWORD PTR [eax+324], xmm0
$LN15@adjust_off:

; 365  : 
; 366  : 		if (move_view_right_key)

  0017b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_right_key@@3HA, 0 ; move_view_right_key
  00182	74 1d		 je	 SHORT $LN16@adjust_off

; 367  : 			raw->offset_movement.x = OFFSET_MOVEMENT_RATE * move_view_right_key;

  00184	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_right_key@@3HA ; move_view_right_key
  0018c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41a00000
  00194	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00197	f3 0f 11 80 40
	01 00 00	 movss	 DWORD PTR [eax+320], xmm0
  0019f	eb 34		 jmp	 SHORT $LN19@adjust_off
$LN16@adjust_off:

; 368  : 		else if (move_view_left_key)

  001a1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?move_view_left_key@@3HA, 0 ; move_view_left_key
  001a8	74 1d		 je	 SHORT $LN18@adjust_off

; 369  : 			raw->offset_movement.x = -OFFSET_MOVEMENT_RATE * move_view_left_key;

  001aa	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?move_view_left_key@@3HA ; move_view_left_key
  001b2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c1a00000
  001ba	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  001bd	f3 0f 11 80 40
	01 00 00	 movss	 DWORD PTR [eax+320], xmm0

; 370  : 		else

  001c5	eb 0e		 jmp	 SHORT $LN19@adjust_off
$LN18@adjust_off:

; 371  : 			raw->offset_movement.x = 0.0;

  001c7	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  001ca	0f 57 c0	 xorps	 xmm0, xmm0
  001cd	f3 0f 11 80 40
	01 00 00	 movss	 DWORD PTR [eax+320], xmm0
$LN19@adjust_off:

; 372  : 	}
; 373  : 
; 374  : 
; 375  : 	raw->offset.x = bound(raw->offset.x + raw->offset_movement.x * get_delta_time(), -MAX_OFFSET, MAX_OFFSET);

  001d5	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  001d8	f3 0f 10 80 40
	01 00 00	 movss	 xmm0, DWORD PTR [eax+320]
  001e0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  001e8	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  001eb	f3 0f 58 81 34
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+308]
  001f3	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@c1a00000
  001fb	0f 2f c8	 comiss	 xmm1, xmm0
  001fe	76 0f		 jbe	 SHORT $LN23@adjust_off
  00200	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1a00000
  00208	f3 0f 11 45 b8	 movss	 DWORD PTR tv178[ebp], xmm0
  0020d	eb 63		 jmp	 SHORT $LN24@adjust_off
$LN23@adjust_off:
  0020f	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00212	f3 0f 10 82 40
	01 00 00	 movss	 xmm0, DWORD PTR [edx+320]
  0021a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00222	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00225	f3 0f 58 80 34
	01 00 00	 addss	 xmm0, DWORD PTR [eax+308]
  0022d	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@41a00000
  00234	76 0f		 jbe	 SHORT $LN21@adjust_off
  00236	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  0023e	f3 0f 11 45 b4	 movss	 DWORD PTR tv177[ebp], xmm0
  00243	eb 23		 jmp	 SHORT $LN22@adjust_off
$LN21@adjust_off:
  00245	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00248	f3 0f 10 81 40
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+320]
  00250	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00258	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0025b	f3 0f 58 82 34
	01 00 00	 addss	 xmm0, DWORD PTR [edx+308]
  00263	f3 0f 11 45 b4	 movss	 DWORD PTR tv177[ebp], xmm0
$LN22@adjust_off:
  00268	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv177[ebp]
  0026d	f3 0f 11 45 b8	 movss	 DWORD PTR tv178[ebp], xmm0
$LN24@adjust_off:
  00272	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00275	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv178[ebp]
  0027a	f3 0f 11 80 34
	01 00 00	 movss	 DWORD PTR [eax+308], xmm0

; 376  : 	raw->offset.y = bound(raw->offset.y + raw->offset_movement.y * get_delta_time(), -MAX_OFFSET, MAX_OFFSET);

  00282	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00285	f3 0f 10 80 44
	01 00 00	 movss	 xmm0, DWORD PTR [eax+324]
  0028d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00295	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00298	f3 0f 58 81 38
	01 00 00	 addss	 xmm0, DWORD PTR [ecx+312]
  002a0	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@c1a00000
  002a8	0f 2f c8	 comiss	 xmm1, xmm0
  002ab	76 0f		 jbe	 SHORT $LN27@adjust_off
  002ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1a00000
  002b5	f3 0f 11 45 b8	 movss	 DWORD PTR tv202[ebp], xmm0
  002ba	eb 63		 jmp	 SHORT $LN28@adjust_off
$LN27@adjust_off:
  002bc	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  002bf	f3 0f 10 82 44
	01 00 00	 movss	 xmm0, DWORD PTR [edx+324]
  002c7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  002cf	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002d2	f3 0f 58 80 38
	01 00 00	 addss	 xmm0, DWORD PTR [eax+312]
  002da	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@41a00000
  002e1	76 0f		 jbe	 SHORT $LN25@adjust_off
  002e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  002eb	f3 0f 11 45 b4	 movss	 DWORD PTR tv201[ebp], xmm0
  002f0	eb 23		 jmp	 SHORT $LN26@adjust_off
$LN25@adjust_off:
  002f2	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  002f5	f3 0f 10 81 44
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+324]
  002fd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00305	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00308	f3 0f 58 82 38
	01 00 00	 addss	 xmm0, DWORD PTR [edx+312]
  00310	f3 0f 11 45 b4	 movss	 DWORD PTR tv201[ebp], xmm0
$LN26@adjust_off:
  00315	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv201[ebp]
  0031a	f3 0f 11 45 b8	 movss	 DWORD PTR tv202[ebp], xmm0
$LN28@adjust_off:
  0031f	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00322	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv202[ebp]
  00327	f3 0f 11 80 38
	01 00 00	 movss	 DWORD PTR [eax+312], xmm0

; 377  : }

  0032f	5f		 pop	 edi
  00330	5e		 pop	 esi
  00331	5b		 pop	 ebx
  00332	8b e5		 mov	 esp, ebp
  00334	5d		 pop	 ebp
  00335	c2 04 00	 ret	 4
?adjust_offset@@YGXPAUCAMERA@@@Z ENDP			; adjust_offset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?adjust_camera_smooth@@YGXPAUCAMERA@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv156 = -72						; size = 4
$T1 = -68						; size = 4
_raw$ = 8						; size = 4
_new_position$ = 12					; size = 4
?adjust_camera_smooth@@YGXPAUCAMERA@@PAUVEC3D@@@Z PROC	; adjust_camera_smooth, COMDAT

; 400  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 401  : #if 0
; 402  : 	if (command_line_wobbly_camera)
; 403  : 	{
; 404  : 		vec3d adjust;
; 405  : 
; 406  : 		adjust.x = new_position->x - raw->post_adjust_position.x;
; 407  : 		adjust.y = new_position->y - raw->post_adjust_position.y;
; 408  : 		adjust.z = new_position->z - raw->post_adjust_position.z;
; 409  : 	
; 410  : 		adjust.x *= CAMERA_MOVEMENT_RATE * get_delta_time();
; 411  : 		adjust.y *= CAMERA_MOVEMENT_RATE * get_delta_time();
; 412  : 		adjust.z *= CAMERA_MOVEMENT_RATE * get_delta_time();
; 413  : 
; 414  : 		raw->position.x += adjust.x;
; 415  : 		raw->position.y += adjust.y;
; 416  : 		raw->position.z += adjust.z;
; 417  : 		raw->post_adjust_position = raw->position;
; 418  : 	}
; 419  : 	else
; 420  : #endif
; 421  : 		raw->position = *new_position;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _new_position$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	89 11		 mov	 DWORD PTR [ecx], edx
  00013	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 422  : 
; 423  : 	// keep point above ground (unless point off map)
; 424  : 	if (point_inside_map_area (&raw->position))

  0001f	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00022	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00026	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0002d	0f 82 86 00 00
	00		 jb	 $LN2@adjust_cam
  00033	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00036	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0003e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00041	72 76		 jb	 SHORT $LN2@adjust_cam
  00043	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00046	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0004b	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00052	72 65		 jb	 SHORT $LN2@adjust_cam
  00054	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00057	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0005f	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00063	72 54		 jb	 SHORT $LN2@adjust_cam

; 425  : 		raw->position.y = max (raw->position.y, get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info) + CAMERA_MIN_HEIGHT_ABOVE_GROUND);

  00065	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00068	83 c0 50	 add	 eax, 80			; 00000050H
  0006b	50		 push	 eax
  0006c	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0006f	51		 push	 ecx
  00070	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00075	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007a	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0007d	51		 push	 ecx
  0007e	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0008c	d9 5d b8	 fstp	 DWORD PTR tv156[ebp]
  0008f	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv156[ebp]
  00094	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f8ccccd
  0009c	f3 0f 11 45 bc	 movss	 DWORD PTR $T1[ebp], xmm0
  000a1	8d 45 bc	 lea	 eax, DWORD PTR $T1[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  000a8	83 c1 04	 add	 ecx, 4
  000ab	51		 push	 ecx
  000ac	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000b1	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN2@adjust_cam:

; 426  : }

  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	5b		 pop	 ebx
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c2 08 00	 ret	 8
?adjust_camera_smooth@@YGXPAUCAMERA@@PAUVEC3D@@@Z ENDP	; adjust_camera_smooth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?adjust_camera_zoom@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 4
$T4 = -68						; size = 4
_raw$ = 8						; size = 4
?adjust_camera_zoom@@YGXPAUCAMERA@@@Z PROC		; adjust_camera_zoom, COMDAT

; 476  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 477  : 	if (adjust_view_zoom_in_key)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?adjust_view_zoom_in_key@@3HA, 0 ; adjust_view_zoom_in_key
  00010	74 51		 je	 SHORT $LN2@adjust_cam

; 478  : 	{
; 479  : 		raw->chase_camera_zoom -= CHASE_CAMERA_ZOOM_RATE * get_delta_time ();

  00012	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0001a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00022	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00025	f3 0f 10 88 88
	00 00 00	 movss	 xmm1, DWORD PTR [eax+136]
  0002d	f3 0f 5c c8	 subss	 xmm1, xmm0
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00034	f3 0f 11 89 88
	00 00 00	 movss	 DWORD PTR [ecx+136], xmm1

; 480  : 
; 481  : 		raw->chase_camera_zoom = max (CHASE_CAMERA_ZOOM_IN_LIMIT, raw->chase_camera_zoom);

  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	f3 0f 11 45 bc	 movss	 DWORD PTR $T4[ebp], xmm0
  00044	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00047	05 88 00 00 00	 add	 eax, 136		; 00000088H
  0004c	50		 push	 eax
  0004d	8d 4d bc	 lea	 ecx, DWORD PTR $T4[ebp]
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00056	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	89 82 88 00 00
	00		 mov	 DWORD PTR [edx+136], eax
  00061	eb 59		 jmp	 SHORT $LN4@adjust_cam
$LN2@adjust_cam:

; 482  : 	}
; 483  : 	else if (adjust_view_zoom_out_key)

  00063	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?adjust_view_zoom_out_key@@3HA, 0 ; adjust_view_zoom_out_key
  0006a	74 50		 je	 SHORT $LN4@adjust_cam

; 484  : 	{
; 485  : 		raw->chase_camera_zoom += CHASE_CAMERA_ZOOM_RATE * get_delta_time ();

  0006c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00074	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0007c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0007f	f3 0f 58 80 88
	00 00 00	 addss	 xmm0, DWORD PTR [eax+136]
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0008a	f3 0f 11 81 88
	00 00 00	 movss	 DWORD PTR [ecx+136], xmm0

; 486  : 
; 487  : 		raw->chase_camera_zoom = min (CHASE_CAMERA_ZOOM_OUT_LIMIT, raw->chase_camera_zoom);

  00092	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0009a	f3 0f 11 45 b8	 movss	 DWORD PTR $T3[ebp], xmm0
  0009f	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000a2	05 88 00 00 00	 add	 eax, 136		; 00000088H
  000a7	50		 push	 eax
  000a8	8d 4d b8	 lea	 ecx, DWORD PTR $T3[ebp]
  000ab	51		 push	 ecx
  000ac	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  000b1	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 82 88 00 00
	00		 mov	 DWORD PTR [edx+136], eax
$LN4@adjust_cam:

; 488  : 	}
; 489  : 
; 490  : 	// Jabberwock 050103 - Mouse wheel zoom for external view
; 491  : 	if (mouse_wheel_up)

  000bc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_up@@3HA, 0 ; mouse_wheel_up
  000c3	74 5e		 je	 SHORT $LN5@adjust_cam

; 492  : 	{
; 493  : 		raw->chase_camera_zoom -= 2 * get_delta_time ();

  000c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  000cd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000d5	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000d8	f3 0f 10 88 88
	00 00 00	 movss	 xmm1, DWORD PTR [eax+136]
  000e0	f3 0f 5c c8	 subss	 xmm1, xmm0
  000e4	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  000e7	f3 0f 11 89 88
	00 00 00	 movss	 DWORD PTR [ecx+136], xmm1

; 494  : 
; 495  : 		raw->chase_camera_zoom = max (CHASE_CAMERA_ZOOM_IN_LIMIT, raw->chase_camera_zoom);

  000ef	0f 57 c0	 xorps	 xmm0, xmm0
  000f2	f3 0f 11 45 b4	 movss	 DWORD PTR $T2[ebp], xmm0
  000f7	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000fa	05 88 00 00 00	 add	 eax, 136		; 00000088H
  000ff	50		 push	 eax
  00100	8d 4d b4	 lea	 ecx, DWORD PTR $T2[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00109	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0010c	8b 00		 mov	 eax, DWORD PTR [eax]
  0010e	89 82 88 00 00
	00		 mov	 DWORD PTR [edx+136], eax

; 496  : 
; 497  : 		mouse_wheel_up--;

  00114	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_up@@3HA ; mouse_wheel_up
  00119	83 e8 01	 sub	 eax, 1
  0011c	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_up@@3HA, eax ; mouse_wheel_up
  00121	eb 66		 jmp	 SHORT $LN7@adjust_cam
$LN5@adjust_cam:

; 498  : 	}
; 499  : 	else if (mouse_wheel_down)

  00123	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mouse_wheel_down@@3HA, 0 ; mouse_wheel_down
  0012a	74 5d		 je	 SHORT $LN7@adjust_cam

; 500  : 	{
; 501  : 		raw->chase_camera_zoom += 2 * get_delta_time ();

  0012c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00134	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0013c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0013f	f3 0f 58 80 88
	00 00 00	 addss	 xmm0, DWORD PTR [eax+136]
  00147	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  0014a	f3 0f 11 81 88
	00 00 00	 movss	 DWORD PTR [ecx+136], xmm0

; 502  : 
; 503  : 		raw->chase_camera_zoom = min (CHASE_CAMERA_ZOOM_OUT_LIMIT, raw->chase_camera_zoom);

  00152	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0015a	f3 0f 11 45 b0	 movss	 DWORD PTR $T1[ebp], xmm0
  0015f	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00162	05 88 00 00 00	 add	 eax, 136		; 00000088H
  00167	50		 push	 eax
  00168	8d 4d b0	 lea	 ecx, DWORD PTR $T1[ebp]
  0016b	51		 push	 ecx
  0016c	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00171	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	89 82 88 00 00
	00		 mov	 DWORD PTR [edx+136], eax

; 504  : 
; 505  : 		mouse_wheel_down--;

  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouse_wheel_down@@3HA ; mouse_wheel_down
  00181	83 e8 01	 sub	 eax, 1
  00184	a3 00 00 00 00	 mov	 DWORD PTR ?mouse_wheel_down@@3HA, eax ; mouse_wheel_down
$LN7@adjust_cam:

; 506  : 	}
; 507  : 	// Jabberwock 050103 ends	
; 508  : }

  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi
  0018b	5b		 pop	 ebx
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c2 04 00	 ret	 4
?adjust_camera_zoom@@YGXPAUCAMERA@@@Z ENDP		; adjust_camera_zoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z
_TEXT	SEGMENT
tv70 = -76						; size = 4
_s$ = -8						; size = 4
_raw$ = -4						; size = 4
_mode$ = 8						; size = 4
?get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z PROC	; get_camera_mode_name, COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 213  : 	camera
; 214  : 		*raw;
; 215  : 
; 216  : 	char
; 217  : 		*s;
; 218  : 
; 219  : 	ASSERT (get_camera_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00010	75 18		 jne	 SHORT $LN4@get_camera
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z@4JA
  00017	83 c0 07	 add	 eax, 7
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_camera:

; 220  : 
; 221  : 	raw = (camera *) get_local_entity_data (get_camera_entity ());

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0002f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00032	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 222  : 
; 223  : 	switch (mode)

  00035	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00038	89 45 b4	 mov	 DWORD PTR tv70[ebp], eax
  0003b	83 7d b4 10	 cmp	 DWORD PTR tv70[ebp], 16	; 00000010H
  0003f	77 64		 ja	 SHORT $LN15@get_camera
  00041	8b 4d b4	 mov	 ecx, DWORD PTR tv70[ebp]
  00044	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN17@get_camera[ecx*4]
$LN5@get_camera:

; 224  : 	{
; 225  : 		////////////////////////////////////////
; 226  : 		case CAMERA_MODE_CHASE:
; 227  : 		////////////////////////////////////////
; 228  : 		{
; 229  : 			s = "Chase camera";

  0004b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0N@ICALFHKC@Chase?5camera@

; 230  : 
; 231  : 			break;

  00052	eb 62		 jmp	 SHORT $LN2@get_camera
$LN6@get_camera:

; 232  : 		}
; 233  : 		////////////////////////////////////////
; 234  : 		case CAMERA_MODE_DROP:
; 235  : 		////////////////////////////////////////
; 236  : 		{
; 237  : 			s = "Drop camera";

  00054	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0M@HAHHIMB@Drop?5camera@

; 238  : 
; 239  : 			break;

  0005b	eb 59		 jmp	 SHORT $LN2@get_camera
$LN7@get_camera:

; 240  : 		}
; 241  : 		////////////////////////////////////////
; 242  : 		case CAMERA_MODE_STATIC:
; 243  : 		////////////////////////////////////////
; 244  : 		{
; 245  : 			s = "Static camera";

  0005d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0O@HMDKFHGF@Static?5camera@

; 246  : 
; 247  : 			break;

  00064	eb 50		 jmp	 SHORT $LN2@get_camera
$LN8@get_camera:

; 248  : 		}
; 249  : 
; 250  : 		// Jabberwock 031009 Satellite view
; 251  : 		////////////////////////////////////////
; 252  : 		case CAMERA_MODE_SATELLITE:
; 253  : 		////////////////////////////////////////
; 254  : 		{
; 255  : 			s = "Satellite camera";

  00066	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0BB@IBHNFKIO@Satellite?5camera@

; 256  : 
; 257  : 			break;

  0006d	eb 47		 jmp	 SHORT $LN2@get_camera
$LN9@get_camera:

; 258  : 		}
; 259  : 		// Jabberwock 031009 ends
; 260  : 		
; 261  : 		////////////////////////////////////////
; 262  : 		case CAMERA_MODE_FLY_BY:
; 263  : 		////////////////////////////////////////
; 264  : 		{
; 265  : 			s = "Fly-by camera";

  0006f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0O@LIMGDLGI@Fly?9by?5camera@

; 266  : 
; 267  : 			break;

  00076	eb 3e		 jmp	 SHORT $LN2@get_camera
$LN10@get_camera:

; 268  : 		}
; 269  : 		////////////////////////////////////////
; 270  : 		case CAMERA_MODE_CINEMATIC:
; 271  : 		////////////////////////////////////////
; 272  : 		{
; 273  : 			s = "Cinematic camera";

  00078	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0BB@EBEDJMJA@Cinematic?5camera@

; 274  : 
; 275  : 			break;

  0007f	eb 35		 jmp	 SHORT $LN2@get_camera
$LN11@get_camera:

; 276  : 		}
; 277  : 		////////////////////////////////////////
; 278  : 		case CAMERA_MODE_BUILDING:
; 279  : 		////////////////////////////////////////
; 280  : 		{
; 281  : 			s = "Structure camera";

  00081	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0BB@NNNNDJOE@Structure?5camera@

; 282  : 
; 283  : 			break;

  00088	eb 2c		 jmp	 SHORT $LN2@get_camera
$LN12@get_camera:

; 284  : 		}
; 285  : 		////////////////////////////////////////
; 286  : 		case CAMERA_MODE_WEAPON:
; 287  : 		////////////////////////////////////////
; 288  : 		{
; 289  : 			s = "Weapon camera";

  0008a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0O@EAIPEDLD@Weapon?5camera@

; 290  : 
; 291  : 			break;

  00091	eb 23		 jmp	 SHORT $LN2@get_camera
$LN13@get_camera:

; 292  : 		}
; 293  : 		////////////////////////////////////////
; 294  : 		case CAMERA_MODE_FREE:
; 295  : 		////////////////////////////////////////
; 296  : 		{
; 297  : 			s = "Free camera";

  00093	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0M@BKEJHBKJ@Free?5camera@

; 298  : 
; 299  : 			break;

  0009a	eb 1a		 jmp	 SHORT $LN2@get_camera
$LN14@get_camera:

; 300  : 		}
; 301  : 		////////////////////////////////////////
; 302  : 		case CAMERA_MODE_END_OF_MISSION:
; 303  : 		case CAMERA_MODE_EJECT:
; 304  : 		case CAMERA_MODE_WEAPON_EXPLOSION:
; 305  : 		case CAMERA_MODE_DEBRIEFING:
; 306  : 		case CAMERA_MODE_RECOGNITION_GUIDE_TOP_VIEW:
; 307  : 		case CAMERA_MODE_RECOGNITION_GUIDE_SIDE_VIEW:
; 308  : 		case CAMERA_MODE_RECOGNITION_GUIDE_FRONT_VIEW:
; 309  : 		case CAMERA_MODE_RECOGNITION_GUIDE_3D_VIEW:
; 310  : 		////////////////////////////////////////
; 311  : 		{
; 312  : 			s = NULL;

  0009c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], 0

; 313  : 
; 314  : 			break;

  000a3	eb 11		 jmp	 SHORT $LN2@get_camera
$LN15@get_camera:

; 315  : 		}
; 316  : 		////////////////////////////////////////
; 317  : 		default:
; 318  : 		////////////////////////////////////////
; 319  : 		{
; 320  : 			debug_fatal ("Invalid camera mode = %d", mode);

  000a5	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  000a8	50		 push	 eax
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HJPODAMB@Invalid?5camera?5mode?5?$DN?5?$CFd@
  000ae	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000b3	83 c4 08	 add	 esp, 8
$LN2@get_camera:

; 321  : 
; 322  : 			break;
; 323  : 		}
; 324  : 	}
; 325  : 
; 326  : 	return (s);

  000b6	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]

; 327  : }

  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	5b		 pop	 ebx
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c2 04 00	 ret	 4
  000c2	66 90		 npad	 2
$LN17@get_camera:
  000c4	00 00 00 00	 DD	 $LN5@get_camera
  000c8	00 00 00 00	 DD	 $LN14@get_camera
  000cc	00 00 00 00	 DD	 $LN6@get_camera
  000d0	00 00 00 00	 DD	 $LN7@get_camera
  000d4	00 00 00 00	 DD	 $LN8@get_camera
  000d8	00 00 00 00	 DD	 $LN14@get_camera
  000dc	00 00 00 00	 DD	 $LN9@get_camera
  000e0	00 00 00 00	 DD	 $LN10@get_camera
  000e4	00 00 00 00	 DD	 $LN11@get_camera
  000e8	00 00 00 00	 DD	 $LN12@get_camera
  000ec	00 00 00 00	 DD	 $LN14@get_camera
  000f0	00 00 00 00	 DD	 $LN14@get_camera
  000f4	00 00 00 00	 DD	 $LN14@get_camera
  000f8	00 00 00 00	 DD	 $LN14@get_camera
  000fc	00 00 00 00	 DD	 $LN14@get_camera
  00100	00 00 00 00	 DD	 $LN14@get_camera
  00104	00 00 00 00	 DD	 $LN13@get_camera
?get_camera_mode_name@@YGPBDW4CAMERA_MODES@@@Z ENDP	; get_camera_mode_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?get_local_entity_view_list_pred@@YGPAUENTITY@@PAU1@@Z
_TEXT	SEGMENT
tv185 = -80						; size = 4
tv164 = -80						; size = 4
tv145 = -80						; size = 4
tv88 = -80						; size = 4
tv177 = -76						; size = 4
tv157 = -76						; size = 4
tv137 = -76						; size = 4
tv80 = -76						; size = 4
_parent$ = -8						; size = 4
_pred$ = -4						; size = 4
_en$ = 8						; size = 4
?get_local_entity_view_list_pred@@YGPAUENTITY@@PAU1@@Z PROC ; get_local_entity_view_list_pred, COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 180  : 	entity
; 181  : 		*pred,
; 182  : 		*parent;
; 183  : 
; 184  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_local_:

; 185  : 
; 186  : 	ASSERT (get_camera_entity ());

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  0002e	75 18		 jne	 SHORT $LN5@get_local_
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  00035	83 c0 07	 add	 eax, 7
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 187  : 
; 188  : 	parent = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00048	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN9@get_local_
  0004e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d b4	 mov	 DWORD PTR tv80[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN10@get_local_
$LN9@get_local_:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  0005e	83 c2 09	 add	 edx, 9
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN10@get_local_:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN11@get_local_
  00082	c7 45 b0 19 00
	00 00		 mov	 DWORD PTR tv88[ebp], 25	; 00000019H
  00089	eb 21		 jmp	 SHORT $LN12@get_local_
$LN11@get_local_:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  00091	83 c2 09	 add	 edx, 9
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@get_local_:
  000ac	6a 19		 push	 25			; 00000019H
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b1	51		 push	 ecx
  000b2	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 180
  000b9	8b 45 b0	 mov	 eax, DWORD PTR tv88[ebp]
  000bc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c3	ff d1		 call	 ecx
  000c5	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 189  : 
; 190  : 	ASSERT (parent);

  000c8	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000cc	75 18		 jne	 SHORT $LN6@get_local_
  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  000d3	83 c0 0b	 add	 eax, 11			; 0000000bH
  000d6	50		 push	 eax
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  000e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_local_:

; 191  : 
; 192  : 	pred = get_local_entity_first_child (get_camera_entity (), LIST_TYPE_VIEW);

  000e6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  000ed	74 0c		 je	 SHORT $LN13@get_local_
  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  000f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f6	89 4d b4	 mov	 DWORD PTR tv137[ebp], ecx
  000f9	eb 21		 jmp	 SHORT $LN14@get_local_
$LN13@get_local_:
  000fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  00101	83 c2 0d	 add	 edx, 13			; 0000000dH
  00104	52		 push	 edx
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010f	50		 push	 eax
  00110	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00115	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN14@get_local_:
  0011c	b9 01 00 00 00	 mov	 ecx, 1
  00121	85 c9		 test	 ecx, ecx
  00123	74 09		 je	 SHORT $LN15@get_local_
  00125	c7 45 b0 2a 00
	00 00		 mov	 DWORD PTR tv145[ebp], 42 ; 0000002aH
  0012c	eb 21		 jmp	 SHORT $LN16@get_local_
$LN15@get_local_:
  0012e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  00134	83 c2 0d	 add	 edx, 13			; 0000000dH
  00137	52		 push	 edx
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00148	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN16@get_local_:
  0014f	6a 2a		 push	 42			; 0000002aH
  00151	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00157	51		 push	 ecx
  00158	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 180
  0015f	8b 45 b0	 mov	 eax, DWORD PTR tv145[ebp]
  00162	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00169	ff d1		 call	 ecx
  0016b	89 45 fc	 mov	 DWORD PTR _pred$[ebp], eax
$LN2@get_local_:

; 193  : 
; 194  : 	while (pred)

  0016e	83 7d fc 00	 cmp	 DWORD PTR _pred$[ebp], 0
  00172	0f 84 04 01 00
	00		 je	 $LN3@get_local_

; 195  : 	{
; 196  : 		if (parent == get_local_entity_parent (pred, LIST_TYPE_MEMBER))

  00178	83 7d fc 00	 cmp	 DWORD PTR _pred$[ebp], 0
  0017c	74 0a		 je	 SHORT $LN17@get_local_
  0017e	8b 45 fc	 mov	 eax, DWORD PTR _pred$[ebp]
  00181	8b 08		 mov	 ecx, DWORD PTR [eax]
  00183	89 4d b4	 mov	 DWORD PTR tv157[ebp], ecx
  00186	eb 1d		 jmp	 SHORT $LN18@get_local_
$LN17@get_local_:
  00188	68 c4 00 00 00	 push	 196			; 000000c4H
  0018d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00192	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00198	52		 push	 edx
  00199	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN18@get_local_:
  001a5	b8 01 00 00 00	 mov	 eax, 1
  001aa	85 c0		 test	 eax, eax
  001ac	74 09		 je	 SHORT $LN19@get_local_
  001ae	c7 45 b0 19 00
	00 00		 mov	 DWORD PTR tv164[ebp], 25 ; 00000019H
  001b5	eb 1d		 jmp	 SHORT $LN20@get_local_
$LN19@get_local_:
  001b7	68 c4 00 00 00	 push	 196			; 000000c4H
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001c7	51		 push	 ecx
  001c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cd	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN20@get_local_:
  001d4	6a 19		 push	 25			; 00000019H
  001d6	8b 55 fc	 mov	 edx, DWORD PTR _pred$[ebp]
  001d9	52		 push	 edx
  001da	69 45 b4 b4 00
	00 00		 imul	 eax, DWORD PTR tv157[ebp], 180
  001e1	8b 4d b0	 mov	 ecx, DWORD PTR tv164[ebp]
  001e4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  001eb	ff d2		 call	 edx
  001ed	39 45 f8	 cmp	 DWORD PTR _parent$[ebp], eax
  001f0	75 05		 jne	 SHORT $LN7@get_local_

; 197  : 		{
; 198  : 			break;

  001f2	e9 85 00 00 00	 jmp	 $LN3@get_local_
$LN7@get_local_:

; 199  : 		}
; 200  : 
; 201  : 		pred = get_local_entity_child_succ (pred, LIST_TYPE_VIEW);

  001f7	83 7d fc 00	 cmp	 DWORD PTR _pred$[ebp], 0
  001fb	74 0a		 je	 SHORT $LN21@get_local_
  001fd	8b 45 fc	 mov	 eax, DWORD PTR _pred$[ebp]
  00200	8b 08		 mov	 ecx, DWORD PTR [eax]
  00202	89 4d b4	 mov	 DWORD PTR tv177[ebp], ecx
  00205	eb 21		 jmp	 SHORT $LN22@get_local_
$LN21@get_local_:
  00207	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  0020d	83 c2 16	 add	 edx, 22			; 00000016H
  00210	52		 push	 edx
  00211	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00216	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0021b	50		 push	 eax
  0021c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00221	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN22@get_local_:
  00228	b9 01 00 00 00	 mov	 ecx, 1
  0022d	85 c9		 test	 ecx, ecx
  0022f	74 09		 je	 SHORT $LN23@get_local_
  00231	c7 45 b0 2a 00
	00 00		 mov	 DWORD PTR tv185[ebp], 42 ; 0000002aH
  00238	eb 21		 jmp	 SHORT $LN24@get_local_
$LN23@get_local_:
  0023a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_view_list_pred@@YGPAUENTITY@@PAU2@@Z@4JA
  00240	83 c2 16	 add	 edx, 22			; 00000016H
  00243	52		 push	 edx
  00244	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DIEFCEJJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00249	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00254	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN24@get_local_:
  0025b	6a 2a		 push	 42			; 0000002aH
  0025d	8b 4d fc	 mov	 ecx, DWORD PTR _pred$[ebp]
  00260	51		 push	 ecx
  00261	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv177[ebp], 180
  00268	8b 45 b0	 mov	 eax, DWORD PTR tv185[ebp]
  0026b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00272	ff d1		 call	 ecx
  00274	89 45 fc	 mov	 DWORD PTR _pred$[ebp], eax

; 202  : 	}

  00277	e9 f2 fe ff ff	 jmp	 $LN2@get_local_
$LN3@get_local_:

; 203  : 
; 204  : 	return (pred);

  0027c	8b 45 fc	 mov	 eax, DWORD PTR _pred$[ebp]

; 205  : }

  0027f	5f		 pop	 edi
  00280	5e		 pop	 esi
  00281	5b		 pop	 ebx
  00282	8b e5		 mov	 esp, ebp
  00284	5d		 pop	 ebp
  00285	c2 04 00	 ret	 4
?get_local_entity_view_list_pred@@YGPAUENTITY@@PAU1@@Z ENDP ; get_local_entity_view_list_pred
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\camera.c
;	COMDAT ?set_camera_entity@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
?set_camera_entity@@YGXPAUENTITY@@@Z PROC		; set_camera_entity, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 160  : 	camera_entity = en;

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, eax ; camera_entity

; 161  : 
; 162  : /*
; 163  : 	if (en)
; 164  : 	{
; 165  : 		debug_log ("Setting camera_entity (type = %s, index = %d)", get_local_entity_type_name (en), get_local_entity_index (en));
; 166  : 	}
; 167  : 	else
; 168  : 	{
; 169  : 		debug_log ("Setting camera_entity to NULL");
; 170  : 	}
; 171  : */
; 172  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_camera_entity@@YGXPAUENTITY@@@Z ENDP		; set_camera_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
END
