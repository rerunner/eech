; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\particle\pa_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_particle_pack_functions@@YGXXZ	; overload_particle_pack_functions
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@FJMOAANM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z:PROC ; construct_3d_object
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; pack_vec3d
EXTRN	?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; unpack_vec3d
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?pack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z:PROC ; pack_effect_data
EXTRN	?unpack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z:PROC ; unpack_effect_data
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 09cH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@FJMOAANM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@FJMOAANM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\effect\partic'
	DB	'le\pa_pack.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -80						; size = 4
_raw$1 = -12						; size = 4
_index$2 = -8						; size = 4
_loop$3 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 157  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN8@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN7@unpack_loc
$LN8@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@FJMOAANM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@unpack_loc:

; 158  : 
; 159  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c c4 01 00
	00		 jl	 $LN2@unpack_loc
  0003d	83 7d b0 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN9@unpack_loc
  00043	e9 b9 01 00 00	 jmp	 $LN2@unpack_loc
$LN9@unpack_loc:

; 160  : 	{
; 161  : 		////////////////////////////////////////
; 162  : 		case PACK_MODE_SERVER_SESSION:
; 163  : 		case PACK_MODE_CLIENT_SESSION:
; 164  : 		////////////////////////////////////////
; 165  : 		{
; 166  : 			int
; 167  : 				loop,
; 168  : 				index;
; 169  : 
; 170  : 			particle
; 171  : 				*raw;
; 172  : 
; 173  : 			//
; 174  : 			// create entity
; 175  : 			//
; 176  : 
; 177  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 f8	 mov	 DWORD PTR _index$2[ebp], eax

; 178  : 
; 179  : 			en = get_free_entity (index);

  00050	8b 45 f8	 mov	 eax, DWORD PTR _index$2[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 180  : 
; 181  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 182  : 
; 183  : 			raw = (particle *) malloc_heap_mem (sizeof (particle));

  00064	6a 54		 push	 84			; 00000054H
  00066	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0006b	89 45 f4	 mov	 DWORD PTR _raw$1[ebp], eax

; 184  : 
; 185  : 			set_local_entity_data (en, raw);

  0006e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00074	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 186  : 
; 187  : 			memset (raw, 0, sizeof (particle));

  00077	6a 54		 push	 84			; 00000054H
  00079	6a 00		 push	 0
  0007b	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 _memset
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 188  : 
; 189  : 			//
; 190  : 			// unpack effect data (in exactly the same order as the data was packed)
; 191  : 			//
; 192  : 
; 193  : 			unpack_effect_data( en, &raw->eff, mode );

  00087	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0008e	51		 push	 ecx
  0008f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00092	52		 push	 edx
  00093	e8 00 00 00 00	 call	 ?unpack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z ; unpack_effect_data

; 194  : 
; 195  : 			//
; 196  : 			// unpack particle data
; 197  : 			//
; 198  : 
; 199  : 			raw->initial_speed = unpack_float_value (en, FLOAT_TYPE_INITIAL_SPEED);

  00098	6a 36		 push	 54			; 00000036H
  0009a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000a3	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000a6	d9 59 28	 fstp	 DWORD PTR [ecx+40]

; 200  : 
; 201  : 			raw->particle_count = unpack_int_value (en, INT_TYPE_PARTICLE_COUNT);

  000a9	68 98 00 00 00	 push	 152			; 00000098H
  000ae	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000b7	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000ba	88 41 2c	 mov	 BYTE PTR [ecx+44], al

; 202  : 
; 203  : 			raw->valid = (unsigned char *) malloc_fast_mem (sizeof (unsigned char) * raw->particle_count);

  000bd	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  000c0	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  000c4	51		 push	 ecx
  000c5	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  000ca	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  000cd	89 42 30	 mov	 DWORD PTR [edx+48], eax

; 204  : 
; 205  : 			raw->object_3d_shape = unpack_int_value (en, INT_TYPE_OBJECT_3D_SHAPE);

  000d0	68 92 00 00 00	 push	 146			; 00000092H
  000d5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000de	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000e1	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 206  : 
; 207  : 			raw->inst3d = (object_3d_instance **) malloc_fast_mem (sizeof (object_3d_instance *) * raw->particle_count);

  000e4	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  000e7	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  000eb	c1 e1 02	 shl	 ecx, 2
  000ee	51		 push	 ecx
  000ef	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  000f4	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  000f7	89 42 38	 mov	 DWORD PTR [edx+56], eax

; 208  : 
; 209  : 			raw->motion_vector = (vec3d *) malloc_fast_mem (sizeof (vec3d) * raw->particle_count);

  000fa	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  000fd	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00101	6b d1 0c	 imul	 edx, ecx, 12
  00104	52		 push	 edx
  00105	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0010a	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0010d	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 210  : 
; 211  : 			raw->position = (vec3d *) malloc_fast_mem (sizeof (vec3d) * raw->particle_count);

  00110	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  00113	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00117	6b d1 0c	 imul	 edx, ecx, 12
  0011a	52		 push	 edx
  0011b	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00120	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00123	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 212  : 
; 213  : 			for ( loop = 0 ; loop < raw->particle_count ; loop ++ )

  00126	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$3[ebp], 0
  0012d	eb 09		 jmp	 SHORT $LN6@unpack_loc
$LN4@unpack_loc:
  0012f	8b 45 fc	 mov	 eax, DWORD PTR _loop$3[ebp]
  00132	83 c0 01	 add	 eax, 1
  00135	89 45 fc	 mov	 DWORD PTR _loop$3[ebp], eax
$LN6@unpack_loc:
  00138	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  0013b	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  0013f	39 4d fc	 cmp	 DWORD PTR _loop$3[ebp], ecx
  00142	7d 7e		 jge	 SHORT $LN5@unpack_loc

; 214  : 			{
; 215  : 
; 216  : 				if (raw->object_3d_shape != OBJECT_3D_INVALID_OBJECT_INDEX)

  00144	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  00147	83 78 34 00	 cmp	 DWORD PTR [eax+52], 0
  0014b	74 1a		 je	 SHORT $LN10@unpack_loc

; 217  : 				{
; 218  : 					raw->inst3d[ loop ] = construct_3d_object (raw->object_3d_shape);

  0014d	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  00150	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00153	51		 push	 ecx
  00154	e8 00 00 00 00	 call	 ?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z ; construct_3d_object
  00159	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  0015c	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  0015f	8b 55 fc	 mov	 edx, DWORD PTR _loop$3[ebp]
  00162	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax

; 219  : 				}
; 220  : 				else

  00165	eb 10		 jmp	 SHORT $LN11@unpack_loc
$LN10@unpack_loc:

; 221  : 				{
; 222  : 					raw->inst3d[ loop ] = NULL;

  00167	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  0016a	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0016d	8b 55 fc	 mov	 edx, DWORD PTR _loop$3[ebp]
  00170	c7 04 91 00 00
	00 00		 mov	 DWORD PTR [ecx+edx*4], 0
$LN11@unpack_loc:

; 223  : 				}
; 224  : 
; 225  : 				raw->valid [loop] = unpack_int_value (en, INT_TYPE_VALID);

  00177	68 ef 00 00 00	 push	 239			; 000000efH
  0017c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00185	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00188	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0018b	8b 4d fc	 mov	 ecx, DWORD PTR _loop$3[ebp]
  0018e	88 04 0a	 mov	 BYTE PTR [edx+ecx], al

; 226  : 
; 227  : 				unpack_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &(raw->motion_vector [loop]));

  00191	6b 45 fc 0c	 imul	 eax, DWORD PTR _loop$3[ebp], 12
  00195	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00198	03 41 3c	 add	 eax, DWORD PTR [ecx+60]
  0019b	50		 push	 eax
  0019c	6a 06		 push	 6
  0019e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 228  : 				
; 229  : 				unpack_vec3d (en, VEC3D_TYPE_POSITION, &(raw->position [loop]));

  001a7	6b 45 fc 0c	 imul	 eax, DWORD PTR _loop$3[ebp], 12
  001ab	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  001ae	03 41 40	 add	 eax, DWORD PTR [ecx+64]
  001b1	50		 push	 eax
  001b2	6a 08		 push	 8
  001b4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001b7	52		 push	 edx
  001b8	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 230  : 			}

  001bd	e9 6d ff ff ff	 jmp	 $LN4@unpack_loc
$LN5@unpack_loc:

; 231  : 
; 232  : 			unpack_list_root (en, LIST_TYPE_SPECIAL_EFFECT, &raw->special_effect_root);

  001c2	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  001c5	83 c0 44	 add	 eax, 68			; 00000044H
  001c8	50		 push	 eax
  001c9	6a 24		 push	 36			; 00000024H
  001cb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ce	51		 push	 ecx
  001cf	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 233  : 
; 234  : 			// sector_link
; 235  : 
; 236  : 			////////////////////////////////////////
; 237  : 			//
; 238  : 			// BUILD COMPONENTS
; 239  : 			//
; 240  : 			////////////////////////////////////////
; 241  : 	
; 242  : 			////////////////////////////////////////
; 243  : 			//
; 244  : 			// LINK INTO SYSTEM
; 245  : 			//
; 246  : 			////////////////////////////////////////
; 247  : 
; 248  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_SECTOR, get_local_sector_entity (&raw->eff.position), NULL);

  001d4	6a 00		 push	 0
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  001d9	83 c0 04	 add	 eax, 4
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  001e2	50		 push	 eax
  001e3	6a 21		 push	 33			; 00000021H
  001e5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001e8	51		 push	 ecx
  001e9	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 249  : 
; 250  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity(), NULL);

  001ee	6a 00		 push	 0
  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  001f5	50		 push	 eax
  001f6	6a 29		 push	 41			; 00000029H
  001f8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001fb	51		 push	 ecx
  001fc	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN2@unpack_loc:

; 251  : 
; 252  : 			break;
; 253  : 		}
; 254  : 		////////////////////////////////////////
; 255  : 		case PACK_MODE_BROWSE_SESSION:
; 256  : 		////////////////////////////////////////
; 257  : 		{
; 258  : 			break;
; 259  : 		}
; 260  : 		////////////////////////////////////////
; 261  : 		case PACK_MODE_UPDATE_ENTITY:
; 262  : 		////////////////////////////////////////
; 263  : 		{
; 264  : 			//
; 265  : 			// always use access functions to set the data
; 266  : 			//
; 267  : 
; 268  : 			break;
; 269  : 		}
; 270  : 	}
; 271  : }

  00201	5f		 pop	 edi
  00202	5e		 pop	 esi
  00203	5b		 pop	 ebx
  00204	8b e5		 mov	 esp, ebp
  00206	5d		 pop	 ebp
  00207	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv78 = -76						; size = 4
tv70 = -76						; size = 4
_loop$1 = -8						; size = 4
_raw$2 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN8@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN7@pack_local
$LN8@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@FJMOAANM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b4	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b4 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c 26 01 00
	00		 jl	 $LN2@pack_local
  0003d	83 7d b4 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN9@pack_local
  00043	e9 1b 01 00 00	 jmp	 $LN2@pack_local
$LN9@pack_local:

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		case PACK_MODE_CLIENT_SESSION:
; 88   : 		////////////////////////////////////////
; 89   : 		{
; 90   : 			particle
; 91   : 				*raw;
; 92   : 
; 93   : 			int
; 94   : 				loop;
; 95   : 
; 96   : 			raw = (particle *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$2[ebp], ecx

; 97   : 
; 98   : 			pack_entity_type (get_local_entity_type (en));

  00051	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00055	74 0a		 je	 SHORT $LN13@pack_local
  00057	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 4d b4	 mov	 DWORD PTR tv78[ebp], ecx
  0005f	eb 21		 jmp	 SHORT $LN14@pack_local
$LN13@pack_local:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00067	83 c2 12	 add	 edx, 18			; 00000012H
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@FJMOAANM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN14@pack_local:
  00082	8b 4d b4	 mov	 ecx, DWORD PTR tv78[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 99   : 
; 100  : 			pack_entity_safe_ptr (en);

  0008b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 101  : 
; 102  : 			//
; 103  : 			// pack effect data
; 104  : 			//
; 105  : 
; 106  : 			pack_effect_data (en, &raw->eff, mode);

  00094	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _raw$2[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?pack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z ; pack_effect_data

; 107  : 
; 108  : 			//
; 109  : 			// pack particle data
; 110  : 			//
; 111  : 
; 112  : 			pack_float_value (en, FLOAT_TYPE_INITIAL_SPEED, raw->initial_speed);

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000a8	51		 push	 ecx
  000a9	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  000ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b3	6a 36		 push	 54			; 00000036H
  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b8	51		 push	 ecx
  000b9	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 113  : 	
; 114  : 			pack_int_value (en, INT_TYPE_PARTICLE_COUNT, raw->particle_count);

  000be	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000c1	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  000c5	51		 push	 ecx
  000c6	68 98 00 00 00	 push	 152			; 00000098H
  000cb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000ce	52		 push	 edx
  000cf	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 115  : 
; 116  : 			pack_int_value (en, INT_TYPE_OBJECT_3D_SHAPE, raw->object_3d_shape);

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000d7	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  000da	51		 push	 ecx
  000db	68 92 00 00 00	 push	 146			; 00000092H
  000e0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000e3	52		 push	 edx
  000e4	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 117  : 
; 118  : 			// inst3d
; 119  : 
; 120  : 			for ( loop = 0 ; loop < raw->particle_count ; loop ++ )

  000e9	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$1[ebp], 0
  000f0	eb 09		 jmp	 SHORT $LN6@pack_local
$LN4@pack_local:
  000f2	8b 45 f8	 mov	 eax, DWORD PTR _loop$1[ebp]
  000f5	83 c0 01	 add	 eax, 1
  000f8	89 45 f8	 mov	 DWORD PTR _loop$1[ebp], eax
$LN6@pack_local:
  000fb	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000fe	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00102	39 4d f8	 cmp	 DWORD PTR _loop$1[ebp], ecx
  00105	7d 4a		 jge	 SHORT $LN5@pack_local

; 121  : 			{
; 122  : 
; 123  : 				pack_int_value (en, INT_TYPE_VALID, raw->valid [loop]);

  00107	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0010a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0010d	8b 55 f8	 mov	 edx, DWORD PTR _loop$1[ebp]
  00110	0f b6 04 11	 movzx	 eax, BYTE PTR [ecx+edx]
  00114	50		 push	 eax
  00115	68 ef 00 00 00	 push	 239			; 000000efH
  0011a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0011d	51		 push	 ecx
  0011e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 124  : 
; 125  : 				pack_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &(raw->motion_vector [loop]));

  00123	6b 45 f8 0c	 imul	 eax, DWORD PTR _loop$1[ebp], 12
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _raw$2[ebp]
  0012a	03 41 3c	 add	 eax, DWORD PTR [ecx+60]
  0012d	50		 push	 eax
  0012e	6a 06		 push	 6
  00130	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00133	52		 push	 edx
  00134	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 126  : 				
; 127  : 				pack_vec3d (en, VEC3D_TYPE_POSITION, &(raw->position [loop]));

  00139	6b 45 f8 0c	 imul	 eax, DWORD PTR _loop$1[ebp], 12
  0013d	8b 4d fc	 mov	 ecx, DWORD PTR _raw$2[ebp]
  00140	03 41 40	 add	 eax, DWORD PTR [ecx+64]
  00143	50		 push	 eax
  00144	6a 08		 push	 8
  00146	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00149	52		 push	 edx
  0014a	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 128  : 			}

  0014f	eb a1		 jmp	 SHORT $LN4@pack_local
$LN5@pack_local:

; 129  : 
; 130  : 			pack_list_root (en, LIST_TYPE_SPECIAL_EFFECT, &raw->special_effect_root);

  00151	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00154	83 c0 44	 add	 eax, 68			; 00000044H
  00157	50		 push	 eax
  00158	6a 24		 push	 36			; 00000024H
  0015a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0015d	51		 push	 ecx
  0015e	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root
$LN2@pack_local:

; 131  : 
; 132  : 			// sector_link
; 133  : 
; 134  : 			break;
; 135  : 		}
; 136  : 		////////////////////////////////////////
; 137  : 		case PACK_MODE_BROWSE_SESSION:
; 138  : 		////////////////////////////////////////
; 139  : 		{
; 140  : 			break;
; 141  : 		}
; 142  : 		////////////////////////////////////////
; 143  : 		case PACK_MODE_UPDATE_ENTITY:
; 144  : 		////////////////////////////////////////
; 145  : 		{
; 146  : 			break;
; 147  : 		}
; 148  : 	}
; 149  : }

  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_pack.c
;	COMDAT ?overload_particle_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_particle_pack_functions@@YGXXZ PROC		; overload_particle_pack_functions, COMDAT

; 278  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 279  : 	fn_pack_local_entity_data[ENTITY_TYPE_PARTICLE]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 12	 imul	 ecx, eax, 18
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 280  : 
; 281  : 	fn_unpack_local_entity_data[ENTITY_TYPE_PARTICLE]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 12	 imul	 ecx, eax, 18
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 282  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_particle_pack_functions@@YGXXZ ENDP		; overload_particle_pack_functions
_TEXT	ENDS
END
