; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\session\session.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?session_entity@@3PAUENTITY@@A			; session_entity
PUBLIC	?weather_rain_radius_min@@3MA			; weather_rain_radius_min
PUBLIC	?weather_rain_radius_max@@3MA			; weather_rain_radius_max
PUBLIC	?weather_rain_speed@@3MA			; weather_rain_speed
PUBLIC	?weather_wind_radius_min@@3MA			; weather_wind_radius_min
PUBLIC	?weather_wind_radius_max@@3MA			; weather_wind_radius_max
PUBLIC	?weather_wind_speed@@3MA			; weather_wind_speed
_BSS	SEGMENT
?session_entity@@3PAUENTITY@@A DD 01H DUP (?)		; session_entity
_BSS	ENDS
_DATA	SEGMENT
?weather_rain_radius_min@@3MA DD 0459c4000r	; 5000	; weather_rain_radius_min
?weather_rain_radius_max@@3MA DD 047c35000r	; 100000 ; weather_rain_radius_max
?weather_rain_speed@@3MA DD 04339887dr		; 185.533 ; weather_rain_speed
?weather_wind_radius_min@@3MA DD 045fa0000r	; 8000	; weather_wind_radius_min
?weather_wind_radius_max@@3MA DD 047fa0000r	; 128000 ; weather_wind_radius_max
?weather_wind_speed@@3MA DD 0434e25e0r		; 206.148 ; weather_wind_speed
_DATA	ENDS
PUBLIC	_ceilf
PUBLIC	_cosf
PUBLIC	_floorf
PUBLIC	_sinf
PUBLIC	?ceil@@YGMM@Z					; ceil
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?floor@@YGMM@Z					; floor
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?set_session_entity@@YGXPAUENTITY@@@Z		; set_session_entity
PUBLIC	?calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z ; calculate_session_time_of_day
PUBLIC	?get_day_segment_type@@YG?AW4DAY_SEGMENT_TYPES@@M@Z ; get_day_segment_type
PUBLIC	?get_segment_time_of_day@@YGMW4DAY_SEGMENT_TYPES@@@Z ; get_segment_time_of_day
PUBLIC	?get_session_random_start_time_of_day@@YGMXZ	; get_session_random_start_time_of_day
PUBLIC	?get_session_preset_time_of_day@@YGMW4SESSION_TIME_OF_DAY_SETTINGS@@@Z ; get_session_preset_time_of_day
PUBLIC	?get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z ; get_session_weather_at_point
PUBLIC	?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z ; get_simple_session_weather_at_point
PUBLIC	?set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z ; set_session_fixed_weather_mode
PUBLIC	?set_session_random_weather_mode@@YGXPAUENTITY@@@Z ; set_session_random_weather_mode
PUBLIC	?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z ; get_session_wind_velocity_at_point
PUBLIC	?attach_session_sound_effects@@YGXPAUENTITY@@@Z	; attach_session_sound_effects
PUBLIC	?check_point_inside_population_area@@YGHPAUVEC3D@@@Z ; check_point_inside_population_area
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??set_session_entity@@YGXPAUENTITY@@@Z@4JA ; `set_session_entity'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CP@NONLNBHM@Setting?5session_entity?5?$CItype?5?$DN?5@ ; `string'
PUBLIC	??_C@_0BP@GJODMMC@Setting?5session_entity?5to?5NULL@ ; `string'
PUBLIC	?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA ; `calculate_session_time_of_day'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0DA@HHINHKAH@SESSION?3?5No?5time?5of?5day?5specifi@ ; `string'
PUBLIC	?__LINE__Var@?0??get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z@4JA ; `get_session_weather_at_point'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_03PCBNCGFH@pos@				; `string'
PUBLIC	?__LINE__Var@?0??set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z@4JA ; `set_session_fixed_weather_mode'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	?__LINE__Var@?0??set_session_random_weather_mode@@YGXPAUENTITY@@@Z@4JA ; `set_session_random_weather_mode'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z@4JA ; `get_session_wind_velocity_at_point'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_wind_gusting_modulation_value@@YGMM@Z@4JA ; `get_wind_gusting_modulation_value'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@MKHAAPMJ@?$CIlow_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlow_index?5@ ; `string'
PUBLIC	??_C@_0DC@PGJJMMNO@?$CIhigh_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIhigh_inde@ ; `string'
PUBLIC	?__LINE__Var@?0??check_point_inside_population_area@@YGHPAUVEC3D@@@Z@4JA ; `check_point_inside_population_area'::`1'::__LINE__Var
PUBLIC	??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fd54fdf3b645a1d
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe54fdf3b645a1d
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@400921fb60000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@404e000000000000
PUBLIC	__real@40d5180000000000
PUBLIC	__real@40dc200000000000
PUBLIC	__real@40efa40000000000
PUBLIC	__real@40f1940000000000
PUBLIC	__real@40f5180000000000
PUBLIC	__real@46a8c000
PUBLIC	__real@46e10000
PUBLIC	__real@477d2000
PUBLIC	__real@478ca000
PUBLIC	__real@47a8c000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_cos:PROC
EXTRN	_sin:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__imp__floor:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?initialise_random_number_generator@@YGXXZ:PROC	; initialise_random_number_generator
EXTRN	?get_approx_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_approx_2d_range
EXTRN	?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z:PROC ; create_local_sound_effect_entity
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?current_map_info@@3UCUSTOM_MAP_INFO@@A:BYTE	; current_map_info
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_type_database@@3PAUENTITY_TYPE_DATA@@A:BYTE ; entity_type_database
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	__fltused:DWORD
;	COMDAT __real@47a8c000
CONST	SEGMENT
__real@47a8c000 DD 047a8c000r			; 86400
CONST	ENDS
;	COMDAT __real@478ca000
CONST	SEGMENT
__real@478ca000 DD 0478ca000r			; 72000
CONST	ENDS
;	COMDAT __real@477d2000
CONST	SEGMENT
__real@477d2000 DD 0477d2000r			; 64800
CONST	ENDS
;	COMDAT __real@46e10000
CONST	SEGMENT
__real@46e10000 DD 046e10000r			; 28800
CONST	ENDS
;	COMDAT __real@46a8c000
CONST	SEGMENT
__real@46a8c000 DD 046a8c000r			; 21600
CONST	ENDS
;	COMDAT __real@40f5180000000000
CONST	SEGMENT
__real@40f5180000000000 DQ 040f5180000000000r	; 86400
CONST	ENDS
;	COMDAT __real@40f1940000000000
CONST	SEGMENT
__real@40f1940000000000 DQ 040f1940000000000r	; 72000
CONST	ENDS
;	COMDAT __real@40efa40000000000
CONST	SEGMENT
__real@40efa40000000000 DQ 040efa40000000000r	; 64800
CONST	ENDS
;	COMDAT __real@40dc200000000000
CONST	SEGMENT
__real@40dc200000000000 DQ 040dc200000000000r	; 28800
CONST	ENDS
;	COMDAT __real@40d5180000000000
CONST	SEGMENT
__real@40d5180000000000 DQ 040d5180000000000r	; 21600
CONST	ENDS
;	COMDAT __real@404e000000000000
CONST	SEGMENT
__real@404e000000000000 DQ 0404e000000000000r	; 60
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@400921fb60000000
CONST	SEGMENT
__real@400921fb60000000 DQ 0400921fb60000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe54fdf3b645a1d
CONST	SEGMENT
__real@3fe54fdf3b645a1d DQ 03fe54fdf3b645a1dr	; 0.666
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd54fdf3b645a1d
CONST	SEGMENT
__real@3fd54fdf3b645a1d DQ 03fd54fdf3b645a1dr	; 0.333
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ DB 'ASSERT %s (%s'
	DB	':%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??check_point_inside_population_area@@YGHPAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??check_point_inside_population_area@@YGHPAUVEC3D@@@Z@4JA DD 03b1H ; `check_point_inside_population_area'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DC@PGJJMMNO@?$CIhigh_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIhigh_inde@
CONST	SEGMENT
??_C@_0DC@PGJJMMNO@?$CIhigh_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIhigh_inde@ DB '('
	DB	'high_index >= 0) && (high_index <= num_segments)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MKHAAPMJ@?$CIlow_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlow_index?5@
CONST	SEGMENT
??_C@_0CP@MKHAAPMJ@?$CIlow_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlow_index?5@ DB '('
	DB	'low_index >= 0) && (low_index < num_segments)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_wind_gusting_modulation_value@@YGMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_wind_gusting_modulation_value@@YGMM@Z@4JA DD 0379H ; `get_wind_gusting_modulation_value'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z@4JA DD 0254H ; `get_session_wind_velocity_at_point'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_session_random_weather_mode@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_session_random_weather_mode@@YGXPAUENTITY@@@Z@4JA DD 021bH ; `set_session_random_weather_mode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z@4JA DD 0204H ; `set_session_fixed_weather_mode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03PCBNCGFH@pos@
CONST	SEGMENT
??_C@_03PCBNCGFH@pos@ DB 'pos', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ DB 'get_session_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z@4JA DD 0154H ; `get_session_weather_at_point'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DA@HHINHKAH@SESSION?3?5No?5time?5of?5day?5specifi@
CONST	SEGMENT
??_C@_0DA@HHINHKAH@SESSION?3?5No?5time?5of?5day?5specifi@ DB 'SESSION: No'
	DB	' time of day specified for preset %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA DD 089H ; `calculate_session_time_of_day'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BP@GJODMMC@Setting?5session_entity?5to?5NULL@
CONST	SEGMENT
??_C@_0BP@GJODMMC@Setting?5session_entity?5to?5NULL@ DB 'Setting session_'
	DB	'entity to NULL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NONLNBHM@Setting?5session_entity?5?$CItype?5?$DN?5@
CONST	SEGMENT
??_C@_0CP@NONLNBHM@Setting?5session_entity?5?$CItype?5?$DN?5@ DB 'Setting'
	DB	' session_entity (type = %s, index = %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\session\sessi'
	DB	'on.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_session_entity@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_session_entity@@YGXPAUENTITY@@@Z@4JA DD 077H ; `set_session_entity'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?wind_gust_modulation_amounts@@3PAMA DD 03e800000r ; 0.25 ; wind_gust_modulation_amounts
	DD	0bd4ccccdr			; -0.05
	DD	0be800000r			; -0.25
	DD	03d4ccccdr			; 0.05
	DD	0bc23d70ar			; -0.01
	DD	03e19999ar			; 0.15
?random_session_start_times@@3PAMA DD 044e10000r ; 1800	; random_session_start_times
	DD	0469ab000r			; 19800
	DD	046fd2000r			; 32400
	DD	04728c000r			; 43200
	DD	04752f000r			; 54000
	DD	047761800r			; 63000
?session_preset_time_of_day_table@@3PAUSESSION_PRESET_TIME_OF_DAY_TABLE@@A DD 02H ; session_preset_time_of_day_table
	DD	046a1b800r			; 20700
	DD	03H
	DD	047266800r			; 42600
	DD	04H
	DD	04757a000r			; 55200
	DD	05H
	DD	0477d2000r			; 64800
	DD	06H
	DD	047a6fe00r			; 85500
	DD	0ffffffffH
	ORG $+4
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_wind_gusting_modulation_value@@YGMM@Z
_TEXT	SEGMENT
tv163 = -104						; size = 4
_num_segments$ = -36					; size = 4
_high_index$ = -32					; size = 4
_low_index$ = -28					; size = 4
_val$ = -24						; size = 4
_high$ = -20						; size = 4
_low$ = -16						; size = 4
_d$ = -12						; size = 4
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_wind_gusting_value$ = 8				; size = 4
?get_wind_gusting_modulation_value@@YGMM@Z PROC		; get_wind_gusting_modulation_value, COMDAT

; 889  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 890  : 	float
; 891  : 		a,
; 892  : 		b,
; 893  : 		d,
; 894  : 		low,
; 895  : 		high,
; 896  : 		val;
; 897  : 
; 898  : 	int
; 899  : 		low_index,
; 900  : 		high_index,
; 901  : 		num_segments;
; 902  : 
; 903  : 	num_segments = WIND_GUSTING_SAMPLE_POINTS + 1;

  00009	c7 45 dc 07 00
	00 00		 mov	 DWORD PTR _num_segments$[ebp], 7

; 904  : 
; 905  : 	val = wind_gusting_value * num_segments;

  00010	f3 0f 2a 45 dc	 cvtsi2ss xmm0, DWORD PTR _num_segments$[ebp]
  00015	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _wind_gusting_value$[ebp]
  0001a	f3 0f 11 45 e8	 movss	 DWORD PTR _val$[ebp], xmm0

; 906  : 
; 907  : 	low = floor (val);

  0001f	51		 push	 ecx
  00020	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _val$[ebp]
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?floor@@YGMM@Z		; floor
  0002f	d9 5d f0	 fstp	 DWORD PTR _low$[ebp]

; 908  : 
; 909  : 	high = ceil (val);

  00032	51		 push	 ecx
  00033	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _val$[ebp]
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	e8 00 00 00 00	 call	 ?ceil@@YGMM@Z		; ceil
  00042	d9 5d ec	 fstp	 DWORD PTR _high$[ebp]

; 910  : 
; 911  : 	d = val - low;

  00045	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _val$[ebp]
  0004a	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _low$[ebp]
  0004f	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 912  : 
; 913  : 	convert_float_to_int (low, &low_index);

  00054	8d 45 e4	 lea	 eax, DWORD PTR _low_index$[ebp]
  00057	50		 push	 eax
  00058	51		 push	 ecx
  00059	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _low$[ebp]
  0005e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00063	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 914  : 	convert_float_to_int (high, &high_index);

  00068	8d 45 e0	 lea	 eax, DWORD PTR _high_index$[ebp]
  0006b	50		 push	 eax
  0006c	51		 push	 ecx
  0006d	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _high$[ebp]
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 915  : 
; 916  : 	ASSERT ((low_index >= 0) && (low_index < num_segments));

  0007c	83 7d e4 00	 cmp	 DWORD PTR _low_index$[ebp], 0
  00080	7c 08		 jl	 SHORT $LN3@get_wind_g
  00082	8b 45 e4	 mov	 eax, DWORD PTR _low_index$[ebp]
  00085	3b 45 dc	 cmp	 eax, DWORD PTR _num_segments$[ebp]
  00088	7c 18		 jl	 SHORT $LN2@get_wind_g
$LN3@get_wind_g:
  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_wind_gusting_modulation_value@@YGMM@Z@4JA
  0008f	83 c0 1b	 add	 eax, 27			; 0000001bH
  00092	50		 push	 eax
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MKHAAPMJ@?$CIlow_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlow_index?5@
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_wind_g:

; 917  : 	ASSERT ((high_index >= 0) && (high_index <= num_segments));

  000a2	83 7d e0 00	 cmp	 DWORD PTR _high_index$[ebp], 0
  000a6	7c 08		 jl	 SHORT $LN5@get_wind_g
  000a8	8b 45 e0	 mov	 eax, DWORD PTR _high_index$[ebp]
  000ab	3b 45 dc	 cmp	 eax, DWORD PTR _num_segments$[ebp]
  000ae	7e 18		 jle	 SHORT $LN4@get_wind_g
$LN5@get_wind_g:
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_wind_gusting_modulation_value@@YGMM@Z@4JA
  000b5	83 c0 1c	 add	 eax, 28			; 0000001cH
  000b8	50		 push	 eax
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@PGJJMMNO@?$CIhigh_index?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIhigh_inde@
  000c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_wind_g:

; 918  : 
; 919  : 	if (low_index == 0)

  000c8	83 7d e4 00	 cmp	 DWORD PTR _low_index$[ebp], 0
  000cc	75 0a		 jne	 SHORT $LN6@get_wind_g

; 920  : 	{
; 921  : 		a = 0.0;

  000ce	0f 57 c0	 xorps	 xmm0, xmm0
  000d1	f3 0f 11 45 fc	 movss	 DWORD PTR _a$[ebp], xmm0

; 922  : 	}
; 923  : 	else

  000d6	eb 11		 jmp	 SHORT $LN7@get_wind_g
$LN6@get_wind_g:

; 924  : 	{
; 925  : 		a = wind_gust_modulation_amounts [low_index - 1];

  000d8	8b 45 e4	 mov	 eax, DWORD PTR _low_index$[ebp]
  000db	f3 0f 10 04 85
	fc ff ff ff	 movss	 xmm0, DWORD PTR ?wind_gust_modulation_amounts@@3PAMA[eax*4-4]
  000e4	f3 0f 11 45 fc	 movss	 DWORD PTR _a$[ebp], xmm0
$LN7@get_wind_g:

; 926  : 	}
; 927  : 
; 928  : 	if ((high_index == 0) || (high_index == num_segments))

  000e9	83 7d e0 00	 cmp	 DWORD PTR _high_index$[ebp], 0
  000ed	74 08		 je	 SHORT $LN10@get_wind_g
  000ef	8b 45 e0	 mov	 eax, DWORD PTR _high_index$[ebp]
  000f2	3b 45 dc	 cmp	 eax, DWORD PTR _num_segments$[ebp]
  000f5	75 0a		 jne	 SHORT $LN8@get_wind_g
$LN10@get_wind_g:

; 929  : 	{
; 930  : 		b = 0.0;

  000f7	0f 57 c0	 xorps	 xmm0, xmm0
  000fa	f3 0f 11 45 f8	 movss	 DWORD PTR _b$[ebp], xmm0

; 931  : 	}
; 932  : 	else

  000ff	eb 11		 jmp	 SHORT $LN9@get_wind_g
$LN8@get_wind_g:

; 933  : 	{
; 934  : 		b = wind_gust_modulation_amounts [high_index - 1];

  00101	8b 45 e0	 mov	 eax, DWORD PTR _high_index$[ebp]
  00104	f3 0f 10 04 85
	fc ff ff ff	 movss	 xmm0, DWORD PTR ?wind_gust_modulation_amounts@@3PAMA[eax*4-4]
  0010d	f3 0f 11 45 f8	 movss	 DWORD PTR _b$[ebp], xmm0
$LN9@get_wind_g:

; 935  : 	}
; 936  : 
; 937  : 	return (a + (d * (b - a)));

  00112	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _b$[ebp]
  00117	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _a$[ebp]
  0011c	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _d$[ebp]
  00121	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _a$[ebp]
  00126	f3 0f 11 45 98	 movss	 DWORD PTR tv163[ebp], xmm0
  0012b	d9 45 98	 fld	 DWORD PTR tv163[ebp]

; 938  : }

  0012e	5f		 pop	 edi
  0012f	5e		 pop	 esi
  00130	5b		 pop	 ebx
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c2 04 00	 ret	 4
?get_wind_gusting_modulation_value@@YGMM@Z ENDP		; get_wind_gusting_modulation_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?check_point_inside_population_area@@YGHPAUVEC3D@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_point$ = 8						; size = 4
?check_point_inside_population_area@@YGHPAUVEC3D@@@Z PROC ; check_point_inside_population_area, COMDAT

; 945  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 946  : 
; 947  : 	session
; 948  : 		*raw;
; 949  : 
; 950  : 	debug_assert (get_session_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	75 20		 jne	 SHORT $LN2@check_poin
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??check_point_inside_population_area@@YGHPAUVEC3D@@@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  0002a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@check_poin:

; 951  : 
; 952  : 	raw = (session *) get_local_entity_data (get_session_entity ());

  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00037	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003a	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 953  : 
; 954  : 	if ((raw->population_x_min < point->x) && (raw->population_x_max > point->x))

  0003d	8b 45 08	 mov	 eax, DWORD PTR _point$[ebp]
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00043	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00047	0f 2f 81 94 00
	00 00		 comiss	 xmm0, DWORD PTR [ecx+148]
  0004e	76 42		 jbe	 SHORT $LN4@check_poin
  00050	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  00056	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR [eax+152]
  0005e	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00061	76 2f		 jbe	 SHORT $LN4@check_poin

; 955  : 	{
; 956  : 
; 957  : 		if ((raw->population_z_min < point->z) && (raw->population_z_max > point->z))

  00063	8b 45 08	 mov	 eax, DWORD PTR _point$[ebp]
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00069	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0006e	0f 2f 81 9c 00
	00 00		 comiss	 xmm0, DWORD PTR [ecx+156]
  00075	76 1b		 jbe	 SHORT $LN4@check_poin
  00077	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  0007d	f3 0f 10 80 a0
	00 00 00	 movss	 xmm0, DWORD PTR [eax+160]
  00085	0f 2f 41 08	 comiss	 xmm0, DWORD PTR [ecx+8]
  00089	76 07		 jbe	 SHORT $LN4@check_poin

; 958  : 		{
; 959  : 
; 960  : 			return TRUE;

  0008b	b8 01 00 00 00	 mov	 eax, 1
  00090	eb 02		 jmp	 SHORT $LN1@check_poin
$LN4@check_poin:

; 961  : 		}
; 962  : 	}
; 963  : 
; 964  : 	return FALSE;

  00092	33 c0		 xor	 eax, eax
$LN1@check_poin:

; 965  : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
?check_point_inside_population_area@@YGHPAUVEC3D@@@Z ENDP ; check_point_inside_population_area
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?attach_session_sound_effects@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_sound_effect_index$ = -4				; size = 4
_en$ = 8						; size = 4
?attach_session_sound_effects@@YGXPAUENTITY@@@Z PROC	; attach_session_sound_effects, COMDAT

; 660  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 661  : 	sound_sample_indices
; 662  : 		sound_effect_index;
; 663  : 
; 664  : 	//
; 665  : 	// light rain
; 666  : 	//
; 667  : 
; 668  : 	sound_effect_index = SOUND_SAMPLE_INDEX_AMBIENT_LIGHT_RAIN;

  00009	c7 45 fc 5a 00
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 90 ; 0000005aH

; 669  : 
; 670  : 	create_local_sound_effect_entity

  00010	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  00013	50		 push	 eax
  00014	6a 01		 push	 1
  00016	6a 01		 push	 1
  00018	6a 01		 push	 1
  0001a	51		 push	 ecx
  0001b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	51		 push	 ecx
  00029	0f 57 c0	 xorps	 xmm0, xmm0
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	6a 00		 push	 0
  00033	6a 00		 push	 0
  00035	6a 00		 push	 0
  00037	6a 0c		 push	 12			; 0000000cH
  00039	6a 00		 push	 0
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0003e	51		 push	 ecx
  0003f	6a ff		 push	 -1
  00041	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 671  : 	(
; 672  : 		ENTITY_INDEX_DONT_CARE,
; 673  : 		en,
; 674  : 		ENTITY_SIDE_NEUTRAL,
; 675  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMBIENT_LIGHT_RAIN,
; 676  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 677  : 		SOUND_LOCALITY_ALL,
; 678  : 		NULL,												// position
; 679  : 		0.0,												// amplification
; 680  : 		1.0, //Werewolf pitch
; 681  : 		TRUE,												// valid sound effect
; 682  : 		TRUE,												// looping
; 683  : 		1,													// sample count
; 684  : 		&sound_effect_index							// sample index list
; 685  : 	);
; 686  : 
; 687  : 	//
; 688  : 	// heavy rain
; 689  : 	//
; 690  : 
; 691  : 	sound_effect_index = SOUND_SAMPLE_INDEX_AMBIENT_HEAVY_RAIN;

  00046	c7 45 fc 5c 00
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 92 ; 0000005cH

; 692  : 
; 693  : 	create_local_sound_effect_entity

  0004d	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  00050	50		 push	 eax
  00051	6a 01		 push	 1
  00053	6a 01		 push	 1
  00055	6a 01		 push	 1
  00057	51		 push	 ecx
  00058	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00060	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00065	51		 push	 ecx
  00066	0f 57 c0	 xorps	 xmm0, xmm0
  00069	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	6a 00		 push	 0
  00074	6a 0a		 push	 10			; 0000000aH
  00076	6a 00		 push	 0
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0007b	51		 push	 ecx
  0007c	6a ff		 push	 -1
  0007e	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 694  : 	(
; 695  : 		ENTITY_INDEX_DONT_CARE,
; 696  : 		en,
; 697  : 		ENTITY_SIDE_NEUTRAL,
; 698  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMBIENT_HEAVY_RAIN,
; 699  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 700  : 		SOUND_LOCALITY_ALL,
; 701  : 		NULL,												// position
; 702  : 		0.0,												// amplification
; 703  : 		1.0, //Werewolf pitch
; 704  : 		TRUE,												// valid sound effect
; 705  : 		TRUE,												// looping
; 706  : 		1,													// sample count
; 707  : 		&sound_effect_index							// sample index list
; 708  : 	);
; 709  : 
; 710  : 	//
; 711  : 	// light wind
; 712  : 	//
; 713  : 
; 714  : 	sound_effect_index = SOUND_SAMPLE_INDEX_AMBIENT_LIGHT_WIND;

  00083	c7 45 fc 59 00
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 89 ; 00000059H

; 715  : 
; 716  : 	create_local_sound_effect_entity

  0008a	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  0008d	50		 push	 eax
  0008e	6a 01		 push	 1
  00090	6a 01		 push	 1
  00092	6a 01		 push	 1
  00094	51		 push	 ecx
  00095	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0009d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a2	51		 push	 ecx
  000a3	0f 57 c0	 xorps	 xmm0, xmm0
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	6a 00		 push	 0
  000ad	6a 00		 push	 0
  000af	6a 00		 push	 0
  000b1	6a 0d		 push	 13			; 0000000dH
  000b3	6a 00		 push	 0
  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b8	51		 push	 ecx
  000b9	6a ff		 push	 -1
  000bb	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 717  : 	(
; 718  : 		ENTITY_INDEX_DONT_CARE,
; 719  : 		en,
; 720  : 		ENTITY_SIDE_NEUTRAL,
; 721  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMBIENT_LIGHT_WIND,
; 722  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 723  : 		SOUND_LOCALITY_ALL,
; 724  : 		NULL,												// position
; 725  : 		0.0,												// amplification
; 726  : 		1.0, //Werewolf pitch
; 727  : 		TRUE,												// valid sound effect
; 728  : 		TRUE,												// looping
; 729  : 		1,													// sample count
; 730  : 		&sound_effect_index							// sample index list
; 731  : 	);
; 732  : 
; 733  : 	//
; 734  : 	// heavy wind
; 735  : 	//
; 736  : 
; 737  : 	sound_effect_index = SOUND_SAMPLE_INDEX_AMBIENT_HEAVY_WIND;

  000c0	c7 45 fc 5b 00
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 91 ; 0000005bH

; 738  : 
; 739  : 	create_local_sound_effect_entity

  000c7	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  000ca	50		 push	 eax
  000cb	6a 01		 push	 1
  000cd	6a 01		 push	 1
  000cf	6a 01		 push	 1
  000d1	51		 push	 ecx
  000d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000df	51		 push	 ecx
  000e0	0f 57 c0	 xorps	 xmm0, xmm0
  000e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e8	6a 00		 push	 0
  000ea	6a 00		 push	 0
  000ec	6a 00		 push	 0
  000ee	6a 0b		 push	 11			; 0000000bH
  000f0	6a 00		 push	 0
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000f5	51		 push	 ecx
  000f6	6a ff		 push	 -1
  000f8	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 740  : 	(
; 741  : 		ENTITY_INDEX_DONT_CARE,
; 742  : 		en,
; 743  : 		ENTITY_SIDE_NEUTRAL,
; 744  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMBIENT_HEAVY_WIND,
; 745  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 746  : 		SOUND_LOCALITY_ALL,
; 747  : 		NULL,												// position
; 748  : 		0.0,												// amplification
; 749  : 		1.0, //Werewolf pitch
; 750  : 		TRUE,												// valid sound effect
; 751  : 		TRUE,												// looping
; 752  : 		1,													// sample count
; 753  : 		&sound_effect_index							// sample index list
; 754  : 	);
; 755  : 
; 756  : 	//
; 757  : 	// sea
; 758  : 	//
; 759  : 
; 760  : 	sound_effect_index = SOUND_SAMPLE_INDEX_AMBIENT_SEA;

  000fd	c7 45 fc 60 00
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 96 ; 00000060H

; 761  : 
; 762  : 	create_local_sound_effect_entity

  00104	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  00107	50		 push	 eax
  00108	6a 01		 push	 1
  0010a	6a 01		 push	 1
  0010c	6a 01		 push	 1
  0010e	51		 push	 ecx
  0010f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	51		 push	 ecx
  0011d	0f 57 c0	 xorps	 xmm0, xmm0
  00120	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00125	6a 00		 push	 0
  00127	6a 00		 push	 0
  00129	6a 00		 push	 0
  0012b	6a 0f		 push	 15			; 0000000fH
  0012d	6a 00		 push	 0
  0012f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00132	51		 push	 ecx
  00133	6a ff		 push	 -1
  00135	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 763  : 	(
; 764  : 		ENTITY_INDEX_DONT_CARE,
; 765  : 		en,
; 766  : 		ENTITY_SIDE_NEUTRAL,
; 767  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMBIENT_SEA,
; 768  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 769  : 		SOUND_LOCALITY_ALL,
; 770  : 		NULL,												// position
; 771  : 		0.0,												// amplification
; 772  : 		1.0, //Werewolf pitch
; 773  : 		TRUE,												// valid sound effect
; 774  : 		TRUE,												// looping
; 775  : 		1,													// sample count
; 776  : 		&sound_effect_index							// sample index list
; 777  : 	);
; 778  : 
; 779  : 	//
; 780  : 	// jungle
; 781  : 	//
; 782  : 
; 783  : 	sound_effect_index = SOUND_SAMPLE_INDEX_AMBIENT_JUNGLE;

  0013a	c7 45 fc 5f 00
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 95 ; 0000005fH

; 784  : 
; 785  : 	create_local_sound_effect_entity

  00141	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  00144	50		 push	 eax
  00145	6a 01		 push	 1
  00147	6a 01		 push	 1
  00149	6a 01		 push	 1
  0014b	51		 push	 ecx
  0014c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00154	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00159	51		 push	 ecx
  0015a	0f 57 c0	 xorps	 xmm0, xmm0
  0015d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00162	6a 00		 push	 0
  00164	6a 00		 push	 0
  00166	6a 00		 push	 0
  00168	6a 0e		 push	 14			; 0000000eH
  0016a	6a 00		 push	 0
  0016c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0016f	51		 push	 ecx
  00170	6a ff		 push	 -1
  00172	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 786  : 	(
; 787  : 		ENTITY_INDEX_DONT_CARE,
; 788  : 		en,
; 789  : 		ENTITY_SIDE_NEUTRAL,
; 790  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMBIENT_JUNGLE,
; 791  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 792  : 		SOUND_LOCALITY_ALL,
; 793  : 		NULL,												// position
; 794  : 		0.0,												// amplification
; 795  : 		1.0, //Werewolf pitch
; 796  : 		TRUE,												// valid sound effect
; 797  : 		TRUE,												// looping
; 798  : 		1,													// sample count
; 799  : 		&sound_effect_index							       // sample index list
; 800  : 
; 801  : 	);
; 802  : 
; 803  : 	//
; 804  : 	// Maverick's Ambiente sound mod
; 805  : 	//
; 806  : 
; 807  : 	sound_effect_index = SOUND_SAMPLE_INDEX_AMB1;

  00177	c7 45 fc e1 07
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 2017 ; 000007e1H

; 808  : 
; 809  : 	create_local_sound_effect_entity

  0017e	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  00181	50		 push	 eax
  00182	6a 01		 push	 1
  00184	6a 01		 push	 1
  00186	6a 01		 push	 1
  00188	51		 push	 ecx
  00189	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00191	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00196	51		 push	 ecx
  00197	0f 57 c0	 xorps	 xmm0, xmm0
  0019a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019f	6a 00		 push	 0
  001a1	6a 00		 push	 0
  001a3	6a 00		 push	 0
  001a5	6a 2a		 push	 42			; 0000002aH
  001a7	6a 00		 push	 0
  001a9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ac	51		 push	 ecx
  001ad	6a ff		 push	 -1
  001af	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 810  : 	(
; 811  : 		ENTITY_INDEX_DONT_CARE,
; 812  : 		en,
; 813  : 		ENTITY_SIDE_NEUTRAL,
; 814  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMB1,
; 815  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 816  : 		SOUND_LOCALITY_ALL,
; 817  : 		NULL,												// position
; 818  : 		0.0,												// amplification
; 819  : 		1.0, //Werewolf pitch
; 820  : 		TRUE,												// valid sound effect
; 821  : 		TRUE,												// looping
; 822  : 		1,													// sample count
; 823  : 		&sound_effect_index							        // sample index list
; 824  : 	);
; 825  : 
; 826  :     sound_effect_index = SOUND_SAMPLE_INDEX_AMB2;

  001b4	c7 45 fc e2 07
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 2018 ; 000007e2H

; 827  : 
; 828  : 	create_local_sound_effect_entity

  001bb	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  001be	50		 push	 eax
  001bf	6a 01		 push	 1
  001c1	6a 01		 push	 1
  001c3	6a 01		 push	 1
  001c5	51		 push	 ecx
  001c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d3	51		 push	 ecx
  001d4	0f 57 c0	 xorps	 xmm0, xmm0
  001d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dc	6a 00		 push	 0
  001de	6a 00		 push	 0
  001e0	6a 00		 push	 0
  001e2	6a 2b		 push	 43			; 0000002bH
  001e4	6a 00		 push	 0
  001e6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001e9	51		 push	 ecx
  001ea	6a ff		 push	 -1
  001ec	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 829  : 	(
; 830  : 		ENTITY_INDEX_DONT_CARE,
; 831  : 		en,
; 832  : 		ENTITY_SIDE_NEUTRAL,
; 833  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMB2,
; 834  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 835  : 		SOUND_LOCALITY_ALL,
; 836  : 		NULL,												// position
; 837  : 		0.0,												// amplification
; 838  : 		1.0, //Werewolf pitch
; 839  : 		TRUE,												// valid sound effect
; 840  : 		TRUE,												// looping
; 841  : 		1,													// sample count
; 842  : 		&sound_effect_index							        // sample index list
; 843  : 	);
; 844  : 
; 845  :     sound_effect_index = SOUND_SAMPLE_INDEX_AMB3;

  001f1	c7 45 fc e3 07
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 2019 ; 000007e3H

; 846  : 
; 847  : 	create_local_sound_effect_entity

  001f8	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  001fb	50		 push	 eax
  001fc	6a 01		 push	 1
  001fe	6a 01		 push	 1
  00200	6a 01		 push	 1
  00202	51		 push	 ecx
  00203	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0020b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00210	51		 push	 ecx
  00211	0f 57 c0	 xorps	 xmm0, xmm0
  00214	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00219	6a 00		 push	 0
  0021b	6a 00		 push	 0
  0021d	6a 00		 push	 0
  0021f	6a 2c		 push	 44			; 0000002cH
  00221	6a 00		 push	 0
  00223	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00226	51		 push	 ecx
  00227	6a ff		 push	 -1
  00229	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 848  : 	(
; 849  : 		ENTITY_INDEX_DONT_CARE,
; 850  : 		en,
; 851  : 		ENTITY_SIDE_NEUTRAL,
; 852  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMB3,
; 853  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 854  : 		SOUND_LOCALITY_ALL,
; 855  : 		NULL,												// position
; 856  : 		0.0,												// amplification
; 857  : 		1.0, //Werewolf pitch
; 858  : 		TRUE,												// valid sound effect
; 859  : 		TRUE,												// looping
; 860  : 		1,													// sample count
; 861  : 		&sound_effect_index							        // sample index list
; 862  :     );
; 863  : 
; 864  :     sound_effect_index = SOUND_SAMPLE_INDEX_AMB4;

  0022e	c7 45 fc e4 07
	00 00		 mov	 DWORD PTR _sound_effect_index$[ebp], 2020 ; 000007e4H

; 865  : 
; 866  : 	create_local_sound_effect_entity

  00235	8d 45 fc	 lea	 eax, DWORD PTR _sound_effect_index$[ebp]
  00238	50		 push	 eax
  00239	6a 01		 push	 1
  0023b	6a 01		 push	 1
  0023d	6a 01		 push	 1
  0023f	51		 push	 ecx
  00240	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00248	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024d	51		 push	 ecx
  0024e	0f 57 c0	 xorps	 xmm0, xmm0
  00251	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00256	6a 00		 push	 0
  00258	6a 00		 push	 0
  0025a	6a 00		 push	 0
  0025c	6a 2d		 push	 45			; 0000002dH
  0025e	6a 00		 push	 0
  00260	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00263	51		 push	 ecx
  00264	6a ff		 push	 -1
  00266	e8 00 00 00 00	 call	 ?create_local_sound_effect_entity@@YGPAUENTITY@@HPAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_local_sound_effect_entity

; 867  : 	(
; 868  : 		ENTITY_INDEX_DONT_CARE,
; 869  : 		en,
; 870  : 		ENTITY_SIDE_NEUTRAL,
; 871  : 		ENTITY_SUB_TYPE_EFFECT_SOUND_AMB4,
; 872  : 		SOUND_CHANNEL_SOUND_EFFECT,
; 873  : 		SOUND_LOCALITY_ALL,
; 874  : 		NULL,												// position
; 875  : 		0.0,												// amplification
; 876  : 		1.0, //Werewolf pitch
; 877  : 		TRUE,												// valid sound effect
; 878  : 		TRUE,												// looping
; 879  : 		1,													// sample count
; 880  : 		&sound_effect_index							        // sample index list
; 881  : 	);
; 882  : }

  0026b	5f		 pop	 edi
  0026c	5e		 pop	 esi
  0026d	5b		 pop	 ebx
  0026e	8b e5		 mov	 esp, ebp
  00270	5d		 pop	 ebp
  00271	c2 04 00	 ret	 4
?attach_session_sound_effects@@YGXPAUENTITY@@@Z ENDP	; attach_session_sound_effects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z
_TEXT	SEGMENT
tv174 = -84						; size = 4
_raw$ = -16						; size = 4
_wind_speed$ = -12					; size = 4
_range$ = -8						; size = 4
_r$ = -4						; size = 4
_pos$ = 8						; size = 4
_wind_velocity$ = 12					; size = 4
?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z PROC ; get_session_wind_velocity_at_point, COMDAT

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 597  : 	float
; 598  : 		r,
; 599  : 		range,
; 600  : 		wind_speed;
; 601  : 
; 602  : 	session
; 603  : 		*raw;
; 604  : 
; 605  : 	ASSERT (get_session_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	75 18		 jne	 SHORT $LN2@get_sessio
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z@4JA
  00017	83 c0 09	 add	 eax, 9
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_sessio:

; 606  : 
; 607  : 	ASSERT (pos);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@get_sessio
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z@4JA
  00035	83 c0 0b	 add	 eax, 11			; 0000000bH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_sessio:

; 608  : 
; 609  : 	raw = (session *) get_local_entity_data (get_session_entity ());

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0004d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00050	89 4d f0	 mov	 DWORD PTR _raw$[ebp], ecx

; 610  : 
; 611  : 	if (raw->wind_effect_radius == 0.0)

  00053	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  00056	f3 0f 5a 40 5c	 cvtss2sd xmm0, DWORD PTR [eax+92]
  0005b	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00063	9f		 lahf
  00064	f6 c4 44	 test	 ah, 68			; 00000044H
  00067	7a 0f		 jp	 SHORT $LN4@get_sessio

; 612  : 	{
; 613  : 		//
; 614  : 		// wind is calm all across the map
; 615  : 		//
; 616  : 
; 617  : 		wind_speed = raw->wind_minimum_speed;

  00069	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  0006c	f3 0f 10 40 64	 movss	 xmm0, DWORD PTR [eax+100]
  00071	f3 0f 11 45 f4	 movss	 DWORD PTR _wind_speed$[ebp], xmm0

; 618  : 	}
; 619  : 	else

  00076	eb 6c		 jmp	 SHORT $LN7@get_sessio
$LN4@get_sessio:

; 620  : 	{
; 621  : 		//
; 622  : 		// there is some high wind somewhere on the map
; 623  : 		//
; 624  : 
; 625  : 		range = get_approx_2d_range (pos, &raw->wind_effect_position);

  00078	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  0007b	83 c0 78	 add	 eax, 120		; 00000078H
  0007e	50		 push	 eax
  0007f	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?get_approx_2d_range@@YGMPBUVEC3D@@0@Z ; get_approx_2d_range
  00088	d9 5d f8	 fstp	 DWORD PTR _range$[ebp]

; 626  : 
; 627  : 		if (range >= raw->wind_effect_radius)

  0008b	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  0008e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _range$[ebp]
  00093	0f 2f 40 5c	 comiss	 xmm0, DWORD PTR [eax+92]
  00097	72 0f		 jb	 SHORT $LN6@get_sessio

; 628  : 		{
; 629  : 			//
; 630  : 			// camera is in the calm zone
; 631  : 			//
; 632  : 
; 633  : 			wind_speed = raw->wind_minimum_speed;

  00099	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  0009c	f3 0f 10 40 64	 movss	 xmm0, DWORD PTR [eax+100]
  000a1	f3 0f 11 45 f4	 movss	 DWORD PTR _wind_speed$[ebp], xmm0

; 634  : 		}
; 635  : 		else

  000a6	eb 3c		 jmp	 SHORT $LN7@get_sessio
$LN6@get_sessio:

; 636  : 		{
; 637  : 			r = ((raw->wind_effect_radius - range) / raw->wind_effect_radius);

  000a8	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  000ab	f3 0f 10 40 5c	 movss	 xmm0, DWORD PTR [eax+92]
  000b0	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _range$[ebp]
  000b5	8b 4d f0	 mov	 ecx, DWORD PTR _raw$[ebp]
  000b8	f3 0f 5e 41 5c	 divss	 xmm0, DWORD PTR [ecx+92]
  000bd	f3 0f 11 45 fc	 movss	 DWORD PTR _r$[ebp], xmm0

; 638  : 
; 639  : 			wind_speed = raw->wind_minimum_speed + ((raw->wind_maximum_speed - raw->wind_minimum_speed) * r);

  000c2	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c8	f3 0f 10 40 68	 movss	 xmm0, DWORD PTR [eax+104]
  000cd	f3 0f 5c 41 64	 subss	 xmm0, DWORD PTR [ecx+100]
  000d2	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _r$[ebp]
  000d7	8b 55 f0	 mov	 edx, DWORD PTR _raw$[ebp]
  000da	f3 0f 58 42 64	 addss	 xmm0, DWORD PTR [edx+100]
  000df	f3 0f 11 45 f4	 movss	 DWORD PTR _wind_speed$[ebp], xmm0
$LN7@get_sessio:

; 640  : 		}
; 641  : 	}
; 642  : 
; 643  : 	wind_speed += (wind_speed * get_wind_gusting_modulation_value (raw->wind_gusting_value));

  000e4	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  000e7	51		 push	 ecx
  000e8	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	e8 00 00 00 00	 call	 ?get_wind_gusting_modulation_value@@YGMM@Z ; get_wind_gusting_modulation_value
  000f7	d9 5d ac	 fstp	 DWORD PTR tv174[ebp]
  000fa	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv174[ebp]
  000ff	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _wind_speed$[ebp]
  00104	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _wind_speed$[ebp]
  00109	f3 0f 11 45 f4	 movss	 DWORD PTR _wind_speed$[ebp], xmm0

; 644  : 
; 645  : 	if (wind_velocity)

  0010e	83 7d 0c 00	 cmp	 DWORD PTR _wind_velocity$[ebp], 0
  00112	74 34		 je	 SHORT $LN8@get_sessio

; 646  : 	{
; 647  : 		wind_velocity->x = raw->wind_direction_vector.x * wind_speed;

  00114	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  00117	f3 0f 10 40 6c	 movss	 xmm0, DWORD PTR [eax+108]
  0011c	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _wind_speed$[ebp]
  00121	8b 4d 0c	 mov	 ecx, DWORD PTR _wind_velocity$[ebp]
  00124	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 648  : 		wind_velocity->y = 0.0;

  00128	8b 45 0c	 mov	 eax, DWORD PTR _wind_velocity$[ebp]
  0012b	0f 57 c0	 xorps	 xmm0, xmm0
  0012e	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 649  : 		wind_velocity->z = raw->wind_direction_vector.z * wind_speed;

  00133	8b 45 f0	 mov	 eax, DWORD PTR _raw$[ebp]
  00136	f3 0f 10 40 74	 movss	 xmm0, DWORD PTR [eax+116]
  0013b	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _wind_speed$[ebp]
  00140	8b 4d 0c	 mov	 ecx, DWORD PTR _wind_velocity$[ebp]
  00143	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
$LN8@get_sessio:

; 650  : 	}
; 651  : 
; 652  : 	return wind_speed;

  00148	d9 45 f4	 fld	 DWORD PTR _wind_speed$[ebp]

; 653  : }

  0014b	5f		 pop	 edi
  0014c	5e		 pop	 esi
  0014d	5b		 pop	 ebx
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c2 08 00	 ret	 8
?get_session_wind_velocity_at_point@@YGMPAUVEC3D@@0@Z ENDP ; get_session_wind_velocity_at_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?set_session_random_weather_mode@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv334 = -76						; size = 4
tv325 = -76						; size = 4
tv301 = -76						; size = 4
tv292 = -76						; size = 4
_theta$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?set_session_random_weather_mode@@YGXPAUENTITY@@@Z PROC	; set_session_random_weather_mode, COMDAT

; 539  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 540  : 	session
; 541  : 		*raw;
; 542  : 
; 543  : 	float
; 544  : 		theta;
; 545  : 
; 546  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@set_sessio
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_session_random_weather_mode@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 07	 add	 eax, 7
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_sessio:

; 547  : 
; 548  : 	ASSERT (en);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@set_sessio
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_session_random_weather_mode@@YGXPAUENTITY@@@Z@4JA
  00035	83 c0 09	 add	 eax, 9
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_sessio:

; 549  : 
; 550  : 	raw = (session *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 551  : 
; 552  : 	raw->local_weather_model = TRUE;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00054	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0005a	81 c9 00 00 00
	20		 or	 ecx, 536870912		; 20000000H
  00060	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00063	89 8a a4 00 00
	00		 mov	 DWORD PTR [edx+164], ecx

; 553  : 
; 554  : 	//
; 555  : 	// Rain
; 556  : 	//
; 557  : 
; 558  : 	raw->weather_radius = weather_rain_radius_min + ((weather_rain_radius_max - weather_rain_radius_min) * frand1 ());

  00069	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00073	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00078	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00083	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00086	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0008c	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00090	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00098	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?weather_rain_radius_max@@3MA
  000a0	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR ?weather_rain_radius_min@@3MA
  000a8	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  000ac	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  000b0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weather_rain_radius_min@@3MA
  000b8	f2 0f 58 c1	 addsd	 xmm0, xmm1
  000bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c0	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000c3	f3 0f 11 42 30	 movss	 DWORD PTR [edx+48], xmm0

; 559  : 
; 560  : 	raw->weather_increasing = (rand16 () & 1);

  000c8	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  000d2	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  000d7	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  000e2	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000e5	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  000eb	83 e1 01	 and	 ecx, 1
  000ee	83 e1 01	 and	 ecx, 1
  000f1	c1 e1 1b	 shl	 ecx, 27			; 0000001bH
  000f4	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000f7	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  000fd	25 ff ff ff f7	 and	 eax, -134217729		; f7ffffffH
  00102	0b c1		 or	 eax, ecx
  00104	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00107	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 561  : 
; 562  : 	raw->weather_position.x = MIN_MAP_X + ((MAX_MAP_X - MIN_MAP_X) * frand1 ());

  0010d	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00117	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0011c	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00121	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00127	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0012a	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00130	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00134	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  0013c	f3 0f 10 0d 3c
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00144	f3 0f 5c 0d 24
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0014c	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00150	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00154	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0015c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00160	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00164	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00167	f3 0f 11 42 44	 movss	 DWORD PTR [edx+68], xmm0

; 563  : 	raw->weather_position.y = 0.0;

  0016c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016f	0f 57 c0	 xorps	 xmm0, xmm0
  00172	f3 0f 11 40 48	 movss	 DWORD PTR [eax+72], xmm0

; 564  : 	raw->weather_position.z = MIN_MAP_Z + ((MAX_MAP_Z - MIN_MAP_Z) * frand1 ());

  00177	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00181	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00186	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0018b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00191	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00194	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0019a	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  0019e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  001a6	f3 0f 10 0d 44
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  001ae	f3 0f 5c 0d 2c
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  001b6	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  001ba	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  001be	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  001c6	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001ca	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ce	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  001d1	f3 0f 11 42 4c	 movss	 DWORD PTR [edx+76], xmm0

; 565  : 
; 566  : 	theta = PI * sfrand1 ();

  001d6	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  001e0	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  001e5	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  001ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  001f0	c1 f9 10	 sar	 ecx, 16			; 00000010H
  001f3	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  001f9	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  001ff	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00203	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  0020b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb60000000
  00213	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00217	f3 0f 11 45 f8	 movss	 DWORD PTR _theta$[ebp], xmm0

; 567  : 
; 568  : 	raw->weather_velocity.x = sin (theta) * weather_rain_speed;

  0021c	51		 push	 ecx
  0021d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _theta$[ebp]
  00222	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00227	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0022c	d9 5d b4	 fstp	 DWORD PTR tv292[ebp]
  0022f	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv292[ebp]
  00234	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?weather_rain_speed@@3MA
  0023c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0023f	f3 0f 11 40 50	 movss	 DWORD PTR [eax+80], xmm0

; 569  : 	raw->weather_velocity.y = 0.0;

  00244	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00247	0f 57 c0	 xorps	 xmm0, xmm0
  0024a	f3 0f 11 40 54	 movss	 DWORD PTR [eax+84], xmm0

; 570  : 	raw->weather_velocity.z = cos (theta) * weather_rain_speed;

  0024f	51		 push	 ecx
  00250	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _theta$[ebp]
  00255	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025a	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0025f	d9 5d b4	 fstp	 DWORD PTR tv301[ebp]
  00262	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv301[ebp]
  00267	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?weather_rain_speed@@3MA
  0026f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00272	f3 0f 11 40 58	 movss	 DWORD PTR [eax+88], xmm0

; 571  : 
; 572  : 	//
; 573  : 	// Wind
; 574  : 	//
; 575  : 
; 576  : 	raw->wind_effect_radius = weather_wind_radius_min + ((weather_wind_radius_max - weather_wind_radius_min) * frand1 ());

  00277	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00281	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00286	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0028b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00291	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00294	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0029a	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  0029e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  002a6	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?weather_wind_radius_max@@3MA
  002ae	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR ?weather_wind_radius_min@@3MA
  002b6	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  002ba	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  002be	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weather_wind_radius_min@@3MA
  002c6	f2 0f 58 c1	 addsd	 xmm0, xmm1
  002ca	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ce	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  002d1	f3 0f 11 42 5c	 movss	 DWORD PTR [edx+92], xmm0

; 577  : 
; 578  : 	raw->wind_increasing = (rand16 () & 1);

  002d6	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  002e0	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  002e5	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  002ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  002f0	c1 f9 10	 sar	 ecx, 16			; 00000010H
  002f3	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  002f9	83 e1 01	 and	 ecx, 1
  002fc	83 e1 01	 and	 ecx, 1
  002ff	c1 e1 1c	 shl	 ecx, 28			; 0000001cH
  00302	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00305	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0030b	25 ff ff ff ef	 and	 eax, -268435457		; efffffffH
  00310	0b c1		 or	 eax, ecx
  00312	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00315	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 579  : 
; 580  : 	raw->wind_effect_position.x = MIN_MAP_X + ((MAX_MAP_X - MIN_MAP_X) * frand1 ());

  0031b	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00325	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0032a	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0032f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00335	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00338	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0033e	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00342	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  0034a	f3 0f 10 0d 3c
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00352	f3 0f 5c 0d 24
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0035a	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0035e	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00362	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0036a	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0036e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00372	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00375	f3 0f 11 42 78	 movss	 DWORD PTR [edx+120], xmm0

; 581  : 	raw->wind_effect_position.y = 0.0;

  0037a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0037d	0f 57 c0	 xorps	 xmm0, xmm0
  00380	f3 0f 11 40 7c	 movss	 DWORD PTR [eax+124], xmm0

; 582  : 	raw->wind_effect_position.z = MIN_MAP_Z + ((MAX_MAP_Z - MIN_MAP_Z) * frand1 ());

  00385	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0038f	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00394	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00399	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0039f	c1 f9 10	 sar	 ecx, 16			; 00000010H
  003a2	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  003a8	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  003ac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  003b4	f3 0f 10 0d 44
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  003bc	f3 0f 5c 0d 2c
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  003c4	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  003c8	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  003cc	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  003d4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003dc	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  003df	f3 0f 11 82 80
	00 00 00	 movss	 DWORD PTR [edx+128], xmm0

; 583  : 
; 584  : 	theta = PI * sfrand1 ();

  003e7	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  003f1	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  003f6	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  003fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00401	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00404	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0040a	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00410	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00414	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  0041c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb60000000
  00424	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00428	f3 0f 11 45 f8	 movss	 DWORD PTR _theta$[ebp], xmm0

; 585  : 
; 586  : 	raw->wind_effect_velocity.x = sin (theta) * weather_wind_speed;

  0042d	51		 push	 ecx
  0042e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _theta$[ebp]
  00433	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00438	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0043d	d9 5d b4	 fstp	 DWORD PTR tv325[ebp]
  00440	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv325[ebp]
  00445	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?weather_wind_speed@@3MA
  0044d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00450	f3 0f 11 80 84
	00 00 00	 movss	 DWORD PTR [eax+132], xmm0

; 587  : 	raw->wind_effect_velocity.y = 0.0;

  00458	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0045b	0f 57 c0	 xorps	 xmm0, xmm0
  0045e	f3 0f 11 80 88
	00 00 00	 movss	 DWORD PTR [eax+136], xmm0

; 588  : 	raw->wind_effect_velocity.z = cos (theta) * weather_wind_speed;

  00466	51		 push	 ecx
  00467	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _theta$[ebp]
  0046c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00471	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00476	d9 5d b4	 fstp	 DWORD PTR tv334[ebp]
  00479	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv334[ebp]
  0047e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?weather_wind_speed@@3MA
  00486	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00489	f3 0f 11 80 8c
	00 00 00	 movss	 DWORD PTR [eax+140], xmm0

; 589  : }

  00491	5f		 pop	 edi
  00492	5e		 pop	 esi
  00493	5b		 pop	 ebx
  00494	8b e5		 mov	 esp, ebp
  00496	5d		 pop	 ebp
  00497	c2 04 00	 ret	 4
?set_session_random_weather_mode@@YGXPAUENTITY@@@Z ENDP	; set_session_random_weather_mode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_weather_mode$ = 12					; size = 4
?set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z PROC ; set_session_fixed_weather_mode, COMDAT

; 516  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 517  : 	session
; 518  : 		*raw;
; 519  : 
; 520  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@set_sessio
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_sessio:

; 521  : 
; 522  : 	ASSERT (en);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@set_sessio
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_sessio:

; 523  : 
; 524  : 	raw = (session *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 525  : 
; 526  : 	raw->local_weather_model = FALSE;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00054	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0005a	81 e1 ff ff ff
	df		 and	 ecx, -536870913		; dfffffffH
  00060	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00063	89 8a a4 00 00
	00		 mov	 DWORD PTR [edx+164], ecx

; 527  : 
; 528  : 	raw->weather_mode = weather_mode;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006c	8b 4d 0c	 mov	 ecx, DWORD PTR _weather_mode$[ebp]
  0006f	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 529  : 	raw->target_weather_mode = weather_mode;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00075	8b 4d 0c	 mov	 ecx, DWORD PTR _weather_mode$[ebp]
  00078	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 530  : 
; 531  : 	raw->weather_mode_transitional_status = 0.0;

  0007b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0007e	0f 57 c0	 xorps	 xmm0, xmm0
  00081	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 532  : }

  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 08 00	 ret	 8
?set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z ENDP ; set_session_fixed_weather_mode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z
_TEXT	SEGMENT
_transitional_status$ = -12				; size = 4
_twm$ = -8						; size = 4
_cwm$ = -4						; size = 4
_pos$ = 8						; size = 4
?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z PROC ; get_simple_session_weather_at_point, COMDAT

; 491  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 492  : 	weathermodes
; 493  : 		cwm,
; 494  : 		twm;
; 495  : 
; 496  : 	float
; 497  : 		transitional_status;
; 498  : 
; 499  : 	get_session_weather_at_point (pos, &cwm, &twm, &transitional_status);

  00009	8d 45 f4	 lea	 eax, DWORD PTR _transitional_status$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR _twm$[ebp]
  00010	51		 push	 ecx
  00011	8d 55 fc	 lea	 edx, DWORD PTR _cwm$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _pos$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z ; get_session_weather_at_point

; 500  : 
; 501  : 	if (transitional_status < 0.5)

  0001e	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _transitional_status$[ebp]
  00023	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0002b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0002f	76 07		 jbe	 SHORT $LN2@get_simple

; 502  : 	{
; 503  : 		return cwm;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _cwm$[ebp]
  00034	eb 05		 jmp	 SHORT $LN3@get_simple

; 504  : 	}
; 505  : 	else

  00036	eb 03		 jmp	 SHORT $LN3@get_simple
$LN2@get_simple:

; 506  : 	{
; 507  : 		return twm;

  00038	8b 45 f8	 mov	 eax, DWORD PTR _twm$[ebp]
$LN3@get_simple:

; 508  : 	}
; 509  : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z ENDP ; get_simple_session_weather_at_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z
_TEXT	SEGMENT
tv156 = -100						; size = 8
tv157 = -92						; size = 8
_ts$ = -20						; size = 4
_twm$ = -16						; size = 4
_cwm$ = -12						; size = 4
_raw$ = -8						; size = 4
_range$ = -4						; size = 4
_pos$ = 8						; size = 4
_current_weather_mode$ = 12				; size = 4
_target_weather_mode$ = 16				; size = 4
_transitional_state$ = 20				; size = 4
?get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z PROC ; get_session_weather_at_point, COMDAT

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 341  : 	float
; 342  : 		range;
; 343  : 
; 344  : 	session
; 345  : 		*raw;
; 346  : 
; 347  : 	weathermodes
; 348  : 		cwm,
; 349  : 		twm;
; 350  : 
; 351  : 	float
; 352  : 		ts;
; 353  : 
; 354  : 	ASSERT (get_session_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	75 18		 jne	 SHORT $LN2@get_sessio
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z@4JA
  00017	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_sessio:

; 355  : 
; 356  : 	ASSERT (pos);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@get_sessio
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z@4JA
  00035	83 c0 10	 add	 eax, 16			; 00000010H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_sessio:

; 357  : 
; 358  : 	raw = (session *) get_local_entity_data (get_session_entity ());

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0004d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00050	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 359  : 
; 360  : 	if (raw->local_weather_model)

  00053	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00056	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0005c	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  0005f	83 e1 01	 and	 ecx, 1
  00062	0f 84 df 01 00
	00		 je	 $LN4@get_sessio

; 361  : 	{
; 362  : 		//
; 363  : 		// local weather model
; 364  : 		//
; 365  : 
; 366  : 		if (raw->weather_radius == 0.0)

  00068	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0006b	f3 0f 5a 40 30	 cvtss2sd xmm0, DWORD PTR [eax+48]
  00070	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00078	9f		 lahf
  00079	f6 c4 44	 test	 ah, 68			; 00000044H
  0007c	7a 20		 jp	 SHORT $LN6@get_sessio

; 367  : 		{
; 368  : 			//
; 369  : 			// weather is fine all across the map
; 370  : 			//
; 371  : 
; 372  : 			cwm = WEATHERMODE_DRY;

  0007e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _cwm$[ebp], 1

; 373  : 			twm = WEATHERMODE_DRY;

  00085	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 1

; 374  : 
; 375  : 			ts = 1.0;

  0008c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00094	f3 0f 11 45 ec	 movss	 DWORD PTR _ts$[ebp], xmm0

; 376  : 		}
; 377  : 		else

  00099	e9 a7 01 00 00	 jmp	 $LN7@get_sessio
$LN6@get_sessio:

; 378  : 		{
; 379  : 			//
; 380  : 			// there is some bad weather somewhere on the map
; 381  : 			//
; 382  : 
; 383  : 			range = get_approx_2d_range (pos, &raw->weather_position);

  0009e	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000a1	83 c0 44	 add	 eax, 68			; 00000044H
  000a4	50		 push	 eax
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  000a8	51		 push	 ecx
  000a9	e8 00 00 00 00	 call	 ?get_approx_2d_range@@YGMPBUVEC3D@@0@Z ; get_approx_2d_range
  000ae	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 384  : 
; 385  : 			if (range >= raw->weather_radius)

  000b1	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000b4	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  000b9	0f 2f 40 30	 comiss	 xmm0, DWORD PTR [eax+48]
  000bd	72 1b		 jb	 SHORT $LN8@get_sessio

; 386  : 			{
; 387  : 				//
; 388  : 				// camera is in the dry zone
; 389  : 				//
; 390  : 
; 391  : 				cwm = WEATHERMODE_DRY;

  000bf	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _cwm$[ebp], 1

; 392  : 				twm = WEATHERMODE_DRY;

  000c6	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 1

; 393  : 
; 394  : 				ts = 0.0;

  000cd	0f 57 c0	 xorps	 xmm0, xmm0
  000d0	f3 0f 11 45 ec	 movss	 DWORD PTR _ts$[ebp], xmm0
  000d5	e9 17 01 00 00	 jmp	 $LN15@get_sessio
$LN8@get_sessio:

; 395  : 			}
; 396  : 			else if (range >= (raw->weather_radius * 0.666))

  000da	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  000df	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000e2	f3 0f 5a 48 30	 cvtss2sd xmm1, DWORD PTR [eax+48]
  000e7	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe54fdf3b645a1d
  000ef	66 0f 2f c1	 comisd	 xmm0, xmm1
  000f3	72 53		 jb	 SHORT $LN10@get_sessio

; 397  : 			{
; 398  : 				//
; 399  : 				// camera is in the dry / light rain zone
; 400  : 				//
; 401  : 
; 402  : 				cwm = WEATHERMODE_DRY;

  000f5	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _cwm$[ebp], 1

; 403  : 				//VJ 051014 link winter/summer to snow/rain
; 404  : 				if (get_global_season() == SESSION_SEASON_WINTER)

  000fc	83 3d 14 04 00
	00 03		 cmp	 DWORD PTR ?current_map_info@@3UCUSTOM_MAP_INFO@@A+1044, 3
  00103	75 09		 jne	 SHORT $LN12@get_sessio

; 405  : 					twm = WEATHERMODE_SNOW;

  00105	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 4

; 406  : 				else

  0010c	eb 07		 jmp	 SHORT $LN13@get_sessio
$LN12@get_sessio:

; 407  : 					twm = WEATHERMODE_LIGHT_RAIN;

  0010e	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 2
$LN13@get_sessio:

; 408  : 
; 409  : 				ts = (raw->weather_radius - range) / (raw->weather_radius * 0.333);

  00115	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00118	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  0011d	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _range$[ebp]
  00122	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00126	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00129	f3 0f 5a 49 30	 cvtss2sd xmm1, DWORD PTR [ecx+48]
  0012e	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd54fdf3b645a1d
  00136	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0013a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013e	f3 0f 11 45 ec	 movss	 DWORD PTR _ts$[ebp], xmm0
  00143	e9 a9 00 00 00	 jmp	 $LN15@get_sessio
$LN10@get_sessio:

; 410  : 			}
; 411  : 			else if (range >= (raw->weather_radius * 0.333))

  00148	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  0014d	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00150	f3 0f 5a 48 30	 cvtss2sd xmm1, DWORD PTR [eax+48]
  00155	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd54fdf3b645a1d
  0015d	66 0f 2f c1	 comisd	 xmm0, xmm1
  00161	72 5f		 jb	 SHORT $LN14@get_sessio

; 412  : 			{
; 413  : 				//
; 414  : 				// camera is in the light rain / heavy rain zone
; 415  : 				//
; 416  : 
; 417  : 				//VJ 051014 link winter/summer to snow/rain
; 418  : 				if (get_global_season() == SESSION_SEASON_WINTER)

  00163	83 3d 14 04 00
	00 03		 cmp	 DWORD PTR ?current_map_info@@3UCUSTOM_MAP_INFO@@A+1044, 3
  0016a	75 10		 jne	 SHORT $LN16@get_sessio

; 419  : 				{
; 420  : 					cwm = WEATHERMODE_SNOW;

  0016c	c7 45 f4 04 00
	00 00		 mov	 DWORD PTR _cwm$[ebp], 4

; 421  : 					twm = WEATHERMODE_SNOW;

  00173	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 4

; 422  : 				}
; 423  : 				else

  0017a	eb 0e		 jmp	 SHORT $LN17@get_sessio
$LN16@get_sessio:

; 424  : 				{
; 425  : 					cwm = WEATHERMODE_LIGHT_RAIN;

  0017c	c7 45 f4 02 00
	00 00		 mov	 DWORD PTR _cwm$[ebp], 2

; 426  : 					twm = WEATHERMODE_HEAVY_RAIN;

  00183	c7 45 f0 03 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 3
$LN17@get_sessio:

; 427  : 				}
; 428  : 
; 429  : 				ts = ((raw->weather_radius * 0.666) - range) / (raw->weather_radius * 0.333);

  0018a	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0018d	f3 0f 5a 40 30	 cvtss2sd xmm0, DWORD PTR [eax+48]
  00192	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe54fdf3b645a1d
  0019a	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _range$[ebp]
  0019f	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001a3	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  001a6	f3 0f 5a 49 30	 cvtss2sd xmm1, DWORD PTR [ecx+48]
  001ab	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd54fdf3b645a1d
  001b3	f2 0f 5e c1	 divsd	 xmm0, xmm1
  001b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001bb	f3 0f 11 45 ec	 movss	 DWORD PTR _ts$[ebp], xmm0

; 430  : 			}
; 431  : 			else

  001c0	eb 2f		 jmp	 SHORT $LN15@get_sessio
$LN14@get_sessio:

; 432  : 			{
; 433  : 				//
; 434  : 				// camera is in the heavy rain zone
; 435  : 				//
; 436  : 
; 437  : 				//VJ 051014 link winter/summer to snow/rain
; 438  : 				if (get_global_season() == SESSION_SEASON_WINTER)

  001c2	83 3d 14 04 00
	00 03		 cmp	 DWORD PTR ?current_map_info@@3UCUSTOM_MAP_INFO@@A+1044, 3
  001c9	75 10		 jne	 SHORT $LN18@get_sessio

; 439  : 				{
; 440  : 					cwm = WEATHERMODE_SNOW;

  001cb	c7 45 f4 04 00
	00 00		 mov	 DWORD PTR _cwm$[ebp], 4

; 441  : 					twm = WEATHERMODE_SNOW;

  001d2	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 4

; 442  : 				}
; 443  : 				else

  001d9	eb 0e		 jmp	 SHORT $LN19@get_sessio
$LN18@get_sessio:

; 444  : 				{
; 445  : 					cwm = WEATHERMODE_HEAVY_RAIN;

  001db	c7 45 f4 03 00
	00 00		 mov	 DWORD PTR _cwm$[ebp], 3

; 446  : 					twm = WEATHERMODE_HEAVY_RAIN;

  001e2	c7 45 f0 03 00
	00 00		 mov	 DWORD PTR _twm$[ebp], 3
$LN19@get_sessio:

; 447  : 				}
; 448  : 				ts = 0.0;

  001e9	0f 57 c0	 xorps	 xmm0, xmm0
  001ec	f3 0f 11 45 ec	 movss	 DWORD PTR _ts$[ebp], xmm0
$LN15@get_sessio:

; 449  : 			}
; 450  : 
; 451  : 			ts = bound (ts, 0.0, 1.0);

  001f1	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _ts$[ebp]
  001f6	0f 57 c9	 xorps	 xmm1, xmm1
  001f9	66 0f 2f c8	 comisd	 xmm1, xmm0
  001fd	76 0a		 jbe	 SHORT $LN26@get_sessio
  001ff	0f 57 c0	 xorps	 xmm0, xmm0
  00202	f2 0f 11 45 a4	 movsd	 QWORD PTR tv157[ebp], xmm0
  00207	eb 32		 jmp	 SHORT $LN27@get_sessio
$LN26@get_sessio:
  00209	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _ts$[ebp]
  0020e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00216	76 0f		 jbe	 SHORT $LN24@get_sessio
  00218	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00220	f2 0f 11 45 9c	 movsd	 QWORD PTR tv156[ebp], xmm0
  00225	eb 0a		 jmp	 SHORT $LN25@get_sessio
$LN24@get_sessio:
  00227	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _ts$[ebp]
  0022c	f2 0f 11 45 9c	 movsd	 QWORD PTR tv156[ebp], xmm0
$LN25@get_sessio:
  00231	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv156[ebp]
  00236	f2 0f 11 45 a4	 movsd	 QWORD PTR tv157[ebp], xmm0
$LN27@get_sessio:
  0023b	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv157[ebp]
  00240	f3 0f 11 45 ec	 movss	 DWORD PTR _ts$[ebp], xmm0
$LN7@get_sessio:

; 452  : 		}
; 453  : 	}
; 454  : 	else

  00245	eb 1f		 jmp	 SHORT $LN5@get_sessio
$LN4@get_sessio:

; 455  : 	{
; 456  : 		//
; 457  : 		// global weather model
; 458  : 		//
; 459  : 
; 460  : 		cwm = raw->weather_mode;

  00247	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0024a	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0024d	89 4d f4	 mov	 DWORD PTR _cwm$[ebp], ecx

; 461  : 		twm = raw->target_weather_mode;

  00250	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00253	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00256	89 4d f0	 mov	 DWORD PTR _twm$[ebp], ecx

; 462  : 
; 463  : 		ts = raw->weather_mode_transitional_status;

  00259	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0025c	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00261	f3 0f 11 45 ec	 movss	 DWORD PTR _ts$[ebp], xmm0
$LN5@get_sessio:

; 464  : 	}
; 465  : 
; 466  : 	//
; 467  : 	// return required values
; 468  : 	//
; 469  : 
; 470  : 	if (current_weather_mode)

  00266	83 7d 0c 00	 cmp	 DWORD PTR _current_weather_mode$[ebp], 0
  0026a	74 08		 je	 SHORT $LN20@get_sessio

; 471  : 	{
; 472  : 		*current_weather_mode = cwm;

  0026c	8b 45 0c	 mov	 eax, DWORD PTR _current_weather_mode$[ebp]
  0026f	8b 4d f4	 mov	 ecx, DWORD PTR _cwm$[ebp]
  00272	89 08		 mov	 DWORD PTR [eax], ecx
$LN20@get_sessio:

; 473  : 	}
; 474  : 
; 475  : 	if (target_weather_mode)

  00274	83 7d 10 00	 cmp	 DWORD PTR _target_weather_mode$[ebp], 0
  00278	74 08		 je	 SHORT $LN21@get_sessio

; 476  : 	{
; 477  : 		*target_weather_mode = twm;

  0027a	8b 45 10	 mov	 eax, DWORD PTR _target_weather_mode$[ebp]
  0027d	8b 4d f0	 mov	 ecx, DWORD PTR _twm$[ebp]
  00280	89 08		 mov	 DWORD PTR [eax], ecx
$LN21@get_sessio:

; 478  : 	}
; 479  : 
; 480  : 	if (transitional_state)

  00282	83 7d 14 00	 cmp	 DWORD PTR _transitional_state$[ebp], 0
  00286	74 0c		 je	 SHORT $LN22@get_sessio

; 481  : 	{
; 482  : 		*transitional_state = ts;

  00288	8b 45 14	 mov	 eax, DWORD PTR _transitional_state$[ebp]
  0028b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ts$[ebp]
  00290	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN22@get_sessio:

; 483  : 	}
; 484  : }

  00294	5f		 pop	 edi
  00295	5e		 pop	 esi
  00296	5b		 pop	 ebx
  00297	8b e5		 mov	 esp, ebp
  00299	5d		 pop	 ebp
  0029a	c2 10 00	 ret	 16			; 00000010H
?get_session_weather_at_point@@YGXPAUVEC3D@@PAW4WEATHERMODES@@1PAM@Z ENDP ; get_session_weather_at_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_session_preset_time_of_day@@YGMW4SESSION_TIME_OF_DAY_SETTINGS@@@Z
_TEXT	SEGMENT
_loop$ = -4						; size = 4
_preset_enum$ = 8					; size = 4
?get_session_preset_time_of_day@@YGMW4SESSION_TIME_OF_DAY_SETTINGS@@@Z PROC ; get_session_preset_time_of_day, COMDAT

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 315  : 	int
; 316  : 		loop;
; 317  : 
; 318  : 	loop = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
$LN2@get_sessio:

; 319  : 
; 320  : 	while (session_preset_time_of_day_table [loop].preset_enum >= 0)

  00010	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00013	83 3c c5 00 00
	00 00 00	 cmp	 DWORD PTR ?session_preset_time_of_day_table@@3PAUSESSION_PRESET_TIME_OF_DAY_TABLE@@A[eax*8], 0
  0001b	7c 26		 jl	 SHORT $LN3@get_sessio

; 321  : 	{
; 322  : 		if (session_preset_time_of_day_table [loop].preset_enum == preset_enum)

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00020	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?session_preset_time_of_day_table@@3PAUSESSION_PRESET_TIME_OF_DAY_TABLE@@A[eax*8]
  00027	3b 4d 08	 cmp	 ecx, DWORD PTR _preset_enum$[ebp]
  0002a	75 0c		 jne	 SHORT $LN4@get_sessio

; 323  : 		{
; 324  : 			return session_preset_time_of_day_table [loop].time;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0002f	d9 04 c5 04 00
	00 00		 fld	 DWORD PTR ?session_preset_time_of_day_table@@3PAUSESSION_PRESET_TIME_OF_DAY_TABLE@@A[eax*8+4]
  00036	eb 1e		 jmp	 SHORT $LN1@get_sessio
$LN4@get_sessio:

; 325  : 		}
; 326  : 
; 327  : 		loop ++;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax

; 328  : 	}

  00041	eb cd		 jmp	 SHORT $LN2@get_sessio
$LN3@get_sessio:

; 329  : 
; 330  : 	debug_fatal ("SESSION: No time of day specified for preset %d", preset_enum);

  00043	8b 45 08	 mov	 eax, DWORD PTR _preset_enum$[ebp]
  00046	50		 push	 eax
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@HHINHKAH@SESSION?3?5No?5time?5of?5day?5specifi@
  0004c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00051	83 c4 08	 add	 esp, 8

; 331  : 
; 332  : 	return 0.0;

  00054	d9 ee		 fldz
$LN1@get_sessio:

; 333  : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?get_session_preset_time_of_day@@YGMW4SESSION_TIME_OF_DAY_SETTINGS@@@Z ENDP ; get_session_preset_time_of_day
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_session_random_start_time_of_day@@YGMXZ
_TEXT	SEGMENT
tv140 = -80						; size = 8
_start_time$ = -8					; size = 4
_index$ = -4						; size = 4
?get_session_random_start_time_of_day@@YGMXZ PROC	; get_session_random_start_time_of_day, COMDAT

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 265  : 	int
; 266  : 		index;
; 267  : 
; 268  : 	float
; 269  : 		start_time;
; 270  : 
; 271  : 	initialise_random_number_generator ();

  00009	e8 00 00 00 00	 call	 ?initialise_random_number_generator@@YGXXZ ; initialise_random_number_generator

; 272  : 
; 273  : 	index = rand16 () % NUM_RANDOM_SESSION_START_TIMES;

  0000e	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00018	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0001d	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00027	c1 f8 10	 sar	 eax, 16			; 00000010H
  0002a	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0002f	99		 cdq
  00030	b9 06 00 00 00	 mov	 ecx, 6
  00035	f7 f9		 idiv	 ecx
  00037	89 55 fc	 mov	 DWORD PTR _index$[ebp], edx

; 274  : 
; 275  : 	start_time = random_session_start_times [index];

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  0003d	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?random_session_start_times@@3PAMA[eax*4]
  00046	f3 0f 11 45 f8	 movss	 DWORD PTR _start_time$[ebp], xmm0

; 276  : 
; 277  : 	start_time += floor (sfrand1 () * ONE_MINUTE * 15.0);

  0004b	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00055	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0005a	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00065	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00068	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0006e	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00074	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00078	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  00080	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@404e000000000000
  00088	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@402e000000000000
  00090	83 ec 08	 sub	 esp, 8
  00093	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__floor
  0009e	83 c4 08	 add	 esp, 8
  000a1	dd 5d b0	 fstp	 QWORD PTR tv140[ebp]
  000a4	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _start_time$[ebp]
  000a9	f2 0f 58 45 b0	 addsd	 xmm0, QWORD PTR tv140[ebp]
  000ae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b2	f3 0f 11 45 f8	 movss	 DWORD PTR _start_time$[ebp], xmm0

; 278  : 
; 279  : 	if (start_time < 0.0)

  000b7	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _start_time$[ebp]
  000bc	0f 57 c9	 xorps	 xmm1, xmm1
  000bf	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c3	76 18		 jbe	 SHORT $LN2@get_sessio

; 280  : 	{
; 281  : 		start_time += (24.0 * ONE_HOUR);

  000c5	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _start_time$[ebp]
  000ca	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40f5180000000000
  000d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d6	f3 0f 11 45 f8	 movss	 DWORD PTR _start_time$[ebp], xmm0
  000db	eb 25		 jmp	 SHORT $LN4@get_sessio
$LN2@get_sessio:

; 282  : 	}
; 283  : 	else if (start_time >= 24.0 * ONE_HOUR)

  000dd	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _start_time$[ebp]
  000e2	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@40f5180000000000
  000ea	72 16		 jb	 SHORT $LN4@get_sessio

; 284  : 	{
; 285  : 		start_time -= (24.0 * ONE_HOUR);

  000ec	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _start_time$[ebp]
  000f1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40f5180000000000
  000f9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000fd	f3 0f 11 45 f8	 movss	 DWORD PTR _start_time$[ebp], xmm0
$LN4@get_sessio:

; 286  : 	}
; 287  : 
; 288  : 	return start_time;

  00102	d9 45 f8	 fld	 DWORD PTR _start_time$[ebp]

; 289  : }

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c3		 ret	 0
?get_session_random_start_time_of_day@@YGMXZ ENDP	; get_session_random_start_time_of_day
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_segment_time_of_day@@YGMW4DAY_SEGMENT_TYPES@@@Z
_TEXT	SEGMENT
tv64 = -72						; size = 4
_time_of_day$ = -4					; size = 4
_segment$ = 8						; size = 4
?get_segment_time_of_day@@YGMW4DAY_SEGMENT_TYPES@@@Z PROC ; get_segment_time_of_day, COMDAT

; 211  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 212  : 	float
; 213  : 		time_of_day;
; 214  : 
; 215  : 	switch (segment)

  00009	8b 45 08	 mov	 eax, DWORD PTR _segment$[ebp]
  0000c	89 45 b8	 mov	 DWORD PTR tv64[ebp], eax
  0000f	83 7d b8 03	 cmp	 DWORD PTR tv64[ebp], 3
  00013	77 44		 ja	 SHORT $LN2@get_segmen
  00015	8b 4d b8	 mov	 ecx, DWORD PTR tv64[ebp]
  00018	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN9@get_segmen[ecx*4]
$LN4@get_segmen:

; 216  : 	{
; 217  : 		case DAY_SEGMENT_TYPE_DAWN:
; 218  : 		{
; 219  : 			time_of_day = (ONE_HOUR * 6.0);

  0001f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46a8c000
  00027	f3 0f 11 45 fc	 movss	 DWORD PTR _time_of_day$[ebp], xmm0

; 220  : 
; 221  : 			break;

  0002c	eb 2b		 jmp	 SHORT $LN2@get_segmen
$LN5@get_segmen:

; 222  : 		}
; 223  : 		case DAY_SEGMENT_TYPE_DAY:
; 224  : 		{
; 225  : 			time_of_day = (ONE_HOUR * 8.0);

  0002e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46e10000
  00036	f3 0f 11 45 fc	 movss	 DWORD PTR _time_of_day$[ebp], xmm0

; 226  : 
; 227  : 			break;

  0003b	eb 1c		 jmp	 SHORT $LN2@get_segmen
$LN6@get_segmen:

; 228  : 		}
; 229  : 		case DAY_SEGMENT_TYPE_DUSK:
; 230  : 		{
; 231  : 			time_of_day = (ONE_HOUR * 18.0);

  0003d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@477d2000
  00045	f3 0f 11 45 fc	 movss	 DWORD PTR _time_of_day$[ebp], xmm0

; 232  : 
; 233  : 			break;

  0004a	eb 0d		 jmp	 SHORT $LN2@get_segmen
$LN7@get_segmen:

; 234  : 		}
; 235  : 		case DAY_SEGMENT_TYPE_NIGHT:
; 236  : 		{
; 237  : 			time_of_day = (ONE_HOUR * 20.0);

  0004c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@478ca000
  00054	f3 0f 11 45 fc	 movss	 DWORD PTR _time_of_day$[ebp], xmm0
$LN2@get_segmen:

; 238  : 
; 239  : 			break;
; 240  : 		}
; 241  : 	}
; 242  : 
; 243  : 	return (time_of_day);

  00059	d9 45 fc	 fld	 DWORD PTR _time_of_day$[ebp]

; 244  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
  00065	0f 1f 00	 npad	 3
$LN9@get_segmen:
  00068	00 00 00 00	 DD	 $LN4@get_segmen
  0006c	00 00 00 00	 DD	 $LN5@get_segmen
  00070	00 00 00 00	 DD	 $LN6@get_segmen
  00074	00 00 00 00	 DD	 $LN7@get_segmen
?get_segment_time_of_day@@YGMW4DAY_SEGMENT_TYPES@@@Z ENDP ; get_segment_time_of_day
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?get_day_segment_type@@YG?AW4DAY_SEGMENT_TYPES@@M@Z
_TEXT	SEGMENT
_type$ = -4						; size = 4
_time_of_day$ = 8					; size = 4
?get_day_segment_type@@YG?AW4DAY_SEGMENT_TYPES@@M@Z PROC ; get_day_segment_type, COMDAT

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 179  : 	day_segment_types
; 180  : 		type;
; 181  : 
; 182  : 	if (time_of_day < (ONE_HOUR * 6.0))

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _time_of_day$[ebp]
  0000e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40d5180000000000
  00016	66 0f 2f c8	 comisd	 xmm1, xmm0
  0001a	76 09		 jbe	 SHORT $LN2@get_day_se

; 183  : 	{
; 184  : 		type = DAY_SEGMENT_TYPE_NIGHT;

  0001c	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _type$[ebp], 3
  00023	eb 5b		 jmp	 SHORT $LN9@get_day_se
$LN2@get_day_se:

; 185  : 	}
; 186  : 	else if (time_of_day < (ONE_HOUR * 8.0))

  00025	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _time_of_day$[ebp]
  0002a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40dc200000000000
  00032	66 0f 2f c8	 comisd	 xmm1, xmm0
  00036	76 09		 jbe	 SHORT $LN4@get_day_se

; 187  : 	{
; 188  : 		type = DAY_SEGMENT_TYPE_DAWN;

  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _type$[ebp], 0
  0003f	eb 3f		 jmp	 SHORT $LN9@get_day_se
$LN4@get_day_se:

; 189  : 	}
; 190  : 	else if (time_of_day < (ONE_HOUR * 18.0))

  00041	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _time_of_day$[ebp]
  00046	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40efa40000000000
  0004e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00052	76 09		 jbe	 SHORT $LN6@get_day_se

; 191  : 	{
; 192  : 		type = DAY_SEGMENT_TYPE_DAY;

  00054	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _type$[ebp], 1
  0005b	eb 23		 jmp	 SHORT $LN9@get_day_se
$LN6@get_day_se:

; 193  : 	}
; 194  : 	else if (time_of_day < (ONE_HOUR * 20.0))

  0005d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _time_of_day$[ebp]
  00062	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40f1940000000000
  0006a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0006e	76 09		 jbe	 SHORT $LN8@get_day_se

; 195  : 	{
; 196  : 		type = DAY_SEGMENT_TYPE_DUSK;

  00070	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR _type$[ebp], 2

; 197  : 	}
; 198  : 	else

  00077	eb 07		 jmp	 SHORT $LN9@get_day_se
$LN8@get_day_se:

; 199  : 	{
; 200  : 		type = DAY_SEGMENT_TYPE_NIGHT;

  00079	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _type$[ebp], 3
$LN9@get_day_se:

; 201  : 	}
; 202  : 
; 203  : 	return (type);

  00080	8b 45 fc	 mov	 eax, DWORD PTR _type$[ebp]

; 204  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?get_day_segment_type@@YG?AW4DAY_SEGMENT_TYPES@@M@Z ENDP ; get_day_segment_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z
_TEXT	SEGMENT
tv135 = -92						; size = 4
tv83 = -92						; size = 4
tv95 = -88						; size = 4
tv75 = -88						; size = 4
$T1 = -84						; size = 4
_count$ = -16						; size = 4
_elapsed_time$ = -12					; size = 4
_time_of_day$ = -8					; size = 4
_start_time$ = -4					; size = 4
_en$ = 8						; size = 4
_day$ = 12						; size = 4
?calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z PROC ; calculate_session_time_of_day, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 138  : 	float
; 139  : 		start_time,
; 140  : 		time_of_day,
; 141  : 		elapsed_time;
; 142  : 
; 143  : 	int
; 144  : 		count;
; 145  : 
; 146  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@calculate_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA
  00014	83 c0 09	 add	 eax, 9
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@calculate_:

; 147  : 
; 148  : 	elapsed_time = get_local_entity_float_value (en, FLOAT_TYPE_ELAPSED_TIME);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN7@calculate_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d a8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN8@calculate_
$LN7@calculate_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA
  0003d	83 c2 0b	 add	 edx, 11			; 0000000bH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN8@calculate_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN9@calculate_
  00061	c7 45 a4 23 00
	00 00		 mov	 DWORD PTR tv83[ebp], 35	; 00000023H
  00068	eb 21		 jmp	 SHORT $LN10@calculate_
$LN9@calculate_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA
  00070	83 c2 0b	 add	 edx, 11			; 0000000bH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN10@calculate_:
  0008b	6a 23		 push	 35			; 00000023H
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00090	51		 push	 ecx
  00091	69 55 a8 bc 02
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 700
  00098	8b 45 a4	 mov	 eax, DWORD PTR tv83[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	d9 5d f4	 fstp	 DWORD PTR _elapsed_time$[ebp]

; 149  : 
; 150  : 	start_time = get_local_entity_float_value (en, FLOAT_TYPE_START_TIME);

  000a7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ab	74 0a		 je	 SHORT $LN11@calculate_
  000ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	89 4d a8	 mov	 DWORD PTR tv95[ebp], ecx
  000b5	eb 21		 jmp	 SHORT $LN12@calculate_
$LN11@calculate_:
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA
  000bd	83 c2 0d	 add	 edx, 13			; 0000000dH
  000c0	52		 push	 edx
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN12@calculate_:
  000d8	b9 01 00 00 00	 mov	 ecx, 1
  000dd	85 c9		 test	 ecx, ecx
  000df	74 09		 je	 SHORT $LN13@calculate_
  000e1	c7 45 a4 7d 00
	00 00		 mov	 DWORD PTR tv135[ebp], 125 ; 0000007dH
  000e8	eb 21		 jmp	 SHORT $LN14@calculate_
$LN13@calculate_:
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z@4JA
  000f0	83 c2 0d	 add	 edx, 13			; 0000000dH
  000f3	52		 push	 edx
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN14@calculate_:
  0010b	6a 7d		 push	 125			; 0000007dH
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00110	51		 push	 ecx
  00111	69 55 a8 bc 02
	00 00		 imul	 edx, DWORD PTR tv95[ebp], 700
  00118	8b 45 a4	 mov	 eax, DWORD PTR tv135[ebp]
  0011b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00122	ff d1		 call	 ecx
  00124	d9 5d fc	 fstp	 DWORD PTR _start_time$[ebp]

; 151  : 
; 152  : 	time_of_day = start_time + elapsed_time;

  00127	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _start_time$[ebp]
  0012c	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _elapsed_time$[ebp]
  00131	f3 0f 11 45 f8	 movss	 DWORD PTR _time_of_day$[ebp], xmm0

; 153  : 
; 154  : 	count = 0;

  00136	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
$LN2@calculate_:

; 155  : 
; 156  : 	while (time_of_day >= ONE_DAY)

  0013d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  00142	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@47a8c000
  00149	72 1d		 jb	 SHORT $LN3@calculate_

; 157  : 	{
; 158  : 		time_of_day -= ONE_DAY;

  0014b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  00150	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@47a8c000
  00158	f3 0f 11 45 f8	 movss	 DWORD PTR _time_of_day$[ebp], xmm0

; 159  : 
; 160  : 		count ++;

  0015d	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  00160	83 c0 01	 add	 eax, 1
  00163	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 161  : 	}

  00166	eb d5		 jmp	 SHORT $LN2@calculate_
$LN3@calculate_:

; 162  : 
; 163  : 	time_of_day = max (time_of_day, 0.0f);

  00168	0f 57 c0	 xorps	 xmm0, xmm0
  0016b	f3 0f 11 45 ac	 movss	 DWORD PTR $T1[ebp], xmm0
  00170	8d 45 ac	 lea	 eax, DWORD PTR $T1[ebp]
  00173	50		 push	 eax
  00174	8d 4d f8	 lea	 ecx, DWORD PTR _time_of_day$[ebp]
  00177	51		 push	 ecx
  00178	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0017d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00181	f3 0f 11 45 f8	 movss	 DWORD PTR _time_of_day$[ebp], xmm0

; 164  : 
; 165  : 	if (day)

  00186	83 7d 0c 00	 cmp	 DWORD PTR _day$[ebp], 0
  0018a	74 08		 je	 SHORT $LN5@calculate_

; 166  : 	{
; 167  : 		*day = count;

  0018c	8b 45 0c	 mov	 eax, DWORD PTR _day$[ebp]
  0018f	8b 4d f0	 mov	 ecx, DWORD PTR _count$[ebp]
  00192	89 08		 mov	 DWORD PTR [eax], ecx
$LN5@calculate_:

; 168  : 	}
; 169  : 
; 170  : 	return time_of_day;

  00194	d9 45 f8	 fld	 DWORD PTR _time_of_day$[ebp]

; 171  : }

  00197	5f		 pop	 edi
  00198	5e		 pop	 esi
  00199	5b		 pop	 ebx
  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c2 08 00	 ret	 8
?calculate_session_time_of_day@@YGMPAUENTITY@@PAH@Z ENDP ; calculate_session_time_of_day
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\session.c
;	COMDAT ?set_session_entity@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv74 = -68						; size = 4
_en$ = 8						; size = 4
?set_session_entity@@YGXPAUENTITY@@@Z PROC		; set_session_entity, COMDAT

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 120  : 	session_entity = en;

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?session_entity@@3PAUENTITY@@A, eax ; session_entity

; 121  : 
; 122  : 	if (en)

  00011	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00015	74 58		 je	 SHORT $LN2@set_sessio

; 123  : 	{
; 124  : 		debug_log ("Setting session_entity (type = %s, index = %d)", get_local_entity_type_name (en), get_local_entity_index (en));

  00017	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001b	74 0a		 je	 SHORT $LN5@set_sessio
  0001d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	89 4d bc	 mov	 DWORD PTR tv74[ebp], ecx
  00025	eb 21		 jmp	 SHORT $LN6@set_sessio
$LN5@set_sessio:
  00027	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_session_entity@@YGXPAUENTITY@@@Z@4JA
  0002d	83 c2 05	 add	 edx, 5
  00030	52		 push	 edx
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HCHDLBPK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@set_sessio:
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0004b	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00051	c1 f9 04	 sar	 ecx, 4
  00054	51		 push	 ecx
  00055	6b 55 bc 0c	 imul	 edx, DWORD PTR tv74[ebp], 12
  00059	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@NONLNBHM@Setting?5session_entity?5?$CItype?5?$DN?5@
  00065	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 125  : 	}
; 126  : 	else

  0006d	eb 0d		 jmp	 SHORT $LN1@set_sessio
$LN2@set_sessio:

; 127  : 	{
; 128  : 		debug_log ("Setting session_entity to NULL");

  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GJODMMC@Setting?5session_entity?5to?5NULL@
  00074	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00079	83 c4 04	 add	 esp, 4
$LN1@set_sessio:

; 129  : 	}
; 130  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?set_session_entity@@YGXPAUENTITY@@@Z ENDP		; set_session_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?floor@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?floor@@YGMM@Z PROC					; floor, COMDAT

; 122  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 123  : 	return (_CSTD floorf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _floorf
  00019	83 c4 04	 add	 esp, 4

; 124  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?floor@@YGMM@Z ENDP					; floor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?ceil@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?ceil@@YGMM@Z PROC					; ceil, COMDAT

; 66   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 67   : 	return (_CSTD ceilf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _ceilf
  00019	83 c4 04	 add	 esp, 4

; 68   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?ceil@@YGMM@Z ENDP					; ceil
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _floorf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_floorf	PROC						; COMDAT

; 685  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 686  :             return (float)floor(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__floor
  0001c	83 c4 08	 add	 esp, 8
  0001f	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00022	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 687  :         }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_floorf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _ceilf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT

; 643  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 644  :             return (float)ceil(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  0001c	83 c4 08	 add	 esp, 8
  0001f	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00022	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 645  :         }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_ceilf	ENDP
_TEXT	ENDS
END
