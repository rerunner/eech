; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_anim.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?animate_ship_rotors@@YGXPAUENTITY@@@Z		; animate_ship_rotors
PUBLIC	?damage_ship_3d_object@@YGXPAUENTITY@@@Z	; damage_ship_3d_object
PUBLIC	?set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z	; set_ship_vehicle_id_number
PUBLIC	?__LINE__Var@?0??animate_ship_rotors@@YGXPAUENTITY@@@Z@4JA ; `animate_ship_rotors'::`1'::__LINE__Var
PUBLIC	??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??damage_ship_3d_object@@YGXPAUENTITY@@@Z@4JA ; `damage_ship_3d_object'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA ; `set_ship_vehicle_id_number'::`1'::__LINE__Var
PUBLIC	__real@3e20d97c
PUBLIC	__real@3fc00000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@bfc00000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z:PROC ; construct_3d_object
EXTRN	?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; destruct_3d_object
EXTRN	?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z:PROC ; set_local_entity_id_number
EXTRN	?set_sub_object_type_visible_status@@YGHPAUOBJECT_3D_INSTANCE@@HH@Z:PROC ; set_sub_object_type_visible_status
EXTRN	?modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HMMM@Z:PROC ; modify_sub_object_type_heading_pitch_and_roll
EXTRN	?set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z:PROC ; set_routed_vehicle_id_number
EXTRN	?get_external_view_entity@@YGPAUENTITY@@XZ:PROC	; get_external_view_entity
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?in_flight_articulation_test@@3HA:DWORD		; in_flight_articulation_test
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?ship_test_speed@@3MA DD 01H DUP (?)			; ship_test_speed
_BSS	ENDS
;	COMDAT __real@bfc00000
CONST	SEGMENT
__real@bfc00000 DD 0bfc00000r			; -1.5
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3e20d97c
CONST	SEGMENT
__real@3e20d97c DD 03e20d97cr			; 0.15708
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA DD 0d7H ; `set_ship_vehicle_id_number'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??damage_ship_3d_object@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_ship_3d_object@@YGXPAUENTITY@@@Z@4JA DD 0b0H ; `damage_ship_3d_object'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\s'
	DB	'h_anim.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_ship_rotors@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_ship_rotors@@YGXPAUENTITY@@@Z@4JA DD 05dH ; `animate_ship_rotors'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?ship_test_speed_inc@@3MA DD 03fc00000r		; 1.5	; ship_test_speed_inc
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_anim.c
;	COMDAT ?set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z PROC	; set_ship_vehicle_id_number, COMDAT

; 215  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 216  : 	ship_vehicle
; 217  : 		*raw;
; 218  : 
; 219  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_ship_v
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_ship_v:

; 220  : 
; 221  : 	raw = (ship_vehicle *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 222  : 
; 223  : 	if (raw->vh.mob.side == ENTITY_SIDE_BLUE_FORCE)

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00036	d1 e9		 shr	 ecx, 1
  00038	83 e1 03	 and	 ecx, 3
  0003b	83 f9 01	 cmp	 ecx, 1
  0003e	75 1b		 jne	 SHORT $LN3@set_ship_v

; 224  : 	{
; 225  : 		set_local_entity_id_number

  00040	68 92 00 00 00	 push	 146			; 00000092H
  00045	68 92 00 00 00	 push	 146			; 00000092H
  0004a	6a 65		 push	 101			; 00000065H
  0004c	6a 67		 push	 103			; 00000067H
  0004e	6a 66		 push	 102			; 00000066H
  00050	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z ; set_local_entity_id_number
  00059	eb 29		 jmp	 SHORT $LN1@set_ship_v
$LN3@set_ship_v:

; 226  : 		(
; 227  : 			en,
; 228  : 			TEXTURE_ANIMATION_INDEX_USA_NAVY__000,
; 229  : 			TEXTURE_ANIMATION_INDEX_USA_NAVY__001,
; 230  : 			TEXTURE_ANIMATION_INDEX_USA_NAVY__002,
; 231  : 			TEXTURE_ANIMATION_INDEX_LAST,
; 232  : 			TEXTURE_ANIMATION_INDEX_LAST
; 233  : 		);
; 234  : 	}
; 235  : 	else if (raw->vh.mob.side == ENTITY_SIDE_RED_FORCE)

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005e	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00061	d1 e9		 shr	 ecx, 1
  00063	83 e1 03	 and	 ecx, 3
  00066	83 f9 02	 cmp	 ecx, 2
  00069	75 19		 jne	 SHORT $LN1@set_ship_v

; 236  : 	{
; 237  : 		set_local_entity_id_number

  0006b	68 92 00 00 00	 push	 146			; 00000092H
  00070	68 92 00 00 00	 push	 146			; 00000092H
  00075	6a 69		 push	 105			; 00000069H
  00077	6a 6a		 push	 106			; 0000006aH
  00079	6a 68		 push	 104			; 00000068H
  0007b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z ; set_local_entity_id_number
$LN1@set_ship_v:

; 238  : 		(
; 239  : 			en,
; 240  : 			TEXTURE_ANIMATION_INDEX_CIS_PENNANT__000,
; 241  : 			TEXTURE_ANIMATION_INDEX_CIS_PENNANT__001,
; 242  : 			TEXTURE_ANIMATION_INDEX_CIS_PENNANT__002,
; 243  : 			TEXTURE_ANIMATION_INDEX_LAST,
; 244  : 			TEXTURE_ANIMATION_INDEX_LAST
; 245  : 		);
; 246  : 	}
; 247  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?set_ship_vehicle_id_number@@YGXPAUENTITY@@@Z ENDP	; set_ship_vehicle_id_number
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_anim.c
;	COMDAT ?damage_ship_3d_object@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv142 = -76						; size = 4
tv84 = -76						; size = 4
tv134 = -72						; size = 4
tv77 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?damage_ship_3d_object@@YGXPAUENTITY@@@Z PROC		; damage_ship_3d_object, COMDAT

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 177  : 	ship_vehicle
; 178  : 		*raw;
; 179  : 
; 180  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@damage_shi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_ship_3d_object@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@damage_shi:

; 181  : 
; 182  : 	raw = (ship_vehicle *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 183  : 
; 184  : 	if (raw->vh.object_3d_shape == get_local_entity_int_value (en, INT_TYPE_DESTROYED_3D_SHAPE))

  00030	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00034	74 0a		 je	 SHORT $LN5@damage_shi
  00036	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d b8	 mov	 DWORD PTR tv77[ebp], ecx
  0003e	eb 1d		 jmp	 SHORT $LN6@damage_shi
$LN5@damage_shi:
  00040	68 b8 00 00 00	 push	 184			; 000000b8H
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN6@damage_shi:
  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 09		 je	 SHORT $LN7@damage_shi
  00066	c7 45 b4 2e 00
	00 00		 mov	 DWORD PTR tv84[ebp], 46	; 0000002eH
  0006d	eb 1d		 jmp	 SHORT $LN8@damage_shi
$LN7@damage_shi:
  0006f	68 b8 00 00 00	 push	 184			; 000000b8H
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN8@damage_shi:
  0008c	6a 2e		 push	 46			; 0000002eH
  0008e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00091	52		 push	 edx
  00092	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv77[ebp], 1116
  00099	8b 4d b4	 mov	 ecx, DWORD PTR tv84[ebp]
  0009c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a3	ff d2		 call	 edx
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000a8	39 81 80 00 00
	00		 cmp	 DWORD PTR [ecx+128], eax
  000ae	75 05		 jne	 SHORT $LN3@damage_shi

; 185  : 	{
; 186  : 		return;

  000b0	e9 b6 00 00 00	 jmp	 $LN1@damage_shi
$LN3@damage_shi:

; 187  : 	}
; 188  : 
; 189  : 	//
; 190  : 	// destruct old object
; 191  : 	//
; 192  : 
; 193  : 	destruct_3d_object (raw->vh.inst3d);

  000b5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b8	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 ?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; destruct_3d_object

; 194  : 
; 195  : 	//
; 196  : 	// construct new (damaged) object
; 197  : 	//
; 198  : 
; 199  : 	raw->vh.object_3d_shape = get_local_entity_int_value (en, INT_TYPE_DESTROYED_3D_SHAPE);

  000c4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c8	74 0a		 je	 SHORT $LN9@damage_shi
  000ca	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	89 4d b8	 mov	 DWORD PTR tv134[ebp], ecx
  000d2	eb 21		 jmp	 SHORT $LN10@damage_shi
$LN9@damage_shi:
  000d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_ship_3d_object@@YGXPAUENTITY@@@Z@4JA
  000da	83 c2 17	 add	 edx, 23			; 00000017H
  000dd	52		 push	 edx
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ee	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN10@damage_shi:
  000f5	b9 01 00 00 00	 mov	 ecx, 1
  000fa	85 c9		 test	 ecx, ecx
  000fc	74 09		 je	 SHORT $LN11@damage_shi
  000fe	c7 45 b4 2e 00
	00 00		 mov	 DWORD PTR tv142[ebp], 46 ; 0000002eH
  00105	eb 21		 jmp	 SHORT $LN12@damage_shi
$LN11@damage_shi:
  00107	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_ship_3d_object@@YGXPAUENTITY@@@Z@4JA
  0010d	83 c2 17	 add	 edx, 23			; 00000017H
  00110	52		 push	 edx
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00121	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN12@damage_shi:
  00128	6a 2e		 push	 46			; 0000002eH
  0012a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0012d	51		 push	 ecx
  0012e	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv134[ebp], 1116
  00135	8b 45 b4	 mov	 eax, DWORD PTR tv142[ebp]
  00138	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0013f	ff d1		 call	 ecx
  00141	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00144	89 82 80 00 00
	00		 mov	 DWORD PTR [edx+128], eax

; 200  : 
; 201  : 	raw->vh.inst3d = construct_3d_object (raw->vh.object_3d_shape);

  0014a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0014d	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  00153	51		 push	 ecx
  00154	e8 00 00 00 00	 call	 ?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z ; construct_3d_object
  00159	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0015c	89 82 84 00 00
	00		 mov	 DWORD PTR [edx+132], eax

; 202  : 
; 203  : 	//
; 204  : 	// set id number for new object
; 205  : 	//
; 206  : 
; 207  : 	set_routed_vehicle_id_number (en);

  00162	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 ?set_routed_vehicle_id_number@@YGXPAUENTITY@@@Z ; set_routed_vehicle_id_number
$LN1@damage_shi:

; 208  : }

  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 04 00	 ret	 4
?damage_ship_3d_object@@YGXPAUENTITY@@@Z ENDP		; damage_ship_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\ship\sh_anim.c
;	COMDAT ?animate_ship_rotors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv137 = -96						; size = 8
tv154 = -88						; size = 4
tv138 = -88						; size = 8
tv81 = -88						; size = 4
tv146 = -84						; size = 4
tv74 = -84						; size = 4
_speed$ = -16						; size = 4
_ang$ = -12						; size = 4
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_ship_rotors@@YGXPAUENTITY@@@Z PROC		; animate_ship_rotors, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 94   : 	ship_vehicle
; 95   : 		*raw;
; 96   : 
; 97   : 	object_3d_instance
; 98   : 		*inst3d;
; 99   : 
; 100  : 	float
; 101  : 		ang,
; 102  : 		speed;
; 103  : 
; 104  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_sh
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_ship_rotors@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_sh:

; 105  : 
; 106  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN12@animate_sh
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d ac	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1a		 jmp	 SHORT $LN13@animate_sh
$LN12@animate_sh:
  00037	6a 6a		 push	 106			; 0000006aH
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN13@animate_sh:
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	85 c0		 test	 eax, eax
  00058	74 09		 je	 SHORT $LN14@animate_sh
  0005a	c7 45 a8 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00061	eb 1a		 jmp	 SHORT $LN15@animate_sh
$LN14@animate_sh:
  00063	6a 6a		 push	 106			; 0000006aH
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00076	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN15@animate_sh:
  0007d	68 93 00 00 00	 push	 147			; 00000093H
  00082	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00085	52		 push	 edx
  00086	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  0008d	8b 4d a8	 mov	 ecx, DWORD PTR tv81[ebp]
  00090	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00097	ff d2		 call	 edx
  00099	85 c0		 test	 eax, eax
  0009b	74 05		 je	 SHORT $LN3@animate_sh

; 107  : 	{
; 108  : 		return;

  0009d	e9 35 02 00 00	 jmp	 $LN1@animate_sh
$LN3@animate_sh:

; 109  : 	}
; 110  : 
; 111  : 	raw = (ship_vehicle *) get_local_entity_data (en);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a8	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 112  : 
; 113  : 	inst3d = raw->vh.inst3d;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ae	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000b4	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 114  : 
; 115  : 	if ((in_flight_articulation_test) && (get_external_view_entity() == en))

  000b7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  000be	0f 84 e5 00 00
	00		 je	 $LN4@animate_sh
  000c4	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  000c9	3b 45 08	 cmp	 eax, DWORD PTR _en$[ebp]
  000cc	0f 85 d7 00 00
	00		 jne	 $LN4@animate_sh

; 116  : 	{
; 117  : 		//
; 118  : 		// debug articulation test
; 119  : 		//
; 120  : 
; 121  : 		ship_test_speed += (ship_test_speed_inc * get_delta_time());

  000d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ship_test_speed_inc@@3MA
  000da	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000e2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ship_test_speed@@3MA
  000ea	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?ship_test_speed@@3MA, xmm0

; 122  : 
; 123  : 		if (ship_test_speed > SHIP_TEST_SPEED_MAX)

  000f2	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ship_test_speed@@3MA
  000fa	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4020000000000000
  00102	76 12		 jbe	 SHORT $LN6@animate_sh

; 124  : 		{
; 125  : 			ship_test_speed_inc = -SHIP_TEST_SPEED_INC;

  00104	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc00000
  0010c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?ship_test_speed_inc@@3MA, xmm0
  00114	eb 21		 jmp	 SHORT $LN8@animate_sh
$LN6@animate_sh:

; 126  : 		}
; 127  : 		else if (ship_test_speed <= 0.0)

  00116	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ship_test_speed@@3MA
  0011e	0f 57 c9	 xorps	 xmm1, xmm1
  00121	66 0f 2f c8	 comisd	 xmm1, xmm0
  00125	72 10		 jb	 SHORT $LN8@animate_sh

; 128  : 		{
; 129  : 			ship_test_speed_inc = SHIP_TEST_SPEED_INC;

  00127	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  0012f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?ship_test_speed_inc@@3MA, xmm0
$LN8@animate_sh:

; 130  : 		}
; 131  : 
; 132  : 		ship_test_speed = bound (ship_test_speed, 0.0, SHIP_TEST_SPEED_MAX);

  00137	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ship_test_speed@@3MA
  0013f	0f 57 c9	 xorps	 xmm1, xmm1
  00142	66 0f 2f c8	 comisd	 xmm1, xmm0
  00146	76 0a		 jbe	 SHORT $LN18@animate_sh
  00148	0f 57 c0	 xorps	 xmm0, xmm0
  0014b	f2 0f 11 45 a8	 movsd	 QWORD PTR tv138[ebp], xmm0
  00150	eb 38		 jmp	 SHORT $LN19@animate_sh
$LN18@animate_sh:
  00152	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ship_test_speed@@3MA
  0015a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4020000000000000
  00162	76 0f		 jbe	 SHORT $LN16@animate_sh
  00164	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4020000000000000
  0016c	f2 0f 11 45 a0	 movsd	 QWORD PTR tv137[ebp], xmm0
  00171	eb 0d		 jmp	 SHORT $LN17@animate_sh
$LN16@animate_sh:
  00173	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ship_test_speed@@3MA
  0017b	f2 0f 11 45 a0	 movsd	 QWORD PTR tv137[ebp], xmm0
$LN17@animate_sh:
  00180	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv137[ebp]
  00185	f2 0f 11 45 a8	 movsd	 QWORD PTR tv138[ebp], xmm0
$LN19@animate_sh:
  0018a	f2 0f 5a 45 a8	 cvtsd2ss xmm0, QWORD PTR tv138[ebp]
  0018f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?ship_test_speed@@3MA, xmm0

; 133  : 
; 134  : 		speed = ship_test_speed;

  00197	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ship_test_speed@@3MA
  0019f	f3 0f 11 45 f0	 movss	 DWORD PTR _speed$[ebp], xmm0

; 135  : 	}
; 136  : 	else

  001a4	e9 83 00 00 00	 jmp	 $LN5@animate_sh
$LN4@animate_sh:

; 137  : 	{
; 138  : 		//
; 139  : 		// normal operation
; 140  : 		//
; 141  : 
; 142  : 		speed = get_local_entity_float_value (en, FLOAT_TYPE_VELOCITY);

  001a9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ad	74 0a		 je	 SHORT $LN20@animate_sh
  001af	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b4	89 4d ac	 mov	 DWORD PTR tv146[ebp], ecx
  001b7	eb 21		 jmp	 SHORT $LN21@animate_sh
$LN20@animate_sh:
  001b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_ship_rotors@@YGXPAUENTITY@@@Z@4JA
  001bf	83 c2 31	 add	 edx, 49			; 00000031H
  001c2	52		 push	 edx
  001c3	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN21@animate_sh:
  001da	b9 01 00 00 00	 mov	 ecx, 1
  001df	85 c9		 test	 ecx, ecx
  001e1	74 09		 je	 SHORT $LN22@animate_sh
  001e3	c7 45 a8 93 00
	00 00		 mov	 DWORD PTR tv154[ebp], 147 ; 00000093H
  001ea	eb 21		 jmp	 SHORT $LN23@animate_sh
$LN22@animate_sh:
  001ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_ship_rotors@@YGXPAUENTITY@@@Z@4JA
  001f2	83 c2 31	 add	 edx, 49			; 00000031H
  001f5	52		 push	 edx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@IHLBMPBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00206	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN23@animate_sh:
  0020d	68 93 00 00 00	 push	 147			; 00000093H
  00212	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00215	51		 push	 ecx
  00216	69 55 ac bc 02
	00 00		 imul	 edx, DWORD PTR tv146[ebp], 700
  0021d	8b 45 a8	 mov	 eax, DWORD PTR tv154[ebp]
  00220	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00227	ff d1		 call	 ecx
  00229	d9 5d f0	 fstp	 DWORD PTR _speed$[ebp]
$LN5@animate_sh:

; 143  : 	}
; 144  : 
; 145  : 	//
; 146  : 	// set the correct blade type visible status
; 147  : 	//
; 148  : 
; 149  : 	if (speed > SHIP_BLURRED_ROTOR_THRESHOLD)

  0022c	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _speed$[ebp]
  00231	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4008000000000000
  00239	76 2f		 jbe	 SHORT $LN9@animate_sh

; 150  : 	{
; 151  : 		set_sub_object_type_visible_status (inst3d, OBJECT_3D_SUB_OBJECT_PROPELLER_MOVING, TRUE);

  0023b	6a 01		 push	 1
  0023d	68 8b 00 00 00	 push	 139			; 0000008bH
  00242	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00245	50		 push	 eax
  00246	e8 00 00 00 00	 call	 ?set_sub_object_type_visible_status@@YGHPAUOBJECT_3D_INSTANCE@@HH@Z ; set_sub_object_type_visible_status

; 152  : 		set_sub_object_type_visible_status (inst3d, OBJECT_3D_SUB_OBJECT_PROPELLER_STATIC, FALSE);

  0024b	6a 00		 push	 0
  0024d	68 8c 00 00 00	 push	 140			; 0000008cH
  00252	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ?set_sub_object_type_visible_status@@YGHPAUOBJECT_3D_INSTANCE@@HH@Z ; set_sub_object_type_visible_status

; 153  : 
; 154  : 		ang = PI / 20.0;

  0025b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e20d97c
  00263	f3 0f 11 45 f4	 movss	 DWORD PTR _ang$[ebp], xmm0

; 155  : 	}
; 156  : 	else

  00268	eb 42		 jmp	 SHORT $LN10@animate_sh
$LN9@animate_sh:

; 157  : 	{
; 158  : 		set_sub_object_type_visible_status (inst3d, OBJECT_3D_SUB_OBJECT_PROPELLER_MOVING, FALSE);

  0026a	6a 00		 push	 0
  0026c	68 8b 00 00 00	 push	 139			; 0000008bH
  00271	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ?set_sub_object_type_visible_status@@YGHPAUOBJECT_3D_INSTANCE@@HH@Z ; set_sub_object_type_visible_status

; 159  : 		set_sub_object_type_visible_status (inst3d, OBJECT_3D_SUB_OBJECT_PROPELLER_STATIC, TRUE);

  0027a	6a 01		 push	 1
  0027c	68 8c 00 00 00	 push	 140			; 0000008cH
  00281	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 ?set_sub_object_type_visible_status@@YGHPAUOBJECT_3D_INSTANCE@@HH@Z ; set_sub_object_type_visible_status

; 160  : 
; 161  : 		ang = 2.0 * speed * get_delta_time ();

  0028a	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _speed$[ebp]
  0028f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00297	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  0029f	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  002a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a7	f3 0f 11 45 f4	 movss	 DWORD PTR _ang$[ebp], xmm0
$LN10@animate_sh:

; 162  : 	}
; 163  : 
; 164  : 	//
; 165  : 	// rotate hub
; 166  : 	//
; 167  : 
; 168  : 	modify_sub_object_type_heading_pitch_and_roll (inst3d, OBJECT_3D_SUB_OBJECT_PROPELLER_HUB, ang, 0.0, 0.0);

  002ac	51		 push	 ecx
  002ad	0f 57 c0	 xorps	 xmm0, xmm0
  002b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b5	51		 push	 ecx
  002b6	0f 57 c0	 xorps	 xmm0, xmm0
  002b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002be	51		 push	 ecx
  002bf	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _ang$[ebp]
  002c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c9	68 89 00 00 00	 push	 137			; 00000089H
  002ce	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  002d1	50		 push	 eax
  002d2	e8 00 00 00 00	 call	 ?modify_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HMMM@Z ; modify_sub_object_type_heading_pitch_and_roll
$LN1@animate_sh:

; 169  : }

  002d7	5f		 pop	 edi
  002d8	5e		 pop	 esi
  002d9	5b		 pop	 ebx
  002da	8b e5		 mov	 esp, ebp
  002dc	5d		 pop	 ebp
  002dd	c2 04 00	 ret	 4
?animate_ship_rotors@@YGXPAUENTITY@@@Z ENDP		; animate_ship_rotors
_TEXT	ENDS
END
