; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?smoke_list_types_names@@3PAPADA		; smoke_list_types_names
PUBLIC	?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A	; smoke_list_database
PUBLIC	??_C@_0L@IPIHMKF@GREY_TRAIL@			; `string'
PUBLIC	??_C@_0M@IMFAEECK@WHITE_TRAIL@			; `string'
PUBLIC	??_C@_0P@BJEEOCII@ADDITIVE_TRAIL@		; `string'
PUBLIC	??_C@_0BF@ICOAHCHJ@LARGE_ADDITIVE_TRAIL@	; `string'
PUBLIC	??_C@_04OKEEPDCC@FIRE@				; `string'
PUBLIC	??_C@_0L@EFBOHCP@SMALL_FIRE@			; `string'
PUBLIC	??_C@_0N@MNMFMGIG@PURPLE_FLARE@			; `string'
PUBLIC	??_C@_0BB@MNCGFGNA@LARGE_DUST_CLOUD@		; `string'
PUBLIC	??_C@_0BF@MOJDPGHF@SMALL_PARTICLE_TRAIL@	; `string'
PUBLIC	??_C@_0BM@BNDCAMKE@MEDIUM_EARTH_PARTICLE_TRAIL@	; `string'
PUBLIC	??_C@_0BM@MLECLIPL@MEDIUM_WATER_PARTICLE_TRAIL@	; `string'
PUBLIC	??_C@_0N@FBJBBDAF@DUST_TRAIL_1@			; `string'
PUBLIC	??_C@_0N@HKLMEAMG@DUST_TRAIL_2@			; `string'
PUBLIC	??_C@_0P@BHNIHGJN@REAR_SHIP_WAKE@		; `string'
PUBLIC	??_C@_0BA@ELCFALHP@FRONT_SHIP_WAKE@		; `string'
PUBLIC	??_C@_0BM@JBBHKLPA@AIRCRAFT_LIGHT_DAMAGE_TRAIL@	; `string'
PUBLIC	??_C@_0BN@IOKFMJLG@AIRCRAFT_MEDIUM_DAMAGE_TRAIL@ ; `string'
PUBLIC	??_C@_0BM@PJBJNCCJ@AIRCRAFT_HEAVY_DAMAGE_TRAIL@	; `string'
PUBLIC	??_C@_0BP@EACFPPMP@AIRCRAFT_ADDITIVE_DAMAGE_TRAIL@ ; `string'
PUBLIC	??_C@_0BP@KHFBJJBE@AIRCRAFT_SMALL_TOUCHDOWN_TRAIL@ ; `string'
PUBLIC	??_C@_0BP@PIKMKDPG@AIRCRAFT_LARGE_TOUCHDOWN_TRAIL@ ; `string'
PUBLIC	??_C@_0P@EDCECDMO@DOWNWASH_START@		; `string'
PUBLIC	??_C@_0BA@BLNIPHMM@DOWNWASH_DESERT@		; `string'
PUBLIC	??_C@_0O@FBMPGEMC@DOWNWASH_SAND@		; `string'
PUBLIC	??_C@_0P@BKKAGKBD@DOWNWASH_GRASS@		; `string'
PUBLIC	??_C@_0BB@COGNNFAK@DOWNWASH_ASPHALT@		; `string'
PUBLIC	??_C@_0P@FIEBMMPE@DOWNWASH_WATER@		; `string'
PUBLIC	??_C@_0O@HMIGIPHM@DOWNWASH_SOIL@		; `string'
PUBLIC	??_C@_0BK@BDEEDHHD@DOWNWASH_FIELD_LIGHTBROWN@	; `string'
PUBLIC	??_C@_0BJ@IKFOCMCH@DOWNWASH_FIELD_DARKBROWN@	; `string'
PUBLIC	??_C@_0BK@DDJGDBLK@DOWNWASH_FIELD_LIGHTGREEN@	; `string'
PUBLIC	??_C@_0BJ@KKIMCKOO@DOWNWASH_FIELD_DARKGREEN@	; `string'
PUBLIC	??_C@_0O@DDALFNN@DOWNWASH_ROCK@			; `string'
PUBLIC	??_C@_0O@GJIBFPDB@DOWNWASH_SNOW@		; `string'
PUBLIC	??_C@_05NMNLJIOO@FLAME@				; `string'
_BSS	SEGMENT
?smoke_list_types_names@@3PAPADA DD 01H DUP (?)		; smoke_list_types_names
?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A DD 01H DUP (?) ; smoke_list_database
_BSS	ENDS
;	COMDAT ??_C@_05NMNLJIOO@FLAME@
CONST	SEGMENT
??_C@_05NMNLJIOO@FLAME@ DB 'FLAME', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GJIBFPDB@DOWNWASH_SNOW@
CONST	SEGMENT
??_C@_0O@GJIBFPDB@DOWNWASH_SNOW@ DB 'DOWNWASH_SNOW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DDALFNN@DOWNWASH_ROCK@
CONST	SEGMENT
??_C@_0O@DDALFNN@DOWNWASH_ROCK@ DB 'DOWNWASH_ROCK', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KKIMCKOO@DOWNWASH_FIELD_DARKGREEN@
CONST	SEGMENT
??_C@_0BJ@KKIMCKOO@DOWNWASH_FIELD_DARKGREEN@ DB 'DOWNWASH_FIELD_DARKGREEN'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DDJGDBLK@DOWNWASH_FIELD_LIGHTGREEN@
CONST	SEGMENT
??_C@_0BK@DDJGDBLK@DOWNWASH_FIELD_LIGHTGREEN@ DB 'DOWNWASH_FIELD_LIGHTGRE'
	DB	'EN', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IKFOCMCH@DOWNWASH_FIELD_DARKBROWN@
CONST	SEGMENT
??_C@_0BJ@IKFOCMCH@DOWNWASH_FIELD_DARKBROWN@ DB 'DOWNWASH_FIELD_DARKBROWN'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BDEEDHHD@DOWNWASH_FIELD_LIGHTBROWN@
CONST	SEGMENT
??_C@_0BK@BDEEDHHD@DOWNWASH_FIELD_LIGHTBROWN@ DB 'DOWNWASH_FIELD_LIGHTBRO'
	DB	'WN', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HMIGIPHM@DOWNWASH_SOIL@
CONST	SEGMENT
??_C@_0O@HMIGIPHM@DOWNWASH_SOIL@ DB 'DOWNWASH_SOIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FIEBMMPE@DOWNWASH_WATER@
CONST	SEGMENT
??_C@_0P@FIEBMMPE@DOWNWASH_WATER@ DB 'DOWNWASH_WATER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@COGNNFAK@DOWNWASH_ASPHALT@
CONST	SEGMENT
??_C@_0BB@COGNNFAK@DOWNWASH_ASPHALT@ DB 'DOWNWASH_ASPHALT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BKKAGKBD@DOWNWASH_GRASS@
CONST	SEGMENT
??_C@_0P@BKKAGKBD@DOWNWASH_GRASS@ DB 'DOWNWASH_GRASS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FBMPGEMC@DOWNWASH_SAND@
CONST	SEGMENT
??_C@_0O@FBMPGEMC@DOWNWASH_SAND@ DB 'DOWNWASH_SAND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BLNIPHMM@DOWNWASH_DESERT@
CONST	SEGMENT
??_C@_0BA@BLNIPHMM@DOWNWASH_DESERT@ DB 'DOWNWASH_DESERT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EDCECDMO@DOWNWASH_START@
CONST	SEGMENT
??_C@_0P@EDCECDMO@DOWNWASH_START@ DB 'DOWNWASH_START', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PIKMKDPG@AIRCRAFT_LARGE_TOUCHDOWN_TRAIL@
CONST	SEGMENT
??_C@_0BP@PIKMKDPG@AIRCRAFT_LARGE_TOUCHDOWN_TRAIL@ DB 'AIRCRAFT_LARGE_TOU'
	DB	'CHDOWN_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KHFBJJBE@AIRCRAFT_SMALL_TOUCHDOWN_TRAIL@
CONST	SEGMENT
??_C@_0BP@KHFBJJBE@AIRCRAFT_SMALL_TOUCHDOWN_TRAIL@ DB 'AIRCRAFT_SMALL_TOU'
	DB	'CHDOWN_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EACFPPMP@AIRCRAFT_ADDITIVE_DAMAGE_TRAIL@
CONST	SEGMENT
??_C@_0BP@EACFPPMP@AIRCRAFT_ADDITIVE_DAMAGE_TRAIL@ DB 'AIRCRAFT_ADDITIVE_'
	DB	'DAMAGE_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PJBJNCCJ@AIRCRAFT_HEAVY_DAMAGE_TRAIL@
CONST	SEGMENT
??_C@_0BM@PJBJNCCJ@AIRCRAFT_HEAVY_DAMAGE_TRAIL@ DB 'AIRCRAFT_HEAVY_DAMAGE'
	DB	'_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IOKFMJLG@AIRCRAFT_MEDIUM_DAMAGE_TRAIL@
CONST	SEGMENT
??_C@_0BN@IOKFMJLG@AIRCRAFT_MEDIUM_DAMAGE_TRAIL@ DB 'AIRCRAFT_MEDIUM_DAMA'
	DB	'GE_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JBBHKLPA@AIRCRAFT_LIGHT_DAMAGE_TRAIL@
CONST	SEGMENT
??_C@_0BM@JBBHKLPA@AIRCRAFT_LIGHT_DAMAGE_TRAIL@ DB 'AIRCRAFT_LIGHT_DAMAGE'
	DB	'_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELCFALHP@FRONT_SHIP_WAKE@
CONST	SEGMENT
??_C@_0BA@ELCFALHP@FRONT_SHIP_WAKE@ DB 'FRONT_SHIP_WAKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BHNIHGJN@REAR_SHIP_WAKE@
CONST	SEGMENT
??_C@_0P@BHNIHGJN@REAR_SHIP_WAKE@ DB 'REAR_SHIP_WAKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HKLMEAMG@DUST_TRAIL_2@
CONST	SEGMENT
??_C@_0N@HKLMEAMG@DUST_TRAIL_2@ DB 'DUST_TRAIL_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FBJBBDAF@DUST_TRAIL_1@
CONST	SEGMENT
??_C@_0N@FBJBBDAF@DUST_TRAIL_1@ DB 'DUST_TRAIL_1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MLECLIPL@MEDIUM_WATER_PARTICLE_TRAIL@
CONST	SEGMENT
??_C@_0BM@MLECLIPL@MEDIUM_WATER_PARTICLE_TRAIL@ DB 'MEDIUM_WATER_PARTICLE'
	DB	'_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BNDCAMKE@MEDIUM_EARTH_PARTICLE_TRAIL@
CONST	SEGMENT
??_C@_0BM@BNDCAMKE@MEDIUM_EARTH_PARTICLE_TRAIL@ DB 'MEDIUM_EARTH_PARTICLE'
	DB	'_TRAIL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MOJDPGHF@SMALL_PARTICLE_TRAIL@
CONST	SEGMENT
??_C@_0BF@MOJDPGHF@SMALL_PARTICLE_TRAIL@ DB 'SMALL_PARTICLE_TRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MNCGFGNA@LARGE_DUST_CLOUD@
CONST	SEGMENT
??_C@_0BB@MNCGFGNA@LARGE_DUST_CLOUD@ DB 'LARGE_DUST_CLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MNMFMGIG@PURPLE_FLARE@
CONST	SEGMENT
??_C@_0N@MNMFMGIG@PURPLE_FLARE@ DB 'PURPLE_FLARE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EFBOHCP@SMALL_FIRE@
CONST	SEGMENT
??_C@_0L@EFBOHCP@SMALL_FIRE@ DB 'SMALL_FIRE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKEEPDCC@FIRE@
CONST	SEGMENT
??_C@_04OKEEPDCC@FIRE@ DB 'FIRE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ICOAHCHJ@LARGE_ADDITIVE_TRAIL@
CONST	SEGMENT
??_C@_0BF@ICOAHCHJ@LARGE_ADDITIVE_TRAIL@ DB 'LARGE_ADDITIVE_TRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BJEEOCII@ADDITIVE_TRAIL@
CONST	SEGMENT
??_C@_0P@BJEEOCII@ADDITIVE_TRAIL@ DB 'ADDITIVE_TRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IMFAEECK@WHITE_TRAIL@
CONST	SEGMENT
??_C@_0M@IMFAEECK@WHITE_TRAIL@ DB 'WHITE_TRAIL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IPIHMKF@GREY_TRAIL@
CONST	SEGMENT
??_C@_0L@IPIHMKF@GREY_TRAIL@ DB 'GREY_TRAIL', 00H	; `string'
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	?strchr@@YAPADQADH@Z				; strchr
PUBLIC	?get_smoke_type_by_name@@YGHPBD@Z		; get_smoke_type_by_name
PUBLIC	?initialise_smoke_list_database@@YGXXZ		; initialise_smoke_list_database
PUBLIC	?deinitialise_smoke_list_database@@YGXXZ	; deinitialise_smoke_list_database
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_0L@ICNOEHEB@SMOKES?4CSV@			; `string'
PUBLIC	??_C@_08FPBCHBFF@SMOKE?$DL1?6@			; `string'
PUBLIC	??_C@_0BHN@KGINLFKF@?$CDSmoke?5index?$DLSmoke?5name?$DLTexture@ ; `string'
PUBLIC	??_C@_0GN@NLJBOFFE@?$CFi?$DL?$CFs?$DL?$CFs?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CF@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_02IKAHHCAI@?$CFi@				; `string'
PUBLIC	??_C@_0GD@KIHAKPHE@?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CF@ ; `string'
PUBLIC	__real@3ca3d70a
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dcccccd
PUBLIC	__real@3df5c28f
PUBLIC	__real@3e000000
PUBLIC	__real@3e19999a
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3e99999a
PUBLIC	__real@3ea8f5c3
PUBLIC	__real@3f000000
PUBLIC	__real@3f333333
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f800000
PUBLIC	__real@3fa66666
PUBLIC	__real@3fc00000
PUBLIC	__real@3fe00000
PUBLIC	__real@40000000
PUBLIC	__real@400ccccd
PUBLIC	__real@4019999a
PUBLIC	__real@40200000
PUBLIC	__real@40400000
PUBLIC	__real@40600000
PUBLIC	__real@40800000
PUBLIC	__real@40900000
PUBLIC	__real@40a00000
PUBLIC	__real@40b00000
PUBLIC	__real@40c00000
PUBLIC	__real@40d00000
PUBLIC	__real@41000000
PUBLIC	__real@41080000
PUBLIC	__real@41200000
PUBLIC	__real@41280000
PUBLIC	__real@41300000
PUBLIC	__real@41400000
PUBLIC	__real@41500000
PUBLIC	__real@41700000
PUBLIC	__real@41800000
PUBLIC	__real@41880000
PUBLIC	__real@41a00000
PUBLIC	__real@41c00000
PUBLIC	__real@41c80000
PUBLIC	__real@41f00000
PUBLIC	__real@41f40000
PUBLIC	__real@42480000
PUBLIC	__real@42800000
PUBLIC	__real@42be0000
PUBLIC	__real@42cb0000
PUBLIC	__real@42f00000
PUBLIC	__real@43000000
PUBLIC	__real@43960000
PUBLIC	__real@bf000000
PUBLIC	__real@bf800000
EXTRN	__imp__fgets:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	_memcpy:PROC
EXTRN	_strchr:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	_strlen:PROC
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?file_exist@@YGHPBD@Z:PROC			; file_exist
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?safe_fclose@@YGHPAU_iobuf@@@Z:PROC		; safe_fclose
EXTRN	?add_new_animation@@YGHPAD@Z:PROC		; add_new_animation
EXTRN	?initialise_smoke_list_draw_arrays@@YGXXZ:PROC	; initialise_smoke_list_draw_arrays
EXTRN	?deinitialise_smoke_list_draw_arrays@@YGXXZ:PROC ; deinitialise_smoke_list_draw_arrays
EXTRN	?texture_animation_names@@3PAPBDA:DWORD		; texture_animation_names
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?total_number_of_smoke_list_types@@3HA DD 01H DUP (?)	; total_number_of_smoke_list_types
?smoke_list_types_available@@3HA DD 01H DUP (?)		; smoke_list_types_available
_BSS	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@43000000
CONST	SEGMENT
__real@43000000 DD 043000000r			; 128
CONST	ENDS
;	COMDAT __real@42f00000
CONST	SEGMENT
__real@42f00000 DD 042f00000r			; 120
CONST	ENDS
;	COMDAT __real@42cb0000
CONST	SEGMENT
__real@42cb0000 DD 042cb0000r			; 101.5
CONST	ENDS
;	COMDAT __real@42be0000
CONST	SEGMENT
__real@42be0000 DD 042be0000r			; 95
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@41f40000
CONST	SEGMENT
__real@41f40000 DD 041f40000r			; 30.5
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@41c00000
CONST	SEGMENT
__real@41c00000 DD 041c00000r			; 24
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41880000
CONST	SEGMENT
__real@41880000 DD 041880000r			; 17
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41500000
CONST	SEGMENT
__real@41500000 DD 041500000r			; 13
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@41300000
CONST	SEGMENT
__real@41300000 DD 041300000r			; 11
CONST	ENDS
;	COMDAT __real@41280000
CONST	SEGMENT
__real@41280000 DD 041280000r			; 10.5
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41080000
CONST	SEGMENT
__real@41080000 DD 041080000r			; 8.5
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40d00000
CONST	SEGMENT
__real@40d00000 DD 040d00000r			; 6.5
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40b00000
CONST	SEGMENT
__real@40b00000 DD 040b00000r			; 5.5
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40900000
CONST	SEGMENT
__real@40900000 DD 040900000r			; 4.5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40600000
CONST	SEGMENT
__real@40600000 DD 040600000r			; 3.5
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40200000
CONST	SEGMENT
__real@40200000 DD 040200000r			; 2.5
CONST	ENDS
;	COMDAT __real@4019999a
CONST	SEGMENT
__real@4019999a DD 04019999ar			; 2.4
CONST	ENDS
;	COMDAT __real@400ccccd
CONST	SEGMENT
__real@400ccccd DD 0400ccccdr			; 2.2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fe00000
CONST	SEGMENT
__real@3fe00000 DD 03fe00000r			; 1.75
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3fa66666
CONST	SEGMENT
__real@3fa66666 DD 03fa66666r			; 1.3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ea8f5c3
CONST	SEGMENT
__real@3ea8f5c3 DD 03ea8f5c3r			; 0.33
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3e000000
CONST	SEGMENT
__real@3e000000 DD 03e000000r			; 0.125
CONST	ENDS
;	COMDAT __real@3df5c28f
CONST	SEGMENT
__real@3df5c28f DD 03df5c28fr			; 0.12
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3ca3d70a
CONST	SEGMENT
__real@3ca3d70a DD 03ca3d70ar			; 0.02
CONST	ENDS
;	COMDAT ??_C@_0GD@KIHAKPHE@?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CF@
CONST	SEGMENT
??_C@_0GD@KIHAKPHE@?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CF@ DB '%'
	DB	'i;%i;%i;%i;%f;%f;%i;%i;%i;%i;%f;%f;%i;%i;%i;%i;%f;%i;%i;%i;%i'
	DB	';%f;%f;%f;%f;%f;%f;%i;%i;%i;%i;%i;%i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02IKAHHCAI@?$CFi@
CONST	SEGMENT
??_C@_02IKAHHCAI@?$CFi@ DB '%i', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@NLJBOFFE@?$CFi?$DL?$CFs?$DL?$CFs?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CF@
CONST	SEGMENT
??_C@_0GN@NLJBOFFE@?$CFi?$DL?$CFs?$DL?$CFs?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CF@ DB '%'
	DB	'i;%s;%s;%i;%i;%i;%i;%f;%f;%i;%i;%i;%i;%f;%f;%i;%i;%i;%i;%f;%i'
	DB	';%i;%i;%i;%f;%f;%f;%f;%f;%f;%i;%i;%i;%i;%i;%i', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BHN@KGINLFKF@?$CDSmoke?5index?$DLSmoke?5name?$DLTexture@
CONST	SEGMENT
??_C@_0BHN@KGINLFKF@?$CDSmoke?5index?$DLSmoke?5name?$DLTexture@ DB '#Smok'
	DB	'e index;Smoke name;Texture animation;Start colour (red;green;'
	DB	'blue;alpha;radius);Colour change #1 (change;red;green;blue;al'
	DB	'pha;radius);Colour change #2 (change;red;green;blue;alpha;rad'
	DB	'ius);End colour (red;green;blue;alpha;radius);Vertical veloci'
	DB	'ty(final;acceleration;initial noise);Texture size;Animation r'
	DB	'ate;Additive;Draw type;Flat;Ground based;Lock to parent;Wind '
	DB	'affected', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPBCHBFF@SMOKE?$DL1?6@
CONST	SEGMENT
??_C@_08FPBCHBFF@SMOKE?$DL1?6@ DB 'SMOKE;1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICNOEHEB@SMOKES?4CSV@
CONST	SEGMENT
??_C@_0L@ICNOEHEB@SMOKES?4CSV@ DB 'SMOKES.CSV', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?default_smoke_list_types_names@@3PAPBDA DD FLAT:??_C@_0L@IPIHMKF@GREY_TRAIL@ ; default_smoke_list_types_names
	DD	FLAT:??_C@_0M@IMFAEECK@WHITE_TRAIL@
	DD	FLAT:??_C@_0P@BJEEOCII@ADDITIVE_TRAIL@
	DD	FLAT:??_C@_0BF@ICOAHCHJ@LARGE_ADDITIVE_TRAIL@
	DD	FLAT:??_C@_04OKEEPDCC@FIRE@
	DD	FLAT:??_C@_0L@EFBOHCP@SMALL_FIRE@
	DD	FLAT:??_C@_0N@MNMFMGIG@PURPLE_FLARE@
	DD	FLAT:??_C@_0BB@MNCGFGNA@LARGE_DUST_CLOUD@
	DD	FLAT:??_C@_0BF@MOJDPGHF@SMALL_PARTICLE_TRAIL@
	DD	FLAT:??_C@_0BM@BNDCAMKE@MEDIUM_EARTH_PARTICLE_TRAIL@
	DD	FLAT:??_C@_0BM@MLECLIPL@MEDIUM_WATER_PARTICLE_TRAIL@
	DD	FLAT:??_C@_0N@FBJBBDAF@DUST_TRAIL_1@
	DD	FLAT:??_C@_0N@HKLMEAMG@DUST_TRAIL_2@
	DD	FLAT:??_C@_0P@BHNIHGJN@REAR_SHIP_WAKE@
	DD	FLAT:??_C@_0BA@ELCFALHP@FRONT_SHIP_WAKE@
	DD	FLAT:??_C@_0BM@JBBHKLPA@AIRCRAFT_LIGHT_DAMAGE_TRAIL@
	DD	FLAT:??_C@_0BN@IOKFMJLG@AIRCRAFT_MEDIUM_DAMAGE_TRAIL@
	DD	FLAT:??_C@_0BM@PJBJNCCJ@AIRCRAFT_HEAVY_DAMAGE_TRAIL@
	DD	FLAT:??_C@_0BP@EACFPPMP@AIRCRAFT_ADDITIVE_DAMAGE_TRAIL@
	DD	FLAT:??_C@_0BP@KHFBJJBE@AIRCRAFT_SMALL_TOUCHDOWN_TRAIL@
	DD	FLAT:??_C@_0BP@PIKMKDPG@AIRCRAFT_LARGE_TOUCHDOWN_TRAIL@
	DD	FLAT:??_C@_0P@EDCECDMO@DOWNWASH_START@
	DD	FLAT:??_C@_0BA@BLNIPHMM@DOWNWASH_DESERT@
	DD	FLAT:??_C@_0O@FBMPGEMC@DOWNWASH_SAND@
	DD	FLAT:??_C@_0P@BKKAGKBD@DOWNWASH_GRASS@
	DD	FLAT:??_C@_0BB@COGNNFAK@DOWNWASH_ASPHALT@
	DD	FLAT:??_C@_0P@FIEBMMPE@DOWNWASH_WATER@
	DD	FLAT:??_C@_0O@HMIGIPHM@DOWNWASH_SOIL@
	DD	FLAT:??_C@_0BK@BDEEDHHD@DOWNWASH_FIELD_LIGHTBROWN@
	DD	FLAT:??_C@_0BJ@IKFOCMCH@DOWNWASH_FIELD_DARKBROWN@
	DD	FLAT:??_C@_0BK@DDJGDBLK@DOWNWASH_FIELD_LIGHTGREEN@
	DD	FLAT:??_C@_0BJ@KKIMCKOO@DOWNWASH_FIELD_DARKGREEN@
	DD	FLAT:??_C@_0O@DDALFNN@DOWNWASH_ROCK@
	DD	FLAT:??_C@_0O@GJIBFPDB@DOWNWASH_SNOW@
	DD	FLAT:??_C@_05NMNLJIOO@FLAME@
	DD	00H
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
;	COMDAT ?import_smoke_list_database@@YGXXZ
_TEXT	SEGMENT
tv283 = -2488						; size = 4
tv277 = -2488						; size = 4
tv271 = -2488						; size = 4
tv265 = -2488						; size = 4
tv259 = -2488						; size = 4
tv253 = -2488						; size = 4
tv247 = -2488						; size = 4
tv241 = -2488						; size = 4
tv235 = -2488						; size = 4
tv229 = -2488						; size = 4
tv223 = -2488						; size = 4
tv217 = -2488						; size = 4
tv211 = -2488						; size = 4
tv205 = -2488						; size = 4
tv199 = -2488						; size = 4
tv193 = -2488						; size = 4
tv284 = -2484						; size = 4
tv278 = -2484						; size = 4
tv272 = -2484						; size = 4
tv266 = -2484						; size = 4
tv260 = -2484						; size = 4
tv254 = -2484						; size = 4
tv248 = -2484						; size = 4
tv242 = -2484						; size = 4
tv236 = -2484						; size = 4
tv230 = -2484						; size = 4
tv224 = -2484						; size = 4
tv218 = -2484						; size = 4
tv212 = -2484						; size = 4
tv206 = -2484						; size = 4
tv200 = -2484						; size = 4
tv194 = -2484						; size = 4
tv330 = -2482						; size = 2
tv322 = -2482						; size = 2
tv314 = -2482						; size = 2
tv306 = -2482						; size = 2
tv298 = -2482						; size = 2
tv291 = -2482						; size = 2
_wind_affected$ = -2160					; size = 4
_lock_to_parent$ = -2156				; size = 4
_ground_based$ = -2152					; size = 4
_flat$ = -2148						; size = 4
_draw_type$ = -2144					; size = 4
_additive$ = -2140					; size = 4
_alpha_end$ = -2136					; size = 4
_blue_end$ = -2132					; size = 4
_green_end$ = -2128					; size = 4
_red_end$ = -2124					; size = 4
_alpha_2$ = -2120					; size = 4
_blue_2$ = -2116					; size = 4
_green_2$ = -2112					; size = 4
_red_2$ = -2108						; size = 4
_alpha_1$ = -2104					; size = 4
_blue_1$ = -2100					; size = 4
_green_1$ = -2096					; size = 4
_red_1$ = -2092						; size = 4
_alpha_start$ = -2088					; size = 4
_blue_start$ = -2084					; size = 4
_green_start$ = -2080					; size = 4
_red_start$ = -2076					; size = 4
_smoke$ = -2072						; size = 4
_count$ = -2068						; size = 4
_texture_animation$ = -2064				; size = 4
_smoke_list_type_name$ = -2060				; size = 4
_ptr$ = -2056						; size = 4
_buf$ = -2052						; size = 2048
_file$ = -4						; size = 4
?import_smoke_list_database@@YGXXZ PROC			; import_smoke_list_database, COMDAT

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 09 00
	00		 sub	 esp, 2488		; 000009b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 257  : 	FILE
; 258  : 		*file;
; 259  : 	char
; 260  : 		buf[2048],
; 261  : 		*ptr,
; 262  : 		*smoke_list_type_name,
; 263  : 		*texture_animation;
; 264  : 	int
; 265  : 		count;
; 266  : 	smoke_list_data
; 267  : 		*smoke;
; 268  : 	int
; 269  : 		red_start,
; 270  : 		green_start,
; 271  : 		blue_start,
; 272  : 		alpha_start,
; 273  : 		red_1,
; 274  : 		green_1,
; 275  : 		blue_1,
; 276  : 		alpha_1,
; 277  : 		red_2,
; 278  : 		green_2,
; 279  : 		blue_2,
; 280  : 		alpha_2,
; 281  : 		red_end,
; 282  : 		green_end,
; 283  : 		blue_end,
; 284  : 		alpha_end,
; 285  : 		additive,
; 286  : 		draw_type,
; 287  : 		flat,
; 288  : 		ground_based,
; 289  : 		lock_to_parent,
; 290  : 		wind_affected;
; 291  : 
; 292  : 	file = safe_fopen (SMOKE_LIST_DATABASE_FILENAME, "r");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ICNOEHEB@SMOKES?4CSV@
  00016	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  0001b	89 45 fc	 mov	 DWORD PTR _file$[ebp], eax

; 293  : 	fgets (buf, sizeof (buf), file);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _file$[ebp]
  00021	50		 push	 eax
  00022	68 00 08 00 00	 push	 2048			; 00000800H
  00027	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0002d	51		 push	 ecx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgets
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 294  : 	if (!strcmp (buf, "SMOKE;1\n"))

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_08FPBCHBFF@SMOKE?$DL1?6@
  0003c	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _strcmp
  00048	83 c4 08	 add	 esp, 8
  0004b	85 c0		 test	 eax, eax
  0004d	0f 85 1d 0a 00
	00		 jne	 $LN4@import_smo
$LN2@import_smo:

; 295  : 	{
; 296  : 		while (fgets (buf, sizeof (buf), file))

  00053	8b 45 fc	 mov	 eax, DWORD PTR _file$[ebp]
  00056	50		 push	 eax
  00057	68 00 08 00 00	 push	 2048			; 00000800H
  0005c	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  00062	51		 push	 ecx
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgets
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	85 c0		 test	 eax, eax
  0006e	0f 84 fc 09 00
	00		 je	 $LN4@import_smo

; 297  : 		{
; 298  : 			ptr = strchr (buf, '#');

  00074	6a 23		 push	 35			; 00000023H
  00076	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?strchr@@YAPADQADH@Z	; strchr
  00082	83 c4 08	 add	 esp, 8
  00085	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _ptr$[ebp], eax

; 299  : 			if (ptr)

  0008b	83 bd f8 f7 ff
	ff 00		 cmp	 DWORD PTR _ptr$[ebp], 0
  00092	74 09		 je	 SHORT $LN5@import_smo

; 300  : 			{
; 301  : 				*ptr = '\0';

  00094	8b 85 f8 f7 ff
	ff		 mov	 eax, DWORD PTR _ptr$[ebp]
  0009a	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN5@import_smo:

; 302  : 			}
; 303  : 			ptr = strchr (buf, ';');

  0009d	6a 3b		 push	 59			; 0000003bH
  0009f	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?strchr@@YAPADQADH@Z	; strchr
  000ab	83 c4 08	 add	 esp, 8
  000ae	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _ptr$[ebp], eax

; 304  : 			if (!ptr)

  000b4	83 bd f8 f7 ff
	ff 00		 cmp	 DWORD PTR _ptr$[ebp], 0
  000bb	75 02		 jne	 SHORT $LN6@import_smo

; 305  : 			{
; 306  : 				continue;

  000bd	eb 94		 jmp	 SHORT $LN2@import_smo
$LN6@import_smo:

; 307  : 			}
; 308  : 			smoke_list_type_name = ptr + 1;

  000bf	8b 85 f8 f7 ff
	ff		 mov	 eax, DWORD PTR _ptr$[ebp]
  000c5	83 c0 01	 add	 eax, 1
  000c8	89 85 f4 f7 ff
	ff		 mov	 DWORD PTR _smoke_list_type_name$[ebp], eax

; 309  : 			ptr = strchr (smoke_list_type_name, ';');

  000ce	6a 3b		 push	 59			; 0000003bH
  000d0	8b 85 f4 f7 ff
	ff		 mov	 eax, DWORD PTR _smoke_list_type_name$[ebp]
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?strchr@@YAPADQADH@Z	; strchr
  000dc	83 c4 08	 add	 esp, 8
  000df	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _ptr$[ebp], eax

; 310  : 			if (!ptr)

  000e5	83 bd f8 f7 ff
	ff 00		 cmp	 DWORD PTR _ptr$[ebp], 0
  000ec	75 05		 jne	 SHORT $LN7@import_smo

; 311  : 			{
; 312  : 				continue;

  000ee	e9 60 ff ff ff	 jmp	 $LN2@import_smo
$LN7@import_smo:

; 313  : 			}
; 314  : 			*ptr = '\0';

  000f3	8b 85 f8 f7 ff
	ff		 mov	 eax, DWORD PTR _ptr$[ebp]
  000f9	c6 00 00	 mov	 BYTE PTR [eax], 0

; 315  : 			texture_animation = ptr + 1;

  000fc	8b 85 f8 f7 ff
	ff		 mov	 eax, DWORD PTR _ptr$[ebp]
  00102	83 c0 01	 add	 eax, 1
  00105	89 85 f0 f7 ff
	ff		 mov	 DWORD PTR _texture_animation$[ebp], eax

; 316  : 			ptr = strchr (texture_animation, ';');

  0010b	6a 3b		 push	 59			; 0000003bH
  0010d	8b 85 f0 f7 ff
	ff		 mov	 eax, DWORD PTR _texture_animation$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?strchr@@YAPADQADH@Z	; strchr
  00119	83 c4 08	 add	 esp, 8
  0011c	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _ptr$[ebp], eax

; 317  : 			if (!ptr)

  00122	83 bd f8 f7 ff
	ff 00		 cmp	 DWORD PTR _ptr$[ebp], 0
  00129	75 05		 jne	 SHORT $LN8@import_smo

; 318  : 			{
; 319  : 				continue;

  0012b	e9 23 ff ff ff	 jmp	 $LN2@import_smo
$LN8@import_smo:

; 320  : 			}
; 321  : 			*ptr = '\0';

  00130	8b 85 f8 f7 ff
	ff		 mov	 eax, DWORD PTR _ptr$[ebp]
  00136	c6 00 00	 mov	 BYTE PTR [eax], 0

; 322  : 			if (sscanf (buf, "%i", &count) != 1 || count < 0)

  00139	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _count$[ebp]
  0013f	50		 push	 eax
  00140	68 00 00 00 00	 push	 OFFSET ??_C@_02IKAHHCAI@?$CFi@
  00145	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0014b	51		 push	 ecx
  0014c	e8 00 00 00 00	 call	 _sscanf
  00151	83 c4 0c	 add	 esp, 12			; 0000000cH
  00154	83 f8 01	 cmp	 eax, 1
  00157	75 09		 jne	 SHORT $LN10@import_smo
  00159	83 bd ec f7 ff
	ff 00		 cmp	 DWORD PTR _count$[ebp], 0
  00160	7d 05		 jge	 SHORT $LN9@import_smo
$LN10@import_smo:

; 323  : 			{
; 324  : 				continue;

  00162	e9 ec fe ff ff	 jmp	 $LN2@import_smo
$LN9@import_smo:

; 325  : 			}
; 326  : 			count = get_smoke_type_by_name (smoke_list_type_name);

  00167	8b 85 f4 f7 ff
	ff		 mov	 eax, DWORD PTR _smoke_list_type_name$[ebp]
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?get_smoke_type_by_name@@YGHPBD@Z ; get_smoke_type_by_name
  00173	89 85 ec f7 ff
	ff		 mov	 DWORD PTR _count$[ebp], eax

; 327  : 			if (count < 0)

  00179	83 bd ec f7 ff
	ff 00		 cmp	 DWORD PTR _count$[ebp], 0
  00180	7d 19		 jge	 SHORT $LN11@import_smo

; 328  : 			{
; 329  : 				if (!smoke_list_types_available)

  00182	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?smoke_list_types_available@@3HA, 0
  00189	75 05		 jne	 SHORT $LN12@import_smo

; 330  : 				{
; 331  : 					continue;

  0018b	e9 c3 fe ff ff	 jmp	 $LN2@import_smo
$LN12@import_smo:

; 332  : 				}
; 333  : 				count = total_number_of_smoke_list_types;

  00190	a1 00 00 00 00	 mov	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  00195	89 85 ec f7 ff
	ff		 mov	 DWORD PTR _count$[ebp], eax
$LN11@import_smo:

; 334  : 			}
; 335  : 			smoke = &smoke_list_database [count];

  0019b	6b 85 ec f7 ff
	ff 44		 imul	 eax, DWORD PTR _count$[ebp], 68
  001a2	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  001a8	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _smoke$[ebp], eax

; 336  : 			if (sscanf (ptr + 1,
; 337  : 				"%i;%i;%i;%i;%f;"
; 338  : 				"%f;%i;%i;%i;%i;%f;"
; 339  : 				"%f;%i;%i;%i;%i;%f;"
; 340  : 				"%i;%i;%i;%i;%f;"
; 341  : 				"%f;%f;%f;"
; 342  : 				"%f;%f;%i;%i;%i;%i;%i;%i",
; 343  : 				&red_start,
; 344  : 				&green_start,
; 345  : 				&blue_start,
; 346  : 				&alpha_start,
; 347  : 				&smoke->radius_start,
; 348  : 
; 349  : 				&smoke->colour_change_1,
; 350  : 				&red_1,
; 351  : 				&green_1,
; 352  : 				&blue_1,
; 353  : 				&alpha_1,
; 354  : 				&smoke->radius_1,
; 355  : 
; 356  : 				&smoke->colour_change_2,
; 357  : 				&red_2,
; 358  : 				&green_2,
; 359  : 				&blue_2,
; 360  : 				&alpha_2,
; 361  : 				&smoke->radius_2,
; 362  : 
; 363  : 				&red_end,
; 364  : 				&green_end,
; 365  : 				&blue_end,
; 366  : 				&alpha_end,
; 367  : 				&smoke->radius_end,
; 368  : 
; 369  : 				&smoke->final_vertical_velocity,
; 370  : 				&smoke->vertical_acceleration,
; 371  : 				&smoke->initial_velocity_noise,
; 372  : 
; 373  : 				&smoke->texture_size,
; 374  : 				&smoke->animation_rate,
; 375  : 				&additive,
; 376  : 				&draw_type,
; 377  : 				&flat,
; 378  : 				&ground_based,
; 379  : 				&lock_to_parent,
; 380  : 				&wind_affected) != 33)

  001ae	8d 85 90 f7 ff
	ff		 lea	 eax, DWORD PTR _wind_affected$[ebp]
  001b4	50		 push	 eax
  001b5	8d 8d 94 f7 ff
	ff		 lea	 ecx, DWORD PTR _lock_to_parent$[ebp]
  001bb	51		 push	 ecx
  001bc	8d 95 98 f7 ff
	ff		 lea	 edx, DWORD PTR _ground_based$[ebp]
  001c2	52		 push	 edx
  001c3	8d 85 9c f7 ff
	ff		 lea	 eax, DWORD PTR _flat$[ebp]
  001c9	50		 push	 eax
  001ca	8d 8d a0 f7 ff
	ff		 lea	 ecx, DWORD PTR _draw_type$[ebp]
  001d0	51		 push	 ecx
  001d1	8d 95 a4 f7 ff
	ff		 lea	 edx, DWORD PTR _additive$[ebp]
  001d7	52		 push	 edx
  001d8	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _smoke$[ebp]
  001de	83 c0 3c	 add	 eax, 60			; 0000003cH
  001e1	50		 push	 eax
  001e2	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  001e8	83 c1 38	 add	 ecx, 56			; 00000038H
  001eb	51		 push	 ecx
  001ec	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  001f2	83 c2 30	 add	 edx, 48			; 00000030H
  001f5	52		 push	 edx
  001f6	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _smoke$[ebp]
  001fc	83 c0 2c	 add	 eax, 44			; 0000002cH
  001ff	50		 push	 eax
  00200	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  00206	83 c1 28	 add	 ecx, 40			; 00000028H
  00209	51		 push	 ecx
  0020a	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00210	83 c2 24	 add	 edx, 36			; 00000024H
  00213	52		 push	 edx
  00214	8d 85 a8 f7 ff
	ff		 lea	 eax, DWORD PTR _alpha_end$[ebp]
  0021a	50		 push	 eax
  0021b	8d 8d ac f7 ff
	ff		 lea	 ecx, DWORD PTR _blue_end$[ebp]
  00221	51		 push	 ecx
  00222	8d 95 b0 f7 ff
	ff		 lea	 edx, DWORD PTR _green_end$[ebp]
  00228	52		 push	 edx
  00229	8d 85 b4 f7 ff
	ff		 lea	 eax, DWORD PTR _red_end$[ebp]
  0022f	50		 push	 eax
  00230	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  00236	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00239	51		 push	 ecx
  0023a	8d 95 b8 f7 ff
	ff		 lea	 edx, DWORD PTR _alpha_2$[ebp]
  00240	52		 push	 edx
  00241	8d 85 bc f7 ff
	ff		 lea	 eax, DWORD PTR _blue_2$[ebp]
  00247	50		 push	 eax
  00248	8d 8d c0 f7 ff
	ff		 lea	 ecx, DWORD PTR _green_2$[ebp]
  0024e	51		 push	 ecx
  0024f	8d 95 c4 f7 ff
	ff		 lea	 edx, DWORD PTR _red_2$[ebp]
  00255	52		 push	 edx
  00256	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _smoke$[ebp]
  0025c	83 c0 14	 add	 eax, 20			; 00000014H
  0025f	50		 push	 eax
  00260	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  00266	83 c1 10	 add	 ecx, 16			; 00000010H
  00269	51		 push	 ecx
  0026a	8d 95 c8 f7 ff
	ff		 lea	 edx, DWORD PTR _alpha_1$[ebp]
  00270	52		 push	 edx
  00271	8d 85 cc f7 ff
	ff		 lea	 eax, DWORD PTR _blue_1$[ebp]
  00277	50		 push	 eax
  00278	8d 8d d0 f7 ff
	ff		 lea	 ecx, DWORD PTR _green_1$[ebp]
  0027e	51		 push	 ecx
  0027f	8d 95 d4 f7 ff
	ff		 lea	 edx, DWORD PTR _red_1$[ebp]
  00285	52		 push	 edx
  00286	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _smoke$[ebp]
  0028c	83 c0 08	 add	 eax, 8
  0028f	50		 push	 eax
  00290	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  00296	83 c1 04	 add	 ecx, 4
  00299	51		 push	 ecx
  0029a	8d 95 d8 f7 ff
	ff		 lea	 edx, DWORD PTR _alpha_start$[ebp]
  002a0	52		 push	 edx
  002a1	8d 85 dc f7 ff
	ff		 lea	 eax, DWORD PTR _blue_start$[ebp]
  002a7	50		 push	 eax
  002a8	8d 8d e0 f7 ff
	ff		 lea	 ecx, DWORD PTR _green_start$[ebp]
  002ae	51		 push	 ecx
  002af	8d 95 e4 f7 ff
	ff		 lea	 edx, DWORD PTR _red_start$[ebp]
  002b5	52		 push	 edx
  002b6	68 00 00 00 00	 push	 OFFSET ??_C@_0GD@KIHAKPHE@?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CF@
  002bb	8b 85 f8 f7 ff
	ff		 mov	 eax, DWORD PTR _ptr$[ebp]
  002c1	83 c0 01	 add	 eax, 1
  002c4	50		 push	 eax
  002c5	e8 00 00 00 00	 call	 _sscanf
  002ca	81 c4 8c 00 00
	00		 add	 esp, 140		; 0000008cH
  002d0	83 f8 21	 cmp	 eax, 33			; 00000021H
  002d3	74 05		 je	 SHORT $LN13@import_smo

; 381  : 			{
; 382  : 				continue;

  002d5	e9 79 fd ff ff	 jmp	 $LN2@import_smo
$LN13@import_smo:

; 383  : 			}
; 384  : 			smoke->red_start = (unsigned char)bound (red_start, 0, 255);

  002da	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _red_start$[ebp], 0
  002e1	7d 0c		 jge	 SHORT $LN18@import_smo
  002e3	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv194[ebp], 0
  002ed	eb 30		 jmp	 SHORT $LN19@import_smo
$LN18@import_smo:
  002ef	81 bd e4 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _red_start$[ebp], 255 ; 000000ffH
  002f9	7e 0c		 jle	 SHORT $LN16@import_smo
  002fb	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv193[ebp], 255 ; 000000ffH
  00305	eb 0c		 jmp	 SHORT $LN17@import_smo
$LN16@import_smo:
  00307	8b 85 e4 f7 ff
	ff		 mov	 eax, DWORD PTR _red_start$[ebp]
  0030d	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv193[ebp], eax
$LN17@import_smo:
  00313	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv193[ebp]
  00319	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv194[ebp], ecx
$LN19@import_smo:
  0031f	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00325	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv194[ebp]
  0032b	88 02		 mov	 BYTE PTR [edx], al

; 385  : 			smoke->green_start = (unsigned char)bound (green_start, 0, 255);

  0032d	83 bd e0 f7 ff
	ff 00		 cmp	 DWORD PTR _green_start$[ebp], 0
  00334	7d 0c		 jge	 SHORT $LN22@import_smo
  00336	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
  00340	eb 30		 jmp	 SHORT $LN23@import_smo
$LN22@import_smo:
  00342	81 bd e0 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _green_start$[ebp], 255 ; 000000ffH
  0034c	7e 0c		 jle	 SHORT $LN20@import_smo
  0034e	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv199[ebp], 255 ; 000000ffH
  00358	eb 0c		 jmp	 SHORT $LN21@import_smo
$LN20@import_smo:
  0035a	8b 85 e0 f7 ff
	ff		 mov	 eax, DWORD PTR _green_start$[ebp]
  00360	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv199[ebp], eax
$LN21@import_smo:
  00366	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv199[ebp]
  0036c	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv200[ebp], ecx
$LN23@import_smo:
  00372	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00378	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv200[ebp]
  0037e	88 42 01	 mov	 BYTE PTR [edx+1], al

; 386  : 			smoke->blue_start = (unsigned char)bound (blue_start, 0, 255);

  00381	83 bd dc f7 ff
	ff 00		 cmp	 DWORD PTR _blue_start$[ebp], 0
  00388	7d 0c		 jge	 SHORT $LN26@import_smo
  0038a	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
  00394	eb 30		 jmp	 SHORT $LN27@import_smo
$LN26@import_smo:
  00396	81 bd dc f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _blue_start$[ebp], 255 ; 000000ffH
  003a0	7e 0c		 jle	 SHORT $LN24@import_smo
  003a2	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv205[ebp], 255 ; 000000ffH
  003ac	eb 0c		 jmp	 SHORT $LN25@import_smo
$LN24@import_smo:
  003ae	8b 85 dc f7 ff
	ff		 mov	 eax, DWORD PTR _blue_start$[ebp]
  003b4	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv205[ebp], eax
$LN25@import_smo:
  003ba	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv205[ebp]
  003c0	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv206[ebp], ecx
$LN27@import_smo:
  003c6	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  003cc	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv206[ebp]
  003d2	88 42 02	 mov	 BYTE PTR [edx+2], al

; 387  : 			smoke->alpha_start = (unsigned char)bound (alpha_start, 0, 255);

  003d5	83 bd d8 f7 ff
	ff 00		 cmp	 DWORD PTR _alpha_start$[ebp], 0
  003dc	7d 0c		 jge	 SHORT $LN30@import_smo
  003de	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv212[ebp], 0
  003e8	eb 30		 jmp	 SHORT $LN31@import_smo
$LN30@import_smo:
  003ea	81 bd d8 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _alpha_start$[ebp], 255 ; 000000ffH
  003f4	7e 0c		 jle	 SHORT $LN28@import_smo
  003f6	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv211[ebp], 255 ; 000000ffH
  00400	eb 0c		 jmp	 SHORT $LN29@import_smo
$LN28@import_smo:
  00402	8b 85 d8 f7 ff
	ff		 mov	 eax, DWORD PTR _alpha_start$[ebp]
  00408	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv211[ebp], eax
$LN29@import_smo:
  0040e	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv211[ebp]
  00414	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv212[ebp], ecx
$LN31@import_smo:
  0041a	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00420	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv212[ebp]
  00426	88 42 03	 mov	 BYTE PTR [edx+3], al

; 388  : 			smoke->red_1 = (unsigned char)bound (red_1, 0, 255);

  00429	83 bd d4 f7 ff
	ff 00		 cmp	 DWORD PTR _red_1$[ebp], 0
  00430	7d 0c		 jge	 SHORT $LN34@import_smo
  00432	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv218[ebp], 0
  0043c	eb 30		 jmp	 SHORT $LN35@import_smo
$LN34@import_smo:
  0043e	81 bd d4 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _red_1$[ebp], 255 ; 000000ffH
  00448	7e 0c		 jle	 SHORT $LN32@import_smo
  0044a	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv217[ebp], 255 ; 000000ffH
  00454	eb 0c		 jmp	 SHORT $LN33@import_smo
$LN32@import_smo:
  00456	8b 85 d4 f7 ff
	ff		 mov	 eax, DWORD PTR _red_1$[ebp]
  0045c	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv217[ebp], eax
$LN33@import_smo:
  00462	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv217[ebp]
  00468	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv218[ebp], ecx
$LN35@import_smo:
  0046e	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00474	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv218[ebp]
  0047a	88 42 0c	 mov	 BYTE PTR [edx+12], al

; 389  : 			smoke->green_1 = (unsigned char)bound (green_1, 0, 255);

  0047d	83 bd d0 f7 ff
	ff 00		 cmp	 DWORD PTR _green_1$[ebp], 0
  00484	7d 0c		 jge	 SHORT $LN38@import_smo
  00486	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv224[ebp], 0
  00490	eb 30		 jmp	 SHORT $LN39@import_smo
$LN38@import_smo:
  00492	81 bd d0 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _green_1$[ebp], 255 ; 000000ffH
  0049c	7e 0c		 jle	 SHORT $LN36@import_smo
  0049e	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv223[ebp], 255 ; 000000ffH
  004a8	eb 0c		 jmp	 SHORT $LN37@import_smo
$LN36@import_smo:
  004aa	8b 85 d0 f7 ff
	ff		 mov	 eax, DWORD PTR _green_1$[ebp]
  004b0	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv223[ebp], eax
$LN37@import_smo:
  004b6	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv223[ebp]
  004bc	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv224[ebp], ecx
$LN39@import_smo:
  004c2	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  004c8	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv224[ebp]
  004ce	88 42 0d	 mov	 BYTE PTR [edx+13], al

; 390  : 			smoke->blue_1 = (unsigned char)bound (blue_1, 0, 255);

  004d1	83 bd cc f7 ff
	ff 00		 cmp	 DWORD PTR _blue_1$[ebp], 0
  004d8	7d 0c		 jge	 SHORT $LN42@import_smo
  004da	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv230[ebp], 0
  004e4	eb 30		 jmp	 SHORT $LN43@import_smo
$LN42@import_smo:
  004e6	81 bd cc f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _blue_1$[ebp], 255 ; 000000ffH
  004f0	7e 0c		 jle	 SHORT $LN40@import_smo
  004f2	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv229[ebp], 255 ; 000000ffH
  004fc	eb 0c		 jmp	 SHORT $LN41@import_smo
$LN40@import_smo:
  004fe	8b 85 cc f7 ff
	ff		 mov	 eax, DWORD PTR _blue_1$[ebp]
  00504	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv229[ebp], eax
$LN41@import_smo:
  0050a	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv229[ebp]
  00510	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv230[ebp], ecx
$LN43@import_smo:
  00516	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  0051c	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv230[ebp]
  00522	88 42 0e	 mov	 BYTE PTR [edx+14], al

; 391  : 			smoke->alpha_1 = (unsigned char)bound (alpha_1, 0, 255);

  00525	83 bd c8 f7 ff
	ff 00		 cmp	 DWORD PTR _alpha_1$[ebp], 0
  0052c	7d 0c		 jge	 SHORT $LN46@import_smo
  0052e	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv236[ebp], 0
  00538	eb 30		 jmp	 SHORT $LN47@import_smo
$LN46@import_smo:
  0053a	81 bd c8 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _alpha_1$[ebp], 255 ; 000000ffH
  00544	7e 0c		 jle	 SHORT $LN44@import_smo
  00546	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv235[ebp], 255 ; 000000ffH
  00550	eb 0c		 jmp	 SHORT $LN45@import_smo
$LN44@import_smo:
  00552	8b 85 c8 f7 ff
	ff		 mov	 eax, DWORD PTR _alpha_1$[ebp]
  00558	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv235[ebp], eax
$LN45@import_smo:
  0055e	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv235[ebp]
  00564	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv236[ebp], ecx
$LN47@import_smo:
  0056a	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00570	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv236[ebp]
  00576	88 42 0f	 mov	 BYTE PTR [edx+15], al

; 392  : 			smoke->red_2 = (unsigned char)bound (red_2, 0, 255);

  00579	83 bd c4 f7 ff
	ff 00		 cmp	 DWORD PTR _red_2$[ebp], 0
  00580	7d 0c		 jge	 SHORT $LN50@import_smo
  00582	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
  0058c	eb 30		 jmp	 SHORT $LN51@import_smo
$LN50@import_smo:
  0058e	81 bd c4 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _red_2$[ebp], 255 ; 000000ffH
  00598	7e 0c		 jle	 SHORT $LN48@import_smo
  0059a	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv241[ebp], 255 ; 000000ffH
  005a4	eb 0c		 jmp	 SHORT $LN49@import_smo
$LN48@import_smo:
  005a6	8b 85 c4 f7 ff
	ff		 mov	 eax, DWORD PTR _red_2$[ebp]
  005ac	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv241[ebp], eax
$LN49@import_smo:
  005b2	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv241[ebp]
  005b8	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv242[ebp], ecx
$LN51@import_smo:
  005be	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  005c4	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv242[ebp]
  005ca	88 42 18	 mov	 BYTE PTR [edx+24], al

; 393  : 			smoke->green_2 = (unsigned char)bound (green_2, 0, 255);

  005cd	83 bd c0 f7 ff
	ff 00		 cmp	 DWORD PTR _green_2$[ebp], 0
  005d4	7d 0c		 jge	 SHORT $LN54@import_smo
  005d6	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp], 0
  005e0	eb 30		 jmp	 SHORT $LN55@import_smo
$LN54@import_smo:
  005e2	81 bd c0 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _green_2$[ebp], 255 ; 000000ffH
  005ec	7e 0c		 jle	 SHORT $LN52@import_smo
  005ee	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv247[ebp], 255 ; 000000ffH
  005f8	eb 0c		 jmp	 SHORT $LN53@import_smo
$LN52@import_smo:
  005fa	8b 85 c0 f7 ff
	ff		 mov	 eax, DWORD PTR _green_2$[ebp]
  00600	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv247[ebp], eax
$LN53@import_smo:
  00606	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv247[ebp]
  0060c	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv248[ebp], ecx
$LN55@import_smo:
  00612	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00618	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv248[ebp]
  0061e	88 42 19	 mov	 BYTE PTR [edx+25], al

; 394  : 			smoke->blue_2 = (unsigned char)bound (blue_2, 0, 255);

  00621	83 bd bc f7 ff
	ff 00		 cmp	 DWORD PTR _blue_2$[ebp], 0
  00628	7d 0c		 jge	 SHORT $LN58@import_smo
  0062a	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv254[ebp], 0
  00634	eb 30		 jmp	 SHORT $LN59@import_smo
$LN58@import_smo:
  00636	81 bd bc f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _blue_2$[ebp], 255 ; 000000ffH
  00640	7e 0c		 jle	 SHORT $LN56@import_smo
  00642	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv253[ebp], 255 ; 000000ffH
  0064c	eb 0c		 jmp	 SHORT $LN57@import_smo
$LN56@import_smo:
  0064e	8b 85 bc f7 ff
	ff		 mov	 eax, DWORD PTR _blue_2$[ebp]
  00654	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv253[ebp], eax
$LN57@import_smo:
  0065a	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv253[ebp]
  00660	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv254[ebp], ecx
$LN59@import_smo:
  00666	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  0066c	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv254[ebp]
  00672	88 42 1a	 mov	 BYTE PTR [edx+26], al

; 395  : 			smoke->alpha_2 = (unsigned char)bound (alpha_2, 0, 255);

  00675	83 bd b8 f7 ff
	ff 00		 cmp	 DWORD PTR _alpha_2$[ebp], 0
  0067c	7d 0c		 jge	 SHORT $LN62@import_smo
  0067e	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv260[ebp], 0
  00688	eb 30		 jmp	 SHORT $LN63@import_smo
$LN62@import_smo:
  0068a	81 bd b8 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _alpha_2$[ebp], 255 ; 000000ffH
  00694	7e 0c		 jle	 SHORT $LN60@import_smo
  00696	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv259[ebp], 255 ; 000000ffH
  006a0	eb 0c		 jmp	 SHORT $LN61@import_smo
$LN60@import_smo:
  006a2	8b 85 b8 f7 ff
	ff		 mov	 eax, DWORD PTR _alpha_2$[ebp]
  006a8	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv259[ebp], eax
$LN61@import_smo:
  006ae	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv259[ebp]
  006b4	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv260[ebp], ecx
$LN63@import_smo:
  006ba	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  006c0	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv260[ebp]
  006c6	88 42 1b	 mov	 BYTE PTR [edx+27], al

; 396  : 			smoke->red_end = (unsigned char)bound (red_end, 0, 255);

  006c9	83 bd b4 f7 ff
	ff 00		 cmp	 DWORD PTR _red_end$[ebp], 0
  006d0	7d 0c		 jge	 SHORT $LN66@import_smo
  006d2	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv266[ebp], 0
  006dc	eb 30		 jmp	 SHORT $LN67@import_smo
$LN66@import_smo:
  006de	81 bd b4 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _red_end$[ebp], 255 ; 000000ffH
  006e8	7e 0c		 jle	 SHORT $LN64@import_smo
  006ea	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv265[ebp], 255 ; 000000ffH
  006f4	eb 0c		 jmp	 SHORT $LN65@import_smo
$LN64@import_smo:
  006f6	8b 85 b4 f7 ff
	ff		 mov	 eax, DWORD PTR _red_end$[ebp]
  006fc	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv265[ebp], eax
$LN65@import_smo:
  00702	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv265[ebp]
  00708	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv266[ebp], ecx
$LN67@import_smo:
  0070e	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00714	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv266[ebp]
  0071a	88 42 20	 mov	 BYTE PTR [edx+32], al

; 397  : 			smoke->green_end = (unsigned char)bound (green_end, 0, 255);

  0071d	83 bd b0 f7 ff
	ff 00		 cmp	 DWORD PTR _green_end$[ebp], 0
  00724	7d 0c		 jge	 SHORT $LN70@import_smo
  00726	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
  00730	eb 30		 jmp	 SHORT $LN71@import_smo
$LN70@import_smo:
  00732	81 bd b0 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _green_end$[ebp], 255 ; 000000ffH
  0073c	7e 0c		 jle	 SHORT $LN68@import_smo
  0073e	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv271[ebp], 255 ; 000000ffH
  00748	eb 0c		 jmp	 SHORT $LN69@import_smo
$LN68@import_smo:
  0074a	8b 85 b0 f7 ff
	ff		 mov	 eax, DWORD PTR _green_end$[ebp]
  00750	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv271[ebp], eax
$LN69@import_smo:
  00756	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv271[ebp]
  0075c	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv272[ebp], ecx
$LN71@import_smo:
  00762	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00768	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv272[ebp]
  0076e	88 42 21	 mov	 BYTE PTR [edx+33], al

; 398  : 			smoke->blue_end = (unsigned char)bound (blue_end, 0, 255);

  00771	83 bd ac f7 ff
	ff 00		 cmp	 DWORD PTR _blue_end$[ebp], 0
  00778	7d 0c		 jge	 SHORT $LN74@import_smo
  0077a	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv278[ebp], 0
  00784	eb 30		 jmp	 SHORT $LN75@import_smo
$LN74@import_smo:
  00786	81 bd ac f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _blue_end$[ebp], 255 ; 000000ffH
  00790	7e 0c		 jle	 SHORT $LN72@import_smo
  00792	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv277[ebp], 255 ; 000000ffH
  0079c	eb 0c		 jmp	 SHORT $LN73@import_smo
$LN72@import_smo:
  0079e	8b 85 ac f7 ff
	ff		 mov	 eax, DWORD PTR _blue_end$[ebp]
  007a4	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv277[ebp], eax
$LN73@import_smo:
  007aa	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv277[ebp]
  007b0	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv278[ebp], ecx
$LN75@import_smo:
  007b6	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  007bc	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv278[ebp]
  007c2	88 42 22	 mov	 BYTE PTR [edx+34], al

; 399  : 			smoke->alpha_end = (unsigned char)bound (alpha_end, 0, 255);

  007c5	83 bd a8 f7 ff
	ff 00		 cmp	 DWORD PTR _alpha_end$[ebp], 0
  007cc	7d 0c		 jge	 SHORT $LN78@import_smo
  007ce	c7 85 4c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv284[ebp], 0
  007d8	eb 30		 jmp	 SHORT $LN79@import_smo
$LN78@import_smo:
  007da	81 bd a8 f7 ff
	ff ff 00 00 00	 cmp	 DWORD PTR _alpha_end$[ebp], 255 ; 000000ffH
  007e4	7e 0c		 jle	 SHORT $LN76@import_smo
  007e6	c7 85 48 f6 ff
	ff ff 00 00 00	 mov	 DWORD PTR tv283[ebp], 255 ; 000000ffH
  007f0	eb 0c		 jmp	 SHORT $LN77@import_smo
$LN76@import_smo:
  007f2	8b 85 a8 f7 ff
	ff		 mov	 eax, DWORD PTR _alpha_end$[ebp]
  007f8	89 85 48 f6 ff
	ff		 mov	 DWORD PTR tv283[ebp], eax
$LN77@import_smo:
  007fe	8b 8d 48 f6 ff
	ff		 mov	 ecx, DWORD PTR tv283[ebp]
  00804	89 8d 4c f6 ff
	ff		 mov	 DWORD PTR tv284[ebp], ecx
$LN79@import_smo:
  0080a	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00810	8a 85 4c f6 ff
	ff		 mov	 al, BYTE PTR tv284[ebp]
  00816	88 42 23	 mov	 BYTE PTR [edx+35], al

; 400  : 			smoke->texture = (texture_animation_indices)add_new_animation (texture_animation);

  00819	8b 85 f0 f7 ff
	ff		 mov	 eax, DWORD PTR _texture_animation$[ebp]
  0081f	50		 push	 eax
  00820	e8 00 00 00 00	 call	 ?add_new_animation@@YGHPAD@Z ; add_new_animation
  00825	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  0082b	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 401  : 			smoke->additive = additive != 0;

  0082e	83 bd a4 f7 ff
	ff 00		 cmp	 DWORD PTR _additive$[ebp], 0
  00835	74 0e		 je	 SHORT $LN80@import_smo
  00837	b8 01 00 00 00	 mov	 eax, 1
  0083c	66 89 85 4e f6
	ff ff		 mov	 WORD PTR tv291[ebp], ax
  00843	eb 09		 jmp	 SHORT $LN81@import_smo
$LN80@import_smo:
  00845	33 c9		 xor	 ecx, ecx
  00847	66 89 8d 4e f6
	ff ff		 mov	 WORD PTR tv291[ebp], cx
$LN81@import_smo:
  0084e	66 8b 95 4e f6
	ff ff		 mov	 dx, WORD PTR tv291[ebp]
  00855	66 83 e2 01	 and	 dx, 1
  00859	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  0085e	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  00864	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00868	66 0b c2	 or	 ax, dx
  0086b	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00871	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 402  : 			smoke->draw_type = draw_type != 0;

  00875	83 bd a0 f7 ff
	ff 00		 cmp	 DWORD PTR _draw_type$[ebp], 0
  0087c	74 0e		 je	 SHORT $LN82@import_smo
  0087e	b8 01 00 00 00	 mov	 eax, 1
  00883	66 89 85 4e f6
	ff ff		 mov	 WORD PTR tv298[ebp], ax
  0088a	eb 09		 jmp	 SHORT $LN83@import_smo
$LN82@import_smo:
  0088c	33 c9		 xor	 ecx, ecx
  0088e	66 89 8d 4e f6
	ff ff		 mov	 WORD PTR tv298[ebp], cx
$LN83@import_smo:
  00895	66 8b 95 4e f6
	ff ff		 mov	 dx, WORD PTR tv298[ebp]
  0089c	66 83 e2 01	 and	 dx, 1
  008a0	66 d1 e2	 shl	 dx, 1
  008a3	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  008a8	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  008ae	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  008b2	66 0b c2	 or	 ax, dx
  008b5	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  008bb	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 403  : 			smoke->flat = flat != 0;

  008bf	83 bd 9c f7 ff
	ff 00		 cmp	 DWORD PTR _flat$[ebp], 0
  008c6	74 0e		 je	 SHORT $LN84@import_smo
  008c8	b8 01 00 00 00	 mov	 eax, 1
  008cd	66 89 85 4e f6
	ff ff		 mov	 WORD PTR tv306[ebp], ax
  008d4	eb 09		 jmp	 SHORT $LN85@import_smo
$LN84@import_smo:
  008d6	33 c9		 xor	 ecx, ecx
  008d8	66 89 8d 4e f6
	ff ff		 mov	 WORD PTR tv306[ebp], cx
$LN85@import_smo:
  008df	66 8b 95 4e f6
	ff ff		 mov	 dx, WORD PTR tv306[ebp]
  008e6	66 83 e2 01	 and	 dx, 1
  008ea	66 c1 e2 02	 shl	 dx, 2
  008ee	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  008f3	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  008f9	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  008fd	66 0b c2	 or	 ax, dx
  00900	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00906	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 404  : 			smoke->ground_based = ground_based != 0;

  0090a	83 bd 98 f7 ff
	ff 00		 cmp	 DWORD PTR _ground_based$[ebp], 0
  00911	74 0e		 je	 SHORT $LN86@import_smo
  00913	b8 01 00 00 00	 mov	 eax, 1
  00918	66 89 85 4e f6
	ff ff		 mov	 WORD PTR tv314[ebp], ax
  0091f	eb 09		 jmp	 SHORT $LN87@import_smo
$LN86@import_smo:
  00921	33 c9		 xor	 ecx, ecx
  00923	66 89 8d 4e f6
	ff ff		 mov	 WORD PTR tv314[ebp], cx
$LN87@import_smo:
  0092a	66 8b 95 4e f6
	ff ff		 mov	 dx, WORD PTR tv314[ebp]
  00931	66 83 e2 01	 and	 dx, 1
  00935	66 c1 e2 03	 shl	 dx, 3
  00939	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  0093e	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  00944	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00948	66 0b c2	 or	 ax, dx
  0094b	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  00951	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 405  : 			smoke->lock_to_parent = lock_to_parent != 0;

  00955	83 bd 94 f7 ff
	ff 00		 cmp	 DWORD PTR _lock_to_parent$[ebp], 0
  0095c	74 0e		 je	 SHORT $LN88@import_smo
  0095e	b8 01 00 00 00	 mov	 eax, 1
  00963	66 89 85 4e f6
	ff ff		 mov	 WORD PTR tv322[ebp], ax
  0096a	eb 09		 jmp	 SHORT $LN89@import_smo
$LN88@import_smo:
  0096c	33 c9		 xor	 ecx, ecx
  0096e	66 89 8d 4e f6
	ff ff		 mov	 WORD PTR tv322[ebp], cx
$LN89@import_smo:
  00975	66 8b 95 4e f6
	ff ff		 mov	 dx, WORD PTR tv322[ebp]
  0097c	66 83 e2 01	 and	 dx, 1
  00980	66 c1 e2 04	 shl	 dx, 4
  00984	b8 ef ff 00 00	 mov	 eax, 65519		; 0000ffefH
  00989	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  0098f	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00993	66 0b c2	 or	 ax, dx
  00996	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  0099c	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 406  : 			smoke->wind_affected = wind_affected != 0;

  009a0	83 bd 90 f7 ff
	ff 00		 cmp	 DWORD PTR _wind_affected$[ebp], 0
  009a7	74 0e		 je	 SHORT $LN90@import_smo
  009a9	b8 01 00 00 00	 mov	 eax, 1
  009ae	66 89 85 4e f6
	ff ff		 mov	 WORD PTR tv330[ebp], ax
  009b5	eb 09		 jmp	 SHORT $LN91@import_smo
$LN90@import_smo:
  009b7	33 c9		 xor	 ecx, ecx
  009b9	66 89 8d 4e f6
	ff ff		 mov	 WORD PTR tv330[ebp], cx
$LN91@import_smo:
  009c0	66 8b 95 4e f6
	ff ff		 mov	 dx, WORD PTR tv330[ebp]
  009c7	66 83 e2 01	 and	 dx, 1
  009cb	66 c1 e2 05	 shl	 dx, 5
  009cf	b8 df ff 00 00	 mov	 eax, 65503		; 0000ffdfH
  009d4	8b 8d e8 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke$[ebp]
  009da	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  009de	66 0b c2	 or	 ax, dx
  009e1	8b 95 e8 f7 ff
	ff		 mov	 edx, DWORD PTR _smoke$[ebp]
  009e7	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 407  : 
; 408  : 			if (count == total_number_of_smoke_list_types)

  009eb	8b 85 ec f7 ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  009f1	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  009f7	75 72		 jne	 SHORT $LN14@import_smo

; 409  : 			{
; 410  : 				count = strlen (smoke_list_type_name) + 1;

  009f9	8b 85 f4 f7 ff
	ff		 mov	 eax, DWORD PTR _smoke_list_type_name$[ebp]
  009ff	50		 push	 eax
  00a00	e8 00 00 00 00	 call	 _strlen
  00a05	83 c4 04	 add	 esp, 4
  00a08	83 c0 01	 add	 eax, 1
  00a0b	89 85 ec f7 ff
	ff		 mov	 DWORD PTR _count$[ebp], eax

; 411  : 				smoke_list_types_names[total_number_of_smoke_list_types] = (char*) safe_malloc (count);

  00a11	8b 85 ec f7 ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00a17	50		 push	 eax
  00a18	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00a1d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  00a23	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  00a29	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 412  : 				memcpy (smoke_list_types_names[total_number_of_smoke_list_types], smoke_list_type_name, count);

  00a2c	8b 85 ec f7 ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00a32	50		 push	 eax
  00a33	8b 8d f4 f7 ff
	ff		 mov	 ecx, DWORD PTR _smoke_list_type_name$[ebp]
  00a39	51		 push	 ecx
  00a3a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  00a40	a1 00 00 00 00	 mov	 eax, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  00a45	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00a48	51		 push	 ecx
  00a49	e8 00 00 00 00	 call	 _memcpy
  00a4e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 413  : 				total_number_of_smoke_list_types++;

  00a51	a1 00 00 00 00	 mov	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  00a56	83 c0 01	 add	 eax, 1
  00a59	a3 00 00 00 00	 mov	 DWORD PTR ?total_number_of_smoke_list_types@@3HA, eax

; 414  : 				smoke_list_types_available--;

  00a5e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?smoke_list_types_available@@3HA
  00a63	83 e8 01	 sub	 eax, 1
  00a66	a3 00 00 00 00	 mov	 DWORD PTR ?smoke_list_types_available@@3HA, eax
$LN14@import_smo:

; 415  : 			}
; 416  : 		}

  00a6b	e9 e3 f5 ff ff	 jmp	 $LN2@import_smo
$LN4@import_smo:

; 417  : 	}
; 418  : 	safe_fclose (file);

  00a70	8b 45 fc	 mov	 eax, DWORD PTR _file$[ebp]
  00a73	50		 push	 eax
  00a74	e8 00 00 00 00	 call	 ?safe_fclose@@YGHPAU_iobuf@@@Z ; safe_fclose

; 419  : }

  00a79	5f		 pop	 edi
  00a7a	5e		 pop	 esi
  00a7b	5b		 pop	 ebx
  00a7c	8b e5		 mov	 esp, ebp
  00a7e	5d		 pop	 ebp
  00a7f	c3		 ret	 0
?import_smoke_list_database@@YGXXZ ENDP			; import_smoke_list_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
;	COMDAT ?export_smoke_list_database@@YGXXZ
_TEXT	SEGMENT
_smoke$ = -12						; size = 4
_count$ = -8						; size = 4
_file$ = -4						; size = 4
?export_smoke_list_database@@YGXXZ PROC			; export_smoke_list_database, COMDAT

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 177  : 	FILE
; 178  : 		*file;
; 179  : 	int
; 180  : 		count;
; 181  : 	const smoke_list_data
; 182  : 		*smoke;
; 183  : 
; 184  : 	file = safe_fopen (SMOKE_LIST_DATABASE_FILENAME, "w");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w@
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ICNOEHEB@SMOKES?4CSV@
  00013	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00018	89 45 fc	 mov	 DWORD PTR _file$[ebp], eax

; 185  : 	fprintf (file, "SMOKE;1\n");

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_08FPBCHBFF@SMOKE?$DL1?6@
  00020	8b 45 fc	 mov	 eax, DWORD PTR _file$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _fprintf
  00029	83 c4 08	 add	 esp, 8

; 186  : 	fprintf (file,

  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BHN@KGINLFKF@?$CDSmoke?5index?$DLSmoke?5name?$DLTexture@
  00031	8b 45 fc	 mov	 eax, DWORD PTR _file$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 _fprintf
  0003a	83 c4 08	 add	 esp, 8

; 187  : 		"#Smoke index;Smoke name;Texture animation;"
; 188  : 		"Start colour (red;green;blue;alpha;radius);"
; 189  : 		"Colour change #1 (change;red;green;blue;alpha;radius);"
; 190  : 		"Colour change #2 (change;red;green;blue;alpha;radius);"
; 191  : 		"End colour (red;green;blue;alpha;radius);"
; 192  : 		"Vertical velocity(final;acceleration;initial noise);"
; 193  : 		"Texture size;Animation rate;"
; 194  : 		"Additive;Draw type;Flat;Ground based;Lock to parent;Wind affected"
; 195  : 		"\n");
; 196  : 	for (count = 0; count < total_number_of_smoke_list_types; count++)

  0003d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00044	eb 09		 jmp	 SHORT $LN4@export_smo
$LN2@export_smo:
  00046	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00049	83 c0 01	 add	 eax, 1
  0004c	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@export_smo:
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00052	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  00058	0f 8d e9 01 00
	00		 jge	 $LN3@export_smo

; 197  : 	{
; 198  : 		if (count == SMOKE_LIST_TYPE_DOWNWASH_START)

  0005e	83 7d f8 15	 cmp	 DWORD PTR _count$[ebp], 21 ; 00000015H
  00062	75 02		 jne	 SHORT $LN5@export_smo

; 199  : 		{
; 200  : 			continue;

  00064	eb e0		 jmp	 SHORT $LN2@export_smo
$LN5@export_smo:

; 201  : 		}
; 202  : 
; 203  : 		smoke = &smoke_list_database[count];

  00066	6b 45 f8 44	 imul	 eax, DWORD PTR _count$[ebp], 68
  0006a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00070	89 45 f4	 mov	 DWORD PTR _smoke$[ebp], eax

; 204  : 		fprintf (file,

  00073	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  00076	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0007a	66 c1 e9 05	 shr	 cx, 5
  0007e	66 83 e1 01	 and	 cx, 1
  00082	0f b7 d1	 movzx	 edx, cx
  00085	52		 push	 edx
  00086	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  00089	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0008d	66 c1 e9 04	 shr	 cx, 4
  00091	66 83 e1 01	 and	 cx, 1
  00095	0f b7 d1	 movzx	 edx, cx
  00098	52		 push	 edx
  00099	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  0009c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  000a0	66 c1 e9 03	 shr	 cx, 3
  000a4	66 83 e1 01	 and	 cx, 1
  000a8	0f b7 d1	 movzx	 edx, cx
  000ab	52		 push	 edx
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  000af	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  000b3	66 c1 e9 02	 shr	 cx, 2
  000b7	66 83 e1 01	 and	 cx, 1
  000bb	0f b7 d1	 movzx	 edx, cx
  000be	52		 push	 edx
  000bf	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  000c2	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  000c6	66 d1 e9	 shr	 cx, 1
  000c9	66 83 e1 01	 and	 cx, 1
  000cd	0f b7 d1	 movzx	 edx, cx
  000d0	52		 push	 edx
  000d1	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  000d4	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  000d8	66 83 e1 01	 and	 cx, 1
  000dc	0f b7 d1	 movzx	 edx, cx
  000df	52		 push	 edx
  000e0	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  000e3	f3 0f 5a 40 3c	 cvtss2sd xmm0, DWORD PTR [eax+60]
  000e8	83 ec 08	 sub	 esp, 8
  000eb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f0	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  000f3	f3 0f 5a 41 38	 cvtss2sd xmm0, DWORD PTR [ecx+56]
  000f8	83 ec 08	 sub	 esp, 8
  000fb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00100	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  00103	f3 0f 5a 42 30	 cvtss2sd xmm0, DWORD PTR [edx+48]
  00108	83 ec 08	 sub	 esp, 8
  0010b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00110	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  00113	f3 0f 5a 40 2c	 cvtss2sd xmm0, DWORD PTR [eax+44]
  00118	83 ec 08	 sub	 esp, 8
  0011b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00120	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  00123	f3 0f 5a 41 28	 cvtss2sd xmm0, DWORD PTR [ecx+40]
  00128	83 ec 08	 sub	 esp, 8
  0012b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00130	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  00133	f3 0f 5a 42 24	 cvtss2sd xmm0, DWORD PTR [edx+36]
  00138	83 ec 08	 sub	 esp, 8
  0013b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00140	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  00143	0f b6 48 23	 movzx	 ecx, BYTE PTR [eax+35]
  00147	51		 push	 ecx
  00148	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  0014b	0f b6 42 22	 movzx	 eax, BYTE PTR [edx+34]
  0014f	50		 push	 eax
  00150	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  00153	0f b6 51 21	 movzx	 edx, BYTE PTR [ecx+33]
  00157	52		 push	 edx
  00158	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  0015b	0f b6 48 20	 movzx	 ecx, BYTE PTR [eax+32]
  0015f	51		 push	 ecx
  00160	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  00163	f3 0f 5a 42 1c	 cvtss2sd xmm0, DWORD PTR [edx+28]
  00168	83 ec 08	 sub	 esp, 8
  0016b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00170	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  00173	0f b6 48 1b	 movzx	 ecx, BYTE PTR [eax+27]
  00177	51		 push	 ecx
  00178	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  0017b	0f b6 42 1a	 movzx	 eax, BYTE PTR [edx+26]
  0017f	50		 push	 eax
  00180	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  00183	0f b6 51 19	 movzx	 edx, BYTE PTR [ecx+25]
  00187	52		 push	 edx
  00188	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  0018b	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  0018f	51		 push	 ecx
  00190	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  00193	f3 0f 5a 42 14	 cvtss2sd xmm0, DWORD PTR [edx+20]
  00198	83 ec 08	 sub	 esp, 8
  0019b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001a0	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  001a3	f3 0f 5a 40 10	 cvtss2sd xmm0, DWORD PTR [eax+16]
  001a8	83 ec 08	 sub	 esp, 8
  001ab	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001b0	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  001b3	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  001b7	52		 push	 edx
  001b8	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  001bb	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  001bf	51		 push	 ecx
  001c0	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  001c3	0f b6 42 0d	 movzx	 eax, BYTE PTR [edx+13]
  001c7	50		 push	 eax
  001c8	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  001cb	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  001cf	52		 push	 edx
  001d0	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  001d3	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  001d8	83 ec 08	 sub	 esp, 8
  001db	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001e0	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  001e3	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  001e8	83 ec 08	 sub	 esp, 8
  001eb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001f0	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  001f3	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  001f7	50		 push	 eax
  001f8	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  001fb	0f b6 51 02	 movzx	 edx, BYTE PTR [ecx+2]
  001ff	52		 push	 edx
  00200	8b 45 f4	 mov	 eax, DWORD PTR _smoke$[ebp]
  00203	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00207	51		 push	 ecx
  00208	8b 55 f4	 mov	 edx, DWORD PTR _smoke$[ebp]
  0020b	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0020e	50		 push	 eax
  0020f	8b 4d f4	 mov	 ecx, DWORD PTR _smoke$[ebp]
  00212	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00215	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animation_names@@3PAPBDA ; texture_animation_names
  0021a	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0021d	51		 push	 ecx
  0021e	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  00221	a1 00 00 00 00	 mov	 eax, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  00226	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00229	51		 push	 ecx
  0022a	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  0022d	52		 push	 edx
  0022e	68 00 00 00 00	 push	 OFFSET ??_C@_0GN@NLJBOFFE@?$CFi?$DL?$CFs?$DL?$CFs?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFi?$DL?$CFf?$DL?$CFf?$DL?$CFi?$DL?$CF@
  00233	8b 45 fc	 mov	 eax, DWORD PTR _file$[ebp]
  00236	50		 push	 eax
  00237	e8 00 00 00 00	 call	 _fprintf
  0023c	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H

; 205  : 			"%i;%s;%s;"
; 206  : 			"%i;%i;%i;%i;%f;"
; 207  : 			"%f;%i;%i;%i;%i;%f;"
; 208  : 			"%f;%i;%i;%i;%i;%f;"
; 209  : 			"%i;%i;%i;%i;%f;"
; 210  : 			"%f;%f;%f;"
; 211  : 			"%f;%f;%i;%i;%i;%i;%i;%i\n",
; 212  : 			count, smoke_list_types_names[count], texture_animation_names[smoke->texture],
; 213  : 
; 214  : 			smoke->red_start,
; 215  : 			smoke->green_start,
; 216  : 			smoke->blue_start,
; 217  : 			smoke->alpha_start,
; 218  : 			smoke->radius_start,
; 219  : 
; 220  : 			smoke->colour_change_1,
; 221  : 			smoke->red_1,
; 222  : 			smoke->green_1,
; 223  : 			smoke->blue_1,
; 224  : 			smoke->alpha_1,
; 225  : 			smoke->radius_1,
; 226  : 
; 227  : 			smoke->colour_change_2,
; 228  : 			smoke->red_2,
; 229  : 			smoke->green_2,
; 230  : 			smoke->blue_2,
; 231  : 			smoke->alpha_2,
; 232  : 			smoke->radius_2,
; 233  : 
; 234  : 			smoke->red_end,
; 235  : 			smoke->green_end,
; 236  : 			smoke->blue_end,
; 237  : 			smoke->alpha_end,
; 238  : 			smoke->radius_end,
; 239  : 
; 240  : 			smoke->final_vertical_velocity,
; 241  : 			smoke->vertical_acceleration,
; 242  : 			smoke->initial_velocity_noise,
; 243  : 			smoke->texture_size,
; 244  : 			smoke->animation_rate,
; 245  : 			smoke->additive,
; 246  : 			smoke->draw_type,
; 247  : 			smoke->flat,
; 248  : 			smoke->ground_based,
; 249  : 			smoke->lock_to_parent,
; 250  : 			smoke->wind_affected);
; 251  : 	}

  00242	e9 ff fd ff ff	 jmp	 $LN2@export_smo
$LN3@export_smo:

; 252  : 	safe_fclose (file);

  00247	8b 45 fc	 mov	 eax, DWORD PTR _file$[ebp]
  0024a	50		 push	 eax
  0024b	e8 00 00 00 00	 call	 ?safe_fclose@@YGHPAU_iobuf@@@Z ; safe_fclose

; 253  : }

  00250	5f		 pop	 edi
  00251	5e		 pop	 esi
  00252	5b		 pop	 ebx
  00253	8b e5		 mov	 esp, ebp
  00255	5d		 pop	 ebp
  00256	c3		 ret	 0
?export_smoke_list_database@@YGXXZ ENDP			; export_smoke_list_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
;	COMDAT ?deinitialise_smoke_list_types_names@@YGXXZ
_TEXT	SEGMENT
_count$ = -4						; size = 4
?deinitialise_smoke_list_types_names@@YGXXZ PROC	; deinitialise_smoke_list_types_names, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 133  : 	int
; 134  : 		count;
; 135  : 
; 136  : 	if (!smoke_list_types_names)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?smoke_list_types_names@@3PAPADA, 0 ; smoke_list_types_names
  00010	75 02		 jne	 SHORT $LN5@deinitiali

; 137  : 	{
; 138  : 		return;

  00012	eb 5a		 jmp	 SHORT $LN1@deinitiali
$LN5@deinitiali:

; 139  : 	}
; 140  : 
; 141  : 	for (count = 0; count < total_number_of_smoke_list_types + smoke_list_types_available; count++)

  00014	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0001b	eb 09		 jmp	 SHORT $LN4@deinitiali
$LN2@deinitiali:
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00020	83 c0 01	 add	 eax, 1
  00023	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@deinitiali:
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  0002b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_types_available@@3HA
  00031	39 45 fc	 cmp	 DWORD PTR _count$[ebp], eax
  00034	7d 23		 jge	 SHORT $LN3@deinitiali

; 142  : 	{
; 143  : 		if (smoke_list_types_names[count])

  00036	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  0003f	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00043	74 12		 je	 SHORT $LN6@deinitiali

; 144  : 		{
; 145  : 			safe_free (smoke_list_types_names[count]);

  00045	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  0004e	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN6@deinitiali:

; 146  : 		}
; 147  : 	}

  00057	eb c4		 jmp	 SHORT $LN2@deinitiali
$LN3@deinitiali:

; 148  : 
; 149  : 	safe_free (smoke_list_types_names);

  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 150  : 	smoke_list_types_names = NULL;

  00064	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?smoke_list_types_names@@3PAPADA, 0 ; smoke_list_types_names
$LN1@deinitiali:

; 151  : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?deinitialise_smoke_list_types_names@@YGXXZ ENDP	; deinitialise_smoke_list_types_names
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
;	COMDAT ?initialise_smoke_list_types_names@@YGXXZ
_TEXT	SEGMENT
_size$ = -8						; size = 4
_count$ = -4						; size = 4
?initialise_smoke_list_types_names@@YGXXZ PROC		; initialise_smoke_list_types_names, COMDAT

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 114  : 	int
; 115  : 		count,
; 116  : 		size;
; 117  : 
; 118  : 	smoke_list_types_names = (char **)safe_malloc ((total_number_of_smoke_list_types + smoke_list_types_available) * sizeof (char *));

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  0000e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_types_available@@3HA
  00014	c1 e0 02	 shl	 eax, 2
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0001d	a3 00 00 00 00	 mov	 DWORD PTR ?smoke_list_types_names@@3PAPADA, eax ; smoke_list_types_names

; 119  : 	for (count = 0; count < NUM_SMOKE_LIST_TYPES; count++)

  00022	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00029	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0002e	83 c0 01	 add	 eax, 1
  00031	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@initialise:
  00034	83 7d fc 23	 cmp	 DWORD PTR _count$[ebp], 35 ; 00000023H
  00038	7d 54		 jge	 SHORT $LN3@initialise

; 120  : 	{
; 121  : 		size = strlen(default_smoke_list_types_names[count]) + 1;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0003d	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?default_smoke_list_types_names@@3PAPBDA[eax*4]
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 _strlen
  0004a	83 c4 04	 add	 esp, 4
  0004d	83 c0 01	 add	 eax, 1
  00050	89 45 f8	 mov	 DWORD PTR _size$[ebp], eax

; 122  : 		smoke_list_types_names[count] = (char*) safe_malloc (size);

  00053	8b 45 f8	 mov	 eax, DWORD PTR _size$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  0005f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  00065	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 123  : 		memcpy (smoke_list_types_names[count], default_smoke_list_types_names[count], size);

  00068	8b 45 f8	 mov	 eax, DWORD PTR _size$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  0006f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?default_smoke_list_types_names@@3PAPBDA[ecx*4]
  00076	52		 push	 edx
  00077	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0007a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  00080	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 _memcpy
  00089	83 c4 0c	 add	 esp, 12			; 0000000cH

; 124  : 	}

  0008c	eb 9d		 jmp	 SHORT $LN2@initialise
$LN3@initialise:

; 125  : 	for (; count < total_number_of_smoke_list_types + smoke_list_types_available; count++)

  0008e	eb 09		 jmp	 SHORT $LN7@initialise
$LN5@initialise:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00093	83 c0 01	 add	 eax, 1
  00096	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN7@initialise:
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  0009e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_types_available@@3HA
  000a4	39 45 fc	 cmp	 DWORD PTR _count$[ebp], eax
  000a7	7d 12		 jge	 SHORT $LN1@initialise

; 126  : 	{
; 127  : 		smoke_list_types_names[count] = NULL;

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  000b2	c7 04 81 00 00
	00 00		 mov	 DWORD PTR [ecx+eax*4], 0

; 128  : 	}

  000b9	eb d5		 jmp	 SHORT $LN5@initialise
$LN1@initialise:

; 129  : }

  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
?initialise_smoke_list_types_names@@YGXXZ ENDP		; initialise_smoke_list_types_names
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
;	COMDAT ?deinitialise_smoke_list_database@@YGXXZ
_TEXT	SEGMENT
?deinitialise_smoke_list_database@@YGXXZ PROC		; deinitialise_smoke_list_database, COMDAT

; 2339 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2340 : 	safe_free (smoke_list_database);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 2341 : 
; 2342 : 	//
; 2343 : 	// free arrays for smoke list drawing
; 2344 : 	//
; 2345 : 
; 2346 : 	deinitialise_smoke_list_draw_arrays ();

  00014	e8 00 00 00 00	 call	 ?deinitialise_smoke_list_draw_arrays@@YGXXZ ; deinitialise_smoke_list_draw_arrays

; 2347 : 
; 2348 : 	deinitialise_smoke_list_types_names ();

  00019	e8 00 00 00 00	 call	 ?deinitialise_smoke_list_types_names@@YGXXZ ; deinitialise_smoke_list_types_names

; 2349 : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?deinitialise_smoke_list_database@@YGXXZ ENDP		; deinitialise_smoke_list_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
;	COMDAT ?initialise_smoke_list_database@@YGXXZ
_TEXT	SEGMENT
_item$ = -4						; size = 4
?initialise_smoke_list_database@@YGXXZ PROC		; initialise_smoke_list_database, COMDAT

; 427  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 428  : 	smoke_list_data
; 429  : 		*item;
; 430  : 
; 431  : 	total_number_of_smoke_list_types = NUM_SMOKE_LIST_TYPES;

  00009	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?total_number_of_smoke_list_types@@3HA, 35 ; 00000023H

; 432  : 	smoke_list_types_available = 50;

  00013	c7 05 00 00 00
	00 32 00 00 00	 mov	 DWORD PTR ?smoke_list_types_available@@3HA, 50 ; 00000032H

; 433  : 
; 434  : 	initialise_smoke_list_types_names ();

  0001d	e8 00 00 00 00	 call	 ?initialise_smoke_list_types_names@@YGXXZ ; initialise_smoke_list_types_names

; 435  : 
; 436  : 	smoke_list_database = (smoke_list_data *) safe_malloc (sizeof (smoke_list_data) * (total_number_of_smoke_list_types + smoke_list_types_available));

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  00027	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_types_available@@3HA
  0002d	6b c8 44	 imul	 ecx, eax, 68
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00036	a3 00 00 00 00	 mov	 DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A, eax ; smoke_list_database

; 437  : 
; 438  : 	////////////////////////////////////////
; 439  : 	//
; 440  : 	//	SMOKE_LIST_TYPE_GREY_TRAIL
; 441  : 	//
; 442  : 	////////////////////////////////////////
; 443  : 	{
; 444  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_GREY_TRAIL]);

  0003b	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00040	6b c8 00	 imul	 ecx, eax, 0
  00043	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00049	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 445  : 
; 446  : 		// START COLOUR
; 447  : 		item->red_start			=	200;		// red

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0004f	c6 00 c8	 mov	 BYTE PTR [eax], 200	; 000000c8H

; 448  : 		item->green_start			=	200;		// green

  00052	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00055	c6 40 01 c8	 mov	 BYTE PTR [eax+1], 200	; 000000c8H

; 449  : 		item->blue_start 			=	200;		// blue

  00059	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0005c	c6 40 02 c8	 mov	 BYTE PTR [eax+2], 200	; 000000c8H

; 450  : 		item->alpha_start 		=	255;		// alpha

  00060	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00063	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 451  : 		item->radius_start		=	0.1;		// radius

  00067	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0006a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00072	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 452  : 
; 453  : 		// COLOUR CHANGE 1
; 454  : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  00077	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00082	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 455  : 		item->red_1					=	220;		// red

  00087	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0008a	c6 40 0c dc	 mov	 BYTE PTR [eax+12], 220	; 000000dcH

; 456  : 		item->green_1 				=	220;		// green

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00091	c6 40 0d dc	 mov	 BYTE PTR [eax+13], 220	; 000000dcH

; 457  : 		item->blue_1 				=	220;		// blue

  00095	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00098	c6 40 0e dc	 mov	 BYTE PTR [eax+14], 220	; 000000dcH

; 458  : 		item->alpha_1 				=	0;			// alpha

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0009f	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 459  : 		item->radius_1 			=	10.0;		// radius

  000a3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  000ae	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 460  : 
; 461  : 		// COLOUR CHANGE 2
; 462  : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  000b3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000be	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 463  : 		item->red_2					=	200;			// red

  000c3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000c6	c6 40 18 c8	 mov	 BYTE PTR [eax+24], 200	; 000000c8H

; 464  : 		item->green_2				=	200;			// green

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000cd	c6 40 19 c8	 mov	 BYTE PTR [eax+25], 200	; 000000c8H

; 465  : 		item->blue_2				=	200;			// blue

  000d1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000d4	c6 40 1a c8	 mov	 BYTE PTR [eax+26], 200	; 000000c8H

; 466  : 		item->alpha_2				=	0;			// alpha

  000d8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000db	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 467  : 		item->radius_2 			=	20.0;		// radius

  000df	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000e2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  000ea	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 468  : 
; 469  : 		// END COLOUR
; 470  : 		item->red_end				=	100;		// red

  000ef	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000f2	c6 40 20 64	 mov	 BYTE PTR [eax+32], 100	; 00000064H

; 471  : 		item->green_end			=	100;		// green

  000f6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  000f9	c6 40 21 64	 mov	 BYTE PTR [eax+33], 100	; 00000064H

; 472  : 		item->blue_end				=	100;		// blue

  000fd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00100	c6 40 22 64	 mov	 BYTE PTR [eax+34], 100	; 00000064H

; 473  : 		item->alpha_end			=	0;			// alpha

  00104	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00107	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 474  : 		item->radius_end 			=	30.0;		// radius

  0010b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0010e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  00116	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 475  : 
; 476  : 		item->final_vertical_velocity	=	1.5;

  0011b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0011e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  00126	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 477  : 		item->vertical_acceleration	=	-0.5;

  0012b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0012e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00136	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 478  : 
; 479  : 		item->initial_velocity_noise	=	1.0;

  0013b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0013e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00146	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 480  : 
; 481  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE_TRAIL;

  0014b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0014e	c7 40 34 64 00
	00 00		 mov	 DWORD PTR [eax+52], 100	; 00000064H

; 482  : 		item->texture_size				=	16.0;

  00155	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00158	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  00160	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 483  : 		item->animation_rate				=	1.0;

  00165	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00168	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00170	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 484  : 
; 485  : 		item->additive						=	FALSE;

  00175	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  0017a	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0017d	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00181	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00184	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 486  : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  00188	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0018b	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0018f	66 83 c9 02	 or	 cx, 2
  00193	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00196	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 487  : 		item->flat							=	FALSE;

  0019a	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  0019f	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  001a2	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  001a6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  001a9	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 488  : 		item->ground_based				=	FALSE;

  001ad	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  001b5	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  001b9	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  001bc	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 489  : 		item->lock_to_parent				=	TRUE;

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  001c3	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  001c7	66 83 c9 10	 or	 cx, 16			; 00000010H
  001cb	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  001ce	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 490  : 		item->wind_affected				=	TRUE;

  001d2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  001d5	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  001d9	66 83 c9 20	 or	 cx, 32			; 00000020H
  001dd	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  001e0	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 491  : 	}
; 492  : 
; 493  : 	////////////////////////////////////////
; 494  : 	//
; 495  : 	//	SMOKE_LIST_TYPE_WHITE_TRAIL
; 496  : 	//
; 497  : 	////////////////////////////////////////
; 498  : 	{
; 499  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_WHITE_TRAIL]);

  001e4	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  001e9	c1 e0 00	 shl	 eax, 0
  001ec	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  001f2	89 45 fc	 mov	 DWORD PTR _item$[ebp], eax

; 500  : 
; 501  : 		// START COLOUR
; 502  : 		item->red_start			=	255;		// red

  001f5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  001f8	c6 00 ff	 mov	 BYTE PTR [eax], 255	; 000000ffH

; 503  : 		item->green_start			=	255;		// green

  001fb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  001fe	c6 40 01 ff	 mov	 BYTE PTR [eax+1], 255	; 000000ffH

; 504  : 		item->blue_start 			=	255;		// blue

  00202	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00205	c6 40 02 ff	 mov	 BYTE PTR [eax+2], 255	; 000000ffH

; 505  : 		item->alpha_start 		=	255;		// alpha

  00209	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0020c	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 506  : 		item->radius_start		=	0.1;		// radius

  00210	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00213	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  0021b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 507  : 
; 508  : 		// COLOUR CHANGE 1
; 509  : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  00220	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00223	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0022b	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 510  : 		item->red_1					=	255;		// red

  00230	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00233	c6 40 0c ff	 mov	 BYTE PTR [eax+12], 255	; 000000ffH

; 511  : 		item->green_1 				=	255;		// green

  00237	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0023a	c6 40 0d ff	 mov	 BYTE PTR [eax+13], 255	; 000000ffH

; 512  : 		item->blue_1 				=	255;		// blue

  0023e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00241	c6 40 0e ff	 mov	 BYTE PTR [eax+14], 255	; 000000ffH

; 513  : 		item->alpha_1 				=	0;			// alpha

  00245	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00248	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 514  : 		item->radius_1 			=	5.0;		// radius

  0024c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0024f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00257	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 515  : 
; 516  : 		// COLOUR CHANGE 2
; 517  : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  0025c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0025f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00267	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 518  : 		item->red_2					=	100;		// red

  0026c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0026f	c6 40 18 64	 mov	 BYTE PTR [eax+24], 100	; 00000064H

; 519  : 		item->green_2				=	100;		// green

  00273	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00276	c6 40 19 64	 mov	 BYTE PTR [eax+25], 100	; 00000064H

; 520  : 		item->blue_2				=	100;		// blue

  0027a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0027d	c6 40 1a 64	 mov	 BYTE PTR [eax+26], 100	; 00000064H

; 521  : 		item->alpha_2				=	0;			// alpha

  00281	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00284	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 522  : 		item->radius_2				=	5.0;		// radius

  00288	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0028b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00293	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 523  : 
; 524  : 		// END COLOUR
; 525  : 		item->red_end				=	100;		// red

  00298	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0029b	c6 40 20 64	 mov	 BYTE PTR [eax+32], 100	; 00000064H

; 526  : 		item->green_end			=	100;		// green

  0029f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002a2	c6 40 21 64	 mov	 BYTE PTR [eax+33], 100	; 00000064H

; 527  : 		item->blue_end				=	100;		// blue

  002a6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002a9	c6 40 22 64	 mov	 BYTE PTR [eax+34], 100	; 00000064H

; 528  : 		item->alpha_end			=	0;			// alpha

  002ad	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002b0	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 529  : 		item->radius_end			=	5.0;		// radius

  002b4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  002bf	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 530  : 
; 531  : 		item->final_vertical_velocity	=	-1.0;

  002c4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  002cf	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 532  : 		item->vertical_acceleration	=	1.0;

  002d4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002df	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 533  : 
; 534  : 		item->initial_velocity_noise	=	0.5;

  002e4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002ef	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 535  : 
; 536  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE_TRAIL;

  002f4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  002f7	c7 40 34 64 00
	00 00		 mov	 DWORD PTR [eax+52], 100	; 00000064H

; 537  : 		item->texture_size				=	16.0;

  002fe	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00301	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  00309	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 538  : 		item->animation_rate				=	1.0;

  0030e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00311	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00319	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 539  : 
; 540  : 		item->additive						=	FALSE;

  0031e	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  00323	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00326	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0032a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0032d	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 541  : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  00331	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00334	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00338	66 83 c9 02	 or	 cx, 2
  0033c	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0033f	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 542  : 		item->flat							=	FALSE;

  00343	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  00348	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0034b	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0034f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00352	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 543  : 		item->ground_based				=	FALSE;

  00356	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  0035b	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0035e	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00362	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00365	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 544  : 		item->lock_to_parent				=	TRUE;

  00369	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0036c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00370	66 83 c9 10	 or	 cx, 16			; 00000010H
  00374	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00377	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 545  : 		item->wind_affected				=	TRUE;

  0037b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0037e	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00382	66 83 c9 20	 or	 cx, 32			; 00000020H
  00386	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00389	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 546  : 	}
; 547  : 
; 548  : 	////////////////////////////////////////
; 549  : 	//
; 550  : 	//	SMOKE_LIST_TYPE_ADDITIVE_TRAIL
; 551  : 	//
; 552  : 	////////////////////////////////////////
; 553  : 	{
; 554  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_ADDITIVE_TRAIL]);

  0038d	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00392	d1 e0		 shl	 eax, 1
  00394	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  0039a	89 45 fc	 mov	 DWORD PTR _item$[ebp], eax

; 555  : 
; 556  : 		// START COLOUR
; 557  : 		item->red_start			=	100;		// red

  0039d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003a0	c6 00 64	 mov	 BYTE PTR [eax], 100	; 00000064H

; 558  : 		item->green_start			=	50;		// green

  003a3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003a6	c6 40 01 32	 mov	 BYTE PTR [eax+1], 50	; 00000032H

; 559  : 		item->blue_start 			=	0;			// blue

  003aa	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003ad	c6 40 02 00	 mov	 BYTE PTR [eax+2], 0

; 560  : 		item->alpha_start 		=	0;			// alpha

  003b1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003b4	c6 40 03 00	 mov	 BYTE PTR [eax+3], 0

; 561  : 		item->radius_start		=	0.1;		// radius

  003b8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  003c3	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 562  : 
; 563  : 		// COLOUR CHANGE 1
; 564  : 		item->colour_change_1	=	0.1;		// colour change 1 lifescale

  003c8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  003d3	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 565  : 		item->red_1					=	100;		// red

  003d8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003db	c6 40 0c 64	 mov	 BYTE PTR [eax+12], 100	; 00000064H

; 566  : 		item->green_1 				=	50;		// green

  003df	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003e2	c6 40 0d 32	 mov	 BYTE PTR [eax+13], 50	; 00000032H

; 567  : 		item->blue_1 				=	0;			// blue

  003e6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003e9	c6 40 0e 00	 mov	 BYTE PTR [eax+14], 0

; 568  : 		item->alpha_1 				=	0;			// alpha

  003ed	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003f0	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 569  : 		item->radius_1 			=	2.0;		// radius

  003f4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  003f7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  003ff	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 570  : 
; 571  : 		// COLOUR CHANGE 2
; 572  : 		item->colour_change_2	=	0.3;		// colour change 2 lifescale

  00404	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00407	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  0040f	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 573  : 		item->red_2					=	100;		// red

  00414	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00417	c6 40 18 64	 mov	 BYTE PTR [eax+24], 100	; 00000064H

; 574  : 		item->green_2				=	50;		// green

  0041b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0041e	c6 40 19 32	 mov	 BYTE PTR [eax+25], 50	; 00000032H

; 575  : 		item->blue_2				=	0;			// blue

  00422	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00425	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 576  : 		item->alpha_2				=	0;			// alpha

  00429	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0042c	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 577  : 		item->radius_2				=	1.0;		// radius

  00430	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00433	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0043b	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 578  : 
; 579  : 		// END COLOUR
; 580  : 		item->red_end				=	0;			// red

  00440	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00443	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 581  : 		item->green_end			=	0;			// green

  00447	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0044a	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 582  : 		item->blue_end				=	0;			// blue

  0044e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00451	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 583  : 		item->alpha_end			=	0;			// alpha

  00455	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00458	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 584  : 		item->radius_end			=	0.0;		// radius

  0045c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0045f	0f 57 c0	 xorps	 xmm0, xmm0
  00462	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 585  : 
; 586  : 		item->final_vertical_velocity	=	-1.0;

  00467	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0046a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00472	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 587  : 		item->vertical_acceleration	=	1.0;

  00477	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0047a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00482	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 588  : 
; 589  : 		item->initial_velocity_noise	=	0.5;

  00487	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0048a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00492	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 590  : 
; 591  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_ADDITIVE_SMOKE_TRAIL;

  00497	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0049a	c7 40 34 58 00
	00 00		 mov	 DWORD PTR [eax+52], 88	; 00000058H

; 592  : 		item->texture_size				=	16.0;

  004a1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  004a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  004ac	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 593  : 		item->animation_rate				=	1.0;

  004b1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  004b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  004bc	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 594  : 
; 595  : 		item->additive						=	TRUE;

  004c1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  004c4	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  004c8	66 83 c9 01	 or	 cx, 1
  004cc	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  004cf	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 596  : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  004d3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  004d6	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  004da	66 83 c9 02	 or	 cx, 2
  004de	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  004e1	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 597  : 		item->flat							=	FALSE;

  004e5	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  004ea	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  004ed	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  004f1	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  004f4	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 598  : 		item->ground_based				=	FALSE;

  004f8	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  004fd	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00500	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00504	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00507	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 599  : 		item->lock_to_parent				=	TRUE;

  0050b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0050e	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00512	66 83 c9 10	 or	 cx, 16			; 00000010H
  00516	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00519	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 600  : 		item->wind_affected				=	TRUE;

  0051d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00520	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00524	66 83 c9 20	 or	 cx, 32			; 00000020H
  00528	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0052b	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 601  : 	}
; 602  : 
; 603  : 	////////////////////////////////////////
; 604  : 	//
; 605  : 	//	SMOKE_LIST_TYPE_LARGE_ADDITIVE_TRAIL
; 606  : 	//
; 607  : 	////////////////////////////////////////
; 608  : 	{
; 609  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_LARGE_ADDITIVE_TRAIL]);

  0052f	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00534	6b c8 03	 imul	 ecx, eax, 3
  00537	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  0053d	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 610  : 
; 611  : 		// START COLOUR
; 612  : 		item->red_start			=	200;		// red

  00540	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00543	c6 00 c8	 mov	 BYTE PTR [eax], 200	; 000000c8H

; 613  : 		item->green_start			=	100;		// green

  00546	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00549	c6 40 01 64	 mov	 BYTE PTR [eax+1], 100	; 00000064H

; 614  : 		item->blue_start 			=	30;		// blue

  0054d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00550	c6 40 02 1e	 mov	 BYTE PTR [eax+2], 30	; 0000001eH

; 615  : 		item->alpha_start 		=	0;			// alpha

  00554	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00557	c6 40 03 00	 mov	 BYTE PTR [eax+3], 0

; 616  : 		item->radius_start		=	0.1;		// radius

  0055b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0055e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00566	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 617  : 
; 618  : 		// COLOUR CHANGE 1
; 619  : 		item->colour_change_1	=	0.12;		// colour change 1 lifescale

  0056b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0056e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  00576	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 620  : 		item->red_1					=	200;		// red

  0057b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0057e	c6 40 0c c8	 mov	 BYTE PTR [eax+12], 200	; 000000c8H

; 621  : 		item->green_1 				=	100;		// green

  00582	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00585	c6 40 0d 64	 mov	 BYTE PTR [eax+13], 100	; 00000064H

; 622  : 		item->blue_1 				=	30;		// blue

  00589	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0058c	c6 40 0e 1e	 mov	 BYTE PTR [eax+14], 30	; 0000001eH

; 623  : 		item->alpha_1 				=	0;			// alpha

  00590	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00593	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 624  : 		item->radius_1 			=	1.5;		// radius

  00597	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0059a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  005a2	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 625  : 
; 626  : 		// COLOUR CHANGE 2
; 627  : 		item->colour_change_2	=	0.2;		// colour change 2 lifescale

  005a7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  005b2	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 628  : 		item->red_2					=	200;		// red

  005b7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005ba	c6 40 18 c8	 mov	 BYTE PTR [eax+24], 200	; 000000c8H

; 629  : 		item->green_2				=	100;		// green

  005be	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005c1	c6 40 19 64	 mov	 BYTE PTR [eax+25], 100	; 00000064H

; 630  : 		item->blue_2				=	30;		// blue

  005c5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005c8	c6 40 1a 1e	 mov	 BYTE PTR [eax+26], 30	; 0000001eH

; 631  : 		item->alpha_2				=	0;			// alpha

  005cc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005cf	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 632  : 		item->radius_2				=	3.5;		// radius

  005d3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40600000
  005de	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 633  : 
; 634  : 		// END COLOUR
; 635  : 		item->red_end				=	200;		// red

  005e3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005e6	c6 40 20 c8	 mov	 BYTE PTR [eax+32], 200	; 000000c8H

; 636  : 		item->green_end			=	100;		// green

  005ea	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005ed	c6 40 21 64	 mov	 BYTE PTR [eax+33], 100	; 00000064H

; 637  : 		item->blue_end				=	60;		// blue

  005f1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005f4	c6 40 22 3c	 mov	 BYTE PTR [eax+34], 60	; 0000003cH

; 638  : 		item->alpha_end			=	0;			// alpha

  005f8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  005fb	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 639  : 		item->radius_end			=	5.0;		// radius

  005ff	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00602	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  0060a	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 640  : 
; 641  : 		item->final_vertical_velocity	=	2.5;

  0060f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00612	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40200000
  0061a	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 642  : 		item->vertical_acceleration	=	0.8;

  0061f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00622	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0062a	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 643  : 
; 644  : 		item->initial_velocity_noise	=	2.0;

  0062f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00632	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0063a	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 645  : 
; 646  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_ADDITIVE_SMOKE_TRAIL;

  0063f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00642	c7 40 34 58 00
	00 00		 mov	 DWORD PTR [eax+52], 88	; 00000058H

; 647  : 		item->texture_size				=	16.0;

  00649	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0064c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  00654	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 648  : 		item->animation_rate				=	1.0;

  00659	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0065c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00664	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 649  : 
; 650  : 		item->additive						=	TRUE;

  00669	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0066c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00670	66 83 c9 01	 or	 cx, 1
  00674	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00677	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 651  : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  0067b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0067e	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00682	66 83 c9 02	 or	 cx, 2
  00686	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00689	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 652  : 		item->flat							=	FALSE;

  0068d	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  00692	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00695	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00699	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0069c	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 653  : 		item->ground_based				=	FALSE;

  006a0	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  006a5	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  006a8	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  006ac	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  006af	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 654  : 		item->lock_to_parent				=	TRUE;

  006b3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  006b6	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  006ba	66 83 c9 10	 or	 cx, 16			; 00000010H
  006be	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  006c1	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 655  : 		item->wind_affected				=	TRUE;

  006c5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  006c8	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  006cc	66 83 c9 20	 or	 cx, 32			; 00000020H
  006d0	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  006d3	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 656  : 	}
; 657  : 
; 658  : 	////////////////////////////////////////
; 659  : 	//
; 660  : 	//	SMOKE_LIST_TYPE_FIRE
; 661  : 	//
; 662  : 	////////////////////////////////////////
; 663  : 	{
; 664  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_FIRE]);

  006d7	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  006dc	c1 e0 02	 shl	 eax, 2
  006df	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  006e5	89 45 fc	 mov	 DWORD PTR _item$[ebp], eax

; 665  : 
; 666  : 		// START COLOUR
; 667  : 		item->red_start			=	80;		// red

  006e8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  006eb	c6 00 50	 mov	 BYTE PTR [eax], 80	; 00000050H

; 668  : 		item->green_start			=	30;		// green

  006ee	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  006f1	c6 40 01 1e	 mov	 BYTE PTR [eax+1], 30	; 0000001eH

; 669  : 		item->blue_start 			=	30;		// blue

  006f5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  006f8	c6 40 02 1e	 mov	 BYTE PTR [eax+2], 30	; 0000001eH

; 670  : 		item->alpha_start 		=	0;		// alpha

  006fc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  006ff	c6 40 03 00	 mov	 BYTE PTR [eax+3], 0

; 671  : 		item->radius_start		=	10.5;		// radius

  00703	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00706	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41280000
  0070e	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 672  : 
; 673  : 		// COLOUR CHANGE 1
; 674  : 		item->colour_change_1	=	0.05;		// colour change 1 lifescale

  00713	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00716	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0071e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 675  : 		item->red_1					=	40;		// red

  00723	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00726	c6 40 0c 28	 mov	 BYTE PTR [eax+12], 40	; 00000028H

; 676  : 		item->green_1 				=	40;		// green

  0072a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0072d	c6 40 0d 28	 mov	 BYTE PTR [eax+13], 40	; 00000028H

; 677  : 		item->blue_1 				=	40;		// blue

  00731	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00734	c6 40 0e 28	 mov	 BYTE PTR [eax+14], 40	; 00000028H

; 678  : 		item->alpha_1 				=	90;		// alpha

  00738	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0073b	c6 40 0f 5a	 mov	 BYTE PTR [eax+15], 90	; 0000005aH

; 679  : 		item->radius_1 			=	30.5;		// radius

  0073f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00742	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f40000
  0074a	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 680  : 
; 681  : 		// COLOUR CHANGE 2
; 682  : 		item->colour_change_2	=	0.125;		// colour change 2 lifescale

  0074f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00752	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  0075a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 683  : 		item->red_2					=	 60;		// red

  0075f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00762	c6 40 18 3c	 mov	 BYTE PTR [eax+24], 60	; 0000003cH

; 684  : 		item->green_2				=	 60;		// green

  00766	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00769	c6 40 19 3c	 mov	 BYTE PTR [eax+25], 60	; 0000003cH

; 685  : 		item->blue_2				=	 60;		// blue

  0076d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00770	c6 40 1a 3c	 mov	 BYTE PTR [eax+26], 60	; 0000003cH

; 686  : 		item->alpha_2				=	30;		// alpha

  00774	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00777	c6 40 1b 1e	 mov	 BYTE PTR [eax+27], 30	; 0000001eH

; 687  : 		item->radius_2				=	101.5;		// radius

  0077b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0077e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42cb0000
  00786	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 688  : 
; 689  : 		// END COLOUR
; 690  : 		item->red_end				=	80;		// red

  0078b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0078e	c6 40 20 50	 mov	 BYTE PTR [eax+32], 80	; 00000050H

; 691  : 		item->green_end			=	80;		// green

  00792	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00795	c6 40 21 50	 mov	 BYTE PTR [eax+33], 80	; 00000050H

; 692  : 		item->blue_end				=	80;		// blue

  00799	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0079c	c6 40 22 50	 mov	 BYTE PTR [eax+34], 80	; 00000050H

; 693  : 		item->alpha_end			=	0;			// alpha

  007a0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  007a3	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 694  : 		item->radius_end			=	300.0;		// radius

  007a7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  007aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43960000
  007b2	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 695  : 
; 696  : 		item->final_vertical_velocity	=	2.5;

  007b7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  007ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40200000
  007c2	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 697  : 		item->vertical_acceleration	=	0.7;

  007c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  007ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  007d2	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 698  : 
; 699  : 		item->initial_velocity_noise	=	12.0;

  007d7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  007da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41400000
  007e2	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 700  : 
; 701  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  007e7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  007ea	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 702  : 		item->texture_size				=	1.0;

  007f1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  007f4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  007fc	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 703  : 		item->animation_rate				=	0.0;

  00801	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00804	0f 57 c0	 xorps	 xmm0, xmm0
  00807	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 704  : 
; 705  : 		item->additive						=	FALSE;

  0080c	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  00811	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00814	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00818	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0081b	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 706  : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  0081f	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  00824	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00827	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0082b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0082e	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 707  : 		item->flat							=	FALSE;

  00832	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  00837	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0083a	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0083e	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00841	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 708  : 		item->ground_based				=	TRUE;

  00845	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00848	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0084c	66 83 c9 08	 or	 cx, 8
  00850	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00853	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 709  : 		item->lock_to_parent				=	TRUE;

  00857	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0085a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0085e	66 83 c9 10	 or	 cx, 16			; 00000010H
  00862	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00865	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 710  : 		item->wind_affected				=	TRUE;

  00869	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0086c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00870	66 83 c9 20	 or	 cx, 32			; 00000020H
  00874	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00877	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 711  : 	}
; 712  : 
; 713  : 	////////////////////////////////////////
; 714  : 	//
; 715  : 	//	SMOKE_LIST_TYPE_FLAME
; 716  : 	//
; 717  : 	////////////////////////////////////////
; 718  : 	{
; 719  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_FLAME]);

  0087b	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00880	6b c8 22	 imul	 ecx, eax, 34
  00883	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00889	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 720  : 
; 721  : 		// START COLOUR
; 722  : 		item->red_start			=	80;		// red

  0088c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0088f	c6 00 50	 mov	 BYTE PTR [eax], 80	; 00000050H

; 723  : 		item->green_start			=	80;		// green

  00892	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00895	c6 40 01 50	 mov	 BYTE PTR [eax+1], 80	; 00000050H

; 724  : 		item->blue_start 			=	50;		// blue

  00899	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0089c	c6 40 02 32	 mov	 BYTE PTR [eax+2], 50	; 00000032H

; 725  : 		item->alpha_start 		=	100;		// alpha

  008a0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008a3	c6 40 03 64	 mov	 BYTE PTR [eax+3], 100	; 00000064H

; 726  : 		item->radius_start		=	3.5;		// radius

  008a7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40600000
  008b2	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 727  : 
; 728  : 		// COLOUR CHANGE 1
; 729  : 		item->colour_change_1	=	0.1;		// colour change 1 lifescale

  008b7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  008c2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 730  : 		item->red_1					=	80;		// red

  008c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008ca	c6 40 0c 50	 mov	 BYTE PTR [eax+12], 80	; 00000050H

; 731  : 		item->green_1 				=	50;		// green

  008ce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008d1	c6 40 0d 32	 mov	 BYTE PTR [eax+13], 50	; 00000032H

; 732  : 		item->blue_1 				=	40;		// blue

  008d5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008d8	c6 40 0e 28	 mov	 BYTE PTR [eax+14], 40	; 00000028H

; 733  : 		item->alpha_1 				=	160;		// alpha

  008dc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008df	c6 40 0f a0	 mov	 BYTE PTR [eax+15], 160	; 000000a0H

; 734  : 		item->radius_1 			=	5.5;		// radius

  008e3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40b00000
  008ee	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 735  : 
; 736  : 		// COLOUR CHANGE 2
; 737  : 		item->colour_change_2	=	0.2;		// colour change 2 lifescale

  008f3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  008f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  008fe	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 738  : 		item->red_2					=	60;		// red

  00903	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00906	c6 40 18 3c	 mov	 BYTE PTR [eax+24], 60	; 0000003cH

; 739  : 		item->green_2				=	30;		// green

  0090a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0090d	c6 40 19 1e	 mov	 BYTE PTR [eax+25], 30	; 0000001eH

; 740  : 		item->blue_2				=	15;		// blue

  00911	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00914	c6 40 1a 0f	 mov	 BYTE PTR [eax+26], 15	; 0000000fH

; 741  : 		item->alpha_2				=	60;		// alpha

  00918	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0091b	c6 40 1b 3c	 mov	 BYTE PTR [eax+27], 60	; 0000003cH

; 742  : 		item->radius_2				=	8.5;		// radius

  0091f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00922	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41080000
  0092a	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 743  : 
; 744  : 		// END COLOUR
; 745  : 		item->red_end				=	30;		// red

  0092f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00932	c6 40 20 1e	 mov	 BYTE PTR [eax+32], 30	; 0000001eH

; 746  : 		item->green_end			=	10;		// green

  00936	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00939	c6 40 21 0a	 mov	 BYTE PTR [eax+33], 10	; 0000000aH

; 747  : 		item->blue_end				=	10;		// blue

  0093d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00940	c6 40 22 0a	 mov	 BYTE PTR [eax+34], 10	; 0000000aH

; 748  : 		item->alpha_end			=	0;			// alpha

  00944	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00947	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 749  : 		item->radius_end			=	11.0;		// radius

  0094b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0094e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41300000
  00956	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 750  : 
; 751  : 		item->final_vertical_velocity	=	2.5;

  0095b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0095e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40200000
  00966	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 752  : 		item->vertical_acceleration	=	2.2;

  0096b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0096e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@400ccccd
  00976	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 753  : 
; 754  : 		item->initial_velocity_noise	=	1.0;

  0097b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0097e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00986	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 755  : 
; 756  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_CANNON_FLARE;

  0098b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0098e	c7 40 34 59 00
	00 00		 mov	 DWORD PTR [eax+52], 89	; 00000059H

; 757  : 		item->texture_size				=	1.0;

  00995	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00998	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009a0	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 758  : 		item->animation_rate				=	1.0;

  009a5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  009a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009b0	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 759  : 
; 760  : 		item->additive						=	TRUE;

  009b5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  009b8	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  009bc	66 83 c9 01	 or	 cx, 1
  009c0	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  009c3	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 761  : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  009c7	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  009cc	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  009cf	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  009d3	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  009d6	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 762  : 		item->flat							=	FALSE;

  009da	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  009df	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  009e2	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  009e6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  009e9	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 763  : 		item->ground_based				=	TRUE;

  009ed	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  009f0	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  009f4	66 83 c9 08	 or	 cx, 8
  009f8	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  009fb	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 764  : 		item->lock_to_parent				=	TRUE;

  009ff	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a02	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00a06	66 83 c9 10	 or	 cx, 16			; 00000010H
  00a0a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00a0d	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 765  : 		item->wind_affected				=	TRUE;

  00a11	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a14	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00a18	66 83 c9 20	 or	 cx, 32			; 00000020H
  00a1c	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00a1f	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 766  : 	}
; 767  : 
; 768  : 
; 769  : 	////////////////////////////////////////
; 770  : 	//
; 771  : 	//	SMOKE_LIST_TYPE_SMALL_FIRE
; 772  : 	//
; 773  : 	////////////////////////////////////////
; 774  : 	{
; 775  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_SMALL_FIRE]);

  00a23	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00a28	6b c8 05	 imul	 ecx, eax, 5
  00a2b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00a31	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 776  : 
; 777  : 		// START COLOUR
; 778  : 		item->red_start			=	30;		// red

  00a34	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a37	c6 00 1e	 mov	 BYTE PTR [eax], 30	; 0000001eH

; 779  : 		item->green_start			=	30;		// green

  00a3a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a3d	c6 40 01 1e	 mov	 BYTE PTR [eax+1], 30	; 0000001eH

; 780  : 		item->blue_start 			=	30;		// blue

  00a41	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a44	c6 40 02 1e	 mov	 BYTE PTR [eax+2], 30	; 0000001eH

; 781  : 		item->alpha_start 		=	180;		// alpha

  00a48	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a4b	c6 40 03 b4	 mov	 BYTE PTR [eax+3], 180	; 000000b4H

; 782  : 		item->radius_start		=	0.33;		// radius

  00a4f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a52	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ea8f5c3
  00a5a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 783  : 
; 784  : 		// COLOUR CHANGE 1
; 785  : 		item->colour_change_1	=	0.1;		// colour change 1 lifescale

  00a5f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a62	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00a6a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 786  : 		item->red_1					=	30;		// red

  00a6f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a72	c6 40 0c 1e	 mov	 BYTE PTR [eax+12], 30	; 0000001eH

; 787  : 		item->green_1 				=	30;		// green

  00a76	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a79	c6 40 0d 1e	 mov	 BYTE PTR [eax+13], 30	; 0000001eH

; 788  : 		item->blue_1 				=	30;		// blue

  00a7d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a80	c6 40 0e 1e	 mov	 BYTE PTR [eax+14], 30	; 0000001eH

; 789  : 		item->alpha_1 				=	100;		// alpha

  00a84	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a87	c6 40 0f 64	 mov	 BYTE PTR [eax+15], 100	; 00000064H

; 790  : 		item->radius_1 			=	0.5;		// radius

  00a8b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a8e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00a96	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 791  : 
; 792  : 		// COLOUR CHANGE 2
; 793  : 		item->colour_change_2	=	0.2;		// colour change 2 lifescale

  00a9b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00a9e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00aa6	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 794  : 		item->red_2					=	30;		// red

  00aab	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00aae	c6 40 18 1e	 mov	 BYTE PTR [eax+24], 30	; 0000001eH

; 795  : 		item->green_2				=	30;		// green

  00ab2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ab5	c6 40 19 1e	 mov	 BYTE PTR [eax+25], 30	; 0000001eH

; 796  : 		item->blue_2				=	30;		// blue

  00ab9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00abc	c6 40 1a 1e	 mov	 BYTE PTR [eax+26], 30	; 0000001eH

; 797  : 		item->alpha_2				=	100;		// alpha

  00ac0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ac3	c6 40 1b 64	 mov	 BYTE PTR [eax+27], 100	; 00000064H

; 798  : 		item->radius_2				=	1.5;		// radius

  00ac7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00aca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  00ad2	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 799  : 
; 800  : 		// END COLOUR
; 801  : 		item->red_end				=	60;		// red

  00ad7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ada	c6 40 20 3c	 mov	 BYTE PTR [eax+32], 60	; 0000003cH

; 802  : 		item->green_end			=	60;		// green

  00ade	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ae1	c6 40 21 3c	 mov	 BYTE PTR [eax+33], 60	; 0000003cH

; 803  : 		item->blue_end				=	60;		// blue

  00ae5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ae8	c6 40 22 3c	 mov	 BYTE PTR [eax+34], 60	; 0000003cH

; 804  : 		item->alpha_end			=	0;			// alpha

  00aec	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00aef	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 805  : 		item->radius_end			=	3.0;		// radius

  00af3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00af6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  00afe	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 806  : 
; 807  : 		item->final_vertical_velocity	=	0.5;

  00b03	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00b06	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00b0e	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 808  : 		item->vertical_acceleration	=	0.25;

  00b13	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00b16	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  00b1e	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 809  : 
; 810  : 		item->initial_velocity_noise	=	0.15;

  00b23	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00b26	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  00b2e	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 811  : 
; 812  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  00b33	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00b36	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 813  : 		item->texture_size				=	1.0;

  00b3d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00b40	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00b48	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 814  : 		item->animation_rate				=	0.0;

  00b4d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00b50	0f 57 c0	 xorps	 xmm0, xmm0
  00b53	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 815  : 
; 816  : 		item->additive						=	FALSE;

  00b58	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  00b5d	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00b60	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00b64	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00b67	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 817  : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  00b6b	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  00b70	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00b73	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00b77	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00b7a	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 818  : 		item->flat							=	FALSE;

  00b7e	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  00b83	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00b86	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00b8a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00b8d	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 819  : 		item->ground_based				=	TRUE;

  00b91	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00b94	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00b98	66 83 c9 08	 or	 cx, 8
  00b9c	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00b9f	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 820  : 		item->lock_to_parent				=	TRUE;

  00ba3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ba6	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00baa	66 83 c9 10	 or	 cx, 16			; 00000010H
  00bae	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00bb1	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 821  : 		item->wind_affected				=	FALSE;

  00bb5	b8 df ff 00 00	 mov	 eax, 65503		; 0000ffdfH
  00bba	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00bbd	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00bc1	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00bc4	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 822  : 	}
; 823  : 
; 824  : 	////////////////////////////////////////
; 825  : 	//
; 826  : 	//	SMOKE_LIST_TYPE_PURPLE_FLARE
; 827  : 	//
; 828  : 	////////////////////////////////////////
; 829  : 	{
; 830  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_PURPLE_FLARE]);

  00bc8	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00bcd	6b c8 06	 imul	 ecx, eax, 6
  00bd0	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00bd6	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 831  : 
; 832  : 		// START COLOUR
; 833  : 		item->red_start			=	232;		// red

  00bd9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00bdc	c6 00 e8	 mov	 BYTE PTR [eax], 232	; 000000e8H

; 834  : 		item->green_start			=	232;		// green

  00bdf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00be2	c6 40 01 e8	 mov	 BYTE PTR [eax+1], 232	; 000000e8H

; 835  : 		item->blue_start 			=	232;		// blue

  00be6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00be9	c6 40 02 e8	 mov	 BYTE PTR [eax+2], 232	; 000000e8H

; 836  : 		item->alpha_start 		=	255;		// alpha

  00bed	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00bf0	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 837  : 		item->radius_start		=	5.0;		// radius

  00bf4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00bf7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00bff	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 838  : 
; 839  : 		// COLOUR CHANGE 1
; 840  : 		item->colour_change_1	=	0.2;		// colour change 1 lifescale

  00c04	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c07	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00c0f	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 841  : 		item->red_1					=	210;		// red

  00c14	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c17	c6 40 0c d2	 mov	 BYTE PTR [eax+12], 210	; 000000d2H

; 842  : 		item->green_1 				=	210;		// green

  00c1b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c1e	c6 40 0d d2	 mov	 BYTE PTR [eax+13], 210	; 000000d2H

; 843  : 		item->blue_1 				=	200;		// blue

  00c22	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c25	c6 40 0e c8	 mov	 BYTE PTR [eax+14], 200	; 000000c8H

; 844  : 		item->alpha_1 				=	200;		// alpha

  00c29	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c2c	c6 40 0f c8	 mov	 BYTE PTR [eax+15], 200	; 000000c8H

; 845  : 		item->radius_1 			=	13.0;		// radius

  00c30	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c33	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41500000
  00c3b	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 846  : 
; 847  : 		// COLOUR CHANGE 2
; 848  : 		item->colour_change_2	=	0.5;		// colour change 2 lifescale

  00c40	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c43	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00c4b	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 849  : 		item->red_2					=	160;		// red

  00c50	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c53	c6 40 18 a0	 mov	 BYTE PTR [eax+24], 160	; 000000a0H

; 850  : 		item->green_2				=	160;		// green

  00c57	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c5a	c6 40 19 a0	 mov	 BYTE PTR [eax+25], 160	; 000000a0H

; 851  : 		item->blue_2				=	160;		// blue

  00c5e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c61	c6 40 1a a0	 mov	 BYTE PTR [eax+26], 160	; 000000a0H

; 852  : 		item->alpha_2				=	40;		// alpha

  00c65	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c68	c6 40 1b 28	 mov	 BYTE PTR [eax+27], 40	; 00000028H

; 853  : 		item->radius_2				=	24.0;		// radius

  00c6c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c6f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c00000
  00c77	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 854  : 
; 855  : 		// END COLOUR
; 856  : 		item->red_end				=	132;		// red

  00c7c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c7f	c6 40 20 84	 mov	 BYTE PTR [eax+32], 132	; 00000084H

; 857  : 		item->green_end			=	132;			// green

  00c83	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c86	c6 40 21 84	 mov	 BYTE PTR [eax+33], 132	; 00000084H

; 858  : 		item->blue_end				=	132;		// blue

  00c8a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c8d	c6 40 22 84	 mov	 BYTE PTR [eax+34], 132	; 00000084H

; 859  : 		item->alpha_end			=	0;			// alpha

  00c91	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c94	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 860  : 		item->radius_end			=	24.0;		// radius

  00c98	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00c9b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c00000
  00ca3	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 861  : 
; 862  : 		item->final_vertical_velocity	=	-1.0;

  00ca8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00cab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00cb3	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 863  : 		item->vertical_acceleration	=	0.2;

  00cb8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00cbb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00cc3	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 864  : 
; 865  : 		item->initial_velocity_noise	=	2.0;

  00cc8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ccb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00cd3	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 866  : 
; 867  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  00cd8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00cdb	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 868  : 		item->texture_size				=	1.0;

  00ce2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ce5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00ced	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 869  : 		item->animation_rate				=	0.0;

  00cf2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00cf5	0f 57 c0	 xorps	 xmm0, xmm0
  00cf8	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 870  : 
; 871  : 		item->additive						=	FALSE;

  00cfd	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  00d02	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00d05	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00d09	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00d0c	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 872  : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  00d10	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  00d15	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00d18	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00d1c	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00d1f	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 873  : 		item->flat							=	FALSE;

  00d23	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  00d28	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00d2b	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00d2f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00d32	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 874  : 		item->ground_based				=	TRUE;

  00d36	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00d39	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00d3d	66 83 c9 08	 or	 cx, 8
  00d41	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00d44	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 875  : 		item->lock_to_parent				=	FALSE;

  00d48	b8 ef ff 00 00	 mov	 eax, 65519		; 0000ffefH
  00d4d	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00d50	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00d54	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00d57	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 876  : 		item->wind_affected				=	TRUE;

  00d5b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00d5e	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00d62	66 83 c9 20	 or	 cx, 32			; 00000020H
  00d66	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00d69	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 877  : 	}
; 878  : 
; 879  : 	////////////////////////////////////////
; 880  : 	//
; 881  : 	//	SMOKE_LIST_TYPE_LARGE_DUST_CLOUD
; 882  : 	//
; 883  : 	////////////////////////////////////////
; 884  : 	{
; 885  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_LARGE_DUST_CLOUD]);

  00d6d	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00d72	6b c8 07	 imul	 ecx, eax, 7
  00d75	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00d7b	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 886  : 
; 887  : 		// START COLOUR
; 888  : 		item->red_start			=	100;		// red

  00d7e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00d81	c6 00 64	 mov	 BYTE PTR [eax], 100	; 00000064H

; 889  : 		item->green_start			=	100;		// green

  00d84	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00d87	c6 40 01 64	 mov	 BYTE PTR [eax+1], 100	; 00000064H

; 890  : 		item->blue_start 			=	100;		// blue

  00d8b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00d8e	c6 40 02 64	 mov	 BYTE PTR [eax+2], 100	; 00000064H

; 891  : 		item->alpha_start 		=	100;		// alpha

  00d92	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00d95	c6 40 03 64	 mov	 BYTE PTR [eax+3], 100	; 00000064H

; 892  : 		item->radius_start		=	25.0;		// radius

  00d99	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00d9c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c80000
  00da4	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 893  : 
; 894  : 		// COLOUR CHANGE 1
; 895  : 		item->colour_change_1	=	0.2;		// colour change 1 lifescale

  00da9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00dac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00db4	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 896  : 		item->red_1					=	160;		// red

  00db9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00dbc	c6 40 0c a0	 mov	 BYTE PTR [eax+12], 160	; 000000a0H

; 897  : 		item->green_1 				=	160;		// green

  00dc0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00dc3	c6 40 0d a0	 mov	 BYTE PTR [eax+13], 160	; 000000a0H

; 898  : 		item->blue_1 				=	160;		// blue

  00dc7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00dca	c6 40 0e a0	 mov	 BYTE PTR [eax+14], 160	; 000000a0H

; 899  : 		item->alpha_1 				=	200;		// alpha

  00dce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00dd1	c6 40 0f c8	 mov	 BYTE PTR [eax+15], 200	; 000000c8H

; 900  : 		item->radius_1 			=	50.0;		// radius

  00dd5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00dd8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  00de0	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 901  : 
; 902  : 		// COLOUR CHANGE 2
; 903  : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  00de5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00de8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00df0	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 904  : 		item->red_2					=	120;		// red

  00df5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00df8	c6 40 18 78	 mov	 BYTE PTR [eax+24], 120	; 00000078H

; 905  : 		item->green_2				=	120;		// green

  00dfc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00dff	c6 40 19 78	 mov	 BYTE PTR [eax+25], 120	; 00000078H

; 906  : 		item->blue_2				=	120;		// blue

  00e03	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e06	c6 40 1a 78	 mov	 BYTE PTR [eax+26], 120	; 00000078H

; 907  : 		item->alpha_2				=	0;		// alpha

  00e0a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e0d	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 908  : 		item->radius_2				=	95.0;		// radius

  00e11	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e14	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42be0000
  00e1c	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 909  : 
; 910  : 		// END COLOUR
; 911  : 		item->red_end				=	0;			// red

  00e21	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e24	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 912  : 		item->green_end			=	0;			// green

  00e28	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e2b	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 913  : 		item->blue_end				=	0;			// blue

  00e2f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e32	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 914  : 		item->alpha_end			=	0;			// alpha

  00e36	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e39	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 915  : 		item->radius_end			=	1.0;		// radius

  00e3d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e40	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00e48	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 916  : 
; 917  : 		item->final_vertical_velocity	=	-1.0;

  00e4d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e50	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00e58	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 918  : 		item->vertical_acceleration	=	0.2;

  00e5d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e60	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00e68	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 919  : 
; 920  : 		item->initial_velocity_noise	=	5.0;

  00e6d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e70	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00e78	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 921  : 
; 922  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  00e7d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e80	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 923  : 		item->texture_size				=	1.0;

  00e87	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e8a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00e92	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 924  : 		item->animation_rate				=	0.0;

  00e97	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00e9a	0f 57 c0	 xorps	 xmm0, xmm0
  00e9d	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 925  : 
; 926  : 		item->additive						=	FALSE;

  00ea2	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  00ea7	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00eaa	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00eae	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00eb1	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 927  : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  00eb5	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  00eba	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00ebd	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00ec1	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00ec4	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 928  : 		item->flat							=	FALSE;

  00ec8	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  00ecd	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00ed0	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00ed4	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00ed7	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 929  : 		item->ground_based				=	TRUE;

  00edb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ede	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00ee2	66 83 c9 08	 or	 cx, 8
  00ee6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00ee9	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 930  : 		item->lock_to_parent				=	FALSE;

  00eed	b8 ef ff 00 00	 mov	 eax, 65519		; 0000ffefH
  00ef2	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  00ef5	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  00ef9	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00efc	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 931  : 		item->wind_affected				=	TRUE;

  00f00	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f03	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00f07	66 83 c9 20	 or	 cx, 32			; 00000020H
  00f0b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  00f0e	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 932  : 	}
; 933  : 
; 934  : 	////////////////////////////////////////
; 935  : 	//
; 936  : 	//	SMOKE_LIST_TYPE_SMALL_PARTICLE_TRAIL
; 937  : 	//
; 938  : 	////////////////////////////////////////
; 939  : 	{
; 940  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_SMALL_PARTICLE_TRAIL]);

  00f12	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00f17	c1 e0 03	 shl	 eax, 3
  00f1a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00f20	89 45 fc	 mov	 DWORD PTR _item$[ebp], eax

; 941  : 
; 942  : 		// START COLOUR
; 943  : 		item->red_start			=	120;		// red

  00f23	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f26	c6 00 78	 mov	 BYTE PTR [eax], 120	; 00000078H

; 944  : 		item->green_start			=	120;		// green

  00f29	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f2c	c6 40 01 78	 mov	 BYTE PTR [eax+1], 120	; 00000078H

; 945  : 		item->blue_start 			=	0;			// blue

  00f30	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f33	c6 40 02 00	 mov	 BYTE PTR [eax+2], 0

; 946  : 		item->alpha_start 		=	180;		// alpha

  00f37	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f3a	c6 40 03 b4	 mov	 BYTE PTR [eax+3], 180	; 000000b4H

; 947  : 		item->radius_start		=	1.75;		// radius

  00f3e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f41	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fe00000
  00f49	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 948  : 
; 949  : 		// COLOUR CHANGE 1
; 950  : 		item->colour_change_1	=	0.1;		// colour change 1 lifescale

  00f4e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f51	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00f59	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 951  : 		item->red_1					=	120;		// red

  00f5e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f61	c6 40 0c 78	 mov	 BYTE PTR [eax+12], 120	; 00000078H

; 952  : 		item->green_1 				=	0;			// green

  00f65	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f68	c6 40 0d 00	 mov	 BYTE PTR [eax+13], 0

; 953  : 		item->blue_1 				=	0;			// blue

  00f6c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f6f	c6 40 0e 00	 mov	 BYTE PTR [eax+14], 0

; 954  : 		item->alpha_1 				=	100;		// alpha

  00f73	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f76	c6 40 0f 64	 mov	 BYTE PTR [eax+15], 100	; 00000064H

; 955  : 		item->radius_1 			=	4.0;		// radius

  00f7a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f7d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  00f85	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 956  : 
; 957  : 		// COLOUR CHANGE 2
; 958  : 		item->colour_change_2	=	0.2;		// colour change 2 lifescale

  00f8a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f8d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00f95	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 959  : 		item->red_2					=	0;			// red

  00f9a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00f9d	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0

; 960  : 		item->green_2				=	0;			// green

  00fa1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fa4	c6 40 19 00	 mov	 BYTE PTR [eax+25], 0

; 961  : 		item->blue_2				=	0;			// blue

  00fa8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fab	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 962  : 		item->alpha_2				=	100;		// alpha

  00faf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fb2	c6 40 1b 64	 mov	 BYTE PTR [eax+27], 100	; 00000064H

; 963  : 		item->radius_2				=	5.5;		// radius

  00fb6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fb9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40b00000
  00fc1	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 964  : 
; 965  : 		// END COLOUR
; 966  : 		item->red_end				=	40;		// red

  00fc6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fc9	c6 40 20 28	 mov	 BYTE PTR [eax+32], 40	; 00000028H

; 967  : 		item->green_end			=	40;		// green

  00fcd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fd0	c6 40 21 28	 mov	 BYTE PTR [eax+33], 40	; 00000028H

; 968  : 		item->blue_end				=	40;		// blue

  00fd4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fd7	c6 40 22 28	 mov	 BYTE PTR [eax+34], 40	; 00000028H

; 969  : 		item->alpha_end			=	0;			// alpha

  00fdb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fde	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 970  : 		item->radius_end			=	15.0;		// radius

  00fe2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00fe5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  00fed	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 971  : 
; 972  : 		item->final_vertical_velocity	=	-1.0;

  00ff2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  00ff5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00ffd	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 973  : 		item->vertical_acceleration	=	0.5;

  01002	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01005	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0100d	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 974  : 
; 975  : 		item->initial_velocity_noise	=	1.3;

  01012	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01015	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fa66666
  0101d	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 976  : 
; 977  : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  01022	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01025	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 978  : 		item->texture_size				=	1.0;

  0102c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0102f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01037	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 979  : 		item->animation_rate				=	1.0;

  0103c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0103f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01047	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 980  : 
; 981  : 		item->additive						=	FALSE;

  0104c	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  01051	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01054	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01058	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0105b	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 982  : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  0105f	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  01064	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01067	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0106b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0106e	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 983  : 		item->flat							=	FALSE;

  01072	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  01077	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0107a	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0107e	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01081	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 984  : 		item->ground_based				=	FALSE;

  01085	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  0108a	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0108d	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01091	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01094	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 985  : 		item->lock_to_parent				=	TRUE;

  01098	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0109b	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0109f	66 83 c9 10	 or	 cx, 16			; 00000010H
  010a3	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  010a6	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 986  : 		item->wind_affected				=	TRUE;

  010aa	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  010ad	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  010b1	66 83 c9 20	 or	 cx, 32			; 00000020H
  010b5	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  010b8	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 987  : 	}
; 988  : 
; 989  : 	////////////////////////////////////////
; 990  : 	//
; 991  : 	//	SMOKE_LIST_TYPE_MEDIUM_EARTH_PARTICLE_TRAIL
; 992  : 	//
; 993  : 	////////////////////////////////////////
; 994  : 	{
; 995  : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_MEDIUM_EARTH_PARTICLE_TRAIL]);

  010bc	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  010c1	6b c8 09	 imul	 ecx, eax, 9
  010c4	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  010ca	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 996  : 
; 997  : 		// START COLOUR
; 998  : 		item->red_start			=	80;		// red

  010cd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  010d0	c6 00 50	 mov	 BYTE PTR [eax], 80	; 00000050H

; 999  : 		item->green_start			=	60;		// green

  010d3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  010d6	c6 40 01 3c	 mov	 BYTE PTR [eax+1], 60	; 0000003cH

; 1000 : 		item->blue_start 			=	20;		// blue

  010da	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  010dd	c6 40 02 14	 mov	 BYTE PTR [eax+2], 20	; 00000014H

; 1001 : 		item->alpha_start 		=	180;		// alpha

  010e1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  010e4	c6 40 03 b4	 mov	 BYTE PTR [eax+3], 180	; 000000b4H

; 1002 : 		item->radius_start		=	2.4;		// radius

  010e8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  010eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4019999a
  010f3	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1003 : 
; 1004 : 		// COLOUR CHANGE 1
; 1005 : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  010f8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  010fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01103	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1006 : 		item->red_1					=	80;		// red

  01108	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0110b	c6 40 0c 50	 mov	 BYTE PTR [eax+12], 80	; 00000050H

; 1007 : 		item->green_1 				=	60;		// green

  0110f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01112	c6 40 0d 3c	 mov	 BYTE PTR [eax+13], 60	; 0000003cH

; 1008 : 		item->blue_1 				=	20;		// blue

  01116	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01119	c6 40 0e 14	 mov	 BYTE PTR [eax+14], 20	; 00000014H

; 1009 : 		item->alpha_1 				=	0;			// alpha

  0111d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01120	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1010 : 		item->radius_1 			=	15.0;		// radius

  01124	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01127	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  0112f	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1011 : 
; 1012 : 		// COLOUR CHANGE 2
; 1013 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  01134	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01137	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0113f	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1014 : 		item->red_2					=	0;			// red

  01144	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01147	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0

; 1015 : 		item->green_2				=	0;			// green

  0114b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0114e	c6 40 19 00	 mov	 BYTE PTR [eax+25], 0

; 1016 : 		item->blue_2				=	0;			// blue

  01152	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01155	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 1017 : 		item->alpha_2				=	0;			// alpha

  01159	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0115c	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1018 : 		item->radius_2				=	15.0;		// radius

  01160	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01163	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  0116b	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1019 : 
; 1020 : 		// END COLOUR
; 1021 : 		item->red_end				=	0;			// red

  01170	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01173	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1022 : 		item->green_end			=	0;			// green

  01177	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0117a	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1023 : 		item->blue_end				=	0;			// blue

  0117e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01181	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1024 : 		item->alpha_end			=	0;			// alpha

  01185	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01188	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1025 : 		item->radius_end			=	15.0;		// radius

  0118c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0118f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  01197	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1026 : 
; 1027 : 		item->final_vertical_velocity	=	-1.0;

  0119c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0119f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  011a7	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1028 : 		item->vertical_acceleration	=	0.5;

  011ac	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  011af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  011b7	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1029 : 
; 1030 : 		item->initial_velocity_noise	=	1.5;

  011bc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  011bf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  011c7	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1031 : 
; 1032 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  011cc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  011cf	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1033 : 		item->texture_size				=	1.0;

  011d6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  011d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  011e1	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1034 : 		item->animation_rate				=	1.0;

  011e6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  011e9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  011f1	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1035 : 
; 1036 : 		item->additive						=	FALSE;

  011f6	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  011fb	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  011fe	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01202	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01205	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1037 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  01209	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  0120e	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01211	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01215	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01218	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1038 : 		item->flat							=	FALSE;

  0121c	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  01221	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01224	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01228	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0122b	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1039 : 		item->ground_based				=	FALSE;

  0122f	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  01234	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01237	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0123b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0123e	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1040 : 		item->lock_to_parent				=	TRUE;

  01242	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01245	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01249	66 83 c9 10	 or	 cx, 16			; 00000010H
  0124d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01250	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1041 : 		item->wind_affected				=	TRUE;

  01254	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01257	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0125b	66 83 c9 20	 or	 cx, 32			; 00000020H
  0125f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01262	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1042 : 	}
; 1043 : 
; 1044 : 	////////////////////////////////////////
; 1045 : 	//
; 1046 : 	//	SMOKE_LIST_TYPE_MEDIUM_WATER_PARTICLE_TRAIL
; 1047 : 	//
; 1048 : 	////////////////////////////////////////
; 1049 : 	{
; 1050 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_MEDIUM_WATER_PARTICLE_TRAIL]);

  01266	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  0126b	6b c8 0a	 imul	 ecx, eax, 10
  0126e	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  01274	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1051 : 
; 1052 : 		// START COLOUR
; 1053 : 		item->red_start			=	255;		// red

  01277	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0127a	c6 00 ff	 mov	 BYTE PTR [eax], 255	; 000000ffH

; 1054 : 		item->green_start			=	255;		// green

  0127d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01280	c6 40 01 ff	 mov	 BYTE PTR [eax+1], 255	; 000000ffH

; 1055 : 		item->blue_start 			=	255;		// blue

  01284	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01287	c6 40 02 ff	 mov	 BYTE PTR [eax+2], 255	; 000000ffH

; 1056 : 		item->alpha_start 		=	100;		// alpha

  0128b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0128e	c6 40 03 64	 mov	 BYTE PTR [eax+3], 100	; 00000064H

; 1057 : 		item->radius_start		=	2.4;		// radius

  01292	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01295	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4019999a
  0129d	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1058 : 
; 1059 : 		// COLOUR CHANGE 1
; 1060 : 		item->colour_change_1	=	0.1;		// colour change 1 lifescale

  012a2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  012ad	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1061 : 		item->red_1					=	255;		// red

  012b2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012b5	c6 40 0c ff	 mov	 BYTE PTR [eax+12], 255	; 000000ffH

; 1062 : 		item->green_1 				=	255;		// green

  012b9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012bc	c6 40 0d ff	 mov	 BYTE PTR [eax+13], 255	; 000000ffH

; 1063 : 		item->blue_1 				=	255;		// blue

  012c0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012c3	c6 40 0e ff	 mov	 BYTE PTR [eax+14], 255	; 000000ffH

; 1064 : 		item->alpha_1 				=	60;		// alpha

  012c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012ca	c6 40 0f 3c	 mov	 BYTE PTR [eax+15], 60	; 0000003cH

; 1065 : 		item->radius_1 			=	4.5;		// radius

  012ce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40900000
  012d9	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1066 : 
; 1067 : 		// COLOUR CHANGE 2
; 1068 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  012de	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  012e9	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1069 : 		item->red_2					=	230;		// red

  012ee	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012f1	c6 40 18 e6	 mov	 BYTE PTR [eax+24], 230	; 000000e6H

; 1070 : 		item->green_2				=	230;		// green

  012f5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012f8	c6 40 19 e6	 mov	 BYTE PTR [eax+25], 230	; 000000e6H

; 1071 : 		item->blue_2				=	230;		// blue

  012fc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  012ff	c6 40 1a e6	 mov	 BYTE PTR [eax+26], 230	; 000000e6H

; 1072 : 		item->alpha_2				=	0;			// alpha

  01303	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01306	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1073 : 		item->radius_2				=	15.0;		// radius

  0130a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0130d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  01315	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1074 : 
; 1075 : 		// END COLOUR
; 1076 : 		item->red_end				=	0;			// red

  0131a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0131d	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1077 : 		item->green_end			=	0;			// green

  01321	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01324	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1078 : 		item->blue_end				=	0;			// blue

  01328	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0132b	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1079 : 		item->alpha_end			=	0;			// alpha

  0132f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01332	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1080 : 		item->radius_end			=	15.0;		// radius

  01336	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01339	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  01341	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1081 : 
; 1082 : 		item->final_vertical_velocity	=	-1.0;

  01346	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01349	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  01351	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1083 : 		item->vertical_acceleration	=	0.5;

  01356	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01359	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  01361	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1084 : 
; 1085 : 		item->initial_velocity_noise	=	1.5;

  01366	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01369	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  01371	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1086 : 
; 1087 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  01376	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01379	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1088 : 		item->texture_size				=	1.0;

  01380	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01383	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0138b	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1089 : 		item->animation_rate				=	1.0;

  01390	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01393	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0139b	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1090 : 
; 1091 : 		item->additive						=	FALSE;

  013a0	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  013a5	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  013a8	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  013ac	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  013af	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1092 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  013b3	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  013b8	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  013bb	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  013bf	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  013c2	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1093 : 		item->flat							=	FALSE;

  013c6	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  013cb	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  013ce	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  013d2	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  013d5	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1094 : 		item->ground_based				=	FALSE;

  013d9	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  013de	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  013e1	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  013e5	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  013e8	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1095 : 		item->lock_to_parent				=	TRUE;

  013ec	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  013ef	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  013f3	66 83 c9 10	 or	 cx, 16			; 00000010H
  013f7	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  013fa	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1096 : 		item->wind_affected				=	TRUE;

  013fe	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01401	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01405	66 83 c9 20	 or	 cx, 32			; 00000020H
  01409	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0140c	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1097 : 	}
; 1098 : 
; 1099 : 	////////////////////////////////////////
; 1100 : 	//
; 1101 : 	//	SMOKE_LIST_TYPE_DUST_TRAIL_1
; 1102 : 	//
; 1103 : 	////////////////////////////////////////
; 1104 : 	{
; 1105 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DUST_TRAIL_1]);

  01410	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  01415	6b c8 0b	 imul	 ecx, eax, 11
  01418	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  0141e	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1106 : 
; 1107 : 		// START COLOUR
; 1108 : 		item->red_start			=	120;		// red

  01421	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01424	c6 00 78	 mov	 BYTE PTR [eax], 120	; 00000078H

; 1109 : 		item->green_start			=	110;		// green

  01427	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0142a	c6 40 01 6e	 mov	 BYTE PTR [eax+1], 110	; 0000006eH

; 1110 : 		item->blue_start 			=	90;		// blue

  0142e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01431	c6 40 02 5a	 mov	 BYTE PTR [eax+2], 90	; 0000005aH

; 1111 : 		item->alpha_start 		=	64;		// alpha

  01435	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01438	c6 40 03 40	 mov	 BYTE PTR [eax+3], 64	; 00000040H

; 1112 : 		item->radius_start		=	1.0;		// radius

  0143c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0143f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01447	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1113 : 
; 1114 : 		// COLOUR CHANGE 1
; 1115 : 		item->colour_change_1	=	0.7;		// colour change 1 lifescale

  0144c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0144f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  01457	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1116 : 		item->red_1					=	150;		// red

  0145c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0145f	c6 40 0c 96	 mov	 BYTE PTR [eax+12], 150	; 00000096H

; 1117 : 		item->green_1 				=	140;		// green

  01463	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01466	c6 40 0d 8c	 mov	 BYTE PTR [eax+13], 140	; 0000008cH

; 1118 : 		item->blue_1 				=	120;		// blue

  0146a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0146d	c6 40 0e 78	 mov	 BYTE PTR [eax+14], 120	; 00000078H

; 1119 : 		item->alpha_1 				=	32;		// alpha

  01471	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01474	c6 40 0f 20	 mov	 BYTE PTR [eax+15], 32	; 00000020H

; 1120 : 		item->radius_1 			=	5.0;		// radius

  01478	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0147b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  01483	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1121 : 
; 1122 : 		// COLOUR CHANGE 2
; 1123 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  01488	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0148b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01493	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1124 : 		item->red_2					=	150;		// red

  01498	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0149b	c6 40 18 96	 mov	 BYTE PTR [eax+24], 150	; 00000096H

; 1125 : 		item->green_2				=	140;		// green

  0149f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014a2	c6 40 19 8c	 mov	 BYTE PTR [eax+25], 140	; 0000008cH

; 1126 : 		item->blue_2				=	120;		// blue

  014a6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014a9	c6 40 1a 78	 mov	 BYTE PTR [eax+26], 120	; 00000078H

; 1127 : 		item->alpha_2				=	0;			// alpha

  014ad	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014b0	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1128 : 		item->radius_2				=	10.0;		// radius

  014b4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  014bf	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1129 : 
; 1130 : 		// END COLOUR
; 1131 : 		item->red_end				=	0;			// red

  014c4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014c7	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1132 : 		item->green_end			=	0;			// green

  014cb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014ce	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1133 : 		item->blue_end				=	0;			// blue

  014d2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014d5	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1134 : 		item->alpha_end			=	0;			// alpha

  014d9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014dc	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1135 : 		item->radius_end			=	10.0;		// radius

  014e0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  014eb	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1136 : 
; 1137 : 		item->final_vertical_velocity	=	2.0;

  014f0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  014f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  014fb	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1138 : 		item->vertical_acceleration	=	1.0;

  01500	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01503	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0150b	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1139 : 
; 1140 : 		item->initial_velocity_noise	=	1.0;

  01510	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01513	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0151b	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1141 : 
; 1142 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  01520	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01523	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1143 : 		item->texture_size				=	1.0;

  0152a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0152d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01535	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1144 : 		item->animation_rate				=	0.0;

  0153a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0153d	0f 57 c0	 xorps	 xmm0, xmm0
  01540	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1145 : 
; 1146 : 		item->additive						=	FALSE;

  01545	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  0154a	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0154d	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01551	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01554	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1147 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  01558	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  0155d	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01560	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01564	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01567	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1148 : 		item->flat							=	FALSE;

  0156b	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  01570	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01573	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01577	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0157a	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1149 : 		item->ground_based				=	TRUE;

  0157e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01581	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01585	66 83 c9 08	 or	 cx, 8
  01589	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0158c	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1150 : 		item->lock_to_parent				=	TRUE;

  01590	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01593	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01597	66 83 c9 10	 or	 cx, 16			; 00000010H
  0159b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0159e	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1151 : 		item->wind_affected				=	TRUE;

  015a2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  015a5	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  015a9	66 83 c9 20	 or	 cx, 32			; 00000020H
  015ad	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  015b0	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1152 : 	}
; 1153 : 
; 1154 : 	////////////////////////////////////////
; 1155 : 	//
; 1156 : 	//	SMOKE_LIST_TYPE_DUST_TRAIL_2
; 1157 : 	//
; 1158 : 	////////////////////////////////////////
; 1159 : 	{
; 1160 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DUST_TRAIL_2]);

  015b4	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  015b9	6b c8 0c	 imul	 ecx, eax, 12
  015bc	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  015c2	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1161 : 
; 1162 : 		// START COLOUR
; 1163 : 		item->red_start			=	80;		// red

  015c5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  015c8	c6 00 50	 mov	 BYTE PTR [eax], 80	; 00000050H

; 1164 : 		item->green_start			=	80;		// green

  015cb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  015ce	c6 40 01 50	 mov	 BYTE PTR [eax+1], 80	; 00000050H

; 1165 : 		item->blue_start 			=	80;		// blue

  015d2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  015d5	c6 40 02 50	 mov	 BYTE PTR [eax+2], 80	; 00000050H

; 1166 : 		item->alpha_start 		=	255;		// alpha

  015d9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  015dc	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 1167 : 		item->radius_start		=	5.0;		// radius

  015e0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  015e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  015eb	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1168 : 
; 1169 : 		// COLOUR CHANGE 1
; 1170 : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  015f0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  015f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  015fb	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1171 : 		item->red_1					=	180;		// red

  01600	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01603	c6 40 0c b4	 mov	 BYTE PTR [eax+12], 180	; 000000b4H

; 1172 : 		item->green_1 				=	180;		// green

  01607	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0160a	c6 40 0d b4	 mov	 BYTE PTR [eax+13], 180	; 000000b4H

; 1173 : 		item->blue_1 				=	180;		// blue

  0160e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01611	c6 40 0e b4	 mov	 BYTE PTR [eax+14], 180	; 000000b4H

; 1174 : 		item->alpha_1 				=	0;			// alpha

  01615	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01618	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1175 : 		item->radius_1 			=	50.0;		// radius

  0161c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0161f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  01627	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1176 : 
; 1177 : 		// COLOUR CHANGE 2
; 1178 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  0162c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0162f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01637	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1179 : 		item->red_2					=	0;			// red

  0163c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0163f	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0

; 1180 : 		item->green_2				=	0;			// green

  01643	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01646	c6 40 19 00	 mov	 BYTE PTR [eax+25], 0

; 1181 : 		item->blue_2				=	0;			// blue

  0164a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0164d	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 1182 : 		item->alpha_2				=	0;			// alpha

  01651	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01654	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1183 : 		item->radius_2				=	50.0;		// radius

  01658	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0165b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  01663	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1184 : 
; 1185 : 		// END COLOUR
; 1186 : 		item->red_end				=	0;			// red

  01668	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0166b	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1187 : 		item->green_end			=	0;			// green

  0166f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01672	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1188 : 		item->blue_end				=	0;			// blue

  01676	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01679	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1189 : 		item->alpha_end			=	0;			// alpha

  0167d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01680	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1190 : 		item->radius_end			=	50.0;		// radius

  01684	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01687	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  0168f	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1191 : 
; 1192 : 		item->final_vertical_velocity	=	1.0;

  01694	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01697	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0169f	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1193 : 		item->vertical_acceleration	=	0.5;

  016a4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  016a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  016af	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1194 : 
; 1195 : 		item->initial_velocity_noise	=	2.0;

  016b4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  016b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  016bf	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1196 : 
; 1197 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  016c4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  016c7	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1198 : 		item->texture_size				=	1.0;

  016ce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  016d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  016d9	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1199 : 		item->animation_rate				=	0.0;

  016de	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  016e1	0f 57 c0	 xorps	 xmm0, xmm0
  016e4	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1200 : 
; 1201 : 		item->additive						=	FALSE;

  016e9	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  016ee	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  016f1	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  016f5	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  016f8	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1202 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  016fc	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  01701	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01704	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01708	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0170b	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1203 : 		item->flat							=	FALSE;

  0170f	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  01714	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01717	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0171b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0171e	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1204 : 		item->ground_based				=	TRUE;

  01722	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01725	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01729	66 83 c9 08	 or	 cx, 8
  0172d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01730	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1205 : 		item->lock_to_parent				=	TRUE;

  01734	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01737	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0173b	66 83 c9 10	 or	 cx, 16			; 00000010H
  0173f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01742	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1206 : 		item->wind_affected				=	TRUE;

  01746	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01749	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0174d	66 83 c9 20	 or	 cx, 32			; 00000020H
  01751	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01754	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1207 : 	}
; 1208 : 
; 1209 : 	////////////////////////////////////////
; 1210 : 	//
; 1211 : 	//	SMOKE_LIST_TYPE_REAR_SHIP_WAKE
; 1212 : 	//
; 1213 : 	////////////////////////////////////////
; 1214 : 	{
; 1215 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_REAR_SHIP_WAKE]);

  01758	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  0175d	6b c8 0d	 imul	 ecx, eax, 13
  01760	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  01766	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1216 : 
; 1217 : 		// START COLOUR
; 1218 : 		item->red_start			=	255;		// red

  01769	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0176c	c6 00 ff	 mov	 BYTE PTR [eax], 255	; 000000ffH

; 1219 : 		item->green_start			=	255;		// green

  0176f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01772	c6 40 01 ff	 mov	 BYTE PTR [eax+1], 255	; 000000ffH

; 1220 : 		item->blue_start 			=	255;		// blue

  01776	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01779	c6 40 02 ff	 mov	 BYTE PTR [eax+2], 255	; 000000ffH

; 1221 : 		item->alpha_start 		=	255;		// alpha

  0177d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01780	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 1222 : 		item->radius_start		=	0.02;		// radius

  01784	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01787	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ca3d70a
  0178f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1223 : 
; 1224 : 		// COLOUR CHANGE 1
; 1225 : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  01794	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01797	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0179f	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1226 : 		item->red_1					=	180;		// red

  017a4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017a7	c6 40 0c b4	 mov	 BYTE PTR [eax+12], 180	; 000000b4H

; 1227 : 		item->green_1 				=	210;		// green

  017ab	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017ae	c6 40 0d d2	 mov	 BYTE PTR [eax+13], 210	; 000000d2H

; 1228 : 		item->blue_1 				=	255;		// blue

  017b2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017b5	c6 40 0e ff	 mov	 BYTE PTR [eax+14], 255	; 000000ffH

; 1229 : 		item->alpha_1 				=	0;			// alpha

  017b9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017bc	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1230 : 		item->radius_1 			=	50.0;		// radius

  017c0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  017cb	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1231 : 
; 1232 : 		// COLOUR CHANGE 2
; 1233 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  017d0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  017db	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1234 : 		item->red_2					=	180;		// red

  017e0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017e3	c6 40 18 b4	 mov	 BYTE PTR [eax+24], 180	; 000000b4H

; 1235 : 		item->green_2				=	210;		// green

  017e7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017ea	c6 40 19 d2	 mov	 BYTE PTR [eax+25], 210	; 000000d2H

; 1236 : 		item->blue_2				=	255;		// blue

  017ee	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017f1	c6 40 1a ff	 mov	 BYTE PTR [eax+26], 255	; 000000ffH

; 1237 : 		item->alpha_2				=	0;			// alpha

  017f5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017f8	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1238 : 		item->radius_2				=	1.0;		// radius

  017fc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  017ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01807	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1239 : 
; 1240 : 		// END COLOUR
; 1241 : 		item->red_end				=	0;			// red

  0180c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0180f	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1242 : 		item->green_end			=	0;			// green

  01813	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01816	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1243 : 		item->blue_end				=	0;			// blue

  0181a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0181d	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1244 : 		item->alpha_end			=	0;			// alpha

  01821	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01824	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1245 : 		item->radius_end			=	1.0;		// radius

  01828	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0182b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01833	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1246 : 
; 1247 : 		item->final_vertical_velocity	=	0.0;

  01838	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0183b	0f 57 c0	 xorps	 xmm0, xmm0
  0183e	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1248 : 		item->vertical_acceleration	=	0.0;

  01843	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01846	0f 57 c0	 xorps	 xmm0, xmm0
  01849	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1249 : 
; 1250 : 		item->initial_velocity_noise	=	0.0;

  0184e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01851	0f 57 c0	 xorps	 xmm0, xmm0
  01854	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1251 : 
; 1252 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SHIP_WAKE;

  01859	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0185c	c7 40 34 62 00
	00 00		 mov	 DWORD PTR [eax+52], 98	; 00000062H

; 1253 : 		item->texture_size				=	64.0;

  01863	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01866	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42800000
  0186e	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1254 : 		item->animation_rate				=	0.25;

  01873	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01876	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  0187e	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1255 : 
; 1256 : 		item->additive						=	FALSE;

  01883	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  01888	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0188b	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0188f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01892	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1257 : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  01896	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01899	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0189d	66 83 c9 02	 or	 cx, 2
  018a1	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  018a4	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1258 : 		item->flat							=	TRUE;

  018a8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  018ab	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  018af	66 83 c9 04	 or	 cx, 4
  018b3	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  018b6	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1259 : 		item->ground_based				=	TRUE;

  018ba	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  018bd	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  018c1	66 83 c9 08	 or	 cx, 8
  018c5	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  018c8	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1260 : 		item->lock_to_parent				=	TRUE;

  018cc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  018cf	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  018d3	66 83 c9 10	 or	 cx, 16			; 00000010H
  018d7	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  018da	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1261 : 		item->wind_affected				=	FALSE;

  018de	b8 df ff 00 00	 mov	 eax, 65503		; 0000ffdfH
  018e3	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  018e6	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  018ea	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  018ed	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1262 : 	}
; 1263 : 
; 1264 : 	////////////////////////////////////////
; 1265 : 	//
; 1266 : 	//	SMOKE_LIST_TYPE_FRONT_SHIP_WAKE
; 1267 : 	//
; 1268 : 	////////////////////////////////////////
; 1269 : 	{
; 1270 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_FRONT_SHIP_WAKE]);

  018f1	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  018f6	6b c8 0e	 imul	 ecx, eax, 14
  018f9	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  018ff	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1271 : 
; 1272 : 		// START COLOUR
; 1273 : 		item->red_start			=	255;		// red

  01902	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01905	c6 00 ff	 mov	 BYTE PTR [eax], 255	; 000000ffH

; 1274 : 		item->green_start			=	255;		// green

  01908	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0190b	c6 40 01 ff	 mov	 BYTE PTR [eax+1], 255	; 000000ffH

; 1275 : 		item->blue_start 			=	255;		// blue

  0190f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01912	c6 40 02 ff	 mov	 BYTE PTR [eax+2], 255	; 000000ffH

; 1276 : 		item->alpha_start 		=	255;		// alpha

  01916	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01919	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 1277 : 		item->radius_start		=	5.0;		// radius

  0191d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01920	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  01928	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1278 : 
; 1279 : 		// COLOUR CHANGE 1
; 1280 : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  0192d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01930	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01938	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1281 : 		item->red_1					=	180;		// red

  0193d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01940	c6 40 0c b4	 mov	 BYTE PTR [eax+12], 180	; 000000b4H

; 1282 : 		item->green_1 				=	210;		// green

  01944	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01947	c6 40 0d d2	 mov	 BYTE PTR [eax+13], 210	; 000000d2H

; 1283 : 		item->blue_1 				=	255;		// blue

  0194b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0194e	c6 40 0e ff	 mov	 BYTE PTR [eax+14], 255	; 000000ffH

; 1284 : 		item->alpha_1 				=	0;			// alpha

  01952	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01955	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1285 : 		item->radius_1 			=	120.0;	// radius

  01959	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0195c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42f00000
  01964	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1286 : 
; 1287 : 		// COLOUR CHANGE 2
; 1288 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  01969	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0196c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01974	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1289 : 		item->red_2					=	0;			// red

  01979	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0197c	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0

; 1290 : 		item->green_2				=	0;			// green

  01980	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01983	c6 40 19 00	 mov	 BYTE PTR [eax+25], 0

; 1291 : 		item->blue_2				=	0;			// blue

  01987	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0198a	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 1292 : 		item->alpha_2				=	0;			// alpha

  0198e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01991	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1293 : 		item->radius_2				=	0.0;		// radius

  01995	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01998	0f 57 c0	 xorps	 xmm0, xmm0
  0199b	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1294 : 
; 1295 : 		// END COLOUR
; 1296 : 		item->red_end				=	0;			// red

  019a0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019a3	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1297 : 		item->green_end			=	0;			// green

  019a7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019aa	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1298 : 		item->blue_end				=	0;			// blue

  019ae	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019b1	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1299 : 		item->alpha_end			=	0;			// alpha

  019b5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019b8	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1300 : 		item->radius_end			=	0.0;		// radius

  019bc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019bf	0f 57 c0	 xorps	 xmm0, xmm0
  019c2	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1301 : 
; 1302 : 		item->final_vertical_velocity	=	0.0;

  019c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019ca	0f 57 c0	 xorps	 xmm0, xmm0
  019cd	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1303 : 		item->vertical_acceleration	=	0.0;

  019d2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019d5	0f 57 c0	 xorps	 xmm0, xmm0
  019d8	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1304 : 
; 1305 : 		item->initial_velocity_noise	=	0.0;

  019dd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019e0	0f 57 c0	 xorps	 xmm0, xmm0
  019e3	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1306 : 
; 1307 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SHIP_WAKE;

  019e8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019eb	c7 40 34 62 00
	00 00		 mov	 DWORD PTR [eax+52], 98	; 00000062H

; 1308 : 		item->texture_size				=	128.0;

  019f2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  019f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43000000
  019fd	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1309 : 		item->animation_rate				=	0.25;

  01a02	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01a05	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  01a0d	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1310 : 
; 1311 : 		item->additive						=	FALSE;

  01a12	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  01a17	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01a1a	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01a1e	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01a21	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1312 : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  01a25	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01a28	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01a2c	66 83 c9 02	 or	 cx, 2
  01a30	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01a33	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1313 : 		item->flat							=	TRUE;

  01a37	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01a3a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01a3e	66 83 c9 04	 or	 cx, 4
  01a42	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01a45	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1314 : 		item->ground_based				=	TRUE;

  01a49	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01a4c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01a50	66 83 c9 08	 or	 cx, 8
  01a54	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01a57	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1315 : 		item->lock_to_parent				=	TRUE;

  01a5b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01a5e	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01a62	66 83 c9 10	 or	 cx, 16			; 00000010H
  01a66	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01a69	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1316 : 		item->wind_affected				=	FALSE;

  01a6d	b8 df ff 00 00	 mov	 eax, 65503		; 0000ffdfH
  01a72	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01a75	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01a79	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01a7c	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1317 : 	}
; 1318 : 
; 1319 : 	////////////////////////////////////////
; 1320 : 	//
; 1321 : 	//	SMOKE_LIST_TYPE_AIRCRAFT_LIGHT_DAMAGE_TRAIL
; 1322 : 	//
; 1323 : 	////////////////////////////////////////
; 1324 : 	{
; 1325 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_AIRCRAFT_LIGHT_DAMAGE_TRAIL]);

  01a80	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  01a85	6b c8 0f	 imul	 ecx, eax, 15
  01a88	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  01a8e	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1326 : 
; 1327 : 		// START COLOUR
; 1328 : 		item->red_start			=	130;		// red

  01a91	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01a94	c6 00 82	 mov	 BYTE PTR [eax], 130	; 00000082H

; 1329 : 		item->green_start			=	130;		// green

  01a97	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01a9a	c6 40 01 82	 mov	 BYTE PTR [eax+1], 130	; 00000082H

; 1330 : 		item->blue_start 			=	130;		// blue

  01a9e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01aa1	c6 40 02 82	 mov	 BYTE PTR [eax+2], 130	; 00000082H

; 1331 : 		item->alpha_start 		=	100;		// alpha

  01aa5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01aa8	c6 40 03 64	 mov	 BYTE PTR [eax+3], 100	; 00000064H

; 1332 : 		item->radius_start		=	0.25;		// radius

  01aac	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01aaf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  01ab7	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1333 : 
; 1334 : 		// COLOUR CHANGE 1
; 1335 : 		item->colour_change_1	=	0.12;		// colour change 1 lifescale

  01abc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01abf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  01ac7	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1336 : 		item->red_1					=	130;		// red

  01acc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01acf	c6 40 0c 82	 mov	 BYTE PTR [eax+12], 130	; 00000082H

; 1337 : 		item->green_1 				=	130;		// green

  01ad3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ad6	c6 40 0d 82	 mov	 BYTE PTR [eax+13], 130	; 00000082H

; 1338 : 		item->blue_1 				=	130;		// blue

  01ada	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01add	c6 40 0e 82	 mov	 BYTE PTR [eax+14], 130	; 00000082H

; 1339 : 		item->alpha_1 				=	100;		// alpha

  01ae1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ae4	c6 40 0f 64	 mov	 BYTE PTR [eax+15], 100	; 00000064H

; 1340 : 		item->radius_1 			=	1.5;		// radius

  01ae8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01aeb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  01af3	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1341 : 
; 1342 : 		// COLOUR CHANGE 2
; 1343 : 		item->colour_change_2	=	0.2;		// colour change 2 lifescale

  01af8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01afb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  01b03	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1344 : 		item->red_2					=	120;		// red

  01b08	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b0b	c6 40 18 78	 mov	 BYTE PTR [eax+24], 120	; 00000078H

; 1345 : 		item->green_2				=	120;		// green

  01b0f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b12	c6 40 19 78	 mov	 BYTE PTR [eax+25], 120	; 00000078H

; 1346 : 		item->blue_2				=	120;		// blue

  01b16	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b19	c6 40 1a 78	 mov	 BYTE PTR [eax+26], 120	; 00000078H

; 1347 : 		item->alpha_2				=	80;		// alpha

  01b1d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b20	c6 40 1b 50	 mov	 BYTE PTR [eax+27], 80	; 00000050H

; 1348 : 		item->radius_2				=	3.5;		// radius

  01b24	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b27	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40600000
  01b2f	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1349 : 
; 1350 : 		// END COLOUR
; 1351 : 		item->red_end				=	80;		// red

  01b34	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b37	c6 40 20 50	 mov	 BYTE PTR [eax+32], 80	; 00000050H

; 1352 : 		item->green_end			=	80;		// green

  01b3b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b3e	c6 40 21 50	 mov	 BYTE PTR [eax+33], 80	; 00000050H

; 1353 : 		item->blue_end				=	80;		// blue

  01b42	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b45	c6 40 22 50	 mov	 BYTE PTR [eax+34], 80	; 00000050H

; 1354 : 		item->alpha_end			=	0;			// alpha

  01b49	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b4c	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1355 : 		item->radius_end			=	5.0;		// radius

  01b50	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b53	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  01b5b	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1356 : 
; 1357 : 		item->final_vertical_velocity	=	2.5;

  01b60	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b63	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40200000
  01b6b	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1358 : 		item->vertical_acceleration	=	0.8;

  01b70	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b73	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  01b7b	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1359 : 
; 1360 : 		item->initial_velocity_noise	=	1.0;

  01b80	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b83	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01b8b	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1361 : 
; 1362 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE_TRAIL;

  01b90	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b93	c7 40 34 64 00
	00 00		 mov	 DWORD PTR [eax+52], 100	; 00000064H

; 1363 : 		item->texture_size				=	16.0;

  01b9a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01b9d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  01ba5	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1364 : 		item->animation_rate				=	1.0;

  01baa	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01bad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01bb5	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1365 : 
; 1366 : 		item->additive						=	FALSE;

  01bba	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  01bbf	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01bc2	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01bc6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01bc9	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1367 : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  01bcd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01bd0	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01bd4	66 83 c9 02	 or	 cx, 2
  01bd8	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01bdb	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1368 : 		item->flat							=	FALSE;

  01bdf	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  01be4	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01be7	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01beb	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01bee	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1369 : 		item->ground_based				=	FALSE;

  01bf2	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  01bf7	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01bfa	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01bfe	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01c01	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1370 : 		item->lock_to_parent				=	TRUE;

  01c05	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c08	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01c0c	66 83 c9 10	 or	 cx, 16			; 00000010H
  01c10	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01c13	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1371 : 		item->wind_affected				=	TRUE;

  01c17	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c1a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01c1e	66 83 c9 20	 or	 cx, 32			; 00000020H
  01c22	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01c25	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1372 : 	}
; 1373 : 
; 1374 : 	////////////////////////////////////////
; 1375 : 	//
; 1376 : 	//	SMOKE_LIST_TYPE_AIRCRAFT_MEDIUM_DAMAGE_TRAIL
; 1377 : 	//
; 1378 : 	////////////////////////////////////////
; 1379 : 	{
; 1380 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_AIRCRAFT_MEDIUM_DAMAGE_TRAIL]);

  01c29	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  01c2e	c1 e0 04	 shl	 eax, 4
  01c31	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  01c37	89 45 fc	 mov	 DWORD PTR _item$[ebp], eax

; 1381 : 
; 1382 : 		// START COLOUR
; 1383 : 		item->red_start			=	40;		// red

  01c3a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c3d	c6 00 28	 mov	 BYTE PTR [eax], 40	; 00000028H

; 1384 : 		item->green_start			=	40;		// green

  01c40	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c43	c6 40 01 28	 mov	 BYTE PTR [eax+1], 40	; 00000028H

; 1385 : 		item->blue_start 			=	40;		// blue

  01c47	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c4a	c6 40 02 28	 mov	 BYTE PTR [eax+2], 40	; 00000028H

; 1386 : 		item->alpha_start 		=	160;		// alpha

  01c4e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c51	c6 40 03 a0	 mov	 BYTE PTR [eax+3], 160	; 000000a0H

; 1387 : 		item->radius_start		=	0.2;		// radius

  01c55	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c58	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  01c60	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1388 : 
; 1389 : 		// COLOUR CHANGE 1
; 1390 : 		item->colour_change_1	=	0.5;		// colour change 1 lifescale

  01c65	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c68	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  01c70	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1391 : 		item->red_1					=	40;		// red

  01c75	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c78	c6 40 0c 28	 mov	 BYTE PTR [eax+12], 40	; 00000028H

; 1392 : 		item->green_1 				=	40;		// green

  01c7c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c7f	c6 40 0d 28	 mov	 BYTE PTR [eax+13], 40	; 00000028H

; 1393 : 		item->blue_1 				=	40;		// blue

  01c83	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c86	c6 40 0e 28	 mov	 BYTE PTR [eax+14], 40	; 00000028H

; 1394 : 		item->alpha_1 				=	90;		// alpha

  01c8a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c8d	c6 40 0f 5a	 mov	 BYTE PTR [eax+15], 90	; 0000005aH

; 1395 : 		item->radius_1 			=	6.5;		// radius

  01c91	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01c94	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40d00000
  01c9c	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1396 : 
; 1397 : 		// COLOUR CHANGE 2
; 1398 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  01ca1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ca4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01cac	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1399 : 		item->red_2					=	80;		// red

  01cb1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cb4	c6 40 18 50	 mov	 BYTE PTR [eax+24], 80	; 00000050H

; 1400 : 		item->green_2				=	80;		// green

  01cb8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cbb	c6 40 19 50	 mov	 BYTE PTR [eax+25], 80	; 00000050H

; 1401 : 		item->blue_2				=	80;		// blue

  01cbf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cc2	c6 40 1a 50	 mov	 BYTE PTR [eax+26], 80	; 00000050H

; 1402 : 		item->alpha_2				=	0;			// alpha

  01cc6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cc9	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1403 : 		item->radius_2				=	20.0;		// radius

  01ccd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cd0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  01cd8	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1404 : 
; 1405 : 		// END COLOUR
; 1406 : 		item->red_end				=	0;			// red

  01cdd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ce0	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1407 : 		item->green_end			=	0;			// green

  01ce4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ce7	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1408 : 		item->blue_end				=	0;			// blue

  01ceb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cee	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1409 : 		item->alpha_end			=	0;			// alpha

  01cf2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cf5	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1410 : 		item->radius_end			=	1.0;		// radius

  01cf9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01cfc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01d04	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1411 : 
; 1412 : 		item->final_vertical_velocity	=	2.5;

  01d09	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01d0c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40200000
  01d14	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1413 : 		item->vertical_acceleration	=	0.8;

  01d19	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01d1c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  01d24	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1414 : 
; 1415 : 		item->initial_velocity_noise	=	1.0;

  01d29	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01d2c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01d34	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1416 : 
; 1417 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE_TRAIL;

  01d39	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01d3c	c7 40 34 64 00
	00 00		 mov	 DWORD PTR [eax+52], 100	; 00000064H

; 1418 : 		item->texture_size				=	16.0;

  01d43	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01d46	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  01d4e	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1419 : 		item->animation_rate				=	1.0;

  01d53	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01d56	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01d5e	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1420 : 
; 1421 : 		item->additive						=	FALSE;

  01d63	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  01d68	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01d6b	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01d6f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01d72	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1422 : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  01d76	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01d79	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01d7d	66 83 c9 02	 or	 cx, 2
  01d81	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01d84	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1423 : 		item->flat							=	FALSE;

  01d88	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  01d8d	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01d90	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01d94	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01d97	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1424 : 		item->ground_based				=	FALSE;

  01d9b	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  01da0	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01da3	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01da7	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01daa	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1425 : 		item->lock_to_parent				=	TRUE;

  01dae	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01db1	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01db5	66 83 c9 10	 or	 cx, 16			; 00000010H
  01db9	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01dbc	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1426 : 		item->wind_affected				=	TRUE;

  01dc0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01dc3	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01dc7	66 83 c9 20	 or	 cx, 32			; 00000020H
  01dcb	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01dce	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1427 : 	}
; 1428 : 
; 1429 : 	////////////////////////////////////////
; 1430 : 	//
; 1431 : 	//	SMOKE_LIST_TYPE_AIRCRAFT_HEAVY_DAMAGE_TRAIL
; 1432 : 	//
; 1433 : 	////////////////////////////////////////
; 1434 : 	{
; 1435 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_AIRCRAFT_HEAVY_DAMAGE_TRAIL]);

  01dd2	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  01dd7	6b c8 11	 imul	 ecx, eax, 17
  01dda	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  01de0	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1436 : 
; 1437 : 		// START COLOUR
; 1438 : 		item->red_start			=	30;		// red

  01de3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01de6	c6 00 1e	 mov	 BYTE PTR [eax], 30	; 0000001eH

; 1439 : 		item->green_start			=	30;		// green

  01de9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01dec	c6 40 01 1e	 mov	 BYTE PTR [eax+1], 30	; 0000001eH

; 1440 : 		item->blue_start 			=	30;		// blue

  01df0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01df3	c6 40 02 1e	 mov	 BYTE PTR [eax+2], 30	; 0000001eH

; 1441 : 		item->alpha_start 		=	180;		// alpha

  01df7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01dfa	c6 40 03 b4	 mov	 BYTE PTR [eax+3], 180	; 000000b4H

; 1442 : 		item->radius_start		=	0.2;		// radius

  01dfe	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e01	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  01e09	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1443 : 
; 1444 : 		// COLOUR CHANGE 1
; 1445 : 		item->colour_change_1	=	0.5;		// colour change 1 lifescale

  01e0e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e11	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  01e19	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1446 : 		item->red_1					=	30;		// red

  01e1e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e21	c6 40 0c 1e	 mov	 BYTE PTR [eax+12], 30	; 0000001eH

; 1447 : 		item->green_1 				=	30;		// green

  01e25	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e28	c6 40 0d 1e	 mov	 BYTE PTR [eax+13], 30	; 0000001eH

; 1448 : 		item->blue_1 				=	30;		// blue

  01e2c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e2f	c6 40 0e 1e	 mov	 BYTE PTR [eax+14], 30	; 0000001eH

; 1449 : 		item->alpha_1 				=	110;		// alpha

  01e33	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e36	c6 40 0f 6e	 mov	 BYTE PTR [eax+15], 110	; 0000006eH

; 1450 : 		item->radius_1 			=	6.5;		// radius

  01e3a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e3d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40d00000
  01e45	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1451 : 
; 1452 : 		// COLOUR CHANGE 2
; 1453 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  01e4a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e4d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01e55	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1454 : 		item->red_2					=	50;		// red

  01e5a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e5d	c6 40 18 32	 mov	 BYTE PTR [eax+24], 50	; 00000032H

; 1455 : 		item->green_2				=	50;		// green

  01e61	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e64	c6 40 19 32	 mov	 BYTE PTR [eax+25], 50	; 00000032H

; 1456 : 		item->blue_2				=	50;		// blue

  01e68	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e6b	c6 40 1a 32	 mov	 BYTE PTR [eax+26], 50	; 00000032H

; 1457 : 		item->alpha_2				=	0;			// alpha

  01e6f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e72	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1458 : 		item->radius_2				=	20.0;		// radius

  01e76	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e79	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  01e81	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1459 : 
; 1460 : 		// END COLOUR
; 1461 : 		item->red_end				=	0;			// red

  01e86	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e89	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1462 : 		item->green_end			=	0;			// green

  01e8d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e90	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1463 : 		item->blue_end				=	0;			// blue

  01e94	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e97	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1464 : 		item->alpha_end			=	0;			// alpha

  01e9b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01e9e	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1465 : 		item->radius_end			=	1.0;		// radius

  01ea2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ea5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01ead	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1466 : 
; 1467 : 		item->final_vertical_velocity	=	2.5;

  01eb2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01eb5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40200000
  01ebd	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1468 : 		item->vertical_acceleration	=	0.8;

  01ec2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ec5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  01ecd	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1469 : 
; 1470 : 		item->initial_velocity_noise	=	1.0;

  01ed2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ed5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01edd	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1471 : 
; 1472 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE_TRAIL;

  01ee2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ee5	c7 40 34 64 00
	00 00		 mov	 DWORD PTR [eax+52], 100	; 00000064H

; 1473 : 		item->texture_size				=	16.0;

  01eec	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01eef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  01ef7	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1474 : 		item->animation_rate				=	1.0;

  01efc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01eff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01f07	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1475 : 
; 1476 : 		item->additive						=	FALSE;

  01f0c	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  01f11	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01f14	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01f18	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01f1b	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1477 : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  01f1f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01f22	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01f26	66 83 c9 02	 or	 cx, 2
  01f2a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01f2d	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1478 : 		item->flat							=	FALSE;

  01f31	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  01f36	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01f39	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01f3d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01f40	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1479 : 		item->ground_based				=	FALSE;

  01f44	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  01f49	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  01f4c	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  01f50	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01f53	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1480 : 		item->lock_to_parent				=	TRUE;

  01f57	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01f5a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01f5e	66 83 c9 10	 or	 cx, 16			; 00000010H
  01f62	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01f65	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1481 : 		item->wind_affected				=	TRUE;

  01f69	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01f6c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  01f70	66 83 c9 20	 or	 cx, 32			; 00000020H
  01f74	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  01f77	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1482 : 	}
; 1483 : 
; 1484 : 	////////////////////////////////////////
; 1485 : 	//
; 1486 : 	//	SMOKE_LIST_TYPE_AIRCRAFT_ADDITIVE_DAMAGE_TRAIL
; 1487 : 	//
; 1488 : 	////////////////////////////////////////
; 1489 : 	{
; 1490 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_AIRCRAFT_ADDITIVE_DAMAGE_TRAIL]);

  01f7b	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  01f80	6b c8 12	 imul	 ecx, eax, 18
  01f83	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  01f89	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1491 : 
; 1492 : 		// START COLOUR
; 1493 : 		item->red_start			=	90;		// red

  01f8c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01f8f	c6 00 5a	 mov	 BYTE PTR [eax], 90	; 0000005aH

; 1494 : 		item->green_start			=	60;		// green

  01f92	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01f95	c6 40 01 3c	 mov	 BYTE PTR [eax+1], 60	; 0000003cH

; 1495 : 		item->blue_start 			=	20;		// blue

  01f99	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01f9c	c6 40 02 14	 mov	 BYTE PTR [eax+2], 20	; 00000014H

; 1496 : 		item->alpha_start 		=	0;			// alpha

  01fa0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01fa3	c6 40 03 00	 mov	 BYTE PTR [eax+3], 0

; 1497 : 		item->radius_start		=	0.2;		// radius

  01fa7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01faa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  01fb2	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1498 : 
; 1499 : 		// COLOUR CHANGE 1
; 1500 : 		item->colour_change_1	=	0.5;		// colour change 1 lifescale

  01fb7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01fba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  01fc2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1501 : 		item->red_1					=	140;		// red

  01fc7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01fca	c6 40 0c 8c	 mov	 BYTE PTR [eax+12], 140	; 0000008cH

; 1502 : 		item->green_1 				=	90;		// green

  01fce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01fd1	c6 40 0d 5a	 mov	 BYTE PTR [eax+13], 90	; 0000005aH

; 1503 : 		item->blue_1 				=	40;		// blue

  01fd5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01fd8	c6 40 0e 28	 mov	 BYTE PTR [eax+14], 40	; 00000028H

; 1504 : 		item->alpha_1 				=	0;			// alpha

  01fdc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01fdf	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1505 : 		item->radius_1 			=	3.0;		// radius

  01fe3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01fe6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  01fee	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1506 : 
; 1507 : 		// COLOUR CHANGE 2
; 1508 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  01ff3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  01ff6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01ffe	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1509 : 		item->red_2					=	0;			// red

  02003	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02006	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0

; 1510 : 		item->green_2				=	0;			// green

  0200a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0200d	c6 40 19 00	 mov	 BYTE PTR [eax+25], 0

; 1511 : 		item->blue_2				=	0;			// blue

  02011	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02014	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 1512 : 		item->alpha_2				=	0;			// alpha

  02018	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0201b	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1513 : 		item->radius_2				=	1.0;		// radius

  0201f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02022	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0202a	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1514 : 
; 1515 : 		// END COLOUR
; 1516 : 		item->red_end				=	0;			// red

  0202f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02032	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1517 : 		item->green_end			=	0;			// green

  02036	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02039	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1518 : 		item->blue_end				=	0;			// blue

  0203d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02040	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1519 : 		item->alpha_end			=	0;			// alpha

  02044	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02047	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1520 : 		item->radius_end			=	1.0;		// radius

  0204b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0204e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02056	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1521 : 
; 1522 : 		item->final_vertical_velocity	=	2.5;

  0205b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0205e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40200000
  02066	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1523 : 		item->vertical_acceleration	=	0.8;

  0206b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0206e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  02076	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1524 : 
; 1525 : 		item->initial_velocity_noise	=	1.0;

  0207b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0207e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02086	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1526 : 
; 1527 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_ADDITIVE_SMOKE_TRAIL;

  0208b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0208e	c7 40 34 58 00
	00 00		 mov	 DWORD PTR [eax+52], 88	; 00000058H

; 1528 : 		item->texture_size				=	16.0;

  02095	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02098	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  020a0	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1529 : 		item->animation_rate				=	1.0;

  020a5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  020a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  020b0	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1530 : 
; 1531 : 		item->additive						=	TRUE;

  020b5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  020b8	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  020bc	66 83 c9 01	 or	 cx, 1
  020c0	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  020c3	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1532 : 		item->draw_type					=	SMOKE_DRAW_TYPE_TRAILS;

  020c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  020ca	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  020ce	66 83 c9 02	 or	 cx, 2
  020d2	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  020d5	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1533 : 		item->flat							=	FALSE;

  020d9	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  020de	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  020e1	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  020e5	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  020e8	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1534 : 		item->ground_based				=	FALSE;

  020ec	b8 f7 ff 00 00	 mov	 eax, 65527		; 0000fff7H
  020f1	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  020f4	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  020f8	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  020fb	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1535 : 		item->lock_to_parent				=	TRUE;

  020ff	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02102	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02106	66 83 c9 10	 or	 cx, 16			; 00000010H
  0210a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0210d	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1536 : 		item->wind_affected				=	TRUE;

  02111	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02114	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02118	66 83 c9 20	 or	 cx, 32			; 00000020H
  0211c	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0211f	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1537 : 	}
; 1538 : 
; 1539 : 	////////////////////////////////////////
; 1540 : 	//
; 1541 : 	//	SMOKE_LIST_TYPE_AIRCRAFT_SMALL_TOUCHDOWN_TRAIL
; 1542 : 	//
; 1543 : 	////////////////////////////////////////
; 1544 : 	{
; 1545 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_AIRCRAFT_SMALL_TOUCHDOWN_TRAIL]);

  02123	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  02128	6b c8 13	 imul	 ecx, eax, 19
  0212b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  02131	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1546 : 
; 1547 : 		// START COLOUR
; 1548 : 		item->red_start			=	255;		// red

  02134	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02137	c6 00 ff	 mov	 BYTE PTR [eax], 255	; 000000ffH

; 1549 : 		item->green_start			=	255;		// green

  0213a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0213d	c6 40 01 ff	 mov	 BYTE PTR [eax+1], 255	; 000000ffH

; 1550 : 		item->blue_start 			=	255;		// blue

  02141	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02144	c6 40 02 ff	 mov	 BYTE PTR [eax+2], 255	; 000000ffH

; 1551 : 		item->alpha_start 		=	180;		// alpha

  02148	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0214b	c6 40 03 b4	 mov	 BYTE PTR [eax+3], 180	; 000000b4H

; 1552 : 		item->radius_start		=	0.1;		// radius

  0214f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02152	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  0215a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1553 : 
; 1554 : 		// COLOUR CHANGE 1
; 1555 : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  0215f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02162	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0216a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1556 : 		item->red_1					=	255;		// red

  0216f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02172	c6 40 0c ff	 mov	 BYTE PTR [eax+12], 255	; 000000ffH

; 1557 : 		item->green_1 				=	255;		// green

  02176	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02179	c6 40 0d ff	 mov	 BYTE PTR [eax+13], 255	; 000000ffH

; 1558 : 		item->blue_1 				=	255;		// blue

  0217d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02180	c6 40 0e ff	 mov	 BYTE PTR [eax+14], 255	; 000000ffH

; 1559 : 		item->alpha_1 				=	0;			// alpha

  02184	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02187	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1560 : 		item->radius_1 			=	4.0;		// radius

  0218b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0218e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  02196	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1561 : 
; 1562 : 		// COLOUR CHANGE 2
; 1563 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  0219b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0219e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  021a6	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1564 : 		item->red_2					=	255;		// red

  021ab	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021ae	c6 40 18 ff	 mov	 BYTE PTR [eax+24], 255	; 000000ffH

; 1565 : 		item->green_2				=	255;		// green

  021b2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021b5	c6 40 19 ff	 mov	 BYTE PTR [eax+25], 255	; 000000ffH

; 1566 : 		item->blue_2				=	255;		// blue

  021b9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021bc	c6 40 1a ff	 mov	 BYTE PTR [eax+26], 255	; 000000ffH

; 1567 : 		item->alpha_2				=	0;			// alpha

  021c0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021c3	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1568 : 		item->radius_2				=	4.0;		// radius

  021c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  021d2	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1569 : 
; 1570 : 		// END COLOUR
; 1571 : 		item->red_end				=	255;		// red

  021d7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021da	c6 40 20 ff	 mov	 BYTE PTR [eax+32], 255	; 000000ffH

; 1572 : 		item->green_end			=	255;		// green

  021de	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021e1	c6 40 21 ff	 mov	 BYTE PTR [eax+33], 255	; 000000ffH

; 1573 : 		item->blue_end				=	255;		// blue

  021e5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021e8	c6 40 22 ff	 mov	 BYTE PTR [eax+34], 255	; 000000ffH

; 1574 : 		item->alpha_end			=	0;			// alpha

  021ec	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021ef	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1575 : 		item->radius_end			=	4.0;		// radius

  021f3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  021f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  021fe	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1576 : 
; 1577 : 		item->final_vertical_velocity	=	0.2;

  02203	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02206	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  0220e	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1578 : 		item->vertical_acceleration	=	0.1;

  02213	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02216	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  0221e	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1579 : 
; 1580 : 		item->initial_velocity_noise	=	0.05;

  02223	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02226	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0222e	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1581 : 
; 1582 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  02233	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02236	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1583 : 		item->texture_size				=	1.0;

  0223d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02240	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02248	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1584 : 		item->animation_rate				=	0.0;

  0224d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02250	0f 57 c0	 xorps	 xmm0, xmm0
  02253	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1585 : 
; 1586 : 		item->additive						=	FALSE;

  02258	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  0225d	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02260	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02264	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02267	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1587 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  0226b	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  02270	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02273	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02277	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0227a	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1588 : 		item->flat							=	FALSE;

  0227e	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  02283	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02286	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0228a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0228d	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1589 : 		item->ground_based				=	TRUE;

  02291	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02294	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02298	66 83 c9 08	 or	 cx, 8
  0229c	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0229f	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1590 : 		item->lock_to_parent				=	TRUE;

  022a3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  022a6	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  022aa	66 83 c9 10	 or	 cx, 16			; 00000010H
  022ae	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  022b1	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1591 : 		item->wind_affected				=	TRUE;

  022b5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  022b8	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  022bc	66 83 c9 20	 or	 cx, 32			; 00000020H
  022c0	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  022c3	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1592 : 	}
; 1593 : 
; 1594 : 	////////////////////////////////////////
; 1595 : 	//
; 1596 : 	//	SMOKE_LIST_TYPE_AIRCRAFT_LARGE_TOUCHDOWN_TRAIL
; 1597 : 	//
; 1598 : 	////////////////////////////////////////
; 1599 : 	{
; 1600 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_AIRCRAFT_LARGE_TOUCHDOWN_TRAIL]);

  022c7	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  022cc	6b c8 14	 imul	 ecx, eax, 20
  022cf	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  022d5	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1601 : 
; 1602 : 		// START COLOUR
; 1603 : 		item->red_start			=	255;		// red

  022d8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  022db	c6 00 ff	 mov	 BYTE PTR [eax], 255	; 000000ffH

; 1604 : 		item->green_start			=	255;		// green

  022de	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  022e1	c6 40 01 ff	 mov	 BYTE PTR [eax+1], 255	; 000000ffH

; 1605 : 		item->blue_start 			=	255;		// blue

  022e5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  022e8	c6 40 02 ff	 mov	 BYTE PTR [eax+2], 255	; 000000ffH

; 1606 : 		item->alpha_start 		=	180;		// alpha

  022ec	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  022ef	c6 40 03 b4	 mov	 BYTE PTR [eax+3], 180	; 000000b4H

; 1607 : 		item->radius_start		=	0.25;		// radius

  022f3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  022f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  022fe	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1608 : 
; 1609 : 		// COLOUR CHANGE 1
; 1610 : 		item->colour_change_1	=	1.0;		// colour change 1 lifescale

  02303	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02306	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0230e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1611 : 		item->red_1					=	255;		// red

  02313	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02316	c6 40 0c ff	 mov	 BYTE PTR [eax+12], 255	; 000000ffH

; 1612 : 		item->green_1 				=	255;		// green

  0231a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0231d	c6 40 0d ff	 mov	 BYTE PTR [eax+13], 255	; 000000ffH

; 1613 : 		item->blue_1 				=	255;		// blue

  02321	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02324	c6 40 0e ff	 mov	 BYTE PTR [eax+14], 255	; 000000ffH

; 1614 : 		item->alpha_1 				=	0;			// alpha

  02328	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0232b	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1615 : 		item->radius_1 			=	10.0;		// radius

  0232f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02332	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  0233a	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1616 : 
; 1617 : 		// COLOUR CHANGE 2
; 1618 : 		item->colour_change_2	=	1.0;		// colour change 2 lifescale

  0233f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02342	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0234a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1619 : 		item->red_2					=	255;		// red

  0234f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02352	c6 40 18 ff	 mov	 BYTE PTR [eax+24], 255	; 000000ffH

; 1620 : 		item->green_2				=	255;		// green

  02356	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02359	c6 40 19 ff	 mov	 BYTE PTR [eax+25], 255	; 000000ffH

; 1621 : 		item->blue_2				=	255;		// blue

  0235d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02360	c6 40 1a ff	 mov	 BYTE PTR [eax+26], 255	; 000000ffH

; 1622 : 		item->alpha_2				=	0;			// alpha

  02364	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02367	c6 40 1b 00	 mov	 BYTE PTR [eax+27], 0

; 1623 : 		item->radius_2				=	10.0;		// radius

  0236b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0236e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  02376	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1624 : 
; 1625 : 		// END COLOUR
; 1626 : 		item->red_end				=	255;		// red

  0237b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0237e	c6 40 20 ff	 mov	 BYTE PTR [eax+32], 255	; 000000ffH

; 1627 : 		item->green_end			=	255;		// green

  02382	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02385	c6 40 21 ff	 mov	 BYTE PTR [eax+33], 255	; 000000ffH

; 1628 : 		item->blue_end				=	255;		// blue

  02389	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0238c	c6 40 22 ff	 mov	 BYTE PTR [eax+34], 255	; 000000ffH

; 1629 : 		item->alpha_end			=	0;			// alpha

  02390	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02393	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1630 : 		item->radius_end			=	10.0;		// radius

  02397	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0239a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  023a2	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1631 : 
; 1632 : 		item->final_vertical_velocity	=	0.25;

  023a7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  023aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  023b2	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1633 : 		item->vertical_acceleration	=	0.1;

  023b7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  023ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  023c2	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1634 : 
; 1635 : 		item->initial_velocity_noise	=	0.1;

  023c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  023ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  023d2	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1636 : 
; 1637 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  023d7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  023da	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1638 : 		item->texture_size				=	1.0;

  023e1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  023e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  023ec	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1639 : 		item->animation_rate				=	0.0;

  023f1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  023f4	0f 57 c0	 xorps	 xmm0, xmm0
  023f7	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1640 : 
; 1641 : 		item->additive						=	FALSE;

  023fc	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  02401	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02404	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02408	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0240b	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1642 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  0240f	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  02414	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02417	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0241b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0241e	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1643 : 		item->flat							=	FALSE;

  02422	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  02427	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0242a	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0242e	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02431	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1644 : 		item->ground_based				=	TRUE;

  02435	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02438	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0243c	66 83 c9 08	 or	 cx, 8
  02440	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02443	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1645 : 		item->lock_to_parent				=	TRUE;

  02447	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0244a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0244e	66 83 c9 10	 or	 cx, 16			; 00000010H
  02452	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02455	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1646 : 		item->wind_affected				=	TRUE;

  02459	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0245c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02460	66 83 c9 20	 or	 cx, 32			; 00000020H
  02464	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02467	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1647 : 	}
; 1648 : 
; 1649 : 
; 1650 : 	// Xhit: The following smoke trails type downwash is for the downwash effect (030328)
; 1651 : 	// These are mapped from surface_types
; 1652 : 
; 1653 : 	// Xhit: added SMOKE_LIST_TYPE_DOWNWASH_DESERT for desert campaigns (030515)
; 1654 : 
; 1655 : 	////////////////////////////////////////
; 1656 : 	//
; 1657 : 	//	SMOKE_LIST_TYPE_DOWNWASH_DESERT
; 1658 : 	//
; 1659 : 	////////////////////////////////////////
; 1660 : 	{
; 1661 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_DESERT]);

  0246b	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  02470	6b c8 16	 imul	 ecx, eax, 22
  02473	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  02479	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1662 : 
; 1663 : 		// START COLOUR
; 1664 : 		item->red_start			=	160;	// red

  0247c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0247f	c6 00 a0	 mov	 BYTE PTR [eax], 160	; 000000a0H

; 1665 : 		item->green_start			=	140;	// green

  02482	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02485	c6 40 01 8c	 mov	 BYTE PTR [eax+1], 140	; 0000008cH

; 1666 : 		item->blue_start 			=	100;	// blue

  02489	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0248c	c6 40 02 64	 mov	 BYTE PTR [eax+2], 100	; 00000064H

; 1667 : 		item->alpha_start 		=	40;	// alpha

  02490	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02493	c6 40 03 28	 mov	 BYTE PTR [eax+3], 40	; 00000028H

; 1668 : 		item->radius_start		=	6.0;	// radius

  02497	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0249a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c00000
  024a2	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1669 : 
; 1670 : 		// COLOUR CHANGE 1
; 1671 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  024a7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  024b2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1672 : 		item->red_1					=	 220;	// red

  024b7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024ba	c6 40 0c dc	 mov	 BYTE PTR [eax+12], 220	; 000000dcH

; 1673 : 		item->green_1 				=	180;	// green

  024be	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024c1	c6 40 0d b4	 mov	 BYTE PTR [eax+13], 180	; 000000b4H

; 1674 : 		item->blue_1 				=	120;	// blue

  024c5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024c8	c6 40 0e 78	 mov	 BYTE PTR [eax+14], 120	; 00000078H

; 1675 : 		item->alpha_1 				=	80;	// alpha

  024cc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024cf	c6 40 0f 50	 mov	 BYTE PTR [eax+15], 80	; 00000050H

; 1676 : 		item->radius_1 			=	12.0;	// radius

  024d3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41400000
  024de	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1677 : 
; 1678 : 		// COLOUR CHANGE 2
; 1679 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  024e3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  024ee	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1680 : 		item->red_2					=	 160;	// red

  024f3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024f6	c6 40 18 a0	 mov	 BYTE PTR [eax+24], 160	; 000000a0H

; 1681 : 		item->green_2				=	 120;	// green

  024fa	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  024fd	c6 40 19 78	 mov	 BYTE PTR [eax+25], 120	; 00000078H

; 1682 : 		item->blue_2				=	80;	// blue

  02501	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02504	c6 40 1a 50	 mov	 BYTE PTR [eax+26], 80	; 00000050H

; 1683 : 		item->alpha_2				=	20;	// alpha

  02508	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0250b	c6 40 1b 14	 mov	 BYTE PTR [eax+27], 20	; 00000014H

; 1684 : 		item->radius_2				=	17.0;	// radius

  0250f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02512	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41880000
  0251a	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1685 : 
; 1686 : 		// END COLOUR
; 1687 : 		item->red_end				=	0;		// red

  0251f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02522	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1688 : 		item->green_end			=	0;		// green

  02526	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02529	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1689 : 		item->blue_end				=	0;		// blue

  0252d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02530	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1690 : 		item->alpha_end			=	0;		// alpha

  02534	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02537	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1691 : 		item->radius_end			=	10.0;	// radius

  0253b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0253e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  02546	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1692 : 
; 1693 : 		item->final_vertical_velocity		=	-1.0;

  0254b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0254e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  02556	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1694 : 		item->vertical_acceleration		=	0.5;

  0255b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0255e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  02566	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1695 : 
; 1696 : 		item->initial_velocity_noise		=	1.5;

  0256b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0256e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  02576	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1697 : 
; 1698 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  0257b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0257e	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1699 : 		item->texture_size				=	1.0;

  02585	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02588	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02590	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1700 : 		item->animation_rate				=	1.5;

  02595	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02598	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  025a0	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1701 : 
; 1702 : 		item->additive						=	FALSE;

  025a5	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  025aa	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  025ad	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  025b1	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  025b4	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1703 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  025b8	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  025bd	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  025c0	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  025c4	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  025c7	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1704 : 		item->flat							=	FALSE;

  025cb	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  025d0	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  025d3	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  025d7	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  025da	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1705 : 		item->ground_based				=	TRUE;

  025de	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  025e1	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  025e5	66 83 c9 08	 or	 cx, 8
  025e9	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  025ec	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1706 : 		item->lock_to_parent				=	TRUE;

  025f0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  025f3	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  025f7	66 83 c9 10	 or	 cx, 16			; 00000010H
  025fb	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  025fe	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1707 : 		item->wind_affected				=	TRUE;

  02602	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02605	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02609	66 83 c9 20	 or	 cx, 32			; 00000020H
  0260d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02610	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1708 : 	}
; 1709 : 
; 1710 : 
; 1711 : 	////////////////////////////////////////
; 1712 : 	//
; 1713 : 	//	SMOKE_LIST_TYPE_DOWNWASH_SAND
; 1714 : 	//
; 1715 : 	////////////////////////////////////////
; 1716 : 	{
; 1717 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_SAND]);

  02614	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  02619	6b c8 17	 imul	 ecx, eax, 23
  0261c	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  02622	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1718 : 
; 1719 : 		// START COLOUR
; 1720 : 		item->red_start			=	120;	// red

  02625	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02628	c6 00 78	 mov	 BYTE PTR [eax], 120	; 00000078H

; 1721 : 		item->green_start			=	100;	// green

  0262b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0262e	c6 40 01 64	 mov	 BYTE PTR [eax+1], 100	; 00000064H

; 1722 : 		item->blue_start 			=	40;	// blue

  02632	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02635	c6 40 02 28	 mov	 BYTE PTR [eax+2], 40	; 00000028H

; 1723 : 		item->alpha_start 		=	50;	// alpha

  02639	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0263c	c6 40 03 32	 mov	 BYTE PTR [eax+3], 50	; 00000032H

; 1724 : 		item->radius_start		=	4.0;	// radius

  02640	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02643	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  0264b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1725 : 
; 1726 : 		// COLOUR CHANGE 1
; 1727 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  02650	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02653	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0265b	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1728 : 		item->red_1					=	120;	// red

  02660	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02663	c6 40 0c 78	 mov	 BYTE PTR [eax+12], 120	; 00000078H

; 1729 : 		item->green_1 				=	100;	// green

  02667	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0266a	c6 40 0d 64	 mov	 BYTE PTR [eax+13], 100	; 00000064H

; 1730 : 		item->blue_1 				=	40;	// blue

  0266e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02671	c6 40 0e 28	 mov	 BYTE PTR [eax+14], 40	; 00000028H

; 1731 : 		item->alpha_1 				=	40;	// alpha

  02675	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02678	c6 40 0f 28	 mov	 BYTE PTR [eax+15], 40	; 00000028H

; 1732 : 		item->radius_1 			=	8.0;	// radius

  0267c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0267f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  02687	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1733 : 
; 1734 : 		// COLOUR CHANGE 2
; 1735 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  0268c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0268f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02697	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1736 : 		item->red_2					=	120;	// red

  0269c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0269f	c6 40 18 78	 mov	 BYTE PTR [eax+24], 120	; 00000078H

; 1737 : 		item->green_2				=	100;	// green

  026a3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026a6	c6 40 19 64	 mov	 BYTE PTR [eax+25], 100	; 00000064H

; 1738 : 		item->blue_2				=	40;	// blue

  026aa	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026ad	c6 40 1a 28	 mov	 BYTE PTR [eax+26], 40	; 00000028H

; 1739 : 		item->alpha_2				=	10;	// alpha

  026b1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026b4	c6 40 1b 0a	 mov	 BYTE PTR [eax+27], 10	; 0000000aH

; 1740 : 		item->radius_2				=	16.0;	// radius

  026b8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41800000
  026c3	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1741 : 
; 1742 : 		// END COLOUR
; 1743 : 		item->red_end				=	0;		// red

  026c8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026cb	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1744 : 		item->green_end			=	0;		// green

  026cf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026d2	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1745 : 		item->blue_end				=	0;		// blue

  026d6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026d9	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1746 : 		item->alpha_end			=	0;		// alpha

  026dd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026e0	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1747 : 		item->radius_end			=	10.0;	// radius

  026e4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  026ef	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1748 : 
; 1749 : 		item->final_vertical_velocity		=	-1.0;

  026f4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  026f7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  026ff	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1750 : 		item->vertical_acceleration		=	0.5;

  02704	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02707	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0270f	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1751 : 
; 1752 : 		item->initial_velocity_noise		=	1.5;

  02714	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02717	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  0271f	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1753 : 
; 1754 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  02724	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02727	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1755 : 		item->texture_size				=	1.0;

  0272e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02731	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02739	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1756 : 		item->animation_rate				=	1.0;

  0273e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02741	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02749	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1757 : 
; 1758 : 		item->additive						=	FALSE;

  0274e	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  02753	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02756	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0275a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0275d	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1759 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  02761	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  02766	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02769	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0276d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02770	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1760 : 		item->flat							=	FALSE;

  02774	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  02779	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0277c	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02780	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02783	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1761 : 		item->ground_based				=	TRUE;

  02787	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0278a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0278e	66 83 c9 08	 or	 cx, 8
  02792	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02795	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1762 : 		item->lock_to_parent				=	TRUE;

  02799	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0279c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  027a0	66 83 c9 10	 or	 cx, 16			; 00000010H
  027a4	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  027a7	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1763 : 		item->wind_affected				=	TRUE;

  027ab	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  027ae	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  027b2	66 83 c9 20	 or	 cx, 32			; 00000020H
  027b6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  027b9	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1764 : 	}
; 1765 : 
; 1766 : 	////////////////////////////////////////
; 1767 : 	//
; 1768 : 	//	SMOKE_LIST_TYPE_DOWNWASH_GRASS
; 1769 : 	//
; 1770 : 	////////////////////////////////////////
; 1771 : 	{
; 1772 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_GRASS]);

  027bd	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  027c2	6b c8 18	 imul	 ecx, eax, 24
  027c5	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  027cb	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1773 : 
; 1774 : 		// START COLOUR
; 1775 : 		item->red_start			=	40;	// red

  027ce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  027d1	c6 00 28	 mov	 BYTE PTR [eax], 40	; 00000028H

; 1776 : 		item->green_start			=	80;	// green

  027d4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  027d7	c6 40 01 50	 mov	 BYTE PTR [eax+1], 80	; 00000050H

; 1777 : 		item->blue_start 			=	20;	// blue

  027db	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  027de	c6 40 02 14	 mov	 BYTE PTR [eax+2], 20	; 00000014H

; 1778 : 		item->alpha_start 		=	16;	// alpha

  027e2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  027e5	c6 40 03 10	 mov	 BYTE PTR [eax+3], 16	; 00000010H

; 1779 : 		item->radius_start		=	2.0;	// radius

  027e9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  027ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  027f4	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1780 : 
; 1781 : 		// COLOUR CHANGE 1
; 1782 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  027f9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  027fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02804	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1783 : 		item->red_1					=	40;	// red

  02809	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0280c	c6 40 0c 28	 mov	 BYTE PTR [eax+12], 40	; 00000028H

; 1784 : 		item->green_1 				=	80;	// green

  02810	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02813	c6 40 0d 50	 mov	 BYTE PTR [eax+13], 80	; 00000050H

; 1785 : 		item->blue_1 				=	20;	// blue

  02817	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0281a	c6 40 0e 14	 mov	 BYTE PTR [eax+14], 20	; 00000014H

; 1786 : 		item->alpha_1 				=	8;		// alpha

  0281e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02821	c6 40 0f 08	 mov	 BYTE PTR [eax+15], 8

; 1787 : 		item->radius_1 			=	4.0;	// radius

  02825	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02828	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  02830	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1788 : 
; 1789 : 		// COLOUR CHANGE 2
; 1790 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  02835	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02838	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02840	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1791 : 		item->red_2					=	40;	// red

  02845	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02848	c6 40 18 28	 mov	 BYTE PTR [eax+24], 40	; 00000028H

; 1792 : 		item->green_2				=	80;	// green

  0284c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0284f	c6 40 19 50	 mov	 BYTE PTR [eax+25], 80	; 00000050H

; 1793 : 		item->blue_2				=	20;	// blue

  02853	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02856	c6 40 1a 14	 mov	 BYTE PTR [eax+26], 20	; 00000014H

; 1794 : 		item->alpha_2				=	2;		// alpha

  0285a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0285d	c6 40 1b 02	 mov	 BYTE PTR [eax+27], 2

; 1795 : 		item->radius_2				=	8.0;	// radius

  02861	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02864	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  0286c	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1796 : 
; 1797 : 		// END COLOUR
; 1798 : 		item->red_end				=	0;		// red

  02871	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02874	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1799 : 		item->green_end			=	0;		// green

  02878	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0287b	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1800 : 		item->blue_end				=	0;		// blue

  0287f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02882	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1801 : 		item->alpha_end			=	0;		// alpha

  02886	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02889	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1802 : 		item->radius_end			=	10.0;	// radius

  0288d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02890	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  02898	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1803 : 
; 1804 : 		item->final_vertical_velocity		=	-1.0;

  0289d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  028a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  028a8	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1805 : 		item->vertical_acceleration		=	0.5;

  028ad	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  028b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  028b8	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1806 : 
; 1807 : 		item->initial_velocity_noise		=	1.5;

  028bd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  028c0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  028c8	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1808 : 
; 1809 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  028cd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  028d0	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1810 : 		item->texture_size				=	1.0;

  028d7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  028da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  028e2	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1811 : 		item->animation_rate				=	1.0;

  028e7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  028ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  028f2	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1812 : 
; 1813 : 		item->additive						=	FALSE;

  028f7	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  028fc	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  028ff	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02903	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02906	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1814 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  0290a	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  0290f	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02912	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02916	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02919	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1815 : 		item->flat							=	FALSE;

  0291d	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  02922	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02925	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02929	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0292c	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1816 : 		item->ground_based				=	TRUE;

  02930	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02933	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02937	66 83 c9 08	 or	 cx, 8
  0293b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0293e	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1817 : 		item->lock_to_parent				=	TRUE;

  02942	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02945	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02949	66 83 c9 10	 or	 cx, 16			; 00000010H
  0294d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02950	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1818 : 		item->wind_affected				=	TRUE;

  02954	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02957	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0295b	66 83 c9 20	 or	 cx, 32			; 00000020H
  0295f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02962	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1819 : 	}
; 1820 : 
; 1821 : 	////////////////////////////////////////
; 1822 : 	//
; 1823 : 	//	SMOKE_LIST_TYPE_DOWNWASH_ASPHALT
; 1824 : 	//
; 1825 : 	////////////////////////////////////////
; 1826 : 	{
; 1827 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_ASPHALT]);

  02966	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  0296b	6b c8 19	 imul	 ecx, eax, 25
  0296e	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  02974	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1828 : 
; 1829 : 		// START COLOUR
; 1830 : 		item->red_start			=	120;	// red

  02977	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0297a	c6 00 78	 mov	 BYTE PTR [eax], 120	; 00000078H

; 1831 : 		item->green_start			=	100;	// green

  0297d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02980	c6 40 01 64	 mov	 BYTE PTR [eax+1], 100	; 00000064H

; 1832 : 		item->blue_start 			=	80;		// blue

  02984	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02987	c6 40 02 50	 mov	 BYTE PTR [eax+2], 80	; 00000050H

; 1833 : 		item->alpha_start 		=	16;		// alpha

  0298b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0298e	c6 40 03 10	 mov	 BYTE PTR [eax+3], 16	; 00000010H

; 1834 : 		item->radius_start		=	2.0;	// radius

  02992	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02995	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0299d	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1835 : 
; 1836 : 		// COLOUR CHANGE 1
; 1837 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  029a2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  029ad	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1838 : 		item->red_1					=	120;	// red

  029b2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029b5	c6 40 0c 78	 mov	 BYTE PTR [eax+12], 120	; 00000078H

; 1839 : 		item->green_1 				=	100;	// green

  029b9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029bc	c6 40 0d 64	 mov	 BYTE PTR [eax+13], 100	; 00000064H

; 1840 : 		item->blue_1 				=	80;		// blue

  029c0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029c3	c6 40 0e 50	 mov	 BYTE PTR [eax+14], 80	; 00000050H

; 1841 : 		item->alpha_1 				=	8;		// alpha

  029c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029ca	c6 40 0f 08	 mov	 BYTE PTR [eax+15], 8

; 1842 : 		item->radius_1 			=	4.0;	// radius

  029ce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  029d9	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1843 : 
; 1844 : 		// COLOUR CHANGE 2
; 1845 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  029de	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  029e9	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1846 : 		item->red_2					=	120;	// red

  029ee	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029f1	c6 40 18 78	 mov	 BYTE PTR [eax+24], 120	; 00000078H

; 1847 : 		item->green_2				=	100;	// green

  029f5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029f8	c6 40 19 64	 mov	 BYTE PTR [eax+25], 100	; 00000064H

; 1848 : 		item->blue_2				=	80;		// blue

  029fc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  029ff	c6 40 1a 50	 mov	 BYTE PTR [eax+26], 80	; 00000050H

; 1849 : 		item->alpha_2				=	2;		// alpha

  02a03	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a06	c6 40 1b 02	 mov	 BYTE PTR [eax+27], 2

; 1850 : 		item->radius_2				=	8.0;	// radius

  02a0a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a0d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  02a15	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1851 : 
; 1852 : 		// END COLOUR
; 1853 : 		item->red_end				=	0;		// red

  02a1a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a1d	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1854 : 		item->green_end			=	0;		// green

  02a21	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a24	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1855 : 		item->blue_end				=	0;		// blue

  02a28	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a2b	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1856 : 		item->alpha_end			=	0;		// alpha

  02a2f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a32	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1857 : 		item->radius_end			=	10.0;	// radius

  02a36	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a39	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  02a41	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1858 : 
; 1859 : 		item->final_vertical_velocity		=	-1.0;

  02a46	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a49	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  02a51	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1860 : 		item->vertical_acceleration		=	0.5;

  02a56	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a59	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  02a61	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1861 : 
; 1862 : 		item->initial_velocity_noise		=	1.5;

  02a66	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a69	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  02a71	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1863 : 
; 1864 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  02a76	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a79	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1865 : 		item->texture_size				=	1.0;

  02a80	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a83	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02a8b	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1866 : 		item->animation_rate				=	1.0;

  02a90	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02a93	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02a9b	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1867 : 
; 1868 : 		item->additive						=	FALSE;

  02aa0	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  02aa5	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02aa8	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02aac	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02aaf	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1869 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  02ab3	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  02ab8	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02abb	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02abf	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02ac2	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1870 : 		item->flat							=	FALSE;

  02ac6	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  02acb	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02ace	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02ad2	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02ad5	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1871 : 		item->ground_based				=	TRUE;

  02ad9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02adc	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02ae0	66 83 c9 08	 or	 cx, 8
  02ae4	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02ae7	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1872 : 		item->lock_to_parent				=	TRUE;

  02aeb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02aee	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02af2	66 83 c9 10	 or	 cx, 16			; 00000010H
  02af6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02af9	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1873 : 		item->wind_affected				=	TRUE;

  02afd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b00	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02b04	66 83 c9 20	 or	 cx, 32			; 00000020H
  02b08	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02b0b	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1874 : 	}
; 1875 : 
; 1876 : 
; 1877 : 	////////////////////////////////////////
; 1878 : 	//
; 1879 : 	//	SMOKE_LIST_TYPE_DOWNWASH_WATER
; 1880 : 	//
; 1881 : 	////////////////////////////////////////
; 1882 : 	{
; 1883 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_WATER]);

  02b0f	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  02b14	6b c8 1a	 imul	 ecx, eax, 26
  02b17	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  02b1d	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1884 : 
; 1885 : 		// START COLOUR
; 1886 : 		item->red_start				=	255;		// red

  02b20	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b23	c6 00 ff	 mov	 BYTE PTR [eax], 255	; 000000ffH

; 1887 : 		item->green_start				=	255;		// green

  02b26	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b29	c6 40 01 ff	 mov	 BYTE PTR [eax+1], 255	; 000000ffH

; 1888 : 		item->blue_start 				=	255;		// blue

  02b2d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b30	c6 40 02 ff	 mov	 BYTE PTR [eax+2], 255	; 000000ffH

; 1889 : 		item->alpha_start 			=	60;		// alpha

  02b34	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b37	c6 40 03 3c	 mov	 BYTE PTR [eax+3], 60	; 0000003cH

; 1890 : 		item->radius_start			=	2.0;		// radius

  02b3b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b3e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  02b46	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1891 : 
; 1892 : 		// COLOUR CHANGE 1
; 1893 : 		item->colour_change_1		=	1.0;		// colour change 1 lifescale

  02b4b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b4e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02b56	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1894 : 		item->red_1						=	180;		// red

  02b5b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b5e	c6 40 0c b4	 mov	 BYTE PTR [eax+12], 180	; 000000b4H

; 1895 : 		item->green_1 					=	210;		// green

  02b62	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b65	c6 40 0d d2	 mov	 BYTE PTR [eax+13], 210	; 000000d2H

; 1896 : 		item->blue_1 					=	255;		// blue

  02b69	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b6c	c6 40 0e ff	 mov	 BYTE PTR [eax+14], 255	; 000000ffH

; 1897 : 		item->alpha_1 					=	40;		// alpha

  02b70	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b73	c6 40 0f 28	 mov	 BYTE PTR [eax+15], 40	; 00000028H

; 1898 : 		item->radius_1 				=	4.0;		// radius

  02b77	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b7a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  02b82	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1899 : 
; 1900 : 		// COLOUR CHANGE 2
; 1901 : 		item->colour_change_2		=	1.0;		// colour change 2 lifescale

  02b87	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b8a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02b92	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1902 : 		item->red_2						=	180;		// red

  02b97	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02b9a	c6 40 18 b4	 mov	 BYTE PTR [eax+24], 180	; 000000b4H

; 1903 : 		item->green_2					=	210;		// green

  02b9e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ba1	c6 40 19 d2	 mov	 BYTE PTR [eax+25], 210	; 000000d2H

; 1904 : 		item->blue_2					=	255;		// blue

  02ba5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ba8	c6 40 1a ff	 mov	 BYTE PTR [eax+26], 255	; 000000ffH

; 1905 : 		item->alpha_2					=	20;			// alpha

  02bac	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02baf	c6 40 1b 14	 mov	 BYTE PTR [eax+27], 20	; 00000014H

; 1906 : 		item->radius_2					=	8.0;		// radius

  02bb3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02bb6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  02bbe	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1907 : 
; 1908 : 		// END COLOUR
; 1909 : 		item->red_end					=	0;			// red

  02bc3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02bc6	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1910 : 		item->green_end				=	0;			// green

  02bca	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02bcd	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1911 : 		item->blue_end					=	0;			// blue

  02bd1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02bd4	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1912 : 		item->alpha_end				=	0;			// alpha

  02bd8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02bdb	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1913 : 		item->radius_end				=	10.0;		// radius

  02bdf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02be2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  02bea	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1914 : 
; 1915 : 		item->final_vertical_velocity		=	-1.0;

  02bef	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02bf2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  02bfa	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1916 : 		item->vertical_acceleration		=	1.0;

  02bff	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c02	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02c0a	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1917 : 
; 1918 : 		item->initial_velocity_noise		=	0.0;

  02c0f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c12	0f 57 c0	 xorps	 xmm0, xmm0
  02c15	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1919 : 
; 1920 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  02c1a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c1d	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1921 : 		item->texture_size				=	1.0;

  02c24	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c27	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02c2f	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1922 : 		item->animation_rate				=	1.0;

  02c34	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c37	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02c3f	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1923 : 
; 1924 : 		item->additive						=	FALSE;

  02c44	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  02c49	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02c4c	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02c50	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02c53	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1925 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  02c57	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  02c5c	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02c5f	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02c63	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02c66	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1926 : 		item->flat							=	TRUE;

  02c6a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c6d	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02c71	66 83 c9 04	 or	 cx, 4
  02c75	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02c78	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1927 : 		item->ground_based				=	TRUE;

  02c7c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c7f	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02c83	66 83 c9 08	 or	 cx, 8
  02c87	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02c8a	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1928 : 		item->lock_to_parent				=	TRUE;

  02c8e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02c91	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02c95	66 83 c9 10	 or	 cx, 16			; 00000010H
  02c99	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02c9c	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1929 : 		item->wind_affected				=	TRUE;

  02ca0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ca3	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02ca7	66 83 c9 20	 or	 cx, 32			; 00000020H
  02cab	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02cae	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1930 : 	}
; 1931 : 
; 1932 : 	////////////////////////////////////////
; 1933 : 	//
; 1934 : 	//	SMOKE_LIST_TYPE_DOWNWASH_SOIL
; 1935 : 	//
; 1936 : 	////////////////////////////////////////
; 1937 : 	{
; 1938 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_SOIL]);

  02cb2	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  02cb7	6b c8 1b	 imul	 ecx, eax, 27
  02cba	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  02cc0	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1939 : 
; 1940 : 		// START COLOUR
; 1941 : 		item->red_start			=	100;	// red

  02cc3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02cc6	c6 00 64	 mov	 BYTE PTR [eax], 100	; 00000064H

; 1942 : 		item->green_start			=	90;		// green

  02cc9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ccc	c6 40 01 5a	 mov	 BYTE PTR [eax+1], 90	; 0000005aH

; 1943 : 		item->blue_start 			=	60;		// blue

  02cd0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02cd3	c6 40 02 3c	 mov	 BYTE PTR [eax+2], 60	; 0000003cH

; 1944 : 		item->alpha_start 		=	20;		// alpha

  02cd7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02cda	c6 40 03 14	 mov	 BYTE PTR [eax+3], 20	; 00000014H

; 1945 : 		item->radius_start		=	2.0;	// radius

  02cde	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ce1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  02ce9	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1946 : 
; 1947 : 		// COLOUR CHANGE 1
; 1948 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  02cee	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02cf1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02cf9	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1949 : 		item->red_1					=	100;	// red

  02cfe	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d01	c6 40 0c 64	 mov	 BYTE PTR [eax+12], 100	; 00000064H

; 1950 : 		item->green_1 				=	90;	// green

  02d05	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d08	c6 40 0d 5a	 mov	 BYTE PTR [eax+13], 90	; 0000005aH

; 1951 : 		item->blue_1 				=	60;	// blue

  02d0c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d0f	c6 40 0e 3c	 mov	 BYTE PTR [eax+14], 60	; 0000003cH

; 1952 : 		item->alpha_1 				=	10;	// alpha

  02d13	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d16	c6 40 0f 0a	 mov	 BYTE PTR [eax+15], 10	; 0000000aH

; 1953 : 		item->radius_1 			=	4.0;	// radius

  02d1a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d1d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  02d25	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1954 : 
; 1955 : 		// COLOUR CHANGE 2
; 1956 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  02d2a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d2d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02d35	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1957 : 		item->red_2					=	100;	// red

  02d3a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d3d	c6 40 18 64	 mov	 BYTE PTR [eax+24], 100	; 00000064H

; 1958 : 		item->green_2				=	90;	// green

  02d41	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d44	c6 40 19 5a	 mov	 BYTE PTR [eax+25], 90	; 0000005aH

; 1959 : 		item->blue_2				=	60;	// blue

  02d48	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d4b	c6 40 1a 3c	 mov	 BYTE PTR [eax+26], 60	; 0000003cH

; 1960 : 		item->alpha_2				=	5;		// alpha

  02d4f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d52	c6 40 1b 05	 mov	 BYTE PTR [eax+27], 5

; 1961 : 		item->radius_2				=	8.0;	// radius

  02d56	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d59	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  02d61	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1962 : 
; 1963 : 		// END COLOUR
; 1964 : 		item->red_end				=	0;		// red

  02d66	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d69	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 1965 : 		item->green_end			=	0;		// green

  02d6d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d70	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 1966 : 		item->blue_end				=	0;		// blue

  02d74	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d77	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 1967 : 		item->alpha_end			=	0;		// alpha

  02d7b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d7e	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 1968 : 		item->radius_end			=	10.0;	// radius

  02d82	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d85	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  02d8d	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1969 : 
; 1970 : 		item->final_vertical_velocity		=	-1.0;

  02d92	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02d95	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  02d9d	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1971 : 		item->vertical_acceleration		=	0.5;

  02da2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02da5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  02dad	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1972 : 
; 1973 : 		item->initial_velocity_noise	=	1.5;

  02db2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02db5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  02dbd	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1974 : 
; 1975 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  02dc2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02dc5	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 1976 : 		item->texture_size				=	1.0;

  02dcc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02dcf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02dd7	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 1977 : 		item->animation_rate				=	1.0;

  02ddc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ddf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02de7	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 1978 : 
; 1979 : 		item->additive						=	FALSE;

  02dec	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  02df1	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02df4	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02df8	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02dfb	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1980 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  02dff	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  02e04	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02e07	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02e0b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02e0e	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1981 : 		item->flat							=	FALSE;

  02e12	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  02e17	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02e1a	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02e1e	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02e21	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 1982 : 		item->ground_based				=	TRUE;

  02e25	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e28	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02e2c	66 83 c9 08	 or	 cx, 8
  02e30	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02e33	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1983 : 		item->lock_to_parent				=	TRUE;

  02e37	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e3a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02e3e	66 83 c9 10	 or	 cx, 16			; 00000010H
  02e42	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02e45	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1984 : 		item->wind_affected				=	TRUE;

  02e49	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e4c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02e50	66 83 c9 20	 or	 cx, 32			; 00000020H
  02e54	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02e57	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 1985 : 	}
; 1986 : 
; 1987 : 	////////////////////////////////////////
; 1988 : 	//
; 1989 : 	//	SMOKE_LIST_TYPE_DOWNWASH_FIELD_LIGHTBROWN
; 1990 : 	//
; 1991 : 	////////////////////////////////////////
; 1992 : 	{
; 1993 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_FIELD_LIGHTBROWN]);

  02e5b	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  02e60	6b c8 1c	 imul	 ecx, eax, 28
  02e63	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  02e69	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 1994 : 
; 1995 : 		// START COLOUR
; 1996 : 		item->red_start			=	150;	// red

  02e6c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e6f	c6 00 96	 mov	 BYTE PTR [eax], 150	; 00000096H

; 1997 : 		item->green_start			=	130;	// green

  02e72	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e75	c6 40 01 82	 mov	 BYTE PTR [eax+1], 130	; 00000082H

; 1998 : 		item->blue_start 			=	90;	// blue

  02e79	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e7c	c6 40 02 5a	 mov	 BYTE PTR [eax+2], 90	; 0000005aH

; 1999 : 		item->alpha_start 		=	20;	// alpha

  02e80	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e83	c6 40 03 14	 mov	 BYTE PTR [eax+3], 20	; 00000014H

; 2000 : 		item->radius_start		=	2.0;	// radius

  02e87	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e8a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  02e92	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2001 : 
; 2002 : 		// COLOUR CHANGE 1
; 2003 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  02e97	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02e9a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02ea2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2004 : 		item->red_1					=	150;	// red

  02ea7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02eaa	c6 40 0c 96	 mov	 BYTE PTR [eax+12], 150	; 00000096H

; 2005 : 		item->green_1 				=	130;	// green

  02eae	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02eb1	c6 40 0d 82	 mov	 BYTE PTR [eax+13], 130	; 00000082H

; 2006 : 		item->blue_1 				=	90;	// blue

  02eb5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02eb8	c6 40 0e 5a	 mov	 BYTE PTR [eax+14], 90	; 0000005aH

; 2007 : 		item->alpha_1 				=	10;	// alpha

  02ebc	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ebf	c6 40 0f 0a	 mov	 BYTE PTR [eax+15], 10	; 0000000aH

; 2008 : 		item->radius_1 			=	4.0;	// radius

  02ec3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ec6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  02ece	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 2009 : 
; 2010 : 		// COLOUR CHANGE 2
; 2011 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  02ed3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ed6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02ede	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 2012 : 		item->red_2					=	150;	// red

  02ee3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ee6	c6 40 18 96	 mov	 BYTE PTR [eax+24], 150	; 00000096H

; 2013 : 		item->green_2				=	130;	// green

  02eea	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02eed	c6 40 19 82	 mov	 BYTE PTR [eax+25], 130	; 00000082H

; 2014 : 		item->blue_2				=	90;	// blue

  02ef1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ef4	c6 40 1a 5a	 mov	 BYTE PTR [eax+26], 90	; 0000005aH

; 2015 : 		item->alpha_2				=	5;		// alpha

  02ef8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02efb	c6 40 1b 05	 mov	 BYTE PTR [eax+27], 5

; 2016 : 		item->radius_2				=	8.0;	// radius

  02eff	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f02	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  02f0a	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 2017 : 
; 2018 : 		// END COLOUR
; 2019 : 		item->red_end				=	0;		// red

  02f0f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f12	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 2020 : 		item->green_end			=	0;		// green

  02f16	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f19	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 2021 : 		item->blue_end				=	0;		// blue

  02f1d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f20	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 2022 : 		item->alpha_end			=	0;		// alpha

  02f24	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f27	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 2023 : 		item->radius_end			=	10.0;	// radius

  02f2b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f2e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  02f36	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 2024 : 
; 2025 : 		item->final_vertical_velocity		=	-1.0;

  02f3b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f3e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  02f46	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 2026 : 		item->vertical_acceleration		=	0.5;

  02f4b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f4e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  02f56	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 2027 : 
; 2028 : 		item->initial_velocity_noise		=	1.5;

  02f5b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f5e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  02f66	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 2029 : 
; 2030 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  02f6b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f6e	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 2031 : 		item->texture_size				=	1.0;

  02f75	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f78	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02f80	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 2032 : 		item->animation_rate				=	1.0;

  02f85	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02f88	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  02f90	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 2033 : 
; 2034 : 		item->additive						=	FALSE;

  02f95	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  02f9a	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02f9d	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02fa1	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02fa4	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2035 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  02fa8	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  02fad	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02fb0	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02fb4	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02fb7	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2036 : 		item->flat							=	FALSE;

  02fbb	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  02fc0	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  02fc3	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  02fc7	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02fca	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2037 : 		item->ground_based				=	TRUE;

  02fce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02fd1	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02fd5	66 83 c9 08	 or	 cx, 8
  02fd9	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02fdc	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2038 : 		item->lock_to_parent				=	TRUE;

  02fe0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02fe3	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02fe7	66 83 c9 10	 or	 cx, 16			; 00000010H
  02feb	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  02fee	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2039 : 		item->wind_affected				=	TRUE;

  02ff2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  02ff5	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  02ff9	66 83 c9 20	 or	 cx, 32			; 00000020H
  02ffd	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03000	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2040 : 	}
; 2041 : 
; 2042 : 	////////////////////////////////////////
; 2043 : 	//
; 2044 : 	//	SMOKE_LIST_TYPE_DOWNWASH_FIELD_DARKBROWN
; 2045 : 	//
; 2046 : 	////////////////////////////////////////
; 2047 : 	{
; 2048 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_FIELD_DARKBROWN]);

  03004	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  03009	6b c8 1d	 imul	 ecx, eax, 29
  0300c	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  03012	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 2049 : 
; 2050 : 		// START COLOUR
; 2051 : 		item->red_start			=	100;	// red

  03015	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03018	c6 00 64	 mov	 BYTE PTR [eax], 100	; 00000064H

; 2052 : 		item->green_start			=	90;	// green

  0301b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0301e	c6 40 01 5a	 mov	 BYTE PTR [eax+1], 90	; 0000005aH

; 2053 : 		item->blue_start 			=	60;	// blue

  03022	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03025	c6 40 02 3c	 mov	 BYTE PTR [eax+2], 60	; 0000003cH

; 2054 : 		item->alpha_start 		=	20;	// alpha

  03029	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0302c	c6 40 03 14	 mov	 BYTE PTR [eax+3], 20	; 00000014H

; 2055 : 		item->radius_start		=	2.0;	// radius

  03030	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0303b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2056 : 
; 2057 : 		// COLOUR CHANGE 1
; 2058 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  03040	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03043	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0304b	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2059 : 		item->red_1					=	100;	// red

  03050	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03053	c6 40 0c 64	 mov	 BYTE PTR [eax+12], 100	; 00000064H

; 2060 : 		item->green_1 				=	90;	// green

  03057	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0305a	c6 40 0d 5a	 mov	 BYTE PTR [eax+13], 90	; 0000005aH

; 2061 : 		item->blue_1 				=	60;	// blue

  0305e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03061	c6 40 0e 3c	 mov	 BYTE PTR [eax+14], 60	; 0000003cH

; 2062 : 		item->alpha_1 				=	10;	// alpha

  03065	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03068	c6 40 0f 0a	 mov	 BYTE PTR [eax+15], 10	; 0000000aH

; 2063 : 		item->radius_1 			=	4.0;	// radius

  0306c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0306f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  03077	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 2064 : 
; 2065 : 		// COLOUR CHANGE 2
; 2066 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  0307c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0307f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03087	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 2067 : 		item->red_2					=	100;	// red

  0308c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0308f	c6 40 18 64	 mov	 BYTE PTR [eax+24], 100	; 00000064H

; 2068 : 		item->green_2				=	90;	// green

  03093	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03096	c6 40 19 5a	 mov	 BYTE PTR [eax+25], 90	; 0000005aH

; 2069 : 		item->blue_2				=	60;	// blue

  0309a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0309d	c6 40 1a 3c	 mov	 BYTE PTR [eax+26], 60	; 0000003cH

; 2070 : 		item->alpha_2				=	5;		// alpha

  030a1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030a4	c6 40 1b 05	 mov	 BYTE PTR [eax+27], 5

; 2071 : 		item->radius_2				=	8.0;	// radius

  030a8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  030b3	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 2072 : 
; 2073 : 		// END COLOUR
; 2074 : 		item->red_end				=	0;		// red

  030b8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030bb	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 2075 : 		item->green_end			=	0;		// green

  030bf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030c2	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 2076 : 		item->blue_end				=	0;		// blue

  030c6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030c9	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 2077 : 		item->alpha_end			=	0;		// alpha

  030cd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030d0	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 2078 : 		item->radius_end			=	10.0;	// radius

  030d4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  030df	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 2079 : 
; 2080 : 		item->final_vertical_velocity		=	-1.0;

  030e4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  030ef	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 2081 : 		item->vertical_acceleration		=	0.5;

  030f4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  030f7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  030ff	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 2082 : 
; 2083 : 		item->initial_velocity_noise	=	1.5;

  03104	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03107	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  0310f	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 2084 : 
; 2085 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  03114	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03117	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 2086 : 		item->texture_size				=	1.0;

  0311e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03121	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03129	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 2087 : 		item->animation_rate				=	1.0;

  0312e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03131	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03139	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 2088 : 
; 2089 : 		item->additive						=	FALSE;

  0313e	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  03143	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03146	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0314a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0314d	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2090 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  03151	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  03156	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03159	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0315d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03160	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2091 : 		item->flat							=	FALSE;

  03164	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  03169	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  0316c	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  03170	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03173	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2092 : 		item->ground_based				=	TRUE;

  03177	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0317a	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0317e	66 83 c9 08	 or	 cx, 8
  03182	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03185	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2093 : 		item->lock_to_parent				=	TRUE;

  03189	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0318c	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  03190	66 83 c9 10	 or	 cx, 16			; 00000010H
  03194	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03197	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2094 : 		item->wind_affected				=	TRUE;

  0319b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0319e	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  031a2	66 83 c9 20	 or	 cx, 32			; 00000020H
  031a6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  031a9	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2095 : 	}
; 2096 : 
; 2097 : 	////////////////////////////////////////
; 2098 : 	//
; 2099 : 	//	SMOKE_LIST_TYPE_DOWNWASH_FIELD_LIGHTGREEN
; 2100 : 	//
; 2101 : 	////////////////////////////////////////
; 2102 : 	{
; 2103 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_FIELD_LIGHTGREEN]);

  031ad	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  031b2	6b c8 1e	 imul	 ecx, eax, 30
  031b5	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  031bb	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 2104 : 
; 2105 : 		// START COLOUR
; 2106 : 		item->red_start			=	80;	// red

  031be	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  031c1	c6 00 50	 mov	 BYTE PTR [eax], 80	; 00000050H

; 2107 : 		item->green_start			=	170;	// green

  031c4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  031c7	c6 40 01 aa	 mov	 BYTE PTR [eax+1], 170	; 000000aaH

; 2108 : 		item->blue_start 			=	40;	// blue

  031cb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  031ce	c6 40 02 28	 mov	 BYTE PTR [eax+2], 40	; 00000028H

; 2109 : 		item->alpha_start 		=	20;	// alpha

  031d2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  031d5	c6 40 03 14	 mov	 BYTE PTR [eax+3], 20	; 00000014H

; 2110 : 		item->radius_start		=	2.0;	// radius

  031d9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  031dc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  031e4	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2111 : 
; 2112 : 		// COLOUR CHANGE 1
; 2113 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  031e9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  031ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  031f4	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2114 : 		item->red_1					=	80;	// red

  031f9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  031fc	c6 40 0c 50	 mov	 BYTE PTR [eax+12], 80	; 00000050H

; 2115 : 		item->green_1 				=	170;	// green

  03200	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03203	c6 40 0d aa	 mov	 BYTE PTR [eax+13], 170	; 000000aaH

; 2116 : 		item->blue_1 				=	40;	// blue

  03207	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0320a	c6 40 0e 28	 mov	 BYTE PTR [eax+14], 40	; 00000028H

; 2117 : 		item->alpha_1 				=	10;	// alpha

  0320e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03211	c6 40 0f 0a	 mov	 BYTE PTR [eax+15], 10	; 0000000aH

; 2118 : 		item->radius_1 			=	4.0;	// radius

  03215	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03218	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  03220	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 2119 : 
; 2120 : 		// COLOUR CHANGE 2
; 2121 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  03225	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03228	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03230	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 2122 : 		item->red_2					=	80;	// red

  03235	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03238	c6 40 18 50	 mov	 BYTE PTR [eax+24], 80	; 00000050H

; 2123 : 		item->green_2				=	170;	// green

  0323c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0323f	c6 40 19 aa	 mov	 BYTE PTR [eax+25], 170	; 000000aaH

; 2124 : 		item->blue_2				=	40;	// blue

  03243	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03246	c6 40 1a 28	 mov	 BYTE PTR [eax+26], 40	; 00000028H

; 2125 : 		item->alpha_2				=	5;		// alpha

  0324a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0324d	c6 40 1b 05	 mov	 BYTE PTR [eax+27], 5

; 2126 : 		item->radius_2				=	8.0;	// radius

  03251	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03254	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  0325c	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 2127 : 
; 2128 : 		// END COLOUR
; 2129 : 		item->red_end				=	0;		// red

  03261	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03264	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 2130 : 		item->green_end			=	0;		// green

  03268	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0326b	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 2131 : 		item->blue_end				=	0;		// blue

  0326f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03272	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 2132 : 		item->alpha_end			=	0;		// alpha

  03276	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03279	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 2133 : 		item->radius_end			=	10.0;	// radius

  0327d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03280	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  03288	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 2134 : 
; 2135 : 		item->final_vertical_velocity		=	-1.0;

  0328d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03290	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  03298	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 2136 : 		item->vertical_acceleration		=	0.5;

  0329d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  032a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  032a8	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 2137 : 
; 2138 : 		item->initial_velocity_noise	=	1.5;

  032ad	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  032b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  032b8	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 2139 : 
; 2140 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  032bd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  032c0	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 2141 : 		item->texture_size				=	1.0;

  032c7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  032ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  032d2	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 2142 : 		item->animation_rate				=	1.0;

  032d7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  032da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  032e2	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 2143 : 
; 2144 : 		item->additive						=	FALSE;

  032e7	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  032ec	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  032ef	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  032f3	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  032f6	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2145 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  032fa	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  032ff	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03302	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  03306	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03309	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2146 : 		item->flat							=	FALSE;

  0330d	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  03312	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03315	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  03319	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0331c	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2147 : 		item->ground_based				=	TRUE;

  03320	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03323	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  03327	66 83 c9 08	 or	 cx, 8
  0332b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0332e	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2148 : 		item->lock_to_parent				=	TRUE;

  03332	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03335	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  03339	66 83 c9 10	 or	 cx, 16			; 00000010H
  0333d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03340	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2149 : 		item->wind_affected				=	TRUE;

  03344	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03347	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0334b	66 83 c9 20	 or	 cx, 32			; 00000020H
  0334f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03352	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2150 : 	}
; 2151 : 
; 2152 : 	////////////////////////////////////////
; 2153 : 	//
; 2154 : 	//	SMOKE_LIST_TYPE_DOWNWASH_FIELD_DARKGREEN
; 2155 : 	//
; 2156 : 	////////////////////////////////////////
; 2157 : 	{
; 2158 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_FIELD_DARKGREEN]);

  03356	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  0335b	6b c8 1f	 imul	 ecx, eax, 31
  0335e	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  03364	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 2159 : 
; 2160 : 		// START COLOUR
; 2161 : 		item->red_start			=	40;	// red

  03367	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0336a	c6 00 28	 mov	 BYTE PTR [eax], 40	; 00000028H

; 2162 : 		item->green_start			=	80;	// green

  0336d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03370	c6 40 01 50	 mov	 BYTE PTR [eax+1], 80	; 00000050H

; 2163 : 		item->blue_start 			=	20;	// blue

  03374	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03377	c6 40 02 14	 mov	 BYTE PTR [eax+2], 20	; 00000014H

; 2164 : 		item->alpha_start 		=	20;	// alpha

  0337b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0337e	c6 40 03 14	 mov	 BYTE PTR [eax+3], 20	; 00000014H

; 2165 : 		item->radius_start		=	2.0;	// radius

  03382	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03385	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0338d	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2166 : 
; 2167 : 		// COLOUR CHANGE 1
; 2168 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  03392	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03395	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0339d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2169 : 		item->red_1					=	40;	// red

  033a2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033a5	c6 40 0c 28	 mov	 BYTE PTR [eax+12], 40	; 00000028H

; 2170 : 		item->green_1 				=	80;	// green

  033a9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033ac	c6 40 0d 50	 mov	 BYTE PTR [eax+13], 80	; 00000050H

; 2171 : 		item->blue_1 				=	20;	// blue

  033b0	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033b3	c6 40 0e 14	 mov	 BYTE PTR [eax+14], 20	; 00000014H

; 2172 : 		item->alpha_1 				=	10;	// alpha

  033b7	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033ba	c6 40 0f 0a	 mov	 BYTE PTR [eax+15], 10	; 0000000aH

; 2173 : 		item->radius_1 			=	4.0;	// radius

  033be	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  033c9	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 2174 : 
; 2175 : 		// COLOUR CHANGE 2
; 2176 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  033ce	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  033d9	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 2177 : 		item->red_2					=	40;	// red

  033de	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033e1	c6 40 18 28	 mov	 BYTE PTR [eax+24], 40	; 00000028H

; 2178 : 		item->green_2				=	80;	// green

  033e5	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033e8	c6 40 19 50	 mov	 BYTE PTR [eax+25], 80	; 00000050H

; 2179 : 		item->blue_2				=	20;	// blue

  033ec	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033ef	c6 40 1a 14	 mov	 BYTE PTR [eax+26], 20	; 00000014H

; 2180 : 		item->alpha_2				=	5;		// alpha

  033f3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033f6	c6 40 1b 05	 mov	 BYTE PTR [eax+27], 5

; 2181 : 		item->radius_2				=	8.0;	// radius

  033fa	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  033fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  03405	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 2182 : 
; 2183 : 		// END COLOUR
; 2184 : 		item->red_end				=	0;		// red

  0340a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0340d	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 2185 : 		item->green_end			=	0;		// green

  03411	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03414	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 2186 : 		item->blue_end				=	0;		// blue

  03418	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0341b	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 2187 : 		item->alpha_end			=	0;		// alpha

  0341f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03422	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 2188 : 		item->radius_end			=	10.0;	// radius

  03426	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03429	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  03431	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 2189 : 
; 2190 : 		item->final_vertical_velocity		=	-1.0;

  03436	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03439	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  03441	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 2191 : 		item->vertical_acceleration		=	0.5;

  03446	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03449	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  03451	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 2192 : 
; 2193 : 		item->initial_velocity_noise		=	1.5;

  03456	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03459	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  03461	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 2194 : 
; 2195 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  03466	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03469	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 2196 : 		item->texture_size				=	1.0;

  03470	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03473	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0347b	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 2197 : 		item->animation_rate				=	1.0;

  03480	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03483	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0348b	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 2198 : 
; 2199 : 		item->additive						=	FALSE;

  03490	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  03495	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03498	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0349c	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0349f	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2200 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  034a3	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  034a8	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  034ab	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  034af	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  034b2	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2201 : 		item->flat							=	FALSE;

  034b6	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  034bb	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  034be	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  034c2	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  034c5	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2202 : 		item->ground_based				=	TRUE;

  034c9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  034cc	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  034d0	66 83 c9 08	 or	 cx, 8
  034d4	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  034d7	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2203 : 		item->lock_to_parent				=	TRUE;

  034db	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  034de	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  034e2	66 83 c9 10	 or	 cx, 16			; 00000010H
  034e6	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  034e9	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2204 : 		item->wind_affected				=	TRUE;

  034ed	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  034f0	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  034f4	66 83 c9 20	 or	 cx, 32			; 00000020H
  034f8	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  034fb	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2205 : 	}
; 2206 : 
; 2207 : 	////////////////////////////////////////
; 2208 : 	//
; 2209 : 	//	SMOKE_LIST_TYPE_DOWNWASH_ROCK
; 2210 : 	//
; 2211 : 	////////////////////////////////////////
; 2212 : 	{
; 2213 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_ROCK]);

  034ff	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  03504	c1 e0 05	 shl	 eax, 5
  03507	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  0350d	89 45 fc	 mov	 DWORD PTR _item$[ebp], eax

; 2214 : 
; 2215 : 		// START COLOUR
; 2216 : 		item->red_start			=	100;	// red

  03510	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03513	c6 00 64	 mov	 BYTE PTR [eax], 100	; 00000064H

; 2217 : 		item->green_start			=	100;	// green

  03516	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03519	c6 40 01 64	 mov	 BYTE PTR [eax+1], 100	; 00000064H

; 2218 : 		item->blue_start 			=	100;	// blue

  0351d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03520	c6 40 02 64	 mov	 BYTE PTR [eax+2], 100	; 00000064H

; 2219 : 		item->alpha_start 		=	16;	// alpha

  03524	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03527	c6 40 03 10	 mov	 BYTE PTR [eax+3], 16	; 00000010H

; 2220 : 		item->radius_start		=	2.0;	// radius

  0352b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0352e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  03536	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2221 : 
; 2222 : 		// COLOUR CHANGE 1
; 2223 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  0353b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0353e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03546	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2224 : 		item->red_1					=	100;	// red

  0354b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0354e	c6 40 0c 64	 mov	 BYTE PTR [eax+12], 100	; 00000064H

; 2225 : 		item->green_1 				=	100;	// green

  03552	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03555	c6 40 0d 64	 mov	 BYTE PTR [eax+13], 100	; 00000064H

; 2226 : 		item->blue_1 				=	100;	// blue

  03559	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0355c	c6 40 0e 64	 mov	 BYTE PTR [eax+14], 100	; 00000064H

; 2227 : 		item->alpha_1 				=	8;		// alpha

  03560	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03563	c6 40 0f 08	 mov	 BYTE PTR [eax+15], 8

; 2228 : 		item->radius_1 			=	4.0;	// radius

  03567	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0356a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  03572	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 2229 : 
; 2230 : 		// COLOUR CHANGE 2
; 2231 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  03577	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0357a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03582	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 2232 : 		item->red_2					=	100;	// red

  03587	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0358a	c6 40 18 64	 mov	 BYTE PTR [eax+24], 100	; 00000064H

; 2233 : 		item->green_2				=	100;	// green

  0358e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03591	c6 40 19 64	 mov	 BYTE PTR [eax+25], 100	; 00000064H

; 2234 : 		item->blue_2				=	100;	// blue

  03595	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03598	c6 40 1a 64	 mov	 BYTE PTR [eax+26], 100	; 00000064H

; 2235 : 		item->alpha_2				=	2;		// alpha

  0359c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0359f	c6 40 1b 02	 mov	 BYTE PTR [eax+27], 2

; 2236 : 		item->radius_2				=	8.0;	// radius

  035a3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  035ae	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 2237 : 
; 2238 : 		// END COLOUR
; 2239 : 		item->red_end				=	0;		// red

  035b3	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035b6	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 2240 : 		item->green_end			=	0;		// green

  035ba	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035bd	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 2241 : 		item->blue_end				=	0;		// blue

  035c1	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035c4	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 2242 : 		item->alpha_end			=	0;		// alpha

  035c8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035cb	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 2243 : 		item->radius_end			=	10.0;	// radius

  035cf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  035da	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 2244 : 
; 2245 : 		item->final_vertical_velocity		=	-1.0;

  035df	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035e2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  035ea	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 2246 : 		item->vertical_acceleration		=	0.5;

  035ef	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  035f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  035fa	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 2247 : 
; 2248 : 		item->initial_velocity_noise	=	1.5;

  035ff	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03602	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  0360a	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 2249 : 
; 2250 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  0360f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03612	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 2251 : 		item->texture_size				=	1.0;

  03619	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0361c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03624	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 2252 : 		item->animation_rate				=	1.0;

  03629	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0362c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  03634	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 2253 : 
; 2254 : 		item->additive						=	FALSE;

  03639	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  0363e	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03641	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  03645	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03648	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2255 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  0364c	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  03651	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03654	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  03658	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0365b	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2256 : 		item->flat							=	FALSE;

  0365f	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  03664	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03667	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  0366b	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0366e	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2257 : 		item->ground_based				=	TRUE;

  03672	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03675	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  03679	66 83 c9 08	 or	 cx, 8
  0367d	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03680	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2258 : 		item->lock_to_parent				=	TRUE;

  03684	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03687	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0368b	66 83 c9 10	 or	 cx, 16			; 00000010H
  0368f	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03692	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2259 : 		item->wind_affected				=	TRUE;

  03696	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03699	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  0369d	66 83 c9 20	 or	 cx, 32			; 00000020H
  036a1	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  036a4	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2260 : 	}
; 2261 : 
; 2262 : 	////////////////////////////////////////
; 2263 : 	//
; 2264 : 	//	SMOKE_LIST_TYPE_DOWNWASH_SNOW
; 2265 : 	//
; 2266 : 	////////////////////////////////////////
; 2267 : 	{
; 2268 : 		item = &(smoke_list_database [SMOKE_LIST_TYPE_DOWNWASH_SNOW]);

  036a8	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  036ad	6b c8 21	 imul	 ecx, eax, 33
  036b0	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  036b6	89 4d fc	 mov	 DWORD PTR _item$[ebp], ecx

; 2269 : 
; 2270 : 		// START COLOUR
; 2271 : 		item->red_start			=	210;	// red

  036b9	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036bc	c6 00 d2	 mov	 BYTE PTR [eax], 210	; 000000d2H

; 2272 : 		item->green_start			=	210;	// green

  036bf	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036c2	c6 40 01 d2	 mov	 BYTE PTR [eax+1], 210	; 000000d2H

; 2273 : 		item->blue_start 			=	210;	// blue

  036c6	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036c9	c6 40 02 d2	 mov	 BYTE PTR [eax+2], 210	; 000000d2H

; 2274 : 		item->alpha_start 		=	20;	// alpha

  036cd	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036d0	c6 40 03 14	 mov	 BYTE PTR [eax+3], 20	; 00000014H

; 2275 : 		item->radius_start		=	2.0;	// radius

  036d4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  036df	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2276 : 
; 2277 : 		// COLOUR CHANGE 1
; 2278 : 		item->colour_change_1	=	1.0;	// colour change 1 lifescale

  036e4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  036ef	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2279 : 		item->red_1					=	210;	// red

  036f4	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036f7	c6 40 0c d2	 mov	 BYTE PTR [eax+12], 210	; 000000d2H

; 2280 : 		item->green_1 				=	210;	// green

  036fb	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  036fe	c6 40 0d d2	 mov	 BYTE PTR [eax+13], 210	; 000000d2H

; 2281 : 		item->blue_1 				=	210;	// blue

  03702	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03705	c6 40 0e d2	 mov	 BYTE PTR [eax+14], 210	; 000000d2H

; 2282 : 		item->alpha_1 				=	10;	// alpha

  03709	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0370c	c6 40 0f 0a	 mov	 BYTE PTR [eax+15], 10	; 0000000aH

; 2283 : 		item->radius_1 			=	4.0;	// radius

  03710	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03713	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  0371b	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 2284 : 
; 2285 : 		// COLOUR CHANGE 2
; 2286 : 		item->colour_change_2	=	1.0;	// colour change 2 lifescale

  03720	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03723	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0372b	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 2287 : 		item->red_2					=	210;	// red

  03730	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03733	c6 40 18 d2	 mov	 BYTE PTR [eax+24], 210	; 000000d2H

; 2288 : 		item->green_2				=	210;	// green

  03737	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0373a	c6 40 19 d2	 mov	 BYTE PTR [eax+25], 210	; 000000d2H

; 2289 : 		item->blue_2				=	210;	// blue

  0373e	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03741	c6 40 1a d2	 mov	 BYTE PTR [eax+26], 210	; 000000d2H

; 2290 : 		item->alpha_2				=	5;		// alpha

  03745	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03748	c6 40 1b 05	 mov	 BYTE PTR [eax+27], 5

; 2291 : 		item->radius_2				=	8.0;	// radius

  0374c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0374f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  03757	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 2292 : 
; 2293 : 		// END COLOUR
; 2294 : 		item->red_end				=	0;		// red

  0375c	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0375f	c6 40 20 00	 mov	 BYTE PTR [eax+32], 0

; 2295 : 		item->green_end			=	0;		// green

  03763	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03766	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0

; 2296 : 		item->blue_end				=	0;		// blue

  0376a	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0376d	c6 40 22 00	 mov	 BYTE PTR [eax+34], 0

; 2297 : 		item->alpha_end			=	0;		// alpha

  03771	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03774	c6 40 23 00	 mov	 BYTE PTR [eax+35], 0

; 2298 : 		item->radius_end			=	10.0;	// radius

  03778	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0377b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  03783	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 2299 : 
; 2300 : 		item->final_vertical_velocity		=	-1.0;

  03788	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0378b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  03793	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 2301 : 		item->vertical_acceleration		=	0.5;

  03798	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0379b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  037a3	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 2302 : 
; 2303 : 		item->initial_velocity_noise		=	1.5;

  037a8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  037ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  037b3	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 2304 : 
; 2305 : 		item->texture						=	TEXTURE_ANIMATION_INDEX_SMOKE;

  037b8	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  037bb	c7 40 34 63 00
	00 00		 mov	 DWORD PTR [eax+52], 99	; 00000063H

; 2306 : 		item->texture_size				=	1.0;

  037c2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  037c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  037cd	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 2307 : 		item->animation_rate				=	1.0;

  037d2	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  037d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  037dd	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 2308 : 
; 2309 : 		item->additive						=	FALSE;

  037e2	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  037e7	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  037ea	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  037ee	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  037f1	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2310 : 		item->draw_type					=	SMOKE_DRAW_TYPE_SPRITES;

  037f5	b8 fd ff 00 00	 mov	 eax, 65533		; 0000fffdH
  037fa	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  037fd	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  03801	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03804	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2311 : 		item->flat							=	FALSE;

  03808	b8 fb ff 00 00	 mov	 eax, 65531		; 0000fffbH
  0380d	8b 4d fc	 mov	 ecx, DWORD PTR _item$[ebp]
  03810	66 23 41 40	 and	 ax, WORD PTR [ecx+64]
  03814	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03817	66 89 42 40	 mov	 WORD PTR [edx+64], ax

; 2312 : 		item->ground_based				=	TRUE;

  0381b	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  0381e	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  03822	66 83 c9 08	 or	 cx, 8
  03826	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  03829	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2313 : 		item->lock_to_parent				=	TRUE;

  0382d	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03830	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  03834	66 83 c9 10	 or	 cx, 16			; 00000010H
  03838	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0383b	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2314 : 		item->wind_affected				=	TRUE;

  0383f	8b 45 fc	 mov	 eax, DWORD PTR _item$[ebp]
  03842	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  03846	66 83 c9 20	 or	 cx, 32			; 00000020H
  0384a	8b 55 fc	 mov	 edx, DWORD PTR _item$[ebp]
  0384d	66 89 4a 40	 mov	 WORD PTR [edx+64], cx

; 2315 : 	}
; 2316 : 
; 2317 : 	// 01DEC10 Casm Smoke database import/export
; 2318 : 	if (file_exist (SMOKE_LIST_DATABASE_FILENAME))

  03851	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ICNOEHEB@SMOKES?4CSV@
  03856	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  0385b	85 c0		 test	 eax, eax
  0385d	74 07		 je	 SHORT $LN2@initialise

; 2319 : 	{
; 2320 : 		import_smoke_list_database ();

  0385f	e8 00 00 00 00	 call	 ?import_smoke_list_database@@YGXXZ ; import_smoke_list_database

; 2321 : 	}
; 2322 : 	else

  03864	eb 05		 jmp	 SHORT $LN3@initialise
$LN2@initialise:

; 2323 : 	{
; 2324 : 		export_smoke_list_database ();

  03866	e8 00 00 00 00	 call	 ?export_smoke_list_database@@YGXXZ ; export_smoke_list_database
$LN3@initialise:

; 2325 : 	}
; 2326 : 
; 2327 : 	//
; 2328 : 	// allocate arrays for smoke list drawing
; 2329 : 	//
; 2330 : 
; 2331 : 	initialise_smoke_list_draw_arrays ();

  0386b	e8 00 00 00 00	 call	 ?initialise_smoke_list_draw_arrays@@YGXXZ ; initialise_smoke_list_draw_arrays

; 2332 : }

  03870	5f		 pop	 edi
  03871	5e		 pop	 esi
  03872	5b		 pop	 ebx
  03873	8b e5		 mov	 esp, ebp
  03875	5d		 pop	 ebp
  03876	c3		 ret	 0
?initialise_smoke_list_database@@YGXXZ ENDP		; initialise_smoke_list_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_dbase.c
;	COMDAT ?get_smoke_type_by_name@@YGHPBD@Z
_TEXT	SEGMENT
_count$ = -4						; size = 4
_name$ = 8						; size = 4
?get_smoke_type_by_name@@YGHPBD@Z PROC			; get_smoke_type_by_name, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 155  : 	int
; 156  : 		count;
; 157  : 
; 158  : 	for (count = 0; count < total_number_of_smoke_list_types; count++)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@get_smoke_
$LN2@get_smoke_:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@get_smoke_:
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0001e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?total_number_of_smoke_list_types@@3HA
  00024	7d 25		 jge	 SHORT $LN3@get_smoke_

; 159  : 	{
; 160  : 		if (!stricmp (name, smoke_list_types_names[count]))

  00026	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?smoke_list_types_names@@3PAPADA ; smoke_list_types_names
  0002f	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00032	52		 push	 edx
  00033	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  0003d	83 c4 08	 add	 esp, 8
  00040	85 c0		 test	 eax, eax
  00042	75 05		 jne	 SHORT $LN5@get_smoke_

; 161  : 		{
; 162  : 			return count;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00047	eb 05		 jmp	 SHORT $LN1@get_smoke_
$LN5@get_smoke_:

; 163  : 		}
; 164  : 	}

  00049	eb c7		 jmp	 SHORT $LN2@get_smoke_
$LN3@get_smoke_:

; 165  : 
; 166  : 	return -1;

  0004b	83 c8 ff	 or	 eax, -1
$LN1@get_smoke_:

; 167  : }

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?get_smoke_type_by_name@@YGHPBD@Z ENDP			; get_smoke_type_by_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\string.h
;	COMDAT ?strchr@@YAPADQADH@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADQADH@Z PROC				; strchr, COMDAT

; 505  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 506  :         return const_cast<char*>(strchr(static_cast<char const*>(_String), _Ch));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Ch$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __String$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _strchr
  00016	83 c4 08	 add	 esp, 8

; 507  :     }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?strchr@@YAPADQADH@Z ENDP				; strchr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sscanf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT

; 2270 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2271 :         int _Result;
; 2272 :         va_list _ArgList;
; 2273 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 2274 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsscanf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 2275 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 2276 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 2277 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT

; 2175 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2176 :         return __stdio_common_vsscanf(

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  00020	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00023	51		 push	 ecx
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	52		 push	 edx
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsscanf
  0002d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2177 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 2178 :             _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 2179 :     }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 835  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Stream$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vfprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 840  :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 841  :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 842  :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	52		 push	 edx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  0002b	83 c4 18	 add	 esp, 24			; 00000018H

; 644  :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
