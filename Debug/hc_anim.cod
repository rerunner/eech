; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_fmodf
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z ; animate_helicopter_main_rotors
PUBLIC	?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z ; animate_damaged_helicopter_main_rotors
PUBLIC	?animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z ; animate_helicopter_virtual_cockpit_main_rotors
PUBLIC	?animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z ; animate_helicopter_tail_rotor
PUBLIC	?animate_helicopter_wipers@@YGXPAUENTITY@@@Z	; animate_helicopter_wipers
PUBLIC	?animate_helicopter_eo@@YGXPAUENTITY@@@Z	; animate_helicopter_eo
PUBLIC	?animate_helicopter_suspension@@YGXPAUENTITY@@@Z ; animate_helicopter_suspension
PUBLIC	?animate_helicopter_wheels@@YGXPAUENTITY@@@Z	; animate_helicopter_wheels
PUBLIC	?damage_helicopter_3d_object@@YGXPAUENTITY@@@Z	; damage_helicopter_3d_object
PUBLIC	?damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z ; damage_helicopter_main_rotors
PUBLIC	?damage_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@H@Z ; damage_helicopter_main_rotor_inst3d
PUBLIC	?damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z ; damage_helicopter_tail_rotors
PUBLIC	?create_main_rotor_fragments@@YGXPAUENTITY@@H@Z	; create_main_rotor_fragments
PUBLIC	?create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z	; create_tail_rotor_fragments
PUBLIC	?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z ; restore_helicopter_main_rotors
PUBLIC	?restore_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@@Z ; restore_helicopter_main_rotor_inst3d
PUBLIC	?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z ; restore_helicopter_tail_rotors
PUBLIC	?get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z ; get_helicopter_main_rotors_blurred
PUBLIC	?set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z ; set_rotation_angle_of_helicopter_main_rotors
PUBLIC	?get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z ; get_rotation_angle_of_helicopter_main_rotors
PUBLIC	?set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z ; set_rotation_angle_of_helicopter_tail_rotor
PUBLIC	?set_helicopter_id_number@@YGXPAUENTITY@@@Z	; set_helicopter_id_number
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA ; `animate_helicopter_main_rotors'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
PUBLIC	?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA ; `animate_damaged_helicopter_main_rotors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z@4JA ; `animate_helicopter_virtual_cockpit_main_rotors'::`1'::__LINE__Var
PUBLIC	??_C@_0CC@MKOBILCB@virtual_cockpit_main_rotor_inst@ ; `string'
PUBLIC	?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA ; `animate_helicopter_tail_rotor'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_helicopter_wipers@@YGXPAUENTITY@@@Z@4JA ; `animate_helicopter_wipers'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_helicopter_eo@@YGXPAUENTITY@@@Z@4JA ; `animate_helicopter_eo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_helicopter_suspension@@YGXPAUENTITY@@@Z@4JA ; `animate_helicopter_suspension'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_helicopter_wheels@@YGXPAUENTITY@@@Z@4JA ; `animate_helicopter_wheels'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??damage_helicopter_3d_object@@YGXPAUENTITY@@@Z@4JA ; `damage_helicopter_3d_object'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA ; `damage_helicopter_main_rotors'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@LCBACME@raw?9?$DOmain_rotor_damaged?5?$DN?$DN?5FALS@ ; `string'
PUBLIC	?__LINE__Var@?0??damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA ; `damage_helicopter_tail_rotors'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@IMACOALM@raw?9?$DOtail_rotor_damaged?5?$DN?$DN?5FALS@ ; `string'
PUBLIC	?__LINE__Var@?0??create_main_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA ; `create_main_rotor_fragments'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA ; `create_tail_rotor_fragments'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA ; `restore_helicopter_main_rotors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA ; `restore_helicopter_tail_rotors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z@4JA ; `get_helicopter_main_rotors_blurred'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA ; `set_rotation_angle_of_helicopter_main_rotors'::`1'::__LINE__Var
PUBLIC	??_C@_06DDNABPCD@inst3d@			; `string'
PUBLIC	?__LINE__Var@?0??get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z@4JA ; `get_rotation_angle_of_helicopter_main_rotors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA ; `set_rotation_angle_of_helicopter_tail_rotor'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_helicopter_id_number@@YGXPAUENTITY@@@Z@4JA ; `set_helicopter_id_number'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3c8efa35
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fa1111111111111
PUBLIC	__real@3fa47ae147ae147b
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fc921fb60000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@400921fb51000000
PUBLIC	__real@4039000000000000
PUBLIC	__real@403e000000000000
PUBLIC	__real@4051800000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@40c90fdb
PUBLIC	__real@40e00000
PUBLIC	__real@41200000
PUBLIC	__real@41300000
PUBLIC	__real@41700000
PUBLIC	__real@41a00000
PUBLIC	__real@41c80000
PUBLIC	__real@42c80000
PUBLIC	__real@43340000
PUBLIC	__real@c024000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_fmod:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z:PROC ; construct_3d_object
EXTRN	?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; destruct_3d_object
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z:PROC ; find_object_3d_sub_object_from_sub_object
EXTRN	?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z:PROC ; set_local_entity_id_number
EXTRN	?get_external_view_entity@@YGPAUENTITY@@XZ:PROC	; get_external_view_entity
EXTRN	?create_client_server_particle_entity@@YGPAUENTITY@@HPAUVEC3D@@MH@Z:PROC ; create_client_server_particle_entity
EXTRN	?animate_apache_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_apache_eo
EXTRN	?animate_comanche_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_comanche_eo
EXTRN	?animate_havoc_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_havoc_eo
EXTRN	?animate_hokum_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_hokum_eo
EXTRN	?animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_blackhawk_eo
EXTRN	?animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_hind_eo
EXTRN	?animate_ah64a_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_ah64a_eo
EXTRN	?animate_ka50_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_ka50_eo
EXTRN	?animate_viper_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_viper_eo
EXTRN	?animate_kiowa_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_kiowa_eo
EXTRN	?damage_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_virtual_cockpit_main_rotors
EXTRN	?restore_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_virtual_cockpit_main_rotors
EXTRN	?animate_apache_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_apache_external_wipers
EXTRN	?animate_havoc_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_havoc_external_wipers
EXTRN	?animate_hokum_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_hokum_wipers
EXTRN	?animate_blackhawk_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_blackhawk_external_wipers
EXTRN	?animate_hind_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_hind_external_wipers
EXTRN	?animate_ah64a_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_ah64a_external_wipers
EXTRN	?animate_ka50_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_ka50_wipers
EXTRN	?get_time_acceleration@@YGHXZ:PROC		; get_time_acceleration
EXTRN	?animate_hind_suspension@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_hind_suspension
EXTRN	?animate_apache_suspension@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; animate_apache_suspension
EXTRN	?rotate_helicopter_wheels@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; rotate_helicopter_wheels
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_dynamics_flight_model@@3HA:DWORD	; command_line_dynamics_flight_model
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?in_flight_articulation_test@@3HA:DWORD		; in_flight_articulation_test
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA DD 01H DUP (?) ; `animate_helicopter_main_rotors'::`15'::test_main_rotor_rpm
?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA DD 01H DUP (?) ; `animate_helicopter_tail_rotor'::`12'::test_tail_rotor_rpm
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c024000000000000
CONST	SEGMENT
__real@c024000000000000 DQ 0c024000000000000r	; -10
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41300000
CONST	SEGMENT
__real@41300000 DD 041300000r			; 11
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40e00000
CONST	SEGMENT
__real@40e00000 DD 040e00000r			; 7
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4051800000000000
CONST	SEGMENT
__real@4051800000000000 DQ 04051800000000000r	; 70
CONST	ENDS
;	COMDAT __real@403e000000000000
CONST	SEGMENT
__real@403e000000000000 DQ 0403e000000000000r	; 30
CONST	ENDS
;	COMDAT __real@4039000000000000
CONST	SEGMENT
__real@4039000000000000 DQ 04039000000000000r	; 25
CONST	ENDS
;	COMDAT __real@400921fb51000000
CONST	SEGMENT
__real@400921fb51000000 DQ 0400921fb51000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fc921fb60000000
CONST	SEGMENT
__real@3fc921fb60000000 DQ 03fc921fb60000000r	; 0.19635
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3fa47ae147ae147b
CONST	SEGMENT
__real@3fa47ae147ae147b DQ 03fa47ae147ae147br	; 0.04
CONST	ENDS
;	COMDAT __real@3fa1111111111111
CONST	SEGMENT
__real@3fa1111111111111 DQ 03fa1111111111111r	; 0.0333333
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_helicopter_id_number@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_helicopter_id_number@@YGXPAUENTITY@@@Z@4JA DD 088dH ; `set_helicopter_id_number'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA DD 084eH ; `set_rotation_angle_of_helicopter_tail_rotor'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z@4JA DD 0819H ; `get_rotation_angle_of_helicopter_main_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06DDNABPCD@inst3d@
CONST	SEGMENT
??_C@_06DDNABPCD@inst3d@ DB 'inst3d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA DD 07cdH ; `set_rotation_angle_of_helicopter_main_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z@4JA DD 07b6H ; `get_helicopter_main_rotors_blurred'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA DD 0764H ; `restore_helicopter_tail_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA DD 067dH ; `restore_helicopter_main_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA DD 0669H ; `create_tail_rotor_fragments'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??create_main_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_main_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA DD 0655H ; `create_main_rotor_fragments'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@IMACOALM@raw?9?$DOtail_rotor_damaged?5?$DN?$DN?5FALS@
CONST	SEGMENT
??_C@_0CB@IMACOALM@raw?9?$DOtail_rotor_damaged?5?$DN?$DN?5FALS@ DB 'raw->'
	DB	'tail_rotor_damaged == FALSE', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA DD 0601H ; `damage_helicopter_tail_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@LCBACME@raw?9?$DOmain_rotor_damaged?5?$DN?$DN?5FALS@
CONST	SEGMENT
??_C@_0CB@LCBACME@raw?9?$DOmain_rotor_damaged?5?$DN?$DN?5FALS@ DB 'raw->m'
	DB	'ain_rotor_damaged == FALSE', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA DD 0507H ; `damage_helicopter_main_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??damage_helicopter_3d_object@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_helicopter_3d_object@@YGXPAUENTITY@@@Z@4JA DD 04d4H ; `damage_helicopter_3d_object'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_helicopter_wheels@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_helicopter_wheels@@YGXPAUENTITY@@@Z@4JA DD 04b5H ; `animate_helicopter_wheels'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_helicopter_suspension@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_helicopter_suspension@@YGXPAUENTITY@@@Z@4JA DD 0485H ; `animate_helicopter_suspension'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_helicopter_eo@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_helicopter_eo@@YGXPAUENTITY@@@Z@4JA DD 042fH ; `animate_helicopter_eo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_helicopter_wipers@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_helicopter_wipers@@YGXPAUENTITY@@@Z@4JA DD 03e8H ; `animate_helicopter_wipers'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA DD 0327H ; `animate_helicopter_tail_rotor'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CC@MKOBILCB@virtual_cockpit_main_rotor_inst@
CONST	SEGMENT
??_C@_0CC@MKOBILCB@virtual_cockpit_main_rotor_inst@ DB 'virtual_cockpit_m'
	DB	'ain_rotor_inst3d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z@4JA DD 0303H ; `animate_helicopter_virtual_cockpit_main_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA DD 0224H ; `animate_damaged_helicopter_main_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_HELICOPTER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\helic'
	DB	'op\hc_anim.c', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?test_main_rotor_inc@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA DD 040000000r ; 2 ; `animate_helicopter_main_rotors'::`15'::test_main_rotor_inc
?test_tail_rotor_inc@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA DD 040000000r ; 2 ; `animate_helicopter_tail_rotor'::`12'::test_tail_rotor_inc
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA DD 059H ; `animate_helicopter_main_rotors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?set_helicopter_id_number@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?set_helicopter_id_number@@YGXPAUENTITY@@@Z PROC	; set_helicopter_id_number, COMDAT

; 2189 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2190 : 	helicopter
; 2191 : 		*raw;
; 2192 : 
; 2193 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_helico
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_helicopter_id_number@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_helico:

; 2194 : 
; 2195 : 	raw = (helicopter *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 2196 : 
; 2197 : 	if (raw->ac.mob.side == ENTITY_SIDE_BLUE_FORCE)

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00036	d1 e9		 shr	 ecx, 1
  00038	83 e1 03	 and	 ecx, 3
  0003b	83 f9 01	 cmp	 ecx, 1
  0003e	75 15		 jne	 SHORT $LN3@set_helico

; 2198 : 	{
; 2199 : 		set_local_entity_id_number

  00040	6a 04		 push	 4
  00042	6a 02		 push	 2
  00044	6a 03		 push	 3
  00046	6a 00		 push	 0
  00048	6a 01		 push	 1
  0004a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z ; set_local_entity_id_number
  00053	eb 29		 jmp	 SHORT $LN1@set_helico
$LN3@set_helico:

; 2200 : 		(
; 2201 : 			en,
; 2202 : 			TEXTURE_ANIMATION_INDEX_USA_COPTER_DIGIT__000,
; 2203 : 			TEXTURE_ANIMATION_INDEX_USA_COPTER_DIGIT__001,
; 2204 : 			TEXTURE_ANIMATION_INDEX_USA_COPTER_DIGIT__002,
; 2205 : 			TEXTURE_ANIMATION_INDEX_USA_COPTER_DIGIT__003,
; 2206 : 			TEXTURE_ANIMATION_INDEX_USA_COPTER_DIGIT__004
; 2207 : 		);
; 2208 : 	}
; 2209 : 	else if (raw->ac.mob.side == ENTITY_SIDE_RED_FORCE)

  00055	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00058	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0005b	d1 e9		 shr	 ecx, 1
  0005d	83 e1 03	 and	 ecx, 3
  00060	83 f9 02	 cmp	 ecx, 2
  00063	75 19		 jne	 SHORT $LN1@set_helico

; 2210 : 	{
; 2211 : 		set_local_entity_id_number

  00065	68 92 00 00 00	 push	 146			; 00000092H
  0006a	68 92 00 00 00	 push	 146			; 00000092H
  0006f	6a 07		 push	 7
  00071	6a 06		 push	 6
  00073	6a 05		 push	 5
  00075	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?set_local_entity_id_number@@YGXPAUENTITY@@W4TEXTURE_ANIMATION_INDICES@@1111@Z ; set_local_entity_id_number
$LN1@set_helico:

; 2212 : 		(
; 2213 : 			en,
; 2214 : 			TEXTURE_ANIMATION_INDEX_CIS_COPTER_DIGIT__000,
; 2215 : 			TEXTURE_ANIMATION_INDEX_CIS_COPTER_DIGIT__001,
; 2216 : 			TEXTURE_ANIMATION_INDEX_CIS_COPTER_DIGIT__002,
; 2217 : 			TEXTURE_ANIMATION_INDEX_LAST,
; 2218 : 			TEXTURE_ANIMATION_INDEX_LAST
; 2219 : 		);
; 2220 : 	}
; 2221 : }

  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?set_helicopter_id_number@@YGXPAUENTITY@@@Z ENDP	; set_helicopter_id_number
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z
_TEXT	SEGMENT
_depth$ = -60						; size = 4
_search$ = -56						; size = 56
_inst3d$ = 8						; size = 4
_theta$ = 12						; size = 4
?set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z PROC ; set_rotation_angle_of_helicopter_tail_rotor, COMDAT

; 2126 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2127 : 	object_3d_sub_object_search_data
; 2128 : 		search;
; 2129 : 
; 2130 : 	int
; 2131 : 		depth;
; 2132 : 
; 2133 : 	ASSERT (inst3d);

  00009	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@set_rotati
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@set_rotati:

; 2134 : 
; 2135 : 	//
; 2136 : 	// set static tail rotor rotation angle
; 2137 : 	//
; 2138 : 
; 2139 : 	depth = 0;

  00027	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN2@set_rotati:

; 2140 : 
; 2141 : 	while (TRUE)

  0002e	b8 01 00 00 00	 mov	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 5c		 je	 SHORT $LN3@set_rotati

; 2142 : 	{
; 2143 : 		search.search_depth = depth;

  00037	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  0003a	89 45 d0	 mov	 DWORD PTR _search$[ebp+8], eax

; 2144 : 		search.search_object = inst3d;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00040	89 45 c8	 mov	 DWORD PTR _search$[ebp], eax

; 2145 : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_STATIC;

  00043	c7 45 d4 13 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 19 ; 00000013H

; 2146 : 
; 2147 : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0004a	8d 45 c8	 lea	 eax, DWORD PTR _search$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00053	83 f8 01	 cmp	 eax, 1
  00056	75 2e		 jne	 SHORT $LN7@set_rotati

; 2148 : 		{
; 2149 : 			search.result_sub_object->relative_pitch = wrap_angle (search.result_sub_object->relative_pitch + theta);

  00058	51		 push	 ecx
  00059	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  00061	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00066	8b 45 cc	 mov	 eax, DWORD PTR _search$[ebp+4]
  00069	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0006e	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _theta$[ebp]
  00073	51		 push	 ecx
  00074	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00079	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  0007e	8b 4d cc	 mov	 ecx, DWORD PTR _search$[ebp+4]
  00081	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 2150 : 		}
; 2151 : 		else

  00084	eb 02		 jmp	 SHORT $LN8@set_rotati
$LN7@set_rotati:

; 2152 : 		{
; 2153 : 			break;

  00086	eb 0b		 jmp	 SHORT $LN3@set_rotati
$LN8@set_rotati:

; 2154 : 		}
; 2155 : 
; 2156 : 		depth++;

  00088	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  0008b	83 c0 01	 add	 eax, 1
  0008e	89 45 c4	 mov	 DWORD PTR _depth$[ebp], eax

; 2157 : 	}

  00091	eb 9b		 jmp	 SHORT $LN2@set_rotati
$LN3@set_rotati:

; 2158 : 
; 2159 : 	//
; 2160 : 	// set moving tail rotor rotation angle
; 2161 : 	//
; 2162 : 
; 2163 : 	depth = 0;

  00093	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN4@set_rotati:

; 2164 : 
; 2165 : 	while (TRUE)

  0009a	b8 01 00 00 00	 mov	 eax, 1
  0009f	85 c0		 test	 eax, eax
  000a1	74 5c		 je	 SHORT $LN5@set_rotati

; 2166 : 	{
; 2167 : 		search.search_depth = depth;

  000a3	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  000a6	89 45 d0	 mov	 DWORD PTR _search$[ebp+8], eax

; 2168 : 		search.search_object = inst3d;

  000a9	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000ac	89 45 c8	 mov	 DWORD PTR _search$[ebp], eax

; 2169 : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_MOVING;

  000af	c7 45 d4 14 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 20 ; 00000014H

; 2170 : 
; 2171 : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000b6	8d 45 c8	 lea	 eax, DWORD PTR _search$[ebp]
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  000bf	83 f8 01	 cmp	 eax, 1
  000c2	75 2e		 jne	 SHORT $LN9@set_rotati

; 2172 : 		{
; 2173 : 			search.result_sub_object->relative_pitch = wrap_angle (search.result_sub_object->relative_pitch + theta);

  000c4	51		 push	 ecx
  000c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	8b 45 cc	 mov	 eax, DWORD PTR _search$[ebp+4]
  000d5	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  000da	f3 0f 58 45 0c	 addss	 xmm0, DWORD PTR _theta$[ebp]
  000df	51		 push	 ecx
  000e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e5	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  000ea	8b 4d cc	 mov	 ecx, DWORD PTR _search$[ebp+4]
  000ed	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 2174 : 		}
; 2175 : 		else

  000f0	eb 02		 jmp	 SHORT $LN10@set_rotati
$LN9@set_rotati:

; 2176 : 		{
; 2177 : 			break;

  000f2	eb 0b		 jmp	 SHORT $LN5@set_rotati
$LN10@set_rotati:

; 2178 : 		}
; 2179 : 
; 2180 : 		depth++;

  000f4	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  000f7	83 c0 01	 add	 eax, 1
  000fa	89 45 c4	 mov	 DWORD PTR _depth$[ebp], eax

; 2181 : 	}

  000fd	eb 9b		 jmp	 SHORT $LN4@set_rotati
$LN5@set_rotati:

; 2182 : }

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 08 00	 ret	 8
?set_rotation_angle_of_helicopter_tail_rotor@@YGXPAUOBJECT_3D_INSTANCE@@M@Z ENDP ; set_rotation_angle_of_helicopter_tail_rotor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z
_TEXT	SEGMENT
tv94 = -236						; size = 4
_search_main_rotor_heading_null$ = -168			; size = 56
_search_main_rotor_pitch_bank_null$ = -112		; size = 56
_search_main_rotor_shaft$ = -56				; size = 56
_inst3d$ = 8						; size = 4
?get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z PROC ; get_rotation_angle_of_helicopter_main_rotors, COMDAT

; 2073 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2074 : 	object_3d_sub_object_search_data
; 2075 : 		search_main_rotor_shaft,
; 2076 : 		search_main_rotor_pitch_bank_null,
; 2077 : 		search_main_rotor_heading_null;
; 2078 : 
; 2079 : 	ASSERT (inst3d);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@get_rotati
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z@4JA
  00017	83 c0 06	 add	 eax, 6
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_rotati:

; 2080 : 
; 2081 : 	//
; 2082 : 	// locate rotor shaft
; 2083 : 	//
; 2084 : 
; 2085 : 	search_main_rotor_shaft.search_depth = 0;

  0002a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+8], 0

; 2086 : 	search_main_rotor_shaft.search_object = inst3d;

  00031	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00034	89 45 c8	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp], eax

; 2087 : 	search_main_rotor_shaft.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_SHAFT;

  00037	c7 45 d4 02 00
	00 00		 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+12], 2

; 2088 : 
; 2089 : 	if (find_object_3d_sub_object (&search_main_rotor_shaft) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0003e	8d 45 c8	 lea	 eax, DWORD PTR _search_main_rotor_shaft$[ebp]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00047	83 f8 01	 cmp	 eax, 1
  0004a	75 64		 jne	 SHORT $LN5@get_rotati

; 2090 : 	{
; 2091 : 		//
; 2092 : 		// locate pitch and bank null
; 2093 : 		//
; 2094 : 
; 2095 : 		search_main_rotor_pitch_bank_null.search_depth = 0;

  0004c	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+8], 0

; 2096 : 		search_main_rotor_pitch_bank_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_PITCH_BANK_NULL;

  00053	c7 45 9c 17 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+12], 23 ; 00000017H

; 2097 : 
; 2098 : 		if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_pitch_bank_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0005a	8d 45 90	 lea	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  0005d	50		 push	 eax
  0005e	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00067	83 f8 01	 cmp	 eax, 1
  0006a	75 44		 jne	 SHORT $LN5@get_rotati

; 2099 : 		{
; 2100 : 			//
; 2101 : 			// locate heading null
; 2102 : 			//
; 2103 : 
; 2104 : 			search_main_rotor_heading_null.search_depth = 0;

  0006c	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+8], 0

; 2105 : 			search_main_rotor_heading_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HEADING_NULL;

  00076	c7 85 64 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+12], 24 ; 00000018H

; 2106 : 
; 2107 : 			if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_pitch_bank_null, &search_main_rotor_heading_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00080	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00086	50		 push	 eax
  00087	8d 4d 90	 lea	 ecx, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00090	83 f8 01	 cmp	 eax, 1
  00093	75 1b		 jne	 SHORT $LN5@get_rotati

; 2108 : 			{
; 2109 : 				//
; 2110 : 				// get heading
; 2111 : 				//
; 2112 : 
; 2113 : 				return (search_main_rotor_heading_null.result_sub_object->relative_heading);

  00095	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  0009b	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  000a0	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR tv94[ebp], xmm0
  000a8	d9 85 14 ff ff
	ff		 fld	 DWORD PTR tv94[ebp]
  000ae	eb 02		 jmp	 SHORT $LN1@get_rotati
$LN5@get_rotati:

; 2114 : 			}
; 2115 : 		}
; 2116 : 	}
; 2117 : 
; 2118 : 	return (0.0);

  000b0	d9 ee		 fldz
$LN1@get_rotati:

; 2119 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?get_rotation_angle_of_helicopter_main_rotors@@YGMPAUOBJECT_3D_INSTANCE@@@Z ENDP ; get_rotation_angle_of_helicopter_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z
_TEXT	SEGMENT
_main_rotor_direction$ = -176				; size = 4
_search_main_rotor_shaft_depth$ = -172			; size = 4
_search_main_rotor_heading_null$ = -168			; size = 56
_search_main_rotor_pitch_bank_null$ = -112		; size = 56
_search_main_rotor_shaft$ = -56				; size = 56
_inst3d$ = 8						; size = 4
_theta$ = 12						; size = 4
?set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z PROC ; set_rotation_angle_of_helicopter_main_rotors, COMDAT

; 1997 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1998 : 	object_3d_sub_object_search_data
; 1999 : 		search_main_rotor_shaft,
; 2000 : 		search_main_rotor_pitch_bank_null,
; 2001 : 		search_main_rotor_heading_null;
; 2002 : 
; 2003 : 	int
; 2004 : 		search_main_rotor_shaft_depth;
; 2005 : 
; 2006 : 	float
; 2007 : 		main_rotor_direction;
; 2008 : 
; 2009 : 	ASSERT (inst3d);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@set_rotati
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z@4JA
  00017	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_rotati:

; 2010 : 
; 2011 : 	//
; 2012 : 	// do not need to use the true main rotor direction (wrt helicopter type)
; 2013 : 	//
; 2014 : 
; 2015 : 	main_rotor_direction = 1.0;

  0002a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00032	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _main_rotor_direction$[ebp], xmm0

; 2016 : 
; 2017 : 	//
; 2018 : 	// locate rotor shaft
; 2019 : 	//
; 2020 : 
; 2021 : 	search_main_rotor_shaft_depth = 0;

  0003a	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], 0
$LN2@set_rotati:

; 2022 : 
; 2023 : 	while (TRUE)

  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	85 c0		 test	 eax, eax
  0004b	0f 84 cb 00 00
	00		 je	 $LN3@set_rotati

; 2024 : 	{
; 2025 : 		search_main_rotor_shaft.search_depth = search_main_rotor_shaft_depth;

  00051	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  00057	89 45 d0	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+8], eax

; 2026 : 		search_main_rotor_shaft.search_object = inst3d;

  0005a	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0005d	89 45 c8	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp], eax

; 2027 : 		search_main_rotor_shaft.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_SHAFT;

  00060	c7 45 d4 02 00
	00 00		 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+12], 2

; 2028 : 
; 2029 : 		if (find_object_3d_sub_object (&search_main_rotor_shaft) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00067	8d 45 c8	 lea	 eax, DWORD PTR _search_main_rotor_shaft$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00070	83 f8 01	 cmp	 eax, 1
  00073	75 7a		 jne	 SHORT $LN5@set_rotati

; 2030 : 		{
; 2031 : 			//
; 2032 : 			// locate pitch and bank null
; 2033 : 			//
; 2034 : 
; 2035 : 			search_main_rotor_pitch_bank_null.search_depth = 0;

  00075	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+8], 0

; 2036 : 			search_main_rotor_pitch_bank_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_PITCH_BANK_NULL;

  0007c	c7 45 9c 17 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+12], 23 ; 00000017H

; 2037 : 
; 2038 : 			if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_pitch_bank_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00083	8d 45 90	 lea	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  00086	50		 push	 eax
  00087	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00090	83 f8 01	 cmp	 eax, 1
  00093	75 58		 jne	 SHORT $LN8@set_rotati

; 2039 : 			{
; 2040 : 				//
; 2041 : 				// locate heading null
; 2042 : 				//
; 2043 : 
; 2044 : 				search_main_rotor_heading_null.search_depth = 0;

  00095	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+8], 0

; 2045 : 				search_main_rotor_heading_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HEADING_NULL;

  0009f	c7 85 64 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+12], 24 ; 00000018H

; 2046 : 
; 2047 : 				if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_pitch_bank_null, &search_main_rotor_heading_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000a9	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp]
  000af	50		 push	 eax
  000b0	8d 4d 90	 lea	 ecx, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  000b3	51		 push	 ecx
  000b4	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  000b9	83 f8 01	 cmp	 eax, 1
  000bc	75 2f		 jne	 SHORT $LN8@set_rotati

; 2048 : 				{
; 2049 : 					//
; 2050 : 					// set heading
; 2051 : 					//
; 2052 : 
; 2053 : 					search_main_rotor_heading_null.result_sub_object->relative_heading = wrap_angle (theta * main_rotor_direction);

  000be	51		 push	 ecx
  000bf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  000c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cc	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _theta$[ebp]
  000d1	f3 0f 59 85 50
	ff ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_direction$[ebp]
  000d9	51		 push	 ecx
  000da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000df	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  000e4	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  000ea	d9 58 18	 fstp	 DWORD PTR [eax+24]
$LN8@set_rotati:

; 2054 : 				}
; 2055 : 			}
; 2056 : 		}
; 2057 : 		else

  000ed	eb 02		 jmp	 SHORT $LN6@set_rotati
$LN5@set_rotati:

; 2058 : 		{
; 2059 : 			break;

  000ef	eb 2b		 jmp	 SHORT $LN3@set_rotati
$LN6@set_rotati:

; 2060 : 		}
; 2061 : 
; 2062 : 		main_rotor_direction = -main_rotor_direction;

  000f1	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _main_rotor_direction$[ebp]
  000f9	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00100	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _main_rotor_direction$[ebp], xmm0

; 2063 : 
; 2064 : 		search_main_rotor_shaft_depth++;

  00108	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  0010e	83 c0 01	 add	 eax, 1
  00111	89 85 54 ff ff
	ff		 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], eax

; 2065 : 	}

  00117	e9 28 ff ff ff	 jmp	 $LN2@set_rotati
$LN3@set_rotati:

; 2066 : }

  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 08 00	 ret	 8
?set_rotation_angle_of_helicopter_main_rotors@@YGXPAUOBJECT_3D_INSTANCE@@M@Z ENDP ; set_rotation_angle_of_helicopter_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv134 = -76						; size = 4
tv81 = -76						; size = 4
tv142 = -72						; size = 4
tv94 = -72						; size = 4
tv74 = -72						; size = 4
_main_rotor_rpm$ = -4					; size = 4
_en$ = 8						; size = 4
?get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z PROC ; get_helicopter_main_rotors_blurred, COMDAT

; 1974 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1975 : 	float
; 1976 : 		main_rotor_rpm;
; 1977 : 
; 1978 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_helico
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_helico:

; 1979 : 
; 1980 : 	if (get_local_entity_int_value (en, INT_TYPE_ALIVE) == FALSE)

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN6@get_helico
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN7@get_helico
$LN6@get_helico:
  00037	68 bc 07 00 00	 push	 1980			; 000007bcH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@get_helico:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN8@get_helico
  0005d	c7 45 b4 07 00
	00 00		 mov	 DWORD PTR tv81[ebp], 7
  00064	eb 1d		 jmp	 SHORT $LN9@get_helico
$LN8@get_helico:
  00066	68 bc 07 00 00	 push	 1980			; 000007bcH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN9@get_helico:
  00083	6a 07		 push	 7
  00085	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00088	52		 push	 edx
  00089	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	85 c0		 test	 eax, eax
  0009e	75 0c		 jne	 SHORT $LN3@get_helico

; 1981 : 	{
; 1982 : 		return FALSE;

  000a0	33 c0		 xor	 eax, eax
  000a2	e9 a7 00 00 00	 jmp	 $LN4@get_helico

; 1983 : 	}
; 1984 : 	else

  000a7	e9 a2 00 00 00	 jmp	 $LN4@get_helico
$LN3@get_helico:

; 1985 : 	{
; 1986 : 		main_rotor_rpm = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_RPM);

  000ac	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b0	74 0a		 je	 SHORT $LN10@get_helico
  000b2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	89 4d b8	 mov	 DWORD PTR tv94[ebp], ecx
  000ba	eb 21		 jmp	 SHORT $LN11@get_helico
$LN10@get_helico:
  000bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z@4JA
  000c2	83 c2 0c	 add	 edx, 12			; 0000000cH
  000c5	52		 push	 edx
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d6	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN11@get_helico:
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	85 c9		 test	 ecx, ecx
  000e4	74 09		 je	 SHORT $LN12@get_helico
  000e6	c7 45 b4 48 00
	00 00		 mov	 DWORD PTR tv134[ebp], 72 ; 00000048H
  000ed	eb 21		 jmp	 SHORT $LN13@get_helico
$LN12@get_helico:
  000ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z@4JA
  000f5	83 c2 0c	 add	 edx, 12			; 0000000cH
  000f8	52		 push	 edx
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00109	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN13@get_helico:
  00110	6a 48		 push	 72			; 00000048H
  00112	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00115	51		 push	 ecx
  00116	69 55 b8 bc 02
	00 00		 imul	 edx, DWORD PTR tv94[ebp], 700
  0011d	8b 45 b4	 mov	 eax, DWORD PTR tv134[ebp]
  00120	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00127	ff d1		 call	 ecx
  00129	d9 5d fc	 fstp	 DWORD PTR _main_rotor_rpm$[ebp]

; 1987 : 
; 1988 : 		return (main_rotor_rpm >= MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD);

  0012c	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00131	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@403e000000000000
  00139	72 09		 jb	 SHORT $LN14@get_helico
  0013b	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv142[ebp], 1
  00142	eb 07		 jmp	 SHORT $LN15@get_helico
$LN14@get_helico:
  00144	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN15@get_helico:
  0014b	8b 45 b8	 mov	 eax, DWORD PTR tv142[ebp]
$LN4@get_helico:

; 1989 : 	}
; 1990 : }

  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	5b		 pop	 ebx
  00151	8b e5		 mov	 esp, ebp
  00153	5d		 pop	 ebp
  00154	c2 04 00	 ret	 4
?get_helicopter_main_rotors_blurred@@YGHPAUENTITY@@@Z ENDP ; get_helicopter_main_rotors_blurred
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv75 = -136						; size = 4
_depth$ = -68						; size = 4
_search$ = -64						; size = 56
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z PROC	; restore_helicopter_tail_rotors, COMDAT

; 1892 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1893 : 	helicopter
; 1894 : 		*raw;
; 1895 : 
; 1896 : 	object_3d_instance
; 1897 : 		*inst3d;
; 1898 : 
; 1899 : 	object_3d_sub_object_search_data
; 1900 : 		search;
; 1901 : 
; 1902 : 	int
; 1903 : 		depth;
; 1904 : 
; 1905 : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@restore_he
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
  00017	83 c0 0d	 add	 eax, 13			; 0000000dH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@restore_he:

; 1906 : 
; 1907 : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN14@restore_he
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN15@restore_he
$LN14@restore_he:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
  00043	83 c2 0f	 add	 edx, 15			; 0000000fH
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN15@restore_he:
  00061	83 bd 78 ff ff
	ff 0e		 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  00068	74 18		 je	 SHORT $LN7@restore_he
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
  0006f	83 c0 0f	 add	 eax, 15			; 0000000fH
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@restore_he:

; 1908 : 
; 1909 : 	raw = (helicopter *) get_local_entity_data (en);

  00082	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00085	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00088	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1910 : 
; 1911 : 	if (!raw->tail_rotor_damaged)

  0008b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008e	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00094	c1 e9 04	 shr	 ecx, 4
  00097	83 e1 01	 and	 ecx, 1
  0009a	75 07		 jne	 SHORT $LN8@restore_he

; 1912 : 	{
; 1913 : 		return FALSE;

  0009c	33 c0		 xor	 eax, eax
  0009e	e9 af 00 00 00	 jmp	 $LN1@restore_he
$LN8@restore_he:

; 1914 : 	}
; 1915 : 
; 1916 : 	inst3d = raw->ac.inst3d;

  000a3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a6	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000ac	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 1917 : 
; 1918 : 	//
; 1919 : 	// disable moving tail rotor
; 1920 : 	//
; 1921 : 
; 1922 : 	depth = 0;

  000af	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN2@restore_he:

; 1923 : 
; 1924 : 	while (TRUE)

  000b6	b8 01 00 00 00	 mov	 eax, 1
  000bb	85 c0		 test	 eax, eax
  000bd	74 3f		 je	 SHORT $LN3@restore_he

; 1925 : 	{
; 1926 : 		search.search_depth = depth;

  000bf	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  000c2	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 1927 : 		search.search_object = inst3d;

  000c5	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000c8	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 1928 : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_MOVING;

  000cb	c7 45 cc 14 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 20 ; 00000014H

; 1929 : 
; 1930 : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000d2	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  000db	83 f8 01	 cmp	 eax, 1
  000de	75 11		 jne	 SHORT $LN9@restore_he

; 1931 : 		{
; 1932 : 			search.result_sub_object->visible_object = FALSE;

  000e0	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  000e3	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e6	83 e1 fe	 and	 ecx, -2			; fffffffeH
  000e9	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  000ec	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1933 : 		}
; 1934 : 		else

  000ef	eb 02		 jmp	 SHORT $LN10@restore_he
$LN9@restore_he:

; 1935 : 		{
; 1936 : 			break;

  000f1	eb 0b		 jmp	 SHORT $LN3@restore_he
$LN10@restore_he:

; 1937 : 		}
; 1938 : 
; 1939 : 		depth++;

  000f3	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  000f6	83 c0 01	 add	 eax, 1
  000f9	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 1940 : 	}

  000fc	eb b8		 jmp	 SHORT $LN2@restore_he
$LN3@restore_he:

; 1941 : 
; 1942 : 	//
; 1943 : 	// enable static tail rotor
; 1944 : 	//
; 1945 : 
; 1946 : 	depth = 0;

  000fe	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN4@restore_he:

; 1947 : 
; 1948 : 	while (TRUE)

  00105	b8 01 00 00 00	 mov	 eax, 1
  0010a	85 c0		 test	 eax, eax
  0010c	74 3f		 je	 SHORT $LN5@restore_he

; 1949 : 	{
; 1950 : 		search.search_depth = depth;

  0010e	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  00111	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 1951 : 		search.search_object = inst3d;

  00114	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00117	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 1952 : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_STATIC;

  0011a	c7 45 cc 13 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 19 ; 00000013H

; 1953 : 
; 1954 : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00121	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0012a	83 f8 01	 cmp	 eax, 1
  0012d	75 11		 jne	 SHORT $LN11@restore_he

; 1955 : 		{
; 1956 : 			search.result_sub_object->visible_object = TRUE;

  0012f	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  00132	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00135	83 c9 01	 or	 ecx, 1
  00138	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  0013b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1957 : 		}
; 1958 : 		else

  0013e	eb 02		 jmp	 SHORT $LN12@restore_he
$LN11@restore_he:

; 1959 : 		{
; 1960 : 			break;

  00140	eb 0b		 jmp	 SHORT $LN5@restore_he
$LN12@restore_he:

; 1961 : 		}
; 1962 : 
; 1963 : 		depth++;

  00142	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  00145	83 c0 01	 add	 eax, 1
  00148	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 1964 : 	}

  0014b	eb b8		 jmp	 SHORT $LN4@restore_he
$LN5@restore_he:

; 1965 : 
; 1966 : 	return TRUE;

  0014d	b8 01 00 00 00	 mov	 eax, 1
$LN1@restore_he:

; 1967 : }

  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 04 00	 ret	 4
?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z ENDP	; restore_helicopter_tail_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?restore_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@@Z
_TEXT	SEGMENT
_search_main_rotor_blade_moving_depth$ = -408		; size = 4
_search_main_rotor_blade_section_static_depth$ = -404	; size = 4
_search_main_rotor_blade_root_static_depth$ = -400	; size = 4
_search_main_rotor_shaft_depth$ = -396			; size = 4
_search_main_rotor_hub$ = -392				; size = 56
_search_main_rotor_blade_moving$ = -336			; size = 56
_search_main_rotor_blade_section_static$ = -280		; size = 56
_search_main_rotor_blade_root_static$ = -224		; size = 56
_search_main_rotor_heading_null$ = -168			; size = 56
_search_main_rotor_pitch_bank_null$ = -112		; size = 56
_search_main_rotor_shaft$ = -56				; size = 56
_inst3d$ = 8						; size = 4
?restore_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@@Z PROC ; restore_helicopter_main_rotor_inst3d, COMDAT

; 1706 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 01 00
	00		 sub	 esp, 472		; 000001d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1707 : 	object_3d_sub_object_search_data
; 1708 : 		search_main_rotor_shaft,
; 1709 : 		search_main_rotor_pitch_bank_null,
; 1710 : 		search_main_rotor_heading_null,
; 1711 : 		search_main_rotor_blade_root_static,
; 1712 : 		search_main_rotor_blade_section_static,
; 1713 : 		search_main_rotor_blade_moving,
; 1714 : 		search_main_rotor_hub;
; 1715 : 
; 1716 : 	int
; 1717 : 		search_main_rotor_shaft_depth,
; 1718 : 		search_main_rotor_blade_root_static_depth,
; 1719 : 		search_main_rotor_blade_section_static_depth,
; 1720 : 		search_main_rotor_blade_moving_depth;
; 1721 : 
; 1722 : 	if (!inst3d)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00010	75 07		 jne	 SHORT $LN12@restore_he

; 1723 : 	{
; 1724 : 		return 0;

  00012	33 c0		 xor	 eax, eax
  00014	e9 d2 02 00 00	 jmp	 $LN1@restore_he
$LN12@restore_he:

; 1725 : 	}
; 1726 : 
; 1727 : 	//
; 1728 : 	// locate rotor shaft
; 1729 : 	//
; 1730 : 
; 1731 : 	search_main_rotor_shaft_depth = 0;

  00019	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], 0
$LN2@restore_he:

; 1732 : 
; 1733 : 	while (TRUE)

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	85 c0		 test	 eax, eax
  0002a	0f 84 b6 02 00
	00		 je	 $LN3@restore_he

; 1734 : 	{
; 1735 : 		search_main_rotor_shaft.search_depth = search_main_rotor_shaft_depth;

  00030	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  00036	89 45 d0	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+8], eax

; 1736 : 		search_main_rotor_shaft.search_object = inst3d;

  00039	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0003c	89 45 c8	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp], eax

; 1737 : 		search_main_rotor_shaft.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_SHAFT;

  0003f	c7 45 d4 02 00
	00 00		 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+12], 2

; 1738 : 
; 1739 : 		if (find_object_3d_sub_object (&search_main_rotor_shaft) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00046	8d 45 c8	 lea	 eax, DWORD PTR _search_main_rotor_shaft$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0004f	83 f8 01	 cmp	 eax, 1
  00052	0f 85 78 02 00
	00		 jne	 $LN13@restore_he

; 1740 : 		{
; 1741 : 			//
; 1742 : 			// locate pitch and bank null
; 1743 : 			//
; 1744 : 
; 1745 : 			search_main_rotor_pitch_bank_null.search_depth = 0;

  00058	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+8], 0

; 1746 : 			search_main_rotor_pitch_bank_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_PITCH_BANK_NULL;

  0005f	c7 45 9c 17 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+12], 23 ; 00000017H

; 1747 : 
; 1748 : 			if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_pitch_bank_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00066	8d 45 90	 lea	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00073	83 f8 01	 cmp	 eax, 1
  00076	0f 85 52 02 00
	00		 jne	 $LN15@restore_he

; 1749 : 			{
; 1750 : 				//
; 1751 : 				// locate heading null
; 1752 : 				//
; 1753 : 
; 1754 : 				search_main_rotor_heading_null.search_depth = 0;

  0007c	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+8], 0

; 1755 : 				search_main_rotor_heading_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HEADING_NULL;

  00086	c7 85 64 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+12], 24 ; 00000018H

; 1756 : 
; 1757 : 				if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_pitch_bank_null, &search_main_rotor_heading_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00090	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00096	50		 push	 eax
  00097	8d 4d 90	 lea	 ecx, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  000a0	83 f8 01	 cmp	 eax, 1
  000a3	0f 85 25 02 00
	00		 jne	 $LN15@restore_he

; 1758 : 				{
; 1759 : 					//
; 1760 : 					// disable moving blades
; 1761 : 					//
; 1762 : 
; 1763 : 					search_main_rotor_blade_moving_depth = 0;

  000a9	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], 0
$LN4@restore_he:

; 1764 : 
; 1765 : 					while (TRUE)

  000b3	b8 01 00 00 00	 mov	 eax, 1
  000b8	85 c0		 test	 eax, eax
  000ba	74 58		 je	 SHORT $LN5@restore_he

; 1766 : 					{
; 1767 : 						search_main_rotor_blade_moving.search_depth = search_main_rotor_blade_moving_depth;

  000bc	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  000c2	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+8], eax

; 1768 : 						search_main_rotor_blade_moving.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_MOVING;

  000c8	c7 85 bc fe ff
	ff 19 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+12], 25 ; 00000019H

; 1769 : 
; 1770 : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_moving) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000d2	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp]
  000d8	50		 push	 eax
  000d9	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  000e5	83 f8 01	 cmp	 eax, 1
  000e8	75 17		 jne	 SHORT $LN17@restore_he

; 1771 : 						{
; 1772 : 							search_main_rotor_blade_moving.result_sub_object->visible_object = FALSE;

  000ea	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  000f0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f3	83 e1 fe	 and	 ecx, -2			; fffffffeH
  000f6	8b 95 b4 fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  000fc	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1773 : 						}
; 1774 : 						else

  000ff	eb 02		 jmp	 SHORT $LN18@restore_he
$LN17@restore_he:

; 1775 : 						{
; 1776 : 							break;

  00101	eb 11		 jmp	 SHORT $LN5@restore_he
$LN18@restore_he:

; 1777 : 						}
; 1778 : 
; 1779 : 						search_main_rotor_blade_moving_depth++;

  00103	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  00109	83 c0 01	 add	 eax, 1
  0010c	89 85 68 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], eax

; 1780 : 					}

  00112	eb 9f		 jmp	 SHORT $LN4@restore_he
$LN5@restore_he:

; 1781 : 
; 1782 : 					//
; 1783 : 					// enable static blade roots
; 1784 : 					//
; 1785 : 
; 1786 : 					search_main_rotor_blade_root_static_depth = 0;

  00114	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], 0
$LN6@restore_he:

; 1787 : 
; 1788 : 					while (TRUE)

  0011e	b8 01 00 00 00	 mov	 eax, 1
  00123	85 c0		 test	 eax, eax
  00125	0f 84 27 01 00
	00		 je	 $LN7@restore_he

; 1789 : 					{
; 1790 : 						search_main_rotor_blade_root_static.search_depth = search_main_rotor_blade_root_static_depth;

  0012b	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  00131	89 85 28 ff ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+8], eax

; 1791 : 						search_main_rotor_blade_root_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_ROOT_STATIC;

  00137	c7 85 2c ff ff
	ff 1a 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+12], 26 ; 0000001aH

; 1792 : 
; 1793 : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_root_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00141	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00147	50		 push	 eax
  00148	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  0014e	51		 push	 ecx
  0014f	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00154	83 f8 01	 cmp	 eax, 1
  00157	0f 85 df 00 00
	00		 jne	 $LN19@restore_he

; 1794 : 						{
; 1795 : 							search_main_rotor_blade_root_static.result_sub_object->visible_object = TRUE;

  0015d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00163	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00166	83 c9 01	 or	 ecx, 1
  00169	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  0016f	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1796 : 
; 1797 : 							//
; 1798 : 							// locate static blade sections
; 1799 : 							//
; 1800 : 
; 1801 : 							search_main_rotor_blade_section_static_depth = 0;

  00172	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
$LN8@restore_he:

; 1802 : 
; 1803 : 							while (TRUE)

  0017c	b8 01 00 00 00	 mov	 eax, 1
  00181	85 c0		 test	 eax, eax
  00183	74 41		 je	 SHORT $LN9@restore_he

; 1804 : 							{
; 1805 : 								search_main_rotor_blade_section_static.search_depth = search_main_rotor_blade_section_static_depth;

  00185	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  0018b	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+8], eax

; 1806 : 								search_main_rotor_blade_section_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_SECTION_STATIC;

  00191	c7 85 f4 fe ff
	ff 1b 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+12], 27 ; 0000001bH

; 1807 : 
; 1808 : 								search_main_rotor_blade_section_static_depth++;

  0019b	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  001a1	83 c0 01	 add	 eax, 1
  001a4	89 85 6c fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], eax

; 1809 : 
; 1810 : 								if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_blade_root_static, &search_main_rotor_blade_section_static) != SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  001aa	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp]
  001b0	50		 push	 eax
  001b1	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  001bd	83 f8 01	 cmp	 eax, 1
  001c0	74 02		 je	 SHORT $LN21@restore_he

; 1811 : 								{
; 1812 : 									break;

  001c2	eb 02		 jmp	 SHORT $LN9@restore_he
$LN21@restore_he:

; 1813 : 								}
; 1814 : 							}

  001c4	eb b6		 jmp	 SHORT $LN8@restore_he
$LN9@restore_he:

; 1815 : 
; 1816 : 							//
; 1817 : 							// cut off static blade sections
; 1818 : 							//
; 1819 : 
; 1820 : 							if (search_main_rotor_blade_section_static_depth > 0)

  001c6	83 bd 6c fe ff
	ff 00		 cmp	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
  001cd	7e 6b		 jle	 SHORT $LN22@restore_he

; 1821 : 							{
; 1822 : 								search_main_rotor_blade_section_static_depth = 0;

  001cf	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
$LN10@restore_he:

; 1823 : 
; 1824 : 								while (TRUE)

  001d9	b8 01 00 00 00	 mov	 eax, 1
  001de	85 c0		 test	 eax, eax
  001e0	74 58		 je	 SHORT $LN22@restore_he

; 1825 : 								{
; 1826 : 									search_main_rotor_blade_section_static.search_depth = search_main_rotor_blade_section_static_depth;

  001e2	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  001e8	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+8], eax

; 1827 : 									search_main_rotor_blade_section_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_SECTION_STATIC;

  001ee	c7 85 f4 fe ff
	ff 1b 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+12], 27 ; 0000001bH

; 1828 : 
; 1829 : 									if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_blade_root_static, &search_main_rotor_blade_section_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  001f8	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp]
  001fe	50		 push	 eax
  001ff	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00205	51		 push	 ecx
  00206	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  0020b	83 f8 01	 cmp	 eax, 1
  0020e	75 17		 jne	 SHORT $LN23@restore_he

; 1830 : 									{
; 1831 : 										search_main_rotor_blade_section_static.result_sub_object->visible_object = TRUE;

  00210	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp+4]
  00216	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00219	83 c9 01	 or	 ecx, 1
  0021c	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_section_static$[ebp+4]
  00222	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1832 : 									}
; 1833 : 									else

  00225	eb 02		 jmp	 SHORT $LN24@restore_he
$LN23@restore_he:

; 1834 : 									{
; 1835 : 										break;

  00227	eb 11		 jmp	 SHORT $LN22@restore_he
$LN24@restore_he:

; 1836 : 									}
; 1837 : 
; 1838 : 									search_main_rotor_blade_section_static_depth++;

  00229	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  0022f	83 c0 01	 add	 eax, 1
  00232	89 85 6c fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], eax

; 1839 : 								}

  00238	eb 9f		 jmp	 SHORT $LN10@restore_he
$LN22@restore_he:

; 1840 : 							}
; 1841 : 						}
; 1842 : 						else

  0023a	eb 02		 jmp	 SHORT $LN20@restore_he
$LN19@restore_he:

; 1843 : 						{
; 1844 : 							break;

  0023c	eb 14		 jmp	 SHORT $LN7@restore_he
$LN20@restore_he:

; 1845 : 						}
; 1846 : 
; 1847 : 						search_main_rotor_blade_root_static_depth++;

  0023e	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  00244	83 c0 01	 add	 eax, 1
  00247	89 85 70 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], eax

; 1848 : 					}

  0024d	e9 cc fe ff ff	 jmp	 $LN6@restore_he
$LN7@restore_he:

; 1849 : 
; 1850 : 					//
; 1851 : 					// disable moving hub
; 1852 : 					//
; 1853 : 
; 1854 : 					search_main_rotor_hub.search_depth = 0;

  00252	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 1855 : 					search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_MOVING;

  0025c	c7 85 84 fe ff
	ff 16 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 22 ; 00000016H

; 1856 : 
; 1857 : 					if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00266	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  0026c	50		 push	 eax
  0026d	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  00270	51		 push	 ecx
  00271	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00276	83 f8 01	 cmp	 eax, 1
  00279	75 15		 jne	 SHORT $LN25@restore_he

; 1858 : 					{
; 1859 : 						search_main_rotor_hub.result_sub_object->visible_object = FALSE;

  0027b	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  00281	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00284	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00287	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  0028d	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN25@restore_he:

; 1860 : 					}
; 1861 : 
; 1862 : 					//
; 1863 : 					// enable static hub
; 1864 : 					//
; 1865 : 
; 1866 : 					search_main_rotor_hub.search_depth = 0;

  00290	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 1867 : 					search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_STATIC;

  0029a	c7 85 84 fe ff
	ff 15 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 21 ; 00000015H

; 1868 : 
; 1869 : 					if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  002a4	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  002aa	50		 push	 eax
  002ab	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  002ae	51		 push	 ecx
  002af	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  002b4	83 f8 01	 cmp	 eax, 1
  002b7	75 15		 jne	 SHORT $LN15@restore_he

; 1870 : 					{
; 1871 : 						search_main_rotor_hub.result_sub_object->visible_object = TRUE;

  002b9	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  002bf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002c2	83 c9 01	 or	 ecx, 1
  002c5	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  002cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN15@restore_he:

; 1872 : 					}
; 1873 : 				}
; 1874 : 			}
; 1875 : 		}
; 1876 : 		else

  002ce	eb 02		 jmp	 SHORT $LN14@restore_he
$LN13@restore_he:

; 1877 : 		{
; 1878 : 			break;

  002d0	eb 14		 jmp	 SHORT $LN3@restore_he
$LN14@restore_he:

; 1879 : 		}
; 1880 : 
; 1881 : 		search_main_rotor_shaft_depth++;

  002d2	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  002d8	83 c0 01	 add	 eax, 1
  002db	89 85 74 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], eax

; 1882 : 	}

  002e1	e9 3d fd ff ff	 jmp	 $LN2@restore_he
$LN3@restore_he:

; 1883 : 
; 1884 : 	return TRUE;

  002e6	b8 01 00 00 00	 mov	 eax, 1
$LN1@restore_he:

; 1885 : }

  002eb	5f		 pop	 edi
  002ec	5e		 pop	 esi
  002ed	5b		 pop	 ebx
  002ee	8b e5		 mov	 esp, ebp
  002f0	5d		 pop	 ebp
  002f1	c2 04 00	 ret	 4
?restore_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@@Z ENDP ; restore_helicopter_main_rotor_inst3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv75 = -76						; size = 4
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z PROC	; restore_helicopter_main_rotors, COMDAT

; 1661 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1662 : 	helicopter
; 1663 : 		*raw;
; 1664 : 
; 1665 : 	object_3d_instance
; 1666 : 		*inst3d;
; 1667 : 
; 1668 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@restore_he
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@restore_he:

; 1669 : 
; 1670 : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN7@restore_he
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b4	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN8@restore_he
$LN7@restore_he:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 09	 add	 edx, 9
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN8@restore_he:
  00058	83 7d b4 0e	 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  0005c	74 18		 je	 SHORT $LN3@restore_he
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
  00063	83 c0 09	 add	 eax, 9
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@restore_he:

; 1671 : 
; 1672 : 	raw = (helicopter *) get_local_entity_data (en);

  00076	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1673 : 
; 1674 : 	if (!raw->main_rotor_damaged)

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00082	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00088	c1 e9 03	 shr	 ecx, 3
  0008b	83 e1 01	 and	 ecx, 1
  0008e	75 04		 jne	 SHORT $LN4@restore_he

; 1675 : 	{
; 1676 : 		return FALSE;

  00090	33 c0		 xor	 eax, eax
  00092	eb 3f		 jmp	 SHORT $LN1@restore_he
$LN4@restore_he:

; 1677 : 	}
; 1678 : 
; 1679 : 	inst3d = raw->ac.inst3d;

  00094	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00097	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0009d	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 1680 : 
; 1681 : 	//
; 1682 : 	// restore main rotor object
; 1683 : 	//
; 1684 : 
; 1685 : 	restore_helicopter_main_rotor_inst3d (inst3d);

  000a0	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ?restore_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@@Z ; restore_helicopter_main_rotor_inst3d

; 1686 : 
; 1687 : 	//
; 1688 : 	// also restore virtual cockpit rotors if entity is the player
; 1689 : 	//
; 1690 : 
; 1691 : 	if (en == get_gunship_entity ())

  000a9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ac	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b2	75 05		 jne	 SHORT $LN5@restore_he

; 1692 : 	{
; 1693 : 		restore_virtual_cockpit_main_rotors ();

  000b4	e8 00 00 00 00	 call	 ?restore_virtual_cockpit_main_rotors@@YGXXZ ; restore_virtual_cockpit_main_rotors
$LN5@restore_he:

; 1694 : 	}
; 1695 : 
; 1696 : 	raw->main_rotor_damaged = FALSE;

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000bc	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  000c2	83 e1 f7	 and	 ecx, -9			; fffffff7H
  000c5	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000c8	89 8a b0 01 00
	00		 mov	 DWORD PTR [edx+432], ecx

; 1697 : 
; 1698 : 	return TRUE;

  000ce	b8 01 00 00 00	 mov	 eax, 1
$LN1@restore_he:

; 1699 : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z ENDP	; restore_helicopter_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z
_TEXT	SEGMENT
tv88 = -72						; size = 4
tv80 = -68						; size = 4
_en$ = 8						; size = 4
_count$ = 12						; size = 4
?create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z PROC	; create_tail_rotor_fragments, COMDAT

; 1641 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1642 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@create_tai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_tai:

; 1643 : 
; 1644 : 	if ((count > 0) && (get_comms_model () == COMMS_MODEL_SERVER))

  00027	83 7d 0c 00	 cmp	 DWORD PTR _count$[ebp], 0
  0002b	0f 8e a1 00 00
	00		 jle	 $LN3@create_tai
  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00038	0f 85 94 00 00
	00		 jne	 $LN3@create_tai

; 1645 : 	{
; 1646 : 		create_client_server_particle_entity

  0003e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00042	74 0a		 je	 SHORT $LN5@create_tai
  00044	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4d bc	 mov	 DWORD PTR tv80[ebp], ecx
  0004c	eb 21		 jmp	 SHORT $LN6@create_tai
$LN5@create_tai:
  0004e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
  00054	83 c2 08	 add	 edx, 8
  00057	52		 push	 edx
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00068	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN6@create_tai:
  0006f	b9 01 00 00 00	 mov	 ecx, 1
  00074	85 c9		 test	 ecx, ecx
  00076	74 09		 je	 SHORT $LN7@create_tai
  00078	c7 45 b8 08 00
	00 00		 mov	 DWORD PTR tv88[ebp], 8
  0007f	eb 21		 jmp	 SHORT $LN8@create_tai
$LN7@create_tai:
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
  00087	83 c2 08	 add	 edx, 8
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN8@create_tai:
  000a2	6a 0c		 push	 12			; 0000000cH
  000a4	51		 push	 ecx
  000a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  000ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b2	6a 08		 push	 8
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b7	51		 push	 ecx
  000b8	6b 55 bc 60	 imul	 edx, DWORD PTR tv80[ebp], 96
  000bc	8b 45 b8	 mov	 eax, DWORD PTR tv88[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx
  000c8	50		 push	 eax
  000c9	8b 55 0c	 mov	 edx, DWORD PTR _count$[ebp]
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ?create_client_server_particle_entity@@YGPAUENTITY@@HPAUVEC3D@@MH@Z ; create_client_server_particle_entity
$LN3@create_tai:

; 1647 : 		(
; 1648 : 			count,
; 1649 : 			get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION),
; 1650 : 			20,
; 1651 : 			OBJECT_3D_TAIL_ROTOR_BLADE_DAMAGED
; 1652 : 		);
; 1653 : 	}
; 1654 : }

  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
?create_tail_rotor_fragments@@YGXPAUENTITY@@H@Z ENDP	; create_tail_rotor_fragments
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?create_main_rotor_fragments@@YGXPAUENTITY@@H@Z
_TEXT	SEGMENT
tv88 = -72						; size = 4
tv80 = -68						; size = 4
_en$ = 8						; size = 4
_count$ = 12						; size = 4
?create_main_rotor_fragments@@YGXPAUENTITY@@H@Z PROC	; create_main_rotor_fragments, COMDAT

; 1621 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1622 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@create_mai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_main_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_mai:

; 1623 : 
; 1624 : 	if ((count > 0) && (get_comms_model () == COMMS_MODEL_SERVER))

  00027	83 7d 0c 00	 cmp	 DWORD PTR _count$[ebp], 0
  0002b	0f 8e a1 00 00
	00		 jle	 $LN3@create_mai
  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00038	0f 85 94 00 00
	00		 jne	 $LN3@create_mai

; 1625 : 	{
; 1626 : 		create_client_server_particle_entity

  0003e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00042	74 0a		 je	 SHORT $LN5@create_mai
  00044	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4d bc	 mov	 DWORD PTR tv80[ebp], ecx
  0004c	eb 21		 jmp	 SHORT $LN6@create_mai
$LN5@create_mai:
  0004e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_main_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
  00054	83 c2 08	 add	 edx, 8
  00057	52		 push	 edx
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00068	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN6@create_mai:
  0006f	b9 01 00 00 00	 mov	 ecx, 1
  00074	85 c9		 test	 ecx, ecx
  00076	74 09		 je	 SHORT $LN7@create_mai
  00078	c7 45 b8 08 00
	00 00		 mov	 DWORD PTR tv88[ebp], 8
  0007f	eb 21		 jmp	 SHORT $LN8@create_mai
$LN7@create_mai:
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_main_rotor_fragments@@YGXPAUENTITY@@H@Z@4JA
  00087	83 c2 08	 add	 edx, 8
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN8@create_mai:
  000a2	6a 0b		 push	 11			; 0000000bH
  000a4	51		 push	 ecx
  000a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  000ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b2	6a 08		 push	 8
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b7	51		 push	 ecx
  000b8	6b 55 bc 60	 imul	 edx, DWORD PTR tv80[ebp], 96
  000bc	8b 45 b8	 mov	 eax, DWORD PTR tv88[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx
  000c8	50		 push	 eax
  000c9	8b 55 0c	 mov	 edx, DWORD PTR _count$[ebp]
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ?create_client_server_particle_entity@@YGPAUENTITY@@HPAUVEC3D@@MH@Z ; create_client_server_particle_entity
$LN3@create_mai:

; 1627 : 		(
; 1628 : 			count,
; 1629 : 			get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION),
; 1630 : 			20,
; 1631 : 			OBJECT_3D_ROTOR_BLADE_DAMAGED
; 1632 : 		);
; 1633 : 	}
; 1634 : }

  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
?create_main_rotor_fragments@@YGXPAUENTITY@@H@Z ENDP	; create_main_rotor_fragments
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv75 = -140						; size = 4
_fragment_count$ = -72					; size = 4
_depth$ = -68						; size = 4
_search$ = -64						; size = 56
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z PROC	; damage_helicopter_tail_rotors, COMDAT

; 1537 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1538 : 	helicopter
; 1539 : 		*raw;
; 1540 : 
; 1541 : 	object_3d_instance
; 1542 : 		*inst3d;
; 1543 : 
; 1544 : 	object_3d_sub_object_search_data
; 1545 : 		search;
; 1546 : 
; 1547 : 	int
; 1548 : 		depth,
; 1549 : 		fragment_count;
; 1550 : 
; 1551 : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@damage_hel
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
  00017	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@damage_hel:

; 1552 : 
; 1553 : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN14@damage_hel
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN15@damage_hel
$LN14@damage_hel:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
  00043	83 c2 10	 add	 edx, 16			; 00000010H
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN15@damage_hel:
  00061	83 bd 74 ff ff
	ff 0e		 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  00068	74 18		 je	 SHORT $LN7@damage_hel
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
  0006f	83 c0 10	 add	 eax, 16			; 00000010H
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@damage_hel:

; 1554 : 
; 1555 : 	raw = (helicopter *) get_local_entity_data (en);

  00082	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00085	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00088	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1556 : 
; 1557 : 	ASSERT (raw->tail_rotor_damaged == FALSE);

  0008b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008e	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00094	c1 e9 04	 shr	 ecx, 4
  00097	83 e1 01	 and	 ecx, 1
  0009a	74 18		 je	 SHORT $LN8@damage_hel
  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z@4JA
  000a1	83 c0 14	 add	 eax, 20			; 00000014H
  000a4	50		 push	 eax
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@IMACOALM@raw?9?$DOtail_rotor_damaged?5?$DN?$DN?5FALS@
  000af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@damage_hel:

; 1558 : 
; 1559 : 	inst3d = raw->ac.inst3d;

  000b4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b7	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000bd	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 1560 : 
; 1561 : 	fragment_count = 0;

  000c0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _fragment_count$[ebp], 0

; 1562 : 
; 1563 : 	//
; 1564 : 	// disable moving tail rotor
; 1565 : 	//
; 1566 : 
; 1567 : 	depth = 0;

  000c7	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN2@damage_hel:

; 1568 : 
; 1569 : 	while (TRUE)

  000ce	b8 01 00 00 00	 mov	 eax, 1
  000d3	85 c0		 test	 eax, eax
  000d5	74 3f		 je	 SHORT $LN3@damage_hel

; 1570 : 	{
; 1571 : 		search.search_depth = depth;

  000d7	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  000da	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 1572 : 		search.search_object = inst3d;

  000dd	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000e0	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 1573 : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_MOVING;

  000e3	c7 45 cc 14 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 20 ; 00000014H

; 1574 : 
; 1575 : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000ea	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  000f3	83 f8 01	 cmp	 eax, 1
  000f6	75 11		 jne	 SHORT $LN9@damage_hel

; 1576 : 		{
; 1577 : 			search.result_sub_object->visible_object = FALSE;

  000f8	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  000fb	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000fe	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00101	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  00104	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1578 : 		}
; 1579 : 		else

  00107	eb 02		 jmp	 SHORT $LN10@damage_hel
$LN9@damage_hel:

; 1580 : 		{
; 1581 : 			break;

  00109	eb 0b		 jmp	 SHORT $LN3@damage_hel
$LN10@damage_hel:

; 1582 : 		}
; 1583 : 
; 1584 : 		depth++;

  0010b	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  0010e	83 c0 01	 add	 eax, 1
  00111	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 1585 : 	}

  00114	eb b8		 jmp	 SHORT $LN2@damage_hel
$LN3@damage_hel:

; 1586 : 
; 1587 : 	//
; 1588 : 	// disable static tail rotor
; 1589 : 	//
; 1590 : 
; 1591 : 	depth = 0;

  00116	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN4@damage_hel:

; 1592 : 
; 1593 : 	while (TRUE)

  0011d	b8 01 00 00 00	 mov	 eax, 1
  00122	85 c0		 test	 eax, eax
  00124	74 48		 je	 SHORT $LN5@damage_hel

; 1594 : 	{
; 1595 : 		search.search_depth = depth;

  00126	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  00129	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 1596 : 		search.search_object = inst3d;

  0012c	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0012f	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 1597 : 		search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_STATIC;

  00132	c7 45 cc 13 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 19 ; 00000013H

; 1598 : 
; 1599 : 		if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00139	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00142	83 f8 01	 cmp	 eax, 1
  00145	75 1a		 jne	 SHORT $LN11@damage_hel

; 1600 : 		{
; 1601 : 			search.result_sub_object->visible_object = FALSE;

  00147	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  0014a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0014d	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00150	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  00153	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1602 : 
; 1603 : 			fragment_count ++;

  00156	8b 45 b8	 mov	 eax, DWORD PTR _fragment_count$[ebp]
  00159	83 c0 01	 add	 eax, 1
  0015c	89 45 b8	 mov	 DWORD PTR _fragment_count$[ebp], eax

; 1604 : 		}
; 1605 : 		else

  0015f	eb 02		 jmp	 SHORT $LN12@damage_hel
$LN11@damage_hel:

; 1606 : 		{
; 1607 : 			break;

  00161	eb 0b		 jmp	 SHORT $LN5@damage_hel
$LN12@damage_hel:

; 1608 : 		}
; 1609 : 
; 1610 : 		depth++;

  00163	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  00166	83 c0 01	 add	 eax, 1
  00169	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 1611 : 	}

  0016c	eb af		 jmp	 SHORT $LN4@damage_hel
$LN5@damage_hel:

; 1612 : 
; 1613 : 	return fragment_count;

  0016e	8b 45 b8	 mov	 eax, DWORD PTR _fragment_count$[ebp]

; 1614 : }

  00171	5f		 pop	 edi
  00172	5e		 pop	 esi
  00173	5b		 pop	 ebx
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c2 04 00	 ret	 4
?damage_helicopter_tail_rotors@@YGHPAUENTITY@@@Z ENDP	; damage_helicopter_tail_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?damage_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@H@Z
_TEXT	SEGMENT
_search_main_rotor_blade_moving_depth$ = -416		; size = 4
_search_main_rotor_blade_section_static_depth$ = -412	; size = 4
_search_main_rotor_blade_root_static_depth$ = -408	; size = 4
_search_main_rotor_shaft_depth$ = -404			; size = 4
_section_fragment_count$ = -400				; size = 4
_section_cut_off_point$ = -396				; size = 4
_search_main_rotor_hub$ = -392				; size = 56
_search_main_rotor_blade_moving$ = -336			; size = 56
_search_main_rotor_blade_section_static$ = -280		; size = 56
_search_main_rotor_blade_root_static$ = -224		; size = 56
_search_main_rotor_heading_null$ = -168			; size = 56
_search_main_rotor_pitch_bank_null$ = -112		; size = 56
_search_main_rotor_shaft$ = -56				; size = 56
_inst3d$ = 8						; size = 4
_seed$ = 12						; size = 4
?damage_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@H@Z PROC ; damage_helicopter_main_rotor_inst3d, COMDAT

; 1340 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e0 01 00
	00		 sub	 esp, 480		; 000001e0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1341 : 	object_3d_sub_object_search_data
; 1342 : 		search_main_rotor_shaft,
; 1343 : 		search_main_rotor_pitch_bank_null,
; 1344 : 		search_main_rotor_heading_null,
; 1345 : 		search_main_rotor_blade_root_static,
; 1346 : 		search_main_rotor_blade_section_static,
; 1347 : 		search_main_rotor_blade_moving,
; 1348 : 		search_main_rotor_hub;
; 1349 : 
; 1350 : 	int
; 1351 : 		section_cut_off_point,
; 1352 : 		section_fragment_count,
; 1353 : 		search_main_rotor_shaft_depth,
; 1354 : 		search_main_rotor_blade_root_static_depth,
; 1355 : 		search_main_rotor_blade_section_static_depth,
; 1356 : 		search_main_rotor_blade_moving_depth;
; 1357 : 
; 1358 : 	if (!inst3d)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00010	75 07		 jne	 SHORT $LN12@damage_hel

; 1359 : 	{
; 1360 : 		return 0;

  00012	33 c0		 xor	 eax, eax
  00014	e9 25 03 00 00	 jmp	 $LN1@damage_hel
$LN12@damage_hel:

; 1361 : 	}
; 1362 : 
; 1363 : 	section_fragment_count = 0;

  00019	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _section_fragment_count$[ebp], 0

; 1364 : 
; 1365 : 	//
; 1366 : 	// locate rotor shaft
; 1367 : 	//
; 1368 : 
; 1369 : 	search_main_rotor_shaft_depth = 0;

  00023	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], 0
$LN2@damage_hel:

; 1370 : 
; 1371 : 	while (TRUE)

  0002d	b8 01 00 00 00	 mov	 eax, 1
  00032	85 c0		 test	 eax, eax
  00034	0f 84 fe 02 00
	00		 je	 $LN3@damage_hel

; 1372 : 	{
; 1373 : 		search_main_rotor_shaft.search_depth = search_main_rotor_shaft_depth;

  0003a	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  00040	89 45 d0	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+8], eax

; 1374 : 		search_main_rotor_shaft.search_object = inst3d;

  00043	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00046	89 45 c8	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp], eax

; 1375 : 		search_main_rotor_shaft.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_SHAFT;

  00049	c7 45 d4 02 00
	00 00		 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+12], 2

; 1376 : 
; 1377 : 		if (find_object_3d_sub_object (&search_main_rotor_shaft) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00050	8d 45 c8	 lea	 eax, DWORD PTR _search_main_rotor_shaft$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00059	83 f8 01	 cmp	 eax, 1
  0005c	0f 85 c0 02 00
	00		 jne	 $LN13@damage_hel

; 1378 : 		{
; 1379 : 			//
; 1380 : 			// locate pitch and bank null
; 1381 : 			//
; 1382 : 
; 1383 : 			search_main_rotor_pitch_bank_null.search_depth = 0;

  00062	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+8], 0

; 1384 : 			search_main_rotor_pitch_bank_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_PITCH_BANK_NULL;

  00069	c7 45 9c 17 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+12], 23 ; 00000017H

; 1385 : 
; 1386 : 			if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_pitch_bank_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00070	8d 45 90	 lea	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  00073	50		 push	 eax
  00074	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  0007d	83 f8 01	 cmp	 eax, 1
  00080	0f 85 9a 02 00
	00		 jne	 $LN15@damage_hel

; 1387 : 			{
; 1388 : 				//
; 1389 : 				// locate heading null
; 1390 : 				//
; 1391 : 
; 1392 : 				search_main_rotor_heading_null.search_depth = 0;

  00086	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+8], 0

; 1393 : 				search_main_rotor_heading_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HEADING_NULL;

  00090	c7 85 64 ff ff
	ff 18 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+12], 24 ; 00000018H

; 1394 : 
; 1395 : 				if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_pitch_bank_null, &search_main_rotor_heading_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0009a	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp]
  000a0	50		 push	 eax
  000a1	8d 4d 90	 lea	 ecx, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  000aa	83 f8 01	 cmp	 eax, 1
  000ad	0f 85 6d 02 00
	00		 jne	 $LN15@damage_hel

; 1396 : 				{
; 1397 : 					//
; 1398 : 					// disable moving blades
; 1399 : 					//
; 1400 : 
; 1401 : 					search_main_rotor_blade_moving_depth = 0;

  000b3	c7 85 60 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], 0
$LN4@damage_hel:

; 1402 : 
; 1403 : 					while (TRUE)

  000bd	b8 01 00 00 00	 mov	 eax, 1
  000c2	85 c0		 test	 eax, eax
  000c4	74 58		 je	 SHORT $LN5@damage_hel

; 1404 : 					{
; 1405 : 						search_main_rotor_blade_moving.search_depth = search_main_rotor_blade_moving_depth;

  000c6	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  000cc	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+8], eax

; 1406 : 						search_main_rotor_blade_moving.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_MOVING;

  000d2	c7 85 bc fe ff
	ff 19 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+12], 25 ; 00000019H

; 1407 : 
; 1408 : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_moving) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000dc	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp]
  000e2	50		 push	 eax
  000e3	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  000e9	51		 push	 ecx
  000ea	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  000ef	83 f8 01	 cmp	 eax, 1
  000f2	75 17		 jne	 SHORT $LN17@damage_hel

; 1409 : 						{
; 1410 : 							search_main_rotor_blade_moving.result_sub_object->visible_object = FALSE;

  000f4	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  000fa	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000fd	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00100	8b 95 b4 fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  00106	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1411 : 						}
; 1412 : 						else

  00109	eb 02		 jmp	 SHORT $LN18@damage_hel
$LN17@damage_hel:

; 1413 : 						{
; 1414 : 							break;

  0010b	eb 11		 jmp	 SHORT $LN5@damage_hel
$LN18@damage_hel:

; 1415 : 						}
; 1416 : 
; 1417 : 						search_main_rotor_blade_moving_depth++;

  0010d	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  00113	83 c0 01	 add	 eax, 1
  00116	89 85 60 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], eax

; 1418 : 					}

  0011c	eb 9f		 jmp	 SHORT $LN4@damage_hel
$LN5@damage_hel:

; 1419 : 
; 1420 : 					//
; 1421 : 					// enable static blade roots
; 1422 : 					//
; 1423 : 
; 1424 : 					search_main_rotor_blade_root_static_depth = 0;

  0011e	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], 0
$LN6@damage_hel:

; 1425 : 
; 1426 : 					while (TRUE)

  00128	b8 01 00 00 00	 mov	 eax, 1
  0012d	85 c0		 test	 eax, eax
  0012f	0f 84 6f 01 00
	00		 je	 $LN7@damage_hel

; 1427 : 					{
; 1428 : 						search_main_rotor_blade_root_static.search_depth = search_main_rotor_blade_root_static_depth;

  00135	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  0013b	89 85 28 ff ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+8], eax

; 1429 : 						search_main_rotor_blade_root_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_ROOT_STATIC;

  00141	c7 85 2c ff ff
	ff 1a 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+12], 26 ; 0000001aH

; 1430 : 
; 1431 : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_root_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0014b	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00151	50		 push	 eax
  00152	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00158	51		 push	 ecx
  00159	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  0015e	83 f8 01	 cmp	 eax, 1
  00161	0f 85 27 01 00
	00		 jne	 $LN19@damage_hel

; 1432 : 						{
; 1433 : 							search_main_rotor_blade_root_static.result_sub_object->visible_object = TRUE;

  00167	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  0016d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00170	83 c9 01	 or	 ecx, 1
  00173	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00179	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1434 : 
; 1435 : 							//
; 1436 : 							// locate static blade sections
; 1437 : 							//
; 1438 : 
; 1439 : 							search_main_rotor_blade_section_static_depth = 0;

  0017c	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
$LN8@damage_hel:

; 1440 : 
; 1441 : 							while (TRUE)

  00186	b8 01 00 00 00	 mov	 eax, 1
  0018b	85 c0		 test	 eax, eax
  0018d	74 41		 je	 SHORT $LN9@damage_hel

; 1442 : 							{
; 1443 : 								search_main_rotor_blade_section_static.search_depth = search_main_rotor_blade_section_static_depth;

  0018f	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  00195	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+8], eax

; 1444 : 								search_main_rotor_blade_section_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_SECTION_STATIC;

  0019b	c7 85 f4 fe ff
	ff 1b 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+12], 27 ; 0000001bH

; 1445 : 
; 1446 : 								search_main_rotor_blade_section_static_depth++;

  001a5	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  001ab	83 c0 01	 add	 eax, 1
  001ae	89 85 64 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], eax

; 1447 : 
; 1448 : 								if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_blade_root_static, &search_main_rotor_blade_section_static) != SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  001b4	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp]
  001ba	50		 push	 eax
  001bb	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  001c1	51		 push	 ecx
  001c2	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  001c7	83 f8 01	 cmp	 eax, 1
  001ca	74 02		 je	 SHORT $LN21@damage_hel

; 1449 : 								{
; 1450 : 									break;

  001cc	eb 02		 jmp	 SHORT $LN9@damage_hel
$LN21@damage_hel:

; 1451 : 								}
; 1452 : 							}

  001ce	eb b6		 jmp	 SHORT $LN8@damage_hel
$LN9@damage_hel:

; 1453 : 
; 1454 : 							//
; 1455 : 							// cut off static blade sections
; 1456 : 							//
; 1457 : 
; 1458 : 							if (search_main_rotor_blade_section_static_depth > 0)

  001d0	83 bd 64 fe ff
	ff 00		 cmp	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
  001d7	0f 8e af 00 00
	00		 jle	 $LN22@damage_hel

; 1459 : 							{
; 1460 : 								section_cut_off_point = rand16x(&seed) % search_main_rotor_blade_section_static_depth;

  001dd	69 45 0c 6d 4e
	c6 41		 imul	 eax, DWORD PTR _seed$[ebp], 1103515245
  001e4	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  001e9	89 45 0c	 mov	 DWORD PTR _seed$[ebp], eax
  001ec	8b 45 0c	 mov	 eax, DWORD PTR _seed$[ebp]
  001ef	c1 f8 10	 sar	 eax, 16			; 00000010H
  001f2	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  001f7	99		 cdq
  001f8	f7 bd 64 fe ff
	ff		 idiv	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  001fe	89 95 74 fe ff
	ff		 mov	 DWORD PTR _section_cut_off_point$[ebp], edx

; 1461 : 
; 1462 : 								search_main_rotor_blade_section_static_depth = 0;

  00204	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
$LN10@damage_hel:

; 1463 : 
; 1464 : 								while (TRUE)

  0020e	b8 01 00 00 00	 mov	 eax, 1
  00213	85 c0		 test	 eax, eax
  00215	74 75		 je	 SHORT $LN22@damage_hel

; 1465 : 								{
; 1466 : 									search_main_rotor_blade_section_static.search_depth = search_main_rotor_blade_section_static_depth;

  00217	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  0021d	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+8], eax

; 1467 : 									search_main_rotor_blade_section_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_SECTION_STATIC;

  00223	c7 85 f4 fe ff
	ff 1b 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+12], 27 ; 0000001bH

; 1468 : 
; 1469 : 									if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_blade_root_static, &search_main_rotor_blade_section_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0022d	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp]
  00233	50		 push	 eax
  00234	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  0023a	51		 push	 ecx
  0023b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00240	83 f8 01	 cmp	 eax, 1
  00243	75 34		 jne	 SHORT $LN23@damage_hel

; 1470 : 									{
; 1471 : 										if (search_main_rotor_blade_section_static_depth >= section_cut_off_point)

  00245	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  0024b	3b 85 74 fe ff
	ff		 cmp	 eax, DWORD PTR _section_cut_off_point$[ebp]
  00251	7c 24		 jl	 SHORT $LN25@damage_hel

; 1472 : 										{
; 1473 : 											search_main_rotor_blade_section_static.result_sub_object->visible_object = FALSE;

  00253	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp+4]
  00259	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0025c	83 e1 fe	 and	 ecx, -2			; fffffffeH
  0025f	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_section_static$[ebp+4]
  00265	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1474 : 
; 1475 : 											section_fragment_count ++;

  00268	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _section_fragment_count$[ebp]
  0026e	83 c0 01	 add	 eax, 1
  00271	89 85 70 fe ff
	ff		 mov	 DWORD PTR _section_fragment_count$[ebp], eax
$LN25@damage_hel:

; 1476 : 										}
; 1477 : 									}
; 1478 : 									else

  00277	eb 02		 jmp	 SHORT $LN24@damage_hel
$LN23@damage_hel:

; 1479 : 									{
; 1480 : 										break;

  00279	eb 11		 jmp	 SHORT $LN22@damage_hel
$LN24@damage_hel:

; 1481 : 									}
; 1482 : 
; 1483 : 									search_main_rotor_blade_section_static_depth++;

  0027b	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  00281	83 c0 01	 add	 eax, 1
  00284	89 85 64 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], eax

; 1484 : 								}

  0028a	eb 82		 jmp	 SHORT $LN10@damage_hel
$LN22@damage_hel:

; 1485 : 							}
; 1486 : 						}
; 1487 : 						else

  0028c	eb 02		 jmp	 SHORT $LN20@damage_hel
$LN19@damage_hel:

; 1488 : 						{
; 1489 : 							break;

  0028e	eb 14		 jmp	 SHORT $LN7@damage_hel
$LN20@damage_hel:

; 1490 : 						}
; 1491 : 
; 1492 : 						search_main_rotor_blade_root_static_depth++;

  00290	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  00296	83 c0 01	 add	 eax, 1
  00299	89 85 68 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], eax

; 1493 : 					}

  0029f	e9 84 fe ff ff	 jmp	 $LN6@damage_hel
$LN7@damage_hel:

; 1494 : 
; 1495 : 					//
; 1496 : 					// disable moving hub
; 1497 : 					//
; 1498 : 
; 1499 : 					search_main_rotor_hub.search_depth = 0;

  002a4	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 1500 : 					search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_MOVING;

  002ae	c7 85 84 fe ff
	ff 16 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 22 ; 00000016H

; 1501 : 
; 1502 : 					if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  002b8	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  002be	50		 push	 eax
  002bf	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  002c2	51		 push	 ecx
  002c3	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  002c8	83 f8 01	 cmp	 eax, 1
  002cb	75 15		 jne	 SHORT $LN26@damage_hel

; 1503 : 					{
; 1504 : 						search_main_rotor_hub.result_sub_object->visible_object = FALSE;

  002cd	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  002d3	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002d6	83 e1 fe	 and	 ecx, -2			; fffffffeH
  002d9	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  002df	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN26@damage_hel:

; 1505 : 					}
; 1506 : 
; 1507 : 					//
; 1508 : 					// enable static hub
; 1509 : 					//
; 1510 : 
; 1511 : 					search_main_rotor_hub.search_depth = 0;

  002e2	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 1512 : 					search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_STATIC;

  002ec	c7 85 84 fe ff
	ff 15 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 21 ; 00000015H

; 1513 : 
; 1514 : 					if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  002f6	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  002fc	50		 push	 eax
  002fd	8d 4d c8	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  00300	51		 push	 ecx
  00301	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00306	83 f8 01	 cmp	 eax, 1
  00309	75 15		 jne	 SHORT $LN15@damage_hel

; 1515 : 					{
; 1516 : 						search_main_rotor_hub.result_sub_object->visible_object = TRUE;

  0030b	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  00311	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00314	83 c9 01	 or	 ecx, 1
  00317	8b 95 7c fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  0031d	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN15@damage_hel:

; 1517 : 					}
; 1518 : 				}
; 1519 : 			}
; 1520 : 		}
; 1521 : 		else

  00320	eb 02		 jmp	 SHORT $LN14@damage_hel
$LN13@damage_hel:

; 1522 : 		{
; 1523 : 			break;

  00322	eb 14		 jmp	 SHORT $LN3@damage_hel
$LN14@damage_hel:

; 1524 : 		}
; 1525 : 
; 1526 : 		search_main_rotor_shaft_depth++;

  00324	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  0032a	83 c0 01	 add	 eax, 1
  0032d	89 85 6c fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], eax

; 1527 : 	}

  00333	e9 f5 fc ff ff	 jmp	 $LN2@damage_hel
$LN3@damage_hel:

; 1528 : 
; 1529 : 	return section_fragment_count;

  00338	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _section_fragment_count$[ebp]
$LN1@damage_hel:

; 1530 : }

  0033e	5f		 pop	 edi
  0033f	5e		 pop	 esi
  00340	5b		 pop	 ebx
  00341	8b e5		 mov	 esp, ebp
  00343	5d		 pop	 ebp
  00344	c2 08 00	 ret	 8
?damage_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@H@Z ENDP ; damage_helicopter_main_rotor_inst3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv141 = -88						; size = 4
tv134 = -84						; size = 4
tv75 = -84						; size = 4
_section_fragment_count$ = -16				; size = 4
_seed$ = -12						; size = 4
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z PROC	; damage_helicopter_main_rotors, COMDAT

; 1287 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1288 : 	helicopter
; 1289 : 		*raw;
; 1290 : 
; 1291 : 	object_3d_instance
; 1292 : 		*inst3d;
; 1293 : 
; 1294 : 	int
; 1295 : 		seed,
; 1296 : 		section_fragment_count;
; 1297 : 
; 1298 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@damage_hel
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@damage_hel:

; 1299 : 
; 1300 : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN8@damage_hel
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d ac	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN9@damage_hel
$LN8@damage_hel:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 0d	 add	 edx, 13			; 0000000dH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@damage_hel:
  00058	83 7d ac 0e	 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  0005c	74 18		 je	 SHORT $LN3@damage_hel
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
  00063	83 c0 0d	 add	 eax, 13			; 0000000dH
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@damage_hel:

; 1301 : 
; 1302 : 	raw = (helicopter *) get_local_entity_data (en);

  00076	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1303 : 
; 1304 : 	ASSERT (raw->main_rotor_damaged == FALSE);

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00082	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00088	c1 e9 03	 shr	 ecx, 3
  0008b	83 e1 01	 and	 ecx, 1
  0008e	74 18		 je	 SHORT $LN4@damage_hel
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z@4JA
  00095	83 c0 11	 add	 eax, 17			; 00000011H
  00098	50		 push	 eax
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@LCBACME@raw?9?$DOmain_rotor_damaged?5?$DN?$DN?5FALS@
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@damage_hel:

; 1305 : 
; 1306 : 	inst3d = raw->ac.inst3d;

  000a8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ab	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000b1	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 1307 : 
; 1308 : 	seed = get_client_server_entity_random_number_seed(en);

  000b4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b7	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000bd	c1 f8 04	 sar	 eax, 4
  000c0	89 45 f4	 mov	 DWORD PTR _seed$[ebp], eax

; 1309 : 
; 1310 : 	//
; 1311 : 	// damage main rotor object
; 1312 : 	//
; 1313 : 
; 1314 : 	section_fragment_count = damage_helicopter_main_rotor_inst3d (inst3d, seed);

  000c3	8b 45 f4	 mov	 eax, DWORD PTR _seed$[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ?damage_helicopter_main_rotor_inst3d@@YGHPAUOBJECT_3D_INSTANCE@@H@Z ; damage_helicopter_main_rotor_inst3d
  000d0	89 45 f0	 mov	 DWORD PTR _section_fragment_count$[ebp], eax

; 1315 : 
; 1316 : 	if (get_local_entity_int_value (en, INT_TYPE_EJECTED))

  000d3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000d7	74 0a		 je	 SHORT $LN10@damage_hel
  000d9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000de	89 4d ac	 mov	 DWORD PTR tv134[ebp], ecx
  000e1	eb 1d		 jmp	 SHORT $LN11@damage_hel
$LN10@damage_hel:
  000e3	68 24 05 00 00	 push	 1316			; 00000524H
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f3	52		 push	 edx
  000f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f9	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN11@damage_hel:
  00100	b8 01 00 00 00	 mov	 eax, 1
  00105	85 c0		 test	 eax, eax
  00107	74 09		 je	 SHORT $LN12@damage_hel
  00109	c7 45 a8 31 00
	00 00		 mov	 DWORD PTR tv141[ebp], 49 ; 00000031H
  00110	eb 1d		 jmp	 SHORT $LN13@damage_hel
$LN12@damage_hel:
  00112	68 24 05 00 00	 push	 1316			; 00000524H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00122	51		 push	 ecx
  00123	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00128	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN13@damage_hel:
  0012f	6a 31		 push	 49			; 00000031H
  00131	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00134	52		 push	 edx
  00135	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv134[ebp], 1116
  0013c	8b 4d a8	 mov	 ecx, DWORD PTR tv141[ebp]
  0013f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00146	ff d2		 call	 edx
  00148	85 c0		 test	 eax, eax
  0014a	74 07		 je	 SHORT $LN5@damage_hel

; 1317 : 	{
; 1318 : 		section_fragment_count = 0;

  0014c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _section_fragment_count$[ebp], 0
$LN5@damage_hel:

; 1319 : 	}
; 1320 : 
; 1321 : 	//
; 1322 : 	// also damage virtual cockpit rotors if entity is the player
; 1323 : 	//
; 1324 : 
; 1325 : 	if (en == get_gunship_entity ())

  00153	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00156	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0015c	75 09		 jne	 SHORT $LN6@damage_hel

; 1326 : 	{
; 1327 : 		damage_virtual_cockpit_main_rotors (seed);

  0015e	8b 45 f4	 mov	 eax, DWORD PTR _seed$[ebp]
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?damage_virtual_cockpit_main_rotors@@YGXH@Z ; damage_virtual_cockpit_main_rotors
$LN6@damage_hel:

; 1328 : 	}
; 1329 : 
; 1330 : 	raw->main_rotor_damaged = TRUE;

  00167	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016a	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00170	83 c9 08	 or	 ecx, 8
  00173	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00176	89 8a b0 01 00
	00		 mov	 DWORD PTR [edx+432], ecx

; 1331 : 
; 1332 : 	return section_fragment_count;

  0017c	8b 45 f0	 mov	 eax, DWORD PTR _section_fragment_count$[ebp]

; 1333 : }

  0017f	5f		 pop	 edi
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx
  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c2 04 00	 ret	 4
?damage_helicopter_main_rotors@@YGHPAUENTITY@@@Z ENDP	; damage_helicopter_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?damage_helicopter_3d_object@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv89 = -76						; size = 4
tv81 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?damage_helicopter_3d_object@@YGXPAUENTITY@@@Z PROC	; damage_helicopter_3d_object, COMDAT

; 1236 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1237 : 	helicopter
; 1238 : 		*raw;
; 1239 : 
; 1240 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@damage_hel
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_3d_object@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@damage_hel:

; 1241 : 
; 1242 : 	raw = (helicopter *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1243 : 
; 1244 : 	//
; 1245 : 	// store main rotor heading(s)
; 1246 : 	//
; 1247 : 
; 1248 : 	//
; 1249 : 	// store tail rotor pitch(s)
; 1250 : 	//
; 1251 : 
; 1252 : 	//
; 1253 : 	// destruct old object
; 1254 : 	//
; 1255 : 
; 1256 : 	destruct_3d_object (raw->ac.inst3d);

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; destruct_3d_object

; 1257 : 
; 1258 : 	//
; 1259 : 	// construct new (damaged) object
; 1260 : 	//
; 1261 : 
; 1262 : 	raw->ac.object_3d_shape = get_local_entity_int_value (en, INT_TYPE_DESTROYED_3D_SHAPE);

  0003f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00043	74 0a		 je	 SHORT $LN4@damage_hel
  00045	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 4d b8	 mov	 DWORD PTR tv81[ebp], ecx
  0004d	eb 21		 jmp	 SHORT $LN5@damage_hel
$LN4@damage_hel:
  0004f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_3d_object@@YGXPAUENTITY@@@Z@4JA
  00055	83 c2 1a	 add	 edx, 26			; 0000001aH
  00058	52		 push	 edx
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00069	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN5@damage_hel:
  00070	b9 01 00 00 00	 mov	 ecx, 1
  00075	85 c9		 test	 ecx, ecx
  00077	74 09		 je	 SHORT $LN6@damage_hel
  00079	c7 45 b4 2e 00
	00 00		 mov	 DWORD PTR tv89[ebp], 46	; 0000002eH
  00080	eb 21		 jmp	 SHORT $LN7@damage_hel
$LN6@damage_hel:
  00082	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_3d_object@@YGXPAUENTITY@@@Z@4JA
  00088	83 c2 1a	 add	 edx, 26			; 0000001aH
  0008b	52		 push	 edx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN7@damage_hel:
  000a3	6a 2e		 push	 46			; 0000002eH
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a8	51		 push	 ecx
  000a9	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv81[ebp], 1116
  000b0	8b 45 b4	 mov	 eax, DWORD PTR tv89[ebp]
  000b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000ba	ff d1		 call	 ecx
  000bc	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000bf	89 82 80 00 00
	00		 mov	 DWORD PTR [edx+128], eax

; 1263 : 
; 1264 : 	raw->ac.inst3d = construct_3d_object (raw->ac.object_3d_shape);

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c8	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  000ce	51		 push	 ecx
  000cf	e8 00 00 00 00	 call	 ?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z ; construct_3d_object
  000d4	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000d7	89 82 84 00 00
	00		 mov	 DWORD PTR [edx+132], eax

; 1265 : 
; 1266 : 	//
; 1267 : 	// set id number for new object
; 1268 : 	//
; 1269 : 
; 1270 : 	set_helicopter_id_number (en);

  000dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?set_helicopter_id_number@@YGXPAUENTITY@@@Z ; set_helicopter_id_number

; 1271 : 
; 1272 : 	//
; 1273 : 	// restore main rotor heading(s)
; 1274 : 	//
; 1275 : 
; 1276 : 	//
; 1277 : 	// restore tail rotor pitch(s)
; 1278 : 	//
; 1279 : 
; 1280 : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5b		 pop	 ebx
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 04 00	 ret	 4
?damage_helicopter_3d_object@@YGXPAUENTITY@@@Z ENDP	; damage_helicopter_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_helicopter_wheels@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_helicopter_wheels@@YGXPAUENTITY@@@Z PROC	; animate_helicopter_wheels, COMDAT

; 1205 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1206 : 	helicopter
; 1207 : 		*raw;
; 1208 : 
; 1209 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_he
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_wheels@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_he:

; 1210 : 
; 1211 : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN7@animate_he
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN8@animate_he
$LN7@animate_he:
  00037	68 bb 04 00 00	 push	 1211			; 000004bbH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN8@animate_he:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN9@animate_he
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN10@animate_he
$LN9@animate_he:
  00066	68 bb 04 00 00	 push	 1211			; 000004bbH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN10@animate_he:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 02		 je	 SHORT $LN3@animate_he

; 1212 : 	{
; 1213 : 		return;

  000a3	eb 2e		 jmp	 SHORT $LN1@animate_he
$LN3@animate_he:

; 1214 : 	}
; 1215 : 
; 1216 : 	if (command_line_dynamics_flight_model != 2)

  000a5	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?command_line_dynamics_flight_model@@3HA, 2 ; command_line_dynamics_flight_model
  000ac	74 02		 je	 SHORT $LN4@animate_he

; 1217 : 		return;

  000ae	eb 23		 jmp	 SHORT $LN1@animate_he
$LN4@animate_he:

; 1218 : 	
; 1219 : 	//
; 1220 : 	// only animate wheels rotation on player's helicopter
; 1221 : 	//
; 1222 : 
; 1223 : 	if (en == get_gunship_entity ())

  000b0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b3	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b9	75 18		 jne	 SHORT $LN1@animate_he

; 1224 : 	{
; 1225 : 		raw = (helicopter *) get_local_entity_data (en);

  000bb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000be	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c1	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1226 : 
; 1227 : 		rotate_helicopter_wheels(raw->ac.inst3d);

  000c4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c7	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000cd	51		 push	 ecx
  000ce	e8 00 00 00 00	 call	 ?rotate_helicopter_wheels@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; rotate_helicopter_wheels
$LN1@animate_he:

; 1228 : 	}
; 1229 : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
?animate_helicopter_wheels@@YGXPAUENTITY@@@Z ENDP	; animate_helicopter_wheels
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_helicopter_suspension@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv93 = -72						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_helicopter_suspension@@YGXPAUENTITY@@@Z PROC	; animate_helicopter_suspension, COMDAT

; 1157 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1158 : 	helicopter
; 1159 : 		*raw;
; 1160 : 
; 1161 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@animate_he
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_suspension@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@animate_he:

; 1162 : 
; 1163 : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN12@animate_he
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN13@animate_he
$LN12@animate_he:
  00037	68 8b 04 00 00	 push	 1163			; 0000048bH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN13@animate_he:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN14@animate_he
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN15@animate_he
$LN14@animate_he:
  00066	68 8b 04 00 00	 push	 1163			; 0000048bH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN15@animate_he:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 02		 je	 SHORT $LN5@animate_he

; 1164 : 	{
; 1165 : 		return;

  000a3	eb 59		 jmp	 SHORT $LN1@animate_he
$LN5@animate_he:

; 1166 : 	}
; 1167 : 
; 1168 : 	if (command_line_dynamics_flight_model != 2)

  000a5	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?command_line_dynamics_flight_model@@3HA, 2 ; command_line_dynamics_flight_model
  000ac	74 02		 je	 SHORT $LN6@animate_he

; 1169 : 		return;

  000ae	eb 4e		 jmp	 SHORT $LN1@animate_he
$LN6@animate_he:

; 1170 : 	
; 1171 : 	//
; 1172 : 	// only animate suspension on player's helicopter
; 1173 : 	//
; 1174 : 
; 1175 : 	if (en == get_gunship_entity ())

  000b0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b3	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b9	75 43		 jne	 SHORT $LN1@animate_he

; 1176 : 	{
; 1177 : 		raw = (helicopter *) get_local_entity_data (en);

  000bb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000be	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c1	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1178 : 
; 1179 : 		switch (raw->ac.object_3d_shape)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c7	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  000cd	89 4d b8	 mov	 DWORD PTR tv93[ebp], ecx
  000d0	83 7d b8 01	 cmp	 DWORD PTR tv93[ebp], 1
  000d4	74 08		 je	 SHORT $LN8@animate_he
  000d6	83 7d b8 08	 cmp	 DWORD PTR tv93[ebp], 8
  000da	74 13		 je	 SHORT $LN9@animate_he
  000dc	eb 20		 jmp	 SHORT $LN1@animate_he
$LN8@animate_he:

; 1180 : 		{
; 1181 : 			case OBJECT_3D_AH64D_APACHE_LONGBOW:
; 1182 : 				{
; 1183 : 					animate_apache_suspension(raw->ac.inst3d);

  000de	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000e1	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 ?animate_apache_suspension@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_apache_suspension

; 1184 : 					break;

  000ed	eb 0f		 jmp	 SHORT $LN1@animate_he
$LN9@animate_he:

; 1185 : 				}
; 1186 : 			case OBJECT_3D_MI24_HIND:
; 1187 : 				{
; 1188 : 					animate_hind_suspension(raw->ac.inst3d);

  000ef	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000f2	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000f8	51		 push	 ecx
  000f9	e8 00 00 00 00	 call	 ?animate_hind_suspension@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_hind_suspension
$LN1@animate_he:

; 1189 : 					break;
; 1190 : 				}
; 1191 : 			default:
; 1192 : 				{
; 1193 : 					break;
; 1194 : 				}
; 1195 : 		}
; 1196 : 	}
; 1197 : }

  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 04 00	 ret	 4
?animate_helicopter_suspension@@YGXPAUENTITY@@@Z ENDP	; animate_helicopter_suspension
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_helicopter_eo@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv92 = -72						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_helicopter_eo@@YGXPAUENTITY@@@Z PROC		; animate_helicopter_eo, COMDAT

; 1071 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1072 : 	helicopter
; 1073 : 		*raw;
; 1074 : 
; 1075 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@animate_he
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_eo@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@animate_he:

; 1076 : 
; 1077 : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN18@animate_he
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN19@animate_he
$LN18@animate_he:
  00037	68 35 04 00 00	 push	 1077			; 00000435H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN19@animate_he:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN20@animate_he
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN21@animate_he
$LN20@animate_he:
  00066	68 35 04 00 00	 push	 1077			; 00000435H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN21@animate_he:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 05		 je	 SHORT $LN5@animate_he

; 1078 : 	{
; 1079 : 		return;

  000a3	e9 2f 01 00 00	 jmp	 $LN1@animate_he
$LN5@animate_he:

; 1080 : 	}
; 1081 : 
; 1082 : 	//
; 1083 : 	// only animate electro-optics on player's helicopter
; 1084 : 	//
; 1085 : 
; 1086 : 	if (en == get_gunship_entity ())

  000a8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b1	0f 85 20 01 00
	00		 jne	 $LN1@animate_he

; 1087 : 	{
; 1088 : 		raw = (helicopter *) get_local_entity_data (en);

  000b7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ba	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bd	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1089 : 
; 1090 : 		switch (raw->ac.object_3d_shape)

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c3	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  000c9	89 4d b8	 mov	 DWORD PTR tv92[ebp], ecx
  000cc	81 7d b8 eb 09
	00 00		 cmp	 DWORD PTR tv92[ebp], 2539 ; 000009ebH
  000d3	7f 2a		 jg	 SHORT $LN22@animate_he
  000d5	81 7d b8 eb 09
	00 00		 cmp	 DWORD PTR tv92[ebp], 2539 ; 000009ebH
  000dc	0f 84 b3 00 00
	00		 je	 $LN13@animate_he
  000e2	8b 55 b8	 mov	 edx, DWORD PTR tv92[ebp]
  000e5	83 ea 01	 sub	 edx, 1
  000e8	89 55 b8	 mov	 DWORD PTR tv92[ebp], edx
  000eb	83 7d b8 07	 cmp	 DWORD PTR tv92[ebp], 7
  000ef	0f 87 e2 00 00
	00		 ja	 $LN1@animate_he
  000f5	8b 45 b8	 mov	 eax, DWORD PTR tv92[ebp]
  000f8	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN24@animate_he[eax*4]
$LN22@animate_he:
  000ff	8b 4d b8	 mov	 ecx, DWORD PTR tv92[ebp]
  00102	81 e9 ef 09 00
	00		 sub	 ecx, 2543		; 000009efH
  00108	89 4d b8	 mov	 DWORD PTR tv92[ebp], ecx
  0010b	81 7d b8 ef 00
	00 00		 cmp	 DWORD PTR tv92[ebp], 239 ; 000000efH
  00112	0f 87 bf 00 00
	00		 ja	 $LN1@animate_he
  00118	8b 55 b8	 mov	 edx, DWORD PTR tv92[ebp]
  0011b	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN23@animate_he[edx]
  00122	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN25@animate_he[eax*4]
$LN7@animate_he:

; 1091 : 		{
; 1092 : 		case OBJECT_3D_AH64D_APACHE_LONGBOW:
; 1093 : 		{
; 1094 : 			animate_apache_eo (raw->ac.inst3d);

  00129	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0012c	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00132	51		 push	 ecx
  00133	e8 00 00 00 00	 call	 ?animate_apache_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_apache_eo

; 1095 : 			break;

  00138	e9 9a 00 00 00	 jmp	 $LN1@animate_he
$LN8@animate_he:

; 1096 : 		}
; 1097 : 		case OBJECT_3D_MI28N_HAVOC:
; 1098 : 		{
; 1099 : 			animate_havoc_eo (raw->ac.inst3d);

  0013d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00140	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00146	51		 push	 ecx
  00147	e8 00 00 00 00	 call	 ?animate_havoc_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_havoc_eo

; 1100 : 			break;

  0014c	e9 86 00 00 00	 jmp	 $LN1@animate_he
$LN9@animate_he:

; 1101 : 		}
; 1102 : 		case OBJECT_3D_RAH66:
; 1103 : 		{
; 1104 : 			animate_comanche_eo (raw->ac.inst3d);

  00151	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00154	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0015a	51		 push	 ecx
  0015b	e8 00 00 00 00	 call	 ?animate_comanche_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_comanche_eo

; 1105 : 			break;

  00160	eb 75		 jmp	 SHORT $LN1@animate_he
$LN10@animate_he:

; 1106 : 		}
; 1107 : 		case OBJECT_3D_KA_52:
; 1108 : 		{
; 1109 : 			animate_hokum_eo (raw->ac.inst3d);

  00162	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00165	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0016b	51		 push	 ecx
  0016c	e8 00 00 00 00	 call	 ?animate_hokum_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_hokum_eo

; 1110 : 			break;

  00171	eb 64		 jmp	 SHORT $LN1@animate_he
$LN11@animate_he:

; 1111 : 		}
; 1112 : 		////Moje 030602 Start
; 1113 : 		case OBJECT_3D_UH60_BLACKHAWK:
; 1114 : 		{
; 1115 : 			animate_blackhawk_eo (raw->ac.inst3d);

  00173	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00176	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0017c	51		 push	 ecx
  0017d	e8 00 00 00 00	 call	 ?animate_blackhawk_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_blackhawk_eo

; 1116 : 			break;

  00182	eb 53		 jmp	 SHORT $LN1@animate_he
$LN12@animate_he:

; 1117 : 		}
; 1118 : 		////Moje 030602 End
; 1119 : 		////Moje 030619 Start
; 1120 : 		case OBJECT_3D_MI24_HIND:
; 1121 : 		{
; 1122 : 			animate_hind_eo (raw->ac.inst3d);

  00184	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00187	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0018d	51		 push	 ecx
  0018e	e8 00 00 00 00	 call	 ?animate_hind_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_hind_eo

; 1123 : 			break;

  00193	eb 42		 jmp	 SHORT $LN1@animate_he
$LN13@animate_he:

; 1124 : 		}
; 1125 : 		////Moje 030619 End
; 1126 : 		////Moje 030816 Start
; 1127 : 		case OBJECT_3D_AH_64A:
; 1128 : 		{
; 1129 : 			animate_ah64a_eo (raw->ac.inst3d);

  00195	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00198	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0019e	51		 push	 ecx
  0019f	e8 00 00 00 00	 call	 ?animate_ah64a_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_ah64a_eo

; 1130 : 			break;

  001a4	eb 31		 jmp	 SHORT $LN1@animate_he
$LN14@animate_he:

; 1131 : 		}
; 1132 : 		case OBJECT_3D_KA_50:
; 1133 : 		{
; 1134 : 			animate_ka50_eo (raw->ac.inst3d);

  001a6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001a9	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001af	51		 push	 ecx
  001b0	e8 00 00 00 00	 call	 ?animate_ka50_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_ka50_eo

; 1135 : 			break;

  001b5	eb 20		 jmp	 SHORT $LN1@animate_he
$LN15@animate_he:

; 1136 : 		}
; 1137 : 		////Moje 030816 End
; 1138 : 		case OBJECT_3D_AH1Z:
; 1139 : 		{
; 1140 : 			animate_viper_eo (raw->ac.inst3d);

  001b7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001ba	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001c0	51		 push	 ecx
  001c1	e8 00 00 00 00	 call	 ?animate_viper_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_viper_eo

; 1141 : 			break;

  001c6	eb 0f		 jmp	 SHORT $LN1@animate_he
$LN16@animate_he:

; 1142 : 		}
; 1143 : 		case OBJECT_3D_OH58D:
; 1144 : 		{
; 1145 : 			animate_kiowa_eo (raw->ac.inst3d);

  001c8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001cb	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001d1	51		 push	 ecx
  001d2	e8 00 00 00 00	 call	 ?animate_kiowa_eo@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_kiowa_eo
$LN1@animate_he:

; 1146 : 			break;
; 1147 : 		}
; 1148 : 		}
; 1149 : 	}
; 1150 : }

  001d7	5f		 pop	 edi
  001d8	5e		 pop	 esi
  001d9	5b		 pop	 ebx
  001da	8b e5		 mov	 esp, ebp
  001dc	5d		 pop	 ebp
  001dd	c2 04 00	 ret	 4
$LN24@animate_he:
  001e0	00 00 00 00	 DD	 $LN7@animate_he
  001e4	00 00 00 00	 DD	 $LN11@animate_he
  001e8	00 00 00 00	 DD	 $LN1@animate_he
  001ec	00 00 00 00	 DD	 $LN1@animate_he
  001f0	00 00 00 00	 DD	 $LN1@animate_he
  001f4	00 00 00 00	 DD	 $LN8@animate_he
  001f8	00 00 00 00	 DD	 $LN1@animate_he
  001fc	00 00 00 00	 DD	 $LN12@animate_he
$LN25@animate_he:
  00200	00 00 00 00	 DD	 $LN14@animate_he
  00204	00 00 00 00	 DD	 $LN10@animate_he
  00208	00 00 00 00	 DD	 $LN16@animate_he
  0020c	00 00 00 00	 DD	 $LN9@animate_he
  00210	00 00 00 00	 DD	 $LN15@animate_he
  00214	00 00 00 00	 DD	 $LN1@animate_he
$LN23@animate_he:
  00218	00		 DB	 0
  00219	05		 DB	 5
  0021a	01		 DB	 1
  0021b	05		 DB	 5
  0021c	05		 DB	 5
  0021d	05		 DB	 5
  0021e	05		 DB	 5
  0021f	02		 DB	 2
  00220	05		 DB	 5
  00221	05		 DB	 5
  00222	03		 DB	 3
  00223	05		 DB	 5
  00224	05		 DB	 5
  00225	05		 DB	 5
  00226	05		 DB	 5
  00227	05		 DB	 5
  00228	05		 DB	 5
  00229	05		 DB	 5
  0022a	05		 DB	 5
  0022b	05		 DB	 5
  0022c	05		 DB	 5
  0022d	05		 DB	 5
  0022e	05		 DB	 5
  0022f	05		 DB	 5
  00230	05		 DB	 5
  00231	05		 DB	 5
  00232	05		 DB	 5
  00233	05		 DB	 5
  00234	05		 DB	 5
  00235	05		 DB	 5
  00236	05		 DB	 5
  00237	05		 DB	 5
  00238	05		 DB	 5
  00239	05		 DB	 5
  0023a	05		 DB	 5
  0023b	05		 DB	 5
  0023c	05		 DB	 5
  0023d	05		 DB	 5
  0023e	05		 DB	 5
  0023f	05		 DB	 5
  00240	05		 DB	 5
  00241	05		 DB	 5
  00242	05		 DB	 5
  00243	05		 DB	 5
  00244	05		 DB	 5
  00245	05		 DB	 5
  00246	05		 DB	 5
  00247	05		 DB	 5
  00248	05		 DB	 5
  00249	05		 DB	 5
  0024a	05		 DB	 5
  0024b	05		 DB	 5
  0024c	05		 DB	 5
  0024d	05		 DB	 5
  0024e	05		 DB	 5
  0024f	05		 DB	 5
  00250	05		 DB	 5
  00251	05		 DB	 5
  00252	05		 DB	 5
  00253	05		 DB	 5
  00254	05		 DB	 5
  00255	05		 DB	 5
  00256	05		 DB	 5
  00257	05		 DB	 5
  00258	05		 DB	 5
  00259	05		 DB	 5
  0025a	05		 DB	 5
  0025b	05		 DB	 5
  0025c	05		 DB	 5
  0025d	05		 DB	 5
  0025e	05		 DB	 5
  0025f	05		 DB	 5
  00260	05		 DB	 5
  00261	05		 DB	 5
  00262	05		 DB	 5
  00263	05		 DB	 5
  00264	05		 DB	 5
  00265	05		 DB	 5
  00266	05		 DB	 5
  00267	05		 DB	 5
  00268	05		 DB	 5
  00269	05		 DB	 5
  0026a	05		 DB	 5
  0026b	05		 DB	 5
  0026c	05		 DB	 5
  0026d	05		 DB	 5
  0026e	05		 DB	 5
  0026f	05		 DB	 5
  00270	05		 DB	 5
  00271	05		 DB	 5
  00272	05		 DB	 5
  00273	05		 DB	 5
  00274	05		 DB	 5
  00275	05		 DB	 5
  00276	05		 DB	 5
  00277	05		 DB	 5
  00278	05		 DB	 5
  00279	05		 DB	 5
  0027a	05		 DB	 5
  0027b	05		 DB	 5
  0027c	05		 DB	 5
  0027d	05		 DB	 5
  0027e	05		 DB	 5
  0027f	05		 DB	 5
  00280	05		 DB	 5
  00281	05		 DB	 5
  00282	05		 DB	 5
  00283	05		 DB	 5
  00284	05		 DB	 5
  00285	05		 DB	 5
  00286	05		 DB	 5
  00287	05		 DB	 5
  00288	05		 DB	 5
  00289	05		 DB	 5
  0028a	05		 DB	 5
  0028b	05		 DB	 5
  0028c	05		 DB	 5
  0028d	05		 DB	 5
  0028e	05		 DB	 5
  0028f	05		 DB	 5
  00290	05		 DB	 5
  00291	05		 DB	 5
  00292	05		 DB	 5
  00293	05		 DB	 5
  00294	05		 DB	 5
  00295	05		 DB	 5
  00296	05		 DB	 5
  00297	05		 DB	 5
  00298	05		 DB	 5
  00299	05		 DB	 5
  0029a	05		 DB	 5
  0029b	05		 DB	 5
  0029c	05		 DB	 5
  0029d	05		 DB	 5
  0029e	05		 DB	 5
  0029f	05		 DB	 5
  002a0	05		 DB	 5
  002a1	05		 DB	 5
  002a2	05		 DB	 5
  002a3	05		 DB	 5
  002a4	05		 DB	 5
  002a5	05		 DB	 5
  002a6	05		 DB	 5
  002a7	05		 DB	 5
  002a8	05		 DB	 5
  002a9	05		 DB	 5
  002aa	05		 DB	 5
  002ab	05		 DB	 5
  002ac	05		 DB	 5
  002ad	05		 DB	 5
  002ae	05		 DB	 5
  002af	05		 DB	 5
  002b0	05		 DB	 5
  002b1	05		 DB	 5
  002b2	05		 DB	 5
  002b3	05		 DB	 5
  002b4	05		 DB	 5
  002b5	05		 DB	 5
  002b6	05		 DB	 5
  002b7	05		 DB	 5
  002b8	05		 DB	 5
  002b9	05		 DB	 5
  002ba	05		 DB	 5
  002bb	05		 DB	 5
  002bc	05		 DB	 5
  002bd	05		 DB	 5
  002be	05		 DB	 5
  002bf	05		 DB	 5
  002c0	05		 DB	 5
  002c1	05		 DB	 5
  002c2	05		 DB	 5
  002c3	05		 DB	 5
  002c4	05		 DB	 5
  002c5	05		 DB	 5
  002c6	05		 DB	 5
  002c7	05		 DB	 5
  002c8	05		 DB	 5
  002c9	05		 DB	 5
  002ca	05		 DB	 5
  002cb	05		 DB	 5
  002cc	05		 DB	 5
  002cd	05		 DB	 5
  002ce	05		 DB	 5
  002cf	05		 DB	 5
  002d0	05		 DB	 5
  002d1	05		 DB	 5
  002d2	05		 DB	 5
  002d3	05		 DB	 5
  002d4	05		 DB	 5
  002d5	05		 DB	 5
  002d6	05		 DB	 5
  002d7	05		 DB	 5
  002d8	05		 DB	 5
  002d9	05		 DB	 5
  002da	05		 DB	 5
  002db	05		 DB	 5
  002dc	05		 DB	 5
  002dd	05		 DB	 5
  002de	05		 DB	 5
  002df	05		 DB	 5
  002e0	05		 DB	 5
  002e1	05		 DB	 5
  002e2	05		 DB	 5
  002e3	05		 DB	 5
  002e4	05		 DB	 5
  002e5	05		 DB	 5
  002e6	05		 DB	 5
  002e7	05		 DB	 5
  002e8	05		 DB	 5
  002e9	05		 DB	 5
  002ea	05		 DB	 5
  002eb	05		 DB	 5
  002ec	05		 DB	 5
  002ed	05		 DB	 5
  002ee	05		 DB	 5
  002ef	05		 DB	 5
  002f0	05		 DB	 5
  002f1	05		 DB	 5
  002f2	05		 DB	 5
  002f3	05		 DB	 5
  002f4	05		 DB	 5
  002f5	05		 DB	 5
  002f6	05		 DB	 5
  002f7	05		 DB	 5
  002f8	05		 DB	 5
  002f9	05		 DB	 5
  002fa	05		 DB	 5
  002fb	05		 DB	 5
  002fc	05		 DB	 5
  002fd	05		 DB	 5
  002fe	05		 DB	 5
  002ff	05		 DB	 5
  00300	05		 DB	 5
  00301	05		 DB	 5
  00302	05		 DB	 5
  00303	05		 DB	 5
  00304	05		 DB	 5
  00305	05		 DB	 5
  00306	05		 DB	 5
  00307	04		 DB	 4
?animate_helicopter_eo@@YGXPAUENTITY@@@Z ENDP		; animate_helicopter_eo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_helicopter_wipers@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv92 = -72						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_helicopter_wipers@@YGXPAUENTITY@@@Z PROC	; animate_helicopter_wipers, COMDAT

; 1000 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1001 : 	helicopter
; 1002 : 		*raw;
; 1003 : 
; 1004 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@animate_he
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_wipers@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@animate_he:

; 1005 : 
; 1006 : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN15@animate_he
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN16@animate_he
$LN15@animate_he:
  00037	68 ee 03 00 00	 push	 1006			; 000003eeH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN16@animate_he:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN17@animate_he
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN18@animate_he
$LN17@animate_he:
  00066	68 ee 03 00 00	 push	 1006			; 000003eeH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN18@animate_he:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 05		 je	 SHORT $LN5@animate_he

; 1007 : 	{
; 1008 : 		return;

  000a3	e9 e0 00 00 00	 jmp	 $LN1@animate_he
$LN5@animate_he:

; 1009 : 	}
; 1010 : 
; 1011 : 	//
; 1012 : 	// only animate wipers on player's helicopter
; 1013 : 	//
; 1014 : 
; 1015 : 	if (en == get_gunship_entity ())

  000a8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b1	0f 85 d1 00 00
	00		 jne	 $LN1@animate_he

; 1016 : 	{
; 1017 : 		raw = (helicopter *) get_local_entity_data (en);

  000b7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ba	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bd	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1018 : 
; 1019 : 		switch (raw->ac.object_3d_shape)

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c3	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  000c9	89 4d b8	 mov	 DWORD PTR tv92[ebp], ecx
  000cc	81 7d b8 eb 09
	00 00		 cmp	 DWORD PTR tv92[ebp], 2539 ; 000009ebH
  000d3	7f 2a		 jg	 SHORT $LN19@animate_he
  000d5	81 7d b8 eb 09
	00 00		 cmp	 DWORD PTR tv92[ebp], 2539 ; 000009ebH
  000dc	0f 84 86 00 00
	00		 je	 $LN12@animate_he
  000e2	8b 55 b8	 mov	 edx, DWORD PTR tv92[ebp]
  000e5	83 ea 01	 sub	 edx, 1
  000e8	89 55 b8	 mov	 DWORD PTR tv92[ebp], edx
  000eb	83 7d b8 07	 cmp	 DWORD PTR tv92[ebp], 7
  000ef	0f 87 93 00 00
	00		 ja	 $LN1@animate_he
  000f5	8b 45 b8	 mov	 eax, DWORD PTR tv92[ebp]
  000f8	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN20@animate_he[eax*4]
$LN19@animate_he:
  000ff	81 7d b8 ef 09
	00 00		 cmp	 DWORD PTR tv92[ebp], 2543 ; 000009efH
  00106	74 71		 je	 SHORT $LN13@animate_he
  00108	81 7d b8 f1 09
	00 00		 cmp	 DWORD PTR tv92[ebp], 2545 ; 000009f1H
  0010f	74 24		 je	 SHORT $LN9@animate_he
  00111	eb 75		 jmp	 SHORT $LN1@animate_he
$LN7@animate_he:

; 1020 : 		{
; 1021 : 		case OBJECT_3D_AH64D_APACHE_LONGBOW:
; 1022 : 		{
; 1023 : 			animate_apache_external_wipers (raw->ac.inst3d);

  00113	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00116	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0011c	51		 push	 ecx
  0011d	e8 00 00 00 00	 call	 ?animate_apache_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_apache_external_wipers

; 1024 : 			break;

  00122	eb 64		 jmp	 SHORT $LN1@animate_he
$LN8@animate_he:

; 1025 : 		}
; 1026 : 		case OBJECT_3D_MI28N_HAVOC:
; 1027 : 		{
; 1028 : 			animate_havoc_external_wipers (raw->ac.inst3d);

  00124	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00127	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0012d	51		 push	 ecx
  0012e	e8 00 00 00 00	 call	 ?animate_havoc_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_havoc_external_wipers

; 1029 : 			break;

  00133	eb 53		 jmp	 SHORT $LN1@animate_he
$LN9@animate_he:

; 1030 : 		}
; 1031 : 		case OBJECT_3D_KA_52:
; 1032 : 		{
; 1033 : 			animate_hokum_wipers (raw->ac.inst3d);

  00135	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00138	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 ?animate_hokum_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_hokum_wipers

; 1034 : 			break;

  00144	eb 42		 jmp	 SHORT $LN1@animate_he
$LN10@animate_he:

; 1035 : 		}
; 1036 : 		////Moje 030602 Start
; 1037 : 		case OBJECT_3D_UH60_BLACKHAWK:
; 1038 : 		{
; 1039 : 			animate_blackhawk_external_wipers (raw->ac.inst3d);

  00146	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00149	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0014f	51		 push	 ecx
  00150	e8 00 00 00 00	 call	 ?animate_blackhawk_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_blackhawk_external_wipers

; 1040 : 			break;

  00155	eb 31		 jmp	 SHORT $LN1@animate_he
$LN11@animate_he:

; 1041 : 		}
; 1042 : 		////Moje 030602 End
; 1043 : 		////Moje 030619 Start
; 1044 : 		case OBJECT_3D_MI24_HIND:
; 1045 : 		{
; 1046 : 			animate_hind_external_wipers (raw->ac.inst3d);

  00157	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0015a	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00160	51		 push	 ecx
  00161	e8 00 00 00 00	 call	 ?animate_hind_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_hind_external_wipers

; 1047 : 			break;

  00166	eb 20		 jmp	 SHORT $LN1@animate_he
$LN12@animate_he:

; 1048 : 		}
; 1049 : 		////Moje 030619 End
; 1050 : 		////Moje 030816 Start
; 1051 : 		case OBJECT_3D_AH_64A:
; 1052 : 		{
; 1053 : 			animate_ah64a_external_wipers (raw->ac.inst3d);

  00168	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016b	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00171	51		 push	 ecx
  00172	e8 00 00 00 00	 call	 ?animate_ah64a_external_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_ah64a_external_wipers

; 1054 : 			break;

  00177	eb 0f		 jmp	 SHORT $LN1@animate_he
$LN13@animate_he:

; 1055 : 		}
; 1056 : 		case OBJECT_3D_KA_50:
; 1057 : 		{
; 1058 : 			animate_ka50_wipers (raw->ac.inst3d);

  00179	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0017c	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00182	51		 push	 ecx
  00183	e8 00 00 00 00	 call	 ?animate_ka50_wipers@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; animate_ka50_wipers
$LN1@animate_he:

; 1059 : 			break;
; 1060 : 		}
; 1061 : 		////Moje 030619 End
; 1062 : 		}
; 1063 : 	}
; 1064 : }

  00188	5f		 pop	 edi
  00189	5e		 pop	 esi
  0018a	5b		 pop	 ebx
  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c2 04 00	 ret	 4
  00191	0f 1f 00	 npad	 3
$LN20@animate_he:
  00194	00 00 00 00	 DD	 $LN7@animate_he
  00198	00 00 00 00	 DD	 $LN10@animate_he
  0019c	00 00 00 00	 DD	 $LN1@animate_he
  001a0	00 00 00 00	 DD	 $LN1@animate_he
  001a4	00 00 00 00	 DD	 $LN1@animate_he
  001a8	00 00 00 00	 DD	 $LN8@animate_he
  001ac	00 00 00 00	 DD	 $LN1@animate_he
  001b0	00 00 00 00	 DD	 $LN11@animate_he
?animate_helicopter_wipers@@YGXPAUENTITY@@@Z ENDP	; animate_helicopter_wipers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv197 = -160						; size = 8
tv169 = -160						; size = 8
tv253 = -152						; size = 4
tv234 = -152						; size = 4
tv215 = -152						; size = 4
tv198 = -152						; size = 8
tv186 = -152						; size = 4
tv170 = -152						; size = 8
tv149 = -152						; size = 4
tv93 = -152						; size = 4
tv246 = -148						; size = 4
tv227 = -148						; size = 4
tv208 = -148						; size = 4
tv178 = -148						; size = 4
tv141 = -148						; size = 4
tv86 = -148						; size = 4
tv75 = -148						; size = 4
_tail_rotor_delta_pitch$ = -80				; size = 4
_tail_rotor_rpm$ = -76					; size = 4
_tail_rotor_direction$ = -72				; size = 4
_depth$ = -68						; size = 4
_search$ = -64						; size = 56
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z PROC	; animate_helicopter_tail_rotor, COMDAT

; 807  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 808  : 	helicopter
; 809  : 		*raw;
; 810  : 
; 811  : 	object_3d_instance
; 812  : 		*inst3d;
; 813  : 
; 814  : 	object_3d_sub_object_search_data
; 815  : 		search;
; 816  : 
; 817  : 	int
; 818  : 		depth;
; 819  : 
; 820  : 	float
; 821  : 		tail_rotor_direction,
; 822  : 		tail_rotor_rpm,
; 823  : 		tail_rotor_delta_pitch;
; 824  : 
; 825  : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN10@animate_he
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 12	 add	 eax, 18			; 00000012H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@animate_he:

; 826  : 
; 827  : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN32@animate_he
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN33@animate_he
$LN32@animate_he:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
  00043	83 c2 14	 add	 edx, 20			; 00000014H
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN33@animate_he:
  00061	83 bd 6c ff ff
	ff 0e		 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  00068	74 18		 je	 SHORT $LN11@animate_he
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
  0006f	83 c0 14	 add	 eax, 20			; 00000014H
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@animate_he:

; 828  : 
; 829  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00082	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00086	74 0d		 je	 SHORT $LN34@animate_he
  00088	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  00093	eb 20		 jmp	 SHORT $LN35@animate_he
$LN34@animate_he:
  00095	68 3d 03 00 00	 push	 829			; 0000033dH
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a5	52		 push	 edx
  000a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ab	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN35@animate_he:
  000b5	b8 01 00 00 00	 mov	 eax, 1
  000ba	85 c0		 test	 eax, eax
  000bc	74 0c		 je	 SHORT $LN36@animate_he
  000be	c7 85 68 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv93[ebp], 147 ; 00000093H
  000c8	eb 20		 jmp	 SHORT $LN37@animate_he
$LN36@animate_he:
  000ca	68 3d 03 00 00	 push	 829			; 0000033dH
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e0	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN37@animate_he:
  000ea	68 93 00 00 00	 push	 147			; 00000093H
  000ef	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000f2	52		 push	 edx
  000f3	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv86[ebp], 1116
  000fd	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  00103	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0010a	ff d2		 call	 edx
  0010c	85 c0		 test	 eax, eax
  0010e	74 05		 je	 SHORT $LN12@animate_he

; 830  : 	{
; 831  : 		return;

  00110	e9 ca 06 00 00	 jmp	 $LN1@animate_he
$LN12@animate_he:

; 832  : 	}
; 833  : 
; 834  : 	raw = (helicopter *) get_local_entity_data (en);

  00115	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00118	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0011b	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 835  : 
; 836  : 	inst3d = raw->ac.inst3d;

  0011e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00121	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00127	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 837  : 
; 838  : 	tail_rotor_direction = get_local_entity_float_value (en, FLOAT_TYPE_TAIL_ROTOR_DIRECTION);

  0012a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0012e	74 0d		 je	 SHORT $LN38@animate_he
  00130	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00133	8b 08		 mov	 ecx, DWORD PTR [eax]
  00135	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv141[ebp], ecx
  0013b	eb 24		 jmp	 SHORT $LN39@animate_he
$LN38@animate_he:
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
  00143	83 c2 1f	 add	 edx, 31			; 0000001fH
  00146	52		 push	 edx
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00157	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN39@animate_he:
  00161	b9 01 00 00 00	 mov	 ecx, 1
  00166	85 c9		 test	 ecx, ecx
  00168	74 0c		 je	 SHORT $LN40@animate_he
  0016a	c7 85 68 ff ff
	ff 80 00 00 00	 mov	 DWORD PTR tv149[ebp], 128 ; 00000080H
  00174	eb 24		 jmp	 SHORT $LN41@animate_he
$LN40@animate_he:
  00176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
  0017c	83 c2 1f	 add	 edx, 31			; 0000001fH
  0017f	52		 push	 edx
  00180	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00185	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00190	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv149[ebp], 0
$LN41@animate_he:
  0019a	68 80 00 00 00	 push	 128			; 00000080H
  0019f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a2	51		 push	 ecx
  001a3	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv141[ebp], 700
  001ad	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv149[ebp]
  001b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001ba	ff d1		 call	 ecx
  001bc	d9 5d b8	 fstp	 DWORD PTR _tail_rotor_direction$[ebp]

; 839  : 
; 840  : 	//
; 841  : 	// tail rotor articulation test
; 842  : 	//
; 843  : 
; 844  : 	if ((in_flight_articulation_test) && (get_external_view_entity () == en))

  001bf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  001c6	0f 84 d9 00 00
	00		 je	 $LN13@animate_he
  001cc	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  001d1	3b 45 08	 cmp	 eax, DWORD PTR _en$[ebp]
  001d4	0f 85 cb 00 00
	00		 jne	 $LN13@animate_he

; 845  : 	{
; 846  : 		static float
; 847  : 			test_tail_rotor_inc = 2.0,
; 848  : 			test_tail_rotor_rpm = 0.0;
; 849  : 
; 850  : 		test_tail_rotor_rpm += test_tail_rotor_inc;

  001da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  001e2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?test_tail_rotor_inc@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  001ea	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA, xmm0

; 851  : 
; 852  : 		//
; 853  : 		// whilst test_tail_rotor_rpm < 0.0 the tail rotor blades are stationary
; 854  : 		//
; 855  : 
; 856  : 		if ((test_tail_rotor_rpm <= -10.0) || (test_tail_rotor_rpm >= 100.0))

  001f2	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  001fa	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c024000000000000
  00202	66 0f 2f c8	 comisd	 xmm1, xmm0
  00206	73 12		 jae	 SHORT $LN16@animate_he
  00208	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  00210	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  00218	72 17		 jb	 SHORT $LN15@animate_he
$LN16@animate_he:

; 857  : 		{
; 858  : 			test_tail_rotor_inc = -test_tail_rotor_inc;

  0021a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?test_tail_rotor_inc@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  00222	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00229	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_tail_rotor_inc@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA, xmm0
$LN15@animate_he:

; 859  : 		}
; 860  : 
; 861  : 		tail_rotor_rpm = bound (test_tail_rotor_rpm, 0.0, 100.0);

  00231	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  00239	0f 57 c9	 xorps	 xmm1, xmm1
  0023c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00240	76 0d		 jbe	 SHORT $LN44@animate_he
  00242	0f 57 c0	 xorps	 xmm0, xmm0
  00245	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv170[ebp], xmm0
  0024d	eb 44		 jmp	 SHORT $LN45@animate_he
$LN44@animate_he:
  0024f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  00257	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  0025f	76 12		 jbe	 SHORT $LN42@animate_he
  00261	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  00269	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv169[ebp], xmm0
  00271	eb 10		 jmp	 SHORT $LN43@animate_he
$LN42@animate_he:
  00273	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_tail_rotor_rpm@?M@??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4MA
  0027b	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv169[ebp], xmm0
$LN43@animate_he:
  00283	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv169[ebp]
  0028b	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv170[ebp], xmm0
$LN45@animate_he:
  00293	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv170[ebp]
  0029b	f3 0f 11 45 b4	 movss	 DWORD PTR _tail_rotor_rpm$[ebp], xmm0

; 862  : 	}
; 863  : 	else

  002a0	e9 95 00 00 00	 jmp	 $LN14@animate_he
$LN13@animate_he:

; 864  : 	{
; 865  : 		tail_rotor_rpm = get_local_entity_float_value (en, FLOAT_TYPE_TAIL_ROTOR_RPM);

  002a5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002a9	74 0d		 je	 SHORT $LN46@animate_he
  002ab	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b0	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv178[ebp], ecx
  002b6	eb 24		 jmp	 SHORT $LN47@animate_he
$LN46@animate_he:
  002b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
  002be	83 c2 3a	 add	 edx, 58			; 0000003aH
  002c1	52		 push	 edx
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002cc	50		 push	 eax
  002cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d2	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN47@animate_he:
  002dc	b9 01 00 00 00	 mov	 ecx, 1
  002e1	85 c9		 test	 ecx, ecx
  002e3	74 0c		 je	 SHORT $LN48@animate_he
  002e5	c7 85 68 ff ff
	ff 81 00 00 00	 mov	 DWORD PTR tv186[ebp], 129 ; 00000081H
  002ef	eb 24		 jmp	 SHORT $LN49@animate_he
$LN48@animate_he:
  002f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z@4JA
  002f7	83 c2 3a	 add	 edx, 58			; 0000003aH
  002fa	52		 push	 edx
  002fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00300	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030b	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv186[ebp], 0
$LN49@animate_he:
  00315	68 81 00 00 00	 push	 129			; 00000081H
  0031a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0031d	51		 push	 ecx
  0031e	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv178[ebp], 700
  00328	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv186[ebp]
  0032e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00335	ff d1		 call	 ecx
  00337	d9 5d b4	 fstp	 DWORD PTR _tail_rotor_rpm$[ebp]
$LN14@animate_he:

; 866  : 	}
; 867  : 
; 868  : 	tail_rotor_rpm = bound (tail_rotor_rpm, 0.0, 100.0);

  0033a	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _tail_rotor_rpm$[ebp]
  0033f	0f 57 c9	 xorps	 xmm1, xmm1
  00342	66 0f 2f c8	 comisd	 xmm1, xmm0
  00346	76 0d		 jbe	 SHORT $LN52@animate_he
  00348	0f 57 c0	 xorps	 xmm0, xmm0
  0034b	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv198[ebp], xmm0
  00353	eb 3e		 jmp	 SHORT $LN53@animate_he
$LN52@animate_he:
  00355	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _tail_rotor_rpm$[ebp]
  0035a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  00362	76 12		 jbe	 SHORT $LN50@animate_he
  00364	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  0036c	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv197[ebp], xmm0
  00374	eb 0d		 jmp	 SHORT $LN51@animate_he
$LN50@animate_he:
  00376	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _tail_rotor_rpm$[ebp]
  0037b	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv197[ebp], xmm0
$LN51@animate_he:
  00383	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv197[ebp]
  0038b	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv198[ebp], xmm0
$LN53@animate_he:
  00393	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv198[ebp]
  0039b	f3 0f 11 45 b4	 movss	 DWORD PTR _tail_rotor_rpm$[ebp], xmm0

; 869  : 
; 870  : 	tail_rotor_delta_pitch = 0.0;

  003a0	0f 57 c0	 xorps	 xmm0, xmm0
  003a3	f3 0f 11 45 b0	 movss	 DWORD PTR _tail_rotor_delta_pitch$[ebp], xmm0

; 871  : 
; 872  : 	if ((tail_rotor_rpm < TAIL_ROTOR_RPM_MOTION_BLUR_THRESHOLD) &&

  003a8	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _tail_rotor_rpm$[ebp]
  003ad	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4039000000000000
  003b5	66 0f 2f c8	 comisd	 xmm1, xmm0
  003b9	0f 86 ff 02 00
	00		 jbe	 $LN17@animate_he
  003bf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003c2	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  003c8	0f 84 b9 01 00
	00		 je	 $LN20@animate_he
  003ce	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003d2	74 0d		 je	 SHORT $LN54@animate_he
  003d4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d9	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv208[ebp], ecx
  003df	eb 20		 jmp	 SHORT $LN55@animate_he
$LN54@animate_he:
  003e1	68 69 03 00 00	 push	 873			; 00000369H
  003e6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003f1	52		 push	 edx
  003f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f7	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN55@animate_he:
  00401	b8 01 00 00 00	 mov	 eax, 1
  00406	85 c0		 test	 eax, eax
  00408	74 0c		 je	 SHORT $LN56@animate_he
  0040a	c7 85 68 ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv215[ebp], 151 ; 00000097H
  00414	eb 20		 jmp	 SHORT $LN57@animate_he
$LN56@animate_he:
  00416	68 69 03 00 00	 push	 873			; 00000369H
  0041b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00420	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00426	51		 push	 ecx
  00427	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042c	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv215[ebp], 0
$LN57@animate_he:
  00436	68 97 00 00 00	 push	 151			; 00000097H
  0043b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0043e	52		 push	 edx
  0043f	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv208[ebp], 1116
  00449	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv215[ebp]
  0044f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00456	ff d2		 call	 edx
  00458	83 f8 05	 cmp	 eax, 5
  0045b	0f 84 26 01 00
	00		 je	 $LN20@animate_he
  00461	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00465	74 0d		 je	 SHORT $LN58@animate_he
  00467	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0046a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046c	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv227[ebp], ecx
  00472	eb 20		 jmp	 SHORT $LN59@animate_he
$LN58@animate_he:
  00474	68 6a 03 00 00	 push	 874			; 0000036aH
  00479	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0047e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00484	52		 push	 edx
  00485	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0048a	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv227[ebp], 0
$LN59@animate_he:
  00494	b8 01 00 00 00	 mov	 eax, 1
  00499	85 c0		 test	 eax, eax
  0049b	74 0c		 je	 SHORT $LN60@animate_he
  0049d	c7 85 68 ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv234[ebp], 151 ; 00000097H
  004a7	eb 20		 jmp	 SHORT $LN61@animate_he
$LN60@animate_he:
  004a9	68 6a 03 00 00	 push	 874			; 0000036aH
  004ae	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004b9	51		 push	 ecx
  004ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004bf	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN61@animate_he:
  004c9	68 97 00 00 00	 push	 151			; 00000097H
  004ce	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004d1	52		 push	 edx
  004d2	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv227[ebp], 1116
  004dc	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv234[ebp]
  004e2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004e9	ff d2		 call	 edx
  004eb	83 f8 04	 cmp	 eax, 4
  004ee	0f 84 93 00 00
	00		 je	 $LN20@animate_he
  004f4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004f8	74 0d		 je	 SHORT $LN62@animate_he
  004fa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ff	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv246[ebp], ecx
  00505	eb 20		 jmp	 SHORT $LN63@animate_he
$LN62@animate_he:
  00507	68 6b 03 00 00	 push	 875			; 0000036bH
  0050c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00511	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00517	52		 push	 edx
  00518	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051d	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv246[ebp], 0
$LN63@animate_he:
  00527	b8 01 00 00 00	 mov	 eax, 1
  0052c	85 c0		 test	 eax, eax
  0052e	74 0c		 je	 SHORT $LN64@animate_he
  00530	c7 85 68 ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv253[ebp], 151 ; 00000097H
  0053a	eb 20		 jmp	 SHORT $LN65@animate_he
$LN64@animate_he:
  0053c	68 6b 03 00 00	 push	 875			; 0000036bH
  00541	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00546	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0054c	51		 push	 ecx
  0054d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00552	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv253[ebp], 0
$LN65@animate_he:
  0055c	68 97 00 00 00	 push	 151			; 00000097H
  00561	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00564	52		 push	 edx
  00565	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv246[ebp], 1116
  0056f	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv253[ebp]
  00575	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0057c	ff d2		 call	 edx
  0057e	83 f8 09	 cmp	 eax, 9
  00581	0f 85 37 01 00
	00		 jne	 $LN17@animate_he
$LN20@animate_he:

; 873  : 		((en == get_gunship_entity ()) || ((get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_LANDING) ||
; 874  : 		(get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_LANDED) ||
; 875  : 		(get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_TAKEOFF))))
; 876  : 	{
; 877  :   		if (get_time_acceleration () != TIME_ACCELERATION_PAUSE)

  00587	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  0058c	85 c0		 test	 eax, eax
  0058e	74 33		 je	 SHORT $LN21@animate_he

; 878  : 		{
; 879  : 			tail_rotor_delta_pitch = rad (180.0) * tail_rotor_rpm * (1.0 / TAIL_ROTOR_RPM_MOTION_BLUR_THRESHOLD) * tail_rotor_direction * get_delta_time ();

  00590	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _tail_rotor_rpm$[ebp]
  00595	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb51000000
  0059d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  005a5	f3 0f 5a 4d b8	 cvtss2sd xmm1, DWORD PTR _tail_rotor_direction$[ebp]
  005aa	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  005ae	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  005b6	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  005ba	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005be	f3 0f 11 45 b0	 movss	 DWORD PTR _tail_rotor_delta_pitch$[ebp], xmm0
$LN21@animate_he:

; 880  : 		}
; 881  : 
; 882  : 		//
; 883  : 		// disable moving tail rotor and set pitch (to keep in sync with static tail rotor)
; 884  : 		//
; 885  : 
; 886  : 		depth = 0;

  005c3	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN2@animate_he:

; 887  : 
; 888  : 		while (TRUE)

  005ca	b8 01 00 00 00	 mov	 eax, 1
  005cf	85 c0		 test	 eax, eax
  005d1	74 6b		 je	 SHORT $LN3@animate_he

; 889  : 		{
; 890  : 			search.search_depth = depth;

  005d3	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  005d6	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 891  : 			search.search_object = inst3d;

  005d9	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  005dc	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 892  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_MOVING;

  005df	c7 45 cc 14 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 20 ; 00000014H

; 893  : 
; 894  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  005e6	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  005e9	50		 push	 eax
  005ea	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  005ef	83 f8 01	 cmp	 eax, 1
  005f2	75 3d		 jne	 SHORT $LN22@animate_he

; 895  : 			{
; 896  : 				search.result_sub_object->visible_object = FALSE;

  005f4	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  005f7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  005fa	83 e1 fe	 and	 ecx, -2			; fffffffeH
  005fd	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  00600	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 897  : 
; 898  : 				search.result_sub_object->relative_pitch = wrap_angle (search.result_sub_object->relative_pitch + tail_rotor_delta_pitch);

  00603	51		 push	 ecx
  00604	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  0060c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00611	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  00614	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00619	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _tail_rotor_delta_pitch$[ebp]
  0061e	51		 push	 ecx
  0061f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00624	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  00629	8b 4d c4	 mov	 ecx, DWORD PTR _search$[ebp+4]
  0062c	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 899  : 			}
; 900  : 			else

  0062f	eb 02		 jmp	 SHORT $LN23@animate_he
$LN22@animate_he:

; 901  : 			{
; 902  : 				break;

  00631	eb 0b		 jmp	 SHORT $LN3@animate_he
$LN23@animate_he:

; 903  : 			}
; 904  : 
; 905  : 			depth++;

  00633	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  00636	83 c0 01	 add	 eax, 1
  00639	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 906  : 		}

  0063c	eb 8c		 jmp	 SHORT $LN2@animate_he
$LN3@animate_he:

; 907  : 
; 908  : 		//
; 909  : 		// enable static tail rotor and set pitch
; 910  : 		//
; 911  : 
; 912  : 		depth = 0;

  0063e	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN4@animate_he:

; 913  : 
; 914  : 		while (TRUE)

  00645	b8 01 00 00 00	 mov	 eax, 1
  0064a	85 c0		 test	 eax, eax
  0064c	74 6b		 je	 SHORT $LN5@animate_he

; 915  : 		{
; 916  : 			search.search_depth = depth;

  0064e	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  00651	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 917  : 			search.search_object = inst3d;

  00654	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00657	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 918  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_STATIC;

  0065a	c7 45 cc 13 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 19 ; 00000013H

; 919  : 
; 920  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00661	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  00664	50		 push	 eax
  00665	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0066a	83 f8 01	 cmp	 eax, 1
  0066d	75 3d		 jne	 SHORT $LN24@animate_he

; 921  : 			{
; 922  : 				search.result_sub_object->visible_object = TRUE;

  0066f	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  00672	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00675	83 c9 01	 or	 ecx, 1
  00678	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  0067b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 923  : 
; 924  : 				search.result_sub_object->relative_pitch = wrap_angle (search.result_sub_object->relative_pitch + tail_rotor_delta_pitch);

  0067e	51		 push	 ecx
  0067f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  00687	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068c	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  0068f	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00694	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _tail_rotor_delta_pitch$[ebp]
  00699	51		 push	 ecx
  0069a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069f	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  006a4	8b 4d c4	 mov	 ecx, DWORD PTR _search$[ebp+4]
  006a7	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 925  : 			}
; 926  : 			else

  006aa	eb 02		 jmp	 SHORT $LN25@animate_he
$LN24@animate_he:

; 927  : 			{
; 928  : 				break;

  006ac	eb 0b		 jmp	 SHORT $LN5@animate_he
$LN25@animate_he:

; 929  : 			}
; 930  : 
; 931  : 			depth++;

  006ae	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  006b1	83 c0 01	 add	 eax, 1
  006b4	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 932  : 		}

  006b7	eb 8c		 jmp	 SHORT $LN4@animate_he
$LN5@animate_he:

; 933  : 	}
; 934  : 	else

  006b9	e9 21 01 00 00	 jmp	 $LN9@animate_he
$LN17@animate_he:

; 935  : 	{
; 936  :   		if (get_time_acceleration () != TIME_ACCELERATION_PAUSE)

  006be	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  006c3	85 c0		 test	 eax, eax
  006c5	74 22		 je	 SHORT $LN26@animate_he

; 937  : 		{
; 938  : 			tail_rotor_delta_pitch = rad (180.0) * tail_rotor_direction * get_delta_time ();

  006c7	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _tail_rotor_direction$[ebp]
  006cc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb51000000
  006d4	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  006dc	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  006e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006e4	f3 0f 11 45 b0	 movss	 DWORD PTR _tail_rotor_delta_pitch$[ebp], xmm0
$LN26@animate_he:

; 939  : 		}
; 940  : 
; 941  : 		//
; 942  : 		// disable static tail rotor and set pitch (to keep in sync with moving tail rotor)
; 943  : 		//
; 944  : 
; 945  : 		depth = 0;

  006e9	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN6@animate_he:

; 946  : 
; 947  : 		while (TRUE)

  006f0	b8 01 00 00 00	 mov	 eax, 1
  006f5	85 c0		 test	 eax, eax
  006f7	74 6b		 je	 SHORT $LN7@animate_he

; 948  : 		{
; 949  : 			search.search_depth = depth;

  006f9	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  006fc	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 950  : 			search.search_object = inst3d;

  006ff	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00702	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 951  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_STATIC;

  00705	c7 45 cc 13 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 19 ; 00000013H

; 952  : 
; 953  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0070c	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  0070f	50		 push	 eax
  00710	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00715	83 f8 01	 cmp	 eax, 1
  00718	75 3d		 jne	 SHORT $LN27@animate_he

; 954  : 			{
; 955  : 				search.result_sub_object->visible_object = FALSE;

  0071a	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  0071d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00720	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00723	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  00726	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 956  : 
; 957  : 				search.result_sub_object->relative_pitch = wrap_angle (search.result_sub_object->relative_pitch + tail_rotor_delta_pitch);

  00729	51		 push	 ecx
  0072a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  00732	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00737	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  0073a	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0073f	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _tail_rotor_delta_pitch$[ebp]
  00744	51		 push	 ecx
  00745	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0074a	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  0074f	8b 4d c4	 mov	 ecx, DWORD PTR _search$[ebp+4]
  00752	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 958  : 			}
; 959  : 			else

  00755	eb 02		 jmp	 SHORT $LN28@animate_he
$LN27@animate_he:

; 960  : 			{
; 961  : 				break;

  00757	eb 0b		 jmp	 SHORT $LN7@animate_he
$LN28@animate_he:

; 962  : 			}
; 963  : 
; 964  : 			depth++;

  00759	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  0075c	83 c0 01	 add	 eax, 1
  0075f	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 965  : 		}

  00762	eb 8c		 jmp	 SHORT $LN6@animate_he
$LN7@animate_he:

; 966  : 
; 967  : 		//
; 968  : 		// enable moving tail rotor and set pitch
; 969  : 		//
; 970  : 
; 971  : 		depth = 0;

  00764	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN8@animate_he:

; 972  : 
; 973  : 		while (TRUE)

  0076b	b8 01 00 00 00	 mov	 eax, 1
  00770	85 c0		 test	 eax, eax
  00772	74 6b		 je	 SHORT $LN9@animate_he

; 974  : 		{
; 975  : 			search.search_depth = depth;

  00774	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  00777	89 45 c8	 mov	 DWORD PTR _search$[ebp+8], eax

; 976  : 			search.search_object = inst3d;

  0077a	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0077d	89 45 c0	 mov	 DWORD PTR _search$[ebp], eax

; 977  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_TAIL_ROTOR_MOVING;

  00780	c7 45 cc 14 00
	00 00		 mov	 DWORD PTR _search$[ebp+12], 20 ; 00000014H

; 978  : 
; 979  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00787	8d 45 c0	 lea	 eax, DWORD PTR _search$[ebp]
  0078a	50		 push	 eax
  0078b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00790	83 f8 01	 cmp	 eax, 1
  00793	75 3d		 jne	 SHORT $LN29@animate_he

; 980  : 			{
; 981  : 				search.result_sub_object->visible_object = TRUE;

  00795	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  00798	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0079b	83 c9 01	 or	 ecx, 1
  0079e	8b 55 c4	 mov	 edx, DWORD PTR _search$[ebp+4]
  007a1	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 982  : 
; 983  : 				search.result_sub_object->relative_pitch = wrap_angle (search.result_sub_object->relative_pitch + tail_rotor_delta_pitch);

  007a4	51		 push	 ecx
  007a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  007ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b2	8b 45 c4	 mov	 eax, DWORD PTR _search$[ebp+4]
  007b5	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  007ba	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _tail_rotor_delta_pitch$[ebp]
  007bf	51		 push	 ecx
  007c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007c5	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  007ca	8b 4d c4	 mov	 ecx, DWORD PTR _search$[ebp+4]
  007cd	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 984  : 			}
; 985  : 			else

  007d0	eb 02		 jmp	 SHORT $LN30@animate_he
$LN29@animate_he:

; 986  : 			{
; 987  : 				break;

  007d2	eb 0b		 jmp	 SHORT $LN9@animate_he
$LN30@animate_he:

; 988  : 			}
; 989  : 
; 990  : 			depth++;

  007d4	8b 45 bc	 mov	 eax, DWORD PTR _depth$[ebp]
  007d7	83 c0 01	 add	 eax, 1
  007da	89 45 bc	 mov	 DWORD PTR _depth$[ebp], eax

; 991  : 		}

  007dd	eb 8c		 jmp	 SHORT $LN8@animate_he
$LN9@animate_he:
$LN1@animate_he:

; 992  : 	}
; 993  : }

  007df	5f		 pop	 edi
  007e0	5e		 pop	 esi
  007e1	5b		 pop	 ebx
  007e2	8b e5		 mov	 esp, ebp
  007e4	5d		 pop	 ebp
  007e5	c2 04 00	 ret	 4
?animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z ENDP	; animate_helicopter_tail_rotor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z
_TEXT	SEGMENT
tv75 = -76						; size = 4
_tmp$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_virtual_cockpit_main_rotor_inst3d$ = 12		; size = 4
?animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z PROC ; animate_helicopter_virtual_cockpit_main_rotors, COMDAT

; 771  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 772  : 	helicopter
; 773  : 		*raw;
; 774  : 
; 775  : 	object_3d_instance
; 776  : 		*tmp;
; 777  : 
; 778  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_he
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_he:

; 779  : 
; 780  : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN8@animate_he
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b4	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN9@animate_he
$LN8@animate_he:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z@4JA
  0003d	83 c2 09	 add	 edx, 9
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@animate_he:
  00058	83 7d b4 0e	 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  0005c	74 18		 je	 SHORT $LN3@animate_he
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z@4JA
  00063	83 c0 09	 add	 eax, 9
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@animate_he:

; 781  : 
; 782  : 	ASSERT (virtual_cockpit_main_rotor_inst3d);

  00076	83 7d 0c 00	 cmp	 DWORD PTR _virtual_cockpit_main_rotor_inst3d$[ebp], 0
  0007a	75 18		 jne	 SHORT $LN4@animate_he
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z@4JA
  00081	83 c0 0b	 add	 eax, 11			; 0000000bH
  00084	50		 push	 eax
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MKOBILCB@virtual_cockpit_main_rotor_inst@
  0008f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@animate_he:

; 783  : 
; 784  : 	raw = (helicopter *) get_local_entity_data (en);

  00094	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00097	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009a	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 785  : 
; 786  : 	tmp = raw->ac.inst3d;

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a0	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000a6	89 4d f8	 mov	 DWORD PTR _tmp$[ebp], ecx

; 787  : 
; 788  : 	raw->ac.inst3d = virtual_cockpit_main_rotor_inst3d;

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ac	8b 4d 0c	 mov	 ecx, DWORD PTR _virtual_cockpit_main_rotor_inst3d$[ebp]
  000af	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx

; 789  : 
; 790  : 	if (raw->main_rotor_damaged)

  000b5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b8	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  000be	c1 e9 03	 shr	 ecx, 3
  000c1	83 e1 01	 and	 ecx, 1
  000c4	74 0d		 je	 SHORT $LN5@animate_he

; 791  : 	{
; 792  : 		animate_damaged_helicopter_main_rotors (en, TRUE);

  000c6	6a 01		 push	 1
  000c8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z ; animate_damaged_helicopter_main_rotors

; 793  : 	}
; 794  : 	else

  000d1	eb 0d		 jmp	 SHORT $LN6@animate_he
$LN5@animate_he:

; 795  : 	{
; 796  : 		animate_helicopter_main_rotors (en, TRUE, TRUE);

  000d3	6a 01		 push	 1
  000d5	6a 01		 push	 1
  000d7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z ; animate_helicopter_main_rotors
$LN6@animate_he:

; 797  : 	}
; 798  : 
; 799  : 	raw->ac.inst3d = tmp;

  000e0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000e3	8b 4d f8	 mov	 ecx, DWORD PTR _tmp$[ebp]
  000e6	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx

; 800  : }

  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 08 00	 ret	 8
?animate_helicopter_virtual_cockpit_main_rotors@@YGXPAUENTITY@@PAUOBJECT_3D_INSTANCE@@@Z ENDP ; animate_helicopter_virtual_cockpit_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z
_TEXT	SEGMENT
tv203 = -480						; size = 8
tv543 = -476						; size = 4
tv528 = -476						; size = 4
tv301 = -472						; size = 4
tv267 = -472						; size = 4
tv245 = -472						; size = 4
tv223 = -472						; size = 4
tv204 = -472						; size = 8
tv192 = -472						; size = 4
tv172 = -472						; size = 4
tv152 = -472						; size = 4
tv128 = -472						; size = 4
tv378 = -468						; size = 4
tv293 = -468						; size = 4
tv259 = -468						; size = 4
tv237 = -468						; size = 4
tv215 = -468						; size = 4
tv184 = -468						; size = 4
tv164 = -468						; size = 4
tv144 = -468						; size = 4
tv89 = -468						; size = 4
tv75 = -468						; size = 4
$T1 = -464						; size = 4
_main_rotor_blade_random_droop_angle$ = -396		; size = 4
_main_rotor_blade_droop_angle$ = -392			; size = 4
_main_rotor_blade_coning_angle$ = -388			; size = 4
_main_rotor_delta_heading$ = -384			; size = 4
_main_rotor_roll$ = -380				; size = 4
_main_rotor_pitch$ = -376				; size = 4
_main_rotor_rpm$ = -372					; size = 4
_main_rotor_direction$ = -368				; size = 4
_ejected$ = -364					; size = 4
_search_main_rotor_blade_section_static_depth$ = -360	; size = 4
_search_main_rotor_blade_root_static_depth$ = -356	; size = 4
_search_main_rotor_shaft_depth$ = -352			; size = 4
_seed$ = -348						; size = 4
_search_main_rotor_hub$ = -344				; size = 56
_search_main_rotor_blade_section_static$ = -288		; size = 56
_search_main_rotor_blade_root_static$ = -232		; size = 56
_search_main_rotor_heading_null$ = -176			; size = 56
_search_main_rotor_pitch_bank_null$ = -120		; size = 56
_search_main_rotor_shaft$ = -64				; size = 56
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_ignore_drawn_once$ = 12				; size = 4
?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z PROC ; animate_damaged_helicopter_main_rotors, COMDAT

; 548  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e0 01 00
	00		 sub	 esp, 480		; 000001e0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 549  : 	helicopter
; 550  : 		*raw;
; 551  : 
; 552  : 	object_3d_instance
; 553  : 		*inst3d;
; 554  : 
; 555  : 	object_3d_sub_object_search_data
; 556  : 		search_main_rotor_shaft,
; 557  : 		search_main_rotor_pitch_bank_null,
; 558  : 		search_main_rotor_heading_null,
; 559  : 		search_main_rotor_blade_root_static,
; 560  : 		search_main_rotor_blade_section_static,
; 561  : 		search_main_rotor_hub;
; 562  : 
; 563  : 	int
; 564  : 		seed,
; 565  : 		search_main_rotor_shaft_depth,
; 566  : 		search_main_rotor_blade_root_static_depth,
; 567  : 		search_main_rotor_blade_section_static_depth,
; 568  : 		ejected;
; 569  : 
; 570  : 	float
; 571  : 		main_rotor_direction,
; 572  : 		main_rotor_rpm,
; 573  : 		main_rotor_pitch,
; 574  : 		main_rotor_roll,
; 575  : 		main_rotor_delta_heading,
; 576  : 		main_rotor_blade_coning_angle,
; 577  : 		main_rotor_blade_droop_angle,
; 578  : 		main_rotor_blade_random_droop_angle;
; 579  : 
; 580  : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN8@animate_da
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00017	83 c0 20	 add	 eax, 32			; 00000020H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@animate_da:

; 581  : 
; 582  : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN25@animate_da
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN26@animate_da
$LN25@animate_da:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00043	83 c2 22	 add	 edx, 34			; 00000022H
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN26@animate_da:
  00061	83 bd 2c fe ff
	ff 0e		 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  00068	74 18		 je	 SHORT $LN9@animate_da
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  0006f	83 c0 22	 add	 eax, 34			; 00000022H
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@animate_da:

; 583  : 
; 584  :    if (get_time_acceleration () == TIME_ACCELERATION_PAUSE)

  00082	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  00087	85 c0		 test	 eax, eax
  00089	75 05		 jne	 SHORT $LN10@animate_da

; 585  : 	{
; 586  : 		return;

  0008b	e9 47 09 00 00	 jmp	 $LN1@animate_da
$LN10@animate_da:

; 587  : 	}
; 588  : 
; 589  : 	if (!ignore_drawn_once)

  00090	83 7d 0c 00	 cmp	 DWORD PTR _ignore_drawn_once$[ebp], 0
  00094	0f 85 93 00 00
	00		 jne	 $LN12@animate_da

; 590  : 	{
; 591  : 		if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  0009a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0009e	74 0d		 je	 SHORT $LN27@animate_da
  000a0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv89[ebp], ecx
  000ab	eb 20		 jmp	 SHORT $LN28@animate_da
$LN27@animate_da:
  000ad	68 4f 02 00 00	 push	 591			; 0000024fH
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c3	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN28@animate_da:
  000cd	b8 01 00 00 00	 mov	 eax, 1
  000d2	85 c0		 test	 eax, eax
  000d4	74 0c		 je	 SHORT $LN29@animate_da
  000d6	c7 85 28 fe ff
	ff 93 00 00 00	 mov	 DWORD PTR tv128[ebp], 147 ; 00000093H
  000e0	eb 20		 jmp	 SHORT $LN30@animate_da
$LN29@animate_da:
  000e2	68 4f 02 00 00	 push	 591			; 0000024fH
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f2	51		 push	 ecx
  000f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f8	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv128[ebp], 0
$LN30@animate_da:
  00102	68 93 00 00 00	 push	 147			; 00000093H
  00107	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0010a	52		 push	 edx
  0010b	69 85 2c fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv89[ebp], 1116
  00115	8b 8d 28 fe ff
	ff		 mov	 ecx, DWORD PTR tv128[ebp]
  0011b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00122	ff d2		 call	 edx
  00124	85 c0		 test	 eax, eax
  00126	74 05		 je	 SHORT $LN12@animate_da

; 592  : 		{
; 593  : 			return;

  00128	e9 aa 08 00 00	 jmp	 $LN1@animate_da
$LN12@animate_da:

; 594  : 		}
; 595  : 	}
; 596  : 
; 597  : 	raw = (helicopter *) get_local_entity_data (en);

  0012d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00130	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00133	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 598  : 
; 599  : 	inst3d = raw->ac.inst3d;

  00136	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00139	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0013f	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 600  : 
; 601  : 	main_rotor_direction = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_DIRECTION);

  00142	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00146	74 0d		 je	 SHORT $LN31@animate_da
  00148	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0014b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014d	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv144[ebp], ecx
  00153	eb 24		 jmp	 SHORT $LN32@animate_da
$LN31@animate_da:
  00155	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  0015b	83 c2 35	 add	 edx, 53			; 00000035H
  0015e	52		 push	 edx
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016f	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN32@animate_da:
  00179	b9 01 00 00 00	 mov	 ecx, 1
  0017e	85 c9		 test	 ecx, ecx
  00180	74 0c		 je	 SHORT $LN33@animate_da
  00182	c7 85 28 fe ff
	ff 43 00 00 00	 mov	 DWORD PTR tv152[ebp], 67 ; 00000043H
  0018c	eb 24		 jmp	 SHORT $LN34@animate_da
$LN33@animate_da:
  0018e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00194	83 c2 35	 add	 edx, 53			; 00000035H
  00197	52		 push	 edx
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a8	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv152[ebp], 0
$LN34@animate_da:
  001b2	6a 43		 push	 67			; 00000043H
  001b4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001b7	51		 push	 ecx
  001b8	69 95 2c fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv144[ebp], 700
  001c2	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv152[ebp]
  001c8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001cf	ff d1		 call	 ecx
  001d1	d9 9d 90 fe ff
	ff		 fstp	 DWORD PTR _main_rotor_direction$[ebp]

; 602  : 
; 603  : 	main_rotor_rpm = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_RPM);

  001d7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001db	74 0d		 je	 SHORT $LN35@animate_da
  001dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e2	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv164[ebp], ecx
  001e8	eb 24		 jmp	 SHORT $LN36@animate_da
$LN35@animate_da:
  001ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  001f0	83 c2 37	 add	 edx, 55			; 00000037H
  001f3	52		 push	 edx
  001f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00204	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], 0
$LN36@animate_da:
  0020e	b9 01 00 00 00	 mov	 ecx, 1
  00213	85 c9		 test	 ecx, ecx
  00215	74 0c		 je	 SHORT $LN37@animate_da
  00217	c7 85 28 fe ff
	ff 48 00 00 00	 mov	 DWORD PTR tv172[ebp], 72 ; 00000048H
  00221	eb 24		 jmp	 SHORT $LN38@animate_da
$LN37@animate_da:
  00223	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00229	83 c2 37	 add	 edx, 55			; 00000037H
  0022c	52		 push	 edx
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00232	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023d	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN38@animate_da:
  00247	6a 48		 push	 72			; 00000048H
  00249	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0024c	51		 push	 ecx
  0024d	69 95 2c fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv164[ebp], 700
  00257	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv172[ebp]
  0025d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00264	ff d1		 call	 ecx
  00266	d9 9d 8c fe ff
	ff		 fstp	 DWORD PTR _main_rotor_rpm$[ebp]

; 604  : 
; 605  : 	main_rotor_blade_coning_angle = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_BLADE_CONING_ANGLE);

  0026c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00270	74 0d		 je	 SHORT $LN39@animate_da
  00272	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00275	8b 08		 mov	 ecx, DWORD PTR [eax]
  00277	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv184[ebp], ecx
  0027d	eb 24		 jmp	 SHORT $LN40@animate_da
$LN39@animate_da:
  0027f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00285	83 c2 39	 add	 edx, 57			; 00000039H
  00288	52		 push	 edx
  00289	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00299	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv184[ebp], 0
$LN40@animate_da:
  002a3	b9 01 00 00 00	 mov	 ecx, 1
  002a8	85 c9		 test	 ecx, ecx
  002aa	74 0c		 je	 SHORT $LN41@animate_da
  002ac	c7 85 28 fe ff
	ff 42 00 00 00	 mov	 DWORD PTR tv192[ebp], 66 ; 00000042H
  002b6	eb 24		 jmp	 SHORT $LN42@animate_da
$LN41@animate_da:
  002b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  002be	83 c2 39	 add	 edx, 57			; 00000039H
  002c1	52		 push	 edx
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002cc	50		 push	 eax
  002cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d2	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv192[ebp], 0
$LN42@animate_da:
  002dc	6a 42		 push	 66			; 00000042H
  002de	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002e1	51		 push	 ecx
  002e2	69 95 2c fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv184[ebp], 700
  002ec	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv192[ebp]
  002f2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002f9	ff d1		 call	 ecx
  002fb	d9 9d 7c fe ff
	ff		 fstp	 DWORD PTR _main_rotor_blade_coning_angle$[ebp]

; 606  : 
; 607  : 	main_rotor_rpm = bound (main_rotor_rpm, 0.0, 100.0);

  00301	f3 0f 5a 85 8c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00309	0f 57 c9	 xorps	 xmm1, xmm1
  0030c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00310	76 0d		 jbe	 SHORT $LN45@animate_da
  00312	0f 57 c0	 xorps	 xmm0, xmm0
  00315	f2 0f 11 85 28
	fe ff ff	 movsd	 QWORD PTR tv204[ebp], xmm0
  0031d	eb 44		 jmp	 SHORT $LN46@animate_da
$LN45@animate_da:
  0031f	f3 0f 5a 85 8c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00327	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  0032f	76 12		 jbe	 SHORT $LN43@animate_da
  00331	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  00339	f2 0f 11 85 20
	fe ff ff	 movsd	 QWORD PTR tv203[ebp], xmm0
  00341	eb 10		 jmp	 SHORT $LN44@animate_da
$LN43@animate_da:
  00343	f3 0f 5a 85 8c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  0034b	f2 0f 11 85 20
	fe ff ff	 movsd	 QWORD PTR tv203[ebp], xmm0
$LN44@animate_da:
  00353	f2 0f 10 85 20
	fe ff ff	 movsd	 xmm0, QWORD PTR tv203[ebp]
  0035b	f2 0f 11 85 28
	fe ff ff	 movsd	 QWORD PTR tv204[ebp], xmm0
$LN46@animate_da:
  00363	f2 0f 5a 85 28
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv204[ebp]
  0036b	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _main_rotor_rpm$[ebp], xmm0

; 608  : 
; 609  : 	main_rotor_blade_coning_angle = max (main_rotor_blade_coning_angle, 0.0f);

  00373	0f 57 c0	 xorps	 xmm0, xmm0
  00376	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  0037e	8d 85 30 fe ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00384	50		 push	 eax
  00385	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _main_rotor_blade_coning_angle$[ebp]
  0038b	51		 push	 ecx
  0038c	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00391	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00395	f3 0f 11 85 7c
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_coning_angle$[ebp], xmm0

; 610  : 
; 611  : 	main_rotor_pitch = -get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_PITCH);

  0039d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003a1	74 0d		 je	 SHORT $LN47@animate_da
  003a3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a8	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv215[ebp], ecx
  003ae	eb 24		 jmp	 SHORT $LN48@animate_da
$LN47@animate_da:
  003b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  003b6	83 c2 3f	 add	 edx, 63			; 0000003fH
  003b9	52		 push	 edx
  003ba	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003c4	50		 push	 eax
  003c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ca	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv215[ebp], 0
$LN48@animate_da:
  003d4	b9 01 00 00 00	 mov	 ecx, 1
  003d9	85 c9		 test	 ecx, ecx
  003db	74 0c		 je	 SHORT $LN49@animate_da
  003dd	c7 85 28 fe ff
	ff 45 00 00 00	 mov	 DWORD PTR tv223[ebp], 69 ; 00000045H
  003e7	eb 24		 jmp	 SHORT $LN50@animate_da
$LN49@animate_da:
  003e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  003ef	83 c2 3f	 add	 edx, 63			; 0000003fH
  003f2	52		 push	 edx
  003f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  003fd	50		 push	 eax
  003fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00403	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv223[ebp], 0
$LN50@animate_da:
  0040d	6a 45		 push	 69			; 00000045H
  0040f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00412	51		 push	 ecx
  00413	69 95 2c fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv215[ebp], 700
  0041d	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv223[ebp]
  00423	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0042a	ff d1		 call	 ecx
  0042c	d9 9d 24 fe ff
	ff		 fstp	 DWORD PTR tv528[ebp]
  00432	f3 0f 10 85 24
	fe ff ff	 movss	 xmm0, DWORD PTR tv528[ebp]
  0043a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00441	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _main_rotor_pitch$[ebp], xmm0

; 612  : 
; 613  : 	main_rotor_roll = -get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_ROLL);

  00449	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0044d	74 0d		 je	 SHORT $LN51@animate_da
  0044f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00452	8b 08		 mov	 ecx, DWORD PTR [eax]
  00454	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv237[ebp], ecx
  0045a	eb 24		 jmp	 SHORT $LN52@animate_da
$LN51@animate_da:
  0045c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00462	83 c2 41	 add	 edx, 65			; 00000041H
  00465	52		 push	 edx
  00466	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0046b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00470	50		 push	 eax
  00471	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00476	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN52@animate_da:
  00480	b9 01 00 00 00	 mov	 ecx, 1
  00485	85 c9		 test	 ecx, ecx
  00487	74 0c		 je	 SHORT $LN53@animate_da
  00489	c7 85 28 fe ff
	ff 47 00 00 00	 mov	 DWORD PTR tv245[ebp], 71 ; 00000047H
  00493	eb 24		 jmp	 SHORT $LN54@animate_da
$LN53@animate_da:
  00495	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  0049b	83 c2 41	 add	 edx, 65			; 00000041H
  0049e	52		 push	 edx
  0049f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  004a9	50		 push	 eax
  004aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004af	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv245[ebp], 0
$LN54@animate_da:
  004b9	6a 47		 push	 71			; 00000047H
  004bb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004be	51		 push	 ecx
  004bf	69 95 2c fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv237[ebp], 700
  004c9	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv245[ebp]
  004cf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  004d6	ff d1		 call	 ecx
  004d8	d9 9d 24 fe ff
	ff		 fstp	 DWORD PTR tv543[ebp]
  004de	f3 0f 10 85 24
	fe ff ff	 movss	 xmm0, DWORD PTR tv543[ebp]
  004e6	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  004ed	f3 0f 11 85 84
	fe ff ff	 movss	 DWORD PTR _main_rotor_roll$[ebp], xmm0

; 614  : 
; 615  : 	main_rotor_blade_droop_angle = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_BLADE_DROOP_ANGLE);

  004f5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004f9	74 0d		 je	 SHORT $LN55@animate_da
  004fb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00500	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv259[ebp], ecx
  00506	eb 24		 jmp	 SHORT $LN56@animate_da
$LN55@animate_da:
  00508	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  0050e	83 c2 43	 add	 edx, 67			; 00000043H
  00511	52		 push	 edx
  00512	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00517	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0051c	50		 push	 eax
  0051d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00522	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN56@animate_da:
  0052c	b9 01 00 00 00	 mov	 ecx, 1
  00531	85 c9		 test	 ecx, ecx
  00533	74 0c		 je	 SHORT $LN57@animate_da
  00535	c7 85 28 fe ff
	ff 44 00 00 00	 mov	 DWORD PTR tv267[ebp], 68 ; 00000044H
  0053f	eb 24		 jmp	 SHORT $LN58@animate_da
$LN57@animate_da:
  00541	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00547	83 c2 43	 add	 edx, 67			; 00000043H
  0054a	52		 push	 edx
  0054b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00550	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00555	50		 push	 eax
  00556	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0055b	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv267[ebp], 0
$LN58@animate_da:
  00565	6a 44		 push	 68			; 00000044H
  00567	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0056a	51		 push	 ecx
  0056b	69 95 2c fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv259[ebp], 700
  00575	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv267[ebp]
  0057b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00582	ff d1		 call	 ecx
  00584	d9 9d 78 fe ff
	ff		 fstp	 DWORD PTR _main_rotor_blade_droop_angle$[ebp]

; 616  : 
; 617  : 	main_rotor_delta_heading = rad (180.0) * main_rotor_rpm * (1.0 / MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD) * get_delta_time ();

  0058a	f3 0f 5a 85 8c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00592	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb51000000
  0059a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa1111111111111
  005a2	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  005aa	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  005ae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b2	f3 0f 11 85 80
	fe ff ff	 movss	 DWORD PTR _main_rotor_delta_heading$[ebp], xmm0

; 618  : 
; 619  : 	main_rotor_blade_droop_angle *= 1.0 - (main_rotor_rpm * (1.0 / MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD));

  005ba	f3 0f 5a 85 8c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  005c2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa1111111111111
  005ca	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  005d2	f2 0f 5c c8	 subsd	 xmm1, xmm0
  005d6	f3 0f 5a 85 78
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_blade_droop_angle$[ebp]
  005de	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  005e2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005e6	f3 0f 11 85 78
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_droop_angle$[ebp], xmm0

; 620  : 
; 621  : 	seed = get_client_server_entity_random_number_seed(en);

  005ee	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005f1	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  005f7	c1 f8 04	 sar	 eax, 4
  005fa	89 85 a4 fe ff
	ff		 mov	 DWORD PTR _seed$[ebp], eax

; 622  : 
; 623  : 	//
; 624  : 	// if ejected then disable all main rotor blades
; 625  : 	//
; 626  : 
; 627  : 	ejected = get_local_entity_int_value (en, INT_TYPE_EJECTED);

  00600	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00604	74 0d		 je	 SHORT $LN59@animate_da
  00606	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00609	8b 08		 mov	 ecx, DWORD PTR [eax]
  0060b	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv293[ebp], ecx
  00611	eb 24		 jmp	 SHORT $LN60@animate_da
$LN59@animate_da:
  00613	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00619	83 c2 4f	 add	 edx, 79			; 0000004fH
  0061c	52		 push	 edx
  0061d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00622	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00627	50		 push	 eax
  00628	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0062d	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv293[ebp], 0
$LN60@animate_da:
  00637	b9 01 00 00 00	 mov	 ecx, 1
  0063c	85 c9		 test	 ecx, ecx
  0063e	74 0c		 je	 SHORT $LN61@animate_da
  00640	c7 85 28 fe ff
	ff 31 00 00 00	 mov	 DWORD PTR tv301[ebp], 49 ; 00000031H
  0064a	eb 24		 jmp	 SHORT $LN62@animate_da
$LN61@animate_da:
  0064c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z@4JA
  00652	83 c2 4f	 add	 edx, 79			; 0000004fH
  00655	52		 push	 edx
  00656	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0065b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00660	50		 push	 eax
  00661	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00666	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv301[ebp], 0
$LN62@animate_da:
  00670	6a 31		 push	 49			; 00000031H
  00672	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00675	51		 push	 ecx
  00676	69 95 2c fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv293[ebp], 1116
  00680	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv301[ebp]
  00686	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0068d	ff d1		 call	 ecx
  0068f	89 85 94 fe ff
	ff		 mov	 DWORD PTR _ejected$[ebp], eax

; 628  : 
; 629  : 	if (ejected)

  00695	83 bd 94 fe ff
	ff 00		 cmp	 DWORD PTR _ejected$[ebp], 0
  0069c	74 0b		 je	 SHORT $LN13@animate_da

; 630  : 	{
; 631  : 		main_rotor_delta_heading = 0.0;

  0069e	0f 57 c0	 xorps	 xmm0, xmm0
  006a1	f3 0f 11 85 80
	fe ff ff	 movss	 DWORD PTR _main_rotor_delta_heading$[ebp], xmm0
$LN13@animate_da:

; 632  : 	}
; 633  : 
; 634  : 	//
; 635  : 	// locate rotor shaft
; 636  : 	//
; 637  : 
; 638  : 	search_main_rotor_shaft_depth = 0;

  006a9	c7 85 a0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], 0
$LN2@animate_da:

; 639  : 
; 640  : 	while (TRUE)

  006b3	b8 01 00 00 00	 mov	 eax, 1
  006b8	85 c0		 test	 eax, eax
  006ba	0f 84 17 03 00
	00		 je	 $LN3@animate_da

; 641  : 	{
; 642  : 		search_main_rotor_shaft.search_depth = search_main_rotor_shaft_depth;

  006c0	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  006c6	89 45 c8	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+8], eax

; 643  : 		search_main_rotor_shaft.search_object = inst3d;

  006c9	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  006cc	89 45 c0	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp], eax

; 644  : 		search_main_rotor_shaft.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_SHAFT;

  006cf	c7 45 cc 02 00
	00 00		 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+12], 2

; 645  : 
; 646  : 		if (find_object_3d_sub_object (&search_main_rotor_shaft) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  006d6	8d 45 c0	 lea	 eax, DWORD PTR _search_main_rotor_shaft$[ebp]
  006d9	50		 push	 eax
  006da	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  006df	83 f8 01	 cmp	 eax, 1
  006e2	0f 85 c2 02 00
	00		 jne	 $LN14@animate_da

; 647  : 		{
; 648  : 			//
; 649  : 			// locate pitch and bank null
; 650  : 			//
; 651  : 
; 652  : 			search_main_rotor_pitch_bank_null.search_depth = 0;

  006e8	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+8], 0

; 653  : 			search_main_rotor_pitch_bank_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_PITCH_BANK_NULL;

  006ef	c7 45 94 17 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+12], 23 ; 00000017H

; 654  : 
; 655  : 			if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_pitch_bank_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  006f6	8d 45 88	 lea	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  006f9	50		 push	 eax
  006fa	8d 4d c0	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  006fd	51		 push	 ecx
  006fe	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00703	83 f8 01	 cmp	 eax, 1
  00706	0f 85 9c 02 00
	00		 jne	 $LN23@animate_da

; 656  : 			{
; 657  : 				//
; 658  : 				// set pitch and bank
; 659  : 				//
; 660  : 
; 661  : 				search_main_rotor_pitch_bank_null.result_sub_object->relative_pitch = main_rotor_pitch;

  0070c	8b 45 8c	 mov	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+4]
  0070f	f3 0f 10 85 88
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_pitch$[ebp]
  00717	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 662  : 
; 663  : 				search_main_rotor_pitch_bank_null.result_sub_object->relative_roll = main_rotor_roll;

  0071c	8b 45 8c	 mov	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+4]
  0071f	f3 0f 10 85 84
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_roll$[ebp]
  00727	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 664  : 
; 665  : 				//
; 666  : 				// locate heading null
; 667  : 				//
; 668  : 
; 669  : 				search_main_rotor_heading_null.search_depth = 0;

  0072c	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+8], 0

; 670  : 				search_main_rotor_heading_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HEADING_NULL;

  00736	c7 85 5c ff ff
	ff 18 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+12], 24 ; 00000018H

; 671  : 
; 672  : 				if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_pitch_bank_null, &search_main_rotor_heading_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00740	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00746	50		 push	 eax
  00747	8d 4d 88	 lea	 ecx, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  0074a	51		 push	 ecx
  0074b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00750	83 f8 01	 cmp	 eax, 1
  00753	0f 85 4f 02 00
	00		 jne	 $LN23@animate_da

; 673  : 				{
; 674  : 					//
; 675  : 					// set heading
; 676  : 					//
; 677  : 
; 678  : 					search_main_rotor_heading_null.result_sub_object->relative_heading = wrap_angle (search_main_rotor_heading_null.result_sub_object->relative_heading + (main_rotor_delta_heading * main_rotor_direction));

  00759	51		 push	 ecx
  0075a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  00762	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00767	f3 0f 10 85 80
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_delta_heading$[ebp]
  0076f	f3 0f 59 85 90
	fe ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_direction$[ebp]
  00777	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  0077d	f3 0f 58 40 18	 addss	 xmm0, DWORD PTR [eax+24]
  00782	51		 push	 ecx
  00783	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00788	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  0078d	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  00793	d9 59 18	 fstp	 DWORD PTR [ecx+24]

; 679  : 
; 680  : 					//
; 681  : 					// set blade droop angle
; 682  : 					//
; 683  : 
; 684  : 					search_main_rotor_blade_root_static_depth = 0;

  00796	c7 85 9c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], 0
$LN4@animate_da:

; 685  : 
; 686  : 					while (TRUE)

  007a0	b8 01 00 00 00	 mov	 eax, 1
  007a5	85 c0		 test	 eax, eax
  007a7	0f 84 c0 01 00
	00		 je	 $LN5@animate_da

; 687  : 					{
; 688  : 						search_main_rotor_blade_root_static.search_depth = search_main_rotor_blade_root_static_depth;

  007ad	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  007b3	89 85 20 ff ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+8], eax

; 689  : 						search_main_rotor_blade_root_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_ROOT_STATIC;

  007b9	c7 85 24 ff ff
	ff 1a 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+12], 26 ; 0000001aH

; 690  : 
; 691  : 						main_rotor_blade_random_droop_angle = sfrand1x (&seed) * (PI * 0.0625);

  007c3	69 85 a4 fe ff
	ff 6d 4e c6 41	 imul	 eax, DWORD PTR _seed$[ebp], 1103515245
  007cd	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  007d2	89 85 a4 fe ff
	ff		 mov	 DWORD PTR _seed$[ebp], eax
  007d8	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR _seed$[ebp]
  007de	c1 f9 10	 sar	 ecx, 16			; 00000010H
  007e1	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  007e7	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  007ed	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  007f1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  007f9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc921fb60000000
  00801	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00805	f3 0f 11 85 74
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_random_droop_angle$[ebp], xmm0

; 692  : 
; 693  : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_root_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0080d	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00813	50		 push	 eax
  00814	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  0081a	51		 push	 ecx
  0081b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00820	83 f8 01	 cmp	 eax, 1
  00823	0f 85 2e 01 00
	00		 jne	 $LN18@animate_da

; 694  : 						{
; 695  : 							search_main_rotor_blade_root_static.result_sub_object->visible_object = !ejected;

  00829	83 bd 94 fe ff
	ff 00		 cmp	 DWORD PTR _ejected$[ebp], 0
  00830	75 0c		 jne	 SHORT $LN63@animate_da
  00832	c7 85 2c fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv378[ebp], 1
  0083c	eb 0a		 jmp	 SHORT $LN64@animate_da
$LN63@animate_da:
  0083e	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv378[ebp], 0
$LN64@animate_da:
  00848	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR tv378[ebp]
  0084e	83 e0 01	 and	 eax, 1
  00851	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00857	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0085a	83 e2 fe	 and	 edx, -2			; fffffffeH
  0085d	0b d0		 or	 edx, eax
  0085f	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00865	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 696  : 
; 697  : 							search_main_rotor_blade_root_static.result_sub_object->relative_pitch = main_rotor_blade_droop_angle + main_rotor_blade_random_droop_angle;

  00868	f3 0f 10 85 78
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_blade_droop_angle$[ebp]
  00870	f3 0f 58 85 74
	fe ff ff	 addss	 xmm0, DWORD PTR _main_rotor_blade_random_droop_angle$[ebp]
  00878	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  0087e	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 698  : 
; 699  : 							//
; 700  : 							// locate static blade sections and set blade droop angle
; 701  : 							//
; 702  : 
; 703  : 							search_main_rotor_blade_section_static_depth = 0;

  00883	c7 85 98 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
$LN6@animate_da:

; 704  : 
; 705  : 							while (TRUE)

  0088d	b8 01 00 00 00	 mov	 eax, 1
  00892	85 c0		 test	 eax, eax
  00894	0f 84 bb 00 00
	00		 je	 $LN7@animate_da

; 706  : 							{
; 707  : 								search_main_rotor_blade_section_static.search_depth = search_main_rotor_blade_section_static_depth;

  0089a	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  008a0	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+8], eax

; 708  : 								search_main_rotor_blade_section_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_SECTION_STATIC;

  008a6	c7 85 ec fe ff
	ff 1b 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+12], 27 ; 0000001bH

; 709  : 
; 710  : 								main_rotor_blade_random_droop_angle = sfrand1x (&seed) * (PI * 0.0625);

  008b0	69 85 a4 fe ff
	ff 6d 4e c6 41	 imul	 eax, DWORD PTR _seed$[ebp], 1103515245
  008ba	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  008bf	89 85 a4 fe ff
	ff		 mov	 DWORD PTR _seed$[ebp], eax
  008c5	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR _seed$[ebp]
  008cb	c1 f9 10	 sar	 ecx, 16			; 00000010H
  008ce	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  008d4	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  008da	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  008de	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  008e6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc921fb60000000
  008ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008f2	f3 0f 11 85 74
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_random_droop_angle$[ebp], xmm0

; 711  : 
; 712  : 								if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_blade_root_static, &search_main_rotor_blade_section_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  008fa	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp]
  00900	50		 push	 eax
  00901	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00907	51		 push	 ecx
  00908	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  0090d	83 f8 01	 cmp	 eax, 1
  00910	75 2d		 jne	 SHORT $LN20@animate_da

; 713  : 								{
; 714  : 									if (!search_main_rotor_blade_section_static.result_sub_object->visible_object)

  00912	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp+4]
  00918	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0091b	83 e1 01	 and	 ecx, 1
  0091e	75 02		 jne	 SHORT $LN22@animate_da

; 715  : 									{
; 716  : 										//
; 717  : 										// stop when we get to a broken section
; 718  : 										//
; 719  : 
; 720  : 										break;

  00920	eb 33		 jmp	 SHORT $LN7@animate_da
$LN22@animate_da:

; 721  : 									}
; 722  : 
; 723  : 									search_main_rotor_blade_section_static.result_sub_object->relative_pitch = main_rotor_blade_droop_angle + main_rotor_blade_random_droop_angle;

  00922	f3 0f 10 85 78
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_blade_droop_angle$[ebp]
  0092a	f3 0f 58 85 74
	fe ff ff	 addss	 xmm0, DWORD PTR _main_rotor_blade_random_droop_angle$[ebp]
  00932	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp+4]
  00938	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 724  : 								}
; 725  : 								else

  0093d	eb 02		 jmp	 SHORT $LN21@animate_da
$LN20@animate_da:

; 726  : 								{
; 727  : 									break;

  0093f	eb 14		 jmp	 SHORT $LN7@animate_da
$LN21@animate_da:

; 728  : 								}
; 729  : 
; 730  : 								search_main_rotor_blade_section_static_depth++;

  00941	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  00947	83 c0 01	 add	 eax, 1
  0094a	89 85 98 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], eax

; 731  : 							}

  00950	e9 38 ff ff ff	 jmp	 $LN6@animate_da
$LN7@animate_da:

; 732  : 						}
; 733  : 						else

  00955	eb 02		 jmp	 SHORT $LN19@animate_da
$LN18@animate_da:

; 734  : 						{
; 735  : 							break;

  00957	eb 14		 jmp	 SHORT $LN5@animate_da
$LN19@animate_da:

; 736  : 						}
; 737  : 
; 738  : 						search_main_rotor_blade_root_static_depth++;

  00959	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  0095f	83 c0 01	 add	 eax, 1
  00962	89 85 9c fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], eax

; 739  : 					}

  00968	e9 33 fe ff ff	 jmp	 $LN4@animate_da
$LN5@animate_da:

; 740  : 
; 741  : 					//
; 742  : 					// find static hub and set heading
; 743  : 					//
; 744  : 
; 745  : 					search_main_rotor_hub.search_depth = 0;

  0096d	c7 85 b0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 746  : 					search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_STATIC;

  00977	c7 85 b4 fe ff
	ff 15 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 21 ; 00000015H

; 747  : 
; 748  : 					if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00981	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  00987	50		 push	 eax
  00988	8d 4d c0	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  0098b	51		 push	 ecx
  0098c	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00991	83 f8 01	 cmp	 eax, 1
  00994	75 12		 jne	 SHORT $LN23@animate_da

; 749  : 					{
; 750  : 						search_main_rotor_hub.result_sub_object->relative_heading = search_main_rotor_heading_null.result_sub_object->relative_heading;

  00996	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  0099c	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  009a2	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  009a5	89 50 18	 mov	 DWORD PTR [eax+24], edx
$LN23@animate_da:

; 751  : 					}
; 752  : 				}
; 753  : 			}
; 754  : 		}
; 755  : 		else

  009a8	eb 02		 jmp	 SHORT $LN15@animate_da
$LN14@animate_da:

; 756  : 		{
; 757  : 			break;

  009aa	eb 2b		 jmp	 SHORT $LN3@animate_da
$LN15@animate_da:

; 758  : 		}
; 759  : 
; 760  : 		main_rotor_direction = -main_rotor_direction;

  009ac	f3 0f 10 85 90
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_direction$[ebp]
  009b4	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  009bb	f3 0f 11 85 90
	fe ff ff	 movss	 DWORD PTR _main_rotor_direction$[ebp], xmm0

; 761  : 
; 762  : 		search_main_rotor_shaft_depth++;

  009c3	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  009c9	83 c0 01	 add	 eax, 1
  009cc	89 85 a0 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], eax

; 763  : 	}

  009d2	e9 dc fc ff ff	 jmp	 $LN2@animate_da
$LN3@animate_da:
$LN1@animate_da:

; 764  : }

  009d7	5f		 pop	 edi
  009d8	5e		 pop	 esi
  009d9	5b		 pop	 ebx
  009da	8b e5		 mov	 esp, ebp
  009dc	5d		 pop	 ebp
  009dd	c2 08 00	 ret	 8
?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z ENDP ; animate_damaged_helicopter_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_anim.c
;	COMDAT ?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z
_TEXT	SEGMENT
tv225 = -552						; size = 8
tv170 = -552						; size = 8
tv710 = -548						; size = 4
tv695 = -548						; size = 4
tv417 = -544						; size = 4
tv396 = -544						; size = 4
tv381 = -544						; size = 4
tv348 = -544						; size = 4
tv329 = -544						; size = 4
tv310 = -544						; size = 4
tv289 = -544						; size = 4
tv267 = -544						; size = 4
tv245 = -544						; size = 4
tv226 = -544						; size = 8
tv214 = -544						; size = 4
tv194 = -544						; size = 4
tv171 = -544						; size = 8
tv150 = -544						; size = 4
tv94 = -544						; size = 4
tv576 = -540						; size = 4
tv498 = -540						; size = 4
tv409 = -540						; size = 4
tv397 = -540						; size = 4
tv387 = -540						; size = 4
tv373 = -540						; size = 4
tv341 = -540						; size = 4
tv322 = -540						; size = 4
tv303 = -540						; size = 4
tv281 = -540						; size = 4
tv259 = -540						; size = 4
tv237 = -540						; size = 4
tv206 = -540						; size = 4
tv186 = -540						; size = 4
tv142 = -540						; size = 4
tv87 = -540						; size = 4
tv75 = -540						; size = 4
$T1 = -536						; size = 4
_sub_type$2 = -468					; size = 4
_blade_factor$3 = -464					; size = 4
_rotor_angular_speed$4 = -460				; size = 4
_main_rotor_blade_droop_angle$ = -456			; size = 4
_main_rotor_blade_coning_angle$ = -452			; size = 4
_main_rotor_delta_heading$ = -448			; size = 4
_main_rotor_roll$ = -444				; size = 4
_main_rotor_pitch$ = -440				; size = 4
_main_rotor_rpm$ = -436					; size = 4
_main_rotor_direction$ = -432				; size = 4
_ejected$ = -428					; size = 4
_search_main_rotor_blade_moving_depth$ = -424		; size = 4
_search_main_rotor_blade_section_static_depth$ = -420	; size = 4
_search_main_rotor_blade_root_static_depth$ = -416	; size = 4
_search_main_rotor_shaft_depth$ = -412			; size = 4
_main_rotor_motion_blurred$ = -408			; size = 4
_start_wind_down_sound$ = -404				; size = 4
_search_main_rotor_hub$ = -400				; size = 56
_search_main_rotor_blade_moving$ = -344			; size = 56
_search_main_rotor_blade_section_static$ = -288		; size = 56
_search_main_rotor_blade_root_static$ = -232		; size = 56
_search_main_rotor_heading_null$ = -176			; size = 56
_search_main_rotor_pitch_bank_null$ = -120		; size = 56
_search_main_rotor_shaft$ = -64				; size = 56
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_ignore_drawn_once$ = 12				; size = 4
_animate_virtual_cockpit_main_rotors$ = 16		; size = 4
?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z PROC ; animate_helicopter_main_rotors, COMDAT

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 02 00
	00		 sub	 esp, 552		; 00000228H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 90   : 	helicopter
; 91   : 		*raw;
; 92   : 
; 93   : 	object_3d_instance
; 94   : 		*inst3d;
; 95   : 
; 96   : 	object_3d_sub_object_search_data
; 97   : 		search_main_rotor_shaft,
; 98   : 		search_main_rotor_pitch_bank_null,
; 99   : 		search_main_rotor_heading_null,
; 100  : 		search_main_rotor_blade_root_static,
; 101  : 		search_main_rotor_blade_section_static,
; 102  : 		search_main_rotor_blade_moving,
; 103  : 		search_main_rotor_hub;
; 104  : 
; 105  : 	int
; 106  : 		start_wind_down_sound,
; 107  : 		main_rotor_motion_blurred,
; 108  : 		search_main_rotor_shaft_depth,
; 109  : 		search_main_rotor_blade_root_static_depth,
; 110  : 		search_main_rotor_blade_section_static_depth,
; 111  : 		search_main_rotor_blade_moving_depth,
; 112  : 		ejected;
; 113  : 
; 114  : 	float
; 115  : 		main_rotor_direction,
; 116  : 		main_rotor_rpm,
; 117  : 		main_rotor_pitch,
; 118  : 		main_rotor_roll,
; 119  : 		main_rotor_delta_heading,
; 120  : 		main_rotor_blade_coning_angle,
; 121  : 		main_rotor_blade_droop_angle;
; 122  : 
; 123  : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN16@animate_he
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00017	83 c0 22	 add	 eax, 34			; 00000022H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@animate_he:

; 124  : 
; 125  : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN61@animate_he
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN62@animate_he
$LN61@animate_he:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00043	83 c2 24	 add	 edx, 36			; 00000024H
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN62@animate_he:
  00061	83 bd e4 fd ff
	ff 0e		 cmp	 DWORD PTR tv75[ebp], 14	; 0000000eH
  00068	74 18		 je	 SHORT $LN17@animate_he
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  0006f	83 c0 24	 add	 eax, 36			; 00000024H
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNIOEGPN@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@animate_he:

; 126  : 
; 127  : 	if (!ignore_drawn_once)

  00082	83 7d 0c 00	 cmp	 DWORD PTR _ignore_drawn_once$[ebp], 0
  00086	0f 85 93 00 00
	00		 jne	 $LN19@animate_he

; 128  : 	{
; 129  : 		if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  0008c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00090	74 0d		 je	 SHORT $LN63@animate_he
  00092	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv87[ebp], ecx
  0009d	eb 20		 jmp	 SHORT $LN64@animate_he
$LN63@animate_he:
  0009f	68 81 00 00 00	 push	 129			; 00000081H
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000af	52		 push	 edx
  000b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b5	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv87[ebp], 0
$LN64@animate_he:
  000bf	b8 01 00 00 00	 mov	 eax, 1
  000c4	85 c0		 test	 eax, eax
  000c6	74 0c		 je	 SHORT $LN65@animate_he
  000c8	c7 85 e0 fd ff
	ff 93 00 00 00	 mov	 DWORD PTR tv94[ebp], 147 ; 00000093H
  000d2	eb 20		 jmp	 SHORT $LN66@animate_he
$LN65@animate_he:
  000d4	68 81 00 00 00	 push	 129			; 00000081H
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ea	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN66@animate_he:
  000f4	68 93 00 00 00	 push	 147			; 00000093H
  000f9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000fc	52		 push	 edx
  000fd	69 85 e4 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv87[ebp], 1116
  00107	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  0010d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00114	ff d2		 call	 edx
  00116	85 c0		 test	 eax, eax
  00118	74 05		 je	 SHORT $LN19@animate_he

; 130  : 		{
; 131  : 			return;

  0011a	e9 cb 0f 00 00	 jmp	 $LN1@animate_he
$LN19@animate_he:

; 132  : 		}
; 133  : 	}
; 134  : 
; 135  : 	raw = (helicopter *) get_local_entity_data (en);

  0011f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00122	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00125	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 136  : 
; 137  : 	inst3d = raw->ac.inst3d;

  00128	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0012b	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00131	89 4d f8	 mov	 DWORD PTR _inst3d$[ebp], ecx

; 138  : 
; 139  : 	main_rotor_direction = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_DIRECTION);

  00134	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00138	74 0d		 je	 SHORT $LN67@animate_he
  0013a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013f	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv142[ebp], ecx
  00145	eb 24		 jmp	 SHORT $LN68@animate_he
$LN67@animate_he:
  00147	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  0014d	83 c2 32	 add	 edx, 50			; 00000032H
  00150	52		 push	 edx
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00161	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN68@animate_he:
  0016b	b9 01 00 00 00	 mov	 ecx, 1
  00170	85 c9		 test	 ecx, ecx
  00172	74 0c		 je	 SHORT $LN69@animate_he
  00174	c7 85 e0 fd ff
	ff 43 00 00 00	 mov	 DWORD PTR tv150[ebp], 67 ; 00000043H
  0017e	eb 24		 jmp	 SHORT $LN70@animate_he
$LN69@animate_he:
  00180	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00186	83 c2 32	 add	 edx, 50			; 00000032H
  00189	52		 push	 edx
  0018a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019a	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN70@animate_he:
  001a4	6a 43		 push	 67			; 00000043H
  001a6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a9	51		 push	 ecx
  001aa	69 95 e4 fd ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv142[ebp], 700
  001b4	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv150[ebp]
  001ba	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001c1	ff d1		 call	 ecx
  001c3	d9 9d 50 fe ff
	ff		 fstp	 DWORD PTR _main_rotor_direction$[ebp]

; 140  : 
; 141  : 	start_wind_down_sound = FALSE;

  001c9	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _start_wind_down_sound$[ebp], 0

; 142  : 
; 143  : 	//
; 144  : 	// main rotor articulation test
; 145  : 	//
; 146  : 
; 147  : 	if ((in_flight_articulation_test) && (get_external_view_entity () == en))

  001d3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  001da	0f 84 27 01 00
	00		 je	 $LN20@animate_he
  001e0	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  001e5	3b 45 08	 cmp	 eax, DWORD PTR _en$[ebp]
  001e8	0f 85 19 01 00
	00		 jne	 $LN20@animate_he

; 148  : 	{
; 149  : 		static float
; 150  : 			test_main_rotor_inc = 2.0,
; 151  : 			test_main_rotor_rpm = 0.0;
; 152  : 
; 153  : 		test_main_rotor_rpm += test_main_rotor_inc;

  001ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  001f6	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?test_main_rotor_inc@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  001fe	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA, xmm0

; 154  : 
; 155  : 		//
; 156  : 		// whilst test_main_rotor_rpm < 0.0 the main rotor blades are stationary
; 157  : 		//
; 158  : 
; 159  : 		if ((test_main_rotor_rpm <= -10.0) || (test_main_rotor_rpm >= 100.0))

  00206	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  0020e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c024000000000000
  00216	66 0f 2f c8	 comisd	 xmm1, xmm0
  0021a	73 12		 jae	 SHORT $LN23@animate_he
  0021c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  00224	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  0022c	72 17		 jb	 SHORT $LN22@animate_he
$LN23@animate_he:

; 160  : 		{
; 161  : 			test_main_rotor_inc = -test_main_rotor_inc;

  0022e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?test_main_rotor_inc@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  00236	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0023d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?test_main_rotor_inc@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA, xmm0
$LN22@animate_he:

; 162  : 		}
; 163  : 
; 164  : 		main_rotor_rpm = bound (test_main_rotor_rpm, 0.0, 100.0);

  00245	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  0024d	0f 57 c9	 xorps	 xmm1, xmm1
  00250	66 0f 2f c8	 comisd	 xmm1, xmm0
  00254	76 0d		 jbe	 SHORT $LN73@animate_he
  00256	0f 57 c0	 xorps	 xmm0, xmm0
  00259	f2 0f 11 85 e0
	fd ff ff	 movsd	 QWORD PTR tv171[ebp], xmm0
  00261	eb 44		 jmp	 SHORT $LN74@animate_he
$LN73@animate_he:
  00263	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  0026b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  00273	76 12		 jbe	 SHORT $LN71@animate_he
  00275	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  0027d	f2 0f 11 85 d8
	fd ff ff	 movsd	 QWORD PTR tv170[ebp], xmm0
  00285	eb 10		 jmp	 SHORT $LN72@animate_he
$LN71@animate_he:
  00287	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?test_main_rotor_rpm@?P@??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4MA
  0028f	f2 0f 11 85 d8
	fd ff ff	 movsd	 QWORD PTR tv170[ebp], xmm0
$LN72@animate_he:
  00297	f2 0f 10 85 d8
	fd ff ff	 movsd	 xmm0, QWORD PTR tv170[ebp]
  0029f	f2 0f 11 85 e0
	fd ff ff	 movsd	 QWORD PTR tv171[ebp], xmm0
$LN74@animate_he:
  002a7	f2 0f 5a 85 e0
	fd ff ff	 cvtsd2ss xmm0, QWORD PTR tv171[ebp]
  002af	f3 0f 11 85 4c
	fe ff ff	 movss	 DWORD PTR _main_rotor_rpm$[ebp], xmm0

; 165  : 
; 166  : 		if (main_rotor_rpm >= MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD)

  002b7	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  002bf	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@403e000000000000
  002c7	72 2e		 jb	 SHORT $LN24@animate_he

; 167  : 		{
; 168  : 			main_rotor_blade_coning_angle = ((main_rotor_rpm - MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD) / (100.0 - MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD)) * rad (10.0);

  002c9	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  002d1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@403e000000000000
  002d9	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4051800000000000
  002e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc6571848000000
  002e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ed	f3 0f 11 85 3c
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_coning_angle$[ebp], xmm0

; 169  : 		}
; 170  : 		else

  002f5	eb 0b		 jmp	 SHORT $LN25@animate_he
$LN24@animate_he:

; 171  : 		{
; 172  : 			main_rotor_blade_coning_angle = 0.0;

  002f7	0f 57 c0	 xorps	 xmm0, xmm0
  002fa	f3 0f 11 85 3c
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_coning_angle$[ebp], xmm0
$LN25@animate_he:

; 173  : 		}
; 174  : 	}
; 175  : 	else

  00302	e9 2a 01 00 00	 jmp	 $LN21@animate_he
$LN20@animate_he:

; 176  : 	{
; 177  : 		main_rotor_rpm = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_RPM);

  00307	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0030b	74 0d		 je	 SHORT $LN75@animate_he
  0030d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00310	8b 08		 mov	 ecx, DWORD PTR [eax]
  00312	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv186[ebp], ecx
  00318	eb 24		 jmp	 SHORT $LN76@animate_he
$LN75@animate_he:
  0031a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00320	83 c2 58	 add	 edx, 88			; 00000058H
  00323	52		 push	 edx
  00324	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00329	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0032e	50		 push	 eax
  0032f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00334	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv186[ebp], 0
$LN76@animate_he:
  0033e	b9 01 00 00 00	 mov	 ecx, 1
  00343	85 c9		 test	 ecx, ecx
  00345	74 0c		 je	 SHORT $LN77@animate_he
  00347	c7 85 e0 fd ff
	ff 48 00 00 00	 mov	 DWORD PTR tv194[ebp], 72 ; 00000048H
  00351	eb 24		 jmp	 SHORT $LN78@animate_he
$LN77@animate_he:
  00353	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00359	83 c2 58	 add	 edx, 88			; 00000058H
  0035c	52		 push	 edx
  0035d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00362	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00367	50		 push	 eax
  00368	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036d	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv194[ebp], 0
$LN78@animate_he:
  00377	6a 48		 push	 72			; 00000048H
  00379	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0037c	51		 push	 ecx
  0037d	69 95 e4 fd ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv186[ebp], 700
  00387	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv194[ebp]
  0038d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00394	ff d1		 call	 ecx
  00396	d9 9d 4c fe ff
	ff		 fstp	 DWORD PTR _main_rotor_rpm$[ebp]

; 178  : 
; 179  : 		main_rotor_blade_coning_angle = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_BLADE_CONING_ANGLE);

  0039c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003a0	74 0d		 je	 SHORT $LN79@animate_he
  003a2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a7	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv206[ebp], ecx
  003ad	eb 24		 jmp	 SHORT $LN80@animate_he
$LN79@animate_he:
  003af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  003b5	83 c2 5a	 add	 edx, 90			; 0000005aH
  003b8	52		 push	 edx
  003b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003c3	50		 push	 eax
  003c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c9	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
$LN80@animate_he:
  003d3	b9 01 00 00 00	 mov	 ecx, 1
  003d8	85 c9		 test	 ecx, ecx
  003da	74 0c		 je	 SHORT $LN81@animate_he
  003dc	c7 85 e0 fd ff
	ff 42 00 00 00	 mov	 DWORD PTR tv214[ebp], 66 ; 00000042H
  003e6	eb 24		 jmp	 SHORT $LN82@animate_he
$LN81@animate_he:
  003e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  003ee	83 c2 5a	 add	 edx, 90			; 0000005aH
  003f1	52		 push	 edx
  003f2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  003fc	50		 push	 eax
  003fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00402	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv214[ebp], 0
$LN82@animate_he:
  0040c	6a 42		 push	 66			; 00000042H
  0040e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00411	51		 push	 ecx
  00412	69 95 e4 fd ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv206[ebp], 700
  0041c	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv214[ebp]
  00422	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00429	ff d1		 call	 ecx
  0042b	d9 9d 3c fe ff
	ff		 fstp	 DWORD PTR _main_rotor_blade_coning_angle$[ebp]
$LN21@animate_he:

; 180  : 	}
; 181  : 
; 182  : 	main_rotor_rpm = bound (main_rotor_rpm, 0.0, 100.0);

  00431	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00439	0f 57 c9	 xorps	 xmm1, xmm1
  0043c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00440	76 0d		 jbe	 SHORT $LN85@animate_he
  00442	0f 57 c0	 xorps	 xmm0, xmm0
  00445	f2 0f 11 85 e0
	fd ff ff	 movsd	 QWORD PTR tv226[ebp], xmm0
  0044d	eb 44		 jmp	 SHORT $LN86@animate_he
$LN85@animate_he:
  0044f	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00457	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4059000000000000
  0045f	76 12		 jbe	 SHORT $LN83@animate_he
  00461	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  00469	f2 0f 11 85 d8
	fd ff ff	 movsd	 QWORD PTR tv225[ebp], xmm0
  00471	eb 10		 jmp	 SHORT $LN84@animate_he
$LN83@animate_he:
  00473	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  0047b	f2 0f 11 85 d8
	fd ff ff	 movsd	 QWORD PTR tv225[ebp], xmm0
$LN84@animate_he:
  00483	f2 0f 10 85 d8
	fd ff ff	 movsd	 xmm0, QWORD PTR tv225[ebp]
  0048b	f2 0f 11 85 e0
	fd ff ff	 movsd	 QWORD PTR tv226[ebp], xmm0
$LN86@animate_he:
  00493	f2 0f 5a 85 e0
	fd ff ff	 cvtsd2ss xmm0, QWORD PTR tv226[ebp]
  0049b	f3 0f 11 85 4c
	fe ff ff	 movss	 DWORD PTR _main_rotor_rpm$[ebp], xmm0

; 183  : 
; 184  : 	main_rotor_blade_coning_angle = max (main_rotor_blade_coning_angle, 0.0f);

  004a3	0f 57 c0	 xorps	 xmm0, xmm0
  004a6	f3 0f 11 85 e8
	fd ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  004ae	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  004b4	50		 push	 eax
  004b5	8d 8d 3c fe ff
	ff		 lea	 ecx, DWORD PTR _main_rotor_blade_coning_angle$[ebp]
  004bb	51		 push	 ecx
  004bc	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  004c1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  004c5	f3 0f 11 85 3c
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_coning_angle$[ebp], xmm0

; 185  : 
; 186  : 	main_rotor_pitch = -get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_PITCH);

  004cd	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004d1	74 0d		 je	 SHORT $LN87@animate_he
  004d3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d8	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv237[ebp], ecx
  004de	eb 24		 jmp	 SHORT $LN88@animate_he
$LN87@animate_he:
  004e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  004e6	83 c2 61	 add	 edx, 97			; 00000061H
  004e9	52		 push	 edx
  004ea	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004f4	50		 push	 eax
  004f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004fa	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN88@animate_he:
  00504	b9 01 00 00 00	 mov	 ecx, 1
  00509	85 c9		 test	 ecx, ecx
  0050b	74 0c		 je	 SHORT $LN89@animate_he
  0050d	c7 85 e0 fd ff
	ff 45 00 00 00	 mov	 DWORD PTR tv245[ebp], 69 ; 00000045H
  00517	eb 24		 jmp	 SHORT $LN90@animate_he
$LN89@animate_he:
  00519	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  0051f	83 c2 61	 add	 edx, 97			; 00000061H
  00522	52		 push	 edx
  00523	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00528	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0052d	50		 push	 eax
  0052e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00533	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv245[ebp], 0
$LN90@animate_he:
  0053d	6a 45		 push	 69			; 00000045H
  0053f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00542	51		 push	 ecx
  00543	69 95 e4 fd ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv237[ebp], 700
  0054d	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv245[ebp]
  00553	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0055a	ff d1		 call	 ecx
  0055c	d9 9d dc fd ff
	ff		 fstp	 DWORD PTR tv695[ebp]
  00562	f3 0f 10 85 dc
	fd ff ff	 movss	 xmm0, DWORD PTR tv695[ebp]
  0056a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00571	f3 0f 11 85 48
	fe ff ff	 movss	 DWORD PTR _main_rotor_pitch$[ebp], xmm0

; 187  : 
; 188  : 	main_rotor_roll = -get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_ROLL);

  00579	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0057d	74 0d		 je	 SHORT $LN91@animate_he
  0057f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00582	8b 08		 mov	 ecx, DWORD PTR [eax]
  00584	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv259[ebp], ecx
  0058a	eb 24		 jmp	 SHORT $LN92@animate_he
$LN91@animate_he:
  0058c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00592	83 c2 63	 add	 edx, 99			; 00000063H
  00595	52		 push	 edx
  00596	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0059b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005a0	50		 push	 eax
  005a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005a6	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN92@animate_he:
  005b0	b9 01 00 00 00	 mov	 ecx, 1
  005b5	85 c9		 test	 ecx, ecx
  005b7	74 0c		 je	 SHORT $LN93@animate_he
  005b9	c7 85 e0 fd ff
	ff 47 00 00 00	 mov	 DWORD PTR tv267[ebp], 71 ; 00000047H
  005c3	eb 24		 jmp	 SHORT $LN94@animate_he
$LN93@animate_he:
  005c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  005cb	83 c2 63	 add	 edx, 99			; 00000063H
  005ce	52		 push	 edx
  005cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  005d9	50		 push	 eax
  005da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005df	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv267[ebp], 0
$LN94@animate_he:
  005e9	6a 47		 push	 71			; 00000047H
  005eb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  005ee	51		 push	 ecx
  005ef	69 95 e4 fd ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv259[ebp], 700
  005f9	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv267[ebp]
  005ff	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00606	ff d1		 call	 ecx
  00608	d9 9d dc fd ff
	ff		 fstp	 DWORD PTR tv710[ebp]
  0060e	f3 0f 10 85 dc
	fd ff ff	 movss	 xmm0, DWORD PTR tv710[ebp]
  00616	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0061d	f3 0f 11 85 44
	fe ff ff	 movss	 DWORD PTR _main_rotor_roll$[ebp], xmm0

; 189  : 
; 190  : 	main_rotor_blade_droop_angle = get_local_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_BLADE_DROOP_ANGLE);

  00625	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00629	74 0d		 je	 SHORT $LN95@animate_he
  0062b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0062e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00630	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv281[ebp], ecx
  00636	eb 24		 jmp	 SHORT $LN96@animate_he
$LN95@animate_he:
  00638	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  0063e	83 c2 65	 add	 edx, 101		; 00000065H
  00641	52		 push	 edx
  00642	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00647	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0064c	50		 push	 eax
  0064d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00652	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], 0
$LN96@animate_he:
  0065c	b9 01 00 00 00	 mov	 ecx, 1
  00661	85 c9		 test	 ecx, ecx
  00663	74 0c		 je	 SHORT $LN97@animate_he
  00665	c7 85 e0 fd ff
	ff 44 00 00 00	 mov	 DWORD PTR tv289[ebp], 68 ; 00000044H
  0066f	eb 24		 jmp	 SHORT $LN98@animate_he
$LN97@animate_he:
  00671	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00677	83 c2 65	 add	 edx, 101		; 00000065H
  0067a	52		 push	 edx
  0067b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00680	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00685	50		 push	 eax
  00686	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0068b	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv289[ebp], 0
$LN98@animate_he:
  00695	6a 44		 push	 68			; 00000044H
  00697	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0069a	51		 push	 ecx
  0069b	69 95 e4 fd ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv281[ebp], 700
  006a5	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv289[ebp]
  006ab	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  006b2	ff d1		 call	 ecx
  006b4	d9 9d 38 fe ff
	ff		 fstp	 DWORD PTR _main_rotor_blade_droop_angle$[ebp]

; 191  : 
; 192  : 	if
; 193  : 	(
; 194  : 		(main_rotor_rpm < MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD) &&

  006ba	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  006c2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@403e000000000000
  006ca	66 0f 2f c8	 comisd	 xmm1, xmm0
  006ce	0f 86 37 02 00
	00		 jbe	 $LN26@animate_he
  006d4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006d7	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  006dd	0f 84 b5 01 00
	00		 je	 $LN29@animate_he
  006e3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  006e7	74 0d		 je	 SHORT $LN99@animate_he
  006e9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  006ee	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv303[ebp], ecx
  006f4	eb 20		 jmp	 SHORT $LN100@animate_he
$LN99@animate_he:
  006f6	68 c6 00 00 00	 push	 198			; 000000c6H
  006fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00700	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00706	52		 push	 edx
  00707	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0070c	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv303[ebp], 0
$LN100@animate_he:
  00716	b8 01 00 00 00	 mov	 eax, 1
  0071b	85 c0		 test	 eax, eax
  0071d	74 0c		 je	 SHORT $LN101@animate_he
  0071f	c7 85 e0 fd ff
	ff 97 00 00 00	 mov	 DWORD PTR tv310[ebp], 151 ; 00000097H
  00729	eb 20		 jmp	 SHORT $LN102@animate_he
$LN101@animate_he:
  0072b	68 c6 00 00 00	 push	 198			; 000000c6H
  00730	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00735	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0073b	51		 push	 ecx
  0073c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00741	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv310[ebp], 0
$LN102@animate_he:
  0074b	68 97 00 00 00	 push	 151			; 00000097H
  00750	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00753	52		 push	 edx
  00754	69 85 e4 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv303[ebp], 1116
  0075e	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv310[ebp]
  00764	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0076b	ff d2		 call	 edx
  0076d	83 f8 05	 cmp	 eax, 5
  00770	0f 84 22 01 00
	00		 je	 $LN29@animate_he
  00776	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0077a	74 0d		 je	 SHORT $LN103@animate_he
  0077c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0077f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00781	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv322[ebp], ecx
  00787	eb 20		 jmp	 SHORT $LN104@animate_he
$LN103@animate_he:
  00789	68 c7 00 00 00	 push	 199			; 000000c7H
  0078e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00793	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00799	52		 push	 edx
  0079a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0079f	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv322[ebp], 0
$LN104@animate_he:
  007a9	b8 01 00 00 00	 mov	 eax, 1
  007ae	85 c0		 test	 eax, eax
  007b0	74 0c		 je	 SHORT $LN105@animate_he
  007b2	c7 85 e0 fd ff
	ff 97 00 00 00	 mov	 DWORD PTR tv329[ebp], 151 ; 00000097H
  007bc	eb 20		 jmp	 SHORT $LN106@animate_he
$LN105@animate_he:
  007be	68 c7 00 00 00	 push	 199			; 000000c7H
  007c3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  007c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007ce	51		 push	 ecx
  007cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d4	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv329[ebp], 0
$LN106@animate_he:
  007de	68 97 00 00 00	 push	 151			; 00000097H
  007e3	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  007e6	52		 push	 edx
  007e7	69 85 e4 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv322[ebp], 1116
  007f1	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv329[ebp]
  007f7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  007fe	ff d2		 call	 edx
  00800	83 f8 04	 cmp	 eax, 4
  00803	0f 84 8f 00 00
	00		 je	 $LN29@animate_he
  00809	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0080d	74 0d		 je	 SHORT $LN107@animate_he
  0080f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00812	8b 08		 mov	 ecx, DWORD PTR [eax]
  00814	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv341[ebp], ecx
  0081a	eb 20		 jmp	 SHORT $LN108@animate_he
$LN107@animate_he:
  0081c	68 c8 00 00 00	 push	 200			; 000000c8H
  00821	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00826	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0082c	52		 push	 edx
  0082d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00832	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv341[ebp], 0
$LN108@animate_he:
  0083c	b8 01 00 00 00	 mov	 eax, 1
  00841	85 c0		 test	 eax, eax
  00843	74 0c		 je	 SHORT $LN109@animate_he
  00845	c7 85 e0 fd ff
	ff 97 00 00 00	 mov	 DWORD PTR tv348[ebp], 151 ; 00000097H
  0084f	eb 20		 jmp	 SHORT $LN110@animate_he
$LN109@animate_he:
  00851	68 c8 00 00 00	 push	 200			; 000000c8H
  00856	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0085b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00861	51		 push	 ecx
  00862	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00867	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv348[ebp], 0
$LN110@animate_he:
  00871	68 97 00 00 00	 push	 151			; 00000097H
  00876	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00879	52		 push	 edx
  0087a	69 85 e4 fd ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv341[ebp], 1116
  00884	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv348[ebp]
  0088a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00891	ff d2		 call	 edx
  00893	83 f8 09	 cmp	 eax, 9
  00896	75 73		 jne	 SHORT $LN26@animate_he
$LN29@animate_he:

; 195  : 		(
; 196  : 			(en == get_gunship_entity ()) ||
; 197  : 			(
; 198  : 				(get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_LANDING) ||
; 199  : 				(get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_LANDED) ||
; 200  : 				(get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_TAKEOFF)
; 201  : 			)
; 202  : 		)
; 203  : 	)
; 204  : 	{
; 205  : 		main_rotor_motion_blurred = FALSE;

  00898	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _main_rotor_motion_blurred$[ebp], 0

; 206  : 
; 207  : 		main_rotor_delta_heading = rad (180.0) * main_rotor_rpm * (1.0 / MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD) * get_delta_time ();

  008a2	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  008aa	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb51000000
  008b2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa1111111111111
  008ba	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  008c2	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  008c6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008ca	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _main_rotor_delta_heading$[ebp], xmm0

; 208  : 
; 209  : 		main_rotor_blade_droop_angle *= 1.0 - (main_rotor_rpm * (1.0 / MAIN_ROTOR_RPM_MOTION_BLUR_THRESHOLD));

  008d2	f3 0f 5a 85 4c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  008da	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa1111111111111
  008e2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  008ea	f2 0f 5c c8	 subsd	 xmm1, xmm0
  008ee	f3 0f 5a 85 38
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _main_rotor_blade_droop_angle$[ebp]
  008f6	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  008fa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008fe	f3 0f 11 85 38
	fe ff ff	 movss	 DWORD PTR _main_rotor_blade_droop_angle$[ebp], xmm0

; 210  : 	}
; 211  : 	else

  00906	e9 fe 01 00 00	 jmp	 $LN27@animate_he
$LN26@animate_he:

; 212  : 	{
; 213  : 		// arneh, june 06 - speed up main rotor (was 90 deg per second, now depending on rotor 
; 214  : 		// rpm and number of blades is between 180 and 900 deg per second))
; 215  : 		float rotor_angular_speed, blade_factor;
; 216  : 		entity_sub_types sub_type;
; 217  : 		
; 218  : 		main_rotor_motion_blurred = TRUE;

  0090b	c7 85 68 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _main_rotor_motion_blurred$[ebp], 1

; 219  : 
; 220  : 		sub_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00915	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00919	74 0d		 je	 SHORT $LN111@animate_he
  0091b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0091e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00920	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv373[ebp], ecx
  00926	eb 27		 jmp	 SHORT $LN112@animate_he
$LN111@animate_he:
  00928	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  0092e	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  00934	52		 push	 edx
  00935	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0093a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0093f	50		 push	 eax
  00940	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00945	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv373[ebp], 0
$LN112@animate_he:
  0094f	b9 01 00 00 00	 mov	 ecx, 1
  00954	85 c9		 test	 ecx, ecx
  00956	74 0c		 je	 SHORT $LN113@animate_he
  00958	c7 85 e0 fd ff
	ff 34 00 00 00	 mov	 DWORD PTR tv381[ebp], 52 ; 00000034H
  00962	eb 27		 jmp	 SHORT $LN114@animate_he
$LN113@animate_he:
  00964	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  0096a	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  00970	52		 push	 edx
  00971	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00976	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0097b	50		 push	 eax
  0097c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00981	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv381[ebp], 0
$LN114@animate_he:
  0098b	6a 34		 push	 52			; 00000034H
  0098d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00990	51		 push	 ecx
  00991	69 95 e4 fd ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv373[ebp], 1116
  0099b	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv381[ebp]
  009a1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  009a8	ff d1		 call	 ecx
  009aa	89 85 2c fe ff
	ff		 mov	 DWORD PTR _sub_type$2[ebp], eax

; 221  : 		switch (sub_type)

  009b0	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR _sub_type$2[ebp]
  009b6	89 85 e4 fd ff
	ff		 mov	 DWORD PTR tv387[ebp], eax
  009bc	83 bd e4 fd ff
	ff 1f		 cmp	 DWORD PTR tv387[ebp], 31 ; 0000001fH
  009c3	77 6e		 ja	 SHORT $LN35@animate_he
  009c5	8b 8d e4 fd ff
	ff		 mov	 ecx, DWORD PTR tv387[ebp]
  009cb	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN127@animate_he[ecx]
  009d2	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN128@animate_he[edx*4]
$LN30@animate_he:

; 222  : 		{
; 223  : 		// Five or more rotor blades
; 224  : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI28N_HAVOC_B:
; 225  : 		case ENTITY_SUB_TYPE_AIRCRAFT_RAH66_COMANCHE:
; 226  : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI24D_HIND:
; 227  : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH3_JOLLY_GREEN_GIANT:
; 228  : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI17_HIP:
; 229  : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI6_HOOK:
; 230  : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH53E_SUPER_STALLION:
; 231  : 			blade_factor = 7.0;

  009d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40e00000
  009e1	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR _blade_factor$3[ebp], xmm0

; 232  : 			break;

  009e9	eb 58		 jmp	 SHORT $LN2@animate_he
$LN31@animate_he:

; 233  : 
; 234  : 		// four rotor blades
; 235  : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH64D_APACHE_LONGBOW:
; 236  : 		case ENTITY_SUB_TYPE_AIRCRAFT_UH60_BLACK_HAWK:
; 237  : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH64A_APACHE:
; 238  : 		case ENTITY_SUB_TYPE_AIRCRAFT_OH58D_KIOWA_WARRIOR:
; 239  : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1Z_VIPER:
; 240  : 			blade_factor = 10.0;

  009eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  009f3	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR _blade_factor$3[ebp], xmm0

; 241  : 			break;

  009fb	eb 46		 jmp	 SHORT $LN2@animate_he
$LN32@animate_he:

; 242  : 
; 243  : 		// coaxial three rotor blades
; 244  : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B:
; 245  : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA29_HELIX_B:
; 246  : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA50_HOKUM:
; 247  : 			blade_factor = 11.0;

  009fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41300000
  00a05	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR _blade_factor$3[ebp], xmm0

; 248  : 			break;

  00a0d	eb 34		 jmp	 SHORT $LN2@animate_he
$LN33@animate_he:

; 249  : 	
; 250  : 		// three rotor blades		
; 251  : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH46E_SEA_KNIGHT:
; 252  : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH47D_CHINOOK:
; 253  : 		case ENTITY_SUB_TYPE_AIRCRAFT_MV22_OSPREY:
; 254  : 			blade_factor = 15.0;

  00a0f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  00a17	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR _blade_factor$3[ebp], xmm0

; 255  : 			break;

  00a1f	eb 22		 jmp	 SHORT $LN2@animate_he
$LN34@animate_he:

; 256  : 
; 257  : 		// two rotor blades
; 258  : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1T_SEACOBRA:
; 259  : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1W_SUPERCOBRA:
; 260  : 			blade_factor = 25.0;

  00a21	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c80000
  00a29	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR _blade_factor$3[ebp], xmm0

; 261  : 			break;

  00a31	eb 10		 jmp	 SHORT $LN2@animate_he
$LN35@animate_he:

; 262  : 		
; 263  : 		default:
; 264  : 			blade_factor = 15.0;

  00a33	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  00a3b	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR _blade_factor$3[ebp], xmm0
$LN2@animate_he:

; 265  : 		}
; 266  : 
; 267  : 		rotor_angular_speed = bound(blade_factor * main_rotor_rpm, 180, blade_factor*100);

  00a43	f3 0f 10 85 30
	fe ff ff	 movss	 xmm0, DWORD PTR _blade_factor$3[ebp]
  00a4b	f3 0f 59 85 4c
	fe ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00a53	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@43340000
  00a5b	0f 2f c8	 comiss	 xmm1, xmm0
  00a5e	76 12		 jbe	 SHORT $LN117@animate_he
  00a60	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43340000
  00a68	f3 0f 11 85 e4
	fd ff ff	 movss	 DWORD PTR tv397[ebp], xmm0
  00a70	eb 67		 jmp	 SHORT $LN118@animate_he
$LN117@animate_he:
  00a72	f3 0f 10 85 30
	fe ff ff	 movss	 xmm0, DWORD PTR _blade_factor$3[ebp]
  00a7a	f3 0f 59 85 4c
	fe ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00a82	f3 0f 10 8d 30
	fe ff ff	 movss	 xmm1, DWORD PTR _blade_factor$3[ebp]
  00a8a	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42c80000
  00a92	0f 2f c1	 comiss	 xmm0, xmm1
  00a95	76 1a		 jbe	 SHORT $LN115@animate_he
  00a97	f3 0f 10 85 30
	fe ff ff	 movss	 xmm0, DWORD PTR _blade_factor$3[ebp]
  00a9f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42c80000
  00aa7	f3 0f 11 85 e0
	fd ff ff	 movss	 DWORD PTR tv396[ebp], xmm0
  00aaf	eb 18		 jmp	 SHORT $LN116@animate_he
$LN115@animate_he:
  00ab1	f3 0f 10 85 30
	fe ff ff	 movss	 xmm0, DWORD PTR _blade_factor$3[ebp]
  00ab9	f3 0f 59 85 4c
	fe ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_rpm$[ebp]
  00ac1	f3 0f 11 85 e0
	fd ff ff	 movss	 DWORD PTR tv396[ebp], xmm0
$LN116@animate_he:
  00ac9	f3 0f 10 85 e0
	fd ff ff	 movss	 xmm0, DWORD PTR tv396[ebp]
  00ad1	f3 0f 11 85 e4
	fd ff ff	 movss	 DWORD PTR tv397[ebp], xmm0
$LN118@animate_he:
  00ad9	f3 0f 10 85 e4
	fd ff ff	 movss	 xmm0, DWORD PTR tv397[ebp]
  00ae1	f3 0f 11 85 34
	fe ff ff	 movss	 DWORD PTR _rotor_angular_speed$4[ebp], xmm0

; 268  : 		main_rotor_delta_heading = rad(rotor_angular_speed) * get_delta_time ();

  00ae9	f3 0f 10 85 34
	fe ff ff	 movss	 xmm0, DWORD PTR _rotor_angular_speed$4[ebp]
  00af1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00af9	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00b01	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _main_rotor_delta_heading$[ebp], xmm0
$LN27@animate_he:

; 269  : 		// end rotor speed fix
; 270  : 	}
; 271  : 
; 272  : 	//
; 273  : 	// stop rotors from spinning if paused ( but must still switch the correct objects on and off )
; 274  : 	//
; 275  : 
; 276  :    if (get_time_acceleration () == TIME_ACCELERATION_PAUSE)

  00b09	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  00b0e	85 c0		 test	 eax, eax
  00b10	75 0b		 jne	 SHORT $LN36@animate_he

; 277  : 	{
; 278  : 		main_rotor_delta_heading = 0.0;

  00b12	0f 57 c0	 xorps	 xmm0, xmm0
  00b15	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _main_rotor_delta_heading$[ebp], xmm0
$LN36@animate_he:

; 279  : 	}
; 280  : 
; 281  : 	//
; 282  : 	// if animating virtual cockpit main rotors then do not rotate
; 283  : 	//
; 284  : 
; 285  : 	if (animate_virtual_cockpit_main_rotors)

  00b1d	83 7d 10 00	 cmp	 DWORD PTR _animate_virtual_cockpit_main_rotors$[ebp], 0
  00b21	74 0b		 je	 SHORT $LN37@animate_he

; 286  : 	{
; 287  : 		main_rotor_delta_heading = 0.0;

  00b23	0f 57 c0	 xorps	 xmm0, xmm0
  00b26	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _main_rotor_delta_heading$[ebp], xmm0
$LN37@animate_he:

; 288  : 	}
; 289  : 
; 290  : 	//
; 291  : 	// if ejected then disable all main rotor blades
; 292  : 	//
; 293  : 
; 294  : 	ejected = get_local_entity_int_value (en, INT_TYPE_EJECTED);

  00b2e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00b32	74 0d		 je	 SHORT $LN119@animate_he
  00b34	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b37	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b39	89 8d e4 fd ff
	ff		 mov	 DWORD PTR tv409[ebp], ecx
  00b3f	eb 27		 jmp	 SHORT $LN120@animate_he
$LN119@animate_he:
  00b41	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00b47	81 c2 cd 00 00
	00		 add	 edx, 205		; 000000cdH
  00b4d	52		 push	 edx
  00b4e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b58	50		 push	 eax
  00b59	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b5e	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN120@animate_he:
  00b68	b9 01 00 00 00	 mov	 ecx, 1
  00b6d	85 c9		 test	 ecx, ecx
  00b6f	74 0c		 je	 SHORT $LN121@animate_he
  00b71	c7 85 e0 fd ff
	ff 31 00 00 00	 mov	 DWORD PTR tv417[ebp], 49 ; 00000031H
  00b7b	eb 27		 jmp	 SHORT $LN122@animate_he
$LN121@animate_he:
  00b7d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z@4JA
  00b83	81 c2 cd 00 00
	00		 add	 edx, 205		; 000000cdH
  00b89	52		 push	 edx
  00b8a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@JCPEIJBJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b8f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b94	50		 push	 eax
  00b95	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b9a	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv417[ebp], 0
$LN122@animate_he:
  00ba4	6a 31		 push	 49			; 00000031H
  00ba6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00ba9	51		 push	 ecx
  00baa	69 95 e4 fd ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv409[ebp], 1116
  00bb4	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv417[ebp]
  00bba	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00bc1	ff d1		 call	 ecx
  00bc3	89 85 54 fe ff
	ff		 mov	 DWORD PTR _ejected$[ebp], eax

; 295  : 
; 296  : 	if (ejected)

  00bc9	83 bd 54 fe ff
	ff 00		 cmp	 DWORD PTR _ejected$[ebp], 0
  00bd0	74 15		 je	 SHORT $LN38@animate_he

; 297  : 	{
; 298  : 		main_rotor_motion_blurred = FALSE;

  00bd2	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _main_rotor_motion_blurred$[ebp], 0

; 299  : 
; 300  : 		main_rotor_delta_heading = 0.0;

  00bdc	0f 57 c0	 xorps	 xmm0, xmm0
  00bdf	f3 0f 11 85 40
	fe ff ff	 movss	 DWORD PTR _main_rotor_delta_heading$[ebp], xmm0
$LN38@animate_he:

; 301  : 	}
; 302  : 
; 303  : 	//
; 304  : 	// locate rotor shaft
; 305  : 	//
; 306  : 
; 307  : 	search_main_rotor_shaft_depth = 0;

  00be7	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], 0
$LN4@animate_he:

; 308  : 
; 309  : 	while (TRUE)

  00bf1	b8 01 00 00 00	 mov	 eax, 1
  00bf6	85 c0		 test	 eax, eax
  00bf8	0f 84 ec 04 00
	00		 je	 $LN5@animate_he

; 310  : 	{
; 311  : 		search_main_rotor_shaft.search_depth = search_main_rotor_shaft_depth;

  00bfe	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  00c04	89 45 c8	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+8], eax

; 312  : 		search_main_rotor_shaft.search_object = inst3d;

  00c07	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00c0a	89 45 c0	 mov	 DWORD PTR _search_main_rotor_shaft$[ebp], eax

; 313  : 		search_main_rotor_shaft.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_SHAFT;

  00c0d	c7 45 cc 02 00
	00 00		 mov	 DWORD PTR _search_main_rotor_shaft$[ebp+12], 2

; 314  : 
; 315  : 		if (find_object_3d_sub_object (&search_main_rotor_shaft) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00c14	8d 45 c0	 lea	 eax, DWORD PTR _search_main_rotor_shaft$[ebp]
  00c17	50		 push	 eax
  00c18	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00c1d	83 f8 01	 cmp	 eax, 1
  00c20	0f 85 97 04 00
	00		 jne	 $LN39@animate_he

; 316  : 		{
; 317  : 			//
; 318  : 			// locate pitch and bank null
; 319  : 			//
; 320  : 
; 321  : 			search_main_rotor_pitch_bank_null.search_depth = 0;

  00c26	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+8], 0

; 322  : 			search_main_rotor_pitch_bank_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_PITCH_BANK_NULL;

  00c2d	c7 45 94 17 00
	00 00		 mov	 DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+12], 23 ; 00000017H

; 323  : 
; 324  : 			if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_pitch_bank_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00c34	8d 45 88	 lea	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  00c37	50		 push	 eax
  00c38	8d 4d c0	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  00c3b	51		 push	 ecx
  00c3c	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00c41	83 f8 01	 cmp	 eax, 1
  00c44	0f 85 71 04 00
	00		 jne	 $LN59@animate_he

; 325  : 			{
; 326  : 				//
; 327  : 				// set pitch and bank
; 328  : 				//
; 329  : 
; 330  : 				search_main_rotor_pitch_bank_null.result_sub_object->relative_pitch = main_rotor_pitch;

  00c4a	8b 45 8c	 mov	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+4]
  00c4d	f3 0f 10 85 48
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_pitch$[ebp]
  00c55	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 331  : 
; 332  : 				search_main_rotor_pitch_bank_null.result_sub_object->relative_roll = main_rotor_roll;

  00c5a	8b 45 8c	 mov	 eax, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp+4]
  00c5d	f3 0f 10 85 44
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_roll$[ebp]
  00c65	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 333  : 
; 334  : 				//
; 335  : 				// locate heading null
; 336  : 				//
; 337  : 
; 338  : 				search_main_rotor_heading_null.search_depth = 0;

  00c6a	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+8], 0

; 339  : 				search_main_rotor_heading_null.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HEADING_NULL;

  00c74	c7 85 5c ff ff
	ff 18 00 00 00	 mov	 DWORD PTR _search_main_rotor_heading_null$[ebp+12], 24 ; 00000018H

; 340  : 
; 341  : 				if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_pitch_bank_null, &search_main_rotor_heading_null) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00c7e	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00c84	50		 push	 eax
  00c85	8d 4d 88	 lea	 ecx, DWORD PTR _search_main_rotor_pitch_bank_null$[ebp]
  00c88	51		 push	 ecx
  00c89	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00c8e	83 f8 01	 cmp	 eax, 1
  00c91	0f 85 24 04 00
	00		 jne	 $LN59@animate_he

; 342  : 				{
; 343  : 					//
; 344  : 					// set heading
; 345  : 					//
; 346  : 
; 347  : 					search_main_rotor_heading_null.result_sub_object->relative_heading = wrap_angle (search_main_rotor_heading_null.result_sub_object->relative_heading + (main_rotor_delta_heading * main_rotor_direction));

  00c97	51		 push	 ecx
  00c98	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  00ca0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ca5	f3 0f 10 85 40
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_delta_heading$[ebp]
  00cad	f3 0f 59 85 50
	fe ff ff	 mulss	 xmm0, DWORD PTR _main_rotor_direction$[ebp]
  00cb5	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  00cbb	f3 0f 58 40 18	 addss	 xmm0, DWORD PTR [eax+24]
  00cc0	51		 push	 ecx
  00cc1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cc6	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  00ccb	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  00cd1	d9 59 18	 fstp	 DWORD PTR [ecx+24]

; 348  : 
; 349  : 					if (!main_rotor_motion_blurred)

  00cd4	83 bd 68 fe ff
	ff 00		 cmp	 DWORD PTR _main_rotor_motion_blurred$[ebp], 0
  00cdb	0f 85 32 02 00
	00		 jne	 $LN43@animate_he

; 350  : 					{
; 351  : 						//
; 352  : 						// disable moving blades
; 353  : 						//
; 354  : 
; 355  : 						search_main_rotor_blade_moving_depth = 0;

  00ce1	c7 85 58 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], 0
$LN6@animate_he:

; 356  : 
; 357  : 						while (TRUE)

  00ceb	b8 01 00 00 00	 mov	 eax, 1
  00cf0	85 c0		 test	 eax, eax
  00cf2	74 70		 je	 SHORT $LN7@animate_he

; 358  : 						{
; 359  : 							search_main_rotor_blade_moving.search_depth = search_main_rotor_blade_moving_depth;

  00cf4	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  00cfa	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+8], eax

; 360  : 							search_main_rotor_blade_moving.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_MOVING;

  00d00	c7 85 b4 fe ff
	ff 19 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+12], 25 ; 00000019H

; 361  : 
; 362  : 							if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_moving) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00d0a	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp]
  00d10	50		 push	 eax
  00d11	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00d17	51		 push	 ecx
  00d18	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00d1d	83 f8 01	 cmp	 eax, 1
  00d20	75 2f		 jne	 SHORT $LN45@animate_he

; 363  : 							{
; 364  : 								if (search_main_rotor_blade_moving.result_sub_object->visible_object)

  00d22	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  00d28	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00d2b	83 e1 01	 and	 ecx, 1
  00d2e	74 0a		 je	 SHORT $LN47@animate_he

; 365  : 								{
; 366  : 									start_wind_down_sound = TRUE;

  00d30	c7 85 6c fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _start_wind_down_sound$[ebp], 1
$LN47@animate_he:

; 367  : 								}
; 368  : 
; 369  : 								search_main_rotor_blade_moving.result_sub_object->visible_object = FALSE;

  00d3a	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  00d40	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00d43	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00d46	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  00d4c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 370  : 							}
; 371  : 							else

  00d4f	eb 02		 jmp	 SHORT $LN46@animate_he
$LN45@animate_he:

; 372  : 							{
; 373  : 								break;

  00d51	eb 11		 jmp	 SHORT $LN7@animate_he
$LN46@animate_he:

; 374  : 							}
; 375  : 
; 376  : 							search_main_rotor_blade_moving_depth++;

  00d53	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  00d59	83 c0 01	 add	 eax, 1
  00d5c	89 85 58 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], eax

; 377  : 						}

  00d62	eb 87		 jmp	 SHORT $LN6@animate_he
$LN7@animate_he:

; 378  : 
; 379  : 						//
; 380  : 						// enable static blade roots and set blade droop angle
; 381  : 						//
; 382  : 
; 383  : 						search_main_rotor_blade_root_static_depth = 0;

  00d64	c7 85 60 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], 0
$LN8@animate_he:

; 384  : 
; 385  : 						while (TRUE)

  00d6e	b8 01 00 00 00	 mov	 eax, 1
  00d73	85 c0		 test	 eax, eax
  00d75	0f 84 05 01 00
	00		 je	 $LN9@animate_he

; 386  : 						{
; 387  : 							search_main_rotor_blade_root_static.search_depth = search_main_rotor_blade_root_static_depth;

  00d7b	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  00d81	89 85 20 ff ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+8], eax

; 388  : 							search_main_rotor_blade_root_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_ROOT_STATIC;

  00d87	c7 85 24 ff ff
	ff 1a 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+12], 26 ; 0000001aH

; 389  : 
; 390  : 							if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_root_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00d91	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00d97	50		 push	 eax
  00d98	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00d9e	51		 push	 ecx
  00d9f	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00da4	83 f8 01	 cmp	 eax, 1
  00da7	0f 85 bd 00 00
	00		 jne	 $LN48@animate_he

; 391  : 							{
; 392  : 								search_main_rotor_blade_root_static.result_sub_object->visible_object = !ejected;

  00dad	83 bd 54 fe ff
	ff 00		 cmp	 DWORD PTR _ejected$[ebp], 0
  00db4	75 0c		 jne	 SHORT $LN123@animate_he
  00db6	c7 85 e4 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv498[ebp], 1
  00dc0	eb 0a		 jmp	 SHORT $LN124@animate_he
$LN123@animate_he:
  00dc2	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv498[ebp], 0
$LN124@animate_he:
  00dcc	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR tv498[ebp]
  00dd2	83 e0 01	 and	 eax, 1
  00dd5	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00ddb	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00dde	83 e2 fe	 and	 edx, -2			; fffffffeH
  00de1	0b d0		 or	 edx, eax
  00de3	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00de9	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 393  : 
; 394  : 								search_main_rotor_blade_root_static.result_sub_object->relative_pitch = main_rotor_blade_droop_angle;

  00dec	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00df2	f3 0f 10 85 38
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_blade_droop_angle$[ebp]
  00dfa	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 395  : 
; 396  : 								//
; 397  : 								// locate static blade sections and set blade droop angle
; 398  : 								//
; 399  : 
; 400  : 								search_main_rotor_blade_section_static_depth = 0;

  00dff	c7 85 5c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], 0
$LN10@animate_he:

; 401  : 
; 402  : 								while (TRUE)

  00e09	b8 01 00 00 00	 mov	 eax, 1
  00e0e	85 c0		 test	 eax, eax
  00e10	74 56		 je	 SHORT $LN11@animate_he

; 403  : 								{
; 404  : 									search_main_rotor_blade_section_static.search_depth = search_main_rotor_blade_section_static_depth;

  00e12	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  00e18	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+8], eax

; 405  : 									search_main_rotor_blade_section_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_SECTION_STATIC;

  00e1e	c7 85 ec fe ff
	ff 1b 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_section_static$[ebp+12], 27 ; 0000001bH

; 406  : 
; 407  : 									if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_blade_root_static, &search_main_rotor_blade_section_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00e28	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp]
  00e2e	50		 push	 eax
  00e2f	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00e35	51		 push	 ecx
  00e36	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00e3b	83 f8 01	 cmp	 eax, 1
  00e3e	75 15		 jne	 SHORT $LN50@animate_he

; 408  : 									{
; 409  : 										search_main_rotor_blade_section_static.result_sub_object->relative_pitch = main_rotor_blade_droop_angle;

  00e40	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static$[ebp+4]
  00e46	f3 0f 10 85 38
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_blade_droop_angle$[ebp]
  00e4e	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 410  : 									}
; 411  : 									else

  00e53	eb 02		 jmp	 SHORT $LN51@animate_he
$LN50@animate_he:

; 412  : 									{
; 413  : 										break;

  00e55	eb 11		 jmp	 SHORT $LN11@animate_he
$LN51@animate_he:

; 414  : 									}
; 415  : 
; 416  : 									search_main_rotor_blade_section_static_depth++;

  00e57	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp]
  00e5d	83 c0 01	 add	 eax, 1
  00e60	89 85 5c fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_section_static_depth$[ebp], eax

; 417  : 								}

  00e66	eb a1		 jmp	 SHORT $LN10@animate_he
$LN11@animate_he:

; 418  : 							}
; 419  : 							else

  00e68	eb 02		 jmp	 SHORT $LN49@animate_he
$LN48@animate_he:

; 420  : 							{
; 421  : 								break;

  00e6a	eb 14		 jmp	 SHORT $LN9@animate_he
$LN49@animate_he:

; 422  : 							}
; 423  : 
; 424  : 							search_main_rotor_blade_root_static_depth++;

  00e6c	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  00e72	83 c0 01	 add	 eax, 1
  00e75	89 85 60 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], eax

; 425  : 						}

  00e7b	e9 ee fe ff ff	 jmp	 $LN8@animate_he
$LN9@animate_he:

; 426  : 
; 427  : 						//
; 428  : 						// disable moving hub
; 429  : 						//
; 430  : 
; 431  : 						search_main_rotor_hub.search_depth = 0;

  00e80	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 432  : 						search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_MOVING;

  00e8a	c7 85 7c fe ff
	ff 16 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 22 ; 00000016H

; 433  : 
; 434  : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00e94	8d 85 70 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  00e9a	50		 push	 eax
  00e9b	8d 4d c0	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  00e9e	51		 push	 ecx
  00e9f	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00ea4	83 f8 01	 cmp	 eax, 1
  00ea7	75 15		 jne	 SHORT $LN52@animate_he

; 435  : 						{
; 436  : 							search_main_rotor_hub.result_sub_object->visible_object = FALSE;

  00ea9	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  00eaf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00eb2	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00eb5	8b 95 74 fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  00ebb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN52@animate_he:

; 437  : 						}
; 438  : 
; 439  : 						//
; 440  : 						// enable static hub and set heading
; 441  : 						//
; 442  : 
; 443  : 						search_main_rotor_hub.search_depth = 0;

  00ebe	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 444  : 						search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_STATIC;

  00ec8	c7 85 7c fe ff
	ff 15 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 21 ; 00000015H

; 445  : 
; 446  : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00ed2	8d 85 70 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  00ed8	50		 push	 eax
  00ed9	8d 4d c0	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  00edc	51		 push	 ecx
  00edd	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00ee2	83 f8 01	 cmp	 eax, 1
  00ee5	75 27		 jne	 SHORT $LN53@animate_he

; 447  : 						{
; 448  : 							search_main_rotor_hub.result_sub_object->visible_object = TRUE;

  00ee7	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  00eed	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00ef0	83 c9 01	 or	 ecx, 1
  00ef3	8b 95 74 fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  00ef9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 449  : 
; 450  : 							search_main_rotor_hub.result_sub_object->relative_heading = search_main_rotor_heading_null.result_sub_object->relative_heading;

  00efc	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  00f02	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  00f08	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00f0b	89 50 18	 mov	 DWORD PTR [eax+24], edx
$LN53@animate_he:

; 451  : 						}
; 452  : 					}
; 453  : 					else

  00f0e	e9 a8 01 00 00	 jmp	 $LN59@animate_he
$LN43@animate_he:

; 454  : 					{
; 455  : 						//
; 456  : 						// disable static blades
; 457  : 						//
; 458  : 
; 459  : 						search_main_rotor_blade_root_static_depth = 0;

  00f13	c7 85 60 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], 0
$LN12@animate_he:

; 460  : 
; 461  : 						while (TRUE)

  00f1d	b8 01 00 00 00	 mov	 eax, 1
  00f22	85 c0		 test	 eax, eax
  00f24	74 58		 je	 SHORT $LN13@animate_he

; 462  : 						{
; 463  : 							search_main_rotor_blade_root_static.search_depth = search_main_rotor_blade_root_static_depth;

  00f26	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  00f2c	89 85 20 ff ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+8], eax

; 464  : 							search_main_rotor_blade_root_static.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_ROOT_STATIC;

  00f32	c7 85 24 ff ff
	ff 1a 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_root_static$[ebp+12], 26 ; 0000001aH

; 465  : 
; 466  : 							if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_root_static) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00f3c	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp]
  00f42	50		 push	 eax
  00f43	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00f49	51		 push	 ecx
  00f4a	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00f4f	83 f8 01	 cmp	 eax, 1
  00f52	75 17		 jne	 SHORT $LN54@animate_he

; 467  : 							{
; 468  : 								search_main_rotor_blade_root_static.result_sub_object->visible_object = FALSE;

  00f54	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00f5a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00f5d	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00f60	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_blade_root_static$[ebp+4]
  00f66	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 469  : 							}
; 470  : 							else

  00f69	eb 02		 jmp	 SHORT $LN55@animate_he
$LN54@animate_he:

; 471  : 							{
; 472  : 								break;

  00f6b	eb 11		 jmp	 SHORT $LN13@animate_he
$LN55@animate_he:

; 473  : 							}
; 474  : 
; 475  : 							search_main_rotor_blade_root_static_depth++;

  00f6d	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp]
  00f73	83 c0 01	 add	 eax, 1
  00f76	89 85 60 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_root_static_depth$[ebp], eax

; 476  : 						}

  00f7c	eb 9f		 jmp	 SHORT $LN12@animate_he
$LN13@animate_he:

; 477  : 
; 478  : 						//
; 479  : 						// enable moving blades and set coning angle
; 480  : 						//
; 481  : 
; 482  : 						search_main_rotor_blade_moving_depth = 0;

  00f7e	c7 85 58 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], 0
$LN14@animate_he:

; 483  : 
; 484  : 						while (TRUE)

  00f88	b8 01 00 00 00	 mov	 eax, 1
  00f8d	85 c0		 test	 eax, eax
  00f8f	0f 84 98 00 00
	00		 je	 $LN15@animate_he

; 485  : 						{
; 486  : 							search_main_rotor_blade_moving.search_depth = search_main_rotor_blade_moving_depth;

  00f95	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  00f9b	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+8], eax

; 487  : 							search_main_rotor_blade_moving.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_BLADE_MOVING;

  00fa1	c7 85 b4 fe ff
	ff 19 00 00 00	 mov	 DWORD PTR _search_main_rotor_blade_moving$[ebp+12], 25 ; 00000019H

; 488  : 
; 489  : 							if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_heading_null, &search_main_rotor_blade_moving) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00fab	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp]
  00fb1	50		 push	 eax
  00fb2	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp]
  00fb8	51		 push	 ecx
  00fb9	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00fbe	83 f8 01	 cmp	 eax, 1
  00fc1	75 54		 jne	 SHORT $LN56@animate_he

; 490  : 							{
; 491  : 								search_main_rotor_blade_moving.result_sub_object->visible_object = !ejected;

  00fc3	83 bd 54 fe ff
	ff 00		 cmp	 DWORD PTR _ejected$[ebp], 0
  00fca	75 0c		 jne	 SHORT $LN125@animate_he
  00fcc	c7 85 e4 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv576[ebp], 1
  00fd6	eb 0a		 jmp	 SHORT $LN126@animate_he
$LN125@animate_he:
  00fd8	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv576[ebp], 0
$LN126@animate_he:
  00fe2	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR tv576[ebp]
  00fe8	83 e0 01	 and	 eax, 1
  00feb	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  00ff1	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00ff4	83 e2 fe	 and	 edx, -2			; fffffffeH
  00ff7	0b d0		 or	 edx, eax
  00ff9	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  00fff	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 492  : 
; 493  : 								search_main_rotor_blade_moving.result_sub_object->relative_pitch = main_rotor_blade_coning_angle;

  01002	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving$[ebp+4]
  01008	f3 0f 10 85 3c
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_blade_coning_angle$[ebp]
  01010	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 494  : 							}
; 495  : 							else

  01015	eb 02		 jmp	 SHORT $LN57@animate_he
$LN56@animate_he:

; 496  : 							{
; 497  : 								break;

  01017	eb 14		 jmp	 SHORT $LN15@animate_he
$LN57@animate_he:

; 498  : 							}
; 499  : 
; 500  : 							search_main_rotor_blade_moving_depth++;

  01019	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_blade_moving_depth$[ebp]
  0101f	83 c0 01	 add	 eax, 1
  01022	89 85 58 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_blade_moving_depth$[ebp], eax

; 501  : 						}

  01028	e9 5b ff ff ff	 jmp	 $LN14@animate_he
$LN15@animate_he:

; 502  : 
; 503  : 						//
; 504  : 						// disable static hub
; 505  : 						//
; 506  : 
; 507  : 						search_main_rotor_hub.search_depth = 0;

  0102d	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 508  : 						search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_STATIC;

  01037	c7 85 7c fe ff
	ff 15 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 21 ; 00000015H

; 509  : 
; 510  : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  01041	8d 85 70 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  01047	50		 push	 eax
  01048	8d 4d c0	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  0104b	51		 push	 ecx
  0104c	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  01051	83 f8 01	 cmp	 eax, 1
  01054	75 15		 jne	 SHORT $LN58@animate_he

; 511  : 						{
; 512  : 							search_main_rotor_hub.result_sub_object->visible_object = FALSE;

  01056	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  0105c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0105f	83 e1 fe	 and	 ecx, -2			; fffffffeH
  01062	8b 95 74 fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  01068	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN58@animate_he:

; 513  : 						}
; 514  : 
; 515  : 						//
; 516  : 						// enable moving hub and set heading
; 517  : 						//
; 518  : 
; 519  : 						search_main_rotor_hub.search_depth = 0;

  0106b	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+8], 0

; 520  : 						search_main_rotor_hub.sub_object_index = OBJECT_3D_SUB_OBJECT_MAIN_ROTOR_HUB_MOVING;

  01075	c7 85 7c fe ff
	ff 16 00 00 00	 mov	 DWORD PTR _search_main_rotor_hub$[ebp+12], 22 ; 00000016H

; 521  : 
; 522  : 						if (find_object_3d_sub_object_from_sub_object (&search_main_rotor_shaft, &search_main_rotor_hub) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0107f	8d 85 70 fe ff
	ff		 lea	 eax, DWORD PTR _search_main_rotor_hub$[ebp]
  01085	50		 push	 eax
  01086	8d 4d c0	 lea	 ecx, DWORD PTR _search_main_rotor_shaft$[ebp]
  01089	51		 push	 ecx
  0108a	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  0108f	83 f8 01	 cmp	 eax, 1
  01092	75 27		 jne	 SHORT $LN59@animate_he

; 523  : 						{
; 524  : 							search_main_rotor_hub.result_sub_object->visible_object = TRUE;

  01094	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  0109a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0109d	83 c9 01	 or	 ecx, 1
  010a0	8b 95 74 fe ff
	ff		 mov	 edx, DWORD PTR _search_main_rotor_hub$[ebp+4]
  010a6	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 525  : 
; 526  : 							search_main_rotor_hub.result_sub_object->relative_heading = search_main_rotor_heading_null.result_sub_object->relative_heading;

  010a9	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_hub$[ebp+4]
  010af	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _search_main_rotor_heading_null$[ebp+4]
  010b5	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  010b8	89 50 18	 mov	 DWORD PTR [eax+24], edx
$LN59@animate_he:

; 527  : 						}
; 528  : 					}
; 529  : 				}
; 530  : 			}
; 531  : 		}
; 532  : 		else

  010bb	eb 02		 jmp	 SHORT $LN40@animate_he
$LN39@animate_he:

; 533  : 		{
; 534  : 			break;

  010bd	eb 2b		 jmp	 SHORT $LN5@animate_he
$LN40@animate_he:

; 535  : 		}
; 536  : 
; 537  : 		main_rotor_direction = -main_rotor_direction;

  010bf	f3 0f 10 85 50
	fe ff ff	 movss	 xmm0, DWORD PTR _main_rotor_direction$[ebp]
  010c7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  010ce	f3 0f 11 85 50
	fe ff ff	 movss	 DWORD PTR _main_rotor_direction$[ebp], xmm0

; 538  : 
; 539  : 		search_main_rotor_shaft_depth++;

  010d6	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _search_main_rotor_shaft_depth$[ebp]
  010dc	83 c0 01	 add	 eax, 1
  010df	89 85 64 fe ff
	ff		 mov	 DWORD PTR _search_main_rotor_shaft_depth$[ebp], eax

; 540  : 	}

  010e5	e9 07 fb ff ff	 jmp	 $LN4@animate_he
$LN5@animate_he:
$LN1@animate_he:

; 541  : }

  010ea	5f		 pop	 edi
  010eb	5e		 pop	 esi
  010ec	5b		 pop	 ebx
  010ed	8b e5		 mov	 esp, ebp
  010ef	5d		 pop	 ebp
  010f0	c2 0c 00	 ret	 12			; 0000000cH
  010f3	90		 npad	 1
$LN128@animate_he:
  010f4	00 00 00 00	 DD	 $LN31@animate_he
  010f8	00 00 00 00	 DD	 $LN30@animate_he
  010fc	00 00 00 00	 DD	 $LN32@animate_he
  01100	00 00 00 00	 DD	 $LN33@animate_he
  01104	00 00 00 00	 DD	 $LN34@animate_he
  01108	00 00 00 00	 DD	 $LN35@animate_he
$LN127@animate_he:
  0110c	00		 DB	 0
  0110d	01		 DB	 1
  0110e	01		 DB	 1
  0110f	02		 DB	 2
  01110	00		 DB	 0
  01111	01		 DB	 1
  01112	03		 DB	 3
  01113	02		 DB	 2
  01114	01		 DB	 1
  01115	01		 DB	 1
  01116	03		 DB	 3
  01117	01		 DB	 1
  01118	05		 DB	 5
  01119	05		 DB	 5
  0111a	05		 DB	 5
  0111b	05		 DB	 5
  0111c	05		 DB	 5
  0111d	05		 DB	 5
  0111e	05		 DB	 5
  0111f	05		 DB	 5
  01120	00		 DB	 0
  01121	02		 DB	 2
  01122	00		 DB	 0
  01123	03		 DB	 3
  01124	04		 DB	 4
  01125	04		 DB	 4
  01126	01		 DB	 1
  01127	05		 DB	 5
  01128	05		 DB	 5
  01129	05		 DB	 5
  0112a	05		 DB	 5
  0112b	00		 DB	 0
?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z ENDP ; animate_helicopter_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
END
