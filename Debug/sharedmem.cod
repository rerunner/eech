; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\sharedmem.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?gPtrSharedMemory@@3PAUshared_memory_t@@A	; gPtrSharedMemory
_BSS	SEGMENT
?gPtrSharedMemory@@3PAUshared_memory_t@@A DD 01H DUP (?) ; gPtrSharedMemory
_BSS	ENDS
PUBLIC	_atan2f
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?Initialise_Shared_Memory@@YGHXZ		; Initialise_Shared_Memory
PUBLIC	?DeInitialise_Shared_Memory@@YGXXZ		; DeInitialise_Shared_Memory
PUBLIC	?update_apache_avionics_shared_mem@@YGXXZ	; update_apache_avionics_shared_mem
PUBLIC	?update_ah64a_avionics_shared_mem@@YGXXZ	; update_ah64a_avionics_shared_mem
PUBLIC	?update_blackhawk_avionics_shared_mem@@YGXXZ	; update_blackhawk_avionics_shared_mem
PUBLIC	?update_comanche_avionics_shared_mem@@YGXXZ	; update_comanche_avionics_shared_mem
PUBLIC	?update_viper_avionics_shared_mem@@YGXXZ	; update_viper_avionics_shared_mem
PUBLIC	?update_kiowa_avionics_shared_mem@@YGXXZ	; update_kiowa_avionics_shared_mem
PUBLIC	?update_upfront_display_shared_mem@@YGXPAD000@Z	; update_upfront_display_shared_mem
PUBLIC	?update_ekran_shared_mem@@YGXPAD000@Z		; update_ekran_shared_mem
PUBLIC	?update_havoc_avionics_shared_mem@@YGXXZ	; update_havoc_avionics_shared_mem
PUBLIC	?update_hind_avionics_shared_mem@@YGXXZ		; update_hind_avionics_shared_mem
PUBLIC	?update_hokum_avionics_shared_mem@@YGXXZ	; update_hokum_avionics_shared_mem
PUBLIC	?update_ka50_avionics_shared_mem@@YGXXZ		; update_ka50_avionics_shared_mem
PUBLIC	?update_default_avionics_shared_mem@@YGXXZ	; update_default_avionics_shared_mem
PUBLIC	?update_dynamics_shared_mem@@YGXXZ		; update_dynamics_shared_mem
PUBLIC	?update_waypoint_shared_mem@@YGXXZ		; update_waypoint_shared_mem
PUBLIC	?update_weapon_load_shared_mem@@YGXXZ		; update_weapon_load_shared_mem
PUBLIC	?eech_strlcpy@@YGIPADPBDI@Z			; eech_strlcpy
PUBLIC	??_C@_0BB@PJOMDND@EECHSharedMemory@		; `string'
PUBLIC	?__LINE__Var@?0??update_dynamics_shared_mem@@YGXXZ@4JA ; `update_dynamics_shared_mem'::`1'::__LINE__Var
PUBLIC	??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??update_waypoint_shared_mem@@YGXXZ@4JA ; `update_waypoint_shared_mem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_weapon_load_shared_mem@@YGXXZ@4JA ; `update_weapon_load_shared_mem'::`1'::__LINE__Var
PUBLIC	__real@4076800000000000
PUBLIC	__real@42652ee0
EXTRN	_memset:PROC
EXTRN	__imp__strcpy_s:PROC
EXTRN	_atan2:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__MapViewOfFile@20:PROC
EXTRN	__imp__UnmapViewOfFile@4:PROC
EXTRN	__imp__CreateFileMappingA@24:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z:PROC ; get_waypoint_display_position
EXTRN	?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_current_waypoint
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_char_type_message@@3PBDB:DWORD ; overload_invalid_char_type_message
EXTRN	?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA:BYTE ; fn_get_local_entity_char_value
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A:BYTE ; weapon_config_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A:DWORD	; apache_lamps
EXTRN	?comanche_lamps@@3UCOMANCHE_LAMP_FLAGS@@A:QWORD	; comanche_lamps
EXTRN	?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A:BYTE	; havoc_lamps
EXTRN	?hokum_lamps@@3UHOKUM_LAMP_FLAGS@@A:BYTE	; hokum_lamps
EXTRN	?blackhawk_lamps@@3UBLACKHAWK_LAMP_FLAGS@@A:DWORD ; blackhawk_lamps
EXTRN	?hind_lamps@@3UHIND_LAMP_FLAGS@@A:BYTE		; hind_lamps
EXTRN	?ah64a_lamps@@3UAH64A_LAMP_FLAGS@@A:DWORD	; ah64a_lamps
EXTRN	?ka50_lamps@@3UKA50_LAMP_FLAGS@@A:BYTE		; ka50_lamps
EXTRN	?viper_lamps@@3UVIPER_LAMP_FLAGS@@A:DWORD	; viper_lamps
EXTRN	?kiowa_lamps@@3UKIOWA_LAMP_FLAGS@@A:DWORD	; kiowa_lamps
EXTRN	?default_lamps@@3UDEFAULT_LAMP_FLAGS@@A:DWORD	; default_lamps
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?gHandleSharedMemory@@3PAXA DD 01H DUP (?)		; gHandleSharedMemory
_BSS	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@4076800000000000
CONST	SEGMENT
__real@4076800000000000 DQ 04076800000000000r	; 360
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_weapon_load_shared_mem@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_weapon_load_shared_mem@@YGXXZ@4JA DD 0147H ; `update_weapon_load_shared_mem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_waypoint_shared_mem@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_waypoint_shared_mem@@YGXXZ@4JA DD 0120H ; `update_waypoint_shared_mem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\sharedmem.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_dynamics_shared_mem@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_dynamics_shared_mem@@YGXXZ@4JA DD 0fcH ; `update_dynamics_shared_mem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@PJOMDND@EECHSharedMemory@
CONST	SEGMENT
??_C@_0BB@PJOMDND@EECHSharedMemory@ DB 'EECHSharedMemory', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?eech_strlcpy@@YGIPADPBDI@Z
_TEXT	SEGMENT
tv79 = -80						; size = 4
tv71 = -80						; size = 4
_n$ = -12						; size = 4
_s$ = -8						; size = 4
_d$ = -4						; size = 4
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
?eech_strlcpy@@YGIPADPBDI@Z PROC			; eech_strlcpy, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 21   :    char *d = dst;

  00009	8b 45 08	 mov	 eax, DWORD PTR _dst$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _d$[ebp], eax

; 22   :    const char *s = src;

  0000f	8b 45 0c	 mov	 eax, DWORD PTR _src$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax

; 23   :    size_t n = size;

  00015	8b 45 10	 mov	 eax, DWORD PTR _size$[ebp]
  00018	89 45 f4	 mov	 DWORD PTR _n$[ebp], eax

; 24   : 
; 25   :    /* Copy as many bytes as will fit */
; 26   :    if (n != 0 && --n != 0) {

  0001b	83 7d f4 00	 cmp	 DWORD PTR _n$[ebp], 0
  0001f	74 43		 je	 SHORT $LN7@eech_strlc
  00021	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  00024	83 e8 01	 sub	 eax, 1
  00027	89 45 f4	 mov	 DWORD PTR _n$[ebp], eax
  0002a	74 38		 je	 SHORT $LN7@eech_strlc
$LN4@eech_strlc:

; 27   :       do {
; 28   :          if ((*d++ = *s++) == 0)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _d$[ebp]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _s$[ebp]
  00032	8a 11		 mov	 dl, BYTE PTR [ecx]
  00034	88 10		 mov	 BYTE PTR [eax], dl
  00036	8b 45 fc	 mov	 eax, DWORD PTR _d$[ebp]
  00039	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0003c	89 4d b0	 mov	 DWORD PTR tv71[ebp], ecx
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _d$[ebp]
  00042	83 c2 01	 add	 edx, 1
  00045	89 55 fc	 mov	 DWORD PTR _d$[ebp], edx
  00048	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0004b	83 c0 01	 add	 eax, 1
  0004e	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax
  00051	83 7d b0 00	 cmp	 DWORD PTR tv71[ebp], 0
  00055	75 02		 jne	 SHORT $LN2@eech_strlc

; 29   :             break;

  00057	eb 0b		 jmp	 SHORT $LN7@eech_strlc
$LN2@eech_strlc:

; 30   :       } while (--n != 0);

  00059	8b 45 f4	 mov	 eax, DWORD PTR _n$[ebp]
  0005c	83 e8 01	 sub	 eax, 1
  0005f	89 45 f4	 mov	 DWORD PTR _n$[ebp], eax
  00062	75 c8		 jne	 SHORT $LN4@eech_strlc
$LN7@eech_strlc:

; 31   :    }
; 32   : 
; 33   :    /* Not enough room in dst, add NUL and traverse rest of src */
; 34   :    if (n == 0) {

  00064	83 7d f4 00	 cmp	 DWORD PTR _n$[ebp], 0
  00068	75 26		 jne	 SHORT $LN9@eech_strlc

; 35   :       if (size != 0)

  0006a	83 7d 10 00	 cmp	 DWORD PTR _size$[ebp], 0
  0006e	74 06		 je	 SHORT $LN5@eech_strlc

; 36   :          *d = '\0';             /* NUL-terminate dst */

  00070	8b 45 fc	 mov	 eax, DWORD PTR _d$[ebp]
  00073	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN5@eech_strlc:

; 37   :       while (*s++);

  00076	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  00079	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0007c	89 4d b0	 mov	 DWORD PTR tv79[ebp], ecx
  0007f	8b 55 f8	 mov	 edx, DWORD PTR _s$[ebp]
  00082	83 c2 01	 add	 edx, 1
  00085	89 55 f8	 mov	 DWORD PTR _s$[ebp], edx
  00088	83 7d b0 00	 cmp	 DWORD PTR tv79[ebp], 0
  0008c	74 02		 je	 SHORT $LN9@eech_strlc
  0008e	eb e6		 jmp	 SHORT $LN5@eech_strlc
$LN9@eech_strlc:

; 38   :    }
; 39   : 
; 40   :    return (s - src - 1);        /* count does not include NUL */

  00090	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  00093	2b 45 0c	 sub	 eax, DWORD PTR _src$[ebp]
  00096	83 e8 01	 sub	 eax, 1

; 41   : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 0c 00	 ret	 12			; 0000000cH
?eech_strlcpy@@YGIPADPBDI@Z ENDP			; eech_strlcpy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_weapon_load_shared_mem@@YGXXZ
_TEXT	SEGMENT
tv133 = -96						; size = 4
tv80 = -96						; size = 4
tv93 = -92						; size = 4
tv72 = -92						; size = 4
_number$1 = -24						; size = 4
_weapon_type$2 = -20					; size = 4
_config_type$3 = -16					; size = 4
_package$4 = -12					; size = 4
_next_free$ = -8					; size = 4
_package_status$ = -4					; size = 4
?update_weapon_load_shared_mem@@YGXXZ PROC		; update_weapon_load_shared_mem, COMDAT

; 327  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 328  : 	weapon_package_status
; 329  : 		*package_status;
; 330  : 
; 331  : 	unsigned next_free = 0;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _next_free$[ebp], 0

; 332  : 
; 333  : 	if (!gPtrSharedMemory || !get_gunship_entity())

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00017	74 09		 je	 SHORT $LN6@update_wea
  00019	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00020	75 05		 jne	 SHORT $LN5@update_wea
$LN6@update_wea:

; 334  : 		return;

  00022	e9 a1 01 00 00	 jmp	 $LN1@update_wea
$LN5@update_wea:

; 335  : 
; 336  : 	package_status = (weapon_package_status *) get_local_entity_ptr_value(get_gunship_entity(), PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0002e	74 0c		 je	 SHORT $LN10@update_wea
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d a4	 mov	 DWORD PTR tv72[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN11@update_wea
$LN10@update_wea:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_weapon_load_shared_mem@@YGXXZ@4JA
  00042	83 c2 09	 add	 edx, 9
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN11@update_wea:
  0005d	b9 01 00 00 00	 mov	 ecx, 1
  00062	85 c9		 test	 ecx, ecx
  00064	74 09		 je	 SHORT $LN12@update_wea
  00066	c7 45 a0 13 00
	00 00		 mov	 DWORD PTR tv80[ebp], 19	; 00000013H
  0006d	eb 21		 jmp	 SHORT $LN13@update_wea
$LN12@update_wea:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_weapon_load_shared_mem@@YGXXZ@4JA
  00075	83 c2 09	 add	 edx, 9
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN13@update_wea:
  00090	6a 13		 push	 19			; 00000013H
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00098	51		 push	 ecx
  00099	6b 55 a4 50	 imul	 edx, DWORD PTR tv72[ebp], 80
  0009d	8b 45 a0	 mov	 eax, DWORD PTR tv80[ebp]
  000a0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000a7	ff d1		 call	 ecx
  000a9	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 337  : 
; 338  : 	if (package_status)

  000ac	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000b0	0f 84 fb 00 00
	00		 je	 $LN7@update_wea

; 339  : 	{
; 340  : 		int package;
; 341  : 		weapon_config_types config_type = (weapon_config_types) get_local_entity_int_value (get_gunship_entity(), INT_TYPE_WEAPON_CONFIG_TYPE);

  000b6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000bd	74 0c		 je	 SHORT $LN14@update_wea
  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	89 4d a4	 mov	 DWORD PTR tv93[ebp], ecx
  000c9	eb 21		 jmp	 SHORT $LN15@update_wea
$LN14@update_wea:
  000cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_weapon_load_shared_mem@@YGXXZ@4JA
  000d1	83 c2 0e	 add	 edx, 14			; 0000000eH
  000d4	52		 push	 edx
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e5	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN15@update_wea:
  000ec	b9 01 00 00 00	 mov	 ecx, 1
  000f1	85 c9		 test	 ecx, ecx
  000f3	74 09		 je	 SHORT $LN16@update_wea
  000f5	c7 45 a0 05 01
	00 00		 mov	 DWORD PTR tv133[ebp], 261 ; 00000105H
  000fc	eb 21		 jmp	 SHORT $LN17@update_wea
$LN16@update_wea:
  000fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_weapon_load_shared_mem@@YGXXZ@4JA
  00104	83 c2 0e	 add	 edx, 14			; 0000000eH
  00107	52		 push	 edx
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00118	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN17@update_wea:
  0011f	68 05 01 00 00	 push	 261			; 00000105H
  00124	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0012a	51		 push	 ecx
  0012b	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv93[ebp], 1116
  00132	8b 45 a0	 mov	 eax, DWORD PTR tv133[ebp]
  00135	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0013c	ff d1		 call	 ecx
  0013e	89 45 f0	 mov	 DWORD PTR _config_type$3[ebp], eax

; 342  : 
; 343  : 		for (package = 0; package < MAX_WEAPON_LOAD_DATA; package++)

  00141	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$4[ebp], 0
  00148	eb 09		 jmp	 SHORT $LN4@update_wea
$LN2@update_wea:
  0014a	8b 45 f4	 mov	 eax, DWORD PTR _package$4[ebp]
  0014d	83 c0 01	 add	 eax, 1
  00150	89 45 f4	 mov	 DWORD PTR _package$4[ebp], eax
$LN4@update_wea:
  00153	83 7d f4 0e	 cmp	 DWORD PTR _package$4[ebp], 14 ; 0000000eH
  00157	7d 56		 jge	 SHORT $LN3@update_wea

; 344  : 		{
; 345  : 			entity_sub_types weapon_type;
; 346  : 			int number;
; 347  : 
; 348  : 			weapon_type = weapon_config_database[config_type][package].sub_type;

  00159	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$3[ebp], 2432
  00160	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$4[ebp], 76
  00164	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  0016b	89 55 ec	 mov	 DWORD PTR _weapon_type$2[ebp], edx

; 349  : 			number = package_status[package].number;

  0016e	8b 45 f4	 mov	 eax, DWORD PTR _package$4[ebp]
  00171	c1 e0 04	 shl	 eax, 4
  00174	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00177	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  0017b	89 55 e8	 mov	 DWORD PTR _number$1[ebp], edx

; 350  : 
; 351  : 			gPtrSharedMemory->weapon_load[next_free].weapon_type = weapon_type;

  0017e	8b 45 f8	 mov	 eax, DWORD PTR _next_free$[ebp]
  00181	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00187	8b 55 ec	 mov	 edx, DWORD PTR _weapon_type$2[ebp]
  0018a	89 94 c1 b4 00
	00 00		 mov	 DWORD PTR [ecx+eax*8+180], edx

; 352  : 			gPtrSharedMemory->weapon_load[next_free].weapon_count = number;

  00191	8b 45 f8	 mov	 eax, DWORD PTR _next_free$[ebp]
  00194	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  0019a	8b 55 e8	 mov	 edx, DWORD PTR _number$1[ebp]
  0019d	89 94 c1 b8 00
	00 00		 mov	 DWORD PTR [ecx+eax*8+184], edx

; 353  : 			next_free++;

  001a4	8b 45 f8	 mov	 eax, DWORD PTR _next_free$[ebp]
  001a7	83 c0 01	 add	 eax, 1
  001aa	89 45 f8	 mov	 DWORD PTR _next_free$[ebp], eax

; 354  : 		}

  001ad	eb 9b		 jmp	 SHORT $LN2@update_wea
$LN3@update_wea:

; 355  : 	}
; 356  : 	else

  001af	eb 17		 jmp	 SHORT $LN1@update_wea
$LN7@update_wea:

; 357  : 		memset(gPtrSharedMemory->weapon_load, 0, sizeof(gPtrSharedMemory->weapon_load));

  001b1	6a 70		 push	 112			; 00000070H
  001b3	6a 00		 push	 0
  001b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  001ba	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 _memset
  001c5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@update_wea:

; 358  : }

  001c8	5f		 pop	 edi
  001c9	5e		 pop	 esi
  001ca	5b		 pop	 ebx
  001cb	8b e5		 mov	 esp, ebp
  001cd	5d		 pop	 ebp
  001ce	c3		 ret	 0
?update_weapon_load_shared_mem@@YGXXZ ENDP		; update_weapon_load_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_waypoint_shared_mem@@YGXXZ
_TEXT	SEGMENT
tv140 = -104						; size = 4
tv83 = -104						; size = 4
tv215 = -100						; size = 4
tv132 = -100						; size = 4
tv75 = -100						; size = 4
_bearing$1 = -32					; size = 4
_dz$2 = -28						; size = 4
_dx$3 = -24						; size = 4
_waypoint_position$4 = -20				; size = 12
_gunship_position$5 = -8				; size = 4
_wp$ = -4						; size = 4
?update_waypoint_shared_mem@@YGXXZ PROC			; update_waypoint_shared_mem, COMDAT

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 289  : 	entity* wp;
; 290  : 
; 291  : 	if (!gPtrSharedMemory || !get_gunship_entity())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	74 09		 je	 SHORT $LN3@update_way
  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00019	75 05		 jne	 SHORT $LN2@update_way
$LN3@update_way:

; 292  : 		return;

  0001b	e9 f4 01 00 00	 jmp	 $LN1@update_way
$LN2@update_way:

; 293  : 
; 294  : 	wp = get_local_entity_current_waypoint(get_gunship_entity());

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_current_waypoint
  0002b	89 45 fc	 mov	 DWORD PTR _wp$[ebp], eax

; 295  : 
; 296  : 	if (wp)

  0002e	83 7d fc 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00032	0f 84 c5 01 00
	00		 je	 $LN4@update_way

; 297  : 	{
; 298  : 		vec3d
; 299  : 			*gunship_position,
; 300  : 			waypoint_position;
; 301  : 
; 302  : 		float
; 303  : 			dx,
; 304  : 			dz,
; 305  : 			bearing;
; 306  : 
; 307  : 		gunship_position = get_local_entity_vec3d_ptr(get_gunship_entity(), VEC3D_TYPE_POSITION);

  00038	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0003f	74 0c		 je	 SHORT $LN8@update_way
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00046	8b 08		 mov	 ecx, DWORD PTR [eax]
  00048	89 4d 9c	 mov	 DWORD PTR tv75[ebp], ecx
  0004b	eb 21		 jmp	 SHORT $LN9@update_way
$LN8@update_way:
  0004d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_waypoint_shared_mem@@YGXXZ@4JA
  00053	83 c2 13	 add	 edx, 19			; 00000013H
  00056	52		 push	 edx
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00067	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@update_way:
  0006e	b9 01 00 00 00	 mov	 ecx, 1
  00073	85 c9		 test	 ecx, ecx
  00075	74 09		 je	 SHORT $LN10@update_way
  00077	c7 45 98 08 00
	00 00		 mov	 DWORD PTR tv83[ebp], 8
  0007e	eb 21		 jmp	 SHORT $LN11@update_way
$LN10@update_way:
  00080	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_waypoint_shared_mem@@YGXXZ@4JA
  00086	83 c2 13	 add	 edx, 19			; 00000013H
  00089	52		 push	 edx
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009a	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN11@update_way:
  000a1	6a 08		 push	 8
  000a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000a9	51		 push	 ecx
  000aa	6b 55 9c 60	 imul	 edx, DWORD PTR tv75[ebp], 96
  000ae	8b 45 98	 mov	 eax, DWORD PTR tv83[ebp]
  000b1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000b8	ff d1		 call	 ecx
  000ba	89 45 f8	 mov	 DWORD PTR _gunship_position$5[ebp], eax

; 308  : 		get_waypoint_display_position (get_gunship_entity(), wp, &waypoint_position);

  000bd	8d 45 ec	 lea	 eax, DWORD PTR _waypoint_position$4[ebp]
  000c0	50		 push	 eax
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _wp$[ebp]
  000c4	51		 push	 ecx
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 309  : 
; 310  : 		gPtrSharedMemory->waypoint_data.waypoint = get_local_entity_char_value(wp, CHAR_TYPE_TAG);

  000d1	83 7d fc 00	 cmp	 DWORD PTR _wp$[ebp], 0
  000d5	74 0a		 je	 SHORT $LN12@update_way
  000d7	8b 45 fc	 mov	 eax, DWORD PTR _wp$[ebp]
  000da	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dc	89 4d 9c	 mov	 DWORD PTR tv132[ebp], ecx
  000df	eb 21		 jmp	 SHORT $LN13@update_way
$LN12@update_way:
  000e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_waypoint_shared_mem@@YGXXZ@4JA
  000e7	83 c2 16	 add	 edx, 22			; 00000016H
  000ea	52		 push	 edx
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fb	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN13@update_way:
  00102	b9 01 00 00 00	 mov	 ecx, 1
  00107	85 c9		 test	 ecx, ecx
  00109	74 09		 je	 SHORT $LN14@update_way
  0010b	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
  00112	eb 21		 jmp	 SHORT $LN15@update_way
$LN14@update_way:
  00114	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_waypoint_shared_mem@@YGXXZ@4JA
  0011a	83 c2 16	 add	 edx, 22			; 00000016H
  0011d	52		 push	 edx
  0011e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00123	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012e	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN15@update_way:
  00135	6a 00		 push	 0
  00137	8b 4d fc	 mov	 ecx, DWORD PTR _wp$[ebp]
  0013a	51		 push	 ecx
  0013b	8b 55 98	 mov	 edx, DWORD PTR tv140[ebp]
  0013e	c1 e2 02	 shl	 edx, 2
  00141	8b 45 9c	 mov	 eax, DWORD PTR tv132[ebp]
  00144	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[edx+eax*8]
  0014b	ff d1		 call	 ecx
  0014d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00153	88 82 a8 00 00
	00		 mov	 BYTE PTR [edx+168], al

; 311  : 		gPtrSharedMemory->waypoint_data.waypoint_range = get_2d_range (gunship_position, &waypoint_position);

  00159	8d 45 ec	 lea	 eax, DWORD PTR _waypoint_position$4[ebp]
  0015c	50		 push	 eax
  0015d	8b 4d f8	 mov	 ecx, DWORD PTR _gunship_position$5[ebp]
  00160	51		 push	 ecx
  00161	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  00166	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  0016c	d9 9a ac 00 00
	00		 fstp	 DWORD PTR [edx+172]

; 312  : 
; 313  : 		dx = waypoint_position.x - gunship_position->x;

  00172	8b 45 f8	 mov	 eax, DWORD PTR _gunship_position$5[ebp]
  00175	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _waypoint_position$4[ebp]
  0017a	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0017e	f3 0f 11 45 e8	 movss	 DWORD PTR _dx$3[ebp], xmm0

; 314  : 		dz = waypoint_position.z - gunship_position->z;

  00183	8b 45 f8	 mov	 eax, DWORD PTR _gunship_position$5[ebp]
  00186	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _waypoint_position$4[ebp+8]
  0018b	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00190	f3 0f 11 45 e4	 movss	 DWORD PTR _dz$2[ebp], xmm0

; 315  : 
; 316  : 		bearing = deg(atan2(dx, dz));

  00195	51		 push	 ecx
  00196	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _dz$2[ebp]
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	51		 push	 ecx
  001a1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _dx$3[ebp]
  001a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ab	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  001b0	d9 5d 9c	 fstp	 DWORD PTR tv215[ebp]
  001b3	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv215[ebp]
  001b8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  001c0	f3 0f 11 45 e0	 movss	 DWORD PTR _bearing$1[ebp], xmm0

; 317  : 		if (bearing < 0.0)

  001c5	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _bearing$1[ebp]
  001ca	0f 57 c9	 xorps	 xmm1, xmm1
  001cd	66 0f 2f c8	 comisd	 xmm1, xmm0
  001d1	76 16		 jbe	 SHORT $LN6@update_way

; 318  : 			bearing += 360.0;

  001d3	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _bearing$1[ebp]
  001d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4076800000000000
  001e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e4	f3 0f 11 45 e0	 movss	 DWORD PTR _bearing$1[ebp], xmm0
$LN6@update_way:

; 319  : 
; 320  : 		gPtrSharedMemory->waypoint_data.waypoint_bearing = bearing;

  001e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  001ee	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _bearing$1[ebp]
  001f3	f3 0f 11 80 b0
	00 00 00	 movss	 DWORD PTR [eax+176], xmm0

; 321  : 	}
; 322  : 	else

  001fb	eb 17		 jmp	 SHORT $LN5@update_way
$LN4@update_way:

; 323  : 		memset(&gPtrSharedMemory->waypoint_data, 0, sizeof(waypoint_data_t));

  001fd	6a 0c		 push	 12			; 0000000cH
  001ff	6a 00		 push	 0
  00201	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00206	05 a8 00 00 00	 add	 eax, 168		; 000000a8H
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 _memset
  00211	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@update_way:
$LN1@update_way:

; 324  : }

  00214	5f		 pop	 edi
  00215	5e		 pop	 esi
  00216	5b		 pop	 ebx
  00217	8b e5		 mov	 esp, ebp
  00219	5d		 pop	 ebp
  0021a	c3		 ret	 0
?update_waypoint_shared_mem@@YGXXZ ENDP			; update_waypoint_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_dynamics_shared_mem@@YGXXZ
_TEXT	SEGMENT
tv80 = -72						; size = 4
tv72 = -68						; size = 4
?update_dynamics_shared_mem@@YGXXZ PROC			; update_dynamics_shared_mem, COMDAT

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 253  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 05		 jne	 SHORT $LN2@update_dyn

; 254  : 		return;

  00012	e9 21 02 00 00	 jmp	 $LN1@update_dyn
$LN2@update_dyn:

; 255  : 
; 256  : 	gPtrSharedMemory->time_of_day = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_TIME_OF_DAY);

  00017	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0001e	74 0c		 je	 SHORT $LN4@update_dyn
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	89 4d bc	 mov	 DWORD PTR tv72[ebp], ecx
  0002a	eb 21		 jmp	 SHORT $LN5@update_dyn
$LN4@update_dyn:
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_shared_mem@@YGXXZ@4JA
  00032	83 c2 04	 add	 edx, 4
  00035	52		 push	 edx
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00046	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN5@update_dyn:
  0004d	b9 01 00 00 00	 mov	 ecx, 1
  00052	85 c9		 test	 ecx, ecx
  00054	74 09		 je	 SHORT $LN6@update_dyn
  00056	c7 45 b8 8e 00
	00 00		 mov	 DWORD PTR tv80[ebp], 142 ; 0000008eH
  0005d	eb 21		 jmp	 SHORT $LN7@update_dyn
$LN6@update_dyn:
  0005f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_shared_mem@@YGXXZ@4JA
  00065	83 c2 04	 add	 edx, 4
  00068	52		 push	 edx
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@DCAGDNGC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00079	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN7@update_dyn:
  00080	68 8e 00 00 00	 push	 142			; 0000008eH
  00085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0008b	51		 push	 ecx
  0008c	69 55 bc bc 02
	00 00		 imul	 edx, DWORD PTR tv72[ebp], 700
  00093	8b 45 b8	 mov	 eax, DWORD PTR tv80[ebp]
  00096	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0009d	ff d1		 call	 ecx
  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000a5	d9 5a 08	 fstp	 DWORD PTR [edx+8]

; 257  : 
; 258  : 	gPtrSharedMemory->pitch = current_flight_dynamics->pitch.value;

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b3	8b 91 5c 21 00
	00		 mov	 edx, DWORD PTR [ecx+8540]
  000b9	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 259  : 	gPtrSharedMemory->roll = current_flight_dynamics->roll.value;

  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000c7	8b 91 74 21 00
	00		 mov	 edx, DWORD PTR [ecx+8564]
  000cd	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 260  : 	gPtrSharedMemory->heading = current_flight_dynamics->heading.value;

  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000db	8b 91 8c 21 00
	00		 mov	 edx, DWORD PTR [ecx+8588]
  000e1	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 261  : 
; 262  : 	gPtrSharedMemory->indicated_airspeed = current_flight_dynamics->indicated_airspeed.value;

  000e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ef	8b 91 fc 23 00
	00		 mov	 edx, DWORD PTR [ecx+9212]
  000f5	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 263  : 	gPtrSharedMemory->indicated_slip = current_flight_dynamics->indicated_slip.value;

  000f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00103	8b 91 14 24 00
	00		 mov	 edx, DWORD PTR [ecx+9236]
  00109	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 264  : 	gPtrSharedMemory->vertical_speed = current_flight_dynamics->world_velocity_y.value;

  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00111	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00117	8b 91 14 21 00
	00		 mov	 edx, DWORD PTR [ecx+8468]
  0011d	89 50 20	 mov	 DWORD PTR [eax+32], edx

; 265  : 
; 266  : 	gPtrSharedMemory->barometric_altitude = current_flight_dynamics->barometric_altitude.value;

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00125	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0012b	8b 91 2c 24 00
	00		 mov	 edx, DWORD PTR [ecx+9260]
  00131	89 50 24	 mov	 DWORD PTR [eax+36], edx

; 267  : 	gPtrSharedMemory->radar_altitude = current_flight_dynamics->radar_altitude.value;

  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00139	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0013f	8b 91 44 24 00
	00		 mov	 edx, DWORD PTR [ecx+9284]
  00145	89 50 28	 mov	 DWORD PTR [eax+40], edx

; 268  : 
; 269  : 	gPtrSharedMemory->g_force = current_flight_dynamics->g_force.value;

  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  0014d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00153	8b 91 5c 24 00
	00		 mov	 edx, DWORD PTR [ecx+9308]
  00159	89 50 2c	 mov	 DWORD PTR [eax+44], edx

; 270  : 
; 271  : 	gPtrSharedMemory->left_engine_rpm = current_flight_dynamics->left_engine_rpm.value;

  0015c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00161	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00167	8b 91 7c 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7292]
  0016d	89 50 30	 mov	 DWORD PTR [eax+48], edx

; 272  : 	gPtrSharedMemory->left_engine_n1_rpm = current_flight_dynamics->left_engine_n1_rpm.value;

  00170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00175	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0017b	8b 91 94 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7316]
  00181	89 50 34	 mov	 DWORD PTR [eax+52], edx

; 273  : 	gPtrSharedMemory->left_engine_torque = current_flight_dynamics->left_engine_torque.value;

  00184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00189	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0018f	8b 91 ac 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7340]
  00195	89 50 38	 mov	 DWORD PTR [eax+56], edx

; 274  : 	gPtrSharedMemory->left_engine_temp = current_flight_dynamics->left_engine_temp.value;

  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a3	8b 91 c4 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7364]
  001a9	89 50 3c	 mov	 DWORD PTR [eax+60], edx

; 275  : 
; 276  : 	gPtrSharedMemory->right_engine_rpm = current_flight_dynamics->right_engine_rpm.value;

  001ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  001b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001b7	8b 91 dc 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7388]
  001bd	89 50 40	 mov	 DWORD PTR [eax+64], edx

; 277  : 	gPtrSharedMemory->right_engine_n1_rpm = current_flight_dynamics->right_engine_n1_rpm.value;

  001c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  001c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001cb	8b 91 f4 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7412]
  001d1	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 278  : 	gPtrSharedMemory->right_engine_torque = current_flight_dynamics->right_engine_torque.value;

  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  001d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001df	8b 91 0c 1d 00
	00		 mov	 edx, DWORD PTR [ecx+7436]
  001e5	89 50 48	 mov	 DWORD PTR [eax+72], edx

; 279  : 	gPtrSharedMemory->right_engine_temp = current_flight_dynamics->right_engine_temp.value;

  001e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  001ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f3	8b 91 24 1d 00
	00		 mov	 edx, DWORD PTR [ecx+7460]
  001f9	89 50 4c	 mov	 DWORD PTR [eax+76], edx

; 280  : 
; 281  : 	gPtrSharedMemory->combined_engine_rpm = current_flight_dynamics->combined_engine_rpm.value;

  001fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00201	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00207	8b 91 74 24 00
	00		 mov	 edx, DWORD PTR [ecx+9332]
  0020d	89 50 50	 mov	 DWORD PTR [eax+80], edx

; 282  : 	gPtrSharedMemory->combined_engine_torque = current_flight_dynamics->combined_engine_torque.value;

  00210	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00215	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0021b	8b 91 8c 24 00
	00		 mov	 edx, DWORD PTR [ecx+9356]
  00221	89 50 54	 mov	 DWORD PTR [eax+84], edx

; 283  : 
; 284  : 	gPtrSharedMemory->fuel_weight = current_flight_dynamics->fuel_weight.value;

  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00229	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0022f	8b 91 a4 24 00
	00		 mov	 edx, DWORD PTR [ecx+9380]
  00235	89 50 58	 mov	 DWORD PTR [eax+88], edx
$LN1@update_dyn:

; 285  : }

  00238	5f		 pop	 edi
  00239	5e		 pop	 esi
  0023a	5b		 pop	 ebx
  0023b	8b e5		 mov	 esp, ebp
  0023d	5d		 pop	 ebp
  0023e	c3		 ret	 0
?update_dynamics_shared_mem@@YGXXZ ENDP			; update_dynamics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_default_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_default_avionics_shared_mem@@YGXXZ PROC		; update_default_avionics_shared_mem, COMDAT

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 192  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_def

; 193  : 		return;

  00012	eb 1d		 jmp	 SHORT $LN1@update_def
$LN2@update_def:

; 194  : 
; 195  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_APACHE;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 196  : 	gPtrSharedMemory->cockpit_lamps.default_lamps = default_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?default_lamps@@3UDEFAULT_LAMP_FLAGS@@A ; default_lamps
  0002b	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
$LN1@update_def:

; 197  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?update_default_avionics_shared_mem@@YGXXZ ENDP		; update_default_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_ka50_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_ka50_avionics_shared_mem@@YGXXZ PROC		; update_ka50_avionics_shared_mem, COMDAT

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 164  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_ka5

; 165  : 		return;

  00012	eb 30		 jmp	 SHORT $LN1@update_ka5
$LN2@update_ka5:

; 166  : 
; 167  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_KA50;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 07 00
	00 00		 mov	 DWORD PTR [eax+4], 7

; 168  : 	gPtrSharedMemory->cockpit_lamps.ka50_lamps = ka50_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	05 98 00 00 00	 add	 eax, 152		; 00000098H
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ka50_lamps@@3UKA50_LAMP_FLAGS@@A
  00030	89 08		 mov	 DWORD PTR [eax], ecx
  00032	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?ka50_lamps@@3UKA50_LAMP_FLAGS@@A+4
  00038	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0003b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ka50_lamps@@3UKA50_LAMP_FLAGS@@A+8
  00041	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@update_ka5:

; 169  : }

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?update_ka50_avionics_shared_mem@@YGXXZ ENDP		; update_ka50_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_hokum_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_hokum_avionics_shared_mem@@YGXXZ PROC		; update_hokum_avionics_shared_mem, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 155  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_hok

; 156  : 		return;

  00012	eb 30		 jmp	 SHORT $LN1@update_hok
$LN2@update_hok:

; 157  : 
; 158  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_HOKUM;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 03 00
	00 00		 mov	 DWORD PTR [eax+4], 3

; 159  : 	gPtrSharedMemory->cockpit_lamps.hokum_lamps = hokum_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	05 98 00 00 00	 add	 eax, 152		; 00000098H
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hokum_lamps@@3UHOKUM_LAMP_FLAGS@@A
  00030	89 08		 mov	 DWORD PTR [eax], ecx
  00032	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?hokum_lamps@@3UHOKUM_LAMP_FLAGS@@A+4
  00038	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0003b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?hokum_lamps@@3UHOKUM_LAMP_FLAGS@@A+8
  00041	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@update_hok:

; 160  : }

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?update_hokum_avionics_shared_mem@@YGXXZ ENDP		; update_hokum_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_hind_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_hind_avionics_shared_mem@@YGXXZ PROC		; update_hind_avionics_shared_mem, COMDAT

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 146  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_hin

; 147  : 		return;

  00012	eb 39		 jmp	 SHORT $LN1@update_hin
$LN2@update_hin:

; 148  : 
; 149  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_HIND;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 05 00
	00 00		 mov	 DWORD PTR [eax+4], 5

; 150  : 	gPtrSharedMemory->cockpit_lamps.hind_lamps = hind_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	05 98 00 00 00	 add	 eax, 152		; 00000098H
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hind_lamps@@3UHIND_LAMP_FLAGS@@A
  00030	89 08		 mov	 DWORD PTR [eax], ecx
  00032	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?hind_lamps@@3UHIND_LAMP_FLAGS@@A+4
  00038	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0003b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?hind_lamps@@3UHIND_LAMP_FLAGS@@A+8
  00041	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00044	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?hind_lamps@@3UHIND_LAMP_FLAGS@@A+12
  0004a	89 50 0c	 mov	 DWORD PTR [eax+12], edx
$LN1@update_hin:

; 151  : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?update_hind_avionics_shared_mem@@YGXXZ ENDP		; update_hind_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_havoc_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_havoc_avionics_shared_mem@@YGXXZ PROC		; update_havoc_avionics_shared_mem, COMDAT

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 137  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_hav

; 138  : 		return;

  00012	eb 39		 jmp	 SHORT $LN1@update_hav
$LN2@update_hav:

; 139  : 
; 140  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_HAVOC;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 141  : 	gPtrSharedMemory->cockpit_lamps.havoc_lamps = havoc_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	05 98 00 00 00	 add	 eax, 152		; 00000098H
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00030	89 08		 mov	 DWORD PTR [eax], ecx
  00032	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00038	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0003b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00041	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00044	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12
  0004a	89 50 0c	 mov	 DWORD PTR [eax+12], edx
$LN1@update_hav:

; 142  : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?update_havoc_avionics_shared_mem@@YGXXZ ENDP		; update_havoc_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_ekran_shared_mem@@YGXPAD000@Z
_TEXT	SEGMENT
_l1$ = 8						; size = 4
_l2$ = 12						; size = 4
_l3$ = 16						; size = 4
_l4$ = 20						; size = 4
?update_ekran_shared_mem@@YGXPAD000@Z PROC		; update_ekran_shared_mem, COMDAT

; 226  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 227  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 05		 jne	 SHORT $LN2@update_ekr

; 228  : 		return;

  00012	e9 9d 00 00 00	 jmp	 $LN1@update_ekr
$LN2@update_ekr:

; 229  : 
; 230  : 	if (l1)

  00017	83 7d 08 00	 cmp	 DWORD PTR _l1$[ebp], 0
  0001b	74 21		 je	 SHORT $LN3@update_ekr

; 231  : 	{
; 232  : 		strlcpy(gPtrSharedMemory->cockpit_strings.ekran_display[0], l1, MAX_EKRAN_STRINGLEN);

  0001d	8b 45 08	 mov	 eax, DWORD PTR _l1$[ebp]
  00020	50		 push	 eax
  00021	6a 09		 push	 9
  00023	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00028	6b d1 00	 imul	 edx, ecx, 0
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00030	8d 4c 10 5c	 lea	 ecx, DWORD PTR [eax+edx+92]
  00034	51		 push	 ecx
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@update_ekr:

; 233  : 	}
; 234  : 
; 235  : 	if (l2)

  0003e	83 7d 0c 00	 cmp	 DWORD PTR _l2$[ebp], 0
  00042	74 22		 je	 SHORT $LN4@update_ekr

; 236  : 	{
; 237  : 		strlcpy(gPtrSharedMemory->cockpit_strings.ekran_display[1], l2, MAX_EKRAN_STRINGLEN);

  00044	8b 45 0c	 mov	 eax, DWORD PTR _l2$[ebp]
  00047	50		 push	 eax
  00048	6a 09		 push	 9
  0004a	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0004f	c1 e1 00	 shl	 ecx, 0
  00052	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00058	8d 44 0a 5c	 lea	 eax, DWORD PTR [edx+ecx+92]
  0005c	50		 push	 eax
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@update_ekr:

; 238  : 	}
; 239  : 
; 240  : 	if (l3)

  00066	83 7d 10 00	 cmp	 DWORD PTR _l3$[ebp], 0
  0006a	74 21		 je	 SHORT $LN5@update_ekr

; 241  : 	{
; 242  : 		strlcpy(gPtrSharedMemory->cockpit_strings.ekran_display[2], l3, MAX_EKRAN_STRINGLEN);

  0006c	8b 45 10	 mov	 eax, DWORD PTR _l3$[ebp]
  0006f	50		 push	 eax
  00070	6a 09		 push	 9
  00072	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00077	d1 e1		 shl	 ecx, 1
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  0007f	8d 44 0a 5c	 lea	 eax, DWORD PTR [edx+ecx+92]
  00083	50		 push	 eax
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@update_ekr:

; 243  : 	}
; 244  : 
; 245  : 	if (l4)

  0008d	83 7d 14 00	 cmp	 DWORD PTR _l4$[ebp], 0
  00091	74 21		 je	 SHORT $LN1@update_ekr

; 246  : 	{
; 247  : 		strlcpy(gPtrSharedMemory->cockpit_strings.ekran_display[3], l4, MAX_EKRAN_STRINGLEN);

  00093	8b 45 14	 mov	 eax, DWORD PTR _l4$[ebp]
  00096	50		 push	 eax
  00097	6a 09		 push	 9
  00099	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0009e	6b d1 03	 imul	 edx, ecx, 3
  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000a6	8d 4c 10 5c	 lea	 ecx, DWORD PTR [eax+edx+92]
  000aa	51		 push	 ecx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@update_ekr:

; 248  : 	}
; 249  : }

  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 10 00	 ret	 16			; 00000010H
?update_ekran_shared_mem@@YGXPAD000@Z ENDP		; update_ekran_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_upfront_display_shared_mem@@YGXPAD000@Z
_TEXT	SEGMENT
_l1$ = 8						; size = 4
_l2$ = 12						; size = 4
_l3$ = 16						; size = 4
_l4$ = 20						; size = 4
?update_upfront_display_shared_mem@@YGXPAD000@Z PROC	; update_upfront_display_shared_mem, COMDAT

; 200  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 201  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 05		 jne	 SHORT $LN2@update_upf

; 202  : 		return;

  00012	e9 9d 00 00 00	 jmp	 $LN1@update_upf
$LN2@update_upf:

; 203  : 
; 204  : 	if (l1)

  00017	83 7d 08 00	 cmp	 DWORD PTR _l1$[ebp], 0
  0001b	74 21		 je	 SHORT $LN3@update_upf

; 205  : 	{
; 206  : 		strlcpy(gPtrSharedMemory->cockpit_strings.upfront_display[0], l1, MAX_UFD_STRINGLEN);

  0001d	8b 45 08	 mov	 eax, DWORD PTR _l1$[ebp]
  00020	50		 push	 eax
  00021	6a 0e		 push	 14			; 0000000eH
  00023	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00028	6b d1 00	 imul	 edx, ecx, 0
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00030	8d 4c 10 5c	 lea	 ecx, DWORD PTR [eax+edx+92]
  00034	51		 push	 ecx
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@update_upf:

; 207  : 	}
; 208  : 
; 209  : 	if (l2)

  0003e	83 7d 0c 00	 cmp	 DWORD PTR _l2$[ebp], 0
  00042	74 22		 je	 SHORT $LN4@update_upf

; 210  : 	{
; 211  : 		strlcpy(gPtrSharedMemory->cockpit_strings.upfront_display[1], l2, MAX_UFD_STRINGLEN);

  00044	8b 45 0c	 mov	 eax, DWORD PTR _l2$[ebp]
  00047	50		 push	 eax
  00048	6a 0e		 push	 14			; 0000000eH
  0004a	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0004f	c1 e1 00	 shl	 ecx, 0
  00052	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00058	8d 44 0a 5c	 lea	 eax, DWORD PTR [edx+ecx+92]
  0005c	50		 push	 eax
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@update_upf:

; 212  : 	}
; 213  : 
; 214  : 	if (l3)

  00066	83 7d 10 00	 cmp	 DWORD PTR _l3$[ebp], 0
  0006a	74 21		 je	 SHORT $LN5@update_upf

; 215  : 	{
; 216  : 		strlcpy(gPtrSharedMemory->cockpit_strings.upfront_display[2], l3, MAX_UFD_STRINGLEN);

  0006c	8b 45 10	 mov	 eax, DWORD PTR _l3$[ebp]
  0006f	50		 push	 eax
  00070	6a 0e		 push	 14			; 0000000eH
  00072	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00077	d1 e1		 shl	 ecx, 1
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  0007f	8d 44 0a 5c	 lea	 eax, DWORD PTR [edx+ecx+92]
  00083	50		 push	 eax
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@update_upf:

; 217  : 	}
; 218  : 
; 219  : 	if (l4)

  0008d	83 7d 14 00	 cmp	 DWORD PTR _l4$[ebp], 0
  00091	74 21		 je	 SHORT $LN1@update_upf

; 220  : 	{
; 221  : 		strlcpy(gPtrSharedMemory->cockpit_strings.upfront_display[3], l4, MAX_UFD_STRINGLEN);

  00093	8b 45 14	 mov	 eax, DWORD PTR _l4$[ebp]
  00096	50		 push	 eax
  00097	6a 0e		 push	 14			; 0000000eH
  00099	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0009e	6b d1 03	 imul	 edx, ecx, 3
  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  000a6	8d 4c 10 5c	 lea	 ecx, DWORD PTR [eax+edx+92]
  000aa	51		 push	 ecx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcpy_s
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@update_upf:

; 222  : 	}
; 223  : }

  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 10 00	 ret	 16			; 00000010H
?update_upfront_display_shared_mem@@YGXPAD000@Z ENDP	; update_upfront_display_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_kiowa_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_kiowa_avionics_shared_mem@@YGXXZ PROC		; update_kiowa_avionics_shared_mem, COMDAT

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 182  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_kio

; 183  : 		return;

  00012	eb 1d		 jmp	 SHORT $LN1@update_kio
$LN2@update_kio:

; 184  : 
; 185  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_KIOWA;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 09 00
	00 00		 mov	 DWORD PTR [eax+4], 9

; 186  : 	gPtrSharedMemory->cockpit_lamps.kiowa_lamps = kiowa_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?kiowa_lamps@@3UKIOWA_LAMP_FLAGS@@A ; kiowa_lamps
  0002b	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
$LN1@update_kio:

; 187  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?update_kiowa_avionics_shared_mem@@YGXXZ ENDP		; update_kiowa_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_viper_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_viper_avionics_shared_mem@@YGXXZ PROC		; update_viper_avionics_shared_mem, COMDAT

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 173  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_vip

; 174  : 		return;

  00012	eb 1d		 jmp	 SHORT $LN1@update_vip
$LN2@update_vip:

; 175  : 
; 176  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_VIPER;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 08 00
	00 00		 mov	 DWORD PTR [eax+4], 8

; 177  : 	gPtrSharedMemory->cockpit_lamps.viper_lamps = viper_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?viper_lamps@@3UVIPER_LAMP_FLAGS@@A ; viper_lamps
  0002b	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
$LN1@update_vip:

; 178  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?update_viper_avionics_shared_mem@@YGXXZ ENDP		; update_viper_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_comanche_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_comanche_avionics_shared_mem@@YGXXZ PROC	; update_comanche_avionics_shared_mem, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 128  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_com

; 129  : 		return;

  00012	eb 29		 jmp	 SHORT $LN1@update_com
$LN2@update_com:

; 130  : 
; 131  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_COMANCHE;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 02 00
	00 00		 mov	 DWORD PTR [eax+4], 2

; 132  : 	gPtrSharedMemory->cockpit_lamps.comanche_lamps = comanche_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?comanche_lamps@@3UCOMANCHE_LAMP_FLAGS@@A
  0002b	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
  00031	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?comanche_lamps@@3UCOMANCHE_LAMP_FLAGS@@A+4
  00037	89 90 9c 00 00
	00		 mov	 DWORD PTR [eax+156], edx
$LN1@update_com:

; 133  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?update_comanche_avionics_shared_mem@@YGXXZ ENDP	; update_comanche_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_blackhawk_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_blackhawk_avionics_shared_mem@@YGXXZ PROC	; update_blackhawk_avionics_shared_mem, COMDAT

; 118  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 119  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_bla

; 120  : 		return;

  00012	eb 1d		 jmp	 SHORT $LN1@update_bla
$LN2@update_bla:

; 121  : 
; 122  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_BLACKHAWK;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 04 00
	00 00		 mov	 DWORD PTR [eax+4], 4

; 123  : 	gPtrSharedMemory->cockpit_lamps.blackhawk_lamps = blackhawk_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?blackhawk_lamps@@3UBLACKHAWK_LAMP_FLAGS@@A ; blackhawk_lamps
  0002b	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
$LN1@update_bla:

; 124  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?update_blackhawk_avionics_shared_mem@@YGXXZ ENDP	; update_blackhawk_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_ah64a_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_ah64a_avionics_shared_mem@@YGXXZ PROC		; update_ah64a_avionics_shared_mem, COMDAT

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 101  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_ah6

; 102  : 		return;

  00012	eb 1d		 jmp	 SHORT $LN1@update_ah6
$LN2@update_ah6:

; 103  : 
; 104  :   gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_AH64A;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 06 00
	00 00		 mov	 DWORD PTR [eax+4], 6

; 105  : 	gPtrSharedMemory->cockpit_lamps.ah64a_lamps = ah64a_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ah64a_lamps@@3UAH64A_LAMP_FLAGS@@A ; ah64a_lamps
  0002b	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
$LN1@update_ah6:

; 106  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?update_ah64a_avionics_shared_mem@@YGXXZ ENDP		; update_ah64a_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?update_apache_avionics_shared_mem@@YGXXZ
_TEXT	SEGMENT
?update_apache_avionics_shared_mem@@YGXXZ PROC		; update_apache_avionics_shared_mem, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 110  : 	if (gPtrSharedMemory == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	75 02		 jne	 SHORT $LN2@update_apa

; 111  : 		return;

  00012	eb 1d		 jmp	 SHORT $LN1@update_apa
$LN2@update_apa:

; 112  : 
; 113  : 	gPtrSharedMemory->current_gunship = GUNSHIP_TYPE_APACHE;

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00019	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 114  : 	gPtrSharedMemory->cockpit_lamps.apache_lamps = apache_lamps;

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00025	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0002b	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
$LN1@update_apa:

; 115  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?update_apache_avionics_shared_mem@@YGXXZ ENDP		; update_apache_avionics_shared_mem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?DeInitialise_Shared_Memory@@YGXXZ
_TEXT	SEGMENT
?DeInitialise_Shared_Memory@@YGXXZ PROC			; DeInitialise_Shared_Memory, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 	if (gPtrSharedMemory)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
  00010	74 21		 je	 SHORT $LN2@DeInitiali

; 76   : 	{
; 77   : 		gPtrSharedMemory->version = - SHARED_MEM_DATA_VERSION;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00017	c7 00 fd ff ff
	ff		 mov	 DWORD PTR [eax], -3	; fffffffdH

; 78   : 		UnmapViewOfFile(gPtrSharedMemory);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00022	50		 push	 eax
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnmapViewOfFile@4

; 79   : 		gPtrSharedMemory = NULL;

  00029	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory
$LN2@DeInitiali:

; 80   : 	}
; 81   : 	CloseHandle(gHandleSharedMemory);

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gHandleSharedMemory@@3PAXA
  00038	50		 push	 eax
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 82   : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?DeInitialise_Shared_Memory@@YGXXZ ENDP			; DeInitialise_Shared_Memory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\sharedmem.c
;	COMDAT ?Initialise_Shared_Memory@@YGHXZ
_TEXT	SEGMENT
?Initialise_Shared_Memory@@YGHXZ PROC			; Initialise_Shared_Memory, COMDAT

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 49   : 	gPtrSharedMemory = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, 0 ; gPtrSharedMemory

; 50   : 
; 51   : 	gHandleSharedMemory = CreateFileMapping(INVALID_HANDLE_VALUE,			// current file handle

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PJOMDND@EECHSharedMemory@
  00018	68 24 01 00 00	 push	 292			; 00000124H
  0001d	6a 00		 push	 0
  0001f	6a 04		 push	 4
  00021	6a 00		 push	 0
  00023	6a ff		 push	 -1
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileMappingA@24
  0002b	a3 00 00 00 00	 mov	 DWORD PTR ?gHandleSharedMemory@@3PAXA, eax

; 52   : 											NULL,                           // default security
; 53   : 											PAGE_READWRITE,                 // read/write permission
; 54   : 											0,								// max. object size
; 55   : 											sizeof(shared_memory_t),        // size of hFile
; 56   : 											"EECHSharedMemory");            // name of mapping object
; 57   : 
; 58   : 	if (gHandleSharedMemory != NULL)

  00030	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gHandleSharedMemory@@3PAXA, 0
  00037	74 2d		 je	 SHORT $LN2@Initialise

; 59   : 	{
; 60   : 		gPtrSharedMemory = (shared_memory_t*) MapViewOfFile(gHandleSharedMemory, FILE_MAP_WRITE, 0, 0, 0);

  00039	6a 00		 push	 0
  0003b	6a 00		 push	 0
  0003d	6a 00		 push	 0
  0003f	6a 02		 push	 2
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gHandleSharedMemory@@3PAXA
  00046	50		 push	 eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MapViewOfFile@20
  0004d	a3 00 00 00 00	 mov	 DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A, eax ; gPtrSharedMemory

; 61   : 
; 62   : 		gPtrSharedMemory->version = SHARED_MEM_DATA_VERSION;

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gPtrSharedMemory@@3PAUshared_memory_t@@A ; gPtrSharedMemory
  00057	c7 00 03 00 00
	00		 mov	 DWORD PTR [eax], 3

; 63   : 
; 64   : 		return 1;

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	eb 10		 jmp	 SHORT $LN1@Initialise

; 65   : 	}
; 66   : 	else

  00064	eb 0e		 jmp	 SHORT $LN1@Initialise
$LN2@Initialise:

; 67   : 	{
; 68   : 		CloseHandle(gHandleSharedMemory);

  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gHandleSharedMemory@@3PAXA
  0006b	50		 push	 eax
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 69   : 		return 0;

  00072	33 c0		 xor	 eax, eax
$LN1@Initialise:

; 70   : 	}
; 71   : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?Initialise_Shared_Memory@@YGHXZ ENDP			; Initialise_Shared_Memory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
