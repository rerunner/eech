; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\views\vm_extrn.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?ext_col_message@@3UREAL_COLOUR@@A		; ext_col_message
PUBLIC	?ext_col_alert_message@@3UREAL_COLOUR@@A	; ext_col_alert_message
PUBLIC	?ext_col_menu_title@@3UREAL_COLOUR@@A		; ext_col_menu_title
PUBLIC	?ext_col_list_title@@3UREAL_COLOUR@@A		; ext_col_list_title
PUBLIC	?ext_col_list_item_available@@3UREAL_COLOUR@@A	; ext_col_list_item_available
PUBLIC	?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A ; ext_col_list_item_unavailable
PUBLIC	?ext_col_list_item_selected@@3UREAL_COLOUR@@A	; ext_col_list_item_selected
PUBLIC	?ext_col_blue_force@@3UREAL_COLOUR@@A		; ext_col_blue_force
PUBLIC	?ext_col_red_force@@3UREAL_COLOUR@@A		; ext_col_red_force
PUBLIC	?external_view_inset_target@@3HA		; external_view_inset_target
_BSS	SEGMENT
?ext_col_message@@3UREAL_COLOUR@@A DD 01H DUP (?)	; ext_col_message
?ext_col_alert_message@@3UREAL_COLOUR@@A DD 01H DUP (?)	; ext_col_alert_message
?ext_col_menu_title@@3UREAL_COLOUR@@A DD 01H DUP (?)	; ext_col_menu_title
?ext_col_list_title@@3UREAL_COLOUR@@A DD 01H DUP (?)	; ext_col_list_title
?ext_col_list_item_available@@3UREAL_COLOUR@@A DD 01H DUP (?) ; ext_col_list_item_available
?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A DD 01H DUP (?) ; ext_col_list_item_unavailable
?ext_col_list_item_selected@@3UREAL_COLOUR@@A DD 01H DUP (?) ; ext_col_list_item_selected
?ext_col_blue_force@@3UREAL_COLOUR@@A DD 01H DUP (?)	; ext_col_blue_force
?ext_col_red_force@@3UREAL_COLOUR@@A DD 01H DUP (?)	; ext_col_red_force
?external_view_inset_target@@3HA DD 01H DUP (?)		; external_view_inset_target
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?initialise_external_view@@YGXXZ		; initialise_external_view
PUBLIC	?deinitialise_external_view@@YGXXZ		; deinitialise_external_view
PUBLIC	?update_external_view@@YGXXZ			; update_external_view
PUBLIC	?draw_external_3d_view@@YGXXZ			; draw_external_3d_view
PUBLIC	?select_external_view@@YGXXZ			; select_external_view
PUBLIC	?draw_demo_logo@@YGXXZ				; draw_demo_logo
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA ; `display_external_view_text'::`1'::__LINE__Var
PUBLIC	??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0L@CLEMLOPG@Weapon?3?5?$CFs@		; `string'
PUBLIC	??_C@_0BC@KBGBEHGB@Weapon?3?5?$CFs?5?$CI?$CF?41f?$CJ@ ; `string'
PUBLIC	??_C@_0N@KMKDBDPI@Launcher?3?5?$CFs@		; `string'
PUBLIC	??_C@_0BC@MEIJHGLD@Launcher?3?5Unknown@		; `string'
PUBLIC	??_C@_0L@FOELEALI@Target?3?5?$CFs@		; `string'
PUBLIC	??_C@_0BA@MELJIMJB@Target?3?5Unknown@		; `string'
PUBLIC	??_C@_0L@ICEAPIOD@?$CFs?5?$CI?$CFs?5?$CFs?$CJ@	; `string'
PUBLIC	??_C@_07MLNBPDHK@company@			; `string'
PUBLIC	??_C@_0O@EDCKAOKI@?8?$CFs?51?9?$CFd?8?0?5?$CFs@	; `string'
PUBLIC	??_C@_06OMDHIKNA@?$CFs?0?5?$CFs@		; `string'
PUBLIC	??_C@_06FOPKNDNO@LOSSES@			; `string'
PUBLIC	??_C@_05EHJFADHN@KILLS@				; `string'
PUBLIC	??_C@_0O@PIMAMCBF@?0?5?$CFs?3?$CFd?5?$CFs?3?$CFd@ ; `string'
PUBLIC	??_C@_04KKJBFIJG@TASK@				; `string'
PUBLIC	??_C@_0N@IPMCBGFA@?0?5?$CFs?3?$CFs?5?$CI?$CFs?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA ; `draw_external_3d_view'::`1'::__LINE__Var
PUBLIC	??_C@_0BM@ELGGIDGJ@get_external_view_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_06OEKOLKIL@source@			; `string'
PUBLIC	?__LINE__Var@?0??select_external_view@@YGXXZ@4JA ; `select_external_view'::`1'::__LINE__Var
PUBLIC	??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@	; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fec000000000000
PUBLIC	__real@3fed555555555555
PUBLIC	__real@3feeaaaaaaaaaaab
PUBLIC	__real@437f0000
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_3d_range
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?get_screen_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_width
EXTRN	?set_d3d_transparency_on@@YGXXZ:PROC		; set_d3d_transparency_on
EXTRN	?set_d3d_transparency_off@@YGXXZ:PROC		; set_d3d_transparency_off
EXTRN	?set_d3d_zbuffer_comparison@@YGXH@Z:PROC	; set_d3d_zbuffer_comparison
EXTRN	?set_d3d_culling@@YGXH@Z:PROC			; set_d3d_culling
EXTRN	?set_d3d_texture_wrapping@@YGXHH@Z:PROC		; set_d3d_texture_wrapping
EXTRN	?set_d3d_texture_mag_filtering@@YGXH@Z:PROC	; set_d3d_texture_mag_filtering
EXTRN	?set_d3d_texture_min_filtering@@YGXH@Z:PROC	; set_d3d_texture_min_filtering
EXTRN	?set_d3d_texture_mip_filtering@@YGXH@Z:PROC	; set_d3d_texture_mip_filtering
EXTRN	?set_d3d_plain_renderstate@@YGXXZ:PROC		; set_d3d_plain_renderstate
EXTRN	?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_flat_shaded_textured_renderstate
EXTRN	?draw_wbuffered_plain_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_plain_polygon
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?get_system_texture_ptr@@YGPAUSCREEN@@H@Z:PROC	; get_system_texture_ptr
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_ui_font_colour
EXTRN	?set_3d_active_environment@@YGXPAUENV_3D@@@Z:PROC ; set_3d_active_environment
EXTRN	?begin_3d_scene@@YGHXZ:PROC			; begin_3d_scene
EXTRN	?end_3d_scene@@YGXXZ:PROC			; end_3d_scene
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?store_reverse_tactical_camera_values@@YGXXZ:PROC ; store_reverse_tactical_camera_values
EXTRN	?restore_reverse_tactical_camera_values@@YGXXZ:PROC ; restore_reverse_tactical_camera_values
EXTRN	?set_reverse_tactical_camera_values@@YGXPAUENTITY@@0@Z:PROC ; set_reverse_tactical_camera_values
EXTRN	?get_external_view_entity@@YGPAUENTITY@@XZ:PROC	; get_external_view_entity
EXTRN	?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_primary_task
EXTRN	?set_full_screen_viewport@@YGXXZ:PROC		; set_full_screen_viewport
EXTRN	?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z:PROC ; set_main_3d_full_screen_params
EXTRN	?set_main_3d_inset_target_screen_params@@YGXXZ:PROC ; set_main_3d_inset_target_screen_params
EXTRN	?draw_main_3d_scene@@YGXPAUVIEWPOINT@@@Z:PROC	; draw_main_3d_scene
EXTRN	?display_view_menu@@YGXXZ:PROC			; display_view_menu
EXTRN	?display_view_menu_search_string@@YGXMM@Z:PROC	; display_view_menu_search_string
EXTRN	?get_view_menu_display_visible_status@@YGHXZ:PROC ; get_view_menu_display_visible_status
EXTRN	?get_inset@@YGPAUENTITY@@XZ:PROC		; get_inset
EXTRN	?display_hud_on_external_view@@YGXXZ:PROC	; display_hud_on_external_view
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?get_pilot_rank_short_name@@YGPBDH@Z:PROC	; get_pilot_rank_short_name
EXTRN	?application_video_width@@3HA:DWORD		; application_video_width
EXTRN	?active_screen@@3PAUSCREEN@@A:DWORD		; active_screen
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?group_member_state_names@@3PAPBDA:BYTE		; group_member_state_names
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	?eject_fader@@3MA:DWORD				; eject_fader
EXTRN	?full_screen_width@@3MA:DWORD			; full_screen_width
EXTRN	?full_screen_x_min@@3MA:DWORD			; full_screen_x_min
EXTRN	?full_screen_y_min@@3MA:DWORD			; full_screen_y_min
EXTRN	?full_screen_x_max@@3MA:DWORD			; full_screen_x_max
EXTRN	?full_screen_y_max@@3MA:DWORD			; full_screen_y_max
EXTRN	?main_3d_env@@3PAUENV_3D@@A:DWORD		; main_3d_env
EXTRN	?main_vp@@3UVIEWPOINT@@A:BYTE			; main_vp
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?display_exit_message_flag@@3HA:DWORD		; display_exit_message_flag
EXTRN	?game_type@@3W4GAME_TYPES@@A:DWORD		; game_type
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3feeaaaaaaaaaaab
CONST	SEGMENT
__real@3feeaaaaaaaaaaab DQ 03feeaaaaaaaaaaabr	; 0.958333
CONST	ENDS
;	COMDAT __real@3fed555555555555
CONST	SEGMENT
__real@3fed555555555555 DQ 03fed555555555555r	; 0.916667
CONST	ENDS
;	COMDAT __real@3fec000000000000
CONST	SEGMENT
__real@3fec000000000000 DQ 03fec000000000000r	; 0.875
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@ DB 'get_camera_entity ()', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??select_external_view@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_external_view@@YGXXZ@4JA DD 037aH ; `select_external_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06OEKOLKIL@source@
CONST	SEGMENT
??_C@_06OEKOLKIL@source@ DB 'source', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@ELGGIDGJ@get_external_view_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BM@ELGGIDGJ@get_external_view_entity?5?$CI?$CJ@ DB 'get_external_v'
	DB	'iew_entity ()', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA DD 0286H ; `draw_external_3d_view'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@IPMCBGFA@?0?5?$CFs?3?$CFs?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0N@IPMCBGFA@?0?5?$CFs?3?$CFs?5?$CI?$CFs?$CJ@ DB ', %s:%s (%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KKJBFIJG@TASK@
CONST	SEGMENT
??_C@_04KKJBFIJG@TASK@ DB 'TASK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIMAMCBF@?0?5?$CFs?3?$CFd?5?$CFs?3?$CFd@
CONST	SEGMENT
??_C@_0O@PIMAMCBF@?0?5?$CFs?3?$CFd?5?$CFs?3?$CFd@ DB ', %s:%d %s:%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EHJFADHN@KILLS@
CONST	SEGMENT
??_C@_05EHJFADHN@KILLS@ DB 'KILLS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOPKNDNO@LOSSES@
CONST	SEGMENT
??_C@_06FOPKNDNO@LOSSES@ DB 'LOSSES', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OMDHIKNA@?$CFs?0?5?$CFs@
CONST	SEGMENT
??_C@_06OMDHIKNA@?$CFs?0?5?$CFs@ DB '%s, %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EDCKAOKI@?8?$CFs?51?9?$CFd?8?0?5?$CFs@
CONST	SEGMENT
??_C@_0O@EDCKAOKI@?8?$CFs?51?9?$CFd?8?0?5?$CFs@ DB '''%s 1-%d'', %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MLNBPDHK@company@
CONST	SEGMENT
??_C@_07MLNBPDHK@company@ DB 'company', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICEAPIOD@?$CFs?5?$CI?$CFs?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0L@ICEAPIOD@?$CFs?5?$CI?$CFs?5?$CFs?$CJ@ DB '%s (%s %s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MELJIMJB@Target?3?5Unknown@
CONST	SEGMENT
??_C@_0BA@MELJIMJB@Target?3?5Unknown@ DB 'Target: Unknown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FOELEALI@Target?3?5?$CFs@
CONST	SEGMENT
??_C@_0L@FOELEALI@Target?3?5?$CFs@ DB 'Target: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MEIJHGLD@Launcher?3?5Unknown@
CONST	SEGMENT
??_C@_0BC@MEIJHGLD@Launcher?3?5Unknown@ DB 'Launcher: Unknown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KMKDBDPI@Launcher?3?5?$CFs@
CONST	SEGMENT
??_C@_0N@KMKDBDPI@Launcher?3?5?$CFs@ DB 'Launcher: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBGBEHGB@Weapon?3?5?$CFs?5?$CI?$CF?41f?$CJ@
CONST	SEGMENT
??_C@_0BC@KBGBEHGB@Weapon?3?5?$CFs?5?$CI?$CF?41f?$CJ@ DB 'Weapon: %s (%.1'
	DB	'f)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CLEMLOPG@Weapon?3?5?$CFs@
CONST	SEGMENT
??_C@_0L@CLEMLOPG@Weapon?3?5?$CFs@ DB 'Weapon: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA DD 0f3H ; `display_external_view_text'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c
;	COMDAT ?display_external_view_text@@YGXXZ
_TEXT	SEGMENT
tv888 = -1044						; size = 4
tv819 = -1044						; size = 4
tv774 = -1044						; size = 4
tv880 = -1040						; size = 4
tv811 = -1040						; size = 4
tv766 = -1040						; size = 4
tv84 = -1040						; size = 4
tv1602 = -1036						; size = 4
tv1589 = -1036						; size = 4
tv1317 = -1036						; size = 4
tv1260 = -1036						; size = 4
tv1212 = -1036						; size = 4
tv1005 = -1036						; size = 4
tv972 = -1036						; size = 4
tv947 = -1036						; size = 4
tv864 = -1036						; size = 4
tv842 = -1036						; size = 4
tv798 = -1036						; size = 4
tv753 = -1036						; size = 4
tv731 = -1036						; size = 4
tv708 = -1036						; size = 4
tv688 = -1036						; size = 4
tv667 = -1036						; size = 4
tv634 = -1036						; size = 4
tv613 = -1036						; size = 4
tv591 = -1036						; size = 4
tv570 = -1036						; size = 4
tv551 = -1036						; size = 4
tv530 = -1036						; size = 4
tv508 = -1036						; size = 4
tv468 = -1036						; size = 4
tv448 = -1036						; size = 4
tv425 = -1036						; size = 4
tv404 = -1036						; size = 4
tv366 = -1036						; size = 4
tv346 = -1036						; size = 4
tv324 = -1036						; size = 4
tv284 = -1036						; size = 4
tv258 = -1036						; size = 4
tv235 = -1036						; size = 4
tv215 = -1036						; size = 4
tv194 = -1036						; size = 4
tv173 = -1036						; size = 4
tv152 = -1036						; size = 4
tv131 = -1036						; size = 4
tv78 = -1036						; size = 4
tv1623 = -1032						; size = 4
tv1621 = -1032						; size = 4
tv1619 = -1032						; size = 4
tv1617 = -1032						; size = 4
tv1615 = -1032						; size = 4
tv998 = -1032						; size = 4
tv964 = -1032						; size = 4
tv939 = -1032						; size = 4
tv856 = -1032						; size = 4
tv835 = -1032						; size = 4
tv790 = -1032						; size = 4
tv745 = -1032						; size = 4
tv724 = -1032						; size = 4
tv700 = -1032						; size = 4
tv680 = -1032						; size = 4
tv659 = -1032						; size = 4
tv626 = -1032						; size = 4
tv605 = -1032						; size = 4
tv583 = -1032						; size = 4
tv563 = -1032						; size = 4
tv543 = -1032						; size = 4
tv523 = -1032						; size = 4
tv500 = -1032						; size = 4
tv461 = -1032						; size = 4
tv440 = -1032						; size = 4
tv417 = -1032						; size = 4
tv397 = -1032						; size = 4
tv359 = -1032						; size = 4
tv338 = -1032						; size = 4
tv316 = -1032						; size = 4
tv276 = -1032						; size = 4
tv250 = -1032						; size = 4
tv227 = -1032						; size = 4
tv207 = -1032						; size = 4
tv187 = -1032						; size = 4
tv165 = -1032						; size = 4
tv144 = -1032						; size = 4
tv91 = -1032						; size = 4
tv71 = -1032						; size = 4
_company$1 = -900					; size = 4
_task$2 = -896						; size = 4
_group$3 = -892						; size = 4
_aircrew$4 = -888					; size = 4
_en$5 = -884						; size = 4
_y$6 = -880						; size = 4
_x$7 = -876						; size = 4
_task_name$8 = -872					; size = 4
_group_name$9 = -868					; size = 4
_last_name$10 = -864					; size = 4
_first_name$11 = -860					; size = 4
_full_name$12 = -856					; size = 4
_s1$13 = -852						; size = 4
_tmp$14 = -848						; size = 200
_buffer2$15 = -648					; size = 200
_buffer1$16 = -448					; size = 200
_s2$17 = -248						; size = 4
_target_range$18 = -244					; size = 4
_weapon_velocity$19 = -240				; size = 4
_time_to_impact$20 = -236				; size = 4
_y$21 = -232						; size = 4
_x$22 = -228						; size = 4
_target_position$23 = -224				; size = 4
_weapon_position$24 = -220				; size = 4
_target$25 = -216					; size = 4
_launcher$26 = -212					; size = 4
_weapon$27 = -208					; size = 4
_buffer$28 = -204					; size = 200
_s$29 = -4						; size = 4
?display_external_view_text@@YGXXZ PROC			; display_external_view_text, COMDAT

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 04 00
	00		 sub	 esp, 1044		; 00000414H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 244  : 	if (begin_3d_scene ())

  0000c	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  00011	85 c0		 test	 eax, eax
  00013	0f 84 43 1e 00
	00		 je	 $LN6@display_ex

; 245  : 	{
; 246  : 		set_full_screen_viewport ();

  00019	e8 00 00 00 00	 call	 ?set_full_screen_viewport@@YGXXZ ; set_full_screen_viewport

; 247  : 
; 248  : 		switch (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE))

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00025	74 0f		 je	 SHORT $LN44@display_ex
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  00034	eb 20		 jmp	 SHORT $LN45@display_ex
$LN44@display_ex:
  00036	68 f8 00 00 00	 push	 248			; 000000f8H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	52		 push	 edx
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv71[ebp], 0
$LN45@display_ex:
  00056	b8 01 00 00 00	 mov	 eax, 1
  0005b	85 c0		 test	 eax, eax
  0005d	74 0c		 je	 SHORT $LN46@display_ex
  0005f	c7 85 f4 fb ff
	ff 10 00 00 00	 mov	 DWORD PTR tv78[ebp], 16	; 00000010H
  00069	eb 20		 jmp	 SHORT $LN47@display_ex
$LN46@display_ex:
  0006b	68 f8 00 00 00	 push	 248			; 000000f8H
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00081	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN47@display_ex:
  0008b	6a 10		 push	 16			; 00000010H
  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00093	52		 push	 edx
  00094	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv71[ebp], 1116
  0009e	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  000a4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000ab	ff d2		 call	 edx
  000ad	89 85 f0 fb ff
	ff		 mov	 DWORD PTR tv84[ebp], eax
  000b3	8b 85 f0 fb ff
	ff		 mov	 eax, DWORD PTR tv84[ebp]
  000b9	83 e8 05	 sub	 eax, 5
  000bc	89 85 f0 fb ff
	ff		 mov	 DWORD PTR tv84[ebp], eax
  000c2	83 bd f0 fb ff
	ff 0a		 cmp	 DWORD PTR tv84[ebp], 10	; 0000000aH
  000c9	0f 87 61 0c 00
	00		 ja	 $LN23@display_ex
  000cf	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR tv84[ebp]
  000d5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN192@display_ex[ecx]
  000dc	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN193@display_ex[edx*4]
$LN7@display_ex:

; 249  : 		{
; 250  : 			////////////////////////////////////////////////////////////////////////////////
; 251  : 			case CAMERA_MODE_EJECT:
; 252  : 			case CAMERA_MODE_BUILDING:
; 253  : 			case CAMERA_MODE_WEAPON_EXPLOSION:
; 254  : 			case CAMERA_MODE_RECOGNITION_GUIDE_TOP_VIEW:
; 255  : 			case CAMERA_MODE_RECOGNITION_GUIDE_SIDE_VIEW:
; 256  : 			case CAMERA_MODE_RECOGNITION_GUIDE_FRONT_VIEW:
; 257  : 			case CAMERA_MODE_RECOGNITION_GUIDE_3D_VIEW:
; 258  : 			////////////////////////////////////////////////////////////////////////////////
; 259  : 			{
; 260  : 				break;

  000e3	e9 6f 1d 00 00	 jmp	 $LN2@display_ex
$LN8@display_ex:

; 261  : 			}
; 262  : 			////////////////////////////////////////////////////////////////////////////////
; 263  : 			case CAMERA_MODE_WEAPON:
; 264  : 			////////////////////////////////////////////////////////////////////////////////
; 265  : 			{
; 266  : 			   char
; 267  :       			*s,
; 268  : 					buffer[200];
; 269  : 
; 270  : 				entity
; 271  : 					*weapon,
; 272  : 					*launcher,
; 273  : 					*target;
; 274  : 
; 275  : 				vec3d
; 276  : 					*weapon_position,
; 277  : 					*target_position;
; 278  : 
; 279  : 				float
; 280  : 					x,
; 281  : 					y,
; 282  : 					time_to_impact,
; 283  : 					weapon_velocity,
; 284  : 					target_range;
; 285  : 
; 286  : 				weapon = get_local_entity_first_child (get_camera_entity (), LIST_TYPE_VIEW_WEAPON);

  000e8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  000ef	74 0f		 je	 SHORT $LN48@display_ex
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  000f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f8	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv91[ebp], ecx
  000fe	eb 24		 jmp	 SHORT $LN49@display_ex
$LN48@display_ex:
  00100	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00106	83 c2 2b	 add	 edx, 43			; 0000002bH
  00109	52		 push	 edx
  0010a	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00114	50		 push	 eax
  00115	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011a	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv91[ebp], 0
$LN49@display_ex:
  00124	b9 01 00 00 00	 mov	 ecx, 1
  00129	85 c9		 test	 ecx, ecx
  0012b	74 0c		 je	 SHORT $LN50@display_ex
  0012d	c7 85 f4 fb ff
	ff 2b 00 00 00	 mov	 DWORD PTR tv131[ebp], 43 ; 0000002bH
  00137	eb 24		 jmp	 SHORT $LN51@display_ex
$LN50@display_ex:
  00139	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0013f	83 c2 2b	 add	 edx, 43			; 0000002bH
  00142	52		 push	 edx
  00143	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00153	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv131[ebp], 0
$LN51@display_ex:
  0015d	6a 2b		 push	 43			; 0000002bH
  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00165	51		 push	 ecx
  00166	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv91[ebp], 180
  00170	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv131[ebp]
  00176	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0017d	ff d1		 call	 ecx
  0017f	89 85 30 ff ff
	ff		 mov	 DWORD PTR _weapon$27[ebp], eax

; 287  : 
; 288  : 				if (weapon)

  00185	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  0018c	0f 84 99 0b 00
	00		 je	 $LN9@display_ex

; 289  : 				{
; 290  : 					target = get_local_entity_parent (weapon, LIST_TYPE_TARGET);

  00192	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  00199	74 10		 je	 SHORT $LN52@display_ex
  0019b	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon$27[ebp]
  001a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a3	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv144[ebp], ecx
  001a9	eb 24		 jmp	 SHORT $LN53@display_ex
$LN52@display_ex:
  001ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  001b1	83 c2 2f	 add	 edx, 47			; 0000002fH
  001b4	52		 push	 edx
  001b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c5	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN53@display_ex:
  001cf	b9 01 00 00 00	 mov	 ecx, 1
  001d4	85 c9		 test	 ecx, ecx
  001d6	74 0c		 je	 SHORT $LN54@display_ex
  001d8	c7 85 f4 fb ff
	ff 26 00 00 00	 mov	 DWORD PTR tv152[ebp], 38 ; 00000026H
  001e2	eb 24		 jmp	 SHORT $LN55@display_ex
$LN54@display_ex:
  001e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  001ea	83 c2 2f	 add	 edx, 47			; 0000002fH
  001ed	52		 push	 edx
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fe	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv152[ebp], 0
$LN55@display_ex:
  00208	6a 26		 push	 38			; 00000026H
  0020a	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon$27[ebp]
  00210	51		 push	 ecx
  00211	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv144[ebp], 180
  0021b	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv152[ebp]
  00221	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00228	ff d1		 call	 ecx
  0022a	89 85 28 ff ff
	ff		 mov	 DWORD PTR _target$25[ebp], eax

; 291  : 
; 292  : 					////////////////////////////////////////
; 293  : 					//
; 294  : 					// WEAPON & TIME TO IMPACT
; 295  : 					//
; 296  : 					////////////////////////////////////////
; 297  : 
; 298  : 					sprintf (buffer, "Weapon: %s", get_local_entity_string (weapon, STRING_TYPE_FULL_NAME));

  00230	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  00237	74 10		 je	 SHORT $LN56@display_ex
  00239	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon$27[ebp]
  0023f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00241	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv165[ebp], ecx
  00247	eb 24		 jmp	 SHORT $LN57@display_ex
$LN56@display_ex:
  00249	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0024f	83 c2 37	 add	 edx, 55			; 00000037H
  00252	52		 push	 edx
  00253	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00258	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0025d	50		 push	 eax
  0025e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00263	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv165[ebp], 0
$LN57@display_ex:
  0026d	b9 01 00 00 00	 mov	 ecx, 1
  00272	85 c9		 test	 ecx, ecx
  00274	74 0c		 je	 SHORT $LN58@display_ex
  00276	c7 85 f4 fb ff
	ff 03 00 00 00	 mov	 DWORD PTR tv173[ebp], 3
  00280	eb 24		 jmp	 SHORT $LN59@display_ex
$LN58@display_ex:
  00282	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00288	83 c2 37	 add	 edx, 55			; 00000037H
  0028b	52		 push	 edx
  0028c	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00291	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00296	50		 push	 eax
  00297	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029c	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv173[ebp], 0
$LN59@display_ex:
  002a6	6a 03		 push	 3
  002a8	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon$27[ebp]
  002ae	51		 push	 ecx
  002af	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv165[ebp], 52
  002b6	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv173[ebp]
  002bc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  002c3	ff d1		 call	 ecx
  002c5	50		 push	 eax
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CLEMLOPG@Weapon?3?5?$CFs@
  002cb	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _buffer$28[ebp]
  002d1	52		 push	 edx
  002d2	e8 00 00 00 00	 call	 _sprintf
  002d7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 299  : 
; 300  : 					if (target)

  002da	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  002e1	0f 84 73 03 00
	00		 je	 $LN12@display_ex

; 301  : 					{
; 302  : 						if (get_local_entity_int_value (weapon, INT_TYPE_WEAPON_GUIDANCE_TYPE) != WEAPON_GUIDANCE_TYPE_NONE)

  002e7	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  002ee	74 10		 je	 SHORT $LN60@display_ex
  002f0	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon$27[ebp]
  002f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f8	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv187[ebp], ecx
  002fe	eb 20		 jmp	 SHORT $LN61@display_ex
$LN60@display_ex:
  00300	68 2e 01 00 00	 push	 302			; 0000012eH
  00305	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00310	52		 push	 edx
  00311	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00316	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv187[ebp], 0
$LN61@display_ex:
  00320	b8 01 00 00 00	 mov	 eax, 1
  00325	85 c0		 test	 eax, eax
  00327	74 0c		 je	 SHORT $LN62@display_ex
  00329	c7 85 f4 fb ff
	ff 07 01 00 00	 mov	 DWORD PTR tv194[ebp], 263 ; 00000107H
  00333	eb 20		 jmp	 SHORT $LN63@display_ex
$LN62@display_ex:
  00335	68 2e 01 00 00	 push	 302			; 0000012eH
  0033a	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00345	51		 push	 ecx
  00346	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034b	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv194[ebp], 0
$LN63@display_ex:
  00355	68 07 01 00 00	 push	 263			; 00000107H
  0035a	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR _weapon$27[ebp]
  00360	52		 push	 edx
  00361	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv187[ebp], 1116
  0036b	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv194[ebp]
  00371	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00378	ff d2		 call	 edx
  0037a	85 c0		 test	 eax, eax
  0037c	0f 84 d8 02 00
	00		 je	 $LN12@display_ex

; 303  : 						{
; 304  : 							weapon_position = get_local_entity_vec3d_ptr (weapon, VEC3D_TYPE_POSITION);

  00382	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  00389	74 10		 je	 SHORT $LN64@display_ex
  0038b	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon$27[ebp]
  00391	8b 08		 mov	 ecx, DWORD PTR [eax]
  00393	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv207[ebp], ecx
  00399	eb 24		 jmp	 SHORT $LN65@display_ex
$LN64@display_ex:
  0039b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  003a1	83 c2 3d	 add	 edx, 61			; 0000003dH
  003a4	52		 push	 edx
  003a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  003aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003af	50		 push	 eax
  003b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b5	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv207[ebp], 0
$LN65@display_ex:
  003bf	b9 01 00 00 00	 mov	 ecx, 1
  003c4	85 c9		 test	 ecx, ecx
  003c6	74 0c		 je	 SHORT $LN66@display_ex
  003c8	c7 85 f4 fb ff
	ff 08 00 00 00	 mov	 DWORD PTR tv215[ebp], 8
  003d2	eb 24		 jmp	 SHORT $LN67@display_ex
$LN66@display_ex:
  003d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  003da	83 c2 3d	 add	 edx, 61			; 0000003dH
  003dd	52		 push	 edx
  003de	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  003e8	50		 push	 eax
  003e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ee	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv215[ebp], 0
$LN67@display_ex:
  003f8	6a 08		 push	 8
  003fa	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon$27[ebp]
  00400	51		 push	 ecx
  00401	6b 95 f8 fb ff
	ff 60		 imul	 edx, DWORD PTR tv207[ebp], 96
  00408	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv215[ebp]
  0040e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00415	ff d1		 call	 ecx
  00417	89 85 24 ff ff
	ff		 mov	 DWORD PTR _weapon_position$24[ebp], eax

; 305  : 
; 306  : 							target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  0041d	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  00424	74 10		 je	 SHORT $LN68@display_ex
  00426	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _target$25[ebp]
  0042c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042e	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv227[ebp], ecx
  00434	eb 24		 jmp	 SHORT $LN69@display_ex
$LN68@display_ex:
  00436	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0043c	83 c2 3f	 add	 edx, 63			; 0000003fH
  0043f	52		 push	 edx
  00440	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00445	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0044a	50		 push	 eax
  0044b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00450	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv227[ebp], 0
$LN69@display_ex:
  0045a	b9 01 00 00 00	 mov	 ecx, 1
  0045f	85 c9		 test	 ecx, ecx
  00461	74 0c		 je	 SHORT $LN70@display_ex
  00463	c7 85 f4 fb ff
	ff 08 00 00 00	 mov	 DWORD PTR tv235[ebp], 8
  0046d	eb 24		 jmp	 SHORT $LN71@display_ex
$LN70@display_ex:
  0046f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00475	83 c2 3f	 add	 edx, 63			; 0000003fH
  00478	52		 push	 edx
  00479	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00483	50		 push	 eax
  00484	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00489	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv235[ebp], 0
$LN71@display_ex:
  00493	6a 08		 push	 8
  00495	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _target$25[ebp]
  0049b	51		 push	 ecx
  0049c	6b 95 f8 fb ff
	ff 60		 imul	 edx, DWORD PTR tv227[ebp], 96
  004a3	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv235[ebp]
  004a9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  004b0	ff d1		 call	 ecx
  004b2	89 85 20 ff ff
	ff		 mov	 DWORD PTR _target_position$23[ebp], eax

; 307  : 
; 308  : 							target_range = get_3d_range (weapon_position, target_position);

  004b8	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _target_position$23[ebp]
  004be	50		 push	 eax
  004bf	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon_position$24[ebp]
  004c5	51		 push	 ecx
  004c6	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  004cb	d9 9d 0c ff ff
	ff		 fstp	 DWORD PTR _target_range$18[ebp]

; 309  : 
; 310  : 							weapon_velocity = get_local_entity_float_value (weapon, FLOAT_TYPE_VELOCITY);

  004d1	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  004d8	74 10		 je	 SHORT $LN72@display_ex
  004da	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon$27[ebp]
  004e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  004e2	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv250[ebp], ecx
  004e8	eb 24		 jmp	 SHORT $LN73@display_ex
$LN72@display_ex:
  004ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  004f0	83 c2 43	 add	 edx, 67			; 00000043H
  004f3	52		 push	 edx
  004f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004fe	50		 push	 eax
  004ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00504	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv250[ebp], 0
$LN73@display_ex:
  0050e	b9 01 00 00 00	 mov	 ecx, 1
  00513	85 c9		 test	 ecx, ecx
  00515	74 0c		 je	 SHORT $LN74@display_ex
  00517	c7 85 f4 fb ff
	ff 93 00 00 00	 mov	 DWORD PTR tv258[ebp], 147 ; 00000093H
  00521	eb 24		 jmp	 SHORT $LN75@display_ex
$LN74@display_ex:
  00523	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00529	83 c2 43	 add	 edx, 67			; 00000043H
  0052c	52		 push	 edx
  0052d	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00537	50		 push	 eax
  00538	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0053d	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv258[ebp], 0
$LN75@display_ex:
  00547	68 93 00 00 00	 push	 147			; 00000093H
  0054c	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon$27[ebp]
  00552	51		 push	 ecx
  00553	69 95 f8 fb ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv250[ebp], 700
  0055d	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv258[ebp]
  00563	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0056a	ff d1		 call	 ecx
  0056c	d9 9d 10 ff ff
	ff		 fstp	 DWORD PTR _weapon_velocity$19[ebp]

; 311  : 
; 312  : 							if (weapon_velocity > 0.0)

  00572	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _weapon_velocity$19[ebp]
  0057a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00582	0f 86 d2 00 00
	00		 jbe	 $LN12@display_ex

; 313  : 							{
; 314  : 								time_to_impact = target_range / weapon_velocity;

  00588	f3 0f 10 85 0c
	ff ff ff	 movss	 xmm0, DWORD PTR _target_range$18[ebp]
  00590	f3 0f 5e 85 10
	ff ff ff	 divss	 xmm0, DWORD PTR _weapon_velocity$19[ebp]
  00598	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _time_to_impact$20[ebp], xmm0

; 315  : 
; 316  : 								sprintf (buffer, "Weapon: %s (%.1f)", get_local_entity_string (weapon, STRING_TYPE_FULL_NAME), time_to_impact);

  005a0	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  005a7	74 10		 je	 SHORT $LN76@display_ex
  005a9	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon$27[ebp]
  005af	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b1	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv276[ebp], ecx
  005b7	eb 24		 jmp	 SHORT $LN77@display_ex
$LN76@display_ex:
  005b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  005bf	83 c2 49	 add	 edx, 73			; 00000049H
  005c2	52		 push	 edx
  005c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005cd	50		 push	 eax
  005ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005d3	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv276[ebp], 0
$LN77@display_ex:
  005dd	b9 01 00 00 00	 mov	 ecx, 1
  005e2	85 c9		 test	 ecx, ecx
  005e4	74 0c		 je	 SHORT $LN78@display_ex
  005e6	c7 85 f4 fb ff
	ff 03 00 00 00	 mov	 DWORD PTR tv284[ebp], 3
  005f0	eb 24		 jmp	 SHORT $LN79@display_ex
$LN78@display_ex:
  005f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  005f8	83 c2 49	 add	 edx, 73			; 00000049H
  005fb	52		 push	 edx
  005fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00601	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00606	50		 push	 eax
  00607	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060c	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv284[ebp], 0
$LN79@display_ex:
  00616	f3 0f 5a 85 14
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _time_to_impact$20[ebp]
  0061e	83 ec 08	 sub	 esp, 8
  00621	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00626	6a 03		 push	 3
  00628	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon$27[ebp]
  0062e	51		 push	 ecx
  0062f	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv276[ebp], 52
  00636	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv284[ebp]
  0063c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00643	ff d1		 call	 ecx
  00645	50		 push	 eax
  00646	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBGBEHGB@Weapon?3?5?$CFs?5?$CI?$CF?41f?$CJ@
  0064b	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _buffer$28[ebp]
  00651	52		 push	 edx
  00652	e8 00 00 00 00	 call	 _sprintf
  00657	83 c4 14	 add	 esp, 20			; 00000014H
$LN12@display_ex:

; 317  : 							}
; 318  : 						}
; 319  : 					}
; 320  : 
; 321  : 					s = buffer;

  0065a	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$28[ebp]
  00660	89 45 fc	 mov	 DWORD PTR _s$29[ebp], eax

; 322  : 
; 323  : 					set_ui_font_type (UI_FONT_ARIAL_16);

  00663	6a 03		 push	 3
  00665	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 324  : 
; 325  : 					set_ui_font_colour (ext_col_message);

  0066a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_message@@3UREAL_COLOUR@@A ; ext_col_message
  0066f	50		 push	 eax
  00670	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 326  : 
; 327  : 					x = (get_screen_width (active_screen) - ui_get_string_length (s)) * 0.5;

  00675	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  0067a	50		 push	 eax
  0067b	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00680	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00684	8b 4d fc	 mov	 ecx, DWORD PTR _s$29[ebp]
  00687	51		 push	 ecx
  00688	f3 0f 11 85 f8
	fb ff ff	 movss	 DWORD PTR tv1615[ebp], xmm0
  00690	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00695	d9 9d f4 fb ff
	ff		 fstp	 DWORD PTR tv1212[ebp]
  0069b	f3 0f 10 85 f8
	fb ff ff	 movss	 xmm0, DWORD PTR tv1615[ebp]
  006a3	f3 0f 5c 85 f4
	fb ff ff	 subss	 xmm0, DWORD PTR tv1212[ebp]
  006ab	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  006af	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  006b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006bb	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _x$22[ebp], xmm0

; 328  : 
; 329  : 					y = full_screen_y_max * (420.0 / 480.0);

  006c3	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_max@@3MA
  006cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fec000000000000
  006d3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d7	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _y$21[ebp], xmm0

; 330  : 
; 331  : 					ui_display_text (s, x, y);

  006df	51		 push	 ecx
  006e0	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _y$21[ebp]
  006e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ed	51		 push	 ecx
  006ee	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _x$22[ebp]
  006f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fb	8b 45 fc	 mov	 eax, DWORD PTR _s$29[ebp]
  006fe	50		 push	 eax
  006ff	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00704	dd d8		 fstp	 ST(0)

; 332  : 
; 333  : 					////////////////////////////////////////
; 334  : 					//
; 335  : 					// LAUNCHER
; 336  : 					//
; 337  : 					////////////////////////////////////////
; 338  : 
; 339  : 					set_ui_font_type (UI_FONT_ARIAL_16);

  00706	6a 03		 push	 3
  00708	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 340  : 
; 341  : 					launcher = get_local_entity_parent (weapon, LIST_TYPE_LAUNCHED_WEAPON);

  0070d	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon$27[ebp], 0
  00714	74 10		 je	 SHORT $LN80@display_ex
  00716	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon$27[ebp]
  0071c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0071e	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv316[ebp], ecx
  00724	eb 24		 jmp	 SHORT $LN81@display_ex
$LN80@display_ex:
  00726	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0072c	83 c2 62	 add	 edx, 98			; 00000062H
  0072f	52		 push	 edx
  00730	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00735	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0073a	50		 push	 eax
  0073b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00740	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv316[ebp], 0
$LN81@display_ex:
  0074a	b9 01 00 00 00	 mov	 ecx, 1
  0074f	85 c9		 test	 ecx, ecx
  00751	74 0c		 je	 SHORT $LN82@display_ex
  00753	c7 85 f4 fb ff
	ff 18 00 00 00	 mov	 DWORD PTR tv324[ebp], 24 ; 00000018H
  0075d	eb 24		 jmp	 SHORT $LN83@display_ex
$LN82@display_ex:
  0075f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00765	83 c2 62	 add	 edx, 98			; 00000062H
  00768	52		 push	 edx
  00769	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0076e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00773	50		 push	 eax
  00774	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00779	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv324[ebp], 0
$LN83@display_ex:
  00783	6a 18		 push	 24			; 00000018H
  00785	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon$27[ebp]
  0078b	51		 push	 ecx
  0078c	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv316[ebp], 180
  00796	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv324[ebp]
  0079c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  007a3	ff d1		 call	 ecx
  007a5	89 85 2c ff ff
	ff		 mov	 DWORD PTR _launcher$26[ebp], eax

; 342  : 
; 343  : 					if (launcher)

  007ab	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _launcher$26[ebp], 0
  007b2	0f 84 65 01 00
	00		 je	 $LN13@display_ex

; 344  : 					{
; 345  : 						sprintf (buffer, "Launcher: %s", get_local_entity_string (launcher, STRING_TYPE_FULL_NAME));

  007b8	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _launcher$26[ebp], 0
  007bf	74 10		 je	 SHORT $LN84@display_ex
  007c1	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _launcher$26[ebp]
  007c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  007c9	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv338[ebp], ecx
  007cf	eb 24		 jmp	 SHORT $LN85@display_ex
$LN84@display_ex:
  007d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  007d7	83 c2 66	 add	 edx, 102		; 00000066H
  007da	52		 push	 edx
  007db	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007e5	50		 push	 eax
  007e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007eb	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv338[ebp], 0
$LN85@display_ex:
  007f5	b9 01 00 00 00	 mov	 ecx, 1
  007fa	85 c9		 test	 ecx, ecx
  007fc	74 0c		 je	 SHORT $LN86@display_ex
  007fe	c7 85 f4 fb ff
	ff 03 00 00 00	 mov	 DWORD PTR tv346[ebp], 3
  00808	eb 24		 jmp	 SHORT $LN87@display_ex
$LN86@display_ex:
  0080a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00810	83 c2 66	 add	 edx, 102		; 00000066H
  00813	52		 push	 edx
  00814	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00819	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0081e	50		 push	 eax
  0081f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00824	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv346[ebp], 0
$LN87@display_ex:
  0082e	6a 03		 push	 3
  00830	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _launcher$26[ebp]
  00836	51		 push	 ecx
  00837	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv338[ebp], 52
  0083e	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv346[ebp]
  00844	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  0084b	ff d1		 call	 ecx
  0084d	50		 push	 eax
  0084e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KMKDBDPI@Launcher?3?5?$CFs@
  00853	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _buffer$28[ebp]
  00859	52		 push	 edx
  0085a	e8 00 00 00 00	 call	 _sprintf
  0085f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : 
; 347  : 						s = buffer;

  00862	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$28[ebp]
  00868	89 45 fc	 mov	 DWORD PTR _s$29[ebp], eax

; 348  : 
; 349  : 						if (get_local_entity_int_value (launcher, INT_TYPE_SIDE) == ENTITY_SIDE_BLUE_FORCE)

  0086b	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _launcher$26[ebp], 0
  00872	74 10		 je	 SHORT $LN88@display_ex
  00874	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _launcher$26[ebp]
  0087a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0087c	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv359[ebp], ecx
  00882	eb 20		 jmp	 SHORT $LN89@display_ex
$LN88@display_ex:
  00884	68 5d 01 00 00	 push	 349			; 0000015dH
  00889	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0088e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00894	52		 push	 edx
  00895	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0089a	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv359[ebp], 0
$LN89@display_ex:
  008a4	b8 01 00 00 00	 mov	 eax, 1
  008a9	85 c0		 test	 eax, eax
  008ab	74 0c		 je	 SHORT $LN90@display_ex
  008ad	c7 85 f4 fb ff
	ff bb 00 00 00	 mov	 DWORD PTR tv366[ebp], 187 ; 000000bbH
  008b7	eb 20		 jmp	 SHORT $LN91@display_ex
$LN90@display_ex:
  008b9	68 5d 01 00 00	 push	 349			; 0000015dH
  008be	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  008c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008c9	51		 push	 ecx
  008ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008cf	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv366[ebp], 0
$LN91@display_ex:
  008d9	68 bb 00 00 00	 push	 187			; 000000bbH
  008de	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR _launcher$26[ebp]
  008e4	52		 push	 edx
  008e5	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv359[ebp], 1116
  008ef	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv366[ebp]
  008f5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  008fc	ff d2		 call	 edx
  008fe	83 f8 01	 cmp	 eax, 1
  00901	75 0d		 jne	 SHORT $LN15@display_ex

; 350  : 						{
; 351  : 							set_ui_font_colour (ext_col_blue_force);

  00903	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A ; ext_col_blue_force
  00908	50		 push	 eax
  00909	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 352  : 						}
; 353  : 						else

  0090e	eb 0b		 jmp	 SHORT $LN16@display_ex
$LN15@display_ex:

; 354  : 						{
; 355  : 							set_ui_font_colour (ext_col_red_force);

  00910	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_red_force@@3UREAL_COLOUR@@A ; ext_col_red_force
  00915	50		 push	 eax
  00916	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN16@display_ex:

; 356  : 						}
; 357  : 					}
; 358  : 					else

  0091b	eb 12		 jmp	 SHORT $LN14@display_ex
$LN13@display_ex:

; 359  : 					{
; 360  : 						s = "Launcher: Unknown";

  0091d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$29[ebp], OFFSET ??_C@_0BC@MEIJHGLD@Launcher?3?5Unknown@

; 361  : 
; 362  : 						set_ui_font_colour (ext_col_message);

  00924	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_message@@3UREAL_COLOUR@@A ; ext_col_message
  00929	50		 push	 eax
  0092a	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN14@display_ex:

; 363  : 					}
; 364  : 
; 365  : 					x = (get_screen_width (active_screen) - ui_get_string_length (s)) * 0.5;

  0092f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  00934	50		 push	 eax
  00935	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  0093a	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0093e	8b 4d fc	 mov	 ecx, DWORD PTR _s$29[ebp]
  00941	51		 push	 ecx
  00942	f3 0f 11 85 f8
	fb ff ff	 movss	 DWORD PTR tv1617[ebp], xmm0
  0094a	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  0094f	d9 9d f4 fb ff
	ff		 fstp	 DWORD PTR tv1260[ebp]
  00955	f3 0f 10 85 f8
	fb ff ff	 movss	 xmm0, DWORD PTR tv1617[ebp]
  0095d	f3 0f 5c 85 f4
	fb ff ff	 subss	 xmm0, DWORD PTR tv1260[ebp]
  00965	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00969	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00971	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00975	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _x$22[ebp], xmm0

; 366  : 
; 367  : 					y = full_screen_y_max * (440.0 / 480.0);

  0097d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00985	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fed555555555555
  0098d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00991	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _y$21[ebp], xmm0

; 368  : 
; 369  : 					ui_display_text (s, x, y);

  00999	51		 push	 ecx
  0099a	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _y$21[ebp]
  009a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009a7	51		 push	 ecx
  009a8	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _x$22[ebp]
  009b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009b5	8b 45 fc	 mov	 eax, DWORD PTR _s$29[ebp]
  009b8	50		 push	 eax
  009b9	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  009be	dd d8		 fstp	 ST(0)

; 370  : 
; 371  : 					////////////////////////////////////////
; 372  : 					//
; 373  : 					// TARGET
; 374  : 					//
; 375  : 					////////////////////////////////////////
; 376  : 
; 377  : 					if (target)

  009c0	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  009c7	0f 84 3c 01 00
	00		 je	 $LN18@display_ex

; 378  : 					{
; 379  : 						if (get_local_entity_int_value (target, INT_TYPE_IDENTIFY_WEAPON))

  009cd	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  009d4	74 10		 je	 SHORT $LN92@display_ex
  009d6	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _target$25[ebp]
  009dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  009de	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv397[ebp], ecx
  009e4	eb 20		 jmp	 SHORT $LN93@display_ex
$LN92@display_ex:
  009e6	68 7b 01 00 00	 push	 379			; 0000017bH
  009eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  009f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009f6	52		 push	 edx
  009f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009fc	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv397[ebp], 0
$LN93@display_ex:
  00a06	b8 01 00 00 00	 mov	 eax, 1
  00a0b	85 c0		 test	 eax, eax
  00a0d	74 0c		 je	 SHORT $LN94@display_ex
  00a0f	c7 85 f4 fb ff
	ff 62 00 00 00	 mov	 DWORD PTR tv404[ebp], 98 ; 00000062H
  00a19	eb 20		 jmp	 SHORT $LN95@display_ex
$LN94@display_ex:
  00a1b	68 7b 01 00 00	 push	 379			; 0000017bH
  00a20	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a25	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a2b	51		 push	 ecx
  00a2c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a31	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv404[ebp], 0
$LN95@display_ex:
  00a3b	6a 62		 push	 98			; 00000062H
  00a3d	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _target$25[ebp]
  00a43	52		 push	 edx
  00a44	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv397[ebp], 1116
  00a4e	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv404[ebp]
  00a54	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a5b	ff d2		 call	 edx
  00a5d	85 c0		 test	 eax, eax
  00a5f	0f 84 a4 00 00
	00		 je	 $LN18@display_ex

; 380  : 						{
; 381  : 							//
; 382  : 							// the weapon has been spoofed - display the intended target
; 383  : 							//
; 384  : 
; 385  : 							target = get_local_entity_parent (target, LIST_TYPE_LAUNCHED_WEAPON);

  00a65	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  00a6c	74 10		 je	 SHORT $LN96@display_ex
  00a6e	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _target$25[ebp]
  00a74	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a76	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv417[ebp], ecx
  00a7c	eb 27		 jmp	 SHORT $LN97@display_ex
$LN96@display_ex:
  00a7e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00a84	81 c2 8e 00 00
	00		 add	 edx, 142		; 0000008eH
  00a8a	52		 push	 edx
  00a8b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a90	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a95	50		 push	 eax
  00a96	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a9b	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv417[ebp], 0
$LN97@display_ex:
  00aa5	b9 01 00 00 00	 mov	 ecx, 1
  00aaa	85 c9		 test	 ecx, ecx
  00aac	74 0c		 je	 SHORT $LN98@display_ex
  00aae	c7 85 f4 fb ff
	ff 18 00 00 00	 mov	 DWORD PTR tv425[ebp], 24 ; 00000018H
  00ab8	eb 27		 jmp	 SHORT $LN99@display_ex
$LN98@display_ex:
  00aba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00ac0	81 c2 8e 00 00
	00		 add	 edx, 142		; 0000008eH
  00ac6	52		 push	 edx
  00ac7	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00acc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00ad1	50		 push	 eax
  00ad2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ad7	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv425[ebp], 0
$LN99@display_ex:
  00ae1	6a 18		 push	 24			; 00000018H
  00ae3	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _target$25[ebp]
  00ae9	51		 push	 ecx
  00aea	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv417[ebp], 180
  00af4	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv425[ebp]
  00afa	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b01	ff d1		 call	 ecx
  00b03	89 85 28 ff ff
	ff		 mov	 DWORD PTR _target$25[ebp], eax
$LN18@display_ex:

; 386  : 						}
; 387  : 					}
; 388  : 
; 389  : 					set_ui_font_type (UI_FONT_ARIAL_16);

  00b09	6a 03		 push	 3
  00b0b	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 390  : 
; 391  : 					if (target)

  00b10	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  00b17	0f 84 6b 01 00
	00		 je	 $LN19@display_ex

; 392  : 					{
; 393  : 						sprintf (buffer, "Target: %s", get_local_entity_string (target, STRING_TYPE_FULL_NAME));

  00b1d	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  00b24	74 10		 je	 SHORT $LN100@display_ex
  00b26	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _target$25[ebp]
  00b2c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b2e	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv440[ebp], ecx
  00b34	eb 27		 jmp	 SHORT $LN101@display_ex
$LN100@display_ex:
  00b36	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00b3c	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  00b42	52		 push	 edx
  00b43	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b4d	50		 push	 eax
  00b4e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b53	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv440[ebp], 0
$LN101@display_ex:
  00b5d	b9 01 00 00 00	 mov	 ecx, 1
  00b62	85 c9		 test	 ecx, ecx
  00b64	74 0c		 je	 SHORT $LN102@display_ex
  00b66	c7 85 f4 fb ff
	ff 03 00 00 00	 mov	 DWORD PTR tv448[ebp], 3
  00b70	eb 27		 jmp	 SHORT $LN103@display_ex
$LN102@display_ex:
  00b72	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00b78	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  00b7e	52		 push	 edx
  00b7f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b84	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00b89	50		 push	 eax
  00b8a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b8f	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv448[ebp], 0
$LN103@display_ex:
  00b99	6a 03		 push	 3
  00b9b	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _target$25[ebp]
  00ba1	51		 push	 ecx
  00ba2	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv440[ebp], 52
  00ba9	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv448[ebp]
  00baf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00bb6	ff d1		 call	 ecx
  00bb8	50		 push	 eax
  00bb9	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FOELEALI@Target?3?5?$CFs@
  00bbe	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _buffer$28[ebp]
  00bc4	52		 push	 edx
  00bc5	e8 00 00 00 00	 call	 _sprintf
  00bca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 394  : 
; 395  : 						s = buffer;

  00bcd	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$28[ebp]
  00bd3	89 45 fc	 mov	 DWORD PTR _s$29[ebp], eax

; 396  : 
; 397  : 						if (get_local_entity_int_value (target, INT_TYPE_SIDE) == ENTITY_SIDE_BLUE_FORCE)

  00bd6	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$25[ebp], 0
  00bdd	74 10		 je	 SHORT $LN104@display_ex
  00bdf	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _target$25[ebp]
  00be5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00be7	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv461[ebp], ecx
  00bed	eb 20		 jmp	 SHORT $LN105@display_ex
$LN104@display_ex:
  00bef	68 8d 01 00 00	 push	 397			; 0000018dH
  00bf4	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bf9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00bff	52		 push	 edx
  00c00	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c05	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv461[ebp], 0
$LN105@display_ex:
  00c0f	b8 01 00 00 00	 mov	 eax, 1
  00c14	85 c0		 test	 eax, eax
  00c16	74 0c		 je	 SHORT $LN106@display_ex
  00c18	c7 85 f4 fb ff
	ff bb 00 00 00	 mov	 DWORD PTR tv468[ebp], 187 ; 000000bbH
  00c22	eb 20		 jmp	 SHORT $LN107@display_ex
$LN106@display_ex:
  00c24	68 8d 01 00 00	 push	 397			; 0000018dH
  00c29	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c2e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c34	51		 push	 ecx
  00c35	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c3a	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv468[ebp], 0
$LN107@display_ex:
  00c44	68 bb 00 00 00	 push	 187			; 000000bbH
  00c49	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _target$25[ebp]
  00c4f	52		 push	 edx
  00c50	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv461[ebp], 1116
  00c5a	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv468[ebp]
  00c60	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00c67	ff d2		 call	 edx
  00c69	83 f8 01	 cmp	 eax, 1
  00c6c	75 0d		 jne	 SHORT $LN21@display_ex

; 398  : 						{
; 399  : 							set_ui_font_colour (ext_col_blue_force);

  00c6e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A ; ext_col_blue_force
  00c73	50		 push	 eax
  00c74	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 400  : 						}
; 401  : 						else

  00c79	eb 0b		 jmp	 SHORT $LN22@display_ex
$LN21@display_ex:

; 402  : 						{
; 403  : 							set_ui_font_colour (ext_col_red_force);

  00c7b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_red_force@@3UREAL_COLOUR@@A ; ext_col_red_force
  00c80	50		 push	 eax
  00c81	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN22@display_ex:

; 404  : 						}
; 405  : 					}
; 406  : 					else

  00c86	eb 12		 jmp	 SHORT $LN20@display_ex
$LN19@display_ex:

; 407  : 					{
; 408  : 						s = "Target: Unknown";

  00c88	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$29[ebp], OFFSET ??_C@_0BA@MELJIMJB@Target?3?5Unknown@

; 409  : 
; 410  : 						set_ui_font_colour (ext_col_message);

  00c8f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_message@@3UREAL_COLOUR@@A ; ext_col_message
  00c94	50		 push	 eax
  00c95	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN20@display_ex:

; 411  : 					}
; 412  : 
; 413  : 					x = (get_screen_width (active_screen) - ui_get_string_length (s)) * 0.5;

  00c9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  00c9f	50		 push	 eax
  00ca0	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00ca5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00ca9	8b 4d fc	 mov	 ecx, DWORD PTR _s$29[ebp]
  00cac	51		 push	 ecx
  00cad	f3 0f 11 85 f8
	fb ff ff	 movss	 DWORD PTR tv1619[ebp], xmm0
  00cb5	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00cba	d9 9d f4 fb ff
	ff		 fstp	 DWORD PTR tv1317[ebp]
  00cc0	f3 0f 10 85 f8
	fb ff ff	 movss	 xmm0, DWORD PTR tv1619[ebp]
  00cc8	f3 0f 5c 85 f4
	fb ff ff	 subss	 xmm0, DWORD PTR tv1317[ebp]
  00cd0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00cd4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00cdc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ce0	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _x$22[ebp], xmm0

; 414  : 
; 415  : 					y = full_screen_y_max * (460.0 / 480.0);

  00ce8	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00cf0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feeaaaaaaaaaaab
  00cf8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cfc	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _y$21[ebp], xmm0

; 416  : 
; 417  : 					ui_display_text (s, x, y);

  00d04	51		 push	 ecx
  00d05	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _y$21[ebp]
  00d0d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d12	51		 push	 ecx
  00d13	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _x$22[ebp]
  00d1b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d20	8b 45 fc	 mov	 eax, DWORD PTR _s$29[ebp]
  00d23	50		 push	 eax
  00d24	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00d29	dd d8		 fstp	 ST(0)
$LN9@display_ex:

; 418  : 				}
; 419  : 
; 420  : 				break;

  00d2b	e9 27 11 00 00	 jmp	 $LN2@display_ex
$LN23@display_ex:

; 421  : 			}
; 422  : 			////////////////////////////////////////////////////////////////////////////////
; 423  : 			default:
; 424  : 			////////////////////////////////////////////////////////////////////////////////
; 425  : 			{
; 426  : 	   			char
; 427  : 					*s2,
; 428  : 					buffer1[200],
; 429  : 					buffer2[200],
; 430  : 					tmp[200];
; 431  :    				const char
; 432  :     	  			*s1,
; 433  : 					*full_name,
; 434  : 					*first_name,
; 435  : 					*last_name,
; 436  : 					*group_name,
; 437  : 					*task_name;
; 438  : 
; 439  : 				float
; 440  : 					x,
; 441  : 					y;
; 442  : 
; 443  : 	   			entity
; 444  :     	  			*en,
; 445  : 					*aircrew,
; 446  : 					*group,
; 447  : 					*task,
; 448  : 					*company;
; 449  : 
; 450  : 				en = get_external_view_entity ();

  00d30	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  00d35	89 85 8c fc ff
	ff		 mov	 DWORD PTR _en$5[ebp], eax

; 451  : 
; 452  : 				aircrew = NULL;

  00d3b	c7 85 88 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _aircrew$4[ebp], 0

; 453  : 
; 454  : 				////////////////////////////////////////
; 455  : 				//
; 456  : 				// LINE 1 - vehicle info
; 457  : 				//
; 458  : 				////////////////////////////////////////
; 459  : 
; 460  : 				s1 = NULL;

  00d45	c7 85 ac fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _s1$13[ebp], 0

; 461  : 
; 462  : 				full_name = get_local_entity_string (en, STRING_TYPE_FULL_NAME);

  00d4f	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  00d56	74 10		 je	 SHORT $LN108@display_ex
  00d58	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  00d5e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d60	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv500[ebp], ecx
  00d66	eb 27		 jmp	 SHORT $LN109@display_ex
$LN108@display_ex:
  00d68	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00d6e	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  00d74	52		 push	 edx
  00d75	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d7a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d7f	50		 push	 eax
  00d80	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d85	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv500[ebp], 0
$LN109@display_ex:
  00d8f	b9 01 00 00 00	 mov	 ecx, 1
  00d94	85 c9		 test	 ecx, ecx
  00d96	74 0c		 je	 SHORT $LN110@display_ex
  00d98	c7 85 f4 fb ff
	ff 03 00 00 00	 mov	 DWORD PTR tv508[ebp], 3
  00da2	eb 27		 jmp	 SHORT $LN111@display_ex
$LN110@display_ex:
  00da4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00daa	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  00db0	52		 push	 edx
  00db1	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00db6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00dbb	50		 push	 eax
  00dbc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dc1	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv508[ebp], 0
$LN111@display_ex:
  00dcb	6a 03		 push	 3
  00dcd	8b 8d 8c fc ff
	ff		 mov	 ecx, DWORD PTR _en$5[ebp]
  00dd3	51		 push	 ecx
  00dd4	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv500[ebp], 52
  00ddb	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv508[ebp]
  00de1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00de8	ff d1		 call	 ecx
  00dea	89 85 a8 fc ff
	ff		 mov	 DWORD PTR _full_name$12[ebp], eax

; 463  : 
; 464  : 				if (full_name && strlen (full_name))

  00df0	83 bd a8 fc ff
	ff 00		 cmp	 DWORD PTR _full_name$12[ebp], 0
  00df7	0f 84 88 04 00
	00		 je	 $LN30@display_ex
  00dfd	8b 85 a8 fc ff
	ff		 mov	 eax, DWORD PTR _full_name$12[ebp]
  00e03	50		 push	 eax
  00e04	e8 00 00 00 00	 call	 _strlen
  00e09	83 c4 04	 add	 esp, 4
  00e0c	85 c0		 test	 eax, eax
  00e0e	0f 84 71 04 00
	00		 je	 $LN30@display_ex

; 465  : 				{
; 466  : 					if (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  00e14	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  00e1b	74 10		 je	 SHORT $LN112@display_ex
  00e1d	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  00e23	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e25	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv523[ebp], ecx
  00e2b	eb 20		 jmp	 SHORT $LN113@display_ex
$LN112@display_ex:
  00e2d	68 d2 01 00 00	 push	 466			; 000001d2H
  00e32	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e37	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e3d	52		 push	 edx
  00e3e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e43	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv523[ebp], 0
$LN113@display_ex:
  00e4d	b8 01 00 00 00	 mov	 eax, 1
  00e52	85 c0		 test	 eax, eax
  00e54	74 0c		 je	 SHORT $LN114@display_ex
  00e56	c7 85 f4 fb ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv530[ebp], 156 ; 0000009cH
  00e60	eb 20		 jmp	 SHORT $LN115@display_ex
$LN114@display_ex:
  00e62	68 d2 01 00 00	 push	 466			; 000001d2H
  00e67	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e6c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e72	51		 push	 ecx
  00e73	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e78	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv530[ebp], 0
$LN115@display_ex:
  00e82	68 9c 00 00 00	 push	 156			; 0000009cH
  00e87	8b 95 8c fc ff
	ff		 mov	 edx, DWORD PTR _en$5[ebp]
  00e8d	52		 push	 edx
  00e8e	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv523[ebp], 1116
  00e98	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv530[ebp]
  00e9e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ea5	ff d2		 call	 edx
  00ea7	85 c0		 test	 eax, eax
  00ea9	75 11		 jne	 SHORT $LN25@display_ex

; 467  : 					{
; 468  : 						s1 = full_name;

  00eab	8b 85 a8 fc ff
	ff		 mov	 eax, DWORD PTR _full_name$12[ebp]
  00eb1	89 85 ac fc ff
	ff		 mov	 DWORD PTR _s1$13[ebp], eax

; 469  : 					}
; 470  : 					else

  00eb7	e9 c9 03 00 00	 jmp	 $LN30@display_ex
$LN25@display_ex:

; 471  : 					{
; 472  : 						aircrew = get_local_entity_first_child (en, LIST_TYPE_AIRCREW);

  00ebc	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  00ec3	74 10		 je	 SHORT $LN116@display_ex
  00ec5	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  00ecb	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ecd	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv543[ebp], ecx
  00ed3	eb 27		 jmp	 SHORT $LN117@display_ex
$LN116@display_ex:
  00ed5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00edb	81 c2 e5 00 00
	00		 add	 edx, 229		; 000000e5H
  00ee1	52		 push	 edx
  00ee2	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ee7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00eec	50		 push	 eax
  00eed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ef2	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv543[ebp], 0
$LN117@display_ex:
  00efc	b9 01 00 00 00	 mov	 ecx, 1
  00f01	85 c9		 test	 ecx, ecx
  00f03	74 0c		 je	 SHORT $LN118@display_ex
  00f05	c7 85 f4 fb ff
	ff 01 00 00 00	 mov	 DWORD PTR tv551[ebp], 1
  00f0f	eb 27		 jmp	 SHORT $LN119@display_ex
$LN118@display_ex:
  00f11	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  00f17	81 c2 e5 00 00
	00		 add	 edx, 229		; 000000e5H
  00f1d	52		 push	 edx
  00f1e	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f23	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00f28	50		 push	 eax
  00f29	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f2e	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv551[ebp], 0
$LN119@display_ex:
  00f38	6a 01		 push	 1
  00f3a	8b 8d 8c fc ff
	ff		 mov	 ecx, DWORD PTR _en$5[ebp]
  00f40	51		 push	 ecx
  00f41	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv543[ebp], 180
  00f4b	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv551[ebp]
  00f51	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00f58	ff d1		 call	 ecx
  00f5a	89 85 88 fc ff
	ff		 mov	 DWORD PTR _aircrew$4[ebp], eax
$LN4@display_ex:

; 473  : 
; 474  : 						while (aircrew)

  00f60	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _aircrew$4[ebp], 0
  00f67	0f 84 42 01 00
	00		 je	 $LN5@display_ex

; 475  : 						{
; 476  : 							if (get_local_entity_int_value (aircrew, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_PILOT_PILOT)

  00f6d	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _aircrew$4[ebp], 0
  00f74	74 10		 je	 SHORT $LN120@display_ex
  00f76	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _aircrew$4[ebp]
  00f7c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f7e	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv563[ebp], ecx
  00f84	eb 20		 jmp	 SHORT $LN121@display_ex
$LN120@display_ex:
  00f86	68 dc 01 00 00	 push	 476			; 000001dcH
  00f8b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f90	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f96	52		 push	 edx
  00f97	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f9c	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv563[ebp], 0
$LN121@display_ex:
  00fa6	b8 01 00 00 00	 mov	 eax, 1
  00fab	85 c0		 test	 eax, eax
  00fad	74 0c		 je	 SHORT $LN122@display_ex
  00faf	c7 85 f4 fb ff
	ff 34 00 00 00	 mov	 DWORD PTR tv570[ebp], 52 ; 00000034H
  00fb9	eb 20		 jmp	 SHORT $LN123@display_ex
$LN122@display_ex:
  00fbb	68 dc 01 00 00	 push	 476			; 000001dcH
  00fc0	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fc5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00fcb	51		 push	 ecx
  00fcc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fd1	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv570[ebp], 0
$LN123@display_ex:
  00fdb	6a 34		 push	 52			; 00000034H
  00fdd	8b 95 88 fc ff
	ff		 mov	 edx, DWORD PTR _aircrew$4[ebp]
  00fe3	52		 push	 edx
  00fe4	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv563[ebp], 1116
  00fee	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv570[ebp]
  00ff4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ffb	ff d2		 call	 edx
  00ffd	85 c0		 test	 eax, eax
  00fff	75 05		 jne	 SHORT $LN27@display_ex

; 477  : 							{
; 478  : 								break;

  01001	e9 a9 00 00 00	 jmp	 $LN5@display_ex
$LN27@display_ex:

; 479  : 							}
; 480  : 
; 481  : 							aircrew = get_local_entity_child_succ (aircrew, LIST_TYPE_AIRCREW);

  01006	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _aircrew$4[ebp], 0
  0100d	74 10		 je	 SHORT $LN124@display_ex
  0100f	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _aircrew$4[ebp]
  01015	8b 08		 mov	 ecx, DWORD PTR [eax]
  01017	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv583[ebp], ecx
  0101d	eb 27		 jmp	 SHORT $LN125@display_ex
$LN124@display_ex:
  0101f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01025	81 c2 ee 00 00
	00		 add	 edx, 238		; 000000eeH
  0102b	52		 push	 edx
  0102c	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01036	50		 push	 eax
  01037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0103c	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv583[ebp], 0
$LN125@display_ex:
  01046	b9 01 00 00 00	 mov	 ecx, 1
  0104b	85 c9		 test	 ecx, ecx
  0104d	74 0c		 je	 SHORT $LN126@display_ex
  0104f	c7 85 f4 fb ff
	ff 01 00 00 00	 mov	 DWORD PTR tv591[ebp], 1
  01059	eb 27		 jmp	 SHORT $LN127@display_ex
$LN126@display_ex:
  0105b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01061	81 c2 ee 00 00
	00		 add	 edx, 238		; 000000eeH
  01067	52		 push	 edx
  01068	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0106d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01072	50		 push	 eax
  01073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01078	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv591[ebp], 0
$LN127@display_ex:
  01082	6a 01		 push	 1
  01084	8b 8d 88 fc ff
	ff		 mov	 ecx, DWORD PTR _aircrew$4[ebp]
  0108a	51		 push	 ecx
  0108b	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv583[ebp], 180
  01095	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv591[ebp]
  0109b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  010a2	ff d1		 call	 ecx
  010a4	89 85 88 fc ff
	ff		 mov	 DWORD PTR _aircrew$4[ebp], eax

; 482  : 						}

  010aa	e9 b1 fe ff ff	 jmp	 $LN4@display_ex
$LN5@display_ex:

; 483  : 
; 484  : 						if (aircrew)

  010af	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _aircrew$4[ebp], 0
  010b6	0f 84 c9 01 00
	00		 je	 $LN30@display_ex

; 485  : 						{
; 486  : 							first_name = get_pilot_rank_short_name (get_local_entity_int_value (aircrew, INT_TYPE_PILOT_RANK));

  010bc	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _aircrew$4[ebp], 0
  010c3	74 10		 je	 SHORT $LN128@display_ex
  010c5	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _aircrew$4[ebp]
  010cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  010cd	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv605[ebp], ecx
  010d3	eb 27		 jmp	 SHORT $LN129@display_ex
$LN128@display_ex:
  010d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  010db	81 c2 f3 00 00
	00		 add	 edx, 243		; 000000f3H
  010e1	52		 push	 edx
  010e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  010e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010ec	50		 push	 eax
  010ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010f2	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv605[ebp], 0
$LN129@display_ex:
  010fc	b9 01 00 00 00	 mov	 ecx, 1
  01101	85 c9		 test	 ecx, ecx
  01103	74 0c		 je	 SHORT $LN130@display_ex
  01105	c7 85 f4 fb ff
	ff 9a 00 00 00	 mov	 DWORD PTR tv613[ebp], 154 ; 0000009aH
  0110f	eb 27		 jmp	 SHORT $LN131@display_ex
$LN130@display_ex:
  01111	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01117	81 c2 f3 00 00
	00		 add	 edx, 243		; 000000f3H
  0111d	52		 push	 edx
  0111e	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01123	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01128	50		 push	 eax
  01129	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0112e	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv613[ebp], 0
$LN131@display_ex:
  01138	68 9a 00 00 00	 push	 154			; 0000009aH
  0113d	8b 8d 88 fc ff
	ff		 mov	 ecx, DWORD PTR _aircrew$4[ebp]
  01143	51		 push	 ecx
  01144	69 95 f8 fb ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv605[ebp], 1116
  0114e	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv613[ebp]
  01154	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0115b	ff d1		 call	 ecx
  0115d	50		 push	 eax
  0115e	e8 00 00 00 00	 call	 ?get_pilot_rank_short_name@@YGPBDH@Z ; get_pilot_rank_short_name
  01163	89 85 a4 fc ff
	ff		 mov	 DWORD PTR _first_name$11[ebp], eax

; 487  : 
; 488  : 							last_name = get_local_entity_string (aircrew, STRING_TYPE_PILOTS_NAME);

  01169	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _aircrew$4[ebp], 0
  01170	74 10		 je	 SHORT $LN132@display_ex
  01172	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _aircrew$4[ebp]
  01178	8b 08		 mov	 ecx, DWORD PTR [eax]
  0117a	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv626[ebp], ecx
  01180	eb 27		 jmp	 SHORT $LN133@display_ex
$LN132@display_ex:
  01182	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01188	81 c2 f5 00 00
	00		 add	 edx, 245		; 000000f5H
  0118e	52		 push	 edx
  0118f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01194	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01199	50		 push	 eax
  0119a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0119f	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv626[ebp], 0
$LN133@display_ex:
  011a9	b9 01 00 00 00	 mov	 ecx, 1
  011ae	85 c9		 test	 ecx, ecx
  011b0	74 0c		 je	 SHORT $LN134@display_ex
  011b2	c7 85 f4 fb ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv634[ebp], 10 ; 0000000aH
  011bc	eb 27		 jmp	 SHORT $LN135@display_ex
$LN134@display_ex:
  011be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  011c4	81 c2 f5 00 00
	00		 add	 edx, 245		; 000000f5H
  011ca	52		 push	 edx
  011cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  011d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  011d5	50		 push	 eax
  011d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  011db	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv634[ebp], 0
$LN135@display_ex:
  011e5	6a 0a		 push	 10			; 0000000aH
  011e7	8b 8d 88 fc ff
	ff		 mov	 ecx, DWORD PTR _aircrew$4[ebp]
  011ed	51		 push	 ecx
  011ee	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv626[ebp], 52
  011f5	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv634[ebp]
  011fb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  01202	ff d1		 call	 ecx
  01204	89 85 a0 fc ff
	ff		 mov	 DWORD PTR _last_name$10[ebp], eax

; 489  : 
; 490  : 							if ((first_name && strlen (first_name)) && (last_name && strlen (last_name)))

  0120a	83 bd a4 fc ff
	ff 00		 cmp	 DWORD PTR _first_name$11[ebp], 0
  01211	74 66		 je	 SHORT $LN29@display_ex
  01213	8b 85 a4 fc ff
	ff		 mov	 eax, DWORD PTR _first_name$11[ebp]
  01219	50		 push	 eax
  0121a	e8 00 00 00 00	 call	 _strlen
  0121f	83 c4 04	 add	 esp, 4
  01222	85 c0		 test	 eax, eax
  01224	74 53		 je	 SHORT $LN29@display_ex
  01226	83 bd a0 fc ff
	ff 00		 cmp	 DWORD PTR _last_name$10[ebp], 0
  0122d	74 4a		 je	 SHORT $LN29@display_ex
  0122f	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _last_name$10[ebp]
  01235	50		 push	 eax
  01236	e8 00 00 00 00	 call	 _strlen
  0123b	83 c4 04	 add	 esp, 4
  0123e	85 c0		 test	 eax, eax
  01240	74 37		 je	 SHORT $LN29@display_ex

; 491  : 							{
; 492  : 								sprintf (buffer1, "%s (%s %s)", full_name, first_name, last_name);

  01242	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _last_name$10[ebp]
  01248	50		 push	 eax
  01249	8b 8d a4 fc ff
	ff		 mov	 ecx, DWORD PTR _first_name$11[ebp]
  0124f	51		 push	 ecx
  01250	8b 95 a8 fc ff
	ff		 mov	 edx, DWORD PTR _full_name$12[ebp]
  01256	52		 push	 edx
  01257	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ICEAPIOD@?$CFs?5?$CI?$CFs?5?$CFs?$CJ@
  0125c	8d 85 40 fe ff
	ff		 lea	 eax, DWORD PTR _buffer1$16[ebp]
  01262	50		 push	 eax
  01263	e8 00 00 00 00	 call	 _sprintf
  01268	83 c4 14	 add	 esp, 20			; 00000014H

; 493  : 
; 494  : 								s1 = buffer1;

  0126b	8d 85 40 fe ff
	ff		 lea	 eax, DWORD PTR _buffer1$16[ebp]
  01271	89 85 ac fc ff
	ff		 mov	 DWORD PTR _s1$13[ebp], eax

; 495  : 							}
; 496  : 							else

  01277	eb 0c		 jmp	 SHORT $LN30@display_ex
$LN29@display_ex:

; 497  : 							{
; 498  : 								s1 = full_name;

  01279	8b 85 a8 fc ff
	ff		 mov	 eax, DWORD PTR _full_name$12[ebp]
  0127f	89 85 ac fc ff
	ff		 mov	 DWORD PTR _s1$13[ebp], eax
$LN30@display_ex:

; 499  : 							}
; 500  : 						}
; 501  : 					}
; 502  : 				}
; 503  : 
; 504  : 				////////////////////////////////////////
; 505  : 				//
; 506  : 				// LINE 2 - group info
; 507  : 				//
; 508  : 				////////////////////////////////////////
; 509  : 
; 510  : 				s2 = NULL;

  01285	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _s2$17[ebp], 0

; 511  : 
; 512  : 				//
; 513  : 				// group info
; 514  : 				//
; 515  : 
; 516  : 				group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  0128f	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  01296	74 10		 je	 SHORT $LN136@display_ex
  01298	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  0129e	8b 08		 mov	 ecx, DWORD PTR [eax]
  012a0	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv659[ebp], ecx
  012a6	eb 27		 jmp	 SHORT $LN137@display_ex
$LN136@display_ex:
  012a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  012ae	81 c2 11 01 00
	00		 add	 edx, 273		; 00000111H
  012b4	52		 push	 edx
  012b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  012ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  012bf	50		 push	 eax
  012c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  012c5	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv659[ebp], 0
$LN137@display_ex:
  012cf	b9 01 00 00 00	 mov	 ecx, 1
  012d4	85 c9		 test	 ecx, ecx
  012d6	74 0c		 je	 SHORT $LN138@display_ex
  012d8	c7 85 f4 fb ff
	ff 19 00 00 00	 mov	 DWORD PTR tv667[ebp], 25 ; 00000019H
  012e2	eb 27		 jmp	 SHORT $LN139@display_ex
$LN138@display_ex:
  012e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  012ea	81 c2 11 01 00
	00		 add	 edx, 273		; 00000111H
  012f0	52		 push	 edx
  012f1	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  012f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  012fb	50		 push	 eax
  012fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01301	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv667[ebp], 0
$LN139@display_ex:
  0130b	6a 19		 push	 25			; 00000019H
  0130d	8b 8d 8c fc ff
	ff		 mov	 ecx, DWORD PTR _en$5[ebp]
  01313	51		 push	 ecx
  01314	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv659[ebp], 180
  0131e	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv667[ebp]
  01324	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0132b	ff d1		 call	 ecx
  0132d	89 85 84 fc ff
	ff		 mov	 DWORD PTR _group$3[ebp], eax

; 517  : 
; 518  : 				if (group)

  01333	83 bd 84 fc ff
	ff 00		 cmp	 DWORD PTR _group$3[ebp], 0
  0133a	0f 84 9f 08 00
	00		 je	 $LN38@display_ex

; 519  : 				{
; 520  : 					group_name = get_local_entity_string (group, STRING_TYPE_GROUP_CALLSIGN);

  01340	83 bd 84 fc ff
	ff 00		 cmp	 DWORD PTR _group$3[ebp], 0
  01347	74 10		 je	 SHORT $LN140@display_ex
  01349	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _group$3[ebp]
  0134f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01351	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv680[ebp], ecx
  01357	eb 27		 jmp	 SHORT $LN141@display_ex
$LN140@display_ex:
  01359	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0135f	81 c2 15 01 00
	00		 add	 edx, 277		; 00000115H
  01365	52		 push	 edx
  01366	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0136b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01370	50		 push	 eax
  01371	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01376	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv680[ebp], 0
$LN141@display_ex:
  01380	b9 01 00 00 00	 mov	 ecx, 1
  01385	85 c9		 test	 ecx, ecx
  01387	74 0c		 je	 SHORT $LN142@display_ex
  01389	c7 85 f4 fb ff
	ff 04 00 00 00	 mov	 DWORD PTR tv688[ebp], 4
  01393	eb 27		 jmp	 SHORT $LN143@display_ex
$LN142@display_ex:
  01395	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0139b	81 c2 15 01 00
	00		 add	 edx, 277		; 00000115H
  013a1	52		 push	 edx
  013a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  013a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  013ac	50		 push	 eax
  013ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  013b2	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv688[ebp], 0
$LN143@display_ex:
  013bc	6a 04		 push	 4
  013be	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _group$3[ebp]
  013c4	51		 push	 ecx
  013c5	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv680[ebp], 52
  013cc	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv688[ebp]
  013d2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  013d9	ff d1		 call	 ecx
  013db	89 85 9c fc ff
	ff		 mov	 DWORD PTR _group_name$9[ebp], eax

; 521  : 
; 522  : 					company = get_local_entity_parent (group, LIST_TYPE_DIVISION);

  013e1	83 bd 84 fc ff
	ff 00		 cmp	 DWORD PTR _group$3[ebp], 0
  013e8	74 10		 je	 SHORT $LN144@display_ex
  013ea	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _group$3[ebp]
  013f0	8b 08		 mov	 ecx, DWORD PTR [eax]
  013f2	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv700[ebp], ecx
  013f8	eb 27		 jmp	 SHORT $LN145@display_ex
$LN144@display_ex:
  013fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01400	81 c2 17 01 00
	00		 add	 edx, 279		; 00000117H
  01406	52		 push	 edx
  01407	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0140c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01411	50		 push	 eax
  01412	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01417	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv700[ebp], 0
$LN145@display_ex:
  01421	b9 01 00 00 00	 mov	 ecx, 1
  01426	85 c9		 test	 ecx, ecx
  01428	74 0c		 je	 SHORT $LN146@display_ex
  0142a	c7 85 f4 fb ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv708[ebp], 11 ; 0000000bH
  01434	eb 27		 jmp	 SHORT $LN147@display_ex
$LN146@display_ex:
  01436	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0143c	81 c2 17 01 00
	00		 add	 edx, 279		; 00000117H
  01442	52		 push	 edx
  01443	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01448	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0144d	50		 push	 eax
  0144e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01453	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv708[ebp], 0
$LN147@display_ex:
  0145d	6a 0b		 push	 11			; 0000000bH
  0145f	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _group$3[ebp]
  01465	51		 push	 ecx
  01466	69 95 f8 fb ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv700[ebp], 180
  01470	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv708[ebp]
  01476	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0147d	ff d1		 call	 ecx
  0147f	89 85 7c fc ff
	ff		 mov	 DWORD PTR _company$1[ebp], eax

; 523  : 
; 524  : 					ASSERT (company);

  01485	83 bd 7c fc ff
	ff 00		 cmp	 DWORD PTR _company$1[ebp], 0
  0148c	75 1a		 jne	 SHORT $LN32@display_ex
  0148e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01493	05 19 01 00 00	 add	 eax, 281		; 00000119H
  01498	50		 push	 eax
  01499	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0149e	68 00 00 00 00	 push	 OFFSET ??_C@_07MLNBPDHK@company@
  014a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN32@display_ex:

; 525  : 
; 526  : 					if (get_local_entity_int_value (en, INT_TYPE_IDENTIFY_AIRCRAFT))

  014a8	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  014af	74 10		 je	 SHORT $LN148@display_ex
  014b1	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  014b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  014b9	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv724[ebp], ecx
  014bf	eb 20		 jmp	 SHORT $LN149@display_ex
$LN148@display_ex:
  014c1	68 0e 02 00 00	 push	 526			; 0000020eH
  014c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  014cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  014d1	52		 push	 edx
  014d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  014d7	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv724[ebp], 0
$LN149@display_ex:
  014e1	b8 01 00 00 00	 mov	 eax, 1
  014e6	85 c0		 test	 eax, eax
  014e8	74 0c		 je	 SHORT $LN150@display_ex
  014ea	c7 85 f4 fb ff
	ff 57 00 00 00	 mov	 DWORD PTR tv731[ebp], 87 ; 00000057H
  014f4	eb 20		 jmp	 SHORT $LN151@display_ex
$LN150@display_ex:
  014f6	68 0e 02 00 00	 push	 526			; 0000020eH
  014fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01500	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01506	51		 push	 ecx
  01507	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0150c	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv731[ebp], 0
$LN151@display_ex:
  01516	6a 57		 push	 87			; 00000057H
  01518	8b 95 8c fc ff
	ff		 mov	 edx, DWORD PTR _en$5[ebp]
  0151e	52		 push	 edx
  0151f	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv724[ebp], 1116
  01529	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv731[ebp]
  0152f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  01536	ff d2		 call	 edx
  01538	85 c0		 test	 eax, eax
  0153a	0f 84 59 01 00
	00		 je	 $LN33@display_ex

; 527  : 					{
; 528  : 						sprintf (buffer2, "'%s 1-%d', %s",

  01540	83 bd 7c fc ff
	ff 00		 cmp	 DWORD PTR _company$1[ebp], 0
  01547	74 10		 je	 SHORT $LN152@display_ex
  01549	8b 85 7c fc ff
	ff		 mov	 eax, DWORD PTR _company$1[ebp]
  0154f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01551	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv745[ebp], ecx
  01557	eb 27		 jmp	 SHORT $LN153@display_ex
$LN152@display_ex:
  01559	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0155f	81 c2 20 01 00
	00		 add	 edx, 288		; 00000120H
  01565	52		 push	 edx
  01566	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0156b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01570	50		 push	 eax
  01571	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01576	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv745[ebp], 0
$LN153@display_ex:
  01580	b9 01 00 00 00	 mov	 ecx, 1
  01585	85 c9		 test	 ecx, ecx
  01587	74 0c		 je	 SHORT $LN154@display_ex
  01589	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv753[ebp], 0
  01593	eb 27		 jmp	 SHORT $LN155@display_ex
$LN154@display_ex:
  01595	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0159b	81 c2 20 01 00
	00		 add	 edx, 288		; 00000120H
  015a1	52		 push	 edx
  015a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  015a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  015ac	50		 push	 eax
  015ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  015b2	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv753[ebp], 0
$LN155@display_ex:
  015bc	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  015c3	74 10		 je	 SHORT $LN156@display_ex
  015c5	8b 8d 8c fc ff
	ff		 mov	 ecx, DWORD PTR _en$5[ebp]
  015cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  015cd	89 95 f0 fb ff
	ff		 mov	 DWORD PTR tv766[ebp], edx
  015d3	eb 26		 jmp	 SHORT $LN157@display_ex
$LN156@display_ex:
  015d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  015da	05 1f 01 00 00	 add	 eax, 287		; 0000011fH
  015df	50		 push	 eax
  015e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  015e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  015eb	51		 push	 ecx
  015ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  015f1	c7 85 f0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv766[ebp], 0
$LN157@display_ex:
  015fb	ba 01 00 00 00	 mov	 edx, 1
  01600	85 d2		 test	 edx, edx
  01602	74 0c		 je	 SHORT $LN158@display_ex
  01604	c7 85 ec fb ff
	ff 4a 00 00 00	 mov	 DWORD PTR tv774[ebp], 74 ; 0000004aH
  0160e	eb 26		 jmp	 SHORT $LN159@display_ex
$LN158@display_ex:
  01610	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01615	05 1f 01 00 00	 add	 eax, 287		; 0000011fH
  0161a	50		 push	 eax
  0161b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01620	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01626	51		 push	 ecx
  01627	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0162c	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv774[ebp], 0
$LN159@display_ex:
  01636	6a 00		 push	 0
  01638	8b 95 7c fc ff
	ff		 mov	 edx, DWORD PTR _company$1[ebp]
  0163e	52		 push	 edx
  0163f	6b 85 f8 fb ff
	ff 34		 imul	 eax, DWORD PTR tv745[ebp], 52
  01646	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv753[ebp]
  0164c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  01653	ff d2		 call	 edx
  01655	50		 push	 eax
  01656	6a 4a		 push	 74			; 0000004aH
  01658	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  0165e	50		 push	 eax
  0165f	69 8d f0 fb ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv766[ebp], 1116
  01669	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR tv774[ebp]
  0166f	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  01676	ff d0		 call	 eax
  01678	50		 push	 eax
  01679	8b 8d 9c fc ff
	ff		 mov	 ecx, DWORD PTR _group_name$9[ebp]
  0167f	51		 push	 ecx
  01680	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EDCKAOKI@?8?$CFs?51?9?$CFd?8?0?5?$CFs@
  01685	8d 95 78 fd ff
	ff		 lea	 edx, DWORD PTR _buffer2$15[ebp]
  0168b	52		 push	 edx
  0168c	e8 00 00 00 00	 call	 _sprintf
  01691	83 c4 14	 add	 esp, 20			; 00000014H

; 529  : 									group_name,
; 530  : 									get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_ID),
; 531  : 									get_local_entity_string (company, STRING_TYPE_DIVISION_NAME));
; 532  : 					}
; 533  : 					else

  01694	e9 4a 01 00 00	 jmp	 $LN34@display_ex
$LN33@display_ex:

; 534  : 					{
; 535  : 						sprintf (buffer2, "%s, %s",

  01699	83 bd 7c fc ff
	ff 00		 cmp	 DWORD PTR _company$1[ebp], 0
  016a0	74 10		 je	 SHORT $LN160@display_ex
  016a2	8b 85 7c fc ff
	ff		 mov	 eax, DWORD PTR _company$1[ebp]
  016a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  016aa	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv790[ebp], ecx
  016b0	eb 27		 jmp	 SHORT $LN161@display_ex
$LN160@display_ex:
  016b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  016b8	81 c2 26 01 00
	00		 add	 edx, 294		; 00000126H
  016be	52		 push	 edx
  016bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  016c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  016c9	50		 push	 eax
  016ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  016cf	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv790[ebp], 0
$LN161@display_ex:
  016d9	b9 01 00 00 00	 mov	 ecx, 1
  016de	85 c9		 test	 ecx, ecx
  016e0	74 0c		 je	 SHORT $LN162@display_ex
  016e2	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv798[ebp], 0
  016ec	eb 27		 jmp	 SHORT $LN163@display_ex
$LN162@display_ex:
  016ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  016f4	81 c2 26 01 00
	00		 add	 edx, 294		; 00000126H
  016fa	52		 push	 edx
  016fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01700	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  01705	50		 push	 eax
  01706	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0170b	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv798[ebp], 0
$LN163@display_ex:
  01715	83 bd 84 fc ff
	ff 00		 cmp	 DWORD PTR _group$3[ebp], 0
  0171c	74 10		 je	 SHORT $LN164@display_ex
  0171e	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _group$3[ebp]
  01724	8b 11		 mov	 edx, DWORD PTR [ecx]
  01726	89 95 f0 fb ff
	ff		 mov	 DWORD PTR tv811[ebp], edx
  0172c	eb 26		 jmp	 SHORT $LN165@display_ex
$LN164@display_ex:
  0172e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01733	05 25 01 00 00	 add	 eax, 293		; 00000125H
  01738	50		 push	 eax
  01739	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0173e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01744	51		 push	 ecx
  01745	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0174a	c7 85 f0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv811[ebp], 0
$LN165@display_ex:
  01754	ba 01 00 00 00	 mov	 edx, 1
  01759	85 d2		 test	 edx, edx
  0175b	74 0c		 je	 SHORT $LN166@display_ex
  0175d	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv819[ebp], 0
  01767	eb 26		 jmp	 SHORT $LN167@display_ex
$LN166@display_ex:
  01769	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  0176e	05 25 01 00 00	 add	 eax, 293		; 00000125H
  01773	50		 push	 eax
  01774	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01779	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0177f	51		 push	 ecx
  01780	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01785	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv819[ebp], 0
$LN167@display_ex:
  0178f	6a 00		 push	 0
  01791	8b 95 7c fc ff
	ff		 mov	 edx, DWORD PTR _company$1[ebp]
  01797	52		 push	 edx
  01798	6b 85 f8 fb ff
	ff 34		 imul	 eax, DWORD PTR tv790[ebp], 52
  0179f	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv798[ebp]
  017a5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  017ac	ff d2		 call	 edx
  017ae	50		 push	 eax
  017af	6a 00		 push	 0
  017b1	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _group$3[ebp]
  017b7	50		 push	 eax
  017b8	6b 8d f0 fb ff
	ff 34		 imul	 ecx, DWORD PTR tv811[ebp], 52
  017bf	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR tv819[ebp]
  017c5	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  017cc	ff d0		 call	 eax
  017ce	50		 push	 eax
  017cf	68 00 00 00 00	 push	 OFFSET ??_C@_06OMDHIKNA@?$CFs?0?5?$CFs@
  017d4	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR _buffer2$15[ebp]
  017da	51		 push	 ecx
  017db	e8 00 00 00 00	 call	 _sprintf
  017e0	83 c4 10	 add	 esp, 16			; 00000010H
$LN34@display_ex:

; 536  : 									get_local_entity_string (group, STRING_TYPE_DIVISION_NAME),
; 537  : 									get_local_entity_string (company, STRING_TYPE_DIVISION_NAME));
; 538  : 					}
; 539  : 
; 540  : 					task = get_local_entity_primary_task (en);

  017e3	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  017e9	50		 push	 eax
  017ea	e8 00 00 00 00	 call	 ?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_primary_task
  017ef	89 85 80 fc ff
	ff		 mov	 DWORD PTR _task$2[ebp], eax

; 541  : 
; 542  : 					if (task)

  017f5	83 bd 80 fc ff
	ff 00		 cmp	 DWORD PTR _task$2[ebp], 0
  017fc	0f 84 be 03 00
	00		 je	 $LN37@display_ex

; 543  : 					{
; 544  : 						if (get_local_entity_int_value (task, INT_TYPE_VISIBLE_TASK))

  01802	83 bd 80 fc ff
	ff 00		 cmp	 DWORD PTR _task$2[ebp], 0
  01809	74 10		 je	 SHORT $LN168@display_ex
  0180b	8b 85 80 fc ff
	ff		 mov	 eax, DWORD PTR _task$2[ebp]
  01811	8b 08		 mov	 ecx, DWORD PTR [eax]
  01813	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv835[ebp], ecx
  01819	eb 20		 jmp	 SHORT $LN169@display_ex
$LN168@display_ex:
  0181b	68 20 02 00 00	 push	 544			; 00000220H
  01820	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01825	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0182b	52		 push	 edx
  0182c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01831	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv835[ebp], 0
$LN169@display_ex:
  0183b	b8 01 00 00 00	 mov	 eax, 1
  01840	85 c0		 test	 eax, eax
  01842	74 0c		 je	 SHORT $LN170@display_ex
  01844	c7 85 f4 fb ff
	ff fa 00 00 00	 mov	 DWORD PTR tv842[ebp], 250 ; 000000faH
  0184e	eb 20		 jmp	 SHORT $LN171@display_ex
$LN170@display_ex:
  01850	68 20 02 00 00	 push	 544			; 00000220H
  01855	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0185a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01860	51		 push	 ecx
  01861	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01866	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv842[ebp], 0
$LN171@display_ex:
  01870	68 fa 00 00 00	 push	 250			; 000000faH
  01875	8b 95 80 fc ff
	ff		 mov	 edx, DWORD PTR _task$2[ebp]
  0187b	52		 push	 edx
  0187c	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv835[ebp], 1116
  01886	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv842[ebp]
  0188c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  01893	ff d2		 call	 edx
  01895	85 c0		 test	 eax, eax
  01897	0f 84 23 03 00
	00		 je	 $LN37@display_ex

; 545  : 						{
; 546  : 							sprintf

  0189d	83 bd 80 fc ff
	ff 00		 cmp	 DWORD PTR _task$2[ebp], 0
  018a4	74 10		 je	 SHORT $LN172@display_ex
  018a6	8b 85 80 fc ff
	ff		 mov	 eax, DWORD PTR _task$2[ebp]
  018ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  018ae	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv856[ebp], ecx
  018b4	eb 27		 jmp	 SHORT $LN173@display_ex
$LN172@display_ex:
  018b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  018bc	81 c2 36 01 00
	00		 add	 edx, 310		; 00000136H
  018c2	52		 push	 edx
  018c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  018c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  018cd	50		 push	 eax
  018ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  018d3	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv856[ebp], 0
$LN173@display_ex:
  018dd	b9 01 00 00 00	 mov	 ecx, 1
  018e2	85 c9		 test	 ecx, ecx
  018e4	74 0c		 je	 SHORT $LN174@display_ex
  018e6	c7 85 f4 fb ff
	ff 7f 00 00 00	 mov	 DWORD PTR tv864[ebp], 127 ; 0000007fH
  018f0	eb 27		 jmp	 SHORT $LN175@display_ex
$LN174@display_ex:
  018f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  018f8	81 c2 36 01 00
	00		 add	 edx, 310		; 00000136H
  018fe	52		 push	 edx
  018ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01904	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01909	50		 push	 eax
  0190a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0190f	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv864[ebp], 0
$LN175@display_ex:
  01919	83 bd 80 fc ff
	ff 00		 cmp	 DWORD PTR _task$2[ebp], 0
  01920	74 10		 je	 SHORT $LN176@display_ex
  01922	8b 8d 80 fc ff
	ff		 mov	 ecx, DWORD PTR _task$2[ebp]
  01928	8b 11		 mov	 edx, DWORD PTR [ecx]
  0192a	89 95 f0 fb ff
	ff		 mov	 DWORD PTR tv880[ebp], edx
  01930	eb 26		 jmp	 SHORT $LN177@display_ex
$LN176@display_ex:
  01932	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01937	05 34 01 00 00	 add	 eax, 308		; 00000134H
  0193c	50		 push	 eax
  0193d	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01942	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01948	51		 push	 ecx
  01949	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0194e	c7 85 f0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv880[ebp], 0
$LN177@display_ex:
  01958	ba 01 00 00 00	 mov	 edx, 1
  0195d	85 d2		 test	 edx, edx
  0195f	74 0c		 je	 SHORT $LN178@display_ex
  01961	c7 85 ec fb ff
	ff 72 00 00 00	 mov	 DWORD PTR tv888[ebp], 114 ; 00000072H
  0196b	eb 26		 jmp	 SHORT $LN179@display_ex
$LN178@display_ex:
  0196d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01972	05 34 01 00 00	 add	 eax, 308		; 00000134H
  01977	50		 push	 eax
  01978	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0197d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01983	51		 push	 ecx
  01984	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01989	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv888[ebp], 0
$LN179@display_ex:
  01993	6a 7f		 push	 127			; 0000007fH
  01995	8b 95 80 fc ff
	ff		 mov	 edx, DWORD PTR _task$2[ebp]
  0199b	52		 push	 edx
  0199c	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv856[ebp], 1116
  019a6	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv864[ebp]
  019ac	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  019b3	ff d2		 call	 edx
  019b5	50		 push	 eax
  019b6	68 00 00 00 00	 push	 OFFSET ??_C@_06FOPKNDNO@LOSSES@
  019bb	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  019c0	50		 push	 eax
  019c1	6a 72		 push	 114			; 00000072H
  019c3	8b 85 80 fc ff
	ff		 mov	 eax, DWORD PTR _task$2[ebp]
  019c9	50		 push	 eax
  019ca	69 8d f0 fb ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv880[ebp], 1116
  019d4	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR tv888[ebp]
  019da	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  019e1	ff d0		 call	 eax
  019e3	50		 push	 eax
  019e4	68 00 00 00 00	 push	 OFFSET ??_C@_05EHJFADHN@KILLS@
  019e9	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  019ee	50		 push	 eax
  019ef	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PIMAMCBF@?0?5?$CFs?3?$CFd?5?$CFs?3?$CFd@
  019f4	8d 8d b0 fc ff
	ff		 lea	 ecx, DWORD PTR _tmp$14[ebp]
  019fa	51		 push	 ecx
  019fb	e8 00 00 00 00	 call	 _sprintf
  01a00	83 c4 18	 add	 esp, 24			; 00000018H

; 547  : 							(
; 548  : 								tmp,
; 549  : 								", %s:%d %s:%d",
; 550  : 								get_trans ("KILLS"),
; 551  : 								get_local_entity_int_value (task, INT_TYPE_KILLS),
; 552  : 								get_trans ("LOSSES"),
; 553  : 								get_local_entity_int_value (task, INT_TYPE_LOSSES)
; 554  : 							);
; 555  : 
; 556  : 							strcat (buffer2, tmp);

  01a03	8d 85 b0 fc ff
	ff		 lea	 eax, DWORD PTR _tmp$14[ebp]
  01a09	50		 push	 eax
  01a0a	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR _buffer2$15[ebp]
  01a10	51		 push	 ecx
  01a11	e8 00 00 00 00	 call	 _strcat
  01a16	83 c4 08	 add	 esp, 8

; 557  : 
; 558  : 							task_name = get_local_entity_string (task, STRING_TYPE_FULL_NAME);

  01a19	83 bd 80 fc ff
	ff 00		 cmp	 DWORD PTR _task$2[ebp], 0
  01a20	74 10		 je	 SHORT $LN180@display_ex
  01a22	8b 85 80 fc ff
	ff		 mov	 eax, DWORD PTR _task$2[ebp]
  01a28	8b 08		 mov	 ecx, DWORD PTR [eax]
  01a2a	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv939[ebp], ecx
  01a30	eb 27		 jmp	 SHORT $LN181@display_ex
$LN180@display_ex:
  01a32	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01a38	81 c2 3b 01 00
	00		 add	 edx, 315		; 0000013bH
  01a3e	52		 push	 edx
  01a3f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01a44	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01a49	50		 push	 eax
  01a4a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01a4f	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv939[ebp], 0
$LN181@display_ex:
  01a59	b9 01 00 00 00	 mov	 ecx, 1
  01a5e	85 c9		 test	 ecx, ecx
  01a60	74 0c		 je	 SHORT $LN182@display_ex
  01a62	c7 85 f4 fb ff
	ff 03 00 00 00	 mov	 DWORD PTR tv947[ebp], 3
  01a6c	eb 27		 jmp	 SHORT $LN183@display_ex
$LN182@display_ex:
  01a6e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01a74	81 c2 3b 01 00
	00		 add	 edx, 315		; 0000013bH
  01a7a	52		 push	 edx
  01a7b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01a80	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  01a85	50		 push	 eax
  01a86	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01a8b	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv947[ebp], 0
$LN183@display_ex:
  01a95	6a 03		 push	 3
  01a97	8b 8d 80 fc ff
	ff		 mov	 ecx, DWORD PTR _task$2[ebp]
  01a9d	51		 push	 ecx
  01a9e	6b 95 f8 fb ff
	ff 34		 imul	 edx, DWORD PTR tv939[ebp], 52
  01aa5	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv947[ebp]
  01aab	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  01ab2	ff d1		 call	 ecx
  01ab4	89 85 98 fc ff
	ff		 mov	 DWORD PTR _task_name$8[ebp], eax

; 559  : 
; 560  : 							if (task_name && strlen (task_name))

  01aba	83 bd 98 fc ff
	ff 00		 cmp	 DWORD PTR _task_name$8[ebp], 0
  01ac1	0f 84 f9 00 00
	00		 je	 $LN37@display_ex
  01ac7	8b 85 98 fc ff
	ff		 mov	 eax, DWORD PTR _task_name$8[ebp]
  01acd	50		 push	 eax
  01ace	e8 00 00 00 00	 call	 _strlen
  01ad3	83 c4 04	 add	 esp, 4
  01ad6	85 c0		 test	 eax, eax
  01ad8	0f 84 e2 00 00
	00		 je	 $LN37@display_ex

; 561  : 							{
; 562  : 								sprintf

  01ade	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  01ae5	74 10		 je	 SHORT $LN184@display_ex
  01ae7	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  01aed	8b 08		 mov	 ecx, DWORD PTR [eax]
  01aef	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv964[ebp], ecx
  01af5	eb 27		 jmp	 SHORT $LN185@display_ex
$LN184@display_ex:
  01af7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01afd	81 c2 45 01 00
	00		 add	 edx, 325		; 00000145H
  01b03	52		 push	 edx
  01b04	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01b09	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01b0e	50		 push	 eax
  01b0f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01b14	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv964[ebp], 0
$LN185@display_ex:
  01b1e	b9 01 00 00 00	 mov	 ecx, 1
  01b23	85 c9		 test	 ecx, ecx
  01b25	74 0c		 je	 SHORT $LN186@display_ex
  01b27	c7 85 f4 fb ff
	ff 4c 00 00 00	 mov	 DWORD PTR tv972[ebp], 76 ; 0000004cH
  01b31	eb 27		 jmp	 SHORT $LN187@display_ex
$LN186@display_ex:
  01b33	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_external_view_text@@YGXXZ@4JA
  01b39	81 c2 45 01 00
	00		 add	 edx, 325		; 00000145H
  01b3f	52		 push	 edx
  01b40	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01b45	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01b4a	50		 push	 eax
  01b4b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01b50	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv972[ebp], 0
$LN187@display_ex:
  01b5a	6a 4c		 push	 76			; 0000004cH
  01b5c	8b 8d 8c fc ff
	ff		 mov	 ecx, DWORD PTR _en$5[ebp]
  01b62	51		 push	 ecx
  01b63	69 95 f8 fb ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv964[ebp], 1116
  01b6d	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv972[ebp]
  01b73	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  01b7a	ff d1		 call	 ecx
  01b7c	8b 14 85 00 00
	00 00		 mov	 edx, DWORD PTR ?group_member_state_names@@3PAPBDA[eax*4]
  01b83	52		 push	 edx
  01b84	8b 85 98 fc ff
	ff		 mov	 eax, DWORD PTR _task_name$8[ebp]
  01b8a	50		 push	 eax
  01b8b	68 00 00 00 00	 push	 OFFSET ??_C@_04KKJBFIJG@TASK@
  01b90	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  01b95	50		 push	 eax
  01b96	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IPMCBGFA@?0?5?$CFs?3?$CFs?5?$CI?$CFs?$CJ@
  01b9b	8d 8d b0 fc ff
	ff		 lea	 ecx, DWORD PTR _tmp$14[ebp]
  01ba1	51		 push	 ecx
  01ba2	e8 00 00 00 00	 call	 _sprintf
  01ba7	83 c4 14	 add	 esp, 20			; 00000014H

; 563  : 								(
; 564  : 									tmp,
; 565  : 									", %s:%s (%s)",
; 566  : 									get_trans ("TASK"),
; 567  : 									task_name,
; 568  : 									group_member_state_names [get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_STATE)]
; 569  : 								);
; 570  : 
; 571  : 								strcat (buffer2, tmp);

  01baa	8d 85 b0 fc ff
	ff		 lea	 eax, DWORD PTR _tmp$14[ebp]
  01bb0	50		 push	 eax
  01bb1	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR _buffer2$15[ebp]
  01bb7	51		 push	 ecx
  01bb8	e8 00 00 00 00	 call	 _strcat
  01bbd	83 c4 08	 add	 esp, 8
$LN37@display_ex:

; 572  : 							}
; 573  : 						}
; 574  : 					}
; 575  : 
; 576  : 					if (strlen (buffer2))

  01bc0	8d 85 78 fd ff
	ff		 lea	 eax, DWORD PTR _buffer2$15[ebp]
  01bc6	50		 push	 eax
  01bc7	e8 00 00 00 00	 call	 _strlen
  01bcc	83 c4 04	 add	 esp, 4
  01bcf	85 c0		 test	 eax, eax
  01bd1	74 0c		 je	 SHORT $LN38@display_ex

; 577  : 					{
; 578  : 						s2 = buffer2;

  01bd3	8d 85 78 fd ff
	ff		 lea	 eax, DWORD PTR _buffer2$15[ebp]
  01bd9	89 85 08 ff ff
	ff		 mov	 DWORD PTR _s2$17[ebp], eax
$LN38@display_ex:

; 579  : 					}
; 580  : 				}
; 581  : 
; 582  : 				////////////////////////////////////////
; 583  : 				//
; 584  : 				// display text
; 585  : 				//
; 586  : 				////////////////////////////////////////
; 587  : 
; 588  : 				if (s1)

  01bdf	83 bd ac fc ff
	ff 00		 cmp	 DWORD PTR _s1$13[ebp], 0
  01be6	0f 84 4e 01 00
	00		 je	 $LN39@display_ex

; 589  : 				{
; 590  : 					set_ui_font_type (UI_FONT_ARIAL_16);

  01bec	6a 03		 push	 3
  01bee	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 591  : 
; 592  : 					if (get_local_entity_int_value (en, INT_TYPE_SIDE) == ENTITY_SIDE_BLUE_FORCE)

  01bf3	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _en$5[ebp], 0
  01bfa	74 10		 je	 SHORT $LN188@display_ex
  01bfc	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _en$5[ebp]
  01c02	8b 08		 mov	 ecx, DWORD PTR [eax]
  01c04	89 8d f8 fb ff
	ff		 mov	 DWORD PTR tv998[ebp], ecx
  01c0a	eb 20		 jmp	 SHORT $LN189@display_ex
$LN188@display_ex:
  01c0c	68 50 02 00 00	 push	 592			; 00000250H
  01c11	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01c16	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01c1c	52		 push	 edx
  01c1d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01c22	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv998[ebp], 0
$LN189@display_ex:
  01c2c	b8 01 00 00 00	 mov	 eax, 1
  01c31	85 c0		 test	 eax, eax
  01c33	74 0c		 je	 SHORT $LN190@display_ex
  01c35	c7 85 f4 fb ff
	ff bb 00 00 00	 mov	 DWORD PTR tv1005[ebp], 187 ; 000000bbH
  01c3f	eb 20		 jmp	 SHORT $LN191@display_ex
$LN190@display_ex:
  01c41	68 50 02 00 00	 push	 592			; 00000250H
  01c46	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  01c4b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01c51	51		 push	 ecx
  01c52	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01c57	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1005[ebp], 0
$LN191@display_ex:
  01c61	68 bb 00 00 00	 push	 187			; 000000bbH
  01c66	8b 95 8c fc ff
	ff		 mov	 edx, DWORD PTR _en$5[ebp]
  01c6c	52		 push	 edx
  01c6d	69 85 f8 fb ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv998[ebp], 1116
  01c77	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR tv1005[ebp]
  01c7d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  01c84	ff d2		 call	 edx
  01c86	83 f8 01	 cmp	 eax, 1
  01c89	75 0d		 jne	 SHORT $LN40@display_ex

; 593  : 					{
; 594  : 						set_ui_font_colour (ext_col_blue_force);

  01c8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A ; ext_col_blue_force
  01c90	50		 push	 eax
  01c91	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 595  : 					}
; 596  : 					else

  01c96	eb 0b		 jmp	 SHORT $LN41@display_ex
$LN40@display_ex:

; 597  : 					{
; 598  : 						set_ui_font_colour (ext_col_red_force);

  01c98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_red_force@@3UREAL_COLOUR@@A ; ext_col_red_force
  01c9d	50		 push	 eax
  01c9e	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour
$LN41@display_ex:

; 599  : 					}
; 600  : 
; 601  : 					x = (get_screen_width (active_screen) - ui_get_string_length (s1)) * 0.5;

  01ca3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  01ca8	50		 push	 eax
  01ca9	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  01cae	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  01cb2	8b 8d ac fc ff
	ff		 mov	 ecx, DWORD PTR _s1$13[ebp]
  01cb8	51		 push	 ecx
  01cb9	f3 0f 11 85 f8
	fb ff ff	 movss	 DWORD PTR tv1621[ebp], xmm0
  01cc1	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  01cc6	d9 9d f4 fb ff
	ff		 fstp	 DWORD PTR tv1589[ebp]
  01ccc	f3 0f 10 85 f8
	fb ff ff	 movss	 xmm0, DWORD PTR tv1621[ebp]
  01cd4	f3 0f 5c 85 f4
	fb ff ff	 subss	 xmm0, DWORD PTR tv1589[ebp]
  01cdc	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  01ce0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  01ce8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01cec	f3 0f 11 85 94
	fc ff ff	 movss	 DWORD PTR _x$7[ebp], xmm0

; 602  : 
; 603  : 					y = full_screen_y_max * (420.0 / 480.0);

  01cf4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_max@@3MA
  01cfc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fec000000000000
  01d04	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01d08	f3 0f 11 85 90
	fc ff ff	 movss	 DWORD PTR _y$6[ebp], xmm0

; 604  : 
; 605  : 					ui_display_text (s1, x, y);

  01d10	51		 push	 ecx
  01d11	f3 0f 10 85 90
	fc ff ff	 movss	 xmm0, DWORD PTR _y$6[ebp]
  01d19	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01d1e	51		 push	 ecx
  01d1f	f3 0f 10 85 94
	fc ff ff	 movss	 xmm0, DWORD PTR _x$7[ebp]
  01d27	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01d2c	8b 85 ac fc ff
	ff		 mov	 eax, DWORD PTR _s1$13[ebp]
  01d32	50		 push	 eax
  01d33	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  01d38	dd d8		 fstp	 ST(0)
$LN39@display_ex:

; 606  : 				}
; 607  : 
; 608  : 				if (s2)

  01d3a	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR _s2$17[ebp], 0
  01d41	0f 84 a9 00 00
	00		 je	 $LN42@display_ex

; 609  : 				{
; 610  : 					set_ui_font_type (UI_FONT_ARIAL_16);

  01d47	6a 03		 push	 3
  01d49	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 611  : 
; 612  : 					set_ui_font_colour (ext_col_message);

  01d4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_message@@3UREAL_COLOUR@@A ; ext_col_message
  01d53	50		 push	 eax
  01d54	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 613  : 
; 614  : 					x = (get_screen_width (active_screen) - ui_get_string_length (s2)) * 0.5;

  01d59	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  01d5e	50		 push	 eax
  01d5f	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  01d64	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  01d68	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _s2$17[ebp]
  01d6e	51		 push	 ecx
  01d6f	f3 0f 11 85 f8
	fb ff ff	 movss	 DWORD PTR tv1623[ebp], xmm0
  01d77	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  01d7c	d9 9d f4 fb ff
	ff		 fstp	 DWORD PTR tv1602[ebp]
  01d82	f3 0f 10 85 f8
	fb ff ff	 movss	 xmm0, DWORD PTR tv1623[ebp]
  01d8a	f3 0f 5c 85 f4
	fb ff ff	 subss	 xmm0, DWORD PTR tv1602[ebp]
  01d92	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  01d96	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  01d9e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01da2	f3 0f 11 85 94
	fc ff ff	 movss	 DWORD PTR _x$7[ebp], xmm0

; 615  : 
; 616  : 					y = full_screen_y_max * (440.0 / 480.0);

  01daa	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_max@@3MA
  01db2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fed555555555555
  01dba	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01dbe	f3 0f 11 85 90
	fc ff ff	 movss	 DWORD PTR _y$6[ebp], xmm0

; 617  : 
; 618  : 					ui_display_text (s2, x, y);

  01dc6	51		 push	 ecx
  01dc7	f3 0f 10 85 90
	fc ff ff	 movss	 xmm0, DWORD PTR _y$6[ebp]
  01dcf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01dd4	51		 push	 ecx
  01dd5	f3 0f 10 85 94
	fc ff ff	 movss	 xmm0, DWORD PTR _x$7[ebp]
  01ddd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01de2	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _s2$17[ebp]
  01de8	50		 push	 eax
  01de9	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  01dee	dd d8		 fstp	 ST(0)
$LN42@display_ex:

; 619  : 				}
; 620  : 
; 621  : 				//
; 622  : 				// LINE 3 - view menu search string
; 623  : 				//
; 624  : 
; 625  : 				set_ui_font_type (UI_FONT_ARIAL_16);

  01df0	6a 03		 push	 3
  01df2	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 626  : 
; 627  : 				x = get_screen_width (active_screen) * 0.5;

  01df7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  01dfc	50		 push	 eax
  01dfd	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  01e02	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  01e06	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  01e0e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01e12	f3 0f 11 85 94
	fc ff ff	 movss	 DWORD PTR _x$7[ebp], xmm0

; 628  : 
; 629  : 				y = full_screen_y_max * (460.0 / 480.0);

  01e1a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_max@@3MA
  01e22	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feeaaaaaaaaaaab
  01e2a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01e2e	f3 0f 11 85 90
	fc ff ff	 movss	 DWORD PTR _y$6[ebp], xmm0

; 630  : 
; 631  : 				display_view_menu_search_string (x, y);

  01e36	51		 push	 ecx
  01e37	f3 0f 10 85 90
	fc ff ff	 movss	 xmm0, DWORD PTR _y$6[ebp]
  01e3f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01e44	51		 push	 ecx
  01e45	f3 0f 10 85 94
	fc ff ff	 movss	 xmm0, DWORD PTR _x$7[ebp]
  01e4d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01e52	e8 00 00 00 00	 call	 ?display_view_menu_search_string@@YGXMM@Z ; display_view_menu_search_string
$LN2@display_ex:

; 632  : 
; 633  : 				break;
; 634  : 			}
; 635  : 		}
; 636  : 
; 637  : 		end_3d_scene ();

  01e57	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN6@display_ex:

; 638  : 	}
; 639  : }

  01e5c	5f		 pop	 edi
  01e5d	5e		 pop	 esi
  01e5e	5b		 pop	 ebx
  01e5f	8b e5		 mov	 esp, ebp
  01e61	5d		 pop	 ebp
  01e62	c3		 ret	 0
  01e63	90		 npad	 1
$LN193@display_ex:
  01e64	00 00 00 00	 DD	 $LN7@display_ex
  01e68	00 00 00 00	 DD	 $LN8@display_ex
  01e6c	00 00 00 00	 DD	 $LN23@display_ex
$LN192@display_ex:
  01e70	00		 DB	 0
  01e71	02		 DB	 2
  01e72	02		 DB	 2
  01e73	00		 DB	 0
  01e74	01		 DB	 1
  01e75	00		 DB	 0
  01e76	02		 DB	 2
  01e77	00		 DB	 0
  01e78	00		 DB	 0
  01e79	00		 DB	 0
  01e7a	00		 DB	 0
?display_external_view_text@@YGXXZ ENDP			; display_external_view_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c
;	COMDAT ?draw_demo_logo@@YGXXZ
_TEXT	SEGMENT
_y_max$ = -280						; size = 4
_x_max$ = -276						; size = 4
_y_min$ = -272						; size = 4
_x_min$ = -268						; size = 4
_specular$ = -264					; size = 4
_colour$ = -260						; size = 4
_quad$ = -256						; size = 256
?draw_demo_logo@@YGXXZ PROC				; draw_demo_logo, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 133  : 	vertex
; 134  : 		quad[4];
; 135  : 
; 136  : 	real_colour
; 137  : 		colour,
; 138  : 		specular;
; 139  : 
; 140  : 	float
; 141  : 		x_min,
; 142  : 		y_min,
; 143  : 		x_max,
; 144  : 		y_max;
; 145  : 
; 146  : 	if (get_global_current_language () != LANGUAGE_RUSSIAN)

  0000c	83 3d 04 00 00
	00 05		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 5
  00013	0f 84 db 03 00
	00		 je	 $LN3@draw_demo_

; 147  : 	{
; 148  : 		set_3d_active_environment (main_3d_env);

  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 149  : 	
; 150  : 		if (begin_3d_scene ())

  00024	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  00029	85 c0		 test	 eax, eax
  0002b	0f 84 c3 03 00
	00		 je	 $LN3@draw_demo_

; 151  : 		{
; 152  : 			colour.red		= 255;

  00031	c6 85 fe fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp+2], 255 ; 000000ffH

; 153  : 			colour.green	= 255;

  00038	c6 85 fd fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp+1], 255 ; 000000ffH

; 154  : 			colour.blue		= 255;

  0003f	c6 85 fc fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp], 255 ; 000000ffH

; 155  : 			colour.alpha	= 255;

  00046	c6 85 ff fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp+3], 255 ; 000000ffH

; 156  : 	
; 157  : 			specular.red	= 0;

  0004d	c6 85 fa fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+2], 0

; 158  : 			specular.green	= 0;

  00054	c6 85 f9 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+1], 0

; 159  : 			specular.blue	= 0;

  0005b	c6 85 f8 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp], 0

; 160  : 			specular.alpha	= 255;

  00062	c6 85 fb fe ff
	ff ff		 mov	 BYTE PTR _specular$[ebp+3], 255 ; 000000ffH

; 161  : 	
; 162  : 			set_d3d_transparency_on ();

  00069	e8 00 00 00 00	 call	 ?set_d3d_transparency_on@@YGXXZ ; set_d3d_transparency_on

; 163  : 	
; 164  : 			set_d3d_zbuffer_comparison (FALSE);

  0006e	6a 00		 push	 0
  00070	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 165  : 	
; 166  : 			set_d3d_culling (FALSE);

  00075	6a 00		 push	 0
  00077	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 167  : 	
; 168  : 			set_d3d_texture_wrapping (0, FALSE);

  0007c	6a 00		 push	 0
  0007e	6a 00		 push	 0
  00080	e8 00 00 00 00	 call	 ?set_d3d_texture_wrapping@@YGXHH@Z ; set_d3d_texture_wrapping

; 169  : 	
; 170  : 			if ( application_video_width == 640 )

  00085	81 3d 00 00 00
	00 80 02 00 00	 cmp	 DWORD PTR ?application_video_width@@3HA, 640 ; application_video_width, 00000280H
  0008f	75 17		 jne	 SHORT $LN4@draw_demo_

; 171  : 			{
; 172  : 	
; 173  : 				set_d3d_texture_mag_filtering ( FALSE );

  00091	6a 00		 push	 0
  00093	e8 00 00 00 00	 call	 ?set_d3d_texture_mag_filtering@@YGXH@Z ; set_d3d_texture_mag_filtering

; 174  : 				set_d3d_texture_min_filtering ( FALSE );

  00098	6a 00		 push	 0
  0009a	e8 00 00 00 00	 call	 ?set_d3d_texture_min_filtering@@YGXH@Z ; set_d3d_texture_min_filtering

; 175  : 				set_d3d_texture_mip_filtering ( FALSE );

  0009f	6a 00		 push	 0
  000a1	e8 00 00 00 00	 call	 ?set_d3d_texture_mip_filtering@@YGXH@Z ; set_d3d_texture_mip_filtering

; 176  : 			}
; 177  : 			else

  000a6	eb 15		 jmp	 SHORT $LN5@draw_demo_
$LN4@draw_demo_:

; 178  : 			{
; 179  : 	
; 180  : 				set_d3d_texture_mag_filtering ( TRUE );

  000a8	6a 01		 push	 1
  000aa	e8 00 00 00 00	 call	 ?set_d3d_texture_mag_filtering@@YGXH@Z ; set_d3d_texture_mag_filtering

; 181  : 				set_d3d_texture_min_filtering ( TRUE );

  000af	6a 01		 push	 1
  000b1	e8 00 00 00 00	 call	 ?set_d3d_texture_min_filtering@@YGXH@Z ; set_d3d_texture_min_filtering

; 182  : 				set_d3d_texture_mip_filtering ( FALSE );

  000b6	6a 00		 push	 0
  000b8	e8 00 00 00 00	 call	 ?set_d3d_texture_mip_filtering@@YGXH@Z ; set_d3d_texture_mip_filtering
$LN5@draw_demo_:

; 183  : 			}
; 184  : 	
; 185  : 			set_d3d_flat_shaded_textured_renderstate (get_system_texture_ptr (TEXTURE_INDEX_CH_LOGO));

  000bd	68 6d 06 00 00	 push	 1645			; 0000066dH
  000c2	e8 00 00 00 00	 call	 ?get_system_texture_ptr@@YGPAUSCREEN@@H@Z ; get_system_texture_ptr
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate

; 186  : 	
; 187  : 			x_min = full_screen_x_min;

  000cd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_min@@3MA
  000d5	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 188  : 			y_min = full_screen_y_min;

  000dd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  000e5	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _y_min$[ebp], xmm0

; 189  : 			x_max = full_screen_width * (256.0 / 640.0);

  000ed	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width@@3MA
  000f5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd999999999999a
  000fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00101	f3 0f 11 85 ec
	fe ff ff	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 190  : 			y_max = x_max;

  00109	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00111	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _y_max$[ebp], xmm0

; 191  : 	
; 192  : 			quad[0].i 				= x_min;

  00119	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0011e	6b c8 00	 imul	 ecx, eax, 0
  00121	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00129	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 193  : 			quad[0].j  				= y_min;

  00132	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00137	6b c8 00	 imul	 ecx, eax, 0
  0013a	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  00142	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 194  : 			quad[0].z  				= 0.5;

  0014b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00150	6b c8 00	 imul	 ecx, eax, 0
  00153	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0015b	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 195  : 			quad[0].q  				= 0.5;

  00164	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00169	6b c8 00	 imul	 ecx, eax, 0
  0016c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00174	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 196  : 			quad[0].u  				= 0.0;

  0017d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00182	6b c8 00	 imul	 ecx, eax, 0
  00185	0f 57 c0	 xorps	 xmm0, xmm0
  00188	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 197  : 			quad[0].v				= 0.0;

  00191	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00196	6b c8 00	 imul	 ecx, eax, 0
  00199	0f 57 c0	 xorps	 xmm0, xmm0
  0019c	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 198  : 	
; 199  : 			quad[1].i  				= x_max;

  001a5	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001aa	c1 e0 00	 shl	 eax, 0
  001ad	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  001b5	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 200  : 			quad[1].j  				= y_min;

  001be	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001c3	c1 e0 00	 shl	 eax, 0
  001c6	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  001ce	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 201  : 			quad[1].z  				= 0.5;

  001d7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001dc	c1 e0 00	 shl	 eax, 0
  001df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  001e7	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 202  : 			quad[1].q  				= 0.5;

  001f0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001f5	c1 e0 00	 shl	 eax, 0
  001f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00200	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 203  : 			quad[1].u  				= 1.0;

  00209	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0020e	c1 e0 00	 shl	 eax, 0
  00211	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00219	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 204  : 			quad[1].v  				= 0.0;

  00222	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00227	c1 e0 00	 shl	 eax, 0
  0022a	0f 57 c0	 xorps	 xmm0, xmm0
  0022d	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 205  : 	
; 206  : 			quad[2].i				= x_max;

  00236	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0023b	d1 e0		 shl	 eax, 1
  0023d	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00245	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 207  : 			quad[2].j  				= y_max;

  0024e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00253	d1 e0		 shl	 eax, 1
  00255	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  0025d	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 208  : 			quad[2].z  				= 0.5;

  00266	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0026b	d1 e0		 shl	 eax, 1
  0026d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00275	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 209  : 			quad[2].q  				= 0.5;

  0027e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00283	d1 e0		 shl	 eax, 1
  00285	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0028d	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 210  : 			quad[2].u  				= 1.0;

  00296	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0029b	d1 e0		 shl	 eax, 1
  0029d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002a5	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 211  : 			quad[2].v  				= 1.0;

  002ae	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002b3	d1 e0		 shl	 eax, 1
  002b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002bd	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 212  : 	
; 213  : 			quad[3].i  				= x_min;

  002c6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002cb	6b c8 03	 imul	 ecx, eax, 3
  002ce	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  002d6	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 214  : 			quad[3].j  				= y_max;

  002df	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002e4	6b c8 03	 imul	 ecx, eax, 3
  002e7	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  002ef	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 215  : 			quad[3].z  				= 0.5;

  002f8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002fd	6b c8 03	 imul	 ecx, eax, 3
  00300	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00308	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 216  : 			quad[3].q  				= 0.5;

  00311	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00316	6b c8 03	 imul	 ecx, eax, 3
  00319	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00321	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 217  : 			quad[3].u				= 0.0;

  0032a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0032f	6b c8 03	 imul	 ecx, eax, 3
  00332	0f 57 c0	 xorps	 xmm0, xmm0
  00335	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 218  : 			quad[3].v				= 1.0;

  0033e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00343	6b c8 03	 imul	 ecx, eax, 3
  00346	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0034e	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 219  : 	
; 220  : 			quad[0].next_vertex	= &quad[1];

  00357	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0035c	c1 e0 00	 shl	 eax, 0
  0035f	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00366	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0036b	6b c2 00	 imul	 eax, edx, 0
  0036e	89 8c 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], ecx

; 221  : 			quad[1].next_vertex	= &quad[2];

  00375	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0037a	d1 e0		 shl	 eax, 1
  0037c	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00383	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00388	c1 e2 00	 shl	 edx, 0
  0038b	89 8c 15 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+edx+40], ecx

; 222  : 			quad[2].next_vertex	= &quad[3];

  00392	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00397	6b c8 03	 imul	 ecx, eax, 3
  0039a	8d 94 0d 00 ff
	ff ff		 lea	 edx, DWORD PTR _quad$[ebp+ecx]
  003a1	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003a6	d1 e0		 shl	 eax, 1
  003a8	89 94 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], edx

; 223  : 			quad[3].next_vertex	= NULL;

  003af	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003b4	6b c8 03	 imul	 ecx, eax, 3
  003b7	c7 84 0d 28 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$[ebp+ecx+40], 0

; 224  : 	
; 225  : 			draw_wbuffered_flat_shaded_textured_polygon (quad, colour, specular);

  003c2	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  003c8	50		 push	 eax
  003c9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  003cf	51		 push	 ecx
  003d0	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _quad$[ebp]
  003d6	52		 push	 edx
  003d7	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 226  : 	
; 227  : 			set_d3d_transparency_off ();

  003dc	e8 00 00 00 00	 call	 ?set_d3d_transparency_off@@YGXXZ ; set_d3d_transparency_off

; 228  : 	
; 229  : 			set_d3d_zbuffer_comparison (TRUE);

  003e1	6a 01		 push	 1
  003e3	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 230  : 	
; 231  : 			set_d3d_culling (TRUE);

  003e8	6a 01		 push	 1
  003ea	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 232  : 	
; 233  : 			end_3d_scene ();

  003ef	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN3@draw_demo_:

; 234  : 		}
; 235  : 	}
; 236  : }

  003f4	5f		 pop	 edi
  003f5	5e		 pop	 esi
  003f6	5b		 pop	 ebx
  003f7	8b e5		 mov	 esp, ebp
  003f9	5d		 pop	 ebp
  003fa	c3		 ret	 0
?draw_demo_logo@@YGXXZ ENDP				; draw_demo_logo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c
;	COMDAT ?select_external_view@@YGXXZ
_TEXT	SEGMENT
tv88 = -76						; size = 4
tv94 = -72						; size = 4
tv80 = -72						; size = 4
_mode$ = -4						; size = 4
?select_external_view@@YGXXZ PROC			; select_external_view, COMDAT

; 890  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 891  : 	camera_modes
; 892  : 		mode;
; 893  : 
; 894  : 	ASSERT (get_camera_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00010	75 18		 jne	 SHORT $LN4@select_ext
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??select_external_view@@YGXXZ@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@select_ext:

; 895  : 
; 896  : 	if (get_view_mode () != VIEW_MODE_EXTERNAL)

  0002a	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  00031	74 19		 je	 SHORT $LN5@select_ext

; 897  : 	{
; 898  : 		notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_CHASE);

  00033	6a 00		 push	 0
  00035	6a 00		 push	 0
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0003c	50		 push	 eax
  0003d	6a 2f		 push	 47			; 0000002fH
  0003f	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 899  : 	}
; 900  : 	else

  00047	e9 c2 00 00 00	 jmp	 $LN1@select_ext
$LN5@select_ext:

; 901  : 	{
; 902  : 		mode = (camera_modes) get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE);

  0004c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00053	74 0c		 je	 SHORT $LN10@select_ext
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 4d b8	 mov	 DWORD PTR tv80[ebp], ecx
  0005f	eb 21		 jmp	 SHORT $LN11@select_ext
$LN10@select_ext:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_external_view@@YGXXZ@4JA
  00067	83 c2 0c	 add	 edx, 12			; 0000000cH
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN11@select_ext:
  00082	b9 01 00 00 00	 mov	 ecx, 1
  00087	85 c9		 test	 ecx, ecx
  00089	74 09		 je	 SHORT $LN12@select_ext
  0008b	c7 45 b4 10 00
	00 00		 mov	 DWORD PTR tv88[ebp], 16	; 00000010H
  00092	eb 21		 jmp	 SHORT $LN13@select_ext
$LN12@select_ext:
  00094	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_external_view@@YGXXZ@4JA
  0009a	83 c2 0c	 add	 edx, 12			; 0000000cH
  0009d	52		 push	 edx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ae	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN13@select_ext:
  000b5	6a 10		 push	 16			; 00000010H
  000b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  000bd	51		 push	 ecx
  000be	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 1116
  000c5	8b 45 b4	 mov	 eax, DWORD PTR tv88[ebp]
  000c8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000cf	ff d1		 call	 ecx
  000d1	89 45 fc	 mov	 DWORD PTR _mode$[ebp], eax

; 903  : 
; 904  : 		switch (mode)

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _mode$[ebp]
  000d7	89 45 b8	 mov	 DWORD PTR tv94[ebp], eax
  000da	8b 4d b8	 mov	 ecx, DWORD PTR tv94[ebp]
  000dd	83 e9 01	 sub	 ecx, 1
  000e0	89 4d b8	 mov	 DWORD PTR tv94[ebp], ecx
  000e3	83 7d b8 0f	 cmp	 DWORD PTR tv94[ebp], 15	; 0000000fH
  000e7	77 25		 ja	 SHORT $LN1@select_ext
  000e9	8b 55 b8	 mov	 edx, DWORD PTR tv94[ebp]
  000ec	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN14@select_ext[edx]
  000f3	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN15@select_ext[eax*4]
$LN7@select_ext:

; 905  : 		{
; 906  : 			//case CAMERA_MODE_CHASE:
; 907  : 			case CAMERA_MODE_END_OF_MISSION:
; 908  : 			case CAMERA_MODE_DROP:
; 909  : 			case CAMERA_MODE_STATIC:
; 910  : //			case CAMERA_MODE_SATELLITE:		// Jabberwock 031009 Satellite view
; 911  : 			case CAMERA_MODE_EJECT:
; 912  : 			case CAMERA_MODE_FREE:
; 913  : 			//case CAMERA_MODE_FLY_BY:
; 914  : 			//case CAMERA_MODE_CINEMATIC:
; 915  : 			case CAMERA_MODE_BUILDING:
; 916  : 			case CAMERA_MODE_WEAPON:
; 917  : 			case CAMERA_MODE_WEAPON_EXPLOSION:
; 918  : 			case CAMERA_MODE_DEBRIEFING:
; 919  : 			case CAMERA_MODE_RECOGNITION_GUIDE_TOP_VIEW:
; 920  : 			case CAMERA_MODE_RECOGNITION_GUIDE_SIDE_VIEW:
; 921  : 			case CAMERA_MODE_RECOGNITION_GUIDE_FRONT_VIEW:
; 922  : 			case CAMERA_MODE_RECOGNITION_GUIDE_3D_VIEW:
; 923  : 			{
; 924  : 				notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_CHASE);

  000fa	6a 00		 push	 0
  000fc	6a 00		 push	 0
  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00103	50		 push	 eax
  00104	6a 2f		 push	 47			; 0000002fH
  00106	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0010b	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@select_ext:

; 925  : 
; 926  : 				break;
; 927  : 			}
; 928  : 			case CAMERA_MODE_CHASE:
; 929  : //				notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_FREE);
; 930  : 
; 931  : 				break;
; 932  : 		}
; 933  : 	}
; 934  : }

  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c3		 ret	 0
  00115	0f 1f 00	 npad	 3
$LN15@select_ext:
  00118	00 00 00 00	 DD	 $LN7@select_ext
  0011c	00 00 00 00	 DD	 $LN1@select_ext
$LN14@select_ext:
  00120	00		 DB	 0
  00121	00		 DB	 0
  00122	00		 DB	 0
  00123	01		 DB	 1
  00124	00		 DB	 0
  00125	01		 DB	 1
  00126	01		 DB	 1
  00127	00		 DB	 0
  00128	00		 DB	 0
  00129	00		 DB	 0
  0012a	00		 DB	 0
  0012b	00		 DB	 0
  0012c	00		 DB	 0
  0012d	00		 DB	 0
  0012e	00		 DB	 0
  0012f	00		 DB	 0
?select_external_view@@YGXXZ ENDP			; select_external_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c
;	COMDAT ?draw_external_3d_view@@YGXXZ
_TEXT	SEGMENT
tv186 = -400						; size = 4
tv416 = -396						; size = 4
tv397 = -396						; size = 4
tv373 = -396						; size = 4
tv343 = -396						; size = 4
tv257 = -396						; size = 4
tv239 = -396						; size = 4
tv203 = -396						; size = 4
tv180 = -396						; size = 4
tv145 = -396						; size = 4
tv84 = -396						; size = 4
tv409 = -392						; size = 4
tv390 = -392						; size = 4
tv366 = -392						; size = 4
tv359 = -392						; size = 4
tv336 = -392						; size = 4
tv258 = -392						; size = 4
tv232 = -392						; size = 4
tv215 = -392						; size = 4
tv195 = -392						; size = 4
tv173 = -392						; size = 4
tv138 = -392						; size = 4
tv128 = -392						; size = 4
tv76 = -392						; size = 4
_alpha$1 = -324						; size = 4
_specular$2 = -320					; size = 4
_colour$3 = -316					; size = 4
_quad$4 = -312						; size = 256
_vp$5 = -56						; size = 48
_target$6 = -8						; size = 4
_source$7 = -4						; size = 4
?draw_external_3d_view@@YGXXZ PROC			; draw_external_3d_view, COMDAT

; 646  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 01 00
	00		 sub	 esp, 400		; 00000190H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 647  :    ASSERT (get_external_view_entity ());

  0000c	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  00011	85 c0		 test	 eax, eax
  00013	75 18		 jne	 SHORT $LN4@draw_exter
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@ELGGIDGJ@get_external_view_entity?5?$CI?$CJ@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@draw_exter:

; 648  : 
; 649  : 	////////////////////////////////////////
; 650  : 	//
; 651  : 	// draw main 3D scene
; 652  : 	//
; 653  : 	////////////////////////////////////////
; 654  : 
; 655  :    //
; 656  :    // get camera position and attitude
; 657  :    //
; 658  : 
; 659  :    get_local_entity_vec3d (get_camera_entity (), VEC3D_TYPE_POSITION, &main_vp.position);

  0002d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00034	74 0f		 je	 SHORT $LN27@draw_exter
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv76[ebp], ecx
  00043	eb 24		 jmp	 SHORT $LN28@draw_exter
$LN27@draw_exter:
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  0004b	83 c2 0d	 add	 edx, 13			; 0000000dH
  0004e	52		 push	 edx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005f	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN28@draw_exter:
  00069	b9 01 00 00 00	 mov	 ecx, 1
  0006e	85 c9		 test	 ecx, ecx
  00070	74 0c		 je	 SHORT $LN29@draw_exter
  00072	c7 85 74 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv84[ebp], 8
  0007c	eb 24		 jmp	 SHORT $LN30@draw_exter
$LN29@draw_exter:
  0007e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  00084	83 c2 0d	 add	 edx, 13			; 0000000dH
  00087	52		 push	 edx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00098	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN30@draw_exter:
  000a2	68 00 00 00 00	 push	 OFFSET ?main_vp@@3UVIEWPOINT@@A ; main_vp
  000a7	6a 08		 push	 8
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  000af	51		 push	 ecx
  000b0	6b 95 78 fe ff
	ff 60		 imul	 edx, DWORD PTR tv76[ebp], 96
  000b7	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR tv84[ebp]
  000bd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[edx+eax*4]
  000c4	ff d1		 call	 ecx

; 660  : 
; 661  :    get_local_entity_attitude_matrix (get_camera_entity (), main_vp.attitude);

  000c6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  000cd	74 0f		 je	 SHORT $LN31@draw_exter
  000cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  000d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d6	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv128[ebp], ecx
  000dc	eb 24		 jmp	 SHORT $LN32@draw_exter
$LN31@draw_exter:
  000de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  000e4	83 c2 0f	 add	 edx, 15			; 0000000fH
  000e7	52		 push	 edx
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f8	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv128[ebp], 0
$LN32@draw_exter:
  00102	68 0c 00 00 00	 push	 OFFSET ?main_vp@@3UVIEWPOINT@@A+12
  00107	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0010d	51		 push	 ecx
  0010e	8b 95 78 fe ff
	ff		 mov	 edx, DWORD PTR tv128[ebp]
  00114	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[edx*4]
  0011b	ff d0		 call	 eax

; 662  : 
; 663  :    //
; 664  :    // draw 3D scene
; 665  :    //
; 666  : 
; 667  : 	// Jabberwock 031009 - Tint for satellite view
; 668  : 	
; 669  : 	if (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE) == CAMERA_MODE_SATELLITE)

  0011d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00124	74 0f		 je	 SHORT $LN33@draw_exter
  00126	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0012b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012d	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
  00133	eb 20		 jmp	 SHORT $LN34@draw_exter
$LN33@draw_exter:
  00135	68 9d 02 00 00	 push	 669			; 0000029dH
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00145	52		 push	 edx
  00146	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014b	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], 0
$LN34@draw_exter:
  00155	b8 01 00 00 00	 mov	 eax, 1
  0015a	85 c0		 test	 eax, eax
  0015c	74 0c		 je	 SHORT $LN35@draw_exter
  0015e	c7 85 74 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR tv145[ebp], 16 ; 00000010H
  00168	eb 20		 jmp	 SHORT $LN36@draw_exter
$LN35@draw_exter:
  0016a	68 9d 02 00 00	 push	 669			; 0000029dH
  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00174	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0017a	51		 push	 ecx
  0017b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00180	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv145[ebp], 0
$LN36@draw_exter:
  0018a	6a 10		 push	 16			; 00000010H
  0018c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00192	52		 push	 edx
  00193	69 85 78 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv138[ebp], 1116
  0019d	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv145[ebp]
  001a3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001aa	ff d2		 call	 edx
  001ac	83 f8 04	 cmp	 eax, 4
  001af	75 0d		 jne	 SHORT $LN5@draw_exter

; 670  : 	{
; 671  : 		set_main_3d_full_screen_params (DISPLAY_3D_TINT_BLUE_HAZE, DISPLAY_3D_LIGHT_LEVEL_LOW, DISPLAY_3D_NOISE_LEVEL_MEDIUM);

  001b1	6a 02		 push	 2
  001b3	6a 00		 push	 0
  001b5	6a 0a		 push	 10			; 0000000aH
  001b7	e8 00 00 00 00	 call	 ?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z ; set_main_3d_full_screen_params

; 672  : 	}
; 673  : 	else

  001bc	eb 0b		 jmp	 SHORT $LN6@draw_exter
$LN5@draw_exter:

; 674  : 	{
; 675  : 			set_main_3d_full_screen_params (DISPLAY_3D_TINT_CLEAR, DISPLAY_3D_LIGHT_LEVEL_HIGH, DISPLAY_3D_NOISE_LEVEL_NONE);

  001be	6a 00		 push	 0
  001c0	6a 02		 push	 2
  001c2	6a 00		 push	 0
  001c4	e8 00 00 00 00	 call	 ?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z ; set_main_3d_full_screen_params
$LN6@draw_exter:

; 676  : 	}
; 677  : 
; 678  : 	draw_main_3d_scene (&main_vp);

  001c9	68 00 00 00 00	 push	 OFFSET ?main_vp@@3UVIEWPOINT@@A ; main_vp
  001ce	e8 00 00 00 00	 call	 ?draw_main_3d_scene@@YGXPAUVIEWPOINT@@@Z ; draw_main_3d_scene

; 679  : 
; 680  : 	////////////////////////////////////////
; 681  : 	//
; 682  : 	// draw inset target 3D scene
; 683  : 	//
; 684  : 	////////////////////////////////////////
; 685  : 
; 686  : 	if (external_view_inset_target)

  001d3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?external_view_inset_target@@3HA, 0 ; external_view_inset_target
  001da	0f 84 0c 02 00
	00		 je	 $LN2@draw_exter

; 687  : 	{
; 688  : 		entity
; 689  : 			*source,
; 690  : 			*target;
; 691  : 
; 692  : 		viewpoint
; 693  : 			vp;
; 694  : 
; 695  : 		source = get_external_view_entity ();

  001e0	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  001e5	89 45 fc	 mov	 DWORD PTR _source$7[ebp], eax

; 696  : 
; 697  : 		ASSERT (source);

  001e8	83 7d fc 00	 cmp	 DWORD PTR _source$7[ebp], 0
  001ec	75 18		 jne	 SHORT $LN8@draw_exter
  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  001f3	83 c0 33	 add	 eax, 51			; 00000033H
  001f6	50		 push	 eax
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fc	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@draw_exter:

; 698  : 
; 699  : 		// Jabberwock 031016 Inset view
; 700  : 		target = get_inset ();

  00206	e8 00 00 00 00	 call	 ?get_inset@@YGPAUENTITY@@XZ ; get_inset
  0020b	89 45 f8	 mov	 DWORD PTR _target$6[ebp], eax

; 701  : 
; 702  : 		if (target)

  0020e	83 7d f8 00	 cmp	 DWORD PTR _target$6[ebp], 0
  00212	0f 84 d4 01 00
	00		 je	 $LN2@draw_exter

; 703  : 		{
; 704  : 			switch (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE))

  00218	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  0021f	74 0f		 je	 SHORT $LN37@draw_exter
  00221	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00226	8b 08		 mov	 ecx, DWORD PTR [eax]
  00228	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv173[ebp], ecx
  0022e	eb 20		 jmp	 SHORT $LN38@draw_exter
$LN37@draw_exter:
  00230	68 c0 02 00 00	 push	 704			; 000002c0H
  00235	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00240	52		 push	 edx
  00241	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00246	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv173[ebp], 0
$LN38@draw_exter:
  00250	b8 01 00 00 00	 mov	 eax, 1
  00255	85 c0		 test	 eax, eax
  00257	74 0c		 je	 SHORT $LN39@draw_exter
  00259	c7 85 74 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR tv180[ebp], 16 ; 00000010H
  00263	eb 20		 jmp	 SHORT $LN40@draw_exter
$LN39@draw_exter:
  00265	68 c0 02 00 00	 push	 704			; 000002c0H
  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00275	51		 push	 ecx
  00276	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027b	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN40@draw_exter:
  00285	6a 10		 push	 16			; 00000010H
  00287	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0028d	52		 push	 edx
  0028e	69 85 78 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv173[ebp], 1116
  00298	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv180[ebp]
  0029e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002a5	ff d2		 call	 edx
  002a7	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv186[ebp], eax
  002ad	83 bd 70 fe ff
	ff 07		 cmp	 DWORD PTR tv186[ebp], 7
  002b4	0f 87 32 01 00
	00		 ja	 $LN2@draw_exter
  002ba	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR tv186[ebp]
  002c0	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN73@draw_exter[eax]
  002c7	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN74@draw_exter[ecx*4]
$LN10@draw_exter:

; 705  : 			{
; 706  : 				case CAMERA_MODE_CHASE:
; 707  : 				case CAMERA_MODE_DROP:
; 708  : 				case CAMERA_MODE_STATIC:
; 709  : 				case CAMERA_MODE_SATELLITE:		// Jabberwock 031009 Satellite view
; 710  : 				case CAMERA_MODE_FLY_BY:
; 711  : 				case CAMERA_MODE_CINEMATIC:
; 712  : 				{
; 713  : 					store_reverse_tactical_camera_values ();

  002ce	e8 00 00 00 00	 call	 ?store_reverse_tactical_camera_values@@YGXXZ ; store_reverse_tactical_camera_values

; 714  : 
; 715  : 					set_reverse_tactical_camera_values (source, target);

  002d3	8b 45 f8	 mov	 eax, DWORD PTR _target$6[ebp]
  002d6	50		 push	 eax
  002d7	8b 4d fc	 mov	 ecx, DWORD PTR _source$7[ebp]
  002da	51		 push	 ecx
  002db	e8 00 00 00 00	 call	 ?set_reverse_tactical_camera_values@@YGXPAUENTITY@@0@Z ; set_reverse_tactical_camera_values

; 716  : 
; 717  : 		   		get_local_entity_vec3d (get_camera_entity (), VEC3D_TYPE_POSITION, &vp.position);

  002e0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  002e7	74 0f		 je	 SHORT $LN41@draw_exter
  002e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  002ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f0	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv195[ebp], ecx
  002f6	eb 24		 jmp	 SHORT $LN42@draw_exter
$LN41@draw_exter:
  002f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  002fe	83 c2 47	 add	 edx, 71			; 00000047H
  00301	52		 push	 edx
  00302	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00307	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0030c	50		 push	 eax
  0030d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00312	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN42@draw_exter:
  0031c	b9 01 00 00 00	 mov	 ecx, 1
  00321	85 c9		 test	 ecx, ecx
  00323	74 0c		 je	 SHORT $LN43@draw_exter
  00325	c7 85 74 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv203[ebp], 8
  0032f	eb 24		 jmp	 SHORT $LN44@draw_exter
$LN43@draw_exter:
  00331	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  00337	83 c2 47	 add	 edx, 71			; 00000047H
  0033a	52		 push	 edx
  0033b	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00340	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00345	50		 push	 eax
  00346	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034b	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv203[ebp], 0
$LN44@draw_exter:
  00355	8d 4d c8	 lea	 ecx, DWORD PTR _vp$5[ebp]
  00358	51		 push	 ecx
  00359	6a 08		 push	 8
  0035b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00361	52		 push	 edx
  00362	6b 85 78 fe ff
	ff 60		 imul	 eax, DWORD PTR tv195[ebp], 96
  00369	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv203[ebp]
  0036f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00376	ff d2		 call	 edx

; 718  : 
; 719  :    				get_local_entity_attitude_matrix (get_camera_entity (), vp.attitude);

  00378	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  0037f	74 0f		 je	 SHORT $LN45@draw_exter
  00381	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00386	8b 08		 mov	 ecx, DWORD PTR [eax]
  00388	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv215[ebp], ecx
  0038e	eb 24		 jmp	 SHORT $LN46@draw_exter
$LN45@draw_exter:
  00390	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_external_3d_view@@YGXXZ@4JA
  00396	83 c2 49	 add	 edx, 73			; 00000049H
  00399	52		 push	 edx
  0039a	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003aa	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv215[ebp], 0
$LN46@draw_exter:
  003b4	8d 4d d4	 lea	 ecx, DWORD PTR _vp$5[ebp+12]
  003b7	51		 push	 ecx
  003b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  003be	52		 push	 edx
  003bf	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR tv215[ebp]
  003c5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  003cc	ff d1		 call	 ecx

; 720  : 
; 721  : 					set_main_3d_inset_target_screen_params ();

  003ce	e8 00 00 00 00	 call	 ?set_main_3d_inset_target_screen_params@@YGXXZ ; set_main_3d_inset_target_screen_params

; 722  : 
; 723  : 					draw_main_3d_scene (&vp);

  003d3	8d 45 c8	 lea	 eax, DWORD PTR _vp$5[ebp]
  003d6	50		 push	 eax
  003d7	e8 00 00 00 00	 call	 ?draw_main_3d_scene@@YGXPAUVIEWPOINT@@@Z ; draw_main_3d_scene

; 724  : 
; 725  : 					restore_reverse_tactical_camera_values ();

  003dc	e8 00 00 00 00	 call	 ?restore_reverse_tactical_camera_values@@YGXXZ ; restore_reverse_tactical_camera_values

; 726  : 
; 727  : 					set_main_3d_full_screen_params (DISPLAY_3D_TINT_CLEAR, DISPLAY_3D_LIGHT_LEVEL_HIGH, DISPLAY_3D_NOISE_LEVEL_NONE);

  003e1	6a 00		 push	 0
  003e3	6a 02		 push	 2
  003e5	6a 00		 push	 0
  003e7	e8 00 00 00 00	 call	 ?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z ; set_main_3d_full_screen_params
$LN2@draw_exter:

; 728  : 
; 729  : 					break;
; 730  : 				}
; 731  : 			}
; 732  : 		}
; 733  : 	}
; 734  : 
; 735  : 	////////////////////////////////////////
; 736  : 	//
; 737  : 	// eject fade
; 738  : 	//
; 739  : 	////////////////////////////////////////
; 740  : 
; 741  : 	if (eject_fader > 0.0)

  003ec	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eject_fader@@3MA
  003f4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  003fc	0f 86 c4 03 00
	00		 jbe	 $LN13@draw_exter

; 742  : 	{
; 743  : 		if (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE) == CAMERA_MODE_EJECT)

  00402	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00409	74 0f		 je	 SHORT $LN47@draw_exter
  0040b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00410	8b 08		 mov	 ecx, DWORD PTR [eax]
  00412	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv232[ebp], ecx
  00418	eb 20		 jmp	 SHORT $LN48@draw_exter
$LN47@draw_exter:
  0041a	68 e7 02 00 00	 push	 743			; 000002e7H
  0041f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00424	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0042a	52		 push	 edx
  0042b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00430	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv232[ebp], 0
$LN48@draw_exter:
  0043a	b8 01 00 00 00	 mov	 eax, 1
  0043f	85 c0		 test	 eax, eax
  00441	74 0c		 je	 SHORT $LN49@draw_exter
  00443	c7 85 74 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR tv239[ebp], 16 ; 00000010H
  0044d	eb 20		 jmp	 SHORT $LN50@draw_exter
$LN49@draw_exter:
  0044f	68 e7 02 00 00	 push	 743			; 000002e7H
  00454	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00459	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0045f	51		 push	 ecx
  00460	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00465	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv239[ebp], 0
$LN50@draw_exter:
  0046f	6a 10		 push	 16			; 00000010H
  00471	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00477	52		 push	 edx
  00478	69 85 78 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv232[ebp], 1116
  00482	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv239[ebp]
  00488	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0048f	ff d2		 call	 edx
  00491	83 f8 05	 cmp	 eax, 5
  00494	0f 85 2c 03 00
	00		 jne	 $LN13@draw_exter

; 744  : 		{
; 745  : 			if (begin_3d_scene ())

  0049a	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  0049f	85 c0		 test	 eax, eax
  004a1	0f 84 1f 03 00
	00		 je	 $LN13@draw_exter

; 746  : 			{
; 747  : 				vertex
; 748  : 					quad[4];
; 749  : 
; 750  : 				real_colour
; 751  : 					colour,
; 752  : 					specular;
; 753  : 
; 754  : 				int
; 755  : 					alpha;
; 756  : 
; 757  : 				set_viewport (full_screen_x_min, full_screen_y_min, full_screen_x_max, full_screen_y_max);

  004a7	51		 push	 ecx
  004a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  004b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b5	51		 push	 ecx
  004b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_max@@3MA
  004be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c3	51		 push	 ecx
  004c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  004cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d1	51		 push	 ecx
  004d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_min@@3MA
  004da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004df	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 758  : 
; 759  : 				alpha = (int) (eject_fader * (float) 255.0);

  004e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eject_fader@@3MA
  004ec	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  004f4	f3 0f 2c c0	 cvttss2si eax, xmm0
  004f8	89 85 bc fe ff
	ff		 mov	 DWORD PTR _alpha$1[ebp], eax

; 760  : 
; 761  : 				alpha = bound (alpha, 0, 255);

  004fe	83 bd bc fe ff
	ff 00		 cmp	 DWORD PTR _alpha$1[ebp], 0
  00505	7d 0c		 jge	 SHORT $LN53@draw_exter
  00507	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv258[ebp], 0
  00511	eb 30		 jmp	 SHORT $LN54@draw_exter
$LN53@draw_exter:
  00513	81 bd bc fe ff
	ff ff 00 00 00	 cmp	 DWORD PTR _alpha$1[ebp], 255 ; 000000ffH
  0051d	7e 0c		 jle	 SHORT $LN51@draw_exter
  0051f	c7 85 74 fe ff
	ff ff 00 00 00	 mov	 DWORD PTR tv257[ebp], 255 ; 000000ffH
  00529	eb 0c		 jmp	 SHORT $LN52@draw_exter
$LN51@draw_exter:
  0052b	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _alpha$1[ebp]
  00531	89 85 74 fe ff
	ff		 mov	 DWORD PTR tv257[ebp], eax
$LN52@draw_exter:
  00537	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv257[ebp]
  0053d	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv258[ebp], ecx
$LN54@draw_exter:
  00543	8b 95 78 fe ff
	ff		 mov	 edx, DWORD PTR tv258[ebp]
  00549	89 95 bc fe ff
	ff		 mov	 DWORD PTR _alpha$1[ebp], edx

; 762  : 
; 763  : 				colour.red = 0;

  0054f	c6 85 c6 fe ff
	ff 00		 mov	 BYTE PTR _colour$3[ebp+2], 0

; 764  : 				colour.green = 0;

  00556	c6 85 c5 fe ff
	ff 00		 mov	 BYTE PTR _colour$3[ebp+1], 0

; 765  : 				colour.blue = 0;

  0055d	c6 85 c4 fe ff
	ff 00		 mov	 BYTE PTR _colour$3[ebp], 0

; 766  : 				colour.alpha = alpha;

  00564	8a 85 bc fe ff
	ff		 mov	 al, BYTE PTR _alpha$1[ebp]
  0056a	88 85 c7 fe ff
	ff		 mov	 BYTE PTR _colour$3[ebp+3], al

; 767  : 
; 768  : 				specular.red = 0;

  00570	c6 85 c2 fe ff
	ff 00		 mov	 BYTE PTR _specular$2[ebp+2], 0

; 769  : 				specular.green = 0;

  00577	c6 85 c1 fe ff
	ff 00		 mov	 BYTE PTR _specular$2[ebp+1], 0

; 770  : 				specular.blue = 0;

  0057e	c6 85 c0 fe ff
	ff 00		 mov	 BYTE PTR _specular$2[ebp], 0

; 771  : 				specular.alpha = 255;

  00585	c6 85 c3 fe ff
	ff ff		 mov	 BYTE PTR _specular$2[ebp+3], 255 ; 000000ffH

; 772  : 
; 773  : 				set_d3d_transparency_on ();

  0058c	e8 00 00 00 00	 call	 ?set_d3d_transparency_on@@YGXXZ ; set_d3d_transparency_on

; 774  : 
; 775  : 				set_d3d_zbuffer_comparison (FALSE);

  00591	6a 00		 push	 0
  00593	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 776  : 
; 777  : 				set_d3d_plain_renderstate ();

  00598	e8 00 00 00 00	 call	 ?set_d3d_plain_renderstate@@YGXXZ ; set_d3d_plain_renderstate

; 778  : 
; 779  : 				set_d3d_culling (FALSE);

  0059d	6a 00		 push	 0
  0059f	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 780  : 
; 781  : 				quad[0].i = full_screen_x_min;

  005a4	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005a9	6b c8 00	 imul	 ecx, eax, 0
  005ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_min@@3MA
  005b4	f3 0f 11 84 0d
	d8 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+16], xmm0

; 782  : 				quad[0].j = full_screen_y_min;

  005bd	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005c2	6b c8 00	 imul	 ecx, eax, 0
  005c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  005cd	f3 0f 11 84 0d
	dc fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+20], xmm0

; 783  : 				quad[0].z = 0.5;

  005d6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005db	6b c8 00	 imul	 ecx, eax, 0
  005de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  005e6	f3 0f 11 84 0d
	d0 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+8], xmm0

; 784  : 				quad[0].q = 0.5;

  005ef	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005f4	6b c8 00	 imul	 ecx, eax, 0
  005f7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  005ff	f3 0f 11 84 0d
	d4 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+12], xmm0

; 785  : 				quad[0].next_vertex = &quad[1];

  00608	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0060d	c1 e0 00	 shl	 eax, 0
  00610	8d 8c 05 c8 fe
	ff ff		 lea	 ecx, DWORD PTR _quad$4[ebp+eax]
  00617	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0061c	6b c2 00	 imul	 eax, edx, 0
  0061f	89 8c 05 f0 fe
	ff ff		 mov	 DWORD PTR _quad$4[ebp+eax+40], ecx

; 786  : 
; 787  : 				quad[1].i = full_screen_x_max;

  00626	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0062b	c1 e0 00	 shl	 eax, 0
  0062e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_max@@3MA
  00636	f3 0f 11 84 05
	d8 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+16], xmm0

; 788  : 				quad[1].j = full_screen_y_min;

  0063f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00644	c1 e0 00	 shl	 eax, 0
  00647	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  0064f	f3 0f 11 84 05
	dc fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+20], xmm0

; 789  : 				quad[1].z = 0.5;

  00658	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0065d	c1 e0 00	 shl	 eax, 0
  00660	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00668	f3 0f 11 84 05
	d0 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+8], xmm0

; 790  : 				quad[1].q = 0.5;

  00671	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00676	c1 e0 00	 shl	 eax, 0
  00679	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00681	f3 0f 11 84 05
	d4 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+12], xmm0

; 791  : 				quad[1].next_vertex = &quad[2];

  0068a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0068f	d1 e0		 shl	 eax, 1
  00691	8d 8c 05 c8 fe
	ff ff		 lea	 ecx, DWORD PTR _quad$4[ebp+eax]
  00698	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0069d	c1 e2 00	 shl	 edx, 0
  006a0	89 8c 15 f0 fe
	ff ff		 mov	 DWORD PTR _quad$4[ebp+edx+40], ecx

; 792  : 
; 793  : 				quad[2].i = full_screen_x_max;

  006a7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006ac	d1 e0		 shl	 eax, 1
  006ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_max@@3MA
  006b6	f3 0f 11 84 05
	d8 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+16], xmm0

; 794  : 				quad[2].j = full_screen_y_max;

  006bf	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006c4	d1 e0		 shl	 eax, 1
  006c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  006ce	f3 0f 11 84 05
	dc fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+20], xmm0

; 795  : 				quad[2].z = 0.5;

  006d7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006dc	d1 e0		 shl	 eax, 1
  006de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  006e6	f3 0f 11 84 05
	d0 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+8], xmm0

; 796  : 				quad[2].q = 0.5;

  006ef	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006f4	d1 e0		 shl	 eax, 1
  006f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  006fe	f3 0f 11 84 05
	d4 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+eax+12], xmm0

; 797  : 				quad[2].next_vertex = &quad[3];

  00707	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0070c	6b c8 03	 imul	 ecx, eax, 3
  0070f	8d 94 0d c8 fe
	ff ff		 lea	 edx, DWORD PTR _quad$4[ebp+ecx]
  00716	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0071b	d1 e0		 shl	 eax, 1
  0071d	89 94 05 f0 fe
	ff ff		 mov	 DWORD PTR _quad$4[ebp+eax+40], edx

; 798  : 
; 799  : 				quad[3].i = full_screen_x_min;

  00724	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00729	6b c8 03	 imul	 ecx, eax, 3
  0072c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_min@@3MA
  00734	f3 0f 11 84 0d
	d8 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+16], xmm0

; 800  : 				quad[3].j = full_screen_y_max;

  0073d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00742	6b c8 03	 imul	 ecx, eax, 3
  00745	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  0074d	f3 0f 11 84 0d
	dc fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+20], xmm0

; 801  : 				quad[3].z = 0.5;

  00756	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0075b	6b c8 03	 imul	 ecx, eax, 3
  0075e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00766	f3 0f 11 84 0d
	d0 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+8], xmm0

; 802  : 				quad[3].q = 0.5;

  0076f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00774	6b c8 03	 imul	 ecx, eax, 3
  00777	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0077f	f3 0f 11 84 0d
	d4 fe ff ff	 movss	 DWORD PTR _quad$4[ebp+ecx+12], xmm0

; 803  : 				quad[3].next_vertex = NULL;

  00788	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0078d	6b c8 03	 imul	 ecx, eax, 3
  00790	c7 84 0d f0 fe
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$4[ebp+ecx+40], 0

; 804  : 
; 805  : 				draw_wbuffered_plain_polygon (quad, colour, specular);

  0079b	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR _specular$2[ebp]
  007a1	50		 push	 eax
  007a2	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _colour$3[ebp]
  007a8	51		 push	 ecx
  007a9	8d 95 c8 fe ff
	ff		 lea	 edx, DWORD PTR _quad$4[ebp]
  007af	52		 push	 edx
  007b0	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_plain_polygon

; 806  : 
; 807  : 				set_d3d_transparency_off ();

  007b5	e8 00 00 00 00	 call	 ?set_d3d_transparency_off@@YGXXZ ; set_d3d_transparency_off

; 808  : 
; 809  : 				set_d3d_zbuffer_comparison (TRUE);

  007ba	6a 01		 push	 1
  007bc	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 810  : 
; 811  : 				end_3d_scene ();

  007c1	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN13@draw_exter:

; 812  : 			}
; 813  : 		}
; 814  : 	}
; 815  : 
; 816  :    ////////////////////////////////////////
; 817  :    //
; 818  :    // overlay text
; 819  :    //
; 820  :    ////////////////////////////////////////
; 821  : 
; 822  : 	if (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE) == CAMERA_MODE_DEBRIEFING)

  007c6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  007cd	74 0f		 je	 SHORT $LN55@draw_exter
  007cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  007d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  007d6	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv336[ebp], ecx
  007dc	eb 20		 jmp	 SHORT $LN56@draw_exter
$LN55@draw_exter:
  007de	68 36 03 00 00	 push	 822			; 00000336H
  007e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ee	52		 push	 edx
  007ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007f4	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv336[ebp], 0
$LN56@draw_exter:
  007fe	b8 01 00 00 00	 mov	 eax, 1
  00803	85 c0		 test	 eax, eax
  00805	74 0c		 je	 SHORT $LN57@draw_exter
  00807	c7 85 74 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR tv343[ebp], 16 ; 00000010H
  00811	eb 20		 jmp	 SHORT $LN58@draw_exter
$LN57@draw_exter:
  00813	68 36 03 00 00	 push	 822			; 00000336H
  00818	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  0081d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00823	51		 push	 ecx
  00824	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00829	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv343[ebp], 0
$LN58@draw_exter:
  00833	6a 10		 push	 16			; 00000010H
  00835	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  0083b	52		 push	 edx
  0083c	69 85 78 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv336[ebp], 1116
  00846	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv343[ebp]
  0084c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00853	ff d2		 call	 edx
  00855	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00858	75 05		 jne	 SHORT $LN14@draw_exter

; 823  : 	{
; 824  : 	}
; 825  : 	else

  0085a	e9 45 02 00 00	 jmp	 $LN23@draw_exter
$LN14@draw_exter:

; 826  : 	{
; 827  : 		if (!get_display_exit_message())

  0085f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?display_exit_message_flag@@3HA, 0 ; display_exit_message_flag
  00866	0f 85 38 02 00
	00		 jne	 $LN23@draw_exter

; 828  : 		{
; 829  : 			// Jabberwock 031009 Satellite view - turn off text for keysites
; 830  : 			if (get_global_display_external_view_name () && (get_local_entity_type(get_external_view_entity()) != ENTITY_TYPE_KEYSITE))

  0086c	83 3d 20 00 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+32, 0
  00873	74 46		 je	 SHORT $LN17@draw_exter
  00875	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  0087a	85 c0		 test	 eax, eax
  0087c	74 0f		 je	 SHORT $LN59@draw_exter
  0087e	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  00883	8b 00		 mov	 eax, DWORD PTR [eax]
  00885	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv359[ebp], eax
  0088b	eb 20		 jmp	 SHORT $LN60@draw_exter
$LN59@draw_exter:
  0088d	68 3e 03 00 00	 push	 830			; 0000033eH
  00892	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00897	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0089d	51		 push	 ecx
  0089e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008a3	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv359[ebp], 0
$LN60@draw_exter:
  008ad	83 bd 78 fe ff
	ff 0f		 cmp	 DWORD PTR tv359[ebp], 15 ; 0000000fH
  008b4	74 05		 je	 SHORT $LN17@draw_exter

; 831  : 			{
; 832  : 				display_external_view_text ();

  008b6	e8 00 00 00 00	 call	 ?display_external_view_text@@YGXXZ ; display_external_view_text
$LN17@draw_exter:

; 833  : 			}
; 834  : 			// Jabberwock 031110 Satellite info
; 835  : 			if (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE) == CAMERA_MODE_SATELLITE)

  008bb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  008c2	74 0f		 je	 SHORT $LN61@draw_exter
  008c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  008c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  008cb	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv366[ebp], ecx
  008d1	eb 20		 jmp	 SHORT $LN62@draw_exter
$LN61@draw_exter:
  008d3	68 43 03 00 00	 push	 835			; 00000343H
  008d8	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  008dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008e3	52		 push	 edx
  008e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e9	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv366[ebp], 0
$LN62@draw_exter:
  008f3	b8 01 00 00 00	 mov	 eax, 1
  008f8	85 c0		 test	 eax, eax
  008fa	74 0c		 je	 SHORT $LN63@draw_exter
  008fc	c7 85 74 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR tv373[ebp], 16 ; 00000010H
  00906	eb 20		 jmp	 SHORT $LN64@draw_exter
$LN63@draw_exter:
  00908	68 43 03 00 00	 push	 835			; 00000343H
  0090d	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00912	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00918	51		 push	 ecx
  00919	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0091e	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv373[ebp], 0
$LN64@draw_exter:
  00928	6a 10		 push	 16			; 00000010H
  0092a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00930	52		 push	 edx
  00931	69 85 78 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv366[ebp], 1116
  0093b	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv373[ebp]
  00941	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00948	ff d2		 call	 edx

; 836  : 			{
; 837  : 			//	draw_satellite_info (); not ready yet
; 838  : 			}
; 839  : 			// Jabberwock 031110 ends
; 840  : 			
; 841  : 			if (get_global_display_hud_on_external_view ())

  0094a	83 3d b4 01 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+436, 0
  00951	0f 84 4d 01 00
	00		 je	 $LN23@draw_exter

; 842  : 			{
; 843  : 				if (!get_view_menu_display_visible_status ())

  00957	e8 00 00 00 00	 call	 ?get_view_menu_display_visible_status@@YGHXZ ; get_view_menu_display_visible_status
  0095c	85 c0		 test	 eax, eax
  0095e	0f 85 40 01 00
	00		 jne	 $LN23@draw_exter

; 844  : 				{
; 845  : 					if (get_external_view_entity () == get_gunship_entity ())

  00964	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  00969	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0096f	0f 85 2f 01 00
	00		 jne	 $LN23@draw_exter

; 846  : 					{
; 847  : 						if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_ALIVE))

  00975	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0097c	74 0f		 je	 SHORT $LN65@draw_exter
  0097e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00983	8b 08		 mov	 ecx, DWORD PTR [eax]
  00985	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv390[ebp], ecx
  0098b	eb 20		 jmp	 SHORT $LN66@draw_exter
$LN65@draw_exter:
  0098d	68 4f 03 00 00	 push	 847			; 0000034fH
  00992	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00997	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0099d	52		 push	 edx
  0099e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a3	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv390[ebp], 0
$LN66@draw_exter:
  009ad	b8 01 00 00 00	 mov	 eax, 1
  009b2	85 c0		 test	 eax, eax
  009b4	74 0c		 je	 SHORT $LN67@draw_exter
  009b6	c7 85 74 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR tv397[ebp], 7
  009c0	eb 20		 jmp	 SHORT $LN68@draw_exter
$LN67@draw_exter:
  009c2	68 4f 03 00 00	 push	 847			; 0000034fH
  009c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  009cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009d2	51		 push	 ecx
  009d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009d8	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv397[ebp], 0
$LN68@draw_exter:
  009e2	6a 07		 push	 7
  009e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  009ea	52		 push	 edx
  009eb	69 85 78 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv390[ebp], 1116
  009f5	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv397[ebp]
  009fb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a02	ff d2		 call	 edx
  00a04	85 c0		 test	 eax, eax
  00a06	0f 84 98 00 00
	00		 je	 $LN23@draw_exter

; 848  : 						{
; 849  : 							if (get_local_entity_int_value (get_camera_entity (), INT_TYPE_CAMERA_MODE) == CAMERA_MODE_CHASE)

  00a0c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00a13	74 0f		 je	 SHORT $LN69@draw_exter
  00a15	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00a1a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a1c	89 8d 78 fe ff
	ff		 mov	 DWORD PTR tv409[ebp], ecx
  00a22	eb 20		 jmp	 SHORT $LN70@draw_exter
$LN69@draw_exter:
  00a24	68 51 03 00 00	 push	 849			; 00000351H
  00a29	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a2e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a34	52		 push	 edx
  00a35	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a3a	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN70@draw_exter:
  00a44	b8 01 00 00 00	 mov	 eax, 1
  00a49	85 c0		 test	 eax, eax
  00a4b	74 0c		 je	 SHORT $LN71@draw_exter
  00a4d	c7 85 74 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR tv416[ebp], 16 ; 00000010H
  00a57	eb 20		 jmp	 SHORT $LN72@draw_exter
$LN71@draw_exter:
  00a59	68 51 03 00 00	 push	 849			; 00000351H
  00a5e	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@IKKACJCH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a63	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a69	51		 push	 ecx
  00a6a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a6f	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv416[ebp], 0
$LN72@draw_exter:
  00a79	6a 10		 push	 16			; 00000010H
  00a7b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00a81	52		 push	 edx
  00a82	69 85 78 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv409[ebp], 1116
  00a8c	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR tv416[ebp]
  00a92	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a99	ff d2		 call	 edx
  00a9b	85 c0		 test	 eax, eax
  00a9d	75 05		 jne	 SHORT $LN23@draw_exter

; 850  : 							{
; 851  : 								display_hud_on_external_view ();

  00a9f	e8 00 00 00 00	 call	 ?display_hud_on_external_view@@YGXXZ ; display_hud_on_external_view
$LN23@draw_exter:

; 852  : 							}
; 853  : 						}
; 854  : 					}
; 855  : 				}
; 856  : 			}
; 857  : 		}
; 858  : 	}
; 859  : 
; 860  :    ////////////////////////////////////////
; 861  :    //
; 862  :    // view menu
; 863  :    //
; 864  :    ////////////////////////////////////////
; 865  : 
; 866  : 	if (begin_3d_scene ())

  00aa4	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  00aa9	85 c0		 test	 eax, eax
  00aab	74 0a		 je	 SHORT $LN24@draw_exter

; 867  : 	{
; 868  : 		display_view_menu ();

  00aad	e8 00 00 00 00	 call	 ?display_view_menu@@YGXXZ ; display_view_menu

; 869  : 
; 870  : 		end_3d_scene ();

  00ab2	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN24@draw_exter:

; 871  : 	}
; 872  : 
; 873  : 	////////////////////////////////////////
; 874  : 	//
; 875  : 	// logo for demo mode
; 876  : 	//
; 877  : 	////////////////////////////////////////
; 878  : 
; 879  : 	if (get_game_type () == GAME_TYPE_DEMO)

  00ab7	83 3d 00 00 00
	00 04		 cmp	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 4 ; game_type
  00abe	75 05		 jne	 SHORT $LN25@draw_exter

; 880  : 	{
; 881  : 		draw_demo_logo ();

  00ac0	e8 00 00 00 00	 call	 ?draw_demo_logo@@YGXXZ	; draw_demo_logo
$LN25@draw_exter:

; 882  : 	}
; 883  : }

  00ac5	5f		 pop	 edi
  00ac6	5e		 pop	 esi
  00ac7	5b		 pop	 ebx
  00ac8	8b e5		 mov	 esp, ebp
  00aca	5d		 pop	 ebp
  00acb	c3		 ret	 0
$LN74@draw_exter:
  00acc	00 00 00 00	 DD	 $LN10@draw_exter
  00ad0	00 00 00 00	 DD	 $LN2@draw_exter
$LN73@draw_exter:
  00ad4	00		 DB	 0
  00ad5	01		 DB	 1
  00ad6	00		 DB	 0
  00ad7	00		 DB	 0
  00ad8	00		 DB	 0
  00ad9	01		 DB	 1
  00ada	00		 DB	 0
  00adb	00		 DB	 0
?draw_external_3d_view@@YGXXZ ENDP			; draw_external_3d_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c
;	COMDAT ?update_external_view@@YGXXZ
_TEXT	SEGMENT
?update_external_view@@YGXXZ PROC			; update_external_view, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 125  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?update_external_view@@YGXXZ ENDP			; update_external_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c
;	COMDAT ?deinitialise_external_view@@YGXXZ
_TEXT	SEGMENT
?deinitialise_external_view@@YGXXZ PROC			; deinitialise_external_view, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 116  : 	external_view_inset_target = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?external_view_inset_target@@3HA, 0 ; external_view_inset_target

; 117  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?deinitialise_external_view@@YGXXZ ENDP			; deinitialise_external_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_extrn.c
;	COMDAT ?initialise_external_view@@YGXXZ
_TEXT	SEGMENT
?initialise_external_view@@YGXXZ PROC			; initialise_external_view, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   : 	set_rgb_colour (ext_col_message,						255, 215,   0, 255);	// gold

  00009	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_message@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  00010	c6 05 01 00 00
	00 d7		 mov	 BYTE PTR ?ext_col_message@@3UREAL_COLOUR@@A+1, 215 ; 000000d7H
  00017	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?ext_col_message@@3UREAL_COLOUR@@A, 0
  0001e	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_message@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 98   : 	set_rgb_colour (ext_col_alert_message,				255,  20,   0, 255);	// red

  00025	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_alert_message@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  0002c	c6 05 01 00 00
	00 14		 mov	 BYTE PTR ?ext_col_alert_message@@3UREAL_COLOUR@@A+1, 20 ; 00000014H
  00033	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?ext_col_alert_message@@3UREAL_COLOUR@@A, 0
  0003a	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_alert_message@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 99   : 	set_rgb_colour (ext_col_menu_title,					255, 215,   0, 255);	// gold

  00041	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_menu_title@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  00048	c6 05 01 00 00
	00 d7		 mov	 BYTE PTR ?ext_col_menu_title@@3UREAL_COLOUR@@A+1, 215 ; 000000d7H
  0004f	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?ext_col_menu_title@@3UREAL_COLOUR@@A, 0
  00056	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_menu_title@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 100  : 	set_rgb_colour (ext_col_list_title,					255, 153,  18, 255);	// cadmium yellow

  0005d	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_title@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  00064	c6 05 01 00 00
	00 99		 mov	 BYTE PTR ?ext_col_list_title@@3UREAL_COLOUR@@A+1, 153 ; 00000099H
  0006b	c6 05 00 00 00
	00 12		 mov	 BYTE PTR ?ext_col_list_title@@3UREAL_COLOUR@@A, 18 ; 00000012H
  00072	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_title@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 101  : 	set_rgb_colour (ext_col_list_item_available,		255, 255, 240, 255);	// ivory

  00079	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_item_available@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  00080	c6 05 01 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_item_available@@3UREAL_COLOUR@@A+1, 255 ; 000000ffH
  00087	c6 05 00 00 00
	00 f0		 mov	 BYTE PTR ?ext_col_list_item_available@@3UREAL_COLOUR@@A, 240 ; 000000f0H
  0008e	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_item_available@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 102  : 	set_rgb_colour (ext_col_list_item_unavailable,	192, 192, 192, 255);	// grey

  00095	c6 05 02 00 00
	00 c0		 mov	 BYTE PTR ?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A+2, 192 ; 000000c0H
  0009c	c6 05 01 00 00
	00 c0		 mov	 BYTE PTR ?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A+1, 192 ; 000000c0H
  000a3	c6 05 00 00 00
	00 c0		 mov	 BYTE PTR ?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A, 192 ; 000000c0H
  000aa	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_item_unavailable@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 103  : 	set_rgb_colour (ext_col_list_item_selected,		255, 215,   0, 255);	// gold

  000b1	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_item_selected@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  000b8	c6 05 01 00 00
	00 d7		 mov	 BYTE PTR ?ext_col_list_item_selected@@3UREAL_COLOUR@@A+1, 215 ; 000000d7H
  000bf	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?ext_col_list_item_selected@@3UREAL_COLOUR@@A, 0
  000c6	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_list_item_selected@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 104  : 	set_rgb_colour (ext_col_blue_force,					 30, 144, 255, 255);	// dodger blue

  000cd	c6 05 02 00 00
	00 1e		 mov	 BYTE PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A+2, 30 ; 0000001eH
  000d4	c6 05 01 00 00
	00 90		 mov	 BYTE PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A+1, 144 ; 00000090H
  000db	c6 05 00 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A, 255 ; 000000ffH
  000e2	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 105  : 	set_rgb_colour (ext_col_red_force,					255,  20,   0, 255);	// red

  000e9	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_red_force@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  000f0	c6 05 01 00 00
	00 14		 mov	 BYTE PTR ?ext_col_red_force@@3UREAL_COLOUR@@A+1, 20 ; 00000014H
  000f7	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?ext_col_red_force@@3UREAL_COLOUR@@A, 0
  000fe	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?ext_col_red_force@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 106  : 
; 107  : 	external_view_inset_target = FALSE;

  00105	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?external_view_inset_target@@3HA, 0 ; external_view_inset_target

; 108  : }

  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5b		 pop	 ebx
  00112	8b e5		 mov	 esp, ebp
  00114	5d		 pop	 ebp
  00115	c3		 ret	 0
?initialise_external_view@@YGXXZ ENDP			; initialise_external_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
