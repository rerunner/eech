; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\tempbuf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?reset_temporary_buffered_translucent_polygons@@YGXXZ ; reset_temporary_buffered_translucent_polygons
PUBLIC	?get_number_of_temporary_translucent_polygons@@YGHXZ ; get_number_of_temporary_translucent_polygons
PUBLIC	?draw_temporary_translucent_polygons@@YGXXZ	; draw_temporary_translucent_polygons
PUBLIC	?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_temporary_translucent_polygon_vertices
PUBLIC	?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z ; add_temporary_buffered_processed_polygon
PUBLIC	?__LINE__Var@?0??add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z@4JA ; `add_temporary_buffered_processed_polygon'::`1'::__LINE__Var
PUBLIC	??_C@_0DI@MAIJDDDJ@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0BD@NBJNPLBE@number_of_vertices@		; `string'
EXTRN	_memcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z:PROC ; draw_fan_primitive
EXTRN	?draw_line_primitive@@YGXPAU_D3DTLVERTEX@@@Z:PROC ; draw_line_primitive
EXTRN	?finalise_primitives@@YGXXZ:PROC		; finalise_primitives
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC	; set_d3d_texture
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z:PROC ; get_d3d_vertices_points_address
EXTRN	?get_d3d_line_vertices_points_address@@YGPAU_D3DTLVERTEX@@XZ:PROC ; get_d3d_line_vertices_points_address
_BSS	SEGMENT
?number_of_temporary_polygons@@3HA DD 01H DUP (?)	; number_of_temporary_polygons
?number_of_temporary_vertices@@3HA DD 01H DUP (?)	; number_of_temporary_vertices
?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A DB 0c000H DUP (?) ; temporary_polygons
?temporary_vertices@@3PAU_D3DTLVERTEX@@A DB 020020H DUP (?) ; temporary_vertices
_BSS	ENDS
;	COMDAT ??_C@_0BD@NBJNPLBE@number_of_vertices@
CONST	SEGMENT
??_C@_0BD@NBJNPLBE@number_of_vertices@ DB 'number_of_vertices', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@MAIJDDDJ@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DI@MAIJDDDJ@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\graphics\tempbuf.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z@4JA DD 0f1H ; `add_temporary_buffered_processed_polygon'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tempbuf.c
;	COMDAT ?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z
_TEXT	SEGMENT
_number_of_vertices$ = 8				; size = 4
_texture$ = 12						; size = 4
_filter$ = 16						; size = 4
_mipmap$ = 20						; size = 4
_address_u$ = 24					; size = 4
_address_v$ = 28					; size = 4
_additive$ = 32						; size = 4
?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z PROC ; add_temporary_buffered_processed_polygon, COMDAT

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 242  : 
; 243  : 	ASSERT ( number_of_vertices );

  00009	83 7d 08 00	 cmp	 DWORD PTR _number_of_vertices$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@add_tempor
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@MAIJDDDJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NBJNPLBE@number_of_vertices@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@add_tempor:

; 244  : 
; 245  : 	if ( additive )

  00027	83 7d 20 00	 cmp	 DWORD PTR _additive$[ebp], 0
  0002b	74 1e		 je	 SHORT $LN3@add_tempor

; 246  : 	{
; 247  : 
; 248  : 		temporary_polygons[number_of_temporary_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  0002d	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  00034	c6 80 04 00 00
	00 02		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+4], 2

; 249  : 		temporary_polygons[number_of_temporary_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  0003b	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  00042	c6 80 05 00 00
	00 02		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+5], 2

; 250  : 	}
; 251  : 	else

  00049	eb 1c		 jmp	 SHORT $LN4@add_tempor
$LN3@add_tempor:

; 252  : 	{
; 253  : 
; 254  : 		temporary_polygons[number_of_temporary_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  0004b	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  00052	c6 80 04 00 00
	00 05		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+4], 5

; 255  : 		temporary_polygons[number_of_temporary_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  00059	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  00060	c6 80 05 00 00
	00 06		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+5], 6
$LN4@add_tempor:

; 256  : 	}
; 257  : 
; 258  : 	temporary_polygons[number_of_temporary_polygons].texture = texture;

  00067	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  0006e	8b 4d 0c	 mov	 ecx, DWORD PTR _texture$[ebp]
  00071	89 88 08 00 00
	00		 mov	 DWORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+8], ecx

; 259  : 	temporary_polygons[number_of_temporary_polygons].texture_mag = filter;

  00077	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  0007e	8a 4d 10	 mov	 cl, BYTE PTR _filter$[ebp]
  00081	88 88 00 00 00
	00		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax], cl

; 260  : 	temporary_polygons[number_of_temporary_polygons].texture_min = mipmap;

  00087	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  0008e	8a 4d 14	 mov	 cl, BYTE PTR _mipmap$[ebp]
  00091	88 88 01 00 00
	00		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+1], cl

; 261  : 	temporary_polygons[number_of_temporary_polygons].texture_u_address = address_u;

  00097	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  0009e	8a 4d 18	 mov	 cl, BYTE PTR _address_u$[ebp]
  000a1	88 88 02 00 00
	00		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+2], cl

; 262  : 	temporary_polygons[number_of_temporary_polygons].texture_v_address = address_v;

  000a7	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  000ae	8a 4d 1c	 mov	 cl, BYTE PTR _address_v$[ebp]
  000b1	88 88 03 00 00
	00		 mov	 BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+3], cl

; 263  : 	temporary_polygons[number_of_temporary_polygons].number_of_vertices = number_of_vertices;

  000b7	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA, 12
  000be	66 8b 4d 08	 mov	 cx, WORD PTR _number_of_vertices$[ebp]
  000c2	66 89 88 06 00
	00 00		 mov	 WORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+6], cx

; 264  : 
; 265  : 	number_of_temporary_polygons++;

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA
  000ce	83 c0 01	 add	 eax, 1
  000d1	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_temporary_polygons@@3HA, eax

; 266  : 
; 267  : 	number_of_temporary_vertices += number_of_vertices;

  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_temporary_vertices@@3HA
  000db	03 45 08	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  000de	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_temporary_vertices@@3HA, eax

; 268  : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 1c 00	 ret	 28			; 0000001cH
?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z ENDP ; add_temporary_buffered_processed_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tempbuf.c
;	COMDAT ?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ
_TEXT	SEGMENT
?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ PROC ; get_temporary_translucent_polygon_vertices, COMDAT

; 231  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 232  : 
; 233  : 	return ( &temporary_vertices[number_of_temporary_vertices] );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_temporary_vertices@@3HA
  0000e	c1 e0 05	 shl	 eax, 5
  00011	05 00 00 00 00	 add	 eax, OFFSET ?temporary_vertices@@3PAU_D3DTLVERTEX@@A

; 234  : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ENDP ; get_temporary_translucent_polygon_vertices
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tempbuf.c
;	COMDAT ?draw_temporary_translucent_polygons@@YGXXZ
_TEXT	SEGMENT
_vertices$1 = -12					; size = 4
_count$ = -8						; size = 4
_vertex_index$ = -4					; size = 4
?draw_temporary_translucent_polygons@@YGXXZ PROC	; draw_temporary_translucent_polygons, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 155  : 
; 156  : 	int
; 157  : 		vertex_index,
; 158  : 		count;
; 159  : 
; 160  : 	//
; 161  : 	// No need to set the default blending mode, as each buffered polygon will set it itself
; 162  : 	//
; 163  : 
; 164  : 	vertex_index = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _vertex_index$[ebp], 0

; 165  : 
; 166  : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00010	6a 02		 push	 2
  00012	6a 09		 push	 9
  00014	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 167  : 
; 168  : 	//
; 169  : 	// Flush any buffered vertex buffers
; 170  : 	//
; 171  : 
; 172  : 	finalise_primitives ();

  00019	e8 00 00 00 00	 call	 ?finalise_primitives@@YGXXZ ; finalise_primitives

; 173  : 
; 174  : 	for ( count = 0; count < number_of_temporary_polygons; count++ )

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@draw_tempo
$LN2@draw_tempo:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_tempo:
  00030	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00033	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA
  00039	0f 8d 77 01 00
	00		 jge	 $LN1@draw_tempo

; 175  : 	{
; 176  : 
; 177  : 		LPD3DTLVERTEX
; 178  : 			vertices;
; 179  : 
; 180  : 		set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, temporary_polygons[count].source_alpha_blend );

  0003f	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00043	0f b6 88 04 00
	00 00		 movzx	 ecx, BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+4]
  0004a	51		 push	 ecx
  0004b	6a 13		 push	 19			; 00000013H
  0004d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 181  : 		set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, temporary_polygons[count].destination_alpha_blend );

  00052	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00056	0f b6 88 05 00
	00 00		 movzx	 ecx, BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+5]
  0005d	51		 push	 ecx
  0005e	6a 14		 push	 20			; 00000014H
  00060	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 182  : 
; 183  : 		if ( temporary_polygons[count].texture )

  00065	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00069	83 b8 08 00 00
	00 00		 cmp	 DWORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+8], 0
  00070	0f 84 88 00 00
	00		 je	 $LN5@draw_tempo

; 184  : 		{
; 185  : 
; 186  : 			set_d3d_texture ( 0, temporary_polygons[count].texture );

  00076	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  0007a	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+8]
  00080	51		 push	 ecx
  00081	6a 00		 push	 0
  00083	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 187  : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00088	6a 04		 push	 4
  0008a	6a 01		 push	 1
  0008c	6a 00		 push	 0
  0008e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 188  : 
; 189  : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, temporary_polygons[count].texture_u_address );

  00093	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00097	0f b6 88 02 00
	00 00		 movzx	 ecx, BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+2]
  0009e	51		 push	 ecx
  0009f	6a 0d		 push	 13			; 0000000dH
  000a1	6a 00		 push	 0
  000a3	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 190  : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, temporary_polygons[count].texture_v_address );

  000a8	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  000ac	0f b6 88 03 00
	00 00		 movzx	 ecx, BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+3]
  000b3	51		 push	 ecx
  000b4	6a 0e		 push	 14			; 0000000eH
  000b6	6a 00		 push	 0
  000b8	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 191  : 			set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, temporary_polygons[count].texture_mag );

  000bd	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  000c1	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax]
  000c8	51		 push	 ecx
  000c9	6a 10		 push	 16			; 00000010H
  000cb	6a 00		 push	 0
  000cd	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 192  : 			set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, temporary_polygons[count].texture_mag );

  000d2	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  000d6	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax]
  000dd	51		 push	 ecx
  000de	6a 11		 push	 17			; 00000011H
  000e0	6a 00		 push	 0
  000e2	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 193  : 			set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, temporary_polygons[count].texture_min );

  000e7	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  000eb	0f b6 88 01 00
	00 00		 movzx	 ecx, BYTE PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+1]
  000f2	51		 push	 ecx
  000f3	6a 12		 push	 18			; 00000012H
  000f5	6a 00		 push	 0
  000f7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 194  : 		}
; 195  : 		else

  000fc	eb 14		 jmp	 SHORT $LN6@draw_tempo
$LN5@draw_tempo:

; 196  : 		{
; 197  : 
; 198  : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  000fe	6a 01		 push	 1
  00100	6a 01		 push	 1
  00102	6a 00		 push	 0
  00104	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 199  : 			set_d3d_texture ( 0, NULL );

  00109	6a 00		 push	 0
  0010b	6a 00		 push	 0
  0010d	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture
$LN6@draw_tempo:

; 200  : 		}
; 201  : 
; 202  : 
; 203  : 		if ( temporary_polygons[count].number_of_vertices > 2 )

  00112	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00116	0f b7 88 06 00
	00 00		 movzx	 ecx, WORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+6]
  0011d	83 f9 02	 cmp	 ecx, 2
  00120	7e 53		 jle	 SHORT $LN7@draw_tempo

; 204  : 		{
; 205  : 
; 206  : 			vertices = get_d3d_vertices_points_address ( temporary_polygons[count].number_of_vertices );

  00122	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00126	0f b7 88 06 00
	00 00		 movzx	 ecx, WORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+6]
  0012d	51		 push	 ecx
  0012e	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00133	89 45 f4	 mov	 DWORD PTR _vertices$1[ebp], eax

; 207  : 
; 208  : 			memcpy ( vertices, &temporary_vertices[vertex_index], sizeof ( D3DTLVERTEX ) * temporary_polygons[count].number_of_vertices );

  00136	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  0013a	0f b7 88 06 00
	00 00		 movzx	 ecx, WORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+6]
  00141	c1 e1 05	 shl	 ecx, 5
  00144	51		 push	 ecx
  00145	8b 55 fc	 mov	 edx, DWORD PTR _vertex_index$[ebp]
  00148	c1 e2 05	 shl	 edx, 5
  0014b	81 c2 00 00 00
	00		 add	 edx, OFFSET ?temporary_vertices@@3PAU_D3DTLVERTEX@@A
  00151	52		 push	 edx
  00152	8b 45 f4	 mov	 eax, DWORD PTR _vertices$1[ebp]
  00155	50		 push	 eax
  00156	e8 00 00 00 00	 call	 _memcpy
  0015b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 209  : 
; 210  : 			draw_fan_primitive ( temporary_polygons[count].number_of_vertices, vertices );

  0015e	8b 45 f4	 mov	 eax, DWORD PTR _vertices$1[ebp]
  00161	50		 push	 eax
  00162	6b 4d f8 0c	 imul	 ecx, DWORD PTR _count$[ebp], 12
  00166	0f b7 91 06 00
	00 00		 movzx	 edx, WORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[ecx+6]
  0016d	52		 push	 edx
  0016e	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 211  : 		}
; 212  : 		else

  00173	eb 2b		 jmp	 SHORT $LN8@draw_tempo
$LN7@draw_tempo:

; 213  : 		{
; 214  : 
; 215  : 			vertices = get_d3d_line_vertices_points_address ();

  00175	e8 00 00 00 00	 call	 ?get_d3d_line_vertices_points_address@@YGPAU_D3DTLVERTEX@@XZ ; get_d3d_line_vertices_points_address
  0017a	89 45 f4	 mov	 DWORD PTR _vertices$1[ebp], eax

; 216  : 
; 217  : 			memcpy ( vertices, &temporary_vertices[vertex_index], sizeof ( D3DTLVERTEX ) * 2 );

  0017d	6a 40		 push	 64			; 00000040H
  0017f	8b 45 fc	 mov	 eax, DWORD PTR _vertex_index$[ebp]
  00182	c1 e0 05	 shl	 eax, 5
  00185	05 00 00 00 00	 add	 eax, OFFSET ?temporary_vertices@@3PAU_D3DTLVERTEX@@A
  0018a	50		 push	 eax
  0018b	8b 4d f4	 mov	 ecx, DWORD PTR _vertices$1[ebp]
  0018e	51		 push	 ecx
  0018f	e8 00 00 00 00	 call	 _memcpy
  00194	83 c4 0c	 add	 esp, 12			; 0000000cH

; 218  : 
; 219  : 			draw_line_primitive ( vertices );

  00197	8b 45 f4	 mov	 eax, DWORD PTR _vertices$1[ebp]
  0019a	50		 push	 eax
  0019b	e8 00 00 00 00	 call	 ?draw_line_primitive@@YGXPAU_D3DTLVERTEX@@@Z ; draw_line_primitive
$LN8@draw_tempo:

; 220  : 		}
; 221  : 
; 222  : 		vertex_index += temporary_polygons[count].number_of_vertices;

  001a0	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  001a4	0f b7 88 06 00
	00 00		 movzx	 ecx, WORD PTR ?temporary_polygons@@3PAUBUFFERED_TRANSLUCENT_POLYGON@@A[eax+6]
  001ab	03 4d fc	 add	 ecx, DWORD PTR _vertex_index$[ebp]
  001ae	89 4d fc	 mov	 DWORD PTR _vertex_index$[ebp], ecx

; 223  : 	}

  001b1	e9 71 fe ff ff	 jmp	 $LN2@draw_tempo
$LN1@draw_tempo:

; 224  : }

  001b6	5f		 pop	 edi
  001b7	5e		 pop	 esi
  001b8	5b		 pop	 ebx
  001b9	8b e5		 mov	 esp, ebp
  001bb	5d		 pop	 ebp
  001bc	c3		 ret	 0
?draw_temporary_translucent_polygons@@YGXXZ ENDP	; draw_temporary_translucent_polygons
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tempbuf.c
;	COMDAT ?get_number_of_temporary_translucent_polygons@@YGHXZ
_TEXT	SEGMENT
?get_number_of_temporary_translucent_polygons@@YGHXZ PROC ; get_number_of_temporary_translucent_polygons, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 
; 146  : 	return ( number_of_temporary_polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_temporary_polygons@@3HA

; 147  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_number_of_temporary_translucent_polygons@@YGHXZ ENDP ; get_number_of_temporary_translucent_polygons
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tempbuf.c
;	COMDAT ?reset_temporary_buffered_translucent_polygons@@YGXXZ
_TEXT	SEGMENT
?reset_temporary_buffered_translucent_polygons@@YGXXZ PROC ; reset_temporary_buffered_translucent_polygons, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 133  : 
; 134  : 	number_of_temporary_polygons = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_temporary_polygons@@3HA, 0

; 135  : 
; 136  : 	number_of_temporary_vertices = 0;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_temporary_vertices@@3HA, 0

; 137  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?reset_temporary_buffered_translucent_polygons@@YGXXZ ENDP ; reset_temporary_buffered_translucent_polygons
_TEXT	ENDS
END
