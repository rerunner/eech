; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\fixed\pylon\pylon.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_atan2f
PUBLIC	_cosf
PUBLIC	_fmodf
PUBLIC	_sinf
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z ; calculate_pylon_heading
PUBLIC	?get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z ; get_pylon_cable_lines_in_sector
PUBLIC	?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA ; `calculate_pylon_heading'::`1'::__LINE__Var
PUBLIC	??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA ; `get_pylon_cable_lines_in_sector'::`1'::__LINE__Var
PUBLIC	??_C@_09NAAGAKP@sector_en@			; `string'
PUBLIC	__real@402c000000000000
PUBLIC	__real@40490fdb
PUBLIC	__real@40c00000
PUBLIC	__real@40c90fdb
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_fmod:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_pylon_sag_value@@YGMH@Z:PROC		; get_pylon_sag_value
EXTRN	?get_pylon_sub_type@@YG?AW4PYLON_TYPES@@H@Z:PROC ; get_pylon_sub_type
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A:BYTE ; pylon_attachment_database
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?pylon_sector_line_points@@3PAUVEC3D@@A DD 01H DUP (?)	; pylon_sector_line_points
_BSS	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@402c000000000000
CONST	SEGMENT
__real@402c000000000000 DQ 0402c000000000000r	; 14
CONST	ENDS
;	COMDAT ??_C@_09NAAGAKP@sector_en@
CONST	SEGMENT
??_C@_09NAAGAKP@sector_en@ DB 'sector_en', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA DD 0a7H ; `get_pylon_cable_lines_in_sector'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\fixed\pylon\pylon.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA DD 051H ; `calculate_pylon_heading'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\pylon\pylon.c
;	COMDAT ?get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z
_TEXT	SEGMENT
tv618 = -228						; size = 8
tv405 = -228						; size = 4
tv236 = -228						; size = 4
tv195 = -228						; size = 4
tv166 = -228						; size = 4
tv139 = -228						; size = 4
tv83 = -228						; size = 4
tv591 = -224						; size = 4
tv578 = -224						; size = 4
tv568 = -224						; size = 4
tv555 = -224						; size = 4
tv397 = -224						; size = 4
tv228 = -224						; size = 4
tv187 = -224						; size = 4
tv158 = -224						; size = 4
tv131 = -224						; size = 4
tv75 = -224						; size = 4
_pos$ = -156						; size = 72
_d$ = -84						; size = 12
_number_of_pylons_in_sector$ = -72			; size = 4
_max_number_of_lines$ = -68				; size = 4
_number_of_points$ = -64				; size = 4
_next_pylon_type$ = -60					; size = 4
_this_pylon_type$ = -56					; size = 4
_point_loop$ = -52					; size = 4
_cable_loop$ = -48					; size = 4
_next_pylon_offset$ = -44				; size = 12
_this_pylon_offset$ = -32				; size = 12
_next_pylon_heading$ = -20				; size = 4
_this_pylon_heading$ = -16				; size = 4
_succ$ = -12						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_sector_en$ = 8						; size = 4
_number_of_lines$ = 12					; size = 4
?get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z PROC ; get_pylon_cable_lines_in_sector, COMDAT

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 168  : 	entity
; 169  : 		*en;
; 170  : 
; 171  : 	pylon
; 172  : 		*raw,
; 173  : 		*succ;
; 174  : 
; 175  : 	float
; 176  : 		this_pylon_heading,
; 177  : 		next_pylon_heading;
; 178  : 
; 179  : 	vec3d
; 180  : 		this_pylon_offset,
; 181  : 		next_pylon_offset;
; 182  : 
; 183  : 	int
; 184  : 		cable_loop,
; 185  : 		point_loop,
; 186  : 		this_pylon_type,
; 187  : 		next_pylon_type,
; 188  : 		number_of_points,
; 189  : 		max_number_of_lines,
; 190  : 		number_of_pylons_in_sector;
; 191  : 
; 192  : 	vec3d
; 193  : 		d,
; 194  : 		pos [NUMBER_OF_PYLON_CABLE_POINTS];
; 195  : 
; 196  : 	ASSERT (sector_en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN18@get_pylon_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  00017	83 c0 1d	 add	 eax, 29			; 0000001dH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_09NAAGAKP@sector_en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@get_pylon_:

; 197  : 
; 198  : 	*number_of_lines = 0;

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _number_of_lines$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 199  : 
; 200  : 	number_of_points = 0;

  00033	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _number_of_points$[ebp], 0

; 201  : 
; 202  : 	number_of_pylons_in_sector = 0;

  0003a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _number_of_pylons_in_sector$[ebp], 0

; 203  : 
; 204  : 	//
; 205  : 	// count number of pylons in sector
; 206  : 	//
; 207  : 
; 208  : 	en = get_local_entity_first_child (sector_en, LIST_TYPE_SECTOR);

  00041	83 7d 08 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  00045	74 0d		 je	 SHORT $LN28@get_pylon_
  00047	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00052	eb 24		 jmp	 SHORT $LN29@get_pylon_
$LN28@get_pylon_:
  00054	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  0005a	83 c2 29	 add	 edx, 41			; 00000029H
  0005d	52		 push	 edx
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006e	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN29@get_pylon_:
  00078	b9 01 00 00 00	 mov	 ecx, 1
  0007d	85 c9		 test	 ecx, ecx
  0007f	74 0c		 je	 SHORT $LN30@get_pylon_
  00081	c7 85 1c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv83[ebp], 33	; 00000021H
  0008b	eb 24		 jmp	 SHORT $LN31@get_pylon_
$LN30@get_pylon_:
  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  00093	83 c2 29	 add	 edx, 41			; 00000029H
  00096	52		 push	 edx
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a7	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN31@get_pylon_:
  000b1	6a 21		 push	 33			; 00000021H
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _sector_en$[ebp]
  000b6	51		 push	 ecx
  000b7	69 95 20 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv75[ebp], 180
  000c1	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000c7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000ce	ff d1		 call	 ecx
  000d0	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@get_pylon_:

; 209  : 
; 210  : 	while (en)

  000d3	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000d7	0f 84 a8 00 00
	00		 je	 $LN3@get_pylon_

; 211  : 	{
; 212  : 		if (en->type == ENTITY_TYPE_PYLON)

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000e0	83 38 15	 cmp	 DWORD PTR [eax], 21	; 00000015H
  000e3	75 09		 jne	 SHORT $LN19@get_pylon_

; 213  : 		{
; 214  : 			number_of_pylons_in_sector ++;

  000e5	8b 45 b8	 mov	 eax, DWORD PTR _number_of_pylons_in_sector$[ebp]
  000e8	83 c0 01	 add	 eax, 1
  000eb	89 45 b8	 mov	 DWORD PTR _number_of_pylons_in_sector$[ebp], eax
$LN19@get_pylon_:

; 215  : 		}
; 216  : 
; 217  : 		en = get_local_entity_child_succ (en, LIST_TYPE_SECTOR);

  000ee	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000f2	74 0d		 je	 SHORT $LN32@get_pylon_
  000f4	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f9	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv131[ebp], ecx
  000ff	eb 24		 jmp	 SHORT $LN33@get_pylon_
$LN32@get_pylon_:
  00101	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  00107	83 c2 32	 add	 edx, 50			; 00000032H
  0010a	52		 push	 edx
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00110	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011b	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv131[ebp], 0
$LN33@get_pylon_:
  00125	b9 01 00 00 00	 mov	 ecx, 1
  0012a	85 c9		 test	 ecx, ecx
  0012c	74 0c		 je	 SHORT $LN34@get_pylon_
  0012e	c7 85 1c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv139[ebp], 33 ; 00000021H
  00138	eb 24		 jmp	 SHORT $LN35@get_pylon_
$LN34@get_pylon_:
  0013a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  00140	83 c2 32	 add	 edx, 50			; 00000032H
  00143	52		 push	 edx
  00144	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00154	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv139[ebp], 0
$LN35@get_pylon_:
  0015e	6a 21		 push	 33			; 00000021H
  00160	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00163	51		 push	 ecx
  00164	69 95 20 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv131[ebp], 180
  0016e	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv139[ebp]
  00174	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0017b	ff d1		 call	 ecx
  0017d	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 218  : 	}

  00180	e9 4e ff ff ff	 jmp	 $LN2@get_pylon_
$LN3@get_pylon_:

; 219  : 
; 220  : 	if (number_of_pylons_in_sector == 0)

  00185	83 7d b8 00	 cmp	 DWORD PTR _number_of_pylons_in_sector$[ebp], 0
  00189	75 07		 jne	 SHORT $LN20@get_pylon_

; 221  : 	{
; 222  : 		return NULL;

  0018b	33 c0		 xor	 eax, eax
  0018d	e9 9d 06 00 00	 jmp	 $LN26@get_pylon_
$LN20@get_pylon_:

; 223  : 	}
; 224  : 
; 225  : 	max_number_of_lines = number_of_pylons_in_sector * NUM_PYLON_ATTACHMENT_POINTS * (NUMBER_OF_PYLON_CABLE_POINTS - 1);

  00192	6b 45 b8 06	 imul	 eax, DWORD PTR _number_of_pylons_in_sector$[ebp], 6
  00196	6b c8 05	 imul	 ecx, eax, 5
  00199	89 4d bc	 mov	 DWORD PTR _max_number_of_lines$[ebp], ecx

; 226  : 
; 227  : 	pylon_sector_line_points = (vec3d *) malloc_fast_mem (sizeof (vec3d) * max_number_of_lines * 2);

  0019c	6b 45 bc 0c	 imul	 eax, DWORD PTR _max_number_of_lines$[ebp], 12
  001a0	d1 e0		 shl	 eax, 1
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  001a8	a3 00 00 00 00	 mov	 DWORD PTR ?pylon_sector_line_points@@3PAUVEC3D@@A, eax

; 228  : 
; 229  : 	//
; 230  : 	// process each pylon pair
; 231  : 	//
; 232  : 
; 233  : 	en = get_local_entity_first_child (sector_en, LIST_TYPE_SECTOR);

  001ad	83 7d 08 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  001b1	74 0d		 je	 SHORT $LN36@get_pylon_
  001b3	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  001b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b8	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv158[ebp], ecx
  001be	eb 24		 jmp	 SHORT $LN37@get_pylon_
$LN36@get_pylon_:
  001c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  001c6	83 c2 42	 add	 edx, 66			; 00000042H
  001c9	52		 push	 edx
  001ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d4	50		 push	 eax
  001d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001da	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN37@get_pylon_:
  001e4	b9 01 00 00 00	 mov	 ecx, 1
  001e9	85 c9		 test	 ecx, ecx
  001eb	74 0c		 je	 SHORT $LN38@get_pylon_
  001ed	c7 85 1c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv166[ebp], 33 ; 00000021H
  001f7	eb 24		 jmp	 SHORT $LN39@get_pylon_
$LN38@get_pylon_:
  001f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  001ff	83 c2 42	 add	 edx, 66			; 00000042H
  00202	52		 push	 edx
  00203	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00208	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0020d	50		 push	 eax
  0020e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00213	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
$LN39@get_pylon_:
  0021d	6a 21		 push	 33			; 00000021H
  0021f	8b 4d 08	 mov	 ecx, DWORD PTR _sector_en$[ebp]
  00222	51		 push	 ecx
  00223	69 95 20 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv158[ebp], 180
  0022d	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv166[ebp]
  00233	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0023a	ff d1		 call	 ecx
  0023c	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN4@get_pylon_:

; 234  : 
; 235  : 	while (en)

  0023f	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00243	0f 84 c0 05 00
	00		 je	 $LN5@get_pylon_

; 236  : 	{
; 237  : 		if (en->type == ENTITY_TYPE_PYLON)

  00249	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0024c	83 38 15	 cmp	 DWORD PTR [eax], 21	; 00000015H
  0024f	0f 85 17 05 00
	00		 jne	 $LN16@get_pylon_

; 238  : 		{
; 239  : 			raw = (pylon *) get_local_entity_data (en);

  00255	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00258	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0025b	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 240  : 
; 241  : 			if (raw->fix.alive)

  0025e	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00261	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00264	c1 e9 14	 shr	 ecx, 20			; 00000014H
  00267	83 e1 01	 and	 ecx, 1
  0026a	0f 84 fc 04 00
	00		 je	 $LN16@get_pylon_

; 242  : 			{
; 243  : 
; 244  : 				this_pylon_heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  00270	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00274	74 0d		 je	 SHORT $LN40@get_pylon_
  00276	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00279	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027b	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv187[ebp], ecx
  00281	eb 24		 jmp	 SHORT $LN41@get_pylon_
$LN40@get_pylon_:
  00283	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  00289	83 c2 4d	 add	 edx, 77			; 0000004dH
  0028c	52		 push	 edx
  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00292	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029d	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv187[ebp], 0
$LN41@get_pylon_:
  002a7	b9 01 00 00 00	 mov	 ecx, 1
  002ac	85 c9		 test	 ecx, ecx
  002ae	74 0c		 je	 SHORT $LN42@get_pylon_
  002b0	c7 85 1c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv195[ebp], 52 ; 00000034H
  002ba	eb 24		 jmp	 SHORT $LN43@get_pylon_
$LN42@get_pylon_:
  002bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  002c2	83 c2 4d	 add	 edx, 77			; 0000004dH
  002c5	52		 push	 edx
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002d0	50		 push	 eax
  002d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d6	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN43@get_pylon_:
  002e0	6a 34		 push	 52			; 00000034H
  002e2	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  002e5	51		 push	 ecx
  002e6	69 95 20 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv187[ebp], 700
  002f0	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv195[ebp]
  002f6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002fd	ff d1		 call	 ecx
  002ff	d9 5d f0	 fstp	 DWORD PTR _this_pylon_heading$[ebp]

; 245  : 
; 246  : 				this_pylon_type = get_pylon_sub_type (raw->fix.sub_type);

  00302	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00305	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00308	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0030e	51		 push	 ecx
  0030f	e8 00 00 00 00	 call	 ?get_pylon_sub_type@@YG?AW4PYLON_TYPES@@H@Z ; get_pylon_sub_type
  00314	89 45 c8	 mov	 DWORD PTR _this_pylon_type$[ebp], eax

; 247  : 
; 248  : 				if (raw->succ)

  00317	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0031a	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  0031e	0f 84 48 04 00
	00		 je	 $LN16@get_pylon_

; 249  : 				{
; 250  : 					succ = (pylon *) get_local_entity_data (raw->succ);

  00324	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00327	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0032a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0032d	89 55 f4	 mov	 DWORD PTR _succ$[ebp], edx

; 251  : 
; 252  : 					if (succ->fix.alive)

  00330	8b 45 f4	 mov	 eax, DWORD PTR _succ$[ebp]
  00333	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00336	c1 e9 14	 shr	 ecx, 20			; 00000014H
  00339	83 e1 01	 and	 ecx, 1
  0033c	0f 84 2a 04 00
	00		 je	 $LN16@get_pylon_

; 253  : 					{	
; 254  : 						next_pylon_type = get_pylon_sub_type (succ->fix.sub_type);

  00342	8b 45 f4	 mov	 eax, DWORD PTR _succ$[ebp]
  00345	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00348	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0034e	51		 push	 ecx
  0034f	e8 00 00 00 00	 call	 ?get_pylon_sub_type@@YG?AW4PYLON_TYPES@@H@Z ; get_pylon_sub_type
  00354	89 45 c4	 mov	 DWORD PTR _next_pylon_type$[ebp], eax

; 255  : 
; 256  : 						next_pylon_heading = get_local_entity_float_value (raw->succ, FLOAT_TYPE_HEADING);

  00357	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0035a	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  0035e	74 10		 je	 SHORT $LN44@get_pylon_
  00360	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00363	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00366	8b 02		 mov	 eax, DWORD PTR [edx]
  00368	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv228[ebp], eax
  0036e	eb 25		 jmp	 SHORT $LN45@get_pylon_
$LN44@get_pylon_:
  00370	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  00376	83 c1 59	 add	 ecx, 89			; 00000059H
  00379	51		 push	 ecx
  0037a	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0037f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00385	52		 push	 edx
  00386	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0038b	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv228[ebp], 0
$LN45@get_pylon_:
  00395	b8 01 00 00 00	 mov	 eax, 1
  0039a	85 c0		 test	 eax, eax
  0039c	74 0c		 je	 SHORT $LN46@get_pylon_
  0039e	c7 85 1c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv236[ebp], 52 ; 00000034H
  003a8	eb 25		 jmp	 SHORT $LN47@get_pylon_
$LN46@get_pylon_:
  003aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  003b0	83 c1 59	 add	 ecx, 89			; 00000059H
  003b3	51		 push	 ecx
  003b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  003bf	52		 push	 edx
  003c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c5	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv236[ebp], 0
$LN47@get_pylon_:
  003cf	6a 34		 push	 52			; 00000034H
  003d1	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  003d4	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  003d7	51		 push	 ecx
  003d8	69 95 20 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv228[ebp], 700
  003e2	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv236[ebp]
  003e8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  003ef	ff d1		 call	 ecx
  003f1	d9 5d ec	 fstp	 DWORD PTR _next_pylon_heading$[ebp]

; 257  : 		
; 258  : 						for (cable_loop = NUM_PYLON_ATTACHMENT_POINTS - 1; cable_loop >= 0; cable_loop --)

  003f4	c7 45 d0 05 00
	00 00		 mov	 DWORD PTR _cable_loop$[ebp], 5
  003fb	eb 09		 jmp	 SHORT $LN8@get_pylon_
$LN6@get_pylon_:
  003fd	8b 45 d0	 mov	 eax, DWORD PTR _cable_loop$[ebp]
  00400	83 e8 01	 sub	 eax, 1
  00403	89 45 d0	 mov	 DWORD PTR _cable_loop$[ebp], eax
$LN8@get_pylon_:
  00406	83 7d d0 00	 cmp	 DWORD PTR _cable_loop$[ebp], 0
  0040a	0f 8c e5 02 00
	00		 jl	 $LN7@get_pylon_

; 259  : 						{
; 260  : 		
; 261  : 							this_pylon_offset = pylon_attachment_offset (this_pylon_type, cable_loop);

  00410	6b 45 c8 54	 imul	 eax, DWORD PTR _this_pylon_type$[ebp], 84
  00414	6b 4d d0 0c	 imul	 ecx, DWORD PTR _cable_loop$[ebp], 12
  00418	8d 94 08 0c 00
	00 00		 lea	 edx, DWORD PTR ?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A[eax+ecx+12]
  0041f	8b 02		 mov	 eax, DWORD PTR [edx]
  00421	89 45 e0	 mov	 DWORD PTR _this_pylon_offset$[ebp], eax
  00424	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00427	89 4d e4	 mov	 DWORD PTR _this_pylon_offset$[ebp+4], ecx
  0042a	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0042d	89 55 e8	 mov	 DWORD PTR _this_pylon_offset$[ebp+8], edx

; 262  : 							next_pylon_offset = pylon_attachment_offset (next_pylon_type, cable_loop);

  00430	6b 45 c4 54	 imul	 eax, DWORD PTR _next_pylon_type$[ebp], 84
  00434	6b 4d d0 0c	 imul	 ecx, DWORD PTR _cable_loop$[ebp], 12
  00438	8d 94 08 0c 00
	00 00		 lea	 edx, DWORD PTR ?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A[eax+ecx+12]
  0043f	8b 02		 mov	 eax, DWORD PTR [edx]
  00441	89 45 d4	 mov	 DWORD PTR _next_pylon_offset$[ebp], eax
  00444	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00447	89 4d d8	 mov	 DWORD PTR _next_pylon_offset$[ebp+4], ecx
  0044a	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0044d	89 55 dc	 mov	 DWORD PTR _next_pylon_offset$[ebp+8], edx

; 263  : 		
; 264  : 							//
; 265  : 							// get first point
; 266  : 							//
; 267  : 							pos [0].x = raw->fix.position.x + (this_pylon_offset.x * cos (this_pylon_heading));

  00450	51		 push	 ecx
  00451	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  00456	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045b	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00460	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv555[ebp]
  00466	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv555[ebp]
  0046e	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _this_pylon_offset$[ebp]
  00473	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00476	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0047a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0047f	6b d1 00	 imul	 edx, ecx, 0
  00482	f3 0f 11 84 15
	64 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx], xmm0

; 268  : 							pos [0].y = raw->fix.position.y + this_pylon_offset.y;

  0048b	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0048e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00493	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _this_pylon_offset$[ebp+4]
  00498	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0049d	6b d1 00	 imul	 edx, ecx, 0
  004a0	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 269  : 							pos [0].z = raw->fix.position.z - (this_pylon_offset.x * sin (this_pylon_heading));

  004a9	51		 push	 ecx
  004aa	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  004af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b4	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  004b9	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv568[ebp]
  004bf	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv568[ebp]
  004c7	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _this_pylon_offset$[ebp]
  004cc	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  004cf	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  004d4	f3 0f 5c c8	 subss	 xmm1, xmm0
  004d8	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004dd	6b d1 00	 imul	 edx, ecx, 0
  004e0	f3 0f 11 8c 15
	6c ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+8], xmm1

; 270  : 		
; 271  : 							//
; 272  : 							// get last point
; 273  : 							//
; 274  : 							pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].x = succ->fix.position.x + (next_pylon_offset.x * cos (next_pylon_heading));

  004e9	51		 push	 ecx
  004ea	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _next_pylon_heading$[ebp]
  004ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f4	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  004f9	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv578[ebp]
  004ff	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv578[ebp]
  00507	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _next_pylon_offset$[ebp]
  0050c	8b 45 f4	 mov	 eax, DWORD PTR _succ$[ebp]
  0050f	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00513	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00518	6b d1 05	 imul	 edx, ecx, 5
  0051b	f3 0f 11 84 15
	64 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx], xmm0

; 275  : 							pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].y = succ->fix.position.y + next_pylon_offset.y;

  00524	8b 45 f4	 mov	 eax, DWORD PTR _succ$[ebp]
  00527	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0052c	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _next_pylon_offset$[ebp+4]
  00531	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00536	6b d1 05	 imul	 edx, ecx, 5
  00539	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 276  : 							pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].z = succ->fix.position.z - (next_pylon_offset.x * sin (next_pylon_heading));

  00542	51		 push	 ecx
  00543	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _next_pylon_heading$[ebp]
  00548	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054d	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00552	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv591[ebp]
  00558	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv591[ebp]
  00560	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _next_pylon_offset$[ebp]
  00565	8b 45 f4	 mov	 eax, DWORD PTR _succ$[ebp]
  00568	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  0056d	f3 0f 5c c8	 subss	 xmm1, xmm0
  00571	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00576	6b d1 05	 imul	 edx, ecx, 5
  00579	f3 0f 11 8c 15
	6c ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+8], xmm1

; 277  : 		
; 278  : 							//
; 279  : 							// calculate intermediate points
; 280  : 							//
; 281  : 		
; 282  : 							d.x = (pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].x - pos [0].x) / NUMBER_OF_PYLON_CABLE_POINTS;

  00582	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00587	6b c8 05	 imul	 ecx, eax, 5
  0058a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0058f	6b c2 00	 imul	 eax, edx, 0
  00592	f3 0f 10 84 0d
	64 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx]
  0059b	f3 0f 5c 84 05
	64 ff ff ff	 subss	 xmm0, DWORD PTR _pos$[ebp+eax]
  005a4	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40c00000
  005ac	f3 0f 11 45 ac	 movss	 DWORD PTR _d$[ebp], xmm0

; 283  : 							d.y = (pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].y - pos [0].y) / NUMBER_OF_PYLON_CABLE_POINTS;

  005b1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005b6	6b c8 05	 imul	 ecx, eax, 5
  005b9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005be	6b c2 00	 imul	 eax, edx, 0
  005c1	f3 0f 10 84 0d
	68 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+4]
  005ca	f3 0f 5c 84 05
	68 ff ff ff	 subss	 xmm0, DWORD PTR _pos$[ebp+eax+4]
  005d3	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40c00000
  005db	f3 0f 11 45 b0	 movss	 DWORD PTR _d$[ebp+4], xmm0

; 284  : 							d.z = (pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].z - pos [0].z) / NUMBER_OF_PYLON_CABLE_POINTS;

  005e0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005e5	6b c8 05	 imul	 ecx, eax, 5
  005e8	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005ed	6b c2 00	 imul	 eax, edx, 0
  005f0	f3 0f 10 84 0d
	6c ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+8]
  005f9	f3 0f 5c 84 05
	6c ff ff ff	 subss	 xmm0, DWORD PTR _pos$[ebp+eax+8]
  00602	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40c00000
  0060a	f3 0f 11 45 b4	 movss	 DWORD PTR _d$[ebp+8], xmm0

; 285  : 		
; 286  : 							for (point_loop = 1 ; point_loop < NUMBER_OF_PYLON_CABLE_POINTS - 1 ; point_loop++)

  0060f	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR _point_loop$[ebp], 1
  00616	eb 09		 jmp	 SHORT $LN11@get_pylon_
$LN9@get_pylon_:
  00618	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  0061b	83 c0 01	 add	 eax, 1
  0061e	89 45 cc	 mov	 DWORD PTR _point_loop$[ebp], eax
$LN11@get_pylon_:
  00621	83 7d cc 05	 cmp	 DWORD PTR _point_loop$[ebp], 5
  00625	7d 6e		 jge	 SHORT $LN10@get_pylon_

; 287  : 							{
; 288  : 								pos [point_loop].x = pos [point_loop - 1].x + d.x;

  00627	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  0062a	83 e8 01	 sub	 eax, 1
  0062d	6b c8 0c	 imul	 ecx, eax, 12
  00630	f3 0f 10 84 0d
	64 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx]
  00639	f3 0f 58 45 ac	 addss	 xmm0, DWORD PTR _d$[ebp]
  0063e	6b 55 cc 0c	 imul	 edx, DWORD PTR _point_loop$[ebp], 12
  00642	f3 0f 11 84 15
	64 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx], xmm0

; 289  : 								pos [point_loop].y = pos [point_loop - 1].y + d.y;

  0064b	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  0064e	83 e8 01	 sub	 eax, 1
  00651	6b c8 0c	 imul	 ecx, eax, 12
  00654	f3 0f 10 84 0d
	68 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+4]
  0065d	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _d$[ebp+4]
  00662	6b 55 cc 0c	 imul	 edx, DWORD PTR _point_loop$[ebp], 12
  00666	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 290  : 								pos [point_loop].z = pos [point_loop - 1].z + d.z;

  0066f	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  00672	83 e8 01	 sub	 eax, 1
  00675	6b c8 0c	 imul	 ecx, eax, 12
  00678	f3 0f 10 84 0d
	6c ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+8]
  00681	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _d$[ebp+8]
  00686	6b 55 cc 0c	 imul	 edx, DWORD PTR _point_loop$[ebp], 12
  0068a	f3 0f 11 84 15
	6c ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+8], xmm0

; 291  : 							}

  00693	eb 83		 jmp	 SHORT $LN9@get_pylon_
$LN10@get_pylon_:

; 292  : 		
; 293  : 							//
; 294  : 							// add "sag"
; 295  : 							//
; 296  : 		
; 297  : 							for (point_loop = 1 ; point_loop < NUMBER_OF_PYLON_CABLE_POINTS - 1 ; point_loop++)

  00695	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR _point_loop$[ebp], 1
  0069c	eb 09		 jmp	 SHORT $LN14@get_pylon_
$LN12@get_pylon_:
  0069e	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  006a1	83 c0 01	 add	 eax, 1
  006a4	89 45 cc	 mov	 DWORD PTR _point_loop$[ebp], eax
$LN14@get_pylon_:
  006a7	83 7d cc 05	 cmp	 DWORD PTR _point_loop$[ebp], 5
  006ab	7d 43		 jge	 SHORT $LN13@get_pylon_

; 298  : 							{
; 299  : 								pos [point_loop].y -= (get_pylon_sag_value (point_loop) * MAX_PYLON_CABLE_SAG);

  006ad	6b 75 cc 0c	 imul	 esi, DWORD PTR _point_loop$[ebp], 12
  006b1	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  006b4	50		 push	 eax
  006b5	e8 00 00 00 00	 call	 ?get_pylon_sag_value@@YGMH@Z ; get_pylon_sag_value
  006ba	dd 9d 1c ff ff
	ff		 fstp	 QWORD PTR tv618[ebp]
  006c0	f2 0f 10 85 1c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv618[ebp]
  006c8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@402c000000000000
  006d0	f3 0f 5a 8c 35
	68 ff ff ff	 cvtss2sd xmm1, DWORD PTR _pos$[ebp+esi+4]
  006d9	f2 0f 5c c8	 subsd	 xmm1, xmm0
  006dd	6b 4d cc 0c	 imul	 ecx, DWORD PTR _point_loop$[ebp], 12
  006e1	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  006e5	f3 0f 11 84 0d
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+ecx+4], xmm0

; 300  : 							}

  006ee	eb ae		 jmp	 SHORT $LN12@get_pylon_
$LN13@get_pylon_:

; 301  : 						}

  006f0	e9 08 fd ff ff	 jmp	 $LN6@get_pylon_
$LN7@get_pylon_:

; 302  : 
; 303  : 						//
; 304  : 						// copy points into return list
; 305  : 						//
; 306  : 
; 307  : 						for (point_loop = 0 ; point_loop < NUMBER_OF_PYLON_CABLE_POINTS - 1 ; point_loop++)

  006f5	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _point_loop$[ebp], 0
  006fc	eb 09		 jmp	 SHORT $LN17@get_pylon_
$LN15@get_pylon_:
  006fe	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  00701	83 c0 01	 add	 eax, 1
  00704	89 45 cc	 mov	 DWORD PTR _point_loop$[ebp], eax
$LN17@get_pylon_:
  00707	83 7d cc 05	 cmp	 DWORD PTR _point_loop$[ebp], 5
  0070b	7d 5f		 jge	 SHORT $LN16@get_pylon_

; 308  : 						{
; 309  : 							pylon_sector_line_points [number_of_points] = pos [point_loop];

  0070d	6b 45 cc 0c	 imul	 eax, DWORD PTR _point_loop$[ebp], 12
  00711	8d 8c 05 64 ff
	ff ff		 lea	 ecx, DWORD PTR _pos$[ebp+eax]
  00718	6b 55 c0 0c	 imul	 edx, DWORD PTR _number_of_points$[ebp], 12
  0071c	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?pylon_sector_line_points@@3PAUVEC3D@@A
  00722	8b 01		 mov	 eax, DWORD PTR [ecx]
  00724	89 02		 mov	 DWORD PTR [edx], eax
  00726	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00729	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0072c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0072f	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 310  : 							pylon_sector_line_points [number_of_points + 1] = pos [point_loop + 1];

  00732	8b 45 cc	 mov	 eax, DWORD PTR _point_loop$[ebp]
  00735	83 c0 01	 add	 eax, 1
  00738	6b c8 0c	 imul	 ecx, eax, 12
  0073b	8d 94 0d 64 ff
	ff ff		 lea	 edx, DWORD PTR _pos$[ebp+ecx]
  00742	8b 45 c0	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  00745	83 c0 01	 add	 eax, 1
  00748	6b c8 0c	 imul	 ecx, eax, 12
  0074b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?pylon_sector_line_points@@3PAUVEC3D@@A
  00751	8b 02		 mov	 eax, DWORD PTR [edx]
  00753	89 01		 mov	 DWORD PTR [ecx], eax
  00755	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00758	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0075b	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0075e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 311  : 
; 312  : 							number_of_points += 2;

  00761	8b 45 c0	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  00764	83 c0 02	 add	 eax, 2
  00767	89 45 c0	 mov	 DWORD PTR _number_of_points$[ebp], eax

; 313  : 						}

  0076a	eb 92		 jmp	 SHORT $LN15@get_pylon_
$LN16@get_pylon_:

; 314  : 					}
; 315  : 				}
; 316  : 			}
; 317  : 		}
; 318  : 
; 319  : 		en = get_local_entity_child_succ (en, LIST_TYPE_SECTOR);

  0076c	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00770	74 0d		 je	 SHORT $LN48@get_pylon_
  00772	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00775	8b 08		 mov	 ecx, DWORD PTR [eax]
  00777	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv397[ebp], ecx
  0077d	eb 27		 jmp	 SHORT $LN49@get_pylon_
$LN48@get_pylon_:
  0077f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  00785	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  0078b	52		 push	 edx
  0078c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00791	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00796	50		 push	 eax
  00797	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0079c	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv397[ebp], 0
$LN49@get_pylon_:
  007a6	b9 01 00 00 00	 mov	 ecx, 1
  007ab	85 c9		 test	 ecx, ecx
  007ad	74 0c		 je	 SHORT $LN50@get_pylon_
  007af	c7 85 1c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv405[ebp], 33 ; 00000021H
  007b9	eb 27		 jmp	 SHORT $LN51@get_pylon_
$LN50@get_pylon_:
  007bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z@4JA
  007c1	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  007c7	52		 push	 edx
  007c8	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  007cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  007d2	50		 push	 eax
  007d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d8	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv405[ebp], 0
$LN51@get_pylon_:
  007e2	6a 21		 push	 33			; 00000021H
  007e4	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  007e7	51		 push	 ecx
  007e8	69 95 20 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv397[ebp], 180
  007f2	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv405[ebp]
  007f8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  007ff	ff d1		 call	 ecx
  00801	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 320  : 	}

  00804	e9 36 fa ff ff	 jmp	 $LN4@get_pylon_
$LN5@get_pylon_:

; 321  : 
; 322  : 	if (number_of_points == 0)

  00809	83 7d c0 00	 cmp	 DWORD PTR _number_of_points$[ebp], 0
  0080d	75 11		 jne	 SHORT $LN25@get_pylon_

; 323  : 	{
; 324  : 		free_mem (pylon_sector_line_points);

  0080f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pylon_sector_line_points@@3PAUVEC3D@@A
  00814	50		 push	 eax
  00815	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 325  : 
; 326  : 		return NULL;

  0081a	33 c0		 xor	 eax, eax
  0081c	eb 11		 jmp	 SHORT $LN26@get_pylon_

; 327  : 	}
; 328  : 	else

  0081e	eb 0f		 jmp	 SHORT $LN26@get_pylon_
$LN25@get_pylon_:

; 329  : 	{
; 330  : 	
; 331  : 		(*number_of_lines) = (number_of_points >> 1);

  00820	8b 45 c0	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  00823	d1 f8		 sar	 eax, 1
  00825	8b 4d 0c	 mov	 ecx, DWORD PTR _number_of_lines$[ebp]
  00828	89 01		 mov	 DWORD PTR [ecx], eax

; 332  : 
; 333  : 		return pylon_sector_line_points;

  0082a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pylon_sector_line_points@@3PAUVEC3D@@A
$LN26@get_pylon_:

; 334  : 	}
; 335  : }

  0082f	5f		 pop	 edi
  00830	5e		 pop	 esi
  00831	5b		 pop	 ebx
  00832	8b e5		 mov	 esp, ebp
  00834	5d		 pop	 ebp
  00835	c2 08 00	 ret	 8
?get_pylon_cable_lines_in_sector@@YGPAUVEC3D@@PAUENTITY@@PAH@Z ENDP ; get_pylon_cable_lines_in_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\pylon\pylon.c
;	COMDAT ?calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z
_TEXT	SEGMENT
tv228 = -148						; size = 4
tv155 = -148						; size = 4
tv133 = -148						; size = 4
tv79 = -148						; size = 4
tv188 = -144						; size = 4
tv147 = -144						; size = 4
tv93 = -144						; size = 4
tv71 = -144						; size = 4
_heading$ = -76						; size = 4
_dp$ = -72						; size = 12
_ds$ = -60						; size = 12
_v$ = -48						; size = 12
_en_pos$ = -36						; size = 12
_pred_pos$ = -24					; size = 12
_succ_pos$ = -12					; size = 12
_pred$ = 8						; size = 4
_en$ = 12						; size = 4
_succ$ = 16						; size = 4
_start$ = 20						; size = 4
_end$ = 24						; size = 4
?calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z PROC ; calculate_pylon_heading, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 82   : 	vec3d
; 83   : 		succ_pos,
; 84   : 		pred_pos,
; 85   : 		en_pos,
; 86   : 		v,
; 87   : 		ds,
; 88   : 		dp;
; 89   : 
; 90   : 	float
; 91   : 		heading;
; 92   : 
; 93   : 	//
; 94   : 	// determine the heading of the pylon based on the location of its neighbours
; 95   : 	//
; 96   : 
; 97   : 	if ( !en ) return;

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 05		 jne	 SHORT $LN2@calculate_
  00012	e9 88 03 00 00	 jmp	 $LN1@calculate_
$LN2@calculate_:

; 98   : 
; 99   : 	get_local_entity_vec3d( en, VEC3D_TYPE_POSITION, &en_pos );

  00017	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001b	74 0d		 je	 SHORT $LN10@calculate_
  0001d	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  00028	eb 24		 jmp	 SHORT $LN11@calculate_
$LN10@calculate_:
  0002a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  00030	83 c2 12	 add	 edx, 18			; 00000012H
  00033	52		 push	 edx
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00044	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv71[ebp], 0
$LN11@calculate_:
  0004e	b9 01 00 00 00	 mov	 ecx, 1
  00053	85 c9		 test	 ecx, ecx
  00055	74 0c		 je	 SHORT $LN12@calculate_
  00057	c7 85 6c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv79[ebp], 8
  00061	eb 24		 jmp	 SHORT $LN13@calculate_
$LN12@calculate_:
  00063	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  00069	83 c2 12	 add	 edx, 18			; 00000012H
  0006c	52		 push	 edx
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007d	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN13@calculate_:
  00087	8d 4d dc	 lea	 ecx, DWORD PTR _en_pos$[ebp]
  0008a	51		 push	 ecx
  0008b	6a 08		 push	 8
  0008d	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  00090	52		 push	 edx
  00091	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv71[ebp], 96
  00098	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv79[ebp]
  0009e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  000a5	ff d2		 call	 edx

; 100  : 
; 101  : 
; 102  : 	if ( !pred )

  000a7	83 7d 08 00	 cmp	 DWORD PTR _pred$[ebp], 0
  000ab	75 19		 jne	 SHORT $LN3@calculate_

; 103  : 	{
; 104  : 
; 105  : 		pred_pos = *start;

  000ad	8b 45 14	 mov	 eax, DWORD PTR _start$[ebp]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	89 4d e8	 mov	 DWORD PTR _pred_pos$[ebp], ecx
  000b5	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000b8	89 55 ec	 mov	 DWORD PTR _pred_pos$[ebp+4], edx
  000bb	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000be	89 45 f0	 mov	 DWORD PTR _pred_pos$[ebp+8], eax

; 106  : 	}		
; 107  : 	else

  000c1	e9 90 00 00 00	 jmp	 $LN4@calculate_
$LN3@calculate_:

; 108  : 	{
; 109  : 		get_local_entity_vec3d( pred, VEC3D_TYPE_POSITION, &pred_pos );

  000c6	83 7d 08 00	 cmp	 DWORD PTR _pred$[ebp], 0
  000ca	74 0d		 je	 SHORT $LN14@calculate_
  000cc	8b 45 08	 mov	 eax, DWORD PTR _pred$[ebp]
  000cf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d1	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv93[ebp], ecx
  000d7	eb 24		 jmp	 SHORT $LN15@calculate_
$LN14@calculate_:
  000d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  000df	83 c2 1c	 add	 edx, 28			; 0000001cH
  000e2	52		 push	 edx
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f3	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN15@calculate_:
  000fd	b9 01 00 00 00	 mov	 ecx, 1
  00102	85 c9		 test	 ecx, ecx
  00104	74 0c		 je	 SHORT $LN16@calculate_
  00106	c7 85 6c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv133[ebp], 8
  00110	eb 24		 jmp	 SHORT $LN17@calculate_
$LN16@calculate_:
  00112	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  00118	83 c2 1c	 add	 edx, 28			; 0000001cH
  0011b	52		 push	 edx
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012c	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN17@calculate_:
  00136	8d 4d e8	 lea	 ecx, DWORD PTR _pred_pos$[ebp]
  00139	51		 push	 ecx
  0013a	6a 08		 push	 8
  0013c	8b 55 08	 mov	 edx, DWORD PTR _pred$[ebp]
  0013f	52		 push	 edx
  00140	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv93[ebp], 96
  00147	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  0014d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00154	ff d2		 call	 edx
$LN4@calculate_:

; 110  : 	}		
; 111  : 
; 112  : 	if ( !succ )

  00156	83 7d 10 00	 cmp	 DWORD PTR _succ$[ebp], 0
  0015a	75 19		 jne	 SHORT $LN5@calculate_

; 113  : 	{
; 114  : 
; 115  : 		succ_pos = *end;

  0015c	8b 45 18	 mov	 eax, DWORD PTR _end$[ebp]
  0015f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00161	89 4d f4	 mov	 DWORD PTR _succ_pos$[ebp], ecx
  00164	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00167	89 55 f8	 mov	 DWORD PTR _succ_pos$[ebp+4], edx
  0016a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0016d	89 45 fc	 mov	 DWORD PTR _succ_pos$[ebp+8], eax

; 116  : 	}		
; 117  : 	else

  00170	e9 90 00 00 00	 jmp	 $LN6@calculate_
$LN5@calculate_:

; 118  : 	{
; 119  : 		get_local_entity_vec3d( succ, VEC3D_TYPE_POSITION, &succ_pos );

  00175	83 7d 10 00	 cmp	 DWORD PTR _succ$[ebp], 0
  00179	74 0d		 je	 SHORT $LN18@calculate_
  0017b	8b 45 10	 mov	 eax, DWORD PTR _succ$[ebp]
  0017e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00180	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  00186	eb 24		 jmp	 SHORT $LN19@calculate_
$LN18@calculate_:
  00188	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  0018e	83 c2 26	 add	 edx, 38			; 00000026H
  00191	52		 push	 edx
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a2	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], 0
$LN19@calculate_:
  001ac	b9 01 00 00 00	 mov	 ecx, 1
  001b1	85 c9		 test	 ecx, ecx
  001b3	74 0c		 je	 SHORT $LN20@calculate_
  001b5	c7 85 6c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv155[ebp], 8
  001bf	eb 24		 jmp	 SHORT $LN21@calculate_
$LN20@calculate_:
  001c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  001c7	83 c2 26	 add	 edx, 38			; 00000026H
  001ca	52		 push	 edx
  001cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001db	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv155[ebp], 0
$LN21@calculate_:
  001e5	8d 4d f4	 lea	 ecx, DWORD PTR _succ_pos$[ebp]
  001e8	51		 push	 ecx
  001e9	6a 08		 push	 8
  001eb	8b 55 10	 mov	 edx, DWORD PTR _succ$[ebp]
  001ee	52		 push	 edx
  001ef	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv147[ebp], 96
  001f6	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv155[ebp]
  001fc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00203	ff d2		 call	 edx
$LN6@calculate_:

; 120  : 	}
; 121  : 		
; 122  : 	ds.x = succ_pos.x - en_pos.x;

  00205	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _succ_pos$[ebp]
  0020a	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _en_pos$[ebp]
  0020f	f3 0f 11 45 c4	 movss	 DWORD PTR _ds$[ebp], xmm0

; 123  : 	ds.z = succ_pos.z - en_pos.z;

  00214	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _succ_pos$[ebp+8]
  00219	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _en_pos$[ebp+8]
  0021e	f3 0f 11 45 cc	 movss	 DWORD PTR _ds$[ebp+8], xmm0

; 124  : 	ds.y = 0;

  00223	0f 57 c0	 xorps	 xmm0, xmm0
  00226	f3 0f 11 45 c8	 movss	 DWORD PTR _ds$[ebp+4], xmm0

; 125  : 
; 126  : 	dp.x = en_pos.x - pred_pos.x;

  0022b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _en_pos$[ebp]
  00230	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _pred_pos$[ebp]
  00235	f3 0f 11 45 b8	 movss	 DWORD PTR _dp$[ebp], xmm0

; 127  : 	dp.z = en_pos.z - pred_pos.z;

  0023a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _en_pos$[ebp+8]
  0023f	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _pred_pos$[ebp+8]
  00244	f3 0f 11 45 c0	 movss	 DWORD PTR _dp$[ebp+8], xmm0

; 128  : 	dp.y = 0;

  00249	0f 57 c0	 xorps	 xmm0, xmm0
  0024c	f3 0f 11 45 bc	 movss	 DWORD PTR _dp$[ebp+4], xmm0

; 129  : 
; 130  : 	//
; 131  : 	// find the average of the two unit vectors
; 132  : 	//
; 133  : 
; 134  : 	normalise_3d_vector( &ds );

  00251	8d 45 c4	 lea	 eax, DWORD PTR _ds$[ebp]
  00254	50		 push	 eax
  00255	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  0025a	dd d8		 fstp	 ST(0)

; 135  : 	normalise_3d_vector( &dp );

  0025c	8d 45 b8	 lea	 eax, DWORD PTR _dp$[ebp]
  0025f	50		 push	 eax
  00260	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  00265	dd d8		 fstp	 ST(0)

; 136  : 
; 137  : 	v.x = ds.x + dp.x;

  00267	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _ds$[ebp]
  0026c	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _dp$[ebp]
  00271	f3 0f 11 45 d0	 movss	 DWORD PTR _v$[ebp], xmm0

; 138  : 	v.z = ds.z + dp.z;

  00276	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _ds$[ebp+8]
  0027b	f3 0f 58 45 c0	 addss	 xmm0, DWORD PTR _dp$[ebp+8]
  00280	f3 0f 11 45 d8	 movss	 DWORD PTR _v$[ebp+8], xmm0

; 139  : 	v.y = 0;

  00285	0f 57 c0	 xorps	 xmm0, xmm0
  00288	f3 0f 11 45 d4	 movss	 DWORD PTR _v$[ebp+4], xmm0

; 140  : 	
; 141  : 	normalise_3d_vector( &v );

  0028d	8d 45 d0	 lea	 eax, DWORD PTR _v$[ebp]
  00290	50		 push	 eax
  00291	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  00296	dd d8		 fstp	 ST(0)

; 142  : 
; 143  : 	heading = atan2( v.x, v.z );

  00298	51		 push	 ecx
  00299	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _v$[ebp+8]
  0029e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a3	51		 push	 ecx
  002a4	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _v$[ebp]
  002a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ae	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  002b3	d9 5d b4	 fstp	 DWORD PTR _heading$[ebp]

; 144  : 
; 145  : 	if (!succ)

  002b6	83 7d 10 00	 cmp	 DWORD PTR _succ$[ebp], 0
  002ba	75 29		 jne	 SHORT $LN7@calculate_

; 146  : 	{
; 147  : 		//
; 148  : 		// rotate last pylon in the link by 180deg ( so the terminator object is oriented correctly )
; 149  : 		//
; 150  : 
; 151  : 		heading = wrap_angle( heading + PI );

  002bc	51		 push	 ecx
  002bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  002c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ca	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  002cf	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40490fdb
  002d7	51		 push	 ecx
  002d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002dd	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  002e2	d9 5d b4	 fstp	 DWORD PTR _heading$[ebp]
$LN7@calculate_:

; 152  : 	}
; 153  : 
; 154  : 	if (heading < 0.0)

  002e5	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  002ea	0f 57 c9	 xorps	 xmm1, xmm1
  002ed	66 0f 2f c8	 comisd	 xmm1, xmm0
  002f1	76 12		 jbe	 SHORT $LN8@calculate_

; 155  : 	{
; 156  : 		heading += PI2;

  002f3	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  002f8	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  00300	f3 0f 11 45 b4	 movss	 DWORD PTR _heading$[ebp], xmm0
$LN8@calculate_:

; 157  : 	}
; 158  : 
; 159  : 	set_local_entity_float_value( en, FLOAT_TYPE_HEADING, heading );

  00305	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00309	74 0d		 je	 SHORT $LN22@calculate_
  0030b	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0030e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00310	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv188[ebp], ecx
  00316	eb 24		 jmp	 SHORT $LN23@calculate_
$LN22@calculate_:
  00318	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  0031e	83 c2 4e	 add	 edx, 78			; 0000004eH
  00321	52		 push	 edx
  00322	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00327	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0032c	50		 push	 eax
  0032d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00332	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv188[ebp], 0
$LN23@calculate_:
  0033c	b9 01 00 00 00	 mov	 ecx, 1
  00341	85 c9		 test	 ecx, ecx
  00343	74 0c		 je	 SHORT $LN24@calculate_
  00345	c7 85 6c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv228[ebp], 52 ; 00000034H
  0034f	eb 24		 jmp	 SHORT $LN25@calculate_
$LN24@calculate_:
  00351	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z@4JA
  00357	83 c2 4e	 add	 edx, 78			; 0000004eH
  0035a	52		 push	 edx
  0035b	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CLIENLOE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00360	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00365	50		 push	 eax
  00366	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036b	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv228[ebp], 0
$LN25@calculate_:
  00375	51		 push	 ecx
  00376	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0037b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00380	6a 34		 push	 52			; 00000034H
  00382	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00385	51		 push	 ecx
  00386	69 95 70 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv188[ebp], 700
  00390	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv228[ebp]
  00396	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  0039d	ff d1		 call	 ecx
$LN1@calculate_:

; 160  : }

  0039f	5f		 pop	 edi
  003a0	5e		 pop	 esi
  003a1	5b		 pop	 ebx
  003a2	8b e5		 mov	 esp, ebp
  003a4	5d		 pop	 ebp
  003a5	c2 14 00	 ret	 20			; 00000014H
?calculate_pylon_heading@@YGXPAUENTITY@@00PAUVEC3D@@1@Z ENDP ; calculate_pylon_heading
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
