; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\viewport.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?active_viewport@@3UVIEWPORT@@A			; active_viewport
PUBLIC	?active_int_viewport@@3UINT_VIEWPORT@@A		; active_int_viewport
PUBLIC	?left_clip_bit_array@@3PAHA			; left_clip_bit_array
PUBLIC	?right_clip_bit_array@@3PAHA			; right_clip_bit_array
PUBLIC	?top_clip_bit_array@@3PAHA			; top_clip_bit_array
PUBLIC	?bottom_clip_bit_array@@3PAHA			; bottom_clip_bit_array
_BSS	SEGMENT
?active_viewport@@3UVIEWPORT@@A DB 010H DUP (?)		; active_viewport
?active_int_viewport@@3UINT_VIEWPORT@@A DB 010H DUP (?)	; active_int_viewport
_BSS	ENDS
_DATA	SEGMENT
?left_clip_bit_array@@3PAHA DD 01H			; left_clip_bit_array
	DD	00H
?right_clip_bit_array@@3PAHA DD 04H			; right_clip_bit_array
	DD	00H
?top_clip_bit_array@@3PAHA DD 02H			; top_clip_bit_array
	DD	00H
?bottom_clip_bit_array@@3PAHA DD 08H			; bottom_clip_bit_array
	DD	00H
_DATA	ENDS
PUBLIC	?set_viewport@@YGXMMMM@Z			; set_viewport
PUBLIC	?set_basic_viewport@@YGXMMMM@Z			; set_basic_viewport
PUBLIC	?set_full_viewport@@YGXMMMMMM@Z			; set_full_viewport
PUBLIC	?clear_viewport@@YGXUREAL_COLOUR@@@Z		; clear_viewport
PUBLIC	?__LINE__Var@?0??set_viewport@@YGXMMMM@Z@4JA	; `set_viewport'::`1'::__LINE__Var
PUBLIC	??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0P@CEACBHI@x_min?5?$DM?$DN?5x_max@	; `string'
PUBLIC	??_C@_0P@HAOHCJDF@y_min?5?$DM?$DN?5y_max@	; `string'
PUBLIC	?__LINE__Var@?0??set_basic_viewport@@YGXMMMM@Z@4JA ; `set_basic_viewport'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_full_viewport@@YGXMMMMMM@Z@4JA ; `set_full_viewport'::`1'::__LINE__Var
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f800000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?set_block@@YGXHHHHUREAL_COLOUR@@@Z:PROC	; set_block
EXTRN	?flush_triangle_primitives@@YGXXZ:PROC		; flush_triangle_primitives
EXTRN	?flush_line_primitives@@YGXXZ:PROC		; flush_line_primitives
EXTRN	?f3d_set_viewport@@YGHPAU_D3DVIEWPORT7@@@Z:PROC	; f3d_set_viewport
EXTRN	__ftoui3:PROC
EXTRN	?d3d_initialised@@3HA:DWORD			; d3d_initialised
EXTRN	?d3d_valid@@3HA:DWORD				; d3d_valid
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_full_viewport@@YGXMMMMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_full_viewport@@YGXMMMMMM@Z@4JA DD 0d1H ; `set_full_viewport'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_basic_viewport@@YGXMMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_basic_viewport@@YGXMMMM@Z@4JA DD 0bcH ; `set_basic_viewport'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0P@HAOHCJDF@y_min?5?$DM?$DN?5y_max@
CONST	SEGMENT
??_C@_0P@HAOHCJDF@y_min?5?$DM?$DN?5y_max@ DB 'y_min <= y_max', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CEACBHI@x_min?5?$DM?$DN?5x_max@
CONST	SEGMENT
??_C@_0P@CEACBHI@x_min?5?$DM?$DN?5x_max@ DB 'x_min <= x_max', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\graphics\viewport.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_viewport@@YGXMMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_viewport@@YGXMMMM@Z@4JA DD 06cH	; `set_viewport'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.c
;	COMDAT ?clear_viewport@@YGXUREAL_COLOUR@@@Z
_TEXT	SEGMENT
_colour$ = 8						; size = 4
?clear_viewport@@YGXUREAL_COLOUR@@@Z PROC		; clear_viewport, COMDAT

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 283  : 
; 284  : 	set_block ( active_int_viewport.x_min,

  00009	8b 45 08	 mov	 eax, DWORD PTR _colour$[ebp]
  0000c	50		 push	 eax
  0000d	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?active_int_viewport@@3UINT_VIEWPORT@@A+12
  00013	51		 push	 ecx
  00014	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?active_int_viewport@@3UINT_VIEWPORT@@A+8
  0001a	52		 push	 edx
  0001b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?active_int_viewport@@3UINT_VIEWPORT@@A+4
  00020	50		 push	 eax
  00021	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_int_viewport@@3UINT_VIEWPORT@@A
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 285  : 					active_int_viewport.y_min,
; 286  : 					active_int_viewport.x_max,
; 287  : 					active_int_viewport.y_max,
; 288  : 					colour );
; 289  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?clear_viewport@@YGXUREAL_COLOUR@@@Z ENDP		; clear_viewport
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.c
;	COMDAT ?set_full_viewport@@YGXMMMMMM@Z
_TEXT	SEGMENT
_iheight$1 = -40					; size = 4
_iwidth$2 = -36						; size = 4
_fheight$3 = -32					; size = 4
_fwidth$4 = -28						; size = 4
_viewdata$5 = -24					; size = 24
_x_min$ = 8						; size = 4
_y_min$ = 12						; size = 4
_x_max$ = 16						; size = 4
_y_max$ = 20						; size = 4
_z_min$ = 24						; size = 4
_z_max$ = 28						; size = 4
?set_full_viewport@@YGXMMMMMM@Z PROC			; set_full_viewport, COMDAT

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 210  : 
; 211  : 	ASSERT ( x_min <= x_max );

  00009	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  0000e	0f 2f 45 08	 comiss	 xmm0, DWORD PTR _x_min$[ebp]
  00012	73 18		 jae	 SHORT $LN2@set_full_v
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_full_viewport@@YGXMMMMMM@Z@4JA
  00019	83 c0 02	 add	 eax, 2
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CEACBHI@x_min?5?$DM?$DN?5x_max@
  00027	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_full_v:

; 212  : 	ASSERT ( y_min <= y_max );

  0002c	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  00031	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _y_min$[ebp]
  00035	73 18		 jae	 SHORT $LN3@set_full_v
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_full_viewport@@YGXMMMMMM@Z@4JA
  0003c	83 c0 03	 add	 eax, 3
  0003f	50		 push	 eax
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HAOHCJDF@y_min?5?$DM?$DN?5y_max@
  0004a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_full_v:

; 213  : 
; 214  : 	active_viewport.x_min = x_min;

  0004f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00054	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A, xmm0

; 215  : 	active_viewport.x_max = x_max;

  0005c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00061	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8, xmm0

; 216  : 	active_viewport.y_min = y_min;

  00069	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  0006e	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4, xmm0

; 217  : 	active_viewport.y_max = y_max;

  00076	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  0007b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12, xmm0

; 218  : 
; 219  : 	convert_float_to_int (x_min, &active_int_viewport.x_min);

  00083	68 00 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A ; active_int_viewport
  00088	51		 push	 ecx
  00089	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  0008e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00093	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 220  : 	convert_float_to_int (x_max, &active_int_viewport.x_max);

  00098	68 08 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+8
  0009d	51		 push	 ecx
  0009e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  000a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a8	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 221  : 	convert_float_to_int (y_min, &active_int_viewport.y_min);

  000ad	68 04 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+4
  000b2	51		 push	 ecx
  000b3	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  000b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bd	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 222  : 	convert_float_to_int (y_max, &active_int_viewport.y_max);

  000c2	68 0c 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+12
  000c7	51		 push	 ecx
  000c8	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 223  : 
; 224  : 	if ( ( d3d_initialised ) && ( d3d_valid ) )

  000d7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_initialised@@3HA, 0 ; d3d_initialised
  000de	0f 84 d0 00 00
	00		 je	 $LN4@set_full_v
  000e4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_valid@@3HA, 0 ; d3d_valid
  000eb	0f 84 c3 00 00
	00		 je	 $LN4@set_full_v

; 225  : 	{
; 226  : 
; 227  : 
; 228  : 		D3DVIEWPORT7
; 229  : 			viewdata;
; 230  : 	
; 231  : 		float
; 232  : 			fwidth,
; 233  : 			fheight;
; 234  : 
; 235  : 		int
; 236  : 			iwidth,
; 237  : 			iheight;
; 238  : 
; 239  : 		viewdata.dwX = x_min;

  000f1	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  000f6	e8 00 00 00 00	 call	 __ftoui3
  000fb	89 45 e8	 mov	 DWORD PTR _viewdata$5[ebp], eax

; 240  : 		viewdata.dwY = y_min;

  000fe	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  00103	e8 00 00 00 00	 call	 __ftoui3
  00108	89 45 ec	 mov	 DWORD PTR _viewdata$5[ebp+4], eax

; 241  : 
; 242  : 		fwidth = x_max - x_min;

  0010b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00110	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _x_min$[ebp]
  00115	f3 0f 11 45 e4	 movss	 DWORD PTR _fwidth$4[ebp], xmm0

; 243  : 		fheight = y_max - y_min;

  0011a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  0011f	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _y_min$[ebp]
  00124	f3 0f 11 45 e0	 movss	 DWORD PTR _fheight$3[ebp], xmm0

; 244  : 
; 245  : 		iwidth = ( int ) fwidth;

  00129	f3 0f 2c 45 e4	 cvttss2si eax, DWORD PTR _fwidth$4[ebp]
  0012e	89 45 dc	 mov	 DWORD PTR _iwidth$2[ebp], eax

; 246  : 		iheight = ( int ) fheight;

  00131	f3 0f 2c 45 e0	 cvttss2si eax, DWORD PTR _fheight$3[ebp]
  00136	89 45 d8	 mov	 DWORD PTR _iheight$1[ebp], eax

; 247  : 
; 248  : 		if ( ( fwidth - ( float ) iwidth ) != 0.0 )

  00139	f3 0f 2a 45 dc	 cvtsi2ss xmm0, DWORD PTR _iwidth$2[ebp]
  0013e	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _fwidth$4[ebp]
  00143	f3 0f 5c c8	 subss	 xmm1, xmm0
  00147	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
  0014b	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00153	9f		 lahf
  00154	f6 c4 44	 test	 ah, 68			; 00000044H
  00157	7b 09		 jnp	 SHORT $LN5@set_full_v

; 249  : 		{
; 250  : 
; 251  : 			iwidth++;

  00159	8b 45 dc	 mov	 eax, DWORD PTR _iwidth$2[ebp]
  0015c	83 c0 01	 add	 eax, 1
  0015f	89 45 dc	 mov	 DWORD PTR _iwidth$2[ebp], eax
$LN5@set_full_v:

; 252  : 		}
; 253  : 
; 254  : 		if ( ( fheight - ( float ) iheight ) != 0.0 )

  00162	f3 0f 2a 45 d8	 cvtsi2ss xmm0, DWORD PTR _iheight$1[ebp]
  00167	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _fheight$3[ebp]
  0016c	f3 0f 5c c8	 subss	 xmm1, xmm0
  00170	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
  00174	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0017c	9f		 lahf
  0017d	f6 c4 44	 test	 ah, 68			; 00000044H
  00180	7b 09		 jnp	 SHORT $LN6@set_full_v

; 255  : 		{
; 256  : 
; 257  : 			iheight++;

  00182	8b 45 d8	 mov	 eax, DWORD PTR _iheight$1[ebp]
  00185	83 c0 01	 add	 eax, 1
  00188	89 45 d8	 mov	 DWORD PTR _iheight$1[ebp], eax
$LN6@set_full_v:

; 258  : 		}
; 259  : 
; 260  : 		viewdata.dwWidth = iwidth;

  0018b	8b 45 dc	 mov	 eax, DWORD PTR _iwidth$2[ebp]
  0018e	89 45 f0	 mov	 DWORD PTR _viewdata$5[ebp+8], eax

; 261  : 		viewdata.dwHeight = iheight;

  00191	8b 45 d8	 mov	 eax, DWORD PTR _iheight$1[ebp]
  00194	89 45 f4	 mov	 DWORD PTR _viewdata$5[ebp+12], eax

; 262  : 		
; 263  : 		viewdata.dvMinZ = z_max;

  00197	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  0019c	f3 0f 11 45 f8	 movss	 DWORD PTR _viewdata$5[ebp+16], xmm0

; 264  : 		viewdata.dvMaxZ = z_min;

  001a1	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _z_min$[ebp]
  001a6	f3 0f 11 45 fc	 movss	 DWORD PTR _viewdata$5[ebp+20], xmm0

; 265  : 
; 266  : 		f3d_set_viewport ( &viewdata );

  001ab	8d 45 e8	 lea	 eax, DWORD PTR _viewdata$5[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?f3d_set_viewport@@YGHPAU_D3DVIEWPORT7@@@Z ; f3d_set_viewport
$LN4@set_full_v:

; 267  : 
; 268  : #if REPORT_VIEWPORTS
; 269  : 		{
; 270  : 
; 271  : 			debug_log ( "Set viewport: %d, %d ( %d, %d ) [ %f %f ]", viewdata.dwX, viewdata.dwY, viewdata.dwWidth, viewdata.dwHeight, viewdata.dvMinZ, viewdata.dvMaxZ );
; 272  : 		}
; 273  : #endif
; 274  : 	}
; 275  : }

  001b4	5f		 pop	 edi
  001b5	5e		 pop	 esi
  001b6	5b		 pop	 ebx
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c2 18 00	 ret	 24			; 00000018H
?set_full_viewport@@YGXMMMMMM@Z ENDP			; set_full_viewport
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.c
;	COMDAT ?set_basic_viewport@@YGXMMMM@Z
_TEXT	SEGMENT
_x_min$ = 8						; size = 4
_y_min$ = 12						; size = 4
_x_max$ = 16						; size = 4
_y_max$ = 20						; size = 4
?set_basic_viewport@@YGXMMMM@Z PROC			; set_basic_viewport, COMDAT

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 189  : 
; 190  : 	ASSERT ( x_min <= x_max );

  00009	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  0000e	0f 2f 45 08	 comiss	 xmm0, DWORD PTR _x_min$[ebp]
  00012	73 18		 jae	 SHORT $LN2@set_basic_
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_basic_viewport@@YGXMMMM@Z@4JA
  00019	83 c0 02	 add	 eax, 2
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CEACBHI@x_min?5?$DM?$DN?5x_max@
  00027	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_basic_:

; 191  : 	ASSERT ( y_min <= y_max );

  0002c	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  00031	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _y_min$[ebp]
  00035	73 18		 jae	 SHORT $LN3@set_basic_
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_basic_viewport@@YGXMMMM@Z@4JA
  0003c	83 c0 03	 add	 eax, 3
  0003f	50		 push	 eax
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HAOHCJDF@y_min?5?$DM?$DN?5y_max@
  0004a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_basic_:

; 192  : 
; 193  : 	active_viewport.x_min = x_min;

  0004f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00054	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A, xmm0

; 194  : 	active_viewport.x_max = x_max;

  0005c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00061	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8, xmm0

; 195  : 	active_viewport.y_min = y_min;

  00069	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  0006e	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4, xmm0

; 196  : 	active_viewport.y_max = y_max;

  00076	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  0007b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12, xmm0

; 197  : 
; 198  : 	convert_float_to_int (x_min, &active_int_viewport.x_min);

  00083	68 00 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A ; active_int_viewport
  00088	51		 push	 ecx
  00089	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  0008e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00093	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 199  : 	convert_float_to_int (x_max, &active_int_viewport.x_max);

  00098	68 08 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+8
  0009d	51		 push	 ecx
  0009e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  000a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a8	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 200  : 	convert_float_to_int (y_min, &active_int_viewport.y_min);

  000ad	68 04 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+4
  000b2	51		 push	 ecx
  000b3	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  000b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bd	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 201  : 	convert_float_to_int (y_max, &active_int_viewport.y_max);

  000c2	68 0c 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+12
  000c7	51		 push	 ecx
  000c8	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 202  : }

  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 10 00	 ret	 16			; 00000010H
?set_basic_viewport@@YGXMMMM@Z ENDP			; set_basic_viewport
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.c
;	COMDAT ?set_viewport@@YGXMMMM@Z
_TEXT	SEGMENT
tv180 = -116						; size = 8
tv167 = -116						; size = 8
tv176 = -108						; size = 4
tv163 = -108						; size = 4
_iheight$1 = -40					; size = 4
_iwidth$2 = -36						; size = 4
_fheight$3 = -32					; size = 4
_fwidth$4 = -28						; size = 4
_viewdata$5 = -24					; size = 24
_x_min$ = 8						; size = 4
_y_min$ = 12						; size = 4
_x_max$ = 16						; size = 4
_y_max$ = 20						; size = 4
?set_viewport@@YGXMMMM@Z PROC				; set_viewport, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 109  : 
; 110  : 	ASSERT ( x_min <= x_max );

  00009	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  0000e	0f 2f 45 08	 comiss	 xmm0, DWORD PTR _x_min$[ebp]
  00012	73 18		 jae	 SHORT $LN2@set_viewpo
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_viewport@@YGXMMMM@Z@4JA
  00019	83 c0 02	 add	 eax, 2
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CEACBHI@x_min?5?$DM?$DN?5x_max@
  00027	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_viewpo:

; 111  : 	ASSERT ( y_min <= y_max );

  0002c	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  00031	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _y_min$[ebp]
  00035	73 18		 jae	 SHORT $LN3@set_viewpo
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_viewport@@YGXMMMM@Z@4JA
  0003c	83 c0 03	 add	 eax, 3
  0003f	50		 push	 eax
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@PJMGKHBM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HAOHCJDF@y_min?5?$DM?$DN?5y_max@
  0004a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_viewpo:

; 112  : 
; 113  : 	active_viewport.x_min = x_min;

  0004f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00054	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A, xmm0

; 114  : 	active_viewport.x_max = x_max;

  0005c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00061	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8, xmm0

; 115  : 	active_viewport.y_min = y_min;

  00069	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  0006e	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4, xmm0

; 116  : 	active_viewport.y_max = y_max;

  00076	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  0007b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12, xmm0

; 117  : 
; 118  : 	convert_float_to_int (x_min, &active_int_viewport.x_min);

  00083	68 00 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A ; active_int_viewport
  00088	51		 push	 ecx
  00089	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  0008e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00093	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 119  : 	convert_float_to_int (x_max, &active_int_viewport.x_max);

  00098	68 08 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+8
  0009d	51		 push	 ecx
  0009e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  000a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a8	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 120  : 	convert_float_to_int (y_min, &active_int_viewport.y_min);

  000ad	68 04 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+4
  000b2	51		 push	 ecx
  000b3	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  000b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bd	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 121  : 	convert_float_to_int (y_max, &active_int_viewport.y_max);

  000c2	68 0c 00 00 00	 push	 OFFSET ?active_int_viewport@@3UINT_VIEWPORT@@A+12
  000c7	51		 push	 ecx
  000c8	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 122  : 
; 123  : 	if ( ( d3d_initialised ) && ( d3d_valid ) )

  000d7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_initialised@@3HA, 0 ; d3d_initialised
  000de	0f 84 23 01 00
	00		 je	 $LN4@set_viewpo
  000e4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_valid@@3HA, 0 ; d3d_valid
  000eb	0f 84 16 01 00
	00		 je	 $LN4@set_viewpo

; 124  : 	{
; 125  : 
; 126  : 		D3DVIEWPORT7
; 127  : 			viewdata;
; 128  : 	
; 129  : 		float
; 130  : 			fwidth,
; 131  : 			fheight;
; 132  : 
; 133  : 		DWORD
; 134  : 			iwidth,
; 135  : 			iheight;
; 136  : 
; 137  : 		//
; 138  : 		// Flush graphics, or else we get any queued polys clipped wrongly!
; 139  : 		//
; 140  : 
; 141  : 		flush_triangle_primitives ();

  000f1	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives

; 142  : 
; 143  : 		flush_line_primitives ();

  000f6	e8 00 00 00 00	 call	 ?flush_line_primitives@@YGXXZ ; flush_line_primitives

; 144  : 
; 145  : 		viewdata.dwX = x_min;

  000fb	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00100	e8 00 00 00 00	 call	 __ftoui3
  00105	89 45 e8	 mov	 DWORD PTR _viewdata$5[ebp], eax

; 146  : 		viewdata.dwY = y_min;

  00108	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  0010d	e8 00 00 00 00	 call	 __ftoui3
  00112	89 45 ec	 mov	 DWORD PTR _viewdata$5[ebp+4], eax

; 147  : 
; 148  : 		fwidth = x_max - x_min;

  00115	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  0011a	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _x_min$[ebp]
  0011f	f3 0f 11 45 e4	 movss	 DWORD PTR _fwidth$4[ebp], xmm0

; 149  : 		fheight = y_max - y_min;

  00124	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  00129	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _y_min$[ebp]
  0012e	f3 0f 11 45 e0	 movss	 DWORD PTR _fheight$3[ebp], xmm0

; 150  : 
; 151  : 		iwidth = (DWORD) fwidth;

  00133	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fwidth$4[ebp]
  00138	e8 00 00 00 00	 call	 __ftoui3
  0013d	89 45 dc	 mov	 DWORD PTR _iwidth$2[ebp], eax

; 152  : 		iheight = (DWORD) fheight;

  00140	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fheight$3[ebp]
  00145	e8 00 00 00 00	 call	 __ftoui3
  0014a	89 45 d8	 mov	 DWORD PTR _iheight$1[ebp], eax

; 153  : 
; 154  : 		if ( ( fwidth - ( float ) iwidth ) != 0.0 )

  0014d	8b 45 dc	 mov	 eax, DWORD PTR _iwidth$2[ebp]
  00150	89 45 94	 mov	 DWORD PTR tv163[ebp], eax
  00153	f2 0f 2a 45 94	 cvtsi2sd xmm0, DWORD PTR tv163[ebp]
  00158	8b 4d 94	 mov	 ecx, DWORD PTR tv163[ebp]
  0015b	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0015e	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  00167	f2 0f 11 45 8c	 movsd	 QWORD PTR tv167[ebp], xmm0
  0016c	f2 0f 5a 45 8c	 cvtsd2ss xmm0, QWORD PTR tv167[ebp]
  00171	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _fwidth$4[ebp]
  00176	f3 0f 5c c8	 subss	 xmm1, xmm0
  0017a	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
  0017e	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00186	9f		 lahf
  00187	f6 c4 44	 test	 ah, 68			; 00000044H
  0018a	7b 09		 jnp	 SHORT $LN5@set_viewpo

; 155  : 		{
; 156  : 
; 157  : 			iwidth++;

  0018c	8b 45 dc	 mov	 eax, DWORD PTR _iwidth$2[ebp]
  0018f	83 c0 01	 add	 eax, 1
  00192	89 45 dc	 mov	 DWORD PTR _iwidth$2[ebp], eax
$LN5@set_viewpo:

; 158  : 		}
; 159  : 
; 160  : 		if ( ( fheight - ( float ) iheight ) != 0.0 )

  00195	8b 45 d8	 mov	 eax, DWORD PTR _iheight$1[ebp]
  00198	89 45 94	 mov	 DWORD PTR tv176[ebp], eax
  0019b	f2 0f 2a 45 94	 cvtsi2sd xmm0, DWORD PTR tv176[ebp]
  001a0	8b 4d 94	 mov	 ecx, DWORD PTR tv176[ebp]
  001a3	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  001a6	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  001af	f2 0f 11 45 8c	 movsd	 QWORD PTR tv180[ebp], xmm0
  001b4	f2 0f 5a 45 8c	 cvtsd2ss xmm0, QWORD PTR tv180[ebp]
  001b9	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _fheight$3[ebp]
  001be	f3 0f 5c c8	 subss	 xmm1, xmm0
  001c2	f3 0f 5a c1	 cvtss2sd xmm0, xmm1
  001c6	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  001ce	9f		 lahf
  001cf	f6 c4 44	 test	 ah, 68			; 00000044H
  001d2	7b 09		 jnp	 SHORT $LN6@set_viewpo

; 161  : 		{
; 162  : 
; 163  : 			iheight++;

  001d4	8b 45 d8	 mov	 eax, DWORD PTR _iheight$1[ebp]
  001d7	83 c0 01	 add	 eax, 1
  001da	89 45 d8	 mov	 DWORD PTR _iheight$1[ebp], eax
$LN6@set_viewpo:

; 164  : 		}
; 165  : 
; 166  : 		viewdata.dwWidth = iwidth;

  001dd	8b 45 dc	 mov	 eax, DWORD PTR _iwidth$2[ebp]
  001e0	89 45 f0	 mov	 DWORD PTR _viewdata$5[ebp+8], eax

; 167  : 		viewdata.dwHeight = iheight;

  001e3	8b 45 d8	 mov	 eax, DWORD PTR _iheight$1[ebp]
  001e6	89 45 f4	 mov	 DWORD PTR _viewdata$5[ebp+12], eax

; 168  : 		
; 169  : 		viewdata.dvMinZ = 0.0;

  001e9	0f 57 c0	 xorps	 xmm0, xmm0
  001ec	f3 0f 11 45 f8	 movss	 DWORD PTR _viewdata$5[ebp+16], xmm0

; 170  : 		viewdata.dvMaxZ = 1.0;

  001f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001f9	f3 0f 11 45 fc	 movss	 DWORD PTR _viewdata$5[ebp+20], xmm0

; 171  : 
; 172  : 		f3d_set_viewport ( &viewdata );

  001fe	8d 45 e8	 lea	 eax, DWORD PTR _viewdata$5[ebp]
  00201	50		 push	 eax
  00202	e8 00 00 00 00	 call	 ?f3d_set_viewport@@YGHPAU_D3DVIEWPORT7@@@Z ; f3d_set_viewport
$LN4@set_viewpo:

; 173  : 
; 174  : #if REPORT_VIEWPORTS
; 175  : 		{
; 176  : 
; 177  : 			debug_log ( "Set viewport: %d, %d ( %d, %d ) [ %f %f ]", viewdata.dwX, viewdata.dwY, viewdata.dwWidth, viewdata.dwHeight, viewdata.dvMinZ, viewdata.dvMaxZ );
; 178  : 		}
; 179  : #endif
; 180  : 	}
; 181  : }

  00207	5f		 pop	 edi
  00208	5e		 pop	 esi
  00209	5b		 pop	 ebx
  0020a	8b e5		 mov	 esp, ebp
  0020c	5d		 pop	 ebp
  0020d	c2 10 00	 ret	 16			; 00000010H
?set_viewport@@YGXMMMM@Z ENDP				; set_viewport
_TEXT	ENDS
END
