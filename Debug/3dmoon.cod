; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3dmoon.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?moon_colour@@3ULIGHT_COLOUR@@A			; moon_colour
PUBLIC	?moon_texture@@3PAUSCREEN@@A			; moon_texture
PUBLIC	?moon_3d_heading@@3MA				; moon_3d_heading
PUBLIC	?moon_3d_pitch@@3MA				; moon_3d_pitch
_BSS	SEGMENT
?moon_colour@@3ULIGHT_COLOUR@@A DB 010H DUP (?)		; moon_colour
?moon_texture@@3PAUSCREEN@@A DD 01H DUP (?)		; moon_texture
?moon_3d_heading@@3MA DD 01H DUP (?)			; moon_3d_heading
?moon_3d_pitch@@3MA DD 01H DUP (?)			; moon_3d_pitch
_BSS	ENDS
PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?generate_lookup_outcode@@YGHHHHH@Z		; generate_lookup_outcode
PUBLIC	?initialise_3d_moon@@YGXH@Z			; initialise_3d_moon
PUBLIC	?set_3d_moon_position@@YGXMM@Z			; set_3d_moon_position
PUBLIC	?set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z	; set_3d_moon_colour
PUBLIC	?draw_3d_moon@@YGXXZ				; draw_3d_moon
PUBLIC	?__LINE__Var@?0??set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA ; `set_3d_moon_colour'::`1'::__LINE__Var
PUBLIC	??_C@_0DB@HJBMILDM@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_06FBNLAHKA@colour@			; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@437f0000
PUBLIC	__real@463b8000
PUBLIC	__real@47c35000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z:PROC	; clip_3d_polygon
EXTRN	?suspend_d3d_fog@@YGXXZ:PROC			; suspend_d3d_fog
EXTRN	?reinstate_d3d_fog@@YGXXZ:PROC			; reinstate_d3d_fog
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC	; set_d3d_texture
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z:PROC ; hither_clip_3d_polygon
EXTRN	?horizon_clip_3d_polygon@@YGPAUVERTEX@@PAU1@@Z:PROC ; horizon_clip_3d_polygon
EXTRN	?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; apply_perspective_to_polygon_texture
EXTRN	?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; remove_perspective_from_polygon_texture
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?clip_3d_coord@@3HA:DWORD			; clip_3d_coord
EXTRN	?clip_hither@@3MA:DWORD				; clip_hither
EXTRN	?system_textures@@3PAPAUSCREEN@@A:BYTE		; system_textures
EXTRN	?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A:DWORD ; zbuffer_default_comparison
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	?visual_3d_vp@@3PAUVIEWPOINT@@A:DWORD		; visual_3d_vp
EXTRN	?rotation_3d@@3PAY02MA:BYTE			; rotation_3d
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@47c35000
CONST	SEGMENT
__real@47c35000 DD 047c35000r			; 100000
CONST	ENDS
;	COMDAT __real@463b8000
CONST	SEGMENT
__real@463b8000 DD 0463b8000r			; 12000
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_06FBNLAHKA@colour@
CONST	SEGMENT
??_C@_06FBNLAHKA@colour@ DB 'colour', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@HJBMILDM@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DB@HJBMILDM@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3dmoon.c', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA DD 06eH ; `set_3d_moon_colour'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dmoon.c
;	COMDAT ?draw_3d_moon@@YGXXZ
_TEXT	SEGMENT
_iymin$1 = -412						; size = 4
_iymax$2 = -408						; size = 4
_ixmin$3 = -404						; size = 4
_ixmax$4 = -400						; size = 4
_oymin$5 = -396						; size = 4
_oymax$6 = -392						; size = 4
_oxmin$7 = -388						; size = 4
_oxmax$8 = -384						; size = 4
_j$9 = -380						; size = 4
_i$10 = -376						; size = 4
_q$11 = -372						; size = 4
_z$12 = -368						; size = 4
_y$13 = -364						; size = 4
_x$14 = -360						; size = 4
_z$15 = -356						; size = 4
_y$16 = -352						; size = 4
_x$17 = -348						; size = 4
_specular$ = -344					; size = 4
_colour$ = -340						; size = 4
_moon_blue$ = -336					; size = 4
_moon_green$ = -332					; size = 4
_moon_red$ = -328					; size = 4
_moon_matrix$ = -324					; size = 36
_moon_depth$ = -288					; size = 4
_moon_height$ = -284					; size = 4
_moon_width$ = -280					; size = 4
_count$ = -276						; size = 4
_outcode2$ = -272					; size = 4
_outcode$ = -268					; size = 4
_moon_quad$ = -264					; size = 256
_vert$ = -8						; size = 4
_moon_polygon$ = -4					; size = 4
?draw_3d_moon@@YGXXZ PROC				; draw_3d_moon, COMDAT

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 01 00
	00		 sub	 esp, 476		; 000001dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 123  : 	
; 124  : 
; 125  : 	vertex
; 126  : 		*moon_polygon,
; 127  : 		*vert,
; 128  : 		moon_quad[4];
; 129  : 
; 130  : 	int
; 131  : 		outcode,
; 132  : 		outcode2,
; 133  : 		count;
; 134  : 
; 135  : 	float
; 136  : 		moon_width,
; 137  : 		moon_height,
; 138  : 		moon_depth;
; 139  : 
; 140  : 	matrix3x3
; 141  : 		moon_matrix;
; 142  : 
; 143  : 	int
; 144  : 		moon_red,
; 145  : 		moon_green,
; 146  : 		moon_blue;
; 147  : 
; 148  : 	real_colour
; 149  : 		colour,
; 150  : 		specular;
; 151  : 
; 152  : 	moon_polygon = moon_quad;

  0000c	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _moon_quad$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR _moon_polygon$[ebp], eax

; 153  : 
; 154  : 	moon_width = 12000;

  00015	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@463b8000
  0001d	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _moon_width$[ebp], xmm0

; 155  : 	moon_height = 12000;

  00025	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@463b8000
  0002d	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _moon_height$[ebp], xmm0

; 156  : 	moon_depth = 100000;

  00035	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47c35000
  0003d	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _moon_depth$[ebp], xmm0

; 157  : 
; 158  : 	moon_quad[0].next_vertex = &moon_quad[1];

  00045	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0004a	c1 e0 00	 shl	 eax, 0
  0004d	8d 8c 05 f8 fe
	ff ff		 lea	 ecx, DWORD PTR _moon_quad$[ebp+eax]
  00054	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00059	6b c2 00	 imul	 eax, edx, 0
  0005c	89 8c 05 20 ff
	ff ff		 mov	 DWORD PTR _moon_quad$[ebp+eax+40], ecx

; 159  : 	moon_quad[1].next_vertex = &moon_quad[2];

  00063	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00068	d1 e0		 shl	 eax, 1
  0006a	8d 8c 05 f8 fe
	ff ff		 lea	 ecx, DWORD PTR _moon_quad$[ebp+eax]
  00071	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00076	c1 e2 00	 shl	 edx, 0
  00079	89 8c 15 20 ff
	ff ff		 mov	 DWORD PTR _moon_quad$[ebp+edx+40], ecx

; 160  : 	moon_quad[2].next_vertex = &moon_quad[3];

  00080	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00085	6b c8 03	 imul	 ecx, eax, 3
  00088	8d 94 0d f8 fe
	ff ff		 lea	 edx, DWORD PTR _moon_quad$[ebp+ecx]
  0008f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00094	d1 e0		 shl	 eax, 1
  00096	89 94 05 20 ff
	ff ff		 mov	 DWORD PTR _moon_quad$[ebp+eax+40], edx

; 161  : 	moon_quad[3].next_vertex = NULL;

  0009d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000a2	6b c8 03	 imul	 ecx, eax, 3
  000a5	c7 84 0d 20 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _moon_quad$[ebp+ecx+40], 0

; 162  : 
; 163  : 	moon_quad[0].x = -moon_width/2;

  000b0	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_width$[ebp]
  000b8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000bf	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  000c7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000cc	6b c8 00	 imul	 ecx, eax, 0
  000cf	f3 0f 11 84 0d
	f8 fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx], xmm0

; 164  : 	moon_quad[0].y = moon_height/2;

  000d8	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_height$[ebp]
  000e0	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  000e8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000ed	6b c8 00	 imul	 ecx, eax, 0
  000f0	f3 0f 11 84 0d
	fc fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+4], xmm0

; 165  : 	moon_quad[0].z = moon_depth;

  000f9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000fe	6b c8 00	 imul	 ecx, eax, 0
  00101	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_depth$[ebp]
  00109	f3 0f 11 84 0d
	00 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+8], xmm0

; 166  : 	moon_quad[0].u = 0;

  00112	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00117	6b c8 00	 imul	 ecx, eax, 0
  0011a	0f 57 c0	 xorps	 xmm0, xmm0
  0011d	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+24], xmm0

; 167  : 	moon_quad[0].v = 0;

  00126	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0012b	6b c8 00	 imul	 ecx, eax, 0
  0012e	0f 57 c0	 xorps	 xmm0, xmm0
  00131	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+28], xmm0

; 168  : 
; 169  : 	moon_quad[1].x = moon_width/2;

  0013a	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_width$[ebp]
  00142	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  0014a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0014f	c1 e0 00	 shl	 eax, 0
  00152	f3 0f 11 84 05
	f8 fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax], xmm0

; 170  : 	moon_quad[1].y = moon_height/2;

  0015b	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_height$[ebp]
  00163	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  0016b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00170	c1 e0 00	 shl	 eax, 0
  00173	f3 0f 11 84 05
	fc fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+4], xmm0

; 171  : 	moon_quad[1].z = moon_depth;

  0017c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00181	c1 e0 00	 shl	 eax, 0
  00184	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_depth$[ebp]
  0018c	f3 0f 11 84 05
	00 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+8], xmm0

; 172  : 	moon_quad[1].u = 1;

  00195	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0019a	c1 e0 00	 shl	 eax, 0
  0019d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001a5	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+24], xmm0

; 173  : 	moon_quad[1].v = 0;

  001ae	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001b3	c1 e0 00	 shl	 eax, 0
  001b6	0f 57 c0	 xorps	 xmm0, xmm0
  001b9	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+28], xmm0

; 174  : 
; 175  : 	moon_quad[2].x = moon_width/2;

  001c2	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_width$[ebp]
  001ca	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  001d2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001d7	d1 e0		 shl	 eax, 1
  001d9	f3 0f 11 84 05
	f8 fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax], xmm0

; 176  : 	moon_quad[2].y = -moon_height/2;

  001e2	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_height$[ebp]
  001ea	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001f1	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  001f9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001fe	d1 e0		 shl	 eax, 1
  00200	f3 0f 11 84 05
	fc fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+4], xmm0

; 177  : 	moon_quad[2].z = moon_depth;

  00209	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0020e	d1 e0		 shl	 eax, 1
  00210	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_depth$[ebp]
  00218	f3 0f 11 84 05
	00 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+8], xmm0

; 178  : 	moon_quad[2].u = 1;

  00221	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00226	d1 e0		 shl	 eax, 1
  00228	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00230	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+24], xmm0

; 179  : 	moon_quad[2].v = 1;

  00239	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0023e	d1 e0		 shl	 eax, 1
  00240	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00248	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+28], xmm0

; 180  : 
; 181  : 	moon_quad[3].x = -moon_width/2;

  00251	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_width$[ebp]
  00259	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00260	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00268	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0026d	6b c8 03	 imul	 ecx, eax, 3
  00270	f3 0f 11 84 0d
	f8 fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx], xmm0

; 182  : 	moon_quad[3].y = -moon_height/2;

  00279	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_height$[ebp]
  00281	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00288	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00290	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00295	6b c8 03	 imul	 ecx, eax, 3
  00298	f3 0f 11 84 0d
	fc fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+4], xmm0

; 183  : 	moon_quad[3].z = moon_depth;

  002a1	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002a6	6b c8 03	 imul	 ecx, eax, 3
  002a9	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _moon_depth$[ebp]
  002b1	f3 0f 11 84 0d
	00 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+8], xmm0

; 184  : 	moon_quad[3].u = 0;

  002ba	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002bf	6b c8 03	 imul	 ecx, eax, 3
  002c2	0f 57 c0	 xorps	 xmm0, xmm0
  002c5	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+24], xmm0

; 185  : 	moon_quad[3].v = 1;

  002ce	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002d3	6b c8 03	 imul	 ecx, eax, 3
  002d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002de	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+ecx+28], xmm0

; 186  : 
; 187  : 	//
; 188  : 	// Rotate the moon into position
; 189  : 	//
; 190  : 
; 191  : 	get_3d_transformation_matrix ( moon_matrix, moon_3d_heading, moon_3d_pitch, 0 );

  002e7	51		 push	 ecx
  002e8	0f 57 c0	 xorps	 xmm0, xmm0
  002eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f0	51		 push	 ecx
  002f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?moon_3d_pitch@@3MA
  002f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fe	51		 push	 ecx
  002ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?moon_3d_heading@@3MA
  00307	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030c	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _moon_matrix$[ebp]
  00312	50		 push	 eax
  00313	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 192  : 
; 193  : 	for ( count = 0; count < 4; count++ )

  00318	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _count$[ebp], 0
  00322	eb 0f		 jmp	 SHORT $LN4@draw_3d_mo
$LN2@draw_3d_mo:
  00324	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  0032a	83 c0 01	 add	 eax, 1
  0032d	89 85 ec fe ff
	ff		 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_mo:
  00333	83 bd ec fe ff
	ff 04		 cmp	 DWORD PTR _count$[ebp], 4
  0033a	0f 8d 1b 02 00
	00		 jge	 $LN3@draw_3d_mo

; 194  : 	{
; 195  : 
; 196  : 		float
; 197  : 			x,
; 198  : 			y,
; 199  : 			z;
; 200  : 
; 201  : 
; 202  : 		x = moon_quad[count].x * moon_matrix[0][0] + moon_quad[count].y * moon_matrix[1][0] + moon_quad[count].z * moon_matrix[2][0];

  00340	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00346	c1 e0 06	 shl	 eax, 6
  00349	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0034e	6b d1 00	 imul	 edx, ecx, 0
  00351	8d 8c 15 bc fe
	ff ff		 lea	 ecx, DWORD PTR _moon_matrix$[ebp+edx]
  00358	ba 04 00 00 00	 mov	 edx, 4
  0035d	6b d2 00	 imul	 edx, edx, 0
  00360	f3 0f 10 84 05
	f8 fe ff ff	 movss	 xmm0, DWORD PTR _moon_quad$[ebp+eax]
  00369	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  0036e	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00374	c1 e0 06	 shl	 eax, 6
  00377	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0037c	c1 e1 00	 shl	 ecx, 0
  0037f	8d 94 0d bc fe
	ff ff		 lea	 edx, DWORD PTR _moon_matrix$[ebp+ecx]
  00386	b9 04 00 00 00	 mov	 ecx, 4
  0038b	6b c9 00	 imul	 ecx, ecx, 0
  0038e	f3 0f 10 8c 05
	fc fe ff ff	 movss	 xmm1, DWORD PTR _moon_quad$[ebp+eax+4]
  00397	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  0039c	f3 0f 58 c1	 addss	 xmm0, xmm1
  003a0	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _count$[ebp]
  003a6	c1 e2 06	 shl	 edx, 6
  003a9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003ae	d1 e0		 shl	 eax, 1
  003b0	8d 8c 05 bc fe
	ff ff		 lea	 ecx, DWORD PTR _moon_matrix$[ebp+eax]
  003b7	b8 04 00 00 00	 mov	 eax, 4
  003bc	6b c0 00	 imul	 eax, eax, 0
  003bf	f3 0f 10 8c 15
	00 ff ff ff	 movss	 xmm1, DWORD PTR _moon_quad$[ebp+edx+8]
  003c8	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  003cd	f3 0f 58 c1	 addss	 xmm0, xmm1
  003d1	f3 0f 11 85 a4
	fe ff ff	 movss	 DWORD PTR _x$17[ebp], xmm0

; 203  : 		y = moon_quad[count].x * moon_matrix[0][1] + moon_quad[count].y * moon_matrix[1][1] + moon_quad[count].z * moon_matrix[2][1];

  003d9	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  003df	c1 e0 06	 shl	 eax, 6
  003e2	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003e7	6b d1 00	 imul	 edx, ecx, 0
  003ea	8d 8c 15 bc fe
	ff ff		 lea	 ecx, DWORD PTR _moon_matrix$[ebp+edx]
  003f1	ba 04 00 00 00	 mov	 edx, 4
  003f6	c1 e2 00	 shl	 edx, 0
  003f9	f3 0f 10 84 05
	f8 fe ff ff	 movss	 xmm0, DWORD PTR _moon_quad$[ebp+eax]
  00402	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  00407	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  0040d	c1 e0 06	 shl	 eax, 6
  00410	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00415	c1 e1 00	 shl	 ecx, 0
  00418	8d 94 0d bc fe
	ff ff		 lea	 edx, DWORD PTR _moon_matrix$[ebp+ecx]
  0041f	b9 04 00 00 00	 mov	 ecx, 4
  00424	c1 e1 00	 shl	 ecx, 0
  00427	f3 0f 10 8c 05
	fc fe ff ff	 movss	 xmm1, DWORD PTR _moon_quad$[ebp+eax+4]
  00430	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  00435	f3 0f 58 c1	 addss	 xmm0, xmm1
  00439	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _count$[ebp]
  0043f	c1 e2 06	 shl	 edx, 6
  00442	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00447	d1 e0		 shl	 eax, 1
  00449	8d 8c 05 bc fe
	ff ff		 lea	 ecx, DWORD PTR _moon_matrix$[ebp+eax]
  00450	b8 04 00 00 00	 mov	 eax, 4
  00455	c1 e0 00	 shl	 eax, 0
  00458	f3 0f 10 8c 15
	00 ff ff ff	 movss	 xmm1, DWORD PTR _moon_quad$[ebp+edx+8]
  00461	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  00466	f3 0f 58 c1	 addss	 xmm0, xmm1
  0046a	f3 0f 11 85 a0
	fe ff ff	 movss	 DWORD PTR _y$16[ebp], xmm0

; 204  : 		z = moon_quad[count].x * moon_matrix[0][2] + moon_quad[count].y * moon_matrix[1][2] + moon_quad[count].z * moon_matrix[2][2];

  00472	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00478	c1 e0 06	 shl	 eax, 6
  0047b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00480	6b d1 00	 imul	 edx, ecx, 0
  00483	8d 8c 15 bc fe
	ff ff		 lea	 ecx, DWORD PTR _moon_matrix$[ebp+edx]
  0048a	ba 04 00 00 00	 mov	 edx, 4
  0048f	d1 e2		 shl	 edx, 1
  00491	f3 0f 10 84 05
	f8 fe ff ff	 movss	 xmm0, DWORD PTR _moon_quad$[ebp+eax]
  0049a	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  0049f	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  004a5	c1 e0 06	 shl	 eax, 6
  004a8	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004ad	c1 e1 00	 shl	 ecx, 0
  004b0	8d 94 0d bc fe
	ff ff		 lea	 edx, DWORD PTR _moon_matrix$[ebp+ecx]
  004b7	b9 04 00 00 00	 mov	 ecx, 4
  004bc	d1 e1		 shl	 ecx, 1
  004be	f3 0f 10 8c 05
	fc fe ff ff	 movss	 xmm1, DWORD PTR _moon_quad$[ebp+eax+4]
  004c7	f3 0f 59 0c 0a	 mulss	 xmm1, DWORD PTR [edx+ecx]
  004cc	f3 0f 58 c1	 addss	 xmm0, xmm1
  004d0	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _count$[ebp]
  004d6	c1 e2 06	 shl	 edx, 6
  004d9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004de	d1 e0		 shl	 eax, 1
  004e0	8d 8c 05 bc fe
	ff ff		 lea	 ecx, DWORD PTR _moon_matrix$[ebp+eax]
  004e7	b8 04 00 00 00	 mov	 eax, 4
  004ec	d1 e0		 shl	 eax, 1
  004ee	f3 0f 10 8c 15
	00 ff ff ff	 movss	 xmm1, DWORD PTR _moon_quad$[ebp+edx+8]
  004f7	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  004fc	f3 0f 58 c1	 addss	 xmm0, xmm1
  00500	f3 0f 11 85 9c
	fe ff ff	 movss	 DWORD PTR _z$15[ebp], xmm0

; 205  : 
; 206  : 		moon_quad[count].x = x;

  00508	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  0050e	c1 e0 06	 shl	 eax, 6
  00511	f3 0f 10 85 a4
	fe ff ff	 movss	 xmm0, DWORD PTR _x$17[ebp]
  00519	f3 0f 11 84 05
	f8 fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax], xmm0

; 207  : 		moon_quad[count].y = y;

  00522	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00528	c1 e0 06	 shl	 eax, 6
  0052b	f3 0f 10 85 a0
	fe ff ff	 movss	 xmm0, DWORD PTR _y$16[ebp]
  00533	f3 0f 11 84 05
	fc fe ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+4], xmm0

; 208  : 		moon_quad[count].z = z;

  0053c	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _count$[ebp]
  00542	c1 e0 06	 shl	 eax, 6
  00545	f3 0f 10 85 9c
	fe ff ff	 movss	 xmm0, DWORD PTR _z$15[ebp]
  0054d	f3 0f 11 84 05
	00 ff ff ff	 movss	 DWORD PTR _moon_quad$[ebp+eax+8], xmm0

; 209  : 	}

  00556	e9 c9 fd ff ff	 jmp	 $LN2@draw_3d_mo
$LN3@draw_3d_mo:

; 210  : 
; 211  : 	//
; 212  : 	// Clip the moon to the horizon
; 213  : 	//
; 214  : 
; 215  : 	clip_3d_coord = 0;

  0055b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 216  : 
; 217  : 	moon_polygon = horizon_clip_3d_polygon ( moon_quad );

  00565	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _moon_quad$[ebp]
  0056b	50		 push	 eax
  0056c	e8 00 00 00 00	 call	 ?horizon_clip_3d_polygon@@YGPAUVERTEX@@PAU1@@Z ; horizon_clip_3d_polygon
  00571	89 45 fc	 mov	 DWORD PTR _moon_polygon$[ebp], eax

; 218  : 
; 219  : 	if ( moon_polygon )

  00574	83 7d fc 00	 cmp	 DWORD PTR _moon_polygon$[ebp], 0
  00578	0f 84 12 07 00
	00		 je	 $LN7@draw_3d_mo

; 220  : 	{
; 221  : 
; 222  : 		//
; 223  : 		// Rotate the polygon around to the users viewpoint
; 224  : 		//
; 225  : 	
; 226  : 		vert = moon_polygon;

  0057e	8b 45 fc	 mov	 eax, DWORD PTR _moon_polygon$[ebp]
  00581	89 45 f8	 mov	 DWORD PTR _vert$[ebp], eax

; 227  : 	
; 228  : 		rotation_3d[0][0] = ( visual_3d_vp->xv.x );

  00584	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00589	6b c8 00	 imul	 ecx, eax, 0
  0058c	ba 04 00 00 00	 mov	 edx, 4
  00591	6b c2 00	 imul	 eax, edx, 0
  00594	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0059a	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  0059d	89 94 01 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], edx

; 229  : 		rotation_3d[0][1] = ( visual_3d_vp->yv.x );

  005a4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005a9	6b c8 00	 imul	 ecx, eax, 0
  005ac	ba 04 00 00 00	 mov	 edx, 4
  005b1	c1 e2 00	 shl	 edx, 0
  005b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  005b9	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  005bc	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], eax

; 230  : 		rotation_3d[0][2] = ( visual_3d_vp->zv.x );

  005c3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005c8	6b c8 00	 imul	 ecx, eax, 0
  005cb	ba 04 00 00 00	 mov	 edx, 4
  005d0	d1 e2		 shl	 edx, 1
  005d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  005d7	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  005da	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], eax

; 231  : 	
; 232  : 		rotation_3d[1][0] = ( visual_3d_vp->xv.y );

  005e1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005e6	c1 e0 00	 shl	 eax, 0
  005e9	b9 04 00 00 00	 mov	 ecx, 4
  005ee	6b d1 00	 imul	 edx, ecx, 0
  005f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  005f7	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  005fa	89 8c 10 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], ecx

; 233  : 		rotation_3d[1][1] = ( visual_3d_vp->yv.y );

  00601	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00606	c1 e0 00	 shl	 eax, 0
  00609	b9 04 00 00 00	 mov	 ecx, 4
  0060e	c1 e1 00	 shl	 ecx, 0
  00611	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00617	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  0061a	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 234  : 		rotation_3d[1][2] = ( visual_3d_vp->zv.y );

  00621	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00626	c1 e0 00	 shl	 eax, 0
  00629	b9 04 00 00 00	 mov	 ecx, 4
  0062e	d1 e1		 shl	 ecx, 1
  00630	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00636	8b 52 28	 mov	 edx, DWORD PTR [edx+40]
  00639	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 235  : 	
; 236  : 		rotation_3d[2][0] = ( visual_3d_vp->xv.z );

  00640	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00645	d1 e0		 shl	 eax, 1
  00647	b9 04 00 00 00	 mov	 ecx, 4
  0064c	6b d1 00	 imul	 edx, ecx, 0
  0064f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00655	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00658	89 8c 10 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], ecx

; 237  : 		rotation_3d[2][1] = ( visual_3d_vp->yv.z );

  0065f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00664	d1 e0		 shl	 eax, 1
  00666	b9 04 00 00 00	 mov	 ecx, 4
  0066b	c1 e1 00	 shl	 ecx, 0
  0066e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00674	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  00677	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 238  : 		rotation_3d[2][2] = ( visual_3d_vp->zv.z );

  0067e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00683	d1 e0		 shl	 eax, 1
  00685	b9 04 00 00 00	 mov	 ecx, 4
  0068a	d1 e1		 shl	 ecx, 1
  0068c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00692	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00695	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 239  : 
; 240  : 		outcode = 0;

  0069c	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _outcode$[ebp], 0

; 241  : 
; 242  : 		outcode2 = CLIP_LEFT | CLIP_RIGHT | CLIP_TOP | CLIP_BOTTOM | CLIP_HITHER | CLIP_YONDER;

  006a6	c7 85 f0 fe ff
	ff 3f 00 00 00	 mov	 DWORD PTR _outcode2$[ebp], 63 ; 0000003fH
$LN5@draw_3d_mo:

; 243  : 
; 244  : 		while ( vert )

  006b0	83 7d f8 00	 cmp	 DWORD PTR _vert$[ebp], 0
  006b4	0f 84 a1 03 00
	00		 je	 $LN6@draw_3d_mo

; 245  : 		{
; 246  : 	
; 247  : 			float
; 248  : 				x,
; 249  : 				y,
; 250  : 				z;
; 251  : 	
; 252  : 			x = vert->x * rotation_3d[0][0] + vert->y * rotation_3d[1][0] + vert->z * rotation_3d[2][0];

  006ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006bf	6b c8 00	 imul	 ecx, eax, 0
  006c2	ba 04 00 00 00	 mov	 edx, 4
  006c7	6b c2 00	 imul	 eax, edx, 0
  006ca	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  006cd	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  006d1	f3 0f 59 84 01
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  006da	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006df	c1 e0 00	 shl	 eax, 0
  006e2	b9 04 00 00 00	 mov	 ecx, 4
  006e7	6b d1 00	 imul	 edx, ecx, 0
  006ea	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  006ed	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  006f2	f3 0f 59 8c 10
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  006fb	f3 0f 58 c1	 addss	 xmm0, xmm1
  006ff	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00704	d1 e2		 shl	 edx, 1
  00706	b8 04 00 00 00	 mov	 eax, 4
  0070b	6b c8 00	 imul	 ecx, eax, 0
  0070e	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00711	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00716	f3 0f 59 8c 0a
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx]
  0071f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00723	f3 0f 11 85 98
	fe ff ff	 movss	 DWORD PTR _x$14[ebp], xmm0

; 253  : 			y = vert->x * rotation_3d[0][1] + vert->y * rotation_3d[1][1] + vert->z * rotation_3d[2][1];

  0072b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00730	6b c8 00	 imul	 ecx, eax, 0
  00733	ba 04 00 00 00	 mov	 edx, 4
  00738	c1 e2 00	 shl	 edx, 0
  0073b	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0073e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00742	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  0074b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00750	c1 e1 00	 shl	 ecx, 0
  00753	ba 04 00 00 00	 mov	 edx, 4
  00758	c1 e2 00	 shl	 edx, 0
  0075b	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0075e	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  00763	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  0076c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00770	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00775	d1 e1		 shl	 ecx, 1
  00777	ba 04 00 00 00	 mov	 edx, 4
  0077c	c1 e2 00	 shl	 edx, 0
  0077f	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00782	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00787	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00790	f3 0f 58 c1	 addss	 xmm0, xmm1
  00794	f3 0f 11 85 94
	fe ff ff	 movss	 DWORD PTR _y$13[ebp], xmm0

; 254  : 			z = vert->x * rotation_3d[0][2] + vert->y * rotation_3d[1][2] + vert->z * rotation_3d[2][2];

  0079c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  007a1	6b c8 00	 imul	 ecx, eax, 0
  007a4	ba 04 00 00 00	 mov	 edx, 4
  007a9	d1 e2		 shl	 edx, 1
  007ab	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  007ae	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  007b2	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  007bb	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  007c0	c1 e1 00	 shl	 ecx, 0
  007c3	ba 04 00 00 00	 mov	 edx, 4
  007c8	d1 e2		 shl	 edx, 1
  007ca	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  007cd	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  007d2	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  007db	f3 0f 58 c1	 addss	 xmm0, xmm1
  007df	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  007e4	d1 e1		 shl	 ecx, 1
  007e6	ba 04 00 00 00	 mov	 edx, 4
  007eb	d1 e2		 shl	 edx, 1
  007ed	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  007f0	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  007f5	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  007fe	f3 0f 58 c1	 addss	 xmm0, xmm1
  00802	f3 0f 11 85 90
	fe ff ff	 movss	 DWORD PTR _z$12[ebp], xmm0

; 255  : 
; 256  : 			x *= active_3d_environment->screen_i_scale;

  0080a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0080f	f3 0f 10 85 98
	fe ff ff	 movss	 xmm0, DWORD PTR _x$14[ebp]
  00817	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  0081b	f3 0f 11 85 98
	fe ff ff	 movss	 DWORD PTR _x$14[ebp], xmm0

; 257  : 			y *= active_3d_environment->screen_j_scale;

  00823	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00828	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _y$13[ebp]
  00830	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00835	f3 0f 11 85 94
	fe ff ff	 movss	 DWORD PTR _y$13[ebp], xmm0

; 258  : 	
; 259  : 			if ( *( ( int * ) &z ) >= *( ( int * ) &clip_hither ) )

  0083d	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR _z$12[ebp]
  00843	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?clip_hither@@3MA
  00849	0f 8c a2 01 00
	00		 jl	 $LN8@draw_3d_mo

; 260  : 			{
; 261  : 	
; 262  : 				float
; 263  : 					q,
; 264  : 					i,
; 265  : 					j;
; 266  : 	
; 267  : 				float
; 268  : 					oxmax,
; 269  : 					oxmin,
; 270  : 					oymax,
; 271  : 					oymin;
; 272  : 			
; 273  : 				int
; 274  : 					ixmax,
; 275  : 					ixmin,
; 276  : 					iymax,
; 277  : 					iymin;
; 278  : 			
; 279  : 				q = 1.0 / z;

  0084f	f3 0f 5a 85 90
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _z$12[ebp]
  00857	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0085f	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00863	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00867	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _q$11[ebp], xmm0

; 280  : 	
; 281  : 				vert->x = x;

  0086f	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00872	f3 0f 10 85 98
	fe ff ff	 movss	 xmm0, DWORD PTR _x$14[ebp]
  0087a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 282  : 				vert->y = y;

  0087e	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00881	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _y$13[ebp]
  00889	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 283  : 				vert->z = z;

  0088e	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00891	f3 0f 10 85 90
	fe ff ff	 movss	 xmm0, DWORD PTR _z$12[ebp]
  00899	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 284  : 				vert->q = q;

  0089e	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  008a1	f3 0f 10 85 8c
	fe ff ff	 movss	 xmm0, DWORD PTR _q$11[ebp]
  008a9	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 285  : 	
; 286  : 				i = ( x * q );

  008ae	f3 0f 10 85 98
	fe ff ff	 movss	 xmm0, DWORD PTR _x$14[ebp]
  008b6	f3 0f 59 85 8c
	fe ff ff	 mulss	 xmm0, DWORD PTR _q$11[ebp]
  008be	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _i$10[ebp], xmm0

; 287  : 				j = ( y * q );

  008c6	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _y$13[ebp]
  008ce	f3 0f 59 85 8c
	fe ff ff	 mulss	 xmm0, DWORD PTR _q$11[ebp]
  008d6	f3 0f 11 85 84
	fe ff ff	 movss	 DWORD PTR _j$9[ebp], xmm0

; 288  : 	
; 289  : 				vert->j = active_3d_environment->y_origin - j;

  008de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  008e3	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  008e8	f3 0f 5c 85 84
	fe ff ff	 subss	 xmm0, DWORD PTR _j$9[ebp]
  008f0	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  008f3	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 290  : 				vert->i = active_3d_environment->x_origin + i;

  008f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  008fd	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00902	f3 0f 58 85 88
	fe ff ff	 addss	 xmm0, DWORD PTR _i$10[ebp]
  0090a	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  0090d	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 291  : 	
; 292  : 				oxmax = active_viewport.x_max - vert->i;

  00912	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00915	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0091d	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  00922	f3 0f 11 85 80
	fe ff ff	 movss	 DWORD PTR _oxmax$8[ebp], xmm0

; 293  : 				oxmin = vert->i - active_viewport.x_min;

  0092a	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0092d	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00932	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  0093a	f3 0f 11 85 7c
	fe ff ff	 movss	 DWORD PTR _oxmin$7[ebp], xmm0

; 294  : 				oymax = active_viewport.y_max - vert->j;

  00942	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00945	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  0094d	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
  00952	f3 0f 11 85 78
	fe ff ff	 movss	 DWORD PTR _oymax$6[ebp], xmm0

; 295  : 				oymin = vert->j - active_viewport.y_min;

  0095a	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0095d	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00962	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  0096a	f3 0f 11 85 74
	fe ff ff	 movss	 DWORD PTR _oymin$5[ebp], xmm0

; 296  : 			
; 297  : 				ixmax = *( ( int * ) &oxmax );

  00972	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _oxmax$8[ebp]
  00978	89 85 70 fe ff
	ff		 mov	 DWORD PTR _ixmax$4[ebp], eax

; 298  : 				ixmin = *( ( int * ) &oxmin );

  0097e	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _oxmin$7[ebp]
  00984	89 85 6c fe ff
	ff		 mov	 DWORD PTR _ixmin$3[ebp], eax

; 299  : 				iymax = *( ( int * ) &oymax );

  0098a	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _oymax$6[ebp]
  00990	89 85 68 fe ff
	ff		 mov	 DWORD PTR _iymax$2[ebp], eax

; 300  : 				iymin = *( ( int * ) &oymin );

  00996	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _oymin$5[ebp]
  0099c	89 85 64 fe ff
	ff		 mov	 DWORD PTR _iymin$1[ebp], eax

; 301  : 			
; 302  : 				vert->outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  009a2	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _iymax$2[ebp]
  009a8	50		 push	 eax
  009a9	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _ixmax$4[ebp]
  009af	51		 push	 ecx
  009b0	8b 95 64 fe ff
	ff		 mov	 edx, DWORD PTR _iymin$1[ebp]
  009b6	52		 push	 edx
  009b7	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _ixmin$3[ebp]
  009bd	50		 push	 eax
  009be	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  009c3	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  009c6	88 41 2c	 mov	 BYTE PTR [ecx+44], al

; 303  : 
; 304  : 				outcode |= vert->outcode;

  009c9	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  009cc	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  009d0	0b 8d f4 fe ff
	ff		 or	 ecx, DWORD PTR _outcode$[ebp]
  009d6	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _outcode$[ebp], ecx

; 305  : 				outcode2 &= vert->outcode;

  009dc	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  009df	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  009e3	23 8d f0 fe ff
	ff		 and	 ecx, DWORD PTR _outcode2$[ebp]
  009e9	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _outcode2$[ebp], ecx

; 306  : 			}
; 307  : 			else

  009ef	eb 5c		 jmp	 SHORT $LN9@draw_3d_mo
$LN8@draw_3d_mo:

; 308  : 			{
; 309  : 	
; 310  : 				vert->outcode = CLIP_HITHER;

  009f1	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  009f4	c6 40 2c 20	 mov	 BYTE PTR [eax+44], 32	; 00000020H

; 311  : 				vert->z = z;

  009f8	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  009fb	f3 0f 10 85 90
	fe ff ff	 movss	 xmm0, DWORD PTR _z$12[ebp]
  00a03	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 312  : 				vert->x = x;

  00a08	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00a0b	f3 0f 10 85 98
	fe ff ff	 movss	 xmm0, DWORD PTR _x$14[ebp]
  00a13	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 313  : 				vert->y = y;

  00a17	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00a1a	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _y$13[ebp]
  00a22	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 314  : 
; 315  : 				outcode |= vert->outcode;

  00a27	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00a2a	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00a2e	0b 8d f4 fe ff
	ff		 or	 ecx, DWORD PTR _outcode$[ebp]
  00a34	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _outcode$[ebp], ecx

; 316  : 				outcode2 &= vert->outcode;

  00a3a	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00a3d	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00a41	23 8d f0 fe ff
	ff		 and	 ecx, DWORD PTR _outcode2$[ebp]
  00a47	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _outcode2$[ebp], ecx
$LN9@draw_3d_mo:

; 317  : 			}
; 318  : 	
; 319  : 			vert = vert->next_vertex;

  00a4d	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00a50	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00a53	89 4d f8	 mov	 DWORD PTR _vert$[ebp], ecx

; 320  : 		}

  00a56	e9 55 fc ff ff	 jmp	 $LN5@draw_3d_mo
$LN6@draw_3d_mo:

; 321  : 
; 322  : 		if ( outcode2 )

  00a5b	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _outcode2$[ebp], 0
  00a62	74 05		 je	 SHORT $LN10@draw_3d_mo

; 323  : 		{
; 324  : 
; 325  : 			return;

  00a64	e9 27 02 00 00	 jmp	 $LN1@draw_3d_mo
$LN10@draw_3d_mo:

; 326  : 		}
; 327  : 
; 328  : 
; 329  : 		if ( outcode & CLIP_HITHER )

  00a69	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _outcode$[ebp]
  00a6f	83 e0 20	 and	 eax, 32			; 00000020H
  00a72	74 1e		 je	 SHORT $LN12@draw_3d_mo

; 330  : 		{
; 331  : 	
; 332  : 			moon_polygon = hither_clip_3d_polygon ( moon_polygon, &outcode );

  00a74	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _outcode$[ebp]
  00a7a	50		 push	 eax
  00a7b	8b 4d fc	 mov	 ecx, DWORD PTR _moon_polygon$[ebp]
  00a7e	51		 push	 ecx
  00a7f	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00a84	89 45 fc	 mov	 DWORD PTR _moon_polygon$[ebp], eax

; 333  : 
; 334  : 			if ( !moon_polygon )

  00a87	83 7d fc 00	 cmp	 DWORD PTR _moon_polygon$[ebp], 0
  00a8b	75 05		 jne	 SHORT $LN12@draw_3d_mo

; 335  : 			{
; 336  : 
; 337  : 				return;

  00a8d	e9 fe 01 00 00	 jmp	 $LN1@draw_3d_mo
$LN12@draw_3d_mo:

; 338  : 			}
; 339  : 		}
; 340  : 	
; 341  : 		if ( outcode )

  00a92	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _outcode$[ebp], 0
  00a99	74 30		 je	 SHORT $LN13@draw_3d_mo

; 342  : 		{
; 343  : 
; 344  : 			apply_perspective_to_polygon_texture ( moon_polygon );

  00a9b	8b 45 fc	 mov	 eax, DWORD PTR _moon_polygon$[ebp]
  00a9e	50		 push	 eax
  00a9f	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 345  : 			
; 346  : 			moon_polygon = clip_3d_polygon ( moon_polygon, outcode );

  00aa4	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _outcode$[ebp]
  00aaa	50		 push	 eax
  00aab	8b 4d fc	 mov	 ecx, DWORD PTR _moon_polygon$[ebp]
  00aae	51		 push	 ecx
  00aaf	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00ab4	89 45 fc	 mov	 DWORD PTR _moon_polygon$[ebp], eax

; 347  : 
; 348  : 			if ( !moon_polygon )

  00ab7	83 7d fc 00	 cmp	 DWORD PTR _moon_polygon$[ebp], 0
  00abb	75 05		 jne	 SHORT $LN14@draw_3d_mo

; 349  : 			{
; 350  : 
; 351  : 				return;

  00abd	e9 ce 01 00 00	 jmp	 $LN1@draw_3d_mo
$LN14@draw_3d_mo:

; 352  : 			}
; 353  : 
; 354  : 			remove_perspective_from_polygon_texture ( moon_polygon );

  00ac2	8b 45 fc	 mov	 eax, DWORD PTR _moon_polygon$[ebp]
  00ac5	50		 push	 eax
  00ac6	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN13@draw_3d_mo:

; 355  : 		}
; 356  : 
; 357  : 		asm_convert_float_to_int ( ( moon_colour.red * 255 ), &moon_red );

  00acb	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _moon_red$[ebp]
  00ad1	50		 push	 eax
  00ad2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?moon_colour@@3ULIGHT_COLOUR@@A
  00ada	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00ae2	51		 push	 ecx
  00ae3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ae8	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 358  : 		asm_convert_float_to_int ( ( moon_colour.green * 255 ), &moon_green );

  00aed	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _moon_green$[ebp]
  00af3	50		 push	 eax
  00af4	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?moon_colour@@3ULIGHT_COLOUR@@A+4
  00afc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00b04	51		 push	 ecx
  00b05	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b0a	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 359  : 		asm_convert_float_to_int ( ( moon_colour.blue * 255 ), &moon_blue );

  00b0f	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _moon_blue$[ebp]
  00b15	50		 push	 eax
  00b16	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?moon_colour@@3ULIGHT_COLOUR@@A+8
  00b1e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00b26	51		 push	 ecx
  00b27	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b2c	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 360  : 
; 361  : 		colour.red = moon_red;

  00b31	8a 85 b8 fe ff
	ff		 mov	 al, BYTE PTR _moon_red$[ebp]
  00b37	88 85 ae fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+2], al

; 362  : 		colour.green = moon_green;

  00b3d	8a 85 b4 fe ff
	ff		 mov	 al, BYTE PTR _moon_green$[ebp]
  00b43	88 85 ad fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+1], al

; 363  : 		colour.blue = moon_blue;

  00b49	8a 85 b0 fe ff
	ff		 mov	 al, BYTE PTR _moon_blue$[ebp]
  00b4f	88 85 ac fe ff
	ff		 mov	 BYTE PTR _colour$[ebp], al

; 364  : 
; 365  : 		specular.colour = 0;

  00b55	c7 85 a8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _specular$[ebp], 0

; 366  : 
; 367  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, D3DCMP_ALWAYS );

  00b5f	6a 08		 push	 8
  00b61	6a 17		 push	 23			; 00000017H
  00b63	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 368  : 		set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, FALSE );

  00b68	6a 00		 push	 0
  00b6a	6a 0e		 push	 14			; 0000000eH
  00b6c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 369  : 	
; 370  : 		suspend_d3d_fog ();

  00b71	e8 00 00 00 00	 call	 ?suspend_d3d_fog@@YGXXZ	; suspend_d3d_fog

; 371  : 	
; 372  : 		set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00b76	6a 02		 push	 2
  00b78	6a 09		 push	 9
  00b7a	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 373  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, TRUE );

  00b7f	6a 01		 push	 1
  00b81	6a 1b		 push	 27			; 0000001bH
  00b83	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 374  : 		set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, ADDITIVE_SOURCE_BLEND );

  00b88	6a 02		 push	 2
  00b8a	6a 13		 push	 19			; 00000013H
  00b8c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 375  : 		set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, ADDITIVE_DESTINATION_BLEND );

  00b91	6a 02		 push	 2
  00b93	6a 14		 push	 20			; 00000014H
  00b95	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 376  : 
; 377  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_CLAMP );

  00b9a	6a 03		 push	 3
  00b9c	6a 0d		 push	 13			; 0000000dH
  00b9e	6a 00		 push	 0
  00ba0	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 378  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_CLAMP );

  00ba5	6a 03		 push	 3
  00ba7	6a 0e		 push	 14			; 0000000eH
  00ba9	6a 00		 push	 0
  00bab	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 379  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, D3DTFG_LINEAR );

  00bb0	6a 02		 push	 2
  00bb2	6a 10		 push	 16			; 00000010H
  00bb4	6a 00		 push	 0
  00bb6	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 380  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, D3DTFN_LINEAR );

  00bbb	6a 02		 push	 2
  00bbd	6a 11		 push	 17			; 00000011H
  00bbf	6a 00		 push	 0
  00bc1	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 381  : 
; 382  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00bc6	6a 04		 push	 4
  00bc8	6a 01		 push	 1
  00bca	6a 00		 push	 0
  00bcc	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 383  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG1, D3DTA_TEXTURE );

  00bd1	6a 02		 push	 2
  00bd3	6a 02		 push	 2
  00bd5	6a 00		 push	 0
  00bd7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 384  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE );

  00bdc	6a 00		 push	 0
  00bde	6a 03		 push	 3
  00be0	6a 00		 push	 0
  00be2	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 385  : 
; 386  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE );

  00be7	6a 04		 push	 4
  00be9	6a 04		 push	 4
  00beb	6a 00		 push	 0
  00bed	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 387  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE );

  00bf2	6a 02		 push	 2
  00bf4	6a 05		 push	 5
  00bf6	6a 00		 push	 0
  00bf8	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 388  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE );

  00bfd	6a 00		 push	 0
  00bff	6a 06		 push	 6
  00c01	6a 00		 push	 0
  00c03	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 389  : 
; 390  : 		set_d3d_texture ( 0, moon_texture );

  00c08	a1 00 00 00 00	 mov	 eax, DWORD PTR ?moon_texture@@3PAUSCREEN@@A ; moon_texture
  00c0d	50		 push	 eax
  00c0e	6a 00		 push	 0
  00c10	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 391  : 
; 392  : 		draw_wbuffered_flat_shaded_textured_polygon ( moon_polygon, colour, specular );

  00c15	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  00c1b	50		 push	 eax
  00c1c	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  00c22	51		 push	 ecx
  00c23	8b 55 fc	 mov	 edx, DWORD PTR _moon_polygon$[ebp]
  00c26	52		 push	 edx
  00c27	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 393  : 
; 394  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  00c2c	6a 00		 push	 0
  00c2e	6a 1b		 push	 27			; 0000001bH
  00c30	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 395  : 	
; 396  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  00c35	6a 01		 push	 1
  00c37	6a 01		 push	 1
  00c39	6a 00		 push	 0
  00c3b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 397  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG1, D3DTA_TEXTURE );

  00c40	6a 02		 push	 2
  00c42	6a 02		 push	 2
  00c44	6a 00		 push	 0
  00c46	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 398  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE );

  00c4b	6a 00		 push	 0
  00c4d	6a 03		 push	 3
  00c4f	6a 00		 push	 0
  00c51	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 399  : 		set_d3d_texture ( 0, NULL );

  00c56	6a 00		 push	 0
  00c58	6a 00		 push	 0
  00c5a	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 400  : 	
; 401  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAOP, D3DTOP_DISABLE );

  00c5f	6a 01		 push	 1
  00c61	6a 04		 push	 4
  00c63	6a 00		 push	 0
  00c65	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 402  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE );

  00c6a	6a 00		 push	 0
  00c6c	6a 06		 push	 6
  00c6e	6a 00		 push	 0
  00c70	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 403  : 	
; 404  : 		reinstate_d3d_fog ();

  00c75	e8 00 00 00 00	 call	 ?reinstate_d3d_fog@@YGXXZ ; reinstate_d3d_fog

; 405  : 	
; 406  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  00c7a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  00c7f	50		 push	 eax
  00c80	6a 17		 push	 23			; 00000017H
  00c82	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 407  : 		set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, TRUE );

  00c87	6a 01		 push	 1
  00c89	6a 0e		 push	 14			; 0000000eH
  00c8b	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN7@draw_3d_mo:
$LN1@draw_3d_mo:

; 408  : 	}
; 409  : }

  00c90	5f		 pop	 edi
  00c91	5e		 pop	 esi
  00c92	5b		 pop	 ebx
  00c93	8b e5		 mov	 esp, ebp
  00c95	5d		 pop	 ebp
  00c96	c3		 ret	 0
?draw_3d_moon@@YGXXZ ENDP				; draw_3d_moon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dmoon.c
;	COMDAT ?set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z
_TEXT	SEGMENT
_colour$ = 8						; size = 4
?set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z PROC	; set_3d_moon_colour, COMDAT

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 
; 112  : 	ASSERT ( colour );

  00009	83 7d 08 00	 cmp	 DWORD PTR _colour$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_moo
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@HJBMILDM@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06FBNLAHKA@colour@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_moo:

; 113  : 
; 114  : 	moon_colour = *colour;

  00027	8b 45 08	 mov	 eax, DWORD PTR _colour$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?moon_colour@@3ULIGHT_COLOUR@@A, ecx
  00032	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00035	89 15 04 00 00
	00		 mov	 DWORD PTR ?moon_colour@@3ULIGHT_COLOUR@@A+4, edx
  0003b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003e	89 0d 08 00 00
	00		 mov	 DWORD PTR ?moon_colour@@3ULIGHT_COLOUR@@A+8, ecx
  00044	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00047	89 15 0c 00 00
	00		 mov	 DWORD PTR ?moon_colour@@3ULIGHT_COLOUR@@A+12, edx

; 115  : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z ENDP	; set_3d_moon_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dmoon.c
;	COMDAT ?set_3d_moon_position@@YGXMM@Z
_TEXT	SEGMENT
_heading$ = 8						; size = 4
_pitch$ = 12						; size = 4
?set_3d_moon_position@@YGXMM@Z PROC			; set_3d_moon_position, COMDAT

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 99   : 
; 100  : 	moon_3d_heading = heading;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?moon_3d_heading@@3MA, xmm0

; 101  : 
; 102  : 	moon_3d_pitch = pitch;

  00016	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0001b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?moon_3d_pitch@@3MA, xmm0

; 103  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?set_3d_moon_position@@YGXMM@Z ENDP			; set_3d_moon_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dmoon.c
;	COMDAT ?initialise_3d_moon@@YGXH@Z
_TEXT	SEGMENT
_moon_index$ = 8					; size = 4
?initialise_3d_moon@@YGXH@Z PROC			; initialise_3d_moon, COMDAT

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 89   : 
; 90   : 	moon_texture = system_textures[moon_index];

  00009	8b 45 08	 mov	 eax, DWORD PTR _moon_index$[ebp]
  0000c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  00013	89 0d 00 00 00
	00		 mov	 DWORD PTR ?moon_texture@@3PAUSCREEN@@A, ecx ; moon_texture

; 91   : }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?initialise_3d_moon@@YGXH@Z ENDP			; initialise_3d_moon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.h
;	COMDAT ?generate_lookup_outcode@@YGHHHHH@Z
_TEXT	SEGMENT
_xmin$ = 8						; size = 4
_ymin$ = 12						; size = 4
_xmax$ = 16						; size = 4
_ymax$ = 20						; size = 4
?generate_lookup_outcode@@YGHHHHH@Z PROC		; generate_lookup_outcode, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 
; 201  : 	__asm mov eax, xmin;

  00009	8b 45 08	 mov	 eax, DWORD PTR _xmin$[ebp]
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _ymin$[ebp]
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR _xmax$[ebp]
  00012	8b 55 14	 mov	 edx, DWORD PTR _ymax$[ebp]
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	81 e3 00 00 00
	80		 and	 ebx, -2147483648	; 80000000H
  0001e	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00021	81 e2 00 00 00
	80		 and	 edx, -2147483648	; 80000000H
  00027	c1 eb 1e	 shr	 ebx, 30			; 0000001eH
  0002a	83 e0 01	 and	 eax, 1
  0002d	c1 ea 1c	 shr	 edx, 28			; 0000001cH
  00030	83 e1 04	 and	 ecx, 4
  00033	0b c3		 or	 eax, ebx
  00035	0b ca		 or	 ecx, edx
  00037	0b c1		 or	 eax, ecx
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?generate_lookup_outcode@@YGHHHHH@Z ENDP		; generate_lookup_outcode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
END
