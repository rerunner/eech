; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_fmodf
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?overload_smoke_list_draw_functions@@YGXXZ	; overload_smoke_list_draw_functions
PUBLIC	?initialise_smoke_list_draw_arrays@@YGXXZ	; initialise_smoke_list_draw_arrays
PUBLIC	?deinitialise_smoke_list_draw_arrays@@YGXXZ	; deinitialise_smoke_list_draw_arrays
PUBLIC	??_C@_0CD@HBKAJIJO@smoke?5trail?5has?5?$DO?5?$CFd?5points?5?$CI?5?$CF@ ; `string'
PUBLIC	?__LINE__Var@?0??calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z@4JA ; `calculate_smoke_trail_points'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@PAEMHMCB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0N@LIOJLJIJ@start?5?$CB?$DN?5end@		; `string'
PUBLIC	??_C@_0DK@KBOCOJDL@SMOKE?5LIST?5?3?5trying?5to?5draw?5smo@ ; `string'
PUBLIC	?__LINE__Var@?0??get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z@4JA ; `get_smoke_sprite_display_values'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@ONILPABN@number_of_frames?5?$CB?$DN?50@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f400000
PUBLIC	__real@3f490fdb
PUBLIC	__real@3f800000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fd51eb851eb851f
PUBLIC	__real@3fe51eb851eb851f
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4004000000000000
PUBLIC	__real@40490fdb
PUBLIC	__real@4059000000000000
PUBLIC	__real@40c90fdb
PUBLIC	__real@c2480000
EXTRN	_memcpy:PROC
EXTRN	_fmod:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z:PROC ; normalise_3d_vector_given_magnitude
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3
EXTRN	?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z:PROC ; get_matrix3x3_from_unit_vec3d
EXTRN	?get_texture_animation_number_of_frames@@YGHW4TEXTURE_ANIMATION_INDICES@@@Z:PROC ; get_texture_animation_number_of_frames
EXTRN	?get_texture_animation_texture_pointer@@YGPAUSCREEN@@W4TEXTURE_ANIMATION_INDICES@@H@Z:PROC ; get_texture_animation_texture_pointer
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?insert_zbiased_smoke_trail_into_3d_scene@@YGXHMHPAUSCREEN@@MMPAUSMOKE_TRAIL_DATA@@@Z:PROC ; insert_zbiased_smoke_trail_into_3d_scene
EXTRN	?get_3d_ambient_light_level@@YGXPAM00@Z:PROC	; get_3d_ambient_light_level
EXTRN	?get_new_smoke_position@@YGHPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_new_smoke_position
EXTRN	?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA:BYTE ; fn_draw_local_entity_3d_object
EXTRN	?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A:DWORD ; smoke_list_database
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?number_of_trail_points@@3HA DD 01H DUP (?)		; number_of_trail_points
?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A DD 02H DUP (?)	; trail_data
?trail_points@@3PAUVEC3D@@A DD 01H DUP (?)		; trail_points
?trail_lifetimes@@3PAMA DD 01H DUP (?)			; trail_lifetimes
?trail_radius@@3PAMA DD 01H DUP (?)			; trail_radius
_BSS	ENDS
;	COMDAT __real@c2480000
CONST	SEGMENT
__real@c2480000 DD 0c2480000r			; -50
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@4004000000000000
CONST	SEGMENT
__real@4004000000000000 DQ 04004000000000000r	; 2.5
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe51eb851eb851f
CONST	SEGMENT
__real@3fe51eb851eb851f DQ 03fe51eb851eb851fr	; 0.66
CONST	ENDS
;	COMDAT __real@3fd51eb851eb851f
CONST	SEGMENT
__real@3fd51eb851eb851f DQ 03fd51eb851eb851fr	; 0.33
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f490fdb
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0BG@ONILPABN@number_of_frames?5?$CB?$DN?50@
CONST	SEGMENT
??_C@_0BG@ONILPABN@number_of_frames?5?$CB?$DN?50@ DB 'number_of_frames !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z@4JA DD 02f6H ; `get_smoke_sprite_display_values'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DK@KBOCOJDL@SMOKE?5LIST?5?3?5trying?5to?5draw?5smo@
CONST	SEGMENT
??_C@_0DK@KBOCOJDL@SMOKE?5LIST?5?3?5trying?5to?5draw?5smo@ DB 'SMOKE LIST'
	DB	' : trying to draw smoke trail with only 1 point', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LIOJLJIJ@start?5?$CB?$DN?5end@
CONST	SEGMENT
??_C@_0N@LIOJLJIJ@start?5?$CB?$DN?5end@ DB 'start != end', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@PAEMHMCB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@PAEMHMCB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\effect\smokel'
	DB	'st\sl_draw.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z@4JA DD 01fdH ; `calculate_smoke_trail_points'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CD@HBKAJIJO@smoke?5trail?5has?5?$DO?5?$CFd?5points?5?$CI?5?$CF@
CONST	SEGMENT
??_C@_0CD@HBKAJIJO@smoke?5trail?5has?5?$DO?5?$CFd?5points?5?$CI?5?$CF@ DB 's'
	DB	'moke trail has > %d points ( %d )', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?draw_local_3d_object@@YGXPAUENTITY@@M@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_range$ = 12						; size = 4
?draw_local_3d_object@@YGXPAUENTITY@@M@Z PROC		; draw_local_3d_object, COMDAT

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 127  : 
; 128  : 	smoke_list
; 129  : 		*raw;
; 130  : 
; 131  : 	raw = (smoke_list *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 132  : 
; 133  : 	if ( smoke_list_draw_mode( raw->smoke_type ) == SMOKE_DRAW_TYPE_SPRITES )

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	6b 48 28 44	 imul	 ecx, DWORD PTR [eax+40], 68
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  0001f	66 8b 44 0a 40	 mov	 ax, WORD PTR [edx+ecx+64]
  00024	66 d1 e8	 shr	 ax, 1
  00027	66 83 e0 01	 and	 ax, 1
  0002b	0f b7 c8	 movzx	 ecx, ax
  0002e	85 c9		 test	 ecx, ecx
  00030	75 0b		 jne	 SHORT $LN2@draw_local

; 134  : 	{
; 135  : 		draw_smoke_sprites( en );

  00032	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?draw_smoke_sprites@@YGXPAUENTITY@@@Z ; draw_smoke_sprites
  0003b	eb 2a		 jmp	 SHORT $LN1@draw_local
$LN2@draw_local:

; 136  : 	}
; 137  : 	else if ( smoke_list_draw_mode( raw->smoke_type ) == SMOKE_DRAW_TYPE_TRAILS )

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00040	6b 48 28 44	 imul	 ecx, DWORD PTR [eax+40], 68
  00044	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  0004a	66 8b 44 0a 40	 mov	 ax, WORD PTR [edx+ecx+64]
  0004f	66 d1 e8	 shr	 ax, 1
  00052	66 83 e0 01	 and	 ax, 1
  00056	0f b7 c8	 movzx	 ecx, ax
  00059	83 f9 01	 cmp	 ecx, 1
  0005c	75 09		 jne	 SHORT $LN1@draw_local

; 138  : 	{
; 139  : 		draw_smoke_trails( en );

  0005e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?draw_smoke_trails@@YGXPAUENTITY@@@Z ; draw_smoke_trails
$LN1@draw_local:

; 140  : 	}
; 141  : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?draw_local_3d_object@@YGXPAUENTITY@@M@Z ENDP		; draw_local_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?calculate_trail_point_rotation_angle@@YGMPAUSMOKE_LIST@@H@Z
_TEXT	SEGMENT
_angle$ = -4						; size = 4
_raw$ = 8						; size = 4
_point_index$ = 12					; size = 4
?calculate_trail_point_rotation_angle@@YGMPAUSMOKE_LIST@@H@Z PROC ; calculate_trail_point_rotation_angle, COMDAT

; 739  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 740  : 
; 741  : 	float
; 742  : 		angle;
; 743  : 
; 744  : 	//
; 745  : 	// the trail rotates through 45 degrees per second
; 746  : 	//
; 747  : 
; 748  : 	angle = trail_lifetimes[ point_index ] * PI_OVER_FOUR;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _point_index$[ebp]
  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_lifetimes@@3PAMA
  00012	f3 0f 10 04 81	 movss	 xmm0, DWORD PTR [ecx+eax*4]
  00017	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f490fdb
  0001f	f3 0f 11 45 fc	 movss	 DWORD PTR _angle$[ebp], xmm0

; 749  : 
; 750  : 	return wrap_angle( angle );

  00024	51		 push	 ecx
  00025	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  0002d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00032	51		 push	 ecx
  00033	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _angle$[ebp]
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod

; 751  : }

  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
?calculate_trail_point_rotation_angle@@YGMPAUSMOKE_LIST@@H@Z ENDP ; calculate_trail_point_rotation_angle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?calculate_trail_point_vector@@YGXPAUSMOKE_LIST@@HHHH@Z
_TEXT	SEGMENT
_smoke_info$ = -192					; size = 4
_rotation_angle$ = -188					; size = 4
_radius$ = -184						; size = 4
_mag_v$ = -180						; size = 4
_mag_dn$ = -176						; size = 4
_mag_dl$ = -172						; size = 4
_m$ = -168						; size = 36
_rotation_matrix$ = -132				; size = 36
_direction_matrix$ = -96				; size = 36
_perpendicular$ = -60					; size = 12
_dn$ = -48						; size = 12
_dl$ = -36						; size = 12
_v$ = -24						; size = 12
_this_pos$ = -12					; size = 4
_next_pos$ = -8						; size = 4
_last_pos$ = -4						; size = 4
_raw$ = 8						; size = 4
_last_point$ = 12					; size = 4
_this_point$ = 16					; size = 4
_next_point$ = 20					; size = 4
_num_points$ = 24					; size = 4
?calculate_trail_point_vector@@YGXPAUSMOKE_LIST@@HHHH@Z PROC ; calculate_trail_point_vector, COMDAT

; 536  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 537  : 	vec3d
; 538  : 		*last_pos,
; 539  : 		*next_pos,
; 540  : 		*this_pos,
; 541  : 		v,
; 542  : 		dl,
; 543  : 		dn,
; 544  : 		perpendicular;
; 545  : 
; 546  : 	matrix3x3
; 547  : 		direction_matrix,
; 548  : 		rotation_matrix,
; 549  : 		m;
; 550  : 
; 551  : 	float
; 552  : 		mag_dl,
; 553  : 		mag_dn,
; 554  : 		mag_v,
; 555  : 		radius,
; 556  : 		rotation_angle;
; 557  : 
; 558  : 	smoke_list_data
; 559  : 		*smoke_info;
; 560  : 
; 561  : 	smoke_info = &(smoke_list_database[ raw->smoke_type ]);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0000f	6b 48 28 44	 imul	 ecx, DWORD PTR [eax+40], 68
  00013	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00019	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _smoke_info$[ebp], ecx

; 562  : 
; 563  : 	//
; 564  : 	// if last_point and next_point both do not exist, bomb out - this function should not have been called
; 565  : 	//
; 566  : 
; 567  : 	if ( ( last_point < 0 ) && ( next_point >= num_points ) )

  0001f	83 7d 0c 00	 cmp	 DWORD PTR _last_point$[ebp], 0
  00023	7d 15		 jge	 SHORT $LN2@calculate_
  00025	8b 45 14	 mov	 eax, DWORD PTR _next_point$[ebp]
  00028	3b 45 18	 cmp	 eax, DWORD PTR _num_points$[ebp]
  0002b	7c 0d		 jl	 SHORT $LN2@calculate_

; 568  : 	{
; 569  : 		debug_fatal("SMOKE LIST : trying to draw smoke trail with only 1 point");

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@KBOCOJDL@SMOKE?5LIST?5?3?5trying?5to?5draw?5smo@
  00032	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00037	83 c4 04	 add	 esp, 4
$LN2@calculate_:

; 570  : 	}
; 571  : 
; 572  : 
; 573  : 	radius = trail_radius[ this_point ];

  0003a	8b 45 10	 mov	 eax, DWORD PTR _this_point$[ebp]
  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_radius@@3PAMA
  00043	f3 0f 10 04 81	 movss	 xmm0, DWORD PTR [ecx+eax*4]
  00048	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _radius$[ebp], xmm0

; 574  : 
; 575  : 	if ( radius <= 0.0 )

  00050	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _radius$[ebp]
  00058	0f 57 c9	 xorps	 xmm1, xmm1
  0005b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0005f	72 05		 jb	 SHORT $LN3@calculate_

; 576  : 	{
; 577  : 		//
; 578  : 		// if the radius is less then 0, don't bother drawing the point
; 579  : 		//
; 580  : 
; 581  : 		return;

  00061	e9 a0 05 00 00	 jmp	 $LN1@calculate_
$LN3@calculate_:

; 582  : 	}
; 583  : 	
; 584  : 	this_pos = &trail_points[ this_point ];

  00066	6b 45 10 0c	 imul	 eax, DWORD PTR _this_point$[ebp], 12
  0006a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  00070	89 45 f4	 mov	 DWORD PTR _this_pos$[ebp], eax

; 585  : 
; 586  : 	//
; 587  : 	// if last_point doesn't exist, return the perpendicular of this_point--->next_point
; 588  : 	//
; 589  : 
; 590  : 	if ( last_point < 0 )

  00073	83 7d 0c 00	 cmp	 DWORD PTR _last_point$[ebp], 0
  00077	7d 4c		 jge	 SHORT $LN4@calculate_

; 591  : 	{
; 592  : 		//
; 593  : 		// cheat by setting last-->this to the same as this-->next
; 594  : 		//
; 595  : 
; 596  : 		next_pos = &trail_points[ next_point ];

  00079	6b 45 14 0c	 imul	 eax, DWORD PTR _next_point$[ebp], 12
  0007d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  00083	89 45 f8	 mov	 DWORD PTR _next_pos$[ebp], eax

; 597  : 
; 598  : 		dl.x = next_pos->x - this_pos->x;

  00086	8b 45 f8	 mov	 eax, DWORD PTR _next_pos$[ebp]
  00089	8b 4d f4	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  0008c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00090	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00094	f3 0f 11 45 dc	 movss	 DWORD PTR _dl$[ebp], xmm0

; 599  : 		dl.y = next_pos->y - this_pos->y;

  00099	8b 45 f8	 mov	 eax, DWORD PTR _next_pos$[ebp]
  0009c	8b 4d f4	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  0009f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000a4	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  000a9	f3 0f 11 45 e0	 movss	 DWORD PTR _dl$[ebp+4], xmm0

; 600  : 		dl.z = next_pos->z - this_pos->z;

  000ae	8b 45 f8	 mov	 eax, DWORD PTR _next_pos$[ebp]
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  000b4	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000b9	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  000be	f3 0f 11 45 e4	 movss	 DWORD PTR _dl$[ebp+8], xmm0

; 601  : 	}
; 602  : 	else

  000c3	eb 4a		 jmp	 SHORT $LN5@calculate_
$LN4@calculate_:

; 603  : 	{
; 604  : 		last_pos = &trail_points[ last_point ];

  000c5	6b 45 0c 0c	 imul	 eax, DWORD PTR _last_point$[ebp], 12
  000c9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  000cf	89 45 fc	 mov	 DWORD PTR _last_pos$[ebp], eax

; 605  : 
; 606  : 		dl.x = this_pos->x - last_pos->x;

  000d2	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  000d8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000dc	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  000e0	f3 0f 11 45 dc	 movss	 DWORD PTR _dl$[ebp], xmm0

; 607  : 		dl.y = this_pos->y - last_pos->y;

  000e5	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  000eb	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000f0	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  000f5	f3 0f 11 45 e0	 movss	 DWORD PTR _dl$[ebp+4], xmm0

; 608  : 		dl.z = this_pos->z - last_pos->z;

  000fa	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  000fd	8b 4d fc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  00100	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00105	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0010a	f3 0f 11 45 e4	 movss	 DWORD PTR _dl$[ebp+8], xmm0
$LN5@calculate_:

; 609  : 	}
; 610  : 
; 611  : 	//
; 612  : 	// if next_point doesn't exist, return the perpendicular of last_point--->this_point
; 613  : 	//
; 614  : 
; 615  : 	if ( next_point >= num_points )

  0010f	8b 45 14	 mov	 eax, DWORD PTR _next_point$[ebp]
  00112	3b 45 18	 cmp	 eax, DWORD PTR _num_points$[ebp]
  00115	7c 4c		 jl	 SHORT $LN6@calculate_

; 616  : 	{
; 617  : 		//
; 618  : 		// cheat by setting this-->next to the same as last-->this
; 619  : 		//
; 620  : 
; 621  : 		last_pos = &trail_points[ last_point ];

  00117	6b 45 0c 0c	 imul	 eax, DWORD PTR _last_point$[ebp], 12
  0011b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  00121	89 45 fc	 mov	 DWORD PTR _last_pos$[ebp], eax

; 622  : 
; 623  : 		dn.x = this_pos->x - last_pos->x;

  00124	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  0012a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0012e	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00132	f3 0f 11 45 d0	 movss	 DWORD PTR _dn$[ebp], xmm0

; 624  : 		dn.y = this_pos->y - last_pos->y;

  00137	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0013a	8b 4d fc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  0013d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00142	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00147	f3 0f 11 45 d4	 movss	 DWORD PTR _dn$[ebp+4], xmm0

; 625  : 		dn.z = this_pos->z - last_pos->z;

  0014c	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _last_pos$[ebp]
  00152	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00157	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0015c	f3 0f 11 45 d8	 movss	 DWORD PTR _dn$[ebp+8], xmm0

; 626  : 	}
; 627  : 	else

  00161	eb 4a		 jmp	 SHORT $LN7@calculate_
$LN6@calculate_:

; 628  : 	{
; 629  : 
; 630  : 		next_pos = &trail_points[ next_point ];

  00163	6b 45 14 0c	 imul	 eax, DWORD PTR _next_point$[ebp], 12
  00167	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  0016d	89 45 f8	 mov	 DWORD PTR _next_pos$[ebp], eax

; 631  : 
; 632  : 		dn.x = next_pos->x - this_pos->x;

  00170	8b 45 f8	 mov	 eax, DWORD PTR _next_pos$[ebp]
  00173	8b 4d f4	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  00176	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0017a	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0017e	f3 0f 11 45 d0	 movss	 DWORD PTR _dn$[ebp], xmm0

; 633  : 		dn.y = next_pos->y - this_pos->y;

  00183	8b 45 f8	 mov	 eax, DWORD PTR _next_pos$[ebp]
  00186	8b 4d f4	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  00189	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0018e	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00193	f3 0f 11 45 d4	 movss	 DWORD PTR _dn$[ebp+4], xmm0

; 634  : 		dn.z = next_pos->z - this_pos->z;

  00198	8b 45 f8	 mov	 eax, DWORD PTR _next_pos$[ebp]
  0019b	8b 4d f4	 mov	 ecx, DWORD PTR _this_pos$[ebp]
  0019e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001a3	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  001a8	f3 0f 11 45 d8	 movss	 DWORD PTR _dn$[ebp+8], xmm0
$LN7@calculate_:

; 635  : 	}
; 636  : 
; 637  : 	//
; 638  : 	// if either last point == this point, or next point == this point, skip this point
; 639  : 	//
; 640  : 
; 641  : 	mag_dl = get_3d_vector_magnitude( &dl );

  001ad	8d 45 dc	 lea	 eax, DWORD PTR _dl$[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  001b6	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR _mag_dl$[ebp]

; 642  : 	mag_dn = get_3d_vector_magnitude( &dn );

  001bc	8d 45 d0	 lea	 eax, DWORD PTR _dn$[ebp]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  001c5	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR _mag_dn$[ebp]

; 643  : 
; 644  : 	if ( ( mag_dl == 0.0 ) || ( mag_dn == 0.0 ) )

  001cb	f3 0f 5a 85 54
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _mag_dl$[ebp]
  001d3	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  001db	9f		 lahf
  001dc	f6 c4 44	 test	 ah, 68			; 00000044H
  001df	7b 16		 jnp	 SHORT $LN9@calculate_
  001e1	f3 0f 5a 85 50
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _mag_dn$[ebp]
  001e9	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  001f1	9f		 lahf
  001f2	f6 c4 44	 test	 ah, 68			; 00000044H
  001f5	7a 05		 jp	 SHORT $LN8@calculate_
$LN9@calculate_:

; 645  : 	{
; 646  : 		return;

  001f7	e9 0a 04 00 00	 jmp	 $LN1@calculate_
$LN8@calculate_:

; 647  : 	}
; 648  : 
; 649  : 	//
; 650  : 	// find the average of the two unit vectors
; 651  : 	//
; 652  : 
; 653  : 	normalise_3d_vector_given_magnitude( &dl, mag_dl );

  001fc	51		 push	 ecx
  001fd	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _mag_dl$[ebp]
  00205	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020a	8d 45 dc	 lea	 eax, DWORD PTR _dl$[ebp]
  0020d	50		 push	 eax
  0020e	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 654  : 	normalise_3d_vector_given_magnitude( &dn, mag_dn );

  00213	51		 push	 ecx
  00214	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _mag_dn$[ebp]
  0021c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00221	8d 45 d0	 lea	 eax, DWORD PTR _dn$[ebp]
  00224	50		 push	 eax
  00225	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 655  : 
; 656  : 	v.x = dl.x + dn.x;

  0022a	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _dl$[ebp]
  0022f	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _dn$[ebp]
  00234	f3 0f 11 45 e8	 movss	 DWORD PTR _v$[ebp], xmm0

; 657  : 	v.y = dl.y + dn.y;

  00239	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _dl$[ebp+4]
  0023e	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _dn$[ebp+4]
  00243	f3 0f 11 45 ec	 movss	 DWORD PTR _v$[ebp+4], xmm0

; 658  : 	v.z = dl.z + dn.z;

  00248	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _dl$[ebp+8]
  0024d	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _dn$[ebp+8]
  00252	f3 0f 11 45 f0	 movss	 DWORD PTR _v$[ebp+8], xmm0

; 659  : 
; 660  : 	mag_v = get_3d_vector_magnitude( &v );

  00257	8d 45 e8	 lea	 eax, DWORD PTR _v$[ebp]
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  00260	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR _mag_v$[ebp]

; 661  : 
; 662  : 	if ( mag_v == 0.0 )

  00266	f3 0f 5a 85 4c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _mag_v$[ebp]
  0026e	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00276	9f		 lahf
  00277	f6 c4 44	 test	 ah, 68			; 00000044H
  0027a	7a 05		 jp	 SHORT $LN10@calculate_

; 663  : 	{
; 664  : 		return;

  0027c	e9 85 03 00 00	 jmp	 $LN1@calculate_
$LN10@calculate_:

; 665  : 	}
; 666  : 
; 667  : 	normalise_3d_vector_given_magnitude( &v, mag_v );

  00281	51		 push	 ecx
  00282	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _mag_v$[ebp]
  0028a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028f	8d 45 e8	 lea	 eax, DWORD PTR _v$[ebp]
  00292	50		 push	 eax
  00293	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 668  : 
; 669  : 	//
; 670  : 	// set points for each ribbon
; 671  : 	//
; 672  : 
; 673  : 	//
; 674  : 	// find the perpendicular to the 3d vector
; 675  : 	//
; 676  : 
; 677  : 	get_matrix3x3_from_unit_vec3d( direction_matrix, &v );

  00298	8d 45 e8	 lea	 eax, DWORD PTR _v$[ebp]
  0029b	50		 push	 eax
  0029c	8d 4d a0	 lea	 ecx, DWORD PTR _direction_matrix$[ebp]
  0029f	51		 push	 ecx
  002a0	e8 00 00 00 00	 call	 ?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z ; get_matrix3x3_from_unit_vec3d

; 678  : 
; 679  : 	if ( smoke_info->flat )

  002a5	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _smoke_info$[ebp]
  002ab	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  002af	66 c1 e9 02	 shr	 cx, 2
  002b3	66 83 e1 01	 and	 cx, 1
  002b7	0f b7 d1	 movzx	 edx, cx
  002ba	85 d2		 test	 edx, edx
  002bc	74 17		 je	 SHORT $LN11@calculate_

; 680  : 	{
; 681  : 		memcpy( m, direction_matrix, sizeof( matrix3x3 ) );

  002be	6a 24		 push	 36			; 00000024H
  002c0	8d 45 a0	 lea	 eax, DWORD PTR _direction_matrix$[ebp]
  002c3	50		 push	 eax
  002c4	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _m$[ebp]
  002ca	51		 push	 ecx
  002cb	e8 00 00 00 00	 call	 _memcpy
  002d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 682  : 	}
; 683  : 	else

  002d3	eb 56		 jmp	 SHORT $LN12@calculate_
$LN11@calculate_:

; 684  : 	{
; 685  : 		rotation_angle = calculate_trail_point_rotation_angle( raw, this_point );

  002d5	8b 45 10	 mov	 eax, DWORD PTR _this_point$[ebp]
  002d8	50		 push	 eax
  002d9	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  002dc	51		 push	 ecx
  002dd	e8 00 00 00 00	 call	 ?calculate_trail_point_rotation_angle@@YGMPAUSMOKE_LIST@@H@Z ; calculate_trail_point_rotation_angle
  002e2	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR _rotation_angle$[ebp]

; 686  : 
; 687  : 		get_3d_transformation_matrix( rotation_matrix, 0.0, 0.0, rotation_angle );

  002e8	51		 push	 ecx
  002e9	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _rotation_angle$[ebp]
  002f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f6	51		 push	 ecx
  002f7	0f 57 c0	 xorps	 xmm0, xmm0
  002fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ff	51		 push	 ecx
  00300	0f 57 c0	 xorps	 xmm0, xmm0
  00303	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00308	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _rotation_matrix$[ebp]
  0030e	50		 push	 eax
  0030f	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 688  : 
; 689  : 		multiply_matrix3x3_matrix3x3( m, rotation_matrix, direction_matrix );

  00314	8d 45 a0	 lea	 eax, DWORD PTR _direction_matrix$[ebp]
  00317	50		 push	 eax
  00318	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _rotation_matrix$[ebp]
  0031e	51		 push	 ecx
  0031f	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _m$[ebp]
  00325	52		 push	 edx
  00326	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3
$LN12@calculate_:

; 690  : 	}
; 691  : 
; 692  : 	//
; 693  : 	// use xv an zv vectors as perpendicular ( multiply by the radius to get a distance out from the centre of the trail )
; 694  : 	//
; 695  : 
; 696  : 	// ribbon #1 ( use xv vector )
; 697  : 
; 698  : 	perpendicular.x = m[ 0 ][ 0 ] * radius;

  0032b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00330	6b c8 00	 imul	 ecx, eax, 0
  00333	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _m$[ebp+ecx]
  0033a	b8 04 00 00 00	 mov	 eax, 4
  0033f	6b c8 00	 imul	 ecx, eax, 0
  00342	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00347	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  0034f	f3 0f 11 45 c4	 movss	 DWORD PTR _perpendicular$[ebp], xmm0

; 699  : 	perpendicular.y = m[ 0 ][ 1 ] * radius;

  00354	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00359	6b c8 00	 imul	 ecx, eax, 0
  0035c	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _m$[ebp+ecx]
  00363	b8 04 00 00 00	 mov	 eax, 4
  00368	c1 e0 00	 shl	 eax, 0
  0036b	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00370	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  00378	f3 0f 11 45 c8	 movss	 DWORD PTR _perpendicular$[ebp+4], xmm0

; 700  : 	perpendicular.z = m[ 0 ][ 2 ] * radius;

  0037d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00382	6b c8 00	 imul	 ecx, eax, 0
  00385	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _m$[ebp+ecx]
  0038c	b8 04 00 00 00	 mov	 eax, 4
  00391	d1 e0		 shl	 eax, 1
  00393	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00398	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  003a0	f3 0f 11 45 cc	 movss	 DWORD PTR _perpendicular$[ebp+8], xmm0

; 701  : 
; 702  : 	trail_data[ 0 ][ number_of_trail_points ].point1.x = this_pos->x + perpendicular.x;

  003a5	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  003a8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003ac	f3 0f 58 45 c4	 addss	 xmm0, DWORD PTR _perpendicular$[ebp]
  003b1	b9 04 00 00 00	 mov	 ecx, 4
  003b6	6b d1 00	 imul	 edx, ecx, 0
  003b9	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?number_of_trail_points@@3HA, 44
  003c0	8b 8a 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[edx]
  003c6	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 703  : 	trail_data[ 0 ][ number_of_trail_points ].point1.y = this_pos->y + perpendicular.y;

  003cb	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  003ce	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  003d3	f3 0f 58 45 c8	 addss	 xmm0, DWORD PTR _perpendicular$[ebp+4]
  003d8	b9 04 00 00 00	 mov	 ecx, 4
  003dd	6b d1 00	 imul	 edx, ecx, 0
  003e0	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?number_of_trail_points@@3HA, 44
  003e7	8b 8a 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[edx]
  003ed	f3 0f 11 44 01
	04		 movss	 DWORD PTR [ecx+eax+4], xmm0

; 704  : 	trail_data[ 0 ][ number_of_trail_points ].point1.z = this_pos->z + perpendicular.z;

  003f3	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  003f6	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003fb	f3 0f 58 45 cc	 addss	 xmm0, DWORD PTR _perpendicular$[ebp+8]
  00400	b9 04 00 00 00	 mov	 ecx, 4
  00405	6b d1 00	 imul	 edx, ecx, 0
  00408	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?number_of_trail_points@@3HA, 44
  0040f	8b 8a 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[edx]
  00415	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 705  : 
; 706  : 	trail_data[ 0 ][ number_of_trail_points ].point2.x = this_pos->x - perpendicular.x;

  0041b	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0041e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00422	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _perpendicular$[ebp]
  00427	b9 04 00 00 00	 mov	 ecx, 4
  0042c	6b d1 00	 imul	 edx, ecx, 0
  0042f	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?number_of_trail_points@@3HA, 44
  00436	8b 8a 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[edx]
  0043c	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0

; 707  : 	trail_data[ 0 ][ number_of_trail_points ].point2.y = this_pos->y - perpendicular.y;

  00442	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  00445	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0044a	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _perpendicular$[ebp+4]
  0044f	b9 04 00 00 00	 mov	 ecx, 4
  00454	6b d1 00	 imul	 edx, ecx, 0
  00457	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?number_of_trail_points@@3HA, 44
  0045e	8b 8a 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[edx]
  00464	f3 0f 11 44 01
	10		 movss	 DWORD PTR [ecx+eax+16], xmm0

; 708  : 	trail_data[ 0 ][ number_of_trail_points ].point2.z = this_pos->z - perpendicular.z;

  0046a	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0046d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00472	f3 0f 5c 45 cc	 subss	 xmm0, DWORD PTR _perpendicular$[ebp+8]
  00477	b9 04 00 00 00	 mov	 ecx, 4
  0047c	6b d1 00	 imul	 edx, ecx, 0
  0047f	6b 05 00 00 00
	00 2c		 imul	 eax, DWORD PTR ?number_of_trail_points@@3HA, 44
  00486	8b 8a 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[edx]
  0048c	f3 0f 11 44 01
	14		 movss	 DWORD PTR [ecx+eax+20], xmm0

; 709  : 
; 710  : 	// ribbon #2 ( use yv vector )
; 711  : 
; 712  : 	perpendicular.x = m[ 1 ][ 0 ] * radius;

  00492	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00497	c1 e0 00	 shl	 eax, 0
  0049a	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _m$[ebp+eax]
  004a1	ba 04 00 00 00	 mov	 edx, 4
  004a6	6b c2 00	 imul	 eax, edx, 0
  004a9	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  004ae	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  004b6	f3 0f 11 45 c4	 movss	 DWORD PTR _perpendicular$[ebp], xmm0

; 713  : 	perpendicular.y = m[ 1 ][ 1 ] * radius;

  004bb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004c0	c1 e0 00	 shl	 eax, 0
  004c3	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _m$[ebp+eax]
  004ca	ba 04 00 00 00	 mov	 edx, 4
  004cf	c1 e2 00	 shl	 edx, 0
  004d2	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  004d7	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  004df	f3 0f 11 45 c8	 movss	 DWORD PTR _perpendicular$[ebp+4], xmm0

; 714  : 	perpendicular.z = m[ 1 ][ 2 ] * radius;

  004e4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004e9	c1 e0 00	 shl	 eax, 0
  004ec	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _m$[ebp+eax]
  004f3	ba 04 00 00 00	 mov	 edx, 4
  004f8	d1 e2		 shl	 edx, 1
  004fa	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  004ff	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  00507	f3 0f 11 45 cc	 movss	 DWORD PTR _perpendicular$[ebp+8], xmm0

; 715  : 
; 716  : 	trail_data[ 1 ][ number_of_trail_points ].point1.x = this_pos->x + perpendicular.x;

  0050c	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0050f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00513	f3 0f 58 45 c4	 addss	 xmm0, DWORD PTR _perpendicular$[ebp]
  00518	b9 04 00 00 00	 mov	 ecx, 4
  0051d	c1 e1 00	 shl	 ecx, 0
  00520	6b 15 00 00 00
	00 2c		 imul	 edx, DWORD PTR ?number_of_trail_points@@3HA, 44
  00527	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  0052d	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 717  : 	trail_data[ 1 ][ number_of_trail_points ].point1.y = this_pos->y + perpendicular.y;

  00532	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  00535	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0053a	f3 0f 58 45 c8	 addss	 xmm0, DWORD PTR _perpendicular$[ebp+4]
  0053f	b9 04 00 00 00	 mov	 ecx, 4
  00544	c1 e1 00	 shl	 ecx, 0
  00547	6b 15 00 00 00
	00 2c		 imul	 edx, DWORD PTR ?number_of_trail_points@@3HA, 44
  0054e	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  00554	f3 0f 11 44 10
	04		 movss	 DWORD PTR [eax+edx+4], xmm0

; 718  : 	trail_data[ 1 ][ number_of_trail_points ].point1.z = this_pos->z + perpendicular.z;

  0055a	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  0055d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00562	f3 0f 58 45 cc	 addss	 xmm0, DWORD PTR _perpendicular$[ebp+8]
  00567	b9 04 00 00 00	 mov	 ecx, 4
  0056c	c1 e1 00	 shl	 ecx, 0
  0056f	6b 15 00 00 00
	00 2c		 imul	 edx, DWORD PTR ?number_of_trail_points@@3HA, 44
  00576	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  0057c	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 719  : 
; 720  : 	trail_data[ 1 ][ number_of_trail_points ].point2.x = this_pos->x - perpendicular.x;

  00582	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  00585	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00589	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _perpendicular$[ebp]
  0058e	b9 04 00 00 00	 mov	 ecx, 4
  00593	c1 e1 00	 shl	 ecx, 0
  00596	6b 15 00 00 00
	00 2c		 imul	 edx, DWORD PTR ?number_of_trail_points@@3HA, 44
  0059d	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  005a3	f3 0f 11 44 10
	0c		 movss	 DWORD PTR [eax+edx+12], xmm0

; 721  : 	trail_data[ 1 ][ number_of_trail_points ].point2.y = this_pos->y - perpendicular.y;

  005a9	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  005ac	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  005b1	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _perpendicular$[ebp+4]
  005b6	b9 04 00 00 00	 mov	 ecx, 4
  005bb	c1 e1 00	 shl	 ecx, 0
  005be	6b 15 00 00 00
	00 2c		 imul	 edx, DWORD PTR ?number_of_trail_points@@3HA, 44
  005c5	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  005cb	f3 0f 11 44 10
	10		 movss	 DWORD PTR [eax+edx+16], xmm0

; 722  : 	trail_data[ 1 ][ number_of_trail_points ].point2.z = this_pos->z - perpendicular.z;

  005d1	8b 45 f4	 mov	 eax, DWORD PTR _this_pos$[ebp]
  005d4	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  005d9	f3 0f 5c 45 cc	 subss	 xmm0, DWORD PTR _perpendicular$[ebp+8]
  005de	b9 04 00 00 00	 mov	 ecx, 4
  005e3	c1 e1 00	 shl	 ecx, 0
  005e6	6b 15 00 00 00
	00 2c		 imul	 edx, DWORD PTR ?number_of_trail_points@@3HA, 44
  005ed	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  005f3	f3 0f 11 44 10
	14		 movss	 DWORD PTR [eax+edx+20], xmm0

; 723  : 
; 724  : 	#if DEBUG_MODULE
; 725  : 
; 726  : 	debug_log ("Point %d = %f, %f, %f", number_of_trail_points, this_pos->x, this_pos->y, this_pos->z);
; 727  : 
; 728  : 	#endif
; 729  : 
; 730  : 	number_of_trail_points ++;

  005f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_trail_points@@3HA
  005fe	83 c0 01	 add	 eax, 1
  00601	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_trail_points@@3HA, eax
$LN1@calculate_:

; 731  : 	
; 732  : }

  00606	5f		 pop	 edi
  00607	5e		 pop	 esi
  00608	5b		 pop	 ebx
  00609	8b e5		 mov	 esp, ebp
  0060b	5d		 pop	 ebp
  0060c	c2 14 00	 ret	 20			; 00000014H
?calculate_trail_point_vector@@YGXPAUSMOKE_LIST@@HHHH@Z ENDP ; calculate_trail_point_vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z
_TEXT	SEGMENT
_num_points$ = -8					; size = 4
_loop$ = -4						; size = 4
_raw$ = 8						; size = 4
_start$ = 12						; size = 4
_end$ = 16						; size = 4
_number_of_slots$ = 20					; size = 4
?calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z PROC ; calculate_smoke_trail_points, COMDAT

; 509  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 510  : 	int
; 511  : 		loop,
; 512  : 		num_points;
; 513  : 
; 514  : 	ASSERT( start != end );

  00009	8b 45 0c	 mov	 eax, DWORD PTR _start$[ebp]
  0000c	3b 45 10	 cmp	 eax, DWORD PTR _end$[ebp]
  0000f	75 18		 jne	 SHORT $LN5@calculate_
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z@4JA
  00016	83 c0 05	 add	 eax, 5
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@PAEMHMCB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LIOJLJIJ@start?5?$CB?$DN?5end@
  00024	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@calculate_:

; 515  : 
; 516  : 	num_points = end - start;

  00029	8b 45 10	 mov	 eax, DWORD PTR _end$[ebp]
  0002c	2b 45 0c	 sub	 eax, DWORD PTR _start$[ebp]
  0002f	89 45 f8	 mov	 DWORD PTR _num_points$[ebp], eax

; 517  : 
; 518  : 	if ( num_points < 0 )

  00032	79 09		 jns	 SHORT $LN6@calculate_

; 519  : 	{
; 520  : 		num_points += number_of_slots;

  00034	8b 45 f8	 mov	 eax, DWORD PTR _num_points$[ebp]
  00037	03 45 14	 add	 eax, DWORD PTR _number_of_slots$[ebp]
  0003a	89 45 f8	 mov	 DWORD PTR _num_points$[ebp], eax
$LN6@calculate_:

; 521  : 	}
; 522  : 
; 523  : 	num_points += 1;	// add 1 because start and end are INCLUSIVE

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _num_points$[ebp]
  00040	83 c0 01	 add	 eax, 1
  00043	89 45 f8	 mov	 DWORD PTR _num_points$[ebp], eax

; 524  : 
; 525  : 	for ( loop = 0 ; loop < num_points ; loop ++ )

  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0004d	eb 09		 jmp	 SHORT $LN4@calculate_
$LN2@calculate_:
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00052	83 c0 01	 add	 eax, 1
  00055	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@calculate_:
  00058	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0005b	3b 45 f8	 cmp	 eax, DWORD PTR _num_points$[ebp]
  0005e	7d 21		 jge	 SHORT $LN1@calculate_

; 526  : 	{
; 527  : 		calculate_trail_point_vector( raw, loop - 1, loop, loop + 1, num_points );

  00060	8b 45 f8	 mov	 eax, DWORD PTR _num_points$[ebp]
  00063	50		 push	 eax
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00067	83 c1 01	 add	 ecx, 1
  0006a	51		 push	 ecx
  0006b	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  0006e	52		 push	 edx
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00072	83 e8 01	 sub	 eax, 1
  00075	50		 push	 eax
  00076	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ?calculate_trail_point_vector@@YGXPAUSMOKE_LIST@@HHHH@Z ; calculate_trail_point_vector

; 528  : 	}

  0007f	eb ce		 jmp	 SHORT $LN2@calculate_
$LN1@calculate_:

; 529  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 10 00	 ret	 16			; 00000010H
?calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z ENDP ; calculate_smoke_trail_points
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?get_smoke_trail_display_values@@YGXPAUSMOKE_LIST@@MHPAUSMOKE_LIST_DATA@@M@Z
_TEXT	SEGMENT
tv201 = -152						; size = 8
tv202 = -144						; size = 8
_trail$ = -72						; size = 4
_temp$ = -68						; size = 4
_alpha_result$ = -64					; size = 4
_blue_result$ = -60					; size = 4
_green_result$ = -56					; size = 4
_red_result$ = -52					; size = 4
_radius_end$ = -48					; size = 4
_alpha_end$ = -44					; size = 4
_blue_end$ = -40					; size = 4
_green_end$ = -36					; size = 4
_red_end$ = -32						; size = 4
_radius_start$ = -28					; size = 4
_alpha_start$ = -24					; size = 4
_blue_start$ = -20					; size = 4
_green_start$ = -16					; size = 4
_red_start$ = -12					; size = 4
_lifescale$ = -8					; size = 4
_d$ = -4						; size = 4
_raw$ = 8						; size = 4
_lifetime$ = 12						; size = 4
_trail_index$ = 16					; size = 4
_smoke_info$ = 20					; size = 4
_alpha_modifier$ = 24					; size = 4
?get_smoke_trail_display_values@@YGXPAUSMOKE_LIST@@MHPAUSMOKE_LIST_DATA@@M@Z PROC ; get_smoke_trail_display_values, COMDAT

; 915  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 916  : 	float
; 917  : 		d,
; 918  : 		lifescale,
; 919  : 		red_start, green_start, blue_start, alpha_start, radius_start,
; 920  : 		red_end, green_end, blue_end, alpha_end, radius_end,
; 921  : 		red_result, green_result, blue_result, alpha_result;
; 922  : 
; 923  : 	int
; 924  : 		temp,
; 925  : 		trail;
; 926  : 
; 927  : 
; 928  : 	lifescale = lifetime / raw->smoke_lifetime;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0000f	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  00014	f3 0f 5e 40 38	 divss	 xmm0, DWORD PTR [eax+56]
  00019	f3 0f 11 45 f8	 movss	 DWORD PTR _lifescale$[ebp], xmm0

; 929  : 
; 930  : 	if ( lifescale < smoke_info->colour_change_1 )

  0001e	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00021	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00026	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _lifescale$[ebp]
  0002a	0f 86 b0 00 00
	00		 jbe	 $LN5@get_smoke_

; 931  : 	{
; 932  : 		red_start = (float)smoke_info->red_start;

  00030	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00033	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00036	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0003a	f3 0f 11 45 f4	 movss	 DWORD PTR _red_start$[ebp], xmm0

; 933  : 		red_end = (float)smoke_info->red_1;

  0003f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00042	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00046	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0004a	f3 0f 11 45 e0	 movss	 DWORD PTR _red_end$[ebp], xmm0

; 934  : 
; 935  : 		green_start = (float)smoke_info->green_start;

  0004f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00052	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00056	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0005a	f3 0f 11 45 f0	 movss	 DWORD PTR _green_start$[ebp], xmm0

; 936  : 		green_end = (float)smoke_info->green_1;

  0005f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00062	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00066	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0006a	f3 0f 11 45 dc	 movss	 DWORD PTR _green_end$[ebp], xmm0

; 937  : 
; 938  : 		blue_start = (float)smoke_info->blue_start;

  0006f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00072	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  00076	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0007a	f3 0f 11 45 ec	 movss	 DWORD PTR _blue_start$[ebp], xmm0

; 939  : 		blue_end = (float)smoke_info->blue_1;

  0007f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00082	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  00086	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0008a	f3 0f 11 45 d8	 movss	 DWORD PTR _blue_end$[ebp], xmm0

; 940  : 
; 941  : 		alpha_start = (float)smoke_info->alpha_start;

  0008f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00092	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00096	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0009a	f3 0f 11 45 e8	 movss	 DWORD PTR _alpha_start$[ebp], xmm0

; 942  : 		alpha_end = (float)smoke_info->alpha_1;

  0009f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  000a2	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  000a6	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000aa	f3 0f 11 45 d4	 movss	 DWORD PTR _alpha_end$[ebp], xmm0

; 943  : 
; 944  : 		radius_start = (float)smoke_info->radius_start;

  000af	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  000b2	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000b7	f3 0f 11 45 e4	 movss	 DWORD PTR _radius_start$[ebp], xmm0

; 945  : 		radius_end = (float)smoke_info->radius_1;

  000bc	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  000bf	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  000c4	f3 0f 11 45 d0	 movss	 DWORD PTR _radius_end$[ebp], xmm0

; 946  : 
; 947  : 		d = lifescale / smoke_info->colour_change_1;

  000c9	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  000cc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifescale$[ebp]
  000d1	f3 0f 5e 40 08	 divss	 xmm0, DWORD PTR [eax+8]
  000d6	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0
  000db	e9 a3 01 00 00	 jmp	 $LN8@get_smoke_
$LN5@get_smoke_:

; 948  : 	}
; 949  : 	else if ( lifescale < smoke_info->colour_change_2 )

  000e0	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  000e3	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  000e8	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _lifescale$[ebp]
  000ec	0f 86 c5 00 00
	00		 jbe	 $LN7@get_smoke_

; 950  : 	{
; 951  : 		red_start = (float)smoke_info->red_1;

  000f2	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  000f5	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  000f9	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000fd	f3 0f 11 45 f4	 movss	 DWORD PTR _red_start$[ebp], xmm0

; 952  : 		red_end = (float)smoke_info->red_2;

  00102	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00105	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  00109	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0010d	f3 0f 11 45 e0	 movss	 DWORD PTR _red_end$[ebp], xmm0

; 953  : 
; 954  : 		green_start = (float)smoke_info->green_1;

  00112	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00115	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00119	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0011d	f3 0f 11 45 f0	 movss	 DWORD PTR _green_start$[ebp], xmm0

; 955  : 		green_end = (float)smoke_info->green_2;

  00122	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00125	0f b6 48 19	 movzx	 ecx, BYTE PTR [eax+25]
  00129	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0012d	f3 0f 11 45 dc	 movss	 DWORD PTR _green_end$[ebp], xmm0

; 956  : 
; 957  : 		blue_start = (float)smoke_info->blue_1;

  00132	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00135	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  00139	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0013d	f3 0f 11 45 ec	 movss	 DWORD PTR _blue_start$[ebp], xmm0

; 958  : 		blue_end = (float)smoke_info->blue_2;

  00142	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00145	0f b6 48 1a	 movzx	 ecx, BYTE PTR [eax+26]
  00149	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0014d	f3 0f 11 45 d8	 movss	 DWORD PTR _blue_end$[ebp], xmm0

; 959  : 
; 960  : 		alpha_start = (float)smoke_info->alpha_1;

  00152	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00155	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  00159	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0015d	f3 0f 11 45 e8	 movss	 DWORD PTR _alpha_start$[ebp], xmm0

; 961  : 		alpha_end = (float)smoke_info->alpha_2;

  00162	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00165	0f b6 48 1b	 movzx	 ecx, BYTE PTR [eax+27]
  00169	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0016d	f3 0f 11 45 d4	 movss	 DWORD PTR _alpha_end$[ebp], xmm0

; 962  : 
; 963  : 		radius_start = (float)smoke_info->radius_1;

  00172	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00175	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0017a	f3 0f 11 45 e4	 movss	 DWORD PTR _radius_start$[ebp], xmm0

; 964  : 		radius_end = (float)smoke_info->radius_2;

  0017f	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00182	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00187	f3 0f 11 45 d0	 movss	 DWORD PTR _radius_end$[ebp], xmm0

; 965  : 
; 966  : 		d = ( lifescale - smoke_info->colour_change_1 ) / ( smoke_info->colour_change_2 - smoke_info->colour_change_1 );

  0018c	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0018f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifescale$[ebp]
  00194	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00199	8b 4d 14	 mov	 ecx, DWORD PTR _smoke_info$[ebp]
  0019c	8b 55 14	 mov	 edx, DWORD PTR _smoke_info$[ebp]
  0019f	f3 0f 10 49 14	 movss	 xmm1, DWORD PTR [ecx+20]
  001a4	f3 0f 5c 4a 08	 subss	 xmm1, DWORD PTR [edx+8]
  001a9	f3 0f 5e c1	 divss	 xmm0, xmm1
  001ad	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0

; 967  : 	}
; 968  : 	else

  001b2	e9 cc 00 00 00	 jmp	 $LN8@get_smoke_
$LN7@get_smoke_:

; 969  : 	{
; 970  : 		red_start = (float)smoke_info->red_2;

  001b7	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  001ba	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  001be	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001c2	f3 0f 11 45 f4	 movss	 DWORD PTR _red_start$[ebp], xmm0

; 971  : 		red_end = (float)smoke_info->red_end;

  001c7	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  001ca	0f b6 48 20	 movzx	 ecx, BYTE PTR [eax+32]
  001ce	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001d2	f3 0f 11 45 e0	 movss	 DWORD PTR _red_end$[ebp], xmm0

; 972  : 
; 973  : 		green_start = (float)smoke_info->green_2;

  001d7	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  001da	0f b6 48 19	 movzx	 ecx, BYTE PTR [eax+25]
  001de	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001e2	f3 0f 11 45 f0	 movss	 DWORD PTR _green_start$[ebp], xmm0

; 974  : 		green_end = (float)smoke_info->green_end;

  001e7	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  001ea	0f b6 48 21	 movzx	 ecx, BYTE PTR [eax+33]
  001ee	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001f2	f3 0f 11 45 dc	 movss	 DWORD PTR _green_end$[ebp], xmm0

; 975  : 
; 976  : 		blue_start = (float)smoke_info->blue_2;

  001f7	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  001fa	0f b6 48 1a	 movzx	 ecx, BYTE PTR [eax+26]
  001fe	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00202	f3 0f 11 45 ec	 movss	 DWORD PTR _blue_start$[ebp], xmm0

; 977  : 		blue_end = (float)smoke_info->blue_end;

  00207	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0020a	0f b6 48 22	 movzx	 ecx, BYTE PTR [eax+34]
  0020e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00212	f3 0f 11 45 d8	 movss	 DWORD PTR _blue_end$[ebp], xmm0

; 978  : 
; 979  : 		alpha_start = (float)smoke_info->alpha_2;

  00217	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0021a	0f b6 48 1b	 movzx	 ecx, BYTE PTR [eax+27]
  0021e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00222	f3 0f 11 45 e8	 movss	 DWORD PTR _alpha_start$[ebp], xmm0

; 980  : 		alpha_end = (float)smoke_info->alpha_end;

  00227	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0022a	0f b6 48 23	 movzx	 ecx, BYTE PTR [eax+35]
  0022e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00232	f3 0f 11 45 d4	 movss	 DWORD PTR _alpha_end$[ebp], xmm0

; 981  : 
; 982  : 		radius_start = (float)smoke_info->radius_2;

  00237	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0023a	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0023f	f3 0f 11 45 e4	 movss	 DWORD PTR _radius_start$[ebp], xmm0

; 983  : 		radius_end = (float)smoke_info->radius_end;

  00244	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00247	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  0024c	f3 0f 11 45 d0	 movss	 DWORD PTR _radius_end$[ebp], xmm0

; 984  : 
; 985  : 		d = ( lifescale - smoke_info->colour_change_2 ) / ( 1.0 - smoke_info->colour_change_2 );

  00251	8b 45 14	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00254	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifescale$[ebp]
  00259	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
  0025e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00262	8b 4d 14	 mov	 ecx, DWORD PTR _smoke_info$[ebp]
  00265	f3 0f 5a 49 14	 cvtss2sd xmm1, DWORD PTR [ecx+20]
  0026a	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  00272	f2 0f 5c d1	 subsd	 xmm2, xmm1
  00276	f2 0f 5e c2	 divsd	 xmm0, xmm2
  0027a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0027e	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0
$LN8@get_smoke_:

; 986  : 	}
; 987  : 
; 988  : 	d = bound( d, 0.0, 1.0 );

  00283	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _d$[ebp]
  00288	0f 57 c9	 xorps	 xmm1, xmm1
  0028b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0028f	76 0d		 jbe	 SHORT $LN12@get_smoke_
  00291	0f 57 c0	 xorps	 xmm0, xmm0
  00294	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv202[ebp], xmm0
  0029c	eb 3e		 jmp	 SHORT $LN13@get_smoke_
$LN12@get_smoke_:
  0029e	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _d$[ebp]
  002a3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  002ab	76 12		 jbe	 SHORT $LN10@get_smoke_
  002ad	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  002b5	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv201[ebp], xmm0
  002bd	eb 0d		 jmp	 SHORT $LN11@get_smoke_
$LN10@get_smoke_:
  002bf	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _d$[ebp]
  002c4	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv201[ebp], xmm0
$LN11@get_smoke_:
  002cc	f2 0f 10 85 68
	ff ff ff	 movsd	 xmm0, QWORD PTR tv201[ebp]
  002d4	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv202[ebp], xmm0
$LN13@get_smoke_:
  002dc	f2 0f 5a 85 70
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv202[ebp]
  002e4	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0

; 989  : 
; 990  : 	//
; 991  : 	// set information
; 992  : 	// 
; 993  : 	
; 994  : 	red_result = red_start + ( d * ( red_end - red_start ) );

  002e9	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _red_end$[ebp]
  002ee	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _red_start$[ebp]
  002f3	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  002f8	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _red_start$[ebp]
  002fd	f3 0f 11 45 cc	 movss	 DWORD PTR _red_result$[ebp], xmm0

; 995  : 
; 996  : 	green_result = green_start + ( d * ( green_end - green_start ) );

  00302	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _green_end$[ebp]
  00307	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _green_start$[ebp]
  0030c	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  00311	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _green_start$[ebp]
  00316	f3 0f 11 45 c8	 movss	 DWORD PTR _green_result$[ebp], xmm0

; 997  : 
; 998  : 	blue_result = blue_start + ( d * ( blue_end - blue_start ) );

  0031b	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _blue_end$[ebp]
  00320	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _blue_start$[ebp]
  00325	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  0032a	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _blue_start$[ebp]
  0032f	f3 0f 11 45 c4	 movss	 DWORD PTR _blue_result$[ebp], xmm0

; 999  : 
; 1000 : 	//
; 1001 : 	// special case for alpha value if trail point is last in the list ( i.e. index == alive_count - 1 )
; 1002 : 	//
; 1003 : 
; 1004 : 	alpha_result = alpha_start + ( d * ( alpha_end - alpha_start ) );

  00334	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _alpha_end$[ebp]
  00339	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _alpha_start$[ebp]
  0033e	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  00343	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _alpha_start$[ebp]
  00348	f3 0f 11 45 c0	 movss	 DWORD PTR _alpha_result$[ebp], xmm0

; 1005 : 
; 1006 : 	alpha_result *= alpha_modifier;

  0034d	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _alpha_result$[ebp]
  00352	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _alpha_modifier$[ebp]
  00357	f3 0f 11 45 c0	 movss	 DWORD PTR _alpha_result$[ebp], xmm0

; 1007 : 
; 1008 : 	trail_radius[ trail_index ] = ( radius_start + ( d * ( radius_end - radius_start ) ) ) + raw->width_adjustment;

  0035c	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _radius_end$[ebp]
  00361	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _radius_start$[ebp]
  00366	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  0036b	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _radius_start$[ebp]
  00370	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00373	f3 0f 58 40 40	 addss	 xmm0, DWORD PTR [eax+64]
  00378	8b 4d 10	 mov	 ecx, DWORD PTR _trail_index$[ebp]
  0037b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?trail_radius@@3PAMA
  00381	f3 0f 11 04 8a	 movss	 DWORD PTR [edx+ecx*4], xmm0

; 1009 : 
; 1010 : 	for ( trail = 0 ; trail < 2 ; trail ++ )

  00386	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _trail$[ebp], 0
  0038d	eb 09		 jmp	 SHORT $LN4@get_smoke_
$LN2@get_smoke_:
  0038f	8b 45 b8	 mov	 eax, DWORD PTR _trail$[ebp]
  00392	83 c0 01	 add	 eax, 1
  00395	89 45 b8	 mov	 DWORD PTR _trail$[ebp], eax
$LN4@get_smoke_:
  00398	83 7d b8 02	 cmp	 DWORD PTR _trail$[ebp], 2
  0039c	0f 8d a9 00 00
	00		 jge	 $LN3@get_smoke_

; 1011 : 	{
; 1012 : 		convert_float_to_int (red_result, &temp);

  003a2	8d 45 bc	 lea	 eax, DWORD PTR _temp$[ebp]
  003a5	50		 push	 eax
  003a6	51		 push	 ecx
  003a7	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _red_result$[ebp]
  003ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b1	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1013 : 		trail_data[ trail ][ trail_index ].colour.red = temp;

  003b6	6b 45 10 2c	 imul	 eax, DWORD PTR _trail_index$[ebp], 44
  003ba	8b 4d b8	 mov	 ecx, DWORD PTR _trail$[ebp]
  003bd	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx*4]
  003c4	8a 4d bc	 mov	 cl, BYTE PTR _temp$[ebp]
  003c7	88 4c 02 2a	 mov	 BYTE PTR [edx+eax+42], cl

; 1014 : 
; 1015 : 		convert_float_to_int (green_result, &temp);

  003cb	8d 45 bc	 lea	 eax, DWORD PTR _temp$[ebp]
  003ce	50		 push	 eax
  003cf	51		 push	 ecx
  003d0	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _green_result$[ebp]
  003d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003da	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1016 : 		trail_data[ trail ][ trail_index ].colour.green = temp;

  003df	6b 45 10 2c	 imul	 eax, DWORD PTR _trail_index$[ebp], 44
  003e3	8b 4d b8	 mov	 ecx, DWORD PTR _trail$[ebp]
  003e6	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx*4]
  003ed	8a 4d bc	 mov	 cl, BYTE PTR _temp$[ebp]
  003f0	88 4c 02 29	 mov	 BYTE PTR [edx+eax+41], cl

; 1017 : 
; 1018 : 		convert_float_to_int (blue_result, &temp);

  003f4	8d 45 bc	 lea	 eax, DWORD PTR _temp$[ebp]
  003f7	50		 push	 eax
  003f8	51		 push	 ecx
  003f9	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _blue_result$[ebp]
  003fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00403	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1019 : 		trail_data[ trail ][ trail_index ].colour.blue = temp;

  00408	6b 45 10 2c	 imul	 eax, DWORD PTR _trail_index$[ebp], 44
  0040c	8b 4d b8	 mov	 ecx, DWORD PTR _trail$[ebp]
  0040f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx*4]
  00416	8a 4d bc	 mov	 cl, BYTE PTR _temp$[ebp]
  00419	88 4c 02 28	 mov	 BYTE PTR [edx+eax+40], cl

; 1020 : 
; 1021 : 		convert_float_to_int (alpha_result, &temp);

  0041d	8d 45 bc	 lea	 eax, DWORD PTR _temp$[ebp]
  00420	50		 push	 eax
  00421	51		 push	 ecx
  00422	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _alpha_result$[ebp]
  00427	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042c	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1022 : 		trail_data[ trail ][ trail_index ].colour.alpha = temp;

  00431	6b 45 10 2c	 imul	 eax, DWORD PTR _trail_index$[ebp], 44
  00435	8b 4d b8	 mov	 ecx, DWORD PTR _trail$[ebp]
  00438	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx*4]
  0043f	8a 4d bc	 mov	 cl, BYTE PTR _temp$[ebp]
  00442	88 4c 02 2b	 mov	 BYTE PTR [edx+eax+43], cl

; 1023 : 	}

  00446	e9 44 ff ff ff	 jmp	 $LN2@get_smoke_
$LN3@get_smoke_:

; 1024 : }

  0044b	5f		 pop	 edi
  0044c	5e		 pop	 esi
  0044d	5b		 pop	 ebx
  0044e	8b e5		 mov	 esp, ebp
  00450	5d		 pop	 ebp
  00451	c2 14 00	 ret	 20			; 00000014H
?get_smoke_trail_display_values@@YGXPAUSMOKE_LIST@@MHPAUSMOKE_LIST_DATA@@M@Z ENDP ; get_smoke_trail_display_values
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z
_TEXT	SEGMENT
tv257 = -160						; size = 8
tv133 = -160						; size = 8
tv90 = -160						; size = 8
tv79 = -160						; size = 8
tv258 = -152						; size = 8
tv134 = -152						; size = 8
tv91 = -152						; size = 8
tv80 = -152						; size = 8
_number_of_frames$ = -80				; size = 4
_result$ = -76						; size = 4
_frame$ = -72						; size = 4
_alpha_percentage$ = -65				; size = 1
_scale$ = -64						; size = 4
_blue_lightlevel$ = -60					; size = 4
_green_lightlevel$ = -56				; size = 4
_red_lightlevel$ = -52					; size = 4
_radius_end$ = -48					; size = 4
_alpha_end$ = -44					; size = 4
_blue_end$ = -40					; size = 4
_green_end$ = -36					; size = 4
_red_end$ = -32						; size = 4
_radius_start$ = -28					; size = 4
_alpha_start$ = -24					; size = 4
_blue_start$ = -20					; size = 4
_green_start$ = -16					; size = 4
_red_start$ = -12					; size = 4
_lifescale$ = -8					; size = 4
_d$ = -4						; size = 4
_raw$ = 8						; size = 4
_index$ = 12						; size = 4
_lifetime$ = 16						; size = 4
_spr$ = 20						; size = 4
_smoke_info$ = 24					; size = 4
?get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z PROC ; get_smoke_sprite_display_values, COMDAT

; 758  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 759  : 	float
; 760  : 		d,
; 761  : 		lifescale,
; 762  : 		red_start,
; 763  : 		green_start,
; 764  : 		blue_start,
; 765  : 		alpha_start,
; 766  : 		radius_start,
; 767  : 		red_end,
; 768  : 		green_end,
; 769  : 		blue_end,
; 770  : 		alpha_end,
; 771  : 		radius_end,
; 772  : 		red_lightlevel,
; 773  : 		green_lightlevel,
; 774  : 		blue_lightlevel,
; 775  : 		// Xhit: added scale and alpha for downwash effect (030328)
; 776  : 		scale;
; 777  : 	
; 778  : 	unsigned char
; 779  : 		alpha_percentage;
; 780  : 
; 781  : 	int
; 782  : 		frame,
; 783  : 		result,
; 784  : 		number_of_frames;
; 785  : 
; 786  : 	lifescale = lifetime / raw->smoke_lifetime;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0000f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  00014	f3 0f 5e 40 38	 divss	 xmm0, DWORD PTR [eax+56]
  00019	f3 0f 11 45 f8	 movss	 DWORD PTR _lifescale$[ebp], xmm0

; 787  : 	
; 788  : 	// Xhit: added to get scale and alpha for downwash effect (030328)
; 789  : 	scale = raw->scale;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00021	f3 0f 10 40 44	 movss	 xmm0, DWORD PTR [eax+68]
  00026	f3 0f 11 45 c0	 movss	 DWORD PTR _scale$[ebp], xmm0

; 790  : 	alpha_percentage = raw->alpha_percentage;

  0002b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002e	8a 48 48	 mov	 cl, BYTE PTR [eax+72]
  00031	88 4d bf	 mov	 BYTE PTR _alpha_percentage$[ebp], cl

; 791  : 
; 792  : 	// adjust downwash for ambient light, so that it won't "glow" in the dark
; 793  : 	get_3d_ambient_light_level(&red_lightlevel, &green_lightlevel, &blue_lightlevel);

  00034	8d 45 c4	 lea	 eax, DWORD PTR _blue_lightlevel$[ebp]
  00037	50		 push	 eax
  00038	8d 4d c8	 lea	 ecx, DWORD PTR _green_lightlevel$[ebp]
  0003b	51		 push	 ecx
  0003c	8d 55 cc	 lea	 edx, DWORD PTR _red_lightlevel$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ?get_3d_ambient_light_level@@YGXPAM00@Z ; get_3d_ambient_light_level

; 794  : 	red_lightlevel = bound(red_lightlevel * 2.5, 0.1, 1.0);

  00045	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _red_lightlevel$[ebp]
  0004a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  00052	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb999999999999a
  0005a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0005e	76 12		 jbe	 SHORT $LN12@get_smoke_
  00060	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00068	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv80[ebp], xmm0
  00070	eb 4e		 jmp	 SHORT $LN13@get_smoke_
$LN12@get_smoke_:
  00072	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _red_lightlevel$[ebp]
  00077	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  0007f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00087	76 12		 jbe	 SHORT $LN10@get_smoke_
  00089	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00091	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv79[ebp], xmm0
  00099	eb 15		 jmp	 SHORT $LN11@get_smoke_
$LN10@get_smoke_:
  0009b	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _red_lightlevel$[ebp]
  000a0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  000a8	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv79[ebp], xmm0
$LN11@get_smoke_:
  000b0	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv79[ebp]
  000b8	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv80[ebp], xmm0
$LN13@get_smoke_:
  000c0	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv80[ebp]
  000c8	f3 0f 11 45 cc	 movss	 DWORD PTR _red_lightlevel$[ebp], xmm0

; 795  : 	green_lightlevel = bound(green_lightlevel * 2.5, 0.1, 1.0);

  000cd	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _green_lightlevel$[ebp]
  000d2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  000da	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb999999999999a
  000e2	66 0f 2f c8	 comisd	 xmm1, xmm0
  000e6	76 12		 jbe	 SHORT $LN16@get_smoke_
  000e8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000f0	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv91[ebp], xmm0
  000f8	eb 4e		 jmp	 SHORT $LN17@get_smoke_
$LN16@get_smoke_:
  000fa	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _green_lightlevel$[ebp]
  000ff	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  00107	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  0010f	76 12		 jbe	 SHORT $LN14@get_smoke_
  00111	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00119	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv90[ebp], xmm0
  00121	eb 15		 jmp	 SHORT $LN15@get_smoke_
$LN14@get_smoke_:
  00123	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _green_lightlevel$[ebp]
  00128	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  00130	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv90[ebp], xmm0
$LN15@get_smoke_:
  00138	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv90[ebp]
  00140	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv91[ebp], xmm0
$LN17@get_smoke_:
  00148	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv91[ebp]
  00150	f3 0f 11 45 c8	 movss	 DWORD PTR _green_lightlevel$[ebp], xmm0

; 796  : 	blue_lightlevel = bound(blue_lightlevel * 2.5, 0.1, 1.0);

  00155	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _blue_lightlevel$[ebp]
  0015a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  00162	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb999999999999a
  0016a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0016e	76 12		 jbe	 SHORT $LN20@get_smoke_
  00170	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00178	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv134[ebp], xmm0
  00180	eb 4e		 jmp	 SHORT $LN21@get_smoke_
$LN20@get_smoke_:
  00182	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _blue_lightlevel$[ebp]
  00187	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  0018f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00197	76 12		 jbe	 SHORT $LN18@get_smoke_
  00199	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  001a1	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv133[ebp], xmm0
  001a9	eb 15		 jmp	 SHORT $LN19@get_smoke_
$LN18@get_smoke_:
  001ab	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _blue_lightlevel$[ebp]
  001b0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  001b8	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv133[ebp], xmm0
$LN19@get_smoke_:
  001c0	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv133[ebp]
  001c8	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv134[ebp], xmm0
$LN21@get_smoke_:
  001d0	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv134[ebp]
  001d8	f3 0f 11 45 c4	 movss	 DWORD PTR _blue_lightlevel$[ebp], xmm0

; 797  : 
; 798  : 	if ( lifescale < smoke_info->colour_change_1 )

  001dd	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  001e0	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001e5	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _lifescale$[ebp]
  001e9	0f 86 ce 00 00
	00		 jbe	 $LN4@get_smoke_

; 799  : 	{
; 800  : 		red_start = (float)smoke_info->red_start * red_lightlevel;

  001ef	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  001f2	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001f5	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001f9	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _red_lightlevel$[ebp]
  001fe	f3 0f 11 45 f4	 movss	 DWORD PTR _red_start$[ebp], xmm0

; 801  : 		red_end = (float)smoke_info->red_1 * red_lightlevel;

  00203	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00206	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  0020a	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0020e	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _red_lightlevel$[ebp]
  00213	f3 0f 11 45 e0	 movss	 DWORD PTR _red_end$[ebp], xmm0

; 802  : 
; 803  : 		green_start = (float)smoke_info->green_start * green_lightlevel;

  00218	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0021b	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0021f	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00223	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _green_lightlevel$[ebp]
  00228	f3 0f 11 45 f0	 movss	 DWORD PTR _green_start$[ebp], xmm0

; 804  : 		green_end = (float)smoke_info->green_1 * green_lightlevel;

  0022d	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00230	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00234	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00238	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _green_lightlevel$[ebp]
  0023d	f3 0f 11 45 dc	 movss	 DWORD PTR _green_end$[ebp], xmm0

; 805  : 
; 806  : 		blue_start = (float)smoke_info->blue_start * blue_lightlevel;

  00242	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00245	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  00249	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0024d	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _blue_lightlevel$[ebp]
  00252	f3 0f 11 45 ec	 movss	 DWORD PTR _blue_start$[ebp], xmm0

; 807  : 		blue_end = (float)smoke_info->blue_1 * blue_lightlevel;

  00257	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0025a	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  0025e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00262	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _blue_lightlevel$[ebp]
  00267	f3 0f 11 45 d8	 movss	 DWORD PTR _blue_end$[ebp], xmm0

; 808  : 
; 809  : 		alpha_start = (float)smoke_info->alpha_start;

  0026c	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0026f	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00273	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00277	f3 0f 11 45 e8	 movss	 DWORD PTR _alpha_start$[ebp], xmm0

; 810  : 		alpha_end = (float)smoke_info->alpha_1;

  0027c	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0027f	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  00283	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00287	f3 0f 11 45 d4	 movss	 DWORD PTR _alpha_end$[ebp], xmm0

; 811  : 
; 812  : 		radius_start = (float)smoke_info->radius_start;

  0028c	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0028f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00294	f3 0f 11 45 e4	 movss	 DWORD PTR _radius_start$[ebp], xmm0

; 813  : 		radius_end = (float)smoke_info->radius_1;

  00299	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0029c	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  002a1	f3 0f 11 45 d0	 movss	 DWORD PTR _radius_end$[ebp], xmm0

; 814  : 
; 815  : 		d = lifescale / smoke_info->colour_change_1;

  002a6	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  002a9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifescale$[ebp]
  002ae	f3 0f 5e 40 08	 divss	 xmm0, DWORD PTR [eax+8]
  002b3	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0
  002b8	e9 df 01 00 00	 jmp	 $LN7@get_smoke_
$LN4@get_smoke_:

; 816  : 	}
; 817  : 	else if ( lifescale < smoke_info->colour_change_2 )

  002bd	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  002c0	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  002c5	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _lifescale$[ebp]
  002c9	0f 86 e3 00 00
	00		 jbe	 $LN6@get_smoke_

; 818  : 	{
; 819  : 		red_start = (float)smoke_info->red_1 * red_lightlevel;

  002cf	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  002d2	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  002d6	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  002da	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _red_lightlevel$[ebp]
  002df	f3 0f 11 45 f4	 movss	 DWORD PTR _red_start$[ebp], xmm0

; 820  : 		red_end = (float)smoke_info->red_2 * red_lightlevel;

  002e4	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  002e7	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  002eb	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  002ef	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _red_lightlevel$[ebp]
  002f4	f3 0f 11 45 e0	 movss	 DWORD PTR _red_end$[ebp], xmm0

; 821  : 
; 822  : 		green_start = (float)smoke_info->green_1 * green_lightlevel;

  002f9	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  002fc	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00300	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00304	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _green_lightlevel$[ebp]
  00309	f3 0f 11 45 f0	 movss	 DWORD PTR _green_start$[ebp], xmm0

; 823  : 		green_end = (float)smoke_info->green_2 * green_lightlevel;

  0030e	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00311	0f b6 48 19	 movzx	 ecx, BYTE PTR [eax+25]
  00315	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00319	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _green_lightlevel$[ebp]
  0031e	f3 0f 11 45 dc	 movss	 DWORD PTR _green_end$[ebp], xmm0

; 824  : 
; 825  : 		blue_start = (float)smoke_info->blue_1 * blue_lightlevel;

  00323	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00326	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  0032a	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0032e	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _blue_lightlevel$[ebp]
  00333	f3 0f 11 45 ec	 movss	 DWORD PTR _blue_start$[ebp], xmm0

; 826  : 		blue_end = (float)smoke_info->blue_2 * blue_lightlevel;

  00338	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0033b	0f b6 48 1a	 movzx	 ecx, BYTE PTR [eax+26]
  0033f	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00343	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _blue_lightlevel$[ebp]
  00348	f3 0f 11 45 d8	 movss	 DWORD PTR _blue_end$[ebp], xmm0

; 827  : 
; 828  : 		alpha_start = (float)smoke_info->alpha_1;

  0034d	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00350	0f b6 48 0f	 movzx	 ecx, BYTE PTR [eax+15]
  00354	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00358	f3 0f 11 45 e8	 movss	 DWORD PTR _alpha_start$[ebp], xmm0

; 829  : 		alpha_end = (float)smoke_info->alpha_2;

  0035d	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00360	0f b6 48 1b	 movzx	 ecx, BYTE PTR [eax+27]
  00364	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00368	f3 0f 11 45 d4	 movss	 DWORD PTR _alpha_end$[ebp], xmm0

; 830  : 
; 831  : 		radius_start = (float)smoke_info->radius_1;

  0036d	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00370	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00375	f3 0f 11 45 e4	 movss	 DWORD PTR _radius_start$[ebp], xmm0

; 832  : 		radius_end = (float)smoke_info->radius_2;

  0037a	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0037d	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00382	f3 0f 11 45 d0	 movss	 DWORD PTR _radius_end$[ebp], xmm0

; 833  : 
; 834  : 		d = ( lifescale - smoke_info->colour_change_1 ) / ( smoke_info->colour_change_2 - smoke_info->colour_change_1 );

  00387	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0038a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifescale$[ebp]
  0038f	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00394	8b 4d 18	 mov	 ecx, DWORD PTR _smoke_info$[ebp]
  00397	8b 55 18	 mov	 edx, DWORD PTR _smoke_info$[ebp]
  0039a	f3 0f 10 49 14	 movss	 xmm1, DWORD PTR [ecx+20]
  0039f	f3 0f 5c 4a 08	 subss	 xmm1, DWORD PTR [edx+8]
  003a4	f3 0f 5e c1	 divss	 xmm0, xmm1
  003a8	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0

; 835  : 	}
; 836  : 	else

  003ad	e9 ea 00 00 00	 jmp	 $LN7@get_smoke_
$LN6@get_smoke_:

; 837  : 	{
; 838  : 		red_start = (float)smoke_info->red_2 * red_lightlevel;

  003b2	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  003b5	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  003b9	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003bd	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _red_lightlevel$[ebp]
  003c2	f3 0f 11 45 f4	 movss	 DWORD PTR _red_start$[ebp], xmm0

; 839  : 		red_end = (float)smoke_info->red_end * red_lightlevel;

  003c7	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  003ca	0f b6 48 20	 movzx	 ecx, BYTE PTR [eax+32]
  003ce	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003d2	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _red_lightlevel$[ebp]
  003d7	f3 0f 11 45 e0	 movss	 DWORD PTR _red_end$[ebp], xmm0

; 840  : 
; 841  : 		green_start = (float)smoke_info->green_2 * green_lightlevel;

  003dc	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  003df	0f b6 48 19	 movzx	 ecx, BYTE PTR [eax+25]
  003e3	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003e7	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _green_lightlevel$[ebp]
  003ec	f3 0f 11 45 f0	 movss	 DWORD PTR _green_start$[ebp], xmm0

; 842  : 		green_end = (float)smoke_info->green_end * green_lightlevel;

  003f1	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  003f4	0f b6 48 21	 movzx	 ecx, BYTE PTR [eax+33]
  003f8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003fc	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _green_lightlevel$[ebp]
  00401	f3 0f 11 45 dc	 movss	 DWORD PTR _green_end$[ebp], xmm0

; 843  : 
; 844  : 		blue_start = (float)smoke_info->blue_2 * blue_lightlevel;

  00406	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00409	0f b6 48 1a	 movzx	 ecx, BYTE PTR [eax+26]
  0040d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00411	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _blue_lightlevel$[ebp]
  00416	f3 0f 11 45 ec	 movss	 DWORD PTR _blue_start$[ebp], xmm0

; 845  : 		blue_end = (float)smoke_info->blue_end * blue_lightlevel;

  0041b	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0041e	0f b6 48 22	 movzx	 ecx, BYTE PTR [eax+34]
  00422	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00426	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _blue_lightlevel$[ebp]
  0042b	f3 0f 11 45 d8	 movss	 DWORD PTR _blue_end$[ebp], xmm0

; 846  : 
; 847  : 		alpha_start = (float)smoke_info->alpha_2;

  00430	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00433	0f b6 48 1b	 movzx	 ecx, BYTE PTR [eax+27]
  00437	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0043b	f3 0f 11 45 e8	 movss	 DWORD PTR _alpha_start$[ebp], xmm0

; 848  : 		alpha_end = (float)smoke_info->alpha_end;

  00440	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00443	0f b6 48 23	 movzx	 ecx, BYTE PTR [eax+35]
  00447	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0044b	f3 0f 11 45 d4	 movss	 DWORD PTR _alpha_end$[ebp], xmm0

; 849  : 
; 850  : 		radius_start = (float)smoke_info->radius_2;

  00450	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00453	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00458	f3 0f 11 45 e4	 movss	 DWORD PTR _radius_start$[ebp], xmm0

; 851  : 		radius_end = (float)smoke_info->radius_end;

  0045d	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00460	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  00465	f3 0f 11 45 d0	 movss	 DWORD PTR _radius_end$[ebp], xmm0

; 852  : 
; 853  : 		d = ( lifescale - smoke_info->colour_change_2 ) / ( 1.0 - smoke_info->colour_change_2 );

  0046a	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0046d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifescale$[ebp]
  00472	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
  00477	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0047b	8b 4d 18	 mov	 ecx, DWORD PTR _smoke_info$[ebp]
  0047e	f3 0f 5a 49 14	 cvtss2sd xmm1, DWORD PTR [ecx+20]
  00483	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  0048b	f2 0f 5c d1	 subsd	 xmm2, xmm1
  0048f	f2 0f 5e c2	 divsd	 xmm0, xmm2
  00493	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00497	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0
$LN7@get_smoke_:

; 854  : 	}
; 855  : 
; 856  : 	d = bound( d, 0.0, 1.0 );

  0049c	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _d$[ebp]
  004a1	0f 57 c9	 xorps	 xmm1, xmm1
  004a4	66 0f 2f c8	 comisd	 xmm1, xmm0
  004a8	76 0d		 jbe	 SHORT $LN24@get_smoke_
  004aa	0f 57 c0	 xorps	 xmm0, xmm0
  004ad	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv258[ebp], xmm0
  004b5	eb 3e		 jmp	 SHORT $LN25@get_smoke_
$LN24@get_smoke_:
  004b7	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _d$[ebp]
  004bc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  004c4	76 12		 jbe	 SHORT $LN22@get_smoke_
  004c6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  004ce	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv257[ebp], xmm0
  004d6	eb 0d		 jmp	 SHORT $LN23@get_smoke_
$LN22@get_smoke_:
  004d8	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _d$[ebp]
  004dd	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv257[ebp], xmm0
$LN23@get_smoke_:
  004e5	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv257[ebp]
  004ed	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv258[ebp], xmm0
$LN25@get_smoke_:
  004f5	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv258[ebp]
  004fd	f3 0f 11 45 fc	 movss	 DWORD PTR _d$[ebp], xmm0

; 857  : 
; 858  : 	//
; 859  : 	// set sprites colour
; 860  : 	// 
; 861  : 	
; 862  : 	convert_float_to_int (red_start + (d * (red_end - red_start)), &result);

  00502	8d 45 b4	 lea	 eax, DWORD PTR _result$[ebp]
  00505	50		 push	 eax
  00506	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _red_end$[ebp]
  0050b	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _red_start$[ebp]
  00510	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  00515	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _red_start$[ebp]
  0051a	51		 push	 ecx
  0051b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00520	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 863  : 	spr->red = result;

  00525	8b 45 14	 mov	 eax, DWORD PTR _spr$[ebp]
  00528	8a 4d b4	 mov	 cl, BYTE PTR _result$[ebp]
  0052b	88 48 0e	 mov	 BYTE PTR [eax+14], cl

; 864  : 
; 865  : 	convert_float_to_int (green_start + (d * (green_end - green_start)), &result);

  0052e	8d 45 b4	 lea	 eax, DWORD PTR _result$[ebp]
  00531	50		 push	 eax
  00532	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _green_end$[ebp]
  00537	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _green_start$[ebp]
  0053c	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  00541	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _green_start$[ebp]
  00546	51		 push	 ecx
  00547	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054c	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 866  : 	spr->green = result;

  00551	8b 45 14	 mov	 eax, DWORD PTR _spr$[ebp]
  00554	8a 4d b4	 mov	 cl, BYTE PTR _result$[ebp]
  00557	88 48 0d	 mov	 BYTE PTR [eax+13], cl

; 867  : 
; 868  : 	convert_float_to_int (blue_start + (d * (blue_end - blue_start)), &result);

  0055a	8d 45 b4	 lea	 eax, DWORD PTR _result$[ebp]
  0055d	50		 push	 eax
  0055e	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _blue_end$[ebp]
  00563	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _blue_start$[ebp]
  00568	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  0056d	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _blue_start$[ebp]
  00572	51		 push	 ecx
  00573	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00578	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 869  : 	spr->blue = result;

  0057d	8b 45 14	 mov	 eax, DWORD PTR _spr$[ebp]
  00580	8a 4d b4	 mov	 cl, BYTE PTR _result$[ebp]
  00583	88 48 0c	 mov	 BYTE PTR [eax+12], cl

; 870  : 
; 871  : 	// Xhit: added "* (alpha_percentage/100)" for downwash effect (030328)
; 872  : 	convert_float_to_int (((alpha_start + ( d * (alpha_end - alpha_start))) * (alpha_percentage/100.0)), &result);

  00586	8d 45 b4	 lea	 eax, DWORD PTR _result$[ebp]
  00589	50		 push	 eax
  0058a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _alpha_end$[ebp]
  0058f	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _alpha_start$[ebp]
  00594	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  00599	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _alpha_start$[ebp]
  0059e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  005a2	0f b6 4d bf	 movzx	 ecx, BYTE PTR _alpha_percentage$[ebp]
  005a6	f2 0f 2a c9	 cvtsi2sd xmm1, ecx
  005aa	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4059000000000000
  005b2	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  005b6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005ba	51		 push	 ecx
  005bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c0	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 873  : 	spr->alpha = result;

  005c5	8b 45 14	 mov	 eax, DWORD PTR _spr$[ebp]
  005c8	8a 4d b4	 mov	 cl, BYTE PTR _result$[ebp]
  005cb	88 48 0f	 mov	 BYTE PTR [eax+15], cl

; 874  : 
; 875  : 	//
; 876  : 	// set sprites size
; 877  : 	// 
; 878  : 	
; 879  : 	//Xhit: added "* scale" at the end of following expression (if scale is not used it's default to 1.0) (030328)
; 880  : 	result = ( radius_start + ( d * ( radius_end - radius_start ) ) ) * scale;

  005ce	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _radius_end$[ebp]
  005d3	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _radius_start$[ebp]
  005d8	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _d$[ebp]
  005dd	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _radius_start$[ebp]
  005e2	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  005e7	f3 0f 2c c0	 cvttss2si eax, xmm0
  005eb	89 45 b4	 mov	 DWORD PTR _result$[ebp], eax

; 881  : 
; 882  : 	spr->radius = result + raw->width_adjustment;

  005ee	f3 0f 2a 45 b4	 cvtsi2ss xmm0, DWORD PTR _result$[ebp]
  005f3	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  005f6	f3 0f 58 40 40	 addss	 xmm0, DWORD PTR [eax+64]
  005fb	8b 4d 14	 mov	 ecx, DWORD PTR _spr$[ebp]
  005fe	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 883  : 
; 884  : 	//
; 885  : 	// set sprites texture
; 886  : 	// 
; 887  : 
; 888  : 	number_of_frames = get_texture_animation_number_of_frames ( smoke_info->texture );

  00603	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00606	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00609	51		 push	 ecx
  0060a	e8 00 00 00 00	 call	 ?get_texture_animation_number_of_frames@@YGHW4TEXTURE_ANIMATION_INDICES@@@Z ; get_texture_animation_number_of_frames
  0060f	89 45 b0	 mov	 DWORD PTR _number_of_frames$[ebp], eax

; 889  : 
; 890  : 	convert_float_to_int (raw->current_frame, &frame);

  00612	8d 45 b8	 lea	 eax, DWORD PTR _frame$[ebp]
  00615	50		 push	 eax
  00616	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00619	51		 push	 ecx
  0061a	f3 0f 10 41 78	 movss	 xmm0, DWORD PTR [ecx+120]
  0061f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00624	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 891  : 
; 892  : 	frame += index;

  00629	8b 45 b8	 mov	 eax, DWORD PTR _frame$[ebp]
  0062c	03 45 0c	 add	 eax, DWORD PTR _index$[ebp]
  0062f	89 45 b8	 mov	 DWORD PTR _frame$[ebp], eax

; 893  : 
; 894  :     // stump - checking that we don't enter an infinite loop for smoke.
; 895  :     ASSERT ( number_of_frames != 0 );

  00632	83 7d b0 00	 cmp	 DWORD PTR _number_of_frames$[ebp], 0
  00636	75 1a		 jne	 SHORT $LN8@get_smoke_
  00638	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z@4JA
  0063d	05 89 00 00 00	 add	 eax, 137		; 00000089H
  00642	50		 push	 eax
  00643	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@PAEMHMCB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00648	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@ONILPABN@number_of_frames?5?$CB?$DN?50@
  0064d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@get_smoke_:

; 896  : 
; 897  : 	while (number_of_frames != 0 && frame >= number_of_frames) frame -= number_of_frames;

  00652	83 7d b0 00	 cmp	 DWORD PTR _number_of_frames$[ebp], 0
  00656	74 13		 je	 SHORT $LN3@get_smoke_
  00658	8b 45 b8	 mov	 eax, DWORD PTR _frame$[ebp]
  0065b	3b 45 b0	 cmp	 eax, DWORD PTR _number_of_frames$[ebp]
  0065e	7c 0b		 jl	 SHORT $LN3@get_smoke_
  00660	8b 45 b8	 mov	 eax, DWORD PTR _frame$[ebp]
  00663	2b 45 b0	 sub	 eax, DWORD PTR _number_of_frames$[ebp]
  00666	89 45 b8	 mov	 DWORD PTR _frame$[ebp], eax
  00669	eb e7		 jmp	 SHORT $LN8@get_smoke_
$LN3@get_smoke_:

; 898  : 
; 899  : 	spr->texture = get_texture_animation_texture_pointer ( smoke_info->texture, frame );

  0066b	8b 45 b8	 mov	 eax, DWORD PTR _frame$[ebp]
  0066e	50		 push	 eax
  0066f	8b 4d 18	 mov	 ecx, DWORD PTR _smoke_info$[ebp]
  00672	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00675	52		 push	 edx
  00676	e8 00 00 00 00	 call	 ?get_texture_animation_texture_pointer@@YGPAUSCREEN@@W4TEXTURE_ANIMATION_INDICES@@H@Z ; get_texture_animation_texture_pointer
  0067b	8b 4d 14	 mov	 ecx, DWORD PTR _spr$[ebp]
  0067e	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 900  : 
; 901  : 	spr->additive = smoke_info->additive;

  00681	8b 45 18	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00684	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00688	66 83 e1 01	 and	 cx, 1
  0068c	0f b7 d1	 movzx	 edx, cx
  0068f	8b 45 14	 mov	 eax, DWORD PTR _spr$[ebp]
  00692	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 902  : 
; 903  : 	//
; 904  : 	// set sprites rotation
; 905  : 	// 
; 906  : 
; 907  : 	spr->roll = wrap_angle (raw->start_rotation[ index ] + (lifescale * PI * 0.75f));

  00695	51		 push	 ecx
  00696	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  0069e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a3	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  006a6	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  006a9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifescale$[ebp]
  006ae	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40490fdb
  006b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f400000
  006be	8b 55 0c	 mov	 edx, DWORD PTR _index$[ebp]
  006c1	f3 0f 58 04 91	 addss	 xmm0, DWORD PTR [ecx+edx*4]
  006c6	51		 push	 ecx
  006c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006cc	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  006d1	8b 45 14	 mov	 eax, DWORD PTR _spr$[ebp]
  006d4	d9 58 14	 fstp	 DWORD PTR [eax+20]

; 908  : }

  006d7	5f		 pop	 edi
  006d8	5e		 pop	 esi
  006d9	5b		 pop	 ebx
  006da	8b e5		 mov	 esp, ebp
  006dc	5d		 pop	 ebp
  006dd	c2 14 00	 ret	 20			; 00000014H
?get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z ENDP ; get_smoke_sprite_display_values
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?draw_smoke_trail@@YGXPAUENTITY@@HHH@Z
_TEXT	SEGMENT
tv150 = -132						; size = 4
tv152 = -128						; size = 8
_smoke_info$ = -56					; size = 4
_trail_texture$ = -52					; size = 4
_smoke_pos$ = -48					; size = 4
_loop$ = -44						; size = 4
_num_points$ = -40					; size = 4
_frame$ = -36						; size = 4
_ds$ = -32						; size = 4
_current$ = -28						; size = 4
_texture_distance$ = -24				; size = 4
_dt$ = -20						; size = 4
_zb$ = -16						; size = 4
_alpha_modifier$ = -12					; size = 4
_lifetime$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_start$ = 12						; size = 4
_end$ = 16						; size = 4
_number_of_slots$ = 20					; size = 4
?draw_smoke_trail@@YGXPAUENTITY@@HHH@Z PROC		; draw_smoke_trail, COMDAT

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 341  : 	smoke_list
; 342  : 		*raw;
; 343  : 
; 344  : 	float
; 345  : 		lifetime,
; 346  : 		alpha_modifier,
; 347  : 		zb,
; 348  : 		dt,
; 349  : 		texture_distance;
; 350  : 
; 351  : 	int
; 352  : 		current,
; 353  : 		ds,
; 354  : 		frame,
; 355  : 		num_points,
; 356  : 		loop;
; 357  : 
; 358  : 	vec3d
; 359  : 		*smoke_pos;
; 360  : 
; 361  : 	screen
; 362  : 		*trail_texture;
; 363  : 
; 364  : 	smoke_list_data
; 365  : 		*smoke_info;
; 366  : 
; 367  : 	raw = (smoke_list *) get_local_entity_data( en );

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 368  : 
; 369  : 	smoke_info = &(smoke_list_database[ raw->smoke_type ]);

  00015	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00018	6b 48 28 44	 imul	 ecx, DWORD PTR [eax+40], 68
  0001c	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00022	89 4d c8	 mov	 DWORD PTR _smoke_info$[ebp], ecx

; 370  : 
; 371  : 	dt = raw->frequency;

  00025	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00028	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0002d	f3 0f 11 45 ec	 movss	 DWORD PTR _dt$[ebp], xmm0

; 372  : 
; 373  : 	texture_distance = raw->texture_distance;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00035	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  0003a	f3 0f 11 45 e8	 movss	 DWORD PTR _texture_distance$[ebp], xmm0

; 374  : 
; 375  : 	current = start;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _start$[ebp]
  00042	89 45 e4	 mov	 DWORD PTR _current$[ebp], eax

; 376  : 
; 377  : 	num_points = end - start;

  00045	8b 45 10	 mov	 eax, DWORD PTR _end$[ebp]
  00048	2b 45 0c	 sub	 eax, DWORD PTR _start$[ebp]
  0004b	89 45 d8	 mov	 DWORD PTR _num_points$[ebp], eax

; 378  : 
; 379  : 	if ( num_points < 0 )

  0004e	79 09		 jns	 SHORT $LN5@draw_smoke

; 380  : 	{
; 381  : 		num_points += number_of_slots;

  00050	8b 45 d8	 mov	 eax, DWORD PTR _num_points$[ebp]
  00053	03 45 14	 add	 eax, DWORD PTR _number_of_slots$[ebp]
  00056	89 45 d8	 mov	 DWORD PTR _num_points$[ebp], eax
$LN5@draw_smoke:

; 382  : 	}
; 383  : 
; 384  : 	for ( loop = 0 ; loop <= num_points ; loop ++ )

  00059	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00060	eb 09		 jmp	 SHORT $LN4@draw_smoke
$LN2@draw_smoke:
  00062	8b 45 d4	 mov	 eax, DWORD PTR _loop$[ebp]
  00065	83 c0 01	 add	 eax, 1
  00068	89 45 d4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_smoke:
  0006b	8b 45 d4	 mov	 eax, DWORD PTR _loop$[ebp]
  0006e	3b 45 d8	 cmp	 eax, DWORD PTR _num_points$[ebp]
  00071	0f 8f 43 02 00
	00		 jg	 $LN3@draw_smoke

; 385  : 	{
; 386  : 		if ( loop >= MAX_SMOKE_TRAIL_POINTS )

  00077	81 7d d4 c8 00
	00 00		 cmp	 DWORD PTR _loop$[ebp], 200 ; 000000c8H
  0007e	7c 1b		 jl	 SHORT $LN6@draw_smoke

; 387  : 		{
; 388  : 			debug_log( "smoke trail has > %d points ( %d )", MAX_SMOKE_TRAIL_POINTS, number_of_slots );

  00080	8b 45 14	 mov	 eax, DWORD PTR _number_of_slots$[ebp]
  00083	50		 push	 eax
  00084	68 c8 00 00 00	 push	 200			; 000000c8H
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@HBKAJIJO@smoke?5trail?5has?5?$DO?5?$CFd?5points?5?$CI?5?$CF@
  0008e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 389  : 
; 390  : 			return;

  00096	e9 59 03 00 00	 jmp	 $LN1@draw_smoke
$LN6@draw_smoke:

; 391  : 		}
; 392  : 
; 393  : 		//
; 394  : 		// determine how long the current smoke puff has been "living"
; 395  : 		//
; 396  : 
; 397  : 		smoke_pos = &(raw->position[ current ]);

  0009b	6b 45 e4 0c	 imul	 eax, DWORD PTR _current$[ebp], 12
  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000a2	03 41 70	 add	 eax, DWORD PTR [ecx+112]
  000a5	89 45 d0	 mov	 DWORD PTR _smoke_pos$[ebp], eax

; 398  : 
; 399  : 		if ( ( smoke_info->lock_to_parent ) && ( loop == num_points ) && ( raw->generator_lifetime > 0.0 ) )

  000a8	8b 45 c8	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  000ab	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  000af	66 c1 e9 04	 shr	 cx, 4
  000b3	66 83 e1 01	 and	 cx, 1
  000b7	0f b7 d1	 movzx	 edx, cx
  000ba	85 d2		 test	 edx, edx
  000bc	74 3b		 je	 SHORT $LN7@draw_smoke
  000be	8b 45 d4	 mov	 eax, DWORD PTR _loop$[ebp]
  000c1	3b 45 d8	 cmp	 eax, DWORD PTR _num_points$[ebp]
  000c4	75 33		 jne	 SHORT $LN7@draw_smoke
  000c6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c9	f3 0f 5a 40 30	 cvtss2sd xmm0, DWORD PTR [eax+48]
  000ce	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000d6	76 21		 jbe	 SHORT $LN7@draw_smoke

; 400  : 		{
; 401  : 			get_new_smoke_position (en, &(trail_points [loop]));

  000d8	6b 45 d4 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  000dc	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  000e2	50		 push	 eax
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000e6	51		 push	 ecx
  000e7	e8 00 00 00 00	 call	 ?get_new_smoke_position@@YGHPAUENTITY@@PAUVEC3D@@@Z ; get_new_smoke_position

; 402  : 
; 403  : 			lifetime = 0.0;		// shouldn't really be here as it might cause problems if there are more than 1 trail per smokelist

  000ec	0f 57 c0	 xorps	 xmm0, xmm0
  000ef	f3 0f 11 45 f8	 movss	 DWORD PTR _lifetime$[ebp], xmm0

; 404  : 		}
; 405  : 		else

  000f4	e9 be 00 00 00	 jmp	 $LN8@draw_smoke
$LN7@draw_smoke:

; 406  : 		{
; 407  : 			memcpy (&(trail_points[ loop ]), smoke_pos, sizeof (vec3d));

  000f9	6a 0c		 push	 12			; 0000000cH
  000fb	8b 45 d0	 mov	 eax, DWORD PTR _smoke_pos$[ebp]
  000fe	50		 push	 eax
  000ff	6b 4d d4 0c	 imul	 ecx, DWORD PTR _loop$[ebp], 12
  00103	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 _memcpy
  0010f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 408  : 
; 409  : 			ds = ( raw->tail - current ) - 1;

  00112	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00115	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00118	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0011b	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0011e	2b 4d e4	 sub	 ecx, DWORD PTR _current$[ebp]
  00121	83 e9 01	 sub	 ecx, 1
  00124	89 4d e0	 mov	 DWORD PTR _ds$[ebp], ecx

; 410  : 
; 411  : 			if ( ds < 0 )

  00127	79 09		 jns	 SHORT $LN9@draw_smoke

; 412  : 			{
; 413  : 				ds += number_of_slots;

  00129	8b 45 e0	 mov	 eax, DWORD PTR _ds$[ebp]
  0012c	03 45 14	 add	 eax, DWORD PTR _number_of_slots$[ebp]
  0012f	89 45 e0	 mov	 DWORD PTR _ds$[ebp], eax
$LN9@draw_smoke:

; 414  : 			}
; 415  : 
; 416  : 			//integer part
; 417  : 			lifetime = ds * dt;

  00132	f3 0f 2a 45 e0	 cvtsi2ss xmm0, DWORD PTR _ds$[ebp]
  00137	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _dt$[ebp]
  0013c	f3 0f 11 45 f8	 movss	 DWORD PTR _lifetime$[ebp], xmm0

; 418  : 
; 419  : 			//fractional part
; 420  : 			lifetime += ( raw->frequency - raw->smoke_sleep );

  00141	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00144	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00147	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0014c	f3 0f 5c 41 34	 subss	 xmm0, DWORD PTR [ecx+52]
  00151	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _lifetime$[ebp]
  00156	f3 0f 11 45 f8	 movss	 DWORD PTR _lifetime$[ebp], xmm0

; 421  : 
; 422  : 			lifetime = bound( lifetime, 0.0, raw->smoke_lifetime );

  0015b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _lifetime$[ebp]
  00160	0f 57 c9	 xorps	 xmm1, xmm1
  00163	66 0f 2f c8	 comisd	 xmm1, xmm0
  00167	76 0a		 jbe	 SHORT $LN24@draw_smoke
  00169	0f 57 c0	 xorps	 xmm0, xmm0
  0016c	f2 0f 11 45 80	 movsd	 QWORD PTR tv152[ebp], xmm0
  00171	eb 3a		 jmp	 SHORT $LN25@draw_smoke
$LN24@draw_smoke:
  00173	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00176	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  0017b	0f 2f 40 38	 comiss	 xmm0, DWORD PTR [eax+56]
  0017f	76 12		 jbe	 SHORT $LN22@draw_smoke
  00181	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00184	f3 0f 10 41 38	 movss	 xmm0, DWORD PTR [ecx+56]
  00189	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR tv150[ebp], xmm0
  00191	eb 0d		 jmp	 SHORT $LN23@draw_smoke
$LN22@draw_smoke:
  00193	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  00198	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR tv150[ebp], xmm0
$LN23@draw_smoke:
  001a0	f3 0f 5a 85 7c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv150[ebp]
  001a8	f2 0f 11 45 80	 movsd	 QWORD PTR tv152[ebp], xmm0
$LN25@draw_smoke:
  001ad	f2 0f 5a 45 80	 cvtsd2ss xmm0, QWORD PTR tv152[ebp]
  001b2	f3 0f 11 45 f8	 movss	 DWORD PTR _lifetime$[ebp], xmm0
$LN8@draw_smoke:

; 423  : 		}
; 424  : 
; 425  : 		// fade out the ends of the trail
; 426  : 		if ( loop == 0 )

  001b7	83 7d d4 00	 cmp	 DWORD PTR _loop$[ebp], 0
  001bb	75 2f		 jne	 SHORT $LN10@draw_smoke

; 427  : 		{
; 428  : 			alpha_modifier = 0.0 + ( 0.33 * ( raw->smoke_sleep / raw->frequency ) );

  001bd	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001c0	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001c3	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  001c8	f3 0f 5e 41 2c	 divss	 xmm0, DWORD PTR [ecx+44]
  001cd	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001d1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd51eb851eb851f
  001d9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  001e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e5	f3 0f 11 45 f4	 movss	 DWORD PTR _alpha_modifier$[ebp], xmm0
  001ea	eb 77		 jmp	 SHORT $LN15@draw_smoke
$LN10@draw_smoke:

; 429  : 		}
; 430  : 		else if ( loop == 1 )

  001ec	83 7d d4 01	 cmp	 DWORD PTR _loop$[ebp], 1
  001f0	75 2f		 jne	 SHORT $LN12@draw_smoke

; 431  : 		{
; 432  : 			alpha_modifier = 0.33 + ( 0.33 * ( raw->smoke_sleep / raw->frequency ) );

  001f2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001f5	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001f8	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  001fd	f3 0f 5e 41 2c	 divss	 xmm0, DWORD PTR [ecx+44]
  00202	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00206	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd51eb851eb851f
  0020e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd51eb851eb851f
  00216	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0021a	f3 0f 11 45 f4	 movss	 DWORD PTR _alpha_modifier$[ebp], xmm0
  0021f	eb 42		 jmp	 SHORT $LN15@draw_smoke
$LN12@draw_smoke:

; 433  : 		}
; 434  : 		else if ( loop == 2 )

  00221	83 7d d4 02	 cmp	 DWORD PTR _loop$[ebp], 2
  00225	75 2f		 jne	 SHORT $LN14@draw_smoke

; 435  : 		{
; 436  : 			alpha_modifier = 0.66 + ( 0.33 * ( raw->smoke_sleep / raw->frequency ) );

  00227	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0022a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0022d	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00232	f3 0f 5e 41 2c	 divss	 xmm0, DWORD PTR [ecx+44]
  00237	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0023b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd51eb851eb851f
  00243	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe51eb851eb851f
  0024b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0024f	f3 0f 11 45 f4	 movss	 DWORD PTR _alpha_modifier$[ebp], xmm0

; 437  : 		}
; 438  : 		else

  00254	eb 0d		 jmp	 SHORT $LN15@draw_smoke
$LN14@draw_smoke:

; 439  : 		{
; 440  : 			alpha_modifier = 1.0;

  00256	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0025e	f3 0f 11 45 f4	 movss	 DWORD PTR _alpha_modifier$[ebp], xmm0
$LN15@draw_smoke:

; 441  : 		}
; 442  : 	
; 443  : 		get_smoke_trail_display_values( raw, lifetime, loop, smoke_info, alpha_modifier );

  00263	51		 push	 ecx
  00264	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _alpha_modifier$[ebp]
  00269	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026e	8b 45 c8	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00271	50		 push	 eax
  00272	8b 4d d4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00275	51		 push	 ecx
  00276	51		 push	 ecx
  00277	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  0027c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00281	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00284	52		 push	 edx
  00285	e8 00 00 00 00	 call	 ?get_smoke_trail_display_values@@YGXPAUSMOKE_LIST@@MHPAUSMOKE_LIST_DATA@@M@Z ; get_smoke_trail_display_values

; 444  : 
; 445  : 		trail_lifetimes[ loop ] = lifetime;

  0028a	8b 45 d4	 mov	 eax, DWORD PTR _loop$[ebp]
  0028d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_lifetimes@@3PAMA
  00293	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  00298	f3 0f 11 04 81	 movss	 DWORD PTR [ecx+eax*4], xmm0

; 446  : 
; 447  : 		//
; 448  : 		// next point
; 449  : 		//
; 450  : 
; 451  : 		current ++;

  0029d	8b 45 e4	 mov	 eax, DWORD PTR _current$[ebp]
  002a0	83 c0 01	 add	 eax, 1
  002a3	89 45 e4	 mov	 DWORD PTR _current$[ebp], eax

; 452  : 
; 453  : 		if ( current >= number_of_slots )

  002a6	8b 45 e4	 mov	 eax, DWORD PTR _current$[ebp]
  002a9	3b 45 14	 cmp	 eax, DWORD PTR _number_of_slots$[ebp]
  002ac	7c 07		 jl	 SHORT $LN16@draw_smoke

; 454  : 		{
; 455  : 			current = 0;

  002ae	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _current$[ebp], 0
$LN16@draw_smoke:

; 456  : 		}
; 457  : 	}

  002b5	e9 a8 fd ff ff	 jmp	 $LN2@draw_smoke
$LN3@draw_smoke:

; 458  : 
; 459  : 	number_of_trail_points = 0;

  002ba	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_trail_points@@3HA, 0

; 460  : 
; 461  : 	calculate_smoke_trail_points( raw, start, end, number_of_slots );

  002c4	8b 45 14	 mov	 eax, DWORD PTR _number_of_slots$[ebp]
  002c7	50		 push	 eax
  002c8	8b 4d 10	 mov	 ecx, DWORD PTR _end$[ebp]
  002cb	51		 push	 ecx
  002cc	8b 55 0c	 mov	 edx, DWORD PTR _start$[ebp]
  002cf	52		 push	 edx
  002d0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?calculate_smoke_trail_points@@YGXPAUSMOKE_LIST@@HHH@Z ; calculate_smoke_trail_points

; 462  : 
; 463  : 	if ( number_of_trail_points < 2 )

  002d9	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?number_of_trail_points@@3HA, 2
  002e0	7d 05		 jge	 SHORT $LN17@draw_smoke

; 464  : 	{
; 465  : 		return;

  002e2	e9 0d 01 00 00	 jmp	 $LN1@draw_smoke
$LN17@draw_smoke:

; 466  : 	}
; 467  : 
; 468  : 	convert_float_to_int (raw->current_frame, &frame);

  002e7	8d 45 dc	 lea	 eax, DWORD PTR _frame$[ebp]
  002ea	50		 push	 eax
  002eb	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002ee	51		 push	 ecx
  002ef	f3 0f 10 41 78	 movss	 xmm0, DWORD PTR [ecx+120]
  002f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f9	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 469  : 
; 470  : 	trail_texture = get_texture_animation_texture_pointer ( smoke_info->texture, frame );

  002fe	8b 45 dc	 mov	 eax, DWORD PTR _frame$[ebp]
  00301	50		 push	 eax
  00302	8b 4d c8	 mov	 ecx, DWORD PTR _smoke_info$[ebp]
  00305	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?get_texture_animation_texture_pointer@@YGPAUSCREEN@@W4TEXTURE_ANIMATION_INDICES@@H@Z ; get_texture_animation_texture_pointer
  0030e	89 45 cc	 mov	 DWORD PTR _trail_texture$[ebp], eax

; 471  : 
; 472  : 	if ( smoke_info->additive )

  00311	8b 45 c8	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  00314	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00318	66 83 e1 01	 and	 cx, 1
  0031c	0f b7 d1	 movzx	 edx, cx
  0031f	85 d2		 test	 edx, edx
  00321	74 0f		 je	 SHORT $LN18@draw_smoke

; 473  : 	{
; 474  : 		zb = -50.0;

  00323	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2480000
  0032b	f3 0f 11 45 f0	 movss	 DWORD PTR _zb$[ebp], xmm0

; 475  : 	}
; 476  : 	else

  00330	eb 08		 jmp	 SHORT $LN19@draw_smoke
$LN18@draw_smoke:

; 477  : 	{
; 478  : 		zb = 0.0;

  00332	0f 57 c0	 xorps	 xmm0, xmm0
  00335	f3 0f 11 45 f0	 movss	 DWORD PTR _zb$[ebp], xmm0
$LN19@draw_smoke:

; 479  : 	}
; 480  : 
; 481  : 	insert_zbiased_smoke_trail_into_3d_scene ( number_of_trail_points, zb, smoke_info->additive, trail_texture, texture_distance, smoke_info->texture_size, trail_data[ 0 ] );

  0033a	b8 04 00 00 00	 mov	 eax, 4
  0033f	6b c8 00	 imul	 ecx, eax, 0
  00342	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  00348	52		 push	 edx
  00349	8b 45 c8	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0034c	51		 push	 ecx
  0034d	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00352	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00357	51		 push	 ecx
  00358	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _texture_distance$[ebp]
  0035d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00362	8b 4d cc	 mov	 ecx, DWORD PTR _trail_texture$[ebp]
  00365	51		 push	 ecx
  00366	8b 55 c8	 mov	 edx, DWORD PTR _smoke_info$[ebp]
  00369	66 8b 42 40	 mov	 ax, WORD PTR [edx+64]
  0036d	66 83 e0 01	 and	 ax, 1
  00371	0f b7 c8	 movzx	 ecx, ax
  00374	51		 push	 ecx
  00375	51		 push	 ecx
  00376	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _zb$[ebp]
  0037b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00380	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?number_of_trail_points@@3HA
  00386	52		 push	 edx
  00387	e8 00 00 00 00	 call	 ?insert_zbiased_smoke_trail_into_3d_scene@@YGXHMHPAUSCREEN@@MMPAUSMOKE_TRAIL_DATA@@@Z ; insert_zbiased_smoke_trail_into_3d_scene

; 482  : 
; 483  : 	if ( !smoke_info->flat )

  0038c	8b 45 c8	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0038f	66 8b 48 40	 mov	 cx, WORD PTR [eax+64]
  00393	66 c1 e9 02	 shr	 cx, 2
  00397	66 83 e1 01	 and	 cx, 1
  0039b	0f b7 d1	 movzx	 edx, cx
  0039e	85 d2		 test	 edx, edx
  003a0	75 52		 jne	 SHORT $LN20@draw_smoke

; 484  : 	{
; 485  : 		insert_zbiased_smoke_trail_into_3d_scene ( number_of_trail_points, zb, smoke_info->additive, trail_texture, texture_distance, smoke_info->texture_size, trail_data[ 1 ] );

  003a2	b8 04 00 00 00	 mov	 eax, 4
  003a7	c1 e0 00	 shl	 eax, 0
  003aa	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[eax]
  003b0	51		 push	 ecx
  003b1	8b 55 c8	 mov	 edx, DWORD PTR _smoke_info$[ebp]
  003b4	51		 push	 ecx
  003b5	f3 0f 10 42 38	 movss	 xmm0, DWORD PTR [edx+56]
  003ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003bf	51		 push	 ecx
  003c0	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _texture_distance$[ebp]
  003c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ca	8b 45 cc	 mov	 eax, DWORD PTR _trail_texture$[ebp]
  003cd	50		 push	 eax
  003ce	8b 4d c8	 mov	 ecx, DWORD PTR _smoke_info$[ebp]
  003d1	66 8b 51 40	 mov	 dx, WORD PTR [ecx+64]
  003d5	66 83 e2 01	 and	 dx, 1
  003d9	0f b7 c2	 movzx	 eax, dx
  003dc	50		 push	 eax
  003dd	51		 push	 ecx
  003de	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _zb$[ebp]
  003e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_trail_points@@3HA
  003ee	51		 push	 ecx
  003ef	e8 00 00 00 00	 call	 ?insert_zbiased_smoke_trail_into_3d_scene@@YGXHMHPAUSCREEN@@MMPAUSMOKE_TRAIL_DATA@@@Z ; insert_zbiased_smoke_trail_into_3d_scene
$LN20@draw_smoke:
$LN1@draw_smoke:

; 486  : 	}
; 487  : 
; 488  : 	#if DEBUG_MODULE
; 489  : 
; 490  : 	debug_log( "**************************************" );
; 491  : 
; 492  : 	debug_log( "SL_DRAW : %d trail points", number_of_trail_points );
; 493  : 
; 494  : 	for ( loop = 0 ; loop < number_of_trail_points ; loop ++ )
; 495  : 	{
; 496  : 		debug_log ("Alpha = %d", trail_data[ 0 ][ loop ].colour.alpha);
; 497  : 	}
; 498  : 
; 499  : 	debug_log( "**************************************" );
; 500  : 
; 501  : 	#endif
; 502  : }

  003f4	5f		 pop	 edi
  003f5	5e		 pop	 esi
  003f6	5b		 pop	 ebx
  003f7	8b e5		 mov	 esp, ebp
  003f9	5d		 pop	 ebp
  003fa	c2 10 00	 ret	 16			; 00000010H
?draw_smoke_trail@@YGXPAUENTITY@@HHH@Z ENDP		; draw_smoke_trail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?draw_smoke_trails@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_number_of_slots$ = -20					; size = 4
_current$ = -16						; size = 4
_end$ = -12						; size = 4
_start$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?draw_smoke_trails@@YGXPAUENTITY@@@Z PROC		; draw_smoke_trails, COMDAT

; 248  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 249  : 	smoke_list
; 250  : 		*raw;
; 251  : 
; 252  : 	int
; 253  : 		start,
; 254  : 		end,
; 255  : 		current,
; 256  : 		number_of_slots;
; 257  : 
; 258  : 	//
; 259  : 	// can only draw a trail if >1 point is "alive" ( EARLY OUT )
; 260  : 	//
; 261  : 
; 262  : 	raw = (smoke_list *) get_local_entity_data( en );

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 263  : 
; 264  : 	if ( raw->alive_count < 2 )

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00018	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0001e	83 f9 02	 cmp	 ecx, 2
  00021	73 05		 jae	 SHORT $LN7@draw_smoke

; 265  : 	{
; 266  : 		return;

  00023	e9 df 00 00 00	 jmp	 $LN1@draw_smoke
$LN7@draw_smoke:

; 267  : 	}
; 268  : 
; 269  : 	number_of_slots = raw->smoke_lifetime / raw->frequency;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0002e	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00033	f3 0f 5e 41 2c	 divss	 xmm0, DWORD PTR [ecx+44]
  00038	f3 0f 2c d0	 cvttss2si edx, xmm0
  0003c	89 55 ec	 mov	 DWORD PTR _number_of_slots$[ebp], edx

; 270  : 
; 271  : 	start = raw->head;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00042	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00045	c1 e1 00	 shl	 ecx, 0
  00048	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0004b	89 4d f8	 mov	 DWORD PTR _start$[ebp], ecx
$LN4@draw_smoke:

; 272  : 
; 273  : 	do
; 274  : 	{
; 275  : 		//
; 276  : 		// find start of a trail
; 277  : 		//
; 278  : 
; 279  : 		if ( raw->valid[ start ] )

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00051	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00054	8b 55 f8	 mov	 edx, DWORD PTR _start$[ebp]
  00057	0f b6 04 11	 movzx	 eax, BYTE PTR [ecx+edx]
  0005b	85 c0		 test	 eax, eax
  0005d	74 7b		 je	 SHORT $LN8@draw_smoke

; 280  : 		{
; 281  : 
; 282  : 			//
; 283  : 			// find end of the trail
; 284  : 			//
; 285  : 
; 286  : 			current = start;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _start$[ebp]
  00062	89 45 f0	 mov	 DWORD PTR _current$[ebp], eax
$LN5@draw_smoke:

; 287  : 	
; 288  : 			while (TRUE)

  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	85 c0		 test	 eax, eax
  0006c	74 44		 je	 SHORT $LN6@draw_smoke

; 289  : 			{
; 290  : 				end = current;

  0006e	8b 45 f0	 mov	 eax, DWORD PTR _current$[ebp]
  00071	89 45 f4	 mov	 DWORD PTR _end$[ebp], eax

; 291  : 				
; 292  : 				current += 1;

  00074	8b 45 f0	 mov	 eax, DWORD PTR _current$[ebp]
  00077	83 c0 01	 add	 eax, 1
  0007a	89 45 f0	 mov	 DWORD PTR _current$[ebp], eax

; 293  : 				
; 294  : 				if ( current >= number_of_slots )

  0007d	8b 45 f0	 mov	 eax, DWORD PTR _current$[ebp]
  00080	3b 45 ec	 cmp	 eax, DWORD PTR _number_of_slots$[ebp]
  00083	7c 07		 jl	 SHORT $LN10@draw_smoke

; 295  : 				{
; 296  : 					current = 0;

  00085	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _current$[ebp], 0
$LN10@draw_smoke:

; 297  : 				}
; 298  : 
; 299  : 				if ( ( !raw->valid[ current ] ) || ( current == raw->head ) )

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008f	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00092	8b 55 f0	 mov	 edx, DWORD PTR _current$[ebp]
  00095	0f b6 04 11	 movzx	 eax, BYTE PTR [ecx+edx]
  00099	85 c0		 test	 eax, eax
  0009b	74 11		 je	 SHORT $LN12@draw_smoke
  0009d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a0	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  000a3	c1 e1 00	 shl	 ecx, 0
  000a6	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000a9	39 4d f0	 cmp	 DWORD PTR _current$[ebp], ecx
  000ac	75 02		 jne	 SHORT $LN11@draw_smoke
$LN12@draw_smoke:

; 300  : 				{
; 301  : 					//
; 302  : 					// found the end
; 303  : 					//
; 304  : 
; 305  : 					break;

  000ae	eb 02		 jmp	 SHORT $LN6@draw_smoke
$LN11@draw_smoke:

; 306  : 				}
; 307  : 			}

  000b0	eb b3		 jmp	 SHORT $LN5@draw_smoke
$LN6@draw_smoke:

; 308  : 
; 309  : 			if ( start != end )

  000b2	8b 45 f8	 mov	 eax, DWORD PTR _start$[ebp]
  000b5	3b 45 f4	 cmp	 eax, DWORD PTR _end$[ebp]
  000b8	74 15		 je	 SHORT $LN13@draw_smoke

; 310  : 			{
; 311  : 			
; 312  : 				//
; 313  : 				// we have a valid start and end, so draw a trail
; 314  : 				//
; 315  : 
; 316  : 				draw_smoke_trail( en, start, end, number_of_slots );

  000ba	8b 45 ec	 mov	 eax, DWORD PTR _number_of_slots$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d f4	 mov	 ecx, DWORD PTR _end$[ebp]
  000c1	51		 push	 ecx
  000c2	8b 55 f8	 mov	 edx, DWORD PTR _start$[ebp]
  000c5	52		 push	 edx
  000c6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?draw_smoke_trail@@YGXPAUENTITY@@HHH@Z ; draw_smoke_trail
$LN13@draw_smoke:

; 317  : 			}
; 318  : 
; 319  : 			start = end + 1;

  000cf	8b 45 f4	 mov	 eax, DWORD PTR _end$[ebp]
  000d2	83 c0 01	 add	 eax, 1
  000d5	89 45 f8	 mov	 DWORD PTR _start$[ebp], eax

; 320  : 		}
; 321  : 		else

  000d8	eb 09		 jmp	 SHORT $LN9@draw_smoke
$LN8@draw_smoke:

; 322  : 		{
; 323  : 			start += 1;

  000da	8b 45 f8	 mov	 eax, DWORD PTR _start$[ebp]
  000dd	83 c0 01	 add	 eax, 1
  000e0	89 45 f8	 mov	 DWORD PTR _start$[ebp], eax
$LN9@draw_smoke:

; 324  : 		}
; 325  : 
; 326  : 		if ( start >= number_of_slots )

  000e3	8b 45 f8	 mov	 eax, DWORD PTR _start$[ebp]
  000e6	3b 45 ec	 cmp	 eax, DWORD PTR _number_of_slots$[ebp]
  000e9	7c 07		 jl	 SHORT $LN14@draw_smoke

; 327  : 		{
; 328  : 			start = 0;

  000eb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _start$[ebp], 0
$LN14@draw_smoke:

; 329  : 		}
; 330  : 	}
; 331  : 	while ( start != raw->head );

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000f5	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  000f8	c1 e1 00	 shl	 ecx, 0
  000fb	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000fe	39 4d f8	 cmp	 DWORD PTR _start$[ebp], ecx
  00101	0f 85 47 ff ff
	ff		 jne	 $LN4@draw_smoke
$LN1@draw_smoke:

; 332  : 
; 333  : }

  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 04 00	 ret	 4
?draw_smoke_trails@@YGXPAUENTITY@@@Z ENDP		; draw_smoke_trails
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?draw_smoke_sprites@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv136 = -144						; size = 4
tv138 = -140						; size = 8
_smoke_info$ = -68					; size = 4
_smoke_pos$ = -64					; size = 4
_number_of_slots$ = -60					; size = 4
_loop$ = -56						; size = 4
_current$ = -52						; size = 4
_ds$ = -48						; size = 4
_dt$ = -44						; size = 4
_lifetime$ = -40					; size = 4
_spr$ = -36						; size = 32
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?draw_smoke_sprites@@YGXPAUENTITY@@@Z PROC		; draw_smoke_sprites, COMDAT

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 149  : 
; 150  : 	smoke_list
; 151  : 		*raw;
; 152  : 
; 153  : 	object_3d_sprite
; 154  : 		spr;
; 155  : 
; 156  : 	float
; 157  : 		lifetime,
; 158  : 		dt;
; 159  : 
; 160  : 	int
; 161  : 		ds,
; 162  : 		current,
; 163  : 		loop,
; 164  : 		number_of_slots;
; 165  : 
; 166  : 	vec3d
; 167  : 		*smoke_pos;
; 168  : 
; 169  : 	smoke_list_data
; 170  : 		*smoke_info;
; 171  : 
; 172  : 	raw = (smoke_list *) get_local_entity_data( en );

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 173  : 
; 174  : 	smoke_info = &(smoke_list_database[ raw->smoke_type ]);

  00015	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00018	6b 48 28 44	 imul	 ecx, DWORD PTR [eax+40], 68
  0001c	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?smoke_list_database@@3PAUSMOKE_LIST_DATA@@A ; smoke_list_database
  00022	89 4d bc	 mov	 DWORD PTR _smoke_info$[ebp], ecx

; 175  : 
; 176  : 	number_of_slots = raw->smoke_lifetime / raw->frequency;

  00025	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0002b	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00030	f3 0f 5e 41 2c	 divss	 xmm0, DWORD PTR [ecx+44]
  00035	f3 0f 2c d0	 cvttss2si edx, xmm0
  00039	89 55 c4	 mov	 DWORD PTR _number_of_slots$[ebp], edx

; 177  : 
; 178  : 	#if DEBUG_MODULE
; 179  : 
; 180  : 	debug_log ("SMOKE LIST: drawing %d smoke puff(s)", raw->alive_count);
; 181  : 
; 182  : 	#endif
; 183  : 
; 184  : 	//
; 185  : 	// calculate the difference in "age" between successive slots
; 186  : 	//
; 187  : 
; 188  : 	dt = raw->frequency;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003f	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00044	f3 0f 11 45 d4	 movss	 DWORD PTR _dt$[ebp], xmm0

; 189  : 
; 190  : 	current = raw->head;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004c	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0004f	c1 e1 00	 shl	 ecx, 0
  00052	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00055	89 4d cc	 mov	 DWORD PTR _current$[ebp], ecx

; 191  : 
; 192  : 	for ( loop = 0 ; loop < number_of_slots ; loop ++ )

  00058	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0005f	eb 09		 jmp	 SHORT $LN4@draw_smoke
$LN2@draw_smoke:
  00061	8b 45 c8	 mov	 eax, DWORD PTR _loop$[ebp]
  00064	83 c0 01	 add	 eax, 1
  00067	89 45 c8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_smoke:
  0006a	8b 45 c8	 mov	 eax, DWORD PTR _loop$[ebp]
  0006d	3b 45 c4	 cmp	 eax, DWORD PTR _number_of_slots$[ebp]
  00070	0f 8d 2d 01 00
	00		 jge	 $LN3@draw_smoke

; 193  : 	{
; 194  : 		current --;

  00076	8b 45 cc	 mov	 eax, DWORD PTR _current$[ebp]
  00079	83 e8 01	 sub	 eax, 1
  0007c	89 45 cc	 mov	 DWORD PTR _current$[ebp], eax

; 195  : 
; 196  : 		if ( current < 0 )

  0007f	79 09		 jns	 SHORT $LN5@draw_smoke

; 197  : 		{
; 198  : 			current = number_of_slots - 1;

  00081	8b 45 c4	 mov	 eax, DWORD PTR _number_of_slots$[ebp]
  00084	83 e8 01	 sub	 eax, 1
  00087	89 45 cc	 mov	 DWORD PTR _current$[ebp], eax
$LN5@draw_smoke:

; 199  : 		}
; 200  : 
; 201  : 		if ( !raw->valid[ current ] )

  0008a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008d	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00090	8b 55 cc	 mov	 edx, DWORD PTR _current$[ebp]
  00093	0f b6 04 11	 movzx	 eax, BYTE PTR [ecx+edx]
  00097	85 c0		 test	 eax, eax
  00099	75 02		 jne	 SHORT $LN6@draw_smoke

; 202  : 		{
; 203  : 			continue;

  0009b	eb c4		 jmp	 SHORT $LN2@draw_smoke
$LN6@draw_smoke:

; 204  : 		}
; 205  : 
; 206  : 		//
; 207  : 		// determine how long the current smoke puff has been "living"
; 208  : 		//
; 209  : 
; 210  : 		ds = ( raw->tail - current ) - 1;

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a0	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  000a3	c1 e1 10	 shl	 ecx, 16			; 00000010H
  000a6	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000a9	2b 4d cc	 sub	 ecx, DWORD PTR _current$[ebp]
  000ac	83 e9 01	 sub	 ecx, 1
  000af	89 4d d0	 mov	 DWORD PTR _ds$[ebp], ecx

; 211  : 
; 212  : 		if ( ds < 0 )

  000b2	79 09		 jns	 SHORT $LN7@draw_smoke

; 213  : 		{
; 214  : 			ds += number_of_slots;

  000b4	8b 45 d0	 mov	 eax, DWORD PTR _ds$[ebp]
  000b7	03 45 c4	 add	 eax, DWORD PTR _number_of_slots$[ebp]
  000ba	89 45 d0	 mov	 DWORD PTR _ds$[ebp], eax
$LN7@draw_smoke:

; 215  : 		}
; 216  : 
; 217  : 		//integer part
; 218  : 		lifetime = ds * dt;

  000bd	f3 0f 2a 45 d0	 cvtsi2ss xmm0, DWORD PTR _ds$[ebp]
  000c2	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _dt$[ebp]
  000c7	f3 0f 11 45 d8	 movss	 DWORD PTR _lifetime$[ebp], xmm0

; 219  : 
; 220  : 		//fractional part
; 221  : 		lifetime += ( raw->frequency - raw->smoke_sleep );

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000d2	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  000d7	f3 0f 5c 41 34	 subss	 xmm0, DWORD PTR [ecx+52]
  000dc	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _lifetime$[ebp]
  000e1	f3 0f 11 45 d8	 movss	 DWORD PTR _lifetime$[ebp], xmm0

; 222  : 
; 223  : //		debug_log( "Alive count %d ( num slots = %d ), ds = %d ( %d ), int lifetime = %f, lifetime = %f",
; 224  : //							raw->alive_count, number_of_slots, ds, ( raw->tail - current ), ( ds * dt ), lifetime );
; 225  : 
; 226  : 		lifetime = bound( lifetime, 0.0, raw->smoke_lifetime );

  000e6	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _lifetime$[ebp]
  000eb	0f 57 c9	 xorps	 xmm1, xmm1
  000ee	66 0f 2f c8	 comisd	 xmm1, xmm0
  000f2	76 0d		 jbe	 SHORT $LN11@draw_smoke
  000f4	0f 57 c0	 xorps	 xmm0, xmm0
  000f7	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv138[ebp], xmm0
  000ff	eb 3d		 jmp	 SHORT $LN12@draw_smoke
$LN11@draw_smoke:
  00101	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00104	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  00109	0f 2f 40 38	 comiss	 xmm0, DWORD PTR [eax+56]
  0010d	76 12		 jbe	 SHORT $LN9@draw_smoke
  0010f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00112	f3 0f 10 41 38	 movss	 xmm0, DWORD PTR [ecx+56]
  00117	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR tv136[ebp], xmm0
  0011f	eb 0d		 jmp	 SHORT $LN10@draw_smoke
$LN9@draw_smoke:
  00121	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  00126	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR tv136[ebp], xmm0
$LN10@draw_smoke:
  0012e	f3 0f 5a 85 70
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv136[ebp]
  00136	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv138[ebp], xmm0
$LN12@draw_smoke:
  0013e	f2 0f 5a 85 74
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv138[ebp]
  00146	f3 0f 11 45 d8	 movss	 DWORD PTR _lifetime$[ebp], xmm0

; 227  : 
; 228  : 		//
; 229  : 		// set the sprite dependant on the lifetime
; 230  : 		//
; 231  : 
; 232  : 		get_smoke_sprite_display_values( raw, current, lifetime, &spr, smoke_info );

  0014b	8b 45 bc	 mov	 eax, DWORD PTR _smoke_info$[ebp]
  0014e	50		 push	 eax
  0014f	8d 4d dc	 lea	 ecx, DWORD PTR _spr$[ebp]
  00152	51		 push	 ecx
  00153	51		 push	 ecx
  00154	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  00159	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015e	8b 55 cc	 mov	 edx, DWORD PTR _current$[ebp]
  00161	52		 push	 edx
  00162	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 ?get_smoke_sprite_display_values@@YGXPAUSMOKE_LIST@@HMPAUOBJECT_3D_SPRITE@@PAUSMOKE_LIST_DATA@@@Z ; get_smoke_sprite_display_values

; 233  : 
; 234  : 		smoke_pos = &(raw->position[ current ]);

  0016b	6b 45 cc 0c	 imul	 eax, DWORD PTR _current$[ebp], 12
  0016f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00172	03 41 70	 add	 eax, DWORD PTR [ecx+112]
  00175	89 45 c0	 mov	 DWORD PTR _smoke_pos$[ebp], eax

; 235  : 
; 236  : 		memcpy (&(spr.position), smoke_pos, sizeof (vec3d));

  00178	6a 0c		 push	 12			; 0000000cH
  0017a	8b 45 c0	 mov	 eax, DWORD PTR _smoke_pos$[ebp]
  0017d	50		 push	 eax
  0017e	8d 4d dc	 lea	 ecx, DWORD PTR _spr$[ebp]
  00181	51		 push	 ecx
  00182	e8 00 00 00 00	 call	 _memcpy
  00187	83 c4 0c	 add	 esp, 12			; 0000000cH

; 237  : 
; 238  : 		insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_SPRITE, &spr);

  0018a	51		 push	 ecx
  0018b	0f 57 c0	 xorps	 xmm0, xmm0
  0018e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00193	8d 45 dc	 lea	 eax, DWORD PTR _spr$[ebp]
  00196	50		 push	 eax
  00197	6a 10		 push	 16			; 00000010H
  00199	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene

; 239  : 
; 240  : 	}

  0019e	e9 be fe ff ff	 jmp	 $LN2@draw_smoke
$LN3@draw_smoke:

; 241  : }

  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 04 00	 ret	 4
?draw_smoke_sprites@@YGXPAUENTITY@@@Z ENDP		; draw_smoke_sprites
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?deinitialise_smoke_list_draw_arrays@@YGXXZ
_TEXT	SEGMENT
?deinitialise_smoke_list_draw_arrays@@YGXXZ PROC	; deinitialise_smoke_list_draw_arrays, COMDAT

; 1048 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1049 : 
; 1050 : 	safe_free (trail_data[ 0 ]);

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1051 : 	safe_free (trail_data[ 1 ]);

  0001d	b8 04 00 00 00	 mov	 eax, 4
  00022	c1 e0 00	 shl	 eax, 0
  00025	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[eax]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1052 : 
; 1053 : 	safe_free (trail_points);

  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?trail_points@@3PAUVEC3D@@A
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1054 : 
; 1055 : 	safe_free (trail_lifetimes);

  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?trail_lifetimes@@3PAMA
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1056 : 
; 1057 : 	safe_free (trail_radius);

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?trail_radius@@3PAMA
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1058 : }

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?deinitialise_smoke_list_draw_arrays@@YGXXZ ENDP	; deinitialise_smoke_list_draw_arrays
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?initialise_smoke_list_draw_arrays@@YGXXZ
_TEXT	SEGMENT
?initialise_smoke_list_draw_arrays@@YGXXZ PROC		; initialise_smoke_list_draw_arrays, COMDAT

; 1031 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1032 : 
; 1033 : 	trail_data[ 0 ] = (smoke_trail_data *) safe_malloc (sizeof (smoke_trail_data) * MAX_SMOKE_TRAIL_POINTS);

  00009	68 60 22 00 00	 push	 8800			; 00002260H
  0000e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00013	b9 04 00 00 00	 mov	 ecx, 4
  00018	6b d1 00	 imul	 edx, ecx, 0
  0001b	89 82 00 00 00
	00		 mov	 DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[edx], eax

; 1034 : 	trail_data[ 1 ] = (smoke_trail_data *) safe_malloc (sizeof (smoke_trail_data) * MAX_SMOKE_TRAIL_POINTS);

  00021	68 60 22 00 00	 push	 8800			; 00002260H
  00026	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002b	b9 04 00 00 00	 mov	 ecx, 4
  00030	c1 e1 00	 shl	 ecx, 0
  00033	89 81 00 00 00
	00		 mov	 DWORD PTR ?trail_data@@3PAPAUSMOKE_TRAIL_DATA@@A[ecx], eax

; 1035 : 
; 1036 : 	trail_points = (vec3d *) safe_malloc (sizeof (vec3d) * MAX_SMOKE_TRAIL_POINTS);

  00039	68 60 09 00 00	 push	 2400			; 00000960H
  0003e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?trail_points@@3PAUVEC3D@@A, eax

; 1037 : 
; 1038 : 	trail_lifetimes = (float *) safe_malloc (sizeof (float) * MAX_SMOKE_TRAIL_POINTS);

  00048	68 20 03 00 00	 push	 800			; 00000320H
  0004d	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00052	a3 00 00 00 00	 mov	 DWORD PTR ?trail_lifetimes@@3PAMA, eax

; 1039 : 
; 1040 : 	trail_radius = (float *) safe_malloc (sizeof (float) * MAX_SMOKE_TRAIL_POINTS);

  00057	68 20 03 00 00	 push	 800			; 00000320H
  0005c	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00061	a3 00 00 00 00	 mov	 DWORD PTR ?trail_radius@@3PAMA, eax

; 1041 : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?initialise_smoke_list_draw_arrays@@YGXXZ ENDP		; initialise_smoke_list_draw_arrays
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\smokelst\sl_draw.c
;	COMDAT ?overload_smoke_list_draw_functions@@YGXXZ
_TEXT	SEGMENT
?overload_smoke_list_draw_functions@@YGXXZ PROC		; overload_smoke_list_draw_functions, COMDAT

; 1065 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1066 : 	fn_draw_local_entity_3d_object[ENTITY_TYPE_SMOKE_LIST]	= draw_local_3d_object;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 1f	 imul	 ecx, eax, 31
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA[ecx], OFFSET ?draw_local_3d_object@@YGXPAUENTITY@@M@Z ; draw_local_3d_object

; 1067 : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?overload_smoke_list_draw_functions@@YGXXZ ENDP		; overload_smoke_list_draw_functions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
END
