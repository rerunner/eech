; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\bridge\br_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_bridge_pack_functions@@YGXXZ		; overload_bridge_pack_functions
PUBLIC	?pack_local_bridge_data@@YGXW4PACK_MODES@@@Z	; pack_local_bridge_data
PUBLIC	?unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z	; unpack_local_bridge_data
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??pack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA ; `pack_local_bridge_data'::`1'::__LINE__Var
PUBLIC	??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@ ; `string'
PUBLIC	??_C@_0L@HGMDPBDN@RLE?5BRIDGE@			; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA ; `unpack_local_bridge_data'::`1'::__LINE__Var
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?set_road_link_breaks@@YGHHHH@Z:PROC		; set_road_link_breaks
EXTRN	?get_road_link_breaks@@YGHHH@Z:PROC		; get_road_link_breaks
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?first_used_entity@@3PAUENTITY@@A:DWORD		; first_used_entity
;	COMDAT ?__LINE__Var@?0??unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA DD 0f0H ; `unpack_local_bridge_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@HGMDPBDN@RLE?5BRIDGE@
CONST	SEGMENT
??_C@_0L@HGMDPBDN@RLE?5BRIDGE@ DB 'RLE BRIDGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
CONST	SEGMENT
??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@ DB 'mode != P'
	DB	'ACK_MODE_UPDATE_ENTITY', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA DD 0a0H ; `pack_local_bridge_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 071H ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\bridge\br_pac'
	DB	'k.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 051H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 114  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 115  : 
; 116  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax

; 117  : 	{
; 118  : 		////////////////////////////////////////
; 119  : 		case PACK_MODE_SERVER_SESSION:
; 120  : 		case PACK_MODE_CLIENT_SESSION:
; 121  : 		////////////////////////////////////////
; 122  : 		{
; 123  : 			break;
; 124  : 		}
; 125  : 		////////////////////////////////////////
; 126  : 		case PACK_MODE_BROWSE_SESSION:
; 127  : 		////////////////////////////////////////
; 128  : 		{
; 129  : 			break;
; 130  : 		}
; 131  : 		////////////////////////////////////////
; 132  : 		case PACK_MODE_UPDATE_ENTITY:
; 133  : 		////////////////////////////////////////
; 134  : 		{
; 135  : 			//
; 136  : 			// always use access functions to set the data
; 137  : 			//
; 138  : 
; 139  : 			break;
; 140  : 		}
; 141  : 	}
; 142  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 82   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 83   : 
; 84   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax

; 85   : 	{
; 86   : 		////////////////////////////////////////
; 87   : 		case PACK_MODE_SERVER_SESSION:
; 88   : 		case PACK_MODE_CLIENT_SESSION:
; 89   : 		////////////////////////////////////////
; 90   : 		{
; 91   : 			break;
; 92   : 		}
; 93   : 		////////////////////////////////////////
; 94   : 		case PACK_MODE_BROWSE_SESSION:
; 95   : 		////////////////////////////////////////
; 96   : 		{
; 97   : 			break;
; 98   : 		}
; 99   : 		////////////////////////////////////////
; 100  : 		case PACK_MODE_UPDATE_ENTITY:
; 101  : 		////////////////////////////////////////
; 102  : 		{
; 103  : 			break;
; 104  : 		}
; 105  : 	}
; 106  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_pack.c
;	COMDAT ?unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
_count$ = -20						; size = 4
_alive$ = -16						; size = 4
_dead_bridge_count$ = -12				; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z PROC	; unpack_local_bridge_data, COMDAT

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 241  :    entity
; 242  :       *en;
; 243  : 
; 244  :    bridge
; 245  :       *raw;
; 246  : 
; 247  : 	int
; 248  : 		dead_bridge_count,
; 249  : 		alive,
; 250  : 		count;
; 251  : 
; 252  :    ASSERT (mode != PACK_MODE_UPDATE_ENTITY);

  00009	83 7d 08 03	 cmp	 DWORD PTR _mode$[ebp], 3
  0000d	75 18		 jne	 SHORT $LN4@unpack_loc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 253  : 
; 254  :    if (mode != PACK_MODE_SERVER_SESSION)

  00027	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0002b	74 05		 je	 SHORT $LN5@unpack_loc

; 255  :    {
; 256  :       return;

  0002d	e9 c9 00 00 00	 jmp	 $LN1@unpack_loc
$LN5@unpack_loc:

; 257  :    }
; 258  : 
; 259  : 	//
; 260  : 	// unpack alive status for each bridge
; 261  : 	//
; 262  : 
; 263  : 	debug_log ("RLE BRIDGE");

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HGMDPBDN@RLE?5BRIDGE@
  00037	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0003c	83 c4 04	 add	 esp, 4

; 264  : 
; 265  : 	count = 0;

  0003f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 266  : 
; 267  : 	count = unpack_int_value (NULL, INT_TYPE_LENGTH);

  00046	6a 79		 push	 121			; 00000079H
  00048	6a 00		 push	 0
  0004a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0004f	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 268  : 
; 269  : 	alive = unpack_int_value (NULL, INT_TYPE_ALIVE);

  00052	6a 07		 push	 7
  00054	6a 00		 push	 0
  00056	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0005b	89 45 f0	 mov	 DWORD PTR _alive$[ebp], eax

; 270  : 
; 271  : 	#if DEBUG_MODULE
; 272  : 
; 273  : 	debug_log ("BR_PACK: unpacking count %d, alive %d", count, alive);
; 274  : 
; 275  : 	#endif
; 276  : 
; 277  : 	en = get_local_entity_list ();

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  00063	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@unpack_loc:

; 278  : 
; 279  : 	while (en)

  00066	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0006a	0f 84 8b 00 00
	00		 je	 $LN1@unpack_loc

; 280  : 	{
; 281  : 		if (en->type == ENTITY_TYPE_BRIDGE)

  00070	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00073	83 38 02	 cmp	 DWORD PTR [eax], 2
  00076	75 75		 jne	 SHORT $LN6@unpack_loc

; 282  : 		{
; 283  : 			if (count == 0)

  00078	83 7d ec 00	 cmp	 DWORD PTR _count$[ebp], 0
  0007c	75 18		 jne	 SHORT $LN7@unpack_loc

; 284  : 			{
; 285  : 				count = unpack_int_value (NULL, INT_TYPE_LENGTH);

  0007e	6a 79		 push	 121			; 00000079H
  00080	6a 00		 push	 0
  00082	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00087	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 286  : 
; 287  : 				alive = unpack_int_value (NULL, INT_TYPE_ALIVE);

  0008a	6a 07		 push	 7
  0008c	6a 00		 push	 0
  0008e	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00093	89 45 f0	 mov	 DWORD PTR _alive$[ebp], eax
$LN7@unpack_loc:

; 288  : 
; 289  : 				#if DEBUG_MODULE
; 290  : 			
; 291  : 				debug_log ("BR_PACK: unpacking count %d, alive %d", count, alive);
; 292  : 			
; 293  : 				#endif
; 294  : 			}
; 295  : 
; 296  : 			count --;

  00096	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00099	83 e8 01	 sub	 eax, 1
  0009c	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 297  : 
; 298  : 			raw = (bridge *) get_local_entity_data (en);

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000a2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a5	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 299  : 
; 300  : 			raw->alive = alive;

  000a8	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000ab	8b 4d f0	 mov	 ecx, DWORD PTR _alive$[ebp]
  000ae	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 301  : 
; 302  : 			if (!alive)

  000b1	83 7d f0 00	 cmp	 DWORD PTR _alive$[ebp], 0
  000b5	75 36		 jne	 SHORT $LN6@unpack_loc

; 303  : 			{
; 304  : 				//
; 305  : 				// Break road network link
; 306  : 				//
; 307  : 
; 308  : 				dead_bridge_count = get_road_link_breaks (raw->start_node, raw->end_node);

  000b7	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000ba	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000bd	51		 push	 ecx
  000be	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  000c1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?get_road_link_breaks@@YGHHH@Z ; get_road_link_breaks
  000ca	89 45 f4	 mov	 DWORD PTR _dead_bridge_count$[ebp], eax

; 309  : 
; 310  : 				dead_bridge_count ++;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _dead_bridge_count$[ebp]
  000d0	83 c0 01	 add	 eax, 1
  000d3	89 45 f4	 mov	 DWORD PTR _dead_bridge_count$[ebp], eax

; 311  : 				
; 312  : 				set_road_link_breaks (raw->start_node, raw->end_node, dead_bridge_count);

  000d6	8b 45 f4	 mov	 eax, DWORD PTR _dead_bridge_count$[ebp]
  000d9	50		 push	 eax
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000dd	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000e0	52		 push	 edx
  000e1	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000e4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 ?set_road_link_breaks@@YGHHHH@Z ; set_road_link_breaks
$LN6@unpack_loc:

; 313  : 			}
; 314  : 		}
; 315  : 
; 316  : 		en = get_local_entity_succ (en);

  000ed	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000f0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f3	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 317  : 	}

  000f6	e9 6b ff ff ff	 jmp	 $LN2@unpack_loc
$LN1@unpack_loc:

; 318  : }

  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 04 00	 ret	 4
?unpack_local_bridge_data@@YGXW4PACK_MODES@@@Z ENDP	; unpack_local_bridge_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_pack.c
;	COMDAT ?pack_local_bridge_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv77 = -84						; size = 4
_count$ = -16						; size = 4
_alive$ = -12						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_local_bridge_data@@YGXW4PACK_MODES@@@Z PROC	; pack_local_bridge_data, COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :    entity
; 162  :       *en;
; 163  : 
; 164  :    bridge
; 165  :       *raw;
; 166  : 
; 167  : 	int
; 168  : 		alive,
; 169  : 		count;
; 170  : 
; 171  :    ASSERT (mode != PACK_MODE_UPDATE_ENTITY);

  00009	83 7d 08 03	 cmp	 DWORD PTR _mode$[ebp], 3
  0000d	75 18		 jne	 SHORT $LN4@pack_local
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_bridge_data@@YGXW4PACK_MODES@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GHGJAHIH@mode?5?$CB?$DN?5PACK_MODE_UPDATE_ENTITY@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 172  : 
; 173  :    if (mode != PACK_MODE_SERVER_SESSION)

  00027	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0002b	74 05		 je	 SHORT $LN5@pack_local

; 174  :    {
; 175  :       return;

  0002d	e9 d1 00 00 00	 jmp	 $LN1@pack_local
$LN5@pack_local:

; 176  :    }
; 177  : 
; 178  : 	//
; 179  : 	// RLE bridge alive flags
; 180  : 	//
; 181  : 
; 182  : 	count = 0;

  00032	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 183  : 
; 184  : 	alive = TRUE;

  00039	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _alive$[ebp], 1

; 185  : 
; 186  : 	debug_log ("RLE BRIDGE");

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HGMDPBDN@RLE?5BRIDGE@
  00045	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0004a	83 c4 04	 add	 esp, 4

; 187  : 
; 188  : 	en = get_local_entity_list ();

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  00052	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@pack_local:

; 189  : 
; 190  : 	while (en)

  00055	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00059	0f 84 8a 00 00
	00		 je	 $LN3@pack_local

; 191  : 	{
; 192  : 
; 193  : 		if (get_local_entity_type (en) == ENTITY_TYPE_BRIDGE)

  0005f	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00063	74 0a		 je	 SHORT $LN10@pack_local
  00065	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	89 4d ac	 mov	 DWORD PTR tv77[ebp], ecx
  0006d	eb 1d		 jmp	 SHORT $LN11@pack_local
$LN10@pack_local:
  0006f	68 c1 00 00 00	 push	 193			; 000000c1H
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@JBKENKAG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007f	52		 push	 edx
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN11@pack_local:
  0008c	83 7d ac 02	 cmp	 DWORD PTR tv77[ebp], 2
  00090	75 49		 jne	 SHORT $LN6@pack_local

; 194  : 		{
; 195  : 
; 196  : 			raw = (bridge *) get_local_entity_data (en);

  00092	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00095	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00098	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 197  : 
; 198  : 			if (alive == raw->alive)

  0009b	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _alive$[ebp]
  000a1	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  000a4	75 0b		 jne	 SHORT $LN7@pack_local

; 199  : 			{
; 200  : 				count ++;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000a9	83 c0 01	 add	 eax, 1
  000ac	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 201  : 			}
; 202  : 			else

  000af	eb 2a		 jmp	 SHORT $LN6@pack_local
$LN7@pack_local:

; 203  : 			{
; 204  : 
; 205  : 				pack_int_value (NULL, INT_TYPE_LENGTH, count);

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000b4	50		 push	 eax
  000b5	6a 79		 push	 121			; 00000079H
  000b7	6a 00		 push	 0
  000b9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 206  : 
; 207  : 				pack_int_value (NULL, INT_TYPE_ALIVE, alive);

  000be	8b 45 f4	 mov	 eax, DWORD PTR _alive$[ebp]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	6a 00		 push	 0
  000c6	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 208  : 
; 209  : 				#if DEBUG_MODULE
; 210  : 
; 211  : 				debug_log ("BR_PACK: packing count %d, alive %d", count, alive);
; 212  : 
; 213  : 				#endif
; 214  : 
; 215  : 				alive = raw->alive;

  000cb	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000ce	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d1	89 4d f4	 mov	 DWORD PTR _alive$[ebp], ecx

; 216  : 
; 217  : 				count = 1;

  000d4	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
$LN6@pack_local:

; 218  : 			}
; 219  : 		}
; 220  : 	
; 221  : 		en = get_local_entity_succ (en);

  000db	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000de	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e1	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 222  : 	}

  000e4	e9 6c ff ff ff	 jmp	 $LN2@pack_local
$LN3@pack_local:

; 223  : 
; 224  : 	pack_int_value (NULL, INT_TYPE_LENGTH, count);

  000e9	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  000ec	50		 push	 eax
  000ed	6a 79		 push	 121			; 00000079H
  000ef	6a 00		 push	 0
  000f1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 225  : 
; 226  : 	pack_int_value (NULL, INT_TYPE_ALIVE, alive);

  000f6	8b 45 f4	 mov	 eax, DWORD PTR _alive$[ebp]
  000f9	50		 push	 eax
  000fa	6a 07		 push	 7
  000fc	6a 00		 push	 0
  000fe	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN1@pack_local:

; 227  : 
; 228  : 	#if DEBUG_MODULE
; 229  : 
; 230  : 	debug_log ("BR_PACK: packing count %d, alive %d", count, alive);
; 231  : 
; 232  : 	#endif
; 233  : }

  00103	5f		 pop	 edi
  00104	5e		 pop	 esi
  00105	5b		 pop	 ebx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 04 00	 ret	 4
?pack_local_bridge_data@@YGXW4PACK_MODES@@@Z ENDP	; pack_local_bridge_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_pack.c
;	COMDAT ?overload_bridge_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_bridge_pack_functions@@YGXXZ PROC		; overload_bridge_pack_functions, COMDAT

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 150  : 	fn_pack_local_entity_data[ENTITY_TYPE_BRIDGE]	= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	d1 e0		 shl	 eax, 1
  00010	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[eax], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 151  : 
; 152  : 	fn_unpack_local_entity_data[ENTITY_TYPE_BRIDGE]	= unpack_local_data;

  0001a	b8 04 00 00 00	 mov	 eax, 4
  0001f	d1 e0		 shl	 eax, 1
  00021	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[eax], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 153  : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?overload_bridge_pack_functions@@YGXXZ ENDP		; overload_bridge_pack_functions
_TEXT	ENDS
END
