; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?hms_target_locked@@3HA				; hms_target_locked
PUBLIC	?hms_max_visual_range@@3MA			; hms_max_visual_range
PUBLIC	?hms_max_field_of_view@@3MA			; hms_max_field_of_view
PUBLIC	?draw_hms_field_of_view@@3HA			; draw_hms_field_of_view
PUBLIC	?draw_hms_terrain_los_markers@@3HA		; draw_hms_terrain_los_markers
_BSS	SEGMENT
?hms_target_locked@@3HA DD 01H DUP (?)			; hms_target_locked
?hms_max_visual_range@@3MA DD 01H DUP (?)		; hms_max_visual_range
?hms_max_field_of_view@@3MA DD 01H DUP (?)		; hms_max_field_of_view
?draw_hms_field_of_view@@3HA DD 01H DUP (?)		; draw_hms_field_of_view
?draw_hms_terrain_los_markers@@3HA DD 01H DUP (?)	; draw_hms_terrain_los_markers
_BSS	ENDS
PUBLIC	_atan2f
PUBLIC	_cosf
PUBLIC	_sinf
PUBLIC	_sqrtf
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?sqrt@@YGMM@Z					; sqrt
PUBLIC	?initialise_common_hms@@YGXXZ			; initialise_common_hms
PUBLIC	?deinitialise_common_hms@@YGXXZ			; deinitialise_common_hms
PUBLIC	?update_common_hms@@YGXXZ			; update_common_hms
PUBLIC	?activate_common_hms@@YGXXZ			; activate_common_hms
PUBLIC	?deactivate_common_hms@@YGXXZ			; deactivate_common_hms
PUBLIC	?select_next_hms_target@@YGXXZ			; select_next_hms_target
PUBLIC	?select_previous_hms_target@@YGXXZ		; select_previous_hms_target
PUBLIC	?select_next_designated_hms_target@@YGXXZ	; select_next_designated_hms_target
PUBLIC	?select_previous_designated_hms_target@@YGXXZ	; select_previous_designated_hms_target
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z@4JA ; `insert_entity_into_hms_target_list'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BA@NENIEICJ@target_position@		; `string'
PUBLIC	?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA ; `get_terrain_los_clear'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@IIPCKJML@source_position@		; `string'
PUBLIC	?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA ; `get_hms_boresight_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@FLAFFANP@hms_max_visual_range?5?$DO?50?40@ ; `string'
PUBLIC	??_C@_0EN@LEAKPJKO@?$CIhms_max_field_of_view?5?$DO?5rad?5?$CI0@ ; `string'
PUBLIC	?__LINE__Var@?0??update_common_hms@@YGXXZ@4JA	; `update_common_hms'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_selectable_hms_target@@YGHPAUENTITY@@@Z@4JA ; `get_selectable_hms_target'::`1'::__LINE__Var
PUBLIC	??_C@_06JJLAMBGK@target@			; `string'
PUBLIC	?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA ; `select_next_hms_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA ; `select_previous_hms_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA ; `select_next_designated_hms_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA ; `select_previous_designated_hms_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ba3d70a
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff921fb51000000
PUBLIC	__real@4079000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_sin:PROC
EXTRN	_sqrt:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_unit_vector_dot_product@@YGMPBUVEC3D@@0@Z:PROC ; get_3d_unit_vector_dot_product
EXTRN	?get_3d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_3d_range
EXTRN	?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z:PROC ; get_terrain_3d_point_sector_max_elevation
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; delete_local_entity_from_parents_child_list
EXTRN	?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z:PROC ; get_local_entity_child_succ_circular
EXTRN	?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z:PROC ; get_local_entity_child_pred_circular
EXTRN	?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z:PROC ; create_rotated_debug_3d_object
EXTRN	?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z:PROC ; create_debug_3d_line
EXTRN	?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z:PROC ; get_line_of_sight_collision_entity
EXTRN	?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z:PROC ; get_line_of_sight_collision_tree
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?push_numpad_cockpit_view_events_overlay@@YGXXZ:PROC ; push_numpad_cockpit_view_events_overlay
EXTRN	?pop_numpad_cockpit_view_events_overlay@@YGXXZ:PROC ; pop_numpad_cockpit_view_events_overlay
EXTRN	?set_view_mode@@YGHW4VIEW_MODES@@@Z:PROC	; set_view_mode
EXTRN	?get_pilot_head_viewpoint@@YGXXZ:PROC		; get_pilot_head_viewpoint
EXTRN	?get_pilot_head_heading_and_pitch_to_target@@YGXPAUENTITY@@@Z:PROC ; get_pilot_head_heading_and_pitch_to_target
EXTRN	?select_padlock_view_event@@YGXW4PADLOCK_MODES@@@Z:PROC ; select_padlock_view_event
EXTRN	?set_common_target_acquisition_system_lock_target@@YGXH@Z:PROC ; set_common_target_acquisition_system_lock_target
EXTRN	?set_gunship_target@@YGXPAUENTITY@@@Z:PROC	; set_gunship_target
EXTRN	?sys_col_green@@3UREAL_COLOUR@@A:DWORD		; sys_col_green
EXTRN	?sys_col_red@@3UREAL_COLOUR@@A:DWORD		; sys_col_red
EXTRN	?command_line_unpadlock_on_handover@@3HA:DWORD	; command_line_unpadlock_on_handover
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?in_cockpit@@3HA:DWORD				; in_cockpit
EXTRN	?pilot_head_heading@@3MA:DWORD			; pilot_head_heading
EXTRN	?pilot_head_pitch@@3MA:DWORD			; pilot_head_pitch
EXTRN	?pilot_head_vp@@3UVIEWPOINT@@A:BYTE		; pilot_head_vp
EXTRN	?target_locked@@3HA:DWORD			; target_locked
EXTRN	?night_vision_system_active@@3HA:DWORD		; night_vision_system_active
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?numpad_events_overlaid@@3HA DD 01H DUP (?)		; numpad_events_overlaid
?hms_target_root@@3PAUHMS_TARGET@@A DD 01H DUP (?)	; hms_target_root
_BSS	ENDS
;	COMDAT __real@4079000000000000
CONST	SEGMENT
__real@4079000000000000 DQ 04079000000000000r	; 400
CONST	ENDS
;	COMDAT __real@3ff921fb51000000
CONST	SEGMENT
__real@3ff921fb51000000 DQ 03ff921fb51000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3ba3d70a
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA DD 0494H ; `select_previous_designated_hms_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA DD 0449H ; `select_next_designated_hms_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA DD 03fcH ; `select_previous_hms_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA DD 03b1H ; `select_next_hms_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06JJLAMBGK@target@
CONST	SEGMENT
??_C@_06JJLAMBGK@target@ DB 'target', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_selectable_hms_target@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_selectable_hms_target@@YGHPAUENTITY@@@Z@4JA DD 0366H ; `get_selectable_hms_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_common_hms@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_common_hms@@YGXXZ@4JA DD 0301H	; `update_common_hms'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EN@LEAKPJKO@?$CIhms_max_field_of_view?5?$DO?5rad?5?$CI0@
CONST	SEGMENT
??_C@_0EN@LEAKPJKO@?$CIhms_max_field_of_view?5?$DO?5rad?5?$CI0@ DB '(hms_'
	DB	'max_field_of_view > rad (0.0)) && (hms_max_field_of_view <= r'
	DB	'ad (90.0))', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FLAFFANP@hms_max_visual_range?5?$DO?50?40@
CONST	SEGMENT
??_C@_0BL@FLAFFANP@hms_max_visual_range?5?$DO?50?40@ DB 'hms_max_visual_r'
	DB	'ange > 0.0', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA DD 0216H ; `get_hms_boresight_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@IIPCKJML@source_position@
CONST	SEGMENT
??_C@_0BA@IIPCKJML@source_position@ DB 'source_position', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA DD 0123H ; `get_terrain_los_clear'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@NENIEICJ@target_position@
CONST	SEGMENT
??_C@_0BA@NENIEICJ@target_position@ DB 'target_position', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\common\co_'
	DB	'hms.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z@4JA DD 0c0H ; `insert_entity_into_hms_target_list'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?get_selectable_hms_target@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv134 = -156						; size = 4
tv81 = -156						; size = 4
tv149 = -152						; size = 4
tv94 = -152						; size = 4
tv74 = -152						; size = 4
_temp_vp$ = -84						; size = 48
_temp_pitch$ = -36					; size = 4
_temp_heading$ = -32					; size = 4
_target_range$ = -28					; size = 4
_target_position$ = -24					; size = 12
_source_position$ = -12					; size = 4
_boresight_target$ = -8					; size = 4
_source$ = -4						; size = 4
_target$ = 8						; size = 4
?get_selectable_hms_target@@YGHPAUENTITY@@@Z PROC	; get_selectable_hms_target, COMDAT

; 870  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 871  : 	entity
; 872  : 		*source,
; 873  : 		*boresight_target;
; 874  : 
; 875  : 	vec3d
; 876  : 		*source_position,
; 877  : 		target_position;
; 878  : 
; 879  : 	float
; 880  : 		target_range,
; 881  : 		temp_heading,
; 882  : 		temp_pitch;
; 883  : 
; 884  : 	viewpoint
; 885  : 		temp_vp;
; 886  : 
; 887  : 	ASSERT (target);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@get_select
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_selectable_hms_target@@YGHPAUENTITY@@@Z@4JA
  00017	83 c0 11	 add	 eax, 17			; 00000011H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_select:

; 888  : 
; 889  : 	//
; 890  : 	// check alive (gunship targets may be dead)
; 891  : 	//
; 892  : 
; 893  : 	if (!get_local_entity_int_value (target, INT_TYPE_ALIVE))

  0002a	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN6@get_select
  00030	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  0003b	eb 20		 jmp	 SHORT $LN7@get_select
$LN6@get_select:
  0003d	68 7d 03 00 00	 push	 893			; 0000037dH
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00053	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN7@get_select:
  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 0c		 je	 SHORT $LN8@get_select
  00066	c7 85 64 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv81[ebp], 7
  00070	eb 20		 jmp	 SHORT $LN9@get_select
$LN8@get_select:
  00072	68 7d 03 00 00	 push	 893			; 0000037dH
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00088	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN9@get_select:
  00092	6a 07		 push	 7
  00094	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00097	52		 push	 edx
  00098	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv74[ebp], 1116
  000a2	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv81[ebp]
  000a8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000af	ff d2		 call	 edx
  000b1	85 c0		 test	 eax, eax
  000b3	75 07		 jne	 SHORT $LN3@get_select

; 894  : 	{
; 895  : 		return (FALSE);

  000b5	33 c0		 xor	 eax, eax
  000b7	e9 55 01 00 00	 jmp	 $LN1@get_select
$LN3@get_select:

; 896  : 	}
; 897  : 
; 898  : 	//
; 899  : 	// check range
; 900  : 	//
; 901  : 
; 902  : 	source = get_gunship_entity ();

  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c1	89 45 fc	 mov	 DWORD PTR _source$[ebp], eax

; 903  : 
; 904  : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  000c4	83 7d fc 00	 cmp	 DWORD PTR _source$[ebp], 0
  000c8	74 0d		 je	 SHORT $LN10@get_select
  000ca	8b 45 fc	 mov	 eax, DWORD PTR _source$[ebp]
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv94[ebp], ecx
  000d5	eb 24		 jmp	 SHORT $LN11@get_select
$LN10@get_select:
  000d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_hms_target@@YGHPAUENTITY@@@Z@4JA
  000dd	83 c2 22	 add	 edx, 34			; 00000022H
  000e0	52		 push	 edx
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f1	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN11@get_select:
  000fb	b9 01 00 00 00	 mov	 ecx, 1
  00100	85 c9		 test	 ecx, ecx
  00102	74 0c		 je	 SHORT $LN12@get_select
  00104	c7 85 64 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv134[ebp], 8
  0010e	eb 24		 jmp	 SHORT $LN13@get_select
$LN12@get_select:
  00110	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_hms_target@@YGHPAUENTITY@@@Z@4JA
  00116	83 c2 22	 add	 edx, 34			; 00000022H
  00119	52		 push	 edx
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012a	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
$LN13@get_select:
  00134	6a 08		 push	 8
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _source$[ebp]
  00139	51		 push	 ecx
  0013a	6b 95 68 ff ff
	ff 60		 imul	 edx, DWORD PTR tv94[ebp], 96
  00141	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv134[ebp]
  00147	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0014e	ff d1		 call	 ecx
  00150	89 45 f4	 mov	 DWORD PTR _source_position$[ebp], eax

; 905  : 
; 906  : 	get_local_entity_target_point (target, &target_position);

  00153	8d 45 e8	 lea	 eax, DWORD PTR _target_position$[ebp]
  00156	50		 push	 eax
  00157	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  0015a	51		 push	 ecx
  0015b	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 907  : 
; 908  : 	target_range = get_3d_range (source_position, &target_position);

  00160	8d 45 e8	 lea	 eax, DWORD PTR _target_position$[ebp]
  00163	50		 push	 eax
  00164	8b 4d f4	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00167	51		 push	 ecx
  00168	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  0016d	d9 5d e4	 fstp	 DWORD PTR _target_range$[ebp]

; 909  : 
; 910  : 	if (target_range > hms_max_visual_range)

  00170	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00175	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  0017c	76 07		 jbe	 SHORT $LN4@get_select

; 911  : 	{
; 912  : 		return (FALSE);

  0017e	33 c0		 xor	 eax, eax
  00180	e9 8c 00 00 00	 jmp	 $LN1@get_select
$LN4@get_select:

; 913  : 	}
; 914  : 
; 915  : 	//
; 916  : 	// check line of sight
; 917  : 	//
; 918  : 
; 919  : 	temp_heading = pilot_head_heading;

  00185	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  0018d	f3 0f 11 45 e0	 movss	 DWORD PTR _temp_heading$[ebp], xmm0

; 920  : 
; 921  : 	temp_pitch = pilot_head_pitch;

  00192	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  0019a	f3 0f 11 45 dc	 movss	 DWORD PTR _temp_pitch$[ebp], xmm0

; 922  : 
; 923  : 	temp_vp = pilot_head_vp;

  0019f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001a4	be 00 00 00 00	 mov	 esi, OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  001a9	8d 7d ac	 lea	 edi, DWORD PTR _temp_vp$[ebp]
  001ac	f3 a5		 rep movsd

; 924  : 
; 925  : 	get_pilot_head_heading_and_pitch_to_target (target);

  001ae	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  001b1	50		 push	 eax
  001b2	e8 00 00 00 00	 call	 ?get_pilot_head_heading_and_pitch_to_target@@YGXPAUENTITY@@@Z ; get_pilot_head_heading_and_pitch_to_target

; 926  : 
; 927  : 	get_pilot_head_viewpoint ();

  001b7	e8 00 00 00 00	 call	 ?get_pilot_head_viewpoint@@YGXXZ ; get_pilot_head_viewpoint

; 928  : 
; 929  : 	boresight_target = get_hms_boresight_target ();

  001bc	e8 00 00 00 00	 call	 ?get_hms_boresight_target@@YGPAUENTITY@@XZ ; get_hms_boresight_target
  001c1	89 45 f8	 mov	 DWORD PTR _boresight_target$[ebp], eax

; 930  : 
; 931  : 	pilot_head_heading = temp_heading;

  001c4	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _temp_heading$[ebp]
  001c9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?pilot_head_heading@@3MA, xmm0

; 932  : 
; 933  : 	pilot_head_pitch = temp_pitch;

  001d1	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _temp_pitch$[ebp]
  001d6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?pilot_head_pitch@@3MA, xmm0

; 934  : 
; 935  : 	pilot_head_vp = temp_vp;

  001de	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001e3	8d 75 ac	 lea	 esi, DWORD PTR _temp_vp$[ebp]
  001e6	bf 00 00 00 00	 mov	 edi, OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  001eb	f3 a5		 rep movsd

; 936  : 
; 937  : 	return (boresight_target == target);

  001ed	8b 45 f8	 mov	 eax, DWORD PTR _boresight_target$[ebp]
  001f0	3b 45 08	 cmp	 eax, DWORD PTR _target$[ebp]
  001f3	75 0c		 jne	 SHORT $LN14@get_select
  001f5	c7 85 68 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv149[ebp], 1
  001ff	eb 0a		 jmp	 SHORT $LN15@get_select
$LN14@get_select:
  00201	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv149[ebp], 0
$LN15@get_select:
  0020b	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv149[ebp]
$LN1@get_select:

; 938  : }

  00211	5f		 pop	 edi
  00212	5e		 pop	 esi
  00213	5b		 pop	 ebx
  00214	8b e5		 mov	 esp, ebp
  00216	5d		 pop	 ebp
  00217	c2 04 00	 ret	 4
?get_selectable_hms_target@@YGHPAUENTITY@@@Z ENDP	; get_selectable_hms_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?get_hms_boresight_target@@YGPAUENTITY@@XZ
_TEXT	SEGMENT
tv428 = -228						; size = 4
tv315 = -228						; size = 4
tv296 = -228						; size = 4
tv277 = -228						; size = 4
tv257 = -228						; size = 4
tv130 = -228						; size = 4
tv565 = -224						; size = 4
tv558 = -224						; size = 4
tv551 = -224						; size = 4
tv544 = -224						; size = 4
tv420 = -224						; size = 4
tv308 = -224						; size = 4
tv289 = -224						; size = 4
tv270 = -224						; size = 4
tv249 = -224						; size = 4
tv242 = -224						; size = 4
tv90 = -224						; size = 4
_this_hms_target$ = -156				; size = 4
_hms_boresight_target$ = -152				; size = 4
_this_sector$ = -148					; size = 4
_locked_target$ = -144					; size = 4
_target$ = -140						; size = 4
_source$ = -136						; size = 4
_face_normal$ = -132					; size = 12
_intercept_point$ = -120				; size = 12
_uvec_target$ = -108					; size = 12
_target_position$ = -96					; size = 12
_rh_extent_position$ = -84				; size = 12
_lh_extent_position$ = -72				; size = 12
_target_cos_angular_error$ = -60			; size = 4
_z_max$ = -56						; size = 4
_x_max$ = -52						; size = 4
_z_min$ = -48						; size = 4
_x_min$ = -44						; size = 4
_heading$ = -40						; size = 4
_target_sqr_range$ = -36				; size = 4
_hms_max_visual_sqr_range$ = -32			; size = 4
_cos_hms_max_field_of_view$ = -28			; size = 4
_z_sector$ = -24					; size = 4
_x_sector$ = -20					; size = 4
_z_sector_max$ = -16					; size = 4
_x_sector_max$ = -12					; size = 4
_z_sector_min$ = -8					; size = 4
_x_sector_min$ = -4					; size = 4
?get_hms_boresight_target@@YGPAUENTITY@@XZ PROC		; get_hms_boresight_target, COMDAT

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 535  : 	int
; 536  : 		x_sector_min,
; 537  : 		z_sector_min,
; 538  : 		x_sector_max,
; 539  : 		z_sector_max,
; 540  : 		x_sector,
; 541  : 		z_sector;
; 542  : 
; 543  : 	float
; 544  : 		cos_hms_max_field_of_view,
; 545  : 		hms_max_visual_sqr_range,
; 546  : 		target_sqr_range,
; 547  : 		heading,
; 548  : 		x_min,
; 549  : 		z_min,
; 550  : 		x_max,
; 551  : 		z_max,
; 552  : 		target_cos_angular_error;
; 553  : 
; 554  : 	vec3d
; 555  : 		lh_extent_position,
; 556  : 		rh_extent_position,
; 557  : 		target_position,
; 558  : 		uvec_target,
; 559  : 		intercept_point,
; 560  : 		face_normal;
; 561  : 
; 562  : 	entity
; 563  : 		*source,
; 564  : 		*target,
; 565  : 		*locked_target,
; 566  : 		*this_sector,
; 567  : 		*hms_boresight_target;
; 568  : 
; 569  : 	hms_target
; 570  : 		*this_hms_target;
; 571  : 
; 572  : 	ASSERT (hms_max_visual_range > 0.0);

  0000c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  00014	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0001c	77 18		 ja	 SHORT $LN12@get_hms_bo
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  00023	83 c0 26	 add	 eax, 38			; 00000026H
  00026	50		 push	 eax
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FLAFFANP@hms_max_visual_range?5?$DO?50?40@
  00031	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@get_hms_bo:

; 573  : 
; 574  : 	ASSERT ((hms_max_field_of_view > rad (0.0)) && (hms_max_field_of_view <= rad (90.0)));

  00036	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hms_max_field_of_view@@3MA
  0003e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00046	76 16		 jbe	 SHORT $LN14@get_hms_bo
  00048	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hms_max_field_of_view@@3MA
  00050	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff921fb51000000
  00058	66 0f 2f c8	 comisd	 xmm1, xmm0
  0005c	73 18		 jae	 SHORT $LN13@get_hms_bo
$LN14@get_hms_bo:
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  00063	83 c0 28	 add	 eax, 40			; 00000028H
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@LEAKPJKO@?$CIhms_max_field_of_view?5?$DO?5rad?5?$CI0@
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_hms_bo:

; 575  : 
; 576  : 	hms_boresight_target = NULL;

  00076	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _hms_boresight_target$[ebp], 0

; 577  : 
; 578  : 	if (get_hms_valid ())

  00080	e8 00 00 00 00	 call	 ?get_hms_valid@@YGHXZ	; get_hms_valid
  00085	85 c0		 test	 eax, eax
  00087	0f 84 b3 09 00
	00		 je	 $LN15@get_hms_bo

; 579  : 	{
; 580  : 		source = get_gunship_entity ();

  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00092	89 85 78 ff ff
	ff		 mov	 DWORD PTR _source$[ebp], eax

; 581  : 
; 582  : 		cos_hms_max_field_of_view = cos (hms_max_field_of_view);

  00098	51		 push	 ecx
  00099	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hms_max_field_of_view@@3MA
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  000ab	d9 5d e4	 fstp	 DWORD PTR _cos_hms_max_field_of_view$[ebp]

; 583  : 
; 584  : 		hms_max_visual_sqr_range = hms_max_visual_range * hms_max_visual_range;

  000ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  000b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  000be	f3 0f 11 45 e0	 movss	 DWORD PTR _hms_max_visual_sqr_range$[ebp], xmm0

; 585  : 
; 586  : 		if (hms_target_locked)

  000c3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked
  000ca	0f 84 a0 00 00
	00		 je	 $LN16@get_hms_bo

; 587  : 		{
; 588  : 			locked_target = get_local_entity_parent (source, LIST_TYPE_TARGET);

  000d0	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _source$[ebp], 0
  000d7	74 10		 je	 SHORT $LN33@get_hms_bo
  000d9	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _source$[ebp]
  000df	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e1	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  000e7	eb 24		 jmp	 SHORT $LN34@get_hms_bo
$LN33@get_hms_bo:
  000e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  000ef	83 c2 36	 add	 edx, 54			; 00000036H
  000f2	52		 push	 edx
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00103	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN34@get_hms_bo:
  0010d	b9 01 00 00 00	 mov	 ecx, 1
  00112	85 c9		 test	 ecx, ecx
  00114	74 0c		 je	 SHORT $LN35@get_hms_bo
  00116	c7 85 1c ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv130[ebp], 38 ; 00000026H
  00120	eb 24		 jmp	 SHORT $LN36@get_hms_bo
$LN35@get_hms_bo:
  00122	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  00128	83 c2 36	 add	 edx, 54			; 00000036H
  0012b	52		 push	 edx
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013c	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv130[ebp], 0
$LN36@get_hms_bo:
  00146	6a 26		 push	 38			; 00000026H
  00148	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _source$[ebp]
  0014e	51		 push	 ecx
  0014f	69 95 20 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv90[ebp], 180
  00159	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  0015f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00166	ff d1		 call	 ecx
  00168	89 85 70 ff ff
	ff		 mov	 DWORD PTR _locked_target$[ebp], eax

; 589  : 		}
; 590  : 		else

  0016e	eb 0a		 jmp	 SHORT $LN17@get_hms_bo
$LN16@get_hms_bo:

; 591  : 		{
; 592  : 			locked_target = NULL;

  00170	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _locked_target$[ebp], 0
$LN17@get_hms_bo:

; 593  : 		}
; 594  : 
; 595  : 		////////////////////////////////////////
; 596  : 		//
; 597  : 		// calc sector scan
; 598  : 		//
; 599  : 		////////////////////////////////////////
; 600  : 
; 601  : 		//
; 602  : 		// (this scan should really check a pyramid but it is ok for horizontal flight)
; 603  : 		//
; 604  : 
; 605  : 		lh_extent_position = pilot_head_vp.position;

  0017a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A
  0017f	89 45 b8	 mov	 DWORD PTR _lh_extent_position$[ebp], eax
  00182	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A+4
  00188	89 4d bc	 mov	 DWORD PTR _lh_extent_position$[ebp+4], ecx
  0018b	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A+8
  00191	89 55 c0	 mov	 DWORD PTR _lh_extent_position$[ebp+8], edx

; 606  : 		rh_extent_position = pilot_head_vp.position;

  00194	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A
  00199	89 45 ac	 mov	 DWORD PTR _rh_extent_position$[ebp], eax
  0019c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A+4
  001a2	89 4d b0	 mov	 DWORD PTR _rh_extent_position$[ebp+4], ecx
  001a5	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A+8
  001ab	89 55 b4	 mov	 DWORD PTR _rh_extent_position$[ebp+8], edx

; 607  : 
; 608  : 		heading = get_heading_from_attitude_matrix (pilot_head_vp.attitude);

  001ae	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001b3	d1 e0		 shl	 eax, 1
  001b5	b9 04 00 00 00	 mov	 ecx, 4
  001ba	d1 e1		 shl	 ecx, 1
  001bc	51		 push	 ecx
  001bd	f3 0f 10 84 08
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A[eax+ecx+12]
  001c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cb	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001d0	d1 e2		 shl	 edx, 1
  001d2	b8 04 00 00 00	 mov	 eax, 4
  001d7	6b c8 00	 imul	 ecx, eax, 0
  001da	51		 push	 ecx
  001db	f3 0f 10 84 0a
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A[edx+ecx+12]
  001e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e9	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  001ee	d9 5d d8	 fstp	 DWORD PTR _heading$[ebp]

; 609  : 
; 610  : 		lh_extent_position.x += sin (heading - hms_max_field_of_view) * hms_max_visual_range;

  001f1	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  001f6	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hms_max_field_of_view@@3MA
  001fe	51		 push	 ecx
  001ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00204	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00209	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv544[ebp]
  0020f	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv544[ebp]
  00217	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  0021f	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _lh_extent_position$[ebp]
  00224	f3 0f 11 45 b8	 movss	 DWORD PTR _lh_extent_position$[ebp], xmm0

; 611  : 		lh_extent_position.z += cos (heading - hms_max_field_of_view) * hms_max_visual_range;

  00229	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0022e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hms_max_field_of_view@@3MA
  00236	51		 push	 ecx
  00237	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023c	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00241	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv551[ebp]
  00247	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv551[ebp]
  0024f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  00257	f3 0f 58 45 c0	 addss	 xmm0, DWORD PTR _lh_extent_position$[ebp+8]
  0025c	f3 0f 11 45 c0	 movss	 DWORD PTR _lh_extent_position$[ebp+8], xmm0

; 612  : 
; 613  : 		rh_extent_position.x += sin (heading + hms_max_field_of_view) * hms_max_visual_range;

  00261	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00266	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?hms_max_field_of_view@@3MA
  0026e	51		 push	 ecx
  0026f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00274	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00279	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv558[ebp]
  0027f	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv558[ebp]
  00287	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  0028f	f3 0f 58 45 ac	 addss	 xmm0, DWORD PTR _rh_extent_position$[ebp]
  00294	f3 0f 11 45 ac	 movss	 DWORD PTR _rh_extent_position$[ebp], xmm0

; 614  : 		rh_extent_position.z += cos (heading + hms_max_field_of_view) * hms_max_visual_range;

  00299	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0029e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?hms_max_field_of_view@@3MA
  002a6	51		 push	 ecx
  002a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ac	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  002b1	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv565[ebp]
  002b7	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv565[ebp]
  002bf	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hms_max_visual_range@@3MA
  002c7	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _rh_extent_position$[ebp+8]
  002cc	f3 0f 11 45 b4	 movss	 DWORD PTR _rh_extent_position$[ebp+8], xmm0

; 615  : 
; 616  : 		if (draw_hms_field_of_view && (get_view_mode () == VIEW_MODE_EXTERNAL))

  002d1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hms_field_of_view@@3HA, 0 ; draw_hms_field_of_view
  002d8	74 43		 je	 SHORT $LN18@get_hms_bo
  002da	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  002e1	75 3a		 jne	 SHORT $LN18@get_hms_bo

; 617  : 		{
; 618  : 			create_debug_3d_line (&pilot_head_vp.position, &lh_extent_position, sys_col_green, 0.0);

  002e3	51		 push	 ecx
  002e4	0f 57 c0	 xorps	 xmm0, xmm0
  002e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_green@@3UREAL_COLOUR@@A ; sys_col_green
  002f1	50		 push	 eax
  002f2	8d 4d b8	 lea	 ecx, DWORD PTR _lh_extent_position$[ebp]
  002f5	51		 push	 ecx
  002f6	68 00 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  002fb	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 619  : 			create_debug_3d_line (&pilot_head_vp.position, &rh_extent_position, sys_col_red, 0.0);

  00300	51		 push	 ecx
  00301	0f 57 c0	 xorps	 xmm0, xmm0
  00304	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00309	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  0030e	50		 push	 eax
  0030f	8d 4d ac	 lea	 ecx, DWORD PTR _rh_extent_position$[ebp]
  00312	51		 push	 ecx
  00313	68 00 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  00318	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line
$LN18@get_hms_bo:

; 620  : 		}
; 621  : 
; 622  : 		//
; 623  : 		// sector scan min
; 624  : 		//
; 625  : 
; 626  : 		x_min = min (min (lh_extent_position.x, rh_extent_position.x), pilot_head_vp.position.x);

  0031d	68 00 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  00322	8d 45 ac	 lea	 eax, DWORD PTR _rh_extent_position$[ebp]
  00325	50		 push	 eax
  00326	8d 4d b8	 lea	 ecx, DWORD PTR _lh_extent_position$[ebp]
  00329	51		 push	 ecx
  0032a	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0032f	50		 push	 eax
  00330	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00335	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00339	f3 0f 11 45 d4	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 627  : 		z_min = min (min (lh_extent_position.z, rh_extent_position.z), pilot_head_vp.position.z);

  0033e	68 08 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A+8
  00343	8d 45 b4	 lea	 eax, DWORD PTR _rh_extent_position$[ebp+8]
  00346	50		 push	 eax
  00347	8d 4d c0	 lea	 ecx, DWORD PTR _lh_extent_position$[ebp+8]
  0034a	51		 push	 ecx
  0034b	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00350	50		 push	 eax
  00351	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00356	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0035a	f3 0f 11 45 d0	 movss	 DWORD PTR _z_min$[ebp], xmm0

; 628  : 
; 629  : 		get_x_sector (x_sector_min, x_min);

  0035f	8d 45 fc	 lea	 eax, DWORD PTR _x_sector_min$[ebp]
  00362	50		 push	 eax
  00363	51		 push	 ecx
  00364	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00369	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036e	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00373	8b 45 fc	 mov	 eax, DWORD PTR _x_sector_min$[ebp]
  00376	99		 cdq
  00377	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0037d	89 45 fc	 mov	 DWORD PTR _x_sector_min$[ebp], eax

; 630  : 		get_z_sector (z_sector_min, z_min);

  00380	8d 45 f8	 lea	 eax, DWORD PTR _z_sector_min$[ebp]
  00383	50		 push	 eax
  00384	51		 push	 ecx
  00385	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _z_min$[ebp]
  0038a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038f	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00394	8b 45 f8	 mov	 eax, DWORD PTR _z_sector_min$[ebp]
  00397	99		 cdq
  00398	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0039e	89 45 f8	 mov	 DWORD PTR _z_sector_min$[ebp], eax

; 631  : 
; 632  : 		x_sector_min = max (x_sector_min, MIN_MAP_X_SECTOR);

  003a1	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  003a6	8d 45 fc	 lea	 eax, DWORD PTR _x_sector_min$[ebp]
  003a9	50		 push	 eax
  003aa	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  003af	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b1	89 4d fc	 mov	 DWORD PTR _x_sector_min$[ebp], ecx

; 633  : 		z_sector_min = max (z_sector_min, MIN_MAP_Z_SECTOR);

  003b4	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  003b9	8d 45 f8	 lea	 eax, DWORD PTR _z_sector_min$[ebp]
  003bc	50		 push	 eax
  003bd	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  003c2	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c4	89 4d f8	 mov	 DWORD PTR _z_sector_min$[ebp], ecx

; 634  : 
; 635  : 		//
; 636  : 		// sector scan max
; 637  : 		//
; 638  : 
; 639  : 		x_max = max (max (lh_extent_position.x, rh_extent_position.x), pilot_head_vp.position.x);

  003c7	68 00 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  003cc	8d 45 ac	 lea	 eax, DWORD PTR _rh_extent_position$[ebp]
  003cf	50		 push	 eax
  003d0	8d 4d b8	 lea	 ecx, DWORD PTR _lh_extent_position$[ebp]
  003d3	51		 push	 ecx
  003d4	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  003d9	50		 push	 eax
  003da	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  003df	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003e3	f3 0f 11 45 cc	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 640  : 		z_max = max (max (lh_extent_position.z, rh_extent_position.z), pilot_head_vp.position.z);

  003e8	68 08 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A+8
  003ed	8d 45 b4	 lea	 eax, DWORD PTR _rh_extent_position$[ebp+8]
  003f0	50		 push	 eax
  003f1	8d 4d c0	 lea	 ecx, DWORD PTR _lh_extent_position$[ebp+8]
  003f4	51		 push	 ecx
  003f5	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  003fa	50		 push	 eax
  003fb	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00400	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00404	f3 0f 11 45 c8	 movss	 DWORD PTR _z_max$[ebp], xmm0

; 641  : 
; 642  : 		get_x_sector (x_sector_max, x_max);

  00409	8d 45 f4	 lea	 eax, DWORD PTR _x_sector_max$[ebp]
  0040c	50		 push	 eax
  0040d	51		 push	 ecx
  0040e	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00413	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00418	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0041d	8b 45 f4	 mov	 eax, DWORD PTR _x_sector_max$[ebp]
  00420	99		 cdq
  00421	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00427	89 45 f4	 mov	 DWORD PTR _x_sector_max$[ebp], eax

; 643  : 		get_z_sector (z_sector_max, z_max);

  0042a	8d 45 f0	 lea	 eax, DWORD PTR _z_sector_max$[ebp]
  0042d	50		 push	 eax
  0042e	51		 push	 ecx
  0042f	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  00434	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00439	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0043e	8b 45 f0	 mov	 eax, DWORD PTR _z_sector_max$[ebp]
  00441	99		 cdq
  00442	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00448	89 45 f0	 mov	 DWORD PTR _z_sector_max$[ebp], eax

; 644  : 
; 645  : 		x_sector_max = min (x_sector_max, MAX_MAP_X_SECTOR);

  0044b	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  00450	8d 45 f4	 lea	 eax, DWORD PTR _x_sector_max$[ebp]
  00453	50		 push	 eax
  00454	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00459	8b 08		 mov	 ecx, DWORD PTR [eax]
  0045b	89 4d f4	 mov	 DWORD PTR _x_sector_max$[ebp], ecx

; 646  : 		z_sector_max = min (z_sector_max, MAX_MAP_Z_SECTOR);

  0045e	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  00463	8d 45 f0	 lea	 eax, DWORD PTR _z_sector_max$[ebp]
  00466	50		 push	 eax
  00467	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  0046c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046e	89 4d f0	 mov	 DWORD PTR _z_sector_max$[ebp], ecx

; 647  : 
; 648  : 		////////////////////////////////////////
; 649  : 		//
; 650  : 		// sector scan (locate possible targets)
; 651  : 		//
; 652  : 		////////////////////////////////////////
; 653  : 
; 654  : 		initialise_hms_target_list ();

  00471	e8 00 00 00 00	 call	 ?initialise_hms_target_list@@YGXXZ ; initialise_hms_target_list

; 655  : 
; 656  : 		for (z_sector = z_sector_min; z_sector <= z_sector_max; z_sector++)

  00476	8b 45 f8	 mov	 eax, DWORD PTR _z_sector_min$[ebp]
  00479	89 45 e8	 mov	 DWORD PTR _z_sector$[ebp], eax
  0047c	eb 09		 jmp	 SHORT $LN4@get_hms_bo
$LN2@get_hms_bo:
  0047e	8b 45 e8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  00481	83 c0 01	 add	 eax, 1
  00484	89 45 e8	 mov	 DWORD PTR _z_sector$[ebp], eax
$LN4@get_hms_bo:
  00487	8b 45 e8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  0048a	3b 45 f0	 cmp	 eax, DWORD PTR _z_sector_max$[ebp]
  0048d	0f 8f e4 04 00
	00		 jg	 $LN3@get_hms_bo

; 657  : 		{
; 658  : 			for (x_sector = x_sector_min; x_sector <= x_sector_max; x_sector++)

  00493	8b 45 fc	 mov	 eax, DWORD PTR _x_sector_min$[ebp]
  00496	89 45 ec	 mov	 DWORD PTR _x_sector$[ebp], eax
  00499	eb 09		 jmp	 SHORT $LN7@get_hms_bo
$LN5@get_hms_bo:
  0049b	8b 45 ec	 mov	 eax, DWORD PTR _x_sector$[ebp]
  0049e	83 c0 01	 add	 eax, 1
  004a1	89 45 ec	 mov	 DWORD PTR _x_sector$[ebp], eax
$LN7@get_hms_bo:
  004a4	8b 45 ec	 mov	 eax, DWORD PTR _x_sector$[ebp]
  004a7	3b 45 f4	 cmp	 eax, DWORD PTR _x_sector_max$[ebp]
  004aa	0f 8f c2 04 00
	00		 jg	 $LN6@get_hms_bo

; 659  : 			{
; 660  : 				this_sector = get_local_raw_sector_entity (x_sector, z_sector);

  004b0	8b 45 e8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  004b3	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  004ba	03 45 ec	 add	 eax, DWORD PTR _x_sector$[ebp]
  004bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  004c3	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  004c7	74 1d		 je	 SHORT $LN37@get_hms_bo
  004c9	8b 55 e8	 mov	 edx, DWORD PTR _z_sector$[ebp]
  004cc	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  004d3	03 55 ec	 add	 edx, DWORD PTR _x_sector$[ebp]
  004d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  004db	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  004de	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv242[ebp], ecx
  004e4	eb 24		 jmp	 SHORT $LN38@get_hms_bo
$LN37@get_hms_bo:
  004e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  004ec	83 c2 7e	 add	 edx, 126		; 0000007eH
  004ef	52		 push	 edx
  004f0	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  004fa	50		 push	 eax
  004fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00500	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN38@get_hms_bo:
  0050a	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv242[ebp]
  00510	89 8d 6c ff ff
	ff		 mov	 DWORD PTR _this_sector$[ebp], ecx

; 661  : 
; 662  : 				target = get_local_entity_first_child (this_sector, LIST_TYPE_SECTOR);

  00516	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR _this_sector$[ebp], 0
  0051d	74 10		 je	 SHORT $LN39@get_hms_bo
  0051f	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _this_sector$[ebp]
  00525	8b 08		 mov	 ecx, DWORD PTR [eax]
  00527	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv249[ebp], ecx
  0052d	eb 27		 jmp	 SHORT $LN40@get_hms_bo
$LN39@get_hms_bo:
  0052f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  00535	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  0053b	52		 push	 edx
  0053c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00541	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00546	50		 push	 eax
  00547	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0054c	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv249[ebp], 0
$LN40@get_hms_bo:
  00556	b9 01 00 00 00	 mov	 ecx, 1
  0055b	85 c9		 test	 ecx, ecx
  0055d	74 0c		 je	 SHORT $LN41@get_hms_bo
  0055f	c7 85 1c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv257[ebp], 33 ; 00000021H
  00569	eb 27		 jmp	 SHORT $LN42@get_hms_bo
$LN41@get_hms_bo:
  0056b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  00571	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  00577	52		 push	 edx
  00578	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0057d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00582	50		 push	 eax
  00583	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00588	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv257[ebp], 0
$LN42@get_hms_bo:
  00592	6a 21		 push	 33			; 00000021H
  00594	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _this_sector$[ebp]
  0059a	51		 push	 ecx
  0059b	69 95 20 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv249[ebp], 180
  005a5	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv257[ebp]
  005ab	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  005b2	ff d1		 call	 ecx
  005b4	89 85 74 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax
$LN8@get_hms_bo:

; 663  : 
; 664  : 				while (target)

  005ba	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  005c1	0f 84 a6 03 00
	00		 je	 $LN9@get_hms_bo

; 665  : 				{
; 666  : 					if (target != source)

  005c7	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  005cd	3b 85 78 ff ff
	ff		 cmp	 eax, DWORD PTR _source$[ebp]
  005d3	0f 84 eb 02 00
	00		 je	 $LN22@get_hms_bo

; 667  : 					{
; 668  : 						if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) != TARGET_TYPE_INVALID)

  005d9	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  005e0	74 10		 je	 SHORT $LN43@get_hms_bo
  005e2	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  005e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ea	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv270[ebp], ecx
  005f0	eb 20		 jmp	 SHORT $LN44@get_hms_bo
$LN43@get_hms_bo:
  005f2	68 9c 02 00 00	 push	 668			; 0000029cH
  005f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  005fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00602	52		 push	 edx
  00603	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00608	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv270[ebp], 0
$LN44@get_hms_bo:
  00612	b8 01 00 00 00	 mov	 eax, 1
  00617	85 c0		 test	 eax, eax
  00619	74 0c		 je	 SHORT $LN45@get_hms_bo
  0061b	c7 85 1c ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv277[ebp], 214 ; 000000d6H
  00625	eb 20		 jmp	 SHORT $LN46@get_hms_bo
$LN45@get_hms_bo:
  00627	68 9c 02 00 00	 push	 668			; 0000029cH
  0062c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00631	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00637	51		 push	 ecx
  00638	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0063d	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv277[ebp], 0
$LN46@get_hms_bo:
  00647	68 d6 00 00 00	 push	 214			; 000000d6H
  0064c	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _target$[ebp]
  00652	52		 push	 edx
  00653	69 85 20 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv270[ebp], 1116
  0065d	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR tv277[ebp]
  00663	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0066a	ff d2		 call	 edx
  0066c	85 c0		 test	 eax, eax
  0066e	0f 84 50 02 00
	00		 je	 $LN22@get_hms_bo

; 669  : 						{
; 670  : 							if (get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00674	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  0067b	74 10		 je	 SHORT $LN47@get_hms_bo
  0067d	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  00683	8b 08		 mov	 ecx, DWORD PTR [eax]
  00685	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv289[ebp], ecx
  0068b	eb 20		 jmp	 SHORT $LN48@get_hms_bo
$LN47@get_hms_bo:
  0068d	68 9e 02 00 00	 push	 670			; 0000029eH
  00692	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00697	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0069d	52		 push	 edx
  0069e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006a3	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv289[ebp], 0
$LN48@get_hms_bo:
  006ad	b8 01 00 00 00	 mov	 eax, 1
  006b2	85 c0		 test	 eax, eax
  006b4	74 0c		 je	 SHORT $LN49@get_hms_bo
  006b6	c7 85 1c ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv296[ebp], 7
  006c0	eb 20		 jmp	 SHORT $LN50@get_hms_bo
$LN49@get_hms_bo:
  006c2	68 9e 02 00 00	 push	 670			; 0000029eH
  006c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  006cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006d2	51		 push	 ecx
  006d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006d8	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv296[ebp], 0
$LN50@get_hms_bo:
  006e2	6a 07		 push	 7
  006e4	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _target$[ebp]
  006ea	52		 push	 edx
  006eb	69 85 20 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv289[ebp], 1116
  006f5	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR tv296[ebp]
  006fb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00702	ff d2		 call	 edx
  00704	85 c0		 test	 eax, eax
  00706	0f 84 aa 01 00
	00		 je	 $LN21@get_hms_bo

; 671  : 							{
; 672  : 								if (!get_local_entity_int_value (target, INT_TYPE_INSIDE_HANGAR))

  0070c	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  00713	74 10		 je	 SHORT $LN51@get_hms_bo
  00715	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  0071b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0071d	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv308[ebp], ecx
  00723	eb 20		 jmp	 SHORT $LN52@get_hms_bo
$LN51@get_hms_bo:
  00725	68 a0 02 00 00	 push	 672			; 000002a0H
  0072a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0072f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00735	52		 push	 edx
  00736	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0073b	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv308[ebp], 0
$LN52@get_hms_bo:
  00745	b8 01 00 00 00	 mov	 eax, 1
  0074a	85 c0		 test	 eax, eax
  0074c	74 0c		 je	 SHORT $LN53@get_hms_bo
  0074e	c7 85 1c ff ff
	ff 6a 00 00 00	 mov	 DWORD PTR tv315[ebp], 106 ; 0000006aH
  00758	eb 20		 jmp	 SHORT $LN54@get_hms_bo
$LN53@get_hms_bo:
  0075a	68 a0 02 00 00	 push	 672			; 000002a0H
  0075f	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00764	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00770	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv315[ebp], 0
$LN54@get_hms_bo:
  0077a	6a 6a		 push	 106			; 0000006aH
  0077c	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _target$[ebp]
  00782	52		 push	 edx
  00783	69 85 20 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv308[ebp], 1116
  0078d	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR tv315[ebp]
  00793	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0079a	ff d2		 call	 edx
  0079c	85 c0		 test	 eax, eax
  0079e	0f 85 10 01 00
	00		 jne	 $LN27@get_hms_bo

; 673  : 								{
; 674  : 									get_local_entity_target_point (target, &target_position);

  007a4	8d 45 a0	 lea	 eax, DWORD PTR _target_position$[ebp]
  007a7	50		 push	 eax
  007a8	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _target$[ebp]
  007ae	51		 push	 ecx
  007af	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 675  : 
; 676  : 									if
; 677  : 									(
; 678  : 										(target_position.x >= x_min) &&
; 679  : 										(target_position.x <= x_max) &&
; 680  : 										(target_position.z >= z_min) &&

  007b4	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  007b9	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _x_min$[ebp]
  007bd	0f 82 f1 00 00
	00		 jb	 $LN27@get_hms_bo
  007c3	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  007c8	0f 2f 45 a0	 comiss	 xmm0, DWORD PTR _target_position$[ebp]
  007cc	0f 82 e2 00 00
	00		 jb	 $LN27@get_hms_bo
  007d2	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  007d7	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _z_min$[ebp]
  007db	0f 82 d3 00 00
	00		 jb	 $LN27@get_hms_bo
  007e1	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  007e6	0f 2f 45 a8	 comiss	 xmm0, DWORD PTR _target_position$[ebp+8]
  007ea	0f 82 c4 00 00
	00		 jb	 $LN27@get_hms_bo

; 681  : 										(target_position.z <= z_max)
; 682  : 									)
; 683  : 									{
; 684  : 										uvec_target.x = target_position.x - pilot_head_vp.position.x;

  007f0	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  007f5	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A
  007fd	f3 0f 11 45 94	 movss	 DWORD PTR _uvec_target$[ebp], xmm0

; 685  : 										uvec_target.y = target_position.y - pilot_head_vp.position.y;

  00802	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _target_position$[ebp+4]
  00807	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A+4
  0080f	f3 0f 11 45 98	 movss	 DWORD PTR _uvec_target$[ebp+4], xmm0

; 686  : 										uvec_target.z = target_position.z - pilot_head_vp.position.z;

  00814	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  00819	f3 0f 5c 05 08
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_vp@@3UVIEWPOINT@@A+8
  00821	f3 0f 11 45 9c	 movss	 DWORD PTR _uvec_target$[ebp+8], xmm0

; 687  : 
; 688  : 										target_sqr_range = (uvec_target.x * uvec_target.x) + (uvec_target.y * uvec_target.y) + (uvec_target.z * uvec_target.z);

  00826	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _uvec_target$[ebp]
  0082b	f3 0f 59 45 94	 mulss	 xmm0, DWORD PTR _uvec_target$[ebp]
  00830	f3 0f 10 4d 98	 movss	 xmm1, DWORD PTR _uvec_target$[ebp+4]
  00835	f3 0f 59 4d 98	 mulss	 xmm1, DWORD PTR _uvec_target$[ebp+4]
  0083a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0083e	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _uvec_target$[ebp+8]
  00843	f3 0f 59 4d 9c	 mulss	 xmm1, DWORD PTR _uvec_target$[ebp+8]
  00848	f3 0f 58 c1	 addss	 xmm0, xmm1
  0084c	f3 0f 11 45 dc	 movss	 DWORD PTR _target_sqr_range$[ebp], xmm0

; 689  : 
; 690  : 										if (target_sqr_range < hms_max_visual_sqr_range)

  00851	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _hms_max_visual_sqr_range$[ebp]
  00856	0f 2f 45 dc	 comiss	 xmm0, DWORD PTR _target_sqr_range$[ebp]
  0085a	76 58		 jbe	 SHORT $LN27@get_hms_bo

; 691  : 										{
; 692  : 											if (target_sqr_range > 1.0)

  0085c	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _target_sqr_range$[ebp]
  00861	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00869	76 49		 jbe	 SHORT $LN27@get_hms_bo

; 693  : 											{
; 694  : 												normalise_3d_vector (&uvec_target);

  0086b	8d 45 94	 lea	 eax, DWORD PTR _uvec_target$[ebp]
  0086e	50		 push	 eax
  0086f	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  00874	dd d8		 fstp	 ST(0)

; 695  : 
; 696  : 												target_cos_angular_error = get_3d_unit_vector_dot_product (&pilot_head_vp.zv, &uvec_target);

  00876	8d 45 94	 lea	 eax, DWORD PTR _uvec_target$[ebp]
  00879	50		 push	 eax
  0087a	68 24 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A+36
  0087f	e8 00 00 00 00	 call	 ?get_3d_unit_vector_dot_product@@YGMPBUVEC3D@@0@Z ; get_3d_unit_vector_dot_product
  00884	d9 5d c4	 fstp	 DWORD PTR _target_cos_angular_error$[ebp]

; 697  : 
; 698  : 												if (target_cos_angular_error >= cos_hms_max_field_of_view)

  00887	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _target_cos_angular_error$[ebp]
  0088c	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _cos_hms_max_field_of_view$[ebp]
  00890	72 22		 jb	 SHORT $LN27@get_hms_bo

; 699  : 												{
; 700  : 													insert_entity_into_hms_target_list (target, locked_target, target_cos_angular_error, &target_position);

  00892	8d 45 a0	 lea	 eax, DWORD PTR _target_position$[ebp]
  00895	50		 push	 eax
  00896	51		 push	 ecx
  00897	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _target_cos_angular_error$[ebp]
  0089c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008a1	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _locked_target$[ebp]
  008a7	51		 push	 ecx
  008a8	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _target$[ebp]
  008ae	52		 push	 edx
  008af	e8 00 00 00 00	 call	 ?insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z ; insert_entity_into_hms_target_list
$LN27@get_hms_bo:

; 701  : 												}
; 702  : 											}
; 703  : 										}
; 704  : 									}
; 705  : 								}
; 706  : 							}
; 707  : 							else

  008b4	eb 0e		 jmp	 SHORT $LN22@get_hms_bo
$LN21@get_hms_bo:

; 708  : 							{
; 709  : 								delete_local_entity_from_parents_child_list (target, LIST_TYPE_GUNSHIP_TARGET);

  008b6	6a 12		 push	 18			; 00000012H
  008b8	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  008be	50		 push	 eax
  008bf	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list
$LN22@get_hms_bo:

; 710  : 							}
; 711  : 						}
; 712  : 					}
; 713  : 
; 714  : 					target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR);

  008c4	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  008cb	74 10		 je	 SHORT $LN55@get_hms_bo
  008cd	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  008d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  008d5	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv420[ebp], ecx
  008db	eb 27		 jmp	 SHORT $LN56@get_hms_bo
$LN55@get_hms_bo:
  008dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  008e3	81 c2 b4 00 00
	00		 add	 edx, 180		; 000000b4H
  008e9	52		 push	 edx
  008ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  008ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008f4	50		 push	 eax
  008f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008fa	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv420[ebp], 0
$LN56@get_hms_bo:
  00904	b9 01 00 00 00	 mov	 ecx, 1
  00909	85 c9		 test	 ecx, ecx
  0090b	74 0c		 je	 SHORT $LN57@get_hms_bo
  0090d	c7 85 1c ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv428[ebp], 33 ; 00000021H
  00917	eb 27		 jmp	 SHORT $LN58@get_hms_bo
$LN57@get_hms_bo:
  00919	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_hms_boresight_target@@YGPAUENTITY@@XZ@4JA
  0091f	81 c2 b4 00 00
	00		 add	 edx, 180		; 000000b4H
  00925	52		 push	 edx
  00926	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0092b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00930	50		 push	 eax
  00931	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00936	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv428[ebp], 0
$LN58@get_hms_bo:
  00940	6a 21		 push	 33			; 00000021H
  00942	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _target$[ebp]
  00948	51		 push	 ecx
  00949	69 95 20 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv420[ebp], 180
  00953	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv428[ebp]
  00959	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00960	ff d1		 call	 ecx
  00962	89 85 74 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 715  : 				}

  00968	e9 4d fc ff ff	 jmp	 $LN8@get_hms_bo
$LN9@get_hms_bo:

; 716  : 			}

  0096d	e9 29 fb ff ff	 jmp	 $LN5@get_hms_bo
$LN6@get_hms_bo:

; 717  : 		}

  00972	e9 07 fb ff ff	 jmp	 $LN2@get_hms_bo
$LN3@get_hms_bo:

; 718  : 
; 719  : 		////////////////////////////////////////
; 720  : 		//
; 721  : 		// scan possible targets (nearest to boresight first)
; 722  : 		//
; 723  : 		////////////////////////////////////////
; 724  : 
; 725  : 		if (hms_target_root)

  00977	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hms_target_root@@3PAUHMS_TARGET@@A, 0
  0097e	0f 84 b7 00 00
	00		 je	 $LN11@get_hms_bo

; 726  : 		{
; 727  : 			this_hms_target = hms_target_root;

  00984	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hms_target_root@@3PAUHMS_TARGET@@A
  00989	89 85 64 ff ff
	ff		 mov	 DWORD PTR _this_hms_target$[ebp], eax
$LN10@get_hms_bo:

; 728  : 
; 729  : 			while (this_hms_target)

  0098f	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _this_hms_target$[ebp], 0
  00996	0f 84 9f 00 00
	00		 je	 $LN11@get_hms_bo

; 730  : 			{
; 731  : 				if (get_terrain_los_clear (&pilot_head_vp.position, &this_hms_target->target_position))

  0099c	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _this_hms_target$[ebp]
  009a2	83 c0 08	 add	 eax, 8
  009a5	50		 push	 eax
  009a6	68 00 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  009ab	e8 00 00 00 00	 call	 ?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z ; get_terrain_los_clear
  009b0	85 c0		 test	 eax, eax
  009b2	74 73		 je	 SHORT $LN31@get_hms_bo

; 732  : 				{
; 733  : 					if (!get_line_of_sight_collision_tree (&pilot_head_vp.position, &this_hms_target->target_position, &intercept_point, &face_normal, FALSE, TRUE))

  009b4	6a 01		 push	 1
  009b6	6a 00		 push	 0
  009b8	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _face_normal$[ebp]
  009be	50		 push	 eax
  009bf	8d 4d 88	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  009c2	51		 push	 ecx
  009c3	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR _this_hms_target$[ebp]
  009c9	83 c2 08	 add	 edx, 8
  009cc	52		 push	 edx
  009cd	68 00 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  009d2	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z ; get_line_of_sight_collision_tree
  009d7	85 c0		 test	 eax, eax
  009d9	75 4c		 jne	 SHORT $LN31@get_hms_bo

; 734  : 					{
; 735  : 						target = get_line_of_sight_collision_entity

  009db	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _face_normal$[ebp]
  009e1	50		 push	 eax
  009e2	8d 4d 88	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  009e5	51		 push	 ecx
  009e6	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR _this_hms_target$[ebp]
  009ec	83 c2 08	 add	 edx, 8
  009ef	52		 push	 edx
  009f0	68 00 00 00 00	 push	 OFFSET ?pilot_head_vp@@3UVIEWPOINT@@A ; pilot_head_vp
  009f5	6a 00		 push	 0
  009f7	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _source$[ebp]
  009fd	50		 push	 eax
  009fe	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z ; get_line_of_sight_collision_entity
  00a03	89 85 74 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 736  : 						(
; 737  : 							source,
; 738  : 							NULL,
; 739  : 							&pilot_head_vp.position,
; 740  : 							&this_hms_target->target_position,
; 741  : 							&intercept_point,
; 742  : 							&face_normal
; 743  : 						);
; 744  : 
; 745  : 						if (target == this_hms_target->target)

  00a09	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _this_hms_target$[ebp]
  00a0f	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _target$[ebp]
  00a15	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00a17	75 0e		 jne	 SHORT $LN31@get_hms_bo

; 746  : 						{
; 747  : 							hms_boresight_target = target;

  00a19	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  00a1f	89 85 68 ff ff
	ff		 mov	 DWORD PTR _hms_boresight_target$[ebp], eax

; 748  : 
; 749  : 							break;

  00a25	eb 14		 jmp	 SHORT $LN11@get_hms_bo
$LN31@get_hms_bo:

; 750  : 						}
; 751  : 					}
; 752  : 				}
; 753  : 
; 754  : 				this_hms_target = this_hms_target->succ;

  00a27	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _this_hms_target$[ebp]
  00a2d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00a30	89 8d 64 ff ff
	ff		 mov	 DWORD PTR _this_hms_target$[ebp], ecx

; 755  : 			}

  00a36	e9 54 ff ff ff	 jmp	 $LN10@get_hms_bo
$LN11@get_hms_bo:

; 756  : 		}
; 757  : 
; 758  : 		deinitialise_hms_target_list ();

  00a3b	e8 00 00 00 00	 call	 ?deinitialise_hms_target_list@@YGXXZ ; deinitialise_hms_target_list
$LN15@get_hms_bo:

; 759  : 	}
; 760  : 
; 761  : 	return (hms_boresight_target);

  00a40	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _hms_boresight_target$[ebp]

; 762  : }

  00a46	5f		 pop	 edi
  00a47	5e		 pop	 esi
  00a48	5b		 pop	 ebx
  00a49	8b e5		 mov	 esp, ebp
  00a4b	5d		 pop	 ebp
  00a4c	c3		 ret	 0
?get_hms_boresight_target@@YGPAUENTITY@@XZ ENDP		; get_hms_boresight_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?get_hms_valid@@YGHXZ
_TEXT	SEGMENT
tv77 = -72						; size = 4
tv70 = -68						; size = 4
?get_hms_valid@@YGHXZ PROC				; get_hms_valid, COMDAT

; 514  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 515  : 	if (!get_global_simple_avionics ())

  00009	83 3d 6c 03 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+876, 0
  00010	0f 85 8f 00 00
	00		 jne	 $LN2@get_hms_va

; 516  : 	{
; 517  : 		if (get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE) == DAY_SEGMENT_TYPE_NIGHT)

  00016	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0001d	74 0c		 je	 SHORT $LN6@get_hms_va
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d bc	 mov	 DWORD PTR tv70[ebp], ecx
  00029	eb 1d		 jmp	 SHORT $LN7@get_hms_va
$LN6@get_hms_va:
  0002b	68 05 02 00 00	 push	 517			; 00000205H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN7@get_hms_va:
  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	85 c0		 test	 eax, eax
  0004f	74 09		 je	 SHORT $LN8@get_hms_va
  00051	c7 45 b8 27 00
	00 00		 mov	 DWORD PTR tv77[ebp], 39	; 00000027H
  00058	eb 1d		 jmp	 SHORT $LN9@get_hms_va
$LN8@get_hms_va:
  0005a	68 05 02 00 00	 push	 517			; 00000205H
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00070	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN9@get_hms_va:
  00077	6a 27		 push	 39			; 00000027H
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0007f	52		 push	 edx
  00080	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv70[ebp], 1116
  00087	8b 4d b8	 mov	 ecx, DWORD PTR tv77[ebp]
  0008a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00091	ff d2		 call	 edx
  00093	83 f8 03	 cmp	 eax, 3
  00096	75 0d		 jne	 SHORT $LN2@get_hms_va

; 518  : 		{
; 519  : 			if (!night_vision_system_active)

  00098	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?night_vision_system_active@@3HA, 0 ; night_vision_system_active
  0009f	75 04		 jne	 SHORT $LN2@get_hms_va

; 520  : 			{
; 521  : 				return (FALSE);

  000a1	33 c0		 xor	 eax, eax
  000a3	eb 05		 jmp	 SHORT $LN1@get_hms_va
$LN2@get_hms_va:

; 522  : 			}
; 523  : 		}
; 524  : 	}
; 525  : 
; 526  : 	return (TRUE);

  000a5	b8 01 00 00 00	 mov	 eax, 1
$LN1@get_hms_va:

; 527  : }

  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
?get_hms_valid@@YGHXZ ENDP				; get_hms_valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z
_TEXT	SEGMENT
tv458 = -116						; size = 4
tv450 = -116						; size = 4
tv416 = -116						; size = 4
tv408 = -116						; size = 4
tv371 = -116						; size = 4
tv363 = -116						; size = 4
tv321 = -116						; size = 4
tv313 = -116						; size = 4
tv227 = -116						; size = 4
tv202 = -116						; size = 4
tv174 = -116						; size = 4
tv137 = -116						; size = 4
_position$ = -48					; size = 12
_step_ratio$ = -36					; size = 4
_flat_range$ = -32					; size = 4
_ddz$ = -28						; size = 4
_ddy$ = -24						; size = 4
_ddx$ = -20						; size = 4
_dz$ = -16						; size = 4
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_count$ = -4						; size = 4
_source_position$ = 8					; size = 4
_target_position$ = 12					; size = 4
?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z PROC		; get_terrain_los_clear, COMDAT

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 292  : 	int
; 293  : 		count;
; 294  : 
; 295  : 	float
; 296  : 		dx,
; 297  : 		dy,
; 298  : 		dz,
; 299  : 		ddx,
; 300  : 		ddy,
; 301  : 		ddz,
; 302  : 		flat_range,
; 303  : 		step_ratio;
; 304  : 
; 305  : 	vec3d
; 306  : 		position;
; 307  : 
; 308  : 	ASSERT (source_position);

  00009	83 7d 08 00	 cmp	 DWORD PTR _source_position$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN10@get_terrai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IIPCKJML@source_position@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@get_terrai:

; 309  : 
; 310  : 	ASSERT (target_position);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN11@get_terrai
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA
  00032	83 c0 13	 add	 eax, 19			; 00000013H
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NENIEICJ@target_position@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@get_terrai:

; 311  : 
; 312  : 	dx = target_position->x - source_position->x;

  00045	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0004b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0004f	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00053	f3 0f 11 45 f8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 313  : 	dy = target_position->y - source_position->y;

  00058	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0005e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00063	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00068	f3 0f 11 45 f4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 314  : 	dz = target_position->z - source_position->z;

  0006d	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00073	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00078	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0007d	f3 0f 11 45 f0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 315  : 
; 316  : 	flat_range = sqrt ((dx * dx) + (dz * dz));

  00082	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00087	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  0008c	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00091	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  00096	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009a	51		 push	 ecx
  0009b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a0	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  000a5	d9 5d e0	 fstp	 DWORD PTR _flat_range$[ebp]

; 317  : 
; 318  : 	if (flat_range < (LARGE_STEP_SIZE * 2.0))

  000a8	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _flat_range$[ebp]
  000ad	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4079000000000000
  000b5	66 0f 2f c8	 comisd	 xmm1, xmm0
  000b9	0f 86 8a 01 00
	00		 jbe	 $LN12@get_terrai

; 319  : 	{
; 320  : 		////////////////////////////////////////
; 321  : 		//
; 322  : 		// short range
; 323  : 		//
; 324  : 		////////////////////////////////////////
; 325  : 
; 326  : 		//
; 327  : 		// small steps across the entire range
; 328  : 		//
; 329  : 
; 330  : 		convert_float_to_int (flat_range * ONE_OVER_SMALL_STEP_SIZE, &count);

  000bf	8d 45 fc	 lea	 eax, DWORD PTR _count$[ebp]
  000c2	50		 push	 eax
  000c3	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  000c8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3d4ccccd
  000d0	51		 push	 ecx
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 331  : 
; 332  : 		if (count == 0)

  000db	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  000df	75 07		 jne	 SHORT $LN14@get_terrai

; 333  : 		{
; 334  : 			count = 1;

  000e1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
$LN14@get_terrai:

; 335  : 		}
; 336  : 
; 337  : 		step_ratio = 1.0 / (float) (count + 1);

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000eb	83 c0 01	 add	 eax, 1
  000ee	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000f6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000fe	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00102	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00106	f3 0f 11 45 dc	 movss	 DWORD PTR _step_ratio$[ebp], xmm0

; 338  : 
; 339  : 		ddx = dx * step_ratio;

  0010b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00110	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  00115	f3 0f 11 45 ec	 movss	 DWORD PTR _ddx$[ebp], xmm0

; 340  : 		ddy = dy * step_ratio;

  0011a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  0011f	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  00124	f3 0f 11 45 e8	 movss	 DWORD PTR _ddy$[ebp], xmm0

; 341  : 		ddz = dz * step_ratio;

  00129	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  0012e	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  00133	f3 0f 11 45 e4	 movss	 DWORD PTR _ddz$[ebp], xmm0

; 342  : 
; 343  : 		position = *source_position;

  00138	8b 45 08	 mov	 eax, DWORD PTR _source_position$[ebp]
  0013b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013d	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  00140	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00143	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  00146	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00149	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax
$LN2@get_terrai:

; 344  : 
; 345  : 		while (count--)

  0014c	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0014f	89 45 8c	 mov	 DWORD PTR tv137[ebp], eax
  00152	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  00155	83 e9 01	 sub	 ecx, 1
  00158	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  0015b	83 7d 8c 00	 cmp	 DWORD PTR tv137[ebp], 0
  0015f	0f 84 df 00 00
	00		 je	 $LN3@get_terrai

; 346  : 		{
; 347  : 			position.x += ddx;

  00165	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  0016a	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _ddx$[ebp]
  0016f	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 348  : 			position.y += ddy;

  00174	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  00179	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _ddy$[ebp]
  0017e	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 349  : 			position.z += ddz;

  00183	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  00188	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _ddz$[ebp]
  0018d	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 350  : 
; 351  : 			if (draw_hms_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00192	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hms_terrain_los_markers@@3HA, 0 ; draw_hms_terrain_los_markers
  00199	74 49		 je	 SHORT $LN15@get_terrai
  0019b	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  001a2	75 40		 jne	 SHORT $LN15@get_terrai

; 352  : 			{
; 353  : 				create_rotated_debug_3d_object

  001a4	51		 push	 ecx
  001a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	51		 push	 ecx
  001b3	0f 57 c0	 xorps	 xmm0, xmm0
  001b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bb	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  001c0	51		 push	 ecx
  001c1	0f 57 c0	 xorps	 xmm0, xmm0
  001c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c9	51		 push	 ecx
  001ca	0f 57 c0	 xorps	 xmm0, xmm0
  001cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d2	51		 push	 ecx
  001d3	0f 57 c0	 xorps	 xmm0, xmm0
  001d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001db	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN15@get_terrai:

; 354  : 				(
; 355  : 					&position,
; 356  : 					0.0,
; 357  : 					0.0,
; 358  : 					0.0,
; 359  : 					TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 360  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 361  : 					TERRAIN_LOS_MARKER_SCALE
; 362  : 				);
; 363  : 			}
; 364  : 
; 365  : 			if (point_below_ground (&position))

  001e4	51		 push	 ecx
  001e5	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  001ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ef	51		 push	 ecx
  001f0	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  001f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fa	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  001ff	d9 5d 8c	 fstp	 DWORD PTR tv313[ebp]
  00202	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv313[ebp]
  00207	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  0020b	76 32		 jbe	 SHORT $LN16@get_terrai
  0020d	6a 00		 push	 0
  0020f	51		 push	 ecx
  00210	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  00215	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021a	51		 push	 ecx
  0021b	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  00220	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00225	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0022a	d9 5d 8c	 fstp	 DWORD PTR tv321[ebp]
  0022d	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv321[ebp]
  00232	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  00236	76 07		 jbe	 SHORT $LN16@get_terrai

; 366  : 			{
; 367  : 				return (FALSE);

  00238	33 c0		 xor	 eax, eax
  0023a	e9 ed 03 00 00	 jmp	 $LN1@get_terrai
$LN16@get_terrai:

; 368  : 			}
; 369  : 		}

  0023f	e9 08 ff ff ff	 jmp	 $LN2@get_terrai
$LN3@get_terrai:

; 370  : 	}
; 371  : 	else

  00244	e9 de 03 00 00	 jmp	 $LN9@get_terrai
$LN12@get_terrai:

; 372  : 	{
; 373  : 		////////////////////////////////////////
; 374  : 		//
; 375  : 		// long range
; 376  : 		//
; 377  : 		////////////////////////////////////////
; 378  : 
; 379  : 		//
; 380  : 		// large steps across the entire range
; 381  : 		//
; 382  : 
; 383  : 		convert_float_to_int (flat_range * ONE_OVER_LARGE_STEP_SIZE, &count);

  00249	8d 45 fc	 lea	 eax, DWORD PTR _count$[ebp]
  0024c	50		 push	 eax
  0024d	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  00252	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3ba3d70a
  0025a	51		 push	 ecx
  0025b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00260	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 384  : 
; 385  : 		if (count == 0)

  00265	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  00269	75 07		 jne	 SHORT $LN17@get_terrai

; 386  : 		{
; 387  : 			count = 1;

  0026b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
$LN17@get_terrai:

; 388  : 		}
; 389  : 
; 390  : 		step_ratio = 1.0 / (float) (count + 1);

  00272	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00275	83 c0 01	 add	 eax, 1
  00278	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0027c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00280	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00288	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0028c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00290	f3 0f 11 45 dc	 movss	 DWORD PTR _step_ratio$[ebp], xmm0

; 391  : 
; 392  : 		ddx = dx * step_ratio;

  00295	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0029a	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  0029f	f3 0f 11 45 ec	 movss	 DWORD PTR _ddx$[ebp], xmm0

; 393  : 		ddy = dy * step_ratio;

  002a4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  002a9	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  002ae	f3 0f 11 45 e8	 movss	 DWORD PTR _ddy$[ebp], xmm0

; 394  : 		ddz = dz * step_ratio;

  002b3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  002b8	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  002bd	f3 0f 11 45 e4	 movss	 DWORD PTR _ddz$[ebp], xmm0

; 395  : 
; 396  : 		position = *source_position;

  002c2	8b 45 08	 mov	 eax, DWORD PTR _source_position$[ebp]
  002c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c7	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  002ca	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002cd	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  002d0	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  002d3	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax
$LN4@get_terrai:

; 397  : 
; 398  : 		while (count--)

  002d6	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  002d9	89 45 8c	 mov	 DWORD PTR tv174[ebp], eax
  002dc	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  002df	83 e9 01	 sub	 ecx, 1
  002e2	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  002e5	83 7d 8c 00	 cmp	 DWORD PTR tv174[ebp], 0
  002e9	0f 84 df 00 00
	00		 je	 $LN5@get_terrai

; 399  : 		{
; 400  : 			position.x += ddx;

  002ef	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  002f4	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _ddx$[ebp]
  002f9	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 401  : 			position.y += ddy;

  002fe	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  00303	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _ddy$[ebp]
  00308	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 402  : 			position.z += ddz;

  0030d	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  00312	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _ddz$[ebp]
  00317	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 403  : 
; 404  : 			if (draw_hms_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  0031c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hms_terrain_los_markers@@3HA, 0 ; draw_hms_terrain_los_markers
  00323	74 49		 je	 SHORT $LN18@get_terrai
  00325	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  0032c	75 40		 jne	 SHORT $LN18@get_terrai

; 405  : 			{
; 406  : 				create_rotated_debug_3d_object

  0032e	51		 push	 ecx
  0032f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00337	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033c	51		 push	 ecx
  0033d	0f 57 c0	 xorps	 xmm0, xmm0
  00340	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00345	68 5e 0a 00 00	 push	 2654			; 00000a5eH
  0034a	51		 push	 ecx
  0034b	0f 57 c0	 xorps	 xmm0, xmm0
  0034e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00353	51		 push	 ecx
  00354	0f 57 c0	 xorps	 xmm0, xmm0
  00357	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035c	51		 push	 ecx
  0035d	0f 57 c0	 xorps	 xmm0, xmm0
  00360	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00365	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  00368	50		 push	 eax
  00369	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN18@get_terrai:

; 407  : 				(
; 408  : 					&position,
; 409  : 					0.0,
; 410  : 					0.0,
; 411  : 					0.0,
; 412  : 					TERRAIN_LOS_MARKER_LARGE_STEP_3D_OBJECT,
; 413  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 414  : 					TERRAIN_LOS_MARKER_SCALE
; 415  : 				);
; 416  : 			}
; 417  : 
; 418  : 			if (point_below_ground (&position))

  0036e	51		 push	 ecx
  0036f	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  00374	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00379	51		 push	 ecx
  0037a	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  0037f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00384	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  00389	d9 5d 8c	 fstp	 DWORD PTR tv363[ebp]
  0038c	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv363[ebp]
  00391	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  00395	76 32		 jbe	 SHORT $LN19@get_terrai
  00397	6a 00		 push	 0
  00399	51		 push	 ecx
  0039a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  0039f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a4	51		 push	 ecx
  003a5	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  003aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003af	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  003b4	d9 5d 8c	 fstp	 DWORD PTR tv371[ebp]
  003b7	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv371[ebp]
  003bc	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  003c0	76 07		 jbe	 SHORT $LN19@get_terrai

; 419  : 			{
; 420  : 				return (FALSE);

  003c2	33 c0		 xor	 eax, eax
  003c4	e9 63 02 00 00	 jmp	 $LN1@get_terrai
$LN19@get_terrai:

; 421  : 			}
; 422  : 		}

  003c9	e9 08 ff ff ff	 jmp	 $LN4@get_terrai
$LN5@get_terrai:

; 423  : 
; 424  : 		//
; 425  : 		// small steps across first large step (near source)
; 426  : 		//
; 427  : 
; 428  : 		ddx *= ONE_OVER_NUM_SMALL_STEPS;

  003ce	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ddx$[ebp]
  003d3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  003db	f3 0f 11 45 ec	 movss	 DWORD PTR _ddx$[ebp], xmm0

; 429  : 		ddy *= ONE_OVER_NUM_SMALL_STEPS;

  003e0	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _ddy$[ebp]
  003e5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  003ed	f3 0f 11 45 e8	 movss	 DWORD PTR _ddy$[ebp], xmm0

; 430  : 		ddz *= ONE_OVER_NUM_SMALL_STEPS;

  003f2	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _ddz$[ebp]
  003f7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  003ff	f3 0f 11 45 e4	 movss	 DWORD PTR _ddz$[ebp], xmm0

; 431  : 
; 432  : 		position = *source_position;

  00404	8b 45 08	 mov	 eax, DWORD PTR _source_position$[ebp]
  00407	8b 08		 mov	 ecx, DWORD PTR [eax]
  00409	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  0040c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0040f	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  00412	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00415	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax

; 433  : 
; 434  : 		count = NUM_SMALL_STEPS - 1;

  00418	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR _count$[ebp], 9
$LN6@get_terrai:

; 435  : 
; 436  : 		while (count--)

  0041f	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00422	89 45 8c	 mov	 DWORD PTR tv202[ebp], eax
  00425	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  00428	83 e9 01	 sub	 ecx, 1
  0042b	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  0042e	83 7d 8c 00	 cmp	 DWORD PTR tv202[ebp], 0
  00432	0f 84 df 00 00
	00		 je	 $LN7@get_terrai

; 437  : 		{
; 438  : 			position.x += ddx;

  00438	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  0043d	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _ddx$[ebp]
  00442	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 439  : 			position.y += ddy;

  00447	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  0044c	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _ddy$[ebp]
  00451	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 440  : 			position.z += ddz;

  00456	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  0045b	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _ddz$[ebp]
  00460	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 441  : 
; 442  : 			if (draw_hms_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00465	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hms_terrain_los_markers@@3HA, 0 ; draw_hms_terrain_los_markers
  0046c	74 49		 je	 SHORT $LN20@get_terrai
  0046e	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  00475	75 40		 jne	 SHORT $LN20@get_terrai

; 443  : 			{
; 444  : 				create_rotated_debug_3d_object

  00477	51		 push	 ecx
  00478	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00480	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00485	51		 push	 ecx
  00486	0f 57 c0	 xorps	 xmm0, xmm0
  00489	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048e	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  00493	51		 push	 ecx
  00494	0f 57 c0	 xorps	 xmm0, xmm0
  00497	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049c	51		 push	 ecx
  0049d	0f 57 c0	 xorps	 xmm0, xmm0
  004a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a5	51		 push	 ecx
  004a6	0f 57 c0	 xorps	 xmm0, xmm0
  004a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ae	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  004b1	50		 push	 eax
  004b2	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN20@get_terrai:

; 445  : 				(
; 446  : 					&position,
; 447  : 					0.0,
; 448  : 					0.0,
; 449  : 					0.0,
; 450  : 					TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 451  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 452  : 					TERRAIN_LOS_MARKER_SCALE
; 453  : 				);
; 454  : 			}
; 455  : 
; 456  : 			if (point_below_ground (&position))

  004b7	51		 push	 ecx
  004b8	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  004bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c2	51		 push	 ecx
  004c3	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  004c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004cd	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  004d2	d9 5d 8c	 fstp	 DWORD PTR tv408[ebp]
  004d5	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv408[ebp]
  004da	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  004de	76 32		 jbe	 SHORT $LN21@get_terrai
  004e0	6a 00		 push	 0
  004e2	51		 push	 ecx
  004e3	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  004e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ed	51		 push	 ecx
  004ee	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  004f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f8	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  004fd	d9 5d 8c	 fstp	 DWORD PTR tv416[ebp]
  00500	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv416[ebp]
  00505	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  00509	76 07		 jbe	 SHORT $LN21@get_terrai

; 457  : 			{
; 458  : 				return (FALSE);

  0050b	33 c0		 xor	 eax, eax
  0050d	e9 1a 01 00 00	 jmp	 $LN1@get_terrai
$LN21@get_terrai:

; 459  : 			}
; 460  : 		}

  00512	e9 08 ff ff ff	 jmp	 $LN6@get_terrai
$LN7@get_terrai:

; 461  : 
; 462  : 		//
; 463  : 		// small steps across last large step (near target)
; 464  : 		//
; 465  : 
; 466  : 		position = *target_position;

  00517	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  0051a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051c	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  0051f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00522	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  00525	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00528	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax

; 467  : 
; 468  : 		count = NUM_SMALL_STEPS - 1;

  0052b	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR _count$[ebp], 9
$LN8@get_terrai:

; 469  : 
; 470  : 		while (count--)

  00532	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00535	89 45 8c	 mov	 DWORD PTR tv227[ebp], eax
  00538	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  0053b	83 e9 01	 sub	 ecx, 1
  0053e	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  00541	83 7d 8c 00	 cmp	 DWORD PTR tv227[ebp], 0
  00545	0f 84 dc 00 00
	00		 je	 $LN9@get_terrai

; 471  : 		{
; 472  : 			position.x -= ddx;

  0054b	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  00550	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _ddx$[ebp]
  00555	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 473  : 			position.y -= ddy;

  0055a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  0055f	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _ddy$[ebp]
  00564	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 474  : 			position.z -= ddz;

  00569	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  0056e	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _ddz$[ebp]
  00573	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 475  : 
; 476  : 			if (draw_hms_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00578	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_hms_terrain_los_markers@@3HA, 0 ; draw_hms_terrain_los_markers
  0057f	74 49		 je	 SHORT $LN22@get_terrai
  00581	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  00588	75 40		 jne	 SHORT $LN22@get_terrai

; 477  : 			{
; 478  : 				create_rotated_debug_3d_object

  0058a	51		 push	 ecx
  0058b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00593	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00598	51		 push	 ecx
  00599	0f 57 c0	 xorps	 xmm0, xmm0
  0059c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a1	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  005a6	51		 push	 ecx
  005a7	0f 57 c0	 xorps	 xmm0, xmm0
  005aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005af	51		 push	 ecx
  005b0	0f 57 c0	 xorps	 xmm0, xmm0
  005b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b8	51		 push	 ecx
  005b9	0f 57 c0	 xorps	 xmm0, xmm0
  005bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c1	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  005c4	50		 push	 eax
  005c5	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN22@get_terrai:

; 479  : 				(
; 480  : 					&position,
; 481  : 					0.0,
; 482  : 					0.0,
; 483  : 					0.0,
; 484  : 					TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 485  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 486  : 					TERRAIN_LOS_MARKER_SCALE
; 487  : 				);
; 488  : 			}
; 489  : 
; 490  : 			if (point_below_ground (&position))

  005ca	51		 push	 ecx
  005cb	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  005d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d5	51		 push	 ecx
  005d6	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  005db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e0	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  005e5	d9 5d 8c	 fstp	 DWORD PTR tv450[ebp]
  005e8	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv450[ebp]
  005ed	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  005f1	76 2f		 jbe	 SHORT $LN23@get_terrai
  005f3	6a 00		 push	 0
  005f5	51		 push	 ecx
  005f6	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  005fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00600	51		 push	 ecx
  00601	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  00606	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060b	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00610	d9 5d 8c	 fstp	 DWORD PTR tv458[ebp]
  00613	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv458[ebp]
  00618	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  0061c	76 04		 jbe	 SHORT $LN23@get_terrai

; 491  : 			{
; 492  : 				return (FALSE);

  0061e	33 c0		 xor	 eax, eax
  00620	eb 0a		 jmp	 SHORT $LN1@get_terrai
$LN23@get_terrai:

; 493  : 			}
; 494  : 		}

  00622	e9 0b ff ff ff	 jmp	 $LN8@get_terrai
$LN9@get_terrai:

; 495  : 	}
; 496  : 
; 497  : 	return (TRUE);

  00627	b8 01 00 00 00	 mov	 eax, 1
$LN1@get_terrai:

; 498  : }

  0062c	5f		 pop	 edi
  0062d	5e		 pop	 esi
  0062e	5b		 pop	 ebx
  0062f	8b e5		 mov	 esp, ebp
  00631	5d		 pop	 ebp
  00632	c2 08 00	 ret	 8
?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z ENDP		; get_terrain_los_clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z
_TEXT	SEGMENT
tv84 = -84						; size = 4
_insert$ = -16						; size = 4
_pred$ = -12						; size = 4
_succ$ = -8						; size = 4
_new_$ = -4						; size = 4
_target$ = 8						; size = 4
_locked_target$ = 12					; size = 4
_cos_angular_error$ = 16				; size = 4
_target_position$ = 20					; size = 4
?insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z PROC ; insert_entity_into_hms_target_list, COMDAT

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 193  : 	hms_target
; 194  : 		*new_,
; 195  : 		*succ,
; 196  : 		*pred;
; 197  : 
; 198  : 	int
; 199  : 		insert;
; 200  : 
; 201  : 	ASSERT (target_position);

  00009	83 7d 14 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@insert_ent
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z@4JA
  00014	83 c0 09	 add	 eax, 9
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NENIEICJ@target_position@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@insert_ent:

; 202  : 
; 203  : 	new_ = (hms_target *) malloc_fast_mem (sizeof (hms_target));

  00027	6a 20		 push	 32			; 00000020H
  00029	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0002e	89 45 fc	 mov	 DWORD PTR _new_$[ebp], eax

; 204  : 
; 205  : 	new_->target = target;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00037	89 08		 mov	 DWORD PTR [eax], ecx

; 206  : 	new_->cos_angular_error = cos_angular_error;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  0003c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _cos_angular_error$[ebp]
  00041	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 207  : 	new_->target_position = *target_position;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00049	83 c0 08	 add	 eax, 8
  0004c	8b 4d 14	 mov	 ecx, DWORD PTR _target_position$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	89 10		 mov	 DWORD PTR [eax], edx
  00053	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00056	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00059	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0005c	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 208  : 	new_->locked = FALSE;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00062	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 209  : 
; 210  : 	//
; 211  : 	// sort list in descending order of cos_angular_error
; 212  : 	//
; 213  : 
; 214  : 	succ = hms_target_root;

  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hms_target_root@@3PAUHMS_TARGET@@A
  0006e	89 45 f8	 mov	 DWORD PTR _succ$[ebp], eax

; 215  : 	pred = NULL;

  00071	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pred$[ebp], 0
$LN2@insert_ent:

; 216  : 
; 217  : 	while (TRUE)

  00078	b8 01 00 00 00	 mov	 eax, 1
  0007d	85 c0		 test	 eax, eax
  0007f	0f 84 b6 00 00
	00		 je	 $LN3@insert_ent

; 218  : 	{
; 219  : 		//
; 220  : 		// force the locked target to start of list so that it gets checked first
; 221  : 		//
; 222  : 
; 223  : 		if (target == locked_target)

  00085	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00088	3b 45 0c	 cmp	 eax, DWORD PTR _locked_target$[ebp]
  0008b	75 13		 jne	 SHORT $LN5@insert_ent

; 224  : 		{
; 225  : 			new_->locked = TRUE;

  0008d	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00090	c7 40 14 01 00
	00 00		 mov	 DWORD PTR [eax+20], 1

; 226  : 
; 227  : 			insert = TRUE;

  00097	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _insert$[ebp], 1
  0009e	eb 45		 jmp	 SHORT $LN8@insert_ent
$LN5@insert_ent:

; 228  : 		}
; 229  : 		else if (succ)

  000a0	83 7d f8 00	 cmp	 DWORD PTR _succ$[ebp], 0
  000a4	74 38		 je	 SHORT $LN7@insert_ent

; 230  : 		{
; 231  : 			//
; 232  : 			// force skip over locked target
; 233  : 			//
; 234  : 
; 235  : 			if (succ->locked)

  000a6	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  000a9	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  000ad	74 09		 je	 SHORT $LN9@insert_ent

; 236  : 			{
; 237  : 				insert = FALSE;

  000af	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _insert$[ebp], 0

; 238  : 			}
; 239  : 			else

  000b6	eb 24		 jmp	 SHORT $LN10@insert_ent
$LN9@insert_ent:

; 240  : 			{
; 241  : 				insert = cos_angular_error > succ->cos_angular_error;

  000b8	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  000bb	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _cos_angular_error$[ebp]
  000c0	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  000c4	76 09		 jbe	 SHORT $LN16@insert_ent
  000c6	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv84[ebp], 1
  000cd	eb 07		 jmp	 SHORT $LN17@insert_ent
$LN16@insert_ent:
  000cf	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN17@insert_ent:
  000d6	8b 4d ac	 mov	 ecx, DWORD PTR tv84[ebp]
  000d9	89 4d f0	 mov	 DWORD PTR _insert$[ebp], ecx
$LN10@insert_ent:

; 242  : 			}
; 243  : 		}
; 244  : 		else

  000dc	eb 07		 jmp	 SHORT $LN8@insert_ent
$LN7@insert_ent:

; 245  : 		{
; 246  : 			insert = TRUE;

  000de	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _insert$[ebp], 1
$LN8@insert_ent:

; 247  : 		}
; 248  : 
; 249  : 		if (insert)

  000e5	83 7d f0 00	 cmp	 DWORD PTR _insert$[ebp], 0
  000e9	74 3c		 je	 SHORT $LN11@insert_ent

; 250  : 		{
; 251  : 			new_->succ = succ;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  000ee	8b 4d f8	 mov	 ecx, DWORD PTR _succ$[ebp]
  000f1	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 252  : 			new_->pred = pred;

  000f4	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  000f7	8b 4d f4	 mov	 ecx, DWORD PTR _pred$[ebp]
  000fa	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 253  : 
; 254  : 			if (succ)

  000fd	83 7d f8 00	 cmp	 DWORD PTR _succ$[ebp], 0
  00101	74 09		 je	 SHORT $LN12@insert_ent

; 255  : 			{
; 256  : 				succ->pred = new_;

  00103	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00106	8b 4d fc	 mov	 ecx, DWORD PTR _new_$[ebp]
  00109	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN12@insert_ent:

; 257  : 			}
; 258  : 
; 259  : 			if (pred)

  0010c	83 7d f4 00	 cmp	 DWORD PTR _pred$[ebp], 0
  00110	74 0b		 je	 SHORT $LN13@insert_ent

; 260  : 			{
; 261  : 				pred->succ = new_;

  00112	8b 45 f4	 mov	 eax, DWORD PTR _pred$[ebp]
  00115	8b 4d fc	 mov	 ecx, DWORD PTR _new_$[ebp]
  00118	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 262  : 			}
; 263  : 			else

  0011b	eb 08		 jmp	 SHORT $LN14@insert_ent
$LN13@insert_ent:

; 264  : 			{
; 265  : 				hms_target_root = new_;

  0011d	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00120	a3 00 00 00 00	 mov	 DWORD PTR ?hms_target_root@@3PAUHMS_TARGET@@A, eax
$LN14@insert_ent:

; 266  : 			}
; 267  : 
; 268  : 			break;

  00125	eb 14		 jmp	 SHORT $LN3@insert_ent
$LN11@insert_ent:

; 269  : 		}
; 270  : 
; 271  : 		pred = succ;

  00127	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  0012a	89 45 f4	 mov	 DWORD PTR _pred$[ebp], eax

; 272  : 
; 273  : 		succ = succ->succ;

  0012d	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00130	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00133	89 4d f8	 mov	 DWORD PTR _succ$[ebp], ecx

; 274  : 	}

  00136	e9 3d ff ff ff	 jmp	 $LN2@insert_ent
$LN3@insert_ent:

; 275  : }

  0013b	5f		 pop	 edi
  0013c	5e		 pop	 esi
  0013d	5b		 pop	 ebx
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c2 10 00	 ret	 16			; 00000010H
?insert_entity_into_hms_target_list@@YGXPAUENTITY@@0MPAUVEC3D@@@Z ENDP ; insert_entity_into_hms_target_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?deinitialise_hms_target_list@@YGXXZ
_TEXT	SEGMENT
_succ$ = -8						; size = 4
_this_hms_target$ = -4					; size = 4
?deinitialise_hms_target_list@@YGXXZ PROC		; deinitialise_hms_target_list, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 169  : 	hms_target
; 170  : 		*this_hms_target,
; 171  : 		*succ;
; 172  : 
; 173  : 	this_hms_target = hms_target_root;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hms_target_root@@3PAUHMS_TARGET@@A
  0000e	89 45 fc	 mov	 DWORD PTR _this_hms_target$[ebp], eax
$LN2@deinitiali:

; 174  : 
; 175  : 	while (this_hms_target)

  00011	83 7d fc 00	 cmp	 DWORD PTR _this_hms_target$[ebp], 0
  00015	74 1a		 je	 SHORT $LN3@deinitiali

; 176  : 	{
; 177  : 		succ = this_hms_target->succ;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this_hms_target$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	89 4d f8	 mov	 DWORD PTR _succ$[ebp], ecx

; 178  : 
; 179  : 		free_mem (this_hms_target);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this_hms_target$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 180  : 
; 181  : 		this_hms_target = succ;

  00029	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  0002c	89 45 fc	 mov	 DWORD PTR _this_hms_target$[ebp], eax

; 182  : 	}

  0002f	eb e0		 jmp	 SHORT $LN2@deinitiali
$LN3@deinitiali:

; 183  : 
; 184  : 	hms_target_root = NULL;

  00031	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_root@@3PAUHMS_TARGET@@A, 0

; 185  : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?deinitialise_hms_target_list@@YGXXZ ENDP		; deinitialise_hms_target_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?initialise_hms_target_list@@YGXXZ
_TEXT	SEGMENT
?initialise_hms_target_list@@YGXXZ PROC			; initialise_hms_target_list, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 160  : 	hms_target_root = NULL;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_root@@3PAUHMS_TARGET@@A, 0

; 161  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?initialise_hms_target_list@@YGXXZ ENDP			; initialise_hms_target_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?select_previous_designated_hms_target@@YGXXZ
_TEXT	SEGMENT
tv176 = -84						; size = 4
tv152 = -84						; size = 4
tv131 = -84						; size = 4
tv80 = -84						; size = 4
tv168 = -80						; size = 4
tv144 = -80						; size = 4
tv92 = -80						; size = 4
tv72 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_previous_designated_hms_target@@YGXXZ PROC	; select_previous_designated_hms_target, COMDAT

; 1172 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1173 : 	entity
; 1174 : 		*target,
; 1175 : 		*new__target,
; 1176 : 		*current_target;
; 1177 : 
; 1178 : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1179 : 
; 1180 : 	hms_target_locked = FALSE;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked

; 1181 : 
; 1182 : 	if (get_hms_valid ())

  0001a	e8 00 00 00 00	 call	 ?get_hms_valid@@YGHXZ	; get_hms_valid
  0001f	85 c0		 test	 eax, eax
  00021	0f 84 77 02 00
	00		 je	 $LN6@select_pre

; 1183 : 	{
; 1184 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0002e	74 0c		 je	 SHORT $LN16@select_pre
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b0	 mov	 DWORD PTR tv72[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN17@select_pre
$LN16@select_pre:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA
  00042	83 c2 0c	 add	 edx, 12			; 0000000cH
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN17@select_pre:
  0005d	b9 01 00 00 00	 mov	 ecx, 1
  00062	85 c9		 test	 ecx, ecx
  00064	74 09		 je	 SHORT $LN18@select_pre
  00066	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv80[ebp], 38	; 00000026H
  0006d	eb 21		 jmp	 SHORT $LN19@select_pre
$LN18@select_pre:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA
  00075	83 c2 0c	 add	 edx, 12			; 0000000cH
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN19@select_pre:
  00090	6a 26		 push	 38			; 00000026H
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00098	51		 push	 ecx
  00099	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv72[ebp], 180
  000a0	8b 45 ac	 mov	 eax, DWORD PTR tv80[ebp]
  000a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000aa	ff d1		 call	 ecx
  000ac	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 1185 : 
; 1186 : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  000af	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 7d		 je	 SHORT $LN9@select_pre
  000b5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b9	74 0a		 je	 SHORT $LN20@select_pre
  000bb	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	89 4d b0	 mov	 DWORD PTR tv92[ebp], ecx
  000c3	eb 1d		 jmp	 SHORT $LN21@select_pre
$LN20@select_pre:
  000c5	68 a2 04 00 00	 push	 1186			; 000004a2H
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN21@select_pre:
  000e2	b8 01 00 00 00	 mov	 eax, 1
  000e7	85 c0		 test	 eax, eax
  000e9	74 09		 je	 SHORT $LN22@select_pre
  000eb	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv131[ebp], 10 ; 0000000aH
  000f2	eb 1d		 jmp	 SHORT $LN23@select_pre
$LN22@select_pre:
  000f4	68 a2 04 00 00	 push	 1186			; 000004a2H
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00104	51		 push	 ecx
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN23@select_pre:
  00111	6a 0a		 push	 10			; 0000000aH
  00113	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  00116	52		 push	 edx
  00117	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv92[ebp], 180
  0011e	8b 4d ac	 mov	 ecx, DWORD PTR tv131[ebp]
  00121	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00128	ff d2		 call	 edx
  0012a	85 c0		 test	 eax, eax
  0012c	0f 85 31 01 00
	00		 jne	 $LN7@select_pre
$LN9@select_pre:

; 1187 : 		{
; 1188 : 			//
; 1189 : 			// no current target or current target has been removed from the gunship target list
; 1190 : 			//
; 1191 : 
; 1192 : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  00132	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00139	74 0c		 je	 SHORT $LN24@select_pre
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00140	8b 08		 mov	 ecx, DWORD PTR [eax]
  00142	89 4d b0	 mov	 DWORD PTR tv144[ebp], ecx
  00145	eb 21		 jmp	 SHORT $LN25@select_pre
$LN24@select_pre:
  00147	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA
  0014d	83 c2 14	 add	 edx, 20			; 00000014H
  00150	52		 push	 edx
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00161	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN25@select_pre:
  00168	b9 01 00 00 00	 mov	 ecx, 1
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 09		 je	 SHORT $LN26@select_pre
  00171	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv152[ebp], 10 ; 0000000aH
  00178	eb 21		 jmp	 SHORT $LN27@select_pre
$LN26@select_pre:
  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA
  00180	83 c2 14	 add	 edx, 20			; 00000014H
  00183	52		 push	 edx
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00194	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN27@select_pre:
  0019b	6a 0a		 push	 10			; 0000000aH
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001a3	51		 push	 ecx
  001a4	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv144[ebp], 180
  001ab	8b 45 ac	 mov	 eax, DWORD PTR tv152[ebp]
  001ae	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001b5	ff d1		 call	 ecx
  001b7	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_pre:

; 1193 : 
; 1194 : 			while (target)

  001ba	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001be	0f 84 9d 00 00
	00		 je	 $LN3@select_pre

; 1195 : 			{
; 1196 : 				if (get_selectable_hms_target (target))

  001c4	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  001cd	85 c0		 test	 eax, eax
  001cf	74 0b		 je	 SHORT $LN10@select_pre

; 1197 : 				{
; 1198 : 					new__target = target;

  001d1	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001d4	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1199 : 
; 1200 : 					break;

  001d7	e9 85 00 00 00	 jmp	 $LN3@select_pre
$LN10@select_pre:

; 1201 : 				}
; 1202 : 
; 1203 : 				target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001dc	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001e0	74 0a		 je	 SHORT $LN28@select_pre
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e7	89 4d b0	 mov	 DWORD PTR tv168[ebp], ecx
  001ea	eb 21		 jmp	 SHORT $LN29@select_pre
$LN28@select_pre:
  001ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA
  001f2	83 c2 1f	 add	 edx, 31			; 0000001fH
  001f5	52		 push	 edx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00206	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN29@select_pre:
  0020d	b9 01 00 00 00	 mov	 ecx, 1
  00212	85 c9		 test	 ecx, ecx
  00214	74 09		 je	 SHORT $LN30@select_pre
  00216	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv176[ebp], 10 ; 0000000aH
  0021d	eb 21		 jmp	 SHORT $LN31@select_pre
$LN30@select_pre:
  0021f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_hms_target@@YGXXZ@4JA
  00225	83 c2 1f	 add	 edx, 31			; 0000001fH
  00228	52		 push	 edx
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN31@select_pre:
  00240	6a 0a		 push	 10			; 0000000aH
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  00245	51		 push	 ecx
  00246	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv168[ebp], 180
  0024d	8b 45 ac	 mov	 eax, DWORD PTR tv176[ebp]
  00250	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00257	ff d1		 call	 ecx
  00259	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1204 : 			}

  0025c	e9 59 ff ff ff	 jmp	 $LN2@select_pre
$LN3@select_pre:

; 1205 : 		}
; 1206 : 		else

  00261	eb 3b		 jmp	 SHORT $LN6@select_pre
$LN7@select_pre:

; 1207 : 		{
; 1208 : 			target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  00263	6a 0a		 push	 10			; 0000000aH
  00265	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  0026e	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_pre:

; 1209 : 
; 1210 : 			while (target != current_target)

  00271	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00274	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00277	74 25		 je	 SHORT $LN6@select_pre

; 1211 : 			{
; 1212 : 				if (get_selectable_hms_target (target))

  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  00282	85 c0		 test	 eax, eax
  00284	74 08		 je	 SHORT $LN11@select_pre

; 1213 : 				{
; 1214 : 					new__target = target;

  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1215 : 
; 1216 : 					break;

  0028c	eb 10		 jmp	 SHORT $LN6@select_pre
$LN11@select_pre:

; 1217 : 				}
; 1218 : 
; 1219 : 				target = get_local_entity_child_pred_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  0028e	6a 0a		 push	 10			; 0000000aH
  00290	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00299	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1220 : 			}

  0029c	eb d3		 jmp	 SHORT $LN4@select_pre
$LN6@select_pre:

; 1221 : 		}
; 1222 : 	}
; 1223 : 
; 1224 : 	set_gunship_target (new__target);

  0029e	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 1225 : 
; 1226 : 	if (new__target)

  002a7	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  002ab	74 2e		 je	 SHORT $LN1@select_pre

; 1227 : 	{
; 1228 : 		hms_target_locked = TRUE;

  002ad	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 1 ; hms_target_locked

; 1229 : 
; 1230 : 		get_pilot_head_heading_and_pitch_to_target (new__target);

  002b7	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?get_pilot_head_heading_and_pitch_to_target@@YGXPAUENTITY@@@Z ; get_pilot_head_heading_and_pitch_to_target

; 1231 : 
; 1232 : 		if (in_cockpit)

  002c0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  002c7	74 12		 je	 SHORT $LN1@select_pre

; 1233 : 		{
; 1234 : 			if (set_view_mode (VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET))

  002c9	6a 22		 push	 34			; 00000022H
  002cb	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode
  002d0	85 c0		 test	 eax, eax
  002d2	74 07		 je	 SHORT $LN1@select_pre

; 1235 : 			{
; 1236 : 				set_common_target_acquisition_system_lock_target (TRUE);

  002d4	6a 01		 push	 1
  002d6	e8 00 00 00 00	 call	 ?set_common_target_acquisition_system_lock_target@@YGXH@Z ; set_common_target_acquisition_system_lock_target
$LN1@select_pre:

; 1237 : 			}
; 1238 : 		}
; 1239 : 	}
; 1240 : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c3		 ret	 0
?select_previous_designated_hms_target@@YGXXZ ENDP	; select_previous_designated_hms_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?select_next_designated_hms_target@@YGXXZ
_TEXT	SEGMENT
tv176 = -84						; size = 4
tv152 = -84						; size = 4
tv131 = -84						; size = 4
tv80 = -84						; size = 4
tv168 = -80						; size = 4
tv144 = -80						; size = 4
tv92 = -80						; size = 4
tv72 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_next_designated_hms_target@@YGXXZ PROC		; select_next_designated_hms_target, COMDAT

; 1097 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1098 : 	entity
; 1099 : 		*target,
; 1100 : 		*new__target,
; 1101 : 		*current_target;
; 1102 : 
; 1103 : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1104 : 
; 1105 : 	hms_target_locked = FALSE;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked

; 1106 : 
; 1107 : 	if (get_hms_valid ())

  0001a	e8 00 00 00 00	 call	 ?get_hms_valid@@YGHXZ	; get_hms_valid
  0001f	85 c0		 test	 eax, eax
  00021	0f 84 77 02 00
	00		 je	 $LN6@select_nex

; 1108 : 	{
; 1109 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0002e	74 0c		 je	 SHORT $LN16@select_nex
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b0	 mov	 DWORD PTR tv72[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN17@select_nex
$LN16@select_nex:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA
  00042	83 c2 0c	 add	 edx, 12			; 0000000cH
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN17@select_nex:
  0005d	b9 01 00 00 00	 mov	 ecx, 1
  00062	85 c9		 test	 ecx, ecx
  00064	74 09		 je	 SHORT $LN18@select_nex
  00066	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv80[ebp], 38	; 00000026H
  0006d	eb 21		 jmp	 SHORT $LN19@select_nex
$LN18@select_nex:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA
  00075	83 c2 0c	 add	 edx, 12			; 0000000cH
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN19@select_nex:
  00090	6a 26		 push	 38			; 00000026H
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00098	51		 push	 ecx
  00099	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv72[ebp], 180
  000a0	8b 45 ac	 mov	 eax, DWORD PTR tv80[ebp]
  000a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000aa	ff d1		 call	 ecx
  000ac	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 1110 : 
; 1111 : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  000af	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 7d		 je	 SHORT $LN9@select_nex
  000b5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b9	74 0a		 je	 SHORT $LN20@select_nex
  000bb	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	89 4d b0	 mov	 DWORD PTR tv92[ebp], ecx
  000c3	eb 1d		 jmp	 SHORT $LN21@select_nex
$LN20@select_nex:
  000c5	68 57 04 00 00	 push	 1111			; 00000457H
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN21@select_nex:
  000e2	b8 01 00 00 00	 mov	 eax, 1
  000e7	85 c0		 test	 eax, eax
  000e9	74 09		 je	 SHORT $LN22@select_nex
  000eb	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv131[ebp], 10 ; 0000000aH
  000f2	eb 1d		 jmp	 SHORT $LN23@select_nex
$LN22@select_nex:
  000f4	68 57 04 00 00	 push	 1111			; 00000457H
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00104	51		 push	 ecx
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN23@select_nex:
  00111	6a 0a		 push	 10			; 0000000aH
  00113	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  00116	52		 push	 edx
  00117	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv92[ebp], 180
  0011e	8b 4d ac	 mov	 ecx, DWORD PTR tv131[ebp]
  00121	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00128	ff d2		 call	 edx
  0012a	85 c0		 test	 eax, eax
  0012c	0f 85 31 01 00
	00		 jne	 $LN7@select_nex
$LN9@select_nex:

; 1112 : 		{
; 1113 : 			//
; 1114 : 			// no current target or current target has been removed from the gunship target list
; 1115 : 			//
; 1116 : 
; 1117 : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  00132	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00139	74 0c		 je	 SHORT $LN24@select_nex
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00140	8b 08		 mov	 ecx, DWORD PTR [eax]
  00142	89 4d b0	 mov	 DWORD PTR tv144[ebp], ecx
  00145	eb 21		 jmp	 SHORT $LN25@select_nex
$LN24@select_nex:
  00147	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA
  0014d	83 c2 14	 add	 edx, 20			; 00000014H
  00150	52		 push	 edx
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00161	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN25@select_nex:
  00168	b9 01 00 00 00	 mov	 ecx, 1
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 09		 je	 SHORT $LN26@select_nex
  00171	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv152[ebp], 10 ; 0000000aH
  00178	eb 21		 jmp	 SHORT $LN27@select_nex
$LN26@select_nex:
  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA
  00180	83 c2 14	 add	 edx, 20			; 00000014H
  00183	52		 push	 edx
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00194	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN27@select_nex:
  0019b	6a 0a		 push	 10			; 0000000aH
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001a3	51		 push	 ecx
  001a4	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv144[ebp], 180
  001ab	8b 45 ac	 mov	 eax, DWORD PTR tv152[ebp]
  001ae	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001b5	ff d1		 call	 ecx
  001b7	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_nex:

; 1118 : 
; 1119 : 			while (target)

  001ba	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001be	0f 84 9d 00 00
	00		 je	 $LN3@select_nex

; 1120 : 			{
; 1121 : 				if (get_selectable_hms_target (target))

  001c4	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  001cd	85 c0		 test	 eax, eax
  001cf	74 0b		 je	 SHORT $LN10@select_nex

; 1122 : 				{
; 1123 : 					new__target = target;

  001d1	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001d4	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1124 : 
; 1125 : 					break;

  001d7	e9 85 00 00 00	 jmp	 $LN3@select_nex
$LN10@select_nex:

; 1126 : 				}
; 1127 : 
; 1128 : 				target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001dc	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001e0	74 0a		 je	 SHORT $LN28@select_nex
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e7	89 4d b0	 mov	 DWORD PTR tv168[ebp], ecx
  001ea	eb 21		 jmp	 SHORT $LN29@select_nex
$LN28@select_nex:
  001ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA
  001f2	83 c2 1f	 add	 edx, 31			; 0000001fH
  001f5	52		 push	 edx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00206	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN29@select_nex:
  0020d	b9 01 00 00 00	 mov	 ecx, 1
  00212	85 c9		 test	 ecx, ecx
  00214	74 09		 je	 SHORT $LN30@select_nex
  00216	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv176[ebp], 10 ; 0000000aH
  0021d	eb 21		 jmp	 SHORT $LN31@select_nex
$LN30@select_nex:
  0021f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_hms_target@@YGXXZ@4JA
  00225	83 c2 1f	 add	 edx, 31			; 0000001fH
  00228	52		 push	 edx
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN31@select_nex:
  00240	6a 0a		 push	 10			; 0000000aH
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  00245	51		 push	 ecx
  00246	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv168[ebp], 180
  0024d	8b 45 ac	 mov	 eax, DWORD PTR tv176[ebp]
  00250	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00257	ff d1		 call	 ecx
  00259	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1129 : 			}

  0025c	e9 59 ff ff ff	 jmp	 $LN2@select_nex
$LN3@select_nex:

; 1130 : 		}
; 1131 : 		else

  00261	eb 3b		 jmp	 SHORT $LN6@select_nex
$LN7@select_nex:

; 1132 : 		{
; 1133 : 			target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  00263	6a 0a		 push	 10			; 0000000aH
  00265	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  0026e	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_nex:

; 1134 : 
; 1135 : 			while (target != current_target)

  00271	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00274	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00277	74 25		 je	 SHORT $LN6@select_nex

; 1136 : 			{
; 1137 : 				if (get_selectable_hms_target (target))

  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  00282	85 c0		 test	 eax, eax
  00284	74 08		 je	 SHORT $LN11@select_nex

; 1138 : 				{
; 1139 : 					new__target = target;

  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1140 : 
; 1141 : 					break;

  0028c	eb 10		 jmp	 SHORT $LN6@select_nex
$LN11@select_nex:

; 1142 : 				}
; 1143 : 
; 1144 : 				target = get_local_entity_child_succ_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  0028e	6a 0a		 push	 10			; 0000000aH
  00290	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00299	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1145 : 			}

  0029c	eb d3		 jmp	 SHORT $LN4@select_nex
$LN6@select_nex:

; 1146 : 		}
; 1147 : 	}
; 1148 : 
; 1149 : 	set_gunship_target (new__target);

  0029e	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 1150 : 
; 1151 : 	if (new__target)

  002a7	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  002ab	74 2e		 je	 SHORT $LN1@select_nex

; 1152 : 	{
; 1153 : 		hms_target_locked = TRUE;

  002ad	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 1 ; hms_target_locked

; 1154 : 
; 1155 : 		get_pilot_head_heading_and_pitch_to_target (new__target);

  002b7	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?get_pilot_head_heading_and_pitch_to_target@@YGXPAUENTITY@@@Z ; get_pilot_head_heading_and_pitch_to_target

; 1156 : 
; 1157 : 		if (in_cockpit)

  002c0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  002c7	74 12		 je	 SHORT $LN1@select_nex

; 1158 : 		{
; 1159 : 			if (set_view_mode (VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET))

  002c9	6a 22		 push	 34			; 00000022H
  002cb	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode
  002d0	85 c0		 test	 eax, eax
  002d2	74 07		 je	 SHORT $LN1@select_nex

; 1160 : 			{
; 1161 : 				set_common_target_acquisition_system_lock_target (TRUE);

  002d4	6a 01		 push	 1
  002d6	e8 00 00 00 00	 call	 ?set_common_target_acquisition_system_lock_target@@YGXH@Z ; set_common_target_acquisition_system_lock_target
$LN1@select_nex:

; 1162 : 			}
; 1163 : 		}
; 1164 : 	}
; 1165 : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c3		 ret	 0
?select_next_designated_hms_target@@YGXXZ ENDP		; select_next_designated_hms_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?select_previous_hms_target@@YGXXZ
_TEXT	SEGMENT
tv176 = -84						; size = 4
tv152 = -84						; size = 4
tv131 = -84						; size = 4
tv80 = -84						; size = 4
tv168 = -80						; size = 4
tv144 = -80						; size = 4
tv92 = -80						; size = 4
tv72 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_previous_hms_target@@YGXXZ PROC			; select_previous_hms_target, COMDAT

; 1020 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1021 : 	entity
; 1022 : 		*target,
; 1023 : 		*new__target,
; 1024 : 		*current_target;
; 1025 : 
; 1026 : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 1027 : 
; 1028 : 	hms_target_locked = FALSE;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked

; 1029 : 
; 1030 : 	if (get_hms_valid ())

  0001a	e8 00 00 00 00	 call	 ?get_hms_valid@@YGHXZ	; get_hms_valid
  0001f	85 c0		 test	 eax, eax
  00021	0f 84 77 02 00
	00		 je	 $LN6@select_pre

; 1031 : 	{
; 1032 : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0002e	74 0c		 je	 SHORT $LN16@select_pre
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b0	 mov	 DWORD PTR tv72[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN17@select_pre
$LN16@select_pre:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA
  00042	83 c2 0c	 add	 edx, 12			; 0000000cH
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN17@select_pre:
  0005d	b9 01 00 00 00	 mov	 ecx, 1
  00062	85 c9		 test	 ecx, ecx
  00064	74 09		 je	 SHORT $LN18@select_pre
  00066	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv80[ebp], 38	; 00000026H
  0006d	eb 21		 jmp	 SHORT $LN19@select_pre
$LN18@select_pre:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA
  00075	83 c2 0c	 add	 edx, 12			; 0000000cH
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN19@select_pre:
  00090	6a 26		 push	 38			; 00000026H
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00098	51		 push	 ecx
  00099	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv72[ebp], 180
  000a0	8b 45 ac	 mov	 eax, DWORD PTR tv80[ebp]
  000a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000aa	ff d1		 call	 ecx
  000ac	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 1033 : 
; 1034 : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET) == NULL))

  000af	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 7d		 je	 SHORT $LN9@select_pre
  000b5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b9	74 0a		 je	 SHORT $LN20@select_pre
  000bb	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	89 4d b0	 mov	 DWORD PTR tv92[ebp], ecx
  000c3	eb 1d		 jmp	 SHORT $LN21@select_pre
$LN20@select_pre:
  000c5	68 0a 04 00 00	 push	 1034			; 0000040aH
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN21@select_pre:
  000e2	b8 01 00 00 00	 mov	 eax, 1
  000e7	85 c0		 test	 eax, eax
  000e9	74 09		 je	 SHORT $LN22@select_pre
  000eb	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv131[ebp], 18 ; 00000012H
  000f2	eb 1d		 jmp	 SHORT $LN23@select_pre
$LN22@select_pre:
  000f4	68 0a 04 00 00	 push	 1034			; 0000040aH
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00104	51		 push	 ecx
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN23@select_pre:
  00111	6a 12		 push	 18			; 00000012H
  00113	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  00116	52		 push	 edx
  00117	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv92[ebp], 180
  0011e	8b 4d ac	 mov	 ecx, DWORD PTR tv131[ebp]
  00121	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00128	ff d2		 call	 edx
  0012a	85 c0		 test	 eax, eax
  0012c	0f 85 31 01 00
	00		 jne	 $LN7@select_pre
$LN9@select_pre:

; 1035 : 		{
; 1036 : 			//
; 1037 : 			// no current target or current target has been removed from the gunship target list
; 1038 : 			//
; 1039 : 
; 1040 : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_GUNSHIP_TARGET);

  00132	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00139	74 0c		 je	 SHORT $LN24@select_pre
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00140	8b 08		 mov	 ecx, DWORD PTR [eax]
  00142	89 4d b0	 mov	 DWORD PTR tv144[ebp], ecx
  00145	eb 21		 jmp	 SHORT $LN25@select_pre
$LN24@select_pre:
  00147	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA
  0014d	83 c2 14	 add	 edx, 20			; 00000014H
  00150	52		 push	 edx
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00161	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN25@select_pre:
  00168	b9 01 00 00 00	 mov	 ecx, 1
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 09		 je	 SHORT $LN26@select_pre
  00171	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv152[ebp], 18 ; 00000012H
  00178	eb 21		 jmp	 SHORT $LN27@select_pre
$LN26@select_pre:
  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA
  00180	83 c2 14	 add	 edx, 20			; 00000014H
  00183	52		 push	 edx
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00194	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN27@select_pre:
  0019b	6a 12		 push	 18			; 00000012H
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001a3	51		 push	 ecx
  001a4	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv144[ebp], 180
  001ab	8b 45 ac	 mov	 eax, DWORD PTR tv152[ebp]
  001ae	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001b5	ff d1		 call	 ecx
  001b7	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_pre:

; 1041 : 
; 1042 : 			while (target)

  001ba	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001be	0f 84 9d 00 00
	00		 je	 $LN3@select_pre

; 1043 : 			{
; 1044 : 				if (get_selectable_hms_target (target))

  001c4	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  001cd	85 c0		 test	 eax, eax
  001cf	74 0b		 je	 SHORT $LN10@select_pre

; 1045 : 				{
; 1046 : 					new__target = target;

  001d1	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001d4	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1047 : 
; 1048 : 					break;

  001d7	e9 85 00 00 00	 jmp	 $LN3@select_pre
$LN10@select_pre:

; 1049 : 				}
; 1050 : 
; 1051 : 				target = get_local_entity_child_succ (target, LIST_TYPE_GUNSHIP_TARGET);

  001dc	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001e0	74 0a		 je	 SHORT $LN28@select_pre
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e7	89 4d b0	 mov	 DWORD PTR tv168[ebp], ecx
  001ea	eb 21		 jmp	 SHORT $LN29@select_pre
$LN28@select_pre:
  001ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA
  001f2	83 c2 1f	 add	 edx, 31			; 0000001fH
  001f5	52		 push	 edx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00206	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN29@select_pre:
  0020d	b9 01 00 00 00	 mov	 ecx, 1
  00212	85 c9		 test	 ecx, ecx
  00214	74 09		 je	 SHORT $LN30@select_pre
  00216	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv176[ebp], 18 ; 00000012H
  0021d	eb 21		 jmp	 SHORT $LN31@select_pre
$LN30@select_pre:
  0021f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_hms_target@@YGXXZ@4JA
  00225	83 c2 1f	 add	 edx, 31			; 0000001fH
  00228	52		 push	 edx
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN31@select_pre:
  00240	6a 12		 push	 18			; 00000012H
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  00245	51		 push	 ecx
  00246	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv168[ebp], 180
  0024d	8b 45 ac	 mov	 eax, DWORD PTR tv176[ebp]
  00250	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00257	ff d1		 call	 ecx
  00259	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1052 : 			}

  0025c	e9 59 ff ff ff	 jmp	 $LN2@select_pre
$LN3@select_pre:

; 1053 : 		}
; 1054 : 		else

  00261	eb 3b		 jmp	 SHORT $LN6@select_pre
$LN7@select_pre:

; 1055 : 		{
; 1056 : 			target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00263	6a 12		 push	 18			; 00000012H
  00265	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  0026e	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_pre:

; 1057 : 
; 1058 : 			while (target != current_target)

  00271	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00274	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00277	74 25		 je	 SHORT $LN6@select_pre

; 1059 : 			{
; 1060 : 				if (get_selectable_hms_target (target))

  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  00282	85 c0		 test	 eax, eax
  00284	74 08		 je	 SHORT $LN11@select_pre

; 1061 : 				{
; 1062 : 					new__target = target;

  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 1063 : 
; 1064 : 					break;

  0028c	eb 10		 jmp	 SHORT $LN6@select_pre
$LN11@select_pre:

; 1065 : 				}
; 1066 : 
; 1067 : 				target = get_local_entity_child_pred_circular (target, LIST_TYPE_GUNSHIP_TARGET);

  0028e	6a 12		 push	 18			; 00000012H
  00290	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00299	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1068 : 			}

  0029c	eb d3		 jmp	 SHORT $LN4@select_pre
$LN6@select_pre:

; 1069 : 		}
; 1070 : 	}
; 1071 : 
; 1072 : 	set_gunship_target (new__target);

  0029e	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 1073 : 
; 1074 : 	if (new__target)

  002a7	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  002ab	74 2e		 je	 SHORT $LN1@select_pre

; 1075 : 	{
; 1076 : 		hms_target_locked = TRUE;

  002ad	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 1 ; hms_target_locked

; 1077 : 
; 1078 : 		get_pilot_head_heading_and_pitch_to_target (new__target);

  002b7	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?get_pilot_head_heading_and_pitch_to_target@@YGXPAUENTITY@@@Z ; get_pilot_head_heading_and_pitch_to_target

; 1079 : 
; 1080 : 		if (in_cockpit)

  002c0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  002c7	74 12		 je	 SHORT $LN1@select_pre

; 1081 : 		{
; 1082 : 			if (set_view_mode (VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET))

  002c9	6a 22		 push	 34			; 00000022H
  002cb	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode
  002d0	85 c0		 test	 eax, eax
  002d2	74 07		 je	 SHORT $LN1@select_pre

; 1083 : 			{
; 1084 : 				set_common_target_acquisition_system_lock_target (TRUE);

  002d4	6a 01		 push	 1
  002d6	e8 00 00 00 00	 call	 ?set_common_target_acquisition_system_lock_target@@YGXH@Z ; set_common_target_acquisition_system_lock_target
$LN1@select_pre:

; 1085 : 			}
; 1086 : 		}
; 1087 : 	}
; 1088 : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c3		 ret	 0
?select_previous_hms_target@@YGXXZ ENDP			; select_previous_hms_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?select_next_hms_target@@YGXXZ
_TEXT	SEGMENT
tv176 = -84						; size = 4
tv152 = -84						; size = 4
tv131 = -84						; size = 4
tv80 = -84						; size = 4
tv168 = -80						; size = 4
tv144 = -80						; size = 4
tv92 = -80						; size = 4
tv72 = -80						; size = 4
_current_target$ = -12					; size = 4
_new__target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_next_hms_target@@YGXXZ PROC			; select_next_hms_target, COMDAT

; 945  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 946  : 	entity
; 947  : 		*target,
; 948  : 		*new__target,
; 949  : 		*current_target;
; 950  : 
; 951  : 	new__target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new__target$[ebp], 0

; 952  : 
; 953  : 	hms_target_locked = FALSE;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked

; 954  : 
; 955  : 	if (get_hms_valid ())

  0001a	e8 00 00 00 00	 call	 ?get_hms_valid@@YGHXZ	; get_hms_valid
  0001f	85 c0		 test	 eax, eax
  00021	0f 84 77 02 00
	00		 je	 $LN6@select_nex

; 956  : 	{
; 957  : 		current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0002e	74 0c		 je	 SHORT $LN16@select_nex
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b0	 mov	 DWORD PTR tv72[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN17@select_nex
$LN16@select_nex:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA
  00042	83 c2 0c	 add	 edx, 12			; 0000000cH
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN17@select_nex:
  0005d	b9 01 00 00 00	 mov	 ecx, 1
  00062	85 c9		 test	 ecx, ecx
  00064	74 09		 je	 SHORT $LN18@select_nex
  00066	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv80[ebp], 38	; 00000026H
  0006d	eb 21		 jmp	 SHORT $LN19@select_nex
$LN18@select_nex:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA
  00075	83 c2 0c	 add	 edx, 12			; 0000000cH
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN19@select_nex:
  00090	6a 26		 push	 38			; 00000026H
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00098	51		 push	 ecx
  00099	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv72[ebp], 180
  000a0	8b 45 ac	 mov	 eax, DWORD PTR tv80[ebp]
  000a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000aa	ff d1		 call	 ecx
  000ac	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 958  : 
; 959  : 		if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET) == NULL))

  000af	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 7d		 je	 SHORT $LN9@select_nex
  000b5	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b9	74 0a		 je	 SHORT $LN20@select_nex
  000bb	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	89 4d b0	 mov	 DWORD PTR tv92[ebp], ecx
  000c3	eb 1d		 jmp	 SHORT $LN21@select_nex
$LN20@select_nex:
  000c5	68 bf 03 00 00	 push	 959			; 000003bfH
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN21@select_nex:
  000e2	b8 01 00 00 00	 mov	 eax, 1
  000e7	85 c0		 test	 eax, eax
  000e9	74 09		 je	 SHORT $LN22@select_nex
  000eb	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv131[ebp], 18 ; 00000012H
  000f2	eb 1d		 jmp	 SHORT $LN23@select_nex
$LN22@select_nex:
  000f4	68 bf 03 00 00	 push	 959			; 000003bfH
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00104	51		 push	 ecx
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN23@select_nex:
  00111	6a 12		 push	 18			; 00000012H
  00113	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  00116	52		 push	 edx
  00117	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv92[ebp], 180
  0011e	8b 4d ac	 mov	 ecx, DWORD PTR tv131[ebp]
  00121	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00128	ff d2		 call	 edx
  0012a	85 c0		 test	 eax, eax
  0012c	0f 85 31 01 00
	00		 jne	 $LN7@select_nex
$LN9@select_nex:

; 960  : 		{
; 961  : 			//
; 962  : 			// no current target or current target has been removed from the gunship target list
; 963  : 			//
; 964  : 
; 965  : 			target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_GUNSHIP_TARGET);

  00132	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00139	74 0c		 je	 SHORT $LN24@select_nex
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00140	8b 08		 mov	 ecx, DWORD PTR [eax]
  00142	89 4d b0	 mov	 DWORD PTR tv144[ebp], ecx
  00145	eb 21		 jmp	 SHORT $LN25@select_nex
$LN24@select_nex:
  00147	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA
  0014d	83 c2 14	 add	 edx, 20			; 00000014H
  00150	52		 push	 edx
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00161	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN25@select_nex:
  00168	b9 01 00 00 00	 mov	 ecx, 1
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 09		 je	 SHORT $LN26@select_nex
  00171	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv152[ebp], 18 ; 00000012H
  00178	eb 21		 jmp	 SHORT $LN27@select_nex
$LN26@select_nex:
  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA
  00180	83 c2 14	 add	 edx, 20			; 00000014H
  00183	52		 push	 edx
  00184	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00194	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN27@select_nex:
  0019b	6a 12		 push	 18			; 00000012H
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001a3	51		 push	 ecx
  001a4	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv144[ebp], 180
  001ab	8b 45 ac	 mov	 eax, DWORD PTR tv152[ebp]
  001ae	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001b5	ff d1		 call	 ecx
  001b7	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_nex:

; 966  : 
; 967  : 			while (target)

  001ba	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001be	0f 84 9d 00 00
	00		 je	 $LN3@select_nex

; 968  : 			{
; 969  : 				if (get_selectable_hms_target (target))

  001c4	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  001cd	85 c0		 test	 eax, eax
  001cf	74 0b		 je	 SHORT $LN10@select_nex

; 970  : 				{
; 971  : 					new__target = target;

  001d1	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001d4	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 972  : 
; 973  : 					break;

  001d7	e9 85 00 00 00	 jmp	 $LN3@select_nex
$LN10@select_nex:

; 974  : 				}
; 975  : 
; 976  : 				target = get_local_entity_child_succ (target, LIST_TYPE_GUNSHIP_TARGET);

  001dc	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001e0	74 0a		 je	 SHORT $LN28@select_nex
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e7	89 4d b0	 mov	 DWORD PTR tv168[ebp], ecx
  001ea	eb 21		 jmp	 SHORT $LN29@select_nex
$LN28@select_nex:
  001ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA
  001f2	83 c2 1f	 add	 edx, 31			; 0000001fH
  001f5	52		 push	 edx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00206	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN29@select_nex:
  0020d	b9 01 00 00 00	 mov	 ecx, 1
  00212	85 c9		 test	 ecx, ecx
  00214	74 09		 je	 SHORT $LN30@select_nex
  00216	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv176[ebp], 18 ; 00000012H
  0021d	eb 21		 jmp	 SHORT $LN31@select_nex
$LN30@select_nex:
  0021f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_hms_target@@YGXXZ@4JA
  00225	83 c2 1f	 add	 edx, 31			; 0000001fH
  00228	52		 push	 edx
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN31@select_nex:
  00240	6a 12		 push	 18			; 00000012H
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  00245	51		 push	 ecx
  00246	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv168[ebp], 180
  0024d	8b 45 ac	 mov	 eax, DWORD PTR tv176[ebp]
  00250	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00257	ff d1		 call	 ecx
  00259	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 977  : 			}

  0025c	e9 59 ff ff ff	 jmp	 $LN2@select_nex
$LN3@select_nex:

; 978  : 		}
; 979  : 		else

  00261	eb 3b		 jmp	 SHORT $LN6@select_nex
$LN7@select_nex:

; 980  : 		{
; 981  : 			target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00263	6a 12		 push	 18			; 00000012H
  00265	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  0026e	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_nex:

; 982  : 
; 983  : 			while (target != current_target)

  00271	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00274	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00277	74 25		 je	 SHORT $LN6@select_nex

; 984  : 			{
; 985  : 				if (get_selectable_hms_target (target))

  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_selectable_hms_target@@YGHPAUENTITY@@@Z ; get_selectable_hms_target
  00282	85 c0		 test	 eax, eax
  00284	74 08		 je	 SHORT $LN11@select_nex

; 986  : 				{
; 987  : 					new__target = target;

  00286	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00289	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 988  : 
; 989  : 					break;

  0028c	eb 10		 jmp	 SHORT $LN6@select_nex
$LN11@select_nex:

; 990  : 				}
; 991  : 
; 992  : 				target = get_local_entity_child_succ_circular (target, LIST_TYPE_GUNSHIP_TARGET);

  0028e	6a 12		 push	 18			; 00000012H
  00290	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00299	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 993  : 			}

  0029c	eb d3		 jmp	 SHORT $LN4@select_nex
$LN6@select_nex:

; 994  : 		}
; 995  : 	}
; 996  : 
; 997  : 	set_gunship_target (new__target);

  0029e	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 998  : 
; 999  : 	if (new__target)

  002a7	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  002ab	74 2e		 je	 SHORT $LN1@select_nex

; 1000 : 	{
; 1001 : 		hms_target_locked = TRUE;

  002ad	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 1 ; hms_target_locked

; 1002 : 
; 1003 : 		get_pilot_head_heading_and_pitch_to_target (new__target);

  002b7	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?get_pilot_head_heading_and_pitch_to_target@@YGXPAUENTITY@@@Z ; get_pilot_head_heading_and_pitch_to_target

; 1004 : 
; 1005 : 		if (in_cockpit)

  002c0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  002c7	74 12		 je	 SHORT $LN1@select_nex

; 1006 : 		{
; 1007 : 			if (set_view_mode (VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET))

  002c9	6a 22		 push	 34			; 00000022H
  002cb	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode
  002d0	85 c0		 test	 eax, eax
  002d2	74 07		 je	 SHORT $LN1@select_nex

; 1008 : 			{
; 1009 : 				set_common_target_acquisition_system_lock_target (TRUE);

  002d4	6a 01		 push	 1
  002d6	e8 00 00 00 00	 call	 ?set_common_target_acquisition_system_lock_target@@YGXH@Z ; set_common_target_acquisition_system_lock_target
$LN1@select_nex:

; 1010 : 			}
; 1011 : 		}
; 1012 : 	}
; 1013 : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c3		 ret	 0
?select_next_hms_target@@YGXXZ ENDP			; select_next_hms_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?deactivate_common_hms@@YGXXZ
_TEXT	SEGMENT
?deactivate_common_hms@@YGXXZ PROC			; deactivate_common_hms, COMDAT

; 842  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 843  : 	hms_target_locked = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked

; 844  : 
; 845  : 	if (numpad_events_overlaid)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?numpad_events_overlaid@@3HA, 0
  0001a	74 0f		 je	 SHORT $LN2@deactivate

; 846  : 	{
; 847  : 		numpad_events_overlaid = FALSE;

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?numpad_events_overlaid@@3HA, 0

; 848  : 
; 849  : 		pop_numpad_cockpit_view_events_overlay ();

  00026	e8 00 00 00 00	 call	 ?pop_numpad_cockpit_view_events_overlay@@YGXXZ ; pop_numpad_cockpit_view_events_overlay
$LN2@deactivate:

; 850  : 	}
; 851  : 
; 852  : 	// start unpadlock on target handover by GCsDriver  08-12-2007	
; 853  : 	if(command_line_unpadlock_on_handover)

  0002b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_unpadlock_on_handover@@3HA, 0 ; command_line_unpadlock_on_handover
  00032	74 17		 je	 SHORT $LN1@deactivate

; 854  : 	{
; 855  : 		if (get_view_mode () == VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET)

  00034	83 3d 00 00 00
	00 22		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 34 ; view_mode, 00000022H
  0003b	75 0e		 jne	 SHORT $LN1@deactivate

; 856  : 		{
; 857  : 			select_padlock_view_event (PADLOCK_MODE_NONE);

  0003d	6a 00		 push	 0
  0003f	e8 00 00 00 00	 call	 ?select_padlock_view_event@@YGXW4PADLOCK_MODES@@@Z ; select_padlock_view_event

; 858  : 			set_view_mode (VIEW_MODE_VIRTUAL_COCKPIT);

  00044	6a 20		 push	 32			; 00000020H
  00046	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode
$LN1@deactivate:

; 859  : 			//set_view_mode (VIEW_MODE_COCKPIT_PANEL_LEVEL_AHEAD);
; 860  : 		}
; 861  : 	}
; 862  : 	// end unpadlock on target handover by GCsDriver  08-12-2007
; 863  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?deactivate_common_hms@@YGXXZ ENDP			; deactivate_common_hms
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?activate_common_hms@@YGXXZ
_TEXT	SEGMENT
?activate_common_hms@@YGXXZ PROC			; activate_common_hms, COMDAT

; 826  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 827  : 	hms_target_locked = target_locked;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_locked@@3HA ; target_locked
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, eax ; hms_target_locked

; 828  : 
; 829  : 	if (!numpad_events_overlaid)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?numpad_events_overlaid@@3HA, 0
  0001a	75 0f		 jne	 SHORT $LN1@activate_c

; 830  : 	{
; 831  : 		numpad_events_overlaid = TRUE;

  0001c	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?numpad_events_overlaid@@3HA, 1

; 832  : 
; 833  : 		push_numpad_cockpit_view_events_overlay ();

  00026	e8 00 00 00 00	 call	 ?push_numpad_cockpit_view_events_overlay@@YGXXZ ; push_numpad_cockpit_view_events_overlay
$LN1@activate_c:

; 834  : 	}
; 835  : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?activate_common_hms@@YGXXZ ENDP			; activate_common_hms
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?update_common_hms@@YGXXZ
_TEXT	SEGMENT
tv134 = -80						; size = 4
tv78 = -80						; size = 4
tv95 = -76						; size = 4
tv70 = -76						; size = 4
_new__target$ = -8					; size = 4
_current_target$ = -4					; size = 4
?update_common_hms@@YGXXZ PROC				; update_common_hms, COMDAT

; 769  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 770  : 	entity
; 771  : 		*current_target,
; 772  : 		*new__target;
; 773  : 
; 774  : 	get_pilot_head_viewpoint ();

  00009	e8 00 00 00 00	 call	 ?get_pilot_head_viewpoint@@YGXXZ ; get_pilot_head_viewpoint

; 775  : 
; 776  : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0000e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00015	74 0c		 je	 SHORT $LN11@update_com
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00021	eb 21		 jmp	 SHORT $LN12@update_com
$LN11@update_com:
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_hms@@YGXXZ@4JA
  00029	83 c2 07	 add	 edx, 7
  0002c	52		 push	 edx
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN12@update_com:
  00044	b9 01 00 00 00	 mov	 ecx, 1
  00049	85 c9		 test	 ecx, ecx
  0004b	74 09		 je	 SHORT $LN13@update_com
  0004d	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00054	eb 21		 jmp	 SHORT $LN14@update_com
$LN13@update_com:
  00056	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_hms@@YGXXZ@4JA
  0005c	83 c2 07	 add	 edx, 7
  0005f	52		 push	 edx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00070	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN14@update_com:
  00077	6a 26		 push	 38			; 00000026H
  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0007f	51		 push	 ecx
  00080	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00087	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  0008a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00091	ff d1		 call	 ecx
  00093	89 45 fc	 mov	 DWORD PTR _current_target$[ebp], eax

; 777  : 
; 778  : 	if (hms_target_locked)

  00096	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked
  0009d	74 10		 je	 SHORT $LN2@update_com

; 779  : 	{
; 780  : 		if (!current_target)

  0009f	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a3	75 0a		 jne	 SHORT $LN2@update_com

; 781  : 		{
; 782  : 			hms_target_locked = FALSE;

  000a5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked
$LN2@update_com:

; 783  : 		}
; 784  : 	}
; 785  : 
; 786  : 	new__target = get_hms_boresight_target ();

  000af	e8 00 00 00 00	 call	 ?get_hms_boresight_target@@YGPAUENTITY@@XZ ; get_hms_boresight_target
  000b4	89 45 f8	 mov	 DWORD PTR _new__target$[ebp], eax

; 787  : 
; 788  : 	if (hms_target_locked)

  000b7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked
  000be	74 12		 je	 SHORT $LN4@update_com

; 789  : 	{
; 790  : 		if (new__target != current_target)

  000c0	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  000c3	3b 45 fc	 cmp	 eax, DWORD PTR _current_target$[ebp]
  000c6	74 0a		 je	 SHORT $LN4@update_com

; 791  : 		{
; 792  : 			hms_target_locked = FALSE;

  000c8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked
$LN4@update_com:

; 793  : 		}
; 794  : 	}
; 795  : 
; 796  : 	if (new__target)

  000d2	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  000d6	0f 84 8c 00 00
	00		 je	 $LN6@update_com

; 797  : 	{
; 798  : 		if (get_local_entity_parent (new__target, LIST_TYPE_GUNSHIP_TARGET) == NULL)

  000dc	83 7d f8 00	 cmp	 DWORD PTR _new__target$[ebp], 0
  000e0	74 0a		 je	 SHORT $LN15@update_com
  000e2	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	89 4d b4	 mov	 DWORD PTR tv95[ebp], ecx
  000ea	eb 1d		 jmp	 SHORT $LN16@update_com
$LN15@update_com:
  000ec	68 1e 03 00 00	 push	 798			; 0000031eH
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fc	52		 push	 edx
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN16@update_com:
  00109	b8 01 00 00 00	 mov	 eax, 1
  0010e	85 c0		 test	 eax, eax
  00110	74 09		 je	 SHORT $LN17@update_com
  00112	c7 45 b0 12 00
	00 00		 mov	 DWORD PTR tv134[ebp], 18 ; 00000012H
  00119	eb 1d		 jmp	 SHORT $LN18@update_com
$LN17@update_com:
  0011b	68 1e 03 00 00	 push	 798			; 0000031eH
  00120	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@BAKNKKGI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00125	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0012b	51		 push	 ecx
  0012c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00131	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN18@update_com:
  00138	6a 12		 push	 18			; 00000012H
  0013a	8b 55 f8	 mov	 edx, DWORD PTR _new__target$[ebp]
  0013d	52		 push	 edx
  0013e	69 45 b4 b4 00
	00 00		 imul	 eax, DWORD PTR tv95[ebp], 180
  00145	8b 4d b0	 mov	 ecx, DWORD PTR tv134[ebp]
  00148	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0014f	ff d2		 call	 edx
  00151	85 c0		 test	 eax, eax
  00153	75 13		 jne	 SHORT $LN6@update_com

; 799  : 		{
; 800  : 			insert_local_entity_into_parents_child_list (new__target, LIST_TYPE_GUNSHIP_TARGET, get_gunship_entity (), NULL);

  00155	6a 00		 push	 0
  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0015c	50		 push	 eax
  0015d	6a 12		 push	 18			; 00000012H
  0015f	8b 4d f8	 mov	 ecx, DWORD PTR _new__target$[ebp]
  00162	51		 push	 ecx
  00163	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN6@update_com:

; 801  : 		}
; 802  : 	}
; 803  : 
; 804  : 	set_gunship_target (new__target);

  00168	8b 45 f8	 mov	 eax, DWORD PTR _new__target$[ebp]
  0016b	50		 push	 eax
  0016c	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 805  : 
; 806  : 	target_locked = hms_target_locked;

  00171	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hms_target_locked@@3HA ; hms_target_locked
  00176	a3 00 00 00 00	 mov	 DWORD PTR ?target_locked@@3HA, eax ; target_locked

; 807  : 
; 808  : 	//
; 809  : 	// if not locked then unpadlock the target
; 810  : 	//
; 811  : 
; 812  : 	if (!hms_target_locked)

  0017b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked
  00182	75 10		 jne	 SHORT $LN1@update_com

; 813  : 	{
; 814  : 		if (get_view_mode () == VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET)

  00184	83 3d 00 00 00
	00 22		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 34 ; view_mode, 00000022H
  0018b	75 07		 jne	 SHORT $LN1@update_com

; 815  : 		{
; 816  : 			select_padlock_view_event (PADLOCK_MODE_NONE);

  0018d	6a 00		 push	 0
  0018f	e8 00 00 00 00	 call	 ?select_padlock_view_event@@YGXW4PADLOCK_MODES@@@Z ; select_padlock_view_event
$LN1@update_com:

; 817  : 		}
; 818  : 	}
; 819  : }

  00194	5f		 pop	 edi
  00195	5e		 pop	 esi
  00196	5b		 pop	 ebx
  00197	8b e5		 mov	 esp, ebp
  00199	5d		 pop	 ebp
  0019a	c3		 ret	 0
?update_common_hms@@YGXXZ ENDP				; update_common_hms
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?deinitialise_common_hms@@YGXXZ
_TEXT	SEGMENT
?deinitialise_common_hms@@YGXXZ PROC			; deinitialise_common_hms, COMDAT

; 147  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 148  : 	if (numpad_events_overlaid)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?numpad_events_overlaid@@3HA, 0
  00010	74 05		 je	 SHORT $LN1@deinitiali

; 149  : 	{
; 150  : 		pop_numpad_cockpit_view_events_overlay ();

  00012	e8 00 00 00 00	 call	 ?pop_numpad_cockpit_view_events_overlay@@YGXXZ ; pop_numpad_cockpit_view_events_overlay
$LN1@deinitiali:

; 151  : 	}
; 152  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?deinitialise_common_hms@@YGXXZ ENDP			; deinitialise_common_hms
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_hms.c
;	COMDAT ?initialise_common_hms@@YGXXZ
_TEXT	SEGMENT
?initialise_common_hms@@YGXXZ PROC			; initialise_common_hms, COMDAT

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 137  : 	hms_target_locked = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?hms_target_locked@@3HA, 0 ; hms_target_locked

; 138  : 
; 139  : 	numpad_events_overlaid = FALSE;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?numpad_events_overlaid@@3HA, 0

; 140  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?initialise_common_hms@@YGXXZ ENDP			; initialise_common_hms
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sqrt@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sqrt@@YGMM@Z PROC					; sqrt, COMDAT

; 294  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	return (_CSTD sqrtf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sqrtf
  00019	83 c4 04	 add	 esp, 4

; 296  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sqrt@@YGMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 759  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  :             return (float)sqrt(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sqrt
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 761  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
