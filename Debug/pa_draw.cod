; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\particle\pa_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_particle_draw_functions@@YGXXZ	; overload_particle_draw_functions
EXTRN	_memcpy:PROC
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA:BYTE ; fn_draw_local_entity_3d_object
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_draw.c
;	COMDAT ?draw_local_3d_object@@YGXPAUENTITY@@M@Z
_TEXT	SEGMENT
_count$ = -16						; size = 4
_loop$ = -12						; size = 4
_inst3d$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_range$ = 12						; size = 4
?draw_local_3d_object@@YGXPAUENTITY@@M@Z PROC		; draw_local_3d_object, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	particle
; 82   : 		*raw;
; 83   : 
; 84   : 	object_3d_instance
; 85   : 		*inst3d;
; 86   : 
; 87   : 	int
; 88   : 		loop,
; 89   : 		count;
; 90   : 
; 91   : 	raw = (particle *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 92   : 
; 93   : 	count = raw->particle_count;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00019	89 4d f0	 mov	 DWORD PTR _count$[ebp], ecx

; 94   : 
; 95   : 	#if DEBUG_MODULE
; 96   : 
; 97   : 	debug_log ("PA_DRAW : drawing %d particles", count);
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	for ( loop = 0 ; loop < count ; loop ++ )

  0001c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00023	eb 09		 jmp	 SHORT $LN4@draw_local
$LN2@draw_local:
  00025	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00028	83 c0 01	 add	 eax, 1
  0002b	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_local:
  0002e	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00031	3b 45 f0	 cmp	 eax, DWORD PTR _count$[ebp]
  00034	7d 69		 jge	 SHORT $LN3@draw_local

; 102  : 	{
; 103  : 		if ( !( raw->valid[ loop ] ) )

  00036	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00039	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0003c	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  0003f	0f b6 04 11	 movzx	 eax, BYTE PTR [ecx+edx]
  00043	85 c0		 test	 eax, eax
  00045	75 02		 jne	 SHORT $LN5@draw_local

; 104  : 		{
; 105  : 			#if DEBUG_MODULE
; 106  : 
; 107  : 			debug_log ("PA_DRAW : particle %d expired", loop);
; 108  : 
; 109  : 			#endif
; 110  : 
; 111  : 			continue;

  00047	eb dc		 jmp	 SHORT $LN2@draw_local
$LN5@draw_local:

; 112  : 		}
; 113  : 
; 114  : 		inst3d = raw->inst3d[ loop ];

  00049	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004c	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0004f	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  00052	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00055	89 45 f8	 mov	 DWORD PTR _inst3d$[ebp], eax

; 115  : 
; 116  : 		if (inst3d)

  00058	83 7d f8 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  0005c	74 3f		 je	 SHORT $LN6@draw_local

; 117  : 		{
; 118  : 			#if DEBUG_MODULE
; 119  : 
; 120  : 			debug_log ("PA_DRAW : particle %d OK", loop);
; 121  : 
; 122  : 			#endif
; 123  : 
; 124  : 			inst3d->object_has_shadow = FALSE;

  0005e	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00061	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00064	83 e1 fb	 and	 ecx, -5			; fffffffbH
  00067	8b 55 f8	 mov	 edx, DWORD PTR _inst3d$[ebp]
  0006a	89 4a 50	 mov	 DWORD PTR [edx+80], ecx

; 125  : 
; 126  : 			memcpy (&inst3d->vp.position, &raw->position[ loop ], sizeof (vec3d));

  0006d	6a 0c		 push	 12			; 0000000cH
  0006f	6b 45 f4 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00076	03 41 40	 add	 eax, DWORD PTR [ecx+64]
  00079	50		 push	 eax
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _inst3d$[ebp]
  0007d	83 c2 08	 add	 edx, 8
  00080	52		 push	 edx
  00081	e8 00 00 00 00	 call	 _memcpy
  00086	83 c4 0c	 add	 esp, 12			; 0000000cH

; 127  : 
; 128  : 			insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, inst3d);

  00089	51		 push	 ecx
  0008a	0f 57 c0	 xorps	 xmm0, xmm0
  0008d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00092	8b 45 f8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00095	50		 push	 eax
  00096	6a 01		 push	 1
  00098	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene
$LN6@draw_local:

; 129  : 		}
; 130  : 		else
; 131  : 		{
; 132  : 			#if DEBUG_MODULE
; 133  : 
; 134  : 			debug_log ("PA_DRAW : particle %d no inst3d", loop);
; 135  : 
; 136  : 			#endif
; 137  : 		}
; 138  : 	}

  0009d	eb 86		 jmp	 SHORT $LN2@draw_local
$LN3@draw_local:

; 139  : }

  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 08 00	 ret	 8
?draw_local_3d_object@@YGXPAUENTITY@@M@Z ENDP		; draw_local_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_draw.c
;	COMDAT ?overload_particle_draw_functions@@YGXXZ
_TEXT	SEGMENT
?overload_particle_draw_functions@@YGXXZ PROC		; overload_particle_draw_functions, COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 147  : 	fn_draw_local_entity_3d_object[ENTITY_TYPE_PARTICLE]	= draw_local_3d_object;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 12	 imul	 ecx, eax, 18
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA[ecx], OFFSET ?draw_local_3d_object@@YGXPAUENTITY@@M@Z ; draw_local_3d_object

; 148  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?overload_particle_draw_functions@@YGXXZ ENDP		; overload_particle_draw_functions
_TEXT	ENDS
END
