; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\sound\dsound.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z ; dsound_play_sound_buffer
PUBLIC	?dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z ; dsound_stop_sound_buffer
PUBLIC	?dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z ; dsound_set_sound_buffer_rate
PUBLIC	?dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z ; dsound_get_sound_buffer_rate
PUBLIC	?dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z ; dsound_set_sound_buffer_volume
PUBLIC	?dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z ; dsound_get_sound_buffer_volume
PUBLIC	?dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z ; dsound_set_sound_buffer_pan
PUBLIC	?dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z ; dsound_get_sound_buffer_pan
PUBLIC	?dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z ; dsound_set_sound_buffer_position
PUBLIC	?dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z ; dsound_get_sound_buffer_position
PUBLIC	?dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z ; dsound_get_sound_buffer_status
PUBLIC	?dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z ; dsound_lock_sound_buffer
PUBLIC	?dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z ; dsound_unlock_sound_buffer
PUBLIC	?__LINE__Var@?0??dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z@4JA ; `dsound_play_sound_buffer'::`1'::__LINE__Var
PUBLIC	??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_06HOHPNJLC@buffer@			; `string'
PUBLIC	??_C@_06JEIHMPKD@dsound@			; `string'
PUBLIC	??_C@_0CH@IJDBIHHK@Unable?5to?5play?5sound?5buffer?5loo@ ; `string'
PUBLIC	??_C@_0CA@EOEFNGNG@Unable?5to?5play?5sound?5buffer?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z@4JA ; `dsound_stop_sound_buffer'::`1'::__LINE__Var
PUBLIC	??_C@_0BK@DMFHPDEI@Unable?5to?5stop?5buffer?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z@4JA ; `dsound_set_sound_buffer_rate'::`1'::__LINE__Var
PUBLIC	??_C@_04HCCHHEEF@rate@				; `string'
PUBLIC	??_C@_0BO@OOMPKMJK@Unable?5to?5set?5buffer?5rate?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z@4JA ; `dsound_get_sound_buffer_rate'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@EAOEOMOG@Unable?5to?5get?5buffer?5rate?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z@4JA ; `dsound_set_sound_buffer_volume'::`1'::__LINE__Var
PUBLIC	??_C@_0CA@CJAGLDCI@Unable?5to?5set?5buffer?5volume?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z@4JA ; `dsound_get_sound_buffer_volume'::`1'::__LINE__Var
PUBLIC	??_C@_0CA@NMFAGKGJ@Unable?5to?5get?5buffer?5volume?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z@4JA ; `dsound_set_sound_buffer_pan'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@IHGEGHNM@Unable?5to?5set?5buffer?5pan?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z@4JA ; `dsound_get_sound_buffer_pan'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@HNEOFBDE@Unable?5to?5get?5buffer?5pan?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z@4JA ; `dsound_set_sound_buffer_position'::`1'::__LINE__Var
PUBLIC	??_C@_0CC@LNKDKJGE@Unable?5to?5set?5buffer?5position?3?5@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z@4JA ; `dsound_get_sound_buffer_position'::`1'::__LINE__Var
PUBLIC	??_C@_0CC@KLMOEIAG@Unable?5to?5get?5buffer?5position?3?5@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z@4JA ; `dsound_get_sound_buffer_status'::`1'::__LINE__Var
PUBLIC	??_C@_0CA@MOBCGINC@Unable?5to?5get?5buffer?5status?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z@4JA ; `dsound_lock_sound_buffer'::`1'::__LINE__Var
PUBLIC	??_C@_04IAGNFIBA@size@				; `string'
PUBLIC	??_C@_0CA@NEHGOAAD@Unable?5to?5lock?5sound?5buffer?3?5?$CFs@ ; `string'
PUBLIC	?__LINE__Var@?0??dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z@4JA ; `dsound_unlock_sound_buffer'::`1'::__LINE__Var
PUBLIC	??_C@_04PJOLNDGD@data@				; `string'
PUBLIC	??_C@_06IJDLPEM@length@				; `string'
PUBLIC	??_C@_0CC@GMJFOMGN@Unable?5to?5unlock?5sound?5buffer?3?5@ ; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?get_dsound_error_message@@YGPBDJ@Z:PROC	; get_dsound_error_message
EXTRN	?dsound@@3PAUIDirectSound@@A:DWORD		; dsound
;	COMDAT ??_C@_0CC@GMJFOMGN@Unable?5to?5unlock?5sound?5buffer?3?5@
CONST	SEGMENT
??_C@_0CC@GMJFOMGN@Unable?5to?5unlock?5sound?5buffer?3?5@ DB 'Unable to u'
	DB	'nlock sound buffer: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IJDLPEM@length@
CONST	SEGMENT
??_C@_06IJDLPEM@length@ DB 'length', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PJOLNDGD@data@
CONST	SEGMENT
??_C@_04PJOLNDGD@data@ DB 'data', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z@4JA DD 019fH ; `dsound_unlock_sound_buffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@NEHGOAAD@Unable?5to?5lock?5sound?5buffer?3?5?$CFs@
CONST	SEGMENT
??_C@_0CA@NEHGOAAD@Unable?5to?5lock?5sound?5buffer?3?5?$CFs@ DB 'Unable t'
	DB	'o lock sound buffer: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IAGNFIBA@size@
CONST	SEGMENT
??_C@_04IAGNFIBA@size@ DB 'size', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z@4JA DD 017bH ; `dsound_lock_sound_buffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@MOBCGINC@Unable?5to?5get?5buffer?5status?3?5?$CFs@
CONST	SEGMENT
??_C@_0CA@MOBCGINC@Unable?5to?5get?5buffer?5status?3?5?$CFs@ DB 'Unable t'
	DB	'o get buffer status: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z@4JA DD 0157H ; `dsound_get_sound_buffer_status'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CC@KLMOEIAG@Unable?5to?5get?5buffer?5position?3?5@
CONST	SEGMENT
??_C@_0CC@KLMOEIAG@Unable?5to?5get?5buffer?5position?3?5@ DB 'Unable to g'
	DB	'et buffer position: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z@4JA DD 013bH ; `dsound_get_sound_buffer_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CC@LNKDKJGE@Unable?5to?5set?5buffer?5position?3?5@
CONST	SEGMENT
??_C@_0CC@LNKDKJGE@Unable?5to?5set?5buffer?5position?3?5@ DB 'Unable to s'
	DB	'et buffer position: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z@4JA DD 0125H ; `dsound_set_sound_buffer_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@HNEOFBDE@Unable?5to?5get?5buffer?5pan?3?5?$CFs@
CONST	SEGMENT
??_C@_0BN@HNEOFBDE@Unable?5to?5get?5buffer?5pan?3?5?$CFs@ DB 'Unable to g'
	DB	'et buffer pan: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z@4JA DD 010aH ; `dsound_get_sound_buffer_pan'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@IHGEGHNM@Unable?5to?5set?5buffer?5pan?3?5?$CFs@
CONST	SEGMENT
??_C@_0BN@IHGEGHNM@Unable?5to?5set?5buffer?5pan?3?5?$CFs@ DB 'Unable to s'
	DB	'et buffer pan: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z@4JA DD 0f4H ; `dsound_set_sound_buffer_pan'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@NMFAGKGJ@Unable?5to?5get?5buffer?5volume?3?5?$CFs@
CONST	SEGMENT
??_C@_0CA@NMFAGKGJ@Unable?5to?5get?5buffer?5volume?3?5?$CFs@ DB 'Unable t'
	DB	'o get buffer volume: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z@4JA DD 0d4H ; `dsound_get_sound_buffer_volume'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@CJAGLDCI@Unable?5to?5set?5buffer?5volume?3?5?$CFs@
CONST	SEGMENT
??_C@_0CA@CJAGLDCI@Unable?5to?5set?5buffer?5volume?3?5?$CFs@ DB 'Unable t'
	DB	'o set buffer volume: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z@4JA DD 0beH ; `dsound_set_sound_buffer_volume'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BO@EAOEOMOG@Unable?5to?5get?5buffer?5rate?3?5?$CFs@
CONST	SEGMENT
??_C@_0BO@EAOEOMOG@Unable?5to?5get?5buffer?5rate?3?5?$CFs@ DB 'Unable to '
	DB	'get buffer rate: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z@4JA DD 09eH ; `dsound_get_sound_buffer_rate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BO@OOMPKMJK@Unable?5to?5set?5buffer?5rate?3?5?$CFs@
CONST	SEGMENT
??_C@_0BO@OOMPKMJK@Unable?5to?5set?5buffer?5rate?3?5?$CFs@ DB 'Unable to '
	DB	'set buffer rate: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HCCHHEEF@rate@
CONST	SEGMENT
??_C@_04HCCHHEEF@rate@ DB 'rate', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z@4JA DD 087H ; `dsound_set_sound_buffer_rate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BK@DMFHPDEI@Unable?5to?5stop?5buffer?3?5?$CFs@
CONST	SEGMENT
??_C@_0BK@DMFHPDEI@Unable?5to?5stop?5buffer?3?5?$CFs@ DB 'Unable to stop '
	DB	'buffer: %s', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z@4JA DD 071H ; `dsound_stop_sound_buffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@EOEFNGNG@Unable?5to?5play?5sound?5buffer?3?5?$CFs@
CONST	SEGMENT
??_C@_0CA@EOEFNGNG@Unable?5to?5play?5sound?5buffer?3?5?$CFs@ DB 'Unable t'
	DB	'o play sound buffer: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IJDBIHHK@Unable?5to?5play?5sound?5buffer?5loo@
CONST	SEGMENT
??_C@_0CH@IJDBIHHK@Unable?5to?5play?5sound?5buffer?5loo@ DB 'Unable to pl'
	DB	'ay sound buffer looped: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JEIHMPKD@dsound@
CONST	SEGMENT
??_C@_06JEIHMPKD@dsound@ DB 'dsound', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HOHPNJLC@buffer@
CONST	SEGMENT
??_C@_06HOHPNJLC@buffer@ DB 'buffer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\sound\dsound.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z@4JA DD 04cH ; `dsound_play_sound_buffer'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z
_TEXT	SEGMENT
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
_data$ = 12						; size = 4
_length$ = 16						; size = 4
?dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z PROC ; dsound_unlock_sound_buffer, COMDAT

; 415  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 416  : 
; 417  : 	HRESULT
; 418  : 		dsrval;
; 419  : 
; 420  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_unl
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_unl:

; 421  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_unl
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_unl:

; 422  : 	ASSERT ( data );

  00048	83 7d 0c 00	 cmp	 DWORD PTR _data$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN4@dsound_unl
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z@4JA
  00053	83 c0 07	 add	 eax, 7
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOLNDGD@data@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@dsound_unl:

; 423  : 	ASSERT ( length );

  00066	83 7d 10 00	 cmp	 DWORD PTR _length$[ebp], 0
  0006a	75 18		 jne	 SHORT $LN5@dsound_unl
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z@4JA
  00071	83 c0 08	 add	 eax, 8
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_06IJDLPEM@length@
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@dsound_unl:

; 424  : 
; 425  : 	dsrval = IDirectSoundBuffer_Unlock ( buffer, ( LPVOID ) data, length, ( LPVOID ) NULL, 0 );

  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  0008f	51		 push	 ecx
  00090	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00093	8b 02		 mov	 eax, DWORD PTR [edx]
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  00098	51		 push	 ecx
  00099	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  0009c	ff d2		 call	 edx
  0009e	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 426  : 
; 427  : 	if ( dsrval != DS_OK )

  000a1	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  000a5	74 1b		 je	 SHORT $LN6@dsound_unl

; 428  : 	{
; 429  : 
; 430  : 		debug_log ( "Unable to unlock sound buffer: %s", get_dsound_error_message ( dsrval ) );

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  000b0	50		 push	 eax
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GMJFOMGN@Unable?5to?5unlock?5sound?5buffer?3?5@
  000b6	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000bb	83 c4 08	 add	 esp, 8

; 431  : 
; 432  : 		return ( FALSE );

  000be	33 c0		 xor	 eax, eax
  000c0	eb 05		 jmp	 SHORT $LN1@dsound_unl
$LN6@dsound_unl:

; 433  : 	}
; 434  : 	
; 435  : 	return ( TRUE );

  000c2	b8 01 00 00 00	 mov	 eax, 1
$LN1@dsound_unl:

; 436  : }

  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c2 0c 00	 ret	 12			; 0000000cH
?dsound_unlock_sound_buffer@@YGHPAUIDirectSoundBuffer@@PAEH@Z ENDP ; dsound_unlock_sound_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z
_TEXT	SEGMENT
_dsrval$ = -12						; size = 4
_length$ = -8						; size = 4
_data$ = -4						; size = 4
_buffer$ = 8						; size = 4
_position$ = 12						; size = 4
_size$ = 16						; size = 4
?dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z PROC ; dsound_lock_sound_buffer, COMDAT

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 380  : 
; 381  : 	unsigned	 char
; 382  : 		*data;
; 383  : 
; 384  : 	DWORD
; 385  : 		length;
; 386  : 
; 387  : 	HRESULT
; 388  : 		dsrval;
; 389  : 
; 390  : 	ASSERT ( buffer );

  00009	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@dsound_loc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_loc:

; 391  : 	ASSERT ( size );

  00027	83 7d 10 00	 cmp	 DWORD PTR _size$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@dsound_loc
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z@4JA
  00032	83 c0 0c	 add	 eax, 12			; 0000000cH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_04IAGNFIBA@size@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_loc:

; 392  : 	ASSERT ( dsound );

  00045	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  0004c	75 18		 jne	 SHORT $LN4@dsound_loc
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z@4JA
  00053	83 c0 0d	 add	 eax, 13			; 0000000dH
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@dsound_loc:

; 393  : 
; 394  : 	dsrval = IDirectSoundBuffer_Lock ( buffer, position, size, ( LPVOID * ) &data, &length, NULL, NULL, 0 );

  00066	6a 00		 push	 0
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	8d 45 f8	 lea	 eax, DWORD PTR _length$[ebp]
  0006f	50		 push	 eax
  00070	8d 4d fc	 lea	 ecx, DWORD PTR _data$[ebp]
  00073	51		 push	 ecx
  00074	8b 55 10	 mov	 edx, DWORD PTR _size$[ebp]
  00077	52		 push	 edx
  00078	8b 45 0c	 mov	 eax, DWORD PTR _position$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0007f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00081	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00084	50		 push	 eax
  00085	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  00088	ff d1		 call	 ecx
  0008a	89 45 f4	 mov	 DWORD PTR _dsrval$[ebp], eax

; 395  : 
; 396  : 	if ( dsrval != DS_OK )

  0008d	83 7d f4 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00091	74 1d		 je	 SHORT $LN5@dsound_loc

; 397  : 	{
; 398  : 
; 399  : 		debug_log ( "Unable to lock sound buffer: %s", get_dsound_error_message ( dsrval ) );

  00093	8b 45 f4	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0009c	50		 push	 eax
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NEHGOAAD@Unable?5to?5lock?5sound?5buffer?3?5?$CFs@
  000a2	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000a7	83 c4 08	 add	 esp, 8

; 400  : 
; 401  : 		return ( NULL );

  000aa	33 c0		 xor	 eax, eax
  000ac	eb 05		 jmp	 SHORT $LN1@dsound_loc

; 402  : 	}
; 403  : 	else

  000ae	eb 03		 jmp	 SHORT $LN1@dsound_loc
$LN5@dsound_loc:

; 404  : 	{
; 405  : 
; 406  : 		return ( data );

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _data$[ebp]
$LN1@dsound_loc:

; 407  : 	}
; 408  : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 0c 00	 ret	 12			; 0000000cH
?dsound_lock_sound_buffer@@YGPAEPAUIDirectSoundBuffer@@HH@Z ENDP ; dsound_lock_sound_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_status$ = -8						; size = 4
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
?dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z PROC ; dsound_get_sound_buffer_status, COMDAT

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 344  : 
; 345  : 	HRESULT
; 346  : 		dsrval;
; 347  : 
; 348  : 	DWORD
; 349  : 		status;
; 350  : 
; 351  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_get
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z@4JA
  00017	83 c0 08	 add	 eax, 8
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_get:

; 352  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_get
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z@4JA
  00035	83 c0 09	 add	 eax, 9
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_get:

; 353  : 
; 354  : 	dsrval = IDirectSoundBuffer_GetStatus ( buffer, &status );

  00048	8d 45 f8	 lea	 eax, DWORD PTR _status$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 24	 mov	 ecx, DWORD PTR [edx+36]
  00058	ff d1		 call	 ecx
  0005a	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 355  : 	
; 356  : 	if ( dsrval != DS_OK )

  0005d	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00061	74 17		 je	 SHORT $LN4@dsound_get

; 357  : 	{
; 358  : 
; 359  : 		debug_log ( "Unable to get buffer status: %s", get_dsound_error_message ( dsrval ) );

  00063	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MOBCGINC@Unable?5to?5get?5buffer?5status?3?5?$CFs@
  00072	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00077	83 c4 08	 add	 esp, 8
$LN4@dsound_get:

; 360  : 	}
; 361  : 
; 362  : 	if ( ( status & DSBSTATUS_PLAYING ) || ( status & DSBSTATUS_LOOPING ) )

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _status$[ebp]
  0007d	83 e0 01	 and	 eax, 1
  00080	75 08		 jne	 SHORT $LN7@dsound_get
  00082	8b 45 f8	 mov	 eax, DWORD PTR _status$[ebp]
  00085	83 e0 04	 and	 eax, 4
  00088	74 09		 je	 SHORT $LN5@dsound_get
$LN7@dsound_get:

; 363  : 	{
; 364  : 
; 365  : 		return ( SAMPLE_STATE_PLAYING );

  0008a	b8 01 00 00 00	 mov	 eax, 1
  0008f	eb 07		 jmp	 SHORT $LN1@dsound_get

; 366  : 	}
; 367  : 	else

  00091	eb 05		 jmp	 SHORT $LN1@dsound_get
$LN5@dsound_get:

; 368  : 	{
; 369  : 
; 370  : 		return ( SAMPLE_STATE_FINISHED );

  00093	b8 03 00 00 00	 mov	 eax, 3
$LN1@dsound_get:

; 371  : 	}
; 372  : }

  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?dsound_get_sound_buffer_status@@YG?AW4SAMPLE_STATES@@PAUIDirectSoundBuffer@@@Z ENDP ; dsound_get_sound_buffer_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_write_position$ = -12					; size = 4
_position$ = -8						; size = 4
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
?dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z PROC ; dsound_get_sound_buffer_position, COMDAT

; 315  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 316  : 
; 317  : 	HRESULT
; 318  : 		dsrval;
; 319  : 
; 320  : 	DWORD
; 321  : 		position,
; 322  : 		write_position;
; 323  : 
; 324  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_get
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00017	83 c0 09	 add	 eax, 9
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_get:

; 325  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_get
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00035	83 c0 0a	 add	 eax, 10			; 0000000aH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_get:

; 326  : 
; 327  : 	dsrval = IDirectSoundBuffer_GetCurrentPosition ( buffer, &position, &write_position );

  00048	8d 45 f4	 lea	 eax, DWORD PTR _write_position$[ebp]
  0004b	50		 push	 eax
  0004c	8d 4d f8	 lea	 ecx, DWORD PTR _position$[ebp]
  0004f	51		 push	 ecx
  00050	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00053	8b 02		 mov	 eax, DWORD PTR [edx]
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  00058	51		 push	 ecx
  00059	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0005c	ff d2		 call	 edx
  0005e	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 328  : 	
; 329  : 	if ( dsrval != DS_OK )

  00061	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00065	74 17		 je	 SHORT $LN4@dsound_get

; 330  : 	{
; 331  : 
; 332  : 		debug_log ( "Unable to get buffer position: %s", get_dsound_error_message ( dsrval ) );

  00067	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  00070	50		 push	 eax
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@KLMOEIAG@Unable?5to?5get?5buffer?5position?3?5@
  00076	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0007b	83 c4 08	 add	 esp, 8
$LN4@dsound_get:

; 333  : 	}
; 334  : 
; 335  : 	return ( position );

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _position$[ebp]

; 336  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
?dsound_get_sound_buffer_position@@YGHPAUIDirectSoundBuffer@@@Z ENDP ; dsound_get_sound_buffer_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z
_TEXT	SEGMENT
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
_position$ = 12						; size = 4
?dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z PROC ; dsound_set_sound_buffer_position, COMDAT

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 294  : 
; 295  : 	HRESULT
; 296  : 		dsrval;
; 297  : 
; 298  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_set
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_set:

; 299  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_set
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_set:

; 300  : 
; 301  : 	dsrval = IDirectSoundBuffer_SetCurrentPosition ( buffer, position );

  00048	8b 45 0c	 mov	 eax, DWORD PTR _position$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  00058	ff d1		 call	 ecx
  0005a	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 302  : 	
; 303  : 	if ( dsrval != DS_OK )

  0005d	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00061	74 17		 je	 SHORT $LN1@dsound_set

; 304  : 	{
; 305  : 
; 306  : 		debug_log ( "Unable to set buffer position: %s", get_dsound_error_message ( dsrval ) );

  00063	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LNKDKJGE@Unable?5to?5set?5buffer?5position?3?5@
  00072	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00077	83 c4 08	 add	 esp, 8
$LN1@dsound_set:

; 307  : 	}
; 308  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?dsound_set_sound_buffer_position@@YGXPAUIDirectSoundBuffer@@H@Z ENDP ; dsound_set_sound_buffer_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_pan$ = -8						; size = 4
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
?dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z PROC ; dsound_get_sound_buffer_pan, COMDAT

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 267  : 
; 268  : 	HRESULT
; 269  : 		dsrval;
; 270  : 
; 271  : 	LONG
; 272  : 		pan;
; 273  : 
; 274  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_get
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00017	83 c0 08	 add	 eax, 8
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_get:

; 275  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_get
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00035	83 c0 09	 add	 eax, 9
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_get:

; 276  : 
; 277  : 	dsrval = IDirectSoundBuffer_GetPan ( buffer, &pan );

  00048	8d 45 f8	 lea	 eax, DWORD PTR _pan$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  00058	ff d1		 call	 ecx
  0005a	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 278  : 
; 279  : 	if ( dsrval != DS_OK )

  0005d	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00061	74 17		 je	 SHORT $LN4@dsound_get

; 280  : 	{
; 281  : 
; 282  : 		debug_log ( "Unable to get buffer pan: %s", get_dsound_error_message ( dsrval ) );

  00063	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HNEOFBDE@Unable?5to?5get?5buffer?5pan?3?5?$CFs@
  00072	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00077	83 c4 08	 add	 esp, 8
$LN4@dsound_get:

; 283  : 	}
; 284  : 
; 285  : 	return ( pan );

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pan$[ebp]

; 286  : }

  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?dsound_get_sound_buffer_pan@@YGHPAUIDirectSoundBuffer@@@Z ENDP ; dsound_get_sound_buffer_pan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z
_TEXT	SEGMENT
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
_pan$ = 12						; size = 4
?dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z PROC ; dsound_set_sound_buffer_pan, COMDAT

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 245  : 
; 246  : 	HRESULT
; 247  : 		dsrval;
; 248  : 
; 249  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_set
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_set:

; 250  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_set
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_set:

; 251  : 
; 252  : 	dsrval = IDirectSoundBuffer_SetPan ( buffer, pan );

  00048	8b 45 0c	 mov	 eax, DWORD PTR _pan$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 40	 mov	 ecx, DWORD PTR [edx+64]
  00058	ff d1		 call	 ecx
  0005a	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 253  : 
; 254  : 	if ( dsrval != DS_OK )

  0005d	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00061	74 17		 je	 SHORT $LN1@dsound_set

; 255  : 	{
; 256  : 
; 257  : 		debug_log ( "Unable to set buffer pan: %s", get_dsound_error_message ( dsrval ) );

  00063	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IHGEGHNM@Unable?5to?5set?5buffer?5pan?3?5?$CFs@
  00072	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00077	83 c4 08	 add	 esp, 8
$LN1@dsound_set:

; 258  : 	}
; 259  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?dsound_set_sound_buffer_pan@@YGXPAUIDirectSoundBuffer@@H@Z ENDP ; dsound_set_sound_buffer_pan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_volume$ = -8						; size = 4
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
?dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z PROC ; dsound_get_sound_buffer_volume, COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 213  : 
; 214  : 	HRESULT
; 215  : 		dsrval;
; 216  : 
; 217  : 	LONG
; 218  : 		volume;
; 219  : 
; 220  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_get
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00017	83 c0 08	 add	 eax, 8
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_get:

; 221  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_get
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00035	83 c0 09	 add	 eax, 9
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_get:

; 222  : 
; 223  : 	dsrval = IDirectSoundBuffer_GetVolume ( buffer, &volume );

  00048	8d 45 f8	 lea	 eax, DWORD PTR _volume$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00058	ff d1		 call	 ecx
  0005a	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 224  : 
; 225  : 	if ( dsrval != DS_OK )

  0005d	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00061	74 1d		 je	 SHORT $LN4@dsound_get

; 226  : 	{
; 227  : 
; 228  : 		debug_log ( "Unable to get buffer volume: %s", get_dsound_error_message ( dsrval ) );

  00063	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NMFAGKGJ@Unable?5to?5get?5buffer?5volume?3?5?$CFs@
  00072	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00077	83 c4 08	 add	 esp, 8

; 229  : 
; 230  : 		return ( 0 );

  0007a	33 c0		 xor	 eax, eax
  0007c	eb 05		 jmp	 SHORT $LN1@dsound_get

; 231  : 	}
; 232  : 	else

  0007e	eb 03		 jmp	 SHORT $LN1@dsound_get
$LN4@dsound_get:

; 233  : 	{
; 234  : 
; 235  : 		return ( volume );

  00080	8b 45 f8	 mov	 eax, DWORD PTR _volume$[ebp]
$LN1@dsound_get:

; 236  : 	}
; 237  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?dsound_get_sound_buffer_volume@@YGHPAUIDirectSoundBuffer@@@Z ENDP ; dsound_get_sound_buffer_volume
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z
_TEXT	SEGMENT
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
_volume$ = 12						; size = 4
?dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z PROC ; dsound_set_sound_buffer_volume, COMDAT

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 191  : 
; 192  : 	HRESULT
; 193  : 		dsrval;
; 194  : 
; 195  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_set
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_set:

; 196  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_set
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_set:

; 197  : 
; 198  : 	dsrval = IDirectSoundBuffer_SetVolume ( buffer, volume );

  00048	8b 45 0c	 mov	 eax, DWORD PTR _volume$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 3c	 mov	 ecx, DWORD PTR [edx+60]
  00058	ff d1		 call	 ecx
  0005a	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 199  : 
; 200  : 	if ( dsrval != DS_OK )

  0005d	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00061	74 17		 je	 SHORT $LN1@dsound_set

; 201  : 	{
; 202  : 
; 203  : 		debug_log ( "Unable to set buffer volume: %s", get_dsound_error_message ( dsrval ) );

  00063	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CJAGLDCI@Unable?5to?5set?5buffer?5volume?3?5?$CFs@
  00072	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00077	83 c4 08	 add	 esp, 8
$LN1@dsound_set:

; 204  : 	}
; 205  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?dsound_set_sound_buffer_volume@@YGXPAUIDirectSoundBuffer@@H@Z ENDP ; dsound_set_sound_buffer_volume
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_rate$ = -8						; size = 4
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
?dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z PROC ; dsound_get_sound_buffer_rate, COMDAT

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 159  : 
; 160  : 	HRESULT
; 161  : 		dsrval;
; 162  : 
; 163  : 	DWORD
; 164  : 		rate;
; 165  : 
; 166  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_get
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00017	83 c0 08	 add	 eax, 8
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_get:

; 167  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_get
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z@4JA
  00035	83 c0 09	 add	 eax, 9
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_get:

; 168  : 
; 169  : 	dsrval = IDirectSoundBuffer_GetFrequency ( buffer, &rate );

  00048	8d 45 f8	 lea	 eax, DWORD PTR _rate$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00054	50		 push	 eax
  00055	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00058	ff d1		 call	 ecx
  0005a	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 170  : 
; 171  : 	if ( dsrval != DS_OK )

  0005d	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00061	74 1d		 je	 SHORT $LN4@dsound_get

; 172  : 	{
; 173  : 
; 174  : 		debug_log ( "Unable to get buffer rate: %s", get_dsound_error_message ( dsrval ) );

  00063	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@EAOEOMOG@Unable?5to?5get?5buffer?5rate?3?5?$CFs@
  00072	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00077	83 c4 08	 add	 esp, 8

; 175  : 
; 176  : 		return ( 0 );

  0007a	33 c0		 xor	 eax, eax
  0007c	eb 05		 jmp	 SHORT $LN1@dsound_get

; 177  : 	}
; 178  : 	else

  0007e	eb 03		 jmp	 SHORT $LN1@dsound_get
$LN4@dsound_get:

; 179  : 	{
; 180  : 
; 181  : 		return ( rate );

  00080	8b 45 f8	 mov	 eax, DWORD PTR _rate$[ebp]
$LN1@dsound_get:

; 182  : 	}
; 183  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?dsound_get_sound_buffer_rate@@YGHPAUIDirectSoundBuffer@@@Z ENDP ; dsound_get_sound_buffer_rate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z
_TEXT	SEGMENT
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
_rate$ = 12						; size = 4
?dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z PROC ; dsound_set_sound_buffer_rate, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 136  : 
; 137  : 	HRESULT
; 138  : 		dsrval;
; 139  : 
; 140  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_set
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_set:

; 141  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_set
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_set:

; 142  : 	ASSERT ( rate );

  00048	83 7d 0c 00	 cmp	 DWORD PTR _rate$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN4@dsound_set
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00053	83 c0 07	 add	 eax, 7
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_04HCCHHEEF@rate@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@dsound_set:

; 143  : 
; 144  : 	dsrval = IDirectSoundBuffer_SetFrequency ( buffer, rate );

  00066	8b 45 0c	 mov	 eax, DWORD PTR _rate$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0006d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006f	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00072	50		 push	 eax
  00073	8b 4a 44	 mov	 ecx, DWORD PTR [edx+68]
  00076	ff d1		 call	 ecx
  00078	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 145  : 
; 146  : 	if ( dsrval != DS_OK )

  0007b	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  0007f	74 17		 je	 SHORT $LN1@dsound_set

; 147  : 	{
; 148  : 
; 149  : 		debug_log ( "Unable to set buffer rate: %s", get_dsound_error_message ( dsrval ) );

  00081	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  0008a	50		 push	 eax
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@OOMPKMJK@Unable?5to?5set?5buffer?5rate?3?5?$CFs@
  00090	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00095	83 c4 08	 add	 esp, 8
$LN1@dsound_set:

; 150  : 	}
; 151  : }

  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
?dsound_set_sound_buffer_rate@@YGXPAUIDirectSoundBuffer@@H@Z ENDP ; dsound_set_sound_buffer_rate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
?dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z PROC ; dsound_stop_sound_buffer, COMDAT

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 114  : 
; 115  : 	HRESULT
; 116  : 		dsrval;
; 117  : 
; 118  : 	ASSERT ( dsound );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  00010	75 18		 jne	 SHORT $LN2@dsound_sto
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_sto:

; 119  : 	ASSERT ( buffer );

  0002a	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@dsound_sto
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_sto:

; 120  : 
; 121  : 	dsrval = IDirectSoundBuffer_Stop ( buffer );

  00048	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0004b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00050	52		 push	 edx
  00051	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  00054	ff d0		 call	 eax
  00056	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 122  : 
; 123  : 	if ( dsrval != DS_OK )

  00059	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  0005d	74 17		 je	 SHORT $LN1@dsound_sto

; 124  : 	{
; 125  : 
; 126  : 		debug_log ( "Unable to stop buffer: %s", get_dsound_error_message ( dsrval ) );

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  00068	50		 push	 eax
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DMFHPDEI@Unable?5to?5stop?5buffer?3?5?$CFs@
  0006e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00073	83 c4 08	 add	 esp, 8
$LN1@dsound_sto:

; 127  : 	}
; 128  : }

  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 04 00	 ret	 4
?dsound_stop_sound_buffer@@YGXPAUIDirectSoundBuffer@@@Z ENDP ; dsound_stop_sound_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\sound\dsound.c
;	COMDAT ?dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z
_TEXT	SEGMENT
_dsrval$ = -4						; size = 4
_buffer$ = 8						; size = 4
_loop$ = 12						; size = 4
?dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z PROC ; dsound_play_sound_buffer, COMDAT

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 77   : 
; 78   : 	HRESULT
; 79   : 		dsrval;
; 80   : 
; 81   : 	ASSERT ( buffer );

  00009	83 7d 08 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@dsound_pla
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06HOHPNJLC@buffer@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@dsound_pla:

; 82   : 	ASSERT ( dsound );

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dsound@@3PAUIDirectSound@@A, 0 ; dsound
  0002e	75 18		 jne	 SHORT $LN3@dsound_pla
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CMGCAMHJ@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06JEIHMPKD@dsound@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@dsound_pla:

; 83   : 
; 84   : 	if ( loop )

  00048	83 7d 0c 00	 cmp	 DWORD PTR _loop$[ebp], 0
  0004c	74 36		 je	 SHORT $LN4@dsound_pla

; 85   : 	{
; 86   : 
; 87   : 		dsrval = IDirectSoundBuffer_Play ( buffer, 0, 0, DSBPLAY_LOOPING );

  0004e	6a 01		 push	 1
  00050	6a 00		 push	 0
  00052	6a 00		 push	 0
  00054	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  0005c	52		 push	 edx
  0005d	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00060	ff d0		 call	 eax
  00062	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 88   : 
; 89   : 		if ( dsrval != DS_OK )

  00065	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  00069	74 17		 je	 SHORT $LN6@dsound_pla

; 90   : 		{
; 91   : 
; 92   : 			debug_log ( "Unable to play sound buffer looped: %s", get_dsound_error_message ( dsrval ) );

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@IJDBIHHK@Unable?5to?5play?5sound?5buffer?5loo@
  0007a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0007f	83 c4 08	 add	 esp, 8
$LN6@dsound_pla:

; 93   : 		}
; 94   : 	}
; 95   : 	else

  00082	eb 34		 jmp	 SHORT $LN1@dsound_pla
$LN4@dsound_pla:

; 96   : 	{
; 97   : 
; 98   : 		dsrval = IDirectSoundBuffer_Play ( buffer, 0, 0, 0 );

  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0008d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008f	8b 55 08	 mov	 edx, DWORD PTR _buffer$[ebp]
  00092	52		 push	 edx
  00093	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00096	ff d0		 call	 eax
  00098	89 45 fc	 mov	 DWORD PTR _dsrval$[ebp], eax

; 99   : 
; 100  : 		if ( dsrval != DS_OK )

  0009b	83 7d fc 00	 cmp	 DWORD PTR _dsrval$[ebp], 0
  0009f	74 17		 je	 SHORT $LN1@dsound_pla

; 101  : 		{
; 102  : 
; 103  : 			debug_log ( "Unable to play sound buffer: %s", get_dsound_error_message ( dsrval ) );

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _dsrval$[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?get_dsound_error_message@@YGPBDJ@Z ; get_dsound_error_message
  000aa	50		 push	 eax
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@EOEFNGNG@Unable?5to?5play?5sound?5buffer?3?5?$CFs@
  000b0	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000b5	83 c4 08	 add	 esp, 8
$LN1@dsound_pla:

; 104  : 		}
; 105  : 	}
; 106  : }

  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8
?dsound_play_sound_buffer@@YGXPAUIDirectSoundBuffer@@H@Z ENDP ; dsound_play_sound_buffer
_TEXT	ENDS
END
