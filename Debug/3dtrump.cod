; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\clouds\3dtrump.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?cloud_3d_trumpet_blend_start@@3MA		; cloud_3d_trumpet_blend_start
PUBLIC	?cloud_3d_trumpet_blend_end@@3MA		; cloud_3d_trumpet_blend_end
PUBLIC	?cloud_3d_trumpet_blend_distance@@3MA		; cloud_3d_trumpet_blend_distance
PUBLIC	?cloud_3d_trumpet_blend_start_squared@@3MA	; cloud_3d_trumpet_blend_start_squared
PUBLIC	?cloud_3d_trumpet_blend_distance_squared@@3MA	; cloud_3d_trumpet_blend_distance_squared
PUBLIC	?cloud_3d_trumpet_blend_constant@@3MA		; cloud_3d_trumpet_blend_constant
PUBLIC	?cloud_3d_trumpet_blend_factor@@3MA		; cloud_3d_trumpet_blend_factor
_BSS	SEGMENT
?cloud_3d_trumpet_blend_start@@3MA DD 01H DUP (?)	; cloud_3d_trumpet_blend_start
?cloud_3d_trumpet_blend_end@@3MA DD 01H DUP (?)		; cloud_3d_trumpet_blend_end
?cloud_3d_trumpet_blend_distance@@3MA DD 01H DUP (?)	; cloud_3d_trumpet_blend_distance
?cloud_3d_trumpet_blend_start_squared@@3MA DD 01H DUP (?) ; cloud_3d_trumpet_blend_start_squared
?cloud_3d_trumpet_blend_distance_squared@@3MA DD 01H DUP (?) ; cloud_3d_trumpet_blend_distance_squared
?cloud_3d_trumpet_blend_constant@@3MA DD 01H DUP (?)	; cloud_3d_trumpet_blend_constant
?cloud_3d_trumpet_blend_factor@@3MA DD 01H DUP (?)	; cloud_3d_trumpet_blend_factor
_BSS	ENDS
PUBLIC	_atan2f
PUBLIC	_fabsf
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?generate_lookup_outcode@@YGHHHHH@Z		; generate_lookup_outcode
PUBLIC	?set_3d_cloud_trumpet_object@@YGXH@Z		; set_3d_cloud_trumpet_object
PUBLIC	?draw_3d_cloud_trumpet@@YGXXZ			; draw_3d_cloud_trumpet
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@3feccccccccccccd
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@42c80000
PUBLIC	__real@43480000
PUBLIC	__real@43960000
PUBLIC	__real@46800000
EXTRN	_atan2:PROC
EXTRN	_fabs:PROC
EXTRN	?set_fpu_precision_mode_single@@YGXXZ:PROC	; set_fpu_precision_mode_single
EXTRN	?set_fpu_precision_mode_double@@YGXXZ:PROC	; set_fpu_precision_mode_double
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z:PROC	; clip_3d_polygon
EXTRN	?set_d3d_fog_face_intensity@@YGXH@Z:PROC	; set_d3d_fog_face_intensity
EXTRN	?suspend_d3d_fog@@YGXXZ:PROC			; suspend_d3d_fog
EXTRN	?reinstate_d3d_fog@@YGXXZ:PROC			; reinstate_d3d_fog
EXTRN	?get_object_approximation_number@@YGHHMPAH@Z:PROC ; get_object_approximation_number
EXTRN	?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z:PROC ; construct_3d_object
EXTRN	?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z:PROC ; hither_clip_3d_polygon
EXTRN	?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; apply_perspective_to_polygon_texture
EXTRN	?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; remove_perspective_from_polygon_texture
EXTRN	?set_object_3d_instance_relative_position@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; set_object_3d_instance_relative_position
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?clip_3d_coord@@3HA:DWORD			; clip_3d_coord
EXTRN	?clip_hither@@3MA:DWORD				; clip_hither
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	?visual_3d_vp@@3PAUVIEWPOINT@@A:DWORD		; visual_3d_vp
EXTRN	?objects_3d_data@@3PAUOBJECT_3D@@A:DWORD	; objects_3d_data
EXTRN	?rotation_3d@@3PAY02MA:BYTE			; rotation_3d
EXTRN	?transformed_3d_points@@3PAUVERTEX@@A:BYTE	; transformed_3d_points
EXTRN	?cloud_3d_base_height@@3MA:DWORD		; cloud_3d_base_height
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?cloud_trumpet_object@@3PAUOBJECT_3D_INSTANCE@@A DD 01H DUP (?) ; cloud_trumpet_object
?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A DB 0c00H DUP (?) ; cloud_trumpet_texture_values
_BSS	ENDS
;	COMDAT __real@46800000
CONST	SEGMENT
__real@46800000 DD 046800000r			; 16384
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\3dtrump.c
;	COMDAT ?construct_3d_cloud_trumpet_polygon@@YGPAUVERTEX@@HPAUPOINT_3D_PLAIN_REFERENCE@@PAH@Z
_TEXT	SEGMENT
_previous_point$ = -24					; size = 4
_this_point$ = -20					; size = 4
_first_point$ = -16					; size = 4
_outcode2$ = -12					; size = 4
_outcode$ = -8						; size = 4
_count$ = -4						; size = 4
_num_points$ = 8					; size = 4
_points$ = 12						; size = 4
_polygon_outcode$ = 16					; size = 4
?construct_3d_cloud_trumpet_polygon@@YGPAUVERTEX@@HPAUPOINT_3D_PLAIN_REFERENCE@@PAH@Z PROC ; construct_3d_cloud_trumpet_polygon, COMDAT

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 597  : 
; 598  : 	int
; 599  : 		count,
; 600  : 		outcode,
; 601  : 		outcode2,
; 602  : 		first_point,
; 603  : 		this_point,
; 604  : 		previous_point;
; 605  : 
; 606  : 	//
; 607  : 	// Always do 3 points in a face, cos they're guaranteed
; 608  : 	//
; 609  : 
; 610  : 	first_point = points[0].point;

  00009	b8 02 00 00 00	 mov	 eax, 2
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8b 55 0c	 mov	 edx, DWORD PTR _points$[ebp]
  00014	0f b7 04 0a	 movzx	 eax, WORD PTR [edx+ecx]
  00018	89 45 f0	 mov	 DWORD PTR _first_point$[ebp], eax

; 611  : 	transformed_3d_points[first_point].u = cloud_trumpet_texture_values[first_point].u;

  0001b	6b 45 f0 0c	 imul	 eax, DWORD PTR _first_point$[ebp], 12
  0001f	8b 4d f0	 mov	 ecx, DWORD PTR _first_point$[ebp]
  00022	c1 e1 06	 shl	 ecx, 6
  00025	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax]
  0002b	89 91 18 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+24], edx

; 612  : 	transformed_3d_points[first_point].v = cloud_trumpet_texture_values[first_point].v;

  00031	6b 45 f0 0c	 imul	 eax, DWORD PTR _first_point$[ebp], 12
  00035	8b 4d f0	 mov	 ecx, DWORD PTR _first_point$[ebp]
  00038	c1 e1 06	 shl	 ecx, 6
  0003b	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+4]
  00041	89 91 1c 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+28], edx

; 613  : 	transformed_3d_points[first_point].alpha = cloud_trumpet_texture_values[first_point].alpha;

  00047	6b 45 f0 0c	 imul	 eax, DWORD PTR _first_point$[ebp], 12
  0004b	f3 0f 2c 88 08
	00 00 00	 cvttss2si ecx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+8]
  00053	8b 55 f0	 mov	 edx, DWORD PTR _first_point$[ebp]
  00056	c1 e2 06	 shl	 edx, 6
  00059	88 8a 33 00 00
	00		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[edx+51], cl

; 614  : 	transformed_3d_points[first_point].red = 1;

  0005f	8b 45 f0	 mov	 eax, DWORD PTR _first_point$[ebp]
  00062	c1 e0 06	 shl	 eax, 6
  00065	c6 80 32 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+50], 1

; 615  : 	transformed_3d_points[first_point].green = 1;

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _first_point$[ebp]
  0006f	c1 e0 06	 shl	 eax, 6
  00072	c6 80 31 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+49], 1

; 616  : 	transformed_3d_points[first_point].blue = 1;

  00079	8b 45 f0	 mov	 eax, DWORD PTR _first_point$[ebp]
  0007c	c1 e0 06	 shl	 eax, 6
  0007f	c6 80 30 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+48], 1

; 617  : 	outcode = transformed_3d_points[ first_point ].outcode;

  00086	8b 45 f0	 mov	 eax, DWORD PTR _first_point$[ebp]
  00089	c1 e0 06	 shl	 eax, 6
  0008c	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  00093	89 4d f8	 mov	 DWORD PTR _outcode$[ebp], ecx

; 618  : 	outcode2 = transformed_3d_points[ first_point ].outcode;

  00096	8b 45 f0	 mov	 eax, DWORD PTR _first_point$[ebp]
  00099	c1 e0 06	 shl	 eax, 6
  0009c	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  000a3	89 4d f4	 mov	 DWORD PTR _outcode2$[ebp], ecx

; 619  : 
; 620  : 	//
; 621  : 	// Second point
; 622  : 	//
; 623  : 
; 624  : 	previous_point = points[1].point;

  000a6	b8 02 00 00 00	 mov	 eax, 2
  000ab	c1 e0 00	 shl	 eax, 0
  000ae	8b 4d 0c	 mov	 ecx, DWORD PTR _points$[ebp]
  000b1	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  000b5	89 55 e8	 mov	 DWORD PTR _previous_point$[ebp], edx

; 625  : 	transformed_3d_points[previous_point].u = cloud_trumpet_texture_values[previous_point].u;

  000b8	6b 45 e8 0c	 imul	 eax, DWORD PTR _previous_point$[ebp], 12
  000bc	8b 4d e8	 mov	 ecx, DWORD PTR _previous_point$[ebp]
  000bf	c1 e1 06	 shl	 ecx, 6
  000c2	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax]
  000c8	89 91 18 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+24], edx

; 626  : 	transformed_3d_points[previous_point].v = cloud_trumpet_texture_values[previous_point].v;

  000ce	6b 45 e8 0c	 imul	 eax, DWORD PTR _previous_point$[ebp], 12
  000d2	8b 4d e8	 mov	 ecx, DWORD PTR _previous_point$[ebp]
  000d5	c1 e1 06	 shl	 ecx, 6
  000d8	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+4]
  000de	89 91 1c 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+28], edx

; 627  : 	transformed_3d_points[previous_point].alpha = cloud_trumpet_texture_values[previous_point].alpha;

  000e4	6b 45 e8 0c	 imul	 eax, DWORD PTR _previous_point$[ebp], 12
  000e8	f3 0f 2c 88 08
	00 00 00	 cvttss2si ecx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+8]
  000f0	8b 55 e8	 mov	 edx, DWORD PTR _previous_point$[ebp]
  000f3	c1 e2 06	 shl	 edx, 6
  000f6	88 8a 33 00 00
	00		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[edx+51], cl

; 628  : 	transformed_3d_points[previous_point].red = 1;

  000fc	8b 45 e8	 mov	 eax, DWORD PTR _previous_point$[ebp]
  000ff	c1 e0 06	 shl	 eax, 6
  00102	c6 80 32 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+50], 1

; 629  : 	transformed_3d_points[previous_point].green = 1;

  00109	8b 45 e8	 mov	 eax, DWORD PTR _previous_point$[ebp]
  0010c	c1 e0 06	 shl	 eax, 6
  0010f	c6 80 31 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+49], 1

; 630  : 	transformed_3d_points[previous_point].blue = 1;

  00116	8b 45 e8	 mov	 eax, DWORD PTR _previous_point$[ebp]
  00119	c1 e0 06	 shl	 eax, 6
  0011c	c6 80 30 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+48], 1

; 631  : 	outcode |= transformed_3d_points[ previous_point ].outcode;

  00123	8b 45 e8	 mov	 eax, DWORD PTR _previous_point$[ebp]
  00126	c1 e0 06	 shl	 eax, 6
  00129	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  00130	0b 4d f8	 or	 ecx, DWORD PTR _outcode$[ebp]
  00133	89 4d f8	 mov	 DWORD PTR _outcode$[ebp], ecx

; 632  : 	outcode2 &= transformed_3d_points[ previous_point ].outcode;

  00136	8b 45 e8	 mov	 eax, DWORD PTR _previous_point$[ebp]
  00139	c1 e0 06	 shl	 eax, 6
  0013c	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  00143	23 4d f4	 and	 ecx, DWORD PTR _outcode2$[ebp]
  00146	89 4d f4	 mov	 DWORD PTR _outcode2$[ebp], ecx

; 633  : 	transformed_3d_points[ first_point ] .next_vertex = & transformed_3d_points [ previous_point ];

  00149	8b 45 e8	 mov	 eax, DWORD PTR _previous_point$[ebp]
  0014c	c1 e0 06	 shl	 eax, 6
  0014f	05 00 00 00 00	 add	 eax, OFFSET ?transformed_3d_points@@3PAUVERTEX@@A ; transformed_3d_points
  00154	8b 4d f0	 mov	 ecx, DWORD PTR _first_point$[ebp]
  00157	c1 e1 06	 shl	 ecx, 6
  0015a	89 81 28 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+40], eax

; 634  : 
; 635  : 	//
; 636  : 	// Third point
; 637  : 	//
; 638  : 
; 639  : 	this_point = points[2].point;

  00160	b8 02 00 00 00	 mov	 eax, 2
  00165	d1 e0		 shl	 eax, 1
  00167	8b 4d 0c	 mov	 ecx, DWORD PTR _points$[ebp]
  0016a	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  0016e	89 55 ec	 mov	 DWORD PTR _this_point$[ebp], edx

; 640  : 	transformed_3d_points[this_point].u = cloud_trumpet_texture_values[this_point].u;

  00171	6b 45 ec 0c	 imul	 eax, DWORD PTR _this_point$[ebp], 12
  00175	8b 4d ec	 mov	 ecx, DWORD PTR _this_point$[ebp]
  00178	c1 e1 06	 shl	 ecx, 6
  0017b	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax]
  00181	89 91 18 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+24], edx

; 641  : 	transformed_3d_points[this_point].v = cloud_trumpet_texture_values[this_point].v;

  00187	6b 45 ec 0c	 imul	 eax, DWORD PTR _this_point$[ebp], 12
  0018b	8b 4d ec	 mov	 ecx, DWORD PTR _this_point$[ebp]
  0018e	c1 e1 06	 shl	 ecx, 6
  00191	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+4]
  00197	89 91 1c 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+28], edx

; 642  : 	transformed_3d_points[this_point].alpha = cloud_trumpet_texture_values[this_point].alpha;

  0019d	6b 45 ec 0c	 imul	 eax, DWORD PTR _this_point$[ebp], 12
  001a1	f3 0f 2c 88 08
	00 00 00	 cvttss2si ecx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+8]
  001a9	8b 55 ec	 mov	 edx, DWORD PTR _this_point$[ebp]
  001ac	c1 e2 06	 shl	 edx, 6
  001af	88 8a 33 00 00
	00		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[edx+51], cl

; 643  : 	transformed_3d_points[this_point].red = 1;

  001b5	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  001b8	c1 e0 06	 shl	 eax, 6
  001bb	c6 80 32 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+50], 1

; 644  : 	transformed_3d_points[this_point].green = 1;

  001c2	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  001c5	c1 e0 06	 shl	 eax, 6
  001c8	c6 80 31 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+49], 1

; 645  : 	transformed_3d_points[this_point].blue = 1;

  001cf	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  001d2	c1 e0 06	 shl	 eax, 6
  001d5	c6 80 30 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+48], 1

; 646  : 	outcode |= transformed_3d_points[ this_point ].outcode;

  001dc	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  001df	c1 e0 06	 shl	 eax, 6
  001e2	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  001e9	0b 4d f8	 or	 ecx, DWORD PTR _outcode$[ebp]
  001ec	89 4d f8	 mov	 DWORD PTR _outcode$[ebp], ecx

; 647  : 	outcode2 &= transformed_3d_points[ this_point ].outcode;

  001ef	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  001f2	c1 e0 06	 shl	 eax, 6
  001f5	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  001fc	23 4d f4	 and	 ecx, DWORD PTR _outcode2$[ebp]
  001ff	89 4d f4	 mov	 DWORD PTR _outcode2$[ebp], ecx

; 648  : 	transformed_3d_points[ previous_point ] .next_vertex = & transformed_3d_points [ this_point ];

  00202	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  00205	c1 e0 06	 shl	 eax, 6
  00208	05 00 00 00 00	 add	 eax, OFFSET ?transformed_3d_points@@3PAUVERTEX@@A ; transformed_3d_points
  0020d	8b 4d e8	 mov	 ecx, DWORD PTR _previous_point$[ebp]
  00210	c1 e1 06	 shl	 ecx, 6
  00213	89 81 28 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+40], eax

; 649  : 
; 650  : 	previous_point = this_point;

  00219	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  0021c	89 45 e8	 mov	 DWORD PTR _previous_point$[ebp], eax

; 651  : 
; 652  : 	for ( count = 3; count < num_points; count++ )

  0021f	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _count$[ebp], 3
  00226	eb 09		 jmp	 SHORT $LN4@construct_
$LN2@construct_:
  00228	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0022b	83 c0 01	 add	 eax, 1
  0022e	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@construct_:
  00231	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00234	3b 45 08	 cmp	 eax, DWORD PTR _num_points$[ebp]
  00237	0f 8d c0 00 00
	00		 jge	 $LN3@construct_

; 653  : 	{
; 654  : 
; 655  : 		this_point = points[count].point;

  0023d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00240	8b 4d 0c	 mov	 ecx, DWORD PTR _points$[ebp]
  00243	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00247	89 55 ec	 mov	 DWORD PTR _this_point$[ebp], edx

; 656  : 		transformed_3d_points[this_point].u = cloud_trumpet_texture_values[this_point].u;

  0024a	6b 45 ec 0c	 imul	 eax, DWORD PTR _this_point$[ebp], 12
  0024e	8b 4d ec	 mov	 ecx, DWORD PTR _this_point$[ebp]
  00251	c1 e1 06	 shl	 ecx, 6
  00254	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax]
  0025a	89 91 18 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+24], edx

; 657  : 		transformed_3d_points[this_point].v = cloud_trumpet_texture_values[this_point].v;

  00260	6b 45 ec 0c	 imul	 eax, DWORD PTR _this_point$[ebp], 12
  00264	8b 4d ec	 mov	 ecx, DWORD PTR _this_point$[ebp]
  00267	c1 e1 06	 shl	 ecx, 6
  0026a	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+4]
  00270	89 91 1c 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+28], edx

; 658  : 		transformed_3d_points[this_point].alpha = cloud_trumpet_texture_values[this_point].alpha;

  00276	6b 45 ec 0c	 imul	 eax, DWORD PTR _this_point$[ebp], 12
  0027a	f3 0f 2c 88 08
	00 00 00	 cvttss2si ecx, DWORD PTR ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A[eax+8]
  00282	8b 55 ec	 mov	 edx, DWORD PTR _this_point$[ebp]
  00285	c1 e2 06	 shl	 edx, 6
  00288	88 8a 33 00 00
	00		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[edx+51], cl

; 659  : 		transformed_3d_points[this_point].red= 1;

  0028e	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  00291	c1 e0 06	 shl	 eax, 6
  00294	c6 80 32 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+50], 1

; 660  : 		transformed_3d_points[this_point].green = 1;

  0029b	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  0029e	c1 e0 06	 shl	 eax, 6
  002a1	c6 80 31 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+49], 1

; 661  : 		transformed_3d_points[this_point].blue = 1;

  002a8	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  002ab	c1 e0 06	 shl	 eax, 6
  002ae	c6 80 30 00 00
	00 01		 mov	 BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+48], 1

; 662  : 		outcode |= transformed_3d_points[this_point].outcode;

  002b5	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  002b8	c1 e0 06	 shl	 eax, 6
  002bb	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  002c2	0b 4d f8	 or	 ecx, DWORD PTR _outcode$[ebp]
  002c5	89 4d f8	 mov	 DWORD PTR _outcode$[ebp], ecx

; 663  : 		outcode2 &= transformed_3d_points[this_point].outcode;

  002c8	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  002cb	c1 e0 06	 shl	 eax, 6
  002ce	0f b6 88 2c 00
	00 00		 movzx	 ecx, BYTE PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+44]
  002d5	23 4d f4	 and	 ecx, DWORD PTR _outcode2$[ebp]
  002d8	89 4d f4	 mov	 DWORD PTR _outcode2$[ebp], ecx

; 664  : 		transformed_3d_points[previous_point].next_vertex = &transformed_3d_points[this_point];

  002db	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  002de	c1 e0 06	 shl	 eax, 6
  002e1	05 00 00 00 00	 add	 eax, OFFSET ?transformed_3d_points@@3PAUVERTEX@@A ; transformed_3d_points
  002e6	8b 4d e8	 mov	 ecx, DWORD PTR _previous_point$[ebp]
  002e9	c1 e1 06	 shl	 ecx, 6
  002ec	89 81 28 00 00
	00		 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[ecx+40], eax

; 665  : 
; 666  : 		previous_point = this_point;

  002f2	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  002f5	89 45 e8	 mov	 DWORD PTR _previous_point$[ebp], eax

; 667  : 	}

  002f8	e9 2b ff ff ff	 jmp	 $LN2@construct_
$LN3@construct_:

; 668  : 
; 669  : 	transformed_3d_points[this_point].next_vertex = NULL;

  002fd	8b 45 ec	 mov	 eax, DWORD PTR _this_point$[ebp]
  00300	c1 e0 06	 shl	 eax, 6
  00303	c7 80 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?transformed_3d_points@@3PAUVERTEX@@A[eax+40], 0

; 670  : 
; 671  : 	if ( outcode2 )

  0030d	83 7d f4 00	 cmp	 DWORD PTR _outcode2$[ebp], 0
  00311	74 06		 je	 SHORT $LN5@construct_

; 672  : 	{
; 673  : 
; 674  : 		// The polygon is totally off the screen!
; 675  : 
; 676  : 		return ( NULL );

  00313	33 c0		 xor	 eax, eax
  00315	eb 15		 jmp	 SHORT $LN6@construct_

; 677  : 	}
; 678  : 	else

  00317	eb 13		 jmp	 SHORT $LN6@construct_
$LN5@construct_:

; 679  : 	{
; 680  : 
; 681  : 		*polygon_outcode = outcode;

  00319	8b 45 10	 mov	 eax, DWORD PTR _polygon_outcode$[ebp]
  0031c	8b 4d f8	 mov	 ecx, DWORD PTR _outcode$[ebp]
  0031f	89 08		 mov	 DWORD PTR [eax], ecx

; 682  : 	
; 683  : 		return ( &transformed_3d_points[ first_point ] );

  00321	8b 45 f0	 mov	 eax, DWORD PTR _first_point$[ebp]
  00324	c1 e0 06	 shl	 eax, 6
  00327	05 00 00 00 00	 add	 eax, OFFSET ?transformed_3d_points@@3PAUVERTEX@@A ; transformed_3d_points
$LN6@construct_:

; 684  : 	}
; 685  : }

  0032c	5f		 pop	 edi
  0032d	5e		 pop	 esi
  0032e	5b		 pop	 ebx
  0032f	8b e5		 mov	 esp, ebp
  00331	5d		 pop	 ebp
  00332	c2 0c 00	 ret	 12			; 0000000cH
?construct_3d_cloud_trumpet_polygon@@YGPAUVERTEX@@HPAUPOINT_3D_PLAIN_REFERENCE@@PAH@Z ENDP ; construct_3d_cloud_trumpet_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\3dtrump.c
;	COMDAT ?render_3d_cloud_trumpet_face@@YGXPAUOBJECT_3D_FACE@@HHPAUOBJECT_3D_INFO@@@Z
_TEXT	SEGMENT
_point_list$1 = -16					; size = 4
_outcode$2 = -12					; size = 4
_poly$3 = -8						; size = 4
_surface$ = -4						; size = 4
_this_face$ = 8						; size = 4
_surface_index$ = 12					; size = 4
_reference_offset$ = 16					; size = 4
_object_base$ = 20					; size = 4
?render_3d_cloud_trumpet_face@@YGXPAUOBJECT_3D_FACE@@HHPAUOBJECT_3D_INFO@@@Z PROC ; render_3d_cloud_trumpet_face, COMDAT

; 524  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 525  : 
; 526  : 	face_surface_description
; 527  : 		*surface;
; 528  : 
; 529  : 	clip_3d_coord = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 530  : 
; 531  : 	surface = &objects_3d_data[ object_base->object_number ].surfaces[surface_index];

  00013	8b 45 14	 mov	 eax, DWORD PTR _object_base$[ebp]
  00016	6b 48 20 68	 imul	 ecx, DWORD PTR [eax+32], 104
  0001a	8b 55 0c	 mov	 edx, DWORD PTR _surface_index$[ebp]
  0001d	c1 e2 04	 shl	 edx, 4
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00025	03 54 08 50	 add	 edx, DWORD PTR [eax+ecx+80]
  00029	89 55 fc	 mov	 DWORD PTR _surface$[ebp], edx

; 532  : 
; 533  : 
; 534  : 	{
; 535  : 
; 536  : 		vertex
; 537  : 			*poly;
; 538  : 
; 539  : 		int
; 540  : 			outcode;
; 541  : 	
; 542  : 		point_3d_plain_reference
; 543  : 			*point_list;
; 544  : 
; 545  : 		point_list = NULL;	//objects_3d_data[object_base->object_number].object_faces_point_plain_list;

  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _point_list$1[ebp], 0

; 546  : 
; 547  : 		point_list += reference_offset;

  00033	8b 45 10	 mov	 eax, DWORD PTR _reference_offset$[ebp]
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _point_list$1[ebp]
  00039	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0003c	89 55 f0	 mov	 DWORD PTR _point_list$1[ebp], edx

; 548  : 
; 549  : 		poly = construct_3d_cloud_trumpet_polygon ( this_face->number_of_points,

  0003f	8d 45 f4	 lea	 eax, DWORD PTR _outcode$2[ebp]
  00042	50		 push	 eax
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _point_list$1[ebp]
  00046	51		 push	 ecx
  00047	8b 55 08	 mov	 edx, DWORD PTR _this_face$[ebp]
  0004a	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?construct_3d_cloud_trumpet_polygon@@YGPAUVERTEX@@HPAUPOINT_3D_PLAIN_REFERENCE@@PAH@Z ; construct_3d_cloud_trumpet_polygon
  00053	89 45 f8	 mov	 DWORD PTR _poly$3[ebp], eax

; 550  : 																	point_list,
; 551  : 																	&outcode );
; 552  : 		if ( !poly )

  00056	83 7d f8 00	 cmp	 DWORD PTR _poly$3[ebp], 0
  0005a	75 02		 jne	 SHORT $LN2@render_3d_

; 553  : 		{
; 554  : 
; 555  : 			return;

  0005c	eb 50		 jmp	 SHORT $LN1@render_3d_
$LN2@render_3d_:

; 556  : 		}
; 557  : 
; 558  : 		if ( outcode & CLIP_HITHER )

  0005e	8b 45 f4	 mov	 eax, DWORD PTR _outcode$2[ebp]
  00061	83 e0 20	 and	 eax, 32			; 00000020H
  00064	74 18		 je	 SHORT $LN3@render_3d_

; 559  : 		{
; 560  : 	
; 561  : 			poly = hither_clip_3d_polygon ( poly, &outcode );

  00066	8d 45 f4	 lea	 eax, DWORD PTR _outcode$2[ebp]
  00069	50		 push	 eax
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR _poly$3[ebp]
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00073	89 45 f8	 mov	 DWORD PTR _poly$3[ebp], eax

; 562  : 
; 563  : 			if ( !poly )

  00076	83 7d f8 00	 cmp	 DWORD PTR _poly$3[ebp], 0
  0007a	75 02		 jne	 SHORT $LN3@render_3d_

; 564  : 			{
; 565  : 
; 566  : 				return;

  0007c	eb 30		 jmp	 SHORT $LN1@render_3d_
$LN3@render_3d_:

; 567  : 			}
; 568  : 		}
; 569  : 	
; 570  : 		if ( outcode )

  0007e	83 7d f4 00	 cmp	 DWORD PTR _outcode$2[ebp], 0
  00082	74 2a		 je	 SHORT $LN1@render_3d_

; 571  : 		{
; 572  : 
; 573  : 			apply_perspective_to_polygon_texture ( poly );

  00084	8b 45 f8	 mov	 eax, DWORD PTR _poly$3[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 574  : 			
; 575  : 			poly = clip_3d_polygon ( poly, outcode );

  0008d	8b 45 f4	 mov	 eax, DWORD PTR _outcode$2[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _poly$3[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  0009a	89 45 f8	 mov	 DWORD PTR _poly$3[ebp], eax

; 576  : 
; 577  : 			if ( !poly )

  0009d	83 7d f8 00	 cmp	 DWORD PTR _poly$3[ebp], 0
  000a1	75 02		 jne	 SHORT $LN6@render_3d_

; 578  : 			{
; 579  : 
; 580  : 				return;

  000a3	eb 09		 jmp	 SHORT $LN1@render_3d_
$LN6@render_3d_:

; 581  : 			}
; 582  : 
; 583  : 			remove_perspective_from_polygon_texture ( poly );

  000a5	8b 45 f8	 mov	 eax, DWORD PTR _poly$3[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN1@render_3d_:

; 584  : 		}
; 585  : 	
; 586  : //		buffer_translucent_gouraud_shaded_textured_polygon ( poly, &system_textures[TEXTURE_INDEX_CLOUDDRY],
; 587  : //																				D3DFILTER_LINEAR, D3DFILTER_MIPLINEAR, D3DTADDRESS_WRAP );
; 588  : 	}
; 589  : }

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 10 00	 ret	 16			; 00000010H
?render_3d_cloud_trumpet_face@@YGXPAUOBJECT_3D_FACE@@HHPAUOBJECT_3D_INFO@@@Z ENDP ; render_3d_cloud_trumpet_face
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\3dtrump.c
;	COMDAT ?transform_3d_cloud_trumpet@@YGXPAUOBJECT_3D@@PAUVIEWPOINT@@PAUVEC3D@@@Z
_TEXT	SEGMENT
_j$1 = -156						; size = 4
_i$2 = -152						; size = 4
_q$3 = -148						; size = 4
_z$4 = -144						; size = 4
_y$5 = -140						; size = 4
_x$6 = -136						; size = 4
_z_world$7 = -132					; size = 4
_y_world$8 = -128					; size = 4
_x_world$9 = -124					; size = 4
_texture_values$ = -120					; size = 4
_iymin$ = -116						; size = 4
_iymax$ = -112						; size = 4
_ixmin$ = -108						; size = 4
_ixmax$ = -104						; size = 4
_oymin$ = -100						; size = 4
_oymax$ = -96						; size = 4
_oxmin$ = -92						; size = 4
_oxmax$ = -88						; size = 4
_tmp_vertex$ = -84					; size = 64
_result_points$ = -20					; size = 4
_last_transformed_point$ = -16				; size = 4
_points$ = -12						; size = 4
_number_of_points$ = -8					; size = 4
_count$ = -4						; size = 4
_object$ = 8						; size = 4
_vp$ = 12						; size = 4
_relative_position$ = 16				; size = 4
?transform_3d_cloud_trumpet@@YGXPAUOBJECT_3D@@PAUVIEWPOINT@@PAUVEC3D@@@Z PROC ; transform_3d_cloud_trumpet, COMDAT

; 344  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 345  : 
; 346  : 	int
; 347  : 		count,
; 348  : 		number_of_points;
; 349  : 
; 350  : 	object_short_3d_point
; 351  : 		*points;
; 352  : 
; 353  : 	vertex
; 354  : 		*last_transformed_point,
; 355  : 		*result_points,
; 356  : 		tmp_vertex;
; 357  : 
; 358  : 	float
; 359  : 		oxmax,
; 360  : 		oxmin,
; 361  : 		oymax,
; 362  : 		oymin;
; 363  : 
; 364  : 	int
; 365  : 		ixmax,
; 366  : 		ixmin,
; 367  : 		iymax,
; 368  : 		iymin;
; 369  : 
; 370  : 	cloud_trumpet_texture_info
; 371  : 		*texture_values;
; 372  : 
; 373  : 	//
; 374  : 	// We only need the fpu to be in single precision mode
; 375  : 	//
; 376  : 
; 377  : 	set_fpu_precision_mode_single ();

  0000c	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_single@@YGXXZ ; set_fpu_precision_mode_single

; 378  : 
; 379  : 	number_of_points = object->number_of_points;

  00011	8b 45 08	 mov	 eax, DWORD PTR _object$[ebp]
  00014	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00017	89 4d f8	 mov	 DWORD PTR _number_of_points$[ebp], ecx

; 380  : 
; 381  : 	points = object->points;

  0001a	8b 45 08	 mov	 eax, DWORD PTR _object$[ebp]
  0001d	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00020	89 4d f4	 mov	 DWORD PTR _points$[ebp], ecx

; 382  : 
; 383  : 	result_points = transformed_3d_points;

  00023	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _result_points$[ebp], OFFSET ?transformed_3d_points@@3PAUVERTEX@@A ; transformed_3d_points

; 384  : 
; 385  : 	texture_values = cloud_trumpet_texture_values;

  0002a	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _texture_values$[ebp], OFFSET ?cloud_trumpet_texture_values@@3PAUCLOUD_TRUMPET_TEXTURE_INFO@@A

; 386  : 
; 387  : 	last_transformed_point = &tmp_vertex;

  00031	8d 45 ac	 lea	 eax, DWORD PTR _tmp_vertex$[ebp]
  00034	89 45 f0	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 388  : 
; 389  : 	for ( count = number_of_points; count > 0; count-- )

  00037	8b 45 f8	 mov	 eax, DWORD PTR _number_of_points$[ebp]
  0003a	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
  0003d	eb 09		 jmp	 SHORT $LN4@transform_
$LN2@transform_:
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00042	83 e8 01	 sub	 eax, 1
  00045	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@transform_:
  00048	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  0004c	0f 8e 11 06 00
	00		 jle	 $LN3@transform_

; 390  : 	{
; 391  : 
; 392  : 		{
; 393  : 
; 394  : 			float
; 395  : 				x_world,
; 396  : 				y_world,
; 397  : 				z_world,
; 398  : 				x,
; 399  : 				y,
; 400  : 				z;
; 401  : 
; 402  : 			x_world = points->x * vp->attitude[0][0] + points->y * vp->attitude[1][0] + points->z * vp->attitude[2][0] + vp->position.x;

  00052	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  00055	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00058	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0005c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00061	6b c2 00	 imul	 eax, edx, 0
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _vp$[ebp]
  00067	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0006b	b8 04 00 00 00	 mov	 eax, 4
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00078	8b 55 f4	 mov	 edx, DWORD PTR _points$[ebp]
  0007b	0f bf 42 02	 movsx	 eax, WORD PTR [edx+2]
  0007f	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  00083	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00088	c1 e1 00	 shl	 ecx, 0
  0008b	8b 55 0c	 mov	 edx, DWORD PTR _vp$[ebp]
  0008e	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00092	b9 04 00 00 00	 mov	 ecx, 4
  00097	6b d1 00	 imul	 edx, ecx, 0
  0009a	f3 0f 59 0c 10	 mulss	 xmm1, DWORD PTR [eax+edx]
  0009f	f3 0f 58 c1	 addss	 xmm0, xmm1
  000a3	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  000a6	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  000aa	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  000ae	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000b3	d1 e2		 shl	 edx, 1
  000b5	8b 45 0c	 mov	 eax, DWORD PTR _vp$[ebp]
  000b8	8d 4c 10 0c	 lea	 ecx, DWORD PTR [eax+edx+12]
  000bc	ba 04 00 00 00	 mov	 edx, 4
  000c1	6b c2 00	 imul	 eax, edx, 0
  000c4	f3 0f 59 0c 01	 mulss	 xmm1, DWORD PTR [ecx+eax]
  000c9	f3 0f 58 c1	 addss	 xmm0, xmm1
  000cd	8b 4d 0c	 mov	 ecx, DWORD PTR _vp$[ebp]
  000d0	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  000d4	f3 0f 11 45 84	 movss	 DWORD PTR _x_world$9[ebp], xmm0

; 403  : 			z_world = points->x * vp->attitude[0][2] + points->y * vp->attitude[1][2] + points->z * vp->attitude[2][2] + vp->position.z;

  000d9	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  000dc	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  000df	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000e3	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000e8	6b c2 00	 imul	 eax, edx, 0
  000eb	8b 4d 0c	 mov	 ecx, DWORD PTR _vp$[ebp]
  000ee	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  000f2	b8 04 00 00 00	 mov	 eax, 4
  000f7	d1 e0		 shl	 eax, 1
  000f9	f3 0f 59 04 02	 mulss	 xmm0, DWORD PTR [edx+eax]
  000fe	8b 4d f4	 mov	 ecx, DWORD PTR _points$[ebp]
  00101	0f bf 51 02	 movsx	 edx, WORD PTR [ecx+2]
  00105	f3 0f 2a ca	 cvtsi2ss xmm1, edx
  00109	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0010e	c1 e0 00	 shl	 eax, 0
  00111	8b 4d 0c	 mov	 ecx, DWORD PTR _vp$[ebp]
  00114	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00118	b8 04 00 00 00	 mov	 eax, 4
  0011d	d1 e0		 shl	 eax, 1
  0011f	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00124	f3 0f 58 c1	 addss	 xmm0, xmm1
  00128	8b 4d f4	 mov	 ecx, DWORD PTR _points$[ebp]
  0012b	0f bf 51 04	 movsx	 edx, WORD PTR [ecx+4]
  0012f	f3 0f 2a ca	 cvtsi2ss xmm1, edx
  00133	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00138	d1 e0		 shl	 eax, 1
  0013a	8b 4d 0c	 mov	 ecx, DWORD PTR _vp$[ebp]
  0013d	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00141	b8 04 00 00 00	 mov	 eax, 4
  00146	d1 e0		 shl	 eax, 1
  00148	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0014d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00151	8b 4d 0c	 mov	 ecx, DWORD PTR _vp$[ebp]
  00154	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00159	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _z_world$7[ebp], xmm0

; 404  : 
; 405  : 			x_world /= CLOUD_3D_SECTOR_SIDE_LENGTH;

  00161	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x_world$9[ebp]
  00166	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46800000
  0016e	f3 0f 11 45 84	 movss	 DWORD PTR _x_world$9[ebp], xmm0

; 406  : 			z_world /= CLOUD_3D_SECTOR_SIDE_LENGTH;

  00173	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _z_world$7[ebp]
  0017b	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@46800000
  00183	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _z_world$7[ebp], xmm0

; 407  : 
; 408  : 			y_world = points->y;

  0018b	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  0018e	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  00192	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00196	f3 0f 11 45 80	 movss	 DWORD PTR _y_world$8[ebp], xmm0

; 409  : 			y_world *= y_world;

  0019b	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _y_world$8[ebp]
  001a0	f3 0f 59 45 80	 mulss	 xmm0, DWORD PTR _y_world$8[ebp]
  001a5	f3 0f 11 45 80	 movss	 DWORD PTR _y_world$8[ebp], xmm0

; 410  : 
; 411  : 			texture_values->alpha = cloud_3d_trumpet_blend_factor;	//( ( y_world - cloud_3d_trumpet_blend_constant ) * cloud_3d_trumpet_blend_factor );

  001aa	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  001ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_factor@@3MA
  001b5	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 412  : 
; 413  : 			if ( texture_values->alpha > 1 )

  001ba	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  001bd	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001c2	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  001c9	76 10		 jbe	 SHORT $LN5@transform_

; 414  : 			{
; 415  : 
; 416  : 				texture_values->alpha = 1;

  001cb	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  001ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001d6	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN5@transform_:

; 417  : 			}
; 418  : 
; 419  : 			if ( texture_values->alpha < 0 )

  001db	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  001de	0f 57 c0	 xorps	 xmm0, xmm0
  001e1	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  001e5	76 0b		 jbe	 SHORT $LN6@transform_

; 420  : 			{
; 421  : 
; 422  : 				texture_values->alpha = 0;

  001e7	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  001ea	0f 57 c0	 xorps	 xmm0, xmm0
  001ed	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN6@transform_:

; 423  : 			}
; 424  : 
; 425  : 			texture_values->u = x_world;

  001f2	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  001f5	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x_world$9[ebp]
  001fa	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 426  : 			texture_values->v = z_world;

  001fe	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  00201	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _z_world$7[ebp]
  00209	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 427  : 
; 428  : //			texture_values->alpha = 1;
; 429  : 
; 430  : 			z = points->x * rotation_3d[0][2] + points->y * rotation_3d[1][2] + points->z * rotation_3d[2][2] + relative_position->z;

  0020e	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  00211	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00214	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00218	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0021d	6b c2 00	 imul	 eax, edx, 0
  00220	b9 04 00 00 00	 mov	 ecx, 4
  00225	d1 e1		 shl	 ecx, 1
  00227	f3 0f 59 84 08
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00230	8b 55 f4	 mov	 edx, DWORD PTR _points$[ebp]
  00233	0f bf 42 02	 movsx	 eax, WORD PTR [edx+2]
  00237	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  0023b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00240	c1 e1 00	 shl	 ecx, 0
  00243	ba 04 00 00 00	 mov	 edx, 4
  00248	d1 e2		 shl	 edx, 1
  0024a	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00253	f3 0f 58 c1	 addss	 xmm0, xmm1
  00257	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  0025a	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0025e	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  00262	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00267	d1 e2		 shl	 edx, 1
  00269	b8 04 00 00 00	 mov	 eax, 4
  0026e	d1 e0		 shl	 eax, 1
  00270	f3 0f 59 8c 02
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax]
  00279	f3 0f 58 c1	 addss	 xmm0, xmm1
  0027d	8b 4d 10	 mov	 ecx, DWORD PTR _relative_position$[ebp]
  00280	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00285	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _z$4[ebp], xmm0

; 431  : 
; 432  : 			if ( *( ( int * ) &z ) >= *( ( int * ) &clip_hither ) )

  0028d	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _z$4[ebp]
  00293	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?clip_hither@@3MA
  00299	0f 8c 6b 02 00
	00		 jl	 $LN7@transform_

; 433  : 			{
; 434  : 
; 435  : 				float
; 436  : 					q,
; 437  : 					i,
; 438  : 					j;
; 439  : 
; 440  : 				x = points->x * rotation_3d[0][0] + points->y * rotation_3d[1][0] + points->z * rotation_3d[2][0] + relative_position->x;

  0029f	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  002a2	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  002a5	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  002a9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002ae	6b c2 00	 imul	 eax, edx, 0
  002b1	b9 04 00 00 00	 mov	 ecx, 4
  002b6	6b d1 00	 imul	 edx, ecx, 0
  002b9	f3 0f 59 84 10
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  002c2	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  002c5	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  002c9	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  002cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002d2	c1 e2 00	 shl	 edx, 0
  002d5	b8 04 00 00 00	 mov	 eax, 4
  002da	6b c8 00	 imul	 ecx, eax, 0
  002dd	f3 0f 59 8c 0a
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx]
  002e6	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ea	8b 55 f4	 mov	 edx, DWORD PTR _points$[ebp]
  002ed	0f bf 42 04	 movsx	 eax, WORD PTR [edx+4]
  002f1	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  002f5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002fa	d1 e1		 shl	 ecx, 1
  002fc	ba 04 00 00 00	 mov	 edx, 4
  00301	6b c2 00	 imul	 eax, edx, 0
  00304	f3 0f 59 8c 01
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  0030d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00311	8b 4d 10	 mov	 ecx, DWORD PTR _relative_position$[ebp]
  00314	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00318	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _x$6[ebp], xmm0

; 441  : 
; 442  : 				y = points->x * rotation_3d[0][1] + points->y * rotation_3d[1][1] + points->z * rotation_3d[2][1] + relative_position->y;

  00320	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  00323	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00326	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0032a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0032f	6b c2 00	 imul	 eax, edx, 0
  00332	b9 04 00 00 00	 mov	 ecx, 4
  00337	c1 e1 00	 shl	 ecx, 0
  0033a	f3 0f 59 84 08
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  00343	8b 55 f4	 mov	 edx, DWORD PTR _points$[ebp]
  00346	0f bf 42 02	 movsx	 eax, WORD PTR [edx+2]
  0034a	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  0034e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00353	c1 e1 00	 shl	 ecx, 0
  00356	ba 04 00 00 00	 mov	 edx, 4
  0035b	c1 e2 00	 shl	 edx, 0
  0035e	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00367	f3 0f 58 c1	 addss	 xmm0, xmm1
  0036b	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  0036e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00372	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  00376	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0037b	d1 e2		 shl	 edx, 1
  0037d	b8 04 00 00 00	 mov	 eax, 4
  00382	c1 e0 00	 shl	 eax, 0
  00385	f3 0f 59 8c 02
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax]
  0038e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00392	8b 4d 10	 mov	 ecx, DWORD PTR _relative_position$[ebp]
  00395	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  0039a	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _y$5[ebp], xmm0

; 443  : 
; 444  : 				oxmax = active_viewport.x_max - last_transformed_point->i;

  003a2	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  003a5	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  003ad	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  003b2	f3 0f 11 45 a8	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 445  : 				oxmin = last_transformed_point->i - active_viewport.x_min;

  003b7	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  003ba	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  003bf	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  003c7	f3 0f 11 45 a4	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 446  : 				oymax = active_viewport.y_max - last_transformed_point->j;

  003cc	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  003cf	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  003d7	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
  003dc	f3 0f 11 45 a0	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 447  : 				oymin = last_transformed_point->j - active_viewport.y_min;

  003e1	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  003e4	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  003e9	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  003f1	f3 0f 11 45 9c	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 448  : 			
; 449  : 				ixmax = *( ( int * ) &oxmax );

  003f6	8b 45 a8	 mov	 eax, DWORD PTR _oxmax$[ebp]
  003f9	89 45 98	 mov	 DWORD PTR _ixmax$[ebp], eax

; 450  : 				ixmin = *( ( int * ) &oxmin );

  003fc	8b 45 a4	 mov	 eax, DWORD PTR _oxmin$[ebp]
  003ff	89 45 94	 mov	 DWORD PTR _ixmin$[ebp], eax

; 451  : 				iymax = *( ( int * ) &oymax );

  00402	8b 45 a0	 mov	 eax, DWORD PTR _oymax$[ebp]
  00405	89 45 90	 mov	 DWORD PTR _iymax$[ebp], eax

; 452  : 				iymin = *( ( int * ) &oymin );

  00408	8b 45 9c	 mov	 eax, DWORD PTR _oymin$[ebp]
  0040b	89 45 8c	 mov	 DWORD PTR _iymin$[ebp], eax

; 453  : 			
; 454  : 				last_transformed_point->outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  0040e	8b 45 90	 mov	 eax, DWORD PTR _iymax$[ebp]
  00411	50		 push	 eax
  00412	8b 4d 98	 mov	 ecx, DWORD PTR _ixmax$[ebp]
  00415	51		 push	 ecx
  00416	8b 55 8c	 mov	 edx, DWORD PTR _iymin$[ebp]
  00419	52		 push	 edx
  0041a	8b 45 94	 mov	 eax, DWORD PTR _ixmin$[ebp]
  0041d	50		 push	 eax
  0041e	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  00423	8b 4d f0	 mov	 ecx, DWORD PTR _last_transformed_point$[ebp]
  00426	88 41 2c	 mov	 BYTE PTR [ecx+44], al

; 455  : 
; 456  : 				result_points->x = x;

  00429	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  0042c	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _x$6[ebp]
  00434	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 457  : 
; 458  : 				result_points->y = y;

  00438	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  0043b	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _y$5[ebp]
  00443	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 459  : 
; 460  : 				result_points->z = z;

  00448	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  0044b	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _z$4[ebp]
  00453	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 461  : 
; 462  : 				last_transformed_point = result_points;

  00458	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  0045b	89 45 f0	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 463  : 
; 464  : 				q = 1.0 / z;

  0045e	f3 0f 5a 85 70
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _z$4[ebp]
  00466	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0046e	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00472	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00476	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _q$3[ebp], xmm0

; 465  : 
; 466  : 				i = ( active_3d_environment->screen_i_scale * x * q );

  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00483	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00487	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _x$6[ebp]
  0048f	f3 0f 59 85 6c
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$3[ebp]
  00497	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _i$2[ebp], xmm0

; 467  : 
; 468  : 				j = ( active_3d_environment->screen_j_scale * y * q );

  0049f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  004a4	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  004a9	f3 0f 59 85 74
	ff ff ff	 mulss	 xmm0, DWORD PTR _y$5[ebp]
  004b1	f3 0f 59 85 6c
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$3[ebp]
  004b9	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _j$1[ebp], xmm0

; 469  : 
; 470  : 				result_points->j = active_3d_environment->y_origin - j;

  004c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  004c6	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  004cb	f3 0f 5c 85 64
	ff ff ff	 subss	 xmm0, DWORD PTR _j$1[ebp]
  004d3	8b 4d ec	 mov	 ecx, DWORD PTR _result_points$[ebp]
  004d6	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 471  : 
; 472  : 				result_points->i = active_3d_environment->x_origin + i;

  004db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  004e0	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  004e5	f3 0f 58 85 68
	ff ff ff	 addss	 xmm0, DWORD PTR _i$2[ebp]
  004ed	8b 4d ec	 mov	 ecx, DWORD PTR _result_points$[ebp]
  004f0	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 473  : 
; 474  : 				result_points->q = q;

  004f5	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  004f8	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _q$3[ebp]
  00500	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 475  : 			}
; 476  : 			else

  00505	e9 39 01 00 00	 jmp	 $LN8@transform_
$LN7@transform_:

; 477  : 			{
; 478  : 
; 479  : 				x = points->x * rotation_3d[0][0] + points->y * rotation_3d[1][0] + points->z * rotation_3d[2][0] + relative_position->x;

  0050a	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  0050d	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00510	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00514	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00519	6b c2 00	 imul	 eax, edx, 0
  0051c	b9 04 00 00 00	 mov	 ecx, 4
  00521	6b d1 00	 imul	 edx, ecx, 0
  00524	f3 0f 59 84 10
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  0052d	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  00530	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  00534	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  00538	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0053d	c1 e2 00	 shl	 edx, 0
  00540	b8 04 00 00 00	 mov	 eax, 4
  00545	6b c8 00	 imul	 ecx, eax, 0
  00548	f3 0f 59 8c 0a
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx]
  00551	f3 0f 58 c1	 addss	 xmm0, xmm1
  00555	8b 55 f4	 mov	 edx, DWORD PTR _points$[ebp]
  00558	0f bf 42 04	 movsx	 eax, WORD PTR [edx+4]
  0055c	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  00560	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00565	d1 e1		 shl	 ecx, 1
  00567	ba 04 00 00 00	 mov	 edx, 4
  0056c	6b c2 00	 imul	 eax, edx, 0
  0056f	f3 0f 59 8c 01
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  00578	f3 0f 58 c1	 addss	 xmm0, xmm1
  0057c	8b 4d 10	 mov	 ecx, DWORD PTR _relative_position$[ebp]
  0057f	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00583	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _x$6[ebp], xmm0

; 480  : 
; 481  : 				y = points->x * rotation_3d[0][1] + points->y * rotation_3d[1][1] + points->z * rotation_3d[2][1] + relative_position->y;

  0058b	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  0058e	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00591	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00595	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0059a	6b c2 00	 imul	 eax, edx, 0
  0059d	b9 04 00 00 00	 mov	 ecx, 4
  005a2	c1 e1 00	 shl	 ecx, 0
  005a5	f3 0f 59 84 08
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx]
  005ae	8b 55 f4	 mov	 edx, DWORD PTR _points$[ebp]
  005b1	0f bf 42 02	 movsx	 eax, WORD PTR [edx+2]
  005b5	f3 0f 2a c8	 cvtsi2ss xmm1, eax
  005b9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005be	c1 e1 00	 shl	 ecx, 0
  005c1	ba 04 00 00 00	 mov	 edx, 4
  005c6	c1 e2 00	 shl	 edx, 0
  005c9	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  005d2	f3 0f 58 c1	 addss	 xmm0, xmm1
  005d6	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  005d9	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  005dd	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  005e1	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005e6	d1 e2		 shl	 edx, 1
  005e8	b8 04 00 00 00	 mov	 eax, 4
  005ed	c1 e0 00	 shl	 eax, 0
  005f0	f3 0f 59 8c 02
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+eax]
  005f9	f3 0f 58 c1	 addss	 xmm0, xmm1
  005fd	8b 4d 10	 mov	 ecx, DWORD PTR _relative_position$[ebp]
  00600	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  00605	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _y$5[ebp], xmm0

; 482  : 
; 483  : 				result_points->outcode = CLIP_HITHER;

  0060d	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  00610	c6 40 2c 20	 mov	 BYTE PTR [eax+44], 32	; 00000020H

; 484  : 
; 485  : 				result_points->z = z;

  00614	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  00617	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _z$4[ebp]
  0061f	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 486  : 
; 487  : 				result_points->x = x;

  00624	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  00627	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _x$6[ebp]
  0062f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 488  : 
; 489  : 				result_points->y = y;

  00633	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  00636	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _y$5[ebp]
  0063e	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
$LN8@transform_:

; 490  : 			}
; 491  : 		}
; 492  : 
; 493  : 		texture_values++;

  00643	8b 45 88	 mov	 eax, DWORD PTR _texture_values$[ebp]
  00646	83 c0 0c	 add	 eax, 12			; 0000000cH
  00649	89 45 88	 mov	 DWORD PTR _texture_values$[ebp], eax

; 494  : 
; 495  : 		result_points++;

  0064c	8b 45 ec	 mov	 eax, DWORD PTR _result_points$[ebp]
  0064f	83 c0 40	 add	 eax, 64			; 00000040H
  00652	89 45 ec	 mov	 DWORD PTR _result_points$[ebp], eax

; 496  : 
; 497  : 		points++;

  00655	8b 45 f4	 mov	 eax, DWORD PTR _points$[ebp]
  00658	83 c0 06	 add	 eax, 6
  0065b	89 45 f4	 mov	 DWORD PTR _points$[ebp], eax

; 498  : 	}

  0065e	e9 dc f9 ff ff	 jmp	 $LN2@transform_
$LN3@transform_:

; 499  : 
; 500  : 	oxmax = active_viewport.x_max - last_transformed_point->i;

  00663	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00666	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0066e	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  00673	f3 0f 11 45 a8	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 501  : 	oxmin = last_transformed_point->i - active_viewport.x_min;

  00678	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0067b	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00680	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  00688	f3 0f 11 45 a4	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 502  : 	oymax = active_viewport.y_max - last_transformed_point->j;

  0068d	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00690	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  00698	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
  0069d	f3 0f 11 45 a0	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 503  : 	oymin = last_transformed_point->j - active_viewport.y_min;

  006a2	8b 45 f0	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  006a5	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  006aa	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  006b2	f3 0f 11 45 9c	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 504  : 
; 505  : 	ixmax = *( ( int * ) &oxmax );

  006b7	8b 45 a8	 mov	 eax, DWORD PTR _oxmax$[ebp]
  006ba	89 45 98	 mov	 DWORD PTR _ixmax$[ebp], eax

; 506  : 	ixmin = *( ( int * ) &oxmin );

  006bd	8b 45 a4	 mov	 eax, DWORD PTR _oxmin$[ebp]
  006c0	89 45 94	 mov	 DWORD PTR _ixmin$[ebp], eax

; 507  : 	iymax = *( ( int * ) &oymax );

  006c3	8b 45 a0	 mov	 eax, DWORD PTR _oymax$[ebp]
  006c6	89 45 90	 mov	 DWORD PTR _iymax$[ebp], eax

; 508  : 	iymin = *( ( int * ) &oymin );

  006c9	8b 45 9c	 mov	 eax, DWORD PTR _oymin$[ebp]
  006cc	89 45 8c	 mov	 DWORD PTR _iymin$[ebp], eax

; 509  : 
; 510  : 	last_transformed_point->outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  006cf	8b 45 90	 mov	 eax, DWORD PTR _iymax$[ebp]
  006d2	50		 push	 eax
  006d3	8b 4d 98	 mov	 ecx, DWORD PTR _ixmax$[ebp]
  006d6	51		 push	 ecx
  006d7	8b 55 8c	 mov	 edx, DWORD PTR _iymin$[ebp]
  006da	52		 push	 edx
  006db	8b 45 94	 mov	 eax, DWORD PTR _ixmin$[ebp]
  006de	50		 push	 eax
  006df	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  006e4	8b 4d f0	 mov	 ecx, DWORD PTR _last_transformed_point$[ebp]
  006e7	88 41 2c	 mov	 BYTE PTR [ecx+44], al

; 511  : 
; 512  : 	//
; 513  : 	// Set back the fpu precision mode.
; 514  : 	//
; 515  : 
; 516  : 	set_fpu_precision_mode_double ();

  006ea	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_double@@YGXXZ ; set_fpu_precision_mode_double

; 517  : }

  006ef	5f		 pop	 edi
  006f0	5e		 pop	 esi
  006f1	5b		 pop	 ebx
  006f2	8b e5		 mov	 esp, ebp
  006f4	5d		 pop	 ebp
  006f5	c2 0c 00	 ret	 12			; 0000000cH
?transform_3d_cloud_trumpet@@YGXPAUOBJECT_3D@@PAUVIEWPOINT@@PAUVEC3D@@@Z ENDP ; transform_3d_cloud_trumpet
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\3dtrump.c
;	COMDAT ?draw_3d_cloud_trumpet@@YGXXZ
_TEXT	SEGMENT
_point_reference_index$1 = -92				; size = 4
_surface$2 = -88					; size = 4
_blend_factor$3 = -84					; size = 4
_blend_distance$4 = -80					; size = 4
_heading$5 = -76					; size = 4
_obj$ = -72						; size = 4
_object_base$ = -68					; size = 44
_this_object_3d_info$ = -24				; size = 4
_faces$ = -20						; size = 4
_num_faces$ = -16					; size = 4
_draw_sub_objects$ = -12				; size = 4
_count$ = -8						; size = 4
_object_number$ = -4					; size = 4
?draw_3d_cloud_trumpet@@YGXXZ PROC			; draw_3d_cloud_trumpet, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 131  : 
; 132  : 	int
; 133  : 		object_number,
; 134  : 		count,
; 135  : 		draw_sub_objects,
; 136  : 		num_faces;
; 137  : 
; 138  : 	object_3d_face
; 139  : 		*faces;
; 140  : 
; 141  : 	object_3d_info
; 142  : 		*this_object_3d_info;
; 143  : 
; 144  : 	object_3d_info
; 145  : 		object_base;
; 146  : 
; 147  : 	object_3d_instance
; 148  : 		*obj;
; 149  : 
; 150  : 	//
; 151  : 	// Construct an attitude matrix from the visual viewpoint
; 152  : 	//
; 153  : 
; 154  : 	if ( visual_3d_vp->zv.y > 0.9 )

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00011	f3 0f 5a 40 28	 cvtss2sd xmm0, DWORD PTR [eax+40]
  00016	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3feccccccccccccd
  0001e	76 05		 jbe	 SHORT $LN5@draw_3d_cl

; 155  : 	{
; 156  : 
; 157  : 		//
; 158  : 		// If you're looking directly up, don't bother with the trumpet!
; 159  : 		//
; 160  : 
; 161  : 		return;

  00020	e9 e9 05 00 00	 jmp	 $LN1@draw_3d_cl
$LN5@draw_3d_cl:

; 162  : 	}
; 163  : 
; 164  : 	obj = cloud_trumpet_object;

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cloud_trumpet_object@@3PAUOBJECT_3D_INSTANCE@@A
  0002a	89 45 b8	 mov	 DWORD PTR _obj$[ebp], eax

; 165  : 
; 166  : 	{
; 167  : 
; 168  : 		float
; 169  : 			heading;
; 170  : 
; 171  : 		heading = get_heading_from_attitude_matrix ( visual_3d_vp->attitude );

  0002d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00032	d1 e0		 shl	 eax, 1
  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0003a	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0003e	b8 04 00 00 00	 mov	 eax, 4
  00043	d1 e0		 shl	 eax, 1
  00045	51		 push	 ecx
  00046	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00055	d1 e1		 shl	 ecx, 1
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0005d	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00061	b9 04 00 00 00	 mov	 ecx, 4
  00066	6b d1 00	 imul	 edx, ecx, 0
  00069	51		 push	 ecx
  0006a	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0006f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00074	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00079	d9 5d b4	 fstp	 DWORD PTR _heading$5[ebp]

; 172  : 
; 173  : 		get_3d_transformation_matrix ( obj->vp.attitude, heading, 0, 0 );

  0007c	51		 push	 ecx
  0007d	0f 57 c0	 xorps	 xmm0, xmm0
  00080	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00085	51		 push	 ecx
  00086	0f 57 c0	 xorps	 xmm0, xmm0
  00089	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008e	51		 push	 ecx
  0008f	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _heading$5[ebp]
  00094	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00099	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  0009c	83 c0 14	 add	 eax, 20			; 00000014H
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 174  : 
; 175  : 		//get_matrix3x3_from_unit_vec3d ( obj->vp.attitude, &visual_3d_vp->zv );
; 176  : 	}
; 177  : 
; 178  : 	obj->vp.position.x = visual_3d_vp->x;

  000a5	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b0	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 179  : 	obj->vp.position.y = cloud_3d_base_height;

  000b3	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  000b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  000be	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 180  : 	obj->vp.position.z = visual_3d_vp->z;

  000c3	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  000c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000cc	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000cf	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 181  : 
; 182  : 	set_object_3d_instance_relative_position ( obj );

  000d2	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?set_object_3d_instance_relative_position@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; set_object_3d_instance_relative_position

; 183  : 
; 184  : 	//
; 185  : 	// Set the fog value to non fogged
; 186  : 	//
; 187  : 
; 188  : 	set_d3d_fog_face_intensity ( 255 );

  000db	68 ff 00 00 00	 push	 255			; 000000ffH
  000e0	e8 00 00 00 00	 call	 ?set_d3d_fog_face_intensity@@YGXH@Z ; set_d3d_fog_face_intensity

; 189  : 
; 190  : 	//
; 191  : 	// Set the cloud carpet blend factors
; 192  : 	//
; 193  : 
; 194  : 	{
; 195  : 
; 196  : 		float
; 197  : 			blend_distance,
; 198  : 			blend_factor;
; 199  : 
; 200  : 		blend_distance = fabs ( cloud_3d_base_height - visual_3d_vp->y );

  000e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_base_height@@3MA
  000f2	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  000f7	51		 push	 ecx
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00102	d9 5d b0	 fstp	 DWORD PTR _blend_distance$4[ebp]

; 201  : 
; 202  : 		blend_factor = 1.0 - ( blend_distance / 300 );

  00105	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _blend_distance$4[ebp]
  0010a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@43960000
  00112	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00116	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0011e	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00122	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00126	f3 0f 11 45 ac	 movss	 DWORD PTR _blend_factor$3[ebp], xmm0

; 203  : 
; 204  : 		blend_factor *= 1;

  0012b	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _blend_factor$3[ebp]
  00130	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f800000
  00138	f3 0f 11 45 ac	 movss	 DWORD PTR _blend_factor$3[ebp], xmm0

; 205  : 
; 206  : 		if ( blend_factor < 0 )

  0013d	0f 57 c0	 xorps	 xmm0, xmm0
  00140	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _blend_factor$3[ebp]
  00144	76 08		 jbe	 SHORT $LN6@draw_3d_cl

; 207  : 		{
; 208  : 
; 209  : 			blend_factor = 0;

  00146	0f 57 c0	 xorps	 xmm0, xmm0
  00149	f3 0f 11 45 ac	 movss	 DWORD PTR _blend_factor$3[ebp], xmm0
$LN6@draw_3d_cl:

; 210  : 		}
; 211  : 
; 212  : 		if ( blend_factor > 1 )

  0014e	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _blend_factor$3[ebp]
  00153	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0015a	76 0d		 jbe	 SHORT $LN7@draw_3d_cl

; 213  : 		{
; 214  : 
; 215  : 			blend_factor = 1;

  0015c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00164	f3 0f 11 45 ac	 movss	 DWORD PTR _blend_factor$3[ebp], xmm0
$LN7@draw_3d_cl:

; 216  : 		}
; 217  : 
; 218  : 		cloud_3d_trumpet_blend_start = 100.0;

  00169	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  00171	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_trumpet_blend_start@@3MA, xmm0

; 219  : 	
; 220  : 		cloud_3d_trumpet_blend_end = 200.0;

  00179	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43480000
  00181	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_trumpet_blend_end@@3MA, xmm0

; 221  : 	
; 222  : 		cloud_3d_trumpet_blend_distance = cloud_3d_trumpet_blend_end - cloud_3d_trumpet_blend_start;

  00189	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_end@@3MA
  00191	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_start@@3MA
  00199	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_trumpet_blend_distance@@3MA, xmm0

; 223  : 	
; 224  : 		cloud_3d_trumpet_blend_start_squared = cloud_3d_trumpet_blend_start * cloud_3d_trumpet_blend_start;

  001a1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_start@@3MA
  001a9	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_start@@3MA
  001b1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_trumpet_blend_start_squared@@3MA, xmm0

; 225  : 	
; 226  : 		cloud_3d_trumpet_blend_distance_squared = cloud_3d_trumpet_blend_distance * cloud_3d_trumpet_blend_distance;

  001b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_distance@@3MA
  001c1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_distance@@3MA
  001c9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_trumpet_blend_distance_squared@@3MA, xmm0

; 227  : 	
; 228  : 		cloud_3d_trumpet_blend_constant = cloud_3d_trumpet_blend_distance_squared - cloud_3d_trumpet_blend_start_squared;

  001d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_distance_squared@@3MA
  001d9	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?cloud_3d_trumpet_blend_start_squared@@3MA
  001e1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_trumpet_blend_constant@@3MA, xmm0

; 229  : 	
; 230  : 		cloud_3d_trumpet_blend_factor = blend_factor;	// / cloud_3d_trumpet_blend_distance_squared;

  001e9	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _blend_factor$3[ebp]
  001ee	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?cloud_3d_trumpet_blend_factor@@3MA, xmm0

; 231  : 
; 232  : 		if ( blend_factor == 0 )

  001f6	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _blend_factor$3[ebp]
  001fb	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00202	9f		 lahf
  00203	f6 c4 44	 test	 ah, 68			; 00000044H
  00206	7a 05		 jp	 SHORT $LN8@draw_3d_cl

; 233  : 		{
; 234  : 
; 235  : 			return;

  00208	e9 01 04 00 00	 jmp	 $LN1@draw_3d_cl
$LN8@draw_3d_cl:

; 236  : 		}
; 237  : 	}
; 238  : 
; 239  : 	//
; 240  : 	// Set up object base variable
; 241  : 	//
; 242  : 
; 243  : 	this_object_3d_info = &object_base;

  0020d	8d 45 bc	 lea	 eax, DWORD PTR _object_base$[ebp]
  00210	89 45 e8	 mov	 DWORD PTR _this_object_3d_info$[ebp], eax

; 244  : 
; 245  : 	object_base.lights = NULL;

  00213	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _object_base$[ebp+4], 0

; 246  : 
; 247  : 	object_base.points_base = 0;

  0021a	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _object_base$[ebp+36], 0

; 248  : 
; 249  : 	//
; 250  : 	// Calculate the object's rotation matrix, to transform its 3d points into world coordinate system
; 251  : 	//
; 252  : 
; 253  : 	rotation_3d[0][0] = ( obj->vp.xv.x * visual_3d_vp->xv.x + obj->vp.xv.y * visual_3d_vp->xv.y + obj->vp.xv.z * visual_3d_vp->xv.z );

  00221	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  00224	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0022a	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0022f	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  00234	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  00237	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0023c	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  00241	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  00246	f3 0f 58 c1	 addss	 xmm0, xmm1
  0024a	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  0024d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00253	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  00258	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  0025d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00261	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00266	6b c8 00	 imul	 ecx, eax, 0
  00269	ba 04 00 00 00	 mov	 edx, 4
  0026e	6b c2 00	 imul	 eax, edx, 0
  00271	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], xmm0

; 254  : 	rotation_3d[0][1] = ( obj->vp.xv.x * visual_3d_vp->yv.x + obj->vp.xv.y * visual_3d_vp->yv.y + obj->vp.xv.z * visual_3d_vp->yv.z );

  0027a	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  0027d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00283	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00288	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  0028d	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  00290	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00295	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  0029a	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  0029f	f3 0f 58 c1	 addss	 xmm0, xmm1
  002a3	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  002a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002ac	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  002b1	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  002b6	f3 0f 58 c1	 addss	 xmm0, xmm1
  002ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002bf	6b c8 00	 imul	 ecx, eax, 0
  002c2	ba 04 00 00 00	 mov	 edx, 4
  002c7	c1 e2 00	 shl	 edx, 0
  002ca	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 255  : 	rotation_3d[0][2] = ( obj->vp.xv.x * visual_3d_vp->zv.x + obj->vp.xv.y * visual_3d_vp->zv.y + obj->vp.xv.z * visual_3d_vp->zv.z );

  002d3	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  002d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002dc	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  002e1	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  002e6	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  002e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002ee	f3 0f 10 4a 18	 movss	 xmm1, DWORD PTR [edx+24]
  002f3	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  002f8	f3 0f 58 c1	 addss	 xmm0, xmm1
  002fc	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  002ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00305	f3 0f 10 49 1c	 movss	 xmm1, DWORD PTR [ecx+28]
  0030a	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0030f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00313	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00318	6b c8 00	 imul	 ecx, eax, 0
  0031b	ba 04 00 00 00	 mov	 edx, 4
  00320	d1 e2		 shl	 edx, 1
  00322	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], xmm0

; 256  : 
; 257  : 	rotation_3d[1][0] = ( obj->vp.yv.x * visual_3d_vp->xv.x + obj->vp.yv.y * visual_3d_vp->xv.y + obj->vp.yv.z * visual_3d_vp->xv.z );

  0032b	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  0032e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00334	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  00339	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  0033e	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  00341	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00346	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  0034b	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  00350	f3 0f 58 c1	 addss	 xmm0, xmm1
  00354	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00357	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0035d	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00362	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00367	f3 0f 58 c1	 addss	 xmm0, xmm1
  0036b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00370	c1 e0 00	 shl	 eax, 0
  00373	b9 04 00 00 00	 mov	 ecx, 4
  00378	6b d1 00	 imul	 edx, ecx, 0
  0037b	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 258  : 	rotation_3d[1][1] = ( obj->vp.yv.x * visual_3d_vp->yv.x + obj->vp.yv.y * visual_3d_vp->yv.y + obj->vp.yv.z * visual_3d_vp->yv.z );

  00384	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  00387	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0038d	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  00392	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  00397	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  0039a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0039f	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  003a4	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  003a9	f3 0f 58 c1	 addss	 xmm0, xmm1
  003ad	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  003b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003b6	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  003bb	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  003c0	f3 0f 58 c1	 addss	 xmm0, xmm1
  003c4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003c9	c1 e0 00	 shl	 eax, 0
  003cc	b9 04 00 00 00	 mov	 ecx, 4
  003d1	c1 e1 00	 shl	 ecx, 0
  003d4	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 259  : 	rotation_3d[1][2] = ( obj->vp.yv.x * visual_3d_vp->zv.x + obj->vp.yv.y * visual_3d_vp->zv.y + obj->vp.yv.z * visual_3d_vp->zv.z );

  003dd	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  003e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003e6	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  003eb	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  003f0	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  003f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  003f8	f3 0f 10 4a 24	 movss	 xmm1, DWORD PTR [edx+36]
  003fd	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00402	f3 0f 58 c1	 addss	 xmm0, xmm1
  00406	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00409	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0040f	f3 0f 10 49 28	 movss	 xmm1, DWORD PTR [ecx+40]
  00414	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00419	f3 0f 58 c1	 addss	 xmm0, xmm1
  0041d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00422	c1 e0 00	 shl	 eax, 0
  00425	b9 04 00 00 00	 mov	 ecx, 4
  0042a	d1 e1		 shl	 ecx, 1
  0042c	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 260  : 
; 261  : 	rotation_3d[2][0] = ( obj->vp.zv.x * visual_3d_vp->xv.x + obj->vp.zv.y * visual_3d_vp->xv.y + obj->vp.zv.z * visual_3d_vp->xv.z );

  00435	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  00438	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0043e	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00443	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  00448	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  0044b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00450	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  00455	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  0045a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0045e	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00461	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00467	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  0046c	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  00471	f3 0f 58 c1	 addss	 xmm0, xmm1
  00475	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0047a	d1 e0		 shl	 eax, 1
  0047c	b9 04 00 00 00	 mov	 ecx, 4
  00481	6b d1 00	 imul	 edx, ecx, 0
  00484	f3 0f 11 84 10
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], xmm0

; 262  : 	rotation_3d[2][1] = ( obj->vp.zv.x * visual_3d_vp->yv.x + obj->vp.zv.y * visual_3d_vp->yv.y + obj->vp.zv.z * visual_3d_vp->yv.z );

  0048d	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  00490	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00496	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0049b	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  004a0	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004a8	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  004ad	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  004b2	f3 0f 58 c1	 addss	 xmm0, xmm1
  004b6	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  004b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004bf	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  004c4	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  004c9	f3 0f 58 c1	 addss	 xmm0, xmm1
  004cd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004d2	d1 e0		 shl	 eax, 1
  004d4	b9 04 00 00 00	 mov	 ecx, 4
  004d9	c1 e1 00	 shl	 ecx, 0
  004dc	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 263  : 	rotation_3d[2][2] = ( obj->vp.zv.x * visual_3d_vp->zv.x + obj->vp.zv.y * visual_3d_vp->zv.y + obj->vp.zv.z * visual_3d_vp->zv.z );

  004e5	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  004e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004ee	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  004f3	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  004f8	8b 55 b8	 mov	 edx, DWORD PTR _obj$[ebp]
  004fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00500	f3 0f 10 4a 30	 movss	 xmm1, DWORD PTR [edx+48]
  00505	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  0050a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0050e	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00511	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00517	f3 0f 10 49 34	 movss	 xmm1, DWORD PTR [ecx+52]
  0051c	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  00521	f3 0f 58 c1	 addss	 xmm0, xmm1
  00525	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0052a	d1 e0		 shl	 eax, 1
  0052c	b9 04 00 00 00	 mov	 ecx, 4
  00531	d1 e1		 shl	 ecx, 1
  00533	f3 0f 11 84 08
	00 00 00 00	 movss	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], xmm0

; 264  : 
; 265  : //	rotation_3d[0][0] = ( visual_3d_vp->xv.x );
; 266  : //	rotation_3d[0][1] = ( visual_3d_vp->yv.x );
; 267  : //	rotation_3d[0][2] = ( visual_3d_vp->zv.x );
; 268  : 
; 269  : //	rotation_3d[1][0] = ( visual_3d_vp->xv.y );
; 270  : //	rotation_3d[1][1] = ( visual_3d_vp->yv.y );
; 271  : //	rotation_3d[1][2] = ( visual_3d_vp->zv.y );
; 272  : 
; 273  : //	rotation_3d[2][0] = ( visual_3d_vp->xv.z );
; 274  : //	rotation_3d[2][1] = ( visual_3d_vp->yv.z );
; 275  : //	rotation_3d[2][2] = ( visual_3d_vp->zv.z );
; 276  : 
; 277  : 	//
; 278  : 	// Get the object number
; 279  : 	//
; 280  : 
; 281  : 	object_number = get_object_approximation_number ( obj->object_number, 0, &draw_sub_objects );

  0053c	8d 45 f4	 lea	 eax, DWORD PTR _draw_sub_objects$[ebp]
  0053f	50		 push	 eax
  00540	51		 push	 ecx
  00541	0f 57 c0	 xorps	 xmm0, xmm0
  00544	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00549	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  0054c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0054f	52		 push	 edx
  00550	e8 00 00 00 00	 call	 ?get_object_approximation_number@@YGHHMPAH@Z ; get_object_approximation_number
  00555	89 45 fc	 mov	 DWORD PTR _object_number$[ebp], eax

; 282  : 
; 283  : 	object_base.object_number = object_number;

  00558	8b 45 fc	 mov	 eax, DWORD PTR _object_number$[ebp]
  0055b	89 45 dc	 mov	 DWORD PTR _object_base$[ebp+32], eax

; 284  : 
; 285  : 	//
; 286  : 	// Transform the object's shape data
; 287  : 	//
; 288  : 
; 289  : 	transform_3d_cloud_trumpet ( &objects_3d_data[object_number], &obj->vp, &obj->view_position );

  0055e	8b 45 b8	 mov	 eax, DWORD PTR _obj$[ebp]
  00561	83 c0 38	 add	 eax, 56			; 00000038H
  00564	50		 push	 eax
  00565	8b 4d b8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00568	83 c1 08	 add	 ecx, 8
  0056b	51		 push	 ecx
  0056c	6b 55 fc 68	 imul	 edx, DWORD PTR _object_number$[ebp], 104
  00570	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00576	52		 push	 edx
  00577	e8 00 00 00 00	 call	 ?transform_3d_cloud_trumpet@@YGXPAUOBJECT_3D@@PAUVIEWPOINT@@PAUVEC3D@@@Z ; transform_3d_cloud_trumpet

; 290  : 
; 291  : 	//
; 292  : 	// Remove fogging temporarily
; 293  : 	//
; 294  : 
; 295  : 	suspend_d3d_fog ();

  0057c	e8 00 00 00 00	 call	 ?suspend_d3d_fog@@YGXXZ	; suspend_d3d_fog

; 296  : 
; 297  : 	//
; 298  : 	// Render the faces
; 299  : 	//
; 300  : 
; 301  : 	num_faces = objects_3d_data[object_number].number_of_faces;

  00581	6b 45 fc 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00585	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0058b	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  00590	89 55 f0	 mov	 DWORD PTR _num_faces$[ebp], edx

; 302  : 
; 303  : 	faces = objects_3d_data[object_number].faces;

  00593	6b 45 fc 68	 imul	 eax, DWORD PTR _object_number$[ebp], 104
  00597	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0059d	8b 54 01 44	 mov	 edx, DWORD PTR [ecx+eax+68]
  005a1	89 55 ec	 mov	 DWORD PTR _faces$[ebp], edx

; 304  : 
; 305  : 	{
; 306  : 
; 307  : 		int
; 308  : 			surface,
; 309  : 			point_reference_index;
; 310  : 
; 311  : 		point_reference_index = 0;

  005a4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _point_reference_index$1[ebp], 0

; 312  : 	
; 313  : 		surface = 0;

  005ab	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _surface$2[ebp], 0

; 314  : 
; 315  : 		for ( count = num_faces; count > 0; count-- )

  005b2	8b 45 f0	 mov	 eax, DWORD PTR _num_faces$[ebp]
  005b5	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
  005b8	eb 09		 jmp	 SHORT $LN4@draw_3d_cl
$LN2@draw_3d_cl:
  005ba	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  005bd	83 e8 01	 sub	 eax, 1
  005c0	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_cl:
  005c3	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  005c7	7e 40		 jle	 SHORT $LN3@draw_3d_cl

; 316  : 		{
; 317  : 	
; 318  : //			if ( faces->flags & FACE_HAS_NEW_SURFACE )
; 319  : 			{
; 320  : 
; 321  : 				surface++;

  005c9	8b 45 a8	 mov	 eax, DWORD PTR _surface$2[ebp]
  005cc	83 c0 01	 add	 eax, 1
  005cf	89 45 a8	 mov	 DWORD PTR _surface$2[ebp], eax

; 322  : 			}
; 323  : 
; 324  : 			if ( faces->number_of_points > 2 )

  005d2	8b 45 ec	 mov	 eax, DWORD PTR _faces$[ebp]
  005d5	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  005d8	83 f9 02	 cmp	 ecx, 2
  005db	7e 15		 jle	 SHORT $LN9@draw_3d_cl

; 325  : 			{
; 326  : 	
; 327  : 				render_3d_cloud_trumpet_face ( faces, surface, point_reference_index, this_object_3d_info );

  005dd	8b 45 e8	 mov	 eax, DWORD PTR _this_object_3d_info$[ebp]
  005e0	50		 push	 eax
  005e1	8b 4d a4	 mov	 ecx, DWORD PTR _point_reference_index$1[ebp]
  005e4	51		 push	 ecx
  005e5	8b 55 a8	 mov	 edx, DWORD PTR _surface$2[ebp]
  005e8	52		 push	 edx
  005e9	8b 45 ec	 mov	 eax, DWORD PTR _faces$[ebp]
  005ec	50		 push	 eax
  005ed	e8 00 00 00 00	 call	 ?render_3d_cloud_trumpet_face@@YGXPAUOBJECT_3D_FACE@@HHPAUOBJECT_3D_INFO@@@Z ; render_3d_cloud_trumpet_face
$LN9@draw_3d_cl:

; 328  : 			}
; 329  : 
; 330  : 			point_reference_index += faces->number_of_points;

  005f2	8b 45 ec	 mov	 eax, DWORD PTR _faces$[ebp]
  005f5	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  005f8	03 4d a4	 add	 ecx, DWORD PTR _point_reference_index$1[ebp]
  005fb	89 4d a4	 mov	 DWORD PTR _point_reference_index$1[ebp], ecx

; 331  : 	
; 332  : 			faces++;

  005fe	8b 45 ec	 mov	 eax, DWORD PTR _faces$[ebp]
  00601	83 c0 01	 add	 eax, 1
  00604	89 45 ec	 mov	 DWORD PTR _faces$[ebp], eax

; 333  : 		}

  00607	eb b1		 jmp	 SHORT $LN2@draw_3d_cl
$LN3@draw_3d_cl:

; 334  : 	}
; 335  : 
; 336  : 	reinstate_d3d_fog ();

  00609	e8 00 00 00 00	 call	 ?reinstate_d3d_fog@@YGXXZ ; reinstate_d3d_fog
$LN1@draw_3d_cl:

; 337  : }

  0060e	5f		 pop	 edi
  0060f	5e		 pop	 esi
  00610	5b		 pop	 ebx
  00611	8b e5		 mov	 esp, ebp
  00613	5d		 pop	 ebp
  00614	c3		 ret	 0
?draw_3d_cloud_trumpet@@YGXXZ ENDP			; draw_3d_cloud_trumpet
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\clouds\3dtrump.c
;	COMDAT ?set_3d_cloud_trumpet_object@@YGXH@Z
_TEXT	SEGMENT
_object_number$ = 8					; size = 4
?set_3d_cloud_trumpet_object@@YGXH@Z PROC		; set_3d_cloud_trumpet_object, COMDAT

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 121  : 
; 122  : 	cloud_trumpet_object = construct_3d_object ( object_number );

  00009	8b 45 08	 mov	 eax, DWORD PTR _object_number$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z ; construct_3d_object
  00012	a3 00 00 00 00	 mov	 DWORD PTR ?cloud_trumpet_object@@3PAUOBJECT_3D_INSTANCE@@A, eax

; 123  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?set_3d_cloud_trumpet_object@@YGXH@Z ENDP		; set_3d_cloud_trumpet_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.h
;	COMDAT ?generate_lookup_outcode@@YGHHHHH@Z
_TEXT	SEGMENT
_xmin$ = 8						; size = 4
_ymin$ = 12						; size = 4
_xmax$ = 16						; size = 4
_ymax$ = 20						; size = 4
?generate_lookup_outcode@@YGHHHHH@Z PROC		; generate_lookup_outcode, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 
; 201  : 	__asm mov eax, xmin;

  00009	8b 45 08	 mov	 eax, DWORD PTR _xmin$[ebp]
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _ymin$[ebp]
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR _xmax$[ebp]
  00012	8b 55 14	 mov	 edx, DWORD PTR _ymax$[ebp]
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	81 e3 00 00 00
	80		 and	 ebx, -2147483648	; 80000000H
  0001e	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00021	81 e2 00 00 00
	80		 and	 edx, -2147483648	; 80000000H
  00027	c1 eb 1e	 shr	 ebx, 30			; 0000001eH
  0002a	83 e0 01	 and	 eax, 1
  0002d	c1 ea 1c	 shr	 edx, 28			; 0000001cH
  00030	83 e1 04	 and	 ecx, 4
  00033	0b c3		 or	 eax, ebx
  00035	0b ca		 or	 ecx, edx
  00037	0b c1		 or	 eax, ecx
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?generate_lookup_outcode@@YGHHHHH@Z ENDP		; generate_lookup_outcode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
