; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ai\ai_misc\ai_dbase.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A ; population_name_database
PUBLIC	??_C@_07KMIMGCEM@KEYSITE@			; `string'
PUBLIC	??_C@_04DADAHDDM@TOWN@				; `string'
PUBLIC	??_C@_0BK@GBLKCBAM@NUM_POPULATION_NAME_TYPES@	; `string'
_BSS	SEGMENT
?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A DD 01H DUP (?) ; population_name_database
_BSS	ENDS
;	COMDAT ??_C@_0BK@GBLKCBAM@NUM_POPULATION_NAME_TYPES@
CONST	SEGMENT
??_C@_0BK@GBLKCBAM@NUM_POPULATION_NAME_TYPES@ DB 'NUM_POPULATION_NAME_TYP'
	DB	'ES', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04DADAHDDM@TOWN@
CONST	SEGMENT
??_C@_04DADAHDDM@TOWN@ DB 'TOWN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMIMGCEM@KEYSITE@
CONST	SEGMENT
??_C@_07KMIMGCEM@KEYSITE@ DB 'KEYSITE', 00H		; `string'
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?initialise_ai_database@@YGXXZ			; initialise_ai_database
PUBLIC	?deinitialise_ai_database@@YGXXZ		; deinitialise_ai_database
PUBLIC	?load_ai_sector_data@@YGXPBD@Z			; load_ai_sector_data
PUBLIC	?initialise_population_name_database@@YGXXZ	; initialise_population_name_database
PUBLIC	?deinitialise_population_name_database@@YGXXZ	; deinitialise_population_name_database
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??load_ai_sector_data@@YGXPBD@Z@4JA ; `load_ai_sector_data'::`1'::__LINE__Var
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0DP@EHBGMBGI@size?5?$DN?$DN?5?$CINUM_MAP_X_SECTORS?5?$CK?5NU@ ; `string'
PUBLIC	?__LINE__Var@?0??initialise_population_name_database@@YGXXZ@4JA ; `initialise_population_name_database'::`1'::__LINE__Var
PUBLIC	??_C@_0BC@LAAKNGDF@route?2popname?4dat@		; `string'
PUBLIC	??_C@_05BMGBEOOC@?$CFs?2?$CFs@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0CD@GLCFPNHP@result?5?$DN?$DN?5FILE_TAG_POPULATION_T@ ; `string'
PUBLIC	??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@ ; `string'
PUBLIC	??_C@_0BI@MCOPGNPO@result?5?$DN?$DN?5FILE_TAG_ZOOM@ ; `string'
PUBLIC	??_C@_0EC@FOPFLJDK@AI_DBASE?3?5city?5name?5database?3?5u@ ; `string'
PUBLIC	__real@408f400000000000
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_strlen:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?file_size@@YGHPBD@Z:PROC			; file_size
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z:PROC	; get_next_file_tag
EXTRN	?get_next_file_float@@YGMPAU_iobuf@@@Z:PROC	; get_next_file_float
EXTRN	?get_next_file_string@@YGHPAU_iobuf@@PADH@Z:PROC ; get_next_file_string
EXTRN	?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z:PROC ; get_next_file_enum
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?application_tag_strings@@3PAPBDA:BYTE		; application_tag_strings
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT ??_C@_0EC@FOPFLJDK@AI_DBASE?3?5city?5name?5database?3?5u@
CONST	SEGMENT
??_C@_0EC@FOPFLJDK@AI_DBASE?3?5city?5name?5database?3?5u@ DB 'AI_DBASE: c'
	DB	'ity name database: unknown campaign tag %d (string %s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MCOPGNPO@result?5?$DN?$DN?5FILE_TAG_ZOOM@
CONST	SEGMENT
??_C@_0BI@MCOPGNPO@result?5?$DN?$DN?5FILE_TAG_ZOOM@ DB 'result == FILE_TA'
	DB	'G_ZOOM', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@
CONST	SEGMENT
??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@ DB 'result == FIL'
	DB	'E_TAG_POSITION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GLCFPNHP@result?5?$DN?$DN?5FILE_TAG_POPULATION_T@
CONST	SEGMENT
??_C@_0CD@GLCFPNHP@result?5?$DN?$DN?5FILE_TAG_POPULATION_T@ DB 'result =='
	DB	' FILE_TAG_POPULATION_TYPE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05BMGBEOOC@?$CFs?2?$CFs@
CONST	SEGMENT
??_C@_05BMGBEOOC@?$CFs?2?$CFs@ DB '%s\%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LAAKNGDF@route?2popname?4dat@
CONST	SEGMENT
??_C@_0BC@LAAKNGDF@route?2popname?4dat@ DB 'route\popname.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_population_name_database@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_population_name_database@@YGXXZ@4JA DD 0adH ; `initialise_population_name_database'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DP@EHBGMBGI@size?5?$DN?$DN?5?$CINUM_MAP_X_SECTORS?5?$CK?5NU@
CONST	SEGMENT
??_C@_0DP@EHBGMBGI@size?5?$DN?$DN?5?$CINUM_MAP_X_SECTORS?5?$CK?5NU@ DB 's'
	DB	'ize == (NUM_MAP_X_SECTORS * NUM_MAP_Z_SECTORS) * sizeof (int)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ai\ai_misc\ai_dbase.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??load_ai_sector_data@@YGXPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??load_ai_sector_data@@YGXPBD@Z@4JA DD 078H ; `load_ai_sector_data'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?population_name_type_strings@@3PAPBDA DD FLAT:??_C@_07KMIMGCEM@KEYSITE@ ; population_name_type_strings
	DD	FLAT:??_C@_04DADAHDDM@TOWN@
	DD	FLAT:??_C@_0BK@GBLKCBAM@NUM_POPULATION_NAME_TYPES@
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\ai_misc\ai_dbase.c
;	COMDAT ?deinitialise_population_name_database@@YGXXZ
_TEXT	SEGMENT
_destroy_city$1 = -4					; size = 4
?deinitialise_population_name_database@@YGXXZ PROC	; deinitialise_population_name_database, COMDAT

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 305  : 
; 306  : 	if (population_name_database)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A, 0 ; population_name_database
  00010	74 3d		 je	 SHORT $LN4@deinitiali
$LN2@deinitiali:

; 307  : 	{
; 308  : 
; 309  : 		population_name_database_type
; 310  : 			*destroy_city;
; 311  : 
; 312  : 		while (population_name_database)

  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A, 0 ; population_name_database
  00019	74 34		 je	 SHORT $LN4@deinitiali

; 313  : 		{
; 314  : 		
; 315  : 			destroy_city = population_name_database;

  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A ; population_name_database
  00020	89 45 fc	 mov	 DWORD PTR _destroy_city$1[ebp], eax

; 316  : 
; 317  : 			population_name_database = population_name_database->next;

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A ; population_name_database
  00028	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0002b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A, ecx ; population_name_database

; 318  : 
; 319  : 			if (destroy_city->name)

  00031	8b 45 fc	 mov	 eax, DWORD PTR _destroy_city$1[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 0b		 je	 SHORT $LN5@deinitiali

; 320  : 			{
; 321  : 
; 322  : 				free_mem (destroy_city->name);

  00039	8b 45 fc	 mov	 eax, DWORD PTR _destroy_city$1[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN5@deinitiali:

; 323  : 			}
; 324  : 
; 325  : 			free_mem (destroy_city);

  00044	8b 45 fc	 mov	 eax, DWORD PTR _destroy_city$1[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 326  : 		}

  0004d	eb c3		 jmp	 SHORT $LN2@deinitiali
$LN4@deinitiali:

; 327  : 	}
; 328  : 
; 329  : 	population_name_database = NULL;

  0004f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A, 0 ; population_name_database

; 330  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?deinitialise_population_name_database@@YGXXZ ENDP	; deinitialise_population_name_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\ai_misc\ai_dbase.c
;	COMDAT ?initialise_population_name_database@@YGXXZ
_TEXT	SEGMENT
tv228 = -476						; size = 8
tv78 = -472						; size = 4
_name$1 = -404						; size = 128
_tag$ = -276						; size = 4
_result$ = -272						; size = 4
_temp_filename$ = -268					; size = 256
_current_session$ = -12					; size = 4
_new_city$ = -8						; size = 4
_file_ptr$ = -4						; size = 4
?initialise_population_name_database@@YGXXZ PROC	; initialise_population_name_database, COMDAT

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 01 00
	00		 sub	 esp, 476		; 000001dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 174  : 
; 175  : 	FILE
; 176  : 		*file_ptr;
; 177  : 
; 178  : 	population_name_database_type
; 179  : 		*new_city;
; 180  : 
; 181  : 	session_list_data_type
; 182  : 		*current_session;
; 183  : 
; 184  : 	char
; 185  : 		temp_filename [256];
; 186  : 
; 187  : 	file_tags
; 188  : 		result,
; 189  : 		tag;
; 190  : 
; 191  : 	current_session = get_current_game_session ();

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00011	89 45 f4	 mov	 DWORD PTR _current_session$[ebp], eax

; 192  : 
; 193  : 	sprintf (temp_filename, "%s\\%s", current_session->data_path, AI_POPULATION_NAME_FILENAME);

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LAAKNGDF@route?2popname?4dat@
  00019	8b 45 f4	 mov	 eax, DWORD PTR _current_session$[ebp]
  0001c	83 c0 1c	 add	 eax, 28			; 0000001cH
  0001f	50		 push	 eax
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_05BMGBEOOC@?$CFs?2?$CFs@
  00025	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _temp_filename$[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 _sprintf
  00031	83 c4 10	 add	 esp, 16			; 00000010H

; 194  : 
; 195  : 	// JB 030311 Enable running out of separate directories
; 196  : 	file_ptr = safe_fopen (temp_filename, "r");

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00039	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00045	89 45 fc	 mov	 DWORD PTR _file_ptr$[ebp], eax

; 197  : 
; 198  : 	if (!file_ptr)

  00048	83 7d fc 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  0004c	75 05		 jne	 SHORT $LN6@initialise

; 199  : 	{
; 200  : 
; 201  : 		return;

  0004e	e9 0e 02 00 00	 jmp	 $LN1@initialise
$LN6@initialise:

; 202  : 	}
; 203  : 
; 204  : 	deinitialise_population_name_database ();

  00053	e8 00 00 00 00	 call	 ?deinitialise_population_name_database@@YGXXZ ; deinitialise_population_name_database
$LN15@initialise:

; 205  : 
; 206  : 	while (TRUE)

  00058	b8 01 00 00 00	 mov	 eax, 1
  0005d	85 c0		 test	 eax, eax
  0005f	0f 84 fc 01 00
	00		 je	 $LN3@initialise

; 207  : 	{
; 208  : 
; 209  : 		tag = ( file_tags ) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00065	68 af 00 00 00	 push	 175			; 000000afH
  0006a	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00078	89 85 ec fe ff
	ff		 mov	 DWORD PTR _tag$[ebp], eax

; 210  : 
; 211  : 		switch (tag)

  0007e	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _tag$[ebp]
  00084	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0008a	83 bd 28 fe ff
	ff e7		 cmp	 DWORD PTR tv78[ebp], -25 ; ffffffe7H
  00091	74 17		 je	 SHORT $LN7@initialise
  00093	83 bd 28 fe ff
	ff f6		 cmp	 DWORD PTR tv78[ebp], -10 ; fffffff6H
  0009a	74 10		 je	 SHORT $LN8@initialise
  0009c	83 bd 28 fe ff
	ff 67		 cmp	 DWORD PTR tv78[ebp], 103 ; 00000067H
  000a3	74 19		 je	 SHORT $LN9@initialise
  000a5	e9 90 01 00 00	 jmp	 $LN13@initialise
$LN7@initialise:

; 212  : 		{
; 213  : 
; 214  : 			case FILE_TAG_START:
; 215  : 			{
; 216  : 
; 217  : 				continue;

  000aa	eb ac		 jmp	 SHORT $LN15@initialise
$LN8@initialise:

; 218  : 			}
; 219  : 
; 220  : 			case FILE_TAG_END:
; 221  : 			{
; 222  : 
; 223  : 				fclose (file_ptr);

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000af	50		 push	 eax
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  000b6	83 c4 04	 add	 esp, 4

; 224  : 
; 225  : 				return;

  000b9	e9 a3 01 00 00	 jmp	 $LN1@initialise
$LN9@initialise:

; 226  : 			}
; 227  : 
; 228  : 			case FILE_TAG_NAME:
; 229  : 			{
; 230  : 
; 231  : 				char
; 232  : 					name [128];
; 233  : 
; 234  : 				//
; 235  : 				// Name
; 236  : 				//
; 237  : 
; 238  : 				get_next_file_string (file_ptr, name, sizeof (name));

  000be	68 80 00 00 00	 push	 128			; 00000080H
  000c3	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _name$1[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  000cd	51		 push	 ecx
  000ce	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 239  : 
; 240  : 				new_city = (population_name_database_type *) malloc_heap_mem (sizeof (population_name_database_type));

  000d3	6a 18		 push	 24			; 00000018H
  000d5	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  000da	89 45 f8	 mov	 DWORD PTR _new_city$[ebp], eax

; 241  : 
; 242  : 				new_city->name = ( char * ) malloc_heap_mem (strlen (name) + 4);

  000dd	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _name$1[ebp]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 _strlen
  000e9	83 c4 04	 add	 esp, 4
  000ec	83 c0 04	 add	 eax, 4
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  000f5	8b 4d f8	 mov	 ecx, DWORD PTR _new_city$[ebp]
  000f8	89 01		 mov	 DWORD PTR [ecx], eax

; 243  : 
; 244  : 				new_city->next = population_name_database;

  000fa	8b 45 f8	 mov	 eax, DWORD PTR _new_city$[ebp]
  000fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A ; population_name_database
  00103	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 245  : 
; 246  : 				population_name_database = new_city;

  00106	8b 45 f8	 mov	 eax, DWORD PTR _new_city$[ebp]
  00109	a3 00 00 00 00	 mov	 DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A, eax ; population_name_database

; 247  : 
; 248  : 				sprintf (new_city->name, "%s", name);

  0010e	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _name$1[ebp]
  00114	50		 push	 eax
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0011a	8b 4d f8	 mov	 ecx, DWORD PTR _new_city$[ebp]
  0011d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011f	52		 push	 edx
  00120	e8 00 00 00 00	 call	 _sprintf
  00125	83 c4 0c	 add	 esp, 12			; 0000000cH

; 249  : 
; 250  : 				//
; 251  : 				// Type
; 252  : 				//
; 253  : 
; 254  : 				result = ( file_tags ) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00128	68 af 00 00 00	 push	 175			; 000000afH
  0012d	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00132	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0013b	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _result$[ebp], eax

; 255  : 
; 256  : 				ASSERT (result == FILE_TAG_POPULATION_TYPE);

  00141	83 bd f0 fe ff
	ff 79		 cmp	 DWORD PTR _result$[ebp], 121 ; 00000079H
  00148	74 18		 je	 SHORT $LN10@initialise
  0014a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_population_name_database@@YGXXZ@4JA
  0014f	83 c0 53	 add	 eax, 83			; 00000053H
  00152	50		 push	 eax
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
  00158	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@GLCFPNHP@result?5?$DN?$DN?5FILE_TAG_POPULATION_T@
  0015d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@initialise:

; 257  : 
; 258  : 				new_city->type = ( population_name_types ) get_next_file_enum (file_ptr, population_name_type_strings, NUM_POPULATION_NAME_TYPES);

  00162	6a 02		 push	 2
  00164	68 00 00 00 00	 push	 OFFSET ?population_name_type_strings@@3PAPBDA
  00169	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00172	8b 4d f8	 mov	 ecx, DWORD PTR _new_city$[ebp]
  00175	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 259  : 
; 260  : 				//
; 261  : 				// Position
; 262  : 				//
; 263  : 		
; 264  : 				result = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00178	68 af 00 00 00	 push	 175			; 000000afH
  0017d	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00182	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0018b	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _result$[ebp], eax

; 265  : 
; 266  : 				ASSERT (result == FILE_TAG_POSITION);

  00191	83 bd f0 fe ff
	ff 7a		 cmp	 DWORD PTR _result$[ebp], 122 ; 0000007aH
  00198	74 18		 je	 SHORT $LN11@initialise
  0019a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_population_name_database@@YGXXZ@4JA
  0019f	83 c0 5d	 add	 eax, 93			; 0000005dH
  001a2	50		 push	 eax
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BKEIJNKA@result?5?$DN?$DN?5FILE_TAG_POSITION@
  001ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@initialise:

; 267  : 
; 268  : 				new_city->x = get_next_file_float (file_ptr);

  001b2	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001b5	50		 push	 eax
  001b6	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  001bb	8b 4d f8	 mov	 ecx, DWORD PTR _new_city$[ebp]
  001be	d9 59 08	 fstp	 DWORD PTR [ecx+8]

; 269  : 				new_city->z = get_next_file_float (file_ptr);

  001c1	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001c4	50		 push	 eax
  001c5	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  001ca	8b 4d f8	 mov	 ecx, DWORD PTR _new_city$[ebp]
  001cd	d9 59 0c	 fstp	 DWORD PTR [ecx+12]

; 270  : 
; 271  : 				//
; 272  : 				// Zoom Level
; 273  : 				//
; 274  : 
; 275  : 				result = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  001d0	68 af 00 00 00	 push	 175			; 000000afH
  001d5	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  001da	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001dd	50		 push	 eax
  001de	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  001e3	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _result$[ebp], eax

; 276  : 
; 277  : 				ASSERT (result == FILE_TAG_ZOOM);

  001e9	81 bd f0 fe ff
	ff ad 00 00 00	 cmp	 DWORD PTR _result$[ebp], 173 ; 000000adH
  001f3	74 18		 je	 SHORT $LN12@initialise
  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_population_name_database@@YGXXZ@4JA
  001fa	83 c0 68	 add	 eax, 104		; 00000068H
  001fd	50		 push	 eax
  001fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
  00203	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MCOPGNPO@result?5?$DN?$DN?5FILE_TAG_ZOOM@
  00208	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@initialise:

; 278  : 
; 279  : 				new_city->zoom = get_next_file_float (file_ptr) * (1.0 * KILOMETRE);

  0020d	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  00216	dd 9d 24 fe ff
	ff		 fstp	 QWORD PTR tv228[ebp]
  0021c	f2 0f 10 85 24
	fe ff ff	 movsd	 xmm0, QWORD PTR tv228[ebp]
  00224	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@408f400000000000
  0022c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00230	8b 4d f8	 mov	 ecx, DWORD PTR _new_city$[ebp]
  00233	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 280  : 
; 281  : 				#if DEBUG_MODULE
; 282  : 
; 283  : 				debug_log ("AI_DBASE: new city name %s at %f, %f", new_city->name, new_city->x, new_city->z);
; 284  : 
; 285  : 				#endif
; 286  : 
; 287  : 				break;

  00238	eb 22		 jmp	 SHORT $LN4@initialise
$LN13@initialise:

; 288  : 			}
; 289  : 
; 290  : 			default:
; 291  : 			{
; 292  : 
; 293  : 				debug_log ("AI_DBASE: city name database: unknown campaign tag %d (string %s)", tag, application_tag_strings [tag]);

  0023a	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _tag$[ebp]
  00240	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  00247	51		 push	 ecx
  00248	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _tag$[ebp]
  0024e	52		 push	 edx
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@FOPFLJDK@AI_DBASE?3?5city?5name?5database?3?5u@
  00254	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00259	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@initialise:

; 294  : 			}
; 295  : 		}
; 296  : 	}

  0025c	e9 f7 fd ff ff	 jmp	 $LN15@initialise
$LN3@initialise:
$LN1@initialise:

; 297  : }

  00261	5f		 pop	 edi
  00262	5e		 pop	 esi
  00263	5b		 pop	 ebx
  00264	8b e5		 mov	 esp, ebp
  00266	5d		 pop	 ebp
  00267	c3		 ret	 0
?initialise_population_name_database@@YGXXZ ENDP	; initialise_population_name_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\ai_misc\ai_dbase.c
;	COMDAT ?load_ai_sector_data@@YGXPBD@Z
_TEXT	SEGMENT
tv146 = -96						; size = 4
tv138 = -92						; size = 4
tv131 = -92						; size = 4
_file_ptr$ = -24					; size = 4
_loop_z$ = -20						; size = 4
_loop_x$ = -16						; size = 4
_side$ = -12						; size = 4
_size$ = -8						; size = 4
_sector$ = -4						; size = 4
_sector_filename$ = 8					; size = 4
?load_ai_sector_data@@YGXPBD@Z PROC			; load_ai_sector_data, COMDAT

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 121  : 
; 122  : 	entity
; 123  : 		*sector;
; 124  : 
; 125  : 	int
; 126  : 		size,
; 127  : 		side,
; 128  : 		loop_x,
; 129  : 		loop_z;
; 130  : 
; 131  : 	FILE
; 132  : 		*file_ptr;
; 133  : 
; 134  : 	// JB 030311 Enable running out of separate directories
; 135  : 	file_ptr = safe_fopen (sector_filename, "rb");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  0000e	8b 45 08	 mov	 eax, DWORD PTR _sector_filename$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00017	89 45 e8	 mov	 DWORD PTR _file_ptr$[ebp], eax

; 136  : 
; 137  : 	if (!file_ptr)

  0001a	83 7d e8 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  0001e	75 05		 jne	 SHORT $LN8@load_ai_se

; 138  : 	{
; 139  : 
; 140  : 		return;

  00020	e9 8e 01 00 00	 jmp	 $LN1@load_ai_se
$LN8@load_ai_se:

; 141  : 	}
; 142  : 
; 143  : 	size = file_size (sector_filename);

  00025	8b 45 08	 mov	 eax, DWORD PTR _sector_filename$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?file_size@@YGHPBD@Z	; file_size
  0002e	89 45 f8	 mov	 DWORD PTR _size$[ebp], eax

; 144  : 
; 145  : 	ASSERT (size == (NUM_MAP_X_SECTORS * NUM_MAP_Z_SECTORS) * sizeof (int));

  00031	a1 08 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00036	0f af 05 0c 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  0003d	c1 e0 02	 shl	 eax, 2
  00040	39 45 f8	 cmp	 DWORD PTR _size$[ebp], eax
  00043	74 18		 je	 SHORT $LN9@load_ai_se
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_ai_sector_data@@YGXPBD@Z@4JA
  0004a	83 c0 19	 add	 eax, 25			; 00000019H
  0004d	50		 push	 eax
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@EHBGMBGI@size?5?$DN?$DN?5?$CINUM_MAP_X_SECTORS?5?$CK?5NU@
  00058	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@load_ai_se:

; 146  : 
; 147  : 	if (file_ptr)

  0005d	83 7d e8 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  00061	0f 84 3f 01 00
	00		 je	 $LN10@load_ai_se

; 148  : 	{
; 149  : 	
; 150  : 		for (loop_x = 0; loop_x < NUM_MAP_X_SECTORS; loop_x ++)

  00067	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _loop_x$[ebp], 0
  0006e	eb 09		 jmp	 SHORT $LN4@load_ai_se
$LN2@load_ai_se:
  00070	8b 45 f0	 mov	 eax, DWORD PTR _loop_x$[ebp]
  00073	83 c0 01	 add	 eax, 1
  00076	89 45 f0	 mov	 DWORD PTR _loop_x$[ebp], eax
$LN4@load_ai_se:
  00079	8b 45 f0	 mov	 eax, DWORD PTR _loop_x$[ebp]
  0007c	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00082	0f 8d 1e 01 00
	00		 jge	 $LN10@load_ai_se

; 151  : 		{
; 152  : 	
; 153  : 			for (loop_z = 0; loop_z < NUM_MAP_Z_SECTORS; loop_z ++)

  00088	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _loop_z$[ebp], 0
  0008f	eb 09		 jmp	 SHORT $LN7@load_ai_se
$LN5@load_ai_se:
  00091	8b 45 ec	 mov	 eax, DWORD PTR _loop_z$[ebp]
  00094	83 c0 01	 add	 eax, 1
  00097	89 45 ec	 mov	 DWORD PTR _loop_z$[ebp], eax
$LN7@load_ai_se:
  0009a	8b 45 ec	 mov	 eax, DWORD PTR _loop_z$[ebp]
  0009d	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  000a3	0f 8d f8 00 00
	00		 jge	 $LN6@load_ai_se

; 154  : 			{
; 155  : 	
; 156  : 				fread (&side, 1, sizeof (int), file_ptr);

  000a9	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000ac	50		 push	 eax
  000ad	6a 04		 push	 4
  000af	6a 01		 push	 1
  000b1	8d 4d f4	 lea	 ecx, DWORD PTR _side$[ebp]
  000b4	51		 push	 ecx
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  000bb	83 c4 10	 add	 esp, 16			; 00000010H

; 157  : 	
; 158  : 				sector = get_local_raw_sector_entity (loop_x, loop_z);

  000be	8b 45 ec	 mov	 eax, DWORD PTR _loop_z$[ebp]
  000c1	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  000c8	03 45 f0	 add	 eax, DWORD PTR _loop_x$[ebp]
  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  000d1	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  000d5	74 1a		 je	 SHORT $LN12@load_ai_se
  000d7	8b 55 ec	 mov	 edx, DWORD PTR _loop_z$[ebp]
  000da	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  000e1	03 55 f0	 add	 edx, DWORD PTR _loop_x$[ebp]
  000e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  000e9	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  000ec	89 4d a4	 mov	 DWORD PTR tv131[ebp], ecx
  000ef	eb 21		 jmp	 SHORT $LN13@load_ai_se
$LN12@load_ai_se:
  000f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_ai_sector_data@@YGXPBD@Z@4JA
  000f7	83 c2 26	 add	 edx, 38			; 00000026H
  000fa	52		 push	 edx
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN13@load_ai_se:
  00112	8b 4d a4	 mov	 ecx, DWORD PTR tv131[ebp]
  00115	89 4d fc	 mov	 DWORD PTR _sector$[ebp], ecx

; 159  : 	
; 160  : 				set_local_entity_int_value (sector, INT_TYPE_SIDE, side);

  00118	83 7d fc 00	 cmp	 DWORD PTR _sector$[ebp], 0
  0011c	74 0a		 je	 SHORT $LN14@load_ai_se
  0011e	8b 45 fc	 mov	 eax, DWORD PTR _sector$[ebp]
  00121	8b 08		 mov	 ecx, DWORD PTR [eax]
  00123	89 4d a4	 mov	 DWORD PTR tv138[ebp], ecx
  00126	eb 21		 jmp	 SHORT $LN15@load_ai_se
$LN14@load_ai_se:
  00128	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_ai_sector_data@@YGXPBD@Z@4JA
  0012e	83 c2 28	 add	 edx, 40			; 00000028H
  00131	52		 push	 edx
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
  00137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00142	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN15@load_ai_se:
  00149	b9 01 00 00 00	 mov	 ecx, 1
  0014e	85 c9		 test	 ecx, ecx
  00150	74 09		 je	 SHORT $LN16@load_ai_se
  00152	c7 45 a0 bb 00
	00 00		 mov	 DWORD PTR tv146[ebp], 187 ; 000000bbH
  00159	eb 21		 jmp	 SHORT $LN17@load_ai_se
$LN16@load_ai_se:
  0015b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_ai_sector_data@@YGXPBD@Z@4JA
  00161	83 c2 28	 add	 edx, 40			; 00000028H
  00164	52		 push	 edx
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KHFGFJED@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00175	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN17@load_ai_se:
  0017c	8b 4d f4	 mov	 ecx, DWORD PTR _side$[ebp]
  0017f	51		 push	 ecx
  00180	68 bb 00 00 00	 push	 187			; 000000bbH
  00185	8b 55 fc	 mov	 edx, DWORD PTR _sector$[ebp]
  00188	52		 push	 edx
  00189	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv138[ebp], 1116
  00190	8b 4d a0	 mov	 ecx, DWORD PTR tv146[ebp]
  00193	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  0019a	ff d2		 call	 edx

; 161  : 			}

  0019c	e9 f0 fe ff ff	 jmp	 $LN5@load_ai_se
$LN6@load_ai_se:

; 162  : 		}

  001a1	e9 ca fe ff ff	 jmp	 $LN2@load_ai_se
$LN10@load_ai_se:

; 163  : 	}
; 164  : 
; 165  : 	fclose (file_ptr);

  001a6	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001a9	50		 push	 eax
  001aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  001b0	83 c4 04	 add	 esp, 4
$LN1@load_ai_se:

; 166  : }

  001b3	5f		 pop	 edi
  001b4	5e		 pop	 esi
  001b5	5b		 pop	 ebx
  001b6	8b e5		 mov	 esp, ebp
  001b8	5d		 pop	 ebp
  001b9	c2 04 00	 ret	 4
?load_ai_sector_data@@YGXPBD@Z ENDP			; load_ai_sector_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\ai_misc\ai_dbase.c
;	COMDAT ?deinitialise_ai_database@@YGXXZ
_TEXT	SEGMENT
?deinitialise_ai_database@@YGXXZ PROC			; deinitialise_ai_database, COMDAT

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?deinitialise_ai_database@@YGXXZ ENDP			; deinitialise_ai_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\ai_misc\ai_dbase.c
;	COMDAT ?initialise_ai_database@@YGXXZ
_TEXT	SEGMENT
?initialise_ai_database@@YGXXZ PROC			; initialise_ai_database, COMDAT

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 105  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?initialise_ai_database@@YGXXZ ENDP			; initialise_ai_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
