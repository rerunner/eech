; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_atan2f
PUBLIC	_atanf
PUBLIC	_cosf
PUBLIC	_fabsf
PUBLIC	_fmodf
PUBLIC	_sinf
PUBLIC	_tanf
PUBLIC	?atan@@YGMM@Z					; atan
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?tan@@YGMM@Z					; tan
PUBLIC	?initialise_ah64a_hud@@YGXXZ			; initialise_ah64a_hud
PUBLIC	?deinitialise_ah64a_hud@@YGXXZ			; deinitialise_ah64a_hud
PUBLIC	?draw_ah64a_hud@@YGXXZ				; draw_ah64a_hud
PUBLIC	??$fmod@MHX@@YGNMH@Z				; fmod<float,int,void>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA ; `clip_2d_point_to_hud_extent'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_01FJMABOPO@x@				; `string'
PUBLIC	??_C@_01EANLCPLP@y@				; `string'
PUBLIC	?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA ; `transform_hud_screen_co_ords_to_hud_texture_co_ords'::`1'::__LINE__Var
PUBLIC	??_C@_01KBJDNOO@i@				; `string'
PUBLIC	??_C@_01CBDEGOCN@j@				; `string'
PUBLIC	?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA	; `draw_heading_scale'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA ; `clip_2d_line'::`1'::__LINE__Var
PUBLIC	??_C@_09FMHJKMJN@ratio?5?$DO?50@		; `string'
PUBLIC	??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@		; `string'
PUBLIC	??_C@_09PGHAGEBG@ratio?5?$DM?50@		; `string'
PUBLIC	??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@		; `string'
PUBLIC	??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA ; `draw_flight_path_marker'::`1'::__LINE__Var
PUBLIC	??_C@_0M@BBKBBMJK@main_3d_env@			; `string'
PUBLIC	??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@ ; `string'
PUBLIC	??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@		; `string'
PUBLIC	?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA	; `draw_pitch_ladder'::`1'::__LINE__Var
PUBLIC	??_C@_03NJMPCKOA@?$CFd0@			; `string'
PUBLIC	?__LINE__Var@?0??draw_bank_scale@@YGXXZ@4JA	; `draw_bank_scale'::`1'::__LINE__Var
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_04FCMNJMCO@?$CFd?$CF?$CF@			; `string'
PUBLIC	?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA ; `display_waypoint_information'::`1'::__LINE__Var
PUBLIC	??_C@_06JCIGMCHD@?$CFc?3?$CFdm@			; `string'
PUBLIC	??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@		; `string'
PUBLIC	??_C@_07CFANIJPM@?$CFc?3?$CFdKm@		; `string'
PUBLIC	??_C@_06BAOIPBEF@?9?3?9?9?4?9@			; `string'
PUBLIC	??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@	; `string'
PUBLIC	??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@		; `string'
PUBLIC	?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA ; `display_weapon_information'::`1'::__LINE__Var
PUBLIC	??_C@_05DIALNFFA@?$CFs?5?$CFd@			; `string'
PUBLIC	??_C@_04EIHLKMGG@LOBL@				; `string'
PUBLIC	??_C@_07CMBMBPC@LOAL?9HI@			; `string'
PUBLIC	??_C@_08BKMPBOCK@TOF?3?$CF?40f@			; `string'
PUBLIC	??_C@_09BJGFDJJN@Salvo?3ALL@			; `string'
PUBLIC	??_C@_08GEOGCMHL@Salvo?3?$CFd@			; `string'
PUBLIC	?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA ; `draw_target_symbology'::`1'::__LINE__Var
PUBLIC	??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@ ; `string'
PUBLIC	?__LINE__Var@?0??display_target_information@@YGXXZ@4JA ; `display_target_information'::`1'::__LINE__Var
PUBLIC	??_C@_06GPMJGLEM@MARKED@			; `string'
PUBLIC	??_C@_0L@FONJMCCD@NO?5ACQUIRE@			; `string'
PUBLIC	??_C@_09GGBOJENB@NO?5WEAPON@			; `string'
PUBLIC	??_C@_09JLFDDBCD@NO?5TARGET@			; `string'
PUBLIC	??_C@_0P@CHNDIJGO@INVALID?5TARGET@		; `string'
PUBLIC	??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@		; `string'
PUBLIC	??_C@_06HCPKJKPH@NO?5LOS@			; `string'
PUBLIC	??_C@_0N@JALLFCND@NO?5BORESIGHT@		; `string'
PUBLIC	??_C@_09FBGPJAII@MIN?5RANGE@			; `string'
PUBLIC	??_C@_09FAGDAKDM@MAX?5RANGE@			; `string'
PUBLIC	??_C@_0L@PDLCBABH@VALID?5LOCK@			; `string'
PUBLIC	??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_03JKJFCLEN@FCR@				; `string'
PUBLIC	??_C@_05FALJMMFP@R?$CF?41f@			; `string'
PUBLIC	??_C@_04BCEGOCOA@AX?4X@				; `string'
PUBLIC	??_C@_04DBODHFDK@TADS@				; `string'
PUBLIC	??_C@_07HOJAAJFI@L?$CF04?40f@			; `string'
PUBLIC	??_C@_05NFPLLMGK@A?$CF?41f@			; `string'
PUBLIC	??_C@_04OKGDLNCL@NONE@				; `string'
PUBLIC	??_C@_08IOHAACLP@LASE?1FCR@			; `string'
PUBLIC	??_C@_08GAALIDIP@FCR?5XMIT@			; `string'
PUBLIC	??_C@_08JIHJFJPE@TGT?5LASE@			; `string'
PUBLIC	?__LINE__Var@?0??draw_bob_up_overlay@@YGXXZ@4JA	; `draw_bob_up_overlay'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3d0f5c29
PUBLIC	__real@3d23d70a
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3d8f5c29
PUBLIC	__real@3da3d70a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e000000
PUBLIC	__real@3e23d70a
PUBLIC	__real@3e32b8c2
PUBLIC	__real@3e47ae14
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e666666
PUBLIC	__real@3e6b851f
PUBLIC	__real@3e75c28f
PUBLIC	__real@3e860a92
PUBLIC	__real@3e87ae14
PUBLIC	__real@3e8e147b
PUBLIC	__real@3e99999a
PUBLIC	__real@3ea3d70a
PUBLIC	__real@3eab851f
PUBLIC	__real@3eb33333
PUBLIC	__real@3ebd70a4
PUBLIC	__real@3ecccccd
PUBLIC	__real@3ecf5c29
PUBLIC	__real@3ee147ae
PUBLIC	__real@3ef33333
PUBLIC	__real@3effbe77
PUBLIC	__real@3f000000
PUBLIC	__real@3f028f5c
PUBLIC	__real@3f197247
PUBLIC	__real@3f30a3d7
PUBLIC	__real@3f333333
PUBLIC	__real@3f370a3d
PUBLIC	__real@3f43d70a
PUBLIC	__real@3f451eb8
PUBLIC	__real@3f4a36e2eb1c432d
PUBLIC	__real@3f4a3d71
PUBLIC	__real@3f4c985f
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f50a3d7
PUBLIC	__real@3f533333
PUBLIC	__real@3f570a3d
PUBLIC	__real@3f59999a
PUBLIC	__real@3f5b645a
PUBLIC	__real@3f628f5c
PUBLIC	__real@3f651eb8
PUBLIC	__real@3f666666
PUBLIC	__real@3f733333
PUBLIC	__real@3f74fdf4
PUBLIC	__real@3f7c28f6
PUBLIC	__real@3f7eb852
PUBLIC	__real@3f7fbe77
PUBLIC	__real@3f800000
PUBLIC	__real@3f80624dd2f1a9fc
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3f86872b020c49ba
PUBLIC	__real@3f86f0068db8bac7
PUBLIC	__real@3f8999999999999a
PUBLIC	__real@3f93333333333333
PUBLIC	__real@3f9999999999999a
PUBLIC	__real@3fa0ff972474538f
PUBLIC	__real@3fa119ce075f6fd2
PUBLIC	__real@3fa47ae147ae147b
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fac5d63886594af
PUBLIC	__real@3fac779a6b50b0f2
PUBLIC	__real@3faccccccccccccd
PUBLIC	__real@3facce1c58255b03
PUBLIC	__real@3fb02b1da46102b2
PUBLIC	__real@3fb3333333333333
PUBLIC	__real@3fb3dd97f62b6ae8
PUBLIC	__real@3fb42c3c9eecbfb1
PUBLIC	__real@3fb53f7ced916873
PUBLIC	__real@3fb6571848000000
PUBLIC	__real@3fb8000000000000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc0c15236000000
PUBLIC	__real@3fc0cccccccccccd
PUBLIC	__real@3fc3333333333333
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fd0c15236000000
PUBLIC	__real@3fd2e147ae147ae1
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fd6571848000000
PUBLIC	__real@3fd6666666666666
PUBLIC	__real@3fd668b5487ab7e3
PUBLIC	__real@3fd6d1030d49bfe3
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fdbecde5a000000
PUBLIC	__real@3fdccccccccccccd
PUBLIC	__real@3fddadd14819999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe0c15236000000
PUBLIC	__real@3fe199999999999a
PUBLIC	__real@3fe4cccccccccccd
PUBLIC	__real@3fe6666666666666
PUBLIC	__real@3fe7333333333333
PUBLIC	__real@3fe999999999999a
PUBLIC	__real@3fee5e353f7ced91
PUBLIC	__real@3feff7ced916872b
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff8000000000000
PUBLIC	__real@3ff85d84
PUBLIC	__real@3ff921fb51000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4004000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@400921fb51000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@40100af61bdae6ca
PUBLIC	__real@40100af62b46c63e
PUBLIC	__real@4011666666666666
PUBLIC	__real@4014000000000000
PUBLIC	__real@4016eb167e7d81e3
PUBLIC	__real@4018000000000000
PUBLIC	__real@401921fb51000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@40400000
PUBLIC	__real@4044000000000000
PUBLIC	__real@404ca5dc00000000
PUBLIC	__real@4051f948
PUBLIC	__real@4058f9999999999a
PUBLIC	__real@405fffef9db22d0e
PUBLIC	__real@4060000000000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@4070000000000000
PUBLIC	__real@407ca5dc1e1ce25c
PUBLIC	__real@407e000000000000
PUBLIC	__real@4084000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@4097700000000000
PUBLIC	__real@40f86a0000000000
PUBLIC	__real@41000000
PUBLIC	__real@410e848000000000
PUBLIC	__real@42652ee0
PUBLIC	__real@42b20000
PUBLIC	__real@4344d9b3
PUBLIC	__real@43800000
PUBLIC	__real@80000000
PUBLIC	__real@bd0f5c29
PUBLIC	__real@bd4ccccd
PUBLIC	__real@bda3d70a
PUBLIC	__real@bdcccccd
PUBLIC	__real@be000000
PUBLIC	__real@be23d70a
PUBLIC	__real@be47ae14
PUBLIC	__real@be666666
PUBLIC	__real@be6b851f
PUBLIC	__real@be75c28f
PUBLIC	__real@be87ae14
PUBLIC	__real@be8e147b
PUBLIC	__real@be99999a
PUBLIC	__real@bea3d70a
PUBLIC	__real@beab851f
PUBLIC	__real@beb2b8c2
PUBLIC	__real@beb33333
PUBLIC	__real@bebd70a4
PUBLIC	__real@becccccd
PUBLIC	__real@becf5c29
PUBLIC	__real@bee147ae
PUBLIC	__real@bef33333
PUBLIC	__real@bef5c28f
PUBLIC	__real@bf000000
PUBLIC	__real@bf028f5c
PUBLIC	__real@bf0f5c29
PUBLIC	__real@bf19999a
PUBLIC	__real@bf1ae148
PUBLIC	__real@bf23d70a
PUBLIC	__real@bf2ccccd
PUBLIC	__real@bf30a3d7
PUBLIC	__real@bf333333
PUBLIC	__real@bf3851ec
PUBLIC	__real@bf39999a
PUBLIC	__real@bf400000
PUBLIC	__real@bf4ccccd
PUBLIC	__real@bf4f5c29
PUBLIC	__real@bf533333
PUBLIC	__real@bf733333
PUBLIC	__real@bf800000
PUBLIC	__real@bfb6571848000000
PUBLIC	__real@bfb999999999999a
PUBLIC	__real@bfc6571848000000
PUBLIC	__real@bfd2e147ae147ae1
PUBLIC	__real@bfddadd14819999a
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@bfe999999999999a
PUBLIC	__real@bfee666666666666
PUBLIC	__real@bff0000000000000
PUBLIC	__real@bff921fb51000000
PUBLIC	__real@c0000000
PUBLIC	__real@c00921fb51000000
PUBLIC	__real@c024000000000000
PUBLIC	__real@c0400000
PUBLIC	__real@c0800000
PUBLIC	__real@c08f400000000000
PUBLIC	__real@c0a00000
PUBLIC	__real@c1000000
PUBLIC	__real@c1100000
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_atan:PROC
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_fmod:PROC
EXTRN	_sin:PROC
EXTRN	_tan:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ:PROC ; debug_colour_log
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z:PROC ; create_system_texture_screen
EXTRN	?destroy_screen@@YGHPAUSCREEN@@@Z:PROC		; destroy_screen
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?set_block@@YGXHHHHUREAL_COLOUR@@@Z:PROC	; set_block
EXTRN	?draw_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_line
EXTRN	?set_d3d_transparency_on@@YGXXZ:PROC		; set_d3d_transparency_on
EXTRN	?set_d3d_transparency_off@@YGXXZ:PROC		; set_d3d_transparency_off
EXTRN	?set_d3d_zbuffer_comparison@@YGXH@Z:PROC	; set_d3d_zbuffer_comparison
EXTRN	?set_d3d_culling@@YGXH@Z:PROC			; set_d3d_culling
EXTRN	?set_d3d_texture_wrapping@@YGXHH@Z:PROC		; set_d3d_texture_wrapping
EXTRN	?set_d3d_texture_mag_filtering@@YGXH@Z:PROC	; set_d3d_texture_mag_filtering
EXTRN	?set_d3d_texture_min_filtering@@YGXH@Z:PROC	; set_d3d_texture_min_filtering
EXTRN	?set_d3d_texture_mip_filtering@@YGXH@Z:PROC	; set_d3d_texture_mip_filtering
EXTRN	?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_flat_shaded_textured_renderstate
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?get_system_texture_ptr@@YGPAUSCREEN@@H@Z:PROC	; get_system_texture_ptr
EXTRN	?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z:PROC ; flush_screen_texture_graphics
EXTRN	?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z:PROC ; set_mono_font_type
EXTRN	?get_mono_font_position@@YGXPAM0@Z:PROC		; get_mono_font_position
EXTRN	?set_mono_font_rel_position@@YGXMM@Z:PROC	; set_mono_font_rel_position
EXTRN	?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_mono_font_colour
EXTRN	?print_mono_font_char@@YGXD@Z:PROC		; print_mono_font_char
EXTRN	?get_mono_font_string_width@@YGMPBD@Z:PROC	; get_mono_font_string_width
EXTRN	?print_mono_font_string@@YGXPBD@Z:PROC		; print_mono_font_string
EXTRN	?create_2d_environment@@YGPAUENV_2D@@XZ:PROC	; create_2d_environment
EXTRN	?destroy_2d_environment@@YGXPAUENV_2D@@@Z:PROC	; destroy_2d_environment
EXTRN	?set_2d_active_environment@@YGXPAUENV_2D@@@Z:PROC ; set_2d_active_environment
EXTRN	?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z:PROC	; set_2d_viewport
EXTRN	?set_2d_window@@YGXPAUENV_2D@@MMMM@Z:PROC	; set_2d_window
EXTRN	?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z:PROC ; set_2d_instance_rotation
EXTRN	?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z:PROC ; set_2d_instance_position
EXTRN	?reset_2d_instance@@YGXPAUENV_2D@@@Z:PROC	; reset_2d_instance
EXTRN	?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z:PROC	; set_2d_pixel
EXTRN	?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_2d_line
EXTRN	?set_2d_mono_font_position@@YGXMM@Z:PROC	; set_2d_mono_font_position
EXTRN	?get_2d_world_position@@YGXMMPAM0@Z:PROC	; get_2d_world_position
EXTRN	?get_2d_float_screen_coordinates@@YGXMMPAM0@Z:PROC ; get_2d_float_screen_coordinates
EXTRN	?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z:PROC ; draw_2d_mono_sprite
EXTRN	?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z:PROC	; draw_2d_circle
EXTRN	?set_3d_active_environment@@YGXPAUENV_3D@@@Z:PROC ; set_3d_active_environment
EXTRN	?begin_3d_scene@@YGHXZ:PROC			; begin_3d_scene
EXTRN	?end_3d_scene@@YGXXZ:PROC			; end_3d_scene
EXTRN	?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z:PROC ; get_position_3d_screen_coordinates
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?get_local_entity_weapon_count@@YGHPAUENTITY@@H@Z:PROC ; get_local_entity_weapon_count
EXTRN	?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z:PROC ; get_local_entity_selected_weapon_to_target_offsets
EXTRN	?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z:PROC ; get_target_intercept_point
EXTRN	?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z:PROC ; get_waypoint_display_position
EXTRN	?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_current_waypoint
EXTRN	?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z:PROC ; set_main_3d_full_screen_params
EXTRN	?get_target_display_name@@YGPBDPAUENTITY@@PADH@Z:PROC ; get_target_display_name
EXTRN	?get_range_finder@@YG?AW4rangefinding_system@@XZ:PROC ; get_range_finder
EXTRN	?laser_is_active@@YGHXZ:PROC			; laser_is_active
EXTRN	?electrical_system_active@@YGHXZ:PROC		; electrical_system_active
EXTRN	?get_eo_tracking_point@@YGPAUVEC3D@@XZ:PROC	; get_eo_tracking_point
EXTRN	?get_range_to_target@@YGMXZ:PROC		; get_range_to_target
EXTRN	?clear_hud_bob_up_overlay@@YGXXZ:PROC		; clear_hud_bob_up_overlay
EXTRN	?draw_hud_background@@YGXPAUHUD_SCREEN_DATA@@H@Z:PROC ; draw_hud_background
EXTRN	?ground_radar_is_active@@YGHXZ:PROC		; ground_radar_is_active
EXTRN	?air_radar_is_active@@YGHXZ:PROC		; air_radar_is_active
EXTRN	?get_missile_flight_time@@YGMXZ:PROC		; get_missile_flight_time
EXTRN	?get_digital_clock_values@@YGXMPAM00@Z:PROC	; get_digital_clock_values
EXTRN	?application_video_width@@3HA:DWORD		; application_video_width
EXTRN	?d3d_modulate_alpha@@3HA:DWORD			; d3d_modulate_alpha
EXTRN	?sys_col_red@@3UREAL_COLOUR@@A:DWORD		; sys_col_red
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?active_2d_environment@@3PAUENV_2D@@A:DWORD	; active_2d_environment
EXTRN	?global_hud_size2@@3MA:DWORD			; global_hud_size2
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?overload_invalid_char_type_message@@3PBDB:DWORD ; overload_invalid_char_type_message
EXTRN	?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA:BYTE ; fn_get_local_entity_char_value
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?full_screen_width@@3MA:DWORD			; full_screen_width
EXTRN	?full_screen_height@@3MA:DWORD			; full_screen_height
EXTRN	?full_screen_x_mid@@3MA:DWORD			; full_screen_x_mid
EXTRN	?full_screen_y_mid@@3MA:DWORD			; full_screen_y_mid
EXTRN	?main_3d_env@@3PAUENV_3D@@A:DWORD		; main_3d_env
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?in_cockpit@@3HA:DWORD				; in_cockpit
EXTRN	?pilot_head_heading@@3MA:DWORD			; pilot_head_heading
EXTRN	?pilot_head_pitch@@3MA:DWORD			; pilot_head_pitch
EXTRN	?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; target_acquisition_system
EXTRN	?eo_azimuth@@3MA:DWORD				; eo_azimuth
EXTRN	?eo_max_azimuth@@3MA:DWORD			; eo_max_azimuth
EXTRN	?eo_elevation@@3MA:DWORD			; eo_elevation
EXTRN	?eo_min_elevation@@3MA:DWORD			; eo_min_elevation
EXTRN	?hud_colour_table@@3PAUREAL_COLOUR@@A:BYTE	; hud_colour_table
EXTRN	?hud_colour@@3UREAL_COLOUR@@A:DWORD		; hud_colour
EXTRN	?display_hud_layout_grid@@3HA:DWORD		; display_hud_layout_grid
EXTRN	?hud_bob_up_overlay@@3HA:DWORD			; hud_bob_up_overlay
EXTRN	?hud_bob_up_heading@@3MA:DWORD			; hud_bob_up_heading
EXTRN	?hud_bob_up_position@@3UVEC3D@@A:BYTE		; hud_bob_up_position
EXTRN	?hud_mode@@3W4HUD_MODES@@A:DWORD		; hud_mode
EXTRN	?previous_hud_mode@@3W4HUD_MODES@@A:DWORD	; previous_hud_mode
EXTRN	?hsd@@3UHUD_SCREEN_DATA@@A:BYTE			; hsd
EXTRN	?ground_radar@@3URADAR_PARAMS@@A:BYTE		; ground_radar
EXTRN	?air_radar@@3URADAR_PARAMS@@A:BYTE		; air_radar
EXTRN	?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A:DWORD ; weapon_lock_type
EXTRN	?rocket_salvo_size@@3HA:DWORD			; rocket_salvo_size
EXTRN	?ah64a_damage@@3TAH64A_DAMAGE_FLAGS@@A:DWORD	; ah64a_damage
EXTRN	?ah64a_stinger_seeker_head_x_position@@3MA:DWORD ; ah64a_stinger_seeker_head_x_position
EXTRN	?ah64a_stinger_seeker_head_y_position@@3MA:DWORD ; ah64a_stinger_seeker_head_y_position
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?hud_env@@3PAUENV_2D@@A DD 01H DUP (?)			; hud_env
?hud_viewport_size@@3MA DD 01H DUP (?)			; hud_viewport_size
?hud_viewport_x_org@@3MA DD 01H DUP (?)			; hud_viewport_x_org
?hud_viewport_y_org@@3MA DD 01H DUP (?)			; hud_viewport_y_org
?hud_viewport_x_min@@3MA DD 01H DUP (?)			; hud_viewport_x_min
?hud_viewport_y_min@@3MA DD 01H DUP (?)			; hud_viewport_y_min
?hud_viewport_x_max@@3MA DD 01H DUP (?)			; hud_viewport_x_max
?hud_viewport_y_max@@3MA DD 01H DUP (?)			; hud_viewport_y_max
?hdg_viewport_x_min@@3MA DD 01H DUP (?)			; hdg_viewport_x_min
?hdg_viewport_y_min@@3MA DD 01H DUP (?)			; hdg_viewport_y_min
?hdg_viewport_x_max@@3MA DD 01H DUP (?)			; hdg_viewport_x_max
?hdg_viewport_y_max@@3MA DD 01H DUP (?)			; hdg_viewport_y_max
?bank_scale_viewport_x_min@@3MA DD 01H DUP (?)		; bank_scale_viewport_x_min
?bank_scale_viewport_y_min@@3MA DD 01H DUP (?)		; bank_scale_viewport_y_min
?bank_scale_viewport_x_max@@3MA DD 01H DUP (?)		; bank_scale_viewport_x_max
?bank_scale_viewport_y_max@@3MA DD 01H DUP (?)		; bank_scale_viewport_y_max
?hud_screen_x_min@@3MA DD 01H DUP (?)			; hud_screen_x_min
?hud_screen_y_min@@3MA DD 01H DUP (?)			; hud_screen_y_min
?hud_screen_x_max@@3MA DD 01H DUP (?)			; hud_screen_x_max
?hud_screen_y_max@@3MA DD 01H DUP (?)			; hud_screen_y_max
?hud_screen_x_scale@@3MA DD 01H DUP (?)			; hud_screen_x_scale
?hud_screen_y_scale@@3MA DD 01H DUP (?)			; hud_screen_y_scale
?hud_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?)	; hud_texture_screen
?clear_hud_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; clear_hud_colour
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c1100000
CONST	SEGMENT
__real@c1100000 DD 0c1100000r			; -9
CONST	ENDS
;	COMDAT __real@c1000000
CONST	SEGMENT
__real@c1000000 DD 0c1000000r			; -8
CONST	ENDS
;	COMDAT __real@c0a00000
CONST	SEGMENT
__real@c0a00000 DD 0c0a00000r			; -5
CONST	ENDS
;	COMDAT __real@c08f400000000000
CONST	SEGMENT
__real@c08f400000000000 DQ 0c08f400000000000r	; -1000
CONST	ENDS
;	COMDAT __real@c0800000
CONST	SEGMENT
__real@c0800000 DD 0c0800000r			; -4
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@c024000000000000
CONST	SEGMENT
__real@c024000000000000 DQ 0c024000000000000r	; -10
CONST	ENDS
;	COMDAT __real@c00921fb51000000
CONST	SEGMENT
__real@c00921fb51000000 DQ 0c00921fb51000000r	; -3.14159
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bff921fb51000000
CONST	SEGMENT
__real@bff921fb51000000 DQ 0bff921fb51000000r	; -1.5708
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bfee666666666666
CONST	SEGMENT
__real@bfee666666666666 DQ 0bfee666666666666r	; -0.95
CONST	ENDS
;	COMDAT __real@bfe999999999999a
CONST	SEGMENT
__real@bfe999999999999a DQ 0bfe999999999999ar	; -0.8
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@bfddadd14819999a
CONST	SEGMENT
__real@bfddadd14819999a DQ 0bfddadd14819999ar	; -0.463734
CONST	ENDS
;	COMDAT __real@bfd2e147ae147ae1
CONST	SEGMENT
__real@bfd2e147ae147ae1 DQ 0bfd2e147ae147ae1r	; -0.295
CONST	ENDS
;	COMDAT __real@bfc6571848000000
CONST	SEGMENT
__real@bfc6571848000000 DQ 0bfc6571848000000r	; -0.174533
CONST	ENDS
;	COMDAT __real@bfb999999999999a
CONST	SEGMENT
__real@bfb999999999999a DQ 0bfb999999999999ar	; -0.1
CONST	ENDS
;	COMDAT __real@bfb6571848000000
CONST	SEGMENT
__real@bfb6571848000000 DQ 0bfb6571848000000r	; -0.0872665
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf733333
CONST	SEGMENT
__real@bf733333 DD 0bf733333r			; -0.95
CONST	ENDS
;	COMDAT __real@bf533333
CONST	SEGMENT
__real@bf533333 DD 0bf533333r			; -0.825
CONST	ENDS
;	COMDAT __real@bf4f5c29
CONST	SEGMENT
__real@bf4f5c29 DD 0bf4f5c29r			; -0.81
CONST	ENDS
;	COMDAT __real@bf4ccccd
CONST	SEGMENT
__real@bf4ccccd DD 0bf4ccccdr			; -0.8
CONST	ENDS
;	COMDAT __real@bf400000
CONST	SEGMENT
__real@bf400000 DD 0bf400000r			; -0.75
CONST	ENDS
;	COMDAT __real@bf39999a
CONST	SEGMENT
__real@bf39999a DD 0bf39999ar			; -0.725
CONST	ENDS
;	COMDAT __real@bf3851ec
CONST	SEGMENT
__real@bf3851ec DD 0bf3851ecr			; -0.72
CONST	ENDS
;	COMDAT __real@bf333333
CONST	SEGMENT
__real@bf333333 DD 0bf333333r			; -0.7
CONST	ENDS
;	COMDAT __real@bf30a3d7
CONST	SEGMENT
__real@bf30a3d7 DD 0bf30a3d7r			; -0.69
CONST	ENDS
;	COMDAT __real@bf2ccccd
CONST	SEGMENT
__real@bf2ccccd DD 0bf2ccccdr			; -0.675
CONST	ENDS
;	COMDAT __real@bf23d70a
CONST	SEGMENT
__real@bf23d70a DD 0bf23d70ar			; -0.64
CONST	ENDS
;	COMDAT __real@bf1ae148
CONST	SEGMENT
__real@bf1ae148 DD 0bf1ae148r			; -0.605
CONST	ENDS
;	COMDAT __real@bf19999a
CONST	SEGMENT
__real@bf19999a DD 0bf19999ar			; -0.6
CONST	ENDS
;	COMDAT __real@bf0f5c29
CONST	SEGMENT
__real@bf0f5c29 DD 0bf0f5c29r			; -0.56
CONST	ENDS
;	COMDAT __real@bf028f5c
CONST	SEGMENT
__real@bf028f5c DD 0bf028f5cr			; -0.51
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@bef5c28f
CONST	SEGMENT
__real@bef5c28f DD 0bef5c28fr			; -0.48
CONST	ENDS
;	COMDAT __real@bef33333
CONST	SEGMENT
__real@bef33333 DD 0bef33333r			; -0.475
CONST	ENDS
;	COMDAT __real@bee147ae
CONST	SEGMENT
__real@bee147ae DD 0bee147aer			; -0.44
CONST	ENDS
;	COMDAT __real@becf5c29
CONST	SEGMENT
__real@becf5c29 DD 0becf5c29r			; -0.405
CONST	ENDS
;	COMDAT __real@becccccd
CONST	SEGMENT
__real@becccccd DD 0becccccdr			; -0.4
CONST	ENDS
;	COMDAT __real@bebd70a4
CONST	SEGMENT
__real@bebd70a4 DD 0bebd70a4r			; -0.37
CONST	ENDS
;	COMDAT __real@beb33333
CONST	SEGMENT
__real@beb33333 DD 0beb33333r			; -0.35
CONST	ENDS
;	COMDAT __real@beb2b8c2
CONST	SEGMENT
__real@beb2b8c2 DD 0beb2b8c2r			; -0.349066
CONST	ENDS
;	COMDAT __real@beab851f
CONST	SEGMENT
__real@beab851f DD 0beab851fr			; -0.335
CONST	ENDS
;	COMDAT __real@bea3d70a
CONST	SEGMENT
__real@bea3d70a DD 0bea3d70ar			; -0.32
CONST	ENDS
;	COMDAT __real@be99999a
CONST	SEGMENT
__real@be99999a DD 0be99999ar			; -0.3
CONST	ENDS
;	COMDAT __real@be8e147b
CONST	SEGMENT
__real@be8e147b DD 0be8e147br			; -0.2775
CONST	ENDS
;	COMDAT __real@be87ae14
CONST	SEGMENT
__real@be87ae14 DD 0be87ae14r			; -0.265
CONST	ENDS
;	COMDAT __real@be75c28f
CONST	SEGMENT
__real@be75c28f DD 0be75c28fr			; -0.24
CONST	ENDS
;	COMDAT __real@be6b851f
CONST	SEGMENT
__real@be6b851f DD 0be6b851fr			; -0.23
CONST	ENDS
;	COMDAT __real@be666666
CONST	SEGMENT
__real@be666666 DD 0be666666r			; -0.225
CONST	ENDS
;	COMDAT __real@be47ae14
CONST	SEGMENT
__real@be47ae14 DD 0be47ae14r			; -0.195
CONST	ENDS
;	COMDAT __real@be23d70a
CONST	SEGMENT
__real@be23d70a DD 0be23d70ar			; -0.16
CONST	ENDS
;	COMDAT __real@be000000
CONST	SEGMENT
__real@be000000 DD 0be000000r			; -0.125
CONST	ENDS
;	COMDAT __real@bdcccccd
CONST	SEGMENT
__real@bdcccccd DD 0bdcccccdr			; -0.1
CONST	ENDS
;	COMDAT __real@bda3d70a
CONST	SEGMENT
__real@bda3d70a DD 0bda3d70ar			; -0.08
CONST	ENDS
;	COMDAT __real@bd4ccccd
CONST	SEGMENT
__real@bd4ccccd DD 0bd4ccccdr			; -0.05
CONST	ENDS
;	COMDAT __real@bd0f5c29
CONST	SEGMENT
__real@bd0f5c29 DD 0bd0f5c29r			; -0.035
CONST	ENDS
;	COMDAT __real@80000000
CONST	SEGMENT
__real@80000000 DD 080000000r			; -0
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@4344d9b3
CONST	SEGMENT
__real@4344d9b3 DD 04344d9b3r			; 196.85
CONST	ENDS
;	COMDAT __real@42b20000
CONST	SEGMENT
__real@42b20000 DD 042b20000r			; 89
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@410e848000000000
CONST	SEGMENT
__real@410e848000000000 DQ 0410e848000000000r	; 250000
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40f86a0000000000
CONST	SEGMENT
__real@40f86a0000000000 DQ 040f86a0000000000r	; 100000
CONST	ENDS
;	COMDAT __real@4097700000000000
CONST	SEGMENT
__real@4097700000000000 DQ 04097700000000000r	; 1500
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4084000000000000
CONST	SEGMENT
__real@4084000000000000 DQ 04084000000000000r	; 640
CONST	ENDS
;	COMDAT __real@407e000000000000
CONST	SEGMENT
__real@407e000000000000 DQ 0407e000000000000r	; 480
CONST	ENDS
;	COMDAT __real@407ca5dc1e1ce25c
CONST	SEGMENT
__real@407ca5dc1e1ce25c DQ 0407ca5dc1e1ce25cr	; 458.366
CONST	ENDS
;	COMDAT __real@4070000000000000
CONST	SEGMENT
__real@4070000000000000 DQ 04070000000000000r	; 256
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@4060000000000000
CONST	SEGMENT
__real@4060000000000000 DQ 04060000000000000r	; 128
CONST	ENDS
;	COMDAT __real@405fffef9db22d0e
CONST	SEGMENT
__real@405fffef9db22d0e DQ 0405fffef9db22d0er	; 127.999
CONST	ENDS
;	COMDAT __real@4058f9999999999a
CONST	SEGMENT
__real@4058f9999999999a DQ 04058f9999999999ar	; 99.9
CONST	ENDS
;	COMDAT __real@4051f948
CONST	SEGMENT
__real@4051f948 DD 04051f948r			; 3.28084
CONST	ENDS
;	COMDAT __real@404ca5dc00000000
CONST	SEGMENT
__real@404ca5dc00000000 DQ 0404ca5dc00000000r	; 57.2958
CONST	ENDS
;	COMDAT __real@4044000000000000
CONST	SEGMENT
__real@4044000000000000 DQ 04044000000000000r	; 40
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@401921fb51000000
CONST	SEGMENT
__real@401921fb51000000 DQ 0401921fb51000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@4018000000000000
CONST	SEGMENT
__real@4018000000000000 DQ 04018000000000000r	; 6
CONST	ENDS
;	COMDAT __real@4016eb167e7d81e3
CONST	SEGMENT
__real@4016eb167e7d81e3 DQ 04016eb167e7d81e3r	; 5.72958
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4011666666666666
CONST	SEGMENT
__real@4011666666666666 DQ 04011666666666666r	; 4.35
CONST	ENDS
;	COMDAT __real@40100af62b46c63e
CONST	SEGMENT
__real@40100af62b46c63e DQ 040100af62b46c63er	; 4.0107
CONST	ENDS
;	COMDAT __real@40100af61bdae6ca
CONST	SEGMENT
__real@40100af61bdae6ca DQ 040100af61bdae6car	; 4.0107
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@400921fb51000000
CONST	SEGMENT
__real@400921fb51000000 DQ 0400921fb51000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4004000000000000
CONST	SEGMENT
__real@4004000000000000 DQ 04004000000000000r	; 2.5
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff921fb51000000
CONST	SEGMENT
__real@3ff921fb51000000 DQ 03ff921fb51000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff85d84
CONST	SEGMENT
__real@3ff85d84 DD 03ff85d84r			; 1.94035
CONST	ENDS
;	COMDAT __real@3ff8000000000000
CONST	SEGMENT
__real@3ff8000000000000 DQ 03ff8000000000000r	; 1.5
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3feff7ced916872b
CONST	SEGMENT
__real@3feff7ced916872b DQ 03feff7ced916872br	; 0.999
CONST	ENDS
;	COMDAT __real@3fee5e353f7ced91
CONST	SEGMENT
__real@3fee5e353f7ced91 DQ 03fee5e353f7ced91r	; 0.949
CONST	ENDS
;	COMDAT __real@3fe999999999999a
CONST	SEGMENT
__real@3fe999999999999a DQ 03fe999999999999ar	; 0.8
CONST	ENDS
;	COMDAT __real@3fe7333333333333
CONST	SEGMENT
__real@3fe7333333333333 DQ 03fe7333333333333r	; 0.725
CONST	ENDS
;	COMDAT __real@3fe6666666666666
CONST	SEGMENT
__real@3fe6666666666666 DQ 03fe6666666666666r	; 0.7
CONST	ENDS
;	COMDAT __real@3fe4cccccccccccd
CONST	SEGMENT
__real@3fe4cccccccccccd DQ 03fe4cccccccccccdr	; 0.65
CONST	ENDS
;	COMDAT __real@3fe199999999999a
CONST	SEGMENT
__real@3fe199999999999a DQ 03fe199999999999ar	; 0.55
CONST	ENDS
;	COMDAT __real@3fe0c15236000000
CONST	SEGMENT
__real@3fe0c15236000000 DQ 03fe0c15236000000r	; 0.523599
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fddadd14819999a
CONST	SEGMENT
__real@3fddadd14819999a DQ 03fddadd14819999ar	; 0.463734
CONST	ENDS
;	COMDAT __real@3fdccccccccccccd
CONST	SEGMENT
__real@3fdccccccccccccd DQ 03fdccccccccccccdr	; 0.45
CONST	ENDS
;	COMDAT __real@3fdbecde5a000000
CONST	SEGMENT
__real@3fdbecde5a000000 DQ 03fdbecde5a000000r	; 0.436332
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3fd6d1030d49bfe3
CONST	SEGMENT
__real@3fd6d1030d49bfe3 DQ 03fd6d1030d49bfe3r	; 0.356507
CONST	ENDS
;	COMDAT __real@3fd668b5487ab7e3
CONST	SEGMENT
__real@3fd668b5487ab7e3 DQ 03fd668b5487ab7e3r	; 0.350141
CONST	ENDS
;	COMDAT __real@3fd6666666666666
CONST	SEGMENT
__real@3fd6666666666666 DQ 03fd6666666666666r	; 0.35
CONST	ENDS
;	COMDAT __real@3fd6571848000000
CONST	SEGMENT
__real@3fd6571848000000 DQ 03fd6571848000000r	; 0.349066
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fd2e147ae147ae1
CONST	SEGMENT
__real@3fd2e147ae147ae1 DQ 03fd2e147ae147ae1r	; 0.295
CONST	ENDS
;	COMDAT __real@3fd0c15236000000
CONST	SEGMENT
__real@3fd0c15236000000 DQ 03fd0c15236000000r	; 0.261799
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3fc3333333333333
CONST	SEGMENT
__real@3fc3333333333333 DQ 03fc3333333333333r	; 0.15
CONST	ENDS
;	COMDAT __real@3fc0cccccccccccd
CONST	SEGMENT
__real@3fc0cccccccccccd DQ 03fc0cccccccccccdr	; 0.13125
CONST	ENDS
;	COMDAT __real@3fc0c15236000000
CONST	SEGMENT
__real@3fc0c15236000000 DQ 03fc0c15236000000r	; 0.1309
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb8000000000000
CONST	SEGMENT
__real@3fb8000000000000 DQ 03fb8000000000000r	; 0.09375
CONST	ENDS
;	COMDAT __real@3fb6571848000000
CONST	SEGMENT
__real@3fb6571848000000 DQ 03fb6571848000000r	; 0.0872665
CONST	ENDS
;	COMDAT __real@3fb53f7ced916873
CONST	SEGMENT
__real@3fb53f7ced916873 DQ 03fb53f7ced916873r	; 0.083
CONST	ENDS
;	COMDAT __real@3fb42c3c9eecbfb1
CONST	SEGMENT
__real@3fb42c3c9eecbfb1 DQ 03fb42c3c9eecbfb1r	; 0.0788
CONST	ENDS
;	COMDAT __real@3fb3dd97f62b6ae8
CONST	SEGMENT
__real@3fb3dd97f62b6ae8 DQ 03fb3dd97f62b6ae8r	; 0.0776
CONST	ENDS
;	COMDAT __real@3fb3333333333333
CONST	SEGMENT
__real@3fb3333333333333 DQ 03fb3333333333333r	; 0.075
CONST	ENDS
;	COMDAT __real@3fb02b1da46102b2
CONST	SEGMENT
__real@3fb02b1da46102b2 DQ 03fb02b1da46102b2r	; 0.0631579
CONST	ENDS
;	COMDAT __real@3facce1c58255b03
CONST	SEGMENT
__real@3facce1c58255b03 DQ 03facce1c58255b03r	; 0.05626
CONST	ENDS
;	COMDAT __real@3faccccccccccccd
CONST	SEGMENT
__real@3faccccccccccccd DQ 03faccccccccccccdr	; 0.05625
CONST	ENDS
;	COMDAT __real@3fac779a6b50b0f2
CONST	SEGMENT
__real@3fac779a6b50b0f2 DQ 03fac779a6b50b0f2r	; 0.0556
CONST	ENDS
;	COMDAT __real@3fac5d63886594af
CONST	SEGMENT
__real@3fac5d63886594af DQ 03fac5d63886594afr	; 0.0554
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3fa47ae147ae147b
CONST	SEGMENT
__real@3fa47ae147ae147b DQ 03fa47ae147ae147br	; 0.04
CONST	ENDS
;	COMDAT __real@3fa119ce075f6fd2
CONST	SEGMENT
__real@3fa119ce075f6fd2 DQ 03fa119ce075f6fd2r	; 0.0334
CONST	ENDS
;	COMDAT __real@3fa0ff972474538f
CONST	SEGMENT
__real@3fa0ff972474538f DQ 03fa0ff972474538fr	; 0.0332
CONST	ENDS
;	COMDAT __real@3f9999999999999a
CONST	SEGMENT
__real@3f9999999999999a DQ 03f9999999999999ar	; 0.025
CONST	ENDS
;	COMDAT __real@3f93333333333333
CONST	SEGMENT
__real@3f93333333333333 DQ 03f93333333333333r	; 0.01875
CONST	ENDS
;	COMDAT __real@3f8999999999999a
CONST	SEGMENT
__real@3f8999999999999a DQ 03f8999999999999ar	; 0.0125
CONST	ENDS
;	COMDAT __real@3f86f0068db8bac7
CONST	SEGMENT
__real@3f86f0068db8bac7 DQ 03f86f0068db8bac7r	; 0.0112
CONST	ENDS
;	COMDAT __real@3f86872b020c49ba
CONST	SEGMENT
__real@3f86872b020c49ba DQ 03f86872b020c49bar	; 0.011
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f80624dd2f1a9fc
CONST	SEGMENT
__real@3f80624dd2f1a9fc DQ 03f80624dd2f1a9fcr	; 0.008
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fbe77
CONST	SEGMENT
__real@3f7fbe77 DD 03f7fbe77r			; 0.999
CONST	ENDS
;	COMDAT __real@3f7eb852
CONST	SEGMENT
__real@3f7eb852 DD 03f7eb852r			; 0.995
CONST	ENDS
;	COMDAT __real@3f7c28f6
CONST	SEGMENT
__real@3f7c28f6 DD 03f7c28f6r			; 0.985
CONST	ENDS
;	COMDAT __real@3f74fdf4
CONST	SEGMENT
__real@3f74fdf4 DD 03f74fdf4r			; 0.957
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f651eb8
CONST	SEGMENT
__real@3f651eb8 DD 03f651eb8r			; 0.895
CONST	ENDS
;	COMDAT __real@3f628f5c
CONST	SEGMENT
__real@3f628f5c DD 03f628f5cr			; 0.885
CONST	ENDS
;	COMDAT __real@3f5b645a
CONST	SEGMENT
__real@3f5b645a DD 03f5b645ar			; 0.857
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f570a3d
CONST	SEGMENT
__real@3f570a3d DD 03f570a3dr			; 0.84
CONST	ENDS
;	COMDAT __real@3f533333
CONST	SEGMENT
__real@3f533333 DD 03f533333r			; 0.825
CONST	ENDS
;	COMDAT __real@3f50a3d7
CONST	SEGMENT
__real@3f50a3d7 DD 03f50a3d7r			; 0.815
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f4c985f
CONST	SEGMENT
__real@3f4c985f DD 03f4c985fr			; 0.7992
CONST	ENDS
;	COMDAT __real@3f4a3d71
CONST	SEGMENT
__real@3f4a3d71 DD 03f4a3d71r			; 0.79
CONST	ENDS
;	COMDAT __real@3f4a36e2eb1c432d
CONST	SEGMENT
__real@3f4a36e2eb1c432d DQ 03f4a36e2eb1c432dr	; 0.0008
CONST	ENDS
;	COMDAT __real@3f451eb8
CONST	SEGMENT
__real@3f451eb8 DD 03f451eb8r			; 0.77
CONST	ENDS
;	COMDAT __real@3f43d70a
CONST	SEGMENT
__real@3f43d70a DD 03f43d70ar			; 0.765
CONST	ENDS
;	COMDAT __real@3f370a3d
CONST	SEGMENT
__real@3f370a3d DD 03f370a3dr			; 0.715
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f30a3d7
CONST	SEGMENT
__real@3f30a3d7 DD 03f30a3d7r			; 0.69
CONST	ENDS
;	COMDAT __real@3f197247
CONST	SEGMENT
__real@3f197247 DD 03f197247r			; 0.5994
CONST	ENDS
;	COMDAT __real@3f028f5c
CONST	SEGMENT
__real@3f028f5c DD 03f028f5cr			; 0.51
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3effbe77
CONST	SEGMENT
__real@3effbe77 DD 03effbe77r			; 0.4995
CONST	ENDS
;	COMDAT __real@3ef33333
CONST	SEGMENT
__real@3ef33333 DD 03ef33333r			; 0.475
CONST	ENDS
;	COMDAT __real@3ee147ae
CONST	SEGMENT
__real@3ee147ae DD 03ee147aer			; 0.44
CONST	ENDS
;	COMDAT __real@3ecf5c29
CONST	SEGMENT
__real@3ecf5c29 DD 03ecf5c29r			; 0.405
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3ebd70a4
CONST	SEGMENT
__real@3ebd70a4 DD 03ebd70a4r			; 0.37
CONST	ENDS
;	COMDAT __real@3eb33333
CONST	SEGMENT
__real@3eb33333 DD 03eb33333r			; 0.35
CONST	ENDS
;	COMDAT __real@3eab851f
CONST	SEGMENT
__real@3eab851f DD 03eab851fr			; 0.335
CONST	ENDS
;	COMDAT __real@3ea3d70a
CONST	SEGMENT
__real@3ea3d70a DD 03ea3d70ar			; 0.32
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e8e147b
CONST	SEGMENT
__real@3e8e147b DD 03e8e147br			; 0.2775
CONST	ENDS
;	COMDAT __real@3e87ae14
CONST	SEGMENT
__real@3e87ae14 DD 03e87ae14r			; 0.265
CONST	ENDS
;	COMDAT __real@3e860a92
CONST	SEGMENT
__real@3e860a92 DD 03e860a92r			; 0.261799
CONST	ENDS
;	COMDAT __real@3e75c28f
CONST	SEGMENT
__real@3e75c28f DD 03e75c28fr			; 0.24
CONST	ENDS
;	COMDAT __real@3e6b851f
CONST	SEGMENT
__real@3e6b851f DD 03e6b851fr			; 0.23
CONST	ENDS
;	COMDAT __real@3e666666
CONST	SEGMENT
__real@3e666666 DD 03e666666r			; 0.225
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e47ae14
CONST	SEGMENT
__real@3e47ae14 DD 03e47ae14r			; 0.195
CONST	ENDS
;	COMDAT __real@3e32b8c2
CONST	SEGMENT
__real@3e32b8c2 DD 03e32b8c2r			; 0.174533
CONST	ENDS
;	COMDAT __real@3e23d70a
CONST	SEGMENT
__real@3e23d70a DD 03e23d70ar			; 0.16
CONST	ENDS
;	COMDAT __real@3e000000
CONST	SEGMENT
__real@3e000000 DD 03e000000r			; 0.125
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3da3d70a
CONST	SEGMENT
__real@3da3d70a DD 03da3d70ar			; 0.08
CONST	ENDS
;	COMDAT __real@3d8f5c29
CONST	SEGMENT
__real@3d8f5c29 DD 03d8f5c29r			; 0.07
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3d23d70a
CONST	SEGMENT
__real@3d23d70a DD 03d23d70ar			; 0.04
CONST	ENDS
;	COMDAT __real@3d0f5c29
CONST	SEGMENT
__real@3d0f5c29 DD 03d0f5c29r			; 0.035
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_bob_up_overlay@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_bob_up_overlay@@YGXXZ@4JA DD 0a90H ; `draw_bob_up_overlay'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08JIHJFJPE@TGT?5LASE@
CONST	SEGMENT
??_C@_08JIHJFJPE@TGT?5LASE@ DB 'TGT LASE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GAALIDIP@FCR?5XMIT@
CONST	SEGMENT
??_C@_08GAALIDIP@FCR?5XMIT@ DB 'FCR XMIT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IOHAACLP@LASE?1FCR@
CONST	SEGMENT
??_C@_08IOHAACLP@LASE?1FCR@ DB 'LASE/FCR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKGDLNCL@NONE@
CONST	SEGMENT
??_C@_04OKGDLNCL@NONE@ DB 'NONE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05NFPLLMGK@A?$CF?41f@
CONST	SEGMENT
??_C@_05NFPLLMGK@A?$CF?41f@ DB 'A%.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HOJAAJFI@L?$CF04?40f@
CONST	SEGMENT
??_C@_07HOJAAJFI@L?$CF04?40f@ DB 'L%04.0f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DBODHFDK@TADS@
CONST	SEGMENT
??_C@_04DBODHFDK@TADS@ DB 'TADS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04BCEGOCOA@AX?4X@
CONST	SEGMENT
??_C@_04BCEGOCOA@AX?4X@ DB 'AX.X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05FALJMMFP@R?$CF?41f@
CONST	SEGMENT
??_C@_05FALJMMFP@R?$CF?41f@ DB 'R%.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JKJFCLEN@FCR@
CONST	SEGMENT
??_C@_03JKJFCLEN@FCR@ DB 'FCR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@ DB 'Invalid '
	DB	'weapon lock type = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PDLCBABH@VALID?5LOCK@
CONST	SEGMENT
??_C@_0L@PDLCBABH@VALID?5LOCK@ DB 'VALID LOCK', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FAGDAKDM@MAX?5RANGE@
CONST	SEGMENT
??_C@_09FAGDAKDM@MAX?5RANGE@ DB 'MAX RANGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBGPJAII@MIN?5RANGE@
CONST	SEGMENT
??_C@_09FBGPJAII@MIN?5RANGE@ DB 'MIN RANGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JALLFCND@NO?5BORESIGHT@
CONST	SEGMENT
??_C@_0N@JALLFCND@NO?5BORESIGHT@ DB 'NO BORESIGHT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HCPKJKPH@NO?5LOS@
CONST	SEGMENT
??_C@_06HCPKJKPH@NO?5LOS@ DB 'NO LOS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@
CONST	SEGMENT
??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@ DB 'SEEKER LIMIT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CHNDIJGO@INVALID?5TARGET@
CONST	SEGMENT
??_C@_0P@CHNDIJGO@INVALID?5TARGET@ DB 'INVALID TARGET', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JLFDDBCD@NO?5TARGET@
CONST	SEGMENT
??_C@_09JLFDDBCD@NO?5TARGET@ DB 'NO TARGET', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GGBOJENB@NO?5WEAPON@
CONST	SEGMENT
??_C@_09GGBOJENB@NO?5WEAPON@ DB 'NO WEAPON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FONJMCCD@NO?5ACQUIRE@
CONST	SEGMENT
??_C@_0L@FONJMCCD@NO?5ACQUIRE@ DB 'NO ACQUIRE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPMJGLEM@MARKED@
CONST	SEGMENT
??_C@_06GPMJGLEM@MARKED@ DB 'MARKED', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_target_information@@YGXXZ@4JA DD 0918H ; `display_target_information'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@
CONST	SEGMENT
??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@ DB 'WARNING! get_'
	DB	'local_entity_selected_weapon_to_target_offsets failed', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA DD 084aH ; `draw_target_symbology'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08GEOGCMHL@Salvo?3?$CFd@
CONST	SEGMENT
??_C@_08GEOGCMHL@Salvo?3?$CFd@ DB 'Salvo:%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJGFDJJN@Salvo?3ALL@
CONST	SEGMENT
??_C@_09BJGFDJJN@Salvo?3ALL@ DB 'Salvo:ALL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BKMPBOCK@TOF?3?$CF?40f@
CONST	SEGMENT
??_C@_08BKMPBOCK@TOF?3?$CF?40f@ DB 'TOF:%.0f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CMBMBPC@LOAL?9HI@
CONST	SEGMENT
??_C@_07CMBMBPC@LOAL?9HI@ DB 'LOAL-HI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EIHLKMGG@LOBL@
CONST	SEGMENT
??_C@_04EIHLKMGG@LOBL@ DB 'LOBL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DIALNFFA@?$CFs?5?$CFd@
CONST	SEGMENT
??_C@_05DIALNFFA@?$CFs?5?$CFd@ DB '%s %d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA DD 06c2H ; `display_weapon_information'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@
CONST	SEGMENT
??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@ DB '--:--:--', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@
CONST	SEGMENT
??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@ DB '%02d:%02d:%02d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BAOIPBEF@?9?3?9?9?4?9@
CONST	SEGMENT
??_C@_06BAOIPBEF@?9?3?9?9?4?9@ DB '-:--.-', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CFANIJPM@?$CFc?3?$CFdKm@
CONST	SEGMENT
??_C@_07CFANIJPM@?$CFc?3?$CFdKm@ DB '%c:%dKm', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@
CONST	SEGMENT
??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@ DB '%c:%.1fKm', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JCIGMCHD@?$CFc?3?$CFdm@
CONST	SEGMENT
??_C@_06JCIGMCHD@?$CFc?3?$CFdm@ DB '%c:%dm', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA DD 0658H ; `display_waypoint_information'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_04FCMNJMCO@?$CFd?$CF?$CF@
CONST	SEGMENT
??_C@_04FCMNJMCO@?$CFd?$CF?$CF@ DB '%d%%', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_bank_scale@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_bank_scale@@YGXXZ@4JA DD 0517H	; `draw_bank_scale'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03NJMPCKOA@?$CFd0@
CONST	SEGMENT
??_C@_03NJMPCKOA@?$CFd0@ DB '%d0', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA DD 0400H	; `draw_pitch_ladder'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@
CONST	SEGMENT
??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@ DB 'xstep != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@
CONST	SEGMENT
??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@ DB 'left_hud_x != r'
	DB	'ight_hud_x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BBKBBMJK@main_3d_env@
CONST	SEGMENT
??_C@_0M@BBKBBMJK@main_3d_env@ DB 'main_3d_env', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA DD 038cH ; `draw_flight_path_marker'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@
CONST	SEGMENT
??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@ DB '*'
	DB	'x1 >= xmin && *x1 <= xmax && *x2 >= xmin && *x2 <= xmax && *y'
	DB	'1 >= ymin && *y1 <= ymax && *y2 >= ymin && *y2 <= ymax', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@
CONST	SEGMENT
??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@ DB '*x2 < xmax', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PGHAGEBG@ratio?5?$DM?50@
CONST	SEGMENT
??_C@_09PGHAGEBG@ratio?5?$DM?50@ DB 'ratio < 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@
CONST	SEGMENT
??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@ DB '*x1 < xmax', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMHJKMJN@ratio?5?$DO?50@
CONST	SEGMENT
??_C@_09FMHJKMJN@ratio?5?$DO?50@ DB 'ratio > 0', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA DD 032eH ; `clip_2d_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA DD 01ebH	; `draw_heading_scale'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_01CBDEGOCN@j@
CONST	SEGMENT
??_C@_01CBDEGOCN@j@ DB 'j', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KBJDNOO@i@
CONST	SEGMENT
??_C@_01KBJDNOO@i@ DB 'i', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA DD 01b7H ; `transform_hud_screen_co_ords_to_hud_texture_co_ords'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_01EANLCPLP@y@
CONST	SEGMENT
??_C@_01EANLCPLP@y@ DB 'y', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01FJMABOPO@x@
CONST	SEGMENT
??_C@_01FJMABOPO@x@ DB 'x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_h'
	DB	'ud.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA DD 0118H ; `clip_2d_point_to_hud_extent'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?command_heading_carat@@3PADA DB 0bH			; command_heading_carat
	DB	06H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	ORG $+2
?radar_sweep_indicator@@3PADA DB 0bH			; radar_sweep_indicator
	DB	07H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	ORG $+7
?bob_up_command_heading_carat@@3PADA DB 07H		; bob_up_command_heading_carat
	DB	09H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	ORG $+5
?flight_path_marker@@3PADA DB 019H			; flight_path_marker
	DB	0fH
	DB	0f4H
	DB	0f7H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
?rate_of_climb_scale_pointer@@3PADA DB 05H		; rate_of_climb_scale_pointer
	DB	09H
	DB	0fbH
	DB	0fcH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_weapon_mode_hud@@YGXXZ
_TEXT	SEGMENT
?draw_weapon_mode_hud@@YGXXZ PROC			; draw_weapon_mode_hud, COMDAT

; 2980 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2981 : 	draw_hud_centre_datum ();

  00009	e8 00 00 00 00	 call	 ?draw_hud_centre_datum@@YGXXZ ; draw_hud_centre_datum

; 2982 : 
; 2983 : 	draw_heading_scale ();

  0000e	e8 00 00 00 00	 call	 ?draw_heading_scale@@YGXXZ ; draw_heading_scale

; 2984 : 
; 2985 : 	if (get_cockpit_look_ahead ())

  00013	e8 00 00 00 00	 call	 ?get_cockpit_look_ahead@@YGHXZ ; get_cockpit_look_ahead
  00018	85 c0		 test	 eax, eax
  0001a	74 17		 je	 SHORT $LN2@draw_weapo

; 2986 : 	{
; 2987 : 		if (previous_hud_mode == HUD_MODE_NAVIGATION)

  0001c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?previous_hud_mode@@3W4HUD_MODES@@A, 0 ; previous_hud_mode
  00023	75 09		 jne	 SHORT $LN3@draw_weapo

; 2988 : 			draw_pitch_ladder (TRUE);

  00025	6a 01		 push	 1
  00027	e8 00 00 00 00	 call	 ?draw_pitch_ladder@@YGXH@Z ; draw_pitch_ladder

; 2989 : 		else

  0002c	eb 05		 jmp	 SHORT $LN2@draw_weapo
$LN3@draw_weapo:

; 2990 : 			draw_flight_path_marker();

  0002e	e8 00 00 00 00	 call	 ?draw_flight_path_marker@@YGXXZ ; draw_flight_path_marker
$LN2@draw_weapo:

; 2991 : 	}
; 2992 : 
; 2993 : 	display_true_airspeed ();

  00033	e8 00 00 00 00	 call	 ?display_true_airspeed@@YGXXZ ; display_true_airspeed

; 2994 : 
; 2995 : 	draw_rate_of_climb_scale ();

  00038	e8 00 00 00 00	 call	 ?draw_rate_of_climb_scale@@YGXXZ ; draw_rate_of_climb_scale

; 2996 : 
; 2997 : 	display_engine_torque ();

  0003d	e8 00 00 00 00	 call	 ?display_engine_torque@@YGXXZ ; display_engine_torque

; 2998 : 
; 2999 : 	draw_target_symbology ();

  00042	e8 00 00 00 00	 call	 ?draw_target_symbology@@YGXXZ ; draw_target_symbology

; 3000 : 
; 3001 : 	display_weapon_information ();

  00047	e8 00 00 00 00	 call	 ?display_weapon_information@@YGXXZ ; display_weapon_information

; 3002 : 
; 3003 : 	display_target_information ();

  0004c	e8 00 00 00 00	 call	 ?display_target_information@@YGXXZ ; display_target_information

; 3004 : 
; 3005 : 	draw_field_of_view_and_regard_boxes ();

  00051	e8 00 00 00 00	 call	 ?draw_field_of_view_and_regard_boxes@@YGXXZ ; draw_field_of_view_and_regard_boxes

; 3006 : 
; 3007 : 	draw_bob_up_overlay ();

  00056	e8 00 00 00 00	 call	 ?draw_bob_up_overlay@@YGXXZ ; draw_bob_up_overlay

; 3008 : }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
?draw_weapon_mode_hud@@YGXXZ ENDP			; draw_weapon_mode_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_transition_mode_hud@@YGXXZ
_TEXT	SEGMENT
?draw_transition_mode_hud@@YGXXZ PROC			; draw_transition_mode_hud, COMDAT

; 2949 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2950 : 	draw_hud_centre_datum ();

  00009	e8 00 00 00 00	 call	 ?draw_hud_centre_datum@@YGXXZ ; draw_hud_centre_datum

; 2951 : 
; 2952 : 	draw_flight_path_marker ();

  0000e	e8 00 00 00 00	 call	 ?draw_flight_path_marker@@YGXXZ ; draw_flight_path_marker

; 2953 : 	
; 2954 : 	if (!hud_bob_up_overlay)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hud_bob_up_overlay@@3HA, 0 ; hud_bob_up_overlay
  0001a	75 05		 jne	 SHORT $LN2@draw_trans

; 2955 : 		draw_velocity_vector();

  0001c	e8 00 00 00 00	 call	 ?draw_velocity_vector@@YGXXZ ; draw_velocity_vector
$LN2@draw_trans:

; 2956 : 	
; 2957 : 	draw_heading_scale ();

  00021	e8 00 00 00 00	 call	 ?draw_heading_scale@@YGXXZ ; draw_heading_scale

; 2958 : 
; 2959 : 	display_true_airspeed ();

  00026	e8 00 00 00 00	 call	 ?display_true_airspeed@@YGXXZ ; display_true_airspeed

; 2960 : 
; 2961 : 	draw_rate_of_climb_scale ();

  0002b	e8 00 00 00 00	 call	 ?draw_rate_of_climb_scale@@YGXXZ ; draw_rate_of_climb_scale

; 2962 : 
; 2963 : 	display_engine_torque ();

  00030	e8 00 00 00 00	 call	 ?display_engine_torque@@YGXXZ ; display_engine_torque

; 2964 : 
; 2965 : 	display_waypoint_information ();

  00035	e8 00 00 00 00	 call	 ?display_waypoint_information@@YGXXZ ; display_waypoint_information

; 2966 : 
; 2967 : 	display_target_information ();

  0003a	e8 00 00 00 00	 call	 ?display_target_information@@YGXXZ ; display_target_information

; 2968 : 
; 2969 : 	draw_field_of_view_and_regard_boxes ();

  0003f	e8 00 00 00 00	 call	 ?draw_field_of_view_and_regard_boxes@@YGXXZ ; draw_field_of_view_and_regard_boxes

; 2970 : 
; 2971 : 	draw_bob_up_overlay ();

  00044	e8 00 00 00 00	 call	 ?draw_bob_up_overlay@@YGXXZ ; draw_bob_up_overlay

; 2972 : }

  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?draw_transition_mode_hud@@YGXXZ ENDP			; draw_transition_mode_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_navigation_mode_hud@@YGXXZ
_TEXT	SEGMENT
?draw_navigation_mode_hud@@YGXXZ PROC			; draw_navigation_mode_hud, COMDAT

; 2914 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2915 : 	draw_hud_centre_datum ();

  00009	e8 00 00 00 00	 call	 ?draw_hud_centre_datum@@YGXXZ ; draw_hud_centre_datum

; 2916 : 
; 2917 : 	draw_heading_scale ();

  0000e	e8 00 00 00 00	 call	 ?draw_heading_scale@@YGXXZ ; draw_heading_scale

; 2918 : 
; 2919 : 	if (get_cockpit_look_ahead ())

  00013	e8 00 00 00 00	 call	 ?get_cockpit_look_ahead@@YGHXZ ; get_cockpit_look_ahead
  00018	85 c0		 test	 eax, eax
  0001a	74 0c		 je	 SHORT $LN2@draw_navig

; 2920 : 	{
; 2921 : 		draw_pitch_ladder (FALSE);

  0001c	6a 00		 push	 0
  0001e	e8 00 00 00 00	 call	 ?draw_pitch_ladder@@YGXH@Z ; draw_pitch_ladder

; 2922 : 
; 2923 : 		draw_bank_scale ();

  00023	e8 00 00 00 00	 call	 ?draw_bank_scale@@YGXXZ	; draw_bank_scale
$LN2@draw_navig:

; 2924 : 	}
; 2925 : 
; 2926 : 	display_true_airspeed ();

  00028	e8 00 00 00 00	 call	 ?display_true_airspeed@@YGXXZ ; display_true_airspeed

; 2927 : 
; 2928 : 	display_barometric_altitude ();

  0002d	e8 00 00 00 00	 call	 ?display_barometric_altitude@@YGXXZ ; display_barometric_altitude

; 2929 : 
; 2930 : 	draw_rate_of_climb_scale ();

  00032	e8 00 00 00 00	 call	 ?draw_rate_of_climb_scale@@YGXXZ ; draw_rate_of_climb_scale

; 2931 : 
; 2932 : 	display_engine_torque ();

  00037	e8 00 00 00 00	 call	 ?display_engine_torque@@YGXXZ ; display_engine_torque

; 2933 : 
; 2934 : 	display_waypoint_information ();

  0003c	e8 00 00 00 00	 call	 ?display_waypoint_information@@YGXXZ ; display_waypoint_information

; 2935 : 
; 2936 : 	display_target_information ();

  00041	e8 00 00 00 00	 call	 ?display_target_information@@YGXXZ ; display_target_information

; 2937 : 
; 2938 : 	draw_field_of_view_and_regard_boxes ();

  00046	e8 00 00 00 00	 call	 ?draw_field_of_view_and_regard_boxes@@YGXXZ ; draw_field_of_view_and_regard_boxes

; 2939 : 
; 2940 : 	draw_bob_up_overlay ();

  0004b	e8 00 00 00 00	 call	 ?draw_bob_up_overlay@@YGXXZ ; draw_bob_up_overlay

; 2941 : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?draw_navigation_mode_hud@@YGXXZ ENDP			; draw_navigation_mode_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?get_cockpit_look_ahead@@YGHXZ
_TEXT	SEGMENT
tv65 = -72						; size = 4
_look_ahead$ = -4					; size = 4
?get_cockpit_look_ahead@@YGHXZ PROC			; get_cockpit_look_ahead, COMDAT

; 2865 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2866 : 	int
; 2867 : 		look_ahead;
; 2868 : 
; 2869 : 	look_ahead = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _look_ahead$[ebp], 0

; 2870 : 
; 2871 : 	if (in_cockpit)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  00017	0f 84 8a 00 00
	00		 je	 $LN4@get_cockpi

; 2872 : 	{
; 2873 : 		switch (get_view_mode ())

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?view_mode@@3W4VIEW_MODES@@A ; view_mode
  00022	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00025	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  00028	83 e9 11	 sub	 ecx, 17			; 00000011H
  0002b	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  0002e	83 7d b8 11	 cmp	 DWORD PTR tv65[ebp], 17	; 00000011H
  00032	77 71		 ja	 SHORT $LN2@get_cockpi
  00034	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00037	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN10@get_cockpi[edx]
  0003e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@get_cockpi[eax*4]
$LN6@get_cockpi:

; 2874 : 		{
; 2875 : 			case VIEW_MODE_COCKPIT_PANEL_LEVEL_AHEAD:
; 2876 : 			case VIEW_MODE_COCKPIT_PANEL_DOWN20_AHEAD:
; 2877 : 			{
; 2878 : 				look_ahead = TRUE;

  00045	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _look_ahead$[ebp], 1

; 2879 : 
; 2880 : 				break;

  0004c	eb 57		 jmp	 SHORT $LN2@get_cockpi
$LN7@get_cockpi:

; 2881 : 			}
; 2882 : 			case VIEW_MODE_VIRTUAL_COCKPIT:
; 2883 : 			case VIEW_MODE_VIRTUAL_COCKPIT_PADLOCK:
; 2884 : 			case VIEW_MODE_VIRTUAL_COCKPIT_TRACK_TARGET:
; 2885 : 			{
; 2886 : 				if
; 2887 : 				(
; 2888 : 					(pilot_head_heading >= rad (-26.57)) &&
; 2889 : 					(pilot_head_heading <= rad (26.57)) &&
; 2890 : 					(pilot_head_pitch >= rad (-26.57)) &&

  0004e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_heading@@3MA
  00056	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfddadd14819999a
  0005e	72 45		 jb	 SHORT $LN8@get_cockpi
  00060	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_heading@@3MA
  00068	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fddadd14819999a
  00070	66 0f 2f c8	 comisd	 xmm1, xmm0
  00074	72 2f		 jb	 SHORT $LN8@get_cockpi
  00076	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  0007e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfddadd14819999a
  00086	72 1d		 jb	 SHORT $LN8@get_cockpi
  00088	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  00090	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fddadd14819999a
  00098	66 0f 2f c8	 comisd	 xmm1, xmm0
  0009c	72 07		 jb	 SHORT $LN8@get_cockpi

; 2891 : 					(pilot_head_pitch <= rad (26.57))
; 2892 : 				)
; 2893 : 				{
; 2894 : 					look_ahead = TRUE;

  0009e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _look_ahead$[ebp], 1
$LN8@get_cockpi:
$LN2@get_cockpi:

; 2895 : 				}
; 2896 : 
; 2897 : 				break;
; 2898 : 			}
; 2899 : 		}
; 2900 : 	}
; 2901 : 	else

  000a5	eb 07		 jmp	 SHORT $LN5@get_cockpi
$LN4@get_cockpi:

; 2902 : 	{
; 2903 : 		look_ahead = TRUE;

  000a7	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _look_ahead$[ebp], 1
$LN5@get_cockpi:

; 2904 : 	}
; 2905 : 
; 2906 : 	return (look_ahead);

  000ae	8b 45 fc	 mov	 eax, DWORD PTR _look_ahead$[ebp]

; 2907 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
$LN11@get_cockpi:
  000b8	00 00 00 00	 DD	 $LN6@get_cockpi
  000bc	00 00 00 00	 DD	 $LN7@get_cockpi
  000c0	00 00 00 00	 DD	 $LN2@get_cockpi
$LN10@get_cockpi:
  000c4	00		 DB	 0
  000c5	02		 DB	 2
  000c6	02		 DB	 2
  000c7	02		 DB	 2
  000c8	02		 DB	 2
  000c9	02		 DB	 2
  000ca	02		 DB	 2
  000cb	00		 DB	 0
  000cc	02		 DB	 2
  000cd	02		 DB	 2
  000ce	02		 DB	 2
  000cf	02		 DB	 2
  000d0	02		 DB	 2
  000d1	02		 DB	 2
  000d2	02		 DB	 2
  000d3	01		 DB	 1
  000d4	01		 DB	 1
  000d5	01		 DB	 1
?get_cockpit_look_ahead@@YGHXZ ENDP			; get_cockpit_look_ahead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_bob_up_overlay@@YGXXZ
_TEXT	SEGMENT
tv364 = -100						; size = 4
tv350 = -100						; size = 4
tv411 = -96						; size = 4
tv409 = -96						; size = 4
tv140 = -96						; size = 4
tv79 = -96						; size = 4
tv357 = -92						; size = 4
tv343 = -92						; size = 4
tv132 = -92						; size = 4
tv71 = -92						; size = 4
_position$ = -24					; size = 4
_dzt$ = -20						; size = 4
_dxt$ = -16						; size = 4
_dz$ = -12						; size = 4
_dx$ = -8						; size = 4
_heading$ = -4						; size = 4
?draw_bob_up_overlay@@YGXXZ PROC			; draw_bob_up_overlay, COMDAT

; 2704 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2705 : 	float
; 2706 : 		heading,
; 2707 : 		dx,
; 2708 : 		dz,
; 2709 : 		dxt,
; 2710 : 		dzt;
; 2711 : 
; 2712 : 	vec3d *position;
; 2713 : 
; 2714 : 	if (hud_bob_up_overlay)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hud_bob_up_overlay@@3HA, 0 ; hud_bob_up_overlay
  00010	0f 84 88 05 00
	00		 je	 $LN4@draw_bob_u

; 2715 : 	{
; 2716 : 		position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  00016	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0001d	74 0c		 je	 SHORT $LN7@draw_bob_u
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d a4	 mov	 DWORD PTR tv71[ebp], ecx
  00029	eb 21		 jmp	 SHORT $LN8@draw_bob_u
$LN7@draw_bob_u:
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_bob_up_overlay@@YGXXZ@4JA
  00031	83 c2 0c	 add	 edx, 12			; 0000000cH
  00034	52		 push	 edx
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00045	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN8@draw_bob_u:
  0004c	b9 01 00 00 00	 mov	 ecx, 1
  00051	85 c9		 test	 ecx, ecx
  00053	74 09		 je	 SHORT $LN9@draw_bob_u
  00055	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv79[ebp], 8
  0005c	eb 21		 jmp	 SHORT $LN10@draw_bob_u
$LN9@draw_bob_u:
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_bob_up_overlay@@YGXXZ@4JA
  00064	83 c2 0c	 add	 edx, 12			; 0000000cH
  00067	52		 push	 edx
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00078	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN10@draw_bob_u:
  0007f	6a 08		 push	 8
  00081	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00087	51		 push	 ecx
  00088	6b 55 a4 60	 imul	 edx, DWORD PTR tv71[ebp], 96
  0008c	8b 45 a0	 mov	 eax, DWORD PTR tv79[ebp]
  0008f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00096	ff d1		 call	 ecx
  00098	89 45 e8	 mov	 DWORD PTR _position$[ebp], eax

; 2717 : 
; 2718 : 		dx = hud_bob_up_position.x - position->x;

  0009b	8b 45 e8	 mov	 eax, DWORD PTR _position$[ebp]
  0009e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_bob_up_position@@3UVEC3D@@A
  000a6	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000aa	f3 0f 11 45 f8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 2719 : 		dz = hud_bob_up_position.z - position->z;

  000af	8b 45 e8	 mov	 eax, DWORD PTR _position$[ebp]
  000b2	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_bob_up_position@@3UVEC3D@@A+8
  000ba	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  000bf	f3 0f 11 45 f4	 movss	 DWORD PTR _dz$[ebp], xmm0

; 2720 : 
; 2721 : 		if (((dx * dx) + (dz * dz)) < (500.0 * 500.0))

  000c4	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  000c9	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  000ce	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _dz$[ebp]
  000d3	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  000d8	f3 0f 58 c1	 addss	 xmm0, xmm1
  000dc	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000e0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@410e848000000000
  000e8	66 0f 2f c8	 comisd	 xmm1, xmm0
  000ec	0f 86 a7 04 00
	00		 jbe	 $LN3@draw_bob_u

; 2722 : 		{
; 2723 : 			heading = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_HEADING);

  000f2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000f9	74 0c		 je	 SHORT $LN11@draw_bob_u
  000fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00100	8b 08		 mov	 ecx, DWORD PTR [eax]
  00102	89 4d a4	 mov	 DWORD PTR tv132[ebp], ecx
  00105	eb 21		 jmp	 SHORT $LN12@draw_bob_u
$LN11@draw_bob_u:
  00107	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_bob_up_overlay@@YGXXZ@4JA
  0010d	83 c2 13	 add	 edx, 19			; 00000013H
  00110	52		 push	 edx
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00121	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN12@draw_bob_u:
  00128	b9 01 00 00 00	 mov	 ecx, 1
  0012d	85 c9		 test	 ecx, ecx
  0012f	74 09		 je	 SHORT $LN13@draw_bob_u
  00131	c7 45 a0 34 00
	00 00		 mov	 DWORD PTR tv140[ebp], 52 ; 00000034H
  00138	eb 21		 jmp	 SHORT $LN14@draw_bob_u
$LN13@draw_bob_u:
  0013a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_bob_up_overlay@@YGXXZ@4JA
  00140	83 c2 13	 add	 edx, 19			; 00000013H
  00143	52		 push	 edx
  00144	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00154	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN14@draw_bob_u:
  0015b	6a 34		 push	 52			; 00000034H
  0015d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00163	51		 push	 ecx
  00164	69 55 a4 bc 02
	00 00		 imul	 edx, DWORD PTR tv132[ebp], 700
  0016b	8b 45 a0	 mov	 eax, DWORD PTR tv140[ebp]
  0016e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00175	ff d1		 call	 ecx
  00177	d9 5d fc	 fstp	 DWORD PTR _heading$[ebp]

; 2724 : 
; 2725 : 			//
; 2726 : 			// hover box
; 2727 : 			//
; 2728 : 			if (hud_bob_up_overlay)

  0017a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hud_bob_up_overlay@@3HA, 0 ; hud_bob_up_overlay
  00181	0f 84 0b 04 00
	00		 je	 $LN5@draw_bob_u

; 2729 : 			{
; 2730 : 				dxt = (dx * cos (heading)) - (dz * sin (heading));

  00187	51		 push	 ecx
  00188	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0018d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00192	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00197	d9 5d a4	 fstp	 DWORD PTR tv343[ebp]
  0019a	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv343[ebp]
  0019f	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  001a4	51		 push	 ecx
  001a5	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _heading$[ebp]
  001aa	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001af	f3 0f 11 45 a0	 movss	 DWORD PTR tv409[ebp], xmm0
  001b4	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  001b9	d9 5d 9c	 fstp	 DWORD PTR tv350[ebp]
  001bc	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv350[ebp]
  001c1	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _dz$[ebp]
  001c6	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR tv409[ebp]
  001cb	f3 0f 5c c8	 subss	 xmm1, xmm0
  001cf	f3 0f 11 4d f0	 movss	 DWORD PTR _dxt$[ebp], xmm1

; 2731 : 				dzt = (dx * sin (heading)) + (dz * cos (heading));

  001d4	51		 push	 ecx
  001d5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  001da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001df	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  001e4	d9 5d a4	 fstp	 DWORD PTR tv357[ebp]
  001e7	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv357[ebp]
  001ec	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  001f1	51		 push	 ecx
  001f2	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _heading$[ebp]
  001f7	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001fc	f3 0f 11 45 a0	 movss	 DWORD PTR tv411[ebp], xmm0
  00201	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00206	d9 5d 9c	 fstp	 DWORD PTR tv364[ebp]
  00209	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv364[ebp]
  0020e	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _dz$[ebp]
  00213	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR tv411[ebp]
  00218	f3 0f 58 c8	 addss	 xmm1, xmm0
  0021c	f3 0f 11 4d ec	 movss	 DWORD PTR _dzt$[ebp], xmm1

; 2732 : 	
; 2733 : 				dxt *= 1.0 / 100.0;

  00221	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  00226	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0022e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00232	f3 0f 11 45 f0	 movss	 DWORD PTR _dxt$[ebp], xmm0

; 2734 : 				dzt *= 1.0 / 100.0;

  00237	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  0023c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00244	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00248	f3 0f 11 45 ec	 movss	 DWORD PTR _dzt$[ebp], xmm0

; 2735 : 	
; 2736 : 				clip_2d_point_to_hud_extent (&dxt, &dzt);

  0024d	8d 45 ec	 lea	 eax, DWORD PTR _dzt$[ebp]
  00250	50		 push	 eax
  00251	8d 4d f0	 lea	 ecx, DWORD PTR _dxt$[ebp]
  00254	51		 push	 ecx
  00255	e8 00 00 00 00	 call	 ?clip_2d_point_to_hud_extent@@YGXPAM0@Z ; clip_2d_point_to_hud_extent

; 2737 : 	
; 2738 : 				draw_2d_line (dxt - 0.083, dzt + 0.200, dxt + 0.083, dzt + 0.200, hud_colour);

  0025a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0025f	50		 push	 eax
  00260	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00265	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0026d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00271	51		 push	 ecx
  00272	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00277	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  0027c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  00284	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00288	51		 push	 ecx
  00289	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028e	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00293	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0029b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0029f	51		 push	 ecx
  002a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a5	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  002aa	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  002b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b6	51		 push	 ecx
  002b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bc	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2739 : 				draw_2d_line (dxt + 0.083, dzt + 0.200, dxt + 0.200, dzt + 0.083, hud_colour);

  002c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002c6	50		 push	 eax
  002c7	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  002cc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  002d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002d8	51		 push	 ecx
  002d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002de	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  002e3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  002eb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ef	51		 push	 ecx
  002f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f5	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  002fa	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00302	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00306	51		 push	 ecx
  00307	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030c	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  00311	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  00319	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0031d	51		 push	 ecx
  0031e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00323	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2740 : 				draw_2d_line (dxt + 0.200, dzt + 0.083, dxt + 0.200, dzt - 0.083, hud_colour);

  00328	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0032d	50		 push	 eax
  0032e	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00333	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  0033b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0033f	51		 push	 ecx
  00340	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00345	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  0034a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00352	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00356	51		 push	 ecx
  00357	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035c	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00361	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  00369	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0036d	51		 push	 ecx
  0036e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00373	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  00378	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00380	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00384	51		 push	 ecx
  00385	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2741 : 				draw_2d_line (dxt + 0.200, dzt - 0.083, dxt + 0.083, dzt - 0.200, hud_colour);

  0038f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00394	50		 push	 eax
  00395	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  0039a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  003a2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003a6	51		 push	 ecx
  003a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ac	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  003b1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  003b9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003bd	51		 push	 ecx
  003be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c3	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  003c8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  003d0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003d4	51		 push	 ecx
  003d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003da	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  003df	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  003e7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003eb	51		 push	 ecx
  003ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2742 : 				draw_2d_line (dxt + 0.083, dzt - 0.200, dxt - 0.083, dzt - 0.200, hud_colour);

  003f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003fb	50		 push	 eax
  003fc	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00401	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00409	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0040d	51		 push	 ecx
  0040e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00413	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  00418	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  00420	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00424	51		 push	 ecx
  00425	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042a	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  0042f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00437	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043b	51		 push	 ecx
  0043c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00441	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  00446	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  0044e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00452	51		 push	 ecx
  00453	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00458	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2743 : 				draw_2d_line (dxt - 0.083, dzt - 0.200, dxt - 0.200, dzt - 0.083, hud_colour);

  0045d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00462	50		 push	 eax
  00463	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00468	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  00470	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00474	51		 push	 ecx
  00475	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047a	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  0047f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00487	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0048b	51		 push	 ecx
  0048c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00491	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00496	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0049e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004a2	51		 push	 ecx
  004a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a8	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  004ad	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  004b5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004b9	51		 push	 ecx
  004ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004bf	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2744 : 				draw_2d_line (dxt - 0.200, dzt - 0.083, dxt - 0.200, dzt + 0.083, hud_colour);

  004c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004c9	50		 push	 eax
  004ca	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  004cf	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  004d7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004db	51		 push	 ecx
  004dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e1	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  004e6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  004ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f2	51		 push	 ecx
  004f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f8	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  004fd	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  00505	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00509	51		 push	 ecx
  0050a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050f	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  00514	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0051c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00520	51		 push	 ecx
  00521	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00526	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2745 : 				draw_2d_line (dxt - 0.200, dzt + 0.083, dxt - 0.083, dzt + 0.200, hud_colour);

  0052b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00530	50		 push	 eax
  00531	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00536	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0053e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00542	51		 push	 ecx
  00543	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00548	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  0054d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  00555	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00559	51		 push	 ecx
  0055a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055f	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _dzt$[ebp]
  00564	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb53f7ced916873
  0056c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00570	51		 push	 ecx
  00571	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00576	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dxt$[ebp]
  0057b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00583	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00587	51		 push	 ecx
  00588	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN5@draw_bob_u:

; 2746 : 			}
; 2747 : 			
; 2748 : 			draw_velocity_vector();

  00592	e8 00 00 00 00	 call	 ?draw_velocity_vector@@YGXXZ ; draw_velocity_vector

; 2749 : 		}
; 2750 : 		else

  00597	eb 05		 jmp	 SHORT $LN4@draw_bob_u
$LN3@draw_bob_u:

; 2751 : 		{
; 2752 : 			clear_hud_bob_up_overlay ();

  00599	e8 00 00 00 00	 call	 ?clear_hud_bob_up_overlay@@YGXXZ ; clear_hud_bob_up_overlay
$LN4@draw_bob_u:

; 2753 : 		}
; 2754 : 	}
; 2755 : }

  0059e	5f		 pop	 edi
  0059f	5e		 pop	 esi
  005a0	5b		 pop	 ebx
  005a1	8b e5		 mov	 esp, ebp
  005a3	5d		 pop	 ebp
  005a4	c3		 ret	 0
?draw_bob_up_overlay@@YGXXZ ENDP			; draw_bob_up_overlay
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_velocity_vector@@YGXXZ
_TEXT	SEGMENT
tv203 = -116						; size = 8
tv204 = -108						; size = 8
tv191 = -100						; size = 8
tv135 = -100						; size = 8
tv84 = -100						; size = 8
tv254 = -92						; size = 8
tv247 = -92						; size = 8
tv235 = -92						; size = 8
tv228 = -92						; size = 8
tv192 = -92						; size = 8
tv136 = -92						; size = 8
tv85 = -92						; size = 8
_dz$ = -20						; size = 4
_dx$ = -16						; size = 4
_z$ = -12						; size = 4
_x$ = -8						; size = 4
_scale$ = -4						; size = 4
?draw_velocity_vector@@YGXXZ PROC			; draw_velocity_vector, COMDAT

; 2656 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2657 : #define VV_CUTOFF_VELOCITY 10.0
; 2658 : 	float scale, x, z, dx, dz;
; 2659 : 	
; 2660 : 	z = current_flight_dynamics->velocity_z.value;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0000e	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  00016	f3 0f 11 45 f4	 movss	 DWORD PTR _z$[ebp], xmm0

; 2661 : 	x = current_flight_dynamics->velocity_x.value;

  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00020	f3 0f 10 80 6c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8300]
  00028	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 2662 : 
; 2663 : 	// cutoff the velocity marker if it gets too far from center
; 2664 : 	if (fabs(z) > VV_CUTOFF_VELOCITY)

  0002d	51		 push	 ecx
  0002e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0003d	dd 5d a4	 fstp	 QWORD PTR tv228[ebp]
  00040	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv228[ebp]
  00045	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  0004d	0f 86 90 00 00
	00		 jbe	 $LN2@draw_veloc

; 2665 : 	{
; 2666 : 		x *= VV_CUTOFF_VELOCITY / fabs(z);

  00053	51		 push	 ecx
  00054	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00063	dd 5d a4	 fstp	 QWORD PTR tv235[ebp]
  00066	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  0006e	f2 0f 5e 45 a4	 divsd	 xmm0, QWORD PTR tv235[ebp]
  00073	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _x$[ebp]
  00078	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0007c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00080	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 2667 : 		z = bound(z, -VV_CUTOFF_VELOCITY, VV_CUTOFF_VELOCITY);

  00085	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  0008a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c024000000000000
  00092	66 0f 2f c8	 comisd	 xmm1, xmm0
  00096	76 0f		 jbe	 SHORT $LN9@draw_veloc
  00098	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c024000000000000
  000a0	f2 0f 11 45 a4	 movsd	 QWORD PTR tv85[ebp], xmm0
  000a5	eb 32		 jmp	 SHORT $LN10@draw_veloc
$LN9@draw_veloc:
  000a7	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  000ac	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  000b4	76 0f		 jbe	 SHORT $LN7@draw_veloc
  000b6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  000be	f2 0f 11 45 9c	 movsd	 QWORD PTR tv84[ebp], xmm0
  000c3	eb 0a		 jmp	 SHORT $LN8@draw_veloc
$LN7@draw_veloc:
  000c5	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  000ca	f2 0f 11 45 9c	 movsd	 QWORD PTR tv84[ebp], xmm0
$LN8@draw_veloc:
  000cf	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv84[ebp]
  000d4	f2 0f 11 45 a4	 movsd	 QWORD PTR tv85[ebp], xmm0
$LN10@draw_veloc:
  000d9	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv85[ebp]
  000de	f3 0f 11 45 f4	 movss	 DWORD PTR _z$[ebp], xmm0
$LN2@draw_veloc:

; 2668 : 	}
; 2669 : 	if (fabs(x) > VV_CUTOFF_VELOCITY)

  000e3	51		 push	 ecx
  000e4	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  000e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ee	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  000f3	dd 5d a4	 fstp	 QWORD PTR tv247[ebp]
  000f6	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv247[ebp]
  000fb	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  00103	0f 86 90 00 00
	00		 jbe	 $LN3@draw_veloc

; 2670 : 	{
; 2671 : 		z *= VV_CUTOFF_VELOCITY / fabs(x);

  00109	51		 push	 ecx
  0010a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0010f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00114	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00119	dd 5d a4	 fstp	 QWORD PTR tv254[ebp]
  0011c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00124	f2 0f 5e 45 a4	 divsd	 xmm0, QWORD PTR tv254[ebp]
  00129	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _z$[ebp]
  0012e	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00132	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00136	f3 0f 11 45 f4	 movss	 DWORD PTR _z$[ebp], xmm0

; 2672 : 		x = bound(x, -VV_CUTOFF_VELOCITY, VV_CUTOFF_VELOCITY);

  0013b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00140	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c024000000000000
  00148	66 0f 2f c8	 comisd	 xmm1, xmm0
  0014c	76 0f		 jbe	 SHORT $LN13@draw_veloc
  0014e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c024000000000000
  00156	f2 0f 11 45 a4	 movsd	 QWORD PTR tv136[ebp], xmm0
  0015b	eb 32		 jmp	 SHORT $LN14@draw_veloc
$LN13@draw_veloc:
  0015d	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00162	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  0016a	76 0f		 jbe	 SHORT $LN11@draw_veloc
  0016c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00174	f2 0f 11 45 9c	 movsd	 QWORD PTR tv135[ebp], xmm0
  00179	eb 0a		 jmp	 SHORT $LN12@draw_veloc
$LN11@draw_veloc:
  0017b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00180	f2 0f 11 45 9c	 movsd	 QWORD PTR tv135[ebp], xmm0
$LN12@draw_veloc:
  00185	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv135[ebp]
  0018a	f2 0f 11 45 a4	 movsd	 QWORD PTR tv136[ebp], xmm0
$LN14@draw_veloc:
  0018f	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv136[ebp]
  00194	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0
$LN3@draw_veloc:

; 2673 : 	}
; 2674 : 
; 2675 : 	// from center use 70% of the hud area
; 2676 : 	scale = (0.7 / VV_CUTOFF_VELOCITY);

  00199	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  001a1	f3 0f 11 45 fc	 movss	 DWORD PTR _scale$[ebp], xmm0

; 2677 : 
; 2678 : 	x *= scale;

  001a6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  001ab	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  001b0	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 2679 : 	z *= scale;

  001b5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  001ba	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  001bf	f3 0f 11 45 f4	 movss	 DWORD PTR _z$[ebp], xmm0

; 2680 : 
; 2681 : 	draw_2d_line(0.0, 0.0, x, z, hud_colour);

  001c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001c9	50		 push	 eax
  001ca	51		 push	 ecx
  001cb	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  001d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d5	51		 push	 ecx
  001d6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  001db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e0	51		 push	 ecx
  001e1	0f 57 c0	 xorps	 xmm0, xmm0
  001e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e9	51		 push	 ecx
  001ea	0f 57 c0	 xorps	 xmm0, xmm0
  001ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2682 : 	// draw a little plus at the end
; 2683 : 	draw_2d_line(x, z - 0.01, x, z + 0.01, hud_colour);

  001f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001fc	50		 push	 eax
  001fd	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  00202	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0020a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020e	51		 push	 ecx
  0020f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00214	51		 push	 ecx
  00215	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0021a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021f	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _z$[ebp]
  00224	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0022c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00230	51		 push	 ecx
  00231	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00236	51		 push	 ecx
  00237	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0023c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00241	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2684 : 	draw_2d_line(x - 0.01, z, x + 0.01, z, hud_colour);

  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0024b	50		 push	 eax
  0024c	51		 push	 ecx
  0024d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  00252	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00257	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0025c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00264	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00268	51		 push	 ecx
  00269	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026e	51		 push	 ecx
  0026f	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  00274	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00279	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0027e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00286	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028a	51		 push	 ecx
  0028b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00290	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2685 : 
; 2686 : 	// draw acceleration cue
; 2687 : 	if (current_flight_dynamics->radar_altitude.value > 0.1)

  00295	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0029a	f3 0f 5a 80 44
	24 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9284]
  002a2	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  002aa	76 3e		 jbe	 SHORT $LN4@draw_veloc

; 2688 : 	{
; 2689 : 		dx = current_flight_dynamics->model_acceleration_vector.x / 40.0;

  002ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002b1	f3 0f 5a 80 48
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7240]
  002b9	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4044000000000000
  002c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c5	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0

; 2690 : 		dz = current_flight_dynamics->model_acceleration_vector.z / 20.0;

  002ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002cf	f3 0f 5a 80 50
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7248]
  002d7	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4034000000000000
  002df	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e3	f3 0f 11 45 ec	 movss	 DWORD PTR _dz$[ebp], xmm0

; 2691 : 	}
; 2692 : 	else  // the acceleration vector doesn't work on the ground (it apparently 

  002e8	eb 12		 jmp	 SHORT $LN5@draw_veloc
$LN4@draw_veloc:

; 2693 : 	      // assumes no ground interfers with the acceleration :)
; 2694 : 		dx = dz = 0.0;

  002ea	0f 57 c0	 xorps	 xmm0, xmm0
  002ed	f3 0f 11 45 ec	 movss	 DWORD PTR _dz$[ebp], xmm0
  002f2	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _dz$[ebp]
  002f7	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0
$LN5@draw_veloc:

; 2695 : 	
; 2696 : 	draw_2d_circle(bound(x+dx, -0.8, 0.8), bound(z+dz, -0.8, 0.8), 0.04, hud_colour);

  002fc	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  00301	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _dz$[ebp]
  00306	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0030a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfe999999999999a
  00312	66 0f 2f c8	 comisd	 xmm1, xmm0
  00316	76 0f		 jbe	 SHORT $LN17@draw_veloc
  00318	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfe999999999999a
  00320	f2 0f 11 45 a4	 movsd	 QWORD PTR tv192[ebp], xmm0
  00325	eb 44		 jmp	 SHORT $LN18@draw_veloc
$LN17@draw_veloc:
  00327	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  0032c	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _dz$[ebp]
  00331	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00335	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fe999999999999a
  0033d	76 0f		 jbe	 SHORT $LN15@draw_veloc
  0033f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fe999999999999a
  00347	f2 0f 11 45 9c	 movsd	 QWORD PTR tv191[ebp], xmm0
  0034c	eb 13		 jmp	 SHORT $LN16@draw_veloc
$LN15@draw_veloc:
  0034e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _z$[ebp]
  00353	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _dz$[ebp]
  00358	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0035c	f2 0f 11 45 9c	 movsd	 QWORD PTR tv191[ebp], xmm0
$LN16@draw_veloc:
  00361	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv191[ebp]
  00366	f2 0f 11 45 a4	 movsd	 QWORD PTR tv192[ebp], xmm0
$LN18@draw_veloc:
  0036b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00370	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _dx$[ebp]
  00375	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00379	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfe999999999999a
  00381	66 0f 2f c8	 comisd	 xmm1, xmm0
  00385	76 0f		 jbe	 SHORT $LN21@draw_veloc
  00387	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfe999999999999a
  0038f	f2 0f 11 45 94	 movsd	 QWORD PTR tv204[ebp], xmm0
  00394	eb 44		 jmp	 SHORT $LN22@draw_veloc
$LN21@draw_veloc:
  00396	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0039b	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _dx$[ebp]
  003a0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003a4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fe999999999999a
  003ac	76 0f		 jbe	 SHORT $LN19@draw_veloc
  003ae	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fe999999999999a
  003b6	f2 0f 11 45 8c	 movsd	 QWORD PTR tv203[ebp], xmm0
  003bb	eb 13		 jmp	 SHORT $LN20@draw_veloc
$LN19@draw_veloc:
  003bd	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  003c2	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _dx$[ebp]
  003c7	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003cb	f2 0f 11 45 8c	 movsd	 QWORD PTR tv203[ebp], xmm0
$LN20@draw_veloc:
  003d0	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv203[ebp]
  003d5	f2 0f 11 45 94	 movsd	 QWORD PTR tv204[ebp], xmm0
$LN22@draw_veloc:
  003da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003df	50		 push	 eax
  003e0	51		 push	 ecx
  003e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  003e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ee	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv192[ebp]
  003f3	51		 push	 ecx
  003f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f9	f2 0f 5a 45 94	 cvtsd2ss xmm0, QWORD PTR tv204[ebp]
  003fe	51		 push	 ecx
  003ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00404	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 2697 : }

  00409	5f		 pop	 edi
  0040a	5e		 pop	 esi
  0040b	5b		 pop	 ebx
  0040c	8b e5		 mov	 esp, ebp
  0040e	5d		 pop	 ebp
  0040f	c3		 ret	 0
?draw_velocity_vector@@YGXXZ ENDP			; draw_velocity_vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_field_of_view_and_regard_boxes@@YGXXZ
_TEXT	SEGMENT
tv75 = -92						; size = 8
tv76 = -84						; size = 8
_slip$ = -12						; size = 4
_y$ = -8						; size = 4
_x$ = -4						; size = 4
?draw_field_of_view_and_regard_boxes@@YGXXZ PROC	; draw_field_of_view_and_regard_boxes, COMDAT

; 2606 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2607 : 	float x, y, slip;
; 2608 : 
; 2609 : 	slip = bound(current_flight_dynamics->velocity_x.value, -10.0, 10.0);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0000e	f3 0f 5a 80 6c
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8300]
  00016	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c024000000000000
  0001e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00022	76 0f		 jbe	 SHORT $LN5@draw_field
  00024	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c024000000000000
  0002c	f2 0f 11 45 ac	 movsd	 QWORD PTR tv76[ebp], xmm0
  00031	eb 44		 jmp	 SHORT $LN6@draw_field
$LN5@draw_field:
  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00039	f3 0f 5a 81 6c
	20 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+8300]
  00041	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4024000000000000
  00049	76 0f		 jbe	 SHORT $LN3@draw_field
  0004b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00053	f2 0f 11 45 a4	 movsd	 QWORD PTR tv75[ebp], xmm0
  00058	eb 13		 jmp	 SHORT $LN4@draw_field
$LN3@draw_field:
  0005a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00060	f3 0f 5a 82 6c
	20 00 00	 cvtss2sd xmm0, DWORD PTR [edx+8300]
  00068	f2 0f 11 45 a4	 movsd	 QWORD PTR tv75[ebp], xmm0
$LN4@draw_field:
  0006d	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv75[ebp]
  00072	f2 0f 11 45 ac	 movsd	 QWORD PTR tv76[ebp], xmm0
$LN6@draw_field:
  00077	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv76[ebp]
  0007c	f3 0f 11 45 f4	 movss	 DWORD PTR _slip$[ebp], xmm0

; 2610 : 	slip *= 0.01;

  00081	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _slip$[ebp]
  00086	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0008e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00092	f3 0f 11 45 f4	 movss	 DWORD PTR _slip$[ebp], xmm0

; 2611 : 
; 2612 : 	// slip indicator
; 2613 : 	draw_2d_circle(slip, -0.6400, 0.0350, hud_colour);

  00097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0009c	50		 push	 eax
  0009d	51		 push	 ecx
  0009e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d0f5c29
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	51		 push	 ecx
  000ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf23d70a
  000b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b9	51		 push	 ecx
  000ba	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _slip$[ebp]
  000bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c4	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 2614 : 	draw_2d_line (0.0350, -0.6750,  0.0350, -0.6050, hud_colour);

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000ce	50		 push	 eax
  000cf	51		 push	 ecx
  000d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf1ae148
  000d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000dd	51		 push	 ecx
  000de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d0f5c29
  000e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000eb	51		 push	 ecx
  000ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  000f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f9	51		 push	 ecx
  000fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d0f5c29
  00102	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00107	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2615 : 	draw_2d_line (-0.0350, -0.6750, -0.0350, -0.6050, hud_colour);

  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00111	50		 push	 eax
  00112	51		 push	 ecx
  00113	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf1ae148
  0011b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00120	51		 push	 ecx
  00121	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd0f5c29
  00129	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012e	51		 push	 ecx
  0012f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  00137	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013c	51		 push	 ecx
  0013d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd0f5c29
  00145	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2616 : 
; 2617 : 	// box
; 2618 : 	draw_2d_line (-0.3000, -0.6750,  0.3000, -0.6750, hud_colour);

  0014f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00154	50		 push	 eax
  00155	51		 push	 ecx
  00156	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  0015e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00163	51		 push	 ecx
  00164	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  0016c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00171	51		 push	 ecx
  00172	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  0017a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017f	51		 push	 ecx
  00180	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00188	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2619 : 	draw_2d_line (-0.3000, -0.8250,  0.3000, -0.8250, hud_colour);

  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00197	50		 push	 eax
  00198	51		 push	 ecx
  00199	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf533333
  001a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a6	51		 push	 ecx
  001a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  001af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b4	51		 push	 ecx
  001b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf533333
  001bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c2	51		 push	 ecx
  001c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  001cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2620 : 	draw_2d_line (-0.3000, -0.6750, -0.3000, -0.8250, hud_colour);

  001d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001da	50		 push	 eax
  001db	51		 push	 ecx
  001dc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf533333
  001e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e9	51		 push	 ecx
  001ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  001f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f7	51		 push	 ecx
  001f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  00200	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00205	51		 push	 ecx
  00206	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  0020e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00213	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2621 : 	draw_2d_line ( 0.3000, -0.6750,  0.3000, -0.8250, hud_colour);

  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0021d	50		 push	 eax
  0021e	51		 push	 ecx
  0021f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf533333
  00227	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022c	51		 push	 ecx
  0022d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  00235	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023a	51		 push	 ecx
  0023b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  00243	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00248	51		 push	 ecx
  00249	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  00251	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00256	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2622 : 
; 2623 : 	// horizontal center tick marks
; 2624 : 	draw_2d_line ( 0.0000, -0.6750,  0.0000, -0.6900, hud_colour);

  0025b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00260	50		 push	 eax
  00261	51		 push	 ecx
  00262	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf30a3d7
  0026a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026f	51		 push	 ecx
  00270	0f 57 c0	 xorps	 xmm0, xmm0
  00273	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00278	51		 push	 ecx
  00279	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  00281	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00286	51		 push	 ecx
  00287	0f 57 c0	 xorps	 xmm0, xmm0
  0028a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2625 : 	draw_2d_line ( 0.0000, -0.8250,  0.0000, -0.8100, hud_colour);

  00294	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00299	50		 push	 eax
  0029a	51		 push	 ecx
  0029b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4f5c29
  002a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a8	51		 push	 ecx
  002a9	0f 57 c0	 xorps	 xmm0, xmm0
  002ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b1	51		 push	 ecx
  002b2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf533333
  002ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bf	51		 push	 ecx
  002c0	0f 57 c0	 xorps	 xmm0, xmm0
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2626 : 
; 2627 : 	// 90 deg right tick marks
; 2628 : 	draw_2d_line ( 0.2250, -0.6750,  0.2250, -0.6900, hud_colour);

  002cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002d2	50		 push	 eax
  002d3	51		 push	 ecx
  002d4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf30a3d7
  002dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e1	51		 push	 ecx
  002e2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e666666
  002ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ef	51		 push	 ecx
  002f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  002f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fd	51		 push	 ecx
  002fe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e666666
  00306	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2629 : 	draw_2d_line ( 0.2250, -0.8250,  0.2250, -0.8100, hud_colour);

  00310	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00315	50		 push	 eax
  00316	51		 push	 ecx
  00317	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4f5c29
  0031f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00324	51		 push	 ecx
  00325	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e666666
  0032d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00332	51		 push	 ecx
  00333	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf533333
  0033b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00340	51		 push	 ecx
  00341	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e666666
  00349	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2630 : 
; 2631 : 	// 90 deg left tick marks
; 2632 : 	draw_2d_line (-0.2250, -0.6750, -0.2250, -0.6900, hud_colour);

  00353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00358	50		 push	 eax
  00359	51		 push	 ecx
  0035a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf30a3d7
  00362	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00367	51		 push	 ecx
  00368	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be666666
  00370	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00375	51		 push	 ecx
  00376	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf2ccccd
  0037e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00383	51		 push	 ecx
  00384	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be666666
  0038c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00391	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2633 : 	draw_2d_line (-0.2250, -0.8250, -0.2250, -0.8100, hud_colour);

  00396	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0039b	50		 push	 eax
  0039c	51		 push	 ecx
  0039d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4f5c29
  003a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003aa	51		 push	 ecx
  003ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be666666
  003b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b8	51		 push	 ecx
  003b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf533333
  003c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c6	51		 push	 ecx
  003c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be666666
  003cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d4	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2634 : 
; 2635 : 	// vertical center tick marks
; 2636 : 	draw_2d_line (-0.3000, -0.7250, -0.2775, -0.7250, hud_colour);

  003d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003de	50		 push	 eax
  003df	51		 push	 ecx
  003e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf39999a
  003e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ed	51		 push	 ecx
  003ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be8e147b
  003f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003fb	51		 push	 ecx
  003fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf39999a
  00404	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00409	51		 push	 ecx
  0040a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00412	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00417	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2637 : 	draw_2d_line ( 0.3000, -0.7250,  0.2775, -0.7250, hud_colour);

  0041c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00421	50		 push	 eax
  00422	51		 push	 ecx
  00423	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf39999a
  0042b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00430	51		 push	 ecx
  00431	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e8e147b
  00439	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043e	51		 push	 ecx
  0043f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf39999a
  00447	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044c	51		 push	 ecx
  0044d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  00455	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2638 : 
; 2639 : 	x = eo_azimuth / eo_max_azimuth * 0.3;

  0045f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00467	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  0046f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00473	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  0047b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0047f	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0

; 2640 : 
; 2641 : 	y = (eo_elevation / eo_min_elevation * -0.10) - 0.7250;

  00484	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  0048c	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  00494	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00498	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfb999999999999a
  004a0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe7333333333333
  004a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004ac	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0

; 2642 : 
; 2643 : 	draw_2d_line (x - 0.0400, y - 0.0250, x + 0.0400, y - 0.0250, hud_colour);

  004b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004b6	50		 push	 eax
  004b7	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004bc	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  004c4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004c8	51		 push	 ecx
  004c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ce	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004d3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  004db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004df	51		 push	 ecx
  004e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e5	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004ea	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  004f2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f6	51		 push	 ecx
  004f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fc	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00501	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  00509	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0050d	51		 push	 ecx
  0050e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00513	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2644 : 	draw_2d_line (x - 0.0400, y + 0.0250, x + 0.0400, y + 0.0250, hud_colour);

  00518	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0051d	50		 push	 eax
  0051e	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00523	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  0052b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0052f	51		 push	 ecx
  00530	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00535	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0053a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  00542	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00546	51		 push	 ecx
  00547	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054c	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00551	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  00559	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0055d	51		 push	 ecx
  0055e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00563	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00568	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  00570	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00574	51		 push	 ecx
  00575	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0057a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2645 : 	draw_2d_line (x - 0.0400, y - 0.0250, x - 0.0400, y + 0.0250, hud_colour);

  0057f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00584	50		 push	 eax
  00585	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0058a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  00592	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00596	51		 push	 ecx
  00597	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0059c	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005a1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  005a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005ad	51		 push	 ecx
  005ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b3	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005b8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  005c0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c4	51		 push	 ecx
  005c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ca	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005cf	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  005d7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005db	51		 push	 ecx
  005dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2646 : 	draw_2d_line (x + 0.0400, y - 0.0250, x + 0.0400, y + 0.0250, hud_colour);

  005e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005eb	50		 push	 eax
  005ec	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005f1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  005f9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005fd	51		 push	 ecx
  005fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00603	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00608	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  00610	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00614	51		 push	 ecx
  00615	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061a	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0061f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  00627	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0062b	51		 push	 ecx
  0062c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00631	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00636	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa47ae147ae147b
  0063e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00642	51		 push	 ecx
  00643	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00648	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2647 : }

  0064d	5f		 pop	 edi
  0064e	5e		 pop	 esi
  0064f	5b		 pop	 ebx
  00650	8b e5		 mov	 esp, ebp
  00652	5d		 pop	 ebp
  00653	c3		 ret	 0
?draw_field_of_view_and_regard_boxes@@YGXXZ ENDP	; draw_field_of_view_and_regard_boxes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?display_target_information@@YGXXZ
_TEXT	SEGMENT
tv178 = -292						; size = 4
tv133 = -292						; size = 4
tv82 = -292						; size = 4
tv450 = -288						; size = 4
tv439 = -288						; size = 4
tv418 = -288						; size = 4
tv248 = -288						; size = 4
tv202 = -288						; size = 4
tv170 = -288						; size = 4
tv147 = -288						; size = 4
tv94 = -288						; size = 4
tv74 = -288						; size = 4
tv66 = -288						; size = 4
_has_range$ = -220					; size = 4
_target$ = -216						; size = 4
_target_range$ = -212					; size = 4
_width$ = -208						; size = 4
_buffer$ = -204						; size = 200
_s$ = -4						; size = 4
?display_target_information@@YGXXZ PROC			; display_target_information, COMDAT

; 2328 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2329 : 	const char
; 2330 : 		*s;
; 2331 : 	char
; 2332 : 		buffer[200];
; 2333 : 
; 2334 : 	float
; 2335 : 		width,
; 2336 : 		target_range;
; 2337 : 
; 2338 : 	entity
; 2339 : 		*target;
; 2340 : 
; 2341 : 	int
; 2342 : 		has_range = get_range_finder() != RANGEFINDER_TRIANGULATION;

  0000c	e8 00 00 00 00	 call	 ?get_range_finder@@YG?AW4rangefinding_system@@XZ ; get_range_finder
  00011	83 f8 02	 cmp	 eax, 2
  00014	74 0c		 je	 SHORT $LN44@display_ta
  00016	c7 85 e0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00020	eb 0a		 jmp	 SHORT $LN45@display_ta
$LN44@display_ta:
  00022	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN45@display_ta:
  0002c	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv66[ebp]
  00032	89 85 24 ff ff
	ff		 mov	 DWORD PTR _has_range$[ebp], eax

; 2343 : 
; 2344 : 	set_mono_font_type (MONO_FONT_TYPE_6X7);

  00038	6a 03		 push	 3
  0003a	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 2345 : 
; 2346 : // Jabberwock 031107 Designated targets
; 2347 : 	
; 2348 : 	target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00046	74 0f		 je	 SHORT $LN46@display_ta
  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0004d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004f	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  00055	eb 24		 jmp	 SHORT $LN47@display_ta
$LN46@display_ta:
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  0005d	83 c2 14	 add	 edx, 20			; 00000014H
  00060	52		 push	 edx
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00071	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN47@display_ta:
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	85 c9		 test	 ecx, ecx
  00082	74 0c		 je	 SHORT $LN48@display_ta
  00084	c7 85 dc fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv82[ebp], 38	; 00000026H
  0008e	eb 24		 jmp	 SHORT $LN49@display_ta
$LN48@display_ta:
  00090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  00096	83 c2 14	 add	 edx, 20			; 00000014H
  00099	52		 push	 edx
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000aa	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN49@display_ta:
  000b4	6a 26		 push	 38			; 00000026H
  000b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000bc	51		 push	 ecx
  000bd	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv74[ebp], 180
  000c7	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv82[ebp]
  000cd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000d4	ff d1		 call	 ecx
  000d6	89 85 28 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 2349 : 	
; 2350 : 	if (target && get_local_entity_parent (target, LIST_TYPE_DESIGNATED_TARGET))

  000dc	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  000e3	0f 84 f0 00 00
	00		 je	 $LN8@display_ta
  000e9	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  000f0	74 10		 je	 SHORT $LN50@display_ta
  000f2	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  000f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fa	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], ecx
  00100	eb 20		 jmp	 SHORT $LN51@display_ta
$LN50@display_ta:
  00102	68 2e 09 00 00	 push	 2350			; 0000092eH
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00112	52		 push	 edx
  00113	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00118	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN51@display_ta:
  00122	b8 01 00 00 00	 mov	 eax, 1
  00127	85 c0		 test	 eax, eax
  00129	74 0c		 je	 SHORT $LN52@display_ta
  0012b	c7 85 dc fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv133[ebp], 10 ; 0000000aH
  00135	eb 20		 jmp	 SHORT $LN53@display_ta
$LN52@display_ta:
  00137	68 2e 09 00 00	 push	 2350			; 0000092eH
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00141	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00147	51		 push	 ecx
  00148	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014d	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN53@display_ta:
  00157	6a 0a		 push	 10			; 0000000aH
  00159	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _target$[ebp]
  0015f	52		 push	 edx
  00160	69 85 e0 fe ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv94[ebp], 180
  0016a	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  00170	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00177	ff d2		 call	 edx
  00179	85 c0		 test	 eax, eax
  0017b	74 5c		 je	 SHORT $LN8@display_ta

; 2351 : 	{
; 2352 : 		s = "MARKED";

  0017d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_06GPMJGLEM@MARKED@

; 2353 : 
; 2354 : 		width = get_mono_font_string_width (s);

  00184	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0018d	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 2355 : 
; 2356 : 		set_2d_mono_font_position (-1.0, -0.8);

  00193	51		 push	 ecx
  00194	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  0019c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a1	51		 push	 ecx
  001a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001af	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2357 : 
; 2358 : 		set_mono_font_rel_position (1.0, 0.0);

  001b4	51		 push	 ecx
  001b5	0f 57 c0	 xorps	 xmm0, xmm0
  001b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bd	51		 push	 ecx
  001be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cb	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2359 : 
; 2360 : 		print_mono_font_string (s);

  001d0	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN8@display_ta:

; 2361 : 	}
; 2362 : // Jabberwock 031107 ends
; 2363 : 
; 2364 : 
; 2365 : 	//
; 2366 : 	// weapon lock
; 2367 : 	//
; 2368 : 
; 2369 : 	switch (weapon_lock_type)

  001d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A ; weapon_lock_type
  001de	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv147[ebp], eax
  001e4	83 bd e0 fe ff
	ff 09		 cmp	 DWORD PTR tv147[ebp], 9
  001eb	77 79		 ja	 SHORT $LN21@display_ta
  001ed	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv147[ebp]
  001f3	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN60@display_ta[ecx*4]
$LN9@display_ta:

; 2370 : 	{
; 2371 : 		////////////////////////////////////////
; 2372 : 		case WEAPON_LOCK_NO_ACQUIRE:
; 2373 : 		////////////////////////////////////////
; 2374 : 		{
; 2375 : 			s = "NO ACQUIRE";

  001fa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0L@FONJMCCD@NO?5ACQUIRE@

; 2376 : 
; 2377 : 			break;

  00201	eb 76		 jmp	 SHORT $LN2@display_ta
$LN10@display_ta:

; 2378 : 		}
; 2379 : 		////////////////////////////////////////
; 2380 : 		case WEAPON_LOCK_NO_WEAPON:
; 2381 : 		////////////////////////////////////////
; 2382 : 		{
; 2383 : 			s = "NO WEAPON";

  00203	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09GGBOJENB@NO?5WEAPON@

; 2384 : 
; 2385 : 			break;

  0020a	eb 6d		 jmp	 SHORT $LN2@display_ta
$LN11@display_ta:

; 2386 : 		}
; 2387 : 		////////////////////////////////////////
; 2388 : 		case WEAPON_LOCK_NO_TARGET:
; 2389 : 		////////////////////////////////////////
; 2390 : 		{
; 2391 : 			s = "NO TARGET";

  0020c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09JLFDDBCD@NO?5TARGET@

; 2392 : 
; 2393 : 			break;

  00213	eb 64		 jmp	 SHORT $LN2@display_ta
$LN12@display_ta:

; 2394 : 		}
; 2395 : 		////////////////////////////////////////
; 2396 : 		case WEAPON_LOCK_INVALID_TARGET:
; 2397 : 		////////////////////////////////////////
; 2398 : 		{
; 2399 : 			s = "INVALID TARGET";

  00215	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0P@CHNDIJGO@INVALID?5TARGET@

; 2400 : 
; 2401 : 			break;

  0021c	eb 5b		 jmp	 SHORT $LN2@display_ta
$LN13@display_ta:

; 2402 : 		}
; 2403 : 		////////////////////////////////////////
; 2404 : 		case WEAPON_LOCK_SEEKER_LIMIT:
; 2405 : 		////////////////////////////////////////
; 2406 : 		{
; 2407 : 			s = "SEEKER LIMIT";

  0021e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0N@IEGOLOGH@SEEKER?5LIMIT@

; 2408 : 
; 2409 : 			break;

  00225	eb 52		 jmp	 SHORT $LN2@display_ta
$LN14@display_ta:

; 2410 : 		}
; 2411 : 		////////////////////////////////////////
; 2412 : 		case WEAPON_LOCK_NO_LOS:
; 2413 : 		////////////////////////////////////////
; 2414 : 		{
; 2415 : 			s = "NO LOS";

  00227	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_06HCPKJKPH@NO?5LOS@

; 2416 : 
; 2417 : 			break;

  0022e	eb 49		 jmp	 SHORT $LN2@display_ta
$LN15@display_ta:

; 2418 : 		}
; 2419 : 		////////////////////////////////////////
; 2420 : 		case WEAPON_LOCK_NO_BORESIGHT:
; 2421 : 		////////////////////////////////////////
; 2422 : 		{
; 2423 : 			s = "NO BORESIGHT";

  00230	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0N@JALLFCND@NO?5BORESIGHT@

; 2424 : 
; 2425 : 			break;

  00237	eb 40		 jmp	 SHORT $LN2@display_ta
$LN16@display_ta:

; 2426 : 		}
; 2427 : 		////////////////////////////////////////
; 2428 : 		case WEAPON_LOCK_MIN_RANGE:
; 2429 : 		////////////////////////////////////////
; 2430 : 		if (has_range)

  00239	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _has_range$[ebp], 0
  00240	74 09		 je	 SHORT $LN17@display_ta

; 2431 : 		{
; 2432 : 			s = "MIN RANGE";

  00242	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09FBGPJAII@MIN?5RANGE@

; 2433 : 
; 2434 : 			break;

  00249	eb 2e		 jmp	 SHORT $LN2@display_ta
$LN17@display_ta:

; 2435 : 		}
; 2436 : 		////////////////////////////////////////
; 2437 : 		case WEAPON_LOCK_MAX_RANGE:
; 2438 : 		////////////////////////////////////////
; 2439 : 		if (has_range)

  0024b	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _has_range$[ebp], 0
  00252	74 09		 je	 SHORT $LN19@display_ta

; 2440 : 		{
; 2441 : 			s = "MAX RANGE";

  00254	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_09FAGDAKDM@MAX?5RANGE@

; 2442 : 
; 2443 : 			break;

  0025b	eb 1c		 jmp	 SHORT $LN2@display_ta
$LN19@display_ta:

; 2444 : 		}
; 2445 : 		////////////////////////////////////////
; 2446 : 		case WEAPON_LOCK_VALID:
; 2447 : 		////////////////////////////////////////
; 2448 : 		{
; 2449 : 			s = "VALID LOCK";

  0025d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_0L@PDLCBABH@VALID?5LOCK@

; 2450 : 
; 2451 : 			break;

  00264	eb 13		 jmp	 SHORT $LN2@display_ta
$LN21@display_ta:

; 2452 : 		}
; 2453 : 		////////////////////////////////////////
; 2454 : 		default:
; 2455 : 		////////////////////////////////////////
; 2456 : 		{
; 2457 : 			debug_fatal ("Invalid weapon lock type = %d", weapon_lock_type);

  00266	a1 00 00 00 00	 mov	 eax, DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A ; weapon_lock_type
  0026b	50		 push	 eax
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IMEMIMEA@Invalid?5weapon?5lock?5type?5?$DN?5?$CFd@
  00271	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00276	83 c4 08	 add	 esp, 8
$LN2@display_ta:

; 2458 : 
; 2459 : 			break;
; 2460 : 		}
; 2461 : 	}
; 2462 : 
; 2463 : 	width = get_mono_font_string_width (s);

  00279	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00282	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 2464 : 
; 2465 : 	set_2d_mono_font_position (0.0, -0.6);

  00288	51		 push	 ecx
  00289	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  00291	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00296	51		 push	 ecx
  00297	0f 57 c0	 xorps	 xmm0, xmm0
  0029a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029f	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2466 : 
; 2467 : 	set_mono_font_rel_position (-width * 0.5, -9.0);

  002a4	51		 push	 ecx
  002a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1100000
  002ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b2	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  002ba	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  002c1	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002c5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  002cd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002d1	51		 push	 ecx
  002d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d7	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2468 : 
; 2469 : 	print_mono_font_string (s);

  002dc	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  002df	50		 push	 eax
  002e0	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 2470 : 
; 2471 : 	//
; 2472 : 	// target name and range
; 2473 : 	//
; 2474 : 
; 2475 : 	target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  002e5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  002ec	74 0f		 je	 SHORT $LN54@display_ta
  002ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f5	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv170[ebp], ecx
  002fb	eb 27		 jmp	 SHORT $LN55@display_ta
$LN54@display_ta:
  002fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  00303	81 c2 93 00 00
	00		 add	 edx, 147		; 00000093H
  00309	52		 push	 edx
  0030a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00314	50		 push	 eax
  00315	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031a	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv170[ebp], 0
$LN55@display_ta:
  00324	b9 01 00 00 00	 mov	 ecx, 1
  00329	85 c9		 test	 ecx, ecx
  0032b	74 0c		 je	 SHORT $LN56@display_ta
  0032d	c7 85 dc fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv178[ebp], 38 ; 00000026H
  00337	eb 27		 jmp	 SHORT $LN57@display_ta
$LN56@display_ta:
  00339	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_target_information@@YGXXZ@4JA
  0033f	81 c2 93 00 00
	00		 add	 edx, 147		; 00000093H
  00345	52		 push	 edx
  00346	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00350	50		 push	 eax
  00351	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00356	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN57@display_ta:
  00360	6a 26		 push	 38			; 00000026H
  00362	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00368	51		 push	 ecx
  00369	69 95 e0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv170[ebp], 180
  00373	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv178[ebp]
  00379	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00380	ff d1		 call	 ecx
  00382	89 85 28 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 2476 : 
; 2477 : 	if (target)

  00388	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  0038f	0f 84 8a 00 00
	00		 je	 $LN23@display_ta

; 2478 : 	{
; 2479 : 		s = get_target_display_name (target, buffer, TRUE);

  00395	6a 01		 push	 1
  00397	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0039d	50		 push	 eax
  0039e	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _target$[ebp]
  003a4	51		 push	 ecx
  003a5	e8 00 00 00 00	 call	 ?get_target_display_name@@YGPBDPAUENTITY@@PADH@Z ; get_target_display_name
  003aa	89 45 fc	 mov	 DWORD PTR _s$[ebp], eax

; 2480 : 		if (s)

  003ad	83 7d fc 00	 cmp	 DWORD PTR _s$[ebp], 0
  003b1	74 6c		 je	 SHORT $LN23@display_ta

; 2481 : 		{
; 2482 : 			width = get_mono_font_string_width (s);

  003b3	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  003b6	50		 push	 eax
  003b7	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  003bc	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 2483 : 	
; 2484 : 			set_2d_mono_font_position (0.0, -0.8);

  003c2	51		 push	 ecx
  003c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  003cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d0	51		 push	 ecx
  003d1	0f 57 c0	 xorps	 xmm0, xmm0
  003d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d9	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2485 : 	
; 2486 : 			set_mono_font_rel_position (-width * 0.5, 8.0);

  003de	51		 push	 ecx
  003df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  003e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ec	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  003f4	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003fb	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003ff	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00407	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0040b	51		 push	 ecx
  0040c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00411	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2487 : 	
; 2488 : 			print_mono_font_string (s);

  00416	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  00419	50		 push	 eax
  0041a	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN23@display_ta:

; 2489 : 		}
; 2490 : 	}
; 2491 : 
; 2492 : 	target_range = get_range_to_target();

  0041f	e8 00 00 00 00	 call	 ?get_range_to_target@@YGMXZ ; get_range_to_target
  00424	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _target_range$[ebp]

; 2493 : 	
; 2494 : 	switch (target_acquisition_system)

  0042a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; target_acquisition_system
  0042f	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv202[ebp], eax
  00435	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv202[ebp]
  0043b	83 e9 01	 sub	 ecx, 1
  0043e	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv202[ebp], ecx
  00444	83 bd e0 fe ff
	ff 07		 cmp	 DWORD PTR tv202[ebp], 7
  0044b	0f 87 22 01 00
	00		 ja	 $LN34@display_ta
  00451	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR tv202[ebp]
  00457	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN58@display_ta[edx]
  0045e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN61@display_ta[eax*4]
$LN24@display_ta:

; 2495 : 	{
; 2496 : 	case TARGET_ACQUISITION_SYSTEM_GROUND_RADAR:
; 2497 : 	case TARGET_ACQUISITION_SYSTEM_AIR_RADAR:
; 2498 : 		s = "FCR";

  00465	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_03JKJFCLEN@FCR@

; 2499 : 		if (target)

  0046c	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  00473	74 2e		 je	 SHORT $LN25@display_ta

; 2500 : 			sprintf(buffer, "R%.1f", target_range * 0.001);

  00475	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  0047d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00485	83 ec 08	 sub	 esp, 8
  00488	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0048d	68 00 00 00 00	 push	 OFFSET ??_C@_05FALJMMFP@R?$CF?41f@
  00492	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00498	50		 push	 eax
  00499	e8 00 00 00 00	 call	 _sprintf
  0049e	83 c4 10	 add	 esp, 16			; 00000010H

; 2501 : 		else

  004a1	eb 14		 jmp	 SHORT $LN26@display_ta
$LN25@display_ta:

; 2502 : 			sprintf(buffer, "AX.X");

  004a3	68 00 00 00 00	 push	 OFFSET ??_C@_04BCEGOCOA@AX?4X@
  004a8	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  004ae	50		 push	 eax
  004af	e8 00 00 00 00	 call	 _sprintf
  004b4	83 c4 08	 add	 esp, 8
$LN26@display_ta:

; 2503 : 		break;

  004b7	e9 d2 00 00 00	 jmp	 $LN4@display_ta
$LN27@display_ta:

; 2504 : 	case TARGET_ACQUISITION_SYSTEM_FLIR:
; 2505 : 	case TARGET_ACQUISITION_SYSTEM_DTV:
; 2506 : 	case TARGET_ACQUISITION_SYSTEM_DVO:
; 2507 : 	case TARGET_ACQUISITION_SYSTEM_IHADSS:
; 2508 : 		s = "TADS";

  004bc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_04DBODHFDK@TADS@

; 2509 : 		if (target_range > 0.0)

  004c3	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  004cb	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  004d3	0f 86 84 00 00
	00		 jbe	 $LN28@display_ta

; 2510 : 		{
; 2511 : 			if (laser_is_active())

  004d9	e8 00 00 00 00	 call	 ?laser_is_active@@YGHXZ	; laser_is_active
  004de	85 c0		 test	 eax, eax
  004e0	74 26		 je	 SHORT $LN30@display_ta

; 2512 : 				sprintf(buffer, "L%04.0f", target_range);

  004e2	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  004ea	83 ec 08	 sub	 esp, 8
  004ed	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004f2	68 00 00 00 00	 push	 OFFSET ??_C@_07HOJAAJFI@L?$CF04?40f@
  004f7	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  004fd	50		 push	 eax
  004fe	e8 00 00 00 00	 call	 _sprintf
  00503	83 c4 10	 add	 esp, 16			; 00000010H

; 2513 : 			else

  00506	eb 53		 jmp	 SHORT $LN33@display_ta
$LN30@display_ta:

; 2514 : 			{
; 2515 : 				if (target_range > 0)

  00508	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00510	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00517	76 2e		 jbe	 SHORT $LN32@display_ta

; 2516 : 					sprintf(buffer, "A%.1f", target_range * 0.001);

  00519	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  00521	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00529	83 ec 08	 sub	 esp, 8
  0052c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00531	68 00 00 00 00	 push	 OFFSET ??_C@_05NFPLLMGK@A?$CF?41f@
  00536	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0053c	50		 push	 eax
  0053d	e8 00 00 00 00	 call	 _sprintf
  00542	83 c4 10	 add	 esp, 16			; 00000010H

; 2517 : 				else

  00545	eb 14		 jmp	 SHORT $LN33@display_ta
$LN32@display_ta:

; 2518 : 					sprintf(buffer, "AX.X");

  00547	68 00 00 00 00	 push	 OFFSET ??_C@_04BCEGOCOA@AX?4X@
  0054c	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00552	50		 push	 eax
  00553	e8 00 00 00 00	 call	 _sprintf
  00558	83 c4 08	 add	 esp, 8
$LN33@display_ta:

; 2519 : 			}
; 2520 : 		}
; 2521 : 		else

  0055b	eb 14		 jmp	 SHORT $LN29@display_ta
$LN28@display_ta:

; 2522 : 			sprintf(buffer, "AX.X");

  0055d	68 00 00 00 00	 push	 OFFSET ??_C@_04BCEGOCOA@AX?4X@
  00562	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00568	50		 push	 eax
  00569	e8 00 00 00 00	 call	 _sprintf
  0056e	83 c4 08	 add	 esp, 8
$LN29@display_ta:

; 2523 : 		break;

  00571	eb 1b		 jmp	 SHORT $LN4@display_ta
$LN34@display_ta:

; 2524 : 	case TARGET_ACQUISITION_SYSTEM_OFF:
; 2525 : 	default:
; 2526 : 		s = "NONE";

  00573	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_04OKGDLNCL@NONE@

; 2527 : 		sprintf(buffer, "AX.X");

  0057a	68 00 00 00 00	 push	 OFFSET ??_C@_04BCEGOCOA@AX?4X@
  0057f	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00585	50		 push	 eax
  00586	e8 00 00 00 00	 call	 _sprintf
  0058b	83 c4 08	 add	 esp, 8
$LN4@display_ta:

; 2528 : 		break;
; 2529 : 	}
; 2530 : 
; 2531 : /*
; 2532 : 		if ((target_range < 1000.0) && (!ah64a_damage.laser_designator))
; 2533 : 		{
; 2534 : 			sprintf (buffer, "%dm", (int) target_range);
; 2535 : 		}
; 2536 : 		else
; 2537 : 		{
; 2538 : 			sprintf (buffer, "%.1fKm", target_range * (1.0 / 1000.0));
; 2539 : 		}
; 2540 : */
; 2541 : 
; 2542 : 	set_2d_mono_font_position (-0.95, -0.7);

  0058e	51		 push	 ecx
  0058f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  00597	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0059c	51		 push	 ecx
  0059d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf733333
  005a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005aa	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2543 : 	width = 0; //get_mono_font_string_width (s) * -0.5;

  005af	0f 57 c0	 xorps	 xmm0, xmm0
  005b2	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _width$[ebp], xmm0

; 2544 : 	set_mono_font_rel_position (width, 0);

  005ba	51		 push	 ecx
  005bb	0f 57 c0	 xorps	 xmm0, xmm0
  005be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c3	51		 push	 ecx
  005c4	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  005cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d1	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2545 : 	print_mono_font_string (s);

  005d6	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  005d9	50		 push	 eax
  005da	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 2546 : 
; 2547 : 	set_2d_mono_font_position (-0.35, -0.7);

  005df	51		 push	 ecx
  005e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  005e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ed	51		 push	 ecx
  005ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beb33333
  005f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fb	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2548 : 	width = -get_mono_font_string_width (buffer); // * 0.5;

  00600	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00606	50		 push	 eax
  00607	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0060c	d9 9d e0 fe ff
	ff		 fstp	 DWORD PTR tv418[ebp]
  00612	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR tv418[ebp]
  0061a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00621	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _width$[ebp], xmm0

; 2549 : 	set_mono_font_rel_position (width, 0);

  00629	51		 push	 ecx
  0062a	0f 57 c0	 xorps	 xmm0, xmm0
  0062d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00632	51		 push	 ecx
  00633	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  0063b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00640	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2550 : 	print_mono_font_string (buffer);

  00645	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0064b	50		 push	 eax
  0064c	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 2551 : 
; 2552 : /*
; 2553 : 		width = get_mono_font_string_width (buffer);
; 2554 : 
; 2555 : 		set_2d_mono_font_position (0.8, -0.8);
; 2556 : 
; 2557 : 		set_mono_font_rel_position (-width, 0.0);
; 2558 : 
; 2559 : 		print_mono_font_string (buffer);*/
; 2560 : 	
; 2561 : 
; 2562 : 
; 2563 : 	// target system emmision
; 2564 : 	set_2d_mono_font_position (-0.35, -0.8);

  00651	51		 push	 ecx
  00652	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  0065a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065f	51		 push	 ecx
  00660	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beb33333
  00668	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066d	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 2565 : 
; 2566 : 	switch (target_acquisition_system)

  00672	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A ; target_acquisition_system
  00677	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv248[ebp], eax
  0067d	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv248[ebp]
  00683	83 e9 01	 sub	 ecx, 1
  00686	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv248[ebp], ecx
  0068c	83 bd e0 fe ff
	ff 07		 cmp	 DWORD PTR tv248[ebp], 7
  00693	0f 87 f9 00 00
	00		 ja	 $LN6@display_ta
  00699	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR tv248[ebp]
  0069f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN59@display_ta[edx]
  006a6	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN62@display_ta[eax*4]
$LN35@display_ta:

; 2567 : 	{
; 2568 : 		case TARGET_ACQUISITION_SYSTEM_GROUND_RADAR:
; 2569 : 		case TARGET_ACQUISITION_SYSTEM_AIR_RADAR:
; 2570 : 			if ((air_radar_is_active() && air_radar.sweep_mode != RADAR_SWEEP_MODE_SINGLE_INACTIVE)
; 2571 : 				|| (ground_radar_is_active() && ground_radar.sweep_mode != RADAR_SWEEP_MODE_SINGLE_INACTIVE))

  006ad	e8 00 00 00 00	 call	 ?air_radar_is_active@@YGHXZ ; air_radar_is_active
  006b2	85 c0		 test	 eax, eax
  006b4	74 09		 je	 SHORT $LN38@display_ta
  006b6	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+40, 1
  006bd	75 12		 jne	 SHORT $LN37@display_ta
$LN38@display_ta:
  006bf	e8 00 00 00 00	 call	 ?ground_radar_is_active@@YGHXZ ; ground_radar_is_active
  006c4	85 c0		 test	 eax, eax
  006c6	74 6f		 je	 SHORT $LN36@display_ta
  006c8	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+40, 1
  006cf	74 66		 je	 SHORT $LN36@display_ta
$LN37@display_ta:

; 2572 : 			{
; 2573 : 				if (laser_is_active())

  006d1	e8 00 00 00 00	 call	 ?laser_is_active@@YGHXZ	; laser_is_active
  006d6	85 c0		 test	 eax, eax
  006d8	74 09		 je	 SHORT $LN39@display_ta

; 2574 : 					s = "LASE/FCR";

  006da	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_08IOHAACLP@LASE?1FCR@

; 2575 : 				else

  006e1	eb 07		 jmp	 SHORT $LN40@display_ta
$LN39@display_ta:

; 2576 : 					s = "FCR XMIT";

  006e3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_08GAALIDIP@FCR?5XMIT@
$LN40@display_ta:

; 2577 : 				
; 2578 : 				width = -get_mono_font_string_width (s);

  006ea	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  006ed	50		 push	 eax
  006ee	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  006f3	d9 9d e0 fe ff
	ff		 fstp	 DWORD PTR tv439[ebp]
  006f9	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR tv439[ebp]
  00701	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00708	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _width$[ebp], xmm0

; 2579 : 				set_mono_font_rel_position (width, 0);

  00710	51		 push	 ecx
  00711	0f 57 c0	 xorps	 xmm0, xmm0
  00714	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00719	51		 push	 ecx
  0071a	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  00722	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00727	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2580 : 				print_mono_font_string(s);

  0072c	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  0072f	50		 push	 eax
  00730	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 2581 : 
; 2582 : 				break;

  00735	eb 5b		 jmp	 SHORT $LN6@display_ta
$LN36@display_ta:

; 2583 : 			}
; 2584 : 			
; 2585 : 			// fall through
; 2586 : 		case TARGET_ACQUISITION_SYSTEM_FLIR:
; 2587 : 		case TARGET_ACQUISITION_SYSTEM_DTV:
; 2588 : 		case TARGET_ACQUISITION_SYSTEM_DVO:
; 2589 : 		case TARGET_ACQUISITION_SYSTEM_IHADSS:
; 2590 : 			if (laser_is_active())

  00737	e8 00 00 00 00	 call	 ?laser_is_active@@YGHXZ	; laser_is_active
  0073c	85 c0		 test	 eax, eax
  0073e	74 52		 je	 SHORT $LN42@display_ta

; 2591 : 			{
; 2592 : 				s = "TGT LASE";

  00740	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_08JIHJFJPE@TGT?5LASE@

; 2593 : 				width = -get_mono_font_string_width (s);

  00747	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  0074a	50		 push	 eax
  0074b	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00750	d9 9d e0 fe ff
	ff		 fstp	 DWORD PTR tv450[ebp]
  00756	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR tv450[ebp]
  0075e	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00765	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _width$[ebp], xmm0

; 2594 : 				set_mono_font_rel_position (width, 0);

  0076d	51		 push	 ecx
  0076e	0f 57 c0	 xorps	 xmm0, xmm0
  00771	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00776	51		 push	 ecx
  00777	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  0077f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00784	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 2595 : 				print_mono_font_string(s);

  00789	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  0078c	50		 push	 eax
  0078d	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN42@display_ta:
$LN6@display_ta:

; 2596 : 			}
; 2597 : 			break;
; 2598 : 	}
; 2599 : }

  00792	5f		 pop	 edi
  00793	5e		 pop	 esi
  00794	5b		 pop	 ebx
  00795	8b e5		 mov	 esp, ebp
  00797	5d		 pop	 ebp
  00798	c3		 ret	 0
  00799	0f 1f 00	 npad	 3
$LN60@display_ta:
  0079c	00 00 00 00	 DD	 $LN9@display_ta
  007a0	00 00 00 00	 DD	 $LN10@display_ta
  007a4	00 00 00 00	 DD	 $LN11@display_ta
  007a8	00 00 00 00	 DD	 $LN12@display_ta
  007ac	00 00 00 00	 DD	 $LN13@display_ta
  007b0	00 00 00 00	 DD	 $LN14@display_ta
  007b4	00 00 00 00	 DD	 $LN15@display_ta
  007b8	00 00 00 00	 DD	 $LN16@display_ta
  007bc	00 00 00 00	 DD	 $LN17@display_ta
  007c0	00 00 00 00	 DD	 $LN19@display_ta
$LN61@display_ta:
  007c4	00 00 00 00	 DD	 $LN24@display_ta
  007c8	00 00 00 00	 DD	 $LN27@display_ta
  007cc	00 00 00 00	 DD	 $LN34@display_ta
$LN58@display_ta:
  007d0	00		 DB	 0
  007d1	00		 DB	 0
  007d2	01		 DB	 1
  007d3	01		 DB	 1
  007d4	01		 DB	 1
  007d5	02		 DB	 2
  007d6	02		 DB	 2
  007d7	01		 DB	 1
$LN62@display_ta:
  007d8	00 00 00 00	 DD	 $LN35@display_ta
  007dc	00 00 00 00	 DD	 $LN36@display_ta
  007e0	00 00 00 00	 DD	 $LN6@display_ta
$LN59@display_ta:
  007e4	00		 DB	 0
  007e5	00		 DB	 0
  007e6	01		 DB	 1
  007e7	01		 DB	 1
  007e8	01		 DB	 1
  007e9	02		 DB	 2
  007ea	02		 DB	 2
  007eb	01		 DB	 1
?display_target_information@@YGXXZ ENDP			; display_target_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_target_symbology@@YGXXZ
_TEXT	SEGMENT
tv229 = -160						; size = 8
tv218 = -160						; size = 8
tv254 = -152						; size = 4
tv230 = -152						; size = 8
tv219 = -152						; size = 8
tv181 = -152						; size = 4
tv132 = -152						; size = 4
tv78 = -152						; size = 4
tv247 = -148						; size = 4
tv174 = -148						; size = 4
tv160 = -148						; size = 4
tv92 = -148						; size = 4
tv70 = -148						; size = 4
_tracking_point$1 = -80					; size = 4
_intercept_point$ = -76					; size = 12
_target_position$ = -64					; size = 12
_target$ = -52						; size = 4
_source$ = -48						; size = 4
_pitch_offset$ = -44					; size = 4
_heading_offset$ = -40					; size = 4
_intercept_point_y$ = -36				; size = 4
_intercept_point_x$ = -32				; size = 4
_target_y$ = -28					; size = 4
_target_x$ = -24					; size = 4
_j$ = -20						; size = 4
_i$ = -16						; size = 4
_visibility$ = -12					; size = 4
_selected_weapon_type$ = -8				; size = 4
_target_visible$ = -4					; size = 4
?draw_target_symbology@@YGXXZ PROC			; draw_target_symbology, COMDAT

; 2122 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2123 : 	int
; 2124 : 		target_visible;
; 2125 : 
; 2126 : 	entity_sub_types
; 2127 : 		selected_weapon_type;
; 2128 : 
; 2129 : 	object_3d_visibility
; 2130 : 		visibility;
; 2131 : 
; 2132 : 	float
; 2133 : 		i,
; 2134 : 		j,
; 2135 : 		target_x,
; 2136 : 		target_y,
; 2137 : 		intercept_point_x,
; 2138 : 		intercept_point_y,
; 2139 : 		heading_offset,
; 2140 : 		pitch_offset;
; 2141 : 
; 2142 : 	entity
; 2143 : 		*source,
; 2144 : 		*target;
; 2145 : 
; 2146 : 	vec3d
; 2147 : 		target_position,
; 2148 : 		intercept_point;
; 2149 : 
; 2150 : 	source = get_gunship_entity ();

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	89 45 d0	 mov	 DWORD PTR _source$[ebp], eax

; 2151 : 
; 2152 : 	selected_weapon_type = get_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON);

  00014	83 7d d0 00	 cmp	 DWORD PTR _source$[ebp], 0
  00018	74 0d		 je	 SHORT $LN38@draw_targe
  0001a	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00025	eb 24		 jmp	 SHORT $LN39@draw_targe
$LN38@draw_targe:
  00027	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  0002d	83 c2 1e	 add	 edx, 30			; 0000001eH
  00030	52		 push	 edx
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN39@draw_targe:
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	85 c9		 test	 ecx, ecx
  00052	74 0c		 je	 SHORT $LN40@draw_targe
  00054	c7 85 68 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv78[ebp], 184 ; 000000b8H
  0005e	eb 24		 jmp	 SHORT $LN41@draw_targe
$LN40@draw_targe:
  00060	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  00066	83 c2 1e	 add	 edx, 30			; 0000001eH
  00069	52		 push	 edx
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007a	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN41@draw_targe:
  00084	68 b8 00 00 00	 push	 184			; 000000b8H
  00089	8b 4d d0	 mov	 ecx, DWORD PTR _source$[ebp]
  0008c	51		 push	 ecx
  0008d	69 95 6c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv70[ebp], 1116
  00097	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0009d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a4	ff d1		 call	 ecx
  000a6	89 45 f8	 mov	 DWORD PTR _selected_weapon_type$[ebp], eax

; 2153 : 
; 2154 : 	if (selected_weapon_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  000a9	83 7d f8 00	 cmp	 DWORD PTR _selected_weapon_type$[ebp], 0
  000ad	0f 84 0d 06 00
	00		 je	 $LN2@draw_targe

; 2155 : 	{
; 2156 : 		vec3d* tracking_point = get_eo_tracking_point();

  000b3	e8 00 00 00 00	 call	 ?get_eo_tracking_point@@YGPAUVEC3D@@XZ ; get_eo_tracking_point
  000b8	89 45 b0	 mov	 DWORD PTR _tracking_point$1[ebp], eax

; 2157 : 		target = get_local_entity_parent (source, LIST_TYPE_TARGET);

  000bb	83 7d d0 00	 cmp	 DWORD PTR _source$[ebp], 0
  000bf	74 0d		 je	 SHORT $LN42@draw_targe
  000c1	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv92[ebp], ecx
  000cc	eb 24		 jmp	 SHORT $LN43@draw_targe
$LN42@draw_targe:
  000ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  000d4	83 c2 23	 add	 edx, 35			; 00000023H
  000d7	52		 push	 edx
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e8	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN43@draw_targe:
  000f2	b9 01 00 00 00	 mov	 ecx, 1
  000f7	85 c9		 test	 ecx, ecx
  000f9	74 0c		 je	 SHORT $LN44@draw_targe
  000fb	c7 85 68 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv132[ebp], 38 ; 00000026H
  00105	eb 24		 jmp	 SHORT $LN45@draw_targe
$LN44@draw_targe:
  00107	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_target_symbology@@YGXXZ@4JA
  0010d	83 c2 23	 add	 edx, 35			; 00000023H
  00110	52		 push	 edx
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00121	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN45@draw_targe:
  0012b	6a 26		 push	 38			; 00000026H
  0012d	8b 4d d0	 mov	 ecx, DWORD PTR _source$[ebp]
  00130	51		 push	 ecx
  00131	69 95 6c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv92[ebp], 180
  0013b	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv132[ebp]
  00141	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00148	ff d1		 call	 ecx
  0014a	89 45 cc	 mov	 DWORD PTR _target$[ebp], eax

; 2158 : 
; 2159 : 		target_visible = FALSE;

  0014d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _target_visible$[ebp], 0

; 2160 : 
; 2161 : 		if (target || tracking_point)

  00154	83 7d cc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00158	75 0a		 jne	 SHORT $LN6@draw_targe
  0015a	83 7d b0 00	 cmp	 DWORD PTR _tracking_point$1[ebp], 0
  0015e	0f 84 a8 00 00
	00		 je	 $LN9@draw_targe
$LN6@draw_targe:

; 2162 : 		{
; 2163 : 			//
; 2164 : 			// draw target marker
; 2165 : 			//
; 2166 : 
; 2167 : 			if (tracking_point)

  00164	83 7d b0 00	 cmp	 DWORD PTR _tracking_point$1[ebp], 0
  00168	74 16		 je	 SHORT $LN7@draw_targe

; 2168 : 				target_position = *tracking_point;

  0016a	8b 45 b0	 mov	 eax, DWORD PTR _tracking_point$1[ebp]
  0016d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016f	89 4d c0	 mov	 DWORD PTR _target_position$[ebp], ecx
  00172	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00175	89 55 c4	 mov	 DWORD PTR _target_position$[ebp+4], edx
  00178	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0017b	89 45 c8	 mov	 DWORD PTR _target_position$[ebp+8], eax

; 2169 : 			else

  0017e	eb 0d		 jmp	 SHORT $LN8@draw_targe
$LN7@draw_targe:

; 2170 : 				get_local_entity_target_point (target, &target_position);

  00180	8d 45 c0	 lea	 eax, DWORD PTR _target_position$[ebp]
  00183	50		 push	 eax
  00184	8b 4d cc	 mov	 ecx, DWORD PTR _target$[ebp]
  00187	51		 push	 ecx
  00188	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point
$LN8@draw_targe:

; 2171 : 
; 2172 : 			visibility = get_position_3d_screen_coordinates (&target_position, &i, &j);

  0018d	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  00190	50		 push	 eax
  00191	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  00194	51		 push	 ecx
  00195	8d 55 c0	 lea	 edx, DWORD PTR _target_position$[ebp]
  00198	52		 push	 edx
  00199	e8 00 00 00 00	 call	 ?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_position_3d_screen_coordinates
  0019e	89 45 f4	 mov	 DWORD PTR _visibility$[ebp], eax

; 2173 : 
; 2174 : 			if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  001a1	83 7d f4 01	 cmp	 DWORD PTR _visibility$[ebp], 1
  001a5	74 06		 je	 SHORT $LN10@draw_targe
  001a7	83 7d f4 02	 cmp	 DWORD PTR _visibility$[ebp], 2
  001ab	75 5f		 jne	 SHORT $LN9@draw_targe
$LN10@draw_targe:

; 2175 : 			{
; 2176 : 				target_visible = TRUE;

  001ad	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _target_visible$[ebp], 1

; 2177 : 
; 2178 : 				transform_hud_screen_co_ords_to_hud_texture_co_ords (&i, &j);

  001b4	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  001b7	50		 push	 eax
  001b8	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  001bb	51		 push	 ecx
  001bc	e8 00 00 00 00	 call	 ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ; transform_hud_screen_co_ords_to_hud_texture_co_ords

; 2179 : 
; 2180 : 				get_2d_world_position (i, j, &target_x, &target_y);

  001c1	8d 45 e4	 lea	 eax, DWORD PTR _target_y$[ebp]
  001c4	50		 push	 eax
  001c5	8d 4d e8	 lea	 ecx, DWORD PTR _target_x$[ebp]
  001c8	51		 push	 ecx
  001c9	51		 push	 ecx
  001ca	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _j$[ebp]
  001cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d4	51		 push	 ecx
  001d5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _i$[ebp]
  001da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001df	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 2181 : 
; 2182 : 				clip_2d_point_to_hud_extent (&target_x, &target_y);

  001e4	8d 45 e4	 lea	 eax, DWORD PTR _target_y$[ebp]
  001e7	50		 push	 eax
  001e8	8d 4d e8	 lea	 ecx, DWORD PTR _target_x$[ebp]
  001eb	51		 push	 ecx
  001ec	e8 00 00 00 00	 call	 ?clip_2d_point_to_hud_extent@@YGXPAM0@Z ; clip_2d_point_to_hud_extent

; 2183 : 
; 2184 : 				draw_target_marker (target_x, target_y);

  001f1	51		 push	 ecx
  001f2	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  001f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fc	51		 push	 ecx
  001fd	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00202	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00207	e8 00 00 00 00	 call	 ?draw_target_marker@@YGXMM@Z ; draw_target_marker
$LN9@draw_targe:

; 2185 : 			}
; 2186 : 		}
; 2187 : 
; 2188 : 		switch (selected_weapon_type)

  0020c	8b 45 f8	 mov	 eax, DWORD PTR _selected_weapon_type$[ebp]
  0020f	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv160[ebp], eax
  00215	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv160[ebp]
  0021b	83 e9 07	 sub	 ecx, 7
  0021e	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv160[ebp], ecx
  00224	83 bd 6c ff ff
	ff 27		 cmp	 DWORD PTR tv160[ebp], 39 ; 00000027H
  0022b	0f 87 8f 04 00
	00		 ja	 $LN2@draw_targe
  00231	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv160[ebp]
  00237	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN62@draw_targe[edx]
  0023e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN63@draw_targe[eax*4]
$LN11@draw_targe:

; 2189 : 		{
; 2190 : 			////////////////////////////////////////
; 2191 : 			case ENTITY_SUB_TYPE_WEAPON_M230_30MM_ROUND:
; 2192 : 			////////////////////////////////////////
; 2193 : 			{
; 2194 : 				if (target_visible)

  00245	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  00249	74 41		 je	 SHORT $LN14@draw_targe

; 2195 : 				{
; 2196 : 					if (weapon_lock_type == WEAPON_LOCK_VALID)

  0024b	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  00252	75 1d		 jne	 SHORT $LN13@draw_targe

; 2197 : 					{
; 2198 : 						draw_solid_gun_target_marker (target_x, target_y);

  00254	51		 push	 ecx
  00255	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  0025a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025f	51		 push	 ecx
  00260	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00265	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026a	e8 00 00 00 00	 call	 ?draw_solid_gun_target_marker@@YGXMM@Z ; draw_solid_gun_target_marker

; 2199 : 					}
; 2200 : 					else

  0026f	eb 1b		 jmp	 SHORT $LN14@draw_targe
$LN13@draw_targe:

; 2201 : 					{
; 2202 : 						draw_dashed_gun_target_marker (target_x, target_y);

  00271	51		 push	 ecx
  00272	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00277	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027c	51		 push	 ecx
  0027d	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00282	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00287	e8 00 00 00 00	 call	 ?draw_dashed_gun_target_marker@@YGXMM@Z ; draw_dashed_gun_target_marker
$LN14@draw_targe:

; 2203 : 					}
; 2204 : 				}
; 2205 : 
; 2206 : 				break;

  0028c	e9 2f 04 00 00	 jmp	 $LN2@draw_targe
$LN15@draw_targe:

; 2207 : 			}
; 2208 : 			////////////////////////////////////////
; 2209 : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 2210 : 			case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 2211 : 			////////////////////////////////////////
; 2212 : 			{
; 2213 : 				if (target_visible)

  00291	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  00295	0f 84 9d 02 00
	00		 je	 $LN21@draw_targe

; 2214 : 				{
; 2215 : 					if (target && get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  0029b	83 7d cc 00	 cmp	 DWORD PTR _target$[ebp], 0
  0029f	0f 84 1c 01 00
	00		 je	 $LN18@draw_targe
  002a5	83 7d cc 00	 cmp	 DWORD PTR _target$[ebp], 0
  002a9	74 0d		 je	 SHORT $LN46@draw_targe
  002ab	8b 45 cc	 mov	 eax, DWORD PTR _target$[ebp]
  002ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b0	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv174[ebp], ecx
  002b6	eb 20		 jmp	 SHORT $LN47@draw_targe
$LN46@draw_targe:
  002b8	68 a7 08 00 00	 push	 2215			; 000008a7H
  002bd	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ce	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv174[ebp], 0
$LN47@draw_targe:
  002d8	b8 01 00 00 00	 mov	 eax, 1
  002dd	85 c0		 test	 eax, eax
  002df	74 0c		 je	 SHORT $LN48@draw_targe
  002e1	c7 85 68 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv181[ebp], 4
  002eb	eb 20		 jmp	 SHORT $LN49@draw_targe
$LN48@draw_targe:
  002ed	68 a7 08 00 00	 push	 2215			; 000008a7H
  002f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00303	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
$LN49@draw_targe:
  0030d	6a 04		 push	 4
  0030f	8b 55 cc	 mov	 edx, DWORD PTR _target$[ebp]
  00312	52		 push	 edx
  00313	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv174[ebp], 1116
  0031d	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv181[ebp]
  00323	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0032a	ff d2		 call	 edx
  0032c	85 c0		 test	 eax, eax
  0032e	0f 84 8d 00 00
	00		 je	 $LN18@draw_targe

; 2216 : 					{
; 2217 : 						get_target_intercept_point (source, target, selected_weapon_type, &intercept_point);

  00334	8d 45 b4	 lea	 eax, DWORD PTR _intercept_point$[ebp]
  00337	50		 push	 eax
  00338	8b 4d f8	 mov	 ecx, DWORD PTR _selected_weapon_type$[ebp]
  0033b	51		 push	 ecx
  0033c	8b 55 cc	 mov	 edx, DWORD PTR _target$[ebp]
  0033f	52		 push	 edx
  00340	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z ; get_target_intercept_point

; 2218 : 
; 2219 : 						visibility = get_position_3d_screen_coordinates (&intercept_point, &i, &j);

  00349	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  0034c	50		 push	 eax
  0034d	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  00350	51		 push	 ecx
  00351	8d 55 b4	 lea	 edx, DWORD PTR _intercept_point$[ebp]
  00354	52		 push	 edx
  00355	e8 00 00 00 00	 call	 ?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_position_3d_screen_coordinates
  0035a	89 45 f4	 mov	 DWORD PTR _visibility$[ebp], eax

; 2220 : 
; 2221 : 						if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  0035d	83 7d f4 01	 cmp	 DWORD PTR _visibility$[ebp], 1
  00361	74 06		 je	 SHORT $LN19@draw_targe
  00363	83 7d f4 02	 cmp	 DWORD PTR _visibility$[ebp], 2
  00367	75 58		 jne	 SHORT $LN18@draw_targe
$LN19@draw_targe:

; 2222 : 						{
; 2223 : 							transform_hud_screen_co_ords_to_hud_texture_co_ords (&i, &j);

  00369	8d 45 ec	 lea	 eax, DWORD PTR _j$[ebp]
  0036c	50		 push	 eax
  0036d	8d 4d f0	 lea	 ecx, DWORD PTR _i$[ebp]
  00370	51		 push	 ecx
  00371	e8 00 00 00 00	 call	 ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ; transform_hud_screen_co_ords_to_hud_texture_co_ords

; 2224 : 
; 2225 : 							get_2d_world_position (i, j, &intercept_point_x, &intercept_point_y);

  00376	8d 45 dc	 lea	 eax, DWORD PTR _intercept_point_y$[ebp]
  00379	50		 push	 eax
  0037a	8d 4d e0	 lea	 ecx, DWORD PTR _intercept_point_x$[ebp]
  0037d	51		 push	 ecx
  0037e	51		 push	 ecx
  0037f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _j$[ebp]
  00384	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00389	51		 push	 ecx
  0038a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _i$[ebp]
  0038f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00394	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 2226 : 
; 2227 : 							clip_2d_point_to_hud_extent (&intercept_point_x, &intercept_point_y);

  00399	8d 45 dc	 lea	 eax, DWORD PTR _intercept_point_y$[ebp]
  0039c	50		 push	 eax
  0039d	8d 4d e0	 lea	 ecx, DWORD PTR _intercept_point_x$[ebp]
  003a0	51		 push	 ecx
  003a1	e8 00 00 00 00	 call	 ?clip_2d_point_to_hud_extent@@YGXPAM0@Z ; clip_2d_point_to_hud_extent

; 2228 : 
; 2229 : 							draw_airborne_target_computed_intercept_point (intercept_point_x, intercept_point_y);

  003a6	51		 push	 ecx
  003a7	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _intercept_point_y$[ebp]
  003ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b1	51		 push	 ecx
  003b2	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _intercept_point_x$[ebp]
  003b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003bc	e8 00 00 00 00	 call	 ?draw_airborne_target_computed_intercept_point@@YGXMM@Z ; draw_airborne_target_computed_intercept_point
$LN18@draw_targe:

; 2230 : 						}
; 2231 : 					}
; 2232 : 
; 2233 : 					if (get_local_entity_selected_weapon_to_target_offsets (source, &heading_offset, &pitch_offset))

  003c1	8d 45 d4	 lea	 eax, DWORD PTR _pitch_offset$[ebp]
  003c4	50		 push	 eax
  003c5	8d 4d d8	 lea	 ecx, DWORD PTR _heading_offset$[ebp]
  003c8	51		 push	 ecx
  003c9	8b 55 d0	 mov	 edx, DWORD PTR _source$[ebp]
  003cc	52		 push	 edx
  003cd	e8 00 00 00 00	 call	 ?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z ; get_local_entity_selected_weapon_to_target_offsets
  003d2	85 c0		 test	 eax, eax
  003d4	0f 84 4f 01 00
	00		 je	 $LN20@draw_targe

; 2234 : 					{
; 2235 : 						heading_offset = bound (heading_offset, rad (-10.0), rad (10.0));

  003da	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  003df	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfc6571848000000
  003e7	66 0f 2f c8	 comisd	 xmm1, xmm0
  003eb	76 12		 jbe	 SHORT $LN52@draw_targe
  003ed	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfc6571848000000
  003f5	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv219[ebp], xmm0
  003fd	eb 3e		 jmp	 SHORT $LN53@draw_targe
$LN52@draw_targe:
  003ff	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  00404	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fc6571848000000
  0040c	76 12		 jbe	 SHORT $LN50@draw_targe
  0040e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00416	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv218[ebp], xmm0
  0041e	eb 0d		 jmp	 SHORT $LN51@draw_targe
$LN50@draw_targe:
  00420	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  00425	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv218[ebp], xmm0
$LN51@draw_targe:
  0042d	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv218[ebp]
  00435	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv219[ebp], xmm0
$LN53@draw_targe:
  0043d	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv219[ebp]
  00445	f3 0f 11 45 d8	 movss	 DWORD PTR _heading_offset$[ebp], xmm0

; 2236 : 
; 2237 : 						heading_offset *= 0.7 / 0.17453293;	// rad (10.0)

  0044a	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  0044f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40100af61bdae6ca
  00457	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0045b	f3 0f 11 45 d8	 movss	 DWORD PTR _heading_offset$[ebp], xmm0

; 2238 : 
; 2239 : 						pitch_offset = bound (pitch_offset, rad (-5.0), rad (5.0));

  00460	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  00465	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfb6571848000000
  0046d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00471	76 12		 jbe	 SHORT $LN56@draw_targe
  00473	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfb6571848000000
  0047b	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv230[ebp], xmm0
  00483	eb 3e		 jmp	 SHORT $LN57@draw_targe
$LN56@draw_targe:
  00485	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  0048a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb6571848000000
  00492	76 12		 jbe	 SHORT $LN54@draw_targe
  00494	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb6571848000000
  0049c	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv229[ebp], xmm0
  004a4	eb 0d		 jmp	 SHORT $LN55@draw_targe
$LN54@draw_targe:
  004a6	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  004ab	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv229[ebp], xmm0
$LN55@draw_targe:
  004b3	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv229[ebp]
  004bb	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv230[ebp], xmm0
$LN57@draw_targe:
  004c3	f2 0f 5a 85 68
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv230[ebp]
  004cb	f3 0f 11 45 d4	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0

; 2240 : 
; 2241 : 						pitch_offset *= 0.35 / 0.08726646;	// rad (5.0)

  004d0	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  004d5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40100af62b46c63e
  004dd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004e1	f3 0f 11 45 d4	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0

; 2242 : 
; 2243 : 						if (weapon_lock_type == WEAPON_LOCK_VALID)

  004e6	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  004ed	75 1d		 jne	 SHORT $LN22@draw_targe

; 2244 : 						{
; 2245 : 							draw_solid_i_beam (heading_offset, pitch_offset);

  004ef	51		 push	 ecx
  004f0	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _pitch_offset$[ebp]
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	51		 push	 ecx
  004fb	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading_offset$[ebp]
  00500	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00505	e8 00 00 00 00	 call	 ?draw_solid_i_beam@@YGXMM@Z ; draw_solid_i_beam

; 2246 : 						}
; 2247 : 						else

  0050a	eb 1b		 jmp	 SHORT $LN23@draw_targe
$LN22@draw_targe:

; 2248 : 						{
; 2249 : 							draw_dashed_i_beam (heading_offset, pitch_offset);

  0050c	51		 push	 ecx
  0050d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _pitch_offset$[ebp]
  00512	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00517	51		 push	 ecx
  00518	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _heading_offset$[ebp]
  0051d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00522	e8 00 00 00 00	 call	 ?draw_dashed_i_beam@@YGXMM@Z ; draw_dashed_i_beam
$LN23@draw_targe:

; 2250 : 						}
; 2251 : 					}
; 2252 : 					else

  00527	eb 0f		 jmp	 SHORT $LN21@draw_targe
$LN20@draw_targe:

; 2253 : 					{
; 2254 : 						//
; 2255 : 						// this should never happen
; 2256 : 						//
; 2257 : 
; 2258 : 						debug_colour_log (DEBUG_COLOUR_RED, "WARNING! get_local_entity_selected_weapon_to_target_offsets failed");

  00529	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@EJMNFCDH@WARNING?$CB?5get_local_entity_selec@
  0052e	6a 04		 push	 4
  00530	e8 00 00 00 00	 call	 ?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ ; debug_colour_log
  00535	83 c4 08	 add	 esp, 8
$LN21@draw_targe:

; 2259 : 					}
; 2260 : 				}
; 2261 : 
; 2262 : 				break;

  00538	e9 83 01 00 00	 jmp	 $LN2@draw_targe
$LN24@draw_targe:

; 2263 : 			}
; 2264 : 			////////////////////////////////////////
; 2265 : 			case ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE:
; 2266 : 			case ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II:
; 2267 : 			////////////////////////////////////////
; 2268 : 			{
; 2269 : 				if (!get_local_entity_int_value (source, INT_TYPE_LOCK_ON_AFTER_LAUNCH))

  0053d	83 7d d0 00	 cmp	 DWORD PTR _source$[ebp], 0
  00541	74 0d		 je	 SHORT $LN58@draw_targe
  00543	8b 45 d0	 mov	 eax, DWORD PTR _source$[ebp]
  00546	8b 08		 mov	 ecx, DWORD PTR [eax]
  00548	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv247[ebp], ecx
  0054e	eb 20		 jmp	 SHORT $LN59@draw_targe
$LN58@draw_targe:
  00550	68 dd 08 00 00	 push	 2269			; 000008ddH
  00555	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0055a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00560	52		 push	 edx
  00561	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00566	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv247[ebp], 0
$LN59@draw_targe:
  00570	b8 01 00 00 00	 mov	 eax, 1
  00575	85 c0		 test	 eax, eax
  00577	74 0c		 je	 SHORT $LN60@draw_targe
  00579	c7 85 68 ff ff
	ff 7e 00 00 00	 mov	 DWORD PTR tv254[ebp], 126 ; 0000007eH
  00583	eb 20		 jmp	 SHORT $LN61@draw_targe
$LN60@draw_targe:
  00585	68 dd 08 00 00	 push	 2269			; 000008ddH
  0058a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0058f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00595	51		 push	 ecx
  00596	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0059b	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv254[ebp], 0
$LN61@draw_targe:
  005a5	6a 7e		 push	 126			; 0000007eH
  005a7	8b 55 d0	 mov	 edx, DWORD PTR _source$[ebp]
  005aa	52		 push	 edx
  005ab	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv247[ebp], 1116
  005b5	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv254[ebp]
  005bb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  005c2	ff d2		 call	 edx
  005c4	85 c0		 test	 eax, eax
  005c6	75 49		 jne	 SHORT $LN25@draw_targe

; 2270 : 				{
; 2271 : 					if (target_visible)

  005c8	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  005cc	74 41		 je	 SHORT $LN29@draw_targe

; 2272 : 					{
; 2273 : 						if (weapon_lock_type == WEAPON_LOCK_VALID)

  005ce	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  005d5	75 1d		 jne	 SHORT $LN28@draw_targe

; 2274 : 						{
; 2275 : 							draw_hellfire_lobl_solid_target_marker (target_x, target_y);

  005d7	51		 push	 ecx
  005d8	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  005dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e2	51		 push	 ecx
  005e3	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  005e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ed	e8 00 00 00 00	 call	 ?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z ; draw_hellfire_lobl_solid_target_marker

; 2276 : 						}
; 2277 : 						else

  005f2	eb 1b		 jmp	 SHORT $LN29@draw_targe
$LN28@draw_targe:

; 2278 : 						{
; 2279 : 							draw_hellfire_lobl_dashed_target_marker (target_x, target_y);

  005f4	51		 push	 ecx
  005f5	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  005fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ff	51		 push	 ecx
  00600	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00605	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060a	e8 00 00 00 00	 call	 ?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z ; draw_hellfire_lobl_dashed_target_marker
$LN29@draw_targe:

; 2280 : 						}
; 2281 : 					}
; 2282 : 				}
; 2283 : 				else

  0060f	eb 60		 jmp	 SHORT $LN31@draw_targe
$LN25@draw_targe:

; 2284 : 				{
; 2285 : 					if (target_visible)

  00611	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  00615	74 43		 je	 SHORT $LN30@draw_targe

; 2286 : 					{
; 2287 : 						if (weapon_lock_type == WEAPON_LOCK_VALID)

  00617	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  0061e	75 1d		 jne	 SHORT $LN32@draw_targe

; 2288 : 						{
; 2289 : 							draw_hellfire_loal_solid_target_marker (target_x, target_y);

  00620	51		 push	 ecx
  00621	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00626	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062b	51		 push	 ecx
  0062c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00631	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00636	e8 00 00 00 00	 call	 ?draw_hellfire_loal_solid_target_marker@@YGXMM@Z ; draw_hellfire_loal_solid_target_marker

; 2290 : 						}
; 2291 : 						else

  0063b	eb 1b		 jmp	 SHORT $LN33@draw_targe
$LN32@draw_targe:

; 2292 : 						{
; 2293 : 							draw_hellfire_loal_dashed_target_marker (target_x, target_y);

  0063d	51		 push	 ecx
  0063e	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00643	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00648	51		 push	 ecx
  00649	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  0064e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00653	e8 00 00 00 00	 call	 ?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z ; draw_hellfire_loal_dashed_target_marker
$LN33@draw_targe:

; 2294 : 						}
; 2295 : 					}
; 2296 : 					else

  00658	eb 17		 jmp	 SHORT $LN31@draw_targe
$LN30@draw_targe:

; 2297 : 					{
; 2298 : 						draw_hellfire_loal_dashed_target_marker (0.0, 0.0);

  0065a	51		 push	 ecx
  0065b	0f 57 c0	 xorps	 xmm0, xmm0
  0065e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00663	51		 push	 ecx
  00664	0f 57 c0	 xorps	 xmm0, xmm0
  00667	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066c	e8 00 00 00 00	 call	 ?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z ; draw_hellfire_loal_dashed_target_marker
$LN31@draw_targe:

; 2299 : 					}
; 2300 : 				}
; 2301 : 
; 2302 : 				break;

  00671	eb 4d		 jmp	 SHORT $LN2@draw_targe
$LN34@draw_targe:

; 2303 : 			}
; 2304 : 			////////////////////////////////////////
; 2305 : 			case ENTITY_SUB_TYPE_WEAPON_AIM92_STINGER:
; 2306 : 			////////////////////////////////////////
; 2307 : 			{
; 2308 : 				if ((weapon_lock_type == WEAPON_LOCK_VALID) && target_visible)

  00673	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?weapon_lock_type@@3W4WEAPON_LOCK_TYPES@@A, 9 ; weapon_lock_type
  0067a	75 23		 jne	 SHORT $LN35@draw_targe
  0067c	83 7d fc 00	 cmp	 DWORD PTR _target_visible$[ebp], 0
  00680	74 1d		 je	 SHORT $LN35@draw_targe

; 2309 : 				{
; 2310 : 					draw_solid_stinger_target_marker (target_x, target_y);

  00682	51		 push	 ecx
  00683	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_y$[ebp]
  00688	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068d	51		 push	 ecx
  0068e	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _target_x$[ebp]
  00693	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00698	e8 00 00 00 00	 call	 ?draw_solid_stinger_target_marker@@YGXMM@Z ; draw_solid_stinger_target_marker

; 2311 : 				}
; 2312 : 				else

  0069d	eb 21		 jmp	 SHORT $LN36@draw_targe
$LN35@draw_targe:

; 2313 : 				{
; 2314 : 					draw_dashed_stinger_target_marker (ah64a_stinger_seeker_head_x_position, ah64a_stinger_seeker_head_y_position);

  0069f	51		 push	 ecx
  006a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ah64a_stinger_seeker_head_y_position@@3MA
  006a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ad	51		 push	 ecx
  006ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ah64a_stinger_seeker_head_x_position@@3MA
  006b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006bb	e8 00 00 00 00	 call	 ?draw_dashed_stinger_target_marker@@YGXMM@Z ; draw_dashed_stinger_target_marker
$LN36@draw_targe:
$LN2@draw_targe:

; 2315 : 				}
; 2316 : 
; 2317 : 				break;
; 2318 : 			}
; 2319 : 		}
; 2320 : 	}
; 2321 : }

  006c0	5f		 pop	 edi
  006c1	5e		 pop	 esi
  006c2	5b		 pop	 ebx
  006c3	8b e5		 mov	 esp, ebp
  006c5	5d		 pop	 ebp
  006c6	c3		 ret	 0
  006c7	90		 npad	 1
$LN63@draw_targe:
  006c8	00 00 00 00	 DD	 $LN11@draw_targe
  006cc	00 00 00 00	 DD	 $LN15@draw_targe
  006d0	00 00 00 00	 DD	 $LN34@draw_targe
  006d4	00 00 00 00	 DD	 $LN24@draw_targe
  006d8	00 00 00 00	 DD	 $LN2@draw_targe
$LN62@draw_targe:
  006dc	00		 DB	 0
  006dd	04		 DB	 4
  006de	04		 DB	 4
  006df	04		 DB	 4
  006e0	04		 DB	 4
  006e1	04		 DB	 4
  006e2	04		 DB	 4
  006e3	04		 DB	 4
  006e4	04		 DB	 4
  006e5	04		 DB	 4
  006e6	04		 DB	 4
  006e7	04		 DB	 4
  006e8	04		 DB	 4
  006e9	04		 DB	 4
  006ea	04		 DB	 4
  006eb	04		 DB	 4
  006ec	04		 DB	 4
  006ed	04		 DB	 4
  006ee	04		 DB	 4
  006ef	04		 DB	 4
  006f0	04		 DB	 4
  006f1	04		 DB	 4
  006f2	04		 DB	 4
  006f3	01		 DB	 1
  006f4	01		 DB	 1
  006f5	04		 DB	 4
  006f6	04		 DB	 4
  006f7	04		 DB	 4
  006f8	04		 DB	 4
  006f9	02		 DB	 2
  006fa	04		 DB	 4
  006fb	04		 DB	 4
  006fc	04		 DB	 4
  006fd	04		 DB	 4
  006fe	04		 DB	 4
  006ff	04		 DB	 4
  00700	04		 DB	 4
  00701	04		 DB	 4
  00702	03		 DB	 3
  00703	03		 DB	 3
?draw_target_symbology@@YGXXZ ENDP			; draw_target_symbology
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_airborne_target_computed_intercept_point@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_airborne_target_computed_intercept_point@@YGXMM@Z PROC ; draw_airborne_target_computed_intercept_point, COMDAT

; 2112 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2113 : 	draw_2d_line (x - 0.05, y, x + 0.05, y, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00015	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0001f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00027	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002b	51		 push	 ecx
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	51		 push	 ecx
  00032	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00041	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00049	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004d	51		 push	 ecx
  0004e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00053	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2114 : 	draw_2d_line (x, y - 0.05, x, y + 0.05, hud_colour);

  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0005d	50		 push	 eax
  0005e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00063	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0006b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0006f	51		 push	 ecx
  00070	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00075	51		 push	 ecx
  00076	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0007b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00080	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00085	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0008d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00091	51		 push	 ecx
  00092	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00097	51		 push	 ecx
  00098	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0009d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2115 : }

  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	5b		 pop	 ebx
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 08 00	 ret	 8
?draw_airborne_target_computed_intercept_point@@YGXMM@Z ENDP ; draw_airborne_target_computed_intercept_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_hellfire_loal_solid_target_marker@@YGXMM@Z
_TEXT	SEGMENT
tv77 = -80						; size = 8
tv69 = -80						; size = 8
tv78 = -72						; size = 8
tv70 = -72						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_loal_solid_target_marker@@YGXMM@Z PROC	; draw_hellfire_loal_solid_target_marker, COMDAT

; 2097 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2098 : 	x = bound (x, -0.295, 0.295);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0000e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00016	66 0f 2f c8	 comisd	 xmm1, xmm0
  0001a	76 0f		 jbe	 SHORT $LN5@draw_hellf
  0001c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00024	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
  00029	eb 32		 jmp	 SHORT $LN6@draw_hellf
$LN5@draw_hellf:
  0002b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00030	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00038	76 0f		 jbe	 SHORT $LN3@draw_hellf
  0003a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00042	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
  00047	eb 0a		 jmp	 SHORT $LN4@draw_hellf
$LN3@draw_hellf:
  00049	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0004e	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
$LN4@draw_hellf:
  00053	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv69[ebp]
  00058	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
$LN6@draw_hellf:
  0005d	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv70[ebp]
  00062	f3 0f 11 45 08	 movss	 DWORD PTR _x$[ebp], xmm0

; 2099 : 	y = bound (y, -0.295, 0.295);

  00067	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0006c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00074	66 0f 2f c8	 comisd	 xmm1, xmm0
  00078	76 0f		 jbe	 SHORT $LN9@draw_hellf
  0007a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00082	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
  00087	eb 32		 jmp	 SHORT $LN10@draw_hellf
$LN9@draw_hellf:
  00089	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00096	76 0f		 jbe	 SHORT $LN7@draw_hellf
  00098	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  000a0	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
  000a5	eb 0a		 jmp	 SHORT $LN8@draw_hellf
$LN7@draw_hellf:
  000a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000ac	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
$LN8@draw_hellf:
  000b1	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv77[ebp]
  000b6	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
$LN10@draw_hellf:
  000bb	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv78[ebp]
  000c0	f3 0f 11 45 0c	 movss	 DWORD PTR _y$[ebp], xmm0

; 2100 : 
; 2101 : 	draw_2d_line (x - 0.7, y + 0.7, x + 0.7, y + 0.7, hud_colour);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000ca	50		 push	 eax
  000cb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000d0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  000d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000dc	51		 push	 ecx
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  000ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f3	51		 push	 ecx
  000f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000fe	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00106	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010a	51		 push	 ecx
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00115	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0011d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00121	51		 push	 ecx
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2102 : 	draw_2d_line (x + 0.7, y + 0.7, x + 0.7, y - 0.7, hud_colour);

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00131	50		 push	 eax
  00132	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00137	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0013f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00143	51		 push	 ecx
  00144	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00149	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0014e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00156	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0015a	51		 push	 ecx
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00165	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0016d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00171	51		 push	 ecx
  00172	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00177	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0017c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00184	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00188	51		 push	 ecx
  00189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2103 : 	draw_2d_line (x + 0.7, y - 0.7, x - 0.7, y - 0.7, hud_colour);

  00193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00198	50		 push	 eax
  00199	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0019e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001aa	51		 push	 ecx
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001b5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001bd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c1	51		 push	 ecx
  001c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001cc	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d8	51		 push	 ecx
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001e3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001eb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ef	51		 push	 ecx
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2104 : 	draw_2d_line (x - 0.7, y - 0.7, x - 0.7, y + 0.7, hud_colour);

  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ff	50		 push	 eax
  00200	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00205	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0020d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00211	51		 push	 ecx
  00212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00217	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0021c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00224	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00228	51		 push	 ecx
  00229	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00233	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0023b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023f	51		 push	 ecx
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0024a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00252	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00256	51		 push	 ecx
  00257	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2105 : }

  00261	5f		 pop	 edi
  00262	5e		 pop	 esi
  00263	5b		 pop	 ebx
  00264	8b e5		 mov	 esp, ebp
  00266	5d		 pop	 ebp
  00267	c2 08 00	 ret	 8
?draw_hellfire_loal_solid_target_marker@@YGXMM@Z ENDP	; draw_hellfire_loal_solid_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z
_TEXT	SEGMENT
tv77 = -80						; size = 8
tv69 = -80						; size = 8
tv78 = -72						; size = 8
tv70 = -72						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z PROC	; draw_hellfire_loal_dashed_target_marker, COMDAT

; 2051 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2052 : 	x = bound (x, -0.295, 0.295);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0000e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00016	66 0f 2f c8	 comisd	 xmm1, xmm0
  0001a	76 0f		 jbe	 SHORT $LN5@draw_hellf
  0001c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00024	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
  00029	eb 32		 jmp	 SHORT $LN6@draw_hellf
$LN5@draw_hellf:
  0002b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00030	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00038	76 0f		 jbe	 SHORT $LN3@draw_hellf
  0003a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00042	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
  00047	eb 0a		 jmp	 SHORT $LN4@draw_hellf
$LN3@draw_hellf:
  00049	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0004e	f2 0f 11 45 b0	 movsd	 QWORD PTR tv69[ebp], xmm0
$LN4@draw_hellf:
  00053	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv69[ebp]
  00058	f2 0f 11 45 b8	 movsd	 QWORD PTR tv70[ebp], xmm0
$LN6@draw_hellf:
  0005d	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv70[ebp]
  00062	f3 0f 11 45 08	 movss	 DWORD PTR _x$[ebp], xmm0

; 2053 : 	y = bound (y, -0.295, 0.295);

  00067	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0006c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfd2e147ae147ae1
  00074	66 0f 2f c8	 comisd	 xmm1, xmm0
  00078	76 0f		 jbe	 SHORT $LN9@draw_hellf
  0007a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfd2e147ae147ae1
  00082	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
  00087	eb 32		 jmp	 SHORT $LN10@draw_hellf
$LN9@draw_hellf:
  00089	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  00096	76 0f		 jbe	 SHORT $LN7@draw_hellf
  00098	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd2e147ae147ae1
  000a0	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
  000a5	eb 0a		 jmp	 SHORT $LN8@draw_hellf
$LN7@draw_hellf:
  000a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000ac	f2 0f 11 45 b0	 movsd	 QWORD PTR tv77[ebp], xmm0
$LN8@draw_hellf:
  000b1	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv77[ebp]
  000b6	f2 0f 11 45 b8	 movsd	 QWORD PTR tv78[ebp], xmm0
$LN10@draw_hellf:
  000bb	f2 0f 5a 45 b8	 cvtsd2ss xmm0, QWORD PTR tv78[ebp]
  000c0	f3 0f 11 45 0c	 movss	 DWORD PTR _y$[ebp], xmm0

; 2054 : 
; 2055 : 	draw_2d_line (x - 0.70, y + 0.70, x - 0.65, y + 0.70, hud_colour);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000ca	50		 push	 eax
  000cb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000d0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  000d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000dc	51		 push	 ecx
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000e7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  000ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f3	51		 push	 ecx
  000f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000fe	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00106	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010a	51		 push	 ecx
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00115	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0011d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00121	51		 push	 ecx
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2056 : 	draw_2d_line (x - 0.55, y + 0.70, x - 0.45, y + 0.70, hud_colour);

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00131	50		 push	 eax
  00132	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00137	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0013f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00143	51		 push	 ecx
  00144	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00149	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0014e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00156	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0015a	51		 push	 ecx
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00165	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0016d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00171	51		 push	 ecx
  00172	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00177	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0017c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00184	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00188	51		 push	 ecx
  00189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2057 : 	draw_2d_line (x - 0.35, y + 0.70, x - 0.25, y + 0.70, hud_colour);

  00193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00198	50		 push	 eax
  00199	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0019e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001aa	51		 push	 ecx
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001b5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  001bd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c1	51		 push	 ecx
  001c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001cc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  001d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d8	51		 push	 ecx
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001e3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  001eb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ef	51		 push	 ecx
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2058 : 	draw_2d_line (x - 0.15, y + 0.70, x - 0.05, y + 0.70, hud_colour);

  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ff	50		 push	 eax
  00200	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00205	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0020d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00211	51		 push	 ecx
  00212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00217	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0021c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00224	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00228	51		 push	 ecx
  00229	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00233	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0023b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023f	51		 push	 ecx
  00240	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00245	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0024a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00252	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00256	51		 push	 ecx
  00257	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2059 : 	draw_2d_line (x + 0.05, y + 0.70, x + 0.15, y + 0.70, hud_colour);

  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00266	50		 push	 eax
  00267	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0026c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00274	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00278	51		 push	 ecx
  00279	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00283	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0028b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028f	51		 push	 ecx
  00290	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00295	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0029a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  002a2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a6	51		 push	 ecx
  002a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ac	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002b1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  002b9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002bd	51		 push	 ecx
  002be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2060 : 	draw_2d_line (x + 0.25, y + 0.70, x + 0.35, y + 0.70, hud_colour);

  002c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002cd	50		 push	 eax
  002ce	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002d3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  002db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002df	51		 push	 ecx
  002e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002ea	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  002f2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f6	51		 push	 ecx
  002f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00301	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00309	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0030d	51		 push	 ecx
  0030e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00313	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00318	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00320	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00324	51		 push	 ecx
  00325	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2061 : 	draw_2d_line (x + 0.45, y + 0.70, x + 0.55, y + 0.70, hud_colour);

  0032f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00334	50		 push	 eax
  00335	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0033a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00342	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00346	51		 push	 ecx
  00347	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00351	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00359	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0035d	51		 push	 ecx
  0035e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00363	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00368	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00370	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00374	51		 push	 ecx
  00375	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0037a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0037f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00387	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0038b	51		 push	 ecx
  0038c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00391	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2062 : 	draw_2d_line (x + 0.65, y + 0.70, x + 0.70, y + 0.70, hud_colour);

  00396	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0039b	50		 push	 eax
  0039c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003a1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  003a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ad	51		 push	 ecx
  003ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003b8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  003c0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003c4	51		 push	 ecx
  003c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ca	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003cf	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  003d7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003db	51		 push	 ecx
  003dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003e6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  003ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003f2	51		 push	 ecx
  003f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2063 : 
; 2064 : 	draw_2d_line (x - 0.70, y - 0.70, x - 0.65, y - 0.70, hud_colour);

  003fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00402	50		 push	 eax
  00403	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00408	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00410	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00414	51		 push	 ecx
  00415	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0041f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00427	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0042b	51		 push	 ecx
  0042c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00431	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00436	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0043e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00442	51		 push	 ecx
  00443	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00448	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0044d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00455	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00459	51		 push	 ecx
  0045a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2065 : 	draw_2d_line (x - 0.55, y - 0.70, x - 0.45, y - 0.70, hud_colour);

  00464	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00469	50		 push	 eax
  0046a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0046f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00477	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0047b	51		 push	 ecx
  0047c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00481	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00486	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  0048e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00492	51		 push	 ecx
  00493	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00498	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0049d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  004a5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004a9	51		 push	 ecx
  004aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004af	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004b4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  004bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004c0	51		 push	 ecx
  004c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2066 : 	draw_2d_line (x - 0.35, y - 0.70, x - 0.25, y - 0.70, hud_colour);

  004cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004d0	50		 push	 eax
  004d1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004d6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  004de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004e2	51		 push	 ecx
  004e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ed	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  004f5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f9	51		 push	 ecx
  004fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ff	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00504	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0050c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00510	51		 push	 ecx
  00511	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00516	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0051b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00523	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00527	51		 push	 ecx
  00528	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2067 : 	draw_2d_line (x - 0.15, y - 0.70, x - 0.05, y - 0.70, hud_colour);

  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00537	50		 push	 eax
  00538	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0053d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00545	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00549	51		 push	 ecx
  0054a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00554	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0055c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00560	51		 push	 ecx
  00561	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00566	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0056b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00573	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00577	51		 push	 ecx
  00578	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0057d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00582	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0058a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0058e	51		 push	 ecx
  0058f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00594	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2068 : 	draw_2d_line (x + 0.05, y - 0.70, x + 0.15, y - 0.70, hud_colour);

  00599	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0059e	50		 push	 eax
  0059f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005a4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  005ac	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b0	51		 push	 ecx
  005b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005bb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  005c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c7	51		 push	 ecx
  005c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005cd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005d2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  005da	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005de	51		 push	 ecx
  005df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005e9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  005f1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f5	51		 push	 ecx
  005f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005fb	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2069 : 	draw_2d_line (x + 0.25, y - 0.70, x + 0.35, y - 0.70, hud_colour);

  00600	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00605	50		 push	 eax
  00606	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0060b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00613	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00617	51		 push	 ecx
  00618	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00622	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  0062a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0062e	51		 push	 ecx
  0062f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00634	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00639	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00641	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00645	51		 push	 ecx
  00646	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00650	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00658	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0065c	51		 push	 ecx
  0065d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00662	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2070 : 	draw_2d_line (x + 0.45, y - 0.70, x + 0.55, y - 0.70, hud_colour);

  00667	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0066c	50		 push	 eax
  0066d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00672	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0067a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0067e	51		 push	 ecx
  0067f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00684	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00689	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00691	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00695	51		 push	 ecx
  00696	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006a0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  006a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006ac	51		 push	 ecx
  006ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006b7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  006bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006c3	51		 push	 ecx
  006c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2071 : 	draw_2d_line (x + 0.65, y - 0.70, x + 0.70, y - 0.70, hud_colour);

  006ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006d3	50		 push	 eax
  006d4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006d9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  006e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006e5	51		 push	 ecx
  006e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006eb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006f0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  006f8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006fc	51		 push	 ecx
  006fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00702	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00707	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0070f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00713	51		 push	 ecx
  00714	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00719	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0071e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00726	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0072a	51		 push	 ecx
  0072b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00730	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2072 : 
; 2073 : 	draw_2d_line (x + 0.70, y - 0.70, x + 0.70, y - 0.65, hud_colour);

  00735	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0073a	50		 push	 eax
  0073b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00740	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00748	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0074c	51		 push	 ecx
  0074d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00752	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00757	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0075f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00763	51		 push	 ecx
  00764	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00769	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0076e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00776	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0077a	51		 push	 ecx
  0077b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00780	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00785	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0078d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00791	51		 push	 ecx
  00792	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00797	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2074 : 	draw_2d_line (x + 0.70, y - 0.55, x + 0.70, y - 0.45, hud_colour);

  0079c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007a1	50		 push	 eax
  007a2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007a7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  007af	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007b3	51		 push	 ecx
  007b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b9	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007be	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  007c6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007ca	51		 push	 ecx
  007cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007d0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007d5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  007dd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007e1	51		 push	 ecx
  007e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007ec	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  007f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f8	51		 push	 ecx
  007f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007fe	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2075 : 	draw_2d_line (x + 0.70, y - 0.35, x + 0.70, y - 0.25, hud_colour);

  00803	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00808	50		 push	 eax
  00809	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0080e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00816	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0081a	51		 push	 ecx
  0081b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00820	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00825	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0082d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00831	51		 push	 ecx
  00832	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00837	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0083c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00844	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00848	51		 push	 ecx
  00849	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0084e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00853	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  0085b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0085f	51		 push	 ecx
  00860	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00865	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2076 : 	draw_2d_line (x + 0.70, y - 0.15, x + 0.70, y - 0.05, hud_colour);

  0086a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0086f	50		 push	 eax
  00870	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00875	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0087d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00881	51		 push	 ecx
  00882	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00887	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0088c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00894	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00898	51		 push	 ecx
  00899	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0089e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  008a3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  008ab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008af	51		 push	 ecx
  008b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  008ba	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  008c2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008c6	51		 push	 ecx
  008c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008cc	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2077 : 	draw_2d_line (x + 0.70, y + 0.05, x + 0.70, y + 0.15, hud_colour);

  008d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  008d6	50		 push	 eax
  008d7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  008dc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  008e4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008e8	51		 push	 ecx
  008e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ee	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  008f3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  008fb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008ff	51		 push	 ecx
  00900	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00905	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0090a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00912	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00916	51		 push	 ecx
  00917	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0091c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00921	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00929	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0092d	51		 push	 ecx
  0092e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00933	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2078 : 	draw_2d_line (x + 0.70, y + 0.25, x + 0.70, y + 0.35, hud_colour);

  00938	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0093d	50		 push	 eax
  0093e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00943	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  0094b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0094f	51		 push	 ecx
  00950	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00955	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0095a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00962	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00966	51		 push	 ecx
  00967	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0096c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00971	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00979	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0097d	51		 push	 ecx
  0097e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00983	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00988	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00990	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00994	51		 push	 ecx
  00995	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0099a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2079 : 	draw_2d_line (x + 0.70, y + 0.45, x + 0.70, y + 0.55, hud_colour);

  0099f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  009a4	50		 push	 eax
  009a5	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  009aa	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  009b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009b6	51		 push	 ecx
  009b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009bc	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  009c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  009c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009cd	51		 push	 ecx
  009ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009d3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  009d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  009e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009e4	51		 push	 ecx
  009e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ea	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  009ef	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  009f7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009fb	51		 push	 ecx
  009fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a01	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2080 : 	draw_2d_line (x + 0.70, y + 0.65, x + 0.70, y + 0.70, hud_colour);

  00a06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00a0b	50		 push	 eax
  00a0c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00a11	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a19	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a1d	51		 push	 ecx
  00a1e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a23	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00a28	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a30	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a34	51		 push	 ecx
  00a35	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a3a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00a3f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00a47	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a4b	51		 push	 ecx
  00a4c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a51	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00a56	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a5e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a62	51		 push	 ecx
  00a63	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a68	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2081 : 
; 2082 : 	draw_2d_line (x - 0.70, y - 0.70, x - 0.70, y - 0.65, hud_colour);

  00a6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00a72	50		 push	 eax
  00a73	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00a78	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00a80	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a84	51		 push	 ecx
  00a85	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a8a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00a8f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00a97	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a9b	51		 push	 ecx
  00a9c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00aa1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00aa6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00aae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ab2	51		 push	 ecx
  00ab3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ab8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00abd	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00ac5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ac9	51		 push	 ecx
  00aca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00acf	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2083 : 	draw_2d_line (x - 0.70, y - 0.55, x - 0.70, y - 0.45, hud_colour);

  00ad4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00ad9	50		 push	 eax
  00ada	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00adf	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00ae7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00aeb	51		 push	 ecx
  00aec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00af1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00af6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00afe	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b02	51		 push	 ecx
  00b03	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b08	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00b0d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00b15	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b19	51		 push	 ecx
  00b1a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b1f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00b24	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00b2c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b30	51		 push	 ecx
  00b31	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b36	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2084 : 	draw_2d_line (x - 0.70, y - 0.35, x - 0.70, y - 0.25, hud_colour);

  00b3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00b40	50		 push	 eax
  00b41	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00b46	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00b4e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b52	51		 push	 ecx
  00b53	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b58	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00b5d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00b65	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b69	51		 push	 ecx
  00b6a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b6f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00b74	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00b7c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b80	51		 push	 ecx
  00b81	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b86	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00b8b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00b93	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b97	51		 push	 ecx
  00b98	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b9d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2085 : 	draw_2d_line (x - 0.70, y - 0.15, x - 0.70, y - 0.05, hud_colour);

  00ba2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00ba7	50		 push	 eax
  00ba8	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00bad	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00bb5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bb9	51		 push	 ecx
  00bba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bbf	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00bc4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00bcc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bd0	51		 push	 ecx
  00bd1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bd6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00bdb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00be3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00be7	51		 push	 ecx
  00be8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bed	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00bf2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00bfa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00bfe	51		 push	 ecx
  00bff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c04	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2086 : 	draw_2d_line (x - 0.70, y + 0.05, x - 0.70, y + 0.15, hud_colour);

  00c09	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00c0e	50		 push	 eax
  00c0f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00c14	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00c1c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c20	51		 push	 ecx
  00c21	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c26	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00c2b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00c33	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c37	51		 push	 ecx
  00c38	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c3d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00c42	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00c4a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c4e	51		 push	 ecx
  00c4f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c54	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00c59	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00c61	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c65	51		 push	 ecx
  00c66	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c6b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2087 : 	draw_2d_line (x - 0.70, y + 0.25, x - 0.70, y + 0.35, hud_colour);

  00c70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00c75	50		 push	 eax
  00c76	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00c7b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6666666666666
  00c83	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c87	51		 push	 ecx
  00c88	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c8d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00c92	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00c9a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c9e	51		 push	 ecx
  00c9f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ca4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00ca9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00cb1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cb5	51		 push	 ecx
  00cb6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cbb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00cc0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00cc8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ccc	51		 push	 ecx
  00ccd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cd2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2088 : 	draw_2d_line (x - 0.70, y + 0.45, x - 0.70, y + 0.55, hud_colour);

  00cd7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00cdc	50		 push	 eax
  00cdd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00ce2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe199999999999a
  00cea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cee	51		 push	 ecx
  00cef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cf4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00cf9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d01	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d05	51		 push	 ecx
  00d06	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d0b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00d10	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdccccccccccccd
  00d18	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d1c	51		 push	 ecx
  00d1d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d22	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00d27	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d2f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d33	51		 push	 ecx
  00d34	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d39	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2089 : 	draw_2d_line (x - 0.70, y + 0.65, x - 0.70, y + 0.70, hud_colour);

  00d3e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00d43	50		 push	 eax
  00d44	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00d49	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d51	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d55	51		 push	 ecx
  00d56	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d5b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00d60	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d68	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d6c	51		 push	 ecx
  00d6d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d72	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00d77	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00d7f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d83	51		 push	 ecx
  00d84	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d89	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00d8e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe6666666666666
  00d96	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d9a	51		 push	 ecx
  00d9b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00da0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2090 : }

  00da5	5f		 pop	 edi
  00da6	5e		 pop	 esi
  00da7	5b		 pop	 ebx
  00da8	8b e5		 mov	 esp, ebp
  00daa	5d		 pop	 ebp
  00dab	c2 08 00	 ret	 8
?draw_hellfire_loal_dashed_target_marker@@YGXMM@Z ENDP	; draw_hellfire_loal_dashed_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z PROC	; draw_hellfire_lobl_solid_target_marker, COMDAT

; 2039 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2040 : 	draw_2d_line (x - 0.15, y + 0.15, x + 0.15, y + 0.15, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2041 : 	draw_2d_line (x + 0.15, y + 0.15, x + 0.15, y - 0.15, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2042 : 	draw_2d_line (x + 0.15, y - 0.15, x - 0.15, y - 0.15, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2043 : 	draw_2d_line (x - 0.15, y - 0.15, x - 0.15, y + 0.15, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2044 : }

  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 08 00	 ret	 8
?draw_hellfire_lobl_solid_target_marker@@YGXMM@Z ENDP	; draw_hellfire_lobl_solid_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z PROC	; draw_hellfire_lobl_dashed_target_marker, COMDAT

; 2008 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2009 : 	draw_2d_line (x - 0.15000, y + 0.15000, x - 0.13125, y + 0.15000, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2010 : 	draw_2d_line (x - 0.09375, y + 0.15000, x - 0.05626, y + 0.15000, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2011 : 	draw_2d_line (x - 0.01875, y + 0.15000, x + 0.01875, y + 0.15000, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2012 : 	draw_2d_line (x + 0.05625, y + 0.15000, x + 0.09375, y + 0.15000, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2013 : 	draw_2d_line (x + 0.13125, y + 0.15000, x + 0.15000, y + 0.15000, hud_colour);

  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001aa	50		 push	 eax
  001ab	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001b0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001b8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001bc	51		 push	 ecx
  001bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001c7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d3	51		 push	 ecx
  001d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001de	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ea	51		 push	 ecx
  001eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001f5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  001fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00201	51		 push	 ecx
  00202	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00207	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2014 : 
; 2015 : 	draw_2d_line (x - 0.15000, y - 0.15000, x - 0.13125, y - 0.15000, hud_colour);

  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00211	50		 push	 eax
  00212	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00217	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0021f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00223	51		 push	 ecx
  00224	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00229	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0022e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00236	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023a	51		 push	 ecx
  0023b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00240	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00245	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0024d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00251	51		 push	 ecx
  00252	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00257	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0025c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00264	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00268	51		 push	 ecx
  00269	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2016 : 	draw_2d_line (x - 0.09375, y - 0.15000, x - 0.05626, y - 0.15000, hud_colour);

  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00278	50		 push	 eax
  00279	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0027e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00286	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028a	51		 push	 ecx
  0028b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00290	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00295	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  0029d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a1	51		 push	 ecx
  002a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002ac	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  002b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b8	51		 push	 ecx
  002b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002be	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002c3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  002cb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002cf	51		 push	 ecx
  002d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2017 : 	draw_2d_line (x - 0.01875, y - 0.15000, x + 0.01875, y - 0.15000, hud_colour);

  002da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002df	50		 push	 eax
  002e0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002e5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  002ed	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f1	51		 push	 ecx
  002f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002fc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  00304	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00308	51		 push	 ecx
  00309	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00313	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0031b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0031f	51		 push	 ecx
  00320	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00325	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0032a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  00332	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00336	51		 push	 ecx
  00337	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2018 : 	draw_2d_line (x + 0.05625, y - 0.15000, x + 0.09375, y - 0.15000, hud_colour);

  00341	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00346	50		 push	 eax
  00347	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0034c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00354	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00358	51		 push	 ecx
  00359	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00363	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  0036b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0036f	51		 push	 ecx
  00370	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00375	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0037a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00382	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00386	51		 push	 ecx
  00387	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00391	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00399	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0039d	51		 push	 ecx
  0039e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2019 : 	draw_2d_line (x + 0.13125, y - 0.15000, x + 0.15000, y - 0.15000, hud_colour);

  003a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003ad	50		 push	 eax
  003ae	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003b3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003bf	51		 push	 ecx
  003c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003ca	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003d6	51		 push	 ecx
  003d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003dc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003e1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ed	51		 push	 ecx
  003ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003f8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00400	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00404	51		 push	 ecx
  00405	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2020 : 
; 2021 : 	draw_2d_line (x + 0.15000, y - 0.15000, x + 0.15000, y - 0.13125, hud_colour);

  0040f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00414	50		 push	 eax
  00415	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0041a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00422	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00426	51		 push	 ecx
  00427	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00431	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00439	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043d	51		 push	 ecx
  0043e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00443	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00448	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00450	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00454	51		 push	 ecx
  00455	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0045f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00467	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0046b	51		 push	 ecx
  0046c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00471	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2022 : 	draw_2d_line (x + 0.15000, y - 0.09375, x + 0.15000, y - 0.05626, hud_colour);

  00476	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0047b	50		 push	 eax
  0047c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00481	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  00489	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0048d	51		 push	 ecx
  0048e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00493	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00498	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  004a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004a4	51		 push	 ecx
  004a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004aa	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004af	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  004b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004bb	51		 push	 ecx
  004bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  004ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d2	51		 push	 ecx
  004d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2023 : 	draw_2d_line (x + 0.15000, y - 0.01875, x + 0.15000, y + 0.01875, hud_colour);

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e2	50		 push	 eax
  004e3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004e8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  004f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f4	51		 push	 ecx
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ff	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00507	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0050b	51		 push	 ecx
  0050c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00511	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00516	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  0051e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00522	51		 push	 ecx
  00523	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00528	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0052d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00535	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00539	51		 push	 ecx
  0053a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2024 : 	draw_2d_line (x + 0.15000, y + 0.05625, x + 0.15000, y + 0.09375, hud_colour);

  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00549	50		 push	 eax
  0054a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0054f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  00557	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0055b	51		 push	 ecx
  0055c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00561	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00566	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0056e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00572	51		 push	 ecx
  00573	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00578	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0057d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00585	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00589	51		 push	 ecx
  0058a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00594	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0059c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a0	51		 push	 ecx
  005a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2025 : 	draw_2d_line (x + 0.15000, y + 0.13125, x + 0.15000, y + 0.15000, hud_colour);

  005ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005b0	50		 push	 eax
  005b1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  005be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c2	51		 push	 ecx
  005c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005cd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  005d5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005d9	51		 push	 ecx
  005da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005df	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005e4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  005ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f0	51		 push	 ecx
  005f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005fb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00603	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00607	51		 push	 ecx
  00608	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2026 : 
; 2027 : 	draw_2d_line (x - 0.15000, y - 0.15000, x - 0.15000, y - 0.13125, hud_colour);

  00612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00617	50		 push	 eax
  00618	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0061d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  00625	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00629	51		 push	 ecx
  0062a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00634	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0063c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00640	51		 push	 ecx
  00641	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00646	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0064b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00653	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00657	51		 push	 ecx
  00658	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00662	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0066a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0066e	51		 push	 ecx
  0066f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00674	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2028 : 	draw_2d_line (x - 0.15000, y - 0.09375, x - 0.15000, y - 0.05626, hud_colour);

  00679	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0067e	50		 push	 eax
  0067f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00684	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3facce1c58255b03
  0068c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00690	51		 push	 ecx
  00691	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00696	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0069b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  006a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006a7	51		 push	 ecx
  006a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ad	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006b2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb8000000000000
  006ba	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006be	51		 push	 ecx
  006bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006c9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  006d1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d5	51		 push	 ecx
  006d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006db	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2029 : 	draw_2d_line (x - 0.15000, y - 0.01875, x - 0.15000, y + 0.01875, hud_colour);

  006e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006e5	50		 push	 eax
  006e6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006eb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f93333333333333
  006f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006f7	51		 push	 ecx
  006f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fd	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00702	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0070a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0070e	51		 push	 ecx
  0070f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00714	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00719	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f93333333333333
  00721	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00725	51		 push	 ecx
  00726	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0072b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00730	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00738	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0073c	51		 push	 ecx
  0073d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00742	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2030 : 	draw_2d_line (x - 0.15000, y + 0.05625, x - 0.15000, y + 0.09375, hud_colour);

  00747	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0074c	50		 push	 eax
  0074d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00752	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb8000000000000
  0075a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0075e	51		 push	 ecx
  0075f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00764	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00769	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00771	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00775	51		 push	 ecx
  00776	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0077b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00780	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3faccccccccccccd
  00788	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0078c	51		 push	 ecx
  0078d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00792	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00797	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0079f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007a3	51		 push	 ecx
  007a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2031 : 	draw_2d_line (x - 0.15000, y + 0.13125, x - 0.15000, y + 0.15000, hud_colour);

  007ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007b3	50		 push	 eax
  007b4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007b9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  007c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007c5	51		 push	 ecx
  007c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007d0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  007d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007dc	51		 push	 ecx
  007dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0cccccccccccd
  007ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f3	51		 push	 ecx
  007f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f9	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007fe	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00806	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0080a	51		 push	 ecx
  0080b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00810	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2032 : }

  00815	5f		 pop	 edi
  00816	5e		 pop	 esi
  00817	5b		 pop	 ebx
  00818	8b e5		 mov	 esp, ebp
  0081a	5d		 pop	 ebp
  0081b	c2 08 00	 ret	 8
?draw_hellfire_lobl_dashed_target_marker@@YGXMM@Z ENDP	; draw_hellfire_lobl_dashed_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_solid_gun_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_solid_gun_target_marker@@YGXMM@Z PROC		; draw_solid_gun_target_marker, COMDAT

; 1996 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1997 : 	draw_2d_line (x - 0.1, y + 0.1, x + 0.1, y + 0.1, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1998 : 	draw_2d_line (x + 0.1, y + 0.1, x + 0.1, y - 0.1, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1999 : 	draw_2d_line (x + 0.1, y - 0.1, x - 0.1, y - 0.1, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2000 : 	draw_2d_line (x - 0.1, y - 0.1, x - 0.1, y + 0.1, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 2001 : }

  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 08 00	 ret	 8
?draw_solid_gun_target_marker@@YGXMM@Z ENDP		; draw_solid_gun_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_dashed_gun_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_dashed_gun_target_marker@@YGXMM@Z PROC		; draw_dashed_gun_target_marker, COMDAT

; 1965 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1966 : 	draw_2d_line (x - 0.1000, y + 0.1, x - 0.0788, y + 0.1, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00033	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00037	51		 push	 ecx
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00042	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0004a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00059	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1967 : 	draw_2d_line (x - 0.0556, y + 0.1, x - 0.0334, y + 0.1, hud_colour);

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00075	50		 push	 eax
  00076	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0007b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00083	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00092	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  0009a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009e	51		 push	 ecx
  0009f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  000c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1968 : 	draw_2d_line (x - 0.0112, y + 0.1, x + 0.0110, y + 0.1, hud_colour);

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000dc	50		 push	 eax
  000dd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000e2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000ea	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000f9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	51		 push	 ecx
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00110	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00118	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00127	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  0012f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00133	51		 push	 ecx
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1969 : 	draw_2d_line (x + 0.0332, y + 0.1, x + 0.0554, y + 0.1, hud_colour);

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00143	50		 push	 eax
  00144	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00149	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00151	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00155	51		 push	 ecx
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00160	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	51		 push	 ecx
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00177	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0017f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00183	51		 push	 ecx
  00184	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00189	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0018e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	51		 push	 ecx
  0019b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1970 : 	draw_2d_line (x + 0.0776, y + 0.1, x + 0.1000, y + 0.1, hud_colour);

  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001aa	50		 push	 eax
  001ab	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001b0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001b8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001bc	51		 push	 ecx
  001bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001c7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d3	51		 push	 ecx
  001d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001de	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ea	51		 push	 ecx
  001eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f0	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001f5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  001fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00201	51		 push	 ecx
  00202	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00207	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1971 : 
; 1972 : 	draw_2d_line (x - 0.1000, y - 0.1, x - 0.0788, y - 0.1, hud_colour);

  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00211	50		 push	 eax
  00212	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00217	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0021f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00223	51		 push	 ecx
  00224	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00229	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0022e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00236	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023a	51		 push	 ecx
  0023b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00240	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00245	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0024d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00251	51		 push	 ecx
  00252	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00257	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0025c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00264	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00268	51		 push	 ecx
  00269	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1973 : 	draw_2d_line (x - 0.0556, y - 0.1, x - 0.0334, y - 0.1, hud_colour);

  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00278	50		 push	 eax
  00279	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0027e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00286	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028a	51		 push	 ecx
  0028b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00290	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00295	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  0029d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002a1	51		 push	 ecx
  002a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a7	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002ac	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b8	51		 push	 ecx
  002b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002be	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002c3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  002cb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002cf	51		 push	 ecx
  002d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1974 : 	draw_2d_line (x - 0.0112, y - 0.1, x + 0.0110, y - 0.1, hud_colour);

  002da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002df	50		 push	 eax
  002e0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002e5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002ed	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f1	51		 push	 ecx
  002f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002fc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  00304	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00308	51		 push	 ecx
  00309	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00313	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0031b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0031f	51		 push	 ecx
  00320	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00325	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0032a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  00332	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00336	51		 push	 ecx
  00337	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1975 : 	draw_2d_line (x + 0.0332, y - 0.1, x + 0.0554, y - 0.1, hud_colour);

  00341	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00346	50		 push	 eax
  00347	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0034c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00354	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00358	51		 push	 ecx
  00359	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00363	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  0036b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0036f	51		 push	 ecx
  00370	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00375	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0037a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00382	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00386	51		 push	 ecx
  00387	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00391	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00399	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0039d	51		 push	 ecx
  0039e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1976 : 	draw_2d_line (x + 0.0776, y - 0.1, x + 0.1000, y - 0.1, hud_colour);

  003a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003ad	50		 push	 eax
  003ae	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003b3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003bf	51		 push	 ecx
  003c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c5	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003ca	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003d6	51		 push	 ecx
  003d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003dc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003e1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ed	51		 push	 ecx
  003ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  003f8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  00400	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00404	51		 push	 ecx
  00405	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1977 : 
; 1978 : 	draw_2d_line (x + 0.1, y - 0.1000, x + 0.1, y - 0.0788, hud_colour);

  0040f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00414	50		 push	 eax
  00415	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0041a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00422	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00426	51		 push	 ecx
  00427	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00431	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00439	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043d	51		 push	 ecx
  0043e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00443	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00448	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00450	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00454	51		 push	 ecx
  00455	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0045f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00467	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0046b	51		 push	 ecx
  0046c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00471	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1979 : 	draw_2d_line (x + 0.1, y - 0.0556, x + 0.1, y - 0.0334, hud_colour);

  00476	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0047b	50		 push	 eax
  0047c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00481	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  00489	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0048d	51		 push	 ecx
  0048e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00493	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00498	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  004a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004a4	51		 push	 ecx
  004a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004aa	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004af	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  004b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004bb	51		 push	 ecx
  004bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  004ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d2	51		 push	 ecx
  004d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1980 : 	draw_2d_line (x + 0.1, y - 0.0112, x + 0.1, y + 0.0110, hud_colour);

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e2	50		 push	 eax
  004e3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004e8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  004f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f4	51		 push	 ecx
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ff	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00507	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0050b	51		 push	 ecx
  0050c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00511	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00516	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  0051e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00522	51		 push	 ecx
  00523	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00528	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0052d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00535	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00539	51		 push	 ecx
  0053a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1981 : 	draw_2d_line (x + 0.1, y + 0.0332, x + 0.1, y + 0.0554, hud_colour);

  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00549	50		 push	 eax
  0054a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0054f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  00557	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0055b	51		 push	 ecx
  0055c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00561	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00566	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0056e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00572	51		 push	 ecx
  00573	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00578	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0057d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00585	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00589	51		 push	 ecx
  0058a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00594	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0059c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a0	51		 push	 ecx
  005a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1982 : 	draw_2d_line (x + 0.1, y + 0.0776, x + 0.1, y + 0.1000, hud_colour);

  005ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005b0	50		 push	 eax
  005b1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  005be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c2	51		 push	 ecx
  005c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005cd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  005d5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005d9	51		 push	 ecx
  005da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005df	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005e4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  005ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f0	51		 push	 ecx
  005f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005fb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00603	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00607	51		 push	 ecx
  00608	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1983 : 
; 1984 : 	draw_2d_line (x - 0.1, y - 0.1000, x - 0.1, y - 0.0788, hud_colour);

  00612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00617	50		 push	 eax
  00618	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0061d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb42c3c9eecbfb1
  00625	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00629	51		 push	 ecx
  0062a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00634	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0063c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00640	51		 push	 ecx
  00641	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00646	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0064b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00653	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00657	51		 push	 ecx
  00658	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00662	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0066a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0066e	51		 push	 ecx
  0066f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00674	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1985 : 	draw_2d_line (x - 0.1, y - 0.0556, x - 0.1, y - 0.0334, hud_colour);

  00679	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0067e	50		 push	 eax
  0067f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00684	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa119ce075f6fd2
  0068c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00690	51		 push	 ecx
  00691	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00696	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0069b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  006a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006a7	51		 push	 ecx
  006a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ad	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006b2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fac779a6b50b0f2
  006ba	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006be	51		 push	 ecx
  006bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c4	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006c9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  006d1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d5	51		 push	 ecx
  006d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006db	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1986 : 	draw_2d_line (x - 0.1, y - 0.0112, x - 0.1, y + 0.0110, hud_colour);

  006e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006e5	50		 push	 eax
  006e6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006eb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f86872b020c49ba
  006f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006f7	51		 push	 ecx
  006f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fd	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00702	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0070a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0070e	51		 push	 ecx
  0070f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00714	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00719	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f86f0068db8bac7
  00721	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00725	51		 push	 ecx
  00726	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0072b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00730	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00738	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0073c	51		 push	 ecx
  0073d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00742	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1987 : 	draw_2d_line (x - 0.1, y + 0.0332, x - 0.1, y + 0.0554, hud_colour);

  00747	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0074c	50		 push	 eax
  0074d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00752	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fac5d63886594af
  0075a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0075e	51		 push	 ecx
  0075f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00764	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00769	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00771	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00775	51		 push	 ecx
  00776	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0077b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00780	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa0ff972474538f
  00788	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0078c	51		 push	 ecx
  0078d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00792	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00797	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0079f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007a3	51		 push	 ecx
  007a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1988 : 	draw_2d_line (x - 0.1, y + 0.0776, x - 0.1, y + 0.1000, hud_colour);

  007ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007b3	50		 push	 eax
  007b4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007b9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  007c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007c5	51		 push	 ecx
  007c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007d0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  007d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007dc	51		 push	 ecx
  007dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007e7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3dd97f62b6ae8
  007ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f3	51		 push	 ecx
  007f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f9	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007fe	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00806	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0080a	51		 push	 ecx
  0080b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00810	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1989 : }

  00815	5f		 pop	 edi
  00816	5e		 pop	 esi
  00817	5b		 pop	 ebx
  00818	8b e5		 mov	 esp, ebp
  0081a	5d		 pop	 ebp
  0081b	c2 08 00	 ret	 8
?draw_dashed_gun_target_marker@@YGXMM@Z ENDP		; draw_dashed_gun_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_solid_stinger_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_solid_stinger_target_marker@@YGXMM@Z PROC		; draw_solid_stinger_target_marker, COMDAT

; 1954 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1955 : 	draw_2d_circle (x, y, 0.2, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  00018	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001d	51		 push	 ecx
  0001e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	51		 push	 ecx
  00029	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0002e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00033	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 1956 : 
; 1957 : 	draw_2d_circle (x, y, 0.1, hud_colour);

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0003d	50		 push	 eax
  0003e	51		 push	 ecx
  0003f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	51		 push	 ecx
  0004d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00052	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00057	51		 push	 ecx
  00058	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0005d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00062	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 1958 : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?draw_solid_stinger_target_marker@@YGXMM@Z ENDP		; draw_solid_stinger_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_dashed_stinger_target_marker@@YGXMM@Z
_TEXT	SEGMENT
tv309 = -108						; size = 8
tv301 = -108						; size = 8
tv293 = -108						; size = 8
tv285 = -108						; size = 8
tv257 = -108						; size = 8
tv249 = -108						; size = 8
tv241 = -108						; size = 8
tv233 = -108						; size = 8
tv225 = -108						; size = 8
tv217 = -108						; size = 8
tv339 = -100						; size = 8
tv337 = -100						; size = 8
tv335 = -100						; size = 8
tv333 = -100						; size = 8
tv331 = -100						; size = 8
tv329 = -100						; size = 8
tv327 = -100						; size = 8
tv325 = -100						; size = 8
tv323 = -100						; size = 8
tv321 = -100						; size = 8
_y3$ = -28						; size = 4
_x3$ = -24						; size = 4
_y2$ = -20						; size = 4
_x2$ = -16						; size = 4
_y1$ = -12						; size = 4
_x1$ = -8						; size = 4
_theta$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_dashed_stinger_target_marker@@YGXMM@Z PROC	; draw_dashed_stinger_target_marker, COMDAT

; 1897 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1898 : 	float
; 1899 : 		theta,
; 1900 : 		x1,
; 1901 : 		y1,
; 1902 : 		x2,
; 1903 : 		y2,
; 1904 : 		x3,
; 1905 : 		y3;
; 1906 : 
; 1907 : 	theta = rad (0.0);

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN2@draw_dashe:

; 1908 : 
; 1909 : 	while (theta < rad (360.0))

  00011	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00016	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401921fb51000000
  0001e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00022	0f 86 1d 02 00
	00		 jbe	 $LN3@draw_dashe

; 1910 : 	{
; 1911 : 		x1 = x + (0.2 * sin (theta));

  00028	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002d	51		 push	 ecx
  0002e	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  00033	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00038	f2 0f 11 45 9c	 movsd	 QWORD PTR tv321[ebp], xmm0
  0003d	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00042	dd 5d 94	 fstp	 QWORD PTR tv217[ebp]
  00045	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv217[ebp]
  0004a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00052	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv321[ebp]
  00057	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0005b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0005f	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 1912 : 		y1 = y + (0.2 * cos (theta));

  00064	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00069	51		 push	 ecx
  0006a	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0006f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00074	f2 0f 11 45 9c	 movsd	 QWORD PTR tv323[ebp], xmm0
  00079	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0007e	dd 5d 94	 fstp	 QWORD PTR tv225[ebp]
  00081	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv225[ebp]
  00086	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0008e	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv323[ebp]
  00093	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00097	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0009b	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 1913 : 
; 1914 : 		theta += rad (7.5);

  000a0	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  000a5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0c15236000000
  000ad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b1	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1915 : 
; 1916 : 		x2 = x + (0.2 * sin (theta));

  000b6	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000bb	51		 push	 ecx
  000bc	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  000c1	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000c6	f2 0f 11 45 9c	 movsd	 QWORD PTR tv325[ebp], xmm0
  000cb	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  000d0	dd 5d 94	 fstp	 QWORD PTR tv233[ebp]
  000d3	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv233[ebp]
  000d8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  000e0	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv325[ebp]
  000e5	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000e9	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000ed	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 1917 : 		y2 = y + (0.2 * cos (theta));

  000f2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000f7	51		 push	 ecx
  000f8	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  000fd	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00102	f2 0f 11 45 9c	 movsd	 QWORD PTR tv327[ebp], xmm0
  00107	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0010c	dd 5d 94	 fstp	 QWORD PTR tv241[ebp]
  0010f	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv241[ebp]
  00114	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0011c	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv327[ebp]
  00121	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00125	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00129	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 1918 : 
; 1919 : 		theta += rad (7.5);

  0012e	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00133	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc0c15236000000
  0013b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013f	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1920 : 
; 1921 : 		x3 = x + (0.2 * sin (theta));

  00144	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00149	51		 push	 ecx
  0014a	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0014f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00154	f2 0f 11 45 9c	 movsd	 QWORD PTR tv329[ebp], xmm0
  00159	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0015e	dd 5d 94	 fstp	 QWORD PTR tv249[ebp]
  00161	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv249[ebp]
  00166	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0016e	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv329[ebp]
  00173	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00177	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0017b	f3 0f 11 45 e8	 movss	 DWORD PTR _x3$[ebp], xmm0

; 1922 : 		y3 = y + (0.2 * cos (theta));

  00180	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00185	51		 push	 ecx
  00186	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0018b	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00190	f2 0f 11 45 9c	 movsd	 QWORD PTR tv331[ebp], xmm0
  00195	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0019a	dd 5d 94	 fstp	 QWORD PTR tv257[ebp]
  0019d	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv257[ebp]
  001a2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001aa	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv331[ebp]
  001af	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001b3	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001b7	f3 0f 11 45 e4	 movss	 DWORD PTR _y3$[ebp], xmm0

; 1923 : 
; 1924 : 		theta += rad (15.0);

  001bc	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  001c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  001c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001cd	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1925 : 
; 1926 : 		draw_2d_line (x1, y1, x2, y2, hud_colour);

  001d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001d7	50		 push	 eax
  001d8	51		 push	 ecx
  001d9	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e3	51		 push	 ecx
  001e4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ee	51		 push	 ecx
  001ef	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f9	51		 push	 ecx
  001fa	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00204	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1927 : 
; 1928 : 		draw_2d_line (x2, y2, x3, y3, hud_colour);

  00209	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0020e	50		 push	 eax
  0020f	51		 push	 ecx
  00210	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y3$[ebp]
  00215	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021a	51		 push	 ecx
  0021b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x3$[ebp]
  00220	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00225	51		 push	 ecx
  00226	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0022b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00230	51		 push	 ecx
  00231	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00236	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1929 : 	}

  00240	e9 cc fd ff ff	 jmp	 $LN2@draw_dashe
$LN3@draw_dashe:

; 1930 : 
; 1931 : 	theta = rad (15.0);

  00245	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e860a92
  0024d	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN4@draw_dashe:

; 1932 : 
; 1933 : 	while (theta < rad (360.0))

  00252	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00257	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401921fb51000000
  0025f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00263	0f 86 58 01 00
	00		 jbe	 $LN5@draw_dashe

; 1934 : 	{
; 1935 : 		x1 = x + (0.1 * sin (theta));

  00269	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0026e	51		 push	 ecx
  0026f	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  00274	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00279	f2 0f 11 45 9c	 movsd	 QWORD PTR tv333[ebp], xmm0
  0027e	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00283	dd 5d 94	 fstp	 QWORD PTR tv285[ebp]
  00286	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv285[ebp]
  0028b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00293	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv333[ebp]
  00298	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0029c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002a0	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 1936 : 		y1 = y + (0.1 * cos (theta));

  002a5	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002aa	51		 push	 ecx
  002ab	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  002b0	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  002b5	f2 0f 11 45 9c	 movsd	 QWORD PTR tv335[ebp], xmm0
  002ba	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  002bf	dd 5d 94	 fstp	 QWORD PTR tv293[ebp]
  002c2	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv293[ebp]
  002c7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002cf	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv335[ebp]
  002d4	f2 0f 58 c8	 addsd	 xmm1, xmm0
  002d8	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002dc	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 1937 : 
; 1938 : 		theta += rad (15.0);

  002e1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  002e6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  002ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002f2	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1939 : 
; 1940 : 		x2 = x + (0.1 * sin (theta));

  002f7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  002fc	51		 push	 ecx
  002fd	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  00302	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00307	f2 0f 11 45 9c	 movsd	 QWORD PTR tv337[ebp], xmm0
  0030c	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00311	dd 5d 94	 fstp	 QWORD PTR tv301[ebp]
  00314	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv301[ebp]
  00319	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00321	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv337[ebp]
  00326	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0032a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0032e	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 1941 : 		y2 = y + (0.1 * cos (theta));

  00333	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00338	51		 push	 ecx
  00339	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _theta$[ebp]
  0033e	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00343	f2 0f 11 45 9c	 movsd	 QWORD PTR tv339[ebp], xmm0
  00348	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0034d	dd 5d 94	 fstp	 QWORD PTR tv309[ebp]
  00350	f2 0f 10 45 94	 movsd	 xmm0, QWORD PTR tv309[ebp]
  00355	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0035d	f2 0f 10 4d 9c	 movsd	 xmm1, QWORD PTR tv339[ebp]
  00362	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00366	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0036a	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 1942 : 
; 1943 : 		theta += rad (15.0);

  0036f	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00374	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  0037c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00380	f3 0f 11 45 fc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1944 : 
; 1945 : 		draw_2d_line (x1, y1, x2, y2, hud_colour);

  00385	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0038a	50		 push	 eax
  0038b	51		 push	 ecx
  0038c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00391	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00396	51		 push	 ecx
  00397	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0039c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a1	51		 push	 ecx
  003a2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  003a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ac	51		 push	 ecx
  003ad	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  003b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b7	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1946 : 	}

  003bc	e9 91 fe ff ff	 jmp	 $LN4@draw_dashe
$LN5@draw_dashe:

; 1947 : }

  003c1	5f		 pop	 edi
  003c2	5e		 pop	 esi
  003c3	5b		 pop	 ebx
  003c4	8b e5		 mov	 esp, ebp
  003c6	5d		 pop	 ebp
  003c7	c2 08 00	 ret	 8
?draw_dashed_stinger_target_marker@@YGXMM@Z ENDP	; draw_dashed_stinger_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_solid_i_beam@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_solid_i_beam@@YGXMM@Z PROC			; draw_solid_i_beam, COMDAT

; 1878 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1879 : 	draw_2d_line (x - 0.1000 + 0.0125, y + 0.2, x - 0.0000 - 0.0125, y + 0.2, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  00033	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0003b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003f	51		 push	 ecx
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0004a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00052	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00056	51		 push	 ecx
  00057	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00061	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00069	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00071	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00075	51		 push	 ecx
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1880 : 
; 1881 : 	draw_2d_line (x + 0.1000 - 0.0125, y + 0.2, x + 0.0000 + 0.0125, y + 0.2, hud_colour);

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00085	50		 push	 eax
  00086	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00093	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00097	51		 push	 ecx
  00098	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000a2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  000aa	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b6	51		 push	 ecx
  000b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  000c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cd	51		 push	 ecx
  000ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000e0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ec	51		 push	 ecx
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1882 : 
; 1883 : 	draw_2d_line (x, y + 0.2000 - 0.0125, x, y + 0.1000 + 0.0125, hud_colour);

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000fc	50		 push	 eax
  000fd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00102	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0010a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00112	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00116	51		 push	 ecx
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0012c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00134	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0013c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00140	51		 push	 ecx
  00141	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00146	51		 push	 ecx
  00147	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0014c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00151	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1884 : 
; 1885 : 	draw_2d_line (x, y - 0.2000 + 0.0125, x, y - 0.1000 - 0.0125, hud_colour);

  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0015b	50		 push	 eax
  0015c	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00161	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00169	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00171	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00175	51		 push	 ecx
  00176	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017b	51		 push	 ecx
  0017c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00181	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00186	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0018b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00193	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0019b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019f	51		 push	 ecx
  001a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a5	51		 push	 ecx
  001a6	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1886 : 
; 1887 : 	draw_2d_line (x - 0.1000 + 0.0125, y - 0.2, x - 0.0000 - 0.0125, y - 0.2, hud_colour);

  001b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ba	50		 push	 eax
  001bb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001cc	51		 push	 ecx
  001cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001d7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  001df	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  001e7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001eb	51		 push	 ecx
  001ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001f6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001fe	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00202	51		 push	 ecx
  00203	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00208	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0020d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00215	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0021d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00221	51		 push	 ecx
  00222	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00227	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1888 : 
; 1889 : 	draw_2d_line (x + 0.1000 - 0.0125, y - 0.2, x + 0.0000 + 0.0125, y - 0.2, hud_colour);

  0022c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00231	50		 push	 eax
  00232	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00237	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0023f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00243	51		 push	 ecx
  00244	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00249	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0024e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  00256	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0025e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00262	51		 push	 ecx
  00263	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00268	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0026d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00275	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00279	51		 push	 ecx
  0027a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00284	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0028c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00294	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00298	51		 push	 ecx
  00299	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1890 : }

  002a3	5f		 pop	 edi
  002a4	5e		 pop	 esi
  002a5	5b		 pop	 ebx
  002a6	8b e5		 mov	 esp, ebp
  002a8	5d		 pop	 ebp
  002a9	c2 08 00	 ret	 8
?draw_solid_i_beam@@YGXMM@Z ENDP			; draw_solid_i_beam
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_dashed_i_beam@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_dashed_i_beam@@YGXMM@Z PROC			; draw_dashed_i_beam, COMDAT

; 1849 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1850 : 	draw_2d_line (x - 0.1000 + 0.0125, y + 0.2, x - 0.0500 - 0.0125, y + 0.2, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00014	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0001c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00033	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0003b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003f	51		 push	 ecx
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0004a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00052	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00056	51		 push	 ecx
  00057	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005c	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00061	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00069	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00071	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00075	51		 push	 ecx
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1851 : 	draw_2d_line (x - 0.0500 + 0.0125, y + 0.2, x - 0.0000 - 0.0125, y + 0.2, hud_colour);

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00085	50		 push	 eax
  00086	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0008b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00093	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00097	51		 push	 ecx
  00098	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009d	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000a2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  000aa	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b6	51		 push	 ecx
  000b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bc	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  000c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000cd	51		 push	 ecx
  000ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d3	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000d8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  000e0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  000e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ec	51		 push	 ecx
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1852 : 
; 1853 : 	draw_2d_line (x + 0.1000 - 0.0125, y + 0.2, x + 0.0500 + 0.0125, y + 0.2, hud_colour);

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000fc	50		 push	 eax
  000fd	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00102	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0010a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010e	51		 push	 ecx
  0010f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00114	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00119	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00121	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00129	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0012d	51		 push	 ecx
  0012e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00133	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00138	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00140	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00144	51		 push	 ecx
  00145	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0014f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00157	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0015f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00163	51		 push	 ecx
  00164	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00169	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1854 : 	draw_2d_line (x + 0.0500 - 0.0125, y + 0.2, x + 0.0000 + 0.0125, y + 0.2, hud_colour);

  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00173	50		 push	 eax
  00174	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00179	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00181	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00185	51		 push	 ecx
  00186	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018b	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00190	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  00198	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  001a0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001a4	51		 push	 ecx
  001a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001aa	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001af	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001bb	51		 push	 ecx
  001bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  001c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  001ce	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  001d6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001da	51		 push	 ecx
  001db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1855 : 
; 1856 : 	draw_2d_line (x, y + 0.2000 - 0.0125, x, y + 0.1500 + 0.0125, hud_colour);

  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001ea	50		 push	 eax
  001eb	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001f0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001f8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00200	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00204	51		 push	 ecx
  00205	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020a	51		 push	 ecx
  0020b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00210	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00215	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0021a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00222	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0022a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0022e	51		 push	 ecx
  0022f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00234	51		 push	 ecx
  00235	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0023a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1857 : 	draw_2d_line (x, y + 0.1500 - 0.0125, x, y + 0.1000 + 0.0125, hud_colour);

  00244	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00249	50		 push	 eax
  0024a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0024f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00257	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0025f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00263	51		 push	 ecx
  00264	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00269	51		 push	 ecx
  0026a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0026f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00274	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00279	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00281	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00289	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0028d	51		 push	 ecx
  0028e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00293	51		 push	 ecx
  00294	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00299	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1858 : 	draw_2d_line (x, y + 0.1000 - 0.0125, x, y + 0.0500 + 0.0125, hud_colour);

  002a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002a8	50		 push	 eax
  002a9	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002ae	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  002b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  002be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c2	51		 push	 ecx
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	51		 push	 ecx
  002c9	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002e0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  002e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ec	51		 push	 ecx
  002ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f2	51		 push	 ecx
  002f3	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1859 : 	draw_2d_line (x, y + 0.0500 - 0.0125, x, y + 0.0000 + 0.0125, hud_colour);

  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00307	50		 push	 eax
  00308	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0030d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  00315	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0031d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00321	51		 push	 ecx
  00322	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00327	51		 push	 ecx
  00328	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0032d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00332	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00337	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0033f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00347	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0034b	51		 push	 ecx
  0034c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00351	51		 push	 ecx
  00352	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00357	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1860 : 
; 1861 : 	draw_2d_line (x, y - 0.2000 + 0.0125, x, y - 0.1500 - 0.0125, hud_colour);

  00361	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00366	50		 push	 eax
  00367	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0036c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00374	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0037c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00380	51		 push	 ecx
  00381	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00386	51		 push	 ecx
  00387	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0038c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00391	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00396	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0039e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  003a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003aa	51		 push	 ecx
  003ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b0	51		 push	 ecx
  003b1	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  003b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003bb	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1862 : 	draw_2d_line (x, y - 0.1500 + 0.0125, x, y - 0.1000 - 0.0125, hud_colour);

  003c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003c5	50		 push	 eax
  003c6	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003cb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  003d3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  003db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003df	51		 push	 ecx
  003e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e5	51		 push	 ecx
  003e6	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  003eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f0	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003f5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  003fd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00405	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00409	51		 push	 ecx
  0040a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040f	51		 push	 ecx
  00410	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00415	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1863 : 	draw_2d_line (x, y - 0.1000 + 0.0125, x, y - 0.0500 - 0.0125, hud_colour);

  0041f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00424	50		 push	 eax
  00425	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0042a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00432	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0043a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043e	51		 push	 ecx
  0043f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00444	51		 push	 ecx
  00445	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0044a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00454	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0045c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00464	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00468	51		 push	 ecx
  00469	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0046e	51		 push	 ecx
  0046f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00474	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00479	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1864 : 	draw_2d_line (x, y - 0.0500 + 0.0125, x, y - 0.0000 - 0.0125, hud_colour);

  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00483	50		 push	 eax
  00484	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00489	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  00491	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00499	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0049d	51		 push	 ecx
  0049e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a3	51		 push	 ecx
  004a4	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  004a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ae	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004b3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  004bb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  004c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004c7	51		 push	 ecx
  004c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004cd	51		 push	 ecx
  004ce	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  004d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1865 : 
; 1866 : 	draw_2d_line (x - 0.1000 + 0.0125, y - 0.2, x - 0.0500 - 0.0125, y - 0.2, hud_colour);

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e2	50		 push	 eax
  004e3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  004e8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  004f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f4	51		 push	 ecx
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  004ff	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00507	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  0050f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00513	51		 push	 ecx
  00514	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00519	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0051e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00526	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0052a	51		 push	 ecx
  0052b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00530	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00535	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0053d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00545	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00549	51		 push	 ecx
  0054a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1867 : 	draw_2d_line (x - 0.0500 + 0.0125, y - 0.2, x - 0.0000 - 0.0125, y - 0.2, hud_colour);

  00554	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00559	50		 push	 eax
  0055a	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0055f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00567	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0056b	51		 push	 ecx
  0056c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00571	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00576	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  0057e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00586	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0058a	51		 push	 ecx
  0058b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00590	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00595	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0059d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a1	51		 push	 ecx
  005a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a7	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005ac	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  005b4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  005bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c0	51		 push	 ecx
  005c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1868 : 
; 1869 : 	draw_2d_line (x + 0.1000 - 0.0125, y - 0.2, x + 0.0500 + 0.0125, y - 0.2, hud_colour);

  005cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005d0	50		 push	 eax
  005d1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005d6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  005de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005e2	51		 push	 ecx
  005e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e8	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  005ed	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  005f5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  005fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00601	51		 push	 ecx
  00602	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00607	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0060c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00614	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00618	51		 push	 ecx
  00619	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00623	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0062b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00633	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00637	51		 push	 ecx
  00638	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0063d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1870 : 	draw_2d_line (x + 0.0500 - 0.0125, y - 0.2, x + 0.0000 + 0.0125, y - 0.2, hud_colour);

  00642	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00647	50		 push	 eax
  00648	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0064d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00655	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00659	51		 push	 ecx
  0065a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065f	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00664	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  0066c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8999999999999a
  00674	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00678	51		 push	 ecx
  00679	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00683	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0068b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0068f	51		 push	 ecx
  00690	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00695	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0069a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  006a2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8999999999999a
  006aa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006ae	51		 push	 ecx
  006af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b4	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1871 : }

  006b9	5f		 pop	 edi
  006ba	5e		 pop	 esi
  006bb	5b		 pop	 ebx
  006bc	8b e5		 mov	 esp, ebp
  006be	5d		 pop	 ebp
  006bf	c2 08 00	 ret	 8
?draw_dashed_i_beam@@YGXMM@Z ENDP			; draw_dashed_i_beam
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_target_marker@@YGXMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?draw_target_marker@@YGXMM@Z PROC			; draw_target_marker, COMDAT

; 1822 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1823 : 	set_2d_pixel (x - 0.100, y, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00015	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001a	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0001f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00027	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002b	51		 push	 ecx
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1824 : 	set_2d_pixel (x - 0.075, y, hud_colour);

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0003b	50		 push	 eax
  0003c	51		 push	 ecx
  0003d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00042	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00047	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0004c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb3333333333333
  00054	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00058	51		 push	 ecx
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1825 : 	set_2d_pixel (x - 0.050, y, hud_colour);

  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00068	50		 push	 eax
  00069	51		 push	 ecx
  0006a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  0006f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00074	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00079	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00081	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00085	51		 push	 ecx
  00086	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008b	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1826 : 	set_2d_pixel (x - 0.025, y, hud_colour);

  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00095	50		 push	 eax
  00096	51		 push	 ecx
  00097	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  0009c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a1	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000a6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  000ae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b2	51		 push	 ecx
  000b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b8	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1827 : 
; 1828 : 	set_2d_pixel (x + 0.025, y, hud_colour);

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000c2	50		 push	 eax
  000c3	51		 push	 ecx
  000c4	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  000c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ce	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  000d3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  000db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000df	51		 push	 ecx
  000e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e5	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1829 : 	set_2d_pixel (x + 0.050, y, hud_colour);

  000ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000ef	50		 push	 eax
  000f0	51		 push	 ecx
  000f1	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  000f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00100	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00108	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010c	51		 push	 ecx
  0010d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00112	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1830 : 	set_2d_pixel (x + 0.075, y, hud_colour);

  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0011c	50		 push	 eax
  0011d	51		 push	 ecx
  0011e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00123	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00128	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0012d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3333333333333
  00135	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00139	51		 push	 ecx
  0013a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013f	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1831 : 	set_2d_pixel (x + 0.100, y, hud_colour);

  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00149	50		 push	 eax
  0014a	51		 push	 ecx
  0014b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y$[ebp]
  00150	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00155	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0015a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00162	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00166	51		 push	 ecx
  00167	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016c	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1832 : 
; 1833 : 	set_2d_pixel (x, y - 0.100, hud_colour);

  00171	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00176	50		 push	 eax
  00177	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0017c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00184	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00188	51		 push	 ecx
  00189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018e	51		 push	 ecx
  0018f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00194	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00199	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1834 : 	set_2d_pixel (x, y - 0.075, hud_colour);

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001a3	50		 push	 eax
  001a4	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001a9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb3333333333333
  001b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001b5	51		 push	 ecx
  001b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bb	51		 push	 ecx
  001bc	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  001c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c6	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1835 : 	set_2d_pixel (x, y - 0.050, hud_colour);

  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001d0	50		 push	 eax
  001d1	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001d6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fa999999999999a
  001de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e2	51		 push	 ecx
  001e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e8	51		 push	 ecx
  001e9	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  001ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f3	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1836 : 	set_2d_pixel (x, y - 0.025, hud_colour);

  001f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001fd	50		 push	 eax
  001fe	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00203	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f9999999999999a
  0020b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020f	51		 push	 ecx
  00210	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00215	51		 push	 ecx
  00216	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0021b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00220	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1837 : 
; 1838 : 	set_2d_pixel (x, y + 0.025, hud_colour);

  00225	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0022a	50		 push	 eax
  0022b	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00230	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f9999999999999a
  00238	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023c	51		 push	 ecx
  0023d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00242	51		 push	 ecx
  00243	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00248	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024d	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1839 : 	set_2d_pixel (x, y + 0.050, hud_colour);

  00252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00257	50		 push	 eax
  00258	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0025d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  00265	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00269	51		 push	 ecx
  0026a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026f	51		 push	 ecx
  00270	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  00275	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027a	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1840 : 	set_2d_pixel (x, y + 0.075, hud_colour);

  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00284	50		 push	 eax
  00285	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0028a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb3333333333333
  00292	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00296	51		 push	 ecx
  00297	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029c	51		 push	 ecx
  0029d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a7	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1841 : 	set_2d_pixel (x, y + 0.100, hud_colour);

  002ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002b1	50		 push	 eax
  002b2	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002b7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c3	51		 push	 ecx
  002c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c9	51		 push	 ecx
  002ca	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  002cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d4	e8 00 00 00 00	 call	 ?set_2d_pixel@@YGXMMUREAL_COLOUR@@@Z ; set_2d_pixel

; 1842 : }

  002d9	5f		 pop	 edi
  002da	5e		 pop	 esi
  002db	5b		 pop	 ebx
  002dc	8b e5		 mov	 esp, ebp
  002de	5d		 pop	 ebp
  002df	c2 08 00	 ret	 8
?draw_target_marker@@YGXMM@Z ENDP			; draw_target_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?display_weapon_information@@YGXXZ
_TEXT	SEGMENT
tv168 = -192						; size = 8
tv169 = -184						; size = 8
tv151 = -184						; size = 4
tv78 = -184						; size = 4
tv144 = -180						; size = 4
tv70 = -180						; size = 4
_weapon_sub_type$ = -112				; size = 4
_flight_time$ = -108					; size = 4
_count$ = -104						; size = 4
_s$ = -100						; size = 100
?display_weapon_information@@YGXXZ PROC			; display_weapon_information, COMDAT

; 1730 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1731 : 	char
; 1732 : 		s[100];
; 1733 : 
; 1734 : 	int
; 1735 : 		count;
; 1736 : 
; 1737 : 	float
; 1738 : 		flight_time;
; 1739 : 
; 1740 : 	entity_sub_types
; 1741 : 		weapon_sub_type;
; 1742 : 
; 1743 : 	weapon_sub_type = get_local_entity_int_value (get_gunship_entity (), INT_TYPE_SELECTED_WEAPON);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	74 0f		 je	 SHORT $LN14@display_we
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00022	eb 24		 jmp	 SHORT $LN15@display_we
$LN14@display_we:
  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA
  0002a	83 c2 0d	 add	 edx, 13			; 0000000dH
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN15@display_we:
  00048	b9 01 00 00 00	 mov	 ecx, 1
  0004d	85 c9		 test	 ecx, ecx
  0004f	74 0c		 je	 SHORT $LN16@display_we
  00051	c7 85 48 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv78[ebp], 184 ; 000000b8H
  0005b	eb 24		 jmp	 SHORT $LN17@display_we
$LN16@display_we:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_weapon_information@@YGXXZ@4JA
  00063	83 c2 0d	 add	 edx, 13			; 0000000dH
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN17@display_we:
  00081	68 b8 00 00 00	 push	 184			; 000000b8H
  00086	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008c	51		 push	 ecx
  0008d	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv70[ebp], 1116
  00097	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0009d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a4	ff d1		 call	 ecx
  000a6	89 45 90	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1744 : 
; 1745 : 	if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  000a9	83 7d 90 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  000ad	0f 84 eb 02 00
	00		 je	 $LN9@display_we

; 1746 : 	{
; 1747 : 		set_mono_font_type (MONO_FONT_TYPE_6X7);

  000b3	6a 03		 push	 3
  000b5	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1748 : 
; 1749 : 		//
; 1750 : 		// selected weapon
; 1751 : 		//
; 1752 : 
; 1753 : 		count = get_local_entity_weapon_count (get_gunship_entity (), weapon_sub_type);

  000ba	8b 45 90	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  000bd	50		 push	 eax
  000be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c4	51		 push	 ecx
  000c5	e8 00 00 00 00	 call	 ?get_local_entity_weapon_count@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_count
  000ca	89 45 98	 mov	 DWORD PTR _count$[ebp], eax

; 1754 : 
; 1755 : 		sprintf (s, "%s %d", weapon_database[weapon_sub_type].hud_name, count);

  000cd	8b 45 98	 mov	 eax, DWORD PTR _count$[ebp]
  000d0	50		 push	 eax
  000d1	69 4d 90 e0 00
	00 00		 imul	 ecx, DWORD PTR _weapon_sub_type$[ebp], 224
  000d8	8b 91 04 00 00
	00		 mov	 edx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+4]
  000de	52		 push	 edx
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_05DIALNFFA@?$CFs?5?$CFd@
  000e4	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 _sprintf
  000ed	83 c4 10	 add	 esp, 16			; 00000010H

; 1756 : 
; 1757 : 		set_2d_mono_font_position (0.35, -0.7);

  000f0	51		 push	 ecx
  000f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf333333
  000f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fe	51		 push	 ecx
  000ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eb33333
  00107	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010c	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1758 : 
; 1759 : 		set_mono_font_rel_position (1.0, 0.0);

  00111	51		 push	 ecx
  00112	0f 57 c0	 xorps	 xmm0, xmm0
  00115	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011a	51		 push	 ecx
  0011b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00123	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00128	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1760 : 
; 1761 : 		print_mono_font_string (s);

  0012d	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1762 : 
; 1763 : 		//
; 1764 : 		// weapon specific
; 1765 : 		//
; 1766 : 
; 1767 : 		if ((weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_AGM114L_LONGBOW_HELLFIRE) || (weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_AGM114K_HELLFIRE_II))

  00136	83 7d 90 2d	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 45 ; 0000002dH
  0013a	74 0a		 je	 SHORT $LN5@display_we
  0013c	83 7d 90 2e	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 46 ; 0000002eH
  00140	0f 85 d0 01 00
	00		 jne	 $LN3@display_we
$LN5@display_we:

; 1768 : 		{
; 1769 : 			set_2d_mono_font_position (0.35, -0.8);

  00146	51		 push	 ecx
  00147	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  0014f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00154	51		 push	 ecx
  00155	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eb33333
  0015d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00162	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1770 : 
; 1771 : 			set_mono_font_rel_position (1.0, 0.0);

  00167	51		 push	 ecx
  00168	0f 57 c0	 xorps	 xmm0, xmm0
  0016b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00170	51		 push	 ecx
  00171	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00179	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017e	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1772 : 
; 1773 : 			if (!get_local_entity_int_value (get_gunship_entity (), INT_TYPE_LOCK_ON_AFTER_LAUNCH))

  00183	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0018a	74 0f		 je	 SHORT $LN18@display_we
  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00191	8b 08		 mov	 ecx, DWORD PTR [eax]
  00193	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv144[ebp], ecx
  00199	eb 20		 jmp	 SHORT $LN19@display_we
$LN18@display_we:
  0019b	68 ed 06 00 00	 push	 1773			; 000006edH
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ab	52		 push	 edx
  001ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b1	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN19@display_we:
  001bb	b8 01 00 00 00	 mov	 eax, 1
  001c0	85 c0		 test	 eax, eax
  001c2	74 0c		 je	 SHORT $LN20@display_we
  001c4	c7 85 48 ff ff
	ff 7e 00 00 00	 mov	 DWORD PTR tv151[ebp], 126 ; 0000007eH
  001ce	eb 20		 jmp	 SHORT $LN21@display_we
$LN20@display_we:
  001d0	68 ed 06 00 00	 push	 1773			; 000006edH
  001d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  001da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001e0	51		 push	 ecx
  001e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e6	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv151[ebp], 0
$LN21@display_we:
  001f0	6a 7e		 push	 126			; 0000007eH
  001f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001f8	52		 push	 edx
  001f9	69 85 4c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv144[ebp], 1116
  00203	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv151[ebp]
  00209	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00210	ff d2		 call	 edx
  00212	85 c0		 test	 eax, eax
  00214	75 0c		 jne	 SHORT $LN6@display_we

; 1774 : 			{
; 1775 : 				print_mono_font_string ("LOBL");

  00216	68 00 00 00 00	 push	 OFFSET ??_C@_04EIHLKMGG@LOBL@
  0021b	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1776 : 			}
; 1777 : 			else

  00220	eb 0a		 jmp	 SHORT $LN7@display_we
$LN6@display_we:

; 1778 : 			{
; 1779 : 				print_mono_font_string ("LOAL-HI");

  00222	68 00 00 00 00	 push	 OFFSET ??_C@_07CMBMBPC@LOAL?9HI@
  00227	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN7@display_we:

; 1780 : 			}
; 1781 : 
; 1782 : 			flight_time = get_missile_flight_time ();

  0022c	e8 00 00 00 00	 call	 ?get_missile_flight_time@@YGMXZ ; get_missile_flight_time
  00231	d9 5d 94	 fstp	 DWORD PTR _flight_time$[ebp]

; 1783 : 
; 1784 : 			if (flight_time > 0.01)

  00234	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  00239	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00241	0f 86 ca 00 00
	00		 jbe	 $LN8@display_we

; 1785 : 			{
; 1786 : 				flight_time = bound (flight_time, 0.0, 99.9);

  00247	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  0024c	0f 57 c9	 xorps	 xmm1, xmm1
  0024f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00253	76 0d		 jbe	 SHORT $LN24@display_we
  00255	0f 57 c0	 xorps	 xmm0, xmm0
  00258	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv169[ebp], xmm0
  00260	eb 3e		 jmp	 SHORT $LN25@display_we
$LN24@display_we:
  00262	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  00267	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4058f9999999999a
  0026f	76 12		 jbe	 SHORT $LN22@display_we
  00271	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4058f9999999999a
  00279	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR tv168[ebp], xmm0
  00281	eb 0d		 jmp	 SHORT $LN23@display_we
$LN22@display_we:
  00283	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  00288	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR tv168[ebp], xmm0
$LN23@display_we:
  00290	f2 0f 10 85 40
	ff ff ff	 movsd	 xmm0, QWORD PTR tv168[ebp]
  00298	f2 0f 11 85 48
	ff ff ff	 movsd	 QWORD PTR tv169[ebp], xmm0
$LN25@display_we:
  002a0	f2 0f 5a 85 48
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv169[ebp]
  002a8	f3 0f 11 45 94	 movss	 DWORD PTR _flight_time$[ebp], xmm0

; 1787 : 
; 1788 : 				sprintf (s, "TOF:%.0f", flight_time);

  002ad	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _flight_time$[ebp]
  002b2	83 ec 08	 sub	 esp, 8
  002b5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_08BKMPBOCK@TOF?3?$CF?40f@
  002bf	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  002c2	50		 push	 eax
  002c3	e8 00 00 00 00	 call	 _sprintf
  002c8	83 c4 10	 add	 esp, 16			; 00000010H

; 1789 : 
; 1790 : 				set_2d_mono_font_position (0.5, -0.6);

  002cb	51		 push	 ecx
  002cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  002d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d9	51		 push	 ecx
  002da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e7	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1791 : 
; 1792 : 				set_mono_font_rel_position (0.8, 0.0);

  002ec	51		 push	 ecx
  002ed	0f 57 c0	 xorps	 xmm0, xmm0
  002f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f5	51		 push	 ecx
  002f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  002fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00303	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1793 : 
; 1794 : 				print_mono_font_string (s);

  00308	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  0030b	50		 push	 eax
  0030c	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN8@display_we:

; 1795 : 			}
; 1796 : 		}

  00311	e9 88 00 00 00	 jmp	 $LN9@display_we
$LN3@display_we:

; 1797 : 		else if ((weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255) || (weapon_sub_type == ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261))

  00316	83 7d 90 1e	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 30 ; 0000001eH
  0031a	74 06		 je	 SHORT $LN10@display_we
  0031c	83 7d 90 1f	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 31 ; 0000001fH
  00320	75 7c		 jne	 SHORT $LN9@display_we
$LN10@display_we:

; 1798 : 		{
; 1799 : 			if (rocket_salvo_size == ROCKET_SALVO_SIZE_ALL)

  00322	81 3d 00 00 00
	00 e8 03 00 00	 cmp	 DWORD PTR ?rocket_salvo_size@@3HA, 1000 ; rocket_salvo_size, 000003e8H
  0032c	75 13		 jne	 SHORT $LN11@display_we

; 1800 : 			{
; 1801 : 				sprintf (s, "Salvo:ALL");

  0032e	68 00 00 00 00	 push	 OFFSET ??_C@_09BJGFDJJN@Salvo?3ALL@
  00333	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  00336	50		 push	 eax
  00337	e8 00 00 00 00	 call	 _sprintf
  0033c	83 c4 08	 add	 esp, 8

; 1802 : 			}
; 1803 : 			else

  0033f	eb 17		 jmp	 SHORT $LN12@display_we
$LN11@display_we:

; 1804 : 			{
; 1805 : 				sprintf (s, "Salvo:%d", rocket_salvo_size);

  00341	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rocket_salvo_size@@3HA ; rocket_salvo_size
  00346	50		 push	 eax
  00347	68 00 00 00 00	 push	 OFFSET ??_C@_08GEOGCMHL@Salvo?3?$CFd@
  0034c	8d 4d 9c	 lea	 ecx, DWORD PTR _s$[ebp]
  0034f	51		 push	 ecx
  00350	e8 00 00 00 00	 call	 _sprintf
  00355	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@display_we:

; 1806 : 			}
; 1807 : 
; 1808 : 			set_2d_mono_font_position (0.35, -0.8);

  00358	51		 push	 ecx
  00359	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  00361	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00366	51		 push	 ecx
  00367	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eb33333
  0036f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00374	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1809 : 
; 1810 : 			set_mono_font_rel_position (1.0, 0.0);

  00379	51		 push	 ecx
  0037a	0f 57 c0	 xorps	 xmm0, xmm0
  0037d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00382	51		 push	 ecx
  00383	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0038b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00390	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1811 : 
; 1812 : 			print_mono_font_string (s);

  00395	8d 45 9c	 lea	 eax, DWORD PTR _s$[ebp]
  00398	50		 push	 eax
  00399	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN9@display_we:

; 1813 : 		}
; 1814 : 	}
; 1815 : }

  0039e	5f		 pop	 edi
  0039f	5e		 pop	 esi
  003a0	5b		 pop	 ebx
  003a1	8b e5		 mov	 esp, ebp
  003a3	5d		 pop	 ebp
  003a4	c3		 ret	 0
?display_weapon_information@@YGXXZ ENDP			; display_weapon_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?display_waypoint_information@@YGXXZ
_TEXT	SEGMENT
tv213 = -200						; size = 4
tv184 = -200						; size = 4
tv148 = -200						; size = 4
tv82 = -200						; size = 4
tv205 = -196						; size = 4
tv176 = -196						; size = 4
tv140 = -196						; size = 4
tv74 = -196						; size = 4
_seconds$1 = -128					; size = 4
_minutes$2 = -124					; size = 4
_hours$3 = -120						; size = 4
_time_to_go$4 = -116					; size = 4
_f$5 = -112						; size = 4
_i$6 = -108						; size = 4
_waypoint_range$ = -104					; size = 4
_waypoint_position$ = -100				; size = 12
_gunship_position$ = -88				; size = 4
_wp$ = -84						; size = 4
_buffer$ = -80						; size = 80
?display_waypoint_information@@YGXXZ PROC		; display_waypoint_information, COMDAT

; 1624 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1625 : 	char
; 1626 : 		buffer[80];
; 1627 : 
; 1628 : 	entity
; 1629 : 		*wp;
; 1630 : 
; 1631 : 	vec3d
; 1632 : 		*gunship_position,
; 1633 : 		waypoint_position;
; 1634 : 
; 1635 : 	float
; 1636 : 		waypoint_range;
; 1637 : 
; 1638 : 	wp = get_local_entity_current_waypoint (get_gunship_entity ());

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_current_waypoint
  00017	89 45 ac	 mov	 DWORD PTR _wp$[ebp], eax

; 1639 : 
; 1640 : 	if (wp)

  0001a	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0001e	0f 84 77 04 00
	00		 je	 $LN2@display_wa

; 1641 : 	{
; 1642 : 		set_mono_font_type (MONO_FONT_TYPE_6X10);

  00024	6a 04		 push	 4
  00026	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1643 : 
; 1644 : 		gunship_position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  0002b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00032	74 0f		 je	 SHORT $LN12@display_wa
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  00041	eb 24		 jmp	 SHORT $LN13@display_wa
$LN12@display_wa:
  00043	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00049	83 c2 14	 add	 edx, 20			; 00000014H
  0004c	52		 push	 edx
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005d	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN13@display_wa:
  00067	b9 01 00 00 00	 mov	 ecx, 1
  0006c	85 c9		 test	 ecx, ecx
  0006e	74 0c		 je	 SHORT $LN14@display_wa
  00070	c7 85 38 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv82[ebp], 8
  0007a	eb 24		 jmp	 SHORT $LN15@display_wa
$LN14@display_wa:
  0007c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00082	83 c2 14	 add	 edx, 20			; 00000014H
  00085	52		 push	 edx
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00096	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN15@display_wa:
  000a0	6a 08		 push	 8
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000a8	51		 push	 ecx
  000a9	6b 95 3c ff ff
	ff 60		 imul	 edx, DWORD PTR tv74[ebp], 96
  000b0	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv82[ebp]
  000b6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000bd	ff d1		 call	 ecx
  000bf	89 45 a8	 mov	 DWORD PTR _gunship_position$[ebp], eax

; 1645 : 
; 1646 : 		get_waypoint_display_position (get_gunship_entity (), wp, &waypoint_position);

  000c2	8d 45 9c	 lea	 eax, DWORD PTR _waypoint_position$[ebp]
  000c5	50		 push	 eax
  000c6	8b 4d ac	 mov	 ecx, DWORD PTR _wp$[ebp]
  000c9	51		 push	 ecx
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000d0	52		 push	 edx
  000d1	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 1647 : 
; 1648 : 		//
; 1649 : 		// waypoint id & range
; 1650 : 		//
; 1651 : 
; 1652 : 		waypoint_range = get_2d_range (gunship_position, &waypoint_position);

  000d6	8d 45 9c	 lea	 eax, DWORD PTR _waypoint_position$[ebp]
  000d9	50		 push	 eax
  000da	8b 4d a8	 mov	 ecx, DWORD PTR _gunship_position$[ebp]
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  000e3	d9 5d 98	 fstp	 DWORD PTR _waypoint_range$[ebp]

; 1653 : 
; 1654 : 		if (!ah64a_damage.navigation_computer)

  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ah64a_damage@@3TAH64A_DAMAGE_FLAGS@@A ; ah64a_damage
  000eb	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  000ee	83 e0 01	 and	 eax, 1
  000f1	0f 85 7a 02 00
	00		 jne	 $LN3@display_wa

; 1655 : 		{
; 1656 : 			if (waypoint_range < 1000.0)

  000f7	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _waypoint_range$[ebp]
  000fc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@408f400000000000
  00104	66 0f 2f c8	 comisd	 xmm1, xmm0
  00108	0f 86 ae 00 00
	00		 jbe	 $LN5@display_wa

; 1657 : 			{
; 1658 : 				sprintf (buffer, "%c:%dm", get_local_entity_char_value (wp, CHAR_TYPE_TAG), (int) waypoint_range);

  0010e	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00112	74 0d		 je	 SHORT $LN16@display_wa
  00114	8b 45 ac	 mov	 eax, DWORD PTR _wp$[ebp]
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv140[ebp], ecx
  0011f	eb 24		 jmp	 SHORT $LN17@display_wa
$LN16@display_wa:
  00121	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00127	83 c2 22	 add	 edx, 34			; 00000022H
  0012a	52		 push	 edx
  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00130	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013b	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN17@display_wa:
  00145	b9 01 00 00 00	 mov	 ecx, 1
  0014a	85 c9		 test	 ecx, ecx
  0014c	74 0c		 je	 SHORT $LN18@display_wa
  0014e	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
  00158	eb 24		 jmp	 SHORT $LN19@display_wa
$LN18@display_wa:
  0015a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00160	83 c2 22	 add	 edx, 34			; 00000022H
  00163	52		 push	 edx
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00169	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00174	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
$LN19@display_wa:
  0017e	f3 0f 2c 4d 98	 cvttss2si ecx, DWORD PTR _waypoint_range$[ebp]
  00183	51		 push	 ecx
  00184	6a 00		 push	 0
  00186	8b 55 ac	 mov	 edx, DWORD PTR _wp$[ebp]
  00189	52		 push	 edx
  0018a	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv148[ebp]
  00190	c1 e0 02	 shl	 eax, 2
  00193	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv140[ebp]
  00199	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[eax+ecx*8]
  001a0	ff d2		 call	 edx
  001a2	0f b6 c0	 movzx	 eax, al
  001a5	50		 push	 eax
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_06JCIGMCHD@?$CFc?3?$CFdm@
  001ab	8d 4d b0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  001ae	51		 push	 ecx
  001af	e8 00 00 00 00	 call	 _sprintf
  001b4	83 c4 10	 add	 esp, 16			; 00000010H
  001b7	e9 b3 01 00 00	 jmp	 $LN8@display_wa
$LN5@display_wa:

; 1659 : 			}
; 1660 : 			else if (waypoint_range < 100000.0)

  001bc	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _waypoint_range$[ebp]
  001c1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40f86a0000000000
  001c9	66 0f 2f c8	 comisd	 xmm1, xmm0
  001cd	0f 86 e7 00 00
	00		 jbe	 $LN7@display_wa

; 1661 : 			{
; 1662 : 				int
; 1663 : 					i;
; 1664 : 
; 1665 : 				float
; 1666 : 					f;
; 1667 : 
; 1668 : 				//
; 1669 : 				// this is required to prevent rounding errors around the 100Km mark
; 1670 : 				//
; 1671 : 
; 1672 : 				i = (int) waypoint_range * (1.0 / 100.0);

  001d3	f3 0f 2c 45 98	 cvttss2si eax, DWORD PTR _waypoint_range$[ebp]
  001d8	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  001dc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  001e4	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  001e8	89 4d 94	 mov	 DWORD PTR _i$6[ebp], ecx

; 1673 : 
; 1674 : 				f = (float) i * (1.0 / 10.0);

  001eb	f3 0f 2a 45 94	 cvtsi2ss xmm0, DWORD PTR _i$6[ebp]
  001f0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001f4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  001fc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00200	f3 0f 11 45 90	 movss	 DWORD PTR _f$5[ebp], xmm0

; 1675 : 
; 1676 : 				sprintf (buffer, "%c:%.1fKm", get_local_entity_char_value (wp, CHAR_TYPE_TAG), f);

  00205	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00209	74 0d		 je	 SHORT $LN20@display_wa
  0020b	8b 45 ac	 mov	 eax, DWORD PTR _wp$[ebp]
  0020e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00210	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv176[ebp], ecx
  00216	eb 24		 jmp	 SHORT $LN21@display_wa
$LN20@display_wa:
  00218	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  0021e	83 c2 34	 add	 edx, 52			; 00000034H
  00221	52		 push	 edx
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00227	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0022c	50		 push	 eax
  0022d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00232	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv176[ebp], 0
$LN21@display_wa:
  0023c	b9 01 00 00 00	 mov	 ecx, 1
  00241	85 c9		 test	 ecx, ecx
  00243	74 0c		 je	 SHORT $LN22@display_wa
  00245	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv184[ebp], 0
  0024f	eb 24		 jmp	 SHORT $LN23@display_wa
$LN22@display_wa:
  00251	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  00257	83 c2 34	 add	 edx, 52			; 00000034H
  0025a	52		 push	 edx
  0025b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0026b	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv184[ebp], 0
$LN23@display_wa:
  00275	f3 0f 5a 45 90	 cvtss2sd xmm0, DWORD PTR _f$5[ebp]
  0027a	83 ec 08	 sub	 esp, 8
  0027d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00282	6a 00		 push	 0
  00284	8b 4d ac	 mov	 ecx, DWORD PTR _wp$[ebp]
  00287	51		 push	 ecx
  00288	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR tv184[ebp]
  0028e	c1 e2 02	 shl	 edx, 2
  00291	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv176[ebp]
  00297	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[edx+eax*8]
  0029e	ff d1		 call	 ecx
  002a0	0f b6 d0	 movzx	 edx, al
  002a3	52		 push	 edx
  002a4	68 00 00 00 00	 push	 OFFSET ??_C@_09EKFBJBJG@?$CFc?3?$CF?41fKm@
  002a9	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 _sprintf
  002b2	83 c4 14	 add	 esp, 20			; 00000014H

; 1677 : 			}
; 1678 : 			else

  002b5	e9 b5 00 00 00	 jmp	 $LN8@display_wa
$LN7@display_wa:

; 1679 : 			{
; 1680 : 				sprintf (buffer, "%c:%dKm", get_local_entity_char_value (wp, CHAR_TYPE_TAG), (int) (waypoint_range * (1.0 / 1000.0)));

  002ba	83 7d ac 00	 cmp	 DWORD PTR _wp$[ebp], 0
  002be	74 0d		 je	 SHORT $LN24@display_wa
  002c0	8b 45 ac	 mov	 eax, DWORD PTR _wp$[ebp]
  002c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c5	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv205[ebp], ecx
  002cb	eb 24		 jmp	 SHORT $LN25@display_wa
$LN24@display_wa:
  002cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  002d3	83 c2 38	 add	 edx, 56			; 00000038H
  002d6	52		 push	 edx
  002d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  002dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e7	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv205[ebp], 0
$LN25@display_wa:
  002f1	b9 01 00 00 00	 mov	 ecx, 1
  002f6	85 c9		 test	 ecx, ecx
  002f8	74 0c		 je	 SHORT $LN26@display_wa
  002fa	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv213[ebp], 0
  00304	eb 24		 jmp	 SHORT $LN27@display_wa
$LN26@display_wa:
  00306	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??display_waypoint_information@@YGXXZ@4JA
  0030c	83 c2 38	 add	 edx, 56			; 00000038H
  0030f	52		 push	 edx
  00310	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00315	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  0031a	50		 push	 eax
  0031b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00320	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv213[ebp], 0
$LN27@display_wa:
  0032a	f3 0f 5a 45 98	 cvtss2sd xmm0, DWORD PTR _waypoint_range$[ebp]
  0032f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00337	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  0033b	51		 push	 ecx
  0033c	6a 00		 push	 0
  0033e	8b 55 ac	 mov	 edx, DWORD PTR _wp$[ebp]
  00341	52		 push	 edx
  00342	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv213[ebp]
  00348	c1 e0 02	 shl	 eax, 2
  0034b	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv205[ebp]
  00351	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[eax+ecx*8]
  00358	ff d2		 call	 edx
  0035a	0f b6 c0	 movzx	 eax, al
  0035d	50		 push	 eax
  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_07CFANIJPM@?$CFc?3?$CFdKm@
  00363	8d 4d b0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  00366	51		 push	 ecx
  00367	e8 00 00 00 00	 call	 _sprintf
  0036c	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@display_wa:

; 1681 : 			}
; 1682 : 		}
; 1683 : 		else

  0036f	eb 11		 jmp	 SHORT $LN4@display_wa
$LN3@display_wa:

; 1684 : 		{
; 1685 : 			sprintf (buffer, "-:--.-");

  00371	68 00 00 00 00	 push	 OFFSET ??_C@_06BAOIPBEF@?9?3?9?9?4?9@
  00376	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00379	50		 push	 eax
  0037a	e8 00 00 00 00	 call	 _sprintf
  0037f	83 c4 08	 add	 esp, 8
$LN4@display_wa:

; 1686 : 		}
; 1687 : 
; 1688 : 		set_2d_mono_font_position (-1.0, -0.4);

  00382	51		 push	 ecx
  00383	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  0038b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00390	51		 push	 ecx
  00391	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00399	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039e	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1689 : 
; 1690 : 		set_mono_font_rel_position (1.0, 0.0);

  003a3	51		 push	 ecx
  003a4	0f 57 c0	 xorps	 xmm0, xmm0
  003a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ac	51		 push	 ecx
  003ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ba	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1691 : 
; 1692 : 		print_mono_font_string (buffer);

  003bf	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  003c2	50		 push	 eax
  003c3	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1693 : 
; 1694 : 		//
; 1695 : 		// time to go
; 1696 : 		//
; 1697 : 
; 1698 : 		if ((current_flight_dynamics->velocity_z.value > 0.1) && (!ah64a_damage.navigation_computer))

  003c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003cd	f3 0f 5a 80 9c
	20 00 00	 cvtss2sd xmm0, DWORD PTR [eax+8348]
  003d5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  003dd	76 65		 jbe	 SHORT $LN9@display_wa
  003df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ah64a_damage@@3TAH64A_DAMAGE_FLAGS@@A ; ah64a_damage
  003e4	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  003e7	83 e0 01	 and	 eax, 1
  003ea	75 58		 jne	 SHORT $LN9@display_wa

; 1699 : 		{
; 1700 : 			float
; 1701 : 				time_to_go,
; 1702 : 				hours,
; 1703 : 				minutes,
; 1704 : 				seconds;
; 1705 : 
; 1706 : 			time_to_go = waypoint_range / current_flight_dynamics->velocity_z.value;

  003ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003f1	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _waypoint_range$[ebp]
  003f6	f3 0f 5e 80 9c
	20 00 00	 divss	 xmm0, DWORD PTR [eax+8348]
  003fe	f3 0f 11 45 8c	 movss	 DWORD PTR _time_to_go$4[ebp], xmm0

; 1707 : 
; 1708 : 			get_digital_clock_values (time_to_go, &hours, &minutes, &seconds);

  00403	8d 45 80	 lea	 eax, DWORD PTR _seconds$1[ebp]
  00406	50		 push	 eax
  00407	8d 4d 84	 lea	 ecx, DWORD PTR _minutes$2[ebp]
  0040a	51		 push	 ecx
  0040b	8d 55 88	 lea	 edx, DWORD PTR _hours$3[ebp]
  0040e	52		 push	 edx
  0040f	51		 push	 ecx
  00410	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _time_to_go$4[ebp]
  00415	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041a	e8 00 00 00 00	 call	 ?get_digital_clock_values@@YGXMPAM00@Z ; get_digital_clock_values

; 1709 : 
; 1710 : 			sprintf (buffer, "%02d:%02d:%02d", (int) hours, (int) minutes, (int) seconds);

  0041f	f3 0f 2c 45 80	 cvttss2si eax, DWORD PTR _seconds$1[ebp]
  00424	50		 push	 eax
  00425	f3 0f 2c 4d 84	 cvttss2si ecx, DWORD PTR _minutes$2[ebp]
  0042a	51		 push	 ecx
  0042b	f3 0f 2c 55 88	 cvttss2si edx, DWORD PTR _hours$3[ebp]
  00430	52		 push	 edx
  00431	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d@
  00436	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 _sprintf
  0043f	83 c4 14	 add	 esp, 20			; 00000014H

; 1711 : 		}
; 1712 : 		else

  00442	eb 11		 jmp	 SHORT $LN10@display_wa
$LN9@display_wa:

; 1713 : 		{
; 1714 : 			strcpy (buffer, "--:--:--");

  00444	68 00 00 00 00	 push	 OFFSET ??_C@_08JGCGJPK@?9?9?3?9?9?3?9?9@
  00449	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  0044c	50		 push	 eax
  0044d	e8 00 00 00 00	 call	 _strcpy
  00452	83 c4 08	 add	 esp, 8
$LN10@display_wa:

; 1715 : 		}
; 1716 : 
; 1717 : 		set_2d_mono_font_position (-1.0, -0.5);

  00455	51		 push	 ecx
  00456	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  0045e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00463	51		 push	 ecx
  00464	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0046c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00471	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1718 : 
; 1719 : 		set_mono_font_rel_position (1.0, 0.0);

  00476	51		 push	 ecx
  00477	0f 57 c0	 xorps	 xmm0, xmm0
  0047a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047f	51		 push	 ecx
  00480	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00488	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048d	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1720 : 
; 1721 : 		print_mono_font_string (buffer);

  00492	8d 45 b0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00495	50		 push	 eax
  00496	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN2@display_wa:

; 1722 : 	}
; 1723 : }

  0049b	5f		 pop	 edi
  0049c	5e		 pop	 esi
  0049d	5b		 pop	 ebx
  0049e	8b e5		 mov	 esp, ebp
  004a0	5d		 pop	 ebp
  004a1	c3		 ret	 0
?display_waypoint_information@@YGXXZ ENDP		; display_waypoint_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?display_engine_torque@@YGXXZ
_TEXT	SEGMENT
_width$ = -44						; size = 4
_y_max$ = -40						; size = 4
_x_max$ = -36						; size = 4
_y_min$ = -32						; size = 4
_x_min$ = -28						; size = 4
_torque$ = -24						; size = 4
_s$ = -20						; size = 20
?display_engine_torque@@YGXXZ PROC			; display_engine_torque, COMDAT

; 1568 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1569 : 	char
; 1570 : 		s[20];
; 1571 : 
; 1572 : 	int
; 1573 : 		torque;
; 1574 : 
; 1575 : 	float
; 1576 : 		x_min,
; 1577 : 		y_min,
; 1578 : 		x_max,
; 1579 : 		y_max,
; 1580 : 		width;
; 1581 : 
; 1582 : 	torque = (int) current_flight_dynamics->combined_engine_torque.value;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0000e	f3 0f 2c 88 8c
	24 00 00	 cvttss2si ecx, DWORD PTR [eax+9356]
  00016	89 4d e8	 mov	 DWORD PTR _torque$[ebp], ecx

; 1583 : 
; 1584 : 	sprintf (s, "%d%%", torque);

  00019	8b 45 e8	 mov	 eax, DWORD PTR _torque$[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04FCMNJMCO@?$CFd?$CF?$CF@
  00022	8d 4d ec	 lea	 ecx, DWORD PTR _s$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _sprintf
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1585 : 
; 1586 : 	set_mono_font_type (MONO_FONT_TYPE_7X12);

  0002e	6a 05		 push	 5
  00030	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1587 : 
; 1588 : 	set_2d_mono_font_position (-1.0, 0.7);

  00035	51		 push	 ecx
  00036	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f333333
  0003e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00043	51		 push	 ecx
  00044	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1589 : 
; 1590 : 	if (torque < 98)

  00056	83 7d e8 62	 cmp	 DWORD PTR _torque$[ebp], 98 ; 00000062H
  0005a	7d 2f		 jge	 SHORT $LN2@display_en

; 1591 : 	{
; 1592 : 		set_mono_font_rel_position (1.0, -4.0);

  0005c	51		 push	 ecx
  0005d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0800000
  00065	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006a	51		 push	 ecx
  0006b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00073	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00078	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1593 : 
; 1594 : 		print_mono_font_string (s);

  0007d	8d 45 ec	 lea	 eax, DWORD PTR _s$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1595 : 	}
; 1596 : 	else

  00086	e9 80 01 00 00	 jmp	 $LN3@display_en
$LN2@display_en:

; 1597 : 	{
; 1598 : 		set_mono_font_rel_position (2.0, -4.0);

  0008b	51		 push	 ecx
  0008c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0800000
  00094	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00099	51		 push	 ecx
  0009a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  000a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a7	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1599 : 
; 1600 : 		get_mono_font_position (&x_min, &y_min);

  000ac	8d 45 e0	 lea	 eax, DWORD PTR _y_min$[ebp]
  000af	50		 push	 eax
  000b0	8d 4d e4	 lea	 ecx, DWORD PTR _x_min$[ebp]
  000b3	51		 push	 ecx
  000b4	e8 00 00 00 00	 call	 ?get_mono_font_position@@YGXPAM0@Z ; get_mono_font_position

; 1601 : 
; 1602 : 		print_mono_font_string (s);

  000b9	8d 45 ec	 lea	 eax, DWORD PTR _s$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1603 : 
; 1604 : 		width = get_mono_font_string_width (s);

  000c2	8d 45 ec	 lea	 eax, DWORD PTR _s$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  000cb	d9 5d d4	 fstp	 DWORD PTR _width$[ebp]

; 1605 : 
; 1606 : 		x_min -= 2.0;

  000ce	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _x_min$[ebp]
  000d3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4000000000000000
  000db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000df	f3 0f 11 45 e4	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 1607 : 		y_min -= 2.0;

  000e4	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _y_min$[ebp]
  000e9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4000000000000000
  000f1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f5	f3 0f 11 45 e0	 movss	 DWORD PTR _y_min$[ebp], xmm0

; 1608 : 
; 1609 : 		x_max = x_min + width + 3.0;

  000fa	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  000ff	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _width$[ebp]
  00104	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00108	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4008000000000000
  00110	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00114	f3 0f 11 45 dc	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 1610 : 		y_max = y_min + 12.0;

  00119	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _y_min$[ebp]
  0011e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4028000000000000
  00126	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0012a	f3 0f 11 45 d8	 movss	 DWORD PTR _y_max$[ebp], xmm0

; 1611 : 
; 1612 : 		draw_line (x_min, y_min, x_max, y_min, hud_colour);

  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00134	50		 push	 eax
  00135	51		 push	 ecx
  00136	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  0013b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00140	51		 push	 ecx
  00141	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00146	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014b	51		 push	 ecx
  0014c	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  00151	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00156	51		 push	 ecx
  00157	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  0015c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00161	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1613 : 		draw_line (x_max, y_min, x_max, y_max, hud_colour);

  00166	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0016b	50		 push	 eax
  0016c	51		 push	 ecx
  0016d	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  00172	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00177	51		 push	 ecx
  00178	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  0017d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00182	51		 push	 ecx
  00183	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  00188	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018d	51		 push	 ecx
  0018e	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00193	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00198	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1614 : 		draw_line (x_max, y_max, x_min, y_max, hud_colour);

  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001a2	50		 push	 eax
  001a3	51		 push	 ecx
  001a4	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  001a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ae	51		 push	 ecx
  001af	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  001b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b9	51		 push	 ecx
  001ba	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  001bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c4	51		 push	 ecx
  001c5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  001ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cf	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1615 : 		draw_line (x_min, y_max, x_min, y_min, hud_colour);

  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001d9	50		 push	 eax
  001da	51		 push	 ecx
  001db	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  001e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e5	51		 push	 ecx
  001e6	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  001eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f0	51		 push	 ecx
  001f1	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  001f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fb	51		 push	 ecx
  001fc	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  00201	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00206	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN3@display_en:

; 1616 : 	}
; 1617 : }

  0020b	5f		 pop	 edi
  0020c	5e		 pop	 esi
  0020d	5b		 pop	 ebx
  0020e	8b e5		 mov	 esp, ebp
  00210	5d		 pop	 ebp
  00211	c3		 ret	 0
?display_engine_torque@@YGXXZ ENDP			; display_engine_torque
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_rate_of_climb_scale@@YGXXZ
_TEXT	SEGMENT
tv315 = -128						; size = 8
tv316 = -120						; size = 8
_s$ = -48						; size = 20
_width$ = -28						; size = 4
_y2$ = -24						; size = 4
_y1$ = -20						; size = 4
_y$ = -16						; size = 4
_x$ = -12						; size = 4
_rate_of_climb$ = -8					; size = 4
_radar_altitude$ = -4					; size = 4
?draw_rate_of_climb_scale@@YGXXZ PROC			; draw_rate_of_climb_scale, COMDAT

; 1447 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1448 : 	float
; 1449 : 		radar_altitude,
; 1450 : 		rate_of_climb,
; 1451 : 		x,
; 1452 : 		y,
; 1453 : 		y1,
; 1454 : 		y2,
; 1455 : 		width;
; 1456 : 
; 1457 : 	char
; 1458 : 		s[20];
; 1459 : 
; 1460 : 	//
; 1461 : 	// draw scale
; 1462 : 	//
; 1463 : 
; 1464 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X1, CLIMB_SCALE_FSD * +1.0, CLIMB_SCALE_MAJOR_TICK_X2, CLIMB_SCALE_FSD * +1.0, hud_colour);

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0001b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00020	51		 push	 ecx
  00021	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f651eb8
  00029	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002e	51		 push	 ecx
  0002f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	51		 push	 ecx
  0003d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  00045	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1465 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X3, CLIMB_SCALE_FSD * +1.0, CLIMB_SCALE_MAJOR_TICK_X4, CLIMB_SCALE_FSD * +1.0, hud_colour);

  0004f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0005e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00063	51		 push	 ecx
  00064	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7eb852
  0006c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00071	51		 push	 ecx
  00072	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0007a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007f	51		 push	 ecx
  00080	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f733333
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1466 : 
; 1467 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X1, CLIMB_SCALE_FSD * +0.5, CLIMB_SCALE_MAJOR_TICK_X2, CLIMB_SCALE_FSD * +0.5, hud_colour);

  00092	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00097	50		 push	 eax
  00098	51		 push	 ecx
  00099	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	51		 push	 ecx
  000a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f651eb8
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	51		 push	 ecx
  000b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	51		 push	 ecx
  000c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  000cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1468 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X3, CLIMB_SCALE_FSD * +0.5, CLIMB_SCALE_MAJOR_TICK_X4, CLIMB_SCALE_FSD * +0.5, hud_colour);

  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  000e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e9	51		 push	 ecx
  000ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7eb852
  000f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f7	51		 push	 ecx
  000f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  00100	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00105	51		 push	 ecx
  00106	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f733333
  0010e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00113	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1469 : 
; 1470 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * +0.4, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * +0.4, hud_colour);

  00118	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0011d	50		 push	 eax
  0011e	51		 push	 ecx
  0011f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ea3d70a
  00127	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012c	51		 push	 ecx
  0012d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  00135	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013a	51		 push	 ecx
  0013b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ea3d70a
  00143	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00148	51		 push	 ecx
  00149	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  00151	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00156	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1471 : 
; 1472 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * +0.3, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * +0.3, hud_colour);

  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00160	50		 push	 eax
  00161	51		 push	 ecx
  00162	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e75c28f
  0016a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016f	51		 push	 ecx
  00170	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  00178	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017d	51		 push	 ecx
  0017e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e75c28f
  00186	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018b	51		 push	 ecx
  0018c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  00194	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00199	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1473 : 
; 1474 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * +0.2, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * +0.2, hud_colour);

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001a3	50		 push	 eax
  001a4	51		 push	 ecx
  001a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e23d70a
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	51		 push	 ecx
  001b3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  001bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c0	51		 push	 ecx
  001c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e23d70a
  001c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ce	51		 push	 ecx
  001cf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  001d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dc	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1475 : 
; 1476 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * +0.1, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * +0.1, hud_colour);

  001e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001e6	50		 push	 eax
  001e7	51		 push	 ecx
  001e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3da3d70a
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	51		 push	 ecx
  001f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  001fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00203	51		 push	 ecx
  00204	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3da3d70a
  0020c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00211	51		 push	 ecx
  00212	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  0021a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1477 : 
; 1478 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X1, CLIMB_SCALE_FSD * +0.0, CLIMB_SCALE_MAJOR_TICK_X2, CLIMB_SCALE_FSD * +0.0, hud_colour);

  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00229	50		 push	 eax
  0022a	51		 push	 ecx
  0022b	0f 57 c0	 xorps	 xmm0, xmm0
  0022e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00233	51		 push	 ecx
  00234	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f651eb8
  0023c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00241	51		 push	 ecx
  00242	0f 57 c0	 xorps	 xmm0, xmm0
  00245	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024a	51		 push	 ecx
  0024b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  00253	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00258	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1479 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X3, CLIMB_SCALE_FSD * +0.0, CLIMB_SCALE_MAJOR_TICK_X4, CLIMB_SCALE_FSD * +0.0, hud_colour);

  0025d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00262	50		 push	 eax
  00263	51		 push	 ecx
  00264	0f 57 c0	 xorps	 xmm0, xmm0
  00267	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026c	51		 push	 ecx
  0026d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7eb852
  00275	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027a	51		 push	 ecx
  0027b	0f 57 c0	 xorps	 xmm0, xmm0
  0027e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00283	51		 push	 ecx
  00284	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f733333
  0028c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00291	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1480 : 
; 1481 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * -0.1, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * -0.1, hud_colour);

  00296	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0029b	50		 push	 eax
  0029c	51		 push	 ecx
  0029d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bda3d70a
  002a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002aa	51		 push	 ecx
  002ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  002b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b8	51		 push	 ecx
  002b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bda3d70a
  002c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c6	51		 push	 ecx
  002c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  002cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d4	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1482 : 
; 1483 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * -0.2, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * -0.2, hud_colour);

  002d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002de	50		 push	 eax
  002df	51		 push	 ecx
  002e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be23d70a
  002e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ed	51		 push	 ecx
  002ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  002f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fb	51		 push	 ecx
  002fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be23d70a
  00304	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00309	51		 push	 ecx
  0030a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  00312	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00317	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1484 : 
; 1485 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * -0.3, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * -0.3, hud_colour);

  0031c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00321	50		 push	 eax
  00322	51		 push	 ecx
  00323	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be75c28f
  0032b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00330	51		 push	 ecx
  00331	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  00339	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033e	51		 push	 ecx
  0033f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be75c28f
  00347	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034c	51		 push	 ecx
  0034d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  00355	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1486 : 
; 1487 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X1, CLIMB_SCALE_FSD * -0.4, CLIMB_SCALE_MINOR_TICK_X2, CLIMB_SCALE_FSD * -0.4, hud_colour);

  0035f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00364	50		 push	 eax
  00365	51		 push	 ecx
  00366	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bea3d70a
  0036e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00373	51		 push	 ecx
  00374	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  0037c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00381	51		 push	 ecx
  00382	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bea3d70a
  0038a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038f	51		 push	 ecx
  00390	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5b645a
  00398	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1488 : 
; 1489 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X1, CLIMB_SCALE_FSD * -0.5, CLIMB_SCALE_MAJOR_TICK_X2, CLIMB_SCALE_FSD * -0.5, hud_colour);

  003a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003a7	50		 push	 eax
  003a8	51		 push	 ecx
  003a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  003b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b6	51		 push	 ecx
  003b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f651eb8
  003bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c4	51		 push	 ecx
  003c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  003cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d2	51		 push	 ecx
  003d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  003db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1490 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X3, CLIMB_SCALE_FSD * -0.5, CLIMB_SCALE_MAJOR_TICK_X4, CLIMB_SCALE_FSD * -0.5, hud_colour);

  003e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003ea	50		 push	 eax
  003eb	51		 push	 ecx
  003ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  003f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f9	51		 push	 ecx
  003fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7eb852
  00402	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00407	51		 push	 ecx
  00408	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  00410	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00415	51		 push	 ecx
  00416	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f733333
  0041e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00423	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1491 : 
; 1492 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X3, CLIMB_SCALE_FSD * -0.6, CLIMB_SCALE_MINOR_TICK_X4, CLIMB_SCALE_FSD * -0.6, hud_colour);

  00428	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0042d	50		 push	 eax
  0042e	51		 push	 ecx
  0042f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bef5c28f
  00437	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043c	51		 push	 ecx
  0043d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7c28f6
  00445	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044a	51		 push	 ecx
  0044b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bef5c28f
  00453	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00458	51		 push	 ecx
  00459	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f74fdf4
  00461	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00466	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1493 : 
; 1494 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X3, CLIMB_SCALE_FSD * -0.7, CLIMB_SCALE_MINOR_TICK_X4, CLIMB_SCALE_FSD * -0.7, hud_colour);

  0046b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00470	50		 push	 eax
  00471	51		 push	 ecx
  00472	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf0f5c29
  0047a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047f	51		 push	 ecx
  00480	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7c28f6
  00488	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048d	51		 push	 ecx
  0048e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf0f5c29
  00496	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049b	51		 push	 ecx
  0049c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f74fdf4
  004a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1495 : 
; 1496 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X3, CLIMB_SCALE_FSD * -0.8, CLIMB_SCALE_MINOR_TICK_X4, CLIMB_SCALE_FSD * -0.8, hud_colour);

  004ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004b3	50		 push	 eax
  004b4	51		 push	 ecx
  004b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf23d70a
  004bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c2	51		 push	 ecx
  004c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7c28f6
  004cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d0	51		 push	 ecx
  004d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf23d70a
  004d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004de	51		 push	 ecx
  004df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f74fdf4
  004e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ec	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1497 : 
; 1498 : 	draw_2d_line (CLIMB_SCALE_MINOR_TICK_X3, CLIMB_SCALE_FSD * -0.9, CLIMB_SCALE_MINOR_TICK_X4, CLIMB_SCALE_FSD * -0.9, hud_colour);

  004f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004f6	50		 push	 eax
  004f7	51		 push	 ecx
  004f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf3851ec
  00500	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00505	51		 push	 ecx
  00506	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7c28f6
  0050e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00513	51		 push	 ecx
  00514	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf3851ec
  0051c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00521	51		 push	 ecx
  00522	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f74fdf4
  0052a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1499 : 
; 1500 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X1, CLIMB_SCALE_FSD * -1.0, CLIMB_SCALE_MAJOR_TICK_X2, CLIMB_SCALE_FSD * -1.0, hud_colour);

  00534	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00539	50		 push	 eax
  0053a	51		 push	 ecx
  0053b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  00543	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00548	51		 push	 ecx
  00549	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f651eb8
  00551	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00556	51		 push	 ecx
  00557	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  0055f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00564	51		 push	 ecx
  00565	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  0056d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00572	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1501 : 	draw_2d_line (CLIMB_SCALE_MAJOR_TICK_X3, CLIMB_SCALE_FSD * -1.0, CLIMB_SCALE_MAJOR_TICK_X4, CLIMB_SCALE_FSD * -1.0, hud_colour);

  00577	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0057c	50		 push	 eax
  0057d	51		 push	 ecx
  0057e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  00586	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058b	51		 push	 ecx
  0058c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7eb852
  00594	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00599	51		 push	 ecx
  0059a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  005a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a7	51		 push	 ecx
  005a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f733333
  005b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1502 : 
; 1503 : 	//
; 1504 : 	// display analogue radar altitude
; 1505 : 	//
; 1506 : 
; 1507 : 	radar_altitude = feet (current_flight_dynamics->radar_altitude.value);

  005ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005bf	f3 0f 10 80 44
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9284]
  005c7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  005cf	f3 0f 11 45 fc	 movss	 DWORD PTR _radar_altitude$[ebp], xmm0

; 1508 : 
; 1509 : 	if (radar_altitude <= 200.0)

  005d4	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  005d9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4069000000000000
  005e1	66 0f 2f c8	 comisd	 xmm1, xmm0
  005e5	0f 82 51 02 00
	00		 jb	 $LN2@draw_rate_

; 1510 : 	{
; 1511 : 		y1 = -CLIMB_SCALE_FSD;

  005eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf4ccccd
  005f3	f3 0f 11 45 ec	 movss	 DWORD PTR _y1$[ebp], xmm0

; 1512 : 
; 1513 : 		y2 = -CLIMB_SCALE_FSD + radar_altitude * ((CLIMB_SCALE_FSD * 2.0) / 200.0);

  005f8	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  005fd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f80624dd2f1a9fc
  00605	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@bfe999999999999a
  0060d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00611	f3 0f 11 45 e8	 movss	 DWORD PTR _y2$[ebp], xmm0

; 1514 : 
; 1515 : 		get_2d_float_screen_coordinates (CLIMB_SCALE_MAJOR_TICK_X2, y1, &x, &y1);

  00616	8d 45 ec	 lea	 eax, DWORD PTR _y1$[ebp]
  00619	50		 push	 eax
  0061a	8d 4d f4	 lea	 ecx, DWORD PTR _x$[ebp]
  0061d	51		 push	 ecx
  0061e	51		 push	 ecx
  0061f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00624	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00629	51		 push	 ecx
  0062a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f651eb8
  00632	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00637	e8 00 00 00 00	 call	 ?get_2d_float_screen_coordinates@@YGXMMPAM0@Z ; get_2d_float_screen_coordinates

; 1516 : 
; 1517 : 		get_2d_float_screen_coordinates (CLIMB_SCALE_MAJOR_TICK_X2, y2, &x, &y2);

  0063c	8d 45 e8	 lea	 eax, DWORD PTR _y2$[ebp]
  0063f	50		 push	 eax
  00640	8d 4d f4	 lea	 ecx, DWORD PTR _x$[ebp]
  00643	51		 push	 ecx
  00644	51		 push	 ecx
  00645	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0064a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064f	51		 push	 ecx
  00650	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f651eb8
  00658	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065d	e8 00 00 00 00	 call	 ?get_2d_float_screen_coordinates@@YGXMMPAM0@Z ; get_2d_float_screen_coordinates

; 1518 : 
; 1519 : 		draw_line (x + 1.0, y1, x + 1.0, y2, hud_colour);

  00662	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00667	50		 push	 eax
  00668	51		 push	 ecx
  00669	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0066e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00673	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00678	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00680	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00684	51		 push	 ecx
  00685	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068a	51		 push	 ecx
  0068b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00690	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00695	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0069a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  006a2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006a6	51		 push	 ecx
  006a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ac	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1520 : 		draw_line (x + 2.0, y1, x + 2.0, y2, hud_colour);

  006b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006b6	50		 push	 eax
  006b7	51		 push	 ecx
  006b8	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  006bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c2	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006c7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  006cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d3	51		 push	 ecx
  006d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006d9	51		 push	 ecx
  006da	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  006df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006e4	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  006e9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  006f1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006f5	51		 push	 ecx
  006f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fb	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1521 : 		draw_line (x + 3.0, y1, x + 3.0, y2, hud_colour);

  00700	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00705	50		 push	 eax
  00706	51		 push	 ecx
  00707	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0070c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00711	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00716	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4008000000000000
  0071e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00722	51		 push	 ecx
  00723	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00728	51		 push	 ecx
  00729	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0072e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00733	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00738	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4008000000000000
  00740	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00744	51		 push	 ecx
  00745	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0074a	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1522 : 		draw_line (x + 4.0, y1, x + 4.0, y2, hud_colour);

  0074f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00754	50		 push	 eax
  00755	51		 push	 ecx
  00756	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0075b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00760	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00765	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4010000000000000
  0076d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00771	51		 push	 ecx
  00772	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00777	51		 push	 ecx
  00778	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0077d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00782	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00787	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4010000000000000
  0078f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00793	51		 push	 ecx
  00794	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00799	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1523 : 		draw_line (x + 5.0, y1, x + 5.0, y2, hud_colour);

  0079e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007a3	50		 push	 eax
  007a4	51		 push	 ecx
  007a5	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  007aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007af	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007b4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4014000000000000
  007bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007c0	51		 push	 ecx
  007c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007c6	51		 push	 ecx
  007c7	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  007cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007d1	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  007d6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4014000000000000
  007de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007e2	51		 push	 ecx
  007e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e8	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 1524 : 		draw_line (x + 6.0, y1, x + 6.0, y2, hud_colour);

  007ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007f2	50		 push	 eax
  007f3	51		 push	 ecx
  007f4	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  007f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007fe	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00803	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4018000000000000
  0080b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0080f	51		 push	 ecx
  00810	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00815	51		 push	 ecx
  00816	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0081b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00820	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00825	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4018000000000000
  0082d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00831	51		 push	 ecx
  00832	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00837	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN2@draw_rate_:

; 1525 : 	}
; 1526 : 
; 1527 : 	//
; 1528 : 	// display digital radar altitude
; 1529 : 	//
; 1530 : 
; 1531 : 	if (radar_altitude <= 1500.0)

  0083c	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _radar_altitude$[ebp]
  00841	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4097700000000000
  00849	66 0f 2f c8	 comisd	 xmm1, xmm0
  0084d	0f 82 84 00 00
	00		 jb	 $LN3@draw_rate_

; 1532 : 	{
; 1533 : 		set_mono_font_type (MONO_FONT_TYPE_7X12);

  00853	6a 05		 push	 5
  00855	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1534 : 
; 1535 : 		sprintf (s, "%d", (int) radar_altitude);

  0085a	f3 0f 2c 45 fc	 cvttss2si eax, DWORD PTR _radar_altitude$[ebp]
  0085f	50		 push	 eax
  00860	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00865	8d 4d d0	 lea	 ecx, DWORD PTR _s$[ebp]
  00868	51		 push	 ecx
  00869	e8 00 00 00 00	 call	 _sprintf
  0086e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1536 : 
; 1537 : 		width = get_mono_font_string_width (s);

  00871	8d 45 d0	 lea	 eax, DWORD PTR _s$[ebp]
  00874	50		 push	 eax
  00875	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0087a	d9 5d e4	 fstp	 DWORD PTR _width$[ebp]

; 1538 : 
; 1539 : 		set_2d_mono_font_position (CLIMB_SCALE_MAJOR_TICK_X1, 0.0);

  0087d	51		 push	 ecx
  0087e	0f 57 c0	 xorps	 xmm0, xmm0
  00881	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00886	51		 push	 ecx
  00887	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  0088f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00894	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1540 : 
; 1541 : 		set_mono_font_rel_position (-width - 5.0, -4.0);

  00899	51		 push	 ecx
  0089a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0800000
  008a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008a7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _width$[ebp]
  008ac	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  008b3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  008b7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4014000000000000
  008bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008c3	51		 push	 ecx
  008c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008c9	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1542 : 
; 1543 : 		print_mono_font_string (s);

  008ce	8d 45 d0	 lea	 eax, DWORD PTR _s$[ebp]
  008d1	50		 push	 eax
  008d2	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN3@draw_rate_:

; 1544 : 	}
; 1545 : 
; 1546 : 	//
; 1547 : 	// draw rate of climb scale pointer
; 1548 : 	//
; 1549 : 
; 1550 : 	rate_of_climb = current_flight_dynamics->world_velocity_y.value;

  008d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008dc	f3 0f 10 80 14
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8468]
  008e4	f3 0f 11 45 f8	 movss	 DWORD PTR _rate_of_climb$[ebp], xmm0

; 1551 : 
; 1552 : 	rate_of_climb = feet_per_minute (rate_of_climb);

  008e9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _rate_of_climb$[ebp]
  008ee	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4344d9b3
  008f6	f3 0f 11 45 f8	 movss	 DWORD PTR _rate_of_climb$[ebp], xmm0

; 1553 : 
; 1554 : 	rate_of_climb = bound (rate_of_climb, -1000.0, 1000.0);

  008fb	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _rate_of_climb$[ebp]
  00900	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c08f400000000000
  00908	66 0f 2f c8	 comisd	 xmm1, xmm0
  0090c	76 0f		 jbe	 SHORT $LN7@draw_rate_
  0090e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c08f400000000000
  00916	f2 0f 11 45 88	 movsd	 QWORD PTR tv316[ebp], xmm0
  0091b	eb 32		 jmp	 SHORT $LN8@draw_rate_
$LN7@draw_rate_:
  0091d	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _rate_of_climb$[ebp]
  00922	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@408f400000000000
  0092a	76 0f		 jbe	 SHORT $LN5@draw_rate_
  0092c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@408f400000000000
  00934	f2 0f 11 45 80	 movsd	 QWORD PTR tv315[ebp], xmm0
  00939	eb 0a		 jmp	 SHORT $LN6@draw_rate_
$LN5@draw_rate_:
  0093b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _rate_of_climb$[ebp]
  00940	f2 0f 11 45 80	 movsd	 QWORD PTR tv315[ebp], xmm0
$LN6@draw_rate_:
  00945	f2 0f 10 45 80	 movsd	 xmm0, QWORD PTR tv315[ebp]
  0094a	f2 0f 11 45 88	 movsd	 QWORD PTR tv316[ebp], xmm0
$LN8@draw_rate_:
  0094f	f2 0f 5a 45 88	 cvtsd2ss xmm0, QWORD PTR tv316[ebp]
  00954	f3 0f 11 45 f8	 movss	 DWORD PTR _rate_of_climb$[ebp], xmm0

; 1555 : 
; 1556 : 	x = CLIMB_SCALE_MAJOR_TICK_X1;

  00959	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  00961	f3 0f 11 45 f4	 movss	 DWORD PTR _x$[ebp], xmm0

; 1557 : 
; 1558 : 	y = rate_of_climb * (CLIMB_SCALE_FSD / 1000.0);

  00966	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _rate_of_climb$[ebp]
  0096b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f4a36e2eb1c432d
  00973	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00977	f3 0f 11 45 f0	 movss	 DWORD PTR _y$[ebp], xmm0

; 1559 : 
; 1560 : 	draw_2d_mono_sprite (rate_of_climb_scale_pointer, x, y, hud_colour);

  0097c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00981	50		 push	 eax
  00982	51		 push	 ecx
  00983	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y$[ebp]
  00988	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0098d	51		 push	 ecx
  0098e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  00993	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00998	68 00 00 00 00	 push	 OFFSET ?rate_of_climb_scale_pointer@@3PADA
  0099d	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite

; 1561 : }

  009a2	5f		 pop	 edi
  009a3	5e		 pop	 esi
  009a4	5b		 pop	 ebx
  009a5	8b e5		 mov	 esp, ebp
  009a7	5d		 pop	 ebp
  009a8	c3		 ret	 0
?draw_rate_of_climb_scale@@YGXXZ ENDP			; draw_rate_of_climb_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?display_barometric_altitude@@YGXXZ
_TEXT	SEGMENT
_s$ = -28						; size = 20
_width$ = -8						; size = 4
_barometric_altitude$ = -4				; size = 4
?display_barometric_altitude@@YGXXZ PROC		; display_barometric_altitude, COMDAT

; 1419 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1420 : 	float
; 1421 : 		barometric_altitude,
; 1422 : 		width;
; 1423 : 
; 1424 : 	char
; 1425 : 		s[20];
; 1426 : 
; 1427 : 	barometric_altitude = feet (current_flight_dynamics->barometric_altitude.value);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0000e	f3 0f 10 80 2c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9260]
  00016	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  0001e	f3 0f 11 45 fc	 movss	 DWORD PTR _barometric_altitude$[ebp], xmm0

; 1428 : 
; 1429 : 	set_mono_font_type (MONO_FONT_TYPE_6X10);

  00023	6a 04		 push	 4
  00025	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1430 : 
; 1431 : 	sprintf (s, "%d", (int) barometric_altitude);

  0002a	f3 0f 2c 45 fc	 cvttss2si eax, DWORD PTR _barometric_altitude$[ebp]
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00035	8d 4d e4	 lea	 ecx, DWORD PTR _s$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 _sprintf
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1432 : 
; 1433 : 	width = get_mono_font_string_width (s);

  00041	8d 45 e4	 lea	 eax, DWORD PTR _s$[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0004a	d9 5d f8	 fstp	 DWORD PTR _width$[ebp]

; 1434 : 
; 1435 : 	set_2d_mono_font_position (0.8, 0.8);

  0004d	51		 push	 ecx
  0004e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	51		 push	 ecx
  0005c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00064	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00069	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1436 : 
; 1437 : 	set_mono_font_rel_position (-width, -3.0);

  0006e	51		 push	 ecx
  0006f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  00077	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _width$[ebp]
  00081	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00088	51		 push	 ecx
  00089	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008e	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1438 : 
; 1439 : 	print_mono_font_string (s);

  00093	8d 45 e4	 lea	 eax, DWORD PTR _s$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1440 : }

  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
?display_barometric_altitude@@YGXXZ ENDP		; display_barometric_altitude
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?display_true_airspeed@@YGXXZ
_TEXT	SEGMENT
_s$ = -24						; size = 20
_true_airspeed$ = -4					; size = 4
?display_true_airspeed@@YGXXZ PROC			; display_true_airspeed, COMDAT

; 1392 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1393 : 	float
; 1394 : 		true_airspeed;
; 1395 : 
; 1396 : 	char
; 1397 : 		s[20];
; 1398 : 
; 1399 : 	true_airspeed = current_flight_dynamics->velocity_z.value;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0000e	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  00016	f3 0f 11 45 fc	 movss	 DWORD PTR _true_airspeed$[ebp], xmm0

; 1400 : 
; 1401 : 	true_airspeed = knots (true_airspeed);

  0001b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _true_airspeed$[ebp]
  00020	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3ff85d84
  00028	f3 0f 11 45 fc	 movss	 DWORD PTR _true_airspeed$[ebp], xmm0

; 1402 : 
; 1403 : 	sprintf (s, "%d", (int) true_airspeed);

  0002d	f3 0f 2c 45 fc	 cvttss2si eax, DWORD PTR _true_airspeed$[ebp]
  00032	50		 push	 eax
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00038	8d 4d e8	 lea	 ecx, DWORD PTR _s$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 _sprintf
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1404 : 
; 1405 : 	set_mono_font_type (MONO_FONT_TYPE_7X12);

  00044	6a 05		 push	 5
  00046	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1406 : 
; 1407 : 	set_2d_mono_font_position (-1.0, 0.0);

  0004b	51		 push	 ecx
  0004c	0f 57 c0	 xorps	 xmm0, xmm0
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	51		 push	 ecx
  00055	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0005d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00062	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1408 : 
; 1409 : 	set_mono_font_rel_position (1.0, -4.0);

  00067	51		 push	 ecx
  00068	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0800000
  00070	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00075	51		 push	 ecx
  00076	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0007e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00083	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1410 : 
; 1411 : 	print_mono_font_string (s);

  00088	8d 45 e8	 lea	 eax, DWORD PTR _s$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1412 : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
?display_true_airspeed@@YGXXZ ENDP			; display_true_airspeed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_bank_scale@@YGXXZ
_TEXT	SEGMENT
tv139 = -76						; size = 4
tv131 = -72						; size = 4
_roll$ = -4						; size = 4
?draw_bank_scale@@YGXXZ PROC				; draw_bank_scale, COMDAT

; 1303 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1304 : 	float
; 1305 : 		roll;
; 1306 : 
; 1307 : 	//
; 1308 : 	// adjust 2D environment for bank scale clipping
; 1309 : 	//
; 1310 : 
; 1311 : 	set_2d_window (hud_env, BANK_SCALE_WINDOW_X_MIN, BANK_SCALE_WINDOW_Y_MIN, BANK_SCALE_WINDOW_X_MAX, BANK_SCALE_WINDOW_Y_MAX);

  00009	51		 push	 ecx
  0000a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4c985f
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	51		 push	 ecx
  00018	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00025	51		 push	 ecx
  00026	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3effbe77
  0002e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00033	51		 push	 ecx
  00034	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0003c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 1312 : /*
; 1313 : 	bank_scale_viewport_x_min = (hud_viewport_x_org - (HUD_VIEWPORT_SIZE * 0.5));
; 1314 : 
; 1315 : 	bank_scale_viewport_y_min = (hud_viewport_y_org - (HUD_VIEWPORT_SIZE * 0.5 * 0.8));
; 1316 : 
; 1317 : 	bank_scale_viewport_x_max = (hud_viewport_x_org + (HUD_VIEWPORT_SIZE * 0.5) - 0.001);
; 1318 : 
; 1319 : 	bank_scale_viewport_y_max = (hud_viewport_y_org - (HUD_VIEWPORT_SIZE * 0.5 * 0.5) - 0.001);
; 1320 : */
; 1321 : //VJ 050126 hud mod start
; 1322 : 	bank_scale_viewport_x_min = hud_viewport_x_min;

  0004c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00054	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?bank_scale_viewport_x_min@@3MA, xmm0

; 1323 :                                                  
; 1324 : 	bank_scale_viewport_y_min = hud_viewport_y_min + (hud_viewport_size * 0.1);

  0005c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  00064	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  0006c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fb999999999999a
  00074	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00078	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0007c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?bank_scale_viewport_y_min@@3MA, xmm0

; 1325 :                                                  
; 1326 : 	bank_scale_viewport_x_max = hud_viewport_x_max;

  00084	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  0008c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?bank_scale_viewport_x_max@@3MA, xmm0

; 1327 :                                                  
; 1328 : 	bank_scale_viewport_y_max = hud_viewport_y_min + (hud_viewport_size * 0.25) - 0.001;

  00094	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  0009c	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  000a4	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd0000000000000
  000ac	f2 0f 58 c1	 addsd	 xmm0, xmm1
  000b0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  000b8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000bc	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?bank_scale_viewport_y_max@@3MA, xmm0

; 1329 : 
; 1330 : 	set_2d_viewport (hud_env, bank_scale_viewport_x_min, bank_scale_viewport_y_min, bank_scale_viewport_x_max, bank_scale_viewport_y_max);

  000c4	51		 push	 ecx
  000c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_y_max@@3MA
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	51		 push	 ecx
  000d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_x_max@@3MA
  000db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e0	51		 push	 ecx
  000e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_y_min@@3MA
  000e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ee	51		 push	 ecx
  000ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_x_min@@3MA
  000f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 1331 : //VJ 050126 hud mod end
; 1332 : 
; 1333 : 	set_2d_viewport (hud_env, bank_scale_viewport_x_min, bank_scale_viewport_y_min, bank_scale_viewport_x_max, bank_scale_viewport_y_max);

  00107	51		 push	 ecx
  00108	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_y_max@@3MA
  00110	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00115	51		 push	 ecx
  00116	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_x_max@@3MA
  0011e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00123	51		 push	 ecx
  00124	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_y_min@@3MA
  0012c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00131	51		 push	 ecx
  00132	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?bank_scale_viewport_x_min@@3MA
  0013a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 1334 : 
; 1335 : 	//
; 1336 : 	// draw bank scale
; 1337 : 	//
; 1338 : 
; 1339 : 	set_2d_instance_position (hud_env, 0.0, 0.0);

  0014a	51		 push	 ecx
  0014b	0f 57 c0	 xorps	 xmm0, xmm0
  0014e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00153	51		 push	 ecx
  00154	0f 57 c0	 xorps	 xmm0, xmm0
  00157	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z ; set_2d_instance_position

; 1340 : 
; 1341 : 	roll = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_ROLL);

  00167	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0016e	74 0c		 je	 SHORT $LN3@draw_bank_
  00170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00175	8b 08		 mov	 ecx, DWORD PTR [eax]
  00177	89 4d b8	 mov	 DWORD PTR tv131[ebp], ecx
  0017a	eb 21		 jmp	 SHORT $LN4@draw_bank_
$LN3@draw_bank_:
  0017c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_bank_scale@@YGXXZ@4JA
  00182	83 c2 26	 add	 edx, 38			; 00000026H
  00185	52		 push	 edx
  00186	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00196	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN4@draw_bank_:
  0019d	b9 01 00 00 00	 mov	 ecx, 1
  001a2	85 c9		 test	 ecx, ecx
  001a4	74 09		 je	 SHORT $LN5@draw_bank_
  001a6	c7 45 b4 71 00
	00 00		 mov	 DWORD PTR tv139[ebp], 113 ; 00000071H
  001ad	eb 21		 jmp	 SHORT $LN6@draw_bank_
$LN5@draw_bank_:
  001af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_bank_scale@@YGXXZ@4JA
  001b5	83 c2 26	 add	 edx, 38			; 00000026H
  001b8	52		 push	 edx
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  001be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001c3	50		 push	 eax
  001c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN6@draw_bank_:
  001d0	6a 71		 push	 113			; 00000071H
  001d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001d8	51		 push	 ecx
  001d9	69 55 b8 bc 02
	00 00		 imul	 edx, DWORD PTR tv131[ebp], 700
  001e0	8b 45 b4	 mov	 eax, DWORD PTR tv139[ebp]
  001e3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001ea	ff d1		 call	 ecx
  001ec	d9 5d fc	 fstp	 DWORD PTR _roll$[ebp]

; 1342 : 
; 1343 : 	set_2d_instance_rotation (hud_env, roll);

  001ef	51		 push	 ecx
  001f0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _roll$[ebp]
  001f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  001ff	50		 push	 eax
  00200	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1344 : 	draw_2d_line (0.0, BANK_SCALE_MAJOR_TICK_Y1, 0.0, BANK_SCALE_MAJOR_TICK_Y2, hud_colour);

  00205	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0020a	50		 push	 eax
  0020b	51		 push	 ecx
  0020c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  00214	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00219	51		 push	 ecx
  0021a	0f 57 c0	 xorps	 xmm0, xmm0
  0021d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00222	51		 push	 ecx
  00223	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f30a3d7
  0022b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00230	51		 push	 ecx
  00231	0f 57 c0	 xorps	 xmm0, xmm0
  00234	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00239	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1345 : 
; 1346 : 	set_2d_instance_rotation (hud_env, roll + rad (5.0));

  0023e	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  00243	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb6571848000000
  0024b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0024f	51		 push	 ecx
  00250	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00255	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1347 : 	draw_2d_line (0.0, BANK_SCALE_MINOR_TICK_Y1, 0.0, BANK_SCALE_MINOR_TICK_Y2, hud_colour);

  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00265	50		 push	 eax
  00266	51		 push	 ecx
  00267	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f43d70a
  0026f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00274	51		 push	 ecx
  00275	0f 57 c0	 xorps	 xmm0, xmm0
  00278	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027d	51		 push	 ecx
  0027e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f370a3d
  00286	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028b	51		 push	 ecx
  0028c	0f 57 c0	 xorps	 xmm0, xmm0
  0028f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00294	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1348 : 	set_2d_instance_rotation (hud_env, roll - rad (5.0));

  00299	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  0029e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fb6571848000000
  002a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002aa	51		 push	 ecx
  002ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1349 : 	draw_2d_line (0.0, BANK_SCALE_MINOR_TICK_Y1, 0.0, BANK_SCALE_MINOR_TICK_Y2, hud_colour);

  002bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  002c0	50		 push	 eax
  002c1	51		 push	 ecx
  002c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f43d70a
  002ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002cf	51		 push	 ecx
  002d0	0f 57 c0	 xorps	 xmm0, xmm0
  002d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d8	51		 push	 ecx
  002d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f370a3d
  002e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e6	51		 push	 ecx
  002e7	0f 57 c0	 xorps	 xmm0, xmm0
  002ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ef	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1350 : 
; 1351 : 	set_2d_instance_rotation (hud_env, roll + rad (10.0));

  002f4	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  002f9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00301	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00305	51		 push	 ecx
  00306	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00310	50		 push	 eax
  00311	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1352 : 	draw_2d_line (0.0, BANK_SCALE_MAJOR_TICK_Y1, 0.0, BANK_SCALE_MAJOR_TICK_Y2, hud_colour);

  00316	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0031b	50		 push	 eax
  0031c	51		 push	 ecx
  0031d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  00325	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032a	51		 push	 ecx
  0032b	0f 57 c0	 xorps	 xmm0, xmm0
  0032e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00333	51		 push	 ecx
  00334	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f30a3d7
  0033c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00341	51		 push	 ecx
  00342	0f 57 c0	 xorps	 xmm0, xmm0
  00345	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1353 : 	set_2d_instance_rotation (hud_env, roll - rad (10.0));

  0034f	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  00354	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc6571848000000
  0035c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00360	51		 push	 ecx
  00361	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00366	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0036b	50		 push	 eax
  0036c	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1354 : 	draw_2d_line (0.0, BANK_SCALE_MAJOR_TICK_Y1, 0.0, BANK_SCALE_MAJOR_TICK_Y2, hud_colour);

  00371	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00376	50		 push	 eax
  00377	51		 push	 ecx
  00378	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  00380	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00385	51		 push	 ecx
  00386	0f 57 c0	 xorps	 xmm0, xmm0
  00389	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038e	51		 push	 ecx
  0038f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f30a3d7
  00397	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039c	51		 push	 ecx
  0039d	0f 57 c0	 xorps	 xmm0, xmm0
  003a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1355 : 
; 1356 : 	set_2d_instance_rotation (hud_env, roll + rad (15.0));

  003aa	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  003af	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  003b7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003bb	51		 push	 ecx
  003bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  003c6	50		 push	 eax
  003c7	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1357 : 	draw_2d_line (0.0, BANK_SCALE_MINOR_TICK_Y1, 0.0, BANK_SCALE_MINOR_TICK_Y2, hud_colour);

  003cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003d1	50		 push	 eax
  003d2	51		 push	 ecx
  003d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f43d70a
  003db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e0	51		 push	 ecx
  003e1	0f 57 c0	 xorps	 xmm0, xmm0
  003e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e9	51		 push	 ecx
  003ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f370a3d
  003f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f7	51		 push	 ecx
  003f8	0f 57 c0	 xorps	 xmm0, xmm0
  003fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00400	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1358 : 	set_2d_instance_rotation (hud_env, roll - rad (15.0));

  00405	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  0040a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd0c15236000000
  00412	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00416	51		 push	 ecx
  00417	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00421	50		 push	 eax
  00422	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1359 : 	draw_2d_line (0.0, BANK_SCALE_MINOR_TICK_Y1, 0.0, BANK_SCALE_MINOR_TICK_Y2, hud_colour);

  00427	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0042c	50		 push	 eax
  0042d	51		 push	 ecx
  0042e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f43d70a
  00436	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043b	51		 push	 ecx
  0043c	0f 57 c0	 xorps	 xmm0, xmm0
  0043f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00444	51		 push	 ecx
  00445	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f370a3d
  0044d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00452	51		 push	 ecx
  00453	0f 57 c0	 xorps	 xmm0, xmm0
  00456	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1360 : 
; 1361 : 	set_2d_instance_rotation (hud_env, roll + rad (20.0));

  00460	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  00465	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd6571848000000
  0046d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00471	51		 push	 ecx
  00472	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00477	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0047c	50		 push	 eax
  0047d	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1362 : 	draw_2d_line (0.0, BANK_SCALE_MAJOR_TICK_Y1, 0.0, BANK_SCALE_MAJOR_TICK_Y2, hud_colour);

  00482	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00487	50		 push	 eax
  00488	51		 push	 ecx
  00489	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  00491	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00496	51		 push	 ecx
  00497	0f 57 c0	 xorps	 xmm0, xmm0
  0049a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049f	51		 push	 ecx
  004a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f30a3d7
  004a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ad	51		 push	 ecx
  004ae	0f 57 c0	 xorps	 xmm0, xmm0
  004b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1363 : 	set_2d_instance_rotation (hud_env, roll - rad (20.0));

  004bb	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  004c0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fd6571848000000
  004c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004cc	51		 push	 ecx
  004cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  004d7	50		 push	 eax
  004d8	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1364 : 	draw_2d_line (0.0, BANK_SCALE_MAJOR_TICK_Y1, 0.0, BANK_SCALE_MAJOR_TICK_Y2, hud_colour);

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e2	50		 push	 eax
  004e3	51		 push	 ecx
  004e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  004ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f1	51		 push	 ecx
  004f2	0f 57 c0	 xorps	 xmm0, xmm0
  004f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fa	51		 push	 ecx
  004fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f30a3d7
  00503	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00508	51		 push	 ecx
  00509	0f 57 c0	 xorps	 xmm0, xmm0
  0050c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00511	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1365 : 
; 1366 : 	set_2d_instance_rotation (hud_env, roll + rad (25.0));

  00516	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  0051b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fdbecde5a000000
  00523	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00527	51		 push	 ecx
  00528	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00532	50		 push	 eax
  00533	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1367 : 	draw_2d_line (0.0, BANK_SCALE_MINOR_TICK_Y1, 0.0, BANK_SCALE_MINOR_TICK_Y2, hud_colour);

  00538	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0053d	50		 push	 eax
  0053e	51		 push	 ecx
  0053f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f43d70a
  00547	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054c	51		 push	 ecx
  0054d	0f 57 c0	 xorps	 xmm0, xmm0
  00550	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00555	51		 push	 ecx
  00556	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f370a3d
  0055e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00563	51		 push	 ecx
  00564	0f 57 c0	 xorps	 xmm0, xmm0
  00567	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0056c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1368 : 	set_2d_instance_rotation (hud_env, roll - rad (25.0));

  00571	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  00576	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fdbecde5a000000
  0057e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00582	51		 push	 ecx
  00583	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00588	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0058d	50		 push	 eax
  0058e	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1369 : 	draw_2d_line (0.0, BANK_SCALE_MINOR_TICK_Y1, 0.0, BANK_SCALE_MINOR_TICK_Y2, hud_colour);

  00593	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00598	50		 push	 eax
  00599	51		 push	 ecx
  0059a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f43d70a
  005a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a7	51		 push	 ecx
  005a8	0f 57 c0	 xorps	 xmm0, xmm0
  005ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b0	51		 push	 ecx
  005b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f370a3d
  005b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005be	51		 push	 ecx
  005bf	0f 57 c0	 xorps	 xmm0, xmm0
  005c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c7	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1370 : 
; 1371 : 	set_2d_instance_rotation (hud_env, roll + rad (30.0));

  005cc	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  005d1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0c15236000000
  005d9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005dd	51		 push	 ecx
  005de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  005e8	50		 push	 eax
  005e9	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1372 : 	draw_2d_line (0.0, BANK_SCALE_MAJOR_TICK_Y1, 0.0, BANK_SCALE_MAJOR_TICK_Y2, hud_colour);

  005ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005f3	50		 push	 eax
  005f4	51		 push	 ecx
  005f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  005fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00602	51		 push	 ecx
  00603	0f 57 c0	 xorps	 xmm0, xmm0
  00606	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060b	51		 push	 ecx
  0060c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f30a3d7
  00614	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00619	51		 push	 ecx
  0061a	0f 57 c0	 xorps	 xmm0, xmm0
  0061d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00622	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1373 : 	set_2d_instance_rotation (hud_env, roll - rad (30.0));

  00627	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  0062c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe0c15236000000
  00634	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00638	51		 push	 ecx
  00639	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0063e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00643	50		 push	 eax
  00644	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1374 : 	draw_2d_line (0.0, BANK_SCALE_MAJOR_TICK_Y1, 0.0, BANK_SCALE_MAJOR_TICK_Y2, hud_colour);

  00649	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0064e	50		 push	 eax
  0064f	51		 push	 ecx
  00650	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  00658	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065d	51		 push	 ecx
  0065e	0f 57 c0	 xorps	 xmm0, xmm0
  00661	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00666	51		 push	 ecx
  00667	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f30a3d7
  0066f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00674	51		 push	 ecx
  00675	0f 57 c0	 xorps	 xmm0, xmm0
  00678	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1375 : 
; 1376 : 	reset_2d_instance (hud_env);

  00682	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00687	50		 push	 eax
  00688	e8 00 00 00 00	 call	 ?reset_2d_instance@@YGXPAUENV_2D@@@Z ; reset_2d_instance

; 1377 : 
; 1378 : 	//
; 1379 : 	// restore 2D environment
; 1380 : 	//
; 1381 : 
; 1382 : 	set_2d_window (hud_env, HUD_WINDOW_X_MIN, HUD_WINDOW_Y_MIN, HUD_WINDOW_X_MAX, HUD_WINDOW_Y_MAX);

  0068d	51		 push	 ecx
  0068e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00696	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069b	51		 push	 ecx
  0069c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  006a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a9	51		 push	 ecx
  006aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  006b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b7	51		 push	 ecx
  006b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  006c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  006ca	50		 push	 eax
  006cb	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 1383 : 
; 1384 : 	set_2d_viewport (hud_env, hud_viewport_x_min, hud_viewport_y_min, hud_viewport_x_max, hud_viewport_y_max);

  006d0	51		 push	 ecx
  006d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  006d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006de	51		 push	 ecx
  006df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  006e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ec	51		 push	 ecx
  006ed	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  006f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fa	51		 push	 ecx
  006fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00703	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00708	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0070d	50		 push	 eax
  0070e	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 1385 : }

  00713	5f		 pop	 edi
  00714	5e		 pop	 esi
  00715	5b		 pop	 ebx
  00716	8b e5		 mov	 esp, ebp
  00718	5d		 pop	 ebp
  00719	c3		 ret	 0
?draw_bank_scale@@YGXXZ ENDP				; draw_bank_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_pitch_ladder@@YGXH@Z
_TEXT	SEGMENT
tv1135 = -160						; size = 8
tv911 = -160						; size = 8
tv689 = -160						; size = 8
tv683 = -160						; size = 8
tv663 = -160						; size = 8
tv642 = -160						; size = 8
tv135 = -160						; size = 4
tv83 = -160						; size = 4
tv672 = -156						; size = 4
tv651 = -156						; size = 4
tv633 = -156						; size = 4
tv306 = -156						; size = 4
tv95 = -156						; size = 4
tv75 = -156						; size = 4
_s$ = -88						; size = 20
_loop$ = -68						; size = 4
_step_direction$ = -64					; size = 4
_int_pitch$ = -60					; size = 4
_x_adjust$ = -56					; size = 4
_y_10_deg_step$ = -52					; size = 4
_x_10_deg_step$ = -48					; size = 4
_y_horizon$ = -44					; size = 4
_x_horizon$ = -40					; size = 4
_y_scale$ = -36						; size = 4
_x_scale$ = -32						; size = 4
_y$ = -28						; size = 4
_x$ = -24						; size = 4
_roll$ = -20						; size = 4
_tan_mod_pitch$ = -16					; size = 4
_mod_pitch$ = -12					; size = 4
_pitch$ = -8						; size = 4
_scalefactor$ = -4					; size = 4
_draw_horizon_line_only$ = 8				; size = 4
?draw_pitch_ladder@@YGXH@Z PROC				; draw_pitch_ladder, COMDAT

; 1024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1025 : 	float
; 1026 : 		//VJ 050204 bug fix scale not correct
; 1027 : 		scalefactor,
; 1028 : 		pitch,
; 1029 : 		mod_pitch,
; 1030 : 		tan_mod_pitch,
; 1031 : 		roll,
; 1032 : 		x,
; 1033 : 		y,
; 1034 : 		x_scale,
; 1035 : 		y_scale,
; 1036 : 		x_horizon,
; 1037 : 		y_horizon,
; 1038 : 		x_10_deg_step,
; 1039 : 		y_10_deg_step,
; 1040 : 		x_adjust;
; 1041 : 
; 1042 : 	int
; 1043 : 		int_pitch,
; 1044 : 		step_direction,
; 1045 : 		loop;
; 1046 : 
; 1047 : 	char
; 1048 : 		s[20];
; 1049 : 
; 1050 : 	ASSERT (main_3d_env);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?main_3d_env@@3PAUENV_3D@@A, 0 ; main_3d_env
  00013	75 18		 jne	 SHORT $LN7@draw_pitch
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA
  0001a	83 c0 1a	 add	 eax, 26			; 0000001aH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BBKBBMJK@main_3d_env@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@draw_pitch:

; 1051 : 
; 1052 : 	//VJ 050213 bug fix scale not correct
; 1053 : 	scalefactor = global_hud_size2;

  0002d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?global_hud_size2@@3MA
  00035	f3 0f 11 45 fc	 movss	 DWORD PTR _scalefactor$[ebp], xmm0

; 1054 : 
; 1055 : 	pitch = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_PITCH);

  0003a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00041	74 0f		 je	 SHORT $LN21@draw_pitch
  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00050	eb 24		 jmp	 SHORT $LN22@draw_pitch
$LN21@draw_pitch:
  00052	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA
  00058	83 c2 1f	 add	 edx, 31			; 0000001fH
  0005b	52		 push	 edx
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006c	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN22@draw_pitch:
  00076	b9 01 00 00 00	 mov	 ecx, 1
  0007b	85 c9		 test	 ecx, ecx
  0007d	74 0c		 je	 SHORT $LN23@draw_pitch
  0007f	c7 85 60 ff ff
	ff 54 00 00 00	 mov	 DWORD PTR tv83[ebp], 84	; 00000054H
  00089	eb 24		 jmp	 SHORT $LN24@draw_pitch
$LN23@draw_pitch:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA
  00091	83 c2 1f	 add	 edx, 31			; 0000001fH
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN24@draw_pitch:
  000af	6a 54		 push	 84			; 00000054H
  000b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000b7	51		 push	 ecx
  000b8	69 95 64 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv75[ebp], 700
  000c2	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000c8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000cf	ff d1		 call	 ecx
  000d1	d9 5d f8	 fstp	 DWORD PTR _pitch$[ebp]

; 1056 : 
; 1057 : 	roll = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_ROLL);

  000d4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000db	74 0f		 je	 SHORT $LN25@draw_pitch
  000dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000ea	eb 24		 jmp	 SHORT $LN26@draw_pitch
$LN25@draw_pitch:
  000ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA
  000f2	83 c2 21	 add	 edx, 33			; 00000021H
  000f5	52		 push	 edx
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00106	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN26@draw_pitch:
  00110	b9 01 00 00 00	 mov	 ecx, 1
  00115	85 c9		 test	 ecx, ecx
  00117	74 0c		 je	 SHORT $LN27@draw_pitch
  00119	c7 85 60 ff ff
	ff 71 00 00 00	 mov	 DWORD PTR tv135[ebp], 113 ; 00000071H
  00123	eb 24		 jmp	 SHORT $LN28@draw_pitch
$LN27@draw_pitch:
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_pitch_ladder@@YGXH@Z@4JA
  0012b	83 c2 21	 add	 edx, 33			; 00000021H
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013f	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN28@draw_pitch:
  00149	6a 71		 push	 113			; 00000071H
  0014b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00151	51		 push	 ecx
  00152	69 95 64 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv95[ebp], 700
  0015c	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  00162	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00169	ff d1		 call	 ecx
  0016b	d9 5d ec	 fstp	 DWORD PTR _roll$[ebp]

; 1058 : 
; 1059 : 	mod_pitch = fmod (pitch, rad (10.0f));

  0016e	51		 push	 ecx
  0016f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e32b8c2
  00177	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017c	51		 push	 ecx
  0017d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00182	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00187	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  0018c	d9 5d f4	 fstp	 DWORD PTR _mod_pitch$[ebp]

; 1060 : 
; 1061 : 	tan_mod_pitch = -tan (mod_pitch);

  0018f	51		 push	 ecx
  00190	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _mod_pitch$[ebp]
  00195	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019a	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  0019f	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR tv633[ebp]
  001a5	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv633[ebp]
  001ad	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001b4	f3 0f 11 45 f0	 movss	 DWORD PTR _tan_mod_pitch$[ebp], xmm0

; 1062 : 
; 1063 : 	int_pitch = (int) (pitch * (1.0 / rad (10.0)));

  001b9	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _pitch$[ebp]
  001be	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4016eb167e7d81e3
  001c6	f2 0f 2c c0	 cvttsd2si eax, xmm0
  001ca	89 45 c4	 mov	 DWORD PTR _int_pitch$[ebp], eax

; 1064 : 
; 1065 : 	//
; 1066 : 	// get x and y scale factors
; 1067 : 	//
; 1068 : 
; 1069 : 	x_scale = (main_3d_env->clip_xmax - main_3d_env->clip_xmin) * 0.5;

  001cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  001d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  001d8	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  001dd	f3 0f 5c 41 30	 subss	 xmm0, DWORD PTR [ecx+48]
  001e2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001e6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  001ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001f2	f3 0f 11 45 e0	 movss	 DWORD PTR _x_scale$[ebp], xmm0

; 1070 : 	x_scale /= tan (main_3d_env->width_view_angle * 0.5);

  001f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  001fc	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00201	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00209	83 ec 08	 sub	 esp, 8
  0020c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00211	e8 00 00 00 00	 call	 _tan
  00216	83 c4 08	 add	 esp, 8
  00219	dd 9d 60 ff ff
	ff		 fstp	 QWORD PTR tv642[ebp]
  0021f	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _x_scale$[ebp]
  00224	f2 0f 5e 85 60
	ff ff ff	 divsd	 xmm0, QWORD PTR tv642[ebp]
  0022c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00230	f3 0f 11 45 e0	 movss	 DWORD PTR _x_scale$[ebp], xmm0

; 1071 : 	x_scale /= (active_2d_environment->vp.x_max - active_2d_environment->vp.x_min) * 0.5;

  00235	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  0023a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  00240	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00245	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00249	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0024d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00255	f3 0f 5a 4d e0	 cvtss2sd xmm1, DWORD PTR _x_scale$[ebp]
  0025a	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0025e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00262	f3 0f 11 45 e0	 movss	 DWORD PTR _x_scale$[ebp], xmm0

; 1072 : 	x_scale *= -sin (roll);

  00267	51		 push	 ecx
  00268	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0026d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00272	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00277	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR tv651[ebp]
  0027d	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv651[ebp]
  00285	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0028c	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _x_scale$[ebp]
  00291	f3 0f 11 45 e0	 movss	 DWORD PTR _x_scale$[ebp], xmm0

; 1073 : //VJ 050204 bug fix scale not correct
; 1074 : 	x_scale *= hud_screen_x_scale * scalefactor;

  00296	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_scale@@3MA
  0029e	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _scalefactor$[ebp]
  002a3	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _x_scale$[ebp]
  002a8	f3 0f 11 45 e0	 movss	 DWORD PTR _x_scale$[ebp], xmm0

; 1075 : 
; 1076 : 	y_scale = (main_3d_env->clip_ymax - main_3d_env->clip_ymin) * 0.5;

  002ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  002b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  002b8	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  002bd	f3 0f 5c 41 34	 subss	 xmm0, DWORD PTR [ecx+52]
  002c2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002c6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  002ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002d2	f3 0f 11 45 dc	 movss	 DWORD PTR _y_scale$[ebp], xmm0

; 1077 : 	y_scale /= tan (main_3d_env->height_view_angle * 0.5);

  002d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  002dc	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  002e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  002e9	83 ec 08	 sub	 esp, 8
  002ec	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002f1	e8 00 00 00 00	 call	 _tan
  002f6	83 c4 08	 add	 esp, 8
  002f9	dd 9d 60 ff ff
	ff		 fstp	 QWORD PTR tv663[ebp]
  002ff	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _y_scale$[ebp]
  00304	f2 0f 5e 85 60
	ff ff ff	 divsd	 xmm0, QWORD PTR tv663[ebp]
  0030c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00310	f3 0f 11 45 dc	 movss	 DWORD PTR _y_scale$[ebp], xmm0

; 1078 : 	y_scale /= (active_2d_environment->vp.y_max - active_2d_environment->vp.y_min) * 0.5;

  00315	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  0031a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  00320	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00325	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0032a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0032e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00336	f3 0f 5a 4d dc	 cvtss2sd xmm1, DWORD PTR _y_scale$[ebp]
  0033b	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0033f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00343	f3 0f 11 45 dc	 movss	 DWORD PTR _y_scale$[ebp], xmm0

; 1079 : 	y_scale *= cos (roll);

  00348	51		 push	 ecx
  00349	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0034e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00353	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00358	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR tv672[ebp]
  0035e	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv672[ebp]
  00366	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _y_scale$[ebp]
  0036b	f3 0f 11 45 dc	 movss	 DWORD PTR _y_scale$[ebp], xmm0

; 1080 : //VJ 050204 bug fix scale not correct
; 1081 : 	y_scale *= hud_screen_y_scale * scalefactor;

  00370	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_scale@@3MA
  00378	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _scalefactor$[ebp]
  0037d	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _y_scale$[ebp]
  00382	f3 0f 11 45 dc	 movss	 DWORD PTR _y_scale$[ebp], xmm0

; 1082 : 	
; 1083 : 	x_horizon = tan_mod_pitch * x_scale;

  00387	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _tan_mod_pitch$[ebp]
  0038c	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _x_scale$[ebp]
  00391	f3 0f 11 45 d8	 movss	 DWORD PTR _x_horizon$[ebp], xmm0

; 1084 : 	y_horizon = tan_mod_pitch * y_scale;

  00396	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _tan_mod_pitch$[ebp]
  0039b	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _y_scale$[ebp]
  003a0	f3 0f 11 45 d4	 movss	 DWORD PTR _y_horizon$[ebp], xmm0

; 1085 : 
; 1086 : 	x_10_deg_step = tan (rad (10.0)) * x_scale;

  003a5	83 ec 08	 sub	 esp, 8
  003a8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc6571848000000
  003b0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003b5	e8 00 00 00 00	 call	 _tan
  003ba	83 c4 08	 add	 esp, 8
  003bd	dd 9d 60 ff ff
	ff		 fstp	 QWORD PTR tv683[ebp]
  003c3	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv683[ebp]
  003cb	f3 0f 5a 4d e0	 cvtss2sd xmm1, DWORD PTR _x_scale$[ebp]
  003d0	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  003d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003d8	f3 0f 11 45 d0	 movss	 DWORD PTR _x_10_deg_step$[ebp], xmm0

; 1087 : 	y_10_deg_step = tan (rad (10.0)) * y_scale;

  003dd	83 ec 08	 sub	 esp, 8
  003e0	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc6571848000000
  003e8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003ed	e8 00 00 00 00	 call	 _tan
  003f2	83 c4 08	 add	 esp, 8
  003f5	dd 9d 60 ff ff
	ff		 fstp	 QWORD PTR tv689[ebp]
  003fb	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv689[ebp]
  00403	f3 0f 5a 4d dc	 cvtss2sd xmm1, DWORD PTR _y_scale$[ebp]
  00408	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0040c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00410	f3 0f 11 45 cc	 movss	 DWORD PTR _y_10_deg_step$[ebp], xmm0

; 1088 : 
; 1089 : 	////////////////////////////////////////
; 1090 : 	//
; 1091 : 	// draw pitch ladder
; 1092 : 	//
; 1093 : 	////////////////////////////////////////
; 1094 : 
; 1095 : 	set_mono_font_type (MONO_FONT_TYPE_6X10);

  00415	6a 04		 push	 4
  00417	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1096 : 
; 1097 : 	step_direction = -1;

  0041c	c7 45 c0 ff ff
	ff ff		 mov	 DWORD PTR _step_direction$[ebp], -1

; 1098 : 
; 1099 : 	int_pitch = limit_pitch (int_pitch + 2, &step_direction);

  00423	8d 45 c0	 lea	 eax, DWORD PTR _step_direction$[ebp]
  00426	50		 push	 eax
  00427	8b 4d c4	 mov	 ecx, DWORD PTR _int_pitch$[ebp]
  0042a	83 c1 02	 add	 ecx, 2
  0042d	51		 push	 ecx
  0042e	e8 00 00 00 00	 call	 ?limit_pitch@@YGHHPAH@Z	; limit_pitch
  00433	89 45 c4	 mov	 DWORD PTR _int_pitch$[ebp], eax

; 1100 : 
; 1101 : 	x = x_horizon + x_10_deg_step * 2.0;

  00436	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _x_horizon$[ebp]
  0043b	f3 0f 5a 4d d0	 cvtss2sd xmm1, DWORD PTR _x_10_deg_step$[ebp]
  00440	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00448	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0044c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00450	f3 0f 11 45 e8	 movss	 DWORD PTR _x$[ebp], xmm0

; 1102 : 	y = y_horizon + y_10_deg_step * 2.0;

  00455	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _y_horizon$[ebp]
  0045a	f3 0f 5a 4d cc	 cvtss2sd xmm1, DWORD PTR _y_10_deg_step$[ebp]
  0045f	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00467	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0046b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0046f	f3 0f 11 45 e4	 movss	 DWORD PTR _y$[ebp], xmm0

; 1103 : 
; 1104 : 	set_2d_instance_rotation (hud_env, roll);

  00474	51		 push	 ecx
  00475	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0047a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00484	50		 push	 eax
  00485	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1105 : 
; 1106 : 	for (loop = 0; loop < 5; loop++)

  0048a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00491	eb 09		 jmp	 SHORT $LN4@draw_pitch
$LN2@draw_pitch:
  00493	8b 45 bc	 mov	 eax, DWORD PTR _loop$[ebp]
  00496	83 c0 01	 add	 eax, 1
  00499	89 45 bc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_pitch:
  0049c	83 7d bc 05	 cmp	 DWORD PTR _loop$[ebp], 5
  004a0	0f 8d d7 0e 00
	00		 jge	 $LN3@draw_pitch

; 1107 : 	{
; 1108 : 		set_2d_instance_position (hud_env, x, y);

  004a6	51		 push	 ecx
  004a7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y$[ebp]
  004ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b1	51		 push	 ecx
  004b2	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x$[ebp]
  004b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  004c1	50		 push	 eax
  004c2	e8 00 00 00 00	 call	 ?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z ; set_2d_instance_position

; 1109 : 
; 1110 : 		if (draw_horizon_line_only)

  004c7	83 7d 08 00	 cmp	 DWORD PTR _draw_horizon_line_only$[ebp], 0
  004cb	0f 84 d9 02 00
	00		 je	 $LN8@draw_pitch

; 1111 : 		{
; 1112 : 			if (int_pitch == 0)

  004d1	83 7d c4 00	 cmp	 DWORD PTR _int_pitch$[ebp], 0
  004d5	0f 85 ca 02 00
	00		 jne	 $LN10@draw_pitch

; 1113 : 			{
; 1114 : 				draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X2, +PITCH_BAR_Y2, hud_colour);

  004db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  004e0	50		 push	 eax
  004e1	51		 push	 ecx
  004e2	0f 57 c0	 xorps	 xmm0, xmm0
  004e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ea	51		 push	 ecx
  004eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e23d70a
  004f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f8	51		 push	 ecx
  004f9	0f 57 c0	 xorps	 xmm0, xmm0
  004fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00501	51		 push	 ecx
  00502	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  0050a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1115 : 				draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X2, +PITCH_BAR_Y2, hud_colour);

  00514	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00519	50		 push	 eax
  0051a	51		 push	 ecx
  0051b	0f 57 c0	 xorps	 xmm0, xmm0
  0051e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00523	51		 push	 ecx
  00524	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be23d70a
  0052c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00531	51		 push	 ecx
  00532	0f 57 c0	 xorps	 xmm0, xmm0
  00535	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053a	51		 push	 ecx
  0053b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00543	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00548	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1116 : 
; 1117 : 				draw_2d_line (+PITCH_BAR_X3, +PITCH_BAR_Y3, +PITCH_BAR_X4, +PITCH_BAR_Y4, hud_colour);

  0054d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00552	50		 push	 eax
  00553	51		 push	 ecx
  00554	0f 57 c0	 xorps	 xmm0, xmm0
  00557	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055c	51		 push	 ecx
  0055d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6b851f
  00565	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0056a	51		 push	 ecx
  0056b	0f 57 c0	 xorps	 xmm0, xmm0
  0056e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00573	51		 push	 ecx
  00574	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e47ae14
  0057c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00581	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1118 : 				draw_2d_line (-PITCH_BAR_X3, +PITCH_BAR_Y3, -PITCH_BAR_X4, +PITCH_BAR_Y4, hud_colour);

  00586	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0058b	50		 push	 eax
  0058c	51		 push	 ecx
  0058d	0f 57 c0	 xorps	 xmm0, xmm0
  00590	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00595	51		 push	 ecx
  00596	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be6b851f
  0059e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a3	51		 push	 ecx
  005a4	0f 57 c0	 xorps	 xmm0, xmm0
  005a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ac	51		 push	 ecx
  005ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be47ae14
  005b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ba	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1119 : 
; 1120 : 				draw_2d_line (+PITCH_BAR_X5, +PITCH_BAR_Y5, +PITCH_BAR_X6, +PITCH_BAR_Y6, hud_colour);

  005bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005c4	50		 push	 eax
  005c5	51		 push	 ecx
  005c6	0f 57 c0	 xorps	 xmm0, xmm0
  005c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ce	51		 push	 ecx
  005cf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  005d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005dc	51		 push	 ecx
  005dd	0f 57 c0	 xorps	 xmm0, xmm0
  005e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e5	51		 push	 ecx
  005e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e87ae14
  005ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1121 : 				draw_2d_line (-PITCH_BAR_X5, +PITCH_BAR_Y5, -PITCH_BAR_X6, +PITCH_BAR_Y6, hud_colour);

  005f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  005fd	50		 push	 eax
  005fe	51		 push	 ecx
  005ff	0f 57 c0	 xorps	 xmm0, xmm0
  00602	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00607	51		 push	 ecx
  00608	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00610	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00615	51		 push	 ecx
  00616	0f 57 c0	 xorps	 xmm0, xmm0
  00619	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061e	51		 push	 ecx
  0061f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be87ae14
  00627	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062c	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1122 : 
; 1123 : 				draw_2d_line (+PITCH_BAR_X7, +PITCH_BAR_Y7, +PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  00631	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00636	50		 push	 eax
  00637	51		 push	 ecx
  00638	0f 57 c0	 xorps	 xmm0, xmm0
  0063b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00640	51		 push	 ecx
  00641	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ebd70a4
  00649	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064e	51		 push	 ecx
  0064f	0f 57 c0	 xorps	 xmm0, xmm0
  00652	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00657	51		 push	 ecx
  00658	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eab851f
  00660	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00665	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1124 : 				draw_2d_line (-PITCH_BAR_X7, +PITCH_BAR_Y7, -PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  0066a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0066f	50		 push	 eax
  00670	51		 push	 ecx
  00671	0f 57 c0	 xorps	 xmm0, xmm0
  00674	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00679	51		 push	 ecx
  0067a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bebd70a4
  00682	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00687	51		 push	 ecx
  00688	0f 57 c0	 xorps	 xmm0, xmm0
  0068b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00690	51		 push	 ecx
  00691	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beab851f
  00699	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1125 : 
; 1126 : 				draw_2d_line (+PITCH_BAR_X9, +PITCH_BAR_Y9, +PITCH_BAR_X13, +PITCH_BAR_Y13, hud_colour);

  006a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006a8	50		 push	 eax
  006a9	51		 push	 ecx
  006aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  006b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b7	51		 push	 ecx
  006b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ee147ae
  006c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c5	51		 push	 ecx
  006c6	0f 57 c0	 xorps	 xmm0, xmm0
  006c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ce	51		 push	 ecx
  006cf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecf5c29
  006d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006dc	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1127 : 				draw_2d_line (-PITCH_BAR_X9, +PITCH_BAR_Y9, -PITCH_BAR_X13, +PITCH_BAR_Y13, hud_colour);

  006e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  006e6	50		 push	 eax
  006e7	51		 push	 ecx
  006e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  006f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f5	51		 push	 ecx
  006f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bee147ae
  006fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00703	51		 push	 ecx
  00704	0f 57 c0	 xorps	 xmm0, xmm0
  00707	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0070c	51		 push	 ecx
  0070d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becf5c29
  00715	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0071a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1128 : 
; 1129 : 				draw_2d_line (+PITCH_BAR_X14, +PITCH_BAR_Y14, +PITCH_BAR_X15, +PITCH_BAR_Y15, hud_colour);

  0071f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00724	50		 push	 eax
  00725	51		 push	 ecx
  00726	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  0072e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00733	51		 push	 ecx
  00734	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f028f5c
  0073c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00741	51		 push	 ecx
  00742	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  0074a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0074f	51		 push	 ecx
  00750	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ef33333
  00758	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0075d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1130 : 				draw_2d_line (-PITCH_BAR_X14, +PITCH_BAR_Y14, -PITCH_BAR_X15, +PITCH_BAR_Y15, hud_colour);

  00762	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00767	50		 push	 eax
  00768	51		 push	 ecx
  00769	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00771	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00776	51		 push	 ecx
  00777	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf028f5c
  0077f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00784	51		 push	 ecx
  00785	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  0078d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00792	51		 push	 ecx
  00793	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bef33333
  0079b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN10@draw_pitch:

; 1131 : 			}
; 1132 : 		}
; 1133 : 		else

  007a5	e9 9d 0b 00 00	 jmp	 $LN5@draw_pitch
$LN8@draw_pitch:

; 1134 : 		{
; 1135 : 			switch (int_pitch)

  007aa	8b 45 c4	 mov	 eax, DWORD PTR _int_pitch$[ebp]
  007ad	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv306[ebp], eax
  007b3	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv306[ebp]
  007b9	83 c1 09	 add	 ecx, 9
  007bc	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv306[ebp], ecx
  007c2	83 bd 64 ff ff
	ff 12		 cmp	 DWORD PTR tv306[ebp], 18 ; 00000012H
  007c9	0f 87 78 0b 00
	00		 ja	 $LN5@draw_pitch
  007cf	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR tv306[ebp]
  007d5	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN29@draw_pitch[edx]
  007dc	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN30@draw_pitch[eax*4]
$LN11@draw_pitch:

; 1136 : 			{
; 1137 : 				////////////////////////////////////////
; 1138 : 				case 0:
; 1139 : 				////////////////////////////////////////
; 1140 : 				{
; 1141 : 					draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X9, +PITCH_BAR_Y9, hud_colour);

  007e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  007e8	50		 push	 eax
  007e9	51		 push	 ecx
  007ea	0f 57 c0	 xorps	 xmm0, xmm0
  007ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f2	51		 push	 ecx
  007f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecf5c29
  007fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00800	51		 push	 ecx
  00801	0f 57 c0	 xorps	 xmm0, xmm0
  00804	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00809	51		 push	 ecx
  0080a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00812	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00817	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1142 : 					draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X9, +PITCH_BAR_Y9, hud_colour);

  0081c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00821	50		 push	 eax
  00822	51		 push	 ecx
  00823	0f 57 c0	 xorps	 xmm0, xmm0
  00826	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0082b	51		 push	 ecx
  0082c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becf5c29
  00834	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00839	51		 push	 ecx
  0083a	0f 57 c0	 xorps	 xmm0, xmm0
  0083d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00842	51		 push	 ecx
  00843	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  0084b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00850	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1143 : 
; 1144 : 					break;

  00855	e9 ed 0a 00 00	 jmp	 $LN5@draw_pitch
$LN12@draw_pitch:

; 1145 : 				}
; 1146 : 				////////////////////////////////////////
; 1147 : 				case 1:
; 1148 : 				case 2:
; 1149 : 				case 3:
; 1150 : 				case 4:
; 1151 : 				case 5:
; 1152 : 				case 6:
; 1153 : 				case 7:
; 1154 : 				case 8:
; 1155 : 				////////////////////////////////////////
; 1156 : 				{
; 1157 : 					if (step_direction == -1)

  0085a	83 7d c0 ff	 cmp	 DWORD PTR _step_direction$[ebp], -1
  0085e	0f 85 f3 00 00
	00		 jne	 $LN13@draw_pitch

; 1158 : 					{
; 1159 : 						draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  00864	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00869	50		 push	 eax
  0086a	51		 push	 ecx
  0086b	0f 57 c0	 xorps	 xmm0, xmm0
  0086e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00873	51		 push	 ecx
  00874	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ebd70a4
  0087c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00881	51		 push	 ecx
  00882	0f 57 c0	 xorps	 xmm0, xmm0
  00885	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0088a	51		 push	 ecx
  0088b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00893	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00898	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1160 : 						draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  0089d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  008a2	50		 push	 eax
  008a3	51		 push	 ecx
  008a4	0f 57 c0	 xorps	 xmm0, xmm0
  008a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ac	51		 push	 ecx
  008ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bebd70a4
  008b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ba	51		 push	 ecx
  008bb	0f 57 c0	 xorps	 xmm0, xmm0
  008be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008c3	51		 push	 ecx
  008c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  008cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008d1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1161 : 
; 1162 : 						draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X10, +PITCH_BAR_Y10, hud_colour);

  008d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  008db	50		 push	 eax
  008dc	51		 push	 ecx
  008dd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  008e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ea	51		 push	 ecx
  008eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  008f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008f8	51		 push	 ecx
  008f9	0f 57 c0	 xorps	 xmm0, xmm0
  008fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00901	51		 push	 ecx
  00902	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  0090a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0090f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1163 : 						draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X10, +PITCH_BAR_Y10, hud_colour);

  00914	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00919	50		 push	 eax
  0091a	51		 push	 ecx
  0091b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00923	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00928	51		 push	 ecx
  00929	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00931	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00936	51		 push	 ecx
  00937	0f 57 c0	 xorps	 xmm0, xmm0
  0093a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0093f	51		 push	 ecx
  00940	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00948	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0094d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1164 : 					}
; 1165 : 					else

  00952	e9 0c 01 00 00	 jmp	 $LN14@draw_pitch
$LN13@draw_pitch:

; 1166 : 					{
; 1167 : 						draw_2d_line (-PITCH_BAR_X1, -PITCH_BAR_Y1, -PITCH_BAR_X8, -PITCH_BAR_Y8, hud_colour);

  00957	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0095c	50		 push	 eax
  0095d	51		 push	 ecx
  0095e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00966	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0096b	51		 push	 ecx
  0096c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bebd70a4
  00974	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00979	51		 push	 ecx
  0097a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00982	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00987	51		 push	 ecx
  00988	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00990	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00995	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1168 : 						draw_2d_line (+PITCH_BAR_X1, -PITCH_BAR_Y1, +PITCH_BAR_X8, -PITCH_BAR_Y8, hud_colour);

  0099a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0099f	50		 push	 eax
  009a0	51		 push	 ecx
  009a1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  009a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ae	51		 push	 ecx
  009af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ebd70a4
  009b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009bc	51		 push	 ecx
  009bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  009c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ca	51		 push	 ecx
  009cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  009d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009d8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1169 : 
; 1170 : 						draw_2d_line (-PITCH_BAR_X1, -PITCH_BAR_Y1, -PITCH_BAR_X10, -PITCH_BAR_Y10, hud_colour);

  009dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  009e2	50		 push	 eax
  009e3	51		 push	 ecx
  009e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  009ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009f1	51		 push	 ecx
  009f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  009fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ff	51		 push	 ecx
  00a00	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00a08	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a0d	51		 push	 ecx
  00a0e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00a16	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a1b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1171 : 						draw_2d_line (+PITCH_BAR_X1, -PITCH_BAR_Y1, +PITCH_BAR_X10, -PITCH_BAR_Y10, hud_colour);

  00a20	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00a25	50		 push	 eax
  00a26	51		 push	 ecx
  00a27	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00a2f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a34	51		 push	 ecx
  00a35	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00a3d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a42	51		 push	 ecx
  00a43	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00a4b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a50	51		 push	 ecx
  00a51	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00a59	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a5e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN14@draw_pitch:

; 1172 : 					}
; 1173 : 
; 1174 : 					sprintf (s, "%d0", int_pitch);

  00a63	8b 45 c4	 mov	 eax, DWORD PTR _int_pitch$[ebp]
  00a66	50		 push	 eax
  00a67	68 00 00 00 00	 push	 OFFSET ??_C@_03NJMPCKOA@?$CFd0@
  00a6c	8d 4d a8	 lea	 ecx, DWORD PTR _s$[ebp]
  00a6f	51		 push	 ecx
  00a70	e8 00 00 00 00	 call	 _sprintf
  00a75	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1175 : 
; 1176 : 					x_adjust = get_mono_font_string_width (s) * -0.5 - 1.0;

  00a78	8d 45 a8	 lea	 eax, DWORD PTR _s$[ebp]
  00a7b	50		 push	 eax
  00a7c	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00a81	dd 9d 60 ff ff
	ff		 fstp	 QWORD PTR tv911[ebp]
  00a87	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv911[ebp]
  00a8f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfe0000000000000
  00a97	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00a9f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00aa3	f3 0f 11 45 c8	 movss	 DWORD PTR _x_adjust$[ebp], xmm0

; 1177 : 
; 1178 : 					set_2d_mono_font_position (+PITCH_BAR_X11, +PITCH_BAR_Y11);

  00aa8	51		 push	 ecx
  00aa9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00ab1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ab6	51		 push	 ecx
  00ab7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eab851f
  00abf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ac4	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1179 : 
; 1180 : 					set_mono_font_rel_position (x_adjust, PITCH_CHAR_Y_ADJUST);

  00ac9	51		 push	 ecx
  00aca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  00ad2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ad7	51		 push	 ecx
  00ad8	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _x_adjust$[ebp]
  00add	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ae2	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1181 : 
; 1182 : 					print_mono_font_string (s);

  00ae7	8d 45 a8	 lea	 eax, DWORD PTR _s$[ebp]
  00aea	50		 push	 eax
  00aeb	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1183 : 
; 1184 : 					set_2d_mono_font_position (-PITCH_BAR_X11, +PITCH_BAR_Y11);

  00af0	51		 push	 ecx
  00af1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00af9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00afe	51		 push	 ecx
  00aff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beab851f
  00b07	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b0c	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1185 : 
; 1186 : 					set_mono_font_rel_position (x_adjust, PITCH_CHAR_Y_ADJUST);

  00b11	51		 push	 ecx
  00b12	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  00b1a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b1f	51		 push	 ecx
  00b20	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _x_adjust$[ebp]
  00b25	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b2a	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1187 : 
; 1188 : 					print_mono_font_string (s);

  00b2f	8d 45 a8	 lea	 eax, DWORD PTR _s$[ebp]
  00b32	50		 push	 eax
  00b33	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1189 : 
; 1190 : 					break;

  00b38	e9 0a 08 00 00	 jmp	 $LN5@draw_pitch
$LN15@draw_pitch:

; 1191 : 				}
; 1192 : 
; 1193 : 				////////////////////////////////////////
; 1194 : 				case 9:
; 1195 : 				////////////////////////////////////////
; 1196 : 				{
; 1197 : 					draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  00b3d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00b42	50		 push	 eax
  00b43	51		 push	 ecx
  00b44	0f 57 c0	 xorps	 xmm0, xmm0
  00b47	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b4c	51		 push	 ecx
  00b4d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ebd70a4
  00b55	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b5a	51		 push	 ecx
  00b5b	0f 57 c0	 xorps	 xmm0, xmm0
  00b5e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b63	51		 push	 ecx
  00b64	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00b6c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b71	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1198 : 					draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  00b76	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00b7b	50		 push	 eax
  00b7c	51		 push	 ecx
  00b7d	0f 57 c0	 xorps	 xmm0, xmm0
  00b80	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b85	51		 push	 ecx
  00b86	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bebd70a4
  00b8e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b93	51		 push	 ecx
  00b94	0f 57 c0	 xorps	 xmm0, xmm0
  00b97	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b9c	51		 push	 ecx
  00b9d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00ba5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00baa	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1199 : 
; 1200 : 					break;

  00baf	e9 93 07 00 00	 jmp	 $LN5@draw_pitch
$LN16@draw_pitch:

; 1201 : 				}
; 1202 : 
; 1203 : 				////////////////////////////////////////
; 1204 : 				case -1:
; 1205 : 				case -2:
; 1206 : 				case -3:
; 1207 : 				case -4:
; 1208 : 				case -5:
; 1209 : 				case -6:
; 1210 : 				case -7:
; 1211 : 				case -8:
; 1212 : 				////////////////////////////////////////
; 1213 : 				{
; 1214 : 					if (step_direction == -1)

  00bb4	83 7d c0 ff	 cmp	 DWORD PTR _step_direction$[ebp], -1
  00bb8	0f 85 49 02 00
	00		 jne	 $LN17@draw_pitch

; 1215 : 					{
; 1216 : 						draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X2, +PITCH_BAR_Y2, hud_colour);

  00bbe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00bc3	50		 push	 eax
  00bc4	51		 push	 ecx
  00bc5	0f 57 c0	 xorps	 xmm0, xmm0
  00bc8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bcd	51		 push	 ecx
  00bce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e23d70a
  00bd6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bdb	51		 push	 ecx
  00bdc	0f 57 c0	 xorps	 xmm0, xmm0
  00bdf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00be4	51		 push	 ecx
  00be5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00bed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bf2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1217 : 						draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X2, +PITCH_BAR_Y2, hud_colour);

  00bf7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00bfc	50		 push	 eax
  00bfd	51		 push	 ecx
  00bfe	0f 57 c0	 xorps	 xmm0, xmm0
  00c01	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c06	51		 push	 ecx
  00c07	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be23d70a
  00c0f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c14	51		 push	 ecx
  00c15	0f 57 c0	 xorps	 xmm0, xmm0
  00c18	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c1d	51		 push	 ecx
  00c1e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00c26	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c2b	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1218 : 
; 1219 : 						draw_2d_line (+PITCH_BAR_X3, +PITCH_BAR_Y3, +PITCH_BAR_X4, +PITCH_BAR_Y4, hud_colour);

  00c30	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00c35	50		 push	 eax
  00c36	51		 push	 ecx
  00c37	0f 57 c0	 xorps	 xmm0, xmm0
  00c3a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c3f	51		 push	 ecx
  00c40	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6b851f
  00c48	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c4d	51		 push	 ecx
  00c4e	0f 57 c0	 xorps	 xmm0, xmm0
  00c51	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c56	51		 push	 ecx
  00c57	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e47ae14
  00c5f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c64	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1220 : 						draw_2d_line (-PITCH_BAR_X3, +PITCH_BAR_Y3, -PITCH_BAR_X4, +PITCH_BAR_Y4, hud_colour);

  00c69	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00c6e	50		 push	 eax
  00c6f	51		 push	 ecx
  00c70	0f 57 c0	 xorps	 xmm0, xmm0
  00c73	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c78	51		 push	 ecx
  00c79	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be6b851f
  00c81	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c86	51		 push	 ecx
  00c87	0f 57 c0	 xorps	 xmm0, xmm0
  00c8a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c8f	51		 push	 ecx
  00c90	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be47ae14
  00c98	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c9d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1221 : 
; 1222 : 						draw_2d_line (+PITCH_BAR_X5, +PITCH_BAR_Y5, +PITCH_BAR_X6, +PITCH_BAR_Y6, hud_colour);

  00ca2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00ca7	50		 push	 eax
  00ca8	51		 push	 ecx
  00ca9	0f 57 c0	 xorps	 xmm0, xmm0
  00cac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cb1	51		 push	 ecx
  00cb2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  00cba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cbf	51		 push	 ecx
  00cc0	0f 57 c0	 xorps	 xmm0, xmm0
  00cc3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cc8	51		 push	 ecx
  00cc9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e87ae14
  00cd1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cd6	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1223 : 						draw_2d_line (-PITCH_BAR_X5, +PITCH_BAR_Y5, -PITCH_BAR_X6, +PITCH_BAR_Y6, hud_colour);

  00cdb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00ce0	50		 push	 eax
  00ce1	51		 push	 ecx
  00ce2	0f 57 c0	 xorps	 xmm0, xmm0
  00ce5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cea	51		 push	 ecx
  00ceb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00cf3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cf8	51		 push	 ecx
  00cf9	0f 57 c0	 xorps	 xmm0, xmm0
  00cfc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d01	51		 push	 ecx
  00d02	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be87ae14
  00d0a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d0f	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1224 : 
; 1225 : 						draw_2d_line (+PITCH_BAR_X7, +PITCH_BAR_Y7, +PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  00d14	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00d19	50		 push	 eax
  00d1a	51		 push	 ecx
  00d1b	0f 57 c0	 xorps	 xmm0, xmm0
  00d1e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d23	51		 push	 ecx
  00d24	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ebd70a4
  00d2c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d31	51		 push	 ecx
  00d32	0f 57 c0	 xorps	 xmm0, xmm0
  00d35	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d3a	51		 push	 ecx
  00d3b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eab851f
  00d43	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d48	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1226 : 						draw_2d_line (-PITCH_BAR_X7, +PITCH_BAR_Y7, -PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  00d4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00d52	50		 push	 eax
  00d53	51		 push	 ecx
  00d54	0f 57 c0	 xorps	 xmm0, xmm0
  00d57	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d5c	51		 push	 ecx
  00d5d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bebd70a4
  00d65	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d6a	51		 push	 ecx
  00d6b	0f 57 c0	 xorps	 xmm0, xmm0
  00d6e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d73	51		 push	 ecx
  00d74	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beab851f
  00d7c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d81	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1227 : 
; 1228 : 						draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X10, +PITCH_BAR_Y10, hud_colour);

  00d86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00d8b	50		 push	 eax
  00d8c	51		 push	 ecx
  00d8d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00d95	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d9a	51		 push	 ecx
  00d9b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00da3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00da8	51		 push	 ecx
  00da9	0f 57 c0	 xorps	 xmm0, xmm0
  00dac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00db1	51		 push	 ecx
  00db2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00dba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dbf	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1229 : 						draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X10, +PITCH_BAR_Y10, hud_colour);

  00dc4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00dc9	50		 push	 eax
  00dca	51		 push	 ecx
  00dcb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00dd3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dd8	51		 push	 ecx
  00dd9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00de1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00de6	51		 push	 ecx
  00de7	0f 57 c0	 xorps	 xmm0, xmm0
  00dea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00def	51		 push	 ecx
  00df0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00df8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dfd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1230 : 					}
; 1231 : 					else

  00e02	e9 9e 02 00 00	 jmp	 $LN18@draw_pitch
$LN17@draw_pitch:

; 1232 : 					{
; 1233 : 						draw_2d_line (-PITCH_BAR_X1, -PITCH_BAR_Y1, -PITCH_BAR_X2, -PITCH_BAR_Y2, hud_colour);

  00e07	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00e0c	50		 push	 eax
  00e0d	51		 push	 ecx
  00e0e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00e16	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e1b	51		 push	 ecx
  00e1c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be23d70a
  00e24	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e29	51		 push	 ecx
  00e2a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00e32	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e37	51		 push	 ecx
  00e38	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  00e40	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e45	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1234 : 						draw_2d_line (+PITCH_BAR_X1, -PITCH_BAR_Y1, +PITCH_BAR_X2, -PITCH_BAR_Y2, hud_colour);

  00e4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00e4f	50		 push	 eax
  00e50	51		 push	 ecx
  00e51	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00e59	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e5e	51		 push	 ecx
  00e5f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e23d70a
  00e67	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e6c	51		 push	 ecx
  00e6d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00e75	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e7a	51		 push	 ecx
  00e7b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  00e83	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e88	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1235 : 
; 1236 : 						draw_2d_line (-PITCH_BAR_X3, -PITCH_BAR_Y3, -PITCH_BAR_X4, -PITCH_BAR_Y4, hud_colour);

  00e8d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00e92	50		 push	 eax
  00e93	51		 push	 ecx
  00e94	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00e9c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ea1	51		 push	 ecx
  00ea2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be6b851f
  00eaa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00eaf	51		 push	 ecx
  00eb0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00eb8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ebd	51		 push	 ecx
  00ebe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be47ae14
  00ec6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ecb	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1237 : 						draw_2d_line (+PITCH_BAR_X3, -PITCH_BAR_Y3, +PITCH_BAR_X4, -PITCH_BAR_Y4, hud_colour);

  00ed0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00ed5	50		 push	 eax
  00ed6	51		 push	 ecx
  00ed7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00edf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ee4	51		 push	 ecx
  00ee5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6b851f
  00eed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ef2	51		 push	 ecx
  00ef3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00efb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f00	51		 push	 ecx
  00f01	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e47ae14
  00f09	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f0e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1238 : 
; 1239 : 						draw_2d_line (-PITCH_BAR_X5, -PITCH_BAR_Y5, -PITCH_BAR_X6, -PITCH_BAR_Y6, hud_colour);

  00f13	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00f18	50		 push	 eax
  00f19	51		 push	 ecx
  00f1a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00f22	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f27	51		 push	 ecx
  00f28	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00f30	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f35	51		 push	 ecx
  00f36	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00f3e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f43	51		 push	 ecx
  00f44	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be87ae14
  00f4c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f51	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1240 : 						draw_2d_line (+PITCH_BAR_X5, -PITCH_BAR_Y5, +PITCH_BAR_X6, -PITCH_BAR_Y6, hud_colour);

  00f56	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00f5b	50		 push	 eax
  00f5c	51		 push	 ecx
  00f5d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00f65	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f6a	51		 push	 ecx
  00f6b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  00f73	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f78	51		 push	 ecx
  00f79	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00f81	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f86	51		 push	 ecx
  00f87	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e87ae14
  00f8f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f94	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1241 : 
; 1242 : 						draw_2d_line (-PITCH_BAR_X7, -PITCH_BAR_Y7, -PITCH_BAR_X8, -PITCH_BAR_Y8, hud_colour);

  00f99	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00f9e	50		 push	 eax
  00f9f	51		 push	 ecx
  00fa0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00fa8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fad	51		 push	 ecx
  00fae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bebd70a4
  00fb6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fbb	51		 push	 ecx
  00fbc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00fc4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fc9	51		 push	 ecx
  00fca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beab851f
  00fd2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fd7	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1243 : 						draw_2d_line (+PITCH_BAR_X7, -PITCH_BAR_Y7, +PITCH_BAR_X8, -PITCH_BAR_Y8, hud_colour);

  00fdc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00fe1	50		 push	 eax
  00fe2	51		 push	 ecx
  00fe3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  00feb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ff0	51		 push	 ecx
  00ff1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ebd70a4
  00ff9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ffe	51		 push	 ecx
  00fff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  01007	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0100c	51		 push	 ecx
  0100d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eab851f
  01015	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0101a	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1244 : 
; 1245 : 						draw_2d_line (-PITCH_BAR_X1, -PITCH_BAR_Y1, -PITCH_BAR_X10, -PITCH_BAR_Y10, hud_colour);

  0101f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  01024	50		 push	 eax
  01025	51		 push	 ecx
  01026	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0102e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01033	51		 push	 ecx
  01034	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  0103c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01041	51		 push	 ecx
  01042	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  0104a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0104f	51		 push	 ecx
  01050	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  01058	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0105d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1246 : 						draw_2d_line (+PITCH_BAR_X1, -PITCH_BAR_Y1, +PITCH_BAR_X10, -PITCH_BAR_Y10, hud_colour);

  01062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  01067	50		 push	 eax
  01068	51		 push	 ecx
  01069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  01071	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01076	51		 push	 ecx
  01077	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  0107f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01084	51		 push	 ecx
  01085	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@80000000
  0108d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01092	51		 push	 ecx
  01093	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  0109b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010a0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN18@draw_pitch:

; 1247 : 					}
; 1248 : 
; 1249 : 					sprintf (s, "%d0", int_pitch);

  010a5	8b 45 c4	 mov	 eax, DWORD PTR _int_pitch$[ebp]
  010a8	50		 push	 eax
  010a9	68 00 00 00 00	 push	 OFFSET ??_C@_03NJMPCKOA@?$CFd0@
  010ae	8d 4d a8	 lea	 ecx, DWORD PTR _s$[ebp]
  010b1	51		 push	 ecx
  010b2	e8 00 00 00 00	 call	 _sprintf
  010b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1250 : 
; 1251 : 					x_adjust = get_mono_font_string_width (s) * -0.5 - 1.0;

  010ba	8d 45 a8	 lea	 eax, DWORD PTR _s$[ebp]
  010bd	50		 push	 eax
  010be	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  010c3	dd 9d 60 ff ff
	ff		 fstp	 QWORD PTR tv1135[ebp]
  010c9	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv1135[ebp]
  010d1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfe0000000000000
  010d9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  010e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  010e5	f3 0f 11 45 c8	 movss	 DWORD PTR _x_adjust$[ebp], xmm0

; 1252 : 
; 1253 : 					set_2d_mono_font_position (+PITCH_BAR_X12, +PITCH_BAR_Y12);

  010ea	51		 push	 ecx
  010eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  010f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010f8	51		 push	 ecx
  010f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eab851f
  01101	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01106	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1254 : 
; 1255 : 					set_mono_font_rel_position (x_adjust, PITCH_CHAR_Y_ADJUST);

  0110b	51		 push	 ecx
  0110c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  01114	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01119	51		 push	 ecx
  0111a	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _x_adjust$[ebp]
  0111f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01124	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1256 : 
; 1257 : 					print_mono_font_string (s);

  01129	8d 45 a8	 lea	 eax, DWORD PTR _s$[ebp]
  0112c	50		 push	 eax
  0112d	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1258 : 
; 1259 : 					set_2d_mono_font_position (-PITCH_BAR_X12, +PITCH_BAR_Y12);

  01132	51		 push	 ecx
  01133	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0113b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01140	51		 push	 ecx
  01141	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beab851f
  01149	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0114e	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1260 : 
; 1261 : 					set_mono_font_rel_position (x_adjust, PITCH_CHAR_Y_ADJUST);

  01153	51		 push	 ecx
  01154	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0400000
  0115c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01161	51		 push	 ecx
  01162	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _x_adjust$[ebp]
  01167	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0116c	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1262 : 
; 1263 : 					print_mono_font_string (s);

  01171	8d 45 a8	 lea	 eax, DWORD PTR _s$[ebp]
  01174	50		 push	 eax
  01175	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1264 : 
; 1265 : 					break;

  0117a	e9 c8 01 00 00	 jmp	 $LN5@draw_pitch
$LN19@draw_pitch:

; 1266 : 				}
; 1267 : 
; 1268 : 				////////////////////////////////////////
; 1269 : 				case -9:
; 1270 : 				////////////////////////////////////////
; 1271 : 				{
; 1272 : 					draw_2d_line (+PITCH_BAR_X1, +PITCH_BAR_Y1, +PITCH_BAR_X2, +PITCH_BAR_Y2, hud_colour);

  0117f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  01184	50		 push	 eax
  01185	51		 push	 ecx
  01186	0f 57 c0	 xorps	 xmm0, xmm0
  01189	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0118e	51		 push	 ecx
  0118f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e23d70a
  01197	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0119c	51		 push	 ecx
  0119d	0f 57 c0	 xorps	 xmm0, xmm0
  011a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011a5	51		 push	 ecx
  011a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e000000
  011ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011b3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1273 : 					draw_2d_line (-PITCH_BAR_X1, +PITCH_BAR_Y1, -PITCH_BAR_X2, +PITCH_BAR_Y2, hud_colour);

  011b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  011bd	50		 push	 eax
  011be	51		 push	 ecx
  011bf	0f 57 c0	 xorps	 xmm0, xmm0
  011c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011c7	51		 push	 ecx
  011c8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be23d70a
  011d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011d5	51		 push	 ecx
  011d6	0f 57 c0	 xorps	 xmm0, xmm0
  011d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011de	51		 push	 ecx
  011df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  011e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011ec	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1274 : 
; 1275 : 					draw_2d_line (+PITCH_BAR_X3, +PITCH_BAR_Y3, +PITCH_BAR_X4, +PITCH_BAR_Y4, hud_colour);

  011f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  011f6	50		 push	 eax
  011f7	51		 push	 ecx
  011f8	0f 57 c0	 xorps	 xmm0, xmm0
  011fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01200	51		 push	 ecx
  01201	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6b851f
  01209	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0120e	51		 push	 ecx
  0120f	0f 57 c0	 xorps	 xmm0, xmm0
  01212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01217	51		 push	 ecx
  01218	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e47ae14
  01220	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01225	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1276 : 					draw_2d_line (-PITCH_BAR_X3, +PITCH_BAR_Y3, -PITCH_BAR_X4, +PITCH_BAR_Y4, hud_colour);

  0122a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0122f	50		 push	 eax
  01230	51		 push	 ecx
  01231	0f 57 c0	 xorps	 xmm0, xmm0
  01234	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01239	51		 push	 ecx
  0123a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be6b851f
  01242	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01247	51		 push	 ecx
  01248	0f 57 c0	 xorps	 xmm0, xmm0
  0124b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01250	51		 push	 ecx
  01251	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be47ae14
  01259	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0125e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1277 : 
; 1278 : 					draw_2d_line (+PITCH_BAR_X5, +PITCH_BAR_Y5, +PITCH_BAR_X6, +PITCH_BAR_Y6, hud_colour);

  01263	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  01268	50		 push	 eax
  01269	51		 push	 ecx
  0126a	0f 57 c0	 xorps	 xmm0, xmm0
  0126d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01272	51		 push	 ecx
  01273	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  0127b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01280	51		 push	 ecx
  01281	0f 57 c0	 xorps	 xmm0, xmm0
  01284	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01289	51		 push	 ecx
  0128a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e87ae14
  01292	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01297	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1279 : 					draw_2d_line (-PITCH_BAR_X5, +PITCH_BAR_Y5, -PITCH_BAR_X6, +PITCH_BAR_Y6, hud_colour);

  0129c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  012a1	50		 push	 eax
  012a2	51		 push	 ecx
  012a3	0f 57 c0	 xorps	 xmm0, xmm0
  012a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012ab	51		 push	 ecx
  012ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  012b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012b9	51		 push	 ecx
  012ba	0f 57 c0	 xorps	 xmm0, xmm0
  012bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012c2	51		 push	 ecx
  012c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be87ae14
  012cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012d0	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1280 : 
; 1281 : 					draw_2d_line (+PITCH_BAR_X7, +PITCH_BAR_Y7, +PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  012d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  012da	50		 push	 eax
  012db	51		 push	 ecx
  012dc	0f 57 c0	 xorps	 xmm0, xmm0
  012df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012e4	51		 push	 ecx
  012e5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ebd70a4
  012ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012f2	51		 push	 ecx
  012f3	0f 57 c0	 xorps	 xmm0, xmm0
  012f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012fb	51		 push	 ecx
  012fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eab851f
  01304	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01309	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1282 : 					draw_2d_line (-PITCH_BAR_X7, +PITCH_BAR_Y7, -PITCH_BAR_X8, +PITCH_BAR_Y8, hud_colour);

  0130e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  01313	50		 push	 eax
  01314	51		 push	 ecx
  01315	0f 57 c0	 xorps	 xmm0, xmm0
  01318	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0131d	51		 push	 ecx
  0131e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bebd70a4
  01326	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0132b	51		 push	 ecx
  0132c	0f 57 c0	 xorps	 xmm0, xmm0
  0132f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01334	51		 push	 ecx
  01335	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beab851f
  0133d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01342	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN5@draw_pitch:

; 1283 : 
; 1284 : 					break;
; 1285 : 				}
; 1286 : 			}
; 1287 : 		}
; 1288 : 
; 1289 : 		int_pitch = limit_pitch (int_pitch + step_direction, &step_direction);

  01347	8d 45 c0	 lea	 eax, DWORD PTR _step_direction$[ebp]
  0134a	50		 push	 eax
  0134b	8b 4d c4	 mov	 ecx, DWORD PTR _int_pitch$[ebp]
  0134e	03 4d c0	 add	 ecx, DWORD PTR _step_direction$[ebp]
  01351	51		 push	 ecx
  01352	e8 00 00 00 00	 call	 ?limit_pitch@@YGHHPAH@Z	; limit_pitch
  01357	89 45 c4	 mov	 DWORD PTR _int_pitch$[ebp], eax

; 1290 : 
; 1291 : 		x -= x_10_deg_step;

  0135a	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0135f	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _x_10_deg_step$[ebp]
  01364	f3 0f 11 45 e8	 movss	 DWORD PTR _x$[ebp], xmm0

; 1292 : 		y -= y_10_deg_step;

  01369	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y$[ebp]
  0136e	f3 0f 5c 45 cc	 subss	 xmm0, DWORD PTR _y_10_deg_step$[ebp]
  01373	f3 0f 11 45 e4	 movss	 DWORD PTR _y$[ebp], xmm0

; 1293 : 	}

  01378	e9 16 f1 ff ff	 jmp	 $LN2@draw_pitch
$LN3@draw_pitch:

; 1294 : 
; 1295 : 	reset_2d_instance (hud_env);

  0137d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  01382	50		 push	 eax
  01383	e8 00 00 00 00	 call	 ?reset_2d_instance@@YGXPAUENV_2D@@@Z ; reset_2d_instance

; 1296 : }

  01388	5f		 pop	 edi
  01389	5e		 pop	 esi
  0138a	5b		 pop	 ebx
  0138b	8b e5		 mov	 esp, ebp
  0138d	5d		 pop	 ebp
  0138e	c2 04 00	 ret	 4
  01391	0f 1f 00	 npad	 3
$LN30@draw_pitch:
  01394	00 00 00 00	 DD	 $LN19@draw_pitch
  01398	00 00 00 00	 DD	 $LN16@draw_pitch
  0139c	00 00 00 00	 DD	 $LN11@draw_pitch
  013a0	00 00 00 00	 DD	 $LN12@draw_pitch
  013a4	00 00 00 00	 DD	 $LN15@draw_pitch
$LN29@draw_pitch:
  013a8	00		 DB	 0
  013a9	01		 DB	 1
  013aa	01		 DB	 1
  013ab	01		 DB	 1
  013ac	01		 DB	 1
  013ad	01		 DB	 1
  013ae	01		 DB	 1
  013af	01		 DB	 1
  013b0	01		 DB	 1
  013b1	02		 DB	 2
  013b2	03		 DB	 3
  013b3	03		 DB	 3
  013b4	03		 DB	 3
  013b5	03		 DB	 3
  013b6	03		 DB	 3
  013b7	03		 DB	 3
  013b8	03		 DB	 3
  013b9	03		 DB	 3
  013ba	04		 DB	 4
?draw_pitch_ladder@@YGXH@Z ENDP				; draw_pitch_ladder
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xtgmath.h
;	COMDAT ??$fmod@MHX@@YGNMH@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$fmod@MHX@@YGNMH@Z PROC				; fmod<float,int,void>, COMDAT

; 88   : _GENERIC_MATH2(fmod, _CRTDEFAULT)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	f2 0f 2a 45 0c	 cvtsi2sd xmm0, DWORD PTR __Right$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Left$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
??$fmod@MHX@@YGNMH@Z ENDP				; fmod<float,int,void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_flight_path_marker@@YGXXZ
_TEXT	SEGMENT
tv511 = -228						; size = 4
tv601 = -224						; size = 4
tv499 = -224						; size = 4
tv492 = -224						; size = 4
tv144 = -224						; size = 4
tv92 = -224						; size = 4
tv599 = -220						; size = 4
tv597 = -220						; size = 4
tv505 = -220						; size = 4
tv467 = -220						; size = 4
tv460 = -220						; size = 4
tv136 = -220						; size = 4
tv84 = -220						; size = 4
_y2$1 = -152						; size = 4
_x2$2 = -148						; size = 4
_y2$3 = -144						; size = 4
_x2$4 = -140						; size = 4
_ystep$5 = -136						; size = 4
_xstep$6 = -132						; size = 4
_y$7 = -128						; size = 4
_x$8 = -124						; size = 4
_step$9 = -120						; size = 4
_right_hud_y$ = -116					; size = 4
_right_hud_x$ = -112					; size = 4
_left_hud_y$ = -108					; size = 4
_left_hud_x$ = -104					; size = 4
_horizon_hud_y$ = -100					; size = 4
_horizon_hud_x$ = -96					; size = 4
_horizon_deg$ = -92					; size = 4
_horizon_pt_y$ = -88					; size = 4
_horizon_pt_x$ = -84					; size = 4
_line_climb_ratio$ = -80				; size = 4
_horizon_angle$ = -76					; size = 4
_fpm_y_offset$ = -72					; size = 4
_fpm_x_offset$ = -68					; size = 4
_sin_roll$ = -64					; size = 4
_cos_roll$ = -60					; size = 4
_fpm_hud_y_offset$ = -56				; size = 4
_fpm_hud_x_offset$ = -52				; size = 4
_hud_pixel_ratio$ = -48					; size = 4
_fpm_y_pixel_offset$ = -44				; size = 4
_fpm_x_pixel_offset$ = -40				; size = 4
_focal_length$ = -36					; size = 4
_pixels_per_rad$ = -32					; size = 4
_roll$ = -28						; size = 4
_pitch$ = -24						; size = 4
_flight_vector_y$ = -20					; size = 4
_flight_vector_x$ = -16					; size = 4
_vertical_airspeed$ = -12				; size = 4
_sideways_airspeed$ = -8				; size = 4
_forward_airspeed$ = -4					; size = 4
?draw_flight_path_marker@@YGXXZ PROC			; draw_flight_path_marker, COMDAT

; 908  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 909  : 	float forward_airspeed, sideways_airspeed, vertical_airspeed, flight_vector_x, flight_vector_y;
; 910  : 	float pitch, roll, pixels_per_rad, focal_length;
; 911  : 	float fpm_x_pixel_offset, fpm_y_pixel_offset, hud_pixel_ratio, fpm_hud_x_offset, fpm_hud_y_offset;
; 912  : 	float cos_roll, sin_roll, fpm_x_offset, fpm_y_offset;
; 913  : 	float horizon_angle, line_climb_ratio, horizon_pt_x, horizon_pt_y, horizon_deg;
; 914  : 	float horizon_hud_x, horizon_hud_y, left_hud_x, left_hud_y, right_hud_x, right_hud_y;
; 915  : 	
; 916  : 	forward_airspeed = current_flight_dynamics->velocity_z.value;

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00011	f3 0f 10 80 9c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8348]
  00019	f3 0f 11 45 fc	 movss	 DWORD PTR _forward_airspeed$[ebp], xmm0

; 917  : 	sideways_airspeed = current_flight_dynamics->velocity_x.value;

  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00023	f3 0f 10 80 6c
	20 00 00	 movss	 xmm0, DWORD PTR [eax+8300]
  0002b	f3 0f 11 45 f8	 movss	 DWORD PTR _sideways_airspeed$[ebp], xmm0

; 918  : 	vertical_airspeed = current_flight_dynamics->world_velocity_y.value;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00035	f3 0f 10 80 14
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8468]
  0003d	f3 0f 11 45 f4	 movss	 DWORD PTR _vertical_airspeed$[ebp], xmm0

; 919  : 
; 920  : 	// figure out which direction we're going (relative to nose)
; 921  : 	if (forward_airspeed < 0.01)   // don't bother drawing flight path marker if going backwards

  00042	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _forward_airspeed$[ebp]
  00047	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3f847ae147ae147b
  0004f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00053	76 07		 jbe	 SHORT $LN6@draw_fligh

; 922  : 		return;

  00055	e9 27 08 00 00	 jmp	 $LN1@draw_fligh

; 923  : 	else

  0005a	eb 30		 jmp	 SHORT $LN7@draw_fligh
$LN6@draw_fligh:

; 924  : 	{
; 925  : 		flight_vector_y = atan(vertical_airspeed / forward_airspeed);

  0005c	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _vertical_airspeed$[ebp]
  00061	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _forward_airspeed$[ebp]
  00066	51		 push	 ecx
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	e8 00 00 00 00	 call	 ?atan@@YGMM@Z		; atan
  00071	d9 5d ec	 fstp	 DWORD PTR _flight_vector_y$[ebp]

; 926  : 		flight_vector_x = atan(sideways_airspeed / forward_airspeed);

  00074	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sideways_airspeed$[ebp]
  00079	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _forward_airspeed$[ebp]
  0007e	51		 push	 ecx
  0007f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00084	e8 00 00 00 00	 call	 ?atan@@YGMM@Z		; atan
  00089	d9 5d f0	 fstp	 DWORD PTR _flight_vector_x$[ebp]
$LN7@draw_fligh:

; 927  : 	}
; 928  : 
; 929  : 	pitch = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_PITCH);

  0008c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00093	74 0f		 je	 SHORT $LN17@draw_fligh
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0009a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009c	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv84[ebp], ecx
  000a2	eb 24		 jmp	 SHORT $LN18@draw_fligh
$LN17@draw_fligh:
  000a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  000aa	83 c2 15	 add	 edx, 21			; 00000015H
  000ad	52		 push	 edx
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000be	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN18@draw_fligh:
  000c8	b9 01 00 00 00	 mov	 ecx, 1
  000cd	85 c9		 test	 ecx, ecx
  000cf	74 0c		 je	 SHORT $LN19@draw_fligh
  000d1	c7 85 20 ff ff
	ff 54 00 00 00	 mov	 DWORD PTR tv92[ebp], 84	; 00000054H
  000db	eb 24		 jmp	 SHORT $LN20@draw_fligh
$LN19@draw_fligh:
  000dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  000e3	83 c2 15	 add	 edx, 21			; 00000015H
  000e6	52		 push	 edx
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f7	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN20@draw_fligh:
  00101	6a 54		 push	 84			; 00000054H
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00109	51		 push	 ecx
  0010a	69 95 24 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv84[ebp], 700
  00114	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv92[ebp]
  0011a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00121	ff d1		 call	 ecx
  00123	d9 5d e8	 fstp	 DWORD PTR _pitch$[ebp]

; 930  : 	roll = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_ROLL);

  00126	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0012d	74 0f		 je	 SHORT $LN21@draw_fligh
  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00134	8b 08		 mov	 ecx, DWORD PTR [eax]
  00136	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv136[ebp], ecx
  0013c	eb 24		 jmp	 SHORT $LN22@draw_fligh
$LN21@draw_fligh:
  0013e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  00144	83 c2 16	 add	 edx, 22			; 00000016H
  00147	52		 push	 edx
  00148	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00158	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN22@draw_fligh:
  00162	b9 01 00 00 00	 mov	 ecx, 1
  00167	85 c9		 test	 ecx, ecx
  00169	74 0c		 je	 SHORT $LN23@draw_fligh
  0016b	c7 85 20 ff ff
	ff 71 00 00 00	 mov	 DWORD PTR tv144[ebp], 113 ; 00000071H
  00175	eb 24		 jmp	 SHORT $LN24@draw_fligh
$LN23@draw_fligh:
  00177	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  0017d	83 c2 16	 add	 edx, 22			; 00000016H
  00180	52		 push	 edx
  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00186	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00191	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN24@draw_fligh:
  0019b	6a 71		 push	 113			; 00000071H
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001a3	51		 push	 ecx
  001a4	69 95 24 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv136[ebp], 700
  001ae	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv144[ebp]
  001b4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001bb	ff d1		 call	 ecx
  001bd	d9 5d e4	 fstp	 DWORD PTR _roll$[ebp]

; 931  : 	cos_roll = cos(roll);

  001c0	51		 push	 ecx
  001c1	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _roll$[ebp]
  001c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cb	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  001d0	d9 5d c4	 fstp	 DWORD PTR _cos_roll$[ebp]

; 932  : 	sin_roll = sin(roll);

  001d3	51		 push	 ecx
  001d4	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _roll$[ebp]
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  001e3	d9 5d c0	 fstp	 DWORD PTR _sin_roll$[ebp]

; 933  : 
; 934  : 	ASSERT (main_3d_env);

  001e6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?main_3d_env@@3PAUENV_3D@@A, 0 ; main_3d_env
  001ed	75 18		 jne	 SHORT $LN8@draw_fligh
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  001f4	83 c0 1a	 add	 eax, 26			; 0000001aH
  001f7	50		 push	 eax
  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fd	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BBKBBMJK@main_3d_env@
  00202	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@draw_fligh:

; 935  : 	
; 936  : 	// figure out on which screen pixel the flight path marker should be drawn
; 937  : 	focal_length = tan (main_3d_env->width_view_angle * 0.5);               // view angle (20, 60, 80 deg etc.)

  00207	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  0020c	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00211	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00219	83 ec 08	 sub	 esp, 8
  0021c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00221	e8 00 00 00 00	 call	 _tan
  00226	83 c4 08	 add	 esp, 8
  00229	d9 5d dc	 fstp	 DWORD PTR _focal_length$[ebp]

; 938  : 	pixels_per_rad = (main_3d_env->clip_xmax - main_3d_env->clip_xmin) * 0.5;  // resolution

  0022c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00231	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00237	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  0023c	f3 0f 5c 41 30	 subss	 xmm0, DWORD PTR [ecx+48]
  00241	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00245	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0024d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00251	f3 0f 11 45 e0	 movss	 DWORD PTR _pixels_per_rad$[ebp], xmm0

; 939  : 	pixels_per_rad /= focal_length;

  00256	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  0025b	f3 0f 5e 45 dc	 divss	 xmm0, DWORD PTR _focal_length$[ebp]
  00260	f3 0f 11 45 e0	 movss	 DWORD PTR _pixels_per_rad$[ebp], xmm0

; 940  : 
; 941  : 	fpm_x_offset = pilot_head_heading + cos_roll * flight_vector_x + sin_roll * (pitch - flight_vector_y);

  00265	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _cos_roll$[ebp]
  0026a	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _flight_vector_x$[ebp]
  0026f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  00277	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _pitch$[ebp]
  0027c	f3 0f 5c 4d ec	 subss	 xmm1, DWORD PTR _flight_vector_y$[ebp]
  00281	f3 0f 59 4d c0	 mulss	 xmm1, DWORD PTR _sin_roll$[ebp]
  00286	f3 0f 58 c1	 addss	 xmm0, xmm1
  0028a	f3 0f 11 45 bc	 movss	 DWORD PTR _fpm_x_offset$[ebp], xmm0

; 942  : 	fpm_y_offset = pilot_head_pitch + cos_roll * (pitch - flight_vector_y) - sin_roll * flight_vector_x;

  0028f	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00294	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _flight_vector_y$[ebp]
  00299	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _cos_roll$[ebp]
  0029e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  002a6	f3 0f 10 4d c0	 movss	 xmm1, DWORD PTR _sin_roll$[ebp]
  002ab	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _flight_vector_x$[ebp]
  002b0	f3 0f 5c c1	 subss	 xmm0, xmm1
  002b4	f3 0f 11 45 b8	 movss	 DWORD PTR _fpm_y_offset$[ebp], xmm0

; 943  : 	fpm_x_pixel_offset = pixels_per_rad * tan(fpm_x_offset);

  002b9	51		 push	 ecx
  002ba	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _fpm_x_offset$[ebp]
  002bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c4	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  002c9	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR tv460[ebp]
  002cf	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv460[ebp]
  002d7	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  002dc	f3 0f 11 45 d8	 movss	 DWORD PTR _fpm_x_pixel_offset$[ebp], xmm0

; 944  : 	fpm_y_pixel_offset = pixels_per_rad * tan(fpm_y_offset);

  002e1	51		 push	 ecx
  002e2	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _fpm_y_offset$[ebp]
  002e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ec	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  002f1	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR tv467[ebp]
  002f7	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv467[ebp]
  002ff	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  00304	f3 0f 11 45 d4	 movss	 DWORD PTR _fpm_y_pixel_offset$[ebp], xmm0

; 945  : 
; 946  : 
; 947  : 	// figure out which hud texture pixel lies on top the screen pixel
; 948  : 	hud_pixel_ratio = 1.0 /((active_2d_environment->vp.x_max - active_2d_environment->vp.x_min) * 0.5 / hud_screen_x_scale);

  00309	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  0030e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  00314	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00319	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0031d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00321	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00329	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_screen_x_scale@@3MA
  00331	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00335	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0033d	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00341	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00345	f3 0f 11 45 d0	 movss	 DWORD PTR _hud_pixel_ratio$[ebp], xmm0

; 949  : 	fpm_hud_x_offset = fpm_x_pixel_offset * hud_pixel_ratio;

  0034a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _fpm_x_pixel_offset$[ebp]
  0034f	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  00354	f3 0f 11 45 cc	 movss	 DWORD PTR _fpm_hud_x_offset$[ebp], xmm0

; 950  : 	fpm_hud_y_offset = fpm_y_pixel_offset * hud_pixel_ratio;

  00359	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _fpm_y_pixel_offset$[ebp]
  0035e	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  00363	f3 0f 11 45 c8	 movss	 DWORD PTR _fpm_hud_y_offset$[ebp], xmm0

; 951  : 
; 952  : 	// draw the flight path marker on the hud
; 953  : 	if (fpm_hud_x_offset > HUD_WINDOW_X_MIN + 0.05 && fpm_hud_x_offset < HUD_WINDOW_X_MAX - 0.05 && fpm_hud_y_offset > HUD_WINDOW_Y_MIN + 0.05 && fpm_hud_y_offset < HUD_WINDOW_Y_MAX - 0.05)

  00368	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _fpm_hud_x_offset$[ebp]
  0036d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfee666666666666
  00375	76 62		 jbe	 SHORT $LN9@draw_fligh
  00377	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _fpm_hud_x_offset$[ebp]
  0037c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fee5e353f7ced91
  00384	66 0f 2f c8	 comisd	 xmm1, xmm0
  00388	76 4f		 jbe	 SHORT $LN9@draw_fligh
  0038a	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _fpm_hud_y_offset$[ebp]
  0038f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfee666666666666
  00397	76 40		 jbe	 SHORT $LN9@draw_fligh
  00399	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _fpm_hud_y_offset$[ebp]
  0039e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fee5e353f7ced91
  003a6	66 0f 2f c8	 comisd	 xmm1, xmm0
  003aa	76 2d		 jbe	 SHORT $LN9@draw_fligh

; 954  : 		draw_2d_mono_sprite (flight_path_marker, fpm_hud_x_offset, -fpm_hud_y_offset, hud_colour);

  003ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003b1	50		 push	 eax
  003b2	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fpm_hud_y_offset$[ebp]
  003b7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003be	51		 push	 ecx
  003bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c4	51		 push	 ecx
  003c5	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _fpm_hud_x_offset$[ebp]
  003ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cf	68 00 00 00 00	 push	 OFFSET ?flight_path_marker@@3PADA
  003d4	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite
$LN9@draw_fligh:

; 955  : 
; 956  : 
; 957  : 	// draw horizon line
; 958  : 	horizon_pt_x = fpm_x_offset + sin_roll * flight_vector_y;

  003d9	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _sin_roll$[ebp]
  003de	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _flight_vector_y$[ebp]
  003e3	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR _fpm_x_offset$[ebp]
  003e8	f3 0f 11 45 ac	 movss	 DWORD PTR _horizon_pt_x$[ebp], xmm0

; 959  : 	horizon_pt_y = -(fpm_y_offset + cos_roll * flight_vector_y);

  003ed	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _cos_roll$[ebp]
  003f2	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _flight_vector_y$[ebp]
  003f7	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _fpm_y_offset$[ebp]
  003fc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00403	f3 0f 11 45 a8	 movss	 DWORD PTR _horizon_pt_y$[ebp], xmm0

; 960  : 	horizon_hud_x = hud_pixel_ratio * pixels_per_rad * tan(horizon_pt_x);

  00408	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  0040d	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  00412	51		 push	 ecx
  00413	f3 0f 10 4d ac	 movss	 xmm1, DWORD PTR _horizon_pt_x$[ebp]
  00418	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0041d	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR tv597[ebp], xmm0
  00425	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  0042a	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv492[ebp]
  00430	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv597[ebp]
  00438	f3 0f 59 85 20
	ff ff ff	 mulss	 xmm0, DWORD PTR tv492[ebp]
  00440	f3 0f 11 45 a0	 movss	 DWORD PTR _horizon_hud_x$[ebp], xmm0

; 961  : 	horizon_hud_y = hud_pixel_ratio * pixels_per_rad * tan(horizon_pt_y);

  00445	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _hud_pixel_ratio$[ebp]
  0044a	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _pixels_per_rad$[ebp]
  0044f	51		 push	 ecx
  00450	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _horizon_pt_y$[ebp]
  00455	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0045a	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR tv599[ebp], xmm0
  00462	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  00467	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv499[ebp]
  0046d	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv599[ebp]
  00475	f3 0f 59 85 20
	ff ff ff	 mulss	 xmm0, DWORD PTR tv499[ebp]
  0047d	f3 0f 11 45 9c	 movss	 DWORD PTR _horizon_hud_y$[ebp], xmm0

; 962  : 	
; 963  : 	horizon_angle = cos(pilot_head_heading) * roll + sin(pilot_head_heading) * -pitch;

  00482	51		 push	 ecx
  00483	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  0048b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00490	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00495	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR tv505[ebp]
  0049b	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv505[ebp]
  004a3	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _roll$[ebp]
  004a8	51		 push	 ecx
  004a9	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?pilot_head_heading@@3MA
  004b1	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  004b6	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR tv601[ebp], xmm0
  004be	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  004c3	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR tv511[ebp]
  004c9	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR tv511[ebp]
  004d1	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _pitch$[ebp]
  004d6	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  004dd	f3 0f 59 c1	 mulss	 xmm0, xmm1
  004e1	f3 0f 10 8d 20
	ff ff ff	 movss	 xmm1, DWORD PTR tv601[ebp]
  004e9	f3 0f 58 c8	 addss	 xmm1, xmm0
  004ed	f3 0f 11 4d b4	 movss	 DWORD PTR _horizon_angle$[ebp], xmm1

; 964  : 	horizon_deg = fmod(fabs(deg(horizon_angle)), 180);

  004f2	68 b4 00 00 00	 push	 180			; 000000b4H
  004f7	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _horizon_angle$[ebp]
  004fc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00504	51		 push	 ecx
  00505	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050a	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0050f	51		 push	 ecx
  00510	d9 1c 24	 fstp	 DWORD PTR [esp]
  00513	e8 00 00 00 00	 call	 ??$fmod@MHX@@YGNMH@Z	; fmod<float,int,void>
  00518	d9 5d a4	 fstp	 DWORD PTR _horizon_deg$[ebp]

; 965  : 
; 966  : 	if (horizon_deg < 89)  // my primitive horizon drawing algoritm assumes less than 90 degrees bank angle

  0051b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42b20000
  00523	0f 2f 45 a4	 comiss	 xmm0, DWORD PTR _horizon_deg$[ebp]
  00527	0f 86 54 03 00
	00		 jbe	 $LN5@draw_fligh

; 967  : 	{
; 968  : 		line_climb_ratio = tan(horizon_angle);

  0052d	51		 push	 ecx
  0052e	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _horizon_angle$[ebp]
  00533	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00538	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  0053d	d9 5d b0	 fstp	 DWORD PTR _line_climb_ratio$[ebp]

; 969  : 	
; 970  : 		left_hud_x = horizon_hud_x - 1.5;

  00540	f3 0f 5a 45 a0	 cvtss2sd xmm0, DWORD PTR _horizon_hud_x$[ebp]
  00545	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff8000000000000
  0054d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00551	f3 0f 11 45 98	 movss	 DWORD PTR _left_hud_x$[ebp], xmm0

; 971  : 		left_hud_y = horizon_hud_y + 1.5 * -line_climb_ratio;

  00556	f3 0f 5a 45 9c	 cvtss2sd xmm0, DWORD PTR _horizon_hud_y$[ebp]
  0055b	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _line_climb_ratio$[ebp]
  00560	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00567	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0056b	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3ff8000000000000
  00573	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00577	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0057b	f3 0f 11 45 94	 movss	 DWORD PTR _left_hud_y$[ebp], xmm0

; 972  : 		right_hud_x = horizon_hud_x + 1.5;

  00580	f3 0f 5a 45 a0	 cvtss2sd xmm0, DWORD PTR _horizon_hud_x$[ebp]
  00585	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff8000000000000
  0058d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00591	f3 0f 11 45 90	 movss	 DWORD PTR _right_hud_x$[ebp], xmm0

; 973  : 		right_hud_y = horizon_hud_y + 1.5 * line_climb_ratio;

  00596	f3 0f 5a 45 9c	 cvtss2sd xmm0, DWORD PTR _horizon_hud_y$[ebp]
  0059b	f3 0f 5a 4d b0	 cvtss2sd xmm1, DWORD PTR _line_climb_ratio$[ebp]
  005a0	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3ff8000000000000
  005a8	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005ac	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b0	f3 0f 11 45 8c	 movss	 DWORD PTR _right_hud_y$[ebp], xmm0

; 974  : 	
; 975  : 		if (clip_2d_line(&left_hud_x, &left_hud_y, &right_hud_x, &right_hud_y, -0.75, -0.75, 0.8, 0.8))

  005b5	51		 push	 ecx
  005b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  005be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c3	51		 push	 ecx
  005c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  005cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d1	51		 push	 ecx
  005d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf400000
  005da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005df	51		 push	 ecx
  005e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf400000
  005e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ed	8d 45 8c	 lea	 eax, DWORD PTR _right_hud_y$[ebp]
  005f0	50		 push	 eax
  005f1	8d 4d 90	 lea	 ecx, DWORD PTR _right_hud_x$[ebp]
  005f4	51		 push	 ecx
  005f5	8d 55 94	 lea	 edx, DWORD PTR _left_hud_y$[ebp]
  005f8	52		 push	 edx
  005f9	8d 45 98	 lea	 eax, DWORD PTR _left_hud_x$[ebp]
  005fc	50		 push	 eax
  005fd	e8 00 00 00 00	 call	 ?clip_2d_line@@YGFPAM000MMMM@Z ; clip_2d_line
  00602	0f bf c8	 movsx	 ecx, ax
  00605	85 c9		 test	 ecx, ecx
  00607	0f 84 74 02 00
	00		 je	 $LN5@draw_fligh

; 976  : 		{
; 977  : 			float step = 0.05;

  0060d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00615	f3 0f 11 45 88	 movss	 DWORD PTR _step$9[ebp], xmm0

; 978  : 			float x, y;
; 979  : 			float xstep = step * cos_roll;

  0061a	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _step$9[ebp]
  0061f	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _cos_roll$[ebp]
  00624	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _xstep$6[ebp], xmm0

; 980  : 			float ystep = xstep * line_climb_ratio;

  0062c	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _xstep$6[ebp]
  00634	f3 0f 59 45 b0	 mulss	 xmm0, DWORD PTR _line_climb_ratio$[ebp]
  00639	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _ystep$5[ebp], xmm0

; 981  : 			ASSERT(left_hud_x != right_hud_x);

  00641	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _left_hud_x$[ebp]
  00646	0f 2e 45 90	 ucomiss xmm0, DWORD PTR _right_hud_x$[ebp]
  0064a	9f		 lahf
  0064b	f6 c4 44	 test	 ah, 68			; 00000044H
  0064e	7a 18		 jp	 SHORT $LN12@draw_fligh
  00650	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  00655	83 c0 49	 add	 eax, 73			; 00000049H
  00658	50		 push	 eax
  00659	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0065e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@ICGIDHHB@left_hud_x?5?$CB?$DN?5right_hud_x@
  00663	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@draw_fligh:

; 982  : 			ASSERT(xstep != 0);

  00668	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _xstep$6[ebp]
  00670	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00677	9f		 lahf
  00678	f6 c4 44	 test	 ah, 68			; 00000044H
  0067b	7a 18		 jp	 SHORT $LN13@draw_fligh
  0067d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_flight_path_marker@@YGXXZ@4JA
  00682	83 c0 4a	 add	 eax, 74			; 0000004aH
  00685	50		 push	 eax
  00686	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0068b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KIMHMPO@xstep?5?$CB?$DN?50@
  00690	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@draw_fligh:

; 983  : 
; 984  : 			// draw left side of horizon line
; 985  : 			x = horizon_hud_x - 3*xstep;

  00695	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  0069d	f3 0f 59 85 7c
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  006a5	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR _horizon_hud_x$[ebp]
  006aa	f3 0f 5c c8	 subss	 xmm1, xmm0
  006ae	f3 0f 11 4d 84	 movss	 DWORD PTR _x$8[ebp], xmm1

; 986  : 			y = horizon_hud_y - 3*ystep;

  006b3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  006bb	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  006c3	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _horizon_hud_y$[ebp]
  006c8	f3 0f 5c c8	 subss	 xmm1, xmm0
  006cc	f3 0f 11 4d 80	 movss	 DWORD PTR _y$7[ebp], xmm1
$LN2@draw_fligh:

; 987  : 			while (x > left_hud_x)

  006d1	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x$8[ebp]
  006d6	0f 2f 45 98	 comiss	 xmm0, DWORD PTR _left_hud_x$[ebp]
  006da	0f 86 b3 00 00
	00		 jbe	 $LN3@draw_fligh

; 988  : 			{
; 989  : 				float x2, y2;
; 990  : 				x2 = x - xstep;

  006e0	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x$8[ebp]
  006e5	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _xstep$6[ebp]
  006ed	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _x2$4[ebp], xmm0

; 991  : 				y2 = y - ystep;

  006f5	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _y$7[ebp]
  006fa	f3 0f 5c 85 78
	ff ff ff	 subss	 xmm0, DWORD PTR _ystep$5[ebp]
  00702	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _y2$3[ebp], xmm0

; 992  : 
; 993  : 				if (x <= right_hud_x)

  0070a	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _right_hud_x$[ebp]
  0070f	0f 2f 45 84	 comiss	 xmm0, DWORD PTR _x$8[ebp]
  00713	72 3d		 jb	 SHORT $LN14@draw_fligh

; 994  : 					draw_2d_line(x, y, x2, y2, hud_colour);

  00715	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0071a	50		 push	 eax
  0071b	51		 push	 ecx
  0071c	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _y2$3[ebp]
  00724	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00729	51		 push	 ecx
  0072a	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _x2$4[ebp]
  00732	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00737	51		 push	 ecx
  00738	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _y$7[ebp]
  0073d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00742	51		 push	 ecx
  00743	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x$8[ebp]
  00748	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0074d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN14@draw_fligh:

; 995  : 
; 996  : 				x -= 2*xstep;

  00752	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0075a	f3 0f 59 85 7c
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  00762	f3 0f 10 4d 84	 movss	 xmm1, DWORD PTR _x$8[ebp]
  00767	f3 0f 5c c8	 subss	 xmm1, xmm0
  0076b	f3 0f 11 4d 84	 movss	 DWORD PTR _x$8[ebp], xmm1

; 997  : 				y -= 2*ystep;

  00770	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00778	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  00780	f3 0f 10 4d 80	 movss	 xmm1, DWORD PTR _y$7[ebp]
  00785	f3 0f 5c c8	 subss	 xmm1, xmm0
  00789	f3 0f 11 4d 80	 movss	 DWORD PTR _y$7[ebp], xmm1

; 998  : 			}

  0078e	e9 3e ff ff ff	 jmp	 $LN2@draw_fligh
$LN3@draw_fligh:

; 999  : 
; 1000 : 			// draw right side of horizon line
; 1001 : 			x = horizon_hud_x + 3*xstep;

  00793	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  0079b	f3 0f 59 85 7c
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  007a3	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _horizon_hud_x$[ebp]
  007a8	f3 0f 11 45 84	 movss	 DWORD PTR _x$8[ebp], xmm0

; 1002 : 			y = horizon_hud_y + 3*ystep;

  007ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  007b5	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  007bd	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR _horizon_hud_y$[ebp]
  007c2	f3 0f 11 45 80	 movss	 DWORD PTR _y$7[ebp], xmm0
$LN4@draw_fligh:

; 1003 : 			while (x < right_hud_x)

  007c7	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _right_hud_x$[ebp]
  007cc	0f 2f 45 84	 comiss	 xmm0, DWORD PTR _x$8[ebp]
  007d0	0f 86 ab 00 00
	00		 jbe	 $LN5@draw_fligh

; 1004 : 			{
; 1005 : 				float x2, y2;
; 1006 : 				x2 = x + xstep;

  007d6	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x$8[ebp]
  007db	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _xstep$6[ebp]
  007e3	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _x2$2[ebp], xmm0

; 1007 : 				y2 = y + ystep;

  007eb	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _y$7[ebp]
  007f0	f3 0f 58 85 78
	ff ff ff	 addss	 xmm0, DWORD PTR _ystep$5[ebp]
  007f8	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _y2$1[ebp], xmm0

; 1008 : 	
; 1009 : 				if (x >= left_hud_x)

  00800	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x$8[ebp]
  00805	0f 2f 45 98	 comiss	 xmm0, DWORD PTR _left_hud_x$[ebp]
  00809	72 3d		 jb	 SHORT $LN15@draw_fligh

; 1010 : 					draw_2d_line(x, y, x2, y2, hud_colour);

  0080b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00810	50		 push	 eax
  00811	51		 push	 ecx
  00812	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _y2$1[ebp]
  0081a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0081f	51		 push	 ecx
  00820	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _x2$2[ebp]
  00828	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0082d	51		 push	 ecx
  0082e	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _y$7[ebp]
  00833	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00838	51		 push	 ecx
  00839	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _x$8[ebp]
  0083e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00843	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN15@draw_fligh:

; 1011 : 
; 1012 : 				x += 2*xstep;

  00848	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  00850	f3 0f 59 85 7c
	ff ff ff	 mulss	 xmm0, DWORD PTR _xstep$6[ebp]
  00858	f3 0f 58 45 84	 addss	 xmm0, DWORD PTR _x$8[ebp]
  0085d	f3 0f 11 45 84	 movss	 DWORD PTR _x$8[ebp], xmm0

; 1013 : 				y += 2*ystep;

  00862	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0086a	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR _ystep$5[ebp]
  00872	f3 0f 58 45 80	 addss	 xmm0, DWORD PTR _y$7[ebp]
  00877	f3 0f 11 45 80	 movss	 DWORD PTR _y$7[ebp], xmm0

; 1014 : 			}

  0087c	e9 46 ff ff ff	 jmp	 $LN4@draw_fligh
$LN5@draw_fligh:
$LN1@draw_fligh:

; 1015 : 		}
; 1016 : 	}
; 1017 : }

  00881	5f		 pop	 edi
  00882	5e		 pop	 esi
  00883	5b		 pop	 ebx
  00884	8b e5		 mov	 esp, ebp
  00886	5d		 pop	 ebp
  00887	c3		 ret	 0
?draw_flight_path_marker@@YGXXZ ENDP			; draw_flight_path_marker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?clip_2d_line@@YGFPAM000MMMM@Z
_TEXT	SEGMENT
tv293 = -84						; size = 8
tv240 = -84						; size = 8
tv94 = -84						; size = 4
tv90 = -84						; size = 4
tv77 = -84						; size = 4
tv73 = -84						; size = 4
tv95 = -80						; size = 4
tv91 = -80						; size = 4
tv78 = -80						; size = 4
tv74 = -80						; size = 4
tv221 = -78						; size = 2
tv129 = -78						; size = 2
tv80 = -78						; size = 2
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_ratio$ = -4						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_xmin$ = 24						; size = 4
_ymin$ = 28						; size = 4
_xmax$ = 32						; size = 4
_ymax$ = 36						; size = 4
?clip_2d_line@@YGFPAM000MMMM@Z PROC			; clip_2d_line, COMDAT

; 814  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 815  : 	float ratio;
; 816  : 	float dx, dy;
; 817  : 
; 818  : 	dy = *y2 - *y1;

  00009	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00017	f3 0f 11 45 f4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 819  : 	if (fabs(dy) < 0.001)  // (close to) horizontal line

  0001c	51		 push	 ecx
  0001d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0002c	dd 5d ac	 fstp	 QWORD PTR tv240[ebp]
  0002f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00037	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv240[ebp]
  0003c	0f 86 00 01 00
	00		 jbe	 $LN2@clip_2d_li

; 820  : 	{
; 821  : 		if (*y1 > ymax || *y1 < ymin)  // line outside clip box

  00042	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00045	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00049	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  0004d	77 0d		 ja	 SHORT $LN4@clip_2d_li
  0004f	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00052	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00057	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0005a	76 07		 jbe	 SHORT $LN3@clip_2d_li
$LN4@clip_2d_li:

; 822  : 			return FALSE;

  0005c	33 c0		 xor	 eax, eax
  0005e	e9 1d 06 00 00	 jmp	 $LN1@clip_2d_li
$LN3@clip_2d_li:

; 823  : 
; 824  : 		*y2 = *y1;

  00063	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  00069	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 825  : 		*x1 = bound(*x1, xmin, xmax);

  0006d	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00070	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00075	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00078	76 0c		 jbe	 SHORT $LN36@clip_2d_li
  0007a	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  0007f	f3 0f 11 45 b0	 movss	 DWORD PTR tv74[ebp], xmm0
  00084	eb 2f		 jmp	 SHORT $LN37@clip_2d_li
$LN36@clip_2d_li:
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  00089	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0008d	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  00091	76 0c		 jbe	 SHORT $LN34@clip_2d_li
  00093	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  00098	f3 0f 11 45 ac	 movss	 DWORD PTR tv73[ebp], xmm0
  0009d	eb 0c		 jmp	 SHORT $LN35@clip_2d_li
$LN34@clip_2d_li:
  0009f	8b 55 08	 mov	 edx, DWORD PTR _x1$[ebp]
  000a2	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  000a6	f3 0f 11 45 ac	 movss	 DWORD PTR tv73[ebp], xmm0
$LN35@clip_2d_li:
  000ab	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv73[ebp]
  000b0	f3 0f 11 45 b0	 movss	 DWORD PTR tv74[ebp], xmm0
$LN37@clip_2d_li:
  000b5	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  000b8	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv74[ebp]
  000bd	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 826  : 		*x2 = bound(*x2, xmin, xmax);

  000c1	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  000c4	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  000c9	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  000cc	76 0c		 jbe	 SHORT $LN40@clip_2d_li
  000ce	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  000d3	f3 0f 11 45 b0	 movss	 DWORD PTR tv78[ebp], xmm0
  000d8	eb 2f		 jmp	 SHORT $LN41@clip_2d_li
$LN40@clip_2d_li:
  000da	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  000dd	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  000e1	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  000e5	76 0c		 jbe	 SHORT $LN38@clip_2d_li
  000e7	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  000ec	f3 0f 11 45 ac	 movss	 DWORD PTR tv77[ebp], xmm0
  000f1	eb 0c		 jmp	 SHORT $LN39@clip_2d_li
$LN38@clip_2d_li:
  000f3	8b 55 10	 mov	 edx, DWORD PTR _x2$[ebp]
  000f6	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  000fa	f3 0f 11 45 ac	 movss	 DWORD PTR tv77[ebp], xmm0
$LN39@clip_2d_li:
  000ff	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv77[ebp]
  00104	f3 0f 11 45 b0	 movss	 DWORD PTR tv78[ebp], xmm0
$LN41@clip_2d_li:
  00109	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0010c	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv78[ebp]
  00111	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 827  : 
; 828  : 		return *x1 != *x2;

  00115	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00118	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  0011b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0011f	0f 2e 01	 ucomiss xmm0, DWORD PTR [ecx]
  00122	9f		 lahf
  00123	f6 c4 44	 test	 ah, 68			; 00000044H
  00126	7b 0b		 jnp	 SHORT $LN42@clip_2d_li
  00128	ba 01 00 00 00	 mov	 edx, 1
  0012d	66 89 55 b2	 mov	 WORD PTR tv80[ebp], dx
  00131	eb 06		 jmp	 SHORT $LN43@clip_2d_li
$LN42@clip_2d_li:
  00133	33 c0		 xor	 eax, eax
  00135	66 89 45 b2	 mov	 WORD PTR tv80[ebp], ax
$LN43@clip_2d_li:
  00139	66 8b 45 b2	 mov	 ax, WORD PTR tv80[ebp]
  0013d	e9 3e 05 00 00	 jmp	 $LN1@clip_2d_li
$LN2@clip_2d_li:

; 829  : 	}
; 830  : 	dx = *x2 - *x1;

  00142	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  00148	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0014c	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00150	f3 0f 11 45 f8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 831  : 	if (fabs(dx) < 0.001)  // (close to) vertical line

  00155	51		 push	 ecx
  00156	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00165	dd 5d ac	 fstp	 QWORD PTR tv293[ebp]
  00168	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00170	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv293[ebp]
  00175	0f 86 00 01 00
	00		 jbe	 $LN5@clip_2d_li

; 832  : 	{
; 833  : 		if (*x1 < xmin || *x1 > xmax) // line outside clip box

  0017b	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0017e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00183	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00186	77 0d		 ja	 SHORT $LN7@clip_2d_li
  00188	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0018b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0018f	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  00193	76 07		 jbe	 SHORT $LN6@clip_2d_li
$LN7@clip_2d_li:

; 834  : 			return FALSE;

  00195	33 c0		 xor	 eax, eax
  00197	e9 e4 04 00 00	 jmp	 $LN1@clip_2d_li
$LN6@clip_2d_li:

; 835  : 		
; 836  : 		*x1 = *x2;

  0019c	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0019f	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  001a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a4	89 10		 mov	 DWORD PTR [eax], edx

; 837  : 		*y1 = bound(*y1, ymin, ymax);

  001a6	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  001a9	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  001ae	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  001b1	76 0c		 jbe	 SHORT $LN46@clip_2d_li
  001b3	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  001b8	f3 0f 11 45 b0	 movss	 DWORD PTR tv91[ebp], xmm0
  001bd	eb 2f		 jmp	 SHORT $LN47@clip_2d_li
$LN46@clip_2d_li:
  001bf	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  001c2	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  001c6	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  001ca	76 0c		 jbe	 SHORT $LN44@clip_2d_li
  001cc	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  001d1	f3 0f 11 45 ac	 movss	 DWORD PTR tv90[ebp], xmm0
  001d6	eb 0c		 jmp	 SHORT $LN45@clip_2d_li
$LN44@clip_2d_li:
  001d8	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  001db	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  001df	f3 0f 11 45 ac	 movss	 DWORD PTR tv90[ebp], xmm0
$LN45@clip_2d_li:
  001e4	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv90[ebp]
  001e9	f3 0f 11 45 b0	 movss	 DWORD PTR tv91[ebp], xmm0
$LN47@clip_2d_li:
  001ee	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  001f1	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv91[ebp]
  001f6	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 838  : 		*y2 = bound(*y2, ymin, ymax);

  001fa	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  001fd	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00202	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00205	76 0c		 jbe	 SHORT $LN50@clip_2d_li
  00207	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0020c	f3 0f 11 45 b0	 movss	 DWORD PTR tv95[ebp], xmm0
  00211	eb 2f		 jmp	 SHORT $LN51@clip_2d_li
$LN50@clip_2d_li:
  00213	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  00216	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0021a	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  0021e	76 0c		 jbe	 SHORT $LN48@clip_2d_li
  00220	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00225	f3 0f 11 45 ac	 movss	 DWORD PTR tv94[ebp], xmm0
  0022a	eb 0c		 jmp	 SHORT $LN49@clip_2d_li
$LN48@clip_2d_li:
  0022c	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  0022f	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00233	f3 0f 11 45 ac	 movss	 DWORD PTR tv94[ebp], xmm0
$LN49@clip_2d_li:
  00238	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv94[ebp]
  0023d	f3 0f 11 45 b0	 movss	 DWORD PTR tv95[ebp], xmm0
$LN51@clip_2d_li:
  00242	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00245	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv95[ebp]
  0024a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 839  : 		
; 840  : 		return *y1 != *y2;

  0024e	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00251	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  00254	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00258	0f 2e 01	 ucomiss xmm0, DWORD PTR [ecx]
  0025b	9f		 lahf
  0025c	f6 c4 44	 test	 ah, 68			; 00000044H
  0025f	7b 0b		 jnp	 SHORT $LN52@clip_2d_li
  00261	ba 01 00 00 00	 mov	 edx, 1
  00266	66 89 55 b2	 mov	 WORD PTR tv129[ebp], dx
  0026a	eb 06		 jmp	 SHORT $LN53@clip_2d_li
$LN52@clip_2d_li:
  0026c	33 c0		 xor	 eax, eax
  0026e	66 89 45 b2	 mov	 WORD PTR tv129[ebp], ax
$LN53@clip_2d_li:
  00272	66 8b 45 b2	 mov	 ax, WORD PTR tv129[ebp]
  00276	e9 05 04 00 00	 jmp	 $LN1@clip_2d_li
$LN5@clip_2d_li:

; 841  : 	}
; 842  : 
; 843  : 	ratio = dy / dx;

  0027b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  00280	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _dx$[ebp]
  00285	f3 0f 11 45 fc	 movss	 DWORD PTR _ratio$[ebp], xmm0

; 844  : 
; 845  : 	if (*x1 < xmin)

  0028a	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0028d	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00292	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00295	76 2d		 jbe	 SHORT $LN8@clip_2d_li

; 846  : 	{
; 847  : 		*y1 += (xmin - *x1) * ratio;

  00297	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0029a	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  0029f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  002a3	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  002a8	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  002ab	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  002af	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  002b2	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 848  : 		*x1 = xmin;

  002b6	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002b9	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  002be	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  002c2	eb 3c		 jmp	 SHORT $LN10@clip_2d_li
$LN8@clip_2d_li:

; 849  : 	}
; 850  : 	else if (*x1 > xmax)

  002c4	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002c7	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002cb	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  002cf	76 2f		 jbe	 SHORT $LN10@clip_2d_li

; 851  : 	{
; 852  : 		*y1 -= (*x1 - xmax) * ratio;

  002d1	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002d4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002d8	f3 0f 5c 45 20	 subss	 xmm0, DWORD PTR _xmax$[ebp]
  002dd	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  002e2	8b 4d 0c	 mov	 ecx, DWORD PTR _y1$[ebp]
  002e5	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  002e9	f3 0f 5c c8	 subss	 xmm1, xmm0
  002ed	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  002f0	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 853  : 		*x1 = xmax;

  002f4	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  002f7	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  002fc	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN10@clip_2d_li:

; 854  : 	}
; 855  : 
; 856  : 	if (*x2 < xmin)

  00300	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00303	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00308	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0030b	76 2d		 jbe	 SHORT $LN11@clip_2d_li

; 857  : 	{
; 858  : 		*y2 += (xmin - *x2) * ratio;

  0030d	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00310	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00315	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00319	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  0031e	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  00321	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00325	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  00328	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 859  : 		*x2 = xmin;	

  0032c	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0032f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  00334	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00338	eb 3c		 jmp	 SHORT $LN13@clip_2d_li
$LN11@clip_2d_li:

; 860  : 	}
; 861  : 	else if (*x2 > xmax)

  0033a	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0033d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00341	0f 2f 45 20	 comiss	 xmm0, DWORD PTR _xmax$[ebp]
  00345	76 2f		 jbe	 SHORT $LN13@clip_2d_li

; 862  : 	{
; 863  : 		*y2 -= (*x2 - xmax) * ratio;

  00347	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0034a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0034e	f3 0f 5c 45 20	 subss	 xmm0, DWORD PTR _xmax$[ebp]
  00353	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  00358	8b 4d 14	 mov	 ecx, DWORD PTR _y2$[ebp]
  0035b	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0035f	f3 0f 5c c8	 subss	 xmm1, xmm0
  00363	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  00366	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 864  : 		*x2 = xmax;

  0036a	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0036d	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  00372	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN13@clip_2d_li:

; 865  : 	}
; 866  : 
; 867  : 	if ((*y1 < ymin && *y2 < ymin) || (*y1 > ymax && *y2 > ymax))

  00376	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00379	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0037e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00381	76 0d		 jbe	 SHORT $LN16@clip_2d_li
  00383	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00386	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0038b	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0038e	77 1a		 ja	 SHORT $LN15@clip_2d_li
$LN16@clip_2d_li:
  00390	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00393	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00397	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  0039b	76 14		 jbe	 SHORT $LN14@clip_2d_li
  0039d	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  003a0	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003a4	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  003a8	76 07		 jbe	 SHORT $LN14@clip_2d_li
$LN15@clip_2d_li:

; 868  : 		return FALSE;

  003aa	33 c0		 xor	 eax, eax
  003ac	e9 cf 02 00 00	 jmp	 $LN1@clip_2d_li
$LN14@clip_2d_li:

; 869  : 
; 870  : 	if (*y1 < ymin)

  003b1	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  003b4	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  003b9	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  003bc	76 7b		 jbe	 SHORT $LN17@clip_2d_li

; 871  : 	{
; 872  : 		ASSERT(ratio > 0);

  003be	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _ratio$[ebp]
  003c3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  003ca	77 18		 ja	 SHORT $LN19@clip_2d_li
  003cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  003d1	83 c0 3a	 add	 eax, 58			; 0000003aH
  003d4	50		 push	 eax
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  003da	68 00 00 00 00	 push	 OFFSET ??_C@_09FMHJKMJN@ratio?5?$DO?50@
  003df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@clip_2d_li:

; 873  : 		*x1 += (ymin - *y1) / ratio;

  003e4	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  003e7	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  003ec	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  003f0	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  003f5	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  003f8	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  003fc	8b 55 08	 mov	 edx, DWORD PTR _x1$[ebp]
  003ff	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 874  : 		*y1 = ymin;

  00403	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00406	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  0040b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 875  : 		ASSERT(*x1 < xmax);

  0040f	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00412	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  00417	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0041a	77 18		 ja	 SHORT $LN20@clip_2d_li
  0041c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00421	83 c0 3d	 add	 eax, 61			; 0000003dH
  00424	50		 push	 eax
  00425	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0042a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@
  0042f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN20@clip_2d_li:

; 876  : 	}

  00434	e9 82 00 00 00	 jmp	 $LN23@clip_2d_li
$LN17@clip_2d_li:

; 877  : 	else if (*y1 > ymax)

  00439	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  0043c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00440	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  00444	76 75		 jbe	 SHORT $LN23@clip_2d_li

; 878  : 	{
; 879  : 		ASSERT(ratio < 0);

  00446	0f 57 c0	 xorps	 xmm0, xmm0
  00449	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _ratio$[ebp]
  0044d	77 18		 ja	 SHORT $LN22@clip_2d_li
  0044f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00454	83 c0 41	 add	 eax, 65			; 00000041H
  00457	50		 push	 eax
  00458	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0045d	68 00 00 00 00	 push	 OFFSET ??_C@_09PGHAGEBG@ratio?5?$DM?50@
  00462	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN22@clip_2d_li:

; 880  : 		*x1 -= (*y1 - ymax) / ratio;

  00467	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  0046a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0046e	f3 0f 5c 45 24	 subss	 xmm0, DWORD PTR _ymax$[ebp]
  00473	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  00478	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  0047b	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0047f	f3 0f 5c c8	 subss	 xmm1, xmm0
  00483	8b 55 08	 mov	 edx, DWORD PTR _x1$[ebp]
  00486	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 881  : 		*y1 = ymax;

  0048a	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  0048d	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00492	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 882  : 		ASSERT(*x1 < xmax);

  00496	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00499	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  0049e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  004a1	77 18		 ja	 SHORT $LN23@clip_2d_li
  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  004a8	83 c0 44	 add	 eax, 68			; 00000044H
  004ab	50		 push	 eax
  004ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BDJLPGMC@?$CKx1?5?$DM?5xmax@
  004b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN23@clip_2d_li:

; 883  : 	}
; 884  : 
; 885  : 	if (*y2 < ymin)

  004bb	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  004be	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  004c3	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  004c6	76 76		 jbe	 SHORT $LN24@clip_2d_li

; 886  : 	{
; 887  : 		ASSERT(ratio < 0);

  004c8	0f 57 c0	 xorps	 xmm0, xmm0
  004cb	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _ratio$[ebp]
  004cf	77 18		 ja	 SHORT $LN26@clip_2d_li
  004d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  004d6	83 c0 49	 add	 eax, 73			; 00000049H
  004d9	50		 push	 eax
  004da	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  004df	68 00 00 00 00	 push	 OFFSET ??_C@_09PGHAGEBG@ratio?5?$DM?50@
  004e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@clip_2d_li:

; 888  : 		*x2 += (ymin - *y2) / ratio;

  004e9	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  004ec	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  004f1	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  004f5	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  004fa	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  004fd	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00501	8b 55 10	 mov	 edx, DWORD PTR _x2$[ebp]
  00504	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 889  : 		*y2 = ymin;

  00508	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  0050b	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00510	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 890  : 		ASSERT(*x2 < xmax);

  00514	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00517	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  0051c	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0051f	77 18		 ja	 SHORT $LN27@clip_2d_li
  00521	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00526	83 c0 4c	 add	 eax, 76			; 0000004cH
  00529	50		 push	 eax
  0052a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@
  00534	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN27@clip_2d_li:

; 891  : 	}

  00539	e9 87 00 00 00	 jmp	 $LN30@clip_2d_li
$LN24@clip_2d_li:

; 892  : 	else if (*y2 > ymax)

  0053e	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00541	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00545	0f 2f 45 24	 comiss	 xmm0, DWORD PTR _ymax$[ebp]
  00549	76 7a		 jbe	 SHORT $LN30@clip_2d_li

; 893  : 	{
; 894  : 		ASSERT(ratio > 0);

  0054b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _ratio$[ebp]
  00550	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00557	77 18		 ja	 SHORT $LN29@clip_2d_li
  00559	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  0055e	83 c0 50	 add	 eax, 80			; 00000050H
  00561	50		 push	 eax
  00562	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00567	68 00 00 00 00	 push	 OFFSET ??_C@_09FMHJKMJN@ratio?5?$DO?50@
  0056c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN29@clip_2d_li:

; 895  : 		*x2 -= (*y2 - ymax) / ratio;

  00571	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00574	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00578	f3 0f 5c 45 24	 subss	 xmm0, DWORD PTR _ymax$[ebp]
  0057d	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _ratio$[ebp]
  00582	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  00585	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  00589	f3 0f 5c c8	 subss	 xmm1, xmm0
  0058d	8b 55 10	 mov	 edx, DWORD PTR _x2$[ebp]
  00590	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 896  : 		*y2 = ymax;

  00594	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00597	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  0059c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 897  : 		ASSERT(*x2 < xmax);

  005a0	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  005a3	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  005a8	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  005ab	77 18		 ja	 SHORT $LN30@clip_2d_li
  005ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  005b2	83 c0 53	 add	 eax, 83			; 00000053H
  005b5	50		 push	 eax
  005b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  005bb	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CKBGMKAH@?$CKx2?5?$DM?5xmax@
  005c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN30@clip_2d_li:

; 898  : 	}
; 899  : 
; 900  : 	ASSERT(*x1 >= xmin && *x1 <= xmax && *x2 >= xmin && *x2 <= xmax &&

  005c5	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  005c8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005cc	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _xmin$[ebp]
  005d0	72 5b		 jb	 SHORT $LN32@clip_2d_li
  005d2	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  005d5	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  005da	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  005dd	72 4e		 jb	 SHORT $LN32@clip_2d_li
  005df	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  005e2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005e6	0f 2f 45 18	 comiss	 xmm0, DWORD PTR _xmin$[ebp]
  005ea	72 41		 jb	 SHORT $LN32@clip_2d_li
  005ec	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  005ef	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  005f4	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  005f7	72 34		 jb	 SHORT $LN32@clip_2d_li
  005f9	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  005fc	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00600	0f 2f 45 1c	 comiss	 xmm0, DWORD PTR _ymin$[ebp]
  00604	72 27		 jb	 SHORT $LN32@clip_2d_li
  00606	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00609	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  0060e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00611	72 1a		 jb	 SHORT $LN32@clip_2d_li
  00613	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00616	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0061a	0f 2f 45 1c	 comiss	 xmm0, DWORD PTR _ymin$[ebp]
  0061e	72 0d		 jb	 SHORT $LN32@clip_2d_li
  00620	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00623	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00628	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0062b	73 18		 jae	 SHORT $LN31@clip_2d_li
$LN32@clip_2d_li:
  0062d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_line@@YGFPAM000MMMM@Z@4JA
  00632	83 c0 57	 add	 eax, 87			; 00000057H
  00635	50		 push	 eax
  00636	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0063b	68 00 00 00 00	 push	 OFFSET ??_C@_0HF@MJNHOMMF@?$CKx1?5?$DO?$DN?5xmin?5?$CG?$CG?5?$CKx1?5?$DM?$DN?5xmax?5?$CG?$CG?5?$CK@
  00640	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN31@clip_2d_li:

; 901  : 		   *y1 >= ymin && *y1 <= ymax && *y2 >= ymin && *y2 <= ymax);
; 902  : 	
; 903  : 	return *x1 != *x2 && *y1 != *y2;

  00645	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00648	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  0064b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0064f	0f 2e 01	 ucomiss xmm0, DWORD PTR [ecx]
  00652	9f		 lahf
  00653	f6 c4 44	 test	 ah, 68			; 00000044H
  00656	7b 1e		 jnp	 SHORT $LN54@clip_2d_li
  00658	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  0065b	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  0065e	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00662	0f 2e 00	 ucomiss xmm0, DWORD PTR [eax]
  00665	9f		 lahf
  00666	f6 c4 44	 test	 ah, 68			; 00000044H
  00669	7b 0b		 jnp	 SHORT $LN54@clip_2d_li
  0066b	b9 01 00 00 00	 mov	 ecx, 1
  00670	66 89 4d b2	 mov	 WORD PTR tv221[ebp], cx
  00674	eb 06		 jmp	 SHORT $LN55@clip_2d_li
$LN54@clip_2d_li:
  00676	33 d2		 xor	 edx, edx
  00678	66 89 55 b2	 mov	 WORD PTR tv221[ebp], dx
$LN55@clip_2d_li:
  0067c	66 8b 45 b2	 mov	 ax, WORD PTR tv221[ebp]
$LN1@clip_2d_li:

; 904  : }

  00680	5f		 pop	 edi
  00681	5e		 pop	 esi
  00682	5b		 pop	 ebx
  00683	8b e5		 mov	 esp, ebp
  00685	5d		 pop	 ebp
  00686	c2 20 00	 ret	 32			; 00000020H
?clip_2d_line@@YGFPAM000MMMM@Z ENDP			; clip_2d_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?limit_pitch@@YGHHPAH@Z
_TEXT	SEGMENT
_pitch$ = 8						; size = 4
_step_direction$ = 12					; size = 4
?limit_pitch@@YGHHPAH@Z PROC				; limit_pitch, COMDAT

; 787  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 788  : 	if (pitch > 9)

  00009	83 7d 08 09	 cmp	 DWORD PTR _pitch$[ebp], 9
  0000d	7e 1f		 jle	 SHORT $LN2@limit_pitc

; 789  : 	{
; 790  : 		pitch -= 18;

  0000f	8b 45 08	 mov	 eax, DWORD PTR _pitch$[ebp]
  00012	83 e8 12	 sub	 eax, 18			; 00000012H
  00015	89 45 08	 mov	 DWORD PTR _pitch$[ebp], eax

; 791  : 
; 792  : 		pitch = -pitch;

  00018	8b 45 08	 mov	 eax, DWORD PTR _pitch$[ebp]
  0001b	f7 d8		 neg	 eax
  0001d	89 45 08	 mov	 DWORD PTR _pitch$[ebp], eax

; 793  : 
; 794  : 		*step_direction = -(*step_direction);

  00020	8b 45 0c	 mov	 eax, DWORD PTR _step_direction$[ebp]
  00023	8b 08		 mov	 ecx, DWORD PTR [eax]
  00025	f7 d9		 neg	 ecx
  00027	8b 55 0c	 mov	 edx, DWORD PTR _step_direction$[ebp]
  0002a	89 0a		 mov	 DWORD PTR [edx], ecx
  0002c	eb 23		 jmp	 SHORT $LN3@limit_pitc
$LN2@limit_pitc:

; 795  : 	}
; 796  : 	else if (pitch < -9)

  0002e	83 7d 08 f7	 cmp	 DWORD PTR _pitch$[ebp], -9 ; fffffff7H
  00032	7d 1d		 jge	 SHORT $LN3@limit_pitc

; 797  : 	{
; 798  : 		pitch += 18;

  00034	8b 45 08	 mov	 eax, DWORD PTR _pitch$[ebp]
  00037	83 c0 12	 add	 eax, 18			; 00000012H
  0003a	89 45 08	 mov	 DWORD PTR _pitch$[ebp], eax

; 799  : 
; 800  : 		pitch = -pitch;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _pitch$[ebp]
  00040	f7 d8		 neg	 eax
  00042	89 45 08	 mov	 DWORD PTR _pitch$[ebp], eax

; 801  : 
; 802  : 		*step_direction = -(*step_direction);

  00045	8b 45 0c	 mov	 eax, DWORD PTR _step_direction$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	f7 d9		 neg	 ecx
  0004c	8b 55 0c	 mov	 edx, DWORD PTR _step_direction$[ebp]
  0004f	89 0a		 mov	 DWORD PTR [edx], ecx
$LN3@limit_pitc:

; 803  : 	}
; 804  : 
; 805  : 	return (pitch);

  00051	8b 45 08	 mov	 eax, DWORD PTR _pitch$[ebp]

; 806  : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 08 00	 ret	 8
?limit_pitch@@YGHHPAH@Z ENDP				; limit_pitch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_heading_scale@@YGXXZ
_TEXT	SEGMENT
tv258 = -156						; size = 8
tv230 = -156						; size = 8
tv196 = -156						; size = 8
tv259 = -148						; size = 8
tv231 = -148						; size = 8
tv197 = -148						; size = 8
tv164 = -148						; size = 4
tv78 = -148						; size = 4
tv337 = -144						; size = 4
tv334 = -144						; size = 4
tv297 = -144						; size = 4
tv156 = -144						; size = 4
tv70 = -144						; size = 4
_command_heading$1 = -76				; size = 4
_sweep_position$2 = -72					; size = 4
_radar$3 = -68						; size = 4
_command_heading$4 = -64				; size = 4
_bearing$5 = -60					; size = 4
_dz$6 = -56						; size = 4
_dx$7 = -52						; size = 4
_waypoint_position$8 = -48				; size = 12
_gunship_position$9 = -36				; size = 4
_wp$10 = -32						; size = 4
_tick_type$ = -28					; size = 4
_int_heading_step_10$ = -24				; size = 4
_loop$ = -20						; size = 4
_mod_heading_step_10$ = -16				; size = 4
_heading_step_10$ = -12					; size = 4
_heading$ = -8						; size = 4
_x$ = -4						; size = 4
?draw_heading_scale@@YGXXZ PROC				; draw_heading_scale, COMDAT

; 491  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 492  : 	float
; 493  : 		x,
; 494  : 		heading,
; 495  : 		heading_step_10,
; 496  : 		mod_heading_step_10;
; 497  : 
; 498  : 	int
; 499  : 		loop,
; 500  : 		int_heading_step_10,
; 501  : 		tick_type;
; 502  : 
; 503  : 	heading = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_HEADING);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00013	74 0f		 je	 SHORT $LN35@draw_headi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00022	eb 24		 jmp	 SHORT $LN36@draw_headi
$LN35@draw_headi:
  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
  0002a	83 c2 0c	 add	 edx, 12			; 0000000cH
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003e	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN36@draw_headi:
  00048	b9 01 00 00 00	 mov	 ecx, 1
  0004d	85 c9		 test	 ecx, ecx
  0004f	74 0c		 je	 SHORT $LN37@draw_headi
  00051	c7 85 6c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv78[ebp], 52	; 00000034H
  0005b	eb 24		 jmp	 SHORT $LN38@draw_headi
$LN37@draw_headi:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
  00063	83 c2 0c	 add	 edx, 12			; 0000000cH
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN38@draw_headi:
  00081	6a 34		 push	 52			; 00000034H
  00083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00089	51		 push	 ecx
  0008a	69 95 70 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv70[ebp], 700
  00094	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0009a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000a1	ff d1		 call	 ecx
  000a3	d9 5d f8	 fstp	 DWORD PTR _heading$[ebp]

; 504  : 
; 505  : 	//
; 506  : 	// adjust 2D environment for heading scale clipping
; 507  : 	//
; 508  : 
; 509  : 	set_2d_window (hud_env, HDG_WINDOW_X_MIN, HDG_WINDOW_Y_MIN, HDG_WINDOW_X_MAX, HDG_WINDOW_Y_MAX);

  000a6	51		 push	 ecx
  000a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	51		 push	 ecx
  000b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f197247
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	51		 push	 ecx
  000c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d0	51		 push	 ecx
  000d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf19999a
  000d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 510  : 
; 511  : /*	VJ 050126 hud mod start
; 512  : 	hdg_viewport_x_min = (hud_viewport_x_org - (hud_viewport_size * HDG_WIDTH_RATIO * 0.5));
; 513  : 
; 514  : 	hdg_viewport_y_min = (hud_viewport_y_org - (hud_viewport_size * 0.5));
; 515  : 
; 516  : 	hdg_viewport_x_max = (hud_viewport_x_org + (hud_viewport_size * HDG_WIDTH_RATIO * 0.5) - 0.001);
; 517  : 
; 518  : 	hdg_viewport_y_max = (hud_viewport_y_org + (hud_viewport_size * 0.5) - 0.001);
; 519  : */
; 520  : 	hdg_viewport_x_min = hud_viewport_x_min + (hud_viewport_size * (1-HDG_WIDTH_RATIO) * 0.5);

  000e9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  000f1	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  000f9	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd999999999999a
  00101	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00109	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0010d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00111	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hdg_viewport_x_min@@3MA, xmm0

; 521  : 
; 522  : 	hdg_viewport_y_min = hud_viewport_y_min;

  00119	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  00121	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hdg_viewport_y_min@@3MA, xmm0

; 523  : 
; 524  : 	hdg_viewport_x_max = hud_viewport_x_max - (hud_viewport_size * (1-HDG_WIDTH_RATIO) * 0.5) - 0.001;

  00129	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00131	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?hud_viewport_size@@3MA
  00139	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd999999999999a
  00141	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00149	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0014d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00155	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00159	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hdg_viewport_x_max@@3MA, xmm0

; 525  : 
; 526  : 	hdg_viewport_y_max = hud_viewport_y_max;

  00161	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  00169	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hdg_viewport_y_max@@3MA, xmm0

; 527  : //VJ 050126 hud mod end
; 528  : 
; 529  : 	set_2d_viewport (hud_env, hdg_viewport_x_min, hdg_viewport_y_min, hdg_viewport_x_max, hdg_viewport_y_max);

  00171	51		 push	 ecx
  00172	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hdg_viewport_y_max@@3MA
  0017a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017f	51		 push	 ecx
  00180	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hdg_viewport_x_max@@3MA
  00188	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018d	51		 push	 ecx
  0018e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hdg_viewport_y_min@@3MA
  00196	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019b	51		 push	 ecx
  0019c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hdg_viewport_x_min@@3MA
  001a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 530  : 
; 531  : 	//
; 532  : 	// draw heading datum tick
; 533  : 	//
; 534  : 
; 535  : 	draw_2d_line (HDG_WINDOW_X_ORG, HDG_TICK_DATUM_TOP, HDG_WINDOW_X_ORG, HDG_TICK_DATUM_BOTTOM, hud_colour);

  001b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  001b9	50		 push	 eax
  001ba	51		 push	 ecx
  001bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f451eb8
  001c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c8	51		 push	 ecx
  001c9	0f 57 c0	 xorps	 xmm0, xmm0
  001cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d1	51		 push	 ecx
  001d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f50a3d7
  001da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001df	51		 push	 ecx
  001e0	0f 57 c0	 xorps	 xmm0, xmm0
  001e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 536  : 
; 537  : 	//
; 538  : 	// draw command heading carat
; 539  : 	//
; 540  : 
; 541  : 	if (!ah64a_damage.navigation_computer)

  001ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ah64a_damage@@3TAH64A_DAMAGE_FLAGS@@A ; ah64a_damage
  001f2	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  001f5	83 e0 01	 and	 eax, 1
  001f8	0f 85 10 02 00
	00		 jne	 $LN8@draw_headi

; 542  : 	{
; 543  : 		entity
; 544  : 			*wp;
; 545  : 
; 546  : 		wp = get_local_entity_current_waypoint (get_gunship_entity ());

  001fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?get_local_entity_current_waypoint@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_current_waypoint
  00209	89 45 e0	 mov	 DWORD PTR _wp$10[ebp], eax

; 547  : 
; 548  : 		if (wp)

  0020c	83 7d e0 00	 cmp	 DWORD PTR _wp$10[ebp], 0
  00210	0f 84 f8 01 00
	00		 je	 $LN8@draw_headi

; 549  : 		{
; 550  : 			vec3d
; 551  : 				*gunship_position,
; 552  : 				waypoint_position;
; 553  : 
; 554  : 			float
; 555  : 				dx,
; 556  : 				dz,
; 557  : 				bearing,
; 558  : 				command_heading;
; 559  : 
; 560  : 			gunship_position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  00216	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0021d	74 0f		 je	 SHORT $LN39@draw_headi
  0021f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00224	8b 08		 mov	 ecx, DWORD PTR [eax]
  00226	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv156[ebp], ecx
  0022c	eb 24		 jmp	 SHORT $LN40@draw_headi
$LN39@draw_headi:
  0022e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
  00234	83 c2 45	 add	 edx, 69			; 00000045H
  00237	52		 push	 edx
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00248	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN40@draw_headi:
  00252	b9 01 00 00 00	 mov	 ecx, 1
  00257	85 c9		 test	 ecx, ecx
  00259	74 0c		 je	 SHORT $LN41@draw_headi
  0025b	c7 85 6c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv164[ebp], 8
  00265	eb 24		 jmp	 SHORT $LN42@draw_headi
$LN41@draw_headi:
  00267	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_heading_scale@@YGXXZ@4JA
  0026d	83 c2 45	 add	 edx, 69			; 00000045H
  00270	52		 push	 edx
  00271	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00276	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0027b	50		 push	 eax
  0027c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00281	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], 0
$LN42@draw_headi:
  0028b	6a 08		 push	 8
  0028d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00293	51		 push	 ecx
  00294	6b 95 70 ff ff
	ff 60		 imul	 edx, DWORD PTR tv156[ebp], 96
  0029b	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv164[ebp]
  002a1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  002a8	ff d1		 call	 ecx
  002aa	89 45 dc	 mov	 DWORD PTR _gunship_position$9[ebp], eax

; 561  : 
; 562  : 			get_waypoint_display_position (get_gunship_entity (), wp, &waypoint_position);

  002ad	8d 45 d0	 lea	 eax, DWORD PTR _waypoint_position$8[ebp]
  002b0	50		 push	 eax
  002b1	8b 4d e0	 mov	 ecx, DWORD PTR _wp$10[ebp]
  002b4	51		 push	 ecx
  002b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002bb	52		 push	 edx
  002bc	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 563  : 
; 564  : 			dx = waypoint_position.x - gunship_position->x;

  002c1	8b 45 dc	 mov	 eax, DWORD PTR _gunship_position$9[ebp]
  002c4	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _waypoint_position$8[ebp]
  002c9	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  002cd	f3 0f 11 45 cc	 movss	 DWORD PTR _dx$7[ebp], xmm0

; 565  : 			dz = waypoint_position.z - gunship_position->z;

  002d2	8b 45 dc	 mov	 eax, DWORD PTR _gunship_position$9[ebp]
  002d5	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _waypoint_position$8[ebp+8]
  002da	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  002df	f3 0f 11 45 c8	 movss	 DWORD PTR _dz$6[ebp], xmm0

; 566  : 
; 567  : 			bearing = atan2 (dx, dz);

  002e4	51		 push	 ecx
  002e5	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _dz$6[ebp]
  002ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ef	51		 push	 ecx
  002f0	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _dx$7[ebp]
  002f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fa	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  002ff	d9 5d c4	 fstp	 DWORD PTR _bearing$5[ebp]

; 568  : 
; 569  : 			command_heading = bearing - heading;

  00302	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _bearing$5[ebp]
  00307	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _heading$[ebp]
  0030c	f3 0f 11 45 c0	 movss	 DWORD PTR _command_heading$4[ebp], xmm0

; 570  : 
; 571  : 			if (command_heading > rad (180.0))

  00311	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  00316	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  0031e	76 18		 jbe	 SHORT $LN9@draw_headi

; 572  : 			{
; 573  : 				command_heading -= rad (360.0);

  00320	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  00325	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  0032d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00331	f3 0f 11 45 c0	 movss	 DWORD PTR _command_heading$4[ebp], xmm0
  00336	eb 29		 jmp	 SHORT $LN11@draw_headi
$LN9@draw_headi:

; 574  : 			}
; 575  : 			else if (command_heading < rad (-180.0))

  00338	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  0033d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  00345	66 0f 2f c8	 comisd	 xmm1, xmm0
  00349	76 16		 jbe	 SHORT $LN11@draw_headi

; 576  : 			{
; 577  : 				command_heading += rad (360.0);

  0034b	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  00350	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00358	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0035c	f3 0f 11 45 c0	 movss	 DWORD PTR _command_heading$4[ebp], xmm0
$LN11@draw_headi:

; 578  : 			}
; 579  : 
; 580  : 			command_heading = bound (command_heading, rad (-90.0), rad (90.0));

  00361	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  00366	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff921fb51000000
  0036e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00372	76 12		 jbe	 SHORT $LN45@draw_headi
  00374	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bff921fb51000000
  0037c	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv197[ebp], xmm0
  00384	eb 3e		 jmp	 SHORT $LN46@draw_headi
$LN45@draw_headi:
  00386	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  0038b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff921fb51000000
  00393	76 12		 jbe	 SHORT $LN43@draw_headi
  00395	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff921fb51000000
  0039d	f2 0f 11 85 64
	ff ff ff	 movsd	 QWORD PTR tv196[ebp], xmm0
  003a5	eb 0d		 jmp	 SHORT $LN44@draw_headi
$LN43@draw_headi:
  003a7	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  003ac	f2 0f 11 85 64
	ff ff ff	 movsd	 QWORD PTR tv196[ebp], xmm0
$LN44@draw_headi:
  003b4	f2 0f 10 85 64
	ff ff ff	 movsd	 xmm0, QWORD PTR tv196[ebp]
  003bc	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv197[ebp], xmm0
$LN46@draw_headi:
  003c4	f2 0f 5a 85 6c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv197[ebp]
  003cc	f3 0f 11 45 c0	 movss	 DWORD PTR _command_heading$4[ebp], xmm0

; 581  : 
; 582  : 			draw_2d_mono_sprite (command_heading_carat, HDG_WINDOW_X_ORG + (command_heading * (HDG_CARAT_FSD / rad (90.0))), HDG_TICK_DATUM_TOP, hud_colour);

  003d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  003d6	50		 push	 eax
  003d7	51		 push	 ecx
  003d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f50a3d7
  003e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e5	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _command_heading$4[ebp]
  003ea	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd668b5487ab7e3
  003f2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  003fa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003fe	51		 push	 ecx
  003ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00404	68 00 00 00 00	 push	 OFFSET ?command_heading_carat@@3PADA
  00409	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite
$LN8@draw_headi:

; 583  : 		}
; 584  : 	}
; 585  : 
; 586  : 	//
; 587  : 	// draw radar sweep indicator
; 588  : 	//
; 589  : 
; 590  : 	{
; 591  : 		radar_params
; 592  : 			*radar;
; 593  : 
; 594  : 		float
; 595  : 			sweep_position;
; 596  : 
; 597  : 		if (!ah64a_damage.radar)

  0040e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ah64a_damage@@3TAH64A_DAMAGE_FLAGS@@A ; ah64a_damage
  00413	83 e0 01	 and	 eax, 1
  00416	0f 85 45 01 00
	00		 jne	 $LN16@draw_headi

; 598  : 		{
; 599  : 			radar = NULL;

  0041c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _radar$3[ebp], 0

; 600  : 
; 601  : 			if (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_GROUND_RADAR)

  00423	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 1 ; target_acquisition_system
  0042a	75 09		 jne	 SHORT $LN13@draw_headi

; 602  : 			{
; 603  : 				radar = &ground_radar;

  0042c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _radar$3[ebp], OFFSET ?ground_radar@@3URADAR_PARAMS@@A ; ground_radar
  00433	eb 10		 jmp	 SHORT $LN15@draw_headi
$LN13@draw_headi:

; 604  : 			}
; 605  : 			else if (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_AIR_RADAR)

  00435	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 2 ; target_acquisition_system
  0043c	75 07		 jne	 SHORT $LN15@draw_headi

; 606  : 			{
; 607  : 				radar = &air_radar;

  0043e	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _radar$3[ebp], OFFSET ?air_radar@@3URADAR_PARAMS@@A ; air_radar
$LN15@draw_headi:

; 608  : 			}
; 609  : 
; 610  : 			if (radar)

  00445	83 7d bc 00	 cmp	 DWORD PTR _radar$3[ebp], 0
  00449	0f 84 12 01 00
	00		 je	 $LN16@draw_headi

; 611  : 			{
; 612  : 				sweep_position = radar->scan_datum + radar->sweep_offset;

  0044f	8b 45 bc	 mov	 eax, DWORD PTR _radar$3[ebp]
  00452	8b 4d bc	 mov	 ecx, DWORD PTR _radar$3[ebp]
  00455	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0045a	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
  0045f	f3 0f 11 45 b8	 movss	 DWORD PTR _sweep_position$2[ebp], xmm0

; 613  : 
; 614  : 				if (sweep_position > rad (180.0))

  00464	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  00469	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  00471	76 18		 jbe	 SHORT $LN17@draw_headi

; 615  : 				{
; 616  : 					sweep_position -= rad (360.0);

  00473	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  00478	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  00480	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00484	f3 0f 11 45 b8	 movss	 DWORD PTR _sweep_position$2[ebp], xmm0
  00489	eb 29		 jmp	 SHORT $LN19@draw_headi
$LN17@draw_headi:

; 617  : 				}
; 618  : 				else if (sweep_position < rad (-180.0))

  0048b	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  00490	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  00498	66 0f 2f c8	 comisd	 xmm1, xmm0
  0049c	76 16		 jbe	 SHORT $LN19@draw_headi

; 619  : 				{
; 620  : 					sweep_position += rad (360.0);

  0049e	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  004a3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  004ab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004af	f3 0f 11 45 b8	 movss	 DWORD PTR _sweep_position$2[ebp], xmm0
$LN19@draw_headi:

; 621  : 				}
; 622  : 
; 623  : 				sweep_position = bound (sweep_position, rad (-90.0), rad (90.0));

  004b4	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  004b9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff921fb51000000
  004c1	66 0f 2f c8	 comisd	 xmm1, xmm0
  004c5	76 12		 jbe	 SHORT $LN49@draw_headi
  004c7	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bff921fb51000000
  004cf	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv231[ebp], xmm0
  004d7	eb 3e		 jmp	 SHORT $LN50@draw_headi
$LN49@draw_headi:
  004d9	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  004de	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff921fb51000000
  004e6	76 12		 jbe	 SHORT $LN47@draw_headi
  004e8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff921fb51000000
  004f0	f2 0f 11 85 64
	ff ff ff	 movsd	 QWORD PTR tv230[ebp], xmm0
  004f8	eb 0d		 jmp	 SHORT $LN48@draw_headi
$LN47@draw_headi:
  004fa	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  004ff	f2 0f 11 85 64
	ff ff ff	 movsd	 QWORD PTR tv230[ebp], xmm0
$LN48@draw_headi:
  00507	f2 0f 10 85 64
	ff ff ff	 movsd	 xmm0, QWORD PTR tv230[ebp]
  0050f	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv231[ebp], xmm0
$LN50@draw_headi:
  00517	f2 0f 5a 85 6c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv231[ebp]
  0051f	f3 0f 11 45 b8	 movss	 DWORD PTR _sweep_position$2[ebp], xmm0

; 624  : 
; 625  : 				draw_2d_mono_sprite (radar_sweep_indicator, HDG_WINDOW_X_ORG + (sweep_position * (RADAR_SWEEP_INDICATOR_FSD / rad (90.0))), HDG_TICK_DATUM_TOP, hud_colour);

  00524	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00529	50		 push	 eax
  0052a	51		 push	 ecx
  0052b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f50a3d7
  00533	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00538	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _sweep_position$2[ebp]
  0053d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd6d1030d49bfe3
  00545	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  0054d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00551	51		 push	 ecx
  00552	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00557	68 00 00 00 00	 push	 OFFSET ?radar_sweep_indicator@@3PADA
  0055c	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite
$LN16@draw_headi:

; 626  : 			}
; 627  : 		}
; 628  : 	}
; 629  : 
; 630  : 	//
; 631  : 	// draw bob-up command heading carat
; 632  : 	//
; 633  : 
; 634  : 	{
; 635  : 		float
; 636  : 			command_heading;
; 637  : 
; 638  : 		if (hud_bob_up_overlay)

  00561	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?hud_bob_up_overlay@@3HA, 0 ; hud_bob_up_overlay
  00568	0f 84 0f 01 00
	00		 je	 $LN20@draw_headi

; 639  : 		{
; 640  : 			command_heading = hud_bob_up_heading - heading;

  0056e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_bob_up_heading@@3MA
  00576	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _heading$[ebp]
  0057b	f3 0f 11 45 b4	 movss	 DWORD PTR _command_heading$1[ebp], xmm0

; 641  : 
; 642  : 			if (command_heading > rad (180.0))

  00580	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  00585	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  0058d	76 18		 jbe	 SHORT $LN21@draw_headi

; 643  : 			{
; 644  : 				command_heading -= rad (360.0);

  0058f	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  00594	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  0059c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a0	f3 0f 11 45 b4	 movss	 DWORD PTR _command_heading$1[ebp], xmm0
  005a5	eb 29		 jmp	 SHORT $LN23@draw_headi
$LN21@draw_headi:

; 645  : 			}
; 646  : 			else if (command_heading < rad (-180.0))

  005a7	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  005ac	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  005b4	66 0f 2f c8	 comisd	 xmm1, xmm0
  005b8	76 16		 jbe	 SHORT $LN23@draw_headi

; 647  : 			{
; 648  : 				command_heading += rad (360.0);

  005ba	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  005bf	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  005c7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005cb	f3 0f 11 45 b4	 movss	 DWORD PTR _command_heading$1[ebp], xmm0
$LN23@draw_headi:

; 649  : 			}
; 650  : 
; 651  : 			command_heading = bound (command_heading, rad (-90.0), rad (90.0));

  005d0	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  005d5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff921fb51000000
  005dd	66 0f 2f c8	 comisd	 xmm1, xmm0
  005e1	76 12		 jbe	 SHORT $LN53@draw_headi
  005e3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bff921fb51000000
  005eb	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv259[ebp], xmm0
  005f3	eb 3e		 jmp	 SHORT $LN54@draw_headi
$LN53@draw_headi:
  005f5	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  005fa	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff921fb51000000
  00602	76 12		 jbe	 SHORT $LN51@draw_headi
  00604	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff921fb51000000
  0060c	f2 0f 11 85 64
	ff ff ff	 movsd	 QWORD PTR tv258[ebp], xmm0
  00614	eb 0d		 jmp	 SHORT $LN52@draw_headi
$LN51@draw_headi:
  00616	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  0061b	f2 0f 11 85 64
	ff ff ff	 movsd	 QWORD PTR tv258[ebp], xmm0
$LN52@draw_headi:
  00623	f2 0f 10 85 64
	ff ff ff	 movsd	 xmm0, QWORD PTR tv258[ebp]
  0062b	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv259[ebp], xmm0
$LN54@draw_headi:
  00633	f2 0f 5a 85 6c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv259[ebp]
  0063b	f3 0f 11 45 b4	 movss	 DWORD PTR _command_heading$1[ebp], xmm0

; 652  : 
; 653  : 			draw_2d_mono_sprite (bob_up_command_heading_carat, HDG_WINDOW_X_ORG + (command_heading * (BOB_UP_HDG_CARAT_FSD / rad (90.0))), HDG_TICK_DATUM_TOP, hud_colour);

  00640	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00645	50		 push	 eax
  00646	51		 push	 ecx
  00647	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f50a3d7
  0064f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00654	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _command_heading$1[ebp]
  00659	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd668b5487ab7e3
  00661	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  00669	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0066d	51		 push	 ecx
  0066e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00673	68 00 00 00 00	 push	 OFFSET ?bob_up_command_heading_carat@@3PADA
  00678	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite
$LN20@draw_headi:

; 654  : 		}
; 655  : 	}
; 656  : 
; 657  : 	////////////////////////////////////////
; 658  : 	//
; 659  : 	// draw heading scale
; 660  : 	//
; 661  : 	////////////////////////////////////////
; 662  : 
; 663  : 	set_mono_font_type (MONO_FONT_TYPE_5X9);

  0067d	6a 02		 push	 2
  0067f	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 664  : 
; 665  : 	heading_step_10 = deg (heading * 0.1);

  00684	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  00689	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00691	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@404ca5dc00000000
  00699	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0069d	f3 0f 11 45 f4	 movss	 DWORD PTR _heading_step_10$[ebp], xmm0

; 666  : 
; 667  : 	int_heading_step_10 = (int) heading_step_10;

  006a2	f3 0f 2c 45 f4	 cvttss2si eax, DWORD PTR _heading_step_10$[ebp]
  006a7	89 45 e8	 mov	 DWORD PTR _int_heading_step_10$[ebp], eax

; 668  : 
; 669  : 	mod_heading_step_10 = heading_step_10 - (float) int_heading_step_10;

  006aa	f3 0f 2a 45 e8	 cvtsi2ss xmm0, DWORD PTR _int_heading_step_10$[ebp]
  006af	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _heading_step_10$[ebp]
  006b4	f3 0f 5c c8	 subss	 xmm1, xmm0
  006b8	f3 0f 11 4d f0	 movss	 DWORD PTR _mod_heading_step_10$[ebp], xmm1

; 670  : 
; 671  : 	int_heading_step_10 -= 10;

  006bd	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  006c0	83 e8 0a	 sub	 eax, 10			; 0000000aH
  006c3	89 45 e8	 mov	 DWORD PTR _int_heading_step_10$[ebp], eax

; 672  : 
; 673  : 	if (int_heading_step_10 < 0)

  006c6	79 09		 jns	 SHORT $LN24@draw_headi

; 674  : 	{
; 675  : 		int_heading_step_10 += 36;

  006c8	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  006cb	83 c0 24	 add	 eax, 36			; 00000024H
  006ce	89 45 e8	 mov	 DWORD PTR _int_heading_step_10$[ebp], eax
$LN24@draw_headi:

; 676  : 	}
; 677  : 
; 678  : 	// tick type:-
; 679  : 	//
; 680  : 	//		0 = long tick (30 degs)
; 681  : 	//		1 = short tick (10 degs)
; 682  : 	//		2 = short tick (20 degs)
; 683  : 
; 684  : 	tick_type = int_heading_step_10 % 3;

  006d1	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  006d4	99		 cdq
  006d5	b9 03 00 00 00	 mov	 ecx, 3
  006da	f7 f9		 idiv	 ecx
  006dc	89 55 e4	 mov	 DWORD PTR _tick_type$[ebp], edx

; 685  : 
; 686  : 	x = - (10.0 + mod_heading_step_10) * HDG_TICK_X_SPACING;

  006df	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _mod_heading_step_10$[ebp]
  006e4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4024000000000000
  006ec	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  006f3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb02b1da46102b2
  006fb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006ff	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0

; 687  : 
; 688  : 	for (loop = 0; loop <= 20; loop++)

  00704	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0070b	eb 09		 jmp	 SHORT $LN4@draw_headi
$LN2@draw_headi:
  0070d	8b 45 ec	 mov	 eax, DWORD PTR _loop$[ebp]
  00710	83 c0 01	 add	 eax, 1
  00713	89 45 ec	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@draw_headi:
  00716	83 7d ec 14	 cmp	 DWORD PTR _loop$[ebp], 20 ; 00000014H
  0071a	0f 8f 72 02 00
	00		 jg	 $LN3@draw_headi

; 689  : 	{
; 690  : 		if (tick_type == 0)

  00720	83 7d e4 00	 cmp	 DWORD PTR _tick_type$[ebp], 0
  00724	0f 85 b6 01 00
	00		 jne	 $LN25@draw_headi

; 691  : 		{
; 692  : 			draw_2d_line (x, HDG_TICK_30_DEG_TOP, x, HDG_TICK_30_DEG_BOTTOM, hud_colour);

  0072a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0072f	50		 push	 eax
  00730	51		 push	 ecx
  00731	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f533333
  00739	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0073e	51		 push	 ecx
  0073f	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00744	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00749	51		 push	 ecx
  0074a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00752	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00757	51		 push	 ecx
  00758	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  0075d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00762	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 693  : 
; 694  : 			set_2d_mono_font_position (x, HDG_TICK_30_DEG_TOP);

  00767	51		 push	 ecx
  00768	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00770	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00775	51		 push	 ecx
  00776	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  0077b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00780	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 695  : 
; 696  : 			switch (int_heading_step_10)

  00785	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  00788	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv297[ebp], eax
  0078e	83 bd 70 ff ff
	ff 1b		 cmp	 DWORD PTR tv297[ebp], 27 ; 0000001bH
  00795	0f 87 c5 00 00
	00		 ja	 $LN31@draw_headi
  0079b	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv297[ebp]
  007a1	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN59@draw_headi[ecx]
  007a8	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN60@draw_headi[edx*4]
$LN27@draw_headi:

; 697  : 			{
; 698  : 				////////////////////////////////////////
; 699  : 				case 0:
; 700  : 				////////////////////////////////////////
; 701  : 				{
; 702  : 					set_mono_font_rel_position (HDG_CHAR_ADJUST_SINGLE, HDG_CHAR_Y_ADJUST);

  007af	51		 push	 ecx
  007b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  007b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007bd	51		 push	 ecx
  007be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0000000
  007c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cb	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 703  : 
; 704  : 					print_mono_font_char ('N');

  007d0	6a 4e		 push	 78			; 0000004eH
  007d2	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 705  : 
; 706  : 					break;

  007d7	e9 02 01 00 00	 jmp	 $LN5@draw_headi
$LN28@draw_headi:

; 707  : 				}
; 708  : 				////////////////////////////////////////
; 709  : 				case 9:
; 710  : 				////////////////////////////////////////
; 711  : 				{
; 712  : 					set_mono_font_rel_position (HDG_CHAR_ADJUST_SINGLE, HDG_CHAR_Y_ADJUST);

  007dc	51		 push	 ecx
  007dd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  007e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ea	51		 push	 ecx
  007eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0000000
  007f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f8	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 713  : 
; 714  : 					print_mono_font_char ('E');

  007fd	6a 45		 push	 69			; 00000045H
  007ff	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 715  : 
; 716  : 					break;

  00804	e9 d5 00 00 00	 jmp	 $LN5@draw_headi
$LN29@draw_headi:

; 717  : 				}
; 718  : 				////////////////////////////////////////
; 719  : 				case 18:
; 720  : 				////////////////////////////////////////
; 721  : 				{
; 722  : 					set_mono_font_rel_position (HDG_CHAR_ADJUST_SINGLE, HDG_CHAR_Y_ADJUST);

  00809	51		 push	 ecx
  0080a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  00812	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00817	51		 push	 ecx
  00818	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0000000
  00820	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00825	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 723  : 
; 724  : 					print_mono_font_char ('S');

  0082a	6a 53		 push	 83			; 00000053H
  0082c	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 725  : 
; 726  : 					break;

  00831	e9 a8 00 00 00	 jmp	 $LN5@draw_headi
$LN30@draw_headi:

; 727  : 				}
; 728  : 				////////////////////////////////////////
; 729  : 				case 27:
; 730  : 				////////////////////////////////////////
; 731  : 				{
; 732  : 					set_mono_font_rel_position (HDG_CHAR_ADJUST_SINGLE, HDG_CHAR_Y_ADJUST);

  00836	51		 push	 ecx
  00837	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  0083f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00844	51		 push	 ecx
  00845	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0000000
  0084d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00852	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 733  : 
; 734  : 					print_mono_font_char ('W');

  00857	6a 57		 push	 87			; 00000057H
  00859	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 735  : 
; 736  : 					break;

  0085e	eb 7e		 jmp	 SHORT $LN5@draw_headi
$LN31@draw_headi:

; 737  : 				}
; 738  : 				////////////////////////////////////////
; 739  : 				default:
; 740  : 				////////////////////////////////////////
; 741  : 				{
; 742  : 					if (int_heading_step_10 < 10)

  00860	83 7d e8 0a	 cmp	 DWORD PTR _int_heading_step_10$[ebp], 10 ; 0000000aH
  00864	7d 2f		 jge	 SHORT $LN32@draw_headi

; 743  : 					{
; 744  : 						set_mono_font_rel_position (HDG_CHAR_ADJUST_SINGLE, HDG_CHAR_Y_ADJUST);

  00866	51		 push	 ecx
  00867	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  0086f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00874	51		 push	 ecx
  00875	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0000000
  0087d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00882	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 745  : 
; 746  : 						print_mono_font_char ('0' + int_heading_step_10);

  00887	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  0088a	83 c0 30	 add	 eax, 48			; 00000030H
  0088d	50		 push	 eax
  0088e	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 747  : 					}
; 748  : 					else

  00893	eb 49		 jmp	 SHORT $LN33@draw_headi
$LN32@draw_headi:

; 749  : 					{
; 750  : 						set_mono_font_rel_position (HDG_CHAR_ADJUST_DOUBLE, HDG_CHAR_Y_ADJUST);

  00895	51		 push	 ecx
  00896	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1000000
  0089e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008a3	51		 push	 ecx
  008a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0a00000
  008ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b1	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 751  : 
; 752  : 						print_mono_font_char ('0' + int_heading_step_10 / 10);

  008b6	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  008b9	99		 cdq
  008ba	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  008bf	f7 f9		 idiv	 ecx
  008c1	83 c0 30	 add	 eax, 48			; 00000030H
  008c4	50		 push	 eax
  008c5	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 753  : 
; 754  : 						print_mono_font_char ('0' + int_heading_step_10 % 10);

  008ca	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  008cd	99		 cdq
  008ce	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  008d3	f7 f9		 idiv	 ecx
  008d5	83 c2 30	 add	 edx, 48			; 00000030H
  008d8	52		 push	 edx
  008d9	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
$LN33@draw_headi:
$LN5@draw_headi:

; 755  : 					}
; 756  : 
; 757  : 					break;
; 758  : 				}
; 759  : 			}
; 760  : 		}
; 761  : 		else

  008de	eb 3d		 jmp	 SHORT $LN26@draw_headi
$LN25@draw_headi:

; 762  : 		{
; 763  : 			draw_2d_line (x, HDG_TICK_10_DEG_TOP, x, HDG_TICK_10_DEG_BOTTOM, hud_colour);

  008e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  008e5	50		 push	 eax
  008e6	51		 push	 ecx
  008e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f570a3d
  008ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008f4	51		 push	 ecx
  008f5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  008fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ff	51		 push	 ecx
  00900	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f628f5c
  00908	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0090d	51		 push	 ecx
  0090e	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00913	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00918	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN26@draw_headi:

; 764  : 		}
; 765  : 
; 766  : 		int_heading_step_10 = (++int_heading_step_10 == 36) ? 0 : int_heading_step_10;

  0091d	8b 45 e8	 mov	 eax, DWORD PTR _int_heading_step_10$[ebp]
  00920	83 c0 01	 add	 eax, 1
  00923	89 45 e8	 mov	 DWORD PTR _int_heading_step_10$[ebp], eax
  00926	83 7d e8 24	 cmp	 DWORD PTR _int_heading_step_10$[ebp], 36 ; 00000024H
  0092a	75 0c		 jne	 SHORT $LN55@draw_headi
  0092c	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv334[ebp], 0
  00936	eb 09		 jmp	 SHORT $LN56@draw_headi
$LN55@draw_headi:
  00938	8b 4d e8	 mov	 ecx, DWORD PTR _int_heading_step_10$[ebp]
  0093b	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv334[ebp], ecx
$LN56@draw_headi:
  00941	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv334[ebp]
  00947	89 55 e8	 mov	 DWORD PTR _int_heading_step_10$[ebp], edx

; 767  : 
; 768  : 		tick_type = (++tick_type == 3) ? 0 : tick_type;

  0094a	8b 45 e4	 mov	 eax, DWORD PTR _tick_type$[ebp]
  0094d	83 c0 01	 add	 eax, 1
  00950	89 45 e4	 mov	 DWORD PTR _tick_type$[ebp], eax
  00953	83 7d e4 03	 cmp	 DWORD PTR _tick_type$[ebp], 3
  00957	75 0c		 jne	 SHORT $LN57@draw_headi
  00959	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv337[ebp], 0
  00963	eb 09		 jmp	 SHORT $LN58@draw_headi
$LN57@draw_headi:
  00965	8b 4d e4	 mov	 ecx, DWORD PTR _tick_type$[ebp]
  00968	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv337[ebp], ecx
$LN58@draw_headi:
  0096e	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv337[ebp]
  00974	89 55 e4	 mov	 DWORD PTR _tick_type$[ebp], edx

; 769  : 
; 770  : 		x += HDG_TICK_X_SPACING;

  00977	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0097c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb02b1da46102b2
  00984	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00988	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0

; 771  : 	}

  0098d	e9 7b fd ff ff	 jmp	 $LN2@draw_headi
$LN3@draw_headi:

; 772  : 
; 773  : 	//
; 774  : 	// restore 2D environment
; 775  : 	//
; 776  : 
; 777  : 	set_2d_window (hud_env, HUD_WINDOW_X_MIN, HUD_WINDOW_Y_MIN, HUD_WINDOW_X_MAX, HUD_WINDOW_Y_MAX);

  00992	51		 push	 ecx
  00993	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  0099b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009a0	51		 push	 ecx
  009a1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  009a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ae	51		 push	 ecx
  009af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  009b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009bc	51		 push	 ecx
  009bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  009c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  009cf	50		 push	 eax
  009d0	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 778  : 
; 779  : 	set_2d_viewport (hud_env, hud_viewport_x_min, hud_viewport_y_min, hud_viewport_x_max, hud_viewport_y_max);

  009d5	51		 push	 ecx
  009d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  009de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009e3	51		 push	 ecx
  009e4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  009ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009f1	51		 push	 ecx
  009f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  009fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009ff	51		 push	 ecx
  00a00	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00a08	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  00a12	50		 push	 eax
  00a13	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 780  : }

  00a18	5f		 pop	 edi
  00a19	5e		 pop	 esi
  00a1a	5b		 pop	 ebx
  00a1b	8b e5		 mov	 esp, ebp
  00a1d	5d		 pop	 ebp
  00a1e	c3		 ret	 0
  00a1f	90		 npad	 1
$LN60@draw_headi:
  00a20	00 00 00 00	 DD	 $LN27@draw_headi
  00a24	00 00 00 00	 DD	 $LN28@draw_headi
  00a28	00 00 00 00	 DD	 $LN29@draw_headi
  00a2c	00 00 00 00	 DD	 $LN30@draw_headi
  00a30	00 00 00 00	 DD	 $LN31@draw_headi
$LN59@draw_headi:
  00a34	00		 DB	 0
  00a35	04		 DB	 4
  00a36	04		 DB	 4
  00a37	04		 DB	 4
  00a38	04		 DB	 4
  00a39	04		 DB	 4
  00a3a	04		 DB	 4
  00a3b	04		 DB	 4
  00a3c	04		 DB	 4
  00a3d	01		 DB	 1
  00a3e	04		 DB	 4
  00a3f	04		 DB	 4
  00a40	04		 DB	 4
  00a41	04		 DB	 4
  00a42	04		 DB	 4
  00a43	04		 DB	 4
  00a44	04		 DB	 4
  00a45	04		 DB	 4
  00a46	02		 DB	 2
  00a47	04		 DB	 4
  00a48	04		 DB	 4
  00a49	04		 DB	 4
  00a4a	04		 DB	 4
  00a4b	04		 DB	 4
  00a4c	04		 DB	 4
  00a4d	04		 DB	 4
  00a4e	04		 DB	 4
  00a4f	03		 DB	 3
?draw_heading_scale@@YGXXZ ENDP				; draw_heading_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_hud_centre_datum@@YGXXZ
_TEXT	SEGMENT
?draw_hud_centre_datum@@YGXXZ PROC			; draw_hud_centre_datum, COMDAT

; 479  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 480  : 	draw_2d_line (-0.10, +0.00, -0.05, +0.00, hud_colour);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	0f 57 c0	 xorps	 xmm0, xmm0
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	51		 push	 ecx
  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	51		 push	 ecx
  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002f	51		 push	 ecx
  00030	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bdcccccd
  00038	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 481  : 	draw_2d_line (+0.10, +0.00, +0.05, +0.00, hud_colour);

  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	0f 57 c0	 xorps	 xmm0, xmm0
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	51		 push	 ecx
  00052	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	51		 push	 ecx
  00060	0f 57 c0	 xorps	 xmm0, xmm0
  00063	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00068	51		 push	 ecx
  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00071	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00076	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 482  : 	draw_2d_line (+0.00, -0.10, +0.00, -0.05, hud_colour);

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  00080	50		 push	 eax
  00081	51		 push	 ecx
  00082	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0008a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008f	51		 push	 ecx
  00090	0f 57 c0	 xorps	 xmm0, xmm0
  00093	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00098	51		 push	 ecx
  00099	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bdcccccd
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	51		 push	 ecx
  000a7	0f 57 c0	 xorps	 xmm0, xmm0
  000aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000af	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 483  : 	draw_2d_line (+0.00, +0.10, +0.00, +0.05, hud_colour);

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  000b9	50		 push	 eax
  000ba	51		 push	 ecx
  000bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  000c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c8	51		 push	 ecx
  000c9	0f 57 c0	 xorps	 xmm0, xmm0
  000cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d1	51		 push	 ecx
  000d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  000da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000df	51		 push	 ecx
  000e0	0f 57 c0	 xorps	 xmm0, xmm0
  000e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e8	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 484  : }

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
?draw_hud_centre_datum@@YGXXZ ENDP			; draw_hud_centre_datum
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_layout_grid@@YGXXZ
_TEXT	SEGMENT
_y$ = -8						; size = 4
_x$ = -4						; size = 4
?draw_layout_grid@@YGXXZ PROC				; draw_layout_grid, COMDAT

; 455  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 456  : 	float
; 457  : 		x,
; 458  : 		y;
; 459  : 
; 460  : 	if (display_hud_layout_grid)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?display_hud_layout_grid@@3HA, 0 ; display_hud_layout_grid
  00010	0f 84 ee 00 00
	00		 je	 $LN6@draw_layou

; 461  : 	{
; 462  : 		for (x = HUD_WINDOW_X_MIN; x <= HUD_WINDOW_X_MAX; x += 0.1)

  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0001e	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0
  00023	eb 16		 jmp	 SHORT $LN4@draw_layou
$LN2@draw_layou:
  00025	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00032	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00036	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0
$LN4@draw_layou:
  0003b	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00040	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  00048	66 0f 2f c8	 comisd	 xmm1, xmm0
  0004c	72 3f		 jb	 SHORT $LN3@draw_layou

; 463  : 		{
; 464  : 			draw_2d_line (x, HUD_WINDOW_Y_MIN, x, HUD_WINDOW_Y_MAX, sys_col_red);

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  0005d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00062	51		 push	 ecx
  00063	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00068	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006d	51		 push	 ecx
  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	51		 push	 ecx
  0007c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 465  : 		}

  0008b	eb 98		 jmp	 SHORT $LN2@draw_layou
$LN3@draw_layou:

; 466  : 
; 467  : 		for (y = HUD_WINDOW_Y_MIN; y <= HUD_WINDOW_Y_MAX; y += 0.1)

  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00095	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0
  0009a	eb 16		 jmp	 SHORT $LN7@draw_layou
$LN5@draw_layou:
  0009c	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ad	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0
$LN7@draw_layou:
  000b2	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000b7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3feff7ced916872b
  000bf	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c3	72 3f		 jb	 SHORT $LN6@draw_layou

; 468  : 		{
; 469  : 			draw_2d_line (HUD_WINDOW_X_MIN, y, HUD_WINDOW_X_MAX, y, sys_col_red);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  000ca	50		 push	 eax
  000cb	51		 push	 ecx
  000cc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	51		 push	 ecx
  000d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	51		 push	 ecx
  000e5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ef	51		 push	 ecx
  000f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 470  : 		}

  00102	eb 98		 jmp	 SHORT $LN5@draw_layou
$LN6@draw_layou:

; 471  : 	}
; 472  : }

  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx
  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c3		 ret	 0
?draw_layout_grid@@YGXXZ ENDP				; draw_layout_grid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z PROC ; transform_hud_screen_co_ords_to_hud_texture_co_ords, COMDAT

; 439  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 440  : 	ASSERT (i);

  00009	83 7d 08 00	 cmp	 DWORD PTR _i$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@transform_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@transform_:

; 441  : 	ASSERT (j);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _j$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@transform_
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z@4JA
  00032	83 c0 02	 add	 eax, 2
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_01CBDEGOCN@j@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@transform_:

; 442  : 
; 443  : 	*i -= hud_screen_x_min;

  00045	8b 45 08	 mov	 eax, DWORD PTR _i$[ebp]
  00048	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0004c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  00054	8b 4d 08	 mov	 ecx, DWORD PTR _i$[ebp]
  00057	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 444  : 	*j -= hud_screen_y_min;

  0005b	8b 45 0c	 mov	 eax, DWORD PTR _j$[ebp]
  0005e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00062	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  0006a	8b 4d 0c	 mov	 ecx, DWORD PTR _j$[ebp]
  0006d	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 445  : 
; 446  : 	*i *= hud_screen_x_scale;

  00071	8b 45 08	 mov	 eax, DWORD PTR _i$[ebp]
  00074	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00078	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hud_screen_x_scale@@3MA
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _i$[ebp]
  00083	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 447  : 	*j *= hud_screen_y_scale;

  00087	8b 45 0c	 mov	 eax, DWORD PTR _j$[ebp]
  0008a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0008e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?hud_screen_y_scale@@3MA
  00096	8b 4d 0c	 mov	 ecx, DWORD PTR _j$[ebp]
  00099	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 448  : }

  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 08 00	 ret	 8
?transform_hud_screen_co_ords_to_hud_texture_co_ords@@YGXPAM0@Z ENDP ; transform_hud_screen_co_ords_to_hud_texture_co_ords
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?clip_2d_point_to_hud_extent@@YGXPAM0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?clip_2d_point_to_hud_extent@@YGXPAM0@Z PROC		; clip_2d_point_to_hud_extent, COMDAT

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 281  : 	ASSERT (x);

  00009	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@clip_2d_po
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01FJMABOPO@x@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@clip_2d_po:

; 282  : 
; 283  : 	ASSERT (y);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _y$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@clip_2d_po
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clip_2d_point_to_hud_extent@@YGXPAM0@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@OIACLBOD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_01EANLCPLP@y@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@clip_2d_po:

; 284  : 
; 285  : 	//
; 286  : 	// clipping assumes that the HUD origin is at (0.0, 0.0)
; 287  : 	//
; 288  : 
; 289  : 	if (*x > HUD_WINDOW_X_MAX)

  00045	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00048	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  0004c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3feff7ced916872b
  00054	76 36		 jbe	 SHORT $LN4@clip_2d_po

; 290  : 	{
; 291  : 		*y = (*y * HUD_WINDOW_X_MAX) / *x;

  00056	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00059	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  0005d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feff7ced916872b
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00068	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  0006c	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00070	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00074	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00077	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 292  : 
; 293  : 		*x = HUD_WINDOW_X_MAX;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0007e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00086	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0008a	eb 49		 jmp	 SHORT $LN6@clip_2d_po
$LN4@clip_2d_po:

; 294  : 	}
; 295  : 	else if (*x < HUD_WINDOW_X_MIN)

  0008c	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0008f	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00093	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
  0009b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0009f	76 34		 jbe	 SHORT $LN6@clip_2d_po

; 296  : 	{
; 297  : 		*y = (*y * HUD_WINDOW_X_MIN) / *x;

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  000a4	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000a8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  000b3	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  000b7	f2 0f 5e c1	 divsd	 xmm0, xmm1
  000bb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000bf	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  000c2	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 298  : 
; 299  : 		*x = HUD_WINDOW_X_MIN;

  000c6	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  000c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000d1	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN6@clip_2d_po:

; 300  : 	}
; 301  : 
; 302  : 	if (*y > HUD_WINDOW_Y_MAX)

  000d5	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  000d8	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000dc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3feff7ced916872b
  000e4	76 36		 jbe	 SHORT $LN7@clip_2d_po

; 303  : 	{
; 304  : 		*x = (*x * HUD_WINDOW_Y_MAX) / *y;

  000e6	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  000e9	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000ed	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3feff7ced916872b
  000f5	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  000f8	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  000fc	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00100	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00104	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00107	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 305  : 
; 306  : 		*y = HUD_WINDOW_Y_MAX;

  0010b	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0010e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00116	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0011a	eb 49		 jmp	 SHORT $LN9@clip_2d_po
$LN7@clip_2d_po:

; 307  : 	}
; 308  : 	else if (*y < HUD_WINDOW_Y_MIN)

  0011c	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0011f	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00123	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bff0000000000000
  0012b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0012f	76 34		 jbe	 SHORT $LN9@clip_2d_po

; 309  : 	{
; 310  : 		*x = (*x * HUD_WINDOW_Y_MIN) / *y;

  00131	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00134	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00138	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  00140	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00143	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  00147	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0014b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014f	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00152	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 311  : 
; 312  : 		*y = HUD_WINDOW_Y_MIN;

  00156	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00159	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00161	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@clip_2d_po:

; 313  : 	}
; 314  : }

  00165	5f		 pop	 edi
  00166	5e		 pop	 esi
  00167	5b		 pop	 ebx
  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c2 08 00	 ret	 8
?clip_2d_point_to_hud_extent@@YGXPAM0@Z ENDP		; clip_2d_point_to_hud_extent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?draw_ah64a_hud@@YGXXZ
_TEXT	SEGMENT
tv94 = -364						; size = 4
tv248 = -360						; size = 4
tv95 = -360						; size = 4
$T1 = -356						; size = 4
_scale$2 = -288						; size = 4
_specular$ = -284					; size = 4
_colour$ = -280						; size = 4
_quad$ = -276						; size = 256
_max_offset$ = -20					; size = 4
_pitch_offset$ = -16					; size = 4
_heading_offset$ = -12					; size = 4
_alpha$ = -8						; size = 4
_store_hud_colour$ = -4					; size = 4
?draw_ah64a_hud@@YGXXZ PROC				; draw_ah64a_hud, COMDAT

; 3042 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 6c 01 00
	00		 sub	 esp, 364		; 0000016cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3043 : 	rgb_colour
; 3044 : 		store_hud_colour;
; 3045 : 
; 3046 : 	int
; 3047 : 		alpha;
; 3048 : 
; 3049 : 	float
; 3050 : 		heading_offset,
; 3051 : 		pitch_offset,
; 3052 : 		max_offset;
; 3053 : 
; 3054 : 	vertex
; 3055 : 		quad[4];
; 3056 : 
; 3057 : 	real_colour
; 3058 : 		colour,
; 3059 : 		specular;
; 3060 : 
; 3061 : 	////////////////////////////////////////
; 3062 : 	//
; 3063 : 	// do not draw damaged HUD
; 3064 : 	//
; 3065 : 	////////////////////////////////////////
; 3066 : 
; 3067 : 	if (ah64a_damage.ihadss || !electrical_system_active())

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ah64a_damage@@3TAH64A_DAMAGE_FLAGS@@A ; ah64a_damage
  00011	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  00014	83 e0 01	 and	 eax, 1
  00017	75 09		 jne	 SHORT $LN5@draw_ah64a
  00019	e8 00 00 00 00	 call	 ?electrical_system_active@@YGHXZ ; electrical_system_active
  0001e	85 c0		 test	 eax, eax
  00020	75 05		 jne	 SHORT $LN4@draw_ah64a
$LN5@draw_ah64a:

; 3068 : 	{
; 3069 : 		return;

  00022	e9 7a 0a 00 00	 jmp	 $LN1@draw_ah64a
$LN4@draw_ah64a:

; 3070 : 	}
; 3071 : 
; 3072 : 	////////////////////////////////////////
; 3073 : 	//
; 3074 : 	// reduce alpha as the HUD interferes with the instrument view (some cards cannot do this)
; 3075 : 	//
; 3076 : 	////////////////////////////////////////
; 3077 : 
; 3078 : 	alpha = 255;

  00027	c7 45 f8 ff 00
	00 00		 mov	 DWORD PTR _alpha$[ebp], 255 ; 000000ffH

; 3079 : 
; 3080 : 	if (in_cockpit)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  00035	0f 84 46 01 00
	00		 je	 $LN13@draw_ah64a

; 3081 : 	{
; 3082 : 		if (get_global_draw_cockpit_graphics ())

  0003b	83 3d b8 01 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+440, 0
  00042	0f 84 39 01 00
	00		 je	 $LN13@draw_ah64a

; 3083 : 		{
; 3084 : 			if (d3d_modulate_alpha)

  00048	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_modulate_alpha@@3HA, 0 ; d3d_modulate_alpha
  0004f	0f 84 fd 00 00
	00		 je	 $LN8@draw_ah64a

; 3085 : 			{
; 3086 : 				heading_offset = APACHE_INSTRUMENT_VIEW_HEADING - pilot_head_heading;

  00055	0f 57 c0	 xorps	 xmm0, xmm0
  00058	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  00060	f3 0f 11 45 f4	 movss	 DWORD PTR _heading_offset$[ebp], xmm0

; 3087 : 
; 3088 : 				if (heading_offset < 0.0)

  00065	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  0006a	0f 57 c9	 xorps	 xmm1, xmm1
  0006d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00071	76 11		 jbe	 SHORT $LN10@draw_ah64a

; 3089 : 				{
; 3090 : 					heading_offset = -heading_offset;

  00073	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _heading_offset$[ebp]
  00078	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0007f	f3 0f 11 45 f4	 movss	 DWORD PTR _heading_offset$[ebp], xmm0
$LN10@draw_ah64a:

; 3091 : 				}
; 3092 : 
; 3093 : 				pitch_offset = APACHE_INSTRUMENT_VIEW_PITCH - pilot_head_pitch;

  00084	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beb2b8c2
  0008c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  00094	f3 0f 11 45 f0	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0

; 3094 : 
; 3095 : 				if (pitch_offset < 0.0)

  00099	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  0009e	0f 57 c9	 xorps	 xmm1, xmm1
  000a1	66 0f 2f c8	 comisd	 xmm1, xmm0
  000a5	76 11		 jbe	 SHORT $LN11@draw_ah64a

; 3096 : 				{
; 3097 : 					pitch_offset = -pitch_offset;

  000a7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pitch_offset$[ebp]
  000ac	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000b3	f3 0f 11 45 f0	 movss	 DWORD PTR _pitch_offset$[ebp], xmm0
$LN11@draw_ah64a:

; 3098 : 				}
; 3099 : 
; 3100 : 				if ((heading_offset < rad (25.0)) && (pitch_offset < rad (25.0)))

  000b8	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _heading_offset$[ebp]
  000bd	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fdbecde5a000000
  000c5	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c9	0f 86 81 00 00
	00		 jbe	 $LN12@draw_ah64a
  000cf	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _pitch_offset$[ebp]
  000d4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fdbecde5a000000
  000dc	66 0f 2f c8	 comisd	 xmm1, xmm0
  000e0	76 6e		 jbe	 SHORT $LN12@draw_ah64a

; 3101 : 				{
; 3102 : 					max_offset = max (heading_offset, pitch_offset);

  000e2	8d 45 f0	 lea	 eax, DWORD PTR _pitch_offset$[ebp]
  000e5	50		 push	 eax
  000e6	8d 4d f4	 lea	 ecx, DWORD PTR _heading_offset$[ebp]
  000e9	51		 push	 ecx
  000ea	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000ef	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000f3	f3 0f 11 45 ec	 movss	 DWORD PTR _max_offset$[ebp], xmm0

; 3103 : 
; 3104 : 					alpha = (int) (max_offset * (200.0 / rad (25.0))) + 55;

  000f8	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _max_offset$[ebp]
  000fd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@407ca5dc1e1ce25c
  00105	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00109	83 c0 37	 add	 eax, 55			; 00000037H
  0010c	89 45 f8	 mov	 DWORD PTR _alpha$[ebp], eax

; 3105 : 
; 3106 : 					alpha = bound (alpha, 0, 255);

  0010f	79 0c		 jns	 SHORT $LN27@draw_ah64a
  00111	c7 85 98 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
  0011b	eb 2a		 jmp	 SHORT $LN28@draw_ah64a
$LN27@draw_ah64a:
  0011d	81 7d f8 ff 00
	00 00		 cmp	 DWORD PTR _alpha$[ebp], 255 ; 000000ffH
  00124	7e 0c		 jle	 SHORT $LN25@draw_ah64a
  00126	c7 85 94 fe ff
	ff ff 00 00 00	 mov	 DWORD PTR tv94[ebp], 255 ; 000000ffH
  00130	eb 09		 jmp	 SHORT $LN26@draw_ah64a
$LN25@draw_ah64a:
  00132	8b 45 f8	 mov	 eax, DWORD PTR _alpha$[ebp]
  00135	89 85 94 fe ff
	ff		 mov	 DWORD PTR tv94[ebp], eax
$LN26@draw_ah64a:
  0013b	8b 8d 94 fe ff
	ff		 mov	 ecx, DWORD PTR tv94[ebp]
  00141	89 8d 98 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
$LN28@draw_ah64a:
  00147	8b 95 98 fe ff
	ff		 mov	 edx, DWORD PTR tv95[ebp]
  0014d	89 55 f8	 mov	 DWORD PTR _alpha$[ebp], edx
$LN12@draw_ah64a:

; 3107 : 				}
; 3108 : 			}
; 3109 : 			else

  00150	eb 2f		 jmp	 SHORT $LN13@draw_ah64a
$LN8@draw_ah64a:

; 3110 : 			{
; 3111 : 				if ((pilot_head_heading == APACHE_INSTRUMENT_VIEW_HEADING) && (pilot_head_pitch == APACHE_INSTRUMENT_VIEW_PITCH))

  00152	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  0015a	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00161	9f		 lahf
  00162	f6 c4 44	 test	 ah, 68			; 00000044H
  00165	7a 1a		 jp	 SHORT $LN13@draw_ah64a
  00167	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  0016f	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@beb2b8c2
  00176	9f		 lahf
  00177	f6 c4 44	 test	 ah, 68			; 00000044H
  0017a	7a 05		 jp	 SHORT $LN13@draw_ah64a

; 3112 : 				{
; 3113 : 					return;

  0017c	e9 20 09 00 00	 jmp	 $LN1@draw_ah64a
$LN13@draw_ah64a:

; 3114 : 				}
; 3115 : 			}
; 3116 : 		}
; 3117 : 	}
; 3118 : 
; 3119 : 	////////////////////////////////////////
; 3120 : 	//
; 3121 : 	// set active 3D environment now else 2D clipping will be affected
; 3122 : 	//
; 3123 : 	////////////////////////////////////////
; 3124 : 
; 3125 : 	set_main_3d_full_screen_params (DISPLAY_3D_TINT_CLEAR, DISPLAY_3D_LIGHT_LEVEL_HIGH, DISPLAY_3D_NOISE_LEVEL_NONE);

  00181	6a 00		 push	 0
  00183	6a 02		 push	 2
  00185	6a 00		 push	 0
  00187	e8 00 00 00 00	 call	 ?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z ; set_main_3d_full_screen_params

; 3126 : 
; 3127 : 	set_3d_active_environment (main_3d_env);

  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 3128 : 
; 3129 : 	////////////////////////////////////////
; 3130 : 	//
; 3131 : 	// set up HUD 2D environment
; 3132 : 	//
; 3133 : 	////////////////////////////////////////
; 3134 : 
; 3135 : 	set_2d_active_environment (hud_env);

  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?set_2d_active_environment@@YGXPAUENV_2D@@@Z ; set_2d_active_environment

; 3136 : 
; 3137 : 	set_2d_window (hud_env, HUD_WINDOW_X_MIN, HUD_WINDOW_Y_MIN, HUD_WINDOW_X_MAX, HUD_WINDOW_Y_MAX);

  001a2	51		 push	 ecx
  001a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	51		 push	 ecx
  001b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  001b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001be	51		 push	 ecx
  001bf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cc	51		 push	 ecx
  001cd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 3138 : 
; 3139 : //VJ 050126 hud mod start
; 3140 : /*
; 3141 : 	hud_viewport_x_org = HUD_VIEWPORT_SIZE * 0.5;
; 3142 : 
; 3143 : 	hud_viewport_y_org = HUD_VIEWPORT_SIZE * 0.5;
; 3144 : 
; 3145 : 	hud_viewport_x_min = 0.0;
; 3146 : 
; 3147 : 	hud_viewport_y_min = 0.0;
; 3148 : 
; 3149 : 	hud_viewport_x_max = HUD_VIEWPORT_SIZE - 0.001;
; 3150 : 
; 3151 : 	hud_viewport_y_max = HUD_VIEWPORT_SIZE - 0.001;
; 3152 : */
; 3153 : 	hud_viewport_size = HUD_VIEWPORT_SIZE * min( 1.0f, global_hud_size2); //VJ

  001e5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001ed	f3 0f 11 85 9c
	fe ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  001f5	68 00 00 00 00	 push	 OFFSET ?global_hud_size2@@3MA ; global_hud_size2
  001fa	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00206	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  0020e	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  00212	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_size@@3MA, xmm0

; 3154 :    
; 3155 : 	hud_viewport_x_org = hud_viewport_size * 0.5;

  0021a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_size@@3MA
  00222	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0022a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0022e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_org@@3MA, xmm0

; 3156 :    
; 3157 : 	hud_viewport_y_org = hud_viewport_size * 0.5;

  00236	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hud_viewport_size@@3MA
  0023e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00246	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0024a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_org@@3MA, xmm0

; 3158 : 
; 3159 : 	hud_viewport_x_min = (HUD_VIEWPORT_SIZE - hud_viewport_size)*0.5;

  00252	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  0025a	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_size@@3MA
  00262	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00266	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0026e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00272	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_min@@3MA, xmm0

; 3160 : 
; 3161 : 	hud_viewport_y_min = (HUD_VIEWPORT_SIZE - hud_viewport_size)*0.5;

  0027a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  00282	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_size@@3MA
  0028a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0028e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00296	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0029a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_min@@3MA, xmm0

; 3162 : 
; 3163 : 	hud_viewport_x_max = HUD_VIEWPORT_SIZE - hud_viewport_x_min-0.001;

  002a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  002aa	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  002b2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002b6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  002be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_x_max@@3MA, xmm0

; 3164 :    
; 3165 : 	hud_viewport_y_max = HUD_VIEWPORT_SIZE - hud_viewport_y_min-0.001;

  002ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  002d2	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  002da	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002de	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  002e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ea	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_viewport_y_max@@3MA, xmm0

; 3166 : 
; 3167 : //VJ 050126 hud mod end
; 3168 : 
; 3169 : 	set_2d_viewport (hud_env, hud_viewport_x_min, hud_viewport_y_min, hud_viewport_x_max, hud_viewport_y_max);

  002f2	51		 push	 ecx
  002f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  002fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00300	51		 push	 ecx
  00301	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  00309	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030e	51		 push	 ecx
  0030f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  00317	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031c	51		 push	 ecx
  0031d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00325	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0032f	50		 push	 eax
  00330	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 3170 : 
; 3171 : 	//
; 3172 : 	// get screen co-ords (scaled to keep HUD size constant)
; 3173 : 	//
; 3174 : 
; 3175 : 	if (get_global_unscaled_displays ())

  00335	83 3d 74 03 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+884, 0
  0033c	0f 84 95 00 00
	00		 je	 $LN14@draw_ah64a

; 3176 : 	{
; 3177 : 		hud_screen_x_min = full_screen_x_mid - 128.0;

  00342	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  0034a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4060000000000000
  00352	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00356	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_min@@3MA, xmm0

; 3178 : 		hud_screen_y_min = full_screen_y_mid - 128.0;

  0035e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00366	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4060000000000000
  0036e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00372	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_min@@3MA, xmm0

; 3179 : 
; 3180 : 		hud_screen_x_max = full_screen_x_mid + 127.999;

  0037a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00382	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@405fffef9db22d0e
  0038a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0038e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_max@@3MA, xmm0

; 3181 : 		hud_screen_y_max = full_screen_y_mid + 127.999;

  00396	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  0039e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@405fffef9db22d0e
  003a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003aa	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_max@@3MA, xmm0

; 3182 : 
; 3183 : 		hud_screen_x_scale = 1.0;

  003b2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003ba	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_scale@@3MA, xmm0

; 3184 : 		hud_screen_y_scale = 1.0;

  003c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003ca	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_scale@@3MA, xmm0

; 3185 : 	}
; 3186 : 	else

  003d2	e9 a8 01 00 00	 jmp	 $LN15@draw_ah64a
$LN14@draw_ah64a:

; 3187 : 	{
; 3188 : 		//VJ 050210, 060913 scaling factor for hud > 1.0
; 3189 : 		float scale = 4.35 - 2.5*global_hud_size2;			 

  003d7	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?global_hud_size2@@3MA
  003df	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4004000000000000
  003e7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4011666666666666
  003ef	f2 0f 5c c8	 subsd	 xmm1, xmm0
  003f3	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  003f7	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _scale$2[ebp], xmm0

; 3190 : 		hud_screen_x_min = full_screen_x_mid - ((256.0 / (scale*640.0 * 2.0)) * full_screen_width);

  003ff	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00407	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  0040f	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4084000000000000
  00417	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  0041f	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  00427	f2 0f 5e d1	 divsd	 xmm2, xmm1
  0042b	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  00433	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00437	f2 0f 5c c2	 subsd	 xmm0, xmm2
  0043b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_min@@3MA, xmm0

; 3191 : 		hud_screen_y_min = full_screen_y_mid - ((256.0 / (scale*480.0 * 2.0)) * full_screen_height);

  00447	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  0044f	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  00457	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@407e000000000000
  0045f	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  00467	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  0046f	f2 0f 5e d1	 divsd	 xmm2, xmm1
  00473	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  0047b	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  0047f	f2 0f 5c c2	 subsd	 xmm0, xmm2
  00483	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00487	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_min@@3MA, xmm0

; 3192 : 
; 3193 : 		hud_screen_x_max = full_screen_x_mid + ((256.0 / (scale*640.0 * 2.0)) * full_screen_width) - 0.001;

  0048f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00497	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  0049f	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4084000000000000
  004a7	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  004af	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  004b7	f2 0f 5e d1	 divsd	 xmm2, xmm1
  004bb	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  004c3	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  004c7	f2 0f 58 c2	 addsd	 xmm0, xmm2
  004cb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  004d3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_max@@3MA, xmm0

; 3194 : 		hud_screen_y_max = full_screen_y_mid + ((256.0 / (scale*480.0 * 2.0)) * full_screen_height) - 0.001;

  004df	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  004e7	f3 0f 5a 8d e0
	fe ff ff	 cvtss2sd xmm1, DWORD PTR _scale$2[ebp]
  004ef	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@407e000000000000
  004f7	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4000000000000000
  004ff	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4070000000000000
  00507	f2 0f 5e d1	 divsd	 xmm2, xmm1
  0050b	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  00513	f2 0f 59 d1	 mulsd	 xmm2, xmm1
  00517	f2 0f 58 c2	 addsd	 xmm0, xmm2
  0051b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00523	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00527	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_max@@3MA, xmm0

; 3195 : 
; 3196 : 		hud_screen_x_scale = scale*640.0 / full_screen_width;

  0052f	f3 0f 5a 85 e0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _scale$2[ebp]
  00537	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4084000000000000
  0053f	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  00547	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0054b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0054f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_x_scale@@3MA, xmm0

; 3197 : 		hud_screen_y_scale = scale*480.0 / full_screen_height;

  00557	f3 0f 5a 85 e0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _scale$2[ebp]
  0055f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@407e000000000000
  00567	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  0056f	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00573	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00577	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hud_screen_y_scale@@3MA, xmm0
$LN15@draw_ah64a:

; 3198 : 
; 3199 : 	}
; 3200 : 
; 3201 : //VJ 050126 hud mod start 
; 3202 : 	hsd.hud_viewport_x_min = hud_viewport_x_min; 

  0057f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_min@@3MA
  00587	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A, xmm0

; 3203 : 	hsd.hud_viewport_y_min = hud_viewport_y_min; 

  0058f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_min@@3MA
  00597	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+4, xmm0

; 3204 : 	hsd.hud_viewport_x_max = hud_viewport_x_max; 

  0059f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_x_max@@3MA
  005a7	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+8, xmm0

; 3205 : 	hsd.hud_viewport_y_max = hud_viewport_y_max; 

  005af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_viewport_y_max@@3MA
  005b7	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+12, xmm0

; 3206 : 	hsd.hud_screen_x_min = hud_screen_x_min;   

  005bf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  005c7	f3 0f 11 05 10
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+16, xmm0

; 3207 : 	hsd.hud_screen_y_min = hud_screen_y_min;   

  005cf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  005d7	f3 0f 11 05 14
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+20, xmm0

; 3208 : 	hsd.hud_screen_x_max = hud_screen_x_max;   

  005df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_max@@3MA
  005e7	f3 0f 11 05 18
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+24, xmm0

; 3209 : 	hsd.hud_screen_y_max = hud_screen_y_max;   

  005ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_max@@3MA
  005f7	f3 0f 11 05 1c
	00 00 00	 movss	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+28, xmm0

; 3210 : 	hsd.hud_texture_screen = hud_texture_screen;

  005ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  00604	a3 20 00 00 00	 mov	 DWORD PTR ?hsd@@3UHUD_SCREEN_DATA@@A+32, eax

; 3211 : 	
; 3212 :    draw_hud_background (&hsd, alpha );

  00609	8b 45 f8	 mov	 eax, DWORD PTR _alpha$[ebp]
  0060c	50		 push	 eax
  0060d	68 00 00 00 00	 push	 OFFSET ?hsd@@3UHUD_SCREEN_DATA@@A ; hsd
  00612	e8 00 00 00 00	 call	 ?draw_hud_background@@YGXPAUHUD_SCREEN_DATA@@H@Z ; draw_hud_background

; 3213 : //VJ 050126 hud mod end
; 3214 : 
; 3215 : 	////////////////////////////////////////
; 3216 : 	//
; 3217 : 	// draw HUD on texture
; 3218 : 	//
; 3219 : 	////////////////////////////////////////
; 3220 : 
; 3221 : 	set_active_screen (hud_texture_screen);

  00617	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  0061c	50		 push	 eax
  0061d	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 3222 : 
; 3223 : 	if (lock_screen (hud_texture_screen))

  00622	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  00627	50		 push	 eax
  00628	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  0062d	85 c0		 test	 eax, eax
  0062f	0f 84 a6 00 00
	00		 je	 $LN16@draw_ah64a

; 3224 : 	{
; 3225 : 	 	store_hud_colour = hud_colour;

  00635	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0063a	89 45 fc	 mov	 DWORD PTR _store_hud_colour$[ebp], eax

; 3226 : 
; 3227 : 		set_rgb_colour (hud_colour, 255, 255, 255, 255);

  0063d	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH
  00644	c6 05 01 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A+1, 255 ; 000000ffH
  0064b	c6 05 00 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A, 255 ; 000000ffH
  00652	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?hud_colour@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 3228 : 
; 3229 : 		set_mono_font_colour (hud_colour);

  00659	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A ; hud_colour
  0065e	50		 push	 eax
  0065f	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 3230 : 
; 3231 : 		set_block (0, 0, HUD_VIEWPORT_SIZE - 1, HUD_VIEWPORT_SIZE - 1, clear_hud_colour);

  00664	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_hud_colour@@3UREAL_COLOUR@@A
  00669	50		 push	 eax
  0066a	68 ff 00 00 00	 push	 255			; 000000ffH
  0066f	68 ff 00 00 00	 push	 255			; 000000ffH
  00674	6a 00		 push	 0
  00676	6a 00		 push	 0
  00678	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 3232 : 
; 3233 : 		draw_layout_grid ();

  0067d	e8 00 00 00 00	 call	 ?draw_layout_grid@@YGXXZ ; draw_layout_grid

; 3234 : 
; 3235 : 		switch (hud_mode)

  00682	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_mode@@3W4HUD_MODES@@A ; hud_mode
  00687	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv248[ebp], eax
  0068d	83 bd 98 fe ff
	ff 00		 cmp	 DWORD PTR tv248[ebp], 0
  00694	74 1b		 je	 SHORT $LN18@draw_ah64a
  00696	83 bd 98 fe ff
	ff 01		 cmp	 DWORD PTR tv248[ebp], 1
  0069d	74 0b		 je	 SHORT $LN17@draw_ah64a
  0069f	83 bd 98 fe ff
	ff 02		 cmp	 DWORD PTR tv248[ebp], 2
  006a6	74 10		 je	 SHORT $LN19@draw_ah64a
  006a8	eb 13		 jmp	 SHORT $LN2@draw_ah64a
$LN17@draw_ah64a:

; 3236 : 		{
; 3237 : 			case HUD_MODE_TRANSITION:
; 3238 : 			{
; 3239 : 				draw_transition_mode_hud();

  006aa	e8 00 00 00 00	 call	 ?draw_transition_mode_hud@@YGXXZ ; draw_transition_mode_hud

; 3240 : 
; 3241 : 				break;

  006af	eb 0c		 jmp	 SHORT $LN2@draw_ah64a
$LN18@draw_ah64a:

; 3242 : 			}
; 3243 : 			case HUD_MODE_NAVIGATION:
; 3244 : 			{
; 3245 : 				draw_navigation_mode_hud ();

  006b1	e8 00 00 00 00	 call	 ?draw_navigation_mode_hud@@YGXXZ ; draw_navigation_mode_hud

; 3246 : 
; 3247 : 				break;

  006b6	eb 05		 jmp	 SHORT $LN2@draw_ah64a
$LN19@draw_ah64a:

; 3248 : 			}
; 3249 : 			case HUD_MODE_WEAPON:
; 3250 : 			{
; 3251 : 				draw_weapon_mode_hud ();

  006b8	e8 00 00 00 00	 call	 ?draw_weapon_mode_hud@@YGXXZ ; draw_weapon_mode_hud
$LN2@draw_ah64a:

; 3252 : 
; 3253 : 				break;
; 3254 : 			}
; 3255 : 		}
; 3256 : 
; 3257 : 		hud_colour = store_hud_colour;

  006bd	8b 45 fc	 mov	 eax, DWORD PTR _store_hud_colour$[ebp]
  006c0	a3 00 00 00 00	 mov	 DWORD PTR ?hud_colour@@3UREAL_COLOUR@@A, eax ; hud_colour

; 3258 : 
; 3259 : 		flush_screen_texture_graphics (hud_texture_screen);

  006c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  006ca	50		 push	 eax
  006cb	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 3260 : 
; 3261 : 		unlock_screen (hud_texture_screen);

  006d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  006d5	50		 push	 eax
  006d6	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN16@draw_ah64a:

; 3262 : 	}
; 3263 : 
; 3264 : 	set_active_screen (video_screen);

  006db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  006e0	50		 push	 eax
  006e1	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 3265 : 
; 3266 : 	////////////////////////////////////////
; 3267 : 	//
; 3268 : 	// render HUD to screen
; 3269 : 	//
; 3270 : 	////////////////////////////////////////
; 3271 : 
; 3272 : 	set_3d_active_environment (main_3d_env);

  006e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  006eb	50		 push	 eax
  006ec	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 3273 : 
; 3274 : 	if (begin_3d_scene ())

  006f1	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  006f6	85 c0		 test	 eax, eax
  006f8	0f 84 a3 03 00
	00		 je	 $LN20@draw_ah64a

; 3275 : 	{
; 3276 : 		set_d3d_transparency_on ();

  006fe	e8 00 00 00 00	 call	 ?set_d3d_transparency_on@@YGXXZ ; set_d3d_transparency_on

; 3277 : 
; 3278 : 		set_d3d_zbuffer_comparison (FALSE);

  00703	6a 00		 push	 0
  00705	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 3279 : 
; 3280 : 		set_d3d_culling (FALSE);

  0070a	6a 00		 push	 0
  0070c	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 3281 : 
; 3282 : 		set_d3d_texture_wrapping (0, FALSE);

  00711	6a 00		 push	 0
  00713	6a 00		 push	 0
  00715	e8 00 00 00 00	 call	 ?set_d3d_texture_wrapping@@YGXHH@Z ; set_d3d_texture_wrapping

; 3283 : 
; 3284 : 		if ((application_video_width == 640) || (get_global_unscaled_displays ()))

  0071a	81 3d 00 00 00
	00 80 02 00 00	 cmp	 DWORD PTR ?application_video_width@@3HA, 640 ; application_video_width, 00000280H
  00724	74 09		 je	 SHORT $LN23@draw_ah64a
  00726	83 3d 74 03 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+884, 0
  0072d	74 17		 je	 SHORT $LN21@draw_ah64a
$LN23@draw_ah64a:

; 3285 : 		{
; 3286 : 			set_d3d_texture_mag_filtering (FALSE);

  0072f	6a 00		 push	 0
  00731	e8 00 00 00 00	 call	 ?set_d3d_texture_mag_filtering@@YGXH@Z ; set_d3d_texture_mag_filtering

; 3287 : 			set_d3d_texture_min_filtering (FALSE);

  00736	6a 00		 push	 0
  00738	e8 00 00 00 00	 call	 ?set_d3d_texture_min_filtering@@YGXH@Z ; set_d3d_texture_min_filtering

; 3288 : 			set_d3d_texture_mip_filtering (FALSE);

  0073d	6a 00		 push	 0
  0073f	e8 00 00 00 00	 call	 ?set_d3d_texture_mip_filtering@@YGXH@Z ; set_d3d_texture_mip_filtering

; 3289 : 		}
; 3290 : 		else

  00744	eb 15		 jmp	 SHORT $LN22@draw_ah64a
$LN21@draw_ah64a:

; 3291 : 		{
; 3292 : 			set_d3d_texture_mag_filtering (TRUE);

  00746	6a 01		 push	 1
  00748	e8 00 00 00 00	 call	 ?set_d3d_texture_mag_filtering@@YGXH@Z ; set_d3d_texture_mag_filtering

; 3293 : 			set_d3d_texture_min_filtering (TRUE);

  0074d	6a 01		 push	 1
  0074f	e8 00 00 00 00	 call	 ?set_d3d_texture_min_filtering@@YGXH@Z ; set_d3d_texture_min_filtering

; 3294 : 			set_d3d_texture_mip_filtering (FALSE);

  00754	6a 00		 push	 0
  00756	e8 00 00 00 00	 call	 ?set_d3d_texture_mip_filtering@@YGXH@Z ; set_d3d_texture_mip_filtering
$LN22@draw_ah64a:

; 3295 : 		}
; 3296 : 
; 3297 : 		set_d3d_flat_shaded_textured_renderstate (get_system_texture_ptr (HUD_TEXTURE_INDEX));

  0075b	68 55 06 00 00	 push	 1621			; 00000655H
  00760	e8 00 00 00 00	 call	 ?get_system_texture_ptr@@YGPAUSCREEN@@H@Z ; get_system_texture_ptr
  00765	50		 push	 eax
  00766	e8 00 00 00 00	 call	 ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate

; 3298 : 
; 3299 : 		////////////////////////////////////////
; 3300 : 		//
; 3301 : 
; 3302 : 		colour.red	  			= hud_colour_table[get_global_hud_colour ()].r;

  0076b	a1 10 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+16
  00770	8a 0c 85 02 00
	00 00		 mov	 cl, BYTE PTR ?hud_colour_table@@3PAUREAL_COLOUR@@A[eax*4+2]
  00777	88 8d ea fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+2], cl

; 3303 : 		colour.green 			= hud_colour_table[get_global_hud_colour ()].g;

  0077d	a1 10 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+16
  00782	8a 0c 85 01 00
	00 00		 mov	 cl, BYTE PTR ?hud_colour_table@@3PAUREAL_COLOUR@@A[eax*4+1]
  00789	88 8d e9 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+1], cl

; 3304 : 		colour.blue	 			= hud_colour_table[get_global_hud_colour ()].b;

  0078f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+16
  00794	8a 0c 85 00 00
	00 00		 mov	 cl, BYTE PTR ?hud_colour_table@@3PAUREAL_COLOUR@@A[eax*4]
  0079b	88 8d e8 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp], cl

; 3305 : 		colour.alpha			= alpha;

  007a1	8a 45 f8	 mov	 al, BYTE PTR _alpha$[ebp]
  007a4	88 85 eb fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+3], al

; 3306 : 
; 3307 : 		specular.red  			= 0;

  007aa	c6 85 e6 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+2], 0

; 3308 : 		specular.green			= 0;

  007b1	c6 85 e5 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+1], 0

; 3309 : 		specular.blue			= 0;

  007b8	c6 85 e4 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp], 0

; 3310 : 		specular.alpha			= 255;

  007bf	c6 85 e7 fe ff
	ff ff		 mov	 BYTE PTR _specular$[ebp+3], 255 ; 000000ffH

; 3311 : 
; 3312 : 		quad[0].i				= hud_screen_x_min;

  007c6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007cb	6b c8 00	 imul	 ecx, eax, 0
  007ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  007d6	f3 0f 11 84 0d
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 3313 : 		quad[0].j	  			= hud_screen_y_min;

  007df	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007e4	6b c8 00	 imul	 ecx, eax, 0
  007e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  007ef	f3 0f 11 84 0d
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 3314 : 		quad[0].z	  			= 0.5;

  007f8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007fd	6b c8 00	 imul	 ecx, eax, 0
  00800	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00808	f3 0f 11 84 0d
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 3315 : 		quad[0].q	  			= 0.5;

  00811	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00816	6b c8 00	 imul	 ecx, eax, 0
  00819	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00821	f3 0f 11 84 0d
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 3316 : 		quad[0].u	  			= 0.0;

  0082a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0082f	6b c8 00	 imul	 ecx, eax, 0
  00832	0f 57 c0	 xorps	 xmm0, xmm0
  00835	f3 0f 11 84 0d
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 3317 : 		quad[0].v	  			= 0.0;

  0083e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00843	6b c8 00	 imul	 ecx, eax, 0
  00846	0f 57 c0	 xorps	 xmm0, xmm0
  00849	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 3318 : 
; 3319 : 		quad[1].i  				= hud_screen_x_max;

  00852	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00857	c1 e0 00	 shl	 eax, 0
  0085a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_max@@3MA
  00862	f3 0f 11 84 05
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 3320 : 		quad[1].j  				= hud_screen_y_min;

  0086b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00870	c1 e0 00	 shl	 eax, 0
  00873	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_min@@3MA
  0087b	f3 0f 11 84 05
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 3321 : 		quad[1].z  				= 0.5;

  00884	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00889	c1 e0 00	 shl	 eax, 0
  0088c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00894	f3 0f 11 84 05
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 3322 : 		quad[1].q  				= 0.5;

  0089d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008a2	c1 e0 00	 shl	 eax, 0
  008a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  008ad	f3 0f 11 84 05
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 3323 : 		quad[1].u  				= 1.0;

  008b6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008bb	c1 e0 00	 shl	 eax, 0
  008be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  008c6	f3 0f 11 84 05
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 3324 : 		quad[1].v  				= 0.0;

  008cf	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008d4	c1 e0 00	 shl	 eax, 0
  008d7	0f 57 c0	 xorps	 xmm0, xmm0
  008da	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 3325 : 
; 3326 : 		quad[2].i				= hud_screen_x_max;

  008e3	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008e8	d1 e0		 shl	 eax, 1
  008ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_max@@3MA
  008f2	f3 0f 11 84 05
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 3327 : 		quad[2].j  				= hud_screen_y_max;

  008fb	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00900	d1 e0		 shl	 eax, 1
  00902	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_max@@3MA
  0090a	f3 0f 11 84 05
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 3328 : 		quad[2].z  				= 0.5;

  00913	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00918	d1 e0		 shl	 eax, 1
  0091a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00922	f3 0f 11 84 05
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 3329 : 		quad[2].q  				= 0.5;

  0092b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00930	d1 e0		 shl	 eax, 1
  00932	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0093a	f3 0f 11 84 05
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 3330 : 		quad[2].u  				= 1.0;

  00943	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00948	d1 e0		 shl	 eax, 1
  0094a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00952	f3 0f 11 84 05
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 3331 : 		quad[2].v  				= 1.0;

  0095b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00960	d1 e0		 shl	 eax, 1
  00962	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0096a	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 3332 : 
; 3333 : 		quad[3].i				= hud_screen_x_min;

  00973	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00978	6b c8 03	 imul	 ecx, eax, 3
  0097b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_x_min@@3MA
  00983	f3 0f 11 84 0d
	fc fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 3334 : 		quad[3].j				= hud_screen_y_max;

  0098c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00991	6b c8 03	 imul	 ecx, eax, 3
  00994	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hud_screen_y_max@@3MA
  0099c	f3 0f 11 84 0d
	00 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 3335 : 		quad[3].z				= 0.5;

  009a5	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009aa	6b c8 03	 imul	 ecx, eax, 3
  009ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  009b5	f3 0f 11 84 0d
	f4 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 3336 : 		quad[3].q				= 0.5;

  009be	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009c3	6b c8 03	 imul	 ecx, eax, 3
  009c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  009ce	f3 0f 11 84 0d
	f8 fe ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 3337 : 		quad[3].u				= 0.0;

  009d7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009dc	6b c8 03	 imul	 ecx, eax, 3
  009df	0f 57 c0	 xorps	 xmm0, xmm0
  009e2	f3 0f 11 84 0d
	04 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 3338 : 		quad[3].v				= 1.0;

  009eb	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009f0	6b c8 03	 imul	 ecx, eax, 3
  009f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009fb	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 3339 : 
; 3340 : 		quad[0].next_vertex 	= &quad[1];

  00a04	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a09	c1 e0 00	 shl	 eax, 0
  00a0c	8d 8c 05 ec fe
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00a13	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00a18	6b c2 00	 imul	 eax, edx, 0
  00a1b	89 8c 05 14 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], ecx

; 3341 : 		quad[1].next_vertex 	= &quad[2];

  00a22	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a27	d1 e0		 shl	 eax, 1
  00a29	8d 8c 05 ec fe
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00a30	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00a35	c1 e2 00	 shl	 edx, 0
  00a38	89 8c 15 14 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+edx+40], ecx

; 3342 : 		quad[2].next_vertex 	= &quad[3];

  00a3f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a44	6b c8 03	 imul	 ecx, eax, 3
  00a47	8d 94 0d ec fe
	ff ff		 lea	 edx, DWORD PTR _quad$[ebp+ecx]
  00a4e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a53	d1 e0		 shl	 eax, 1
  00a55	89 94 05 14 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], edx

; 3343 : 		quad[3].next_vertex	= NULL;

  00a5c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a61	6b c8 03	 imul	 ecx, eax, 3
  00a64	c7 84 0d 14 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$[ebp+ecx+40], 0

; 3344 : 
; 3345 : 		//
; 3346 : 		////////////////////////////////////////
; 3347 : 
; 3348 : 		draw_wbuffered_flat_shaded_textured_polygon (quad, colour, specular);

  00a6f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  00a75	50		 push	 eax
  00a76	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  00a7c	51		 push	 ecx
  00a7d	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _quad$[ebp]
  00a83	52		 push	 edx
  00a84	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 3349 : 
; 3350 : 		set_d3d_transparency_off ();

  00a89	e8 00 00 00 00	 call	 ?set_d3d_transparency_off@@YGXXZ ; set_d3d_transparency_off

; 3351 : 
; 3352 : 		set_d3d_zbuffer_comparison (TRUE);

  00a8e	6a 01		 push	 1
  00a90	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 3353 : 
; 3354 : 		set_d3d_culling (TRUE);

  00a95	6a 01		 push	 1
  00a97	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 3355 : 
; 3356 : 		end_3d_scene ();

  00a9c	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN20@draw_ah64a:
$LN1@draw_ah64a:

; 3357 : 	}
; 3358 : }

  00aa1	5f		 pop	 edi
  00aa2	5e		 pop	 esi
  00aa3	5b		 pop	 ebx
  00aa4	8b e5		 mov	 esp, ebp
  00aa6	5d		 pop	 ebp
  00aa7	c3		 ret	 0
?draw_ah64a_hud@@YGXXZ ENDP				; draw_ah64a_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?deinitialise_ah64a_hud@@YGXXZ
_TEXT	SEGMENT
?deinitialise_ah64a_hud@@YGXXZ PROC			; deinitialise_ah64a_hud, COMDAT

; 3031 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3032 : 	destroy_2d_environment (hud_env);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_env@@3PAUENV_2D@@A
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?destroy_2d_environment@@YGXPAUENV_2D@@@Z ; destroy_2d_environment

; 3033 : 
; 3034 : 	destroy_screen (hud_texture_screen);

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 3035 : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?deinitialise_ah64a_hud@@YGXXZ ENDP			; deinitialise_ah64a_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\ah64a\ah_hud.c
;	COMDAT ?initialise_ah64a_hud@@YGXXZ
_TEXT	SEGMENT
?initialise_ah64a_hud@@YGXXZ PROC			; initialise_ah64a_hud, COMDAT

; 3015 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3016 : 	hud_env = create_2d_environment ();

  00009	e8 00 00 00 00	 call	 ?create_2d_environment@@YGPAUENV_2D@@XZ ; create_2d_environment
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?hud_env@@3PAUENV_2D@@A, eax

; 3017 : 
; 3018 : 	hud_texture_screen = create_system_texture_screen (HUD_VIEWPORT_SIZE, HUD_VIEWPORT_SIZE, HUD_TEXTURE_INDEX, TEXTURE_TYPE_SINGLEALPHA);

  00013	6a 02		 push	 2
  00015	68 55 06 00 00	 push	 1621			; 00000655H
  0001a	68 00 01 00 00	 push	 256			; 00000100H
  0001f	68 00 01 00 00	 push	 256			; 00000100H
  00024	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  00029	a3 00 00 00 00	 mov	 DWORD PTR ?hud_texture_screen@@3PAUSCREEN@@A, eax

; 3019 : 
; 3020 : 	clear_hud_colour.r = 255;

  0002e	c6 05 02 00 00
	00 ff		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A+2, 255 ; 000000ffH

; 3021 : 	clear_hud_colour.g = 255;

  00035	c6 05 01 00 00
	00 ff		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A+1, 255 ; 000000ffH

; 3022 : 	clear_hud_colour.b = 255;

  0003c	c6 05 00 00 00
	00 ff		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A, 255 ; 000000ffH

; 3023 : 	clear_hud_colour.a = 0;

  00043	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?clear_hud_colour@@3UREAL_COLOUR@@A+3, 0

; 3024 : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?initialise_ah64a_hud@@YGXXZ ENDP			; initialise_ah64a_hud
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?tan@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?tan@@YGMM@Z PROC					; tan, COMDAT

; 299  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 300  : 	return (_CSTD tanf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _tanf
  00019	83 c4 04	 add	 esp, 4

; 301  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?tan@@YGMM@Z ENDP					; tan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?atan@@YGMM@Z PROC					; atan, COMDAT

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 47   : 	return (_CSTD atanf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _atanf
  00019	83 c4 04	 add	 esp, 4

; 48   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?atan@@YGMM@Z ENDP					; atan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _tanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_tanf	PROC						; COMDAT

; 764  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 765  :             return (float)tan(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _tan
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 766  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_tanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT

; 638  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 639  :             return (float)atan(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _atan
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 640  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_atanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
