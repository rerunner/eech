; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\area\ar_links.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_area_ui_object_link_functions@@YGXH@Z	; overload_area_ui_object_link_functions
EXTRN	?fn_set_ui_object_association@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_association
EXTRN	?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_association
EXTRN	?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_parent
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_child
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_set_ui_object_next@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_next
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_prev
EXTRN	?fn_get_ui_object_prev@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_prev
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?get_area_ui_object_prev@@YGPAUUI_OBJECT@@PAU1@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_prev@@YGPAUUI_OBJECT@@PAU1@@Z PROC	; get_area_ui_object_prev, COMDAT

; 309  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 310  : 	
; 311  : 	area_ui_object
; 312  : 		*area;
; 313  : 
; 314  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 315  : 
; 316  : 	return (area->prev);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 48	 mov	 eax, DWORD PTR [eax+72]

; 317  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_prev@@YGPAUUI_OBJECT@@PAU1@@Z ENDP	; get_area_ui_object_prev
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?set_area_ui_object_prev@@YGXPAUUI_OBJECT@@0@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_prev$ = 12						; size = 4
?set_area_ui_object_prev@@YGXPAUUI_OBJECT@@0@Z PROC	; set_area_ui_object_prev, COMDAT

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	
; 296  : 	area_ui_object
; 297  : 		*area;
; 298  : 
; 299  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 300  : 
; 301  : 	area->prev = prev;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _prev$[ebp]
  00018	89 48 48	 mov	 DWORD PTR [eax+72], ecx

; 302  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?set_area_ui_object_prev@@YGXPAUUI_OBJECT@@0@Z ENDP	; set_area_ui_object_prev
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?get_area_ui_object_next@@YGPAUUI_OBJECT@@PAU1@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_next@@YGPAUUI_OBJECT@@PAU1@@Z PROC	; get_area_ui_object_next, COMDAT

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	
; 281  : 	area_ui_object
; 282  : 		*area;
; 283  : 
; 284  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 285  : 
; 286  : 	return (area->next);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 44	 mov	 eax, DWORD PTR [eax+68]

; 287  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_next@@YGPAUUI_OBJECT@@PAU1@@Z ENDP	; get_area_ui_object_next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?set_area_ui_object_next@@YGXPAUUI_OBJECT@@0@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_next$ = 12						; size = 4
?set_area_ui_object_next@@YGXPAUUI_OBJECT@@0@Z PROC	; set_area_ui_object_next, COMDAT

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 265  : 	
; 266  : 	area_ui_object
; 267  : 		*area;
; 268  : 
; 269  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 270  : 
; 271  : 	area->next = next;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _next$[ebp]
  00018	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 272  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?set_area_ui_object_next@@YGXPAUUI_OBJECT@@0@Z ENDP	; set_area_ui_object_next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?get_area_ui_object_child@@YGPAUUI_OBJECT@@PAU1@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_child@@YGPAUUI_OBJECT@@PAU1@@Z PROC	; get_area_ui_object_child, COMDAT

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 250  : 	
; 251  : 	area_ui_object
; 252  : 		*area;
; 253  : 
; 254  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 255  : 
; 256  : 	return (area->child);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 257  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_child@@YGPAUUI_OBJECT@@PAU1@@Z ENDP	; get_area_ui_object_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?get_area_ui_object_parent@@YGPAUUI_OBJECT@@PAU1@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_parent@@YGPAUUI_OBJECT@@PAU1@@Z PROC ; get_area_ui_object_parent, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 220  : 	
; 221  : 	area_ui_object
; 222  : 		*area;
; 223  : 
; 224  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 225  : 
; 226  : 	return (area->parent);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]

; 227  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_parent@@YGPAUUI_OBJECT@@PAU1@@Z ENDP ; get_area_ui_object_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?set_area_ui_object_parent@@YGXPAUUI_OBJECT@@0@Z
_TEXT	SEGMENT
_parent$1 = -16						; size = 4
_prev$2 = -12						; size = 4
_next$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_parent$ = 12						; size = 4
?set_area_ui_object_parent@@YGXPAUUI_OBJECT@@0@Z PROC	; set_area_ui_object_parent, COMDAT

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 	
; 112  : 	area_ui_object
; 113  : 		*area;
; 114  : 
; 115  : 	ui_object
; 116  : 		*next;
; 117  : 
; 118  : 	//
; 119  : 	// Remove object from current_parents list
; 120  : 	//
; 121  : 
; 122  : 	if (get_ui_object_parent (obj))

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 de 00 00
	00		 je	 $LN4@set_area_u

; 123  : 	{
; 124  : 
; 125  : 		ui_object
; 126  : 			*prev,
; 127  : 			*parent;
; 128  : 
; 129  : 		next = get_ui_object_next (obj);

  00023	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00033	ff d0		 call	 eax
  00035	89 45 f8	 mov	 DWORD PTR _next$[ebp], eax

; 130  : 		prev = get_ui_object_prev (obj);

  00038	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00041	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_prev@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00048	ff d0		 call	 eax
  0004a	89 45 f4	 mov	 DWORD PTR _prev$2[ebp], eax

; 131  : 
; 132  : 		parent = get_ui_object_parent (obj);

  0004d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00050	50		 push	 eax
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0005d	ff d0		 call	 eax
  0005f	89 45 f0	 mov	 DWORD PTR _parent$1[ebp], eax

; 133  : 
; 134  : 		if (next)

  00062	83 7d f8 00	 cmp	 DWORD PTR _next$[ebp], 0
  00066	74 16		 je	 SHORT $LN5@set_area_u

; 135  : 		{
; 136  : 
; 137  : 			set_ui_object_prev (next, prev);

  00068	8b 45 f4	 mov	 eax, DWORD PTR _prev$2[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _next$[ebp]
  0006f	51		 push	 ecx
  00070	8b 55 f8	 mov	 edx, DWORD PTR _next$[ebp]
  00073	8b 02		 mov	 eax, DWORD PTR [edx]
  00075	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  0007c	ff d1		 call	 ecx
$LN5@set_area_u:

; 138  : 		}
; 139  : 
; 140  : 		if (prev)

  0007e	83 7d f4 00	 cmp	 DWORD PTR _prev$2[ebp], 0
  00082	74 16		 je	 SHORT $LN6@set_area_u

; 141  : 		{
; 142  : 
; 143  : 			set_ui_object_next (prev, next);

  00084	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  00087	50		 push	 eax
  00088	8b 4d f4	 mov	 ecx, DWORD PTR _prev$2[ebp]
  0008b	51		 push	 ecx
  0008c	8b 55 f4	 mov	 edx, DWORD PTR _prev$2[ebp]
  0008f	8b 02		 mov	 eax, DWORD PTR [edx]
  00091	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_next@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  00098	ff d1		 call	 ecx
$LN6@set_area_u:

; 144  : 		}
; 145  : 
; 146  : 		if (get_ui_object_child (parent) == obj)

  0009a	8b 45 f0	 mov	 eax, DWORD PTR _parent$1[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d f0	 mov	 ecx, DWORD PTR _parent$1[ebp]
  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000aa	ff d0		 call	 eax
  000ac	3b 45 08	 cmp	 eax, DWORD PTR _obj$[ebp]
  000af	75 50		 jne	 SHORT $LN4@set_area_u

; 147  : 		{
; 148  : 
; 149  : 			if (prev)

  000b1	83 7d f4 00	 cmp	 DWORD PTR _prev$2[ebp], 0
  000b5	74 18		 je	 SHORT $LN8@set_area_u

; 150  : 			{
; 151  : 
; 152  : 				set_ui_object_child (parent, prev);

  000b7	8b 45 f4	 mov	 eax, DWORD PTR _prev$2[ebp]
  000ba	50		 push	 eax
  000bb	8b 4d f0	 mov	 ecx, DWORD PTR _parent$1[ebp]
  000be	51		 push	 ecx
  000bf	8b 55 f0	 mov	 edx, DWORD PTR _parent$1[ebp]
  000c2	8b 02		 mov	 eax, DWORD PTR [edx]
  000c4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  000cb	ff d1		 call	 ecx
  000cd	eb 32		 jmp	 SHORT $LN4@set_area_u
$LN8@set_area_u:

; 153  : 			}
; 154  : 			else if (next)

  000cf	83 7d f8 00	 cmp	 DWORD PTR _next$[ebp], 0
  000d3	74 18		 je	 SHORT $LN10@set_area_u

; 155  : 			{
; 156  : 
; 157  : 				set_ui_object_child (parent, next);

  000d5	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  000d8	50		 push	 eax
  000d9	8b 4d f0	 mov	 ecx, DWORD PTR _parent$1[ebp]
  000dc	51		 push	 ecx
  000dd	8b 55 f0	 mov	 edx, DWORD PTR _parent$1[ebp]
  000e0	8b 02		 mov	 eax, DWORD PTR [edx]
  000e2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  000e9	ff d1		 call	 ecx

; 158  : 			}
; 159  : 			else

  000eb	eb 14		 jmp	 SHORT $LN4@set_area_u
$LN10@set_area_u:

; 160  : 			{
; 161  : 
; 162  : 				set_ui_object_child (parent, NULL);

  000ed	6a 00		 push	 0
  000ef	8b 45 f0	 mov	 eax, DWORD PTR _parent$1[ebp]
  000f2	50		 push	 eax
  000f3	8b 4d f0	 mov	 ecx, DWORD PTR _parent$1[ebp]
  000f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA[edx*4]
  000ff	ff d0		 call	 eax
$LN4@set_area_u:

; 163  : 			}
; 164  : 		}
; 165  : 	}
; 166  : 
; 167  : 	//
; 168  : 	// insert obj into new_parents list
; 169  : 	//
; 170  : 
; 171  : 	area = (area_ui_object *) obj->data;

  00101	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00104	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00107	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 172  : 
; 173  : 	next = get_ui_object_child (parent);

  0010a	8b 45 0c	 mov	 eax, DWORD PTR _parent$[ebp]
  0010d	50		 push	 eax
  0010e	8b 4d 0c	 mov	 ecx, DWORD PTR _parent$[ebp]
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0011a	ff d0		 call	 eax
  0011c	89 45 f8	 mov	 DWORD PTR _next$[ebp], eax

; 174  : 
; 175  : 	if (area->next)

  0011f	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00122	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00126	74 54		 je	 SHORT $LN12@set_area_u

; 176  : 	{
; 177  : 
; 178  : 		set_ui_object_prev (obj, NULL);

  00128	6a 00		 push	 0
  0012a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0012d	50		 push	 eax
  0012e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00131	8b 11		 mov	 edx, DWORD PTR [ecx]
  00133	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA[edx*4]
  0013a	ff d0		 call	 eax

; 179  : 
; 180  : 		area->parent = parent;

  0013c	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0013f	8b 4d 0c	 mov	 ecx, DWORD PTR _parent$[ebp]
  00142	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 181  : 
; 182  : 		set_ui_object_child (parent, obj);

  00145	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00148	50		 push	 eax
  00149	8b 4d 0c	 mov	 ecx, DWORD PTR _parent$[ebp]
  0014c	51		 push	 ecx
  0014d	8b 55 0c	 mov	 edx, DWORD PTR _parent$[ebp]
  00150	8b 02		 mov	 eax, DWORD PTR [edx]
  00152	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  00159	ff d1		 call	 ecx

; 183  : 
; 184  : 		if (next)

  0015b	83 7d f8 00	 cmp	 DWORD PTR _next$[ebp], 0
  0015f	74 16		 je	 SHORT $LN14@set_area_u

; 185  : 		{
; 186  : 
; 187  : 			set_ui_object_prev (next, obj);

  00161	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00164	50		 push	 eax
  00165	8b 4d f8	 mov	 ecx, DWORD PTR _next$[ebp]
  00168	51		 push	 ecx
  00169	8b 55 f8	 mov	 edx, DWORD PTR _next$[ebp]
  0016c	8b 02		 mov	 eax, DWORD PTR [edx]
  0016e	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  00175	ff d1		 call	 ecx
$LN14@set_area_u:

; 188  : 		}
; 189  : 	}

  00177	e9 80 00 00 00	 jmp	 $LN1@set_area_u
$LN12@set_area_u:

; 190  : 	else if (next)

  0017c	83 7d f8 00	 cmp	 DWORD PTR _next$[ebp], 0
  00180	74 64		 je	 SHORT $LN15@set_area_u
$LN2@set_area_u:

; 191  : 	{
; 192  : 
; 193  : 		while (get_ui_object_next (next))

  00182	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  00185	50		 push	 eax
  00186	8b 4d f8	 mov	 ecx, DWORD PTR _next$[ebp]
  00189	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00192	ff d0		 call	 eax
  00194	85 c0		 test	 eax, eax
  00196	74 17		 je	 SHORT $LN3@set_area_u

; 194  : 		{
; 195  : 
; 196  : 			next= get_ui_object_next (next);

  00198	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _next$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  001a8	ff d0		 call	 eax
  001aa	89 45 f8	 mov	 DWORD PTR _next$[ebp], eax

; 197  : 		}

  001ad	eb d3		 jmp	 SHORT $LN2@set_area_u
$LN3@set_area_u:

; 198  : 
; 199  : 		set_ui_object_prev (obj, next);

  001af	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  001b2	50		 push	 eax
  001b3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b6	51		 push	 ecx
  001b7	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  001ba	8b 02		 mov	 eax, DWORD PTR [edx]
  001bc	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  001c3	ff d1		 call	 ecx

; 200  : 
; 201  : 		set_ui_object_next (next, obj);

  001c5	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _next$[ebp]
  001cc	51		 push	 ecx
  001cd	8b 55 f8	 mov	 edx, DWORD PTR _next$[ebp]
  001d0	8b 02		 mov	 eax, DWORD PTR [edx]
  001d2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_next@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  001d9	ff d1		 call	 ecx

; 202  : 
; 203  : 		area->parent = parent;

  001db	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  001de	8b 4d 0c	 mov	 ecx, DWORD PTR _parent$[ebp]
  001e1	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 204  : 	}
; 205  : 	else

  001e4	eb 16		 jmp	 SHORT $LN1@set_area_u
$LN15@set_area_u:

; 206  : 	{
; 207  : 
; 208  : 		area->parent = parent;

  001e6	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  001e9	8b 4d 0c	 mov	 ecx, DWORD PTR _parent$[ebp]
  001ec	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 209  : 
; 210  : 		set_area_ui_object_child (parent, obj);

  001ef	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001f2	50		 push	 eax
  001f3	8b 4d 0c	 mov	 ecx, DWORD PTR _parent$[ebp]
  001f6	51		 push	 ecx
  001f7	e8 00 00 00 00	 call	 ?set_area_ui_object_child@@YGXPAUUI_OBJECT@@0@Z ; set_area_ui_object_child
$LN1@set_area_u:

; 211  : 	}
; 212  : }

  001fc	5f		 pop	 edi
  001fd	5e		 pop	 esi
  001fe	5b		 pop	 ebx
  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 08 00	 ret	 8
?set_area_ui_object_parent@@YGXPAUUI_OBJECT@@0@Z ENDP	; set_area_ui_object_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?get_area_ui_object_association@@YGPAUUI_OBJECT@@PAU1@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_association@@YGPAUUI_OBJECT@@PAU1@@Z PROC ; get_area_ui_object_association, COMDAT

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 96   : 	
; 97   : 	area_ui_object
; 98   : 		*area;
; 99   : 
; 100  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 101  : 
; 102  : 	return (area->association);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 40 38	 mov	 eax, DWORD PTR [eax+56]

; 103  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_association@@YGPAUUI_OBJECT@@PAU1@@Z ENDP ; get_area_ui_object_association
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?set_area_ui_object_association@@YGXPAUUI_OBJECT@@0@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_association$ = 12					; size = 4
?set_area_ui_object_association@@YGXPAUUI_OBJECT@@0@Z PROC ; set_area_ui_object_association, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	
; 82   : 	area_ui_object
; 83   : 		*area;
; 84   : 
; 85   : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 86   : 
; 87   : 	area->association = association;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _association$[ebp]
  00018	89 48 38	 mov	 DWORD PTR [eax+56], ecx

; 88   : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?set_area_ui_object_association@@YGXPAUUI_OBJECT@@0@Z ENDP ; set_area_ui_object_association
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?set_area_ui_object_child@@YGXPAUUI_OBJECT@@0@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_child$ = 12						; size = 4
?set_area_ui_object_child@@YGXPAUUI_OBJECT@@0@Z PROC	; set_area_ui_object_child, COMDAT

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 235  : 	
; 236  : 	area_ui_object
; 237  : 		*area;
; 238  : 
; 239  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 240  : 
; 241  : 	area->child = child;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _child$[ebp]
  00018	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 242  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?set_area_ui_object_child@@YGXPAUUI_OBJECT@@0@Z ENDP	; set_area_ui_object_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_links.c
;	COMDAT ?overload_area_ui_object_link_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_area_ui_object_link_functions@@YGXH@Z PROC	; overload_area_ui_object_link_functions, COMDAT

; 324  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 325  : 
; 326  : 	fn_set_ui_object_association [type]	= set_area_ui_object_association;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_association@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4], OFFSET ?set_area_ui_object_association@@YGXPAUUI_OBJECT@@0@Z ; set_area_ui_object_association

; 327  : 
; 328  : 	fn_get_ui_object_association [type]	= get_area_ui_object_association;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[eax*4], OFFSET ?get_area_ui_object_association@@YGPAUUI_OBJECT@@PAU1@@Z ; get_area_ui_object_association

; 329  : 
; 330  : 	fn_set_ui_object_parent [type] 		= set_area_ui_object_parent;

  00025	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00028	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4], OFFSET ?set_area_ui_object_parent@@YGXPAUUI_OBJECT@@0@Z ; set_area_ui_object_parent

; 331  : 
; 332  : 	fn_get_ui_object_parent [type] 		= get_area_ui_object_parent;

  00033	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00036	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[eax*4], OFFSET ?get_area_ui_object_parent@@YGPAUUI_OBJECT@@PAU1@@Z ; get_area_ui_object_parent

; 333  : 
; 334  : 	fn_set_ui_object_child [type]			= set_area_ui_object_child;

  00041	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00044	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4], OFFSET ?set_area_ui_object_child@@YGXPAUUI_OBJECT@@0@Z ; set_area_ui_object_child

; 335  : 
; 336  : 	fn_get_ui_object_child [type] 		= get_area_ui_object_child;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00052	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[eax*4], OFFSET ?get_area_ui_object_child@@YGPAUUI_OBJECT@@PAU1@@Z ; get_area_ui_object_child

; 337  : 
; 338  : 	fn_set_ui_object_next [type] 			= set_area_ui_object_next;

  0005d	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00060	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_next@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4], OFFSET ?set_area_ui_object_next@@YGXPAUUI_OBJECT@@0@Z ; set_area_ui_object_next

; 339  : 
; 340  : 	fn_get_ui_object_next [type] 			= get_area_ui_object_next;

  0006b	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0006e	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[eax*4], OFFSET ?get_area_ui_object_next@@YGPAUUI_OBJECT@@PAU1@@Z ; get_area_ui_object_next

; 341  : 
; 342  : 	fn_set_ui_object_prev [type] 			= set_area_ui_object_prev;

  00079	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0007c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4], OFFSET ?set_area_ui_object_prev@@YGXPAUUI_OBJECT@@0@Z ; set_area_ui_object_prev

; 343  : 
; 344  : 	fn_get_ui_object_prev [type] 			= get_area_ui_object_prev;

  00087	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0008a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_prev@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[eax*4], OFFSET ?get_area_ui_object_prev@@YGPAUUI_OBJECT@@PAU1@@Z ; get_area_ui_object_prev

; 345  : }

  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
?overload_area_ui_object_link_functions@@YGXH@Z ENDP	; overload_area_ui_object_link_functions
_TEXT	ENDS
END
