; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\terrain\terrbuf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UfhvihUmseJAUkilqvxghUvvxsUwvyftUgviiyfuOlyq@4B2008FD98C1DD4
PUBLIC	?vertex_buffer@@3HA				; vertex_buffer
PUBLIC	?base_index@@3HA				; base_index
PUBLIC	?terrain_buffered_polygons_texture@@3PAUSCREEN@@A ; terrain_buffered_polygons_texture
PUBLIC	?buffered_vertices@@3PAU_D3DTLVERTEX@@A		; buffered_vertices
PUBLIC	?vertex_buffer_indices@@3PAUINDICES_INFO@@A	; vertex_buffer_indices
PUBLIC	?buffered_indices@@3PAGA			; buffered_indices
;	COMDAT ___@@_PchSym_@00@UfhvihUmseJAUkilqvxghUvvxsUwvyftUgviiyfuOlyq@4B2008FD98C1DD4
_BSS	SEGMENT
___@@_PchSym_@00@UfhvihUmseJAUkilqvxghUvvxsUwvyftUgviiyfuOlyq@4B2008FD98C1DD4 DD 01H DUP (?)
_BSS	ENDS
_BSS	SEGMENT
?vertex_buffer@@3HA DD 01H DUP (?)			; vertex_buffer
?base_index@@3HA DD 01H DUP (?)				; base_index
?terrain_buffered_polygons_texture@@3PAUSCREEN@@A DD 01H DUP (?) ; terrain_buffered_polygons_texture
?buffered_vertices@@3PAU_D3DTLVERTEX@@A DD 01H DUP (?)	; buffered_vertices
?vertex_buffer_indices@@3PAUINDICES_INFO@@A DB 0c0H DUP (?) ; vertex_buffer_indices
?buffered_indices@@3PAGA DW 01000H DUP (?)		; buffered_indices
_BSS	ENDS
PUBLIC	?reset_terrain_3d_buffered_polygons@@YGXXZ	; reset_terrain_3d_buffered_polygons
PUBLIC	?get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z ; get_terrain_3d_buffered_vertices
PUBLIC	?add_terrain_3d_buffered_triangle_fan@@YGXHPAUSCREEN@@@Z ; add_terrain_3d_buffered_triangle_fan
PUBLIC	?add_terrain_3d_buffered_triangle_strip@@YGXHPAUSCREEN@@@Z ; add_terrain_3d_buffered_triangle_strip
PUBLIC	?draw_terrain_3d_buffered_polygons@@YGXXZ	; draw_terrain_3d_buffered_polygons
PUBLIC	?__LINE__Var@?0??get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z@4JA ; `get_terrain_3d_buffered_vertices'::`1'::__LINE__Var
PUBLIC	??_C@_0DK@BBCONCPC@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0DA@IIAHKIP@vertex_buffer?5?$DM?5?$CI?5MAX_ALPHA_VER@ ; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?finalise_primitives@@YGXXZ:PROC		; finalise_primitives
EXTRN	?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z:PROC	; set_d3d_alpha_fog_zbuffer
EXTRN	?set_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC	; set_d3d_texture
EXTRN	?get_d3d_alpha_vertex_buffer_vertices@@YGPAU_D3DTLVERTEX@@H@Z:PROC ; get_d3d_alpha_vertex_buffer_vertices
EXTRN	?unlock_d3d_alpha_vertex_buffer@@YGXH@Z:PROC	; unlock_d3d_alpha_vertex_buffer
EXTRN	?f3d_draw_vb@@YGXIPAUIDirect3DVertexBuffer7@@IIPAGI@Z:PROC ; f3d_draw_vb
EXTRN	?d3d@@3UDIRECT_3D_VECTORS@@A:BYTE		; d3d
;	COMDAT ??_C@_0DA@IIAHKIP@vertex_buffer?5?$DM?5?$CI?5MAX_ALPHA_VER@
CONST	SEGMENT
??_C@_0DA@IIAHKIP@vertex_buffer?5?$DM?5?$CI?5MAX_ALPHA_VER@ DB 'vertex_bu'
	DB	'ffer < ( MAX_ALPHA_VERTEX_BUFFERS -1 )', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BBCONCPC@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DK@BBCONCPC@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\terrain\terrbuf.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z@4JA DD 07eH ; `get_terrain_3d_buffered_vertices'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrbuf.c
;	COMDAT ?draw_terrain_3d_buffered_polygons@@YGXXZ
_TEXT	SEGMENT
_count$1 = -4						; size = 4
?draw_terrain_3d_buffered_polygons@@YGXXZ PROC		; draw_terrain_3d_buffered_polygons, COMDAT

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 240  : 
; 241  : 	if ( vertex_buffer != -1 )

  00009	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?vertex_buffer@@3HA, -1 ; vertex_buffer
  00010	0f 84 c4 00 00
	00		 je	 $LN1@draw_terra

; 242  : 	{
; 243  : 
; 244  : 		//
; 245  : 		// Finalise the last vertex buffer used
; 246  : 		//
; 247  : 
; 248  : 		unlock_d3d_alpha_vertex_buffer ( vertex_buffer );

  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?vertex_buffer@@3HA ; vertex_buffer
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?unlock_d3d_alpha_vertex_buffer@@YGXH@Z ; unlock_d3d_alpha_vertex_buffer

; 249  : 
; 250  : 		vertex_buffer_indices[vertex_buffer].number = base_index - vertex_buffer_indices[vertex_buffer].base_index;

  00021	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  0002e	2b 88 00 00 00
	00		 sub	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax]
  00034	6b 15 00 00 00
	00 0c		 imul	 edx, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0003b	89 8a 04 00 00
	00		 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[edx+4], ecx

; 251  : 
; 252  : 		if ( base_index )

  00041	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?base_index@@3HA, 0 ; base_index
  00048	0f 84 87 00 00
	00		 je	 $LN6@draw_terra

; 253  : 		{
; 254  : 
; 255  : 			int
; 256  : 				count;
; 257  : 
; 258  : 			//
; 259  : 			// Flush any buffered primitives
; 260  : 			//
; 261  : 
; 262  : 			finalise_primitives ();

  0004e	e8 00 00 00 00	 call	 ?finalise_primitives@@YGXXZ ; finalise_primitives

; 263  : 
; 264  : 			//
; 265  : 			// Set the alpha blend modes
; 266  : 			//
; 267  : 	
; 268  : 			set_d3d_alpha_fog_zbuffer ( TRUE, FALSE, TRUE, FALSE );

  00053	6a 00		 push	 0
  00055	6a 01		 push	 1
  00057	6a 00		 push	 0
  00059	6a 01		 push	 1
  0005b	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer

; 269  : 	
; 270  : 			//
; 271  : 			// Set the texture handle
; 272  : 			//
; 273  : 	
; 274  : 			set_d3d_texture ( 0, terrain_buffered_polygons_texture );

  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_buffered_polygons_texture@@3PAUSCREEN@@A ; terrain_buffered_polygons_texture
  00065	50		 push	 eax
  00066	6a 00		 push	 0
  00068	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 275  : 	
; 276  : 			//
; 277  : 			// Draw all the buffered vertex buffers
; 278  : 			//
; 279  : 
; 280  : 			for ( count = 0; count <= vertex_buffer; count++ )

  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00074	eb 09		 jmp	 SHORT $LN4@draw_terra
$LN2@draw_terra:
  00076	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  00079	83 c0 01	 add	 eax, 1
  0007c	89 45 fc	 mov	 DWORD PTR _count$1[ebp], eax
$LN4@draw_terra:
  0007f	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  00082	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?vertex_buffer@@3HA ; vertex_buffer
  00088	7f 3e		 jg	 SHORT $LN3@draw_terra

; 281  : 			{
; 282  : 				f3d_draw_vb ( D3DPT_TRIANGLELIST, d3d.alpha_vertex_buffer[count],

  0008a	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0008e	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+4]
  00094	51		 push	 ecx
  00095	6b 55 fc 0c	 imul	 edx, DWORD PTR _count$1[ebp], 12
  00099	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[edx]
  0009f	8d 0c 45 00 00
	00 00		 lea	 ecx, DWORD PTR ?buffered_indices@@3PAGA[eax*2]
  000a6	51		 push	 ecx
  000a7	6b 55 fc 0c	 imul	 edx, DWORD PTR _count$1[ebp], 12
  000ab	8b 82 08 00 00
	00		 mov	 eax, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[edx+8]
  000b1	50		 push	 eax
  000b2	6a 00		 push	 0
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _count$1[ebp]
  000b7	8b 14 8d 60 24
	02 00		 mov	 edx, DWORD PTR ?d3d@@3UDIRECT_3D_VECTORS@@A[ecx*4+140384]
  000be	52		 push	 edx
  000bf	6a 04		 push	 4
  000c1	e8 00 00 00 00	 call	 ?f3d_draw_vb@@YGXIPAUIDirect3DVertexBuffer7@@IIPAGI@Z ; f3d_draw_vb

; 283  : 																						0,
; 284  : 																						vertex_buffer_indices[count].number_of_vertices_buffered,
; 285  : 																						&buffered_indices[ vertex_buffer_indices[count].base_index ],
; 286  : 																						vertex_buffer_indices[count].number );
; 287  : 			}

  000c6	eb ae		 jmp	 SHORT $LN2@draw_terra
$LN3@draw_terra:

; 288  : 
; 289  : 			//
; 290  : 			// Turn the blend mode off
; 291  : 			//
; 292  : 	
; 293  : 			set_d3d_alpha_fog_zbuffer ( FALSE, TRUE, TRUE, TRUE );

  000c8	6a 01		 push	 1
  000ca	6a 01		 push	 1
  000cc	6a 01		 push	 1
  000ce	6a 00		 push	 0
  000d0	e8 00 00 00 00	 call	 ?set_d3d_alpha_fog_zbuffer@@YGXHHHH@Z ; set_d3d_alpha_fog_zbuffer
$LN6@draw_terra:

; 294  : 		}
; 295  : 
; 296  : 		//
; 297  : 		// Reset the things!
; 298  : 		//
; 299  : 
; 300  : 		reset_terrain_3d_buffered_polygons ();

  000d5	e8 00 00 00 00	 call	 ?reset_terrain_3d_buffered_polygons@@YGXXZ ; reset_terrain_3d_buffered_polygons
$LN1@draw_terra:

; 301  : 	}
; 302  : }

  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c3		 ret	 0
?draw_terrain_3d_buffered_polygons@@YGXXZ ENDP		; draw_terrain_3d_buffered_polygons
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrbuf.c
;	COMDAT ?add_terrain_3d_buffered_triangle_strip@@YGXHPAUSCREEN@@@Z
_TEXT	SEGMENT
_point_count$ = -8					; size = 4
_direction_toggle$ = -4					; size = 4
_number_of_vertices$ = 8				; size = 4
_texture$ = 12						; size = 4
?add_terrain_3d_buffered_triangle_strip@@YGXHPAUSCREEN@@@Z PROC ; add_terrain_3d_buffered_triangle_strip, COMDAT

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 199  : 
; 200  : 	int
; 201  : 		direction_toggle,
; 202  : 		point_count;
; 203  : 
; 204  : 	terrain_buffered_polygons_texture = texture;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_buffered_polygons_texture@@3PAUSCREEN@@A, eax ; terrain_buffered_polygons_texture

; 205  : 
; 206  : 	direction_toggle = FALSE;

  00011	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _direction_toggle$[ebp], 0

; 207  : 
; 208  : 	for ( point_count = 0; point_count < ( number_of_vertices - 2 ); point_count++ )

  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _point_count$[ebp], 0
  0001f	eb 09		 jmp	 SHORT $LN4@add_terrai
$LN2@add_terrai:
  00021	8b 45 f8	 mov	 eax, DWORD PTR _point_count$[ebp]
  00024	83 c0 01	 add	 eax, 1
  00027	89 45 f8	 mov	 DWORD PTR _point_count$[ebp], eax
$LN4@add_terrai:
  0002a	8b 45 08	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  0002d	83 e8 02	 sub	 eax, 2
  00030	39 45 f8	 cmp	 DWORD PTR _point_count$[ebp], eax
  00033	0f 8d ec 00 00
	00		 jge	 $LN3@add_terrai

; 209  : 	{
; 210  : 
; 211  : 		if ( direction_toggle )

  00039	83 7d fc 00	 cmp	 DWORD PTR _direction_toggle$[ebp], 0
  0003d	74 6b		 je	 SHORT $LN5@add_terrai

; 212  : 		{
; 213  : 
; 214  : 			buffered_indices[base_index] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count + 2;

  0003f	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  00046	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  0004c	8b 55 f8	 mov	 edx, DWORD PTR _point_count$[ebp]
  0004f	8d 44 11 02	 lea	 eax, DWORD PTR [ecx+edx+2]
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  00059	66 89 04 4d 00
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[ecx*2], ax

; 215  : 			buffered_indices[base_index+1] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count + 1;

  00061	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  00068	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  0006e	8b 55 f8	 mov	 edx, DWORD PTR _point_count$[ebp]
  00071	8d 44 11 01	 lea	 eax, DWORD PTR [ecx+edx+1]
  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  0007b	66 89 04 4d 02
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[ecx*2+2], ax

; 216  : 			buffered_indices[base_index+2] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count;

  00083	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0008a	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  00090	03 4d f8	 add	 ecx, DWORD PTR _point_count$[ebp]
  00093	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?base_index@@3HA ; base_index
  00099	66 89 0c 55 04
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[edx*2+4], cx

; 217  : 			direction_toggle = FALSE;

  000a1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _direction_toggle$[ebp], 0

; 218  : 		}
; 219  : 		else

  000a8	eb 69		 jmp	 SHORT $LN6@add_terrai
$LN5@add_terrai:

; 220  : 		{
; 221  : 
; 222  : 			buffered_indices[base_index] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count;

  000aa	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000b1	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  000b7	03 4d f8	 add	 ecx, DWORD PTR _point_count$[ebp]
  000ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?base_index@@3HA ; base_index
  000c0	66 89 0c 55 00
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[edx*2], cx

; 223  : 			buffered_indices[base_index+1] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count + 1;

  000c8	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000cf	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  000d5	8b 55 f8	 mov	 edx, DWORD PTR _point_count$[ebp]
  000d8	8d 44 11 01	 lea	 eax, DWORD PTR [ecx+edx+1]
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  000e2	66 89 04 4d 02
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[ecx*2+2], ax

; 224  : 			buffered_indices[base_index+2] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count + 2;

  000ea	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000f1	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  000f7	8b 55 f8	 mov	 edx, DWORD PTR _point_count$[ebp]
  000fa	8d 44 11 02	 lea	 eax, DWORD PTR [ecx+edx+2]
  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  00104	66 89 04 4d 04
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[ecx*2+4], ax

; 225  : 			direction_toggle = TRUE;

  0010c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _direction_toggle$[ebp], 1
$LN6@add_terrai:

; 226  : 		}
; 227  : 
; 228  : 		base_index += 3;

  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_index@@3HA ; base_index
  00118	83 c0 03	 add	 eax, 3
  0011b	a3 00 00 00 00	 mov	 DWORD PTR ?base_index@@3HA, eax ; base_index

; 229  : 	}

  00120	e9 fc fe ff ff	 jmp	 $LN2@add_terrai
$LN3@add_terrai:

; 230  : 
; 231  : 	vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered += number_of_vertices;

  00125	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0012c	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  00132	03 4d 08	 add	 ecx, DWORD PTR _number_of_vertices$[ebp]
  00135	6b 15 00 00 00
	00 0c		 imul	 edx, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0013c	89 8a 08 00 00
	00		 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[edx+8], ecx

; 232  : }

  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	5b		 pop	 ebx
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c2 08 00	 ret	 8
?add_terrain_3d_buffered_triangle_strip@@YGXHPAUSCREEN@@@Z ENDP ; add_terrain_3d_buffered_triangle_strip
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrbuf.c
;	COMDAT ?add_terrain_3d_buffered_triangle_fan@@YGXHPAUSCREEN@@@Z
_TEXT	SEGMENT
_point_count$ = -4					; size = 4
_number_of_vertices$ = 8				; size = 4
_texture$ = 12						; size = 4
?add_terrain_3d_buffered_triangle_fan@@YGXHPAUSCREEN@@@Z PROC ; add_terrain_3d_buffered_triangle_fan, COMDAT

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 176  : 
; 177  : 	int
; 178  : 		point_count;
; 179  : 
; 180  : 	terrain_buffered_polygons_texture = texture;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _texture$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_buffered_polygons_texture@@3PAUSCREEN@@A, eax ; terrain_buffered_polygons_texture

; 181  : 
; 182  : 	for ( point_count = 1; point_count < ( number_of_vertices - 1 ); point_count++ )

  00011	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _point_count$[ebp], 1
  00018	eb 09		 jmp	 SHORT $LN4@add_terrai
$LN2@add_terrai:
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _point_count$[ebp]
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 fc	 mov	 DWORD PTR _point_count$[ebp], eax
$LN4@add_terrai:
  00023	8b 45 08	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  00026	83 e8 01	 sub	 eax, 1
  00029	39 45 fc	 cmp	 DWORD PTR _point_count$[ebp], eax
  0002c	0f 8d 8a 00 00
	00		 jge	 $LN3@add_terrai

; 183  : 	{
; 184  : 
; 185  : 		buffered_indices[base_index++] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered;

  00032	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  0003f	66 8b 90 08 00
	00 00		 mov	 dx, WORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  00046	66 89 14 4d 00
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[ecx*2], dx
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_index@@3HA ; base_index
  00053	83 c0 01	 add	 eax, 1
  00056	a3 00 00 00 00	 mov	 DWORD PTR ?base_index@@3HA, eax ; base_index

; 186  : 		buffered_indices[base_index++] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count;

  0005b	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  00062	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  00068	03 4d fc	 add	 ecx, DWORD PTR _point_count$[ebp]
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?base_index@@3HA ; base_index
  00071	66 89 0c 55 00
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[edx*2], cx
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_index@@3HA ; base_index
  0007e	83 c0 01	 add	 eax, 1
  00081	a3 00 00 00 00	 mov	 DWORD PTR ?base_index@@3HA, eax ; base_index

; 187  : 		buffered_indices[base_index++] = vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + point_count + 1;

  00086	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0008d	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  00093	8b 55 fc	 mov	 edx, DWORD PTR _point_count$[ebp]
  00096	8d 44 11 01	 lea	 eax, DWORD PTR [ecx+edx+1]
  0009a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  000a0	66 89 04 4d 00
	00 00 00	 mov	 WORD PTR ?buffered_indices@@3PAGA[ecx*2], ax
  000a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?base_index@@3HA ; base_index
  000ae	83 c2 01	 add	 edx, 1
  000b1	89 15 00 00 00
	00		 mov	 DWORD PTR ?base_index@@3HA, edx ; base_index

; 188  : 	}

  000b7	e9 5e ff ff ff	 jmp	 $LN2@add_terrai
$LN3@add_terrai:

; 189  : 
; 190  : 	vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered += number_of_vertices;

  000bc	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000c3	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  000c9	03 4d 08	 add	 ecx, DWORD PTR _number_of_vertices$[ebp]
  000cc	6b 15 00 00 00
	00 0c		 imul	 edx, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000d3	89 8a 08 00 00
	00		 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[edx+8], ecx

; 191  : }

  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 08 00	 ret	 8
?add_terrain_3d_buffered_triangle_fan@@YGXHPAUSCREEN@@@Z ENDP ; add_terrain_3d_buffered_triangle_fan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrbuf.c
;	COMDAT ?get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z
_TEXT	SEGMENT
_number_of_vertices$ = 8				; size = 4
?get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z PROC ; get_terrain_3d_buffered_vertices, COMDAT

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 127  : 
; 128  : 	if ( vertex_buffer == -1 )

  00009	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?vertex_buffer@@3HA, -1 ; vertex_buffer
  00010	75 46		 jne	 SHORT $LN2@get_terrai

; 129  : 	{
; 130  : 
; 131  : 		//
; 132  : 		// Open up a vertex buffer
; 133  : 		//
; 134  : 
; 135  : 		base_index = 0;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?base_index@@3HA, 0 ; base_index

; 136  : 	
; 137  : 		vertex_buffer = 0;

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?vertex_buffer@@3HA, 0 ; vertex_buffer

; 138  : 	
; 139  : 		vertex_buffer_indices[vertex_buffer].base_index = 0;

  00026	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0002d	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax], 0

; 140  : 		vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered = 0;

  00037	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0003e	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8], 0

; 141  : 
; 142  : 		buffered_vertices = get_d3d_alpha_vertex_buffer_vertices ( vertex_buffer );

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?vertex_buffer@@3HA ; vertex_buffer
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?get_d3d_alpha_vertex_buffer_vertices@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_alpha_vertex_buffer_vertices
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_vertices@@3PAU_D3DTLVERTEX@@A, eax ; buffered_vertices
$LN2@get_terrai:

; 143  : 	}
; 144  : 
; 145  : 	if ( vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered + number_of_vertices > 256 )

  00058	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  0005f	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  00065	03 4d 08	 add	 ecx, DWORD PTR _number_of_vertices$[ebp]
  00068	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  0006e	0f 8e 8d 00 00
	00		 jle	 $LN3@get_terrai

; 146  : 	{
; 147  : 
; 148  : 		//
; 149  : 		// Move onto the next vertex buffer
; 150  : 		//
; 151  : 
; 152  : 		ASSERT ( vertex_buffer < ( MAX_ALPHA_VERTEX_BUFFERS -1 ) );

  00074	83 3d 00 00 00
	00 0f		 cmp	 DWORD PTR ?vertex_buffer@@3HA, 15 ; vertex_buffer, 0000000fH
  0007b	7c 18		 jl	 SHORT $LN4@get_terrai
  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z@4JA
  00082	83 c0 1a	 add	 eax, 26			; 0000001aH
  00085	50		 push	 eax
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@BBCONCPC@c?3?2users?2nhv90?2projects?2eech?2mo@
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@IIAHKIP@vertex_buffer?5?$DM?5?$CI?5MAX_ALPHA_VER@
  00090	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_terrai:

; 153  : 
; 154  : 		unlock_d3d_alpha_vertex_buffer ( vertex_buffer );

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?vertex_buffer@@3HA ; vertex_buffer
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?unlock_d3d_alpha_vertex_buffer@@YGXH@Z ; unlock_d3d_alpha_vertex_buffer

; 155  : 
; 156  : 		vertex_buffer_indices[vertex_buffer].number = base_index - vertex_buffer_indices[vertex_buffer].base_index;

  000a0	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  000ad	2b 88 00 00 00
	00		 sub	 ecx, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax]
  000b3	6b 15 00 00 00
	00 0c		 imul	 edx, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000ba	89 8a 04 00 00
	00		 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[edx+4], ecx

; 157  : 
; 158  : 		vertex_buffer++;

  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?vertex_buffer@@3HA ; vertex_buffer
  000c5	83 c0 01	 add	 eax, 1
  000c8	a3 00 00 00 00	 mov	 DWORD PTR ?vertex_buffer@@3HA, eax ; vertex_buffer

; 159  : 
; 160  : 		vertex_buffer_indices[vertex_buffer].base_index = base_index;

  000cd	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?base_index@@3HA ; base_index
  000da	89 88 00 00 00
	00		 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax], ecx

; 161  : 
; 162  : 		vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered = 0;

  000e0	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  000e7	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8], 0

; 163  : 
; 164  : 		buffered_vertices = get_d3d_alpha_vertex_buffer_vertices ( vertex_buffer );

  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?vertex_buffer@@3HA ; vertex_buffer
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?get_d3d_alpha_vertex_buffer_vertices@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_alpha_vertex_buffer_vertices
  000fc	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_vertices@@3PAU_D3DTLVERTEX@@A, eax ; buffered_vertices
$LN3@get_terrai:

; 165  : 	}
; 166  : 
; 167  : 	return ( &buffered_vertices[vertex_buffer_indices[vertex_buffer].number_of_vertices_buffered] );

  00101	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?vertex_buffer@@3HA, 12 ; vertex_buffer
  00108	8b 80 08 00 00
	00		 mov	 eax, DWORD PTR ?vertex_buffer_indices@@3PAUINDICES_INFO@@A[eax+8]
  0010e	c1 e0 05	 shl	 eax, 5
  00111	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?buffered_vertices@@3PAU_D3DTLVERTEX@@A ; buffered_vertices

; 168  : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c2 04 00	 ret	 4
?get_terrain_3d_buffered_vertices@@YGPAU_D3DTLVERTEX@@H@Z ENDP ; get_terrain_3d_buffered_vertices
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrbuf.c
;	COMDAT ?reset_terrain_3d_buffered_polygons@@YGXXZ
_TEXT	SEGMENT
?reset_terrain_3d_buffered_polygons@@YGXXZ PROC		; reset_terrain_3d_buffered_polygons, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 117  : 
; 118  : 	vertex_buffer = -1;

  00009	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?vertex_buffer@@3HA, -1 ; vertex_buffer

; 119  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?reset_terrain_3d_buffered_polygons@@YGXXZ ENDP		; reset_terrain_3d_buffered_polygons
_TEXT	ENDS
END
