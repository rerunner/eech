; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\misc\gameexit.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?display_exit_message_flag@@3HA			; display_exit_message_flag
PUBLIC	?exit_flight_loop_flag@@3HA			; exit_flight_loop_flag
PUBLIC	?game_exit_type@@3W4GAME_EXIT_TYPES@@A		; game_exit_type
PUBLIC	?old_view_mode@@3W4VIEW_MODES@@A		; old_view_mode
PUBLIC	?old_camera_mode@@3W4CAMERA_MODES@@A		; old_camera_mode
PUBLIC	?game_exit_text@@3PAPBDA			; game_exit_text
PUBLIC	??_C@_07DNODLGKM@INVALID@			; `string'
PUBLIC	??_C@_0BE@ENIDHPDC@Quit?5Mission?$DP?5?$CIY?1N?$CJ@ ; `string'
PUBLIC	??_C@_0BF@FGHELIK@Exit?5Campaign?$DP?5?$CIY?1N?$CJ@ ; `string'
PUBLIC	??_C@_0BN@ODGJOFED@Exit?5Dynamic?5Missions?$DP?5?$CIY?1N?$CJ@ ; `string'
PUBLIC	??_C@_0CC@CANKGBAK@Exit?5Comanche?5Versus?5Hokum?$DP?5?$CIY?1@ ; `string'
PUBLIC	??_C@_0M@KPNEPHAO@Press?5Space@			; `string'
PUBLIC	??_C@_07OOIBODHN@KICKOUT@			; `string'
PUBLIC	??_C@_0BB@HJOGCLOO@Exit?5Demo?$DP?5?$CIY?1N?$CJ@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
_BSS	SEGMENT
?display_exit_message_flag@@3HA DD 01H DUP (?)		; display_exit_message_flag
?exit_flight_loop_flag@@3HA DD 01H DUP (?)		; exit_flight_loop_flag
?game_exit_type@@3W4GAME_EXIT_TYPES@@A DD 01H DUP (?)	; game_exit_type
?old_view_mode@@3W4VIEW_MODES@@A DD 01H DUP (?)		; old_view_mode
?old_camera_mode@@3W4CAMERA_MODES@@A DD 01H DUP (?)	; old_camera_mode
_BSS	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HJOGCLOO@Exit?5Demo?$DP?5?$CIY?1N?$CJ@
CONST	SEGMENT
??_C@_0BB@HJOGCLOO@Exit?5Demo?$DP?5?$CIY?1N?$CJ@ DB 'Exit Demo? (Y/N)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OOIBODHN@KICKOUT@
CONST	SEGMENT
??_C@_07OOIBODHN@KICKOUT@ DB 'KICKOUT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KPNEPHAO@Press?5Space@
CONST	SEGMENT
??_C@_0M@KPNEPHAO@Press?5Space@ DB 'Press Space', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CANKGBAK@Exit?5Comanche?5Versus?5Hokum?$DP?5?$CIY?1@
CONST	SEGMENT
??_C@_0CC@CANKGBAK@Exit?5Comanche?5Versus?5Hokum?$DP?5?$CIY?1@ DB 'Exit C'
	DB	'omanche Versus Hokum? (Y/N)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ODGJOFED@Exit?5Dynamic?5Missions?$DP?5?$CIY?1N?$CJ@
CONST	SEGMENT
??_C@_0BN@ODGJOFED@Exit?5Dynamic?5Missions?$DP?5?$CIY?1N?$CJ@ DB 'Exit Dy'
	DB	'namic Missions? (Y/N)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FGHELIK@Exit?5Campaign?$DP?5?$CIY?1N?$CJ@
CONST	SEGMENT
??_C@_0BF@FGHELIK@Exit?5Campaign?$DP?5?$CIY?1N?$CJ@ DB 'Exit Campaign? (Y'
	DB	'/N)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ENIDHPDC@Quit?5Mission?$DP?5?$CIY?1N?$CJ@
CONST	SEGMENT
??_C@_0BE@ENIDHPDC@Quit?5Mission?$DP?5?$CIY?1N?$CJ@ DB 'Quit Mission? (Y/'
	DB	'N)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07DNODLGKM@INVALID@
CONST	SEGMENT
??_C@_07DNODLGKM@INVALID@ DB 'INVALID', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?game_exit_text@@3PAPBDA DD FLAT:??_C@_07DNODLGKM@INVALID@ ; game_exit_text
	DD	FLAT:??_C@_0BE@ENIDHPDC@Quit?5Mission?$DP?5?$CIY?1N?$CJ@
	DD	FLAT:??_C@_0BF@FGHELIK@Exit?5Campaign?$DP?5?$CIY?1N?$CJ@
	DD	FLAT:??_C@_0BN@ODGJOFED@Exit?5Dynamic?5Missions?$DP?5?$CIY?1N?$CJ@
	DD	FLAT:??_C@_0CC@CANKGBAK@Exit?5Comanche?5Versus?5Hokum?$DP?5?$CIY?1@
	DD	FLAT:??_C@_0M@KPNEPHAO@Press?5Space@
	DD	FLAT:??_C@_07OOIBODHN@KICKOUT@
	DD	FLAT:??_C@_0BB@HJOGCLOO@Exit?5Demo?$DP?5?$CIY?1N?$CJ@
	DD	FLAT:??_C@_0BE@ENIDHPDC@Quit?5Mission?$DP?5?$CIY?1N?$CJ@
	DD	FLAT:??_C@_00CNPNBAHC@@
	DD	FLAT:??_C@_0M@KPNEPHAO@Press?5Space@
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?exit_game@@YGXPAUEVENT@@@Z			; exit_game
PUBLIC	?exit_apache_havoc@@YGXPAUEVENT@@@Z		; exit_apache_havoc
PUBLIC	?exit_game_function@@YGXPAUEVENT@@@Z		; exit_game_function
PUBLIC	?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z	; start_game_exit
PUBLIC	?set_display_exit_message@@YGXH@Z		; set_display_exit_message
PUBLIC	?display_exit_message@@YGXXZ			; display_exit_message
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0DM@PDAALKBL@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BB@EPMPJGAH@Exit?5Game?5Events@		; `string'
PUBLIC	??_C@_0BF@DAPHDBNO@Pilot?5Ejected?5Events@	; `string'
PUBLIC	??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@ ; `string'
PUBLIC	__real@43700000
PUBLIC	__real@43a00000
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z:PROC	; set_event
EXTRN	?push_event@@YGXP6GXXZPBD@Z:PROC		; push_event
EXTRN	?pop_event@@YGXP6GXXZ@Z:PROC			; pop_event
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?set_exit_ui@@YGXH@Z:PROC			; set_exit_ui
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_ui_font_colour
EXTRN	?push_ui_screen@@YGXPAUUI_OBJECT@@@Z:PROC	; push_ui_screen
EXTRN	?begin_3d_scene@@YGHXZ:PROC			; begin_3d_scene
EXTRN	?end_3d_scene@@YGXXZ:PROC			; end_3d_scene
EXTRN	?set_in_flight_game_mode@@YGXH@Z:PROC		; set_in_flight_game_mode
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?set_gunship_entity@@YGXPAUENTITY@@@Z:PROC	; set_gunship_entity
EXTRN	?save_screen_image_event@@YGXPAUEVENT@@@Z:PROC	; save_screen_image_event
EXTRN	?initialise_game_initialisation_phases@@YGXXZ:PROC ; initialise_game_initialisation_phases
EXTRN	?set_view_mode@@YGHW4VIEW_MODES@@@Z:PROC	; set_view_mode
EXTRN	?stop_messaging_system@@YGXPAUEVENT@@@Z:PROC	; stop_messaging_system
EXTRN	?set_min_time_acceleration@@YGXPAUEVENT@@@Z:PROC ; set_min_time_acceleration
EXTRN	?set_time_acceleration@@YGXH@Z:PROC		; set_time_acceleration
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	__ftol2_sse:PROC
EXTRN	?event_stack_head@@3PAUEVENT_STACK@@A:DWORD	; event_stack_head
EXTRN	?sys_col_yellow@@3UREAL_COLOUR@@A:DWORD		; sys_col_yellow
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	?full_screen_x_min@@3MA:DWORD			; full_screen_x_min
EXTRN	?full_screen_y_min@@3MA:DWORD			; full_screen_y_min
EXTRN	?full_screen_x_mid@@3MA:DWORD			; full_screen_x_mid
EXTRN	?full_screen_y_mid@@3MA:DWORD			; full_screen_y_mid
EXTRN	?full_screen_x_max@@3MA:DWORD			; full_screen_x_max
EXTRN	?full_screen_y_max@@3MA:DWORD			; full_screen_y_max
EXTRN	?game_initialisation_phase@@3W4GAME_INITIALISATION_PHASES@@A:DWORD ; game_initialisation_phase
EXTRN	?game_type_screen@@3PAUUI_OBJECT@@A:DWORD	; game_type_screen
EXTRN	?game_type@@3W4GAME_TYPES@@A:DWORD		; game_type
EXTRN	?exit_screen@@3PAUUI_OBJECT@@A:DWORD		; exit_screen
EXTRN	?campaign_screen@@3PAUUI_OBJECT@@A:DWORD	; campaign_screen
EXTRN	?free_flight_screen@@3PAUUI_OBJECT@@A:DWORD	; free_flight_screen
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@43a00000
CONST	SEGMENT
__real@43a00000 DD 043a00000r			; 320
CONST	ENDS
;	COMDAT __real@43700000
CONST	SEGMENT
__real@43700000 DD 043700000r			; 240
CONST	ENDS
;	COMDAT ??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@
CONST	SEGMENT
??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@ DB 'GAMEEXIT: '
	DB	'Illegal exit type %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DAPHDBNO@Pilot?5Ejected?5Events@
CONST	SEGMENT
??_C@_0BF@DAPHDBNO@Pilot?5Ejected?5Events@ DB 'Pilot Ejected Events', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPMPJGAH@Exit?5Game?5Events@
CONST	SEGMENT
??_C@_0BB@EPMPJGAH@Exit?5Game?5Events@ DB 'Exit Game Events', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@PDAALKBL@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0DM@PDAALKBL@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\misc\gameexit.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?pilot_ejected_events@@YGXXZ
_TEXT	SEGMENT
?pilot_ejected_events@@YGXXZ PROC			; pilot_ejected_events, COMDAT

; 902  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 903  : 
; 904  : 	set_event (DIK_SPACE, MODIFIER_NONE, KEY_STATE_DOWN, exit_game_function);

  00009	68 00 00 00 00	 push	 OFFSET ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function
  0000e	6a 02		 push	 2
  00010	6a 00		 push	 0
  00012	6a 39		 push	 57			; 00000039H
  00014	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 905  : }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?pilot_ejected_events@@YGXXZ ENDP			; pilot_ejected_events
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?exit_game_events@@YGXXZ
_TEXT	SEGMENT
tv68 = -68						; size = 4
?exit_game_events@@YGXXZ PROC				; exit_game_events, COMDAT

; 407  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 408  : 
; 409  : 	set_event (DIK_S, MODIFIER_RIGHT_SHIFT, KEY_STATE_DOWN, save_screen_image_event);

  00009	68 00 00 00 00	 push	 OFFSET ?save_screen_image_event@@YGXPAUEVENT@@@Z ; save_screen_image_event
  0000e	6a 02		 push	 2
  00010	6a 04		 push	 4
  00012	6a 1f		 push	 31			; 0000001fH
  00014	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 410  : 
; 411  : 	switch (game_exit_type)

  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  0001e	89 45 bc	 mov	 DWORD PTR tv68[ebp], eax
  00021	8b 4d bc	 mov	 ecx, DWORD PTR tv68[ebp]
  00024	83 e9 01	 sub	 ecx, 1
  00027	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
  0002a	83 7d bc 09	 cmp	 DWORD PTR tv68[ebp], 9
  0002e	77 57		 ja	 SHORT $LN7@exit_game_
  00030	8b 55 bc	 mov	 edx, DWORD PTR tv68[ebp]
  00033	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN9@exit_game_[edx]
  0003a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN10@exit_game_[eax*4]
$LN4@exit_game_:

; 412  : 	{
; 413  : 
; 414  : 		case GAME_EXIT_DEBRIEF:
; 415  : 		{
; 416  : 
; 417  : 			set_event (DIK_SPACE, MODIFIER_NONE, KEY_STATE_DOWN, exit_game_function);

  00041	68 00 00 00 00	 push	 OFFSET ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function
  00046	6a 02		 push	 2
  00048	6a 00		 push	 0
  0004a	6a 39		 push	 57			; 00000039H
  0004c	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 418  : 
; 419  : 			break;

  00051	eb 47		 jmp	 SHORT $LN1@exit_game_
$LN5@exit_game_:

; 420  : 		}
; 421  : 
; 422  : 		case GAME_EXIT_MISSION:
; 423  : 		case GAME_EXIT_CRASH:
; 424  : 		case GAME_EXIT_CAMPAIGN:
; 425  : 		case GAME_EXIT_DEMO:
; 426  : 		case GAME_EXIT_APACHE_HAVOC:
; 427  : 		{
; 428  : 
; 429  : //			set_event ( get_localisation_x_position ( text_translation_list, GAME_EXIT_KEYBOARD_EVENTS ), MODIFIER_NONE, KEY_STATE_DOWN, exit_game_function);
; 430  : //			set_event ( get_localisation_y_position ( text_translation_list, GAME_EXIT_KEYBOARD_EVENTS ), MODIFIER_NONE, KEY_STATE_DOWN, dont_exit_game_function);
; 431  : 			set_event ( DIK_Y, MODIFIER_NONE, KEY_STATE_DOWN, exit_game_function);

  00053	68 00 00 00 00	 push	 OFFSET ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function
  00058	6a 02		 push	 2
  0005a	6a 00		 push	 0
  0005c	6a 15		 push	 21			; 00000015H
  0005e	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 432  : 			set_event ( DIK_T, MODIFIER_NONE, KEY_STATE_DOWN, exit_game_function);

  00063	68 00 00 00 00	 push	 OFFSET ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function
  00068	6a 02		 push	 2
  0006a	6a 00		 push	 0
  0006c	6a 14		 push	 20			; 00000014H
  0006e	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 433  : 			set_event ( DIK_N, MODIFIER_NONE, KEY_STATE_DOWN, dont_exit_game_function);

  00073	68 00 00 00 00	 push	 OFFSET ?dont_exit_game_function@@YGXPAUEVENT@@@Z ; dont_exit_game_function
  00078	6a 02		 push	 2
  0007a	6a 00		 push	 0
  0007c	6a 31		 push	 49			; 00000031H
  0007e	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 434  : 
; 435  : 			break;

  00083	eb 15		 jmp	 SHORT $LN1@exit_game_
$LN6@exit_game_:

; 436  : 		}
; 437  : 
; 438  : 		case GAME_EXIT_KICKOUT:
; 439  : 		case GAME_EXIT_PILOT_EJECTED:
; 440  : 		{
; 441  : 
; 442  : 			// no events
; 443  : 
; 444  : 			break;

  00085	eb 13		 jmp	 SHORT $LN1@exit_game_
$LN7@exit_game_:

; 445  : 		}
; 446  : 		default:
; 447  : 		{
; 448  : 
; 449  : 			debug_fatal ("GAMEEXIT: Illegal exit type %d", game_exit_type);

  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  0008c	50		 push	 eax
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@
  00092	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00097	83 c4 08	 add	 esp, 8
$LN1@exit_game_:

; 450  : 		}
; 451  : 	}
; 452  : }

  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
  000a1	0f 1f 00	 npad	 3
$LN10@exit_game_:
  000a4	00 00 00 00	 DD	 $LN5@exit_game_
  000a8	00 00 00 00	 DD	 $LN4@exit_game_
  000ac	00 00 00 00	 DD	 $LN6@exit_game_
  000b0	00 00 00 00	 DD	 $LN7@exit_game_
$LN9@exit_game_:
  000b4	00		 DB	 0
  000b5	00		 DB	 0
  000b6	03		 DB	 3
  000b7	00		 DB	 0
  000b8	01		 DB	 1
  000b9	02		 DB	 2
  000ba	00		 DB	 0
  000bb	00		 DB	 0
  000bc	03		 DB	 3
  000bd	02		 DB	 2
?exit_game_events@@YGXXZ ENDP				; exit_game_events
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?dont_exit_game_function@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv81 = -72						; size = 4
tv74 = -68						; size = 4
tv67 = -68						; size = 4
_ev$ = 8						; size = 4
?dont_exit_game_function@@YGXPAUEVENT@@@Z PROC		; dont_exit_game_function, COMDAT

; 627  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 628  : 
; 629  : 	set_min_time_acceleration (NULL);

  00009	6a 00		 push	 0
  0000b	e8 00 00 00 00	 call	 ?set_min_time_acceleration@@YGXPAUEVENT@@@Z ; set_min_time_acceleration

; 630  : 	
; 631  : 	set_display_exit_message (FALSE);

  00010	6a 00		 push	 0
  00012	e8 00 00 00 00	 call	 ?set_display_exit_message@@YGXH@Z ; set_display_exit_message

; 632  : 
; 633  : 	pop_event (exit_game_events);

  00017	68 00 00 00 00	 push	 OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  0001c	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 634  : 
; 635  : 	switch (game_exit_type)

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00026	89 45 bc	 mov	 DWORD PTR tv67[ebp], eax
  00029	8b 4d bc	 mov	 ecx, DWORD PTR tv67[ebp]
  0002c	83 e9 01	 sub	 ecx, 1
  0002f	89 4d bc	 mov	 DWORD PTR tv67[ebp], ecx
  00032	83 7d bc 07	 cmp	 DWORD PTR tv67[ebp], 7
  00036	0f 87 d2 00 00
	00		 ja	 $LN7@dont_exit_
  0003c	8b 55 bc	 mov	 edx, DWORD PTR tv67[ebp]
  0003f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN13@dont_exit_[edx]
  00046	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@dont_exit_[eax*4]
$LN4@dont_exit_:

; 636  : 	{
; 637  : 		case GAME_EXIT_DEMO:
; 638  : 		case GAME_EXIT_CRASH:
; 639  : 		case GAME_EXIT_MISSION:
; 640  : 		case GAME_EXIT_CAMPAIGN:
; 641  : 		{
; 642  : 		
; 643  : 			if ((get_gunship_entity ()) && (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_ALIVE)))

  0004d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00054	0f 84 9e 00 00
	00		 je	 $LN5@dont_exit_
  0005a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00061	74 0c		 je	 SHORT $LN9@dont_exit_
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	89 4d bc	 mov	 DWORD PTR tv74[ebp], ecx
  0006d	eb 1d		 jmp	 SHORT $LN10@dont_exit_
$LN9@dont_exit_:
  0006f	68 83 02 00 00	 push	 643			; 00000283H
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@PDAALKBL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007f	52		 push	 edx
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN10@dont_exit_:
  0008c	b8 01 00 00 00	 mov	 eax, 1
  00091	85 c0		 test	 eax, eax
  00093	74 09		 je	 SHORT $LN11@dont_exit_
  00095	c7 45 b8 07 00
	00 00		 mov	 DWORD PTR tv81[ebp], 7
  0009c	eb 1d		 jmp	 SHORT $LN12@dont_exit_
$LN11@dont_exit_:
  0009e	68 83 02 00 00	 push	 643			; 00000283H
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@PDAALKBL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ae	51		 push	 ecx
  000af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b4	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN12@dont_exit_:
  000bb	6a 07		 push	 7
  000bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c3	52		 push	 edx
  000c4	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  000cb	8b 4d b8	 mov	 ecx, DWORD PTR tv81[ebp]
  000ce	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000d5	ff d2		 call	 edx
  000d7	85 c0		 test	 eax, eax
  000d9	74 1d		 je	 SHORT $LN5@dont_exit_

; 644  : 			{
; 645  : 			
; 646  : 				notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_MODE_CHASE);

  000db	6a 00		 push	 0
  000dd	6a 00		 push	 0
  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  000e4	50		 push	 eax
  000e5	6a 2f		 push	 47			; 0000002fH
  000e7	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  000ec	83 c4 10	 add	 esp, 16			; 00000010H

; 647  : 			
; 648  : 				set_view_mode (VIEW_MODE_COCKPIT_PANEL_LEVEL_AHEAD);

  000ef	6a 11		 push	 17			; 00000011H
  000f1	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode

; 649  : 			}
; 650  : 			else

  000f6	eb 14		 jmp	 SHORT $LN6@dont_exit_
$LN5@dont_exit_:

; 651  : 			{
; 652  : 		
; 653  : 				notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_AUTO_EDIT);

  000f8	6a 0d		 push	 13			; 0000000dH
  000fa	6a 00		 push	 0
  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00101	50		 push	 eax
  00102	6a 2f		 push	 47			; 0000002fH
  00104	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00109	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@dont_exit_:

; 654  : 			}
; 655  : 
; 656  : 			break;

  0010c	eb 13		 jmp	 SHORT $LN1@dont_exit_
$LN7@dont_exit_:

; 657  : 		}
; 658  : 		case GAME_EXIT_APACHE_HAVOC:
; 659  : 		case GAME_EXIT_DEBRIEF:
; 660  : 		case GAME_EXIT_KICKOUT:
; 661  : 		case GAME_EXIT_PILOT_EJECTED:
; 662  : 		default:
; 663  : 		{
; 664  : 
; 665  : 			debug_fatal ("GAMEEXIT: Illegal exit type %d", game_exit_type);

  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00113	50		 push	 eax
  00114	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@
  00119	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0011e	83 c4 08	 add	 esp, 8
$LN1@dont_exit_:

; 666  : 		}
; 667  : 	}
; 668  : }

  00121	5f		 pop	 edi
  00122	5e		 pop	 esi
  00123	5b		 pop	 ebx
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 04 00	 ret	 4
  0012a	66 90		 npad	 2
$LN14@dont_exit_:
  0012c	00 00 00 00	 DD	 $LN4@dont_exit_
  00130	00 00 00 00	 DD	 $LN7@dont_exit_
$LN13@dont_exit_:
  00134	00		 DB	 0
  00135	00		 DB	 0
  00136	01		 DB	 1
  00137	01		 DB	 1
  00138	01		 DB	 1
  00139	01		 DB	 1
  0013a	00		 DB	 0
  0013b	00		 DB	 0
?dont_exit_game_function@@YGXPAUEVENT@@@Z ENDP		; dont_exit_game_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?display_exit_message@@YGXXZ
_TEXT	SEGMENT
tv89 = -148						; size = 4
tv77 = -148						; size = 4
_screen_y_offset$1 = -80				; size = 4
_screen_x_offset$2 = -76				; size = 4
_string_length$3 = -72					; size = 4
_x$ = -68						; size = 4
_buffer$ = -64						; size = 64
?display_exit_message@@YGXXZ PROC			; display_exit_message, COMDAT

; 734  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 735  : 
; 736  : 	char
; 737  : 		buffer [64];
; 738  : 
; 739  : 	float
; 740  : 		x;
; 741  : 
; 742  : 
; 743  : 	if (display_exit_message_flag)

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?display_exit_message_flag@@3HA, 0 ; display_exit_message_flag
  00013	0f 84 84 02 00
	00		 je	 $LN7@display_ex

; 744  : 	{
; 745  : 	
; 746  : 		set_viewport (full_screen_x_min, full_screen_y_min, full_screen_x_max, full_screen_y_max);

  00019	51		 push	 ecx
  0001a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	51		 push	 ecx
  00028	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_max@@3MA
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	51		 push	 ecx
  00036	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  0003e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00043	51		 push	 ecx
  00044	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_min@@3MA
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 747  : 	
; 748  : 		if (begin_3d_scene ())	//lock_screen (active_screen))

  00056	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  0005b	85 c0		 test	 eax, eax
  0005d	0f 84 3a 02 00
	00		 je	 $LN7@display_ex

; 749  : 		{
; 750  : 
; 751  : 			int
; 752  : 				string_length,
; 753  : 				screen_x_offset,
; 754  : 				screen_y_offset;
; 755  : 
; 756  : 			set_ui_font_type (UI_FONT_ARIAL_18);

  00063	6a 05		 push	 5
  00065	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 757  : 
; 758  : 			set_ui_font_colour (sys_col_yellow);

  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_yellow@@3UREAL_COLOUR@@A ; sys_col_yellow
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 759  : 
; 760  : 			screen_x_offset = full_screen_x_mid - 320;

  00075	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  0007d	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@43a00000
  00085	f3 0f 2c c0	 cvttss2si eax, xmm0
  00089	89 45 b4	 mov	 DWORD PTR _screen_x_offset$2[ebp], eax

; 761  : 	
; 762  : 			screen_y_offset = full_screen_y_mid - 240;

  0008c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00094	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@43700000
  0009c	f3 0f 2c c0	 cvttss2si eax, xmm0
  000a0	89 45 b0	 mov	 DWORD PTR _screen_y_offset$1[ebp], eax

; 763  : 
; 764  : 			switch (get_game_type ())

  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_type@@3W4GAME_TYPES@@A ; game_type
  000a8	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv77[ebp], eax
  000ae	83 bd 6c ff ff
	ff 01		 cmp	 DWORD PTR tv77[ebp], 1
  000b5	74 02		 je	 SHORT $LN8@display_ex
  000b7	eb 79		 jmp	 SHORT $LN9@display_ex
$LN8@display_ex:

; 765  : 			{
; 766  : /*
; 767  : 				case GAME_TYPE_SPECIAL:
; 768  : 				{
; 769  : 
; 770  : //					ui_draw_alpha_graphic (220 + screen_x_offset, 20 + screen_y_offset, 204 + screen_x_offset, 126 + screen_y_offset,
; 771  : //													(unsigned short int *) get_graphics_file_data ( GRAPHICS_UI_COMMON_APACHE_HAVOC_V ) );
; 772  : 
; 773  : 					if (game_exit_type == GAME_EXIT_SPECIAL_RESTART)
; 774  : 					{
; 775  : 						//
; 776  : 						// SPECIAL GAMES display session title, a heading for the high score table, and a message prompting
; 777  : 						// the player to press the spacebar
; 778  : 						//
; 779  : 						
; 780  : 						draw_special_restart_text ();
; 781  : 
; 782  : 						set_ui_font_type (UI_FONT_ARIAL_14);
; 783  : 
; 784  : 						set_ui_font_colour (sys_col_white);
; 785  : 
; 786  : 						sprintf (buffer, "%s", game_exit_text [game_exit_type]);
; 787  : 						string_length = ui_get_string_length ( buffer );
; 788  : 					
; 789  : 						x = (220 + (204 / 2)) - ( string_length / 2 );
; 790  : 					
; 791  : 						ui_display_text (buffer, x + screen_x_offset, 96 + screen_y_offset);
; 792  : 					
; 793  : 						set_ui_font_type (UI_FONT_ARIAL_18);
; 794  : 
; 795  : 						set_ui_font_colour (sys_col_yellow);
; 796  : 					}
; 797  : 					else
; 798  : 					{
; 799  : 						sprintf (buffer, "%s", game_exit_text [game_exit_type]);
; 800  : 						string_length = ui_get_string_length ( buffer );
; 801  : 		
; 802  : 						x = (220 + (204 / 2)) - ( string_length / 2 );
; 803  : 			
; 804  : 						ui_display_text (buffer, x + screen_x_offset, 83 + screen_y_offset);
; 805  : 					}
; 806  : 					
; 807  : 					break;
; 808  : 				}
; 809  : */
; 810  : 				case GAME_TYPE_FREE_FLIGHT:
; 811  : 				{
; 812  : 	
; 813  : 					sprintf (buffer, "%s", game_exit_text [game_exit_type]);

  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  000be	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?game_exit_text@@3PAPBDA[eax*4]
  000c5	51		 push	 ecx
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000cb	8d 55 c0	 lea	 edx, DWORD PTR _buffer$[ebp]
  000ce	52		 push	 edx
  000cf	e8 00 00 00 00	 call	 _sprintf
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 814  : 					string_length = ui_get_string_length ( buffer );

  000d7	8d 45 c0	 lea	 eax, DWORD PTR _buffer$[ebp]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  000e0	e8 00 00 00 00	 call	 __ftol2_sse
  000e5	89 45 b8	 mov	 DWORD PTR _string_length$3[ebp], eax

; 815  : 	
; 816  : //					ui_draw_alpha_graphic (220 + screen_x_offset, 180 + screen_y_offset, 204 + screen_x_offset, 126 + screen_y_offset,
; 817  : //													(unsigned short int *) get_graphics_file_data ( GRAPHICS_UI_COMMON_APACHE_HAVOC_V ) );
; 818  : 	
; 819  : 					x = (220 + (204 / 2)) - ( string_length / 2 );

  000e8	8b 45 b8	 mov	 eax, DWORD PTR _string_length$3[ebp]
  000eb	99		 cdq
  000ec	2b c2		 sub	 eax, edx
  000ee	d1 f8		 sar	 eax, 1
  000f0	b9 42 01 00 00	 mov	 ecx, 322		; 00000142H
  000f5	2b c8		 sub	 ecx, eax
  000f7	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000fb	f3 0f 11 45 bc	 movss	 DWORD PTR _x$[ebp], xmm0

; 820  : 		
; 821  : 					ui_display_text (buffer, x + screen_x_offset, 243 + screen_y_offset);

  00100	8b 45 b0	 mov	 eax, DWORD PTR _screen_y_offset$1[ebp]
  00103	05 f3 00 00 00	 add	 eax, 243		; 000000f3H
  00108	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0010c	51		 push	 ecx
  0010d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00112	f3 0f 2a 45 b4	 cvtsi2ss xmm0, DWORD PTR _screen_x_offset$2[ebp]
  00117	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR _x$[ebp]
  0011c	51		 push	 ecx
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	8d 4d c0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  00125	51		 push	 ecx
  00126	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0012b	dd d8		 fstp	 ST(0)

; 822  : 
; 823  : 					break;

  0012d	e9 66 01 00 00	 jmp	 $LN2@display_ex
$LN9@display_ex:

; 824  : 				}
; 825  : 				default:
; 826  : 				{
; 827  : 		
; 828  : 					switch (game_exit_type)

  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00137	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv89[ebp], eax
  0013d	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv89[ebp]
  00143	83 e9 01	 sub	 ecx, 1
  00146	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv89[ebp], ecx
  0014c	83 bd 6c ff ff
	ff 09		 cmp	 DWORD PTR tv89[ebp], 9
  00153	0f 87 2c 01 00
	00		 ja	 $LN15@display_ex
  00159	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv89[ebp]
  0015f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN17@display_ex[edx]
  00166	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN18@display_ex[eax*4]
$LN10@display_ex:

; 829  : 					{
; 830  : 		
; 831  : 						case GAME_EXIT_DEBRIEF:
; 832  : 						case GAME_EXIT_MISSION:
; 833  : 						case GAME_EXIT_CRASH:
; 834  : 						{
; 835  : 	
; 836  : 							sprintf (buffer, "%s", game_exit_text [game_exit_type]);

  0016d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00172	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?game_exit_text@@3PAPBDA[eax*4]
  00179	51		 push	 ecx
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0017f	8d 55 c0	 lea	 edx, DWORD PTR _buffer$[ebp]
  00182	52		 push	 edx
  00183	e8 00 00 00 00	 call	 _sprintf
  00188	83 c4 0c	 add	 esp, 12			; 0000000cH

; 837  : 							string_length = ui_get_string_length ( buffer );

  0018b	8d 45 c0	 lea	 eax, DWORD PTR _buffer$[ebp]
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00194	e8 00 00 00 00	 call	 __ftol2_sse
  00199	89 45 b8	 mov	 DWORD PTR _string_length$3[ebp], eax

; 838  : 		
; 839  : //							ui_draw_alpha_graphic (340 + screen_x_offset, 170 + screen_y_offset, 204 + screen_x_offset, 126 + screen_y_offset,
; 840  : //															(unsigned short int *) get_graphics_file_data ( GRAPHICS_UI_COMMON_APACHE_HAVOC_V ) );
; 841  : 		
; 842  : 							x = (340 + (204 / 2)) - ( string_length / 2 );

  0019c	8b 45 b8	 mov	 eax, DWORD PTR _string_length$3[ebp]
  0019f	99		 cdq
  001a0	2b c2		 sub	 eax, edx
  001a2	d1 f8		 sar	 eax, 1
  001a4	b9 ba 01 00 00	 mov	 ecx, 442		; 000001baH
  001a9	2b c8		 sub	 ecx, eax
  001ab	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001af	f3 0f 11 45 bc	 movss	 DWORD PTR _x$[ebp], xmm0

; 843  : 				
; 844  : 							ui_display_text (buffer, x + screen_x_offset, 238 + screen_y_offset);

  001b4	8b 45 b0	 mov	 eax, DWORD PTR _screen_y_offset$1[ebp]
  001b7	05 ee 00 00 00	 add	 eax, 238		; 000000eeH
  001bc	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001c0	51		 push	 ecx
  001c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c6	f3 0f 2a 45 b4	 cvtsi2ss xmm0, DWORD PTR _screen_x_offset$2[ebp]
  001cb	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR _x$[ebp]
  001d0	51		 push	 ecx
  001d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d6	8d 4d c0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  001d9	51		 push	 ecx
  001da	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  001df	dd d8		 fstp	 ST(0)

; 845  : 			
; 846  : 							break;

  001e1	e9 b2 00 00 00	 jmp	 $LN4@display_ex
$LN11@display_ex:

; 847  : 						}
; 848  : 		
; 849  : 						case GAME_EXIT_CAMPAIGN:
; 850  : 						case GAME_EXIT_APACHE_HAVOC:
; 851  : 						case GAME_EXIT_DEMO:
; 852  : 						{
; 853  : 
; 854  : 							if (game_exit_type == GAME_EXIT_DEMO)

  001e6	83 3d 00 00 00
	00 07		 cmp	 DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A, 7 ; game_exit_type
  001ed	75 1e		 jne	 SHORT $LN12@display_ex

; 855  : 							{
; 856  : 								sprintf (buffer, "%s", get_trans ("Exit Demo? (Y/N)"));

  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HJOGCLOO@Exit?5Demo?$DP?5?$CIY?1N?$CJ@
  001f4	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  001f9	50		 push	 eax
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  001ff	8d 45 c0	 lea	 eax, DWORD PTR _buffer$[ebp]
  00202	50		 push	 eax
  00203	e8 00 00 00 00	 call	 _sprintf
  00208	83 c4 0c	 add	 esp, 12			; 0000000cH

; 857  : 							}
; 858  : 							else

  0020b	eb 1e		 jmp	 SHORT $LN13@display_ex
$LN12@display_ex:

; 859  : 							{
; 860  : 								sprintf (buffer, "%s", game_exit_text [game_exit_type]);

  0020d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00212	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?game_exit_text@@3PAPBDA[eax*4]
  00219	51		 push	 ecx
  0021a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0021f	8d 55 c0	 lea	 edx, DWORD PTR _buffer$[ebp]
  00222	52		 push	 edx
  00223	e8 00 00 00 00	 call	 _sprintf
  00228	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@display_ex:

; 861  : 							}
; 862  : 							
; 863  : 							string_length = ui_get_string_length ( buffer );

  0022b	8d 45 c0	 lea	 eax, DWORD PTR _buffer$[ebp]
  0022e	50		 push	 eax
  0022f	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00234	e8 00 00 00 00	 call	 __ftol2_sse
  00239	89 45 b8	 mov	 DWORD PTR _string_length$3[ebp], eax

; 864  : 		
; 865  : //							ui_draw_alpha_graphic (218 + screen_x_offset, 178 + screen_y_offset, 204 + screen_x_offset, 126 + screen_y_offset,
; 866  : //															(unsigned short int *) get_graphics_file_data ( GRAPHICS_UI_COMMON_APACHE_HAVOC_V ) );
; 867  : 		
; 868  : 							x = (218 + (204 / 2)) - ( string_length / 2 );

  0023c	8b 45 b8	 mov	 eax, DWORD PTR _string_length$3[ebp]
  0023f	99		 cdq
  00240	2b c2		 sub	 eax, edx
  00242	d1 f8		 sar	 eax, 1
  00244	b9 40 01 00 00	 mov	 ecx, 320		; 00000140H
  00249	2b c8		 sub	 ecx, eax
  0024b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0024f	f3 0f 11 45 bc	 movss	 DWORD PTR _x$[ebp], xmm0

; 869  : 				
; 870  : 							ui_display_text (buffer, x + screen_x_offset, 246 + screen_y_offset);

  00254	8b 45 b0	 mov	 eax, DWORD PTR _screen_y_offset$1[ebp]
  00257	05 f6 00 00 00	 add	 eax, 246		; 000000f6H
  0025c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00260	51		 push	 ecx
  00261	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00266	f3 0f 2a 45 b4	 cvtsi2ss xmm0, DWORD PTR _screen_x_offset$2[ebp]
  0026b	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR _x$[ebp]
  00270	51		 push	 ecx
  00271	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00276	8d 4d c0	 lea	 ecx, DWORD PTR _buffer$[ebp]
  00279	51		 push	 ecx
  0027a	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0027f	dd d8		 fstp	 ST(0)

; 871  : 			
; 872  : 							break;

  00281	eb 15		 jmp	 SHORT $LN4@display_ex
$LN14@display_ex:

; 873  : 						}
; 874  : 						case GAME_EXIT_KICKOUT:
; 875  : 						case GAME_EXIT_PILOT_EJECTED:
; 876  : 						{
; 877  : 
; 878  : 							break;

  00283	eb 13		 jmp	 SHORT $LN4@display_ex
$LN15@display_ex:

; 879  : 						}
; 880  : 
; 881  : 						default:
; 882  : 						{
; 883  : 
; 884  : 							debug_fatal ("GAMEEXIT: Illegal exit type %d", game_exit_type);

  00285	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  0028a	50		 push	 eax
  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@
  00290	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00295	83 c4 08	 add	 esp, 8
$LN4@display_ex:
$LN2@display_ex:

; 885  : 						}
; 886  : 					}
; 887  : 
; 888  : 					break;
; 889  : 				}
; 890  : 			}
; 891  : 
; 892  : 			end_3d_scene (); //unlock_screen (active_screen);

  00298	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN7@display_ex:

; 893  : 		}
; 894  : 	}
; 895  : }

  0029d	5f		 pop	 edi
  0029e	5e		 pop	 esi
  0029f	5b		 pop	 ebx
  002a0	8b e5		 mov	 esp, ebp
  002a2	5d		 pop	 ebp
  002a3	c3		 ret	 0
$LN18@display_ex:
  002a4	00 00 00 00	 DD	 $LN10@display_ex
  002a8	00 00 00 00	 DD	 $LN11@display_ex
  002ac	00 00 00 00	 DD	 $LN14@display_ex
  002b0	00 00 00 00	 DD	 $LN15@display_ex
$LN17@display_ex:
  002b4	00		 DB	 0
  002b5	01		 DB	 1
  002b6	03		 DB	 3
  002b7	01		 DB	 1
  002b8	00		 DB	 0
  002b9	02		 DB	 2
  002ba	01		 DB	 1
  002bb	00		 DB	 0
  002bc	03		 DB	 3
  002bd	02		 DB	 2
?display_exit_message@@YGXXZ ENDP			; display_exit_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?set_display_exit_message@@YGXH@Z
_TEXT	SEGMENT
tv64 = -68						; size = 4
_flag$ = 8						; size = 4
?set_display_exit_message@@YGXH@Z PROC			; set_display_exit_message, COMDAT

; 675  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 676  : 
; 677  : 	display_exit_message_flag = flag;

  00009	8b 45 08	 mov	 eax, DWORD PTR _flag$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?display_exit_message_flag@@3HA, eax ; display_exit_message_flag

; 678  : 
; 679  : 	switch (game_exit_type)

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00016	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  00019	83 7d bc 0a	 cmp	 DWORD PTR tv64[ebp], 10	; 0000000aH
  0001d	77 23		 ja	 SHORT $LN8@set_displa
  0001f	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00022	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN10@set_displa[ecx]
  00029	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN11@set_displa[edx*4]
$LN4@set_displa:

; 680  : 	{
; 681  : 
; 682  : 		case GAME_EXIT_MISSION:
; 683  : 		case GAME_EXIT_CRASH:
; 684  : 		case GAME_EXIT_CAMPAIGN:
; 685  : 		{
; 686  : //			set_ui_object_text (planner_exit_message, get_localisation_text (text_translation_list, game_exit_type));
; 687  : 		
; 688  : 			break;

  00030	eb 23		 jmp	 SHORT $LN1@set_displa
$LN5@set_displa:

; 689  : 		}
; 690  : 
; 691  : 		case GAME_EXIT_INVALID:
; 692  : 		{
; 693  : 			// not illegal.
; 694  : 
; 695  : 			break;

  00032	eb 21		 jmp	 SHORT $LN1@set_displa
$LN6@set_displa:

; 696  : 		}
; 697  : 
; 698  : 		case GAME_EXIT_KICKOUT:
; 699  : 		{
; 700  : 			display_exit_message_flag = FALSE;

  00034	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?display_exit_message_flag@@3HA, 0 ; display_exit_message_flag

; 701  : 
; 702  : 			break;

  0003e	eb 15		 jmp	 SHORT $LN1@set_displa
$LN7@set_displa:

; 703  : 		}
; 704  : 
; 705  : 		case GAME_EXIT_DEBRIEF:
; 706  : 		case GAME_EXIT_APACHE_HAVOC:
; 707  : 		case GAME_EXIT_DEMO:
; 708  : 		case GAME_EXIT_PILOT_EJECTED:
; 709  : 		{
; 710  : 
; 711  : 			// not invalid.
; 712  : 
; 713  : 			break;

  00040	eb 13		 jmp	 SHORT $LN1@set_displa
$LN8@set_displa:

; 714  : 		}
; 715  : 
; 716  : 		default:
; 717  : 		{
; 718  : 
; 719  : 			debug_fatal ("GAMEEXIT: Illegal exit type %d", game_exit_type);

  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@
  0004d	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00052	83 c4 08	 add	 esp, 8
$LN1@set_displa:

; 720  : 		}
; 721  : 	}
; 722  : 
; 723  : 	//set_ui_object_text (bmission_exit_message, get_localisation_text (text_translation_list, GAME_EXIT_CAMPAIGN));
; 724  : 
; 725  : //	set_ui_object_drawable (planner_exit_message, flag);
; 726  : //	set_ui_object_drawable (planner_exit_message_gfx, flag);
; 727  : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
  0005e	66 90		 npad	 2
$LN11@set_displa:
  00060	00 00 00 00	 DD	 $LN5@set_displa
  00064	00 00 00 00	 DD	 $LN4@set_displa
  00068	00 00 00 00	 DD	 $LN7@set_displa
  0006c	00 00 00 00	 DD	 $LN6@set_displa
  00070	00 00 00 00	 DD	 $LN8@set_displa
$LN10@set_displa:
  00074	00		 DB	 0
  00075	01		 DB	 1
  00076	01		 DB	 1
  00077	04		 DB	 4
  00078	02		 DB	 2
  00079	02		 DB	 2
  0007a	03		 DB	 3
  0007b	02		 DB	 2
  0007c	01		 DB	 1
  0007d	04		 DB	 4
  0007e	02		 DB	 2
?set_display_exit_message@@YGXH@Z ENDP			; set_display_exit_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_type$ = 8						; size = 4
_pause_flag$ = 12					; size = 4
?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z PROC	; start_game_exit, COMDAT

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 302  : 	game_exit_type = type;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A, eax ; game_exit_type

; 303  : 
; 304  : 	if (pause_flag)

  00011	83 7d 0c 00	 cmp	 DWORD PTR _pause_flag$[ebp], 0
  00015	74 09		 je	 SHORT $LN4@start_game

; 305  : 	{
; 306  : 
; 307  : 		set_time_acceleration (TIME_ACCELERATION_PAUSE);

  00017	6a 00		 push	 0
  00019	e8 00 00 00 00	 call	 ?set_time_acceleration@@YGXH@Z ; set_time_acceleration

; 308  : 	}
; 309  : 	else

  0001e	eb 07		 jmp	 SHORT $LN5@start_game
$LN4@start_game:

; 310  : 	{
; 311  : 		
; 312  : 		set_min_time_acceleration (NULL);

  00020	6a 00		 push	 0
  00022	e8 00 00 00 00	 call	 ?set_min_time_acceleration@@YGXPAUEVENT@@@Z ; set_min_time_acceleration
$LN5@start_game:

; 313  : 	}
; 314  : 
; 315  : 	//
; 316  : 	// turn off messaging system ( the events would be lost anyway ! )
; 317  : 	//
; 318  : 
; 319  : 	stop_messaging_system (NULL);

  00027	6a 00		 push	 0
  00029	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 320  : 
; 321  : 	//
; 322  : 	//
; 323  : 	//
; 324  : 
; 325  : 	switch (game_exit_type)

  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00033	89 45 bc	 mov	 DWORD PTR tv68[ebp], eax
  00036	8b 4d bc	 mov	 ecx, DWORD PTR tv68[ebp]
  00039	83 e9 01	 sub	 ecx, 1
  0003c	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
  0003f	83 7d bc 09	 cmp	 DWORD PTR tv68[ebp], 9
  00043	0f 87 b2 00 00
	00		 ja	 $LN13@start_game
  00049	8b 55 bc	 mov	 edx, DWORD PTR tv68[ebp]
  0004c	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN15@start_game[edx*4]
$LN6@start_game:

; 326  : 	{
; 327  : 
; 328  : 		case GAME_EXIT_KICKOUT:
; 329  : 		{
; 330  : 
; 331  : 			if (get_event_stack_head_function () == exit_game_events)

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?event_stack_head@@3PAUEVENT_STACK@@A ; event_stack_head
  00058	81 78 08 00 00
	00 00		 cmp	 DWORD PTR [eax+8], OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  0005f	75 0a		 jne	 SHORT $LN7@start_game

; 332  : 			{
; 333  : 		
; 334  : 				pop_event (exit_game_events);

  00061	68 00 00 00 00	 push	 OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  00066	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event
$LN7@start_game:

; 335  : 			}
; 336  : 
; 337  : 			set_exit_flight_loop (TRUE);

  0006b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?exit_flight_loop_flag@@3HA, 1 ; exit_flight_loop_flag

; 338  : 
; 339  : 			set_game_type (GAME_TYPE_INVALID);

  00075	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 0 ; game_type

; 340  : 
; 341  : 			set_game_initialisation_phase (GAME_INITIALISATION_PHASE_GAME_TYPE);

  0007f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?game_initialisation_phase@@3W4GAME_INITIALISATION_PHASES@@A, 1 ; game_initialisation_phase

; 342  : 
; 343  : 			push_ui_screen (game_type_screen);

  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_type_screen@@3PAUUI_OBJECT@@A ; game_type_screen
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 344  : 
; 345  : 			break;

  00094	eb 78		 jmp	 SHORT $LN1@start_game
$LN8@start_game:

; 346  : 		}
; 347  : 
; 348  : 		case GAME_EXIT_CRASH:
; 349  : 		case GAME_EXIT_DEBRIEF:
; 350  : 		{
; 351  : 
; 352  : 			set_in_flight_game_mode (IN_FLIGHT_GAME_MODE_SIMULATOR);

  00096	6a 00		 push	 0
  00098	e8 00 00 00 00	 call	 ?set_in_flight_game_mode@@YGXH@Z ; set_in_flight_game_mode
$LN9@start_game:

; 353  : 
; 354  : 			// intentional follow through...
; 355  : 		}
; 356  : 
; 357  : 		case GAME_EXIT_MISSION:
; 358  : 		case GAME_EXIT_CAMPAIGN:
; 359  : 		case GAME_EXIT_DEMO:
; 360  : 		{
; 361  : 
; 362  : 			if (get_event_stack_head_function () == exit_game_events)

  0009d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?event_stack_head@@3PAUEVENT_STACK@@A ; event_stack_head
  000a2	81 78 08 00 00
	00 00		 cmp	 DWORD PTR [eax+8], OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  000a9	75 0a		 jne	 SHORT $LN10@start_game

; 363  : 			{
; 364  : 		
; 365  : 				pop_event (exit_game_events);

  000ab	68 00 00 00 00	 push	 OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  000b0	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event
$LN10@start_game:

; 366  : 			}
; 367  : 		
; 368  : 			push_event (exit_game_events, "Exit Game Events");

  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EPMPJGAH@Exit?5Game?5Events@
  000ba	68 00 00 00 00	 push	 OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  000bf	e8 00 00 00 00	 call	 ?push_event@@YGXP6GXXZPBD@Z ; push_event

; 369  : 
; 370  : 			set_display_exit_message (TRUE);

  000c4	6a 01		 push	 1
  000c6	e8 00 00 00 00	 call	 ?set_display_exit_message@@YGXH@Z ; set_display_exit_message

; 371  : 		
; 372  : 			notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_DEBRIEFING);

  000cb	6a 0e		 push	 14			; 0000000eH
  000cd	6a 00		 push	 0
  000cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  000d4	50		 push	 eax
  000d5	6a 2f		 push	 47			; 0000002fH
  000d7	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  000dc	83 c4 10	 add	 esp, 16			; 00000010H

; 373  : 
; 374  : 			break;

  000df	eb 2d		 jmp	 SHORT $LN1@start_game
$LN11@start_game:

; 375  : 		}
; 376  : 
; 377  : 		case GAME_EXIT_PILOT_EJECTED:
; 378  : 		{
; 379  : 
; 380  : 			push_event (pilot_ejected_events, "Pilot Ejected Events");

  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DAPHDBNO@Pilot?5Ejected?5Events@
  000e6	68 00 00 00 00	 push	 OFFSET ?pilot_ejected_events@@YGXXZ ; pilot_ejected_events
  000eb	e8 00 00 00 00	 call	 ?push_event@@YGXP6GXXZPBD@Z ; push_event

; 381  : 
; 382  : 			break;

  000f0	eb 1c		 jmp	 SHORT $LN1@start_game
$LN12@start_game:

; 383  : 		}
; 384  : 
; 385  : 		case GAME_EXIT_APACHE_HAVOC:
; 386  : 		{
; 387  : 
; 388  : 			exit_game_function (NULL);

  000f2	6a 00		 push	 0
  000f4	e8 00 00 00 00	 call	 ?exit_game_function@@YGXPAUEVENT@@@Z ; exit_game_function

; 389  : 
; 390  : 			break;

  000f9	eb 13		 jmp	 SHORT $LN1@start_game
$LN13@start_game:

; 391  : 		}
; 392  : 
; 393  : 		default:
; 394  : 		{
; 395  : 
; 396  : 			debug_fatal ("GAMEEXIT: Illegal exit type %d", game_exit_type);

  000fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  00100	50		 push	 eax
  00101	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@
  00106	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0010b	83 c4 08	 add	 esp, 8
$LN1@start_game:

; 397  : 		}
; 398  : 	}
; 399  : }

  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 08 00	 ret	 8
  00117	90		 npad	 1
$LN15@start_game:
  00118	00 00 00 00	 DD	 $LN9@start_game
  0011c	00 00 00 00	 DD	 $LN9@start_game
  00120	00 00 00 00	 DD	 $LN13@start_game
  00124	00 00 00 00	 DD	 $LN12@start_game
  00128	00 00 00 00	 DD	 $LN8@start_game
  0012c	00 00 00 00	 DD	 $LN6@start_game
  00130	00 00 00 00	 DD	 $LN9@start_game
  00134	00 00 00 00	 DD	 $LN8@start_game
  00138	00 00 00 00	 DD	 $LN13@start_game
  0013c	00 00 00 00	 DD	 $LN11@start_game
?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z ENDP	; start_game_exit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?exit_game_function@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv82 = -68						; size = 4
tv69 = -68						; size = 4
tv64 = -68						; size = 4
_ev$ = 8						; size = 4
?exit_game_function@@YGXPAUEVENT@@@Z PROC		; exit_game_function, COMDAT

; 459  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 460  : 
; 461  : 	switch (game_exit_type)

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  0000e	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  00011	83 7d bc 0a	 cmp	 DWORD PTR tv64[ebp], 10	; 0000000aH
  00015	0f 87 7f 01 00
	00		 ja	 $LN19@exit_game_
  0001b	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  0001e	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN21@exit_game_[ecx]
  00025	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN22@exit_game_[edx*4]
$LN8@exit_game_:

; 462  : 	{
; 463  : 
; 464  : 		case GAME_EXIT_MISSION:
; 465  : 		case GAME_EXIT_CRASH:
; 466  : 		case GAME_EXIT_DEBRIEF:
; 467  : 		{
; 468  : 
; 469  : 			pop_event (exit_game_events);

  0002c	68 00 00 00 00	 push	 OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  00031	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 470  : 
; 471  : 			set_display_exit_message (FALSE);

  00036	6a 00		 push	 0
  00038	e8 00 00 00 00	 call	 ?set_display_exit_message@@YGXH@Z ; set_display_exit_message

; 472  : 		
; 473  : 			set_gunship_entity (NULL);

  0003d	6a 00		 push	 0
  0003f	e8 00 00 00 00	 call	 ?set_gunship_entity@@YGXPAUENTITY@@@Z ; set_gunship_entity

; 474  : 		
; 475  : 			set_in_flight_game_mode (IN_FLIGHT_GAME_MODE_PLANNER);

  00044	6a 01		 push	 1
  00046	e8 00 00 00 00	 call	 ?set_in_flight_game_mode@@YGXH@Z ; set_in_flight_game_mode

; 476  : 
; 477  : 			//set_game_initialisation_phase (GAME_INITIALISATION_PHASE_NONE); // needed?
; 478  : 		
; 479  : 			/////////////////////////////////////////////////////////////////
; 480  : 			switch (get_game_type ())

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_type@@3W4GAME_TYPES@@A ; game_type
  00050	89 45 bc	 mov	 DWORD PTR tv69[ebp], eax
  00053	8b 4d bc	 mov	 ecx, DWORD PTR tv69[ebp]
  00056	83 e9 01	 sub	 ecx, 1
  00059	89 4d bc	 mov	 DWORD PTR tv69[ebp], ecx
  0005c	83 7d bc 03	 cmp	 DWORD PTR tv69[ebp], 3
  00060	77 4d		 ja	 SHORT $LN4@exit_game_
  00062	8b 55 bc	 mov	 edx, DWORD PTR tv69[ebp]
  00065	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN23@exit_game_[edx*4]
$LN9@exit_game_:

; 481  : 			{
; 482  : 				case GAME_TYPE_CAMPAIGN:
; 483  : 				case GAME_TYPE_SKIRMISH:
; 484  : 				{
; 485  : 					#if !DEMO_VERSION
; 486  : 
; 487  : 					push_ui_screen (campaign_screen);

  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_screen@@3PAUUI_OBJECT@@A ; campaign_screen
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 488  : 
; 489  : 					#endif
; 490  : 		
; 491  : 					break;

  00077	eb 36		 jmp	 SHORT $LN4@exit_game_
$LN10@exit_game_:

; 492  : 				}
; 493  : 				case GAME_TYPE_FREE_FLIGHT:
; 494  : 				{
; 495  : 					push_ui_screen (free_flight_screen);

  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?free_flight_screen@@3PAUUI_OBJECT@@A ; free_flight_screen
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 496  : 
; 497  : 					break;

  00084	eb 29		 jmp	 SHORT $LN4@exit_game_
$LN11@exit_game_:

; 498  : 				}
; 499  : 				case GAME_TYPE_DEMO:
; 500  : 				{
; 501  : 
; 502  : 					set_game_initialisation_phase (GAME_INITIALISATION_PHASE_GAME_TYPE);

  00086	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?game_initialisation_phase@@3W4GAME_INITIALISATION_PHASES@@A, 1 ; game_initialisation_phase

; 503  : 
; 504  : 					set_game_type (GAME_TYPE_INVALID);

  00090	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 0 ; game_type

; 505  : 
; 506  : 					push_ui_screen (game_type_screen);

  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_type_screen@@3PAUUI_OBJECT@@A ; game_type_screen
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 507  : 
; 508  : 					set_exit_flight_loop (TRUE);

  000a5	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?exit_flight_loop_flag@@3HA, 1 ; exit_flight_loop_flag
$LN4@exit_game_:

; 509  : 		
; 510  : 					break;
; 511  : 				}
; 512  : 			}
; 513  : 			/////////////////////////////////////////////////////////////////
; 514  : 		
; 515  : 			break;

  000af	e9 f9 00 00 00	 jmp	 $LN1@exit_game_
$LN12@exit_game_:

; 516  : 		}
; 517  : 
; 518  : 		case GAME_EXIT_CAMPAIGN:
; 519  : 		case GAME_EXIT_DEMO:
; 520  : 		{
; 521  : 
; 522  : 			//set_game_initialisation_phase (GAME_INITIALISATION_PHASE_GAME_TYPE);
; 523  : 
; 524  : 			initialise_game_initialisation_phases ();

  000b4	e8 00 00 00 00	 call	 ?initialise_game_initialisation_phases@@YGXXZ ; initialise_game_initialisation_phases

; 525  : 
; 526  : 			pop_event (exit_game_events);

  000b9	68 00 00 00 00	 push	 OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  000be	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 527  : 
; 528  : 			set_display_exit_message (FALSE);

  000c3	6a 00		 push	 0
  000c5	e8 00 00 00 00	 call	 ?set_display_exit_message@@YGXH@Z ; set_display_exit_message

; 529  : 
; 530  : 			set_exit_flight_loop (TRUE);

  000ca	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?exit_flight_loop_flag@@3HA, 1 ; exit_flight_loop_flag

; 531  : 
; 532  : 			push_ui_screen (game_type_screen);

  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_type_screen@@3PAUUI_OBJECT@@A ; game_type_screen
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 533  : 
; 534  : 			break;

  000df	e9 c9 00 00 00	 jmp	 $LN1@exit_game_
$LN13@exit_game_:

; 535  : 		}
; 536  : 
; 537  : 		case GAME_EXIT_PILOT_EJECTED:
; 538  : 		{
; 539  : 
; 540  : 			pop_event (pilot_ejected_events);

  000e4	68 00 00 00 00	 push	 OFFSET ?pilot_ejected_events@@YGXXZ ; pilot_ejected_events
  000e9	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 541  : 
; 542  : 			set_display_exit_message (FALSE);

  000ee	6a 00		 push	 0
  000f0	e8 00 00 00 00	 call	 ?set_display_exit_message@@YGXH@Z ; set_display_exit_message

; 543  : 		
; 544  : 			set_gunship_entity (NULL);

  000f5	6a 00		 push	 0
  000f7	e8 00 00 00 00	 call	 ?set_gunship_entity@@YGXPAUENTITY@@@Z ; set_gunship_entity

; 545  : 		
; 546  : 			set_in_flight_game_mode (IN_FLIGHT_GAME_MODE_PLANNER);

  000fc	6a 01		 push	 1
  000fe	e8 00 00 00 00	 call	 ?set_in_flight_game_mode@@YGXH@Z ; set_in_flight_game_mode

; 547  : 		
; 548  : 			/////////////////////////////////////////////////////////////////
; 549  : 			switch (get_game_type ())

  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_type@@3W4GAME_TYPES@@A ; game_type
  00108	89 45 bc	 mov	 DWORD PTR tv82[ebp], eax
  0010b	8b 4d bc	 mov	 ecx, DWORD PTR tv82[ebp]
  0010e	83 e9 01	 sub	 ecx, 1
  00111	89 4d bc	 mov	 DWORD PTR tv82[ebp], ecx
  00114	83 7d bc 03	 cmp	 DWORD PTR tv82[ebp], 3
  00118	77 4d		 ja	 SHORT $LN6@exit_game_
  0011a	8b 55 bc	 mov	 edx, DWORD PTR tv82[ebp]
  0011d	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN24@exit_game_[edx*4]
$LN14@exit_game_:

; 550  : 			{
; 551  : 				case GAME_TYPE_CAMPAIGN:
; 552  : 				case GAME_TYPE_SKIRMISH:
; 553  : 				{
; 554  : 					#if !DEMO_VERSION
; 555  : 
; 556  : 					push_ui_screen (campaign_screen);

  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_screen@@3PAUUI_OBJECT@@A ; campaign_screen
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 557  : 
; 558  : 					#endif
; 559  : 		
; 560  : 					break;

  0012f	eb 36		 jmp	 SHORT $LN6@exit_game_
$LN15@exit_game_:

; 561  : 				}
; 562  : 				case GAME_TYPE_FREE_FLIGHT:
; 563  : 				{
; 564  : 					push_ui_screen (free_flight_screen);

  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?free_flight_screen@@3PAUUI_OBJECT@@A ; free_flight_screen
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 565  : 
; 566  : 					break;

  0013c	eb 29		 jmp	 SHORT $LN6@exit_game_
$LN16@exit_game_:

; 567  : 				}
; 568  : 				case GAME_TYPE_DEMO:
; 569  : 				{
; 570  : 
; 571  : 					set_game_initialisation_phase (GAME_INITIALISATION_PHASE_GAME_TYPE);

  0013e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?game_initialisation_phase@@3W4GAME_INITIALISATION_PHASES@@A, 1 ; game_initialisation_phase

; 572  : 
; 573  : 					set_game_type (GAME_TYPE_INVALID);

  00148	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 0 ; game_type

; 574  : 
; 575  : 					push_ui_screen (game_type_screen);

  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_type_screen@@3PAUUI_OBJECT@@A ; game_type_screen
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 576  : 
; 577  : 					set_exit_flight_loop (TRUE);

  0015d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?exit_flight_loop_flag@@3HA, 1 ; exit_flight_loop_flag
$LN6@exit_game_:

; 578  : 		
; 579  : 					break;
; 580  : 				}
; 581  : 			}
; 582  : 			/////////////////////////////////////////////////////////////////
; 583  : 
; 584  : 			break;

  00167	eb 44		 jmp	 SHORT $LN1@exit_game_
$LN17@exit_game_:

; 585  : 		}
; 586  : 
; 587  : 		case GAME_EXIT_APACHE_HAVOC:
; 588  : 		{
; 589  : 
; 590  : 			push_ui_screen (exit_screen);

  00169	a1 00 00 00 00	 mov	 eax, DWORD PTR ?exit_screen@@3PAUUI_OBJECT@@A ; exit_screen
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 591  : 
; 592  : 			pop_event (exit_game_events);

  00174	68 00 00 00 00	 push	 OFFSET ?exit_game_events@@YGXXZ ; exit_game_events
  00179	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 593  : 
; 594  : 			set_display_exit_message (FALSE);

  0017e	6a 00		 push	 0
  00180	e8 00 00 00 00	 call	 ?set_display_exit_message@@YGXH@Z ; set_display_exit_message

; 595  : 
; 596  : //			set_ui_object_drawable (exit_back_button, FALSE);
; 597  : //			set_ui_object_drawable (exit_screen_text, FALSE);
; 598  : //			set_ui_object_drawable (exit_forward_button, FALSE);
; 599  : 
; 600  : 			set_exit_flight_loop (TRUE);

  00185	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?exit_flight_loop_flag@@3HA, 1 ; exit_flight_loop_flag

; 601  : 
; 602  : 			set_exit_ui (TRUE);

  0018f	6a 01		 push	 1
  00191	e8 00 00 00 00	 call	 ?set_exit_ui@@YGXH@Z	; set_exit_ui

; 603  : 
; 604  : 			break;

  00196	eb 15		 jmp	 SHORT $LN1@exit_game_
$LN18@exit_game_:

; 605  : 		}
; 606  : 
; 607  : 		case GAME_EXIT_INVALID:
; 608  : 		case GAME_EXIT_KICKOUT:
; 609  : 		{
; 610  : 
; 611  : 			break;

  00198	eb 13		 jmp	 SHORT $LN1@exit_game_
$LN19@exit_game_:

; 612  : 		}
; 613  : 
; 614  : 		default:
; 615  : 		{
; 616  : 
; 617  : 			debug_fatal ("GAMEEXIT: Illegal exit type %d", game_exit_type);

  0019a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?game_exit_type@@3W4GAME_EXIT_TYPES@@A ; game_exit_type
  0019f	50		 push	 eax
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CGAEEKCH@GAMEEXIT?3?5Illegal?5exit?5type?5?$CFd@
  001a5	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  001aa	83 c4 08	 add	 esp, 8
$LN1@exit_game_:

; 618  : 		}
; 619  : 	}
; 620  : }

  001ad	5f		 pop	 edi
  001ae	5e		 pop	 esi
  001af	5b		 pop	 ebx
  001b0	8b e5		 mov	 esp, ebp
  001b2	5d		 pop	 ebp
  001b3	c2 04 00	 ret	 4
  001b6	66 90		 npad	 2
$LN22@exit_game_:
  001b8	00 00 00 00	 DD	 $LN18@exit_game_
  001bc	00 00 00 00	 DD	 $LN8@exit_game_
  001c0	00 00 00 00	 DD	 $LN12@exit_game_
  001c4	00 00 00 00	 DD	 $LN17@exit_game_
  001c8	00 00 00 00	 DD	 $LN13@exit_game_
  001cc	00 00 00 00	 DD	 $LN19@exit_game_
$LN21@exit_game_:
  001d0	00		 DB	 0
  001d1	01		 DB	 1
  001d2	02		 DB	 2
  001d3	05		 DB	 5
  001d4	03		 DB	 3
  001d5	01		 DB	 1
  001d6	00		 DB	 0
  001d7	02		 DB	 2
  001d8	01		 DB	 1
  001d9	05		 DB	 5
  001da	04		 DB	 4
  001db	90		 npad	 1
$LN23@exit_game_:
  001dc	00 00 00 00	 DD	 $LN10@exit_game_
  001e0	00 00 00 00	 DD	 $LN9@exit_game_
  001e4	00 00 00 00	 DD	 $LN9@exit_game_
  001e8	00 00 00 00	 DD	 $LN11@exit_game_
$LN24@exit_game_:
  001ec	00 00 00 00	 DD	 $LN15@exit_game_
  001f0	00 00 00 00	 DD	 $LN14@exit_game_
  001f4	00 00 00 00	 DD	 $LN14@exit_game_
  001f8	00 00 00 00	 DD	 $LN16@exit_game_
?exit_game_function@@YGXPAUEVENT@@@Z ENDP		; exit_game_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?exit_apache_havoc@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?exit_apache_havoc@@YGXPAUEVENT@@@Z PROC		; exit_apache_havoc, COMDAT

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 292  : 
; 293  : 	start_game_exit (GAME_EXIT_APACHE_HAVOC, FALSE);

  00009	6a 00		 push	 0
  0000b	6a 04		 push	 4
  0000d	e8 00 00 00 00	 call	 ?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z ; start_game_exit

; 294  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?exit_apache_havoc@@YGXPAUEVENT@@@Z ENDP		; exit_apache_havoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\misc\gameexit.c
;	COMDAT ?exit_game@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv77 = -72						; size = 4
tv70 = -68						; size = 4
_ev$ = 8						; size = 4
?exit_game@@YGXPAUEVENT@@@Z PROC			; exit_game, COMDAT

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 255  : 
; 256  : 	if (get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	0f 84 97 00 00
	00		 je	 $LN2@exit_game

; 257  : 	{
; 258  : 
; 259  : 		if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_EJECTED))

  00016	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0001d	74 0c		 je	 SHORT $LN9@exit_game
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d bc	 mov	 DWORD PTR tv70[ebp], ecx
  00029	eb 1d		 jmp	 SHORT $LN10@exit_game
$LN9@exit_game:
  0002b	68 03 01 00 00	 push	 259			; 00000103H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@PDAALKBL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN10@exit_game:
  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	85 c0		 test	 eax, eax
  0004f	74 09		 je	 SHORT $LN11@exit_game
  00051	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR tv77[ebp], 49	; 00000031H
  00058	eb 1d		 jmp	 SHORT $LN12@exit_game
$LN11@exit_game:
  0005a	68 03 01 00 00	 push	 259			; 00000103H
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@PDAALKBL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00070	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN12@exit_game:
  00077	6a 31		 push	 49			; 00000031H
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0007f	52		 push	 edx
  00080	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv70[ebp], 1116
  00087	8b 4d b8	 mov	 ecx, DWORD PTR tv77[ebp]
  0008a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00091	ff d2		 call	 edx
  00093	85 c0		 test	 eax, eax
  00095	74 0b		 je	 SHORT $LN4@exit_game

; 260  : 		{
; 261  : 
; 262  : 			start_game_exit (GAME_EXIT_PILOT_EJECTED, FALSE);

  00097	6a 00		 push	 0
  00099	6a 0a		 push	 10			; 0000000aH
  0009b	e8 00 00 00 00	 call	 ?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z ; start_game_exit

; 263  : 		}
; 264  : 		else

  000a0	eb 09		 jmp	 SHORT $LN5@exit_game
$LN4@exit_game:

; 265  : 		{
; 266  : 
; 267  : 			start_game_exit (GAME_EXIT_MISSION, FALSE);

  000a2	6a 00		 push	 0
  000a4	6a 01		 push	 1
  000a6	e8 00 00 00 00	 call	 ?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z ; start_game_exit
$LN5@exit_game:

; 268  : 		}
; 269  : 	}
; 270  : 	else

  000ab	eb 1d		 jmp	 SHORT $LN1@exit_game
$LN2@exit_game:

; 271  : 	{
; 272  : 
; 273  : 		if (get_game_type () == GAME_TYPE_DEMO)

  000ad	83 3d 00 00 00
	00 04		 cmp	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 4 ; game_type
  000b4	75 0b		 jne	 SHORT $LN6@exit_game

; 274  : 		{
; 275  : 
; 276  : 			start_game_exit (GAME_EXIT_DEMO, FALSE);

  000b6	6a 00		 push	 0
  000b8	6a 07		 push	 7
  000ba	e8 00 00 00 00	 call	 ?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z ; start_game_exit

; 277  : 		}
; 278  : 		else

  000bf	eb 09		 jmp	 SHORT $LN1@exit_game
$LN6@exit_game:

; 279  : 		{
; 280  : 
; 281  : 			start_game_exit (GAME_EXIT_CAMPAIGN, FALSE);

  000c1	6a 00		 push	 0
  000c3	6a 02		 push	 2
  000c5	e8 00 00 00 00	 call	 ?start_game_exit@@YGXW4GAME_EXIT_TYPES@@H@Z ; start_game_exit
$LN1@exit_game:

; 282  : 		}
; 283  : 	}
; 284  : }

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 04 00	 ret	 4
?exit_game@@YGXPAUEVENT@@@Z ENDP			; exit_game
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
