; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\list\li_flags.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_list_ui_object_flag_functions@@YGXH@Z	; overload_list_ui_object_flag_functions
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_set_ui_object_list_box_y_space@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_list_box_y_space
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\li_flags.c
;	COMDAT ?set_list_ui_list_box_y_space@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_list$ = -4						; size = 4
_obj$ = 8						; size = 4
_y_space$ = 12						; size = 4
?set_list_ui_list_box_y_space@@YGXPAUUI_OBJECT@@M@Z PROC ; set_list_ui_list_box_y_space, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 110  : 
; 111  : 	list_ui_object
; 112  : 		*list;
; 113  : 
; 114  : 	list = (list_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _list$[ebp], ecx

; 115  : 
; 116  : 	list->y_space = y_space;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _list$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_space$[ebp]
  0001a	f3 0f 11 80 e4
	00 00 00	 movss	 DWORD PTR [eax+228], xmm0

; 117  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?set_list_ui_list_box_y_space@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_list_ui_list_box_y_space
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\li_flags.c
;	COMDAT ?set_list_ui_object_state@@YGXPAUUI_OBJECT@@H@Z
_TEXT	SEGMENT
_child$ = -12						; size = 4
_area$ = -8						; size = 4
_child_area$ = -4					; size = 4
_obj$ = 8						; size = 4
_flag$ = 12						; size = 4
?set_list_ui_object_state@@YGXPAUUI_OBJECT@@H@Z PROC	; set_list_ui_object_state, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 	
; 76   : 	area_ui_object
; 77   : 		*child_area,
; 78   : 		*area;
; 79   : 
; 80   : 	ui_object
; 81   : 		*child;
; 82   : 
; 83   : 	if (flag == UI_OBJECT_STATE_OFF)

  00009	83 7d 0c 00	 cmp	 DWORD PTR _flag$[ebp], 0
  0000d	75 5e		 jne	 SHORT $LN1@set_list_u

; 84   : 	{
; 85   : 	
; 86   : 		area = (area_ui_object *) obj->data;

  0000f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00012	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00015	89 4d f8	 mov	 DWORD PTR _area$[ebp], ecx

; 87   : 	
; 88   : 		area->state = flag;

  00018	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  0001b	83 e0 03	 and	 eax, 3
  0001e	c1 e0 03	 shl	 eax, 3
  00021	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  00024	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00027	83 e2 e7	 and	 edx, -25		; ffffffe7H
  0002a	0b d0		 or	 edx, eax
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  0002f	89 50 4c	 mov	 DWORD PTR [eax+76], edx

; 89   : 	
; 90   : 		child = get_ui_object_child (obj);

  00032	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00035	50		 push	 eax
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00039	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00042	ff d0		 call	 eax
  00044	89 45 f4	 mov	 DWORD PTR _child$[ebp], eax
$LN2@set_list_u:

; 91   : 	
; 92   : 		while (child)

  00047	83 7d f4 00	 cmp	 DWORD PTR _child$[ebp], 0
  0004b	74 20		 je	 SHORT $LN1@set_list_u

; 93   : 		{
; 94   : 	
; 95   : 			child_area = (area_ui_object *) child->data;

  0004d	8b 45 f4	 mov	 eax, DWORD PTR _child$[ebp]
  00050	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00053	89 4d fc	 mov	 DWORD PTR _child_area$[ebp], ecx

; 96   : 	
; 97   : //			child_area->state = flag;
; 98   : 	
; 99   : 			child = get_ui_object_next (child);

  00056	8b 45 f4	 mov	 eax, DWORD PTR _child$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR _child$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00066	ff d0		 call	 eax
  00068	89 45 f4	 mov	 DWORD PTR _child$[ebp], eax

; 100  : 		}

  0006b	eb da		 jmp	 SHORT $LN2@set_list_u
$LN1@set_list_u:

; 101  : 	}
; 102  : }

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?set_list_ui_object_state@@YGXPAUUI_OBJECT@@H@Z ENDP	; set_list_ui_object_state
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\list\li_flags.c
;	COMDAT ?overload_list_ui_object_flag_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_list_ui_object_flag_functions@@YGXH@Z PROC	; overload_list_ui_object_flag_functions, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 125  : 
; 126  : 	fn_set_ui_object_state [type] = set_list_ui_object_state;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4], OFFSET ?set_list_ui_object_state@@YGXPAUUI_OBJECT@@H@Z ; set_list_ui_object_state

; 127  : 
; 128  : 	fn_set_ui_object_list_box_y_space [type] = set_list_ui_list_box_y_space;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_list_box_y_space@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_list_ui_list_box_y_space@@YGXPAUUI_OBJECT@@M@Z ; set_list_ui_list_box_y_space

; 129  : }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?overload_list_ui_object_flag_functions@@YGXH@Z ENDP	; overload_list_ui_object_flag_functions
_TEXT	ENDS
END
