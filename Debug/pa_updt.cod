; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\particle\pa_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_particle_update_functions@@YGXXZ	; overload_particle_update_functions
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??update_particle@@YGHPAUENTITY@@@Z@4JA ; `update_particle'::`1'::__LINE__Var
PUBLIC	__real@3fe921fb60000000
PUBLIC	__real@3ff921fb60000000
PUBLIC	__real@40490fdb
PUBLIC	__real@411cf5c3
EXTRN	_memcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix_fast@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix_fast
EXTRN	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3
EXTRN	?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; destruct_3d_object
EXTRN	?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z:PROC ; get_terrain_3d_point_sector_max_elevation
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_volume
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; delete_local_entity_from_parents_child_list
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity_family
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@411cf5c3
CONST	SEGMENT
__real@411cf5c3 DD 0411cf5c3r			; 9.81
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@3ff921fb60000000
CONST	SEGMENT
__real@3ff921fb60000000 DQ 03ff921fb60000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3fe921fb60000000
CONST	SEGMENT
__real@3fe921fb60000000 DQ 03fe921fb60000000r	; 0.785398
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_particle@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_particle@@YGHPAUENTITY@@@Z@4JA DD 06bH ; `update_particle'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\effect\partic'
	DB	'le\pa_updt.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 056H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 99   : 	update_particle( en );

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?update_particle@@YGHPAUENTITY@@@Z ; update_particle

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv73 = -68						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   : 	if ( !update_particle( en ) )

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?update_particle@@YGHPAUENTITY@@@Z ; update_particle
  00012	85 c0		 test	 eax, eax
  00014	75 4a		 jne	 SHORT $LN1@update_ser

; 88   : 	{
; 89   : 		destroy_client_server_entity_family( en );

  00016	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001a	74 0a		 je	 SHORT $LN4@update_ser
  0001c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d bc	 mov	 DWORD PTR tv73[ebp], ecx
  00024	eb 21		 jmp	 SHORT $LN5@update_ser
$LN4@update_ser:
  00026	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0002c	83 c2 03	 add	 edx, 3
  0002f	52		 push	 edx
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00040	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN5@update_ser:
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00051	c1 e2 02	 shl	 edx, 2
  00054	8b 45 bc	 mov	 eax, DWORD PTR tv73[ebp]
  00057	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  0005e	ff d1		 call	 ecx
$LN1@update_ser:

; 90   : 	}
; 91   : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_updt.c
;	COMDAT ?update_particle@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv199 = -188						; size = 4
tv79 = -188						; size = 4
tv370 = -184						; size = 4
tv360 = -184						; size = 4
tv191 = -184						; size = 4
tv71 = -184						; size = 4
_rotation_matrix$ = -116				; size = 36
_m$ = -80						; size = 36
_special_effect$ = -44					; size = 4
_next$ = -40						; size = 4
_mv$ = -36						; size = 4
_pos$ = -32						; size = 4
_dr$ = -28						; size = 4
_dp$ = -24						; size = 4
_dh$ = -20						; size = 4
_dt$ = -16						; size = 4
_loop$ = -12						; size = 4
_alive_count$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_particle@@YGHPAUENTITY@@@Z PROC			; update_particle, COMDAT

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec bc 00 00
	00		 sub	 esp, 188		; 000000bcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 108  : 
; 109  : 	particle
; 110  : 		*raw;
; 111  : 
; 112  : 	int
; 113  : 		alive_count,
; 114  : 		loop;
; 115  : 
; 116  : 	float
; 117  : 		dt,
; 118  : 		dh,
; 119  : 		dp,
; 120  : 		dr;
; 121  : 
; 122  : 	vec3d
; 123  : 		*pos,
; 124  : 		*mv;
; 125  : 		
; 126  : 	entity
; 127  : 		*next,
; 128  : 		*special_effect;
; 129  : 
; 130  : 	matrix3x3
; 131  : 		m,
; 132  : 		rotation_matrix;
; 133  : 
; 134  : 	raw = (particle *) get_local_entity_data (en);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 135  : 
; 136  : 	//
; 137  : 	// get special effect root - list of all smoke trails attached to the particles
; 138  : 	//
; 139  : 
; 140  : 	special_effect = get_local_entity_first_child (en, LIST_TYPE_SPECIAL_EFFECT);

  00015	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00019	74 0d		 je	 SHORT $LN18@update_par
  0001b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 8d 48 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  00026	eb 24		 jmp	 SHORT $LN19@update_par
$LN18@update_par:
  00028	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_particle@@YGHPAUENTITY@@@Z@4JA
  0002e	83 c2 21	 add	 edx, 33			; 00000021H
  00031	52		 push	 edx
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00042	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv71[ebp], 0
$LN19@update_par:
  0004c	b9 01 00 00 00	 mov	 ecx, 1
  00051	85 c9		 test	 ecx, ecx
  00053	74 0c		 je	 SHORT $LN20@update_par
  00055	c7 85 44 ff ff
	ff 24 00 00 00	 mov	 DWORD PTR tv79[ebp], 36	; 00000024H
  0005f	eb 24		 jmp	 SHORT $LN21@update_par
$LN20@update_par:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_particle@@YGHPAUENTITY@@@Z@4JA
  00067	83 c2 21	 add	 edx, 33			; 00000021H
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN21@update_par:
  00085	6a 24		 push	 36			; 00000024H
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0008a	51		 push	 ecx
  0008b	69 95 48 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv71[ebp], 180
  00095	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR tv79[ebp]
  0009b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a2	ff d1		 call	 ecx
  000a4	89 45 d4	 mov	 DWORD PTR _special_effect$[ebp], eax

; 141  : 
; 142  : 	dt = get_delta_time();

  000a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000af	f3 0f 11 45 f0	 movss	 DWORD PTR _dt$[ebp], xmm0

; 143  : 
; 144  : 	dh = (PI) * dt;

  000b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40490fdb
  000bc	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dt$[ebp]
  000c1	f3 0f 11 45 ec	 movss	 DWORD PTR _dh$[ebp], xmm0

; 145  : 	dr = (PI * 0.5) * dt;

  000c6	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dt$[ebp]
  000cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff921fb60000000
  000d3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d7	f3 0f 11 45 e4	 movss	 DWORD PTR _dr$[ebp], xmm0

; 146  : 	dp = (PI * 0.25) * dt;

  000dc	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _dt$[ebp]
  000e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe921fb60000000
  000e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ed	f3 0f 11 45 e8	 movss	 DWORD PTR _dp$[ebp], xmm0

; 147  : 
; 148  : 	alive_count = 0;

  000f2	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _alive_count$[ebp], 0

; 149  : 	
; 150  : 	for ( loop = 0 ; loop < raw->particle_count ; loop ++ )

  000f9	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00100	eb 09		 jmp	 SHORT $LN4@update_par
$LN2@update_par:
  00102	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  00105	83 c0 01	 add	 eax, 1
  00108	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_par:
  0010b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0010e	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00112	39 4d f4	 cmp	 DWORD PTR _loop$[ebp], ecx
  00115	0f 8d 36 03 00
	00		 jge	 $LN3@update_par

; 151  : 	{
; 152  : 		if ( !( raw->valid[ loop ] ) )

  0011b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0011e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00121	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  00124	0f b6 04 11	 movzx	 eax, BYTE PTR [ecx+edx]
  00128	85 c0		 test	 eax, eax
  0012a	75 02		 jne	 SHORT $LN5@update_par

; 153  : 		{
; 154  : 			continue;

  0012c	eb d4		 jmp	 SHORT $LN2@update_par
$LN5@update_par:

; 155  : 		}
; 156  : 
; 157  : 		alive_count ++;

  0012e	8b 45 f8	 mov	 eax, DWORD PTR _alive_count$[ebp]
  00131	83 c0 01	 add	 eax, 1
  00134	89 45 f8	 mov	 DWORD PTR _alive_count$[ebp], eax

; 158  : 
; 159  : 		pos = &(raw->position[ loop ]);

  00137	6b 45 f4 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  0013b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0013e	03 41 40	 add	 eax, DWORD PTR [ecx+64]
  00141	89 45 e0	 mov	 DWORD PTR _pos$[ebp], eax

; 160  : 
; 161  : 		mv = &(raw->motion_vector[ loop ]);

  00144	6b 45 f4 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0014b	03 41 3c	 add	 eax, DWORD PTR [ecx+60]
  0014e	89 45 dc	 mov	 DWORD PTR _mv$[ebp], eax

; 162  : 
; 163  : 		//
; 164  : 		// update position
; 165  : 		//
; 166  : 
; 167  : 		pos->x += mv->x * dt;

  00151	8b 45 dc	 mov	 eax, DWORD PTR _mv$[ebp]
  00154	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00158	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dt$[ebp]
  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  00160	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00164	8b 55 e0	 mov	 edx, DWORD PTR _pos$[ebp]
  00167	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 168  : 		pos->y += mv->y * dt;

  0016b	8b 45 dc	 mov	 eax, DWORD PTR _mv$[ebp]
  0016e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00173	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dt$[ebp]
  00178	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  0017b	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  00180	8b 55 e0	 mov	 edx, DWORD PTR _pos$[ebp]
  00183	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 169  : 		pos->z += mv->z * dt;

  00188	8b 45 dc	 mov	 eax, DWORD PTR _mv$[ebp]
  0018b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00190	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dt$[ebp]
  00195	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  00198	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  0019d	8b 55 e0	 mov	 edx, DWORD PTR _pos$[ebp]
  001a0	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0

; 170  : 
; 171  : 		bound_position_to_map_volume( pos );

  001a5	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_map_volume

; 172  : 
; 173  : 		//
; 174  : 		// update motion vector
; 175  : 		//
; 176  : 
; 177  : 		mv->y -= G * dt;

  001ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@411cf5c3
  001b6	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dt$[ebp]
  001bb	8b 45 dc	 mov	 eax, DWORD PTR _mv$[ebp]
  001be	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  001c3	f3 0f 5c c8	 subss	 xmm1, xmm0
  001c7	8b 4d dc	 mov	 ecx, DWORD PTR _mv$[ebp]
  001ca	f3 0f 11 49 04	 movss	 DWORD PTR [ecx+4], xmm1

; 178  : 
; 179  : 		//
; 180  : 		// update attitude
; 181  : 		//
; 182  : 
; 183  : 		if (raw->inst3d [loop])

  001cf	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001d2	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  001d5	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  001d8	83 3c 91 00	 cmp	 DWORD PTR [ecx+edx*4], 0
  001dc	74 65		 je	 SHORT $LN6@update_par

; 184  : 		{
; 185  : 			memcpy (m, raw->inst3d [loop]->vp.attitude, sizeof (matrix3x3));

  001de	6a 24		 push	 36			; 00000024H
  001e0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001e3	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  001e6	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  001e9	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  001ec	83 c0 14	 add	 eax, 20			; 00000014H
  001ef	50		 push	 eax
  001f0	8d 4d b0	 lea	 ecx, DWORD PTR _m$[ebp]
  001f3	51		 push	 ecx
  001f4	e8 00 00 00 00	 call	 _memcpy
  001f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 186  : 
; 187  : 			get_3d_transformation_matrix_fast (rotation_matrix, dh, dp, dr);

  001fc	51		 push	 ecx
  001fd	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _dr$[ebp]
  00202	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00207	51		 push	 ecx
  00208	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _dp$[ebp]
  0020d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00212	51		 push	 ecx
  00213	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _dh$[ebp]
  00218	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021d	8d 45 8c	 lea	 eax, DWORD PTR _rotation_matrix$[ebp]
  00220	50		 push	 eax
  00221	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix_fast@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix_fast

; 188  : 
; 189  : 			multiply_matrix3x3_matrix3x3 (raw->inst3d [loop]->vp.attitude, m, rotation_matrix);

  00226	8d 45 8c	 lea	 eax, DWORD PTR _rotation_matrix$[ebp]
  00229	50		 push	 eax
  0022a	8d 4d b0	 lea	 ecx, DWORD PTR _m$[ebp]
  0022d	51		 push	 ecx
  0022e	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00231	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00234	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  00237	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]
  0023a	83 c2 14	 add	 edx, 20			; 00000014H
  0023d	52		 push	 edx
  0023e	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3
$LN6@update_par:

; 190  : 		}
; 191  : 
; 192  : 		//
; 193  : 		//
; 194  : 		//
; 195  : 				
; 196  : 		if ( special_effect )

  00243	83 7d d4 00	 cmp	 DWORD PTR _special_effect$[ebp], 0
  00247	0f 84 92 00 00
	00		 je	 $LN7@update_par

; 197  : 		{
; 198  : 			//
; 199  : 			// next trail
; 200  : 			//
; 201  : 	
; 202  : 			next = get_local_entity_child_succ( special_effect, LIST_TYPE_SPECIAL_EFFECT );

  0024d	83 7d d4 00	 cmp	 DWORD PTR _special_effect$[ebp], 0
  00251	74 0d		 je	 SHORT $LN22@update_par
  00253	8b 45 d4	 mov	 eax, DWORD PTR _special_effect$[ebp]
  00256	8b 08		 mov	 ecx, DWORD PTR [eax]
  00258	89 8d 48 ff ff
	ff		 mov	 DWORD PTR tv191[ebp], ecx
  0025e	eb 24		 jmp	 SHORT $LN23@update_par
$LN22@update_par:
  00260	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_particle@@YGHPAUENTITY@@@Z@4JA
  00266	83 c2 5f	 add	 edx, 95			; 0000005fH
  00269	52		 push	 edx
  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027a	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv191[ebp], 0
$LN23@update_par:
  00284	b9 01 00 00 00	 mov	 ecx, 1
  00289	85 c9		 test	 ecx, ecx
  0028b	74 0c		 je	 SHORT $LN24@update_par
  0028d	c7 85 44 ff ff
	ff 24 00 00 00	 mov	 DWORD PTR tv199[ebp], 36 ; 00000024H
  00297	eb 24		 jmp	 SHORT $LN25@update_par
$LN24@update_par:
  00299	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_particle@@YGHPAUENTITY@@@Z@4JA
  0029f	83 c2 5f	 add	 edx, 95			; 0000005fH
  002a2	52		 push	 edx
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@HJCGGFJM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b3	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv199[ebp], 0
$LN25@update_par:
  002bd	6a 24		 push	 36			; 00000024H
  002bf	8b 4d d4	 mov	 ecx, DWORD PTR _special_effect$[ebp]
  002c2	51		 push	 ecx
  002c3	69 95 48 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv191[ebp], 180
  002cd	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR tv199[ebp]
  002d3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002da	ff d1		 call	 ecx
  002dc	89 45 d8	 mov	 DWORD PTR _next$[ebp], eax
$LN7@update_par:

; 203  : 		}
; 204  : 
; 205  : 		//
; 206  : 		// check if position is below ground / out of bounds
; 207  : 		//
; 208  : 
; 209  : 		if ( ( !point_inside_map_area( pos ) ) ||
; 210  : 				( !point_above_ground( pos ) ) ||

  002df	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  002e2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002e6	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  002ed	0f 82 bf 00 00
	00		 jb	 $LN10@update_par
  002f3	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  002f6	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  002fe	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00301	0f 82 ab 00 00
	00		 jb	 $LN10@update_par
  00307	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  0030a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0030f	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00316	0f 82 96 00 00
	00		 jb	 $LN10@update_par
  0031c	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  0031f	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00327	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  0032b	0f 82 81 00 00
	00		 jb	 $LN10@update_par
  00331	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  00334	51		 push	 ecx
  00335	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0033a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033f	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  00342	51		 push	 ecx
  00343	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00347	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034c	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  00351	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv360[ebp]
  00357	8b 55 e0	 mov	 edx, DWORD PTR _pos$[ebp]
  0035a	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0035f	0f 2f 85 48 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv360[ebp]
  00366	73 39		 jae	 SHORT $LN11@update_par
  00368	6a 00		 push	 0
  0036a	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  0036d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00372	51		 push	 ecx
  00373	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00378	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  0037b	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0037f	51		 push	 ecx
  00380	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00385	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0038a	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv370[ebp]
  00390	8b 55 e0	 mov	 edx, DWORD PTR _pos$[ebp]
  00393	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00398	0f 2f 85 48 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv370[ebp]
  0039f	72 11		 jb	 SHORT $LN10@update_par
$LN11@update_par:
  003a1	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  003a4	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  003ac	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  003b0	73 5c		 jae	 SHORT $LN8@update_par
$LN10@update_par:

; 211  : 				( !point_below_ceiling( pos ) ) )
; 212  : 		{
; 213  : 
; 214  : 			if ( special_effect )

  003b2	83 7d d4 00	 cmp	 DWORD PTR _special_effect$[ebp], 0
  003b6	74 0b		 je	 SHORT $LN12@update_par

; 215  : 			{
; 216  : 				//
; 217  : 				// remove smoke from list
; 218  : 				//
; 219  : 
; 220  : 				delete_local_entity_from_parents_child_list (special_effect, LIST_TYPE_SPECIAL_EFFECT);

  003b8	6a 24		 push	 36			; 00000024H
  003ba	8b 45 d4	 mov	 eax, DWORD PTR _special_effect$[ebp]
  003bd	50		 push	 eax
  003be	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list
$LN12@update_par:

; 221  : 			}
; 222  : 
; 223  : 			raw->valid[ loop ] = FALSE;

  003c3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003c6	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003c9	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  003cc	c6 04 11 00	 mov	 BYTE PTR [ecx+edx], 0

; 224  : 
; 225  : 			if (raw->inst3d [loop])

  003d0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003d3	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  003d6	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  003d9	83 3c 91 00	 cmp	 DWORD PTR [ecx+edx*4], 0
  003dd	74 22		 je	 SHORT $LN13@update_par

; 226  : 			{
; 227  : 				destruct_3d_object (raw->inst3d [loop]);

  003df	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003e2	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  003e5	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  003e8	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  003eb	50		 push	 eax
  003ec	e8 00 00 00 00	 call	 ?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; destruct_3d_object

; 228  : 				
; 229  : 				raw->inst3d [loop] = NULL;

  003f1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003f4	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  003f7	8b 55 f4	 mov	 edx, DWORD PTR _loop$[ebp]
  003fa	c7 04 91 00 00
	00 00		 mov	 DWORD PTR [ecx+edx*4], 0
$LN13@update_par:

; 230  : 			}
; 231  : 
; 232  : 			pos->y = 0.0;		// bound height above ground, otherwise an error will occur when trying to pack the position

  00401	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  00404	0f 57 c0	 xorps	 xmm0, xmm0
  00407	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 233  : 
; 234  : 			#if DEBUG_MODULE
; 235  : 	
; 236  : 			debug_log("PARTICLE : Particle %d expired", loop );
; 237  : 
; 238  : 			#endif
; 239  : 
; 240  : 		}
; 241  : 		else

  0040c	eb 32		 jmp	 SHORT $LN14@update_par
$LN8@update_par:

; 242  : 		{
; 243  : 			//
; 244  : 			// notify smoke trail of new position
; 245  : 			//
; 246  : 	
; 247  : 			if ( special_effect )

  0040e	83 7d d4 00	 cmp	 DWORD PTR _special_effect$[ebp], 0
  00412	74 2c		 je	 SHORT $LN14@update_par

; 248  : 			{
; 249  : 				notify_local_entity( ENTITY_MESSAGE_SET_ENTITY_POSITION, special_effect, en, pos, 0.0, 0.0 );

  00414	83 ec 08	 sub	 esp, 8
  00417	0f 57 c0	 xorps	 xmm0, xmm0
  0041a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0041f	83 ec 08	 sub	 esp, 8
  00422	0f 57 c0	 xorps	 xmm0, xmm0
  00425	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0042a	8b 45 e0	 mov	 eax, DWORD PTR _pos$[ebp]
  0042d	50		 push	 eax
  0042e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00431	51		 push	 ecx
  00432	8b 55 d4	 mov	 edx, DWORD PTR _special_effect$[ebp]
  00435	52		 push	 edx
  00436	6a 30		 push	 48			; 00000030H
  00438	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0043d	83 c4 20	 add	 esp, 32			; 00000020H
$LN14@update_par:

; 250  : 			}
; 251  : 		}
; 252  : 
; 253  : 		if ( special_effect )

  00440	83 7d d4 00	 cmp	 DWORD PTR _special_effect$[ebp], 0
  00444	74 06		 je	 SHORT $LN15@update_par

; 254  : 		{
; 255  : 			special_effect = next;

  00446	8b 45 d8	 mov	 eax, DWORD PTR _next$[ebp]
  00449	89 45 d4	 mov	 DWORD PTR _special_effect$[ebp], eax
$LN15@update_par:

; 256  : 		}
; 257  : 	}

  0044c	e9 b1 fc ff ff	 jmp	 $LN2@update_par
$LN3@update_par:

; 258  : 
; 259  : 	//
; 260  : 	// if all particles have expired ( i.e. alive_count == 0 ) then destroy the particle entity
; 261  : 	//
; 262  : 
; 263  : 	if ( alive_count == 0 )

  00451	83 7d f8 00	 cmp	 DWORD PTR _alive_count$[ebp], 0
  00455	75 04		 jne	 SHORT $LN16@update_par

; 264  : 	{
; 265  : 		#if DEBUG_MODULE
; 266  : 
; 267  : 		debug_log("PARTICLE : All particles expired - destroy entity");
; 268  : 
; 269  : 		#endif
; 270  : 
; 271  : 		return FALSE;

  00457	33 c0		 xor	 eax, eax
  00459	eb 05		 jmp	 SHORT $LN1@update_par
$LN16@update_par:

; 272  : 	}
; 273  : 
; 274  : 	return TRUE;

  0045b	b8 01 00 00 00	 mov	 eax, 1
$LN1@update_par:

; 275  : }

  00460	5f		 pop	 edi
  00461	5e		 pop	 esi
  00462	5b		 pop	 ebx
  00463	8b e5		 mov	 esp, ebp
  00465	5d		 pop	 ebp
  00466	c2 04 00	 ret	 4
?update_particle@@YGHPAUENTITY@@@Z ENDP			; update_particle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\particle\pa_updt.c
;	COMDAT ?overload_particle_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_particle_update_functions@@YGXXZ PROC		; overload_particle_update_functions, COMDAT

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 283  : 	fn_update_client_server_entity[ENTITY_TYPE_PARTICLE][COMMS_MODEL_SERVER]  	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 12	 imul	 ecx, eax, 18
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 284  : 
; 285  : 	fn_update_client_server_entity[ENTITY_TYPE_PARTICLE][COMMS_MODEL_CLIENT]  	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 12	 imul	 ecx, eax, 18
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 286  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_particle_update_functions@@YGXXZ ENDP		; overload_particle_update_functions
_TEXT	ENDS
END
