; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\soundeff\se_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_sound_effect_update_functions@@YGXXZ	; overload_sound_effect_update_functions
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@OINGOCG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BC@EBDAMAJO@raw?9?$DOeffect_index@	; `string'
PUBLIC	??_C@_0CE@DOAMFLLF@raw?9?$DOeff?4special_effect_link?4pa@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_system_sound_effect_playing@@YGHPAUSYSTEM_SOUND_EFFECT@@@Z:PROC ; get_system_sound_effect_playing
EXTRN	?destroy_system_sound_effect@@YGXPAUSYSTEM_SOUND_EFFECT@@@Z:PROC ; destroy_system_sound_effect
EXTRN	?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; delete_local_entity_from_parents_child_list
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_kill_client_server_entity
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DOAMFLLF@raw?9?$DOeff?4special_effect_link?4pa@
CONST	SEGMENT
??_C@_0CE@DOAMFLLF@raw?9?$DOeff?4special_effect_link?4pa@ DB 'raw->eff.sp'
	DB	'ecial_effect_link.parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EBDAMAJO@raw?9?$DOeffect_index@
CONST	SEGMENT
??_C@_0BC@EBDAMAJO@raw?9?$DOeffect_index@ DB 'raw->effect_index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@OINGOCG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@OINGOCG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nhv'
	DB	'90\projects\eech\aphavoc\source\entity\special\effect\soundef'
	DB	'f\se_updt.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 050H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 167  : 	sound_effect
; 168  : 		*raw;
; 169  : 
; 170  : 	raw = (sound_effect *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 171  : 
; 172  : 	if (raw->valid_sound_effect)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00018	c1 e9 08	 shr	 ecx, 8
  0001b	83 e1 01	 and	 ecx, 1
  0001e	74 44		 je	 SHORT $LN2@update_cli

; 173  : 	{
; 174  : 		if (!raw->looping)

  00020	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00023	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00026	c1 e9 09	 shr	 ecx, 9
  00029	83 e1 01	 and	 ecx, 1
  0002c	75 34		 jne	 SHORT $LN5@update_cli

; 175  : 		{
; 176  : 			raw->effect_lifetime -= get_delta_time ();

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00031	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00036	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00041	f3 0f 11 41 34	 movss	 DWORD PTR [ecx+52], xmm0

; 177  : 
; 178  : 			if (raw->effect_lifetime < 0.0)

  00046	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00049	f3 0f 5a 40 34	 cvtss2sd xmm0, DWORD PTR [eax+52]
  0004e	0f 57 c9	 xorps	 xmm1, xmm1
  00051	66 0f 2f c8	 comisd	 xmm1, xmm0
  00055	76 0b		 jbe	 SHORT $LN5@update_cli

; 179  : 			{
; 180  : 				raw->effect_lifetime = 0.0;

  00057	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	f3 0f 11 40 34	 movss	 DWORD PTR [eax+52], xmm0
$LN5@update_cli:

; 181  : 			}
; 182  : 		}
; 183  : 	}
; 184  : 	else

  00062	eb 70		 jmp	 SHORT $LN8@update_cli
$LN2@update_cli:

; 185  : 	{
; 186  : 		if (raw->valid_effect_lifetime > 0.0)

  00064	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00067	f3 0f 5a 40 38	 cvtss2sd xmm0, DWORD PTR [eax+56]
  0006c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00074	76 34		 jbe	 SHORT $LN6@update_cli

; 187  : 		{
; 188  : 			raw->valid_effect_lifetime = max (raw->valid_effect_lifetime - get_delta_time (), 0.0f);

  00076	0f 57 c0	 xorps	 xmm0, xmm0
  00079	f3 0f 11 45 b8	 movss	 DWORD PTR $T2[ebp], xmm0
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00081	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00086	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0008e	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  00093	8d 4d b8	 lea	 ecx, DWORD PTR $T2[ebp]
  00096	51		 push	 ecx
  00097	8d 55 b4	 lea	 edx, DWORD PTR $T1[ebp]
  0009a	52		 push	 edx
  0009b	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000a3	8b 10		 mov	 edx, DWORD PTR [eax]
  000a5	89 51 38	 mov	 DWORD PTR [ecx+56], edx

; 189  : 		}
; 190  : 		else

  000a8	eb 2a		 jmp	 SHORT $LN8@update_cli
$LN6@update_cli:

; 191  : 		{
; 192  : 			delete_local_entity_from_parents_child_list (en, LIST_TYPE_UPDATE);

  000aa	6a 29		 push	 41			; 00000029H
  000ac	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list

; 193  : 
; 194  : 			if (raw->sound_effect_data)

  000b5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b8	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  000bc	74 16		 je	 SHORT $LN8@update_cli

; 195  : 			{
; 196  : 				destroy_system_sound_effect (raw->sound_effect_data);

  000be	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c1	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000c4	51		 push	 ecx
  000c5	e8 00 00 00 00	 call	 ?destroy_system_sound_effect@@YGXPAUSYSTEM_SOUND_EFFECT@@@Z ; destroy_system_sound_effect

; 197  : 
; 198  : 				raw->sound_effect_data = NULL;

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000cd	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
$LN8@update_cli:

; 199  : 			}
; 200  : 		}
; 201  : 	}
; 202  : }

  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv149 = -80						; size = 4
tv137 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 
; 82   : 	sound_effect
; 83   : 		*raw;
; 84   : 
; 85   : 	raw = (sound_effect *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 86   : 
; 87   : 	ASSERT (raw->effect_index);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  00019	75 18		 jne	 SHORT $LN2@update_ser
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00020	83 c0 07	 add	 eax, 7
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OINGOCG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EBDAMAJO@raw?9?$DOeffect_index@
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_ser:

; 88   : 
; 89   : 	ASSERT (raw->eff.special_effect_link.parent);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00036	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003a	75 18		 jne	 SHORT $LN3@update_ser
  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00041	83 c0 09	 add	 eax, 9
  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OINGOCG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DOAMFLLF@raw?9?$DOeff?4special_effect_link?4pa@
  0004f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@update_ser:

; 90   : 
; 91   : 	#if DEBUG_MODULE >= 2
; 92   : 
; 93   : 	debug_log ("SE_UPDT : %s - lifetime %f, valid %d, valid lifetime %f",
; 94   : 	 								application_sound_effects [raw->effect_index [0]].name,
; 95   : 									raw->effect_lifetime,
; 96   : 									raw->valid_sound_effect,
; 97   : 									raw->valid_effect_lifetime);
; 98   : 	#endif
; 99   : 
; 100  : 	if (raw->valid_sound_effect)

  00054	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00057	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0005a	c1 e9 08	 shr	 ecx, 8
  0005d	83 e1 01	 and	 ecx, 1
  00060	0f 84 ec 00 00
	00		 je	 $LN4@update_ser

; 101  : 	{
; 102  : 		//
; 103  : 		// effect_lifetime
; 104  : 		//
; 105  : 
; 106  : 		if (!raw->looping)

  00066	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00069	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0006c	c1 e9 09	 shr	 ecx, 9
  0006f	83 e1 01	 and	 ecx, 1
  00072	75 18		 jne	 SHORT $LN6@update_ser

; 107  : 		{
; 108  : 			raw->effect_lifetime -= get_delta_time ();

  00074	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00077	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  0007c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00087	f3 0f 11 41 34	 movss	 DWORD PTR [ecx+52], xmm0
$LN6@update_ser:

; 109  : 		}
; 110  : 	
; 111  : 		if (raw->effect_lifetime < 0.0)

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008f	f3 0f 5a 40 34	 cvtss2sd xmm0, DWORD PTR [eax+52]
  00094	0f 57 c9	 xorps	 xmm1, xmm1
  00097	66 0f 2f c8	 comisd	 xmm1, xmm0
  0009b	0f 86 af 00 00
	00		 jbe	 $LN9@update_ser

; 112  : 		{
; 113  : 
; 114  : 			#if DEBUG_MODULE
; 115  : 
; 116  : 			debug_log ("SE_UPDT : Expired ( index = %s, pos = %f, %f, lifetime %f)", application_sound_effects [raw->effect_index [0]].name, raw->eff.position.x, raw->eff.position.z, raw->effect_lifetime);
; 117  : 	
; 118  : 			#endif
; 119  : 
; 120  : 			if (raw->sound_effect_data)

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a4	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  000a8	74 5c		 je	 SHORT $LN8@update_ser

; 121  : 			{
; 122  : 				if (!get_system_sound_effect_playing (raw->sound_effect_data))

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ad	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000b0	51		 push	 ecx
  000b1	e8 00 00 00 00	 call	 ?get_system_sound_effect_playing@@YGHPAUSYSTEM_SOUND_EFFECT@@@Z ; get_system_sound_effect_playing
  000b6	85 c0		 test	 eax, eax
  000b8	75 4a		 jne	 SHORT $LN10@update_ser

; 123  : 				{
; 124  : 					kill_client_server_entity (en);

  000ba	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000be	74 0a		 je	 SHORT $LN16@update_ser
  000c0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c5	89 4d b0	 mov	 DWORD PTR tv137[ebp], ecx
  000c8	eb 21		 jmp	 SHORT $LN17@update_ser
$LN16@update_ser:
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  000d0	83 c2 2c	 add	 edx, 44			; 0000002cH
  000d3	52		 push	 edx
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OINGOCG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN17@update_ser:
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ee	51		 push	 ecx
  000ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  000f5	c1 e2 02	 shl	 edx, 2
  000f8	8b 45 b0	 mov	 eax, DWORD PTR tv137[ebp]
  000fb	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00102	ff d1		 call	 ecx
$LN10@update_ser:

; 125  : 				}
; 126  : 				else
; 127  : 				{
; 128  : 					#if DEBUG_MODULE
; 129  : 
; 130  : 					debug_log ("SE_UPDT : Not destroying because it's still playing ( index = %s, pos = %f, %f )", application_sound_effects [raw->effect_index [0]].name, raw->eff.position.x, raw->eff.position.z);
; 131  : 	
; 132  : 					#endif
; 133  : 				}
; 134  : 			}
; 135  : 			else

  00104	eb 4a		 jmp	 SHORT $LN9@update_ser
$LN8@update_ser:

; 136  : 			{
; 137  : 				kill_client_server_entity (en);

  00106	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0010a	74 0a		 je	 SHORT $LN18@update_ser
  0010c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0010f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00111	89 4d b0	 mov	 DWORD PTR tv149[ebp], ecx
  00114	eb 21		 jmp	 SHORT $LN19@update_ser
$LN18@update_ser:
  00116	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0011c	83 c2 39	 add	 edx, 57			; 00000039H
  0011f	52		 push	 edx
  00120	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OINGOCG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00125	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00130	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
$LN19@update_ser:
  00137	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0013a	51		 push	 ecx
  0013b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00141	c1 e2 02	 shl	 edx, 2
  00144	8b 45 b0	 mov	 eax, DWORD PTR tv149[ebp]
  00147	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  0014e	ff d1		 call	 ecx
$LN9@update_ser:

; 138  : 			}
; 139  : 		}
; 140  : 	}
; 141  : 	else

  00150	eb 70		 jmp	 SHORT $LN14@update_ser
$LN4@update_ser:

; 142  : 	{
; 143  : 		if (raw->valid_effect_lifetime > 0.0)

  00152	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00155	f3 0f 5a 40 38	 cvtss2sd xmm0, DWORD PTR [eax+56]
  0015a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00162	76 34		 jbe	 SHORT $LN12@update_ser

; 144  : 		{
; 145  : 			raw->valid_effect_lifetime = max (raw->valid_effect_lifetime - get_delta_time (), 0.0f);

  00164	0f 57 c0	 xorps	 xmm0, xmm0
  00167	f3 0f 11 45 b8	 movss	 DWORD PTR $T2[ebp], xmm0
  0016c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016f	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00174	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0017c	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  00181	8d 4d b8	 lea	 ecx, DWORD PTR $T2[ebp]
  00184	51		 push	 ecx
  00185	8d 55 b4	 lea	 edx, DWORD PTR $T1[ebp]
  00188	52		 push	 edx
  00189	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0018e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00191	8b 10		 mov	 edx, DWORD PTR [eax]
  00193	89 51 38	 mov	 DWORD PTR [ecx+56], edx

; 146  : 		}
; 147  : 		else

  00196	eb 2a		 jmp	 SHORT $LN14@update_ser
$LN12@update_ser:

; 148  : 		{
; 149  : 			delete_local_entity_from_parents_child_list (en, LIST_TYPE_UPDATE);

  00198	6a 29		 push	 41			; 00000029H
  0019a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list

; 150  : 
; 151  : 			if (raw->sound_effect_data)

  001a3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001a6	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  001aa	74 16		 je	 SHORT $LN14@update_ser

; 152  : 			{
; 153  : 				destroy_system_sound_effect (raw->sound_effect_data);

  001ac	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001af	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  001b2	51		 push	 ecx
  001b3	e8 00 00 00 00	 call	 ?destroy_system_sound_effect@@YGXPAUSYSTEM_SOUND_EFFECT@@@Z ; destroy_system_sound_effect

; 154  : 
; 155  : 				raw->sound_effect_data = NULL;

  001b8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001bb	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
$LN14@update_ser:

; 156  : 			}
; 157  : 		}
; 158  : 	}
; 159  : }

  001c2	5f		 pop	 edi
  001c3	5e		 pop	 esi
  001c4	5b		 pop	 ebx
  001c5	8b e5		 mov	 esp, ebp
  001c7	5d		 pop	 ebp
  001c8	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_updt.c
;	COMDAT ?overload_sound_effect_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_sound_effect_update_functions@@YGXXZ PROC	; overload_sound_effect_update_functions, COMDAT

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 210  : 	fn_update_client_server_entity[ENTITY_TYPE_SOUND_EFFECT][COMMS_MODEL_SERVER]  	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	c1 e0 05	 shl	 eax, 5
  00011	b9 04 00 00 00	 mov	 ecx, 4
  00016	6b d1 00	 imul	 edx, ecx, 0
  00019	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[eax+edx], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 211  : 
; 212  : 	fn_update_client_server_entity[ENTITY_TYPE_SOUND_EFFECT][COMMS_MODEL_CLIENT]  	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	c1 e0 05	 shl	 eax, 5
  0002c	b9 04 00 00 00	 mov	 ecx, 4
  00031	c1 e1 00	 shl	 ecx, 0
  00034	c7 84 08 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[eax+ecx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 213  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_sound_effect_update_functions@@YGXXZ ENDP	; overload_sound_effect_update_functions
_TEXT	ENDS
END
