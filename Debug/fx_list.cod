; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\fixed\fx_list.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_fixed_list_functions@@YGXW4ENTITY_TYPES@@@Z ; overload_fixed_list_functions
PUBLIC	?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_first_child'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@	; `string'
PUBLIC	?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_first_child'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_parent'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@		; `string'
PUBLIC	?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_parent'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_child_succ'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@	; `string'
PUBLIC	?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_child_succ'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_child_pred'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@	; `string'
PUBLIC	?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_child_pred'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_type_database@@3PAUENTITY_TYPE_DATA@@A:BYTE ; entity_type_database
EXTRN	?list_type_database@@3PAULIST_TYPE_DATA@@A:BYTE	; list_type_database
EXTRN	?debug_fatal_invalid_list_type_message@@3PBDB:DWORD ; debug_fatal_invalid_list_type_message
EXTRN	?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_first_child
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_parent
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_child_succ
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_child_pred
EXTRN	?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_pred
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
;	COMDAT ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_pred.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 0fdH ; `get_local_child_pred'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@
CONST	SEGMENT
??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@ DB 'en != child_pred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_pred.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 0ebH ; `set_local_child_pred'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_succ.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 0d4H ; `get_local_child_succ'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@
CONST	SEGMENT
??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@ DB 'en != child_succ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_succ.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 0c2H ; `set_local_child_succ'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_prnt.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 0abH ; `get_local_parent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@
CONST	SEGMENT
??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@ DB 'en != parent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_prnt.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 099H ; `set_local_parent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_frst.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 082H ; `get_local_first_child'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@
CONST	SEGMENT
??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@ DB 'en != first_child', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_frst.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 070H ; `set_local_first_child'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_pred.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv88 = -76						; size = 4
tv65 = -76						; size = 4
_child_pred$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_child_pred, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 254  : 	fixed
; 255  : 		*raw;
; 256  : 
; 257  : 	entity
; 258  : 		*child_pred;
; 259  : 
; 260  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_pred.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	83 7d b4 0a	 cmp	 DWORD PTR tv65[ebp], 10	; 0000000aH
  0001c	74 0e		 je	 SHORT $LN4@get_local_
  0001e	83 7d b4 12	 cmp	 DWORD PTR tv65[ebp], 18	; 00000012H
  00022	74 16		 je	 SHORT $LN5@get_local_
  00024	83 7d b4 21	 cmp	 DWORD PTR tv65[ebp], 33	; 00000021H
  00028	74 1e		 je	 SHORT $LN6@get_local_
  0002a	eb 27		 jmp	 SHORT $LN7@get_local_
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		child_pred = raw->aircrew_link.child_pred;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 85   : 
; 86   : 	case LIST_TYPE_ASSIGNED_TASK:
; 87   : 	{
; 88   : 		child_pred = raw->task_link.child_pred;
; 89   : 
; 90   : 		break;
; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 98   : 
; 99   : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 100  : 	{
; 101  : 		child_pred = raw->campaign_objective_link.child_pred;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_CARGO_LINK
; 111  : 
; 112  : 	case LIST_TYPE_CARGO:
; 113  : 	{
; 114  : 		child_pred = raw->cargo_link.child_pred;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 124  : 
; 125  : 	case LIST_TYPE_CITY_BUILDING:
; 126  : 	{
; 127  : 		child_pred = raw->city_building_link.child_pred;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 137  : 
; 138  : 	case LIST_TYPE_COMPLETED_TASK:
; 139  : 	{
; 140  : 		child_pred = raw->task_link.child_pred;
; 141  : 
; 142  : 		break;
; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 150  : 
; 151  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 152  : 	{
; 153  : 		child_pred = raw->current_waypoint_link.child_pred;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	// Jabbewock 031107 Designated targets
; 163  : 	
; 164  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 165  : 
; 166  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 167  : 	{
; 168  : 		child_pred = raw->designated_target_link.child_pred;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00032	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 169  : 
; 170  : 		break;

  00035	e9 98 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 171  : 	}
; 172  : 
; 173  : 	#endif
; 174  : 
; 175  : 	// Jabbewock 031107 ends
; 176  : 
; 177  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 178  : 
; 179  : 	case LIST_TYPE_DIVISION:
; 180  : 	{
; 181  : 		child_pred = raw->division_link.child_pred;
; 182  : 
; 183  : 		break;
; 184  : 	}
; 185  : 
; 186  : 	#endif
; 187  : 	
; 188  : 	////////////////////////////////////////
; 189  : 
; 190  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 191  : 
; 192  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 193  : 	{
; 194  : 		child_pred = raw->division_headquarters_link.child_pred;
; 195  : 
; 196  : 		break;
; 197  : 	}
; 198  : 
; 199  : 	#endif
; 200  : 
; 201  : 	////////////////////////////////////////
; 202  : 
; 203  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 204  : 
; 205  : 	case LIST_TYPE_FOLLOWER:
; 206  : 	{
; 207  : 		child_pred = raw->follower_link.child_pred;
; 208  : 
; 209  : 		break;
; 210  : 	}
; 211  : 
; 212  : 	#endif
; 213  : 
; 214  : 	////////////////////////////////////////
; 215  : 
; 216  : 	#ifdef LIST_TYPE_FORCE_LINK
; 217  : 
; 218  : 	case LIST_TYPE_FORCE:
; 219  : 	{
; 220  : 		child_pred = raw->force_link.child_pred;
; 221  : 
; 222  : 		break;
; 223  : 	}
; 224  : 
; 225  : 	#endif
; 226  : 
; 227  : 	////////////////////////////////////////
; 228  : 
; 229  : 	#ifdef LIST_TYPE_GROUP_LINK
; 230  : 
; 231  : 	case LIST_TYPE_BUILDING_GROUP:
; 232  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 233  : 	case LIST_TYPE_KEYSITE_GROUP:
; 234  : 	{
; 235  : 		child_pred = raw->group_link.child_pred;
; 236  : 
; 237  : 		break;
; 238  : 	}
; 239  : 
; 240  : 	#endif
; 241  : 
; 242  : 	////////////////////////////////////////
; 243  : 
; 244  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 245  : 
; 246  : 	case LIST_TYPE_GUIDE:
; 247  : 	{
; 248  : 		child_pred = raw->guide_link.child_pred;
; 249  : 
; 250  : 		break;
; 251  : 	}
; 252  : 
; 253  : 	#endif
; 254  : 
; 255  : 	////////////////////////////////////////
; 256  : 
; 257  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 258  : 
; 259  : 	case LIST_TYPE_GUIDE_STACK:
; 260  : 	{
; 261  : 		child_pred = raw->guide_stack_link.child_pred;
; 262  : 
; 263  : 		break;
; 264  : 	}
; 265  : 
; 266  : 	#endif
; 267  : 
; 268  : 	////////////////////////////////////////
; 269  : 
; 270  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 271  : 
; 272  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 273  : 	{
; 274  : 		child_pred = raw->gunship_target_link.child_pred;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003d	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00040	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 275  : 
; 276  : 		break;

  00043	e9 8a 00 00 00	 jmp	 $LN2@get_local_
$LN6@get_local_:

; 277  : 	}
; 278  : 
; 279  : 	#endif
; 280  : 
; 281  : 	////////////////////////////////////////
; 282  : 
; 283  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 284  : 
; 285  : 	case LIST_TYPE_HIERARCHY:
; 286  : 	{
; 287  : 		child_pred = raw->hierarchy_link.child_pred;
; 288  : 
; 289  : 		break;
; 290  : 	}
; 291  : 
; 292  : 	#endif
; 293  : 
; 294  : 	////////////////////////////////////////
; 295  : 
; 296  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 297  : 
; 298  : 	case LIST_TYPE_KEYSITE_FORCE:
; 299  : 	{
; 300  : 		child_pred = raw->keysite_force_link.child_pred;
; 301  : 
; 302  : 		break;
; 303  : 	}
; 304  : 
; 305  : 	#endif
; 306  : 
; 307  : 	////////////////////////////////////////
; 308  : 
; 309  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 310  : 
; 311  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 312  : 	{
; 313  : 		child_pred = raw->launched_weapon_link.child_pred;
; 314  : 
; 315  : 		break;
; 316  : 	}
; 317  : 
; 318  : 	#endif
; 319  : 
; 320  : 	////////////////////////////////////////
; 321  : 
; 322  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 323  : 
; 324  : 	case LIST_TYPE_LANDING_SITE:
; 325  : 	{
; 326  : 		child_pred = raw->landing_site_link.child_pred;
; 327  : 
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	#endif
; 332  : 
; 333  : 	////////////////////////////////////////
; 334  : 
; 335  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 336  : 
; 337  : 	case LIST_TYPE_MEMBER:
; 338  : 	{
; 339  : 		child_pred = raw->member_link.child_pred;
; 340  : 
; 341  : 		break;
; 342  : 	}
; 343  : 
; 344  : 	#endif
; 345  : 
; 346  : 	////////////////////////////////////////
; 347  : 
; 348  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 349  : 
; 350  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 351  : 	{
; 352  : 		child_pred = raw->movement_dependent_link.child_pred;
; 353  : 
; 354  : 		break;
; 355  : 	}
; 356  : 
; 357  : 	#endif
; 358  : 
; 359  : 	////////////////////////////////////////
; 360  : 
; 361  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 362  : 
; 363  : 	case LIST_TYPE_PADLOCK:
; 364  : 	{
; 365  : 		child_pred = raw->padlock_link.child_pred;
; 366  : 
; 367  : 		break;
; 368  : 	}
; 369  : 
; 370  : 	#endif
; 371  : 
; 372  : 	////////////////////////////////////////
; 373  : 
; 374  : 	#ifdef LIST_TYPE_PILOT_LINK
; 375  : 
; 376  : 	case LIST_TYPE_PILOT:
; 377  : 	{
; 378  : 		child_pred = raw->pilot_link.child_pred;
; 379  : 
; 380  : 		break;
; 381  : 	}
; 382  : 
; 383  : 	#endif
; 384  : 
; 385  : 	////////////////////////////////////////
; 386  : 
; 387  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 388  : 
; 389  : 	case LIST_TYPE_PILOT_LOCK:
; 390  : 	{
; 391  : 		child_pred = raw->pilot_lock_link.child_pred;
; 392  : 
; 393  : 		break;
; 394  : 	}
; 395  : 
; 396  : 	#endif
; 397  : 
; 398  : 	////////////////////////////////////////
; 399  : 
; 400  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 401  : 
; 402  : 	case LIST_TYPE_PLAYER_TASK:
; 403  : 	{
; 404  : 		child_pred = raw->player_task_link.child_pred;
; 405  : 
; 406  : 		break;
; 407  : 	}
; 408  : 
; 409  : 	#endif
; 410  : 
; 411  : 	////////////////////////////////////////
; 412  : 
; 413  : 	#ifdef LIST_TYPE_REGEN_LINK
; 414  : 
; 415  : 	case LIST_TYPE_REGEN:
; 416  : 	{
; 417  : 		child_pred = raw->regen_link.child_pred;
; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : 
; 422  : 	#endif
; 423  : 
; 424  : 	////////////////////////////////////////
; 425  : 
; 426  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 427  : 
; 428  : 	case LIST_TYPE_AIR_REGISTRY:
; 429  : 	case LIST_TYPE_GROUND_REGISTRY:
; 430  : 	case LIST_TYPE_SEA_REGISTRY:
; 431  : 	{
; 432  : 		child_pred = raw->registry_link.child_pred;
; 433  : 
; 434  : 		break;
; 435  : 	}
; 436  : 
; 437  : 	#endif
; 438  : 
; 439  : 	////////////////////////////////////////
; 440  : 
; 441  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 442  : 
; 443  : 	case LIST_TYPE_SECTOR:
; 444  : 	{
; 445  : 		child_pred = raw->sector_link.child_pred;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004b	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  0004e	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 446  : 
; 447  : 		break;

  00051	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN7@get_local_:

; 448  : 	}
; 449  : 
; 450  : 	#endif
; 451  : 
; 452  : 	////////////////////////////////////////
; 453  : 
; 454  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 455  : 
; 456  : 	case LIST_TYPE_SECTOR_TASK:
; 457  : 	{
; 458  : 		child_pred = raw->sector_task_link.child_pred;
; 459  : 
; 460  : 		break;
; 461  : 	}
; 462  : 
; 463  : 	#endif
; 464  : 
; 465  : 	////////////////////////////////////////
; 466  : 
; 467  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 468  : 
; 469  : 	case LIST_TYPE_SEGMENT:
; 470  : 	{
; 471  : 		child_pred = raw->segment_link.child_pred;
; 472  : 
; 473  : 		break;
; 474  : 	}
; 475  : 
; 476  : 	#endif
; 477  : 
; 478  : 	////////////////////////////////////////
; 479  : 
; 480  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 481  : 
; 482  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 483  : 	{
; 484  : 		child_pred = raw->special_effect_link.child_pred;
; 485  : 
; 486  : 		break;
; 487  : 	}
; 488  : 
; 489  : 	#endif
; 490  : 
; 491  : 	////////////////////////////////////////
; 492  : 
; 493  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 494  : 
; 495  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 496  : 	{
; 497  : 		child_pred = raw->takeoff_queue_link.child_pred;
; 498  : 
; 499  : 		break;
; 500  : 	}
; 501  : 
; 502  : 	#endif
; 503  : 
; 504  : 	////////////////////////////////////////
; 505  : 
; 506  : 	#ifdef LIST_TYPE_TARGET_LINK
; 507  : 
; 508  : 	case LIST_TYPE_TARGET:
; 509  : 	{
; 510  : 		child_pred = raw->target_link.child_pred;
; 511  : 
; 512  : 		break;
; 513  : 	}
; 514  : 
; 515  : 	#endif
; 516  : 
; 517  : 	////////////////////////////////////////
; 518  : 
; 519  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 520  : 
; 521  : 	case LIST_TYPE_TASK_DEPENDENT:
; 522  : 	{
; 523  : 		child_pred = raw->task_dependent_link.child_pred;
; 524  : 
; 525  : 		break;
; 526  : 	}
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	////////////////////////////////////////
; 531  : 
; 532  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 533  : 
; 534  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 535  : 	{
; 536  : 		child_pred = raw->task_link.child_pred;
; 537  : 
; 538  : 		break;
; 539  : 	}
; 540  : 
; 541  : 	#endif
; 542  : 
; 543  : 	////////////////////////////////////////
; 544  : 
; 545  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 546  : 
; 547  : 	case LIST_TYPE_UPDATE:
; 548  : 	{
; 549  : 		child_pred = raw->update_link.child_pred;
; 550  : 
; 551  : 		break;
; 552  : 	}
; 553  : 
; 554  : 	#endif
; 555  : 
; 556  : 	////////////////////////////////////////
; 557  : 
; 558  : 	#ifdef LIST_TYPE_VIEW_LINK
; 559  : 
; 560  : 	case LIST_TYPE_VIEW:
; 561  : 	{
; 562  : 		child_pred = raw->view_link.child_pred;
; 563  : 
; 564  : 		break;
; 565  : 	}
; 566  : 
; 567  : 	#endif
; 568  : 
; 569  : 	////////////////////////////////////////
; 570  : 
; 571  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 572  : 
; 573  : 	case LIST_TYPE_VIEW_WEAPON:
; 574  : 	{
; 575  : 		child_pred = raw->view_weapon_link.child_pred;
; 576  : 
; 577  : 		break;
; 578  : 	}
; 579  : 
; 580  : 	#endif
; 581  : 
; 582  : 	////////////////////////////////////////
; 583  : 
; 584  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 585  : 
; 586  : 	case LIST_TYPE_WAYPOINT:
; 587  : 	{
; 588  : 		child_pred = raw->waypoint_link.child_pred;
; 589  : 
; 590  : 		break;
; 591  : 	}
; 592  : 
; 593  : 	#endif
; 594  : 
; 595  : 	////////////////////////////////////////
; 596  : 
; 597  : 	default:
; 598  : 	{
; 599  : 		debug_fatal_invalid_list_type (en, type);

  00053	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00057	74 0a		 je	 SHORT $LN10@get_local_
  00059	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d b4	 mov	 DWORD PTR tv88[ebp], ecx
  00061	eb 24		 jmp	 SHORT $LN11@get_local_
$LN10@get_local_:
  00063	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00069	81 c2 5a 01 00
	00		 add	 edx, 346		; 0000015aH
  0006f	52		 push	 edx
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00080	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN11@get_local_:
  00087	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  0008d	81 c1 5a 01 00
	00		 add	 ecx, 346		; 0000015aH
  00093	51		 push	 ecx
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00099	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  0009c	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000a3	50		 push	 eax
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a7	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000ad	c1 f9 04	 sar	 ecx, 4
  000b0	51		 push	 ecx
  000b1	6b 55 b4 0c	 imul	 edx, DWORD PTR tv88[ebp], 12
  000b5	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000bb	50		 push	 eax
  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000c2	51		 push	 ecx
  000c3	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000c8	83 c4 18	 add	 esp, 24			; 00000018H

; 600  : 
; 601  : 		child_pred = NULL;

  000cb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _child_pred$[ebp], 0
$LN2@get_local_:

; 602  : 
; 603  : 		break;
; 604  : 	}
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : }
; 608  : 
; 609  : //
; 610  : // check list integrity
; 611  : //
; 612  : 
; 613  : ASSERT (en != child_pred);

  000d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d5	3b 45 f8	 cmp	 eax, DWORD PTR _child_pred$[ebp]
  000d8	75 1a		 jne	 SHORT $LN8@get_local_
  000da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000df	05 68 01 00 00	 add	 eax, 360		; 00000168H
  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@
  000ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 264  : 	return (child_pred);

  000f4	8b 45 f8	 mov	 eax, DWORD PTR _child_pred$[ebp]

; 265  : }

  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5b		 pop	 ebx
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 08 00	 ret	 8
?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_child_pred
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_pred.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv93 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_child_pred$ = 16					; size = 4
?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC ; set_local_child_pred, COMDAT

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 236  : 	fixed
; 237  : 		*raw;
; 238  : 
; 239  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_pred.h

; 71   : ASSERT (en != child_pred);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _child_pred$[ebp]
  00018	75 1a		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	2d a4 00 00 00	 sub	 eax, 164		; 000000a4H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00034	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00037	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  0003a	83 7d b8 0a	 cmp	 DWORD PTR tv70[ebp], 10	; 0000000aH
  0003e	74 0e		 je	 SHORT $LN5@set_local_
  00040	83 7d b8 12	 cmp	 DWORD PTR tv70[ebp], 18	; 00000012H
  00044	74 16		 je	 SHORT $LN6@set_local_
  00046	83 7d b8 21	 cmp	 DWORD PTR tv70[ebp], 33	; 00000021H
  0004a	74 1e		 je	 SHORT $LN7@set_local_
  0004c	eb 27		 jmp	 SHORT $LN8@set_local_
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_link.child_pred = child_pred;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 91   : 
; 92   : 	case LIST_TYPE_ASSIGNED_TASK:
; 93   : 	{
; 94   : 		raw->task_link.child_pred = child_pred;
; 95   : 
; 96   : 		break;
; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 104  : 
; 105  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 106  : 	{
; 107  : 		raw->campaign_objective_link.child_pred = child_pred;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_CARGO_LINK
; 117  : 
; 118  : 	case LIST_TYPE_CARGO:
; 119  : 	{
; 120  : 		raw->cargo_link.child_pred = child_pred;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 130  : 
; 131  : 	case LIST_TYPE_CITY_BUILDING:
; 132  : 	{
; 133  : 		raw->city_building_link.child_pred = child_pred;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 143  : 
; 144  : 	case LIST_TYPE_COMPLETED_TASK:
; 145  : 	{
; 146  : 		raw->task_link.child_pred = child_pred;
; 147  : 
; 148  : 		break;
; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 156  : 
; 157  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 158  : 	{
; 159  : 		raw->current_waypoint_link.child_pred = child_pred;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 	// Jabbewock 031107 Designated targets
; 169  : 	
; 170  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 171  : 
; 172  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 173  : 	{
; 174  : 		raw->designated_target_link.child_pred = child_pred;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00051	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  00054	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 175  : 
; 176  : 		break;

  00057	e9 91 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 177  : 	}
; 178  : 
; 179  : 	#endif
; 180  : 
; 181  : 	// Jabbewock 031107 ends
; 182  : 	
; 183  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 184  : 
; 185  : 	case LIST_TYPE_DIVISION:
; 186  : 	{
; 187  : 		raw->division_link.child_pred = child_pred;
; 188  : 
; 189  : 		break;
; 190  : 	}
; 191  : 
; 192  : 	#endif
; 193  : 	
; 194  : 	////////////////////////////////////////
; 195  : 
; 196  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 197  : 
; 198  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 199  : 	{
; 200  : 		raw->division_headquarters_link.child_pred = child_pred;
; 201  : 
; 202  : 		break;
; 203  : 	}
; 204  : 
; 205  : 	#endif
; 206  : 
; 207  : 	////////////////////////////////////////
; 208  : 
; 209  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 210  : 
; 211  : 	case LIST_TYPE_FOLLOWER:
; 212  : 	{
; 213  : 		raw->follower_link.child_pred = child_pred;
; 214  : 
; 215  : 		break;
; 216  : 	}
; 217  : 
; 218  : 	#endif
; 219  : 
; 220  : 	////////////////////////////////////////
; 221  : 
; 222  : 	#ifdef LIST_TYPE_FORCE_LINK
; 223  : 
; 224  : 	case LIST_TYPE_FORCE:
; 225  : 	{
; 226  : 		raw->force_link.child_pred = child_pred;
; 227  : 
; 228  : 		break;
; 229  : 	}
; 230  : 
; 231  : 	#endif
; 232  : 
; 233  : 	////////////////////////////////////////
; 234  : 
; 235  : 	#ifdef LIST_TYPE_GROUP_LINK
; 236  : 
; 237  : 	case LIST_TYPE_BUILDING_GROUP:
; 238  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 239  : 	case LIST_TYPE_KEYSITE_GROUP:
; 240  : 	{
; 241  : 		raw->group_link.child_pred = child_pred;
; 242  : 
; 243  : 		break;
; 244  : 	}
; 245  : 
; 246  : 	#endif
; 247  : 
; 248  : 	////////////////////////////////////////
; 249  : 
; 250  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 251  : 
; 252  : 	case LIST_TYPE_GUIDE:
; 253  : 	{
; 254  : 		raw->guide_link.child_pred = child_pred;
; 255  : 
; 256  : 		break;
; 257  : 	}
; 258  : 
; 259  : 	#endif
; 260  : 
; 261  : 	////////////////////////////////////////
; 262  : 
; 263  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 264  : 
; 265  : 	case LIST_TYPE_GUIDE_STACK:
; 266  : 	{
; 267  : 		raw->guide_stack_link.child_pred = child_pred;
; 268  : 
; 269  : 		break;
; 270  : 	}
; 271  : 
; 272  : 	#endif
; 273  : 
; 274  : 	////////////////////////////////////////
; 275  : 
; 276  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 277  : 
; 278  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 279  : 	{
; 280  : 		raw->gunship_target_link.child_pred = child_pred;

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  00062	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 281  : 
; 282  : 		break;

  00065	e9 83 00 00 00	 jmp	 $LN1@set_local_
$LN7@set_local_:

; 283  : 	}
; 284  : 
; 285  : 	#endif
; 286  : 
; 287  : 	////////////////////////////////////////
; 288  : 
; 289  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 290  : 
; 291  : 	case LIST_TYPE_HIERARCHY:
; 292  : 	{
; 293  : 		raw->hierarchy_link.child_pred = child_pred;
; 294  : 
; 295  : 		break;
; 296  : 	}
; 297  : 
; 298  : 	#endif
; 299  : 
; 300  : 	////////////////////////////////////////
; 301  : 
; 302  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 303  : 
; 304  : 	case LIST_TYPE_KEYSITE_FORCE:
; 305  : 	{
; 306  : 		raw->keysite_force_link.child_pred = child_pred;
; 307  : 
; 308  : 		break;
; 309  : 	}
; 310  : 
; 311  : 	#endif
; 312  : 
; 313  : 	////////////////////////////////////////
; 314  : 
; 315  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 316  : 
; 317  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 318  : 	{
; 319  : 		raw->launched_weapon_link.child_pred = child_pred;
; 320  : 
; 321  : 		break;
; 322  : 	}
; 323  : 
; 324  : 	#endif
; 325  : 
; 326  : 	////////////////////////////////////////
; 327  : 
; 328  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 329  : 
; 330  : 	case LIST_TYPE_LANDING_SITE:
; 331  : 	{
; 332  : 		raw->landing_site_link.child_pred = child_pred;
; 333  : 
; 334  : 		break;
; 335  : 	}
; 336  : 
; 337  : 	#endif
; 338  : 
; 339  : 	////////////////////////////////////////
; 340  : 
; 341  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 342  : 
; 343  : 	case LIST_TYPE_MEMBER:
; 344  : 	{
; 345  : 		raw->member_link.child_pred = child_pred;
; 346  : 
; 347  : 		break;
; 348  : 	}
; 349  : 
; 350  : 	#endif
; 351  : 
; 352  : 	////////////////////////////////////////
; 353  : 
; 354  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 355  : 
; 356  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 357  : 	{
; 358  : 		raw->movement_dependent_link.child_pred = child_pred;
; 359  : 
; 360  : 		break;
; 361  : 	}
; 362  : 
; 363  : 	#endif
; 364  : 
; 365  : 	////////////////////////////////////////
; 366  : 
; 367  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 368  : 
; 369  : 	case LIST_TYPE_PADLOCK:
; 370  : 	{
; 371  : 		raw->padlock_link.child_pred = child_pred;
; 372  : 
; 373  : 		break;
; 374  : 	}
; 375  : 
; 376  : 	#endif
; 377  : 
; 378  : 	////////////////////////////////////////
; 379  : 
; 380  : 	#ifdef LIST_TYPE_PILOT_LINK
; 381  : 
; 382  : 	case LIST_TYPE_PILOT:
; 383  : 	{
; 384  : 		raw->pilot_link.child_pred = child_pred;
; 385  : 
; 386  : 		break;
; 387  : 	}
; 388  : 
; 389  : 	#endif
; 390  : 
; 391  : 	////////////////////////////////////////
; 392  : 
; 393  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 394  : 
; 395  : 	case LIST_TYPE_PILOT_LOCK:
; 396  : 	{
; 397  : 		raw->pilot_lock_link.child_pred = child_pred;
; 398  : 
; 399  : 		break;
; 400  : 	}
; 401  : 
; 402  : 	#endif
; 403  : 
; 404  : 	////////////////////////////////////////
; 405  : 
; 406  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 407  : 
; 408  : 	case LIST_TYPE_PLAYER_TASK:
; 409  : 	{
; 410  : 		raw->player_task_link.child_pred = child_pred;
; 411  : 
; 412  : 		break;
; 413  : 	}
; 414  : 
; 415  : 	#endif
; 416  : 
; 417  : 	////////////////////////////////////////
; 418  : 
; 419  : 	#ifdef LIST_TYPE_REGEN_LINK
; 420  : 
; 421  : 	case LIST_TYPE_REGEN:
; 422  : 	{
; 423  : 		raw->regen_link.child_pred = child_pred;
; 424  : 
; 425  : 		break;
; 426  : 	}
; 427  : 
; 428  : 	#endif
; 429  : 
; 430  : 	////////////////////////////////////////
; 431  : 
; 432  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 433  : 
; 434  : 	case LIST_TYPE_AIR_REGISTRY:
; 435  : 	case LIST_TYPE_GROUND_REGISTRY:
; 436  : 	case LIST_TYPE_SEA_REGISTRY:
; 437  : 	{
; 438  : 		raw->registry_link.child_pred = child_pred;
; 439  : 
; 440  : 		break;
; 441  : 	}
; 442  : 
; 443  : 	#endif
; 444  : 
; 445  : 	////////////////////////////////////////
; 446  : 
; 447  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 448  : 
; 449  : 	case LIST_TYPE_SECTOR:
; 450  : 	{
; 451  : 		raw->sector_link.child_pred = child_pred;

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006d	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  00070	89 48 34	 mov	 DWORD PTR [eax+52], ecx

; 452  : 
; 453  : 		break;

  00073	eb 78		 jmp	 SHORT $LN1@set_local_
$LN8@set_local_:

; 454  : 	}
; 455  : 
; 456  : 	#endif
; 457  : 
; 458  : 	////////////////////////////////////////
; 459  : 
; 460  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 461  : 
; 462  : 	case LIST_TYPE_SECTOR_TASK:
; 463  : 	{
; 464  : 		raw->sector_task_link.child_pred = child_pred;
; 465  : 
; 466  : 		break;
; 467  : 	}
; 468  : 
; 469  : 	#endif
; 470  : 
; 471  : 	////////////////////////////////////////
; 472  : 
; 473  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 474  : 
; 475  : 	case LIST_TYPE_SEGMENT:
; 476  : 	{
; 477  : 		raw->segment_link.child_pred = child_pred;
; 478  : 
; 479  : 		break;
; 480  : 	}
; 481  : 
; 482  : 	#endif
; 483  : 
; 484  : 	////////////////////////////////////////
; 485  : 
; 486  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 487  : 
; 488  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 489  : 	{
; 490  : 		raw->special_effect_link.child_pred = child_pred;
; 491  : 
; 492  : 		break;
; 493  : 	}
; 494  : 
; 495  : 	#endif
; 496  : 
; 497  : 	////////////////////////////////////////
; 498  : 
; 499  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 500  : 
; 501  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 502  : 	{
; 503  : 		raw->takeoff_queue_link.child_pred = child_pred;
; 504  : 
; 505  : 		break;
; 506  : 	}
; 507  : 
; 508  : 	#endif
; 509  : 
; 510  : 	////////////////////////////////////////
; 511  : 
; 512  : 	#ifdef LIST_TYPE_TARGET_LINK
; 513  : 
; 514  : 	case LIST_TYPE_TARGET:
; 515  : 	{
; 516  : 		raw->target_link.child_pred = child_pred;
; 517  : 
; 518  : 		break;
; 519  : 	}
; 520  : 
; 521  : 	#endif
; 522  : 
; 523  : 	////////////////////////////////////////
; 524  : 
; 525  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 526  : 
; 527  : 	case LIST_TYPE_TASK_DEPENDENT:
; 528  : 	{
; 529  : 		raw->task_dependent_link.child_pred = child_pred;
; 530  : 
; 531  : 		break;
; 532  : 	}
; 533  : 
; 534  : 	#endif
; 535  : 
; 536  : 	////////////////////////////////////////
; 537  : 
; 538  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 539  : 
; 540  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 541  : 	{
; 542  : 		raw->task_link.child_pred = child_pred;
; 543  : 
; 544  : 		break;
; 545  : 	}
; 546  : 
; 547  : 	#endif
; 548  : 
; 549  : 	////////////////////////////////////////
; 550  : 
; 551  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 552  : 
; 553  : 	case LIST_TYPE_UPDATE:
; 554  : 	{
; 555  : 		raw->update_link.child_pred = child_pred;
; 556  : 
; 557  : 		break;
; 558  : 	}
; 559  : 
; 560  : 	#endif
; 561  : 
; 562  : 	////////////////////////////////////////
; 563  : 
; 564  : 	#ifdef LIST_TYPE_VIEW_LINK
; 565  : 
; 566  : 	case LIST_TYPE_VIEW:
; 567  : 	{
; 568  : 		raw->view_link.child_pred = child_pred;
; 569  : 
; 570  : 		break;
; 571  : 	}
; 572  : 
; 573  : 	#endif
; 574  : 
; 575  : 	////////////////////////////////////////
; 576  : 
; 577  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 578  : 
; 579  : 	case LIST_TYPE_VIEW_WEAPON:
; 580  : 	{
; 581  : 		raw->view_weapon_link.child_pred = child_pred;
; 582  : 
; 583  : 		break;
; 584  : 	}
; 585  : 
; 586  : 	#endif
; 587  : 
; 588  : 	////////////////////////////////////////
; 589  : 
; 590  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 591  : 
; 592  : 	case LIST_TYPE_WAYPOINT:
; 593  : 	{
; 594  : 		raw->waypoint_link.child_pred = child_pred;
; 595  : 
; 596  : 		break;
; 597  : 	}
; 598  : 
; 599  : 	#endif
; 600  : 
; 601  : 	////////////////////////////////////////
; 602  : 
; 603  : 	default:
; 604  : 	{
; 605  : 		debug_fatal_invalid_list_type (en, type);

  00075	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00079	74 0a		 je	 SHORT $LN10@set_local_
  0007b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	89 4d b8	 mov	 DWORD PTR tv93[ebp], ecx
  00083	eb 24		 jmp	 SHORT $LN11@set_local_
$LN10@set_local_:
  00085	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0008b	81 c2 72 01 00
	00		 add	 edx, 370		; 00000172H
  00091	52		 push	 edx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a2	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN11@set_local_:
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000af	81 c1 72 01 00
	00		 add	 ecx, 370		; 00000172H
  000b5	51		 push	 ecx
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bb	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000be	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000c5	50		 push	 eax
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000c9	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000cf	c1 f9 04	 sar	 ecx, 4
  000d2	51		 push	 ecx
  000d3	6b 55 b8 0c	 imul	 edx, DWORD PTR tv93[ebp], 12
  000d7	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000dd	50		 push	 eax
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000ea	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 242  : }

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 0c 00	 ret	 12			; 0000000cH
?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP ; set_local_child_pred
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_succ.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv88 = -76						; size = 4
tv65 = -76						; size = 4
_child_succ$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_child_succ, COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 213  : 	fixed
; 214  : 		*raw;
; 215  : 
; 216  : 	entity
; 217  : 		*child_succ;
; 218  : 
; 219  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_succ.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	83 7d b4 0a	 cmp	 DWORD PTR tv65[ebp], 10	; 0000000aH
  0001c	74 0e		 je	 SHORT $LN4@get_local_
  0001e	83 7d b4 12	 cmp	 DWORD PTR tv65[ebp], 18	; 00000012H
  00022	74 16		 je	 SHORT $LN5@get_local_
  00024	83 7d b4 21	 cmp	 DWORD PTR tv65[ebp], 33	; 00000021H
  00028	74 1e		 je	 SHORT $LN6@get_local_
  0002a	eb 27		 jmp	 SHORT $LN7@get_local_
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		child_succ = raw->aircrew_link.child_succ;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 85   : 
; 86   : 	case LIST_TYPE_ASSIGNED_TASK:
; 87   : 	{
; 88   : 		child_succ = raw->task_link.child_succ;
; 89   : 
; 90   : 		break;
; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 98   : 
; 99   : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 100  : 	{
; 101  : 		child_succ = raw->campaign_objective_link.child_succ;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_CARGO_LINK
; 111  : 
; 112  : 	case LIST_TYPE_CARGO:
; 113  : 	{
; 114  : 		child_succ = raw->cargo_link.child_succ;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 124  : 
; 125  : 	case LIST_TYPE_CITY_BUILDING:
; 126  : 	{
; 127  : 		child_succ = raw->city_building_link.child_succ;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 137  : 
; 138  : 	case LIST_TYPE_COMPLETED_TASK:
; 139  : 	{
; 140  : 		child_succ = raw->task_link.child_succ;
; 141  : 
; 142  : 		break;
; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 150  : 
; 151  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 152  : 	{
; 153  : 		child_succ = raw->current_waypoint_link.child_succ;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	// Jabbewock 031107 Designated targets
; 163  : 		
; 164  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 165  : 
; 166  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 167  : 	{
; 168  : 		child_succ = raw->designated_target_link.child_succ;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00032	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 169  : 
; 170  : 		break;

  00035	e9 98 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 171  : 	}
; 172  : 
; 173  : 	#endif
; 174  : 
; 175  : 	// Jabbewock 031107 ends
; 176  : 	
; 177  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 178  : 
; 179  : 	case LIST_TYPE_DIVISION:
; 180  : 	{
; 181  : 		child_succ = raw->division_link.child_succ;
; 182  : 
; 183  : 		break;
; 184  : 	}
; 185  : 
; 186  : 	#endif
; 187  : 
; 188  : 	////////////////////////////////////////
; 189  : 
; 190  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 191  : 
; 192  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 193  : 	{
; 194  : 		child_succ = raw->division_headquarters_link.child_succ;
; 195  : 
; 196  : 		break;
; 197  : 	}
; 198  : 
; 199  : 	#endif
; 200  : 
; 201  : 	////////////////////////////////////////
; 202  : 
; 203  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 204  : 
; 205  : 	case LIST_TYPE_FOLLOWER:
; 206  : 	{
; 207  : 		child_succ = raw->follower_link.child_succ;
; 208  : 
; 209  : 		break;
; 210  : 	}
; 211  : 
; 212  : 	#endif
; 213  : 
; 214  : 	////////////////////////////////////////
; 215  : 
; 216  : 	#ifdef LIST_TYPE_FORCE_LINK
; 217  : 
; 218  : 	case LIST_TYPE_FORCE:
; 219  : 	{
; 220  : 		child_succ = raw->force_link.child_succ;
; 221  : 
; 222  : 		break;
; 223  : 	}
; 224  : 
; 225  : 	#endif
; 226  : 
; 227  : 	////////////////////////////////////////
; 228  : 
; 229  : 	#ifdef LIST_TYPE_GROUP_LINK
; 230  : 
; 231  : 	case LIST_TYPE_BUILDING_GROUP:
; 232  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 233  : 	case LIST_TYPE_KEYSITE_GROUP:
; 234  : 	{
; 235  : 		child_succ = raw->group_link.child_succ;
; 236  : 
; 237  : 		break;
; 238  : 	}
; 239  : 
; 240  : 	#endif
; 241  : 
; 242  : 	////////////////////////////////////////
; 243  : 
; 244  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 245  : 
; 246  : 	case LIST_TYPE_GUIDE:
; 247  : 	{
; 248  : 		child_succ = raw->guide_link.child_succ;
; 249  : 
; 250  : 		break;
; 251  : 	}
; 252  : 
; 253  : 	#endif
; 254  : 
; 255  : 	////////////////////////////////////////
; 256  : 
; 257  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 258  : 
; 259  : 	case LIST_TYPE_GUIDE_STACK:
; 260  : 	{
; 261  : 		child_succ = raw->guide_stack_link.child_succ;
; 262  : 
; 263  : 		break;
; 264  : 	}
; 265  : 
; 266  : 	#endif
; 267  : 
; 268  : 	////////////////////////////////////////
; 269  : 
; 270  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 271  : 
; 272  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 273  : 	{
; 274  : 		child_succ = raw->gunship_target_link.child_succ;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00040	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 275  : 
; 276  : 		break;

  00043	e9 8a 00 00 00	 jmp	 $LN2@get_local_
$LN6@get_local_:

; 277  : 	}
; 278  : 
; 279  : 	#endif
; 280  : 
; 281  : 	////////////////////////////////////////
; 282  : 
; 283  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 284  : 
; 285  : 	case LIST_TYPE_HIERARCHY:
; 286  : 	{
; 287  : 		child_succ = raw->hierarchy_link.child_succ;
; 288  : 
; 289  : 		break;
; 290  : 	}
; 291  : 
; 292  : 	#endif
; 293  : 	
; 294  : 	////////////////////////////////////////
; 295  : 
; 296  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 297  : 
; 298  : 	case LIST_TYPE_KEYSITE_FORCE:
; 299  : 	{
; 300  : 		child_succ = raw->keysite_force_link.child_succ;
; 301  : 
; 302  : 		break;
; 303  : 	}
; 304  : 
; 305  : 	#endif
; 306  : 
; 307  : 	////////////////////////////////////////
; 308  : 
; 309  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 310  : 
; 311  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 312  : 	{
; 313  : 		child_succ = raw->launched_weapon_link.child_succ;
; 314  : 
; 315  : 		break;
; 316  : 	}
; 317  : 
; 318  : 	#endif
; 319  : 
; 320  : 	////////////////////////////////////////
; 321  : 
; 322  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 323  : 
; 324  : 	case LIST_TYPE_LANDING_SITE:
; 325  : 	{
; 326  : 		child_succ = raw->landing_site_link.child_succ;
; 327  : 
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	#endif
; 332  : 
; 333  : 	////////////////////////////////////////
; 334  : 
; 335  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 336  : 
; 337  : 	case LIST_TYPE_MEMBER:
; 338  : 	{
; 339  : 		child_succ = raw->member_link.child_succ;
; 340  : 
; 341  : 		break;
; 342  : 	}
; 343  : 
; 344  : 	#endif
; 345  : 
; 346  : 	////////////////////////////////////////
; 347  : 
; 348  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 349  : 
; 350  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 351  : 	{
; 352  : 		child_succ = raw->movement_dependent_link.child_succ;
; 353  : 
; 354  : 		break;
; 355  : 	}
; 356  : 
; 357  : 	#endif
; 358  : 
; 359  : 	////////////////////////////////////////
; 360  : 
; 361  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 362  : 
; 363  : 	case LIST_TYPE_PADLOCK:
; 364  : 	{
; 365  : 		child_succ = raw->padlock_link.child_succ;
; 366  : 
; 367  : 		break;
; 368  : 	}
; 369  : 
; 370  : 	#endif
; 371  : 
; 372  : 	////////////////////////////////////////
; 373  : 
; 374  : 	#ifdef LIST_TYPE_PILOT_LINK
; 375  : 
; 376  : 	case LIST_TYPE_PILOT:
; 377  : 	{
; 378  : 		child_succ = raw->pilot_link.child_succ;
; 379  : 
; 380  : 		break;
; 381  : 	}
; 382  : 
; 383  : 	#endif
; 384  : 
; 385  : 	////////////////////////////////////////
; 386  : 
; 387  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 388  : 
; 389  : 	case LIST_TYPE_PILOT_LOCK:
; 390  : 	{
; 391  : 		child_succ = raw->pilot_lock_link.child_succ;
; 392  : 
; 393  : 		break;
; 394  : 	}
; 395  : 
; 396  : 	#endif
; 397  : 
; 398  : 	////////////////////////////////////////
; 399  : 
; 400  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 401  : 
; 402  : 	case LIST_TYPE_PLAYER_TASK:
; 403  : 	{
; 404  : 		child_succ = raw->player_task_link.child_succ;
; 405  : 
; 406  : 		break;
; 407  : 	}
; 408  : 
; 409  : 	#endif
; 410  : 
; 411  : 	////////////////////////////////////////
; 412  : 
; 413  : 	#ifdef LIST_TYPE_REGEN_LINK
; 414  : 
; 415  : 	case LIST_TYPE_REGEN:
; 416  : 	{
; 417  : 		child_succ = raw->regen_link.child_succ;
; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : 
; 422  : 	#endif
; 423  : 
; 424  : 	////////////////////////////////////////
; 425  : 
; 426  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 427  : 
; 428  : 	case LIST_TYPE_AIR_REGISTRY:
; 429  : 	case LIST_TYPE_GROUND_REGISTRY:
; 430  : 	case LIST_TYPE_SEA_REGISTRY:
; 431  : 	{
; 432  : 		child_succ = raw->registry_link.child_succ;
; 433  : 
; 434  : 		break;
; 435  : 	}
; 436  : 
; 437  : 	#endif
; 438  : 
; 439  : 	////////////////////////////////////////
; 440  : 
; 441  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 442  : 
; 443  : 	case LIST_TYPE_SECTOR:
; 444  : 	{
; 445  : 		child_succ = raw->sector_link.child_succ;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0004e	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 446  : 
; 447  : 		break;

  00051	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN7@get_local_:

; 448  : 	}
; 449  : 
; 450  : 	#endif
; 451  : 
; 452  : 	////////////////////////////////////////
; 453  : 
; 454  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 455  : 
; 456  : 	case LIST_TYPE_SECTOR_TASK:
; 457  : 	{
; 458  : 		child_succ = raw->sector_task_link.child_succ;
; 459  : 
; 460  : 		break;
; 461  : 	}
; 462  : 
; 463  : 	#endif
; 464  : 
; 465  : 	////////////////////////////////////////
; 466  : 
; 467  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 468  : 
; 469  : 	case LIST_TYPE_SEGMENT:
; 470  : 	{
; 471  : 		child_succ = raw->segment_link.child_succ;
; 472  : 
; 473  : 		break;
; 474  : 	}
; 475  : 
; 476  : 	#endif
; 477  : 
; 478  : 	////////////////////////////////////////
; 479  : 
; 480  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 481  : 
; 482  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 483  : 	{
; 484  : 		child_succ = raw->special_effect_link.child_succ;
; 485  : 
; 486  : 		break;
; 487  : 	}
; 488  : 
; 489  : 	#endif
; 490  : 
; 491  : 	////////////////////////////////////////
; 492  : 
; 493  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 494  : 
; 495  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 496  : 	{
; 497  : 		child_succ = raw->takeoff_queue_link.child_succ;
; 498  : 
; 499  : 		break;
; 500  : 	}
; 501  : 
; 502  : 	#endif
; 503  : 
; 504  : 	////////////////////////////////////////
; 505  : 
; 506  : 	#ifdef LIST_TYPE_TARGET_LINK
; 507  : 
; 508  : 	case LIST_TYPE_TARGET:
; 509  : 	{
; 510  : 		child_succ = raw->target_link.child_succ;
; 511  : 
; 512  : 		break;
; 513  : 	}
; 514  : 
; 515  : 	#endif
; 516  : 
; 517  : 	////////////////////////////////////////
; 518  : 
; 519  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 520  : 
; 521  : 	case LIST_TYPE_TASK_DEPENDENT:
; 522  : 	{
; 523  : 		child_succ = raw->task_dependent_link.child_succ;
; 524  : 
; 525  : 		break;
; 526  : 	}
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	////////////////////////////////////////
; 531  : 
; 532  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 533  : 
; 534  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 535  : 	{
; 536  : 		child_succ = raw->task_link.child_succ;
; 537  : 
; 538  : 		break;
; 539  : 	}
; 540  : 
; 541  : 	#endif
; 542  : 
; 543  : 	////////////////////////////////////////
; 544  : 
; 545  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 546  : 
; 547  : 	case LIST_TYPE_UPDATE:
; 548  : 	{
; 549  : 		child_succ = raw->update_link.child_succ;
; 550  : 
; 551  : 		break;
; 552  : 	}
; 553  : 
; 554  : 	#endif
; 555  : 
; 556  : 	////////////////////////////////////////
; 557  : 
; 558  : 	#ifdef LIST_TYPE_VIEW_LINK
; 559  : 
; 560  : 	case LIST_TYPE_VIEW:
; 561  : 	{
; 562  : 		child_succ = raw->view_link.child_succ;
; 563  : 
; 564  : 		break;
; 565  : 	}
; 566  : 
; 567  : 	#endif
; 568  : 
; 569  : 	////////////////////////////////////////
; 570  : 
; 571  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 572  : 
; 573  : 	case LIST_TYPE_VIEW_WEAPON:
; 574  : 	{
; 575  : 		child_succ = raw->view_weapon_link.child_succ;
; 576  : 
; 577  : 		break;
; 578  : 	}
; 579  : 
; 580  : 	#endif
; 581  : 
; 582  : 	////////////////////////////////////////
; 583  : 
; 584  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 585  : 
; 586  : 	case LIST_TYPE_WAYPOINT:
; 587  : 	{
; 588  : 		child_succ = raw->waypoint_link.child_succ;
; 589  : 
; 590  : 		break;
; 591  : 	}
; 592  : 
; 593  : 	#endif
; 594  : 
; 595  : 	////////////////////////////////////////
; 596  : 
; 597  : 	default:
; 598  : 	{
; 599  : 		debug_fatal_invalid_list_type (en, type);

  00053	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00057	74 0a		 je	 SHORT $LN10@get_local_
  00059	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d b4	 mov	 DWORD PTR tv88[ebp], ecx
  00061	eb 24		 jmp	 SHORT $LN11@get_local_
$LN10@get_local_:
  00063	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00069	81 c2 83 01 00
	00		 add	 edx, 387		; 00000183H
  0006f	52		 push	 edx
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00080	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN11@get_local_:
  00087	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  0008d	81 c1 83 01 00
	00		 add	 ecx, 387		; 00000183H
  00093	51		 push	 ecx
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00099	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  0009c	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000a3	50		 push	 eax
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a7	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000ad	c1 f9 04	 sar	 ecx, 4
  000b0	51		 push	 ecx
  000b1	6b 55 b4 0c	 imul	 edx, DWORD PTR tv88[ebp], 12
  000b5	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000bb	50		 push	 eax
  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000c2	51		 push	 ecx
  000c3	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000c8	83 c4 18	 add	 esp, 24			; 00000018H

; 600  : 
; 601  : 		child_succ = NULL;

  000cb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _child_succ$[ebp], 0
$LN2@get_local_:

; 602  : 
; 603  : 		break;
; 604  : 	}
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : }
; 608  : 
; 609  : //
; 610  : // check list integrity
; 611  : //
; 612  : 
; 613  : ASSERT (en != child_succ);

  000d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d5	3b 45 f8	 cmp	 eax, DWORD PTR _child_succ$[ebp]
  000d8	75 1a		 jne	 SHORT $LN8@get_local_
  000da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000df	05 91 01 00 00	 add	 eax, 401		; 00000191H
  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@
  000ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 223  : 	return (child_succ);

  000f4	8b 45 f8	 mov	 eax, DWORD PTR _child_succ$[ebp]

; 224  : }

  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5b		 pop	 ebx
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 08 00	 ret	 8
?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_child_succ
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_succ.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv93 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_child_succ$ = 16					; size = 4
?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC ; set_local_child_succ, COMDAT

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 195  : 	fixed
; 196  : 		*raw;
; 197  : 
; 198  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_succ.h

; 71   : ASSERT (en != child_succ);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _child_succ$[ebp]
  00018	75 18		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	83 e8 7b	 sub	 eax, 123		; 0000007bH
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@
  0002d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00032	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00035	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00038	83 7d b8 0a	 cmp	 DWORD PTR tv70[ebp], 10	; 0000000aH
  0003c	74 0e		 je	 SHORT $LN5@set_local_
  0003e	83 7d b8 12	 cmp	 DWORD PTR tv70[ebp], 18	; 00000012H
  00042	74 16		 je	 SHORT $LN6@set_local_
  00044	83 7d b8 21	 cmp	 DWORD PTR tv70[ebp], 33	; 00000021H
  00048	74 1e		 je	 SHORT $LN7@set_local_
  0004a	eb 27		 jmp	 SHORT $LN8@set_local_
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_link.child_succ = child_succ;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 91   : 
; 92   : 	case LIST_TYPE_ASSIGNED_TASK:
; 93   : 	{
; 94   : 		raw->task_link.child_succ = child_succ;
; 95   : 
; 96   : 		break;
; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 104  : 
; 105  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 106  : 	{
; 107  : 		raw->campaign_objective_link.child_succ = child_succ;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_CARGO_LINK
; 117  : 
; 118  : 	case LIST_TYPE_CARGO:
; 119  : 	{
; 120  : 		raw->cargo_link.child_succ = child_succ;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 130  : 
; 131  : 	case LIST_TYPE_CITY_BUILDING:
; 132  : 	{
; 133  : 		raw->city_building_link.child_succ = child_succ;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 143  : 
; 144  : 	case LIST_TYPE_COMPLETED_TASK:
; 145  : 	{
; 146  : 		raw->task_link.child_succ = child_succ;
; 147  : 
; 148  : 		break;
; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 156  : 
; 157  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 158  : 	{
; 159  : 		raw->current_waypoint_link.child_succ = child_succ;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 
; 169  : 	// Jabbewock 031107 Designated targets
; 170  : 		
; 171  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 172  : 
; 173  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 174  : 	{
; 175  : 		raw->designated_target_link.child_succ = child_succ;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004f	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  00052	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 176  : 
; 177  : 		break;

  00055	e9 91 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 178  : 	}
; 179  : 
; 180  : 	#endif
; 181  : 
; 182  : 	// Jabbewock 031107 ends
; 183  : 
; 184  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 185  : 
; 186  : 	case LIST_TYPE_DIVISION:
; 187  : 	{
; 188  : 		raw->division_link.child_succ = child_succ;
; 189  : 
; 190  : 		break;
; 191  : 	}
; 192  : 
; 193  : 	#endif
; 194  : 
; 195  : 	////////////////////////////////////////
; 196  : 
; 197  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 198  : 
; 199  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 200  : 	{
; 201  : 		raw->division_headquarters_link.child_succ = child_succ;
; 202  : 
; 203  : 		break;
; 204  : 	}
; 205  : 
; 206  : 	#endif
; 207  : 
; 208  : 	////////////////////////////////////////
; 209  : 
; 210  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 211  : 
; 212  : 	case LIST_TYPE_FOLLOWER:
; 213  : 	{
; 214  : 		raw->follower_link.child_succ = child_succ;
; 215  : 
; 216  : 		break;
; 217  : 	}
; 218  : 
; 219  : 	#endif
; 220  : 
; 221  : 	////////////////////////////////////////
; 222  : 
; 223  : 	#ifdef LIST_TYPE_FORCE_LINK
; 224  : 
; 225  : 	case LIST_TYPE_FORCE:
; 226  : 	{
; 227  : 		raw->force_link.child_succ = child_succ;
; 228  : 
; 229  : 		break;
; 230  : 	}
; 231  : 
; 232  : 	#endif
; 233  : 
; 234  : 	////////////////////////////////////////
; 235  : 
; 236  : 	#ifdef LIST_TYPE_GROUP_LINK
; 237  : 
; 238  : 	case LIST_TYPE_BUILDING_GROUP:
; 239  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 240  : 	case LIST_TYPE_KEYSITE_GROUP:
; 241  : 	{
; 242  : 		raw->group_link.child_succ = child_succ;
; 243  : 
; 244  : 		break;
; 245  : 	}
; 246  : 
; 247  : 	#endif
; 248  : 
; 249  : 	////////////////////////////////////////
; 250  : 
; 251  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 252  : 
; 253  : 	case LIST_TYPE_GUIDE:
; 254  : 	{
; 255  : 		raw->guide_link.child_succ = child_succ;
; 256  : 
; 257  : 		break;
; 258  : 	}
; 259  : 
; 260  : 	#endif
; 261  : 
; 262  : 	////////////////////////////////////////
; 263  : 
; 264  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 265  : 
; 266  : 	case LIST_TYPE_GUIDE_STACK:
; 267  : 	{
; 268  : 		raw->guide_stack_link.child_succ = child_succ;
; 269  : 
; 270  : 		break;
; 271  : 	}
; 272  : 
; 273  : 	#endif
; 274  : 
; 275  : 	////////////////////////////////////////
; 276  : 
; 277  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 278  : 
; 279  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 280  : 	{
; 281  : 		raw->gunship_target_link.child_succ = child_succ;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005d	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  00060	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 282  : 
; 283  : 		break;

  00063	e9 83 00 00 00	 jmp	 $LN1@set_local_
$LN7@set_local_:

; 284  : 	}
; 285  : 
; 286  : 	#endif
; 287  : 
; 288  : 	////////////////////////////////////////
; 289  : 
; 290  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 291  : 
; 292  : 	case LIST_TYPE_HIERARCHY:
; 293  : 	{
; 294  : 		raw->hierarchy_link.child_succ = child_succ;
; 295  : 
; 296  : 		break;
; 297  : 	}
; 298  : 
; 299  : 	#endif
; 300  : 
; 301  : 	////////////////////////////////////////
; 302  : 
; 303  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 304  : 
; 305  : 	case LIST_TYPE_KEYSITE_FORCE:
; 306  : 	{
; 307  : 		raw->keysite_force_link.child_succ = child_succ;
; 308  : 
; 309  : 		break;
; 310  : 	}
; 311  : 
; 312  : 	#endif
; 313  : 
; 314  : 	////////////////////////////////////////
; 315  : 
; 316  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 317  : 
; 318  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 319  : 	{
; 320  : 		raw->launched_weapon_link.child_succ = child_succ;
; 321  : 
; 322  : 		break;
; 323  : 	}
; 324  : 
; 325  : 	#endif
; 326  : 
; 327  : 	////////////////////////////////////////
; 328  : 
; 329  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 330  : 
; 331  : 	case LIST_TYPE_LANDING_SITE:
; 332  : 	{
; 333  : 		raw->landing_site_link.child_succ = child_succ;
; 334  : 
; 335  : 		break;
; 336  : 	}
; 337  : 
; 338  : 	#endif
; 339  : 
; 340  : 	////////////////////////////////////////
; 341  : 
; 342  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 343  : 
; 344  : 	case LIST_TYPE_MEMBER:
; 345  : 	{
; 346  : 		raw->member_link.child_succ = child_succ;
; 347  : 
; 348  : 		break;
; 349  : 	}
; 350  : 
; 351  : 	#endif
; 352  : 
; 353  : 	////////////////////////////////////////
; 354  : 
; 355  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 356  : 
; 357  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 358  : 	{
; 359  : 		raw->movement_dependent_link.child_succ = child_succ;
; 360  : 
; 361  : 		break;
; 362  : 	}
; 363  : 
; 364  : 	#endif
; 365  : 
; 366  : 	////////////////////////////////////////
; 367  : 
; 368  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 369  : 
; 370  : 	case LIST_TYPE_PADLOCK:
; 371  : 	{
; 372  : 		raw->padlock_link.child_succ = child_succ;
; 373  : 
; 374  : 		break;
; 375  : 	}
; 376  : 
; 377  : 	#endif
; 378  : 
; 379  : 	////////////////////////////////////////
; 380  : 
; 381  : 	#ifdef LIST_TYPE_PILOT_LINK
; 382  : 
; 383  : 	case LIST_TYPE_PILOT:
; 384  : 	{
; 385  : 		raw->pilot_link.child_succ = child_succ;
; 386  : 
; 387  : 		break;
; 388  : 	}
; 389  : 
; 390  : 	#endif
; 391  : 
; 392  : 	////////////////////////////////////////
; 393  : 
; 394  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 395  : 
; 396  : 	case LIST_TYPE_PILOT_LOCK:
; 397  : 	{
; 398  : 		raw->pilot_lock_link.child_succ = child_succ;
; 399  : 
; 400  : 		break;
; 401  : 	}
; 402  : 
; 403  : 	#endif
; 404  : 
; 405  : 	////////////////////////////////////////
; 406  : 
; 407  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 408  : 
; 409  : 	case LIST_TYPE_PLAYER_TASK:
; 410  : 	{
; 411  : 		raw->player_task_link.child_succ = child_succ;
; 412  : 
; 413  : 		break;
; 414  : 	}
; 415  : 
; 416  : 	#endif
; 417  : 
; 418  : 	////////////////////////////////////////
; 419  : 
; 420  : 	#ifdef LIST_TYPE_REGEN_LINK
; 421  : 
; 422  : 	case LIST_TYPE_REGEN:
; 423  : 	{
; 424  : 		raw->regen_link.child_succ = child_succ;
; 425  : 
; 426  : 		break;
; 427  : 	}
; 428  : 
; 429  : 	#endif
; 430  : 
; 431  : 	////////////////////////////////////////
; 432  : 
; 433  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 434  : 
; 435  : 	case LIST_TYPE_AIR_REGISTRY:
; 436  : 	case LIST_TYPE_GROUND_REGISTRY:
; 437  : 	case LIST_TYPE_SEA_REGISTRY:
; 438  : 	{
; 439  : 		raw->registry_link.child_succ = child_succ;
; 440  : 
; 441  : 		break;
; 442  : 	}
; 443  : 
; 444  : 	#endif
; 445  : 
; 446  : 	////////////////////////////////////////
; 447  : 
; 448  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 449  : 
; 450  : 	case LIST_TYPE_SECTOR:
; 451  : 	{
; 452  : 		raw->sector_link.child_succ = child_succ;

  00068	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006b	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  0006e	89 48 30	 mov	 DWORD PTR [eax+48], ecx

; 453  : 
; 454  : 		break;

  00071	eb 78		 jmp	 SHORT $LN1@set_local_
$LN8@set_local_:

; 455  : 	}
; 456  : 
; 457  : 	#endif
; 458  : 
; 459  : 	////////////////////////////////////////
; 460  : 
; 461  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 462  : 
; 463  : 	case LIST_TYPE_SECTOR_TASK:
; 464  : 	{
; 465  : 		raw->sector_task_link.child_succ = child_succ;
; 466  : 
; 467  : 		break;
; 468  : 	}
; 469  : 
; 470  : 	#endif
; 471  : 
; 472  : 	////////////////////////////////////////
; 473  : 
; 474  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 475  : 
; 476  : 	case LIST_TYPE_SEGMENT:
; 477  : 	{
; 478  : 		raw->segment_link.child_succ = child_succ;
; 479  : 
; 480  : 		break;
; 481  : 	}
; 482  : 
; 483  : 	#endif
; 484  : 
; 485  : 	////////////////////////////////////////
; 486  : 
; 487  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 488  : 
; 489  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 490  : 	{
; 491  : 		raw->special_effect_link.child_succ = child_succ;
; 492  : 
; 493  : 		break;
; 494  : 	}
; 495  : 
; 496  : 	#endif
; 497  : 
; 498  : 	////////////////////////////////////////
; 499  : 
; 500  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 501  : 
; 502  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 503  : 	{
; 504  : 		raw->takeoff_queue_link.child_succ = child_succ;
; 505  : 
; 506  : 		break;
; 507  : 	}
; 508  : 
; 509  : 	#endif
; 510  : 
; 511  : 	////////////////////////////////////////
; 512  : 
; 513  : 	#ifdef LIST_TYPE_TARGET_LINK
; 514  : 
; 515  : 	case LIST_TYPE_TARGET:
; 516  : 	{
; 517  : 		raw->target_link.child_succ = child_succ;
; 518  : 
; 519  : 		break;
; 520  : 	}
; 521  : 
; 522  : 	#endif
; 523  : 
; 524  : 	////////////////////////////////////////
; 525  : 
; 526  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 527  : 
; 528  : 	case LIST_TYPE_TASK_DEPENDENT:
; 529  : 	{
; 530  : 		raw->task_dependent_link.child_succ = child_succ;
; 531  : 
; 532  : 		break;
; 533  : 	}
; 534  : 
; 535  : 	#endif
; 536  : 
; 537  : 	////////////////////////////////////////
; 538  : 
; 539  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 540  : 
; 541  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 542  : 	{
; 543  : 		raw->task_link.child_succ = child_succ;
; 544  : 
; 545  : 		break;
; 546  : 	}
; 547  : 
; 548  : 	#endif
; 549  : 
; 550  : 	////////////////////////////////////////
; 551  : 
; 552  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 553  : 
; 554  : 	case LIST_TYPE_UPDATE:
; 555  : 	{
; 556  : 		raw->update_link.child_succ = child_succ;
; 557  : 
; 558  : 		break;
; 559  : 	}
; 560  : 
; 561  : 	#endif
; 562  : 
; 563  : 	////////////////////////////////////////
; 564  : 
; 565  : 	#ifdef LIST_TYPE_VIEW_LINK
; 566  : 
; 567  : 	case LIST_TYPE_VIEW:
; 568  : 	{
; 569  : 		raw->view_link.child_succ = child_succ;
; 570  : 
; 571  : 		break;
; 572  : 	}
; 573  : 
; 574  : 	#endif
; 575  : 
; 576  : 	////////////////////////////////////////
; 577  : 
; 578  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 579  : 
; 580  : 	case LIST_TYPE_VIEW_WEAPON:
; 581  : 	{
; 582  : 		raw->view_weapon_link.child_succ = child_succ;
; 583  : 
; 584  : 		break;
; 585  : 	}
; 586  : 
; 587  : 	#endif
; 588  : 
; 589  : 	////////////////////////////////////////
; 590  : 
; 591  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 592  : 
; 593  : 	case LIST_TYPE_WAYPOINT:
; 594  : 	{
; 595  : 		raw->waypoint_link.child_succ = child_succ;
; 596  : 
; 597  : 		break;
; 598  : 	}
; 599  : 
; 600  : 	#endif
; 601  : 
; 602  : 	////////////////////////////////////////
; 603  : 
; 604  : 	default:
; 605  : 	{
; 606  : 		debug_fatal_invalid_list_type (en, type);

  00073	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00077	74 0a		 je	 SHORT $LN10@set_local_
  00079	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007e	89 4d b8	 mov	 DWORD PTR tv93[ebp], ecx
  00081	eb 24		 jmp	 SHORT $LN11@set_local_
$LN10@set_local_:
  00083	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  00089	81 c2 9c 01 00
	00		 add	 edx, 412		; 0000019cH
  0008f	52		 push	 edx
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN11@set_local_:
  000a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000ad	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  000b3	51		 push	 ecx
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b9	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000bc	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000c3	50		 push	 eax
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000c7	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000cd	c1 f9 04	 sar	 ecx, 4
  000d0	51		 push	 ecx
  000d1	6b 55 b8 0c	 imul	 edx, DWORD PTR tv93[ebp], 12
  000d5	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000db	50		 push	 eax
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e8	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 201  : }

  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 0c 00	 ret	 12			; 0000000cH
?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP ; set_local_child_succ
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_prnt.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv88 = -76						; size = 4
tv65 = -76						; size = 4
_parent$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_parent, COMDAT

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 172  : 	fixed
; 173  : 		*raw;
; 174  : 
; 175  : 	entity
; 176  : 		*parent;
; 177  : 
; 178  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_prnt.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	83 7d b4 0a	 cmp	 DWORD PTR tv65[ebp], 10	; 0000000aH
  0001c	74 0e		 je	 SHORT $LN4@get_local_
  0001e	83 7d b4 12	 cmp	 DWORD PTR tv65[ebp], 18	; 00000012H
  00022	74 16		 je	 SHORT $LN5@get_local_
  00024	83 7d b4 21	 cmp	 DWORD PTR tv65[ebp], 33	; 00000021H
  00028	74 1e		 je	 SHORT $LN6@get_local_
  0002a	eb 27		 jmp	 SHORT $LN7@get_local_
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		parent = raw->aircrew_link.parent;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 85   : 
; 86   : 	case LIST_TYPE_ASSIGNED_TASK:
; 87   : 	{
; 88   : 		parent = raw->task_link.parent;
; 89   : 
; 90   : 		break;
; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 98   : 
; 99   : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 100  : 	{
; 101  : 		parent = raw->campaign_objective_link.parent;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_CARGO_LINK
; 111  : 
; 112  : 	case LIST_TYPE_CARGO:
; 113  : 	{
; 114  : 		parent = raw->cargo_link.parent;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 124  : 
; 125  : 	case LIST_TYPE_CITY_BUILDING:
; 126  : 	{
; 127  : 		parent = raw->city_building_link.parent;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 137  : 
; 138  : 	case LIST_TYPE_COMPLETED_TASK:
; 139  : 	{
; 140  : 		parent = raw->task_link.parent;
; 141  : 
; 142  : 		break;
; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 150  : 
; 151  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 152  : 	{
; 153  : 		parent = raw->current_waypoint_link.parent;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	// Jabbewock 031107 Designated targets
; 163  : 	
; 164  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 165  : 
; 166  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 167  : 	{
; 168  : 		parent = raw->designated_target_link.parent;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00032	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 169  : 
; 170  : 		break;

  00035	e9 98 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 171  : 	}
; 172  : 
; 173  : 	#endif
; 174  : 
; 175  : 	// Jabbewock 031107 ends
; 176  : 
; 177  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 178  : 
; 179  : 	case LIST_TYPE_DIVISION:
; 180  : 	{
; 181  : 		parent = raw->division_link.parent;
; 182  : 
; 183  : 		break;
; 184  : 	}
; 185  : 
; 186  : 	#endif
; 187  : 	
; 188  : 	////////////////////////////////////////
; 189  : 
; 190  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 191  : 
; 192  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 193  : 	{
; 194  : 		parent = raw->division_headquarters_link.parent;
; 195  : 
; 196  : 		break;
; 197  : 	}
; 198  : 
; 199  : 	#endif
; 200  : 
; 201  : 	////////////////////////////////////////
; 202  : 
; 203  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 204  : 
; 205  : 	case LIST_TYPE_FOLLOWER:
; 206  : 	{
; 207  : 		parent = raw->follower_link.parent;
; 208  : 
; 209  : 		break;
; 210  : 	}
; 211  : 
; 212  : 	#endif
; 213  : 
; 214  : 	////////////////////////////////////////
; 215  : 
; 216  : 	#ifdef LIST_TYPE_FORCE_LINK
; 217  : 
; 218  : 	case LIST_TYPE_FORCE:
; 219  : 	{
; 220  : 		parent = raw->force_link.parent;
; 221  : 
; 222  : 		break;
; 223  : 	}
; 224  : 
; 225  : 	#endif
; 226  : 
; 227  : 	////////////////////////////////////////
; 228  : 
; 229  : 	#ifdef LIST_TYPE_GROUP_LINK
; 230  : 
; 231  : 	case LIST_TYPE_BUILDING_GROUP:
; 232  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 233  : 	case LIST_TYPE_KEYSITE_GROUP:
; 234  : 	{
; 235  : 		parent = raw->group_link.parent;
; 236  : 
; 237  : 		break;
; 238  : 	}
; 239  : 
; 240  : 	#endif
; 241  : 
; 242  : 	////////////////////////////////////////
; 243  : 
; 244  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 245  : 
; 246  : 	case LIST_TYPE_GUIDE:
; 247  : 	{
; 248  : 		parent = raw->guide_link.parent;
; 249  : 
; 250  : 		break;
; 251  : 	}
; 252  : 
; 253  : 	#endif
; 254  : 
; 255  : 	////////////////////////////////////////
; 256  : 
; 257  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 258  : 
; 259  : 	case LIST_TYPE_GUIDE_STACK:
; 260  : 	{
; 261  : 		parent = raw->guide_stack_link.parent;
; 262  : 
; 263  : 		break;
; 264  : 	}
; 265  : 
; 266  : 	#endif
; 267  : 
; 268  : 	////////////////////////////////////////
; 269  : 
; 270  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 271  : 
; 272  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 273  : 	{
; 274  : 		parent = raw->gunship_target_link.parent;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003d	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00040	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 275  : 
; 276  : 		break;

  00043	e9 8a 00 00 00	 jmp	 $LN2@get_local_
$LN6@get_local_:

; 277  : 	}
; 278  : 
; 279  : 	#endif
; 280  : 
; 281  : 	////////////////////////////////////////
; 282  : 
; 283  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 284  : 
; 285  : 	case LIST_TYPE_HIERARCHY:
; 286  : 	{
; 287  : 		parent = raw->hierarchy_link.parent;
; 288  : 
; 289  : 		break;
; 290  : 	}
; 291  : 
; 292  : 	#endif
; 293  : 
; 294  : 	////////////////////////////////////////
; 295  : 
; 296  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 297  : 
; 298  : 	case LIST_TYPE_KEYSITE_FORCE:
; 299  : 	{
; 300  : 		parent = raw->keysite_force_link.parent;
; 301  : 
; 302  : 		break;
; 303  : 	}
; 304  : 
; 305  : 	#endif
; 306  : 
; 307  : 	////////////////////////////////////////
; 308  : 
; 309  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 310  : 
; 311  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 312  : 	{
; 313  : 		parent = raw->launched_weapon_link.parent;
; 314  : 
; 315  : 		break;
; 316  : 	}
; 317  : 
; 318  : 	#endif
; 319  : 
; 320  : 	////////////////////////////////////////
; 321  : 
; 322  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 323  : 
; 324  : 	case LIST_TYPE_LANDING_SITE:
; 325  : 	{
; 326  : 		parent = raw->landing_site_link.parent;
; 327  : 
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	#endif
; 332  : 
; 333  : 	////////////////////////////////////////
; 334  : 
; 335  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 336  : 
; 337  : 	case LIST_TYPE_MEMBER:
; 338  : 	{
; 339  : 		parent = raw->member_link.parent;
; 340  : 
; 341  : 		break;
; 342  : 	}
; 343  : 
; 344  : 	#endif
; 345  : 
; 346  : 	////////////////////////////////////////
; 347  : 
; 348  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 349  : 
; 350  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 351  : 	{
; 352  : 		parent = raw->movement_dependent_link.parent;
; 353  : 
; 354  : 		break;
; 355  : 	}
; 356  : 
; 357  : 	#endif
; 358  : 
; 359  : 	////////////////////////////////////////
; 360  : 
; 361  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 362  : 
; 363  : 	case LIST_TYPE_PADLOCK:
; 364  : 	{
; 365  : 		parent = raw->padlock_link.parent;
; 366  : 
; 367  : 		break;
; 368  : 	}
; 369  : 
; 370  : 	#endif
; 371  : 
; 372  : 	////////////////////////////////////////
; 373  : 
; 374  : 	#ifdef LIST_TYPE_PILOT_LINK
; 375  : 
; 376  : 	case LIST_TYPE_PILOT:
; 377  : 	{
; 378  : 		parent = raw->pilot_link.parent;
; 379  : 
; 380  : 		break;
; 381  : 	}
; 382  : 
; 383  : 	#endif
; 384  : 
; 385  : 	////////////////////////////////////////
; 386  : 
; 387  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 388  : 
; 389  : 	case LIST_TYPE_PILOT_LOCK:
; 390  : 	{
; 391  : 		parent = raw->pilot_lock_link.parent;
; 392  : 
; 393  : 		break;
; 394  : 	}
; 395  : 
; 396  : 	#endif
; 397  : 
; 398  : 	////////////////////////////////////////
; 399  : 
; 400  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 401  : 
; 402  : 	case LIST_TYPE_PLAYER_TASK:
; 403  : 	{
; 404  : 		parent = raw->player_task_link.parent;
; 405  : 
; 406  : 		break;
; 407  : 	}
; 408  : 
; 409  : 	#endif
; 410  : 
; 411  : 	////////////////////////////////////////
; 412  : 
; 413  : 	#ifdef LIST_TYPE_REGEN_LINK
; 414  : 
; 415  : 	case LIST_TYPE_REGEN:
; 416  : 	{
; 417  : 		parent = raw->regen_link.parent;
; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : 
; 422  : 	#endif
; 423  : 
; 424  : 	////////////////////////////////////////
; 425  : 
; 426  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 427  : 
; 428  : 	case LIST_TYPE_AIR_REGISTRY:
; 429  : 	case LIST_TYPE_GROUND_REGISTRY:
; 430  : 	case LIST_TYPE_SEA_REGISTRY:
; 431  : 	{
; 432  : 		parent = raw->registry_link.parent;
; 433  : 
; 434  : 		break;
; 435  : 	}
; 436  : 
; 437  : 	#endif
; 438  : 
; 439  : 	////////////////////////////////////////
; 440  : 
; 441  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 442  : 
; 443  : 	case LIST_TYPE_SECTOR:
; 444  : 	{
; 445  : 		parent = raw->sector_link.parent;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0004e	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 446  : 
; 447  : 		break;

  00051	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN7@get_local_:

; 448  : 	}
; 449  : 
; 450  : 	#endif
; 451  : 
; 452  : 	////////////////////////////////////////
; 453  : 
; 454  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 455  : 
; 456  : 	case LIST_TYPE_SECTOR_TASK:
; 457  : 	{
; 458  : 		parent = raw->sector_task_link.parent;
; 459  : 
; 460  : 		break;
; 461  : 	}
; 462  : 
; 463  : 	#endif
; 464  : 
; 465  : 	////////////////////////////////////////
; 466  : 
; 467  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 468  : 
; 469  : 	case LIST_TYPE_SEGMENT:
; 470  : 	{
; 471  : 		parent = raw->segment_link.parent;
; 472  : 
; 473  : 		break;
; 474  : 	}
; 475  : 
; 476  : 	#endif
; 477  : 
; 478  : 	////////////////////////////////////////
; 479  : 
; 480  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 481  : 
; 482  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 483  : 	{
; 484  : 		parent = raw->special_effect_link.parent;
; 485  : 
; 486  : 		break;
; 487  : 	}
; 488  : 
; 489  : 	#endif
; 490  : 
; 491  : 	////////////////////////////////////////
; 492  : 
; 493  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 494  : 
; 495  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 496  : 	{
; 497  : 		parent = raw->takeoff_queue_link.parent;
; 498  : 
; 499  : 		break;
; 500  : 	}
; 501  : 
; 502  : 	#endif
; 503  : 
; 504  : 	////////////////////////////////////////
; 505  : 
; 506  : 	#ifdef LIST_TYPE_TARGET_LINK
; 507  : 
; 508  : 	case LIST_TYPE_TARGET:
; 509  : 	{
; 510  : 		parent = raw->target_link.parent;
; 511  : 
; 512  : 		break;
; 513  : 	}
; 514  : 
; 515  : 	#endif
; 516  : 
; 517  : 	////////////////////////////////////////
; 518  : 
; 519  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 520  : 
; 521  : 	case LIST_TYPE_TASK_DEPENDENT:
; 522  : 	{
; 523  : 		parent = raw->task_dependent_link.parent;
; 524  : 
; 525  : 		break;
; 526  : 	}
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	////////////////////////////////////////
; 531  : 
; 532  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 533  : 
; 534  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 535  : 	{
; 536  : 		parent = raw->task_link.parent;
; 537  : 
; 538  : 		break;
; 539  : 	}
; 540  : 
; 541  : 	#endif
; 542  : 
; 543  : 	////////////////////////////////////////
; 544  : 
; 545  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 546  : 
; 547  : 	case LIST_TYPE_UPDATE:
; 548  : 	{
; 549  : 		parent = raw->update_link.parent;
; 550  : 
; 551  : 		break;
; 552  : 	}
; 553  : 
; 554  : 	#endif
; 555  : 
; 556  : 	////////////////////////////////////////
; 557  : 
; 558  : 	#ifdef LIST_TYPE_VIEW_LINK
; 559  : 
; 560  : 	case LIST_TYPE_VIEW:
; 561  : 	{
; 562  : 		parent = raw->view_link.parent;
; 563  : 
; 564  : 		break;
; 565  : 	}
; 566  : 
; 567  : 	#endif
; 568  : 
; 569  : 	////////////////////////////////////////
; 570  : 
; 571  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 572  : 
; 573  : 	case LIST_TYPE_VIEW_WEAPON:
; 574  : 	{
; 575  : 		parent = raw->view_weapon_link.parent;
; 576  : 
; 577  : 		break;
; 578  : 	}
; 579  : 
; 580  : 	#endif
; 581  : 
; 582  : 	////////////////////////////////////////
; 583  : 
; 584  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 585  : 
; 586  : 	case LIST_TYPE_WAYPOINT:
; 587  : 	{
; 588  : 		parent = raw->waypoint_link.parent;
; 589  : 
; 590  : 		break;
; 591  : 	}
; 592  : 
; 593  : 	#endif
; 594  : 
; 595  : 	////////////////////////////////////////
; 596  : 
; 597  : 	default:
; 598  : 	{
; 599  : 		debug_fatal_invalid_list_type (en, type);

  00053	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00057	74 0a		 je	 SHORT $LN10@get_local_
  00059	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d b4	 mov	 DWORD PTR tv88[ebp], ecx
  00061	eb 24		 jmp	 SHORT $LN11@get_local_
$LN10@get_local_:
  00063	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00069	81 c2 ac 01 00
	00		 add	 edx, 428		; 000001acH
  0006f	52		 push	 edx
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00080	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN11@get_local_:
  00087	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  0008d	81 c1 ac 01 00
	00		 add	 ecx, 428		; 000001acH
  00093	51		 push	 ecx
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00099	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  0009c	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000a3	50		 push	 eax
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a7	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000ad	c1 f9 04	 sar	 ecx, 4
  000b0	51		 push	 ecx
  000b1	6b 55 b4 0c	 imul	 edx, DWORD PTR tv88[ebp], 12
  000b5	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000bb	50		 push	 eax
  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000c2	51		 push	 ecx
  000c3	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000c8	83 c4 18	 add	 esp, 24			; 00000018H

; 600  : 
; 601  : 		parent = NULL;

  000cb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _parent$[ebp], 0
$LN2@get_local_:

; 602  : 
; 603  : 		break;
; 604  : 	}
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : }
; 608  : 
; 609  : //
; 610  : // check list integrity
; 611  : //
; 612  : 
; 613  : ASSERT (en != parent);

  000d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d5	3b 45 f8	 cmp	 eax, DWORD PTR _parent$[ebp]
  000d8	75 1a		 jne	 SHORT $LN8@get_local_
  000da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000df	05 ba 01 00 00	 add	 eax, 442		; 000001baH
  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@
  000ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 182  : 	return (parent);

  000f4	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]

; 183  : }

  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5b		 pop	 ebx
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 08 00	 ret	 8
?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_prnt.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv93 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_parent$ = 16						; size = 4
?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC	; set_local_parent, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 154  : 	fixed
; 155  : 		*raw;
; 156  : 
; 157  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_prnt.h

; 71   : ASSERT (en != parent);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _parent$[ebp]
  00018	75 18		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	83 e8 52	 sub	 eax, 82			; 00000052H
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@
  0002d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00032	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00035	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00038	83 7d b8 0a	 cmp	 DWORD PTR tv70[ebp], 10	; 0000000aH
  0003c	74 0e		 je	 SHORT $LN5@set_local_
  0003e	83 7d b8 12	 cmp	 DWORD PTR tv70[ebp], 18	; 00000012H
  00042	74 16		 je	 SHORT $LN6@set_local_
  00044	83 7d b8 21	 cmp	 DWORD PTR tv70[ebp], 33	; 00000021H
  00048	74 1e		 je	 SHORT $LN7@set_local_
  0004a	eb 27		 jmp	 SHORT $LN8@set_local_
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_link.parent = parent;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 91   : 
; 92   : 	case LIST_TYPE_ASSIGNED_TASK:
; 93   : 	{
; 94   : 		raw->task_link.parent = parent;
; 95   : 
; 96   : 		break;
; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 104  : 
; 105  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 106  : 	{
; 107  : 		raw->campaign_objective_link.parent = parent;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_CARGO_LINK
; 117  : 
; 118  : 	case LIST_TYPE_CARGO:
; 119  : 	{
; 120  : 		raw->cargo_link.parent = parent;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 130  : 
; 131  : 	case LIST_TYPE_CITY_BUILDING:
; 132  : 	{
; 133  : 		raw->city_building_link.parent = parent;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 143  : 
; 144  : 	case LIST_TYPE_COMPLETED_TASK:
; 145  : 	{
; 146  : 		raw->task_link.parent = parent;
; 147  : 
; 148  : 		break;
; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 156  : 
; 157  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 158  : 	{
; 159  : 		raw->current_waypoint_link.parent = parent;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 
; 169  : 	// Jabbewock 031107 Designated targets
; 170  : 	
; 171  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 172  : 
; 173  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 174  : 	{
; 175  : 		raw->designated_target_link.parent = parent;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004f	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  00052	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 176  : 
; 177  : 		break;

  00055	e9 91 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 178  : 	}
; 179  : 
; 180  : 	#endif
; 181  : 	
; 182  : 	// Jabbewock 031107 ends
; 183  : 	
; 184  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 185  : 
; 186  : 	case LIST_TYPE_DIVISION:
; 187  : 	{
; 188  : 		raw->division_link.parent = parent;
; 189  : 
; 190  : 		break;
; 191  : 	}
; 192  : 
; 193  : 	#endif
; 194  : 
; 195  : 	////////////////////////////////////////
; 196  : 
; 197  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 198  : 
; 199  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 200  : 	{
; 201  : 		raw->division_headquarters_link.parent = parent;
; 202  : 
; 203  : 		break;
; 204  : 	}
; 205  : 
; 206  : 	#endif
; 207  : 
; 208  : 	////////////////////////////////////////
; 209  : 
; 210  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 211  : 
; 212  : 	case LIST_TYPE_FOLLOWER:
; 213  : 	{
; 214  : 		raw->follower_link.parent = parent;
; 215  : 
; 216  : 		break;
; 217  : 	}
; 218  : 
; 219  : 	#endif
; 220  : 
; 221  : 	////////////////////////////////////////
; 222  : 
; 223  : 	#ifdef LIST_TYPE_FORCE_LINK
; 224  : 
; 225  : 	case LIST_TYPE_FORCE:
; 226  : 	{
; 227  : 		raw->force_link.parent = parent;
; 228  : 
; 229  : 		break;
; 230  : 	}
; 231  : 
; 232  : 	#endif
; 233  : 
; 234  : 	////////////////////////////////////////
; 235  : 
; 236  : 	#ifdef LIST_TYPE_GROUP_LINK
; 237  : 
; 238  : 	case LIST_TYPE_BUILDING_GROUP:
; 239  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 240  : 	case LIST_TYPE_KEYSITE_GROUP:
; 241  : 	{
; 242  : 		raw->group_link.parent = parent;
; 243  : 
; 244  : 		break;
; 245  : 	}
; 246  : 
; 247  : 	#endif
; 248  : 
; 249  : 	////////////////////////////////////////
; 250  : 
; 251  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 252  : 
; 253  : 	case LIST_TYPE_GUIDE:
; 254  : 	{
; 255  : 		raw->guide_link.parent = parent;
; 256  : 
; 257  : 		break;
; 258  : 	}
; 259  : 
; 260  : 	#endif
; 261  : 
; 262  : 	////////////////////////////////////////
; 263  : 
; 264  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 265  : 
; 266  : 	case LIST_TYPE_GUIDE_STACK:
; 267  : 	{
; 268  : 		raw->guide_stack_link.parent = parent;
; 269  : 
; 270  : 		break;
; 271  : 	}
; 272  : 
; 273  : 	#endif
; 274  : 
; 275  : 	////////////////////////////////////////
; 276  : 
; 277  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 278  : 
; 279  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 280  : 	{
; 281  : 		raw->gunship_target_link.parent = parent;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005d	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  00060	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 282  : 
; 283  : 		break;

  00063	e9 83 00 00 00	 jmp	 $LN1@set_local_
$LN7@set_local_:

; 284  : 	}
; 285  : 
; 286  : 	#endif
; 287  : 
; 288  : 	////////////////////////////////////////
; 289  : 
; 290  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 291  : 
; 292  : 	case LIST_TYPE_HIERARCHY:
; 293  : 	{
; 294  : 		raw->hierarchy_link.parent = parent;
; 295  : 
; 296  : 		break;
; 297  : 	}
; 298  : 
; 299  : 	#endif
; 300  : 
; 301  : 	////////////////////////////////////////
; 302  : 
; 303  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 304  : 
; 305  : 	case LIST_TYPE_KEYSITE_FORCE:
; 306  : 	{
; 307  : 		raw->keysite_force_link.parent = parent;
; 308  : 
; 309  : 		break;
; 310  : 	}
; 311  : 
; 312  : 	#endif
; 313  : 
; 314  : 	////////////////////////////////////////
; 315  : 
; 316  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 317  : 
; 318  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 319  : 	{
; 320  : 		raw->launched_weapon_link.parent = parent;
; 321  : 
; 322  : 		break;
; 323  : 	}
; 324  : 
; 325  : 	#endif
; 326  : 
; 327  : 	////////////////////////////////////////
; 328  : 
; 329  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 330  : 
; 331  : 	case LIST_TYPE_LANDING_SITE:
; 332  : 	{
; 333  : 		raw->landing_site_link.parent = parent;
; 334  : 
; 335  : 		break;
; 336  : 	}
; 337  : 
; 338  : 	#endif
; 339  : 
; 340  : 	////////////////////////////////////////
; 341  : 
; 342  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 343  : 
; 344  : 	case LIST_TYPE_MEMBER:
; 345  : 	{
; 346  : 		raw->member_link.parent = parent;
; 347  : 
; 348  : 		break;
; 349  : 	}
; 350  : 
; 351  : 	#endif
; 352  : 
; 353  : 	////////////////////////////////////////
; 354  : 
; 355  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 356  : 
; 357  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 358  : 	{
; 359  : 		raw->movement_dependent_link.parent = parent;
; 360  : 
; 361  : 		break;
; 362  : 	}
; 363  : 
; 364  : 	#endif
; 365  : 
; 366  : 	////////////////////////////////////////
; 367  : 
; 368  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 369  : 
; 370  : 	case LIST_TYPE_PADLOCK:
; 371  : 	{
; 372  : 		raw->padlock_link.parent = parent;
; 373  : 
; 374  : 		break;
; 375  : 	}
; 376  : 
; 377  : 	#endif
; 378  : 
; 379  : 	////////////////////////////////////////
; 380  : 
; 381  : 	#ifdef LIST_TYPE_PILOT_LINK
; 382  : 
; 383  : 	case LIST_TYPE_PILOT:
; 384  : 	{
; 385  : 		raw->pilot_link.parent = parent;
; 386  : 
; 387  : 		break;
; 388  : 	}
; 389  : 
; 390  : 	#endif
; 391  : 
; 392  : 	////////////////////////////////////////
; 393  : 
; 394  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 395  : 
; 396  : 	case LIST_TYPE_PILOT_LOCK:
; 397  : 	{
; 398  : 		raw->pilot_lock_link.parent = parent;
; 399  : 
; 400  : 		break;
; 401  : 	}
; 402  : 
; 403  : 	#endif
; 404  : 
; 405  : 	////////////////////////////////////////
; 406  : 
; 407  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 408  : 
; 409  : 	case LIST_TYPE_PLAYER_TASK:
; 410  : 	{
; 411  : 		raw->player_task_link.parent = parent;
; 412  : 
; 413  : 		break;
; 414  : 	}
; 415  : 
; 416  : 	#endif
; 417  : 
; 418  : 	////////////////////////////////////////
; 419  : 
; 420  : 	#ifdef LIST_TYPE_REGEN_LINK
; 421  : 
; 422  : 	case LIST_TYPE_REGEN:
; 423  : 	{
; 424  : 		raw->regen_link.parent = parent;
; 425  : 
; 426  : 		break;
; 427  : 	}
; 428  : 
; 429  : 	#endif
; 430  : 
; 431  : 	////////////////////////////////////////
; 432  : 
; 433  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 434  : 
; 435  : 	case LIST_TYPE_AIR_REGISTRY:
; 436  : 	case LIST_TYPE_GROUND_REGISTRY:
; 437  : 	case LIST_TYPE_SEA_REGISTRY:
; 438  : 	{
; 439  : 		raw->registry_link.parent = parent;
; 440  : 
; 441  : 		break;
; 442  : 	}
; 443  : 
; 444  : 	#endif
; 445  : 
; 446  : 	////////////////////////////////////////
; 447  : 
; 448  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 449  : 
; 450  : 	case LIST_TYPE_SECTOR:
; 451  : 	{
; 452  : 		raw->sector_link.parent = parent;

  00068	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006b	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  0006e	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 453  : 
; 454  : 		break;

  00071	eb 78		 jmp	 SHORT $LN1@set_local_
$LN8@set_local_:

; 455  : 	}
; 456  : 
; 457  : 	#endif
; 458  : 
; 459  : 	////////////////////////////////////////
; 460  : 
; 461  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 462  : 
; 463  : 	case LIST_TYPE_SECTOR_TASK:
; 464  : 	{
; 465  : 		raw->sector_task_link.parent = parent;
; 466  : 
; 467  : 		break;
; 468  : 	}
; 469  : 
; 470  : 	#endif
; 471  : 
; 472  : 	////////////////////////////////////////
; 473  : 
; 474  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 475  : 
; 476  : 	case LIST_TYPE_SEGMENT:
; 477  : 	{
; 478  : 		raw->segment_link.parent = parent;
; 479  : 
; 480  : 		break;
; 481  : 	}
; 482  : 
; 483  : 	#endif
; 484  : 
; 485  : 	////////////////////////////////////////
; 486  : 
; 487  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 488  : 
; 489  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 490  : 	{
; 491  : 		raw->special_effect_link.parent = parent;
; 492  : 
; 493  : 		break;
; 494  : 	}
; 495  : 
; 496  : 	#endif
; 497  : 
; 498  : 	////////////////////////////////////////
; 499  : 
; 500  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 501  : 
; 502  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 503  : 	{
; 504  : 		raw->takeoff_queue_link.parent = parent;
; 505  : 
; 506  : 		break;
; 507  : 	}
; 508  : 
; 509  : 	#endif
; 510  : 
; 511  : 	////////////////////////////////////////
; 512  : 
; 513  : 	#ifdef LIST_TYPE_TARGET_LINK
; 514  : 
; 515  : 	case LIST_TYPE_TARGET:
; 516  : 	{
; 517  : 		raw->target_link.parent = parent;
; 518  : 
; 519  : 		break;
; 520  : 	}
; 521  : 
; 522  : 	#endif
; 523  : 
; 524  : 	////////////////////////////////////////
; 525  : 
; 526  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 527  : 
; 528  : 	case LIST_TYPE_TASK_DEPENDENT:
; 529  : 	{
; 530  : 		raw->task_dependent_link.parent = parent;
; 531  : 
; 532  : 		break;
; 533  : 	}
; 534  : 
; 535  : 	#endif
; 536  : 
; 537  : 	////////////////////////////////////////
; 538  : 
; 539  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 540  : 
; 541  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 542  : 	{
; 543  : 		raw->task_link.parent = parent;
; 544  : 
; 545  : 		break;
; 546  : 	}
; 547  : 
; 548  : 	#endif
; 549  : 
; 550  : 	////////////////////////////////////////
; 551  : 
; 552  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 553  : 
; 554  : 	case LIST_TYPE_UPDATE:
; 555  : 	{
; 556  : 		raw->update_link.parent = parent;
; 557  : 
; 558  : 		break;
; 559  : 	}
; 560  : 
; 561  : 	#endif
; 562  : 
; 563  : 	////////////////////////////////////////
; 564  : 
; 565  : 	#ifdef LIST_TYPE_VIEW_LINK
; 566  : 
; 567  : 	case LIST_TYPE_VIEW:
; 568  : 	{
; 569  : 		raw->view_link.parent = parent;
; 570  : 
; 571  : 		break;
; 572  : 	}
; 573  : 
; 574  : 	#endif
; 575  : 
; 576  : 	////////////////////////////////////////
; 577  : 
; 578  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 579  : 
; 580  : 	case LIST_TYPE_VIEW_WEAPON:
; 581  : 	{
; 582  : 		raw->view_weapon_link.parent = parent;
; 583  : 
; 584  : 		break;
; 585  : 	}
; 586  : 
; 587  : 	#endif
; 588  : 
; 589  : 	////////////////////////////////////////
; 590  : 
; 591  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 592  : 
; 593  : 	case LIST_TYPE_WAYPOINT:
; 594  : 	{
; 595  : 		raw->waypoint_link.parent = parent;
; 596  : 
; 597  : 		break;
; 598  : 	}
; 599  : 
; 600  : 	#endif
; 601  : 
; 602  : 	////////////////////////////////////////
; 603  : 
; 604  : 	default:
; 605  : 	{
; 606  : 		debug_fatal_invalid_list_type (en, type);

  00073	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00077	74 0a		 je	 SHORT $LN10@set_local_
  00079	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007e	89 4d b8	 mov	 DWORD PTR tv93[ebp], ecx
  00081	eb 24		 jmp	 SHORT $LN11@set_local_
$LN10@set_local_:
  00083	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  00089	81 c2 c5 01 00
	00		 add	 edx, 453		; 000001c5H
  0008f	52		 push	 edx
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN11@set_local_:
  000a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000ad	81 c1 c5 01 00
	00		 add	 ecx, 453		; 000001c5H
  000b3	51		 push	 ecx
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b9	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000bc	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000c3	50		 push	 eax
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000c7	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000cd	c1 f9 04	 sar	 ecx, 4
  000d0	51		 push	 ecx
  000d1	6b 55 b8 0c	 imul	 edx, DWORD PTR tv93[ebp], 12
  000d5	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000db	50		 push	 eax
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e8	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 160  : }

  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 0c 00	 ret	 12			; 0000000cH
?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP	; set_local_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_frst.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv86 = -76						; size = 4
tv65 = -76						; size = 4
_first_child$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_first_child, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 	fixed
; 132  : 		*raw;
; 133  : 
; 134  : 	entity
; 135  : 		*first_child;
; 136  : 
; 137  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_frst.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	83 7d b4 26	 cmp	 DWORD PTR tv65[ebp], 38	; 00000026H
  0001c	74 08		 je	 SHORT $LN4@get_local_
  0001e	83 7d b4 27	 cmp	 DWORD PTR tv65[ebp], 39	; 00000027H
  00022	74 10		 je	 SHORT $LN5@get_local_
  00024	eb 19		 jmp	 SHORT $LN6@get_local_
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_ROOT
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		first_child = raw->aircrew_root.first_child;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_AIR_REGISTRY_ROOT
; 85   : 
; 86   : 	case LIST_TYPE_AIR_REGISTRY:
; 87   : 	{
; 88   : 		first_child = raw->air_registry_root.first_child;
; 89   : 
; 90   : 		break;
; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_ROOT
; 98   : 
; 99   : 	case LIST_TYPE_ASSIGNED_TASK:
; 100  : 	{
; 101  : 		first_child = raw->assigned_task_root.first_child;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_BUILDING_GROUP_ROOT
; 111  : 
; 112  : 	case LIST_TYPE_BUILDING_GROUP:
; 113  : 	{
; 114  : 		first_child = raw->building_group_root.first_child;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_ROOT
; 124  : 
; 125  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 126  : 	{
; 127  : 		first_child = raw->campaign_objective_root.first_child;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_CARGO_ROOT
; 137  : 
; 138  : 	case LIST_TYPE_CARGO:
; 139  : 	{
; 140  : 		first_child = raw->cargo_root.first_child;
; 141  : 
; 142  : 		break;
; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CITY_BUILDING_ROOT
; 150  : 
; 151  : 	case LIST_TYPE_CITY_BUILDING:
; 152  : 	{
; 153  : 		first_child = raw->city_building_root.first_child;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	#ifdef LIST_TYPE_COMPLETED_TASK_ROOT
; 163  : 
; 164  : 	case LIST_TYPE_COMPLETED_TASK:
; 165  : 	{
; 166  : 		first_child = raw->completed_task_root.first_child;
; 167  : 
; 168  : 		break;
; 169  : 	}
; 170  : 
; 171  : 	#endif
; 172  : 
; 173  : 	////////////////////////////////////////
; 174  : 
; 175  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_ROOT
; 176  : 
; 177  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 178  : 	{
; 179  : 		first_child = raw->current_waypoint_root.first_child;
; 180  : 
; 181  : 		break;
; 182  : 	}
; 183  : 
; 184  : 	#endif
; 185  : 
; 186  : // Jabbewock 031107 Designated targets
; 187  : 
; 188  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_ROOT
; 189  : 
; 190  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 191  : 	{
; 192  : 		first_child = raw->designated_target_root.first_child;
; 193  : 
; 194  : 		break;
; 195  : 	}
; 196  : 
; 197  : 	#endif
; 198  : // Jabbewock 031107 ends
; 199  : 
; 200  : 	////////////////////////////////////////
; 201  : 
; 202  : 	#ifdef LIST_TYPE_DIVISION_ROOT
; 203  : 
; 204  : 	case LIST_TYPE_DIVISION:
; 205  : 	{
; 206  : 		first_child = raw->division_root.first_child;
; 207  : 
; 208  : 		break;
; 209  : 	}
; 210  : 
; 211  : 	#endif
; 212  : 
; 213  : 	////////////////////////////////////////
; 214  : 
; 215  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_ROOT
; 216  : 
; 217  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 218  : 	{
; 219  : 		first_child = raw->division_headquarters_root.first_child;
; 220  : 
; 221  : 		break;
; 222  : 	}
; 223  : 
; 224  : 	#endif
; 225  : 
; 226  : 	////////////////////////////////////////
; 227  : 
; 228  : 	#ifdef LIST_TYPE_FOLLOWER_ROOT
; 229  : 
; 230  : 	case LIST_TYPE_FOLLOWER:
; 231  : 	{
; 232  : 		first_child = raw->follower_root.first_child;
; 233  : 
; 234  : 		break;
; 235  : 	}
; 236  : 
; 237  : 	#endif
; 238  : 
; 239  : 	////////////////////////////////////////
; 240  : 
; 241  : 	#ifdef LIST_TYPE_FORCE_ROOT
; 242  : 
; 243  : 	case LIST_TYPE_FORCE:
; 244  : 	{
; 245  : 		first_child = raw->force_root.first_child;
; 246  : 
; 247  : 		break;
; 248  : 	}
; 249  : 
; 250  : 	#endif
; 251  : 
; 252  : 	////////////////////////////////////////
; 253  : 
; 254  : 	#ifdef LIST_TYPE_GROUND_REGISTRY_ROOT
; 255  : 
; 256  : 	case LIST_TYPE_GROUND_REGISTRY:
; 257  : 	{
; 258  : 		first_child = raw->ground_registry_root.first_child;
; 259  : 
; 260  : 		break;
; 261  : 	}
; 262  : 
; 263  : 	#endif
; 264  : 
; 265  : 	////////////////////////////////////////
; 266  : 
; 267  : 	#ifdef LIST_TYPE_GUIDE_ROOT
; 268  : 
; 269  : 	case LIST_TYPE_GUIDE:
; 270  : 	{
; 271  : 		first_child = raw->guide_root.first_child;
; 272  : 
; 273  : 		break;
; 274  : 	}
; 275  : 
; 276  : 	#endif
; 277  : 
; 278  : 	////////////////////////////////////////
; 279  : 
; 280  : 	#ifdef LIST_TYPE_GUIDE_STACK_ROOT
; 281  : 
; 282  : 	case LIST_TYPE_GUIDE_STACK:
; 283  : 	{
; 284  : 		first_child = raw->guide_stack_root.first_child;
; 285  : 
; 286  : 		break;
; 287  : 	}
; 288  : 
; 289  : 	#endif
; 290  : 
; 291  : 	////////////////////////////////////////
; 292  : 
; 293  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_ROOT
; 294  : 
; 295  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 296  : 	{
; 297  : 		first_child = raw->gunship_target_root.first_child;
; 298  : 
; 299  : 		break;
; 300  : 	}
; 301  : 
; 302  : 	#endif
; 303  : 
; 304  : 	////////////////////////////////////////
; 305  : 
; 306  : 	#ifdef LIST_TYPE_INDEPENDENT_GROUP_ROOT
; 307  : 
; 308  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 309  : 	{
; 310  : 		first_child = raw->independent_group_root.first_child;
; 311  : 
; 312  : 		break;
; 313  : 	}
; 314  : 
; 315  : 	#endif
; 316  : 
; 317  : 	////////////////////////////////////////
; 318  : 
; 319  : 	#ifdef LIST_TYPE_HIERARCHY_ROOT
; 320  : 
; 321  : 	case LIST_TYPE_HIERARCHY:
; 322  : 	{
; 323  : 		first_child = raw->hierarchy_root.first_child;
; 324  : 
; 325  : 		break;
; 326  : 	}
; 327  : 
; 328  : 	#endif
; 329  : 
; 330  : 	////////////////////////////////////////
; 331  : 
; 332  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_ROOT
; 333  : 
; 334  : 	case LIST_TYPE_KEYSITE_FORCE:
; 335  : 	{
; 336  : 		first_child = raw->keysite_force_root.first_child;
; 337  : 
; 338  : 		break;
; 339  : 	}
; 340  : 
; 341  : 	#endif
; 342  : 
; 343  : 	////////////////////////////////////////
; 344  : 
; 345  : 	#ifdef LIST_TYPE_KEYSITE_GROUP_ROOT
; 346  : 
; 347  : 	case LIST_TYPE_KEYSITE_GROUP:
; 348  : 	{
; 349  : 		first_child = raw->keysite_group_root.first_child;
; 350  : 
; 351  : 		break;
; 352  : 	}
; 353  : 
; 354  : 	#endif
; 355  : 
; 356  : 	////////////////////////////////////////
; 357  : 
; 358  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_ROOT
; 359  : 
; 360  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 361  : 	{
; 362  : 		first_child = raw->launched_weapon_root.first_child;
; 363  : 
; 364  : 		break;
; 365  : 	}
; 366  : 
; 367  : 	#endif
; 368  : 
; 369  : 	////////////////////////////////////////
; 370  : 
; 371  : 	#ifdef LIST_TYPE_LANDING_SITE_ROOT
; 372  : 
; 373  : 	case LIST_TYPE_LANDING_SITE:
; 374  : 	{
; 375  : 		first_child = raw->landing_site_root.first_child;
; 376  : 
; 377  : 		break;
; 378  : 	}
; 379  : 
; 380  : 	#endif
; 381  : 
; 382  : 	////////////////////////////////////////
; 383  : 
; 384  : 	#ifdef LIST_TYPE_MEMBER_ROOT
; 385  : 
; 386  : 	case LIST_TYPE_MEMBER:
; 387  : 	{
; 388  : 		first_child = raw->member_root.first_child;
; 389  : 
; 390  : 		break;
; 391  : 	}
; 392  : 
; 393  : 	#endif
; 394  : 
; 395  : 	////////////////////////////////////////
; 396  : 
; 397  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_ROOT
; 398  : 
; 399  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 400  : 	{
; 401  : 		first_child = raw->movement_dependent_root.first_child;
; 402  : 
; 403  : 		break;
; 404  : 	}
; 405  : 
; 406  : 	#endif
; 407  : 
; 408  : 	////////////////////////////////////////
; 409  : 
; 410  : 	#ifdef LIST_TYPE_PADLOCK_ROOT
; 411  : 
; 412  : 	case LIST_TYPE_PADLOCK:
; 413  : 	{
; 414  : 		first_child = raw->padlock_root.first_child;
; 415  : 
; 416  : 		break;
; 417  : 	}
; 418  : 
; 419  : 	#endif
; 420  : 
; 421  : 	////////////////////////////////////////
; 422  : 
; 423  : 	#ifdef LIST_TYPE_PILOT_ROOT
; 424  : 
; 425  : 	case LIST_TYPE_PILOT:
; 426  : 	{
; 427  : 		first_child = raw->pilot_root.first_child;
; 428  : 
; 429  : 		break;
; 430  : 	}
; 431  : 
; 432  : 	#endif
; 433  : 
; 434  : 	////////////////////////////////////////
; 435  : 
; 436  : 	#ifdef LIST_TYPE_PILOT_LOCK_ROOT
; 437  : 
; 438  : 	case LIST_TYPE_PILOT_LOCK:
; 439  : 	{
; 440  : 		first_child = raw->pilot_lock_root.first_child;
; 441  : 
; 442  : 		break;
; 443  : 	}
; 444  : 
; 445  : 	#endif
; 446  : 
; 447  : 	////////////////////////////////////////
; 448  : 
; 449  : 	#ifdef LIST_TYPE_PLAYER_TASK_ROOT
; 450  : 
; 451  : 	case LIST_TYPE_PLAYER_TASK:
; 452  : 	{
; 453  : 		first_child = raw->player_task_root.first_child;
; 454  : 
; 455  : 		break;
; 456  : 	}
; 457  : 
; 458  : 	#endif
; 459  : 
; 460  : 	////////////////////////////////////////
; 461  : 
; 462  : 	#ifdef LIST_TYPE_REGEN_ROOT
; 463  : 
; 464  : 	case LIST_TYPE_REGEN:
; 465  : 	{
; 466  : 		first_child = raw->regen_root.first_child;
; 467  : 
; 468  : 		break;
; 469  : 	}
; 470  : 
; 471  : 	#endif
; 472  : 
; 473  : 	////////////////////////////////////////
; 474  : 
; 475  : 	#ifdef LIST_TYPE_SEA_REGISTRY_ROOT
; 476  : 
; 477  : 	case LIST_TYPE_SEA_REGISTRY:
; 478  : 	{
; 479  : 		first_child = raw->sea_registry_root.first_child;
; 480  : 
; 481  : 		break;
; 482  : 	}
; 483  : 
; 484  : 	#endif
; 485  : 
; 486  : 	////////////////////////////////////////
; 487  : 
; 488  : 	#ifdef LIST_TYPE_SECTOR_ROOT
; 489  : 
; 490  : 	case LIST_TYPE_SECTOR:
; 491  : 	{
; 492  : 		first_child = raw->sector_root.first_child;
; 493  : 
; 494  : 		break;
; 495  : 	}
; 496  : 
; 497  : 	#endif
; 498  : 
; 499  : 	////////////////////////////////////////
; 500  : 
; 501  : 	#ifdef LIST_TYPE_SECTOR_TASK_ROOT
; 502  : 
; 503  : 	case LIST_TYPE_SECTOR_TASK:
; 504  : 	{
; 505  : 		first_child = raw->sector_task_root.first_child;
; 506  : 
; 507  : 		break;
; 508  : 	}
; 509  : 
; 510  : 	#endif
; 511  : 
; 512  : 	////////////////////////////////////////
; 513  : 
; 514  : 	#ifdef LIST_TYPE_SEGMENT_ROOT
; 515  : 
; 516  : 	case LIST_TYPE_SEGMENT:
; 517  : 	{
; 518  : 		first_child = raw->segment_root.first_child;
; 519  : 
; 520  : 		break;
; 521  : 	}
; 522  : 
; 523  : 	#endif
; 524  : 
; 525  : 	////////////////////////////////////////
; 526  : 
; 527  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_ROOT
; 528  : 
; 529  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 530  : 	{
; 531  : 		first_child = raw->special_effect_root.first_child;
; 532  : 
; 533  : 		break;
; 534  : 	}
; 535  : 
; 536  : 	#endif
; 537  : 
; 538  : 	////////////////////////////////////////
; 539  : 
; 540  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_ROOT
; 541  : 
; 542  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 543  : 	{
; 544  : 		first_child = raw->takeoff_queue_root.first_child;
; 545  : 
; 546  : 		break;
; 547  : 	}
; 548  : 
; 549  : 	#endif
; 550  : 
; 551  : 	////////////////////////////////////////
; 552  : 
; 553  : 	#ifdef LIST_TYPE_TARGET_ROOT
; 554  : 
; 555  : 	case LIST_TYPE_TARGET:
; 556  : 	{
; 557  : 		first_child = raw->target_root.first_child;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00029	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0002c	89 4d f8	 mov	 DWORD PTR _first_child$[ebp], ecx

; 558  : 
; 559  : 		break;

  0002f	e9 8a 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 560  : 	}
; 561  : 
; 562  : 	#endif
; 563  : 
; 564  : 	////////////////////////////////////////
; 565  : 
; 566  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_ROOT
; 567  : 
; 568  : 	case LIST_TYPE_TASK_DEPENDENT:
; 569  : 	{
; 570  : 		first_child = raw->task_dependent_root.first_child;

  00034	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00037	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003a	89 4d f8	 mov	 DWORD PTR _first_child$[ebp], ecx

; 571  : 
; 572  : 		break;

  0003d	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN6@get_local_:

; 573  : 	}
; 574  : 
; 575  : 	#endif
; 576  : 
; 577  : 	////////////////////////////////////////
; 578  : 
; 579  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_ROOT
; 580  : 
; 581  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 582  : 	{
; 583  : 		first_child = raw->unassigned_task_root.first_child;
; 584  : 
; 585  : 		break;
; 586  : 	}
; 587  : 
; 588  : 	#endif
; 589  : 
; 590  : 	////////////////////////////////////////
; 591  : 
; 592  : 	#ifdef LIST_TYPE_UPDATE_ROOT
; 593  : 
; 594  : 	case LIST_TYPE_UPDATE:
; 595  : 	{
; 596  : 		first_child = raw->update_root.first_child;
; 597  : 
; 598  : 		break;
; 599  : 	}
; 600  : 
; 601  : 	#endif
; 602  : 
; 603  : 	////////////////////////////////////////
; 604  : 
; 605  : 	#ifdef LIST_TYPE_VIEW_ROOT
; 606  : 
; 607  : 	case LIST_TYPE_VIEW:
; 608  : 	{
; 609  : 		first_child = raw->view_root.first_child;
; 610  : 
; 611  : 		break;
; 612  : 	}
; 613  : 
; 614  : 	#endif
; 615  : 
; 616  : 	////////////////////////////////////////
; 617  : 
; 618  : 	#ifdef LIST_TYPE_VIEW_WEAPON_ROOT
; 619  : 
; 620  : 	case LIST_TYPE_VIEW_WEAPON:
; 621  : 	{
; 622  : 		first_child = raw->view_weapon_root.first_child;
; 623  : 
; 624  : 		break;
; 625  : 	}
; 626  : 
; 627  : 	#endif
; 628  : 
; 629  : 	////////////////////////////////////////
; 630  : 
; 631  : 	#ifdef LIST_TYPE_WAYPOINT_ROOT
; 632  : 
; 633  : 	case LIST_TYPE_WAYPOINT:
; 634  : 	{
; 635  : 		first_child = raw->waypoint_root.first_child;
; 636  : 
; 637  : 		break;
; 638  : 	}
; 639  : 
; 640  : 	#endif
; 641  : 
; 642  : 	////////////////////////////////////////
; 643  : 
; 644  : 	default:
; 645  : 	{
; 646  : 		debug_fatal_invalid_list_type (en, type);

  0003f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00043	74 0a		 je	 SHORT $LN9@get_local_
  00045	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 4d b4	 mov	 DWORD PTR tv86[ebp], ecx
  0004d	eb 24		 jmp	 SHORT $LN10@get_local_
$LN9@get_local_:
  0004f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00055	81 c2 04 02 00
	00		 add	 edx, 516		; 00000204H
  0005b	52		 push	 edx
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN10@get_local_:
  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00079	81 c1 04 02 00
	00		 add	 ecx, 516		; 00000204H
  0007f	51		 push	 ecx
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00085	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  00088	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  0008f	50		 push	 eax
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00099	c1 f9 04	 sar	 ecx, 4
  0009c	51		 push	 ecx
  0009d	6b 55 b4 0c	 imul	 edx, DWORD PTR tv86[ebp], 12
  000a1	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000a7	50		 push	 eax
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000ae	51		 push	 ecx
  000af	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000b4	83 c4 18	 add	 esp, 24			; 00000018H

; 647  : 
; 648  : 		first_child = NULL;

  000b7	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _first_child$[ebp], 0
$LN2@get_local_:

; 649  : 
; 650  : 		break;
; 651  : 	}
; 652  : 
; 653  : 	////////////////////////////////////////
; 654  : }
; 655  : 
; 656  : //
; 657  : // check list integrity
; 658  : //
; 659  : 
; 660  : ASSERT (en != first_child);

  000be	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c1	3b 45 f8	 cmp	 eax, DWORD PTR _first_child$[ebp]
  000c4	75 1a		 jne	 SHORT $LN7@get_local_
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000cb	05 12 02 00 00	 add	 eax, 530		; 00000212H
  000d0	50		 push	 eax
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@
  000db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 141  : 	return (first_child);

  000e0	8b 45 f8	 mov	 eax, DWORD PTR _first_child$[ebp]

; 142  : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_first_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_frst.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv91 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_first_child$ = 16					; size = 4
?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC ; set_local_first_child, COMDAT

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	fixed
; 114  : 		*raw;
; 115  : 
; 116  : 	raw = (fixed *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_frst.h

; 71   : ASSERT (en != first_child);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _first_child$[ebp]
  00018	75 18		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	83 e8 29	 sub	 eax, 41			; 00000029H
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@
  0002d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00032	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00035	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00038	83 7d b8 26	 cmp	 DWORD PTR tv70[ebp], 38	; 00000026H
  0003c	74 08		 je	 SHORT $LN5@set_local_
  0003e	83 7d b8 27	 cmp	 DWORD PTR tv70[ebp], 39	; 00000027H
  00042	74 10		 je	 SHORT $LN6@set_local_
  00044	eb 19		 jmp	 SHORT $LN7@set_local_
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_ROOT
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_root.first_child = first_child;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_AIR_REGISTRY_ROOT
; 91   : 
; 92   : 	case LIST_TYPE_AIR_REGISTRY:
; 93   : 	{
; 94   : 		raw->air_registry_root.first_child = first_child;
; 95   : 
; 96   : 		break;
; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_ASSIGNED_TASK_ROOT
; 104  : 
; 105  : 	case LIST_TYPE_ASSIGNED_TASK:
; 106  : 	{
; 107  : 		raw->assigned_task_root.first_child = first_child;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_BUILDING_GROUP_ROOT
; 117  : 
; 118  : 	case LIST_TYPE_BUILDING_GROUP:
; 119  : 	{
; 120  : 		raw->building_group_root.first_child = first_child;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_ROOT
; 130  : 
; 131  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 132  : 	{
; 133  : 		raw->campaign_objective_root.first_child = first_child;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_CARGO_ROOT
; 143  : 
; 144  : 	case LIST_TYPE_CARGO:
; 145  : 	{
; 146  : 		raw->cargo_root.first_child = first_child;
; 147  : 
; 148  : 		break;
; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CITY_BUILDING_ROOT
; 156  : 
; 157  : 	case LIST_TYPE_CITY_BUILDING:
; 158  : 	{
; 159  : 		raw->city_building_root.first_child = first_child;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 	#ifdef LIST_TYPE_COMPLETED_TASK_ROOT
; 169  : 
; 170  : 	case LIST_TYPE_COMPLETED_TASK:
; 171  : 	{
; 172  : 		raw->completed_task_root.first_child = first_child;
; 173  : 
; 174  : 		break;
; 175  : 	}
; 176  : 
; 177  : 	#endif
; 178  : 
; 179  : 	////////////////////////////////////////
; 180  : 
; 181  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_ROOT
; 182  : 
; 183  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 184  : 	{
; 185  : 		raw->current_waypoint_root.first_child = first_child;
; 186  : 
; 187  : 		break;
; 188  : 	}
; 189  : 
; 190  : 	#endif
; 191  : 
; 192  : 	////////////////////////////////////////
; 193  : 
; 194  : 	// Jabbewock 031107 Designated targets
; 195  : 		
; 196  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_ROOT
; 197  : 
; 198  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 199  : 	{
; 200  : 		raw->designated_target_root.first_child = first_child;
; 201  : 
; 202  : 		break;
; 203  : 	}
; 204  : 
; 205  : 	#endif
; 206  : 	
; 207  : 	// Jabbewock 031107 ends
; 208  : 
; 209  : 	#ifdef LIST_TYPE_DIVISION_ROOT
; 210  : 
; 211  : 	case LIST_TYPE_DIVISION:
; 212  : 	{
; 213  : 		raw->division_root.first_child = first_child;
; 214  : 
; 215  : 		break;
; 216  : 	}
; 217  : 
; 218  : 	#endif
; 219  : 
; 220  : 	////////////////////////////////////////
; 221  : 
; 222  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_ROOT
; 223  : 
; 224  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 225  : 	{
; 226  : 		raw->division_headquarters_root.first_child = first_child;
; 227  : 
; 228  : 		break;
; 229  : 	}
; 230  : 
; 231  : 	#endif
; 232  : 
; 233  : 	////////////////////////////////////////
; 234  : 
; 235  : 	#ifdef LIST_TYPE_FOLLOWER_ROOT
; 236  : 
; 237  : 	case LIST_TYPE_FOLLOWER:
; 238  : 	{
; 239  : 		raw->follower_root.first_child = first_child;
; 240  : 
; 241  : 		break;
; 242  : 	}
; 243  : 
; 244  : 	#endif
; 245  : 
; 246  : 	////////////////////////////////////////
; 247  : 
; 248  : 	#ifdef LIST_TYPE_FORCE_ROOT
; 249  : 
; 250  : 	case LIST_TYPE_FORCE:
; 251  : 	{
; 252  : 		raw->force_root.first_child = first_child;
; 253  : 
; 254  : 		break;
; 255  : 	}
; 256  : 
; 257  : 	#endif
; 258  : 
; 259  : 	////////////////////////////////////////
; 260  : 
; 261  : 	#ifdef LIST_TYPE_GROUND_REGISTRY_ROOT
; 262  : 
; 263  : 	case LIST_TYPE_GROUND_REGISTRY:
; 264  : 	{
; 265  : 		raw->ground_registry_root.first_child = first_child;
; 266  : 
; 267  : 		break;
; 268  : 	}
; 269  : 
; 270  : 	#endif
; 271  : 
; 272  : 	////////////////////////////////////////
; 273  : 
; 274  : 	#ifdef LIST_TYPE_GUIDE_ROOT
; 275  : 
; 276  : 	case LIST_TYPE_GUIDE:
; 277  : 	{
; 278  : 		raw->guide_root.first_child = first_child;
; 279  : 
; 280  : 		break;
; 281  : 	}
; 282  : 
; 283  : 	#endif
; 284  : 
; 285  : 	////////////////////////////////////////
; 286  : 
; 287  : 	#ifdef LIST_TYPE_GUIDE_STACK_ROOT
; 288  : 
; 289  : 	case LIST_TYPE_GUIDE_STACK:
; 290  : 	{
; 291  : 		raw->guide_stack_root.first_child = first_child;
; 292  : 
; 293  : 		break;
; 294  : 	}
; 295  : 
; 296  : 	#endif
; 297  : 
; 298  : 	////////////////////////////////////////
; 299  : 
; 300  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_ROOT
; 301  : 
; 302  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 303  : 	{
; 304  : 		raw->gunship_target_root.first_child = first_child;
; 305  : 
; 306  : 		break;
; 307  : 	}
; 308  : 
; 309  : 	#endif
; 310  : 	
; 311  : 	////////////////////////////////////////
; 312  : 
; 313  : 	#ifdef LIST_TYPE_INDEPENDENT_GROUP_ROOT
; 314  : 
; 315  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 316  : 	{
; 317  : 		raw->independent_group_root.first_child = first_child;
; 318  : 
; 319  : 		break;
; 320  : 	}
; 321  : 
; 322  : 	#endif
; 323  : 
; 324  : 	////////////////////////////////////////
; 325  : 
; 326  : 	#ifdef LIST_TYPE_HIERARCHY_ROOT
; 327  : 
; 328  : 	case LIST_TYPE_HIERARCHY:
; 329  : 	{
; 330  : 		raw->hierarchy_root.first_child = first_child;
; 331  : 
; 332  : 		break;
; 333  : 	}
; 334  : 
; 335  : 	#endif
; 336  : 
; 337  : 	////////////////////////////////////////
; 338  : 
; 339  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_ROOT
; 340  : 
; 341  : 	case LIST_TYPE_KEYSITE_FORCE:
; 342  : 	{
; 343  : 		raw->keysite_force_root.first_child = first_child;
; 344  : 
; 345  : 		break;
; 346  : 	}
; 347  : 
; 348  : 	#endif
; 349  : 
; 350  : 	////////////////////////////////////////
; 351  : 
; 352  : 	#ifdef LIST_TYPE_KEYSITE_GROUP_ROOT
; 353  : 
; 354  : 	case LIST_TYPE_KEYSITE_GROUP:
; 355  : 	{
; 356  : 		raw->keysite_group_root.first_child = first_child;
; 357  : 
; 358  : 		break;
; 359  : 	}
; 360  : 
; 361  : 	#endif
; 362  : 
; 363  : 	////////////////////////////////////////
; 364  : 
; 365  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_ROOT
; 366  : 
; 367  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 368  : 	{
; 369  : 		raw->launched_weapon_root.first_child = first_child;
; 370  : 
; 371  : 		break;
; 372  : 	}
; 373  : 
; 374  : 	#endif
; 375  : 
; 376  : 	////////////////////////////////////////
; 377  : 
; 378  : 	#ifdef LIST_TYPE_LANDING_SITE_ROOT
; 379  : 
; 380  : 	case LIST_TYPE_LANDING_SITE:
; 381  : 	{
; 382  : 		raw->landing_site_root.first_child = first_child;
; 383  : 
; 384  : 		break;
; 385  : 	}
; 386  : 
; 387  : 	#endif
; 388  : 
; 389  : 	////////////////////////////////////////
; 390  : 
; 391  : 	#ifdef LIST_TYPE_MEMBER_ROOT
; 392  : 
; 393  : 	case LIST_TYPE_MEMBER:
; 394  : 	{
; 395  : 		raw->member_root.first_child = first_child;
; 396  : 
; 397  : 		break;
; 398  : 	}
; 399  : 
; 400  : 	#endif
; 401  : 
; 402  : 	////////////////////////////////////////
; 403  : 
; 404  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_ROOT
; 405  : 
; 406  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 407  : 	{
; 408  : 		raw->movement_dependent_root.first_child = first_child;
; 409  : 
; 410  : 		break;
; 411  : 	}
; 412  : 
; 413  : 	#endif
; 414  : 
; 415  : 	////////////////////////////////////////
; 416  : 
; 417  : 	#ifdef LIST_TYPE_PADLOCK_ROOT
; 418  : 
; 419  : 	case LIST_TYPE_PADLOCK:
; 420  : 	{
; 421  : 		raw->padlock_root.first_child = first_child;
; 422  : 
; 423  : 		break;
; 424  : 	}
; 425  : 
; 426  : 	#endif
; 427  : 
; 428  : 	////////////////////////////////////////
; 429  : 
; 430  : 	#ifdef LIST_TYPE_PILOT_ROOT
; 431  : 
; 432  : 	case LIST_TYPE_PILOT:
; 433  : 	{
; 434  : 		raw->pilot_root.first_child = first_child;
; 435  : 
; 436  : 		break;
; 437  : 	}
; 438  : 
; 439  : 	#endif
; 440  : 
; 441  : 	////////////////////////////////////////
; 442  : 
; 443  : 	#ifdef LIST_TYPE_PILOT_LOCK_ROOT
; 444  : 
; 445  : 	case LIST_TYPE_PILOT_LOCK:
; 446  : 	{
; 447  : 		raw->pilot_lock_root.first_child = first_child;
; 448  : 
; 449  : 		break;
; 450  : 	}
; 451  : 
; 452  : 	#endif
; 453  : 
; 454  : 	////////////////////////////////////////
; 455  : 
; 456  : 	#ifdef LIST_TYPE_PLAYER_TASK_ROOT
; 457  : 
; 458  : 	case LIST_TYPE_PLAYER_TASK:
; 459  : 	{
; 460  : 		raw->player_task_root.first_child = first_child;
; 461  : 
; 462  : 		break;
; 463  : 	}
; 464  : 
; 465  : 	#endif
; 466  : 
; 467  : 	////////////////////////////////////////
; 468  : 
; 469  : 	#ifdef LIST_TYPE_REGEN_ROOT
; 470  : 
; 471  : 	case LIST_TYPE_REGEN:
; 472  : 	{
; 473  : 		raw->regen_root.first_child = first_child;
; 474  : 
; 475  : 		break;
; 476  : 	}
; 477  : 
; 478  : 	#endif
; 479  : 
; 480  : 	////////////////////////////////////////
; 481  : 
; 482  : 	#ifdef LIST_TYPE_SEA_REGISTRY_ROOT
; 483  : 
; 484  : 	case LIST_TYPE_SEA_REGISTRY:
; 485  : 	{
; 486  : 		raw->sea_registry_root.first_child = first_child;
; 487  : 
; 488  : 		break;
; 489  : 	}
; 490  : 
; 491  : 	#endif
; 492  : 
; 493  : 	////////////////////////////////////////
; 494  : 
; 495  : 	#ifdef LIST_TYPE_SECTOR_ROOT
; 496  : 
; 497  : 	case LIST_TYPE_SECTOR:
; 498  : 	{
; 499  : 		raw->sector_root.first_child = first_child;
; 500  : 
; 501  : 		break;
; 502  : 	}
; 503  : 
; 504  : 	#endif
; 505  : 
; 506  : 	////////////////////////////////////////
; 507  : 
; 508  : 	#ifdef LIST_TYPE_SECTOR_TASK_ROOT
; 509  : 
; 510  : 	case LIST_TYPE_SECTOR_TASK:
; 511  : 	{
; 512  : 		raw->sector_task_root.first_child = first_child;
; 513  : 
; 514  : 		break;
; 515  : 	}
; 516  : 
; 517  : 	#endif
; 518  : 
; 519  : 	////////////////////////////////////////
; 520  : 
; 521  : 	#ifdef LIST_TYPE_SEGMENT_ROOT
; 522  : 
; 523  : 	case LIST_TYPE_SEGMENT:
; 524  : 	{
; 525  : 		raw->segment_root.first_child = first_child;
; 526  : 
; 527  : 		break;
; 528  : 	}
; 529  : 
; 530  : 	#endif
; 531  : 
; 532  : 	////////////////////////////////////////
; 533  : 
; 534  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_ROOT
; 535  : 
; 536  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 537  : 	{
; 538  : 		raw->special_effect_root.first_child = first_child;
; 539  : 
; 540  : 		break;
; 541  : 	}
; 542  : 
; 543  : 	#endif
; 544  : 
; 545  : 	////////////////////////////////////////
; 546  : 
; 547  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_ROOT
; 548  : 
; 549  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 550  : 	{
; 551  : 		raw->takeoff_queue_root.first_child = first_child;
; 552  : 
; 553  : 		break;
; 554  : 	}
; 555  : 
; 556  : 	#endif
; 557  : 
; 558  : 	////////////////////////////////////////
; 559  : 
; 560  : 	#ifdef LIST_TYPE_TARGET_ROOT
; 561  : 
; 562  : 	case LIST_TYPE_TARGET:
; 563  : 	{
; 564  : 		raw->target_root.first_child = first_child;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00049	8b 4d 10	 mov	 ecx, DWORD PTR _first_child$[ebp]
  0004c	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 565  : 
; 566  : 		break;

  0004f	e9 83 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 567  : 	}
; 568  : 
; 569  : 	#endif
; 570  : 
; 571  : 	////////////////////////////////////////
; 572  : 
; 573  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_ROOT
; 574  : 
; 575  : 	case LIST_TYPE_TASK_DEPENDENT:
; 576  : 	{
; 577  : 		raw->task_dependent_root.first_child = first_child;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _first_child$[ebp]
  0005a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 578  : 
; 579  : 		break;

  0005d	eb 78		 jmp	 SHORT $LN1@set_local_
$LN7@set_local_:

; 580  : 	}
; 581  : 
; 582  : 	#endif
; 583  : 
; 584  : 	////////////////////////////////////////
; 585  : 
; 586  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_ROOT
; 587  : 
; 588  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 589  : 	{
; 590  : 		raw->unassigned_task_root.first_child = first_child;
; 591  : 
; 592  : 		break;
; 593  : 	}
; 594  : 
; 595  : 	#endif
; 596  : 
; 597  : 	////////////////////////////////////////
; 598  : 
; 599  : 	#ifdef LIST_TYPE_UPDATE_ROOT
; 600  : 
; 601  : 	case LIST_TYPE_UPDATE:
; 602  : 	{
; 603  : 		raw->update_root.first_child = first_child;
; 604  : 
; 605  : 		break;
; 606  : 	}
; 607  : 
; 608  : 	#endif
; 609  : 
; 610  : 	////////////////////////////////////////
; 611  : 
; 612  : 	#ifdef LIST_TYPE_VIEW_ROOT
; 613  : 
; 614  : 	case LIST_TYPE_VIEW:
; 615  : 	{
; 616  : 		raw->view_root.first_child = first_child;
; 617  : 
; 618  : 		break;
; 619  : 	}
; 620  : 
; 621  : 	#endif
; 622  : 
; 623  : 	////////////////////////////////////////
; 624  : 
; 625  : 	#ifdef LIST_TYPE_VIEW_WEAPON_ROOT
; 626  : 
; 627  : 	case LIST_TYPE_VIEW_WEAPON:
; 628  : 	{
; 629  : 		raw->view_weapon_root.first_child = first_child;
; 630  : 
; 631  : 		break;
; 632  : 	}
; 633  : 
; 634  : 	#endif
; 635  : 
; 636  : 	////////////////////////////////////////
; 637  : 
; 638  : 	#ifdef LIST_TYPE_WAYPOINT_ROOT
; 639  : 
; 640  : 	case LIST_TYPE_WAYPOINT:
; 641  : 	{
; 642  : 		raw->waypoint_root.first_child = first_child;
; 643  : 
; 644  : 		break;
; 645  : 	}
; 646  : 
; 647  : 	#endif
; 648  : 
; 649  : 	////////////////////////////////////////
; 650  : 
; 651  : 	default:
; 652  : 	{
; 653  : 		debug_fatal_invalid_list_type (en, type);

  0005f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00063	74 0a		 je	 SHORT $LN9@set_local_
  00065	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	89 4d b8	 mov	 DWORD PTR tv91[ebp], ecx
  0006d	eb 24		 jmp	 SHORT $LN10@set_local_
$LN9@set_local_:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  00075	81 c2 1d 02 00
	00		 add	 edx, 541		; 0000021dH
  0007b	52		 push	 edx
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN10@set_local_:
  00093	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  00099	81 c1 1d 02 00
	00		 add	 ecx, 541		; 0000021dH
  0009f	51		 push	 ecx
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a5	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000a8	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000af	50		 push	 eax
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b3	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000b9	c1 f9 04	 sar	 ecx, 4
  000bc	51		 push	 ecx
  000bd	6b 55 b8 0c	 imul	 edx, DWORD PTR tv91[ebp], 12
  000c1	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000c7	50		 push	 eax
  000c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000ce	51		 push	 ecx
  000cf	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000d4	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 119  : }

  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 0c 00	 ret	 12			; 0000000cH
?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP ; set_local_first_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\fn_list.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c
;	COMDAT ?overload_fixed_list_functions@@YGXW4ENTITY_TYPES@@@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_fixed_list_functions@@YGXW4ENTITY_TYPES@@@Z PROC ; overload_fixed_list_functions, COMDAT

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\fn_list.h

; 337  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= set_local_parent;

  00009	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00010	b9 04 00 00 00	 mov	 ecx, 4
  00015	6b d1 0a	 imul	 edx, ecx, 10
  00018	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 338  : 
; 339  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= get_local_parent;

  00023	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  0002a	b9 04 00 00 00	 mov	 ecx, 4
  0002f	6b d1 0a	 imul	 edx, ecx, 10
  00032	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 340  : 
; 341  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= set_local_child_succ;

  0003d	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00044	b9 04 00 00 00	 mov	 ecx, 4
  00049	6b d1 0a	 imul	 edx, ecx, 10
  0004c	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 342  : 
; 343  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= get_local_child_succ;

  00057	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  0005e	b9 04 00 00 00	 mov	 ecx, 4
  00063	6b d1 0a	 imul	 edx, ecx, 10
  00066	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 344  : 
; 345  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= set_local_child_pred;

  00071	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00078	b9 04 00 00 00	 mov	 ecx, 4
  0007d	6b d1 0a	 imul	 edx, ecx, 10
  00080	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 346  : 
; 347  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= get_local_child_pred;

  0008b	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00092	b9 04 00 00 00	 mov	 ecx, 4
  00097	6b d1 0a	 imul	 edx, ecx, 10
  0009a	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 348  : 
; 349  : 	#endif
; 350  : 	// Jabberwock 031007 ends
; 351  : 	
; 352  : 	////////////////////////////////////////
; 353  : 	//
; 354  : 	// LIST_TYPE_DIVISION
; 355  : 	//
; 356  : 	////////////////////////////////////////
; 357  : 
; 358  : 	#ifdef LIST_TYPE_DIVISION_ROOT
; 359  : 
; 360  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION]	= set_local_first_child;
; 361  : 
; 362  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION]	= get_local_first_child;
; 363  : 
; 364  : 	#endif
; 365  : 
; 366  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 367  : 
; 368  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION]	= set_local_parent;
; 369  : 
; 370  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION]	= get_local_parent;
; 371  : 
; 372  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION]	= set_local_child_succ;
; 373  : 
; 374  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION]	= get_local_child_succ;
; 375  : 
; 376  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION]	= set_local_child_pred;
; 377  : 
; 378  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION]	= get_local_child_pred;
; 379  : 
; 380  : 	#endif
; 381  : 
; 382  : 	////////////////////////////////////////
; 383  : 	//
; 384  : 	// LIST_TYPE_DIVISION_HEADQUARTERS
; 385  : 	//
; 386  : 	////////////////////////////////////////
; 387  : 
; 388  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_ROOT
; 389  : 
; 390  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_first_child;
; 391  : 
; 392  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_first_child;
; 393  : 
; 394  : 	#endif
; 395  : 
; 396  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 397  : 
; 398  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_parent;
; 399  : 
; 400  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_parent;
; 401  : 
; 402  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_child_succ;
; 403  : 
; 404  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_child_succ;
; 405  : 
; 406  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_child_pred;
; 407  : 
; 408  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_child_pred;
; 409  : 
; 410  : 	#endif
; 411  : 
; 412  : 	////////////////////////////////////////
; 413  : 	//
; 414  : 	// LIST_TYPE_FOLLOWER
; 415  : 	//
; 416  : 	////////////////////////////////////////
; 417  : 
; 418  : 	#ifdef LIST_TYPE_FOLLOWER_ROOT
; 419  : 
; 420  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_first_child;
; 421  : 
; 422  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_first_child;
; 423  : 
; 424  : 	#endif
; 425  : 
; 426  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 427  : 
; 428  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_parent;
; 429  : 
; 430  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_parent;
; 431  : 
; 432  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_child_succ;
; 433  : 
; 434  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_child_succ;
; 435  : 
; 436  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_child_pred;
; 437  : 
; 438  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_child_pred;
; 439  : 
; 440  : 	#endif
; 441  : 
; 442  : 	////////////////////////////////////////
; 443  : 	//
; 444  : 	// LIST_TYPE_FORCE
; 445  : 	//
; 446  : 	////////////////////////////////////////
; 447  : 
; 448  : 	#ifdef LIST_TYPE_FORCE_ROOT
; 449  : 
; 450  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_FORCE]	= set_local_first_child;
; 451  : 
; 452  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_FORCE]	= get_local_first_child;
; 453  : 
; 454  : 	#endif
; 455  : 
; 456  : 	#ifdef LIST_TYPE_FORCE_LINK
; 457  : 
; 458  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_FORCE]	= set_local_parent;
; 459  : 
; 460  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_FORCE]	= get_local_parent;
; 461  : 
; 462  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_FORCE]	= set_local_child_succ;
; 463  : 
; 464  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_FORCE]	= get_local_child_succ;
; 465  : 
; 466  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_FORCE]	= set_local_child_pred;
; 467  : 
; 468  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_FORCE]	= get_local_child_pred;
; 469  : 
; 470  : 	#endif
; 471  : 
; 472  : 	////////////////////////////////////////
; 473  : 	//
; 474  : 	// LIST_TYPE_GROUND_REGISTRY
; 475  : 	//
; 476  : 	////////////////////////////////////////
; 477  : 
; 478  : 	#ifdef LIST_TYPE_GROUND_REGISTRY_ROOT
; 479  : 
; 480  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_first_child;
; 481  : 
; 482  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_first_child;
; 483  : 
; 484  : 	#endif
; 485  : 
; 486  : 	////////////////////////////////////////
; 487  : 	//
; 488  : 	// LIST_TYPE_GUIDE
; 489  : 	//
; 490  : 	////////////////////////////////////////
; 491  : 
; 492  : 	#ifdef LIST_TYPE_GUIDE_ROOT
; 493  : 
; 494  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE]	= set_local_first_child;
; 495  : 
; 496  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE]	= get_local_first_child;
; 497  : 
; 498  : 	#endif
; 499  : 
; 500  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 501  : 
; 502  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE]	= set_local_parent;
; 503  : 
; 504  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE]	= get_local_parent;
; 505  : 
; 506  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE]	= set_local_child_succ;
; 507  : 
; 508  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE]	= get_local_child_succ;
; 509  : 
; 510  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE]	= set_local_child_pred;
; 511  : 
; 512  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE]	= get_local_child_pred;
; 513  : 
; 514  : 	#endif
; 515  : 
; 516  : 	////////////////////////////////////////
; 517  : 	//
; 518  : 	// LIST_TYPE_GUIDE_STACK
; 519  : 	//
; 520  : 	////////////////////////////////////////
; 521  : 
; 522  : 	#ifdef LIST_TYPE_GUIDE_STACK_ROOT
; 523  : 
; 524  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_first_child;
; 525  : 
; 526  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_first_child;
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 531  : 
; 532  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_parent;
; 533  : 
; 534  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_parent;
; 535  : 
; 536  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_child_succ;
; 537  : 
; 538  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_child_succ;
; 539  : 
; 540  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_child_pred;
; 541  : 
; 542  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_child_pred;
; 543  : 
; 544  : 	#endif
; 545  : 
; 546  : 	////////////////////////////////////////
; 547  : 	//
; 548  : 	// LIST_TYPE_GUNSHIP_TARGET
; 549  : 	//
; 550  : 	////////////////////////////////////////
; 551  : 
; 552  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_ROOT
; 553  : 
; 554  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_first_child;
; 555  : 
; 556  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_first_child;
; 557  : 
; 558  : 	#endif
; 559  : 
; 560  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 561  : 
; 562  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_parent;

  000a5	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  000ac	b9 04 00 00 00	 mov	 ecx, 4
  000b1	6b d1 12	 imul	 edx, ecx, 18
  000b4	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 563  : 
; 564  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_parent;

  000bf	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  000c6	b9 04 00 00 00	 mov	 ecx, 4
  000cb	6b d1 12	 imul	 edx, ecx, 18
  000ce	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 565  : 
; 566  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_child_succ;

  000d9	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  000e0	b9 04 00 00 00	 mov	 ecx, 4
  000e5	6b d1 12	 imul	 edx, ecx, 18
  000e8	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 567  : 
; 568  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_child_succ;

  000f3	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  000fa	b9 04 00 00 00	 mov	 ecx, 4
  000ff	6b d1 12	 imul	 edx, ecx, 18
  00102	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 569  : 
; 570  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_child_pred;

  0010d	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00114	b9 04 00 00 00	 mov	 ecx, 4
  00119	6b d1 12	 imul	 edx, ecx, 18
  0011c	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 571  : 
; 572  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_child_pred;

  00127	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  0012e	b9 04 00 00 00	 mov	 ecx, 4
  00133	6b d1 12	 imul	 edx, ecx, 18
  00136	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 573  : 
; 574  : 	#endif
; 575  : 
; 576  : 	////////////////////////////////////////
; 577  : 	//
; 578  : 	// LIST_TYPE_HIERARCHY
; 579  : 	//
; 580  : 	////////////////////////////////////////
; 581  : 
; 582  : 	#ifdef LIST_TYPE_HIERARCHY_ROOT
; 583  : 
; 584  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_first_child;
; 585  : 
; 586  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_first_child;
; 587  : 
; 588  : 	#endif
; 589  : 
; 590  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 591  : 
; 592  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_parent;
; 593  : 
; 594  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_parent;
; 595  : 
; 596  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_child_succ;
; 597  : 
; 598  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_child_succ;
; 599  : 
; 600  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_child_pred;
; 601  : 
; 602  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_child_pred;
; 603  : 
; 604  : 	#endif
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : 	//
; 608  : 	// LIST_TYPE_INDEPENDENT_GROUP
; 609  : 	//
; 610  : 	////////////////////////////////////////
; 611  : 
; 612  : 	#ifdef LIST_TYPE_INDEPENDENT_GROUP_ROOT
; 613  : 
; 614  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_first_child;
; 615  : 
; 616  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_first_child;
; 617  : 
; 618  : 	#endif
; 619  : 
; 620  : 	#ifdef LIST_TYPE_GROUP_LINK
; 621  : 
; 622  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_parent;
; 623  : 
; 624  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_parent;
; 625  : 
; 626  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_child_succ;
; 627  : 
; 628  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_child_succ;
; 629  : 
; 630  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_child_pred;
; 631  : 
; 632  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_child_pred;
; 633  : 
; 634  : 	#endif
; 635  : 
; 636  : 	////////////////////////////////////////
; 637  : 	//
; 638  : 	// LIST_TYPE_KEYSITE_FORCE
; 639  : 	//
; 640  : 	////////////////////////////////////////
; 641  : 
; 642  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_ROOT
; 643  : 
; 644  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_first_child;
; 645  : 
; 646  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_first_child;
; 647  : 
; 648  : 	#endif
; 649  : 
; 650  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 651  : 
; 652  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_parent;
; 653  : 
; 654  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_parent;
; 655  : 
; 656  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_child_succ;
; 657  : 
; 658  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_child_succ;
; 659  : 
; 660  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_child_pred;
; 661  : 
; 662  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_child_pred;
; 663  : 
; 664  : 	#endif
; 665  : 
; 666  : 	////////////////////////////////////////
; 667  : 	//
; 668  : 	// LIST_TYPE_KEYSITE_GROUP
; 669  : 	//
; 670  : 	////////////////////////////////////////
; 671  : 
; 672  : 	#ifdef LIST_TYPE_KEYSITE_GROUP_ROOT
; 673  : 
; 674  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_first_child;
; 675  : 
; 676  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_first_child;
; 677  : 
; 678  : 	#endif
; 679  : 
; 680  : 	#ifdef LIST_TYPE_GROUP_LINK
; 681  : 
; 682  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_parent;
; 683  : 
; 684  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_parent;
; 685  : 
; 686  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_child_succ;
; 687  : 
; 688  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_child_succ;
; 689  : 
; 690  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_child_pred;
; 691  : 
; 692  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_child_pred;
; 693  : 
; 694  : 	#endif
; 695  : 
; 696  : 	////////////////////////////////////////
; 697  : 	//
; 698  : 	// LIST_TYPE_LAUNCHED_WEAPON
; 699  : 	//
; 700  : 	////////////////////////////////////////
; 701  : 
; 702  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_ROOT
; 703  : 
; 704  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_first_child;
; 705  : 
; 706  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_first_child;
; 707  : 
; 708  : 	#endif
; 709  : 
; 710  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 711  : 
; 712  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_parent;
; 713  : 
; 714  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_parent;
; 715  : 
; 716  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_child_succ;
; 717  : 
; 718  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_child_succ;
; 719  : 
; 720  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_child_pred;
; 721  : 
; 722  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_child_pred;
; 723  : 
; 724  : 	#endif
; 725  : 
; 726  : 	////////////////////////////////////////
; 727  : 	//
; 728  : 	// LIST_TYPE_LANDING_SITE
; 729  : 	//
; 730  : 	////////////////////////////////////////
; 731  : 
; 732  : 	#ifdef LIST_TYPE_LANDING_SITE_ROOT
; 733  : 
; 734  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_first_child;
; 735  : 
; 736  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_first_child;
; 737  : 
; 738  : 	#endif
; 739  : 
; 740  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 741  : 
; 742  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_parent;
; 743  : 
; 744  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_parent;
; 745  : 
; 746  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_child_succ;
; 747  : 
; 748  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_child_succ;
; 749  : 
; 750  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_child_pred;
; 751  : 
; 752  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_child_pred;
; 753  : 
; 754  : 	#endif
; 755  : 
; 756  : 	////////////////////////////////////////
; 757  : 	//
; 758  : 	// LIST_TYPE_MEMBER
; 759  : 	//
; 760  : 	////////////////////////////////////////
; 761  : 
; 762  : 	#ifdef LIST_TYPE_MEMBER_ROOT
; 763  : 
; 764  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_MEMBER]	= set_local_first_child;
; 765  : 
; 766  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_MEMBER]	= get_local_first_child;
; 767  : 
; 768  : 	#endif
; 769  : 
; 770  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 771  : 
; 772  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_MEMBER]	= set_local_parent;
; 773  : 
; 774  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_MEMBER]	= get_local_parent;
; 775  : 
; 776  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_MEMBER]	= set_local_child_succ;
; 777  : 
; 778  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_MEMBER]	= get_local_child_succ;
; 779  : 
; 780  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_MEMBER]	= set_local_child_pred;
; 781  : 
; 782  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_MEMBER]	= get_local_child_pred;
; 783  : 
; 784  : 	#endif
; 785  : 
; 786  : 	////////////////////////////////////////
; 787  : 	//
; 788  : 	// LIST_TYPE_MOVEMENT_DEPENDENT
; 789  : 	//
; 790  : 	////////////////////////////////////////
; 791  : 
; 792  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_ROOT
; 793  : 
; 794  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_first_child;
; 795  : 
; 796  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_first_child;
; 797  : 
; 798  : 	#endif
; 799  : 
; 800  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 801  : 
; 802  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_parent;
; 803  : 
; 804  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_parent;
; 805  : 
; 806  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_child_succ;
; 807  : 
; 808  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_child_succ;
; 809  : 
; 810  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_child_pred;
; 811  : 
; 812  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_child_pred;
; 813  : 
; 814  : 	#endif
; 815  : 
; 816  : 	////////////////////////////////////////
; 817  : 	//
; 818  : 	// LIST_TYPE_PADLOCK
; 819  : 	//
; 820  : 	////////////////////////////////////////
; 821  : 
; 822  : 	#ifdef LIST_TYPE_PADLOCK_ROOT
; 823  : 
; 824  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_first_child;
; 825  : 
; 826  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_first_child;
; 827  : 
; 828  : 	#endif
; 829  : 
; 830  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 831  : 
; 832  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_parent;
; 833  : 
; 834  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_parent;
; 835  : 
; 836  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_child_succ;
; 837  : 
; 838  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_child_succ;
; 839  : 
; 840  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_child_pred;
; 841  : 
; 842  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_child_pred;
; 843  : 
; 844  : 	#endif
; 845  : 
; 846  : 	////////////////////////////////////////
; 847  : 	//
; 848  : 	// LIST_TYPE_PILOT
; 849  : 	//
; 850  : 	////////////////////////////////////////
; 851  : 
; 852  : 	#ifdef LIST_TYPE_PILOT_ROOT
; 853  : 
; 854  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT]	= set_local_first_child;
; 855  : 
; 856  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT]	= get_local_first_child;
; 857  : 
; 858  : 	#endif
; 859  : 
; 860  : 	#ifdef LIST_TYPE_PILOT_LINK
; 861  : 
; 862  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT]	= set_local_parent;
; 863  : 
; 864  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT]	= get_local_parent;
; 865  : 
; 866  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT]	= set_local_child_succ;
; 867  : 
; 868  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT]	= get_local_child_succ;
; 869  : 
; 870  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT]	= set_local_child_pred;
; 871  : 
; 872  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT]	= get_local_child_pred;
; 873  : 
; 874  : 	#endif
; 875  : 
; 876  : 	////////////////////////////////////////
; 877  : 	//
; 878  : 	// LIST_TYPE_PILOT_LOCK
; 879  : 	//
; 880  : 	////////////////////////////////////////
; 881  : 
; 882  : 	#ifdef LIST_TYPE_PILOT_LOCK_ROOT
; 883  : 
; 884  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_first_child;
; 885  : 
; 886  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_first_child;
; 887  : 
; 888  : 	#endif
; 889  : 
; 890  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 891  : 
; 892  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_parent;
; 893  : 
; 894  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_parent;
; 895  : 
; 896  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_child_succ;
; 897  : 
; 898  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_child_succ;
; 899  : 
; 900  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_child_pred;
; 901  : 
; 902  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_child_pred;
; 903  : 
; 904  : 	#endif
; 905  : 
; 906  : 	////////////////////////////////////////
; 907  : 	//
; 908  : 	// LIST_TYPE_PLAYER_TASK
; 909  : 	//
; 910  : 	////////////////////////////////////////
; 911  : 
; 912  : 	#ifdef LIST_TYPE_PLAYER_TASK_ROOT
; 913  : 
; 914  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_first_child;
; 915  : 
; 916  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_first_child;
; 917  : 
; 918  : 	#endif
; 919  : 
; 920  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 921  : 
; 922  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_parent;
; 923  : 
; 924  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_parent;
; 925  : 
; 926  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_child_succ;
; 927  : 
; 928  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_child_succ;
; 929  : 
; 930  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_child_pred;
; 931  : 
; 932  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_child_pred;
; 933  : 
; 934  : 	#endif
; 935  : 
; 936  : 	////////////////////////////////////////
; 937  : 	//
; 938  : 	// LIST_TYPE_REGEN
; 939  : 	//
; 940  : 	////////////////////////////////////////
; 941  : 
; 942  : 	#ifdef LIST_TYPE_REGEN_ROOT
; 943  : 
; 944  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_REGEN]	= set_local_first_child;
; 945  : 
; 946  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_REGEN]	= get_local_first_child;
; 947  : 
; 948  : 	#endif
; 949  : 
; 950  : 	#ifdef LIST_TYPE_REGEN_LINK
; 951  : 
; 952  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_REGEN]	= set_local_parent;
; 953  : 
; 954  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_REGEN]	= get_local_parent;
; 955  : 
; 956  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_REGEN]	= set_local_child_succ;
; 957  : 
; 958  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_REGEN]	= get_local_child_succ;
; 959  : 
; 960  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_REGEN]	= set_local_child_pred;
; 961  : 
; 962  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_REGEN]	= get_local_child_pred;
; 963  : 
; 964  : 	#endif
; 965  : 
; 966  : 	////////////////////////////////////////
; 967  : 	//
; 968  : 	// LIST_TYPE_REGISTRY (AIR, FREE, GROUND and SEA)
; 969  : 	//
; 970  : 	////////////////////////////////////////
; 971  : 
; 972  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 973  : 
; 974  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= set_local_parent;
; 975  : 
; 976  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= get_local_parent;
; 977  : 
; 978  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= set_local_child_succ;
; 979  : 
; 980  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= get_local_child_succ;
; 981  : 
; 982  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= set_local_child_pred;
; 983  : 
; 984  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= get_local_child_pred;
; 985  : 
; 986  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_parent;
; 987  : 
; 988  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_parent;
; 989  : 
; 990  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_child_succ;
; 991  : 
; 992  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_child_succ;
; 993  : 
; 994  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_child_pred;
; 995  : 
; 996  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_child_pred;
; 997  : 
; 998  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_parent;
; 999  : 
; 1000 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_parent;
; 1001 : 
; 1002 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_child_succ;
; 1003 : 
; 1004 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_child_succ;
; 1005 : 
; 1006 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_child_pred;
; 1007 : 
; 1008 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_child_pred;
; 1009 : 
; 1010 : 	#endif
; 1011 : 
; 1012 : 	////////////////////////////////////////
; 1013 : 	//
; 1014 : 	// LIST_TYPE_SEA_REGISTRY
; 1015 : 	//
; 1016 : 	////////////////////////////////////////
; 1017 : 
; 1018 : 	#ifdef LIST_TYPE_SEA_REGISTRY_ROOT
; 1019 : 
; 1020 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_first_child;
; 1021 : 
; 1022 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_first_child;
; 1023 : 
; 1024 : 	#endif
; 1025 : 
; 1026 : 	////////////////////////////////////////
; 1027 : 	//
; 1028 : 	// LIST_TYPE_SECTOR
; 1029 : 	//
; 1030 : 	////////////////////////////////////////
; 1031 : 
; 1032 : 	#ifdef LIST_TYPE_SECTOR_ROOT
; 1033 : 
; 1034 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR]	= set_local_first_child;
; 1035 : 
; 1036 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR]	= get_local_first_child;
; 1037 : 
; 1038 : 	#endif
; 1039 : 
; 1040 : 	#ifdef LIST_TYPE_SECTOR_LINK
; 1041 : 
; 1042 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR]	= set_local_parent;

  00141	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00148	b9 04 00 00 00	 mov	 ecx, 4
  0014d	6b d1 21	 imul	 edx, ecx, 33
  00150	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 1043 : 
; 1044 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR]	= get_local_parent;

  0015b	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00162	b9 04 00 00 00	 mov	 ecx, 4
  00167	6b d1 21	 imul	 edx, ecx, 33
  0016a	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 1045 : 
; 1046 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR]	= set_local_child_succ;

  00175	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  0017c	b9 04 00 00 00	 mov	 ecx, 4
  00181	6b d1 21	 imul	 edx, ecx, 33
  00184	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 1047 : 
; 1048 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR]	= get_local_child_succ;

  0018f	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00196	b9 04 00 00 00	 mov	 ecx, 4
  0019b	6b d1 21	 imul	 edx, ecx, 33
  0019e	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 1049 : 
; 1050 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR]	= set_local_child_pred;

  001a9	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  001b0	b9 04 00 00 00	 mov	 ecx, 4
  001b5	6b d1 21	 imul	 edx, ecx, 33
  001b8	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 1051 : 
; 1052 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR]	= get_local_child_pred;

  001c3	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  001ca	b9 04 00 00 00	 mov	 ecx, 4
  001cf	6b d1 21	 imul	 edx, ecx, 33
  001d2	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 1053 : 
; 1054 : 	#endif
; 1055 : 
; 1056 : 	////////////////////////////////////////
; 1057 : 	//
; 1058 : 	// LIST_TYPE_SECTOR_TASK
; 1059 : 	//
; 1060 : 	////////////////////////////////////////
; 1061 : 
; 1062 : 	#ifdef LIST_TYPE_SECTOR_TASK_ROOT
; 1063 : 
; 1064 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_first_child;
; 1065 : 
; 1066 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_first_child;
; 1067 : 
; 1068 : 	#endif
; 1069 : 
; 1070 : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 1071 : 
; 1072 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_parent;
; 1073 : 
; 1074 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_parent;
; 1075 : 
; 1076 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_child_succ;
; 1077 : 
; 1078 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_child_succ;
; 1079 : 
; 1080 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_child_pred;
; 1081 : 
; 1082 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_child_pred;
; 1083 : 
; 1084 : 	#endif
; 1085 : 
; 1086 : 	////////////////////////////////////////
; 1087 : 	//
; 1088 : 	// LIST_TYPE_SEGMENT
; 1089 : 	//
; 1090 : 	////////////////////////////////////////
; 1091 : 
; 1092 : 	#ifdef LIST_TYPE_SEGMENT_ROOT
; 1093 : 
; 1094 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_first_child;
; 1095 : 
; 1096 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_first_child;
; 1097 : 
; 1098 : 	#endif
; 1099 : 
; 1100 : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 1101 : 
; 1102 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_parent;
; 1103 : 
; 1104 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_parent;
; 1105 : 
; 1106 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_child_succ;
; 1107 : 
; 1108 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_child_succ;
; 1109 : 
; 1110 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_child_pred;
; 1111 : 
; 1112 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_child_pred;
; 1113 : 
; 1114 : 	#endif
; 1115 : 
; 1116 : 	////////////////////////////////////////
; 1117 : 	//
; 1118 : 	// LIST_TYPE_SPECIAL_EFFECT
; 1119 : 	//
; 1120 : 	////////////////////////////////////////
; 1121 : 
; 1122 : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_ROOT
; 1123 : 
; 1124 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_first_child;
; 1125 : 
; 1126 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_first_child;
; 1127 : 
; 1128 : 	#endif
; 1129 : 
; 1130 : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 1131 : 
; 1132 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_parent;
; 1133 : 
; 1134 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_parent;
; 1135 : 
; 1136 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_child_succ;
; 1137 : 
; 1138 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_child_succ;
; 1139 : 
; 1140 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_child_pred;
; 1141 : 
; 1142 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_child_pred;
; 1143 : 
; 1144 : 	#endif
; 1145 : 
; 1146 : 	////////////////////////////////////////
; 1147 : 	//
; 1148 : 	// LIST_TYPE_TAKEOFF_QUEUE
; 1149 : 	//
; 1150 : 	////////////////////////////////////////
; 1151 : 
; 1152 : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_ROOT
; 1153 : 
; 1154 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_first_child;
; 1155 : 
; 1156 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_first_child;
; 1157 : 
; 1158 : 	#endif
; 1159 : 
; 1160 : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 1161 : 
; 1162 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_parent;
; 1163 : 
; 1164 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_parent;
; 1165 : 
; 1166 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_child_succ;
; 1167 : 
; 1168 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_child_succ;
; 1169 : 
; 1170 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_child_pred;
; 1171 : 
; 1172 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_child_pred;
; 1173 : 
; 1174 : 	#endif
; 1175 : 
; 1176 : 	////////////////////////////////////////
; 1177 : 	//
; 1178 : 	// LIST_TYPE_TARGET
; 1179 : 	//
; 1180 : 	////////////////////////////////////////
; 1181 : 
; 1182 : 	#ifdef LIST_TYPE_TARGET_ROOT
; 1183 : 
; 1184 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_TARGET]	= set_local_first_child;

  001dd	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  001e4	b9 04 00 00 00	 mov	 ecx, 4
  001e9	6b d1 26	 imul	 edx, ecx, 38
  001ec	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_first_child

; 1185 : 
; 1186 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_TARGET]	= get_local_first_child;

  001f7	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  001fe	b9 04 00 00 00	 mov	 ecx, 4
  00203	6b d1 26	 imul	 edx, ecx, 38
  00206	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_first_child

; 1187 : 
; 1188 : 	#endif
; 1189 : 
; 1190 : 	#ifdef LIST_TYPE_TARGET_LINK
; 1191 : 
; 1192 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_TARGET]	= set_local_parent;
; 1193 : 
; 1194 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_TARGET]	= get_local_parent;
; 1195 : 
; 1196 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_TARGET]	= set_local_child_succ;
; 1197 : 
; 1198 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_TARGET]	= get_local_child_succ;
; 1199 : 
; 1200 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_TARGET]	= set_local_child_pred;
; 1201 : 
; 1202 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_TARGET]	= get_local_child_pred;
; 1203 : 
; 1204 : 	#endif
; 1205 : 
; 1206 : 	////////////////////////////////////////
; 1207 : 	//
; 1208 : 	// LIST_TYPE_TASK_DEPENDENT
; 1209 : 	//
; 1210 : 	////////////////////////////////////////
; 1211 : 
; 1212 : 	#ifdef LIST_TYPE_TASK_DEPENDENT_ROOT
; 1213 : 
; 1214 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= set_local_first_child;

  00211	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00218	b9 04 00 00 00	 mov	 ecx, 4
  0021d	6b d1 27	 imul	 edx, ecx, 39
  00220	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[eax+edx], OFFSET ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_first_child

; 1215 : 
; 1216 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= get_local_first_child;

  0022b	69 45 08 b4 00
	00 00		 imul	 eax, DWORD PTR _type$[ebp], 180
  00232	b9 04 00 00 00	 mov	 ecx, 4
  00237	6b d1 27	 imul	 edx, ecx, 39
  0023a	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+edx], OFFSET ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_first_child
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\fx_list.c

; 278  : }

  00245	5f		 pop	 edi
  00246	5e		 pop	 esi
  00247	5b		 pop	 ebx
  00248	8b e5		 mov	 esp, ebp
  0024a	5d		 pop	 ebp
  0024b	c2 04 00	 ret	 4
?overload_fixed_list_functions@@YGXW4ENTITY_TYPES@@@Z ENDP ; overload_fixed_list_functions
_TEXT	ENDS
END
