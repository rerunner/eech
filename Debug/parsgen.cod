; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ai\parser\parsgen.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?parser_keysite@@3PAUENTITY@@A			; parser_keysite
PUBLIC	?parser_force@@3PAUENTITY@@A			; parser_force
PUBLIC	?parser_landing@@3PAUENTITY@@A			; parser_landing
PUBLIC	?parser_route@@3PAUENTITY@@A			; parser_route
PUBLIC	?parser_waypoint@@3PAUENTITY@@A			; parser_waypoint
PUBLIC	?parser_member@@3PAUENTITY@@A			; parser_member
PUBLIC	?parser_object@@3PAUENTITY@@A			; parser_object
PUBLIC	?campaign_population_filename@@3PADA		; campaign_population_filename
PUBLIC	?population_placement_filename@@3PADA		; population_placement_filename
PUBLIC	?side_data_filename@@3PADA			; side_data_filename
PUBLIC	?parser_flight_dynamics_options@@3HA		; parser_flight_dynamics_options
PUBLIC	?debug_mode@@3HA				; debug_mode
PUBLIC	?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A ; campaign_trigger_head
PUBLIC	?campaign_event_head@@3PAUCAMPAIGN_EVENT_TYPE@@A ; campaign_event_head
PUBLIC	?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A ; campaign_while_loop_head
_BSS	SEGMENT
?parser_keysite@@3PAUENTITY@@A DD 01H DUP (?)		; parser_keysite
?parser_force@@3PAUENTITY@@A DD 01H DUP (?)		; parser_force
?parser_landing@@3PAUENTITY@@A DD 01H DUP (?)		; parser_landing
?parser_route@@3PAUENTITY@@A DD 01H DUP (?)		; parser_route
?parser_waypoint@@3PAUENTITY@@A DD 01H DUP (?)		; parser_waypoint
?parser_member@@3PAUENTITY@@A DD 01H DUP (?)		; parser_member
?parser_object@@3PAUENTITY@@A DD 01H DUP (?)		; parser_object
?campaign_population_filename@@3PADA DD 01H DUP (?)	; campaign_population_filename
?population_placement_filename@@3PADA DD 01H DUP (?)	; population_placement_filename
?side_data_filename@@3PADA DD 01H DUP (?)		; side_data_filename
?parser_flight_dynamics_options@@3HA DD 01H DUP (?)	; parser_flight_dynamics_options
?debug_mode@@3HA DD 01H DUP (?)				; debug_mode
?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A DD 01H DUP (?) ; campaign_trigger_head
?campaign_event_head@@3PAUCAMPAIGN_EVENT_TYPE@@A DD 01H DUP (?) ; campaign_event_head
?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A DD 01H DUP (?) ; campaign_while_loop_head
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_vsprintf
PUBLIC	_sprintf
PUBLIC	?strrchr@@YAPADQADH@Z				; strrchr
PUBLIC	?strstr@@YAPADQADQBD@Z				; strstr
PUBLIC	?initialise_parser@@YGXXZ			; initialise_parser
PUBLIC	?update_campaign_triggers@@YGXXZ		; update_campaign_triggers
PUBLIC	?parser_campaign_file@@YGHPBDPAH@Z		; parser_campaign_file
PUBLIC	?update_script_triggers@@YGHW4CAMPAIGN_TRIGGER@@@Z ; update_script_triggers
PUBLIC	?generate_key_bound_triggers@@YGXXZ		; generate_key_bound_triggers
PUBLIC	?debug_parser_message@@YGXHPAU_iobuf@@@Z	; debug_parser_message
PUBLIC	?parser_debug_log@@YAXPADZZ			; parser_debug_log
PUBLIC	?parser_debug_fatal@@YAXPADZZ			; parser_debug_fatal
PUBLIC	??$fmod@MHX@@YGNMH@Z				; fmod<float,int,void>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA ; `parser_campaign_file'::`1'::__LINE__Var
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@ ; `string'
PUBLIC	??_C@_0CE@HNJMNPNB@PARSER?3?5can?8t?5load?5file?5?$CFs?5errn@ ; `string'
PUBLIC	??_C@_0BI@COBIDFLK@result?5?$DN?$DN?5FILE_TAG_SIDE@ ; `string'
PUBLIC	??_C@_0BI@EJBKCCIG@result?5?$DN?$DN?5FILE_TAG_GOAL@ ; `string'
PUBLIC	??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@ ; `string'
PUBLIC	??_C@_0BI@DBAKNDDD@result?5?$DN?$DN?5FILE_TAG_DAYS@ ; `string'
PUBLIC	??_C@_0BJ@KNJBMOMH@result?5?$DN?$DN?5FILE_TAG_HOURS@ ; `string'
PUBLIC	??_C@_0BL@HCHGGPLM@result?5?$DN?$DN?5FILE_TAG_MINUTES@ ; `string'
PUBLIC	??_C@_0BL@HEEPGHOA@result?5?$DN?$DN?5FILE_TAG_SECONDS@ ; `string'
PUBLIC	??_C@_0BG@GDFKICIO@result?5?$DN?$DN?5FILE_TAG_IF@ ; `string'
PUBLIC	??_C@_0BJ@BPLLKIAK@result?5?$DN?$DN?5FILE_TAG_VALUE@ ; `string'
PUBLIC	??_C@_0BM@MMOIMBGI@result?5?$DN?$DN?5FILE_TAG_KEY_CODE@ ; `string'
PUBLIC	??_C@_0CA@BKPJAFKO@result?5?$DN?$DN?5FILE_TAG_KEY_MODIFIER@ ; `string'
PUBLIC	??_C@_0BN@PAHHCHJG@result?5?$DN?$DN?5FILE_TAG_KEY_STATE@ ; `string'
PUBLIC	??_C@_0BI@HHAHCEEE@Reached?5unknown?5trigger@	; `string'
PUBLIC	??_C@_0BM@GJCGBAFG@PARSGEN?3?5unknown?5trigger?5?$CFd@ ; `string'
PUBLIC	??_C@_0BB@HPAHJDLK@Unknown?5event?5?$CFs@	; `string'
PUBLIC	??_C@_0BK@FKJIOENN@PARSGEN?3?5unknown?5event?5?$CFs@ ; `string'
PUBLIC	??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0EE@GFKCBHAM@PARSGEN?3?5Marking?5Campaign?5as?5re@ ; `string'
PUBLIC	??_C@_0BN@GONHOKBO@PARSGEN?3?5Campaign?5medal?5?$DN?5?$CFs@ ; `string'
PUBLIC	??_C@_0BM@OKDNCJOJ@result?5?$DN?$DN?5FILE_TAG_FILENAME@ ; `string'
PUBLIC	??_C@_0BO@BOIGCNKA@result?5?$DN?$DN?5FILE_TAG_MAP_X_SIZE@ ; `string'
PUBLIC	??_C@_0BO@IJBJDMIJ@result?5?$DN?$DN?5FILE_TAG_MAP_Z_SIZE@ ; `string'
PUBLIC	??_C@_0CD@EKBMDJLA@result?5?$DN?$DN?5FILE_TAG_MAP_SECTOR_S@ ; `string'
PUBLIC	??_C@_0BN@BPABIKHE@result?5?$DN?$DN?5FILE_TAG_MAP_X_MIN@ ; `string'
PUBLIC	??_C@_0BN@FCMJCLHP@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MIN@ ; `string'
PUBLIC	??_C@_0BN@NIKGOBL@result?5?$DN?$DN?5FILE_TAG_MAP_X_MAX@ ; `string'
PUBLIC	??_C@_0BN@EAECMPBA@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MAX@ ; `string'
PUBLIC	??_C@_0BK@EECJKLPC@result?5?$DN?$DN?5FILE_TAG_COLOUR@ ; `string'
PUBLIC	??_C@_03OMFNLMOB@SID@				; `string'
PUBLIC	??_C@_03GFECJACO@DAT@				; `string'
PUBLIC	??_C@_0BI@DJEDKMJE@PARSGEN?3?5Rain?5effect?5?$CFd@ ; `string'
PUBLIC	??_C@_0BI@JMOPIAJC@PARSGEN?3?5Wind?5effect?5?$CFf@ ; `string'
PUBLIC	??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@	; `string'
PUBLIC	??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@ ; `string'
PUBLIC	??_C@_0BN@HKHPCABM@?$CIvalid?5?$DN?$DN?50?$CJ?5?$HM?$HM?5?$CIvalid?5?$DN?$DN?51?$CJ@ ; `string'
PUBLIC	??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@ ; `string'
PUBLIC	??_C@_0BM@LAOLAGGM@result?5?$DN?$DN?5FILE_TAG_ATTITUDE@ ; `string'
PUBLIC	??_C@_0CM@EJABNHKC@PARSER?3?5campaign?5load?3?5Undefine@ ; `string'
PUBLIC	??_C@_0BA@BBFFGFML@frequency?5?$DO?50?40@	; `string'
PUBLIC	??_C@_0CJ@MGCKHODB@PARSER?3?5?$CFs?5setting?5regen?5freque@ ; `string'
PUBLIC	??_C@_0BI@IGBIKDAM@result?5?$DN?$DN?5FILE_TAG_LIST@ ; `string'
PUBLIC	??_C@_09PLCJPDKF@value?5?$DO?50@		; `string'
PUBLIC	??_C@_0DN@MLEDPPAM@PARSGEN?3?5Side?5?$CFs?0?5Division?5Type@ ; `string'
PUBLIC	??_C@_0DA@EDGBKKFP@PARSER?3?5placing?5FARP?5?$CFs?5helicop@ ; `string'
PUBLIC	??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@ ; `string'
PUBLIC	??_C@_0CL@LHLNFGEM@?$CB?$CIrequired_landing_types?5?$CG?51?5?$DM?$DM@ ; `string'
PUBLIC	??_C@_0CB@OMBGAOGA@result?5?$DN?$DN?5FILE_TAG_AMMO_SUPPLIE@ ; `string'
PUBLIC	??_C@_0CB@PIDBMBOI@result?5?$DN?$DN?5FILE_TAG_FUEL_SUPPLIE@ ; `string'
PUBLIC	??_C@_0BJ@NFHBNNJM@result?5?$DN?$DN?5FILE_TAG_GROUP@ ; `string'
PUBLIC	??_C@_0BK@GGKBKBNE@result?5?$DN?$DN?5FILE_TAG_MEMBER@ ; `string'
PUBLIC	??_C@_0DJ@KGKGPCAF@PARSER?3?5campaign?5load?3?5Side?5?$CFs?5@ ; `string'
PUBLIC	??_C@_0CH@HCMLMDDN@result?5?$DN?$DN?5FILE_TAG_FORMATION_CO@ ; `string'
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	??_C@_0BF@NEMFAJIH@get_parser_member?5?$CI?$CJ@	; `string'
PUBLIC	??_C@_0BM@PEPEANPN@result?5?$DN?$DN?5FILE_TAG_MOVEMENT@ ; `string'
PUBLIC	??_C@_0CD@OIMLNAEI@result?5?$DN?$DN?5FILE_TAG_CREATE_WAYPO@ ; `string'
PUBLIC	??_C@_0O@CHKCBKBF@wp_count?5?$DO?$DN?50@	; `string'
PUBLIC	??_C@_0BI@FIELKLI@result?5?$DN?$DN?5FILE_TAG_PATH@ ; `string'
PUBLIC	??_C@_0N@DKEBAEFF@?$CFs?2?$CFs?2?$CFs?4sav@	; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0DH@MDDNANLD@COMM_MAN?3?5Server?5Version?5No?4?5?$CFd@ ; `string'
PUBLIC	??_C@_0BF@JLAKAPEG@PARSGEN?3?5unknown?5TAG@	; `string'
PUBLIC	??_C@_0BP@OAGHOIGD@ERROR?3?5EVENT?5?$CFs?5already?5exists@ ; `string'
PUBLIC	??_C@_0DC@BIBNIFKC@Binding?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@ ; `string'
PUBLIC	??_C@_0DC@OHNLBLOF@calling?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@ ; `string'
PUBLIC	?__LINE__Var@?0??trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z@4JA ; `trigger_triggered'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@KJOHPJOA@PARSGEN?3?5unknown?5operator?5?$CFc@ ; `string'
PUBLIC	?__LINE__Var@?0??debug_parser_message@@YGXHPAU_iobuf@@@Z@4JA ; `debug_parser_message'::`1'::__LINE__Var
PUBLIC	??_C@_05JLPDBANI@START@				; `string'
PUBLIC	??_C@_0CC@KABBFLJB@?$CFs?5?$CIformat?5?3?5?$CFs?5message?$CJ?5found?5@ ; `string'
PUBLIC	??_C@_0CB@ELNNGIGE@?$CFs?5?$CIformat?5?3?5?$CFs?5result?$CJ?5found?5?$CF@ ; `string'
PUBLIC	??_C@_0CO@IKPINEIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5condition?0?5SCRI@ ; `string'
PUBLIC	??_C@_0BD@CMFENMEO@?7?7?7script?5?$DN?5tag?5?$CFs@ ; `string'
PUBLIC	??_C@_09GBGGCFCF@END_WHILE@			; `string'
PUBLIC	??_C@_0BI@JGAOGLA@?$CFs?5evaluating?5condition@	; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0CI@PNPAENEA@?$CFs?5?$CIformat?5?3?5?$CFs?5value1?5operator@ ; `string'
PUBLIC	??_C@_0CB@KDIODMNL@?$CFs?5?$CIformat?5?3?5?$CFs?5name?5value?$CJ?5?3?5?$CF@ ; `string'
PUBLIC	??_C@_0BJ@BKLEAFEG@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SCRIPT?$CJ@ ; `string'
PUBLIC	??_C@_0BL@OEDJEMOC@?$CFs?5?$CIformat?5?3?5?$CFs?5name?$CJ?5?$DN?5?$CFs@ ; `string'
PUBLIC	??_C@_0BJ@GJKOPGPG@?$CFs?5?$CIformat?5?3?5?$CFs?5TRIGGER?$CJ@ ; `string'
PUBLIC	??_C@_0EG@HBGFHEPH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3GOA@ ; `string'
PUBLIC	??_C@_0DH@CDDOKEAH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3EVE@ ; `string'
PUBLIC	??_C@_0HC@BDBEKDIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5?3DAYS?5days?5?3HOU@ ; `string'
PUBLIC	??_C@_0FA@LOJPOAIK@?$CFs?5?$CIformat?5?3?5?$CFs?5?3IF?5variable_na@ ; `string'
PUBLIC	??_C@_0CN@BJKCBCNO@?$CFs?5?$CIformat?5?3?5?$CFs?5range?5?3EVENT?5ev@ ; `string'
PUBLIC	??_C@_0CK@NINENMPN@?$CFs?5?$CIformat?5?3?5?$CFs?5event_name?5flag@ ; `string'
PUBLIC	??_C@_0CM@CENOLCCB@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?5?3@ ; `string'
PUBLIC	??_C@_0BM@JFBKNEMB@?$CFs?5?$CIformat?5?3?5?$CFs?5value?$CJ?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_0CE@PBDAMCBD@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?$CJ?5@ ; `string'
PUBLIC	??_C@_0BJ@CCFFJNMO@placing?5frontline?5forces@	; `string'
PUBLIC	??_C@_0BB@JJBAJPME@creating?5keysite@		; `string'
PUBLIC	??_C@_0BA@GFEDIBLE@creating?5member@		; `string'
PUBLIC	??_C@_0P@LKNNJBNG@creating?5group@		; `string'
PUBLIC	??_C@_0O@PJDDNCCA@creating?5task@		; `string'
PUBLIC	??_C@_0BH@EJJADIOI@loading?5saved?5campaign@	; `string'
PUBLIC	??_C@_0M@NOPDGMKH@unknown?5TAG@			; `string'
PUBLIC	??_C@_01MCMALHOG@a@				; `string'
PUBLIC	??_C@_0L@FBKHGJKF@parser?4log@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0ED@LBADJBAF@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5F@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@41200000
PUBLIC	__real@47a8c000
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__ftell:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__exit:PROC
EXTRN	_memset:PROC
EXTRN	_strrchr:PROC
EXTRN	_strstr:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	_strlen:PROC
EXTRN	__imp___strupr:PROC
EXTRN	_fmod:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?debug_filtered_log@@YAXPBDZZ:PROC		; debug_filtered_log
EXTRN	?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z:PROC	; set_event
EXTRN	?file_size@@YGHPBD@Z:PROC			; file_size
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z:PROC	; get_next_file_tag
EXTRN	?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z:PROC ; check_next_file_tag
EXTRN	?get_next_file_int@@YGHPAU_iobuf@@@Z:PROC	; get_next_file_int
EXTRN	?get_next_file_float@@YGMPAU_iobuf@@@Z:PROC	; get_next_file_float
EXTRN	?get_next_file_string@@YGHPAU_iobuf@@PADH@Z:PROC ; get_next_file_string
EXTRN	?get_next_file_word@@YGHPAU_iobuf@@PADH@Z:PROC	; get_next_file_word
EXTRN	?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z:PROC ; get_next_file_enum
EXTRN	?register_file_tag_variable@@YGXPBDPAH@Z:PROC	; register_file_tag_variable
EXTRN	?unregister_file_tag_variable@@YGXPBD@Z:PROC	; unregister_file_tag_variable
EXTRN	?get_file_tag_variable@@YGPAHPBD@Z:PROC		; get_file_tag_variable
EXTRN	?if_file_tag_variable@@YGHPBD0H@Z:PROC		; if_file_tag_variable
EXTRN	?if_file_tag_operator@@YGHHPBDH@Z:PROC		; if_file_tag_operator
EXTRN	?get_variable_id@@YGHPBD@Z:PROC			; get_variable_id
EXTRN	?get_operator_id@@YGHPBD@Z:PROC			; get_operator_id
EXTRN	?get_variable_name@@YGPBDH@Z:PROC		; get_variable_name
EXTRN	?get_operator_name@@YGDH@Z:PROC			; get_operator_name
EXTRN	?initialise_noisemaps@@YGXXZ:PROC		; initialise_noisemaps
EXTRN	?set_entity_world_map_size@@YGXHHH@Z:PROC	; set_entity_world_map_size
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ:PROC ; create_local_entity
EXTRN	?create_local_only_entities@@YGXW4PACK_MODES@@@Z:PROC ; create_local_only_entities
EXTRN	?unpack_session@@YGHPAEHW4PACK_MODES@@@Z:PROC	; unpack_session
EXTRN	?add_division_id_data@@YGXHHHPAH@Z:PROC		; add_division_id_data
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z:PROC ; set_session_fixed_weather_mode
EXTRN	?set_session_random_weather_mode@@YGXPAUENTITY@@@Z:PROC ; set_session_random_weather_mode
EXTRN	?reinitialise_ai_system@@YGXXZ:PROC		; reinitialise_ai_system
EXTRN	?get_digital_clock_int_values@@YGXMPAH00@Z:PROC	; get_digital_clock_int_values
EXTRN	?update_gunships_screen_progress_indicator@@YGXXZ:PROC ; update_gunships_screen_progress_indicator
EXTRN	?load_ai_sector_data@@YGXPBD@Z:PROC		; load_ai_sector_data
EXTRN	?load_route_data@@YGXXZ:PROC			; load_route_data
EXTRN	?read_sector_side_file@@YGXPBD@Z:PROC		; read_sector_side_file
EXTRN	?read_population_placement_file@@YGXPBD@Z:PROC	; read_population_placement_file
EXTRN	?create_faction@@YGXW4ENTITY_SIDES@@H@Z:PROC	; create_faction
EXTRN	?create_faction_members@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@HW4ENTITY_SIDES@@PAUVEC3D@@HH@Z:PROC ; create_faction_members
EXTRN	?create_landed_faction_members@@YGPAUENTITY@@PAU1@HHH@Z:PROC ; create_landed_faction_members
EXTRN	?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z:PROC ; create_landed_faction_group
EXTRN	?place_frontline_forces@@YGXPAUENTITY@@H@Z:PROC	; place_frontline_forces
EXTRN	?push_task_onto_group_task_stack@@YGPAUENTITY@@PAU1@0I@Z:PROC ; push_task_onto_group_task_stack
EXTRN	?assign_task_to_group_members@@YGHPAUENTITY@@0I@Z:PROC ; assign_task_to_group_members
EXTRN	?create_task@@YAPAUENTITY@@HW4ENTITY_SIDES@@W4MOVEMENT_TYPES@@PAU1@22HMM2MZZ:PROC ; create_task
EXTRN	?button_state_names@@3PAPBDA:BYTE		; button_state_names
EXTRN	?modifier_type_names@@3PAPBDA:BYTE		; modifier_type_names
EXTRN	?dik_names@@3PAPBDA:BYTE			; dik_names
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?sys_colour_names@@3PAPBDA:BYTE			; sys_colour_names
EXTRN	?current_map_info@@3UCUSTOM_MAP_INFO@@A:BYTE	; current_map_info
EXTRN	?movement_names@@3PAPBDA:BYTE			; movement_names
EXTRN	?entity_sub_type_aircraft_names@@3PAPBDA:BYTE	; entity_sub_type_aircraft_names
EXTRN	?entity_sub_type_division_names@@3PAPBDA:BYTE	; entity_sub_type_division_names
EXTRN	?entity_sub_type_group_names@@3PAPBDA:BYTE	; entity_sub_type_group_names
EXTRN	?entity_sub_type_keysite_names@@3PAPBDA:BYTE	; entity_sub_type_keysite_names
EXTRN	?entity_sub_type_landing_names@@3PAPBDA:BYTE	; entity_sub_type_landing_names
EXTRN	?entity_sub_type_vehicle_names@@3PAPBDA:BYTE	; entity_sub_type_vehicle_names
EXTRN	?entity_sub_type_task_names@@3PAPBDA:BYTE	; entity_sub_type_task_names
EXTRN	?entity_sub_type_waypoint_names@@3PAPBDA:BYTE	; entity_sub_type_waypoint_names
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_force_attitude_names@@3PAPBDA:BYTE	; entity_force_attitude_names
EXTRN	?campaign_result_names@@3PAPBDA:BYTE		; campaign_result_names
EXTRN	?campaign_trigger_names@@3PAPBDA:BYTE		; campaign_trigger_names
EXTRN	?force_info_catagory_names@@3PAPBDA:BYTE	; force_info_catagory_names
EXTRN	?formation_component_names@@3PAPBDA:BYTE	; formation_component_names
EXTRN	?entity_side_names@@3PAPBDA:BYTE		; entity_side_names
EXTRN	?entity_side_short_names@@3PAPBDA:BYTE		; entity_side_short_names
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_set_local_entity_string@@3PAY0N@P6GXPAUENTITY@@W4STRING_TYPES@@PBD@ZA:BYTE ; fn_set_local_entity_string
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	?regen_frequency@@3PAMA:BYTE			; regen_frequency
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?application_tag_strings@@3PAPBDA:BYTE		; application_tag_strings
EXTRN	?medal_type_names@@3PAPBDA:BYTE			; medal_type_names
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	?terminator_point@@3UVEC3D@@A:BYTE		; terminator_point
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?number_list@?OL@??parser_campaign_file@@YGHPBDPAH@Z@4PAHA DD 080H DUP (?) ; `parser_campaign_file'::`235'::number_list
?buffer@?1??parser_debug_log@@YAXPADZZ@4PADA DB 03e8H DUP (?) ; `parser_debug_log'::`2'::buffer
?buffer@?1??parser_debug_fatal@@YAXPADZZ@4PADA DB 03e8H DUP (?) ; `parser_debug_fatal'::`2'::buffer
_BSS	ENDS
;	COMDAT __real@47a8c000
CONST	SEGMENT
__real@47a8c000 DD 047a8c000r			; 86400
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0ED@LBADJBAF@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5F@
CONST	SEGMENT
??_C@_0ED@LBADJBAF@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5F@ DB '*'
	DB	'**************************** FATAL **************************'
	DB	'****', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBKHGJKF@parser?4log@
CONST	SEGMENT
??_C@_0L@FBKHGJKF@parser?4log@ DB 'parser.log', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01MCMALHOG@a@
CONST	SEGMENT
??_C@_01MCMALHOG@a@ DB 'a', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NOPDGMKH@unknown?5TAG@
CONST	SEGMENT
??_C@_0M@NOPDGMKH@unknown?5TAG@ DB 'unknown TAG', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EJJADIOI@loading?5saved?5campaign@
CONST	SEGMENT
??_C@_0BH@EJJADIOI@loading?5saved?5campaign@ DB 'loading saved campaign', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PJDDNCCA@creating?5task@
CONST	SEGMENT
??_C@_0O@PJDDNCCA@creating?5task@ DB 'creating task', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LKNNJBNG@creating?5group@
CONST	SEGMENT
??_C@_0P@LKNNJBNG@creating?5group@ DB 'creating group', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GFEDIBLE@creating?5member@
CONST	SEGMENT
??_C@_0BA@GFEDIBLE@creating?5member@ DB 'creating member', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JJBAJPME@creating?5keysite@
CONST	SEGMENT
??_C@_0BB@JJBAJPME@creating?5keysite@ DB 'creating keysite', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CCFFJNMO@placing?5frontline?5forces@
CONST	SEGMENT
??_C@_0BJ@CCFFJNMO@placing?5frontline?5forces@ DB 'placing frontline forc'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PBDAMCBD@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?$CJ?5@
CONST	SEGMENT
??_C@_0CE@PBDAMCBD@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?$CJ?5@ DB '%'
	DB	's (format : %s variable_name) = %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JFBKNEMB@?$CFs?5?$CIformat?5?3?5?$CFs?5value?$CJ?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BM@JFBKNEMB@?$CFs?5?$CIformat?5?3?5?$CFs?5value?$CJ?5?$DN?5?$CFd@ DB '%'
	DB	's (format : %s value) = %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CENOLCCB@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?5?3@
CONST	SEGMENT
??_C@_0CM@CENOLCCB@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?5?3@ DB '%'
	DB	's (format : %s variable_name :SCRIPT) = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NINENMPN@?$CFs?5?$CIformat?5?3?5?$CFs?5event_name?5flag@
CONST	SEGMENT
??_C@_0CK@NINENMPN@?$CFs?5?$CIformat?5?3?5?$CFs?5event_name?5flag@ DB '%s'
	DB	' (format : %s event_name flag) = %s, %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BJKCBCNO@?$CFs?5?$CIformat?5?3?5?$CFs?5range?5?3EVENT?5ev@
CONST	SEGMENT
??_C@_0CN@BJKCBCNO@?$CFs?5?$CIformat?5?3?5?$CFs?5range?5?3EVENT?5ev@ DB '%'
	DB	's (format : %s range :EVENT event) = %d, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@LOJPOAIK@?$CFs?5?$CIformat?5?3?5?$CFs?5?3IF?5variable_na@
CONST	SEGMENT
??_C@_0FA@LOJPOAIK@?$CFs?5?$CIformat?5?3?5?$CFs?5?3IF?5variable_na@ DB '%'
	DB	's (format : %s :IF variable_name operator value :EVENT event)'
	DB	' = %s, %s, %d, %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@BDBEKDIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5?3DAYS?5days?5?3HOU@
CONST	SEGMENT
??_C@_0HC@BDBEKDIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5?3DAYS?5days?5?3HOU@ DB '%'
	DB	's (format : %s :DAYS days :HOURS hours :MINUTES minutes :SECO'
	DB	'NDS seconds :EVENT event_name) = %d, %d, %d, %d, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@CDDOKEAH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3EVE@
CONST	SEGMENT
??_C@_0DH@CDDOKEAH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3EVE@ DB '%'
	DB	's (format : %s :SIDE side :EVENT event_name) = %d, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@HBGFHEPH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3GOA@
CONST	SEGMENT
??_C@_0EG@HBGFHEPH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3GOA@ DB '%'
	DB	's (format : %s :SIDE side :GOAL goal :EVENT event_name) = %d,'
	DB	' %d, %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GJKOPGPG@?$CFs?5?$CIformat?5?3?5?$CFs?5TRIGGER?$CJ@
CONST	SEGMENT
??_C@_0BJ@GJKOPGPG@?$CFs?5?$CIformat?5?3?5?$CFs?5TRIGGER?$CJ@ DB '%s (for'
	DB	'mat : %s TRIGGER)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OEDJEMOC@?$CFs?5?$CIformat?5?3?5?$CFs?5name?$CJ?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BL@OEDJEMOC@?$CFs?5?$CIformat?5?3?5?$CFs?5name?$CJ?5?$DN?5?$CFs@ DB '%'
	DB	's (format : %s name) = %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BKLEAFEG@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SCRIPT?$CJ@
CONST	SEGMENT
??_C@_0BJ@BKLEAFEG@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SCRIPT?$CJ@ DB '%s (fo'
	DB	'rmat : %s :SCRIPT)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KDIODMNL@?$CFs?5?$CIformat?5?3?5?$CFs?5name?5value?$CJ?5?3?5?$CF@
CONST	SEGMENT
??_C@_0CB@KDIODMNL@?$CFs?5?$CIformat?5?3?5?$CFs?5name?5value?$CJ?5?3?5?$CF@ DB '%'
	DB	's (format : %s name value) : %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PNPAENEA@?$CFs?5?$CIformat?5?3?5?$CFs?5value1?5operator@
CONST	SEGMENT
??_C@_0CI@PNPAENEA@?$CFs?5?$CIformat?5?3?5?$CFs?5value1?5operator@ DB '%s'
	DB	' (format : %s value1 operator value2)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JGAOGLA@?$CFs?5evaluating?5condition@
CONST	SEGMENT
??_C@_0BI@JGAOGLA@?$CFs?5evaluating?5condition@ DB '%s evaluating conditi'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09GBGGCFCF@END_WHILE@
CONST	SEGMENT
??_C@_09GBGGCFCF@END_WHILE@ DB 'END_WHILE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CMFENMEO@?7?7?7script?5?$DN?5tag?5?$CFs@
CONST	SEGMENT
??_C@_0BD@CMFENMEO@?7?7?7script?5?$DN?5tag?5?$CFs@ DB 09H, 09H, 09H, 'scr'
	DB	'ipt = tag %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@IKPINEIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5condition?0?5SCRI@
CONST	SEGMENT
??_C@_0CO@IKPINEIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5condition?0?5SCRI@ DB '%'
	DB	's (format : %s condition, SCRIPT, END_WHILE)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@ELNNGIGE@?$CFs?5?$CIformat?5?3?5?$CFs?5result?$CJ?5found?5?$CF@
CONST	SEGMENT
??_C@_0CB@ELNNGIGE@?$CFs?5?$CIformat?5?3?5?$CFs?5result?$CJ?5found?5?$CF@ DB '%'
	DB	's (format : %s result) found %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KABBFLJB@?$CFs?5?$CIformat?5?3?5?$CFs?5message?$CJ?5found?5@
CONST	SEGMENT
??_C@_0CC@KABBFLJB@?$CFs?5?$CIformat?5?3?5?$CFs?5message?$CJ?5found?5@ DB '%'
	DB	's (format : %s message) found %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JLPDBANI@START@
CONST	SEGMENT
??_C@_05JLPDBANI@START@ DB 'START', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??debug_parser_message@@YGXHPAU_iobuf@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??debug_parser_message@@YGXHPAU_iobuf@@@Z@4JA DD 0adfH ; `debug_parser_message'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@KJOHPJOA@PARSGEN?3?5unknown?5operator?5?$CFc@
CONST	SEGMENT
??_C@_0BN@KJOHPJOA@PARSGEN?3?5unknown?5operator?5?$CFc@ DB 'PARSGEN: unkn'
	DB	'own operator %c', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z@4JA DD 09f7H ; `trigger_triggered'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DC@OHNLBLOF@calling?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@
CONST	SEGMENT
??_C@_0DC@OHNLBLOF@calling?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@ DB 'call'
	DB	'ing EVENT %s to key %d, modifier %d, state %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BIBNIFKC@Binding?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@
CONST	SEGMENT
??_C@_0DC@BIBNIFKC@Binding?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@ DB 'Bind'
	DB	'ing EVENT %s to key %d, modifier %d, state %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OAGHOIGD@ERROR?3?5EVENT?5?$CFs?5already?5exists@
CONST	SEGMENT
??_C@_0BP@OAGHOIGD@ERROR?3?5EVENT?5?$CFs?5already?5exists@ DB 'ERROR: EVE'
	DB	'NT %s already exists', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JLAKAPEG@PARSGEN?3?5unknown?5TAG@
CONST	SEGMENT
??_C@_0BF@JLAKAPEG@PARSGEN?3?5unknown?5TAG@ DB 'PARSGEN: unknown TAG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MDDNANLD@COMM_MAN?3?5Server?5Version?5No?4?5?$CFd@
CONST	SEGMENT
??_C@_0DH@MDDNANLD@COMM_MAN?3?5Server?5Version?5No?4?5?$CFd@ DB 'COMM_MAN'
	DB	': Server Version No. %d, Client Version No. %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DKEBAEFF@?$CFs?2?$CFs?2?$CFs?4sav@
CONST	SEGMENT
??_C@_0N@DKEBAEFF@?$CFs?2?$CFs?2?$CFs?4sav@ DB '%s\%s\%s.sav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FIELKLI@result?5?$DN?$DN?5FILE_TAG_PATH@
CONST	SEGMENT
??_C@_0BI@FIELKLI@result?5?$DN?$DN?5FILE_TAG_PATH@ DB 'result == FILE_TAG'
	DB	'_PATH', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CHKCBKBF@wp_count?5?$DO?$DN?50@
CONST	SEGMENT
??_C@_0O@CHKCBKBF@wp_count?5?$DO?$DN?50@ DB 'wp_count >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OIMLNAEI@result?5?$DN?$DN?5FILE_TAG_CREATE_WAYPO@
CONST	SEGMENT
??_C@_0CD@OIMLNAEI@result?5?$DN?$DN?5FILE_TAG_CREATE_WAYPO@ DB 'result =='
	DB	' FILE_TAG_CREATE_WAYPOINT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PEPEANPN@result?5?$DN?$DN?5FILE_TAG_MOVEMENT@
CONST	SEGMENT
??_C@_0BM@PEPEANPN@result?5?$DN?$DN?5FILE_TAG_MOVEMENT@ DB 'result == FIL'
	DB	'E_TAG_MOVEMENT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NEMFAJIH@get_parser_member?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BF@NEMFAJIH@get_parser_member?5?$CI?$CJ@ DB 'get_parser_member ()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HCMLMDDN@result?5?$DN?$DN?5FILE_TAG_FORMATION_CO@
CONST	SEGMENT
??_C@_0CH@HCMLMDDN@result?5?$DN?$DN?5FILE_TAG_FORMATION_CO@ DB 'result =='
	DB	' FILE_TAG_FORMATION_COMPONENT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@KGKGPCAF@PARSER?3?5campaign?5load?3?5Side?5?$CFs?5@
CONST	SEGMENT
??_C@_0DJ@KGKGPCAF@PARSER?3?5campaign?5load?3?5Side?5?$CFs?5@ DB 'PARSER:'
	DB	' campaign load: Side %s - Can''t locate keysite %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GGKBKBNE@result?5?$DN?$DN?5FILE_TAG_MEMBER@
CONST	SEGMENT
??_C@_0BK@GGKBKBNE@result?5?$DN?$DN?5FILE_TAG_MEMBER@ DB 'result == FILE_'
	DB	'TAG_MEMBER', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NFHBNNJM@result?5?$DN?$DN?5FILE_TAG_GROUP@
CONST	SEGMENT
??_C@_0BJ@NFHBNNJM@result?5?$DN?$DN?5FILE_TAG_GROUP@ DB 'result == FILE_T'
	DB	'AG_GROUP', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PIDBMBOI@result?5?$DN?$DN?5FILE_TAG_FUEL_SUPPLIE@
CONST	SEGMENT
??_C@_0CB@PIDBMBOI@result?5?$DN?$DN?5FILE_TAG_FUEL_SUPPLIE@ DB 'result =='
	DB	' FILE_TAG_FUEL_SUPPLIES', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OMBGAOGA@result?5?$DN?$DN?5FILE_TAG_AMMO_SUPPLIE@
CONST	SEGMENT
??_C@_0CB@OMBGAOGA@result?5?$DN?$DN?5FILE_TAG_AMMO_SUPPLIE@ DB 'result =='
	DB	' FILE_TAG_AMMO_SUPPLIES', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LHLNFGEM@?$CB?$CIrequired_landing_types?5?$CG?51?5?$DM?$DM@
CONST	SEGMENT
??_C@_0CL@LHLNFGEM@?$CB?$CIrequired_landing_types?5?$CG?51?5?$DM?$DM@ DB '!'
	DB	'(required_landing_types & 1 << this_type)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@
CONST	SEGMENT
??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@ DB 'result == FILE_TA'
	DB	'G_NAME', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EDGBKKFP@PARSER?3?5placing?5FARP?5?$CFs?5helicop@
CONST	SEGMENT
??_C@_0DA@EDGBKKFP@PARSER?3?5placing?5FARP?5?$CFs?5helicop@ DB 'PARSER: p'
	DB	'lacing FARP %s helicopters for side %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MLEDPPAM@PARSGEN?3?5Side?5?$CFs?0?5Division?5Type@
CONST	SEGMENT
??_C@_0DN@MLEDPPAM@PARSGEN?3?5Side?5?$CFs?0?5Division?5Type@ DB 'PARSGEN:'
	DB	' Side %s, Division Type %s, Count Exceeded Max (128)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PLCJPDKF@value?5?$DO?50@
CONST	SEGMENT
??_C@_09PLCJPDKF@value?5?$DO?50@ DB 'value > 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IGBIKDAM@result?5?$DN?$DN?5FILE_TAG_LIST@
CONST	SEGMENT
??_C@_0BI@IGBIKDAM@result?5?$DN?$DN?5FILE_TAG_LIST@ DB 'result == FILE_TA'
	DB	'G_LIST', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MGCKHODB@PARSER?3?5?$CFs?5setting?5regen?5freque@
CONST	SEGMENT
??_C@_0CJ@MGCKHODB@PARSER?3?5?$CFs?5setting?5regen?5freque@ DB 'PARSER: %'
	DB	's setting regen frequency to %f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BBFFGFML@frequency?5?$DO?50?40@
CONST	SEGMENT
??_C@_0BA@BBFFGFML@frequency?5?$DO?50?40@ DB 'frequency > 0.0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@EJABNHKC@PARSER?3?5campaign?5load?3?5Undefine@
CONST	SEGMENT
??_C@_0CM@EJABNHKC@PARSER?3?5campaign?5load?3?5Undefine@ DB 'PARSER: camp'
	DB	'aign load: Undefined Faction %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LAOLAGGM@result?5?$DN?$DN?5FILE_TAG_ATTITUDE@
CONST	SEGMENT
??_C@_0BM@LAOLAGGM@result?5?$DN?$DN?5FILE_TAG_ATTITUDE@ DB 'result == FIL'
	DB	'E_TAG_ATTITUDE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@
CONST	SEGMENT
??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@ DB 'result == FILE_T'
	DB	'AG_COUNT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HKHPCABM@?$CIvalid?5?$DN?$DN?50?$CJ?5?$HM?$HM?5?$CIvalid?5?$DN?$DN?51?$CJ@
CONST	SEGMENT
??_C@_0BN@HKHPCABM@?$CIvalid?5?$DN?$DN?50?$CJ?5?$HM?$HM?5?$CIvalid?5?$DN?$DN?51?$CJ@ DB '('
	DB	'valid == 0) || (valid == 1)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
CONST	SEGMENT
??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@ DB 'result == FILE_TA'
	DB	'G_TYPE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@ DB 'get_parser_force ()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JMOPIAJC@PARSGEN?3?5Wind?5effect?5?$CFf@
CONST	SEGMENT
??_C@_0BI@JMOPIAJC@PARSGEN?3?5Wind?5effect?5?$CFf@ DB 'PARSGEN: Wind effe'
	DB	'ct %f', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DJEDKMJE@PARSGEN?3?5Rain?5effect?5?$CFd@
CONST	SEGMENT
??_C@_0BI@DJEDKMJE@PARSGEN?3?5Rain?5effect?5?$CFd@ DB 'PARSGEN: Rain effe'
	DB	'ct %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03GFECJACO@DAT@
CONST	SEGMENT
??_C@_03GFECJACO@DAT@ DB 'DAT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OMFNLMOB@SID@
CONST	SEGMENT
??_C@_03OMFNLMOB@SID@ DB 'SID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EECJKLPC@result?5?$DN?$DN?5FILE_TAG_COLOUR@
CONST	SEGMENT
??_C@_0BK@EECJKLPC@result?5?$DN?$DN?5FILE_TAG_COLOUR@ DB 'result == FILE_'
	DB	'TAG_COLOUR', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EAECMPBA@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MAX@
CONST	SEGMENT
??_C@_0BN@EAECMPBA@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MAX@ DB 'result == FI'
	DB	'LE_TAG_MAP_Z_MAX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NIKGOBL@result?5?$DN?$DN?5FILE_TAG_MAP_X_MAX@
CONST	SEGMENT
??_C@_0BN@NIKGOBL@result?5?$DN?$DN?5FILE_TAG_MAP_X_MAX@ DB 'result == FIL'
	DB	'E_TAG_MAP_X_MAX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FCMJCLHP@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MIN@
CONST	SEGMENT
??_C@_0BN@FCMJCLHP@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MIN@ DB 'result == FI'
	DB	'LE_TAG_MAP_Z_MIN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BPABIKHE@result?5?$DN?$DN?5FILE_TAG_MAP_X_MIN@
CONST	SEGMENT
??_C@_0BN@BPABIKHE@result?5?$DN?$DN?5FILE_TAG_MAP_X_MIN@ DB 'result == FI'
	DB	'LE_TAG_MAP_X_MIN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EKBMDJLA@result?5?$DN?$DN?5FILE_TAG_MAP_SECTOR_S@
CONST	SEGMENT
??_C@_0CD@EKBMDJLA@result?5?$DN?$DN?5FILE_TAG_MAP_SECTOR_S@ DB 'result =='
	DB	' FILE_TAG_MAP_SECTOR_SIZE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IJBJDMIJ@result?5?$DN?$DN?5FILE_TAG_MAP_Z_SIZE@
CONST	SEGMENT
??_C@_0BO@IJBJDMIJ@result?5?$DN?$DN?5FILE_TAG_MAP_Z_SIZE@ DB 'result == F'
	DB	'ILE_TAG_MAP_Z_SIZE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BOIGCNKA@result?5?$DN?$DN?5FILE_TAG_MAP_X_SIZE@
CONST	SEGMENT
??_C@_0BO@BOIGCNKA@result?5?$DN?$DN?5FILE_TAG_MAP_X_SIZE@ DB 'result == F'
	DB	'ILE_TAG_MAP_X_SIZE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OKDNCJOJ@result?5?$DN?$DN?5FILE_TAG_FILENAME@
CONST	SEGMENT
??_C@_0BM@OKDNCJOJ@result?5?$DN?$DN?5FILE_TAG_FILENAME@ DB 'result == FIL'
	DB	'E_TAG_FILENAME', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GONHOKBO@PARSGEN?3?5Campaign?5medal?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BN@GONHOKBO@PARSGEN?3?5Campaign?5medal?5?$DN?5?$CFs@ DB 'PARSGEN: '
	DB	'Campaign medal = %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@GFKCBHAM@PARSGEN?3?5Marking?5Campaign?5as?5re@
CONST	SEGMENT
??_C@_0EE@GFKCBHAM@PARSGEN?3?5Marking?5Campaign?5as?5re@ DB 'PARSGEN: Mar'
	DB	'king Campaign as requiring Apache Havoc to be installed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ DB 'get_session_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FKJIOENN@PARSGEN?3?5unknown?5event?5?$CFs@
CONST	SEGMENT
??_C@_0BK@FKJIOENN@PARSGEN?3?5unknown?5event?5?$CFs@ DB 'PARSGEN: unknown'
	DB	' event %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HPAHJDLK@Unknown?5event?5?$CFs@
CONST	SEGMENT
??_C@_0BB@HPAHJDLK@Unknown?5event?5?$CFs@ DB 'Unknown event %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GJCGBAFG@PARSGEN?3?5unknown?5trigger?5?$CFd@
CONST	SEGMENT
??_C@_0BM@GJCGBAFG@PARSGEN?3?5unknown?5trigger?5?$CFd@ DB 'PARSGEN: unkno'
	DB	'wn trigger %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHAHCEEE@Reached?5unknown?5trigger@
CONST	SEGMENT
??_C@_0BI@HHAHCEEE@Reached?5unknown?5trigger@ DB 'Reached unknown trigger'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PAHHCHJG@result?5?$DN?$DN?5FILE_TAG_KEY_STATE@
CONST	SEGMENT
??_C@_0BN@PAHHCHJG@result?5?$DN?$DN?5FILE_TAG_KEY_STATE@ DB 'result == FI'
	DB	'LE_TAG_KEY_STATE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BKPJAFKO@result?5?$DN?$DN?5FILE_TAG_KEY_MODIFIER@
CONST	SEGMENT
??_C@_0CA@BKPJAFKO@result?5?$DN?$DN?5FILE_TAG_KEY_MODIFIER@ DB 'result =='
	DB	' FILE_TAG_KEY_MODIFIER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MMOIMBGI@result?5?$DN?$DN?5FILE_TAG_KEY_CODE@
CONST	SEGMENT
??_C@_0BM@MMOIMBGI@result?5?$DN?$DN?5FILE_TAG_KEY_CODE@ DB 'result == FIL'
	DB	'E_TAG_KEY_CODE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BPLLKIAK@result?5?$DN?$DN?5FILE_TAG_VALUE@
CONST	SEGMENT
??_C@_0BJ@BPLLKIAK@result?5?$DN?$DN?5FILE_TAG_VALUE@ DB 'result == FILE_T'
	DB	'AG_VALUE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GDFKICIO@result?5?$DN?$DN?5FILE_TAG_IF@
CONST	SEGMENT
??_C@_0BG@GDFKICIO@result?5?$DN?$DN?5FILE_TAG_IF@ DB 'result == FILE_TAG_'
	DB	'IF', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HEEPGHOA@result?5?$DN?$DN?5FILE_TAG_SECONDS@
CONST	SEGMENT
??_C@_0BL@HEEPGHOA@result?5?$DN?$DN?5FILE_TAG_SECONDS@ DB 'result == FILE'
	DB	'_TAG_SECONDS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HCHGGPLM@result?5?$DN?$DN?5FILE_TAG_MINUTES@
CONST	SEGMENT
??_C@_0BL@HCHGGPLM@result?5?$DN?$DN?5FILE_TAG_MINUTES@ DB 'result == FILE'
	DB	'_TAG_MINUTES', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KNJBMOMH@result?5?$DN?$DN?5FILE_TAG_HOURS@
CONST	SEGMENT
??_C@_0BJ@KNJBMOMH@result?5?$DN?$DN?5FILE_TAG_HOURS@ DB 'result == FILE_T'
	DB	'AG_HOURS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DBAKNDDD@result?5?$DN?$DN?5FILE_TAG_DAYS@
CONST	SEGMENT
??_C@_0BI@DBAKNDDD@result?5?$DN?$DN?5FILE_TAG_DAYS@ DB 'result == FILE_TA'
	DB	'G_DAYS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@
CONST	SEGMENT
??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@ DB 'result == FILE_T'
	DB	'AG_EVENT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EJBKCCIG@result?5?$DN?$DN?5FILE_TAG_GOAL@
CONST	SEGMENT
??_C@_0BI@EJBKCCIG@result?5?$DN?$DN?5FILE_TAG_GOAL@ DB 'result == FILE_TA'
	DB	'G_GOAL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@COBIDFLK@result?5?$DN?$DN?5FILE_TAG_SIDE@
CONST	SEGMENT
??_C@_0BI@COBIDFLK@result?5?$DN?$DN?5FILE_TAG_SIDE@ DB 'result == FILE_TA'
	DB	'G_SIDE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HNJMNPNB@PARSER?3?5can?8t?5load?5file?5?$CFs?5errn@
CONST	SEGMENT
??_C@_0CE@HNJMNPNB@PARSER?3?5can?8t?5load?5file?5?$CFs?5errn@ DB 'PARSER:'
	DB	' can''t load file %s errno %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@
CONST	SEGMENT
??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@ DB 'get_valid_curren'
	DB	't_game_session ()', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ai\parser\parsgen.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA DD 0cdH ; `parser_campaign_file'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xtgmath.h
;	COMDAT ??$fmod@MHX@@YGNMH@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$fmod@MHX@@YGNMH@Z PROC				; fmod<float,int,void>, COMDAT

; 88   : _GENERIC_MATH2(fmod, _CRTDEFAULT)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	f2 0f 2a 45 0c	 cvtsi2sd xmm0, DWORD PTR __Right$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Left$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
??$fmod@MHX@@YGNMH@Z ENDP				; fmod<float,int,void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?parser_debug_fatal@@YAXPADZZ
_TEXT	SEGMENT
_args$ = -8						; size = 4
_file_ptr$ = -4						; size = 4
_msg$ = 8						; size = 4
?parser_debug_fatal@@YAXPADZZ PROC			; parser_debug_fatal, COMDAT

; 3295 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3296 : 
; 3297 : 	FILE
; 3298 : 		*file_ptr;
; 3299 : 
; 3300 : 	static char
; 3301 : 		buffer [1000];
; 3302 : 
; 3303 : 	va_list
; 3304 : 		args;
; 3305 : 
; 3306 : 	file_ptr = fopen ("parser.log", "a");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_01MCMALHOG@a@
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FBKHGJKF@parser?4log@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00019	83 c4 08	 add	 esp, 8
  0001c	89 45 fc	 mov	 DWORD PTR _file_ptr$[ebp], eax

; 3307 : 
; 3308 : 	if (file_ptr)

  0001f	83 7d fc 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  00023	0f 84 a3 00 00
	00		 je	 $LN3@parser_deb

; 3309 : 	{
; 3310 : 		sprintf (buffer, "***************************** FATAL ******************************");

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@LBADJBAF@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?5F@
  0002e	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_fatal@@YAXPADZZ@4PADA
  00033	e8 00 00 00 00	 call	 _sprintf
  00038	83 c4 08	 add	 esp, 8

; 3311 : 		fwrite (buffer, 1, strlen (buffer), file_ptr);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_fatal@@YAXPADZZ@4PADA
  00044	e8 00 00 00 00	 call	 _strlen
  00049	83 c4 04	 add	 esp, 4
  0004c	50		 push	 eax
  0004d	6a 01		 push	 1
  0004f	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_fatal@@YAXPADZZ@4PADA
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  0005a	83 c4 10	 add	 esp, 16			; 00000010H

; 3312 : 
; 3313 : 		va_start (args, msg);

  0005d	8d 45 0c	 lea	 eax, DWORD PTR _msg$[ebp+4]
  00060	89 45 f8	 mov	 DWORD PTR _args$[ebp], eax

; 3314 : 
; 3315 : 		vsprintf (buffer, msg, args);

  00063	8b 45 f8	 mov	 eax, DWORD PTR _args$[ebp]
  00066	50		 push	 eax
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  0006a	51		 push	 ecx
  0006b	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_fatal@@YAXPADZZ@4PADA
  00070	e8 00 00 00 00	 call	 _vsprintf
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3316 : 
; 3317 : 		va_end (args);

  00078	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _args$[ebp], 0

; 3318 : 
; 3319 : 		fwrite (buffer, 1, strlen (buffer), file_ptr);

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00082	50		 push	 eax
  00083	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_fatal@@YAXPADZZ@4PADA
  00088	e8 00 00 00 00	 call	 _strlen
  0008d	83 c4 04	 add	 esp, 4
  00090	50		 push	 eax
  00091	6a 01		 push	 1
  00093	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_fatal@@YAXPADZZ@4PADA
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 3320 : 
; 3321 : 		fwrite ("\n", 1, 1, file_ptr);

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000a4	50		 push	 eax
  000a5	6a 01		 push	 1
  000a7	6a 01		 push	 1
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  000b4	83 c4 10	 add	 esp, 16			; 00000010H

; 3322 : 
; 3323 : 		fclose (file_ptr);

  000b7	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000ba	50		 push	 eax
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  000c1	83 c4 04	 add	 esp, 4

; 3324 : 
; 3325 : 		exit (1);

  000c4	6a 01		 push	 1
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$LN3@parser_deb:

; 3326 : 	}
; 3327 : }

  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
?parser_debug_fatal@@YAXPADZZ ENDP			; parser_debug_fatal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?parser_debug_log@@YAXPADZZ
_TEXT	SEGMENT
_args$ = -8						; size = 4
_file_ptr$ = -4						; size = 4
_msg$ = 8						; size = 4
?parser_debug_log@@YAXPADZZ PROC			; parser_debug_log, COMDAT

; 3258 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3259 : 
; 3260 : 	FILE
; 3261 : 		*file_ptr;
; 3262 : 
; 3263 : 	static char
; 3264 : 		buffer [1000];
; 3265 : 
; 3266 : 	va_list
; 3267 : 		args;
; 3268 : 
; 3269 : 	file_ptr = fopen ("parser.log", "a");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_01MCMALHOG@a@
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FBKHGJKF@parser?4log@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00019	83 c4 08	 add	 esp, 8
  0001c	89 45 fc	 mov	 DWORD PTR _file_ptr$[ebp], eax

; 3270 : 
; 3271 : 	if (file_ptr)

  0001f	83 7d fc 00	 cmp	 DWORD PTR _file_ptr$[ebp], 0
  00023	74 74		 je	 SHORT $LN1@parser_deb

; 3272 : 	{
; 3273 : 
; 3274 : 		va_start (args, msg);

  00025	8d 45 0c	 lea	 eax, DWORD PTR _msg$[ebp+4]
  00028	89 45 f8	 mov	 DWORD PTR _args$[ebp], eax

; 3275 : 
; 3276 : 		vsprintf (buffer, msg, args);

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _args$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  00032	51		 push	 ecx
  00033	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_log@@YAXPADZZ@4PADA
  00038	e8 00 00 00 00	 call	 _vsprintf
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3277 : 
; 3278 : 		va_end (args);

  00040	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _args$[ebp], 0

; 3279 : 
; 3280 : 		fwrite (buffer, 1, strlen (buffer), file_ptr);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0004a	50		 push	 eax
  0004b	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_log@@YAXPADZZ@4PADA
  00050	e8 00 00 00 00	 call	 _strlen
  00055	83 c4 04	 add	 esp, 4
  00058	50		 push	 eax
  00059	6a 01		 push	 1
  0005b	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_log@@YAXPADZZ@4PADA
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00066	83 c4 10	 add	 esp, 16			; 00000010H

; 3281 : 
; 3282 : 		fwrite ("\n", 1, 1, file_ptr);

  00069	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0006c	50		 push	 eax
  0006d	6a 01		 push	 1
  0006f	6a 01		 push	 1
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  0007c	83 c4 10	 add	 esp, 16			; 00000010H

; 3283 : 
; 3284 : 		fclose (file_ptr);

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00082	50		 push	 eax
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00089	83 c4 04	 add	 esp, 4

; 3285 : 
; 3286 : 		debug_filtered_log (buffer);

  0008c	68 00 00 00 00	 push	 OFFSET ?buffer@?1??parser_debug_log@@YAXPADZZ@4PADA
  00091	e8 00 00 00 00	 call	 ?debug_filtered_log@@YAXPBDZZ ; debug_filtered_log
  00096	83 c4 04	 add	 esp, 4
$LN1@parser_deb:

; 3287 : 	}
; 3288 : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?parser_debug_log@@YAXPADZZ ENDP			; parser_debug_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?debug_parser_message@@YGXHPAU_iobuf@@@Z
_TEXT	SEGMENT
tv222 = -428						; size = 4
tv66 = -428						; size = 4
_event$1 = -360						; size = 4
_result$2 = -356					; size = 4
_type$3 = -352						; size = 4
_value4$4 = -348					; size = 4
_value3$5 = -344					; size = 4
_value2$6 = -340					; size = 4
_value1$7 = -336					; size = 4
_result$8 = -332					; size = 4
_message$9 = -328					; size = 128
_original_file_offset$ = -200				; size = 4
_value1$ = -196						; size = 4
_variable_name$ = -192					; size = 64
_operator_name$ = -128					; size = 64
_event_name$ = -64					; size = 64
_tag$ = 8						; size = 4
_file_ptr$ = 12						; size = 4
?debug_parser_message@@YGXHPAU_iobuf@@@Z PROC		; debug_parser_message, COMDAT

; 2783 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 01 00
	00		 sub	 esp, 428		; 000001acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2784 : 
; 2785 : 	char
; 2786 : 		event_name [64],
; 2787 : 		operator_name [64],
; 2788 : 		variable_name [64];
; 2789 : 
; 2790 : 	int
; 2791 : 		value1,
; 2792 : 		//value2,
; 2793 : 		//offset,
; 2794 : 		original_file_offset;
; 2795 : 
; 2796 : 	original_file_offset = ftell (file_ptr);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0000f	50		 push	 eax
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00016	83 c4 04	 add	 esp, 4
  00019	89 85 38 ff ff
	ff		 mov	 DWORD PTR _original_file_offset$[ebp], eax

; 2797 : 
; 2798 : 	switch (tag)

  0001f	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00022	89 85 54 fe ff
	ff		 mov	 DWORD PTR tv66[ebp], eax
  00028	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR tv66[ebp]
  0002e	83 c1 1d	 add	 ecx, 29			; 0000001dH
  00031	89 8d 54 fe ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  00037	81 bd 54 fe ff
	ff bd 00 00 00	 cmp	 DWORD PTR tv66[ebp], 189 ; 000000bdH
  00041	0f 87 51 09 00
	00		 ja	 $LN43@debug_pars
  00047	8b 95 54 fe ff
	ff		 mov	 edx, DWORD PTR tv66[ebp]
  0004d	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN45@debug_pars[edx]
  00054	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN47@debug_pars[eax*4]
$LN8@debug_pars:

; 2799 : 	{
; 2800 : 
; 2801 : 		case FILE_TAG_START:
; 2802 : 		{
; 2803 : 
; 2804 : 			parser_debug_log ("START");

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_05JLPDBANI@START@
  00060	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00065	83 c4 04	 add	 esp, 4

; 2805 : 
; 2806 : 			break;

  00068	e9 38 09 00 00	 jmp	 $LN2@debug_pars
$LN9@debug_pars:

; 2807 : 		}
; 2808 : 
; 2809 : 		case FILE_TAG_ECHO_MESSAGE:
; 2810 : 		{
; 2811 : 
; 2812 : 			char
; 2813 : 				message [128];
; 2814 : 
; 2815 : 			get_next_file_string (file_ptr, message, sizeof (message));

  0006d	68 80 00 00 00	 push	 128			; 00000080H
  00072	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _message$9[ebp]
  00078	50		 push	 eax
  00079	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 2816 : 
; 2817 : 			parser_debug_log ("%s (format : %s message) found %s", application_tag_strings [tag], application_tag_strings [tag], message);

  00082	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _message$9[ebp]
  00088	50		 push	 eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  0008c	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  00093	52		 push	 edx
  00094	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00097	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  0009e	51		 push	 ecx
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@KABBFLJB@?$CFs?5?$CIformat?5?3?5?$CFs?5message?$CJ?5found?5@
  000a4	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  000a9	83 c4 10	 add	 esp, 16			; 00000010H

; 2818 : 
; 2819 : 			break;

  000ac	e9 f4 08 00 00	 jmp	 $LN2@debug_pars
$LN10@debug_pars:

; 2820 : 		}
; 2821 : 
; 2822 : 		case FILE_TAG_END_CAMPAIGN:
; 2823 : 		{
; 2824 : 
; 2825 : 			value1 = get_next_file_enum (file_ptr, campaign_result_names, NUM_CAMPAIGN_RESULT_TYPES);

  000b1	6a 06		 push	 6
  000b3	68 00 00 00 00	 push	 OFFSET ?campaign_result_names@@3PAPBDA ; campaign_result_names
  000b8	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  000c1	89 85 3c ff ff
	ff		 mov	 DWORD PTR _value1$[ebp], eax

; 2826 : 
; 2827 : 			parser_debug_log ("%s (format : %s result) found %s", application_tag_strings [tag], application_tag_strings [tag], campaign_result_names [value1]);

  000c7	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _value1$[ebp]
  000cd	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?campaign_result_names@@3PAPBDA[eax*4]
  000d4	51		 push	 ecx
  000d5	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  000d8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?application_tag_strings@@3PAPBDA[edx*4]
  000df	50		 push	 eax
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  000e3	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  000ea	52		 push	 edx
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@ELNNGIGE@?$CFs?5?$CIformat?5?3?5?$CFs?5result?$CJ?5found?5?$CF@
  000f0	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  000f5	83 c4 10	 add	 esp, 16			; 00000010H

; 2828 : 
; 2829 : 			break;

  000f8	e9 a8 08 00 00	 jmp	 $LN2@debug_pars
$LN11@debug_pars:

; 2830 : 		}
; 2831 : 
; 2832 : 		case FILE_TAG_WHILE:
; 2833 : 		{
; 2834 : 
; 2835 : 			parser_debug_log ("%s (format : %s condition, SCRIPT, END_WHILE)", application_tag_strings [tag], application_tag_strings [tag]);

  000fd	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00100	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  00107	51		 push	 ecx
  00108	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  0010b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?application_tag_strings@@3PAPBDA[edx*4]
  00112	50		 push	 eax
  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@IKPINEIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5condition?0?5SCRI@
  00118	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0011d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@debug_pars:

; 2836 : 
; 2837 : 			while (tag = check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  00120	68 af 00 00 00	 push	 175			; 000000afH
  00125	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0012a	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  00133	89 45 08	 mov	 DWORD PTR _tag$[ebp], eax
  00136	83 7d 08 00	 cmp	 DWORD PTR _tag$[ebp], 0
  0013a	74 38		 je	 SHORT $LN5@debug_pars

; 2838 : 			{
; 2839 : 
; 2840 : 				if (tag == FILE_TAG_END_WHILE)

  0013c	83 7d 08 f3	 cmp	 DWORD PTR _tag$[ebp], -13 ; fffffff3H
  00140	75 02		 jne	 SHORT $LN12@debug_pars

; 2841 : 				{
; 2842 : 
; 2843 : 					break;

  00142	eb 30		 jmp	 SHORT $LN5@debug_pars
$LN12@debug_pars:

; 2844 : 				}
; 2845 : 
; 2846 : 				parser_debug_log ("			script = tag %s", application_tag_strings [tag]);

  00144	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00147	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  0014e	51		 push	 ecx
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CMFENMEO@?7?7?7script?5?$DN?5tag?5?$CFs@
  00154	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00159	83 c4 08	 add	 esp, 8

; 2847 : 
; 2848 : 				tag = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0015c	68 af 00 00 00	 push	 175			; 000000afH
  00161	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00166	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0016f	89 45 08	 mov	 DWORD PTR _tag$[ebp], eax

; 2849 : 			}

  00172	eb ac		 jmp	 SHORT $LN4@debug_pars
$LN5@debug_pars:

; 2850 : 
; 2851 : 			parser_debug_log ("END_WHILE");

  00174	68 00 00 00 00	 push	 OFFSET ??_C@_09GBGGCFCF@END_WHILE@
  00179	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0017e	83 c4 04	 add	 esp, 4

; 2852 : 
; 2853 : 			break;

  00181	e9 1f 08 00 00	 jmp	 $LN2@debug_pars
$LN13@debug_pars:

; 2854 : 		}
; 2855 : 
; 2856 : 		case FILE_TAG_END_WHILE:
; 2857 : 		{
; 2858 : 
; 2859 : 			parser_debug_log ("%s evaluating condition", application_tag_strings [tag]);

  00186	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00189	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  00190	51		 push	 ecx
  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JGAOGLA@?$CFs?5evaluating?5condition@
  00196	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0019b	83 c4 08	 add	 esp, 8

; 2860 : 			parser_debug_log ("");

  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  001a3	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  001a8	83 c4 04	 add	 esp, 4

; 2861 : 
; 2862 : 			break;

  001ab	e9 f5 07 00 00	 jmp	 $LN2@debug_pars
$LN14@debug_pars:

; 2863 : 		}
; 2864 : 
; 2865 : 		case FILE_TAG_CALCULATE:
; 2866 : 		{
; 2867 : 
; 2868 : 			parser_debug_log ("%s (format : %s value1 operator value2)", application_tag_strings [tag], application_tag_strings [tag]);

  001b0	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  001b3	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  001ba	51		 push	 ecx
  001bb	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  001be	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?application_tag_strings@@3PAPBDA[edx*4]
  001c5	50		 push	 eax
  001c6	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@PNPAENEA@?$CFs?5?$CIformat?5?3?5?$CFs?5value1?5operator@
  001cb	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  001d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2869 : 
; 2870 : 			break;

  001d3	e9 cd 07 00 00	 jmp	 $LN2@debug_pars
$LN15@debug_pars:

; 2871 : 		}
; 2872 : 
; 2873 : 		case FILE_TAG_IF:
; 2874 : 		{
; 2875 : 
; 2876 : 			parser_debug_log ("%s (format : %s value1 operator value2)", application_tag_strings [tag], application_tag_strings [tag]);

  001d8	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  001db	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  001e2	51		 push	 ecx
  001e3	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  001e6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?application_tag_strings@@3PAPBDA[edx*4]
  001ed	50		 push	 eax
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@PNPAENEA@?$CFs?5?$CIformat?5?3?5?$CFs?5value1?5operator@
  001f3	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  001f8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2877 : 
; 2878 : 			break;

  001fb	e9 a5 07 00 00	 jmp	 $LN2@debug_pars
$LN16@debug_pars:

; 2879 : 		}
; 2880 : 
; 2881 : 		case FILE_TAG_ELSE:
; 2882 : 		{
; 2883 : 
; 2884 : 			parser_debug_log ("");

  00200	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00205	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0020a	83 c4 04	 add	 esp, 4

; 2885 : 
; 2886 : 			break;

  0020d	e9 93 07 00 00	 jmp	 $LN2@debug_pars
$LN17@debug_pars:

; 2887 : 		}
; 2888 : 
; 2889 : 		case FILE_TAG_ENDIF:
; 2890 : 		{
; 2891 : 
; 2892 : 			parser_debug_log ("");

  00212	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00217	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0021c	83 c4 04	 add	 esp, 4

; 2893 : 
; 2894 : 			break;

  0021f	e9 81 07 00 00	 jmp	 $LN2@debug_pars
$LN18@debug_pars:

; 2895 : 		}
; 2896 : 
; 2897 : 		case FILE_TAG_CREATE_VARIABLE:
; 2898 : 		{
; 2899 : 
; 2900 : 			parser_debug_log ("");

  00224	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00229	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0022e	83 c4 04	 add	 esp, 4

; 2901 : 
; 2902 : 			get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  00231	6a 40		 push	 64			; 00000040H
  00233	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00239	50		 push	 eax
  0023a	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0023d	51		 push	 ecx
  0023e	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 2903 : 
; 2904 : 			parser_debug_log ("%s (format : %s name value) : %s", application_tag_strings [tag], application_tag_strings [tag], variable_name);

  00243	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00249	50		 push	 eax
  0024a	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  0024d	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  00254	52		 push	 edx
  00255	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00258	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  0025f	51		 push	 ecx
  00260	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KDIODMNL@?$CFs?5?$CIformat?5?3?5?$CFs?5name?5value?$CJ?5?3?5?$CF@
  00265	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0026a	83 c4 10	 add	 esp, 16			; 00000010H

; 2905 : 
; 2906 : 			break;

  0026d	e9 33 07 00 00	 jmp	 $LN2@debug_pars
$LN19@debug_pars:

; 2907 : 		}
; 2908 : 
; 2909 : 		case FILE_TAG_CALL:
; 2910 : 		{
; 2911 : 
; 2912 : 			parser_debug_log ("%s (format : %s :SCRIPT)", application_tag_strings [tag], application_tag_strings [tag]);

  00272	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00275	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  0027c	51		 push	 ecx
  0027d	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  00280	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?application_tag_strings@@3PAPBDA[edx*4]
  00287	50		 push	 eax
  00288	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BKLEAFEG@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SCRIPT?$CJ@
  0028d	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00292	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2913 : 
; 2914 : 			break;

  00295	e9 0b 07 00 00	 jmp	 $LN2@debug_pars
$LN20@debug_pars:

; 2915 : 		}
; 2916 : 
; 2917 : 		case FILE_TAG_EVENT:
; 2918 : 		{
; 2919 : 
; 2920 : 			get_next_file_word (file_ptr, event_name, sizeof (event_name));

  0029a	6a 40		 push	 64			; 00000040H
  0029c	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  0029f	50		 push	 eax
  002a0	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  002a3	51		 push	 ecx
  002a4	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 2921 : 
; 2922 : 			parser_debug_log ("%s (format : %s name) = %s", application_tag_strings [tag], application_tag_strings [tag], event_name);

  002a9	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  002ac	50		 push	 eax
  002ad	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  002b0	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  002b7	52		 push	 edx
  002b8	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  002bb	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  002c2	51		 push	 ecx
  002c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OEDJEMOC@?$CFs?5?$CIformat?5?3?5?$CFs?5name?$CJ?5?$DN?5?$CFs@
  002c8	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  002cd	83 c4 10	 add	 esp, 16			; 00000010H

; 2923 : 
; 2924 : 			break;

  002d0	e9 d0 06 00 00	 jmp	 $LN2@debug_pars
$LN21@debug_pars:

; 2925 : 		}
; 2926 : 
; 2927 : 		case FILE_TAG_CREATE_EVENT:
; 2928 : 		{
; 2929 : 
; 2930 : 			parser_debug_log ("");

  002d5	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  002da	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  002df	83 c4 04	 add	 esp, 4

; 2931 : 
; 2932 : 			get_next_file_word (file_ptr, event_name, sizeof (event_name));

  002e2	6a 40		 push	 64			; 00000040H
  002e4	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  002e7	50		 push	 eax
  002e8	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  002eb	51		 push	 ecx
  002ec	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 2933 : 
; 2934 : 			parser_debug_log ("%s (format : %s name) = %s", application_tag_strings [tag], application_tag_strings [tag], event_name);

  002f1	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  002f4	50		 push	 eax
  002f5	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  002f8	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  002ff	52		 push	 edx
  00300	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00303	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  0030a	51		 push	 ecx
  0030b	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OEDJEMOC@?$CFs?5?$CIformat?5?3?5?$CFs?5name?$CJ?5?$DN?5?$CFs@
  00310	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00315	83 c4 10	 add	 esp, 16			; 00000010H

; 2935 : 
; 2936 : 			break;

  00318	e9 88 06 00 00	 jmp	 $LN2@debug_pars
$LN22@debug_pars:

; 2937 : 		}
; 2938 : 
; 2939 : 		case FILE_TAG_CREATE_TRIGGER:
; 2940 : 		{
; 2941 : 
; 2942 : 			int
; 2943 : 				result,
; 2944 : 				value1,
; 2945 : 				value2,
; 2946 : 				value3,
; 2947 : 				value4,
; 2948 : 				type;
; 2949 : 
; 2950 : 			parser_debug_log ("");

  0031d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00322	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00327	83 c4 04	 add	 esp, 4

; 2951 : 
; 2952 : 			parser_debug_log ("%s (format : %s TRIGGER)", application_tag_strings [tag], application_tag_strings [tag]);

  0032a	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  0032d	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  00334	51		 push	 ecx
  00335	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  00338	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?application_tag_strings@@3PAPBDA[edx*4]
  0033f	50		 push	 eax
  00340	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GJKOPGPG@?$CFs?5?$CIformat?5?3?5?$CFs?5TRIGGER?$CJ@
  00345	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0034a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2953 : 
; 2954 : 			type = get_next_file_enum (file_ptr, campaign_trigger_names, NUM_CAMPAIGN_TRIGGER_TYPES);

  0034d	6a 12		 push	 18			; 00000012H
  0034f	68 00 00 00 00	 push	 OFFSET ?campaign_trigger_names@@3PAPBDA ; campaign_trigger_names
  00354	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00357	50		 push	 eax
  00358	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0035d	89 85 a0 fe ff
	ff		 mov	 DWORD PTR _type$3[ebp], eax

; 2955 : 
; 2956 : 			value1 = 0;

  00363	c7 85 b0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _value1$7[ebp], 0

; 2957 : 			value2 = 0;

  0036d	c7 85 ac fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _value2$6[ebp], 0

; 2958 : 			value3 = 0;

  00377	c7 85 a8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _value3$5[ebp], 0

; 2959 : 			value4 = 0;

  00381	c7 85 a4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _value4$4[ebp], 0

; 2960 : 
; 2961 : 			switch (type)

  0038b	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR _type$3[ebp]
  00391	89 85 54 fe ff
	ff		 mov	 DWORD PTR tv222[ebp], eax
  00397	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR tv222[ebp]
  0039d	83 e9 01	 sub	 ecx, 1
  003a0	89 8d 54 fe ff
	ff		 mov	 DWORD PTR tv222[ebp], ecx
  003a6	83 bd 54 fe ff
	ff 0e		 cmp	 DWORD PTR tv222[ebp], 14 ; 0000000eH
  003ad	0f 87 f1 03 00
	00		 ja	 $LN6@debug_pars
  003b3	8b 95 54 fe ff
	ff		 mov	 edx, DWORD PTR tv222[ebp]
  003b9	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN46@debug_pars[edx]
  003c0	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN48@debug_pars[eax*4]
$LN23@debug_pars:

; 2962 : 			{
; 2963 : 
; 2964 : 				case CAMPAIGN_TRIGGER_BALANCE_OF_POWER:
; 2965 : 				{
; 2966 : 
; 2967 : 					// side
; 2968 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  003c7	68 af 00 00 00	 push	 175			; 000000afH
  003cc	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  003d1	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  003da	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 2969 : 					value1 = get_next_file_int (file_ptr);

  003e0	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003e3	50		 push	 eax
  003e4	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  003e9	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _value1$7[ebp], eax

; 2970 : 
; 2971 : 					// goal
; 2972 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  003ef	68 af 00 00 00	 push	 175			; 000000afH
  003f4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  003f9	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003fc	50		 push	 eax
  003fd	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00402	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 2973 : 					value2 = get_next_file_int (file_ptr);

  00408	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0040b	50		 push	 eax
  0040c	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00411	89 85 ac fe ff
	ff		 mov	 DWORD PTR _value2$6[ebp], eax

; 2974 : 
; 2975 : 					// event
; 2976 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00417	68 af 00 00 00	 push	 175			; 000000afH
  0041c	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00421	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00424	50		 push	 eax
  00425	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0042a	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 2977 : 					get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00430	6a 40		 push	 64			; 00000040H
  00432	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  00435	50		 push	 eax
  00436	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00439	51		 push	 ecx
  0043a	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 2978 : 
; 2979 : 					parser_debug_log ("%s (format : %s :SIDE side :GOAL goal :EVENT event_name) = %d, %d, %s",

  0043f	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  00442	50		 push	 eax
  00443	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _value2$6[ebp]
  00449	51		 push	 ecx
  0044a	8b 95 b0 fe ff
	ff		 mov	 edx, DWORD PTR _value1$7[ebp]
  00450	52		 push	 edx
  00451	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR _type$3[ebp]
  00457	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?campaign_trigger_names@@3PAPBDA[eax*4]
  0045e	51		 push	 ecx
  0045f	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR _type$3[ebp]
  00465	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?campaign_trigger_names@@3PAPBDA[edx*4]
  0046c	50		 push	 eax
  0046d	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@HBGFHEPH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3GOA@
  00472	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00477	83 c4 18	 add	 esp, 24			; 00000018H

; 2980 : 									campaign_trigger_names [type], campaign_trigger_names [type], value1, value2, event_name);
; 2981 : 
; 2982 : 					break;

  0047a	e9 25 03 00 00	 jmp	 $LN6@debug_pars
$LN24@debug_pars:

; 2983 : 				}
; 2984 : 
; 2985 : 				case CAMPAIGN_TRIGGER_TASK_COMPLETED:
; 2986 : 				case CAMPAIGN_TRIGGER_TASK_FAILED:
; 2987 : 				case CAMPAIGN_TRIGGER_OBJECT_DESTROYED:
; 2988 : 				case CAMPAIGN_TRIGGER_OBJECT_FIRED:
; 2989 : 				case CAMPAIGN_TRIGGER_OBJECT_TARGETED:
; 2990 : 				case CAMPAIGN_TRIGGER_INEFFICIENT_KEYSITE:
; 2991 : 				case CAMPAIGN_TRIGGER_WAYPOINT_REACHED:
; 2992 : 				case CAMPAIGN_TRIGGER_SECTOR_WON:
; 2993 : 				case CAMPAIGN_TRIGGER_SECTOR_LOST:
; 2994 : 				case CAMPAIGN_TRIGGER_SECTOR_REACHED:
; 2995 : 				{
; 2996 : 
; 2997 : 					// side
; 2998 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0047f	68 af 00 00 00	 push	 175			; 000000afH
  00484	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00489	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0048c	50		 push	 eax
  0048d	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00492	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 2999 : 					value1 = get_next_file_int (file_ptr);

  00498	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0049b	50		 push	 eax
  0049c	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  004a1	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _value1$7[ebp], eax

; 3000 : 
; 3001 : 					// event
; 3002 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  004a7	68 af 00 00 00	 push	 175			; 000000afH
  004ac	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  004b1	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  004b4	50		 push	 eax
  004b5	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  004ba	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3003 : 					get_next_file_word (file_ptr, event_name, sizeof (event_name));

  004c0	6a 40		 push	 64			; 00000040H
  004c2	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  004c5	50		 push	 eax
  004c6	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  004c9	51		 push	 ecx
  004ca	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3004 : 
; 3005 : 					parser_debug_log ("%s (format : %s :SIDE side :EVENT event_name) = %d, %s",

  004cf	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  004d2	50		 push	 eax
  004d3	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _value1$7[ebp]
  004d9	51		 push	 ecx
  004da	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR _type$3[ebp]
  004e0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?campaign_trigger_names@@3PAPBDA[edx*4]
  004e7	50		 push	 eax
  004e8	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _type$3[ebp]
  004ee	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?campaign_trigger_names@@3PAPBDA[ecx*4]
  004f5	52		 push	 edx
  004f6	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@CDDOKEAH@?$CFs?5?$CIformat?5?3?5?$CFs?5?3SIDE?5side?5?3EVE@
  004fb	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00500	83 c4 14	 add	 esp, 20			; 00000014H

; 3006 : 									campaign_trigger_names [type], campaign_trigger_names [type], value1, event_name);
; 3007 : 
; 3008 : 					break;

  00503	e9 9c 02 00 00	 jmp	 $LN6@debug_pars
$LN25@debug_pars:

; 3009 : 				}
; 3010 : 
; 3011 : 				case CAMPAIGN_TRIGGER_TIME_DURATION:
; 3012 : 				{
; 3013 : 
; 3014 : 					// days
; 3015 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00508	68 af 00 00 00	 push	 175			; 000000afH
  0050d	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00512	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0051b	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3016 : 					value1 = get_next_file_int (file_ptr);

  00521	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00524	50		 push	 eax
  00525	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0052a	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _value1$7[ebp], eax

; 3017 : 
; 3018 : 					// hours
; 3019 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00530	68 af 00 00 00	 push	 175			; 000000afH
  00535	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0053a	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0053d	50		 push	 eax
  0053e	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00543	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3020 : 					value2 = get_next_file_int (file_ptr);

  00549	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0054c	50		 push	 eax
  0054d	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00552	89 85 ac fe ff
	ff		 mov	 DWORD PTR _value2$6[ebp], eax

; 3021 : 
; 3022 : 					// minutes
; 3023 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00558	68 af 00 00 00	 push	 175			; 000000afH
  0055d	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00562	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00565	50		 push	 eax
  00566	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0056b	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3024 : 					value3 = get_next_file_int (file_ptr);

  00571	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00574	50		 push	 eax
  00575	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0057a	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _value3$5[ebp], eax

; 3025 : 
; 3026 : 					// seconds
; 3027 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00580	68 af 00 00 00	 push	 175			; 000000afH
  00585	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0058a	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0058d	50		 push	 eax
  0058e	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00593	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3028 : 					value4 = get_next_file_int (file_ptr);

  00599	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0059c	50		 push	 eax
  0059d	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  005a2	89 85 a4 fe ff
	ff		 mov	 DWORD PTR _value4$4[ebp], eax

; 3029 : 
; 3030 : 					// event
; 3031 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  005a8	68 af 00 00 00	 push	 175			; 000000afH
  005ad	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  005b2	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  005b5	50		 push	 eax
  005b6	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  005bb	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3032 : 					get_next_file_word (file_ptr, event_name, sizeof (event_name));

  005c1	6a 40		 push	 64			; 00000040H
  005c3	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  005c6	50		 push	 eax
  005c7	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  005ca	51		 push	 ecx
  005cb	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3033 : 
; 3034 : 					parser_debug_log ("%s (format : %s :DAYS days :HOURS hours :MINUTES minutes :SECONDS seconds :EVENT event_name) = %d, %d, %d, %d, %s",

  005d0	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  005d3	50		 push	 eax
  005d4	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR _value4$4[ebp]
  005da	51		 push	 ecx
  005db	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _value3$5[ebp]
  005e1	52		 push	 edx
  005e2	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _value2$6[ebp]
  005e8	50		 push	 eax
  005e9	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _value1$7[ebp]
  005ef	51		 push	 ecx
  005f0	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR _type$3[ebp]
  005f6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?campaign_trigger_names@@3PAPBDA[edx*4]
  005fd	50		 push	 eax
  005fe	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _type$3[ebp]
  00604	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?campaign_trigger_names@@3PAPBDA[ecx*4]
  0060b	52		 push	 edx
  0060c	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@BDBEKDIJ@?$CFs?5?$CIformat?5?3?5?$CFs?5?3DAYS?5days?5?3HOU@
  00611	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00616	83 c4 20	 add	 esp, 32			; 00000020H

; 3035 : 									campaign_trigger_names [type], campaign_trigger_names [type], value1, value2, value3, value4, event_name);
; 3036 : 
; 3037 : 					break;

  00619	e9 86 01 00 00	 jmp	 $LN6@debug_pars
$LN26@debug_pars:

; 3038 : 				}
; 3039 : 
; 3040 : 				case CAMPAIGN_TRIGGER_VARIABLE_CONDITION:
; 3041 : 				{
; 3042 : 
; 3043 : 					// if
; 3044 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0061e	68 af 00 00 00	 push	 175			; 000000afH
  00623	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00628	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0062b	50		 push	 eax
  0062c	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00631	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3045 : 					ASSERT (result == FILE_TAG_IF);

  00637	83 bd b4 fe ff
	ff ef		 cmp	 DWORD PTR _result$8[ebp], -17 ; ffffffefH
  0063e	74 1a		 je	 SHORT $LN27@debug_pars
  00640	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??debug_parser_message@@YGXHPAU_iobuf@@@Z@4JA
  00645	05 06 01 00 00	 add	 eax, 262		; 00000106H
  0064a	50		 push	 eax
  0064b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00650	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDFKICIO@result?5?$DN?$DN?5FILE_TAG_IF@
  00655	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN27@debug_pars:

; 3046 : 
; 3047 : 					// variable_name
; 3048 : 					get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  0065a	6a 40		 push	 64			; 00000040H
  0065c	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00662	50		 push	 eax
  00663	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00666	51		 push	 ecx
  00667	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3049 : 					value1 = get_variable_id (variable_name);

  0066c	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00672	50		 push	 eax
  00673	e8 00 00 00 00	 call	 ?get_variable_id@@YGHPBD@Z ; get_variable_id
  00678	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _value1$7[ebp], eax

; 3050 : 
; 3051 : 					// operator
; 3052 : 					get_next_file_word (file_ptr, operator_name, sizeof (operator_name));

  0067e	6a 40		 push	 64			; 00000040H
  00680	8d 45 80	 lea	 eax, DWORD PTR _operator_name$[ebp]
  00683	50		 push	 eax
  00684	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00687	51		 push	 ecx
  00688	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3053 : 					value2 = get_operator_id (operator_name);

  0068d	8d 45 80	 lea	 eax, DWORD PTR _operator_name$[ebp]
  00690	50		 push	 eax
  00691	e8 00 00 00 00	 call	 ?get_operator_id@@YGHPBD@Z ; get_operator_id
  00696	89 85 ac fe ff
	ff		 mov	 DWORD PTR _value2$6[ebp], eax

; 3054 : 
; 3055 : 					// value
; 3056 : 					value3 = get_next_file_int (file_ptr);

  0069c	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0069f	50		 push	 eax
  006a0	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  006a5	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _value3$5[ebp], eax

; 3057 : 
; 3058 : 					// event
; 3059 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  006ab	68 af 00 00 00	 push	 175			; 000000afH
  006b0	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  006b5	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  006b8	50		 push	 eax
  006b9	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  006be	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3060 : 					get_next_file_word (file_ptr, event_name, sizeof (event_name));

  006c4	6a 40		 push	 64			; 00000040H
  006c6	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  006c9	50		 push	 eax
  006ca	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  006cd	51		 push	 ecx
  006ce	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3061 : 
; 3062 : 					parser_debug_log ("%s (format : %s :IF variable_name operator value :EVENT event) = %s, %s, %d, %s",

  006d3	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  006d6	50		 push	 eax
  006d7	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _value3$5[ebp]
  006dd	51		 push	 ecx
  006de	ba 01 00 00 00	 mov	 edx, 1
  006e3	6b c2 00	 imul	 eax, edx, 0
  006e6	8d 4c 05 80	 lea	 ecx, DWORD PTR _operator_name$[ebp+eax]
  006ea	51		 push	 ecx
  006eb	8d 95 40 ff ff
	ff		 lea	 edx, DWORD PTR _variable_name$[ebp]
  006f1	52		 push	 edx
  006f2	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR _type$3[ebp]
  006f8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?campaign_trigger_names@@3PAPBDA[eax*4]
  006ff	51		 push	 ecx
  00700	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR _type$3[ebp]
  00706	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?campaign_trigger_names@@3PAPBDA[edx*4]
  0070d	50		 push	 eax
  0070e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@LOJPOAIK@?$CFs?5?$CIformat?5?3?5?$CFs?5?3IF?5variable_na@
  00713	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00718	83 c4 1c	 add	 esp, 28			; 0000001cH

; 3063 : 									campaign_trigger_names [type], campaign_trigger_names [type], variable_name, &operator_name [0], value3, event_name);
; 3064 : 
; 3065 : 					break;

  0071b	e9 84 00 00 00	 jmp	 $LN6@debug_pars
$LN28@debug_pars:

; 3066 : 				}
; 3067 : 
; 3068 : 				case CAMPAIGN_TRIGGER_RANDOM:
; 3069 : 				{
; 3070 : 
; 3071 : 					// value
; 3072 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00720	68 af 00 00 00	 push	 175			; 000000afH
  00725	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0072a	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0072d	50		 push	 eax
  0072e	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00733	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3073 : 					value1 = get_next_file_int (file_ptr);

  00739	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0073c	50		 push	 eax
  0073d	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00742	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _value1$7[ebp], eax

; 3074 : 
; 3075 : 					// event
; 3076 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00748	68 af 00 00 00	 push	 175			; 000000afH
  0074d	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00752	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00755	50		 push	 eax
  00756	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0075b	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _result$8[ebp], eax

; 3077 : 					get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00761	6a 40		 push	 64			; 00000040H
  00763	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  00766	50		 push	 eax
  00767	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3078 : 
; 3079 : 					parser_debug_log ("%s (format : %s range :EVENT event) = %d, %s",

  00770	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  00773	50		 push	 eax
  00774	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _value1$7[ebp]
  0077a	51		 push	 ecx
  0077b	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR _type$3[ebp]
  00781	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?campaign_trigger_names@@3PAPBDA[edx*4]
  00788	50		 push	 eax
  00789	8b 8d a0 fe ff
	ff		 mov	 ecx, DWORD PTR _type$3[ebp]
  0078f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?campaign_trigger_names@@3PAPBDA[ecx*4]
  00796	52		 push	 edx
  00797	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@BJKCBCNO@?$CFs?5?$CIformat?5?3?5?$CFs?5range?5?3EVENT?5ev@
  0079c	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  007a1	83 c4 14	 add	 esp, 20			; 00000014H
$LN6@debug_pars:

; 3080 : 									campaign_trigger_names [type], campaign_trigger_names [type], value1, event_name);
; 3081 : 
; 3082 : 					break;
; 3083 : 				}
; 3084 : 			}
; 3085 : 
; 3086 : 			break;

  007a4	e9 fc 01 00 00	 jmp	 $LN2@debug_pars
$LN29@debug_pars:

; 3087 : 		}
; 3088 : 
; 3089 : 		case FILE_TAG_SET_EVENT_TRIGGERED:
; 3090 : 		{
; 3091 : 
; 3092 : 			int
; 3093 : 				result;
; 3094 : 
; 3095 : 			campaign_event_type
; 3096 : 				*event;
; 3097 : 
; 3098 : 			get_next_file_word (file_ptr, event_name, sizeof (event_name));

  007a9	6a 40		 push	 64			; 00000040H
  007ab	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  007ae	50		 push	 eax
  007af	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  007b2	51		 push	 ecx
  007b3	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3099 : 
; 3100 : 			event = get_campaign_event (event_name);

  007b8	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  007bb	50		 push	 eax
  007bc	e8 00 00 00 00	 call	 ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ; get_campaign_event
  007c1	89 85 98 fe ff
	ff		 mov	 DWORD PTR _event$1[ebp], eax

; 3101 : 
; 3102 : 			result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  007c7	68 af 00 00 00	 push	 175			; 000000afH
  007cc	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  007d1	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  007d4	50		 push	 eax
  007d5	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  007da	89 85 9c fe ff
	ff		 mov	 DWORD PTR _result$2[ebp], eax

; 3103 : 			ASSERT (result == FILE_TAG_VALUE);

  007e0	83 bd 9c fe ff
	ff e5		 cmp	 DWORD PTR _result$2[ebp], -27 ; ffffffe5H
  007e7	74 1a		 je	 SHORT $LN30@debug_pars
  007e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??debug_parser_message@@YGXHPAU_iobuf@@@Z@4JA
  007ee	05 40 01 00 00	 add	 eax, 320		; 00000140H
  007f3	50		 push	 eax
  007f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  007f9	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BPLLKIAK@result?5?$DN?$DN?5FILE_TAG_VALUE@
  007fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN30@debug_pars:

; 3104 : 
; 3105 : 			value1 = get_next_file_int (file_ptr);

  00803	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00806	50		 push	 eax
  00807	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0080c	89 85 3c ff ff
	ff		 mov	 DWORD PTR _value1$[ebp], eax

; 3106 : 
; 3107 : 			if (!event)

  00812	83 bd 98 fe ff
	ff 00		 cmp	 DWORD PTR _event$1[ebp], 0
  00819	75 24		 jne	 SHORT $LN31@debug_pars

; 3108 : 			{
; 3109 : 
; 3110 : 				parser_debug_log ("Unknown event %s", event_name);

  0081b	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  0081e	50		 push	 eax
  0081f	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HPAHJDLK@Unknown?5event?5?$CFs@
  00824	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00829	83 c4 08	 add	 esp, 8

; 3111 : 
; 3112 : 				debug_fatal ("PARSGEN: unknown event %s", event_name);

  0082c	8d 45 c0	 lea	 eax, DWORD PTR _event_name$[ebp]
  0082f	50		 push	 eax
  00830	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@FKJIOENN@PARSGEN?3?5unknown?5event?5?$CFs@
  00835	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0083a	83 c4 08	 add	 esp, 8

; 3113 : 			}
; 3114 : 			else

  0083d	eb 2e		 jmp	 SHORT $LN32@debug_pars
$LN31@debug_pars:

; 3115 : 			{
; 3116 : 
; 3117 : 				parser_debug_log ("%s (format : %s event_name flag) = %s, %d",

  0083f	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _value1$[ebp]
  00845	50		 push	 eax
  00846	8d 4d c0	 lea	 ecx, DWORD PTR _event_name$[ebp]
  00849	51		 push	 ecx
  0084a	8b 55 08	 mov	 edx, DWORD PTR _tag$[ebp]
  0084d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?application_tag_strings@@3PAPBDA[edx*4]
  00854	50		 push	 eax
  00855	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  00858	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  0085f	52		 push	 edx
  00860	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@NINENMPN@?$CFs?5?$CIformat?5?3?5?$CFs?5event_name?5flag@
  00865	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0086a	83 c4 14	 add	 esp, 20			; 00000014H
$LN32@debug_pars:

; 3118 : 							application_tag_strings [tag], application_tag_strings [tag], event_name, value1);
; 3119 : 			}
; 3120 : 
; 3121 : 			break;

  0086d	e9 33 01 00 00	 jmp	 $LN2@debug_pars
$LN33@debug_pars:

; 3122 : 		}
; 3123 : 
; 3124 : 		case FILE_TAG_SET_VARIABLE:
; 3125 : 		{
; 3126 : 
; 3127 : 			get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  00872	6a 40		 push	 64			; 00000040H
  00874	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  0087a	50		 push	 eax
  0087b	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0087e	51		 push	 ecx
  0087f	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3128 : 
; 3129 : 			parser_debug_log ("%s (format : %s variable_name :SCRIPT) = %s",

  00884	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  0088a	50		 push	 eax
  0088b	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  0088e	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  00895	52		 push	 edx
  00896	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00899	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  008a0	51		 push	 ecx
  008a1	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@CENOLCCB@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?5?3@
  008a6	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  008ab	83 c4 10	 add	 esp, 16			; 00000010H

; 3130 : 							application_tag_strings [tag], application_tag_strings [tag], variable_name);
; 3131 : 
; 3132 : 			break;

  008ae	e9 f2 00 00 00	 jmp	 $LN2@debug_pars
$LN34@debug_pars:

; 3133 : 		}
; 3134 : 
; 3135 : 		case FILE_TAG_VALUE:
; 3136 : 		{
; 3137 : 
; 3138 : 			value1 = get_next_file_int (file_ptr);

  008b3	8b 45 0c	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  008b6	50		 push	 eax
  008b7	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  008bc	89 85 3c ff ff
	ff		 mov	 DWORD PTR _value1$[ebp], eax

; 3139 : 
; 3140 : 			parser_debug_log ("%s (format : %s value) = %d",

  008c2	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _value1$[ebp]
  008c8	50		 push	 eax
  008c9	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  008cc	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  008d3	52		 push	 edx
  008d4	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  008d7	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  008de	51		 push	 ecx
  008df	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JFBKNEMB@?$CFs?5?$CIformat?5?3?5?$CFs?5value?$CJ?5?$DN?5?$CFd@
  008e4	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  008e9	83 c4 10	 add	 esp, 16			; 00000010H

; 3141 : 							application_tag_strings [tag], application_tag_strings [tag], value1);
; 3142 : 
; 3143 : 			break;

  008ec	e9 b4 00 00 00	 jmp	 $LN2@debug_pars
$LN35@debug_pars:

; 3144 : 		}
; 3145 : 
; 3146 : 		case FILE_TAG_VARIABLE:
; 3147 : 		{
; 3148 : 
; 3149 : 			get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  008f1	6a 40		 push	 64			; 00000040H
  008f3	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  008f9	50		 push	 eax
  008fa	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  008fd	51		 push	 ecx
  008fe	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 3150 : 
; 3151 : 			parser_debug_log ("%s (format : %s variable_name) = %s",

  00903	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00909	50		 push	 eax
  0090a	8b 4d 08	 mov	 ecx, DWORD PTR _tag$[ebp]
  0090d	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx*4]
  00914	52		 push	 edx
  00915	8b 45 08	 mov	 eax, DWORD PTR _tag$[ebp]
  00918	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?application_tag_strings@@3PAPBDA[eax*4]
  0091f	51		 push	 ecx
  00920	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@PBDAMCBD@?$CFs?5?$CIformat?5?3?5?$CFs?5variable_name?$CJ?5@
  00925	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0092a	83 c4 10	 add	 esp, 16			; 00000010H

; 3152 : 							application_tag_strings [tag], application_tag_strings [tag], variable_name);
; 3153 : 
; 3154 : 			break;

  0092d	eb 76		 jmp	 SHORT $LN2@debug_pars
$LN36@debug_pars:

; 3155 : 		}
; 3156 : /*
; 3157 : 		case FILE_TAG_CREATE_TASK:
; 3158 : 		case FILE_TAG_CREATE_GROUP:
; 3159 : 		case FILE_TAG_CREATE_MEMBERS:
; 3160 : 		{
; 3161 : 
; 3162 : 			parser_debug_log ("");
; 3163 : 
; 3164 : 			parser_debug_log ("%s (format : %s :TYPE type :SIDE side :WAYPOINTS x, y, z ...)",
; 3165 : 							application_tag_strings [tag], application_tag_strings [tag]);
; 3166 : 
; 3167 : 			break;
; 3168 : 		}
; 3169 : */
; 3170 : 		case FILE_TAG_END:
; 3171 : 		case FILE_TAG_END_EVENT:
; 3172 : 		{
; 3173 : 
; 3174 : 			parser_debug_log ("");

  0092f	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00934	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00939	83 c4 04	 add	 esp, 4

; 3175 : 
; 3176 : 			break;

  0093c	eb 67		 jmp	 SHORT $LN2@debug_pars
$LN37@debug_pars:

; 3177 : 		}
; 3178 : 
; 3179 : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 3180 : // OLD PARSER
; 3181 : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 3182 : 
; 3183 : 		case FILE_TAG_CAMPAIGN_DATA:
; 3184 : 		case FILE_TAG_START_BASE:
; 3185 : 		case FILE_TAG_AUTO_ASSIGN_GUNSHIP:
; 3186 : 		case FILE_TAG_TASK_GENERATION:
; 3187 : 		case FILE_TAG_HARDWARE_RESERVES:
; 3188 : 		case FILE_TAG_TITLE:
; 3189 : 		case FILE_TAG_FACTION:
; 3190 : 		case FILE_TAG_ATTITUDE:
; 3191 : 		case FILE_TAG_REGEN_FREQUENCY:
; 3192 : 		case FILE_TAG_FRONTLINE_FORCES:
; 3193 : 		{
; 3194 : 
; 3195 : 			parser_debug_log ("placing frontline forces");

  0093e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CCFFJNMO@placing?5frontline?5forces@
  00943	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00948	83 c4 04	 add	 esp, 4

; 3196 : 
; 3197 : 			break;

  0094b	eb 58		 jmp	 SHORT $LN2@debug_pars
$LN38@debug_pars:

; 3198 : 		}
; 3199 : 		case FILE_TAG_KEYSITE:
; 3200 : 		{
; 3201 : 
; 3202 : 			parser_debug_log ("creating keysite");

  0094d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JJBAJPME@creating?5keysite@
  00952	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00957	83 c4 04	 add	 esp, 4

; 3203 : 
; 3204 : 			break;

  0095a	eb 49		 jmp	 SHORT $LN2@debug_pars
$LN39@debug_pars:

; 3205 : 		}
; 3206 : 
; 3207 : 		case FILE_TAG_CREATE_MEMBERS:
; 3208 : 		{
; 3209 : 
; 3210 : 			parser_debug_log ("creating member");

  0095c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GFEDIBLE@creating?5member@
  00961	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00966	83 c4 04	 add	 esp, 4

; 3211 : 
; 3212 : 			break;

  00969	eb 3a		 jmp	 SHORT $LN2@debug_pars
$LN40@debug_pars:

; 3213 : 		}
; 3214 : 
; 3215 : 		case FILE_TAG_CREATE_GROUP:
; 3216 : 		{
; 3217 : 
; 3218 : 			parser_debug_log ("creating group");

  0096b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LKNNJBNG@creating?5group@
  00970	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00975	83 c4 04	 add	 esp, 4

; 3219 : 
; 3220 : 			break;

  00978	eb 2b		 jmp	 SHORT $LN2@debug_pars
$LN41@debug_pars:

; 3221 : 		}
; 3222 : 
; 3223 : 		case FILE_TAG_CREATE_TASK:
; 3224 : 		{
; 3225 : 
; 3226 : 			parser_debug_log ("creating task");

  0097a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PJDDNCCA@creating?5task@
  0097f	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00984	83 c4 04	 add	 esp, 4

; 3227 : 
; 3228 : 			break;

  00987	eb 1c		 jmp	 SHORT $LN2@debug_pars
$LN42@debug_pars:

; 3229 : 		}
; 3230 : 
; 3231 : 		case FILE_TAG_SAVED_CAMPAIGN:
; 3232 : 		{
; 3233 : 
; 3234 : 			parser_debug_log ("loading saved campaign");

  00989	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EJJADIOI@loading?5saved?5campaign@
  0098e	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00993	83 c4 04	 add	 esp, 4

; 3235 : 
; 3236 : 			break;

  00996	eb 0d		 jmp	 SHORT $LN2@debug_pars
$LN43@debug_pars:

; 3237 : 		}
; 3238 : 
; 3239 : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 3240 : // OLD PARSER
; 3241 : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 3242 : 
; 3243 : 		default:
; 3244 : 		{
; 3245 : 
; 3246 : 			parser_debug_log ("unknown TAG");

  00998	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NOPDGMKH@unknown?5TAG@
  0099d	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  009a2	83 c4 04	 add	 esp, 4
$LN2@debug_pars:

; 3247 : 		}
; 3248 : 	}
; 3249 : 
; 3250 : 	fseek (file_ptr, original_file_offset, SEEK_SET);

  009a5	6a 00		 push	 0
  009a7	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _original_file_offset$[ebp]
  009ad	50		 push	 eax
  009ae	8b 4d 0c	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  009b1	51		 push	 ecx
  009b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  009b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3251 : }

  009bb	5f		 pop	 edi
  009bc	5e		 pop	 esi
  009bd	5b		 pop	 ebx
  009be	8b e5		 mov	 esp, ebp
  009c0	5d		 pop	 ebp
  009c1	c2 08 00	 ret	 8
$LN47@debug_pars:
  009c4	00 00 00 00	 DD	 $LN11@debug_pars
  009c8	00 00 00 00	 DD	 $LN35@debug_pars
  009cc	00 00 00 00	 DD	 $LN34@debug_pars
  009d0	00 00 00 00	 DD	 $LN8@debug_pars
  009d4	00 00 00 00	 DD	 $LN33@debug_pars
  009d8	00 00 00 00	 DD	 $LN15@debug_pars
  009dc	00 00 00 00	 DD	 $LN20@debug_pars
  009e0	00 00 00 00	 DD	 $LN13@debug_pars
  009e4	00 00 00 00	 DD	 $LN17@debug_pars
  009e8	00 00 00 00	 DD	 $LN36@debug_pars
  009ec	00 00 00 00	 DD	 $LN16@debug_pars
  009f0	00 00 00 00	 DD	 $LN9@debug_pars
  009f4	00 00 00 00	 DD	 $LN18@debug_pars
  009f8	00 00 00 00	 DD	 $LN22@debug_pars
  009fc	00 00 00 00	 DD	 $LN21@debug_pars
  00a00	00 00 00 00	 DD	 $LN19@debug_pars
  00a04	00 00 00 00	 DD	 $LN14@debug_pars
  00a08	00 00 00 00	 DD	 $LN37@debug_pars
  00a0c	00 00 00 00	 DD	 $LN40@debug_pars
  00a10	00 00 00 00	 DD	 $LN39@debug_pars
  00a14	00 00 00 00	 DD	 $LN41@debug_pars
  00a18	00 00 00 00	 DD	 $LN10@debug_pars
  00a1c	00 00 00 00	 DD	 $LN38@debug_pars
  00a20	00 00 00 00	 DD	 $LN42@debug_pars
  00a24	00 00 00 00	 DD	 $LN29@debug_pars
  00a28	00 00 00 00	 DD	 $LN43@debug_pars
$LN45@debug_pars:
  00a2c	00		 DB	 0
  00a2d	01		 DB	 1
  00a2e	02		 DB	 2
  00a2f	19		 DB	 25			; 00000019H
  00a30	03		 DB	 3
  00a31	04		 DB	 4
  00a32	19		 DB	 25			; 00000019H
  00a33	19		 DB	 25			; 00000019H
  00a34	19		 DB	 25			; 00000019H
  00a35	19		 DB	 25			; 00000019H
  00a36	19		 DB	 25			; 00000019H
  00a37	19		 DB	 25			; 00000019H
  00a38	05		 DB	 5
  00a39	19		 DB	 25			; 00000019H
  00a3a	19		 DB	 25			; 00000019H
  00a3b	06		 DB	 6
  00a3c	07		 DB	 7
  00a3d	08		 DB	 8
  00a3e	09		 DB	 9
  00a3f	09		 DB	 9
  00a40	0a		 DB	 10			; 0000000aH
  00a41	0b		 DB	 11			; 0000000bH
  00a42	0c		 DB	 12			; 0000000cH
  00a43	0d		 DB	 13			; 0000000dH
  00a44	0e		 DB	 14			; 0000000eH
  00a45	0f		 DB	 15			; 0000000fH
  00a46	10		 DB	 16			; 00000010H
  00a47	19		 DB	 25			; 00000019H
  00a48	19		 DB	 25			; 00000019H
  00a49	19		 DB	 25			; 00000019H
  00a4a	19		 DB	 25			; 00000019H
  00a4b	19		 DB	 25			; 00000019H
  00a4c	19		 DB	 25			; 00000019H
  00a4d	19		 DB	 25			; 00000019H
  00a4e	19		 DB	 25			; 00000019H
  00a4f	11		 DB	 17			; 00000011H
  00a50	11		 DB	 17			; 00000011H
  00a51	19		 DB	 25			; 00000019H
  00a52	19		 DB	 25			; 00000019H
  00a53	19		 DB	 25			; 00000019H
  00a54	19		 DB	 25			; 00000019H
  00a55	19		 DB	 25			; 00000019H
  00a56	11		 DB	 17			; 00000011H
  00a57	19		 DB	 25			; 00000019H
  00a58	19		 DB	 25			; 00000019H
  00a59	19		 DB	 25			; 00000019H
  00a5a	19		 DB	 25			; 00000019H
  00a5b	19		 DB	 25			; 00000019H
  00a5c	12		 DB	 18			; 00000012H
  00a5d	13		 DB	 19			; 00000013H
  00a5e	19		 DB	 25			; 00000019H
  00a5f	14		 DB	 20			; 00000014H
  00a60	19		 DB	 25			; 00000019H
  00a61	19		 DB	 25			; 00000019H
  00a62	19		 DB	 25			; 00000019H
  00a63	19		 DB	 25			; 00000019H
  00a64	19		 DB	 25			; 00000019H
  00a65	19		 DB	 25			; 00000019H
  00a66	19		 DB	 25			; 00000019H
  00a67	19		 DB	 25			; 00000019H
  00a68	15		 DB	 21			; 00000015H
  00a69	19		 DB	 25			; 00000019H
  00a6a	11		 DB	 17			; 00000011H
  00a6b	19		 DB	 25			; 00000019H
  00a6c	19		 DB	 25			; 00000019H
  00a6d	19		 DB	 25			; 00000019H
  00a6e	19		 DB	 25			; 00000019H
  00a6f	19		 DB	 25			; 00000019H
  00a70	19		 DB	 25			; 00000019H
  00a71	19		 DB	 25			; 00000019H
  00a72	19		 DB	 25			; 00000019H
  00a73	11		 DB	 17			; 00000011H
  00a74	19		 DB	 25			; 00000019H
  00a75	19		 DB	 25			; 00000019H
  00a76	19		 DB	 25			; 00000019H
  00a77	19		 DB	 25			; 00000019H
  00a78	19		 DB	 25			; 00000019H
  00a79	19		 DB	 25			; 00000019H
  00a7a	19		 DB	 25			; 00000019H
  00a7b	19		 DB	 25			; 00000019H
  00a7c	19		 DB	 25			; 00000019H
  00a7d	19		 DB	 25			; 00000019H
  00a7e	19		 DB	 25			; 00000019H
  00a7f	19		 DB	 25			; 00000019H
  00a80	19		 DB	 25			; 00000019H
  00a81	19		 DB	 25			; 00000019H
  00a82	19		 DB	 25			; 00000019H
  00a83	19		 DB	 25			; 00000019H
  00a84	19		 DB	 25			; 00000019H
  00a85	19		 DB	 25			; 00000019H
  00a86	19		 DB	 25			; 00000019H
  00a87	19		 DB	 25			; 00000019H
  00a88	19		 DB	 25			; 00000019H
  00a89	19		 DB	 25			; 00000019H
  00a8a	19		 DB	 25			; 00000019H
  00a8b	19		 DB	 25			; 00000019H
  00a8c	19		 DB	 25			; 00000019H
  00a8d	19		 DB	 25			; 00000019H
  00a8e	19		 DB	 25			; 00000019H
  00a8f	19		 DB	 25			; 00000019H
  00a90	19		 DB	 25			; 00000019H
  00a91	11		 DB	 17			; 00000011H
  00a92	19		 DB	 25			; 00000019H
  00a93	19		 DB	 25			; 00000019H
  00a94	16		 DB	 22			; 00000016H
  00a95	19		 DB	 25			; 00000019H
  00a96	19		 DB	 25			; 00000019H
  00a97	19		 DB	 25			; 00000019H
  00a98	19		 DB	 25			; 00000019H
  00a99	19		 DB	 25			; 00000019H
  00a9a	19		 DB	 25			; 00000019H
  00a9b	19		 DB	 25			; 00000019H
  00a9c	19		 DB	 25			; 00000019H
  00a9d	19		 DB	 25			; 00000019H
  00a9e	19		 DB	 25			; 00000019H
  00a9f	19		 DB	 25			; 00000019H
  00aa0	19		 DB	 25			; 00000019H
  00aa1	19		 DB	 25			; 00000019H
  00aa2	19		 DB	 25			; 00000019H
  00aa3	19		 DB	 25			; 00000019H
  00aa4	19		 DB	 25			; 00000019H
  00aa5	19		 DB	 25			; 00000019H
  00aa6	19		 DB	 25			; 00000019H
  00aa7	19		 DB	 25			; 00000019H
  00aa8	19		 DB	 25			; 00000019H
  00aa9	19		 DB	 25			; 00000019H
  00aaa	19		 DB	 25			; 00000019H
  00aab	19		 DB	 25			; 00000019H
  00aac	19		 DB	 25			; 00000019H
  00aad	19		 DB	 25			; 00000019H
  00aae	19		 DB	 25			; 00000019H
  00aaf	19		 DB	 25			; 00000019H
  00ab0	19		 DB	 25			; 00000019H
  00ab1	19		 DB	 25			; 00000019H
  00ab2	19		 DB	 25			; 00000019H
  00ab3	19		 DB	 25			; 00000019H
  00ab4	19		 DB	 25			; 00000019H
  00ab5	19		 DB	 25			; 00000019H
  00ab6	19		 DB	 25			; 00000019H
  00ab7	19		 DB	 25			; 00000019H
  00ab8	19		 DB	 25			; 00000019H
  00ab9	19		 DB	 25			; 00000019H
  00aba	19		 DB	 25			; 00000019H
  00abb	19		 DB	 25			; 00000019H
  00abc	19		 DB	 25			; 00000019H
  00abd	19		 DB	 25			; 00000019H
  00abe	19		 DB	 25			; 00000019H
  00abf	19		 DB	 25			; 00000019H
  00ac0	19		 DB	 25			; 00000019H
  00ac1	19		 DB	 25			; 00000019H
  00ac2	19		 DB	 25			; 00000019H
  00ac3	19		 DB	 25			; 00000019H
  00ac4	19		 DB	 25			; 00000019H
  00ac5	19		 DB	 25			; 00000019H
  00ac6	19		 DB	 25			; 00000019H
  00ac7	19		 DB	 25			; 00000019H
  00ac8	19		 DB	 25			; 00000019H
  00ac9	19		 DB	 25			; 00000019H
  00aca	11		 DB	 17			; 00000011H
  00acb	19		 DB	 25			; 00000019H
  00acc	19		 DB	 25			; 00000019H
  00acd	19		 DB	 25			; 00000019H
  00ace	19		 DB	 25			; 00000019H
  00acf	17		 DB	 23			; 00000017H
  00ad0	19		 DB	 25			; 00000019H
  00ad1	19		 DB	 25			; 00000019H
  00ad2	19		 DB	 25			; 00000019H
  00ad3	19		 DB	 25			; 00000019H
  00ad4	19		 DB	 25			; 00000019H
  00ad5	18		 DB	 24			; 00000018H
  00ad6	19		 DB	 25			; 00000019H
  00ad7	19		 DB	 25			; 00000019H
  00ad8	19		 DB	 25			; 00000019H
  00ad9	19		 DB	 25			; 00000019H
  00ada	19		 DB	 25			; 00000019H
  00adb	19		 DB	 25			; 00000019H
  00adc	19		 DB	 25			; 00000019H
  00add	19		 DB	 25			; 00000019H
  00ade	19		 DB	 25			; 00000019H
  00adf	11		 DB	 17			; 00000011H
  00ae0	19		 DB	 25			; 00000019H
  00ae1	19		 DB	 25			; 00000019H
  00ae2	11		 DB	 17			; 00000011H
  00ae3	19		 DB	 25			; 00000019H
  00ae4	19		 DB	 25			; 00000019H
  00ae5	19		 DB	 25			; 00000019H
  00ae6	19		 DB	 25			; 00000019H
  00ae7	19		 DB	 25			; 00000019H
  00ae8	19		 DB	 25			; 00000019H
  00ae9	11		 DB	 17			; 00000011H
  00aea	66 90		 npad	 2
$LN48@debug_pars:
  00aec	00 00 00 00	 DD	 $LN23@debug_pars
  00af0	00 00 00 00	 DD	 $LN24@debug_pars
  00af4	00 00 00 00	 DD	 $LN25@debug_pars
  00af8	00 00 00 00	 DD	 $LN26@debug_pars
  00afc	00 00 00 00	 DD	 $LN28@debug_pars
  00b00	00 00 00 00	 DD	 $LN6@debug_pars
$LN46@debug_pars:
  00b04	00		 DB	 0
  00b05	01		 DB	 1
  00b06	01		 DB	 1
  00b07	01		 DB	 1
  00b08	01		 DB	 1
  00b09	01		 DB	 1
  00b0a	05		 DB	 5
  00b0b	01		 DB	 1
  00b0c	01		 DB	 1
  00b0d	01		 DB	 1
  00b0e	01		 DB	 1
  00b0f	01		 DB	 1
  00b10	02		 DB	 2
  00b11	03		 DB	 3
  00b12	04		 DB	 4
?debug_parser_message@@YGXHPAU_iobuf@@@Z ENDP		; debug_parser_message
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?key_bound_trigger_function@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_event$ = -16						; size = 4
_this_campaign_trigger$ = -12				; size = 4
_offset$ = -8						; size = 4
_return_value$ = -4					; size = 4
_ev$ = 8						; size = 4
?key_bound_trigger_function@@YGXPAUEVENT@@@Z PROC	; key_bound_trigger_function, COMDAT

; 2468 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2469 : 
; 2470 : 	int
; 2471 : 		return_value,
; 2472 : 		offset;
; 2473 : 
; 2474 : 	campaign_trigger_type
; 2475 : 		*this_campaign_trigger;
; 2476 : 
; 2477 : 	campaign_event_type
; 2478 : 		*event;
; 2479 : 
; 2480 : 	this_campaign_trigger = campaign_trigger_head;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A ; campaign_trigger_head
  0000e	89 45 f4	 mov	 DWORD PTR _this_campaign_trigger$[ebp], eax
$LN2@key_bound_:

; 2481 : 
; 2482 : 	while (this_campaign_trigger)

  00011	83 7d f4 00	 cmp	 DWORD PTR _this_campaign_trigger$[ebp], 0
  00015	0f 84 f0 00 00
	00		 je	 $LN1@key_bound_

; 2483 : 	{
; 2484 : 
; 2485 : 		if (this_campaign_trigger->value1 == ev->key)

  0001b	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0001e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00022	8b 55 08	 mov	 edx, DWORD PTR _ev$[ebp]
  00025	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  00029	3b c8		 cmp	 ecx, eax
  0002b	0f 85 cc 00 00
	00		 jne	 $LN4@key_bound_

; 2486 : 		{
; 2487 : 
; 2488 : 			if (this_campaign_trigger->value2 == ev->modifier)

  00031	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00034	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  00038	8b 55 08	 mov	 edx, DWORD PTR _ev$[ebp]
  0003b	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0003f	3b c8		 cmp	 ecx, eax
  00041	0f 85 b6 00 00
	00		 jne	 $LN4@key_bound_

; 2489 : 			{
; 2490 : 
; 2491 : 				if (this_campaign_trigger->value3 == ev->state)

  00047	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0004a	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  0004e	8b 55 08	 mov	 edx, DWORD PTR _ev$[ebp]
  00051	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00055	3b c8		 cmp	 ecx, eax
  00057	0f 85 a0 00 00
	00		 jne	 $LN4@key_bound_

; 2492 : 				{
; 2493 : 
; 2494 : 					event = get_campaign_event (this_campaign_trigger->event_name);

  0005d	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00060	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ; get_campaign_event
  00069	89 45 f0	 mov	 DWORD PTR _event$[ebp], eax

; 2495 : 
; 2496 : 					if (event)

  0006c	83 7d f0 00	 cmp	 DWORD PTR _event$[ebp], 0
  00070	0f 84 87 00 00
	00		 je	 $LN4@key_bound_

; 2497 : 					{
; 2498 : 
; 2499 : 						if (!event->triggered)

  00076	8b 45 f0	 mov	 eax, DWORD PTR _event$[ebp]
  00079	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0007d	75 7e		 jne	 SHORT $LN4@key_bound_

; 2500 : 						{
; 2501 : 
; 2502 : 							parser_debug_log ("calling EVENT %s to key %d, modifier %d, state %d", this_campaign_trigger->event_name, this_campaign_trigger->value1, this_campaign_trigger->value2, this_campaign_trigger->value3);

  0007f	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00082	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  00086	51		 push	 ecx
  00087	8b 55 f4	 mov	 edx, DWORD PTR _this_campaign_trigger$[ebp]
  0008a	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  0008e	50		 push	 eax
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _this_campaign_trigger$[ebp]
  00092	0f bf 51 04	 movsx	 edx, WORD PTR [ecx+4]
  00096	52		 push	 edx
  00097	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0009a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0009d	51		 push	 ecx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@OHNLBLOF@calling?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@
  000a3	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  000a8	83 c4 14	 add	 esp, 20			; 00000014H

; 2503 : 							debug_log ("calling EVENT %s to key %d, modifier %d, state %d", this_campaign_trigger->event_name, this_campaign_trigger->value1, this_campaign_trigger->value2, this_campaign_trigger->value3);

  000ab	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  000ae	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  000b2	51		 push	 ecx
  000b3	8b 55 f4	 mov	 edx, DWORD PTR _this_campaign_trigger$[ebp]
  000b6	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _this_campaign_trigger$[ebp]
  000be	0f bf 51 04	 movsx	 edx, WORD PTR [ecx+4]
  000c2	52		 push	 edx
  000c3	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  000c6	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000c9	51		 push	 ecx
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@OHNLBLOF@calling?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@
  000cf	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d4	83 c4 14	 add	 esp, 20			; 00000014H

; 2504 : 
; 2505 : 							offset = event->file_offset;

  000d7	8b 45 f0	 mov	 eax, DWORD PTR _event$[ebp]
  000da	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000dd	89 4d f8	 mov	 DWORD PTR _offset$[ebp], ecx

; 2506 : 
; 2507 : 							event->triggered = FALSE;

  000e0	8b 45 f0	 mov	 eax, DWORD PTR _event$[ebp]
  000e3	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 2508 : 
; 2509 : 							return_value = parser_campaign_file (event->filename, &offset);

  000ea	8d 45 f8	 lea	 eax, DWORD PTR _offset$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d f0	 mov	 ecx, DWORD PTR _event$[ebp]
  000f1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f4	52		 push	 edx
  000f5	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  000fa	89 45 fc	 mov	 DWORD PTR _return_value$[ebp], eax
$LN4@key_bound_:

; 2510 : 						}
; 2511 : 					}
; 2512 : 				}
; 2513 : 			}
; 2514 : 		}
; 2515 : 
; 2516 : 		this_campaign_trigger = this_campaign_trigger->next;

  000fd	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00100	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00103	89 4d f4	 mov	 DWORD PTR _this_campaign_trigger$[ebp], ecx

; 2517 : 	}

  00106	e9 06 ff ff ff	 jmp	 $LN2@key_bound_
$LN1@key_bound_:

; 2518 : }

  0010b	5f		 pop	 edi
  0010c	5e		 pop	 esi
  0010d	5b		 pop	 ebx
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c2 04 00	 ret	 4
?key_bound_trigger_function@@YGXPAUEVENT@@@Z ENDP	; key_bound_trigger_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?calulate_operator@@YGHHPADH@Z
_TEXT	SEGMENT
tv65 = -328						; size = 4
_log_string$1 = -260					; size = 256
_return_value$ = -4					; size = 4
_value1$ = 8						; size = 4
_operator_name$ = 12					; size = 4
_value2$ = 16						; size = 4
?calulate_operator@@YGHHPADH@Z PROC			; calulate_operator, COMDAT

; 2726 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2727 : 
; 2728 : 	int
; 2729 : 		return_value;
; 2730 : 
; 2731 : 	switch (*operator_name)

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _operator_name$[ebp]
  0000f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00012	89 8d b8 fe ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  00018	8b 95 b8 fe ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  0001e	83 ea 2a	 sub	 edx, 42			; 0000002aH
  00021	89 95 b8 fe ff
	ff		 mov	 DWORD PTR tv65[ebp], edx
  00027	83 bd b8 fe ff
	ff 05		 cmp	 DWORD PTR tv65[ebp], 5
  0002e	77 3b		 ja	 SHORT $LN8@calulate_o
  00030	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv65[ebp]
  00036	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN10@calulate_o[eax*4]
$LN4@calulate_o:

; 2732 : 	{
; 2733 : 
; 2734 : 		case '+':
; 2735 : 		{
; 2736 : 
; 2737 : 			return_value = value1 + value2;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _value1$[ebp]
  00040	03 45 10	 add	 eax, DWORD PTR _value2$[ebp]
  00043	89 45 fc	 mov	 DWORD PTR _return_value$[ebp], eax

; 2738 : 
; 2739 : 			break;

  00046	eb 56		 jmp	 SHORT $LN2@calulate_o
$LN5@calulate_o:

; 2740 : 		}
; 2741 : 
; 2742 : 		case '-':
; 2743 : 		{
; 2744 : 
; 2745 : 			return_value = value1 - value2;

  00048	8b 45 08	 mov	 eax, DWORD PTR _value1$[ebp]
  0004b	2b 45 10	 sub	 eax, DWORD PTR _value2$[ebp]
  0004e	89 45 fc	 mov	 DWORD PTR _return_value$[ebp], eax

; 2746 : 
; 2747 : 			break;

  00051	eb 4b		 jmp	 SHORT $LN2@calulate_o
$LN6@calulate_o:

; 2748 : 		}
; 2749 : 		case '*':
; 2750 : 		{
; 2751 : 
; 2752 : 			return_value = value1 * value2;

  00053	8b 45 08	 mov	 eax, DWORD PTR _value1$[ebp]
  00056	0f af 45 10	 imul	 eax, DWORD PTR _value2$[ebp]
  0005a	89 45 fc	 mov	 DWORD PTR _return_value$[ebp], eax

; 2753 : 
; 2754 : 			break;

  0005d	eb 3f		 jmp	 SHORT $LN2@calulate_o
$LN7@calulate_o:

; 2755 : 		}
; 2756 : 		case '/':
; 2757 : 		{
; 2758 : 
; 2759 : 			return_value = value1 / value2;

  0005f	8b 45 08	 mov	 eax, DWORD PTR _value1$[ebp]
  00062	99		 cdq
  00063	f7 7d 10	 idiv	 DWORD PTR _value2$[ebp]
  00066	89 45 fc	 mov	 DWORD PTR _return_value$[ebp], eax

; 2760 : 
; 2761 : 			break;

  00069	eb 33		 jmp	 SHORT $LN2@calulate_o
$LN8@calulate_o:

; 2762 : 		}
; 2763 : 
; 2764 : 		default:
; 2765 : 		{
; 2766 : 
; 2767 : 			char
; 2768 : 				log_string [256];
; 2769 : 
; 2770 : 			sprintf (log_string, "PARSGEN: unknown operator %c", operator_name [0]);

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 55 0c	 mov	 edx, DWORD PTR _operator_name$[ebp]
  00076	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  0007a	50		 push	 eax
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KJOHPJOA@PARSGEN?3?5unknown?5operator?5?$CFc@
  00080	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _log_string$1[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 _sprintf
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2771 : 			debug_fatal (log_string);

  0008f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _log_string$1[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0009b	83 c4 04	 add	 esp, 4
$LN2@calulate_o:

; 2772 : 		}
; 2773 : 	}
; 2774 : 
; 2775 : 	return return_value;

  0009e	8b 45 fc	 mov	 eax, DWORD PTR _return_value$[ebp]

; 2776 : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 0c 00	 ret	 12			; 0000000cH
  000aa	66 90		 npad	 2
$LN10@calulate_o:
  000ac	00 00 00 00	 DD	 $LN6@calulate_o
  000b0	00 00 00 00	 DD	 $LN4@calulate_o
  000b4	00 00 00 00	 DD	 $LN8@calulate_o
  000b8	00 00 00 00	 DD	 $LN5@calulate_o
  000bc	00 00 00 00	 DD	 $LN8@calulate_o
  000c0	00 00 00 00	 DD	 $LN7@calulate_o
?calulate_operator@@YGHHPADH@Z ENDP			; calulate_operator
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?destroy_while_loop_head@@YGXXZ
_TEXT	SEGMENT
_destroy_while_loop$ = -4				; size = 4
?destroy_while_loop_head@@YGXXZ PROC			; destroy_while_loop_head, COMDAT

; 2707 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2708 : 
; 2709 : 	campaign_while_loop_type
; 2710 : 		*destroy_while_loop;
; 2711 : 
; 2712 : 	destroy_while_loop = campaign_while_loop_head;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A ; campaign_while_loop_head
  0000e	89 45 fc	 mov	 DWORD PTR _destroy_while_loop$[ebp], eax

; 2713 : 
; 2714 : 	campaign_while_loop_head = campaign_while_loop_head->next;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A ; campaign_while_loop_head
  00016	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00019	89 0d 00 00 00
	00		 mov	 DWORD PTR ?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A, ecx ; campaign_while_loop_head

; 2715 : 
; 2716 : 	free (destroy_while_loop->filename);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _destroy_while_loop$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	51		 push	 ecx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0002b	83 c4 04	 add	 esp, 4

; 2717 : 
; 2718 : 	free (destroy_while_loop);

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _destroy_while_loop$[ebp]
  00031	50		 push	 eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00038	83 c4 04	 add	 esp, 4

; 2719 : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?destroy_while_loop_head@@YGXXZ ENDP			; destroy_while_loop_head
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?add_while_loop@@YGPAUCAMPAIGN_WHILE_LOOP_TYPE@@PBDH@Z
_TEXT	SEGMENT
_new_while_loop$ = -4					; size = 4
_filename$ = 8						; size = 4
_file_offset$ = 12					; size = 4
?add_while_loop@@YGPAUCAMPAIGN_WHILE_LOOP_TYPE@@PBDH@Z PROC ; add_while_loop, COMDAT

; 2681 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2682 : 
; 2683 : 	campaign_while_loop_type
; 2684 : 		*new_while_loop;
; 2685 : 
; 2686 : 	new_while_loop = (campaign_while_loop_type *) malloc (sizeof (campaign_while_loop_type));

  00009	6a 0c		 push	 12			; 0000000cH
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00011	83 c4 04	 add	 esp, 4
  00014	89 45 fc	 mov	 DWORD PTR _new_while_loop$[ebp], eax

; 2687 : 
; 2688 : 	memset (new_while_loop, 0, sizeof (campaign_while_loop_type));

  00017	6a 0c		 push	 12			; 0000000cH
  00019	6a 00		 push	 0
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _new_while_loop$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2689 : 
; 2690 : 	new_while_loop->filename = (char *) malloc (strlen (filename) + 1);

  00027	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _strlen
  00030	83 c4 04	 add	 esp, 4
  00033	83 c0 01	 add	 eax, 1
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0003d	83 c4 04	 add	 esp, 4
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _new_while_loop$[ebp]
  00043	89 01		 mov	 DWORD PTR [ecx], eax

; 2691 : 	sprintf (new_while_loop->filename, "%s", filename);

  00045	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _new_while_loop$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	52		 push	 edx
  00054	e8 00 00 00 00	 call	 _sprintf
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2692 : 
; 2693 : 	new_while_loop->file_offset = file_offset;

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _new_while_loop$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _file_offset$[ebp]
  00062	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 2694 : 
; 2695 : 	new_while_loop->next = campaign_while_loop_head;

  00065	8b 45 fc	 mov	 eax, DWORD PTR _new_while_loop$[ebp]
  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A ; campaign_while_loop_head
  0006e	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2696 : 
; 2697 : 	campaign_while_loop_head = new_while_loop;

  00071	8b 45 fc	 mov	 eax, DWORD PTR _new_while_loop$[ebp]
  00074	a3 00 00 00 00	 mov	 DWORD PTR ?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A, eax ; campaign_while_loop_head

; 2698 : 
; 2699 : 	return new_while_loop;

  00079	8b 45 fc	 mov	 eax, DWORD PTR _new_while_loop$[ebp]

; 2700 : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
?add_while_loop@@YGPAUCAMPAIGN_WHILE_LOOP_TYPE@@PBDH@Z ENDP ; add_while_loop
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z
_TEXT	SEGMENT
tv84 = -112						; size = 4
tv76 = -108						; size = 4
tv66 = -108						; size = 4
_random$1 = -40						; size = 4
_elapsed_time$2 = -36					; size = 4
_elapsed_seconds$3 = -32				; size = 4
_elapsed_minutes$4 = -28				; size = 4
_elapsed_hours$5 = -24					; size = 4
_elapsed_days$6 = -20					; size = 4
_balance_of_power$7 = -16				; size = 4
_operator_name$ = -9					; size = 1
_variable_name$ = -8					; size = 4
_return_value$ = -4					; size = 4
_this_campaign_trigger$ = 8				; size = 4
?trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z PROC ; trigger_triggered, COMDAT

; 2551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2552 : 
; 2553 : 	int
; 2554 : 		return_value;
; 2555 : 
; 2556 : 	const char
; 2557 : 		*variable_name;
; 2558 : 	char
; 2559 : 		operator_name;
; 2560 : 
; 2561 : 	return_value = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 0

; 2562 : 
; 2563 : 	switch (this_campaign_trigger->type)

  00010	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00013	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00016	89 4d 94	 mov	 DWORD PTR tv66[ebp], ecx
  00019	8b 55 94	 mov	 edx, DWORD PTR tv66[ebp]
  0001c	83 ea 01	 sub	 edx, 1
  0001f	89 55 94	 mov	 DWORD PTR tv66[ebp], edx
  00022	83 7d 94 0e	 cmp	 DWORD PTR tv66[ebp], 14	; 0000000eH
  00026	0f 87 c2 01 00
	00		 ja	 $LN2@trigger_tr
  0002c	8b 45 94	 mov	 eax, DWORD PTR tv66[ebp]
  0002f	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN20@trigger_tr[eax]
  00036	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN21@trigger_tr[ecx*4]
$LN4@trigger_tr:

; 2564 : 	{
; 2565 : 
; 2566 : 		case CAMPAIGN_TRIGGER_BALANCE_OF_POWER:
; 2567 : 		{
; 2568 : 
; 2569 : 			int
; 2570 : 				balance_of_power;
; 2571 : 
; 2572 : 			balance_of_power = 50.0; // done per side...

  0003d	c7 45 f0 32 00
	00 00		 mov	 DWORD PTR _balance_of_power$7[ebp], 50 ; 00000032H

; 2573 : 
; 2574 : 			if (balance_of_power > this_campaign_trigger->value2)

  00044	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00047	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  0004b	39 4d f0	 cmp	 DWORD PTR _balance_of_power$7[ebp], ecx
  0004e	7e 07		 jle	 SHORT $LN5@trigger_tr

; 2575 : 			{
; 2576 : 
; 2577 : 				return_value =  TRUE;

  00050	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1
$LN5@trigger_tr:

; 2578 : 			}
; 2579 : 
; 2580 : 			break;

  00057	e9 92 01 00 00	 jmp	 $LN2@trigger_tr
$LN6@trigger_tr:

; 2581 : 		}
; 2582 : 		case CAMPAIGN_TRIGGER_TASK_COMPLETED:
; 2583 : 		case CAMPAIGN_TRIGGER_TASK_FAILED:
; 2584 : 		case CAMPAIGN_TRIGGER_OBJECT_DESTROYED:
; 2585 : 		case CAMPAIGN_TRIGGER_OBJECT_FIRED:
; 2586 : 		case CAMPAIGN_TRIGGER_OBJECT_TARGETED:
; 2587 : 		case CAMPAIGN_TRIGGER_INEFFICIENT_KEYSITE:
; 2588 : 		case CAMPAIGN_TRIGGER_WAYPOINT_REACHED:
; 2589 : 		case CAMPAIGN_TRIGGER_SECTOR_WON:
; 2590 : 		case CAMPAIGN_TRIGGER_SECTOR_LOST:
; 2591 : 		case CAMPAIGN_TRIGGER_SECTOR_REACHED:
; 2592 : 		{
; 2593 : 
; 2594 : 			return_value =  TRUE;

  0005c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1

; 2595 : 
; 2596 : 			break;

  00063	e9 86 01 00 00	 jmp	 $LN2@trigger_tr
$LN7@trigger_tr:

; 2597 : 		}
; 2598 : 
; 2599 : 		case CAMPAIGN_TRIGGER_TIME_DURATION:
; 2600 : 		{
; 2601 : 
; 2602 : 			int
; 2603 : 				elapsed_days,
; 2604 : 				elapsed_hours,
; 2605 : 				elapsed_minutes,
; 2606 : 				elapsed_seconds;
; 2607 : 
; 2608 : 			float
; 2609 : 				elapsed_time;
; 2610 : 
; 2611 : 			//
; 2612 : 			// check time criteria
; 2613 : 			//
; 2614 : 
; 2615 : 			elapsed_time = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_ELAPSED_TIME);

  00068	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0006f	74 0c		 je	 SHORT $LN16@trigger_tr
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00076	8b 08		 mov	 ecx, DWORD PTR [eax]
  00078	89 4d 94	 mov	 DWORD PTR tv76[ebp], ecx
  0007b	eb 21		 jmp	 SHORT $LN17@trigger_tr
$LN16@trigger_tr:
  0007d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z@4JA
  00083	83 c2 40	 add	 edx, 64			; 00000040H
  00086	52		 push	 edx
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00097	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN17@trigger_tr:
  0009e	b9 01 00 00 00	 mov	 ecx, 1
  000a3	85 c9		 test	 ecx, ecx
  000a5	74 09		 je	 SHORT $LN18@trigger_tr
  000a7	c7 45 90 23 00
	00 00		 mov	 DWORD PTR tv84[ebp], 35	; 00000023H
  000ae	eb 21		 jmp	 SHORT $LN19@trigger_tr
$LN18@trigger_tr:
  000b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z@4JA
  000b6	83 c2 40	 add	 edx, 64			; 00000040H
  000b9	52		 push	 edx
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ca	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN19@trigger_tr:
  000d1	6a 23		 push	 35			; 00000023H
  000d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000d9	51		 push	 ecx
  000da	69 55 94 bc 02
	00 00		 imul	 edx, DWORD PTR tv76[ebp], 700
  000e1	8b 45 90	 mov	 eax, DWORD PTR tv84[ebp]
  000e4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000eb	ff d1		 call	 ecx
  000ed	d9 5d dc	 fstp	 DWORD PTR _elapsed_time$2[ebp]

; 2616 : 
; 2617 : 			convert_float_to_int (elapsed_time / ONE_DAY, &elapsed_days);

  000f0	8d 45 ec	 lea	 eax, DWORD PTR _elapsed_days$6[ebp]
  000f3	50		 push	 eax
  000f4	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _elapsed_time$2[ebp]
  000f9	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@47a8c000
  00101	51		 push	 ecx
  00102	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00107	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 2618 : 
; 2619 : 			elapsed_time = fmod (elapsed_time, ONE_DAY);

  0010c	68 80 51 01 00	 push	 86400			; 00015180H
  00111	51		 push	 ecx
  00112	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _elapsed_time$2[ebp]
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	e8 00 00 00 00	 call	 ??$fmod@MHX@@YGNMH@Z	; fmod<float,int,void>
  00121	d9 5d dc	 fstp	 DWORD PTR _elapsed_time$2[ebp]

; 2620 : 
; 2621 : 			get_digital_clock_int_values (elapsed_time, &elapsed_hours, &elapsed_minutes, &elapsed_seconds);

  00124	8d 45 e0	 lea	 eax, DWORD PTR _elapsed_seconds$3[ebp]
  00127	50		 push	 eax
  00128	8d 4d e4	 lea	 ecx, DWORD PTR _elapsed_minutes$4[ebp]
  0012b	51		 push	 ecx
  0012c	8d 55 e8	 lea	 edx, DWORD PTR _elapsed_hours$5[ebp]
  0012f	52		 push	 edx
  00130	51		 push	 ecx
  00131	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _elapsed_time$2[ebp]
  00136	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013b	e8 00 00 00 00	 call	 ?get_digital_clock_int_values@@YGXMPAH00@Z ; get_digital_clock_int_values

; 2622 : 
; 2623 : 			if (elapsed_days >= this_campaign_trigger->days)

  00140	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00143	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00147	39 4d ec	 cmp	 DWORD PTR _elapsed_days$6[ebp], ecx
  0014a	7c 2b		 jl	 SHORT $LN11@trigger_tr

; 2624 : 			{
; 2625 : 
; 2626 : 				if (elapsed_hours >= this_campaign_trigger->hours)

  0014c	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0014f	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  00153	39 4d e8	 cmp	 DWORD PTR _elapsed_hours$5[ebp], ecx
  00156	7c 1f		 jl	 SHORT $LN11@trigger_tr

; 2627 : 				{
; 2628 : 
; 2629 : 					if (elapsed_minutes >= this_campaign_trigger->minutes)

  00158	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0015b	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  0015f	39 4d e4	 cmp	 DWORD PTR _elapsed_minutes$4[ebp], ecx
  00162	7c 13		 jl	 SHORT $LN11@trigger_tr

; 2630 : 					{
; 2631 : 
; 2632 : 						if (elapsed_seconds >= this_campaign_trigger->seconds)

  00164	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00167	0f bf 48 0a	 movsx	 ecx, WORD PTR [eax+10]
  0016b	39 4d e0	 cmp	 DWORD PTR _elapsed_seconds$3[ebp], ecx
  0016e	7c 07		 jl	 SHORT $LN11@trigger_tr

; 2633 : 						{
; 2634 : 
; 2635 : 							return_value = TRUE;

  00170	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1
$LN11@trigger_tr:

; 2636 : 						}
; 2637 : 					}
; 2638 : 				}
; 2639 : 			}
; 2640 : 
; 2641 : 			break;

  00177	eb 75		 jmp	 SHORT $LN2@trigger_tr
$LN12@trigger_tr:

; 2642 : 		}
; 2643 : 		case CAMPAIGN_TRIGGER_VARIABLE_CONDITION:
; 2644 : 		{
; 2645 : 
; 2646 : 			variable_name = get_variable_name (this_campaign_trigger->value1);

  00179	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0017c	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00180	51		 push	 ecx
  00181	e8 00 00 00 00	 call	 ?get_variable_name@@YGPBDH@Z ; get_variable_name
  00186	89 45 f8	 mov	 DWORD PTR _variable_name$[ebp], eax

; 2647 : 
; 2648 : 			operator_name = get_operator_name (this_campaign_trigger->value2);

  00189	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0018c	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  00190	51		 push	 ecx
  00191	e8 00 00 00 00	 call	 ?get_operator_name@@YGDH@Z ; get_operator_name
  00196	88 45 f7	 mov	 BYTE PTR _operator_name$[ebp], al

; 2649 : 
; 2650 : 			return_value = if_file_tag_variable (variable_name, &operator_name, this_campaign_trigger->value3);

  00199	8b 45 08	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0019c	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  001a0	51		 push	 ecx
  001a1	8d 55 f7	 lea	 edx, DWORD PTR _operator_name$[ebp]
  001a4	52		 push	 edx
  001a5	8b 45 f8	 mov	 eax, DWORD PTR _variable_name$[ebp]
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ?if_file_tag_variable@@YGHPBD0H@Z ; if_file_tag_variable
  001ae	89 45 fc	 mov	 DWORD PTR _return_value$[ebp], eax

; 2651 : 
; 2652 : 			break;

  001b1	eb 3b		 jmp	 SHORT $LN2@trigger_tr
$LN13@trigger_tr:

; 2653 : 		}
; 2654 : 
; 2655 : 		case CAMPAIGN_TRIGGER_RANDOM:
; 2656 : 		{
; 2657 : 
; 2658 : 			int
; 2659 : 				random;
; 2660 : 
; 2661 : 			random = (rand16 () % this_campaign_trigger->value1);

  001b3	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  001bd	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  001c2	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  001cc	c1 f8 10	 sar	 eax, 16			; 00000010H
  001cf	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  001d4	8b 4d 08	 mov	 ecx, DWORD PTR _this_campaign_trigger$[ebp]
  001d7	0f bf 49 04	 movsx	 ecx, WORD PTR [ecx+4]
  001db	99		 cdq
  001dc	f7 f9		 idiv	 ecx
  001de	89 55 d8	 mov	 DWORD PTR _random$1[ebp], edx

; 2662 : 
; 2663 : 			if (random == 0)

  001e1	83 7d d8 00	 cmp	 DWORD PTR _random$1[ebp], 0
  001e5	75 07		 jne	 SHORT $LN14@trigger_tr

; 2664 : 			{
; 2665 : 
; 2666 : 				return_value = TRUE;

  001e7	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1
$LN14@trigger_tr:
$LN2@trigger_tr:

; 2667 : 			}
; 2668 : 
; 2669 : 			break;
; 2670 : 		}
; 2671 : 	}
; 2672 : 
; 2673 : 	return return_value;

  001ee	8b 45 fc	 mov	 eax, DWORD PTR _return_value$[ebp]

; 2674 : }

  001f1	5f		 pop	 edi
  001f2	5e		 pop	 esi
  001f3	5b		 pop	 ebx
  001f4	8b e5		 mov	 esp, ebp
  001f6	5d		 pop	 ebp
  001f7	c2 04 00	 ret	 4
  001fa	66 90		 npad	 2
$LN21@trigger_tr:
  001fc	00 00 00 00	 DD	 $LN4@trigger_tr
  00200	00 00 00 00	 DD	 $LN6@trigger_tr
  00204	00 00 00 00	 DD	 $LN7@trigger_tr
  00208	00 00 00 00	 DD	 $LN12@trigger_tr
  0020c	00 00 00 00	 DD	 $LN13@trigger_tr
  00210	00 00 00 00	 DD	 $LN2@trigger_tr
$LN20@trigger_tr:
  00214	00		 DB	 0
  00215	01		 DB	 1
  00216	01		 DB	 1
  00217	01		 DB	 1
  00218	01		 DB	 1
  00219	01		 DB	 1
  0021a	05		 DB	 5
  0021b	01		 DB	 1
  0021c	01		 DB	 1
  0021d	01		 DB	 1
  0021e	01		 DB	 1
  0021f	01		 DB	 1
  00220	02		 DB	 2
  00221	03		 DB	 3
  00222	04		 DB	 4
?trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z ENDP ; trigger_triggered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z
_TEXT	SEGMENT
_this_campaign_event$ = -4				; size = 4
_name$ = 8						; size = 4
?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z PROC ; get_campaign_event, COMDAT

; 2525 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2526 : 	campaign_event_type
; 2527 : 		*this_campaign_event;
; 2528 : 
; 2529 : 	this_campaign_event = campaign_event_head;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_event_head@@3PAUCAMPAIGN_EVENT_TYPE@@A ; campaign_event_head
  0000e	89 45 fc	 mov	 DWORD PTR _this_campaign_event$[ebp], eax
$LN2@get_campai:

; 2530 : 
; 2531 : 	while (this_campaign_event)

  00011	83 7d fc 00	 cmp	 DWORD PTR _this_campaign_event$[ebp], 0
  00015	74 27		 je	 SHORT $LN3@get_campai

; 2532 : 	{
; 2533 : 
; 2534 : 		if (stricmp (this_campaign_event->name, name) == 0)

  00017	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this_campaign_event$[ebp]
  0001e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00020	52		 push	 edx
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  00027	83 c4 08	 add	 esp, 8
  0002a	85 c0		 test	 eax, eax
  0002c	75 05		 jne	 SHORT $LN4@get_campai

; 2535 : 		{
; 2536 : 
; 2537 : 			return this_campaign_event;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this_campaign_event$[ebp]
  00031	eb 0d		 jmp	 SHORT $LN1@get_campai
$LN4@get_campai:

; 2538 : 		}
; 2539 : 
; 2540 : 		this_campaign_event = this_campaign_event->next;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this_campaign_event$[ebp]
  00036	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00039	89 4d fc	 mov	 DWORD PTR _this_campaign_event$[ebp], ecx

; 2541 : 	}

  0003c	eb d3		 jmp	 SHORT $LN2@get_campai
$LN3@get_campai:

; 2542 : 
; 2543 : 	return NULL;

  0003e	33 c0		 xor	 eax, eax
$LN1@get_campai:

; 2544 : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ENDP ; get_campaign_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?add_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PADPBDH@Z
_TEXT	SEGMENT
_new_event$ = -4					; size = 4
_name$ = 8						; size = 4
_filename$ = 12						; size = 4
_file_offset$ = 16					; size = 4
?add_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PADPBDH@Z PROC ; add_campaign_event, COMDAT

; 2319 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2320 : 
; 2321 : 	campaign_event_type
; 2322 : 		*new_event;
; 2323 : 
; 2324 : 	if (get_campaign_event (name))

  00009	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ; get_campaign_event
  00012	85 c0		 test	 eax, eax
  00014	74 18		 je	 SHORT $LN2@add_campai

; 2325 : 	{
; 2326 : 
; 2327 : 		parser_debug_log ("ERROR: EVENT %s already exists", name);

  00016	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OAGHOIGD@ERROR?3?5EVENT?5?$CFs?5already?5exists@
  0001f	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00024	83 c4 08	 add	 esp, 8

; 2328 : 
; 2329 : 		return NULL;

  00027	33 c0		 xor	 eax, eax
  00029	e9 b4 00 00 00	 jmp	 $LN1@add_campai
$LN2@add_campai:

; 2330 : 	}
; 2331 : 
; 2332 : 	new_event = (campaign_event_type *) malloc (sizeof (campaign_event_type));

  0002e	6a 14		 push	 20			; 00000014H
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00036	83 c4 04	 add	 esp, 4
  00039	89 45 fc	 mov	 DWORD PTR _new_event$[ebp], eax

; 2333 : 
; 2334 : 	memset (new_event, 0, sizeof (campaign_event_type));

  0003c	6a 14		 push	 20			; 00000014H
  0003e	6a 00		 push	 0
  00040	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 _memset
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2335 : 
; 2336 : 	new_event->name = (char *) malloc (strlen (name) + 1);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 _strlen
  00055	83 c4 04	 add	 esp, 4
  00058	83 c0 01	 add	 eax, 1
  0005b	50		 push	 eax
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _new_event$[ebp]
  00068	89 01		 mov	 DWORD PTR [ecx], eax

; 2337 : 	sprintf (new_event->name, "%s", name);

  0006a	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0006d	50		 push	 eax
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _new_event$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	52		 push	 edx
  00079	e8 00 00 00 00	 call	 _sprintf
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2338 : 
; 2339 : 	new_event->filename = (char *) malloc (strlen (filename) + 1);

  00081	8b 45 0c	 mov	 eax, DWORD PTR _filename$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 _strlen
  0008a	83 c4 04	 add	 esp, 4
  0008d	83 c0 01	 add	 eax, 1
  00090	50		 push	 eax
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _new_event$[ebp]
  0009d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 2340 : 	sprintf (new_event->filename, "%s", filename);

  000a0	8b 45 0c	 mov	 eax, DWORD PTR _filename$[ebp]
  000a3	50		 push	 eax
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _new_event$[ebp]
  000ac	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000af	52		 push	 edx
  000b0	e8 00 00 00 00	 call	 _sprintf
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2341 : 
; 2342 : 	new_event->triggered = FALSE;

  000b8	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  000bb	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 2343 : 
; 2344 : 	new_event->file_offset = file_offset;

  000c2	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  000c5	8b 4d 10	 mov	 ecx, DWORD PTR _file_offset$[ebp]
  000c8	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 2345 : 
; 2346 : 	new_event->next = campaign_event_head;

  000cb	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_event_head@@3PAUCAMPAIGN_EVENT_TYPE@@A ; campaign_event_head
  000d4	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 2347 : 
; 2348 : 	campaign_event_head = new_event;

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  000da	a3 00 00 00 00	 mov	 DWORD PTR ?campaign_event_head@@3PAUCAMPAIGN_EVENT_TYPE@@A, eax ; campaign_event_head

; 2349 : 
; 2350 : 	return new_event;

  000df	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
$LN1@add_campai:

; 2351 : }

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 0c 00	 ret	 12			; 0000000cH
?add_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PADPBDH@Z ENDP ; add_campaign_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?add_campaign_trigger@@YGXW4CAMPAIGN_TRIGGER@@HHHHPAD0@Z
_TEXT	SEGMENT
_new_campaign_trigger$ = -4				; size = 4
_type$ = 8						; size = 4
_value1$ = 12						; size = 4
_value2$ = 16						; size = 4
_value3$ = 20						; size = 4
_value4$ = 24						; size = 4
_event_name$ = 28					; size = 4
_trigger_type$ = 32					; size = 4
?add_campaign_trigger@@YGXW4CAMPAIGN_TRIGGER@@HHHHPAD0@Z PROC ; add_campaign_trigger, COMDAT

; 2282 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2283 : 
; 2284 : 	campaign_trigger_type
; 2285 : 		*new_campaign_trigger;
; 2286 : 
; 2287 : 	new_campaign_trigger = (campaign_trigger_type *) malloc (sizeof (campaign_trigger_type));

  00009	6a 14		 push	 20			; 00000014H
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00011	83 c4 04	 add	 esp, 4
  00014	89 45 fc	 mov	 DWORD PTR _new_campaign_trigger$[ebp], eax

; 2288 : 
; 2289 : 	memset (new_campaign_trigger, 0, sizeof (campaign_trigger_type));

  00017	6a 14		 push	 20			; 00000014H
  00019	6a 00		 push	 0
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2290 : 
; 2291 : 	new_campaign_trigger->type = type;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  0002a	66 8b 4d 08	 mov	 cx, WORD PTR _type$[ebp]
  0002e	66 89 08	 mov	 WORD PTR [eax], cx

; 2292 : 
; 2293 : 	new_campaign_trigger->trigger_type = trigger_type;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  00034	66 8b 4d 20	 mov	 cx, WORD PTR _trigger_type$[ebp]
  00038	66 89 48 02	 mov	 WORD PTR [eax+2], cx

; 2294 : 
; 2295 : 	new_campaign_trigger->value1 = value1;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  0003f	66 8b 4d 0c	 mov	 cx, WORD PTR _value1$[ebp]
  00043	66 89 48 04	 mov	 WORD PTR [eax+4], cx

; 2296 : 	new_campaign_trigger->value2 = value2;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  0004a	66 8b 4d 10	 mov	 cx, WORD PTR _value2$[ebp]
  0004e	66 89 48 06	 mov	 WORD PTR [eax+6], cx

; 2297 : 	new_campaign_trigger->value3 = value3;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  00055	66 8b 4d 14	 mov	 cx, WORD PTR _value3$[ebp]
  00059	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 2298 : 	new_campaign_trigger->value4 = value4;

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  00060	66 8b 4d 18	 mov	 cx, WORD PTR _value4$[ebp]
  00064	66 89 48 0a	 mov	 WORD PTR [eax+10], cx

; 2299 : 
; 2300 : 	new_campaign_trigger->event_name = (char *) malloc (strlen (event_name) + 1);

  00068	8b 45 1c	 mov	 eax, DWORD PTR _event_name$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 _strlen
  00071	83 c4 04	 add	 esp, 4
  00074	83 c0 01	 add	 eax, 1
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0007e	83 c4 04	 add	 esp, 4
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _new_campaign_trigger$[ebp]
  00084	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 2301 : 	sprintf (new_campaign_trigger->event_name, "%s", event_name);

  00087	8b 45 1c	 mov	 eax, DWORD PTR _event_name$[ebp]
  0008a	50		 push	 eax
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _new_campaign_trigger$[ebp]
  00093	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00096	52		 push	 edx
  00097	e8 00 00 00 00	 call	 _sprintf
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2302 : 
; 2303 : 	new_campaign_trigger->next = campaign_trigger_head;

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A ; campaign_trigger_head
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 2304 : 
; 2305 : 	campaign_trigger_head = new_campaign_trigger;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _new_campaign_trigger$[ebp]
  000ae	a3 00 00 00 00	 mov	 DWORD PTR ?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A, eax ; campaign_trigger_head

; 2306 : 
; 2307 : 	#if DEBUG_MODULE
; 2308 : 
; 2309 : 	debug_log ("FORCE: Campaign trigger %s, value1 = %d value2 = %d value3 = %d value4 = %d, result %s", campaign_trigger_names [trigger_type], value1, value2, value3, value4, campaign_trigger_result_names [result]);
; 2310 : 
; 2311 : 	#endif
; 2312 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 1c 00	 ret	 28			; 0000001cH
?add_campaign_trigger@@YGXW4CAMPAIGN_TRIGGER@@HHHHPAD0@Z ENDP ; add_campaign_trigger
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?generate_key_bound_triggers@@YGXXZ
_TEXT	SEGMENT
_event$ = -20						; size = 4
_this_campaign_trigger$ = -16				; size = 4
_modifier$ = -12					; size = 4
_state$ = -8						; size = 4
_key$ = -4						; size = 4
?generate_key_bound_triggers@@YGXXZ PROC		; generate_key_bound_triggers, COMDAT

; 2418 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2419 : 
; 2420 : 	int
; 2421 : 		key,
; 2422 : 		state,
; 2423 : 		modifier;
; 2424 : 
; 2425 : 	campaign_trigger_type
; 2426 : 		*this_campaign_trigger;
; 2427 : 
; 2428 : 	campaign_event_type
; 2429 : 		*event;
; 2430 : 
; 2431 : 	this_campaign_trigger = campaign_trigger_head;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A ; campaign_trigger_head
  0000e	89 45 f0	 mov	 DWORD PTR _this_campaign_trigger$[ebp], eax
$LN2@generate_k:

; 2432 : 
; 2433 : 	while (this_campaign_trigger)

  00011	83 7d f0 00	 cmp	 DWORD PTR _this_campaign_trigger$[ebp], 0
  00015	0f 84 d0 00 00
	00		 je	 $LN1@generate_k

; 2434 : 	{
; 2435 : 
; 2436 : 		if (this_campaign_trigger->trigger_type == CAMPAIGN_TRIGGER_KEY_PRESS)

  0001b	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0001e	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  00022	83 f9 11	 cmp	 ecx, 17			; 00000011H
  00025	0f 85 b2 00 00
	00		 jne	 $LN4@generate_k

; 2437 : 		{
; 2438 : 
; 2439 : 			if (this_campaign_trigger->event_name)

  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0002e	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00032	0f 84 a5 00 00
	00		 je	 $LN4@generate_k

; 2440 : 			{
; 2441 : 
; 2442 : 				event = get_campaign_event (this_campaign_trigger->event_name);

  00038	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0003b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ; get_campaign_event
  00044	89 45 ec	 mov	 DWORD PTR _event$[ebp], eax

; 2443 : 
; 2444 : 				if (event)

  00047	83 7d ec 00	 cmp	 DWORD PTR _event$[ebp], 0
  0004b	0f 84 8c 00 00
	00		 je	 $LN4@generate_k

; 2445 : 				{
; 2446 : 
; 2447 : 					parser_debug_log ("Binding EVENT %s to key %d, modifier %d, state %d", this_campaign_trigger->event_name, this_campaign_trigger->value1, this_campaign_trigger->value2, this_campaign_trigger->value3);

  00051	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00054	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  00058	51		 push	 ecx
  00059	8b 55 f0	 mov	 edx, DWORD PTR _this_campaign_trigger$[ebp]
  0005c	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  00060	50		 push	 eax
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this_campaign_trigger$[ebp]
  00064	0f bf 51 04	 movsx	 edx, WORD PTR [ecx+4]
  00068	52		 push	 edx
  00069	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0006c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0006f	51		 push	 ecx
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@BIBNIFKC@Binding?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@
  00075	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  0007a	83 c4 14	 add	 esp, 20			; 00000014H

; 2448 : 					debug_log ("Binding EVENT %s to key %d, modifier %d, state %d", this_campaign_trigger->event_name, this_campaign_trigger->value1, this_campaign_trigger->value2, this_campaign_trigger->value3);

  0007d	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00080	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  00084	51		 push	 ecx
  00085	8b 55 f0	 mov	 edx, DWORD PTR _this_campaign_trigger$[ebp]
  00088	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  0008c	50		 push	 eax
  0008d	8b 4d f0	 mov	 ecx, DWORD PTR _this_campaign_trigger$[ebp]
  00090	0f bf 51 04	 movsx	 edx, WORD PTR [ecx+4]
  00094	52		 push	 edx
  00095	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00098	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0009b	51		 push	 ecx
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@BIBNIFKC@Binding?5EVENT?5?$CFs?5to?5key?5?$CFd?0?5mod@
  000a1	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000a6	83 c4 14	 add	 esp, 20			; 00000014H

; 2449 : 
; 2450 : 					key = this_campaign_trigger->value1;

  000a9	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  000ac	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  000b0	89 4d fc	 mov	 DWORD PTR _key$[ebp], ecx

; 2451 : 					modifier = this_campaign_trigger->value2;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  000b6	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  000ba	89 4d f4	 mov	 DWORD PTR _modifier$[ebp], ecx

; 2452 : 					state = this_campaign_trigger->value3;

  000bd	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  000c0	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  000c4	89 4d f8	 mov	 DWORD PTR _state$[ebp], ecx

; 2453 : 
; 2454 : 					set_event (key, modifier, state, key_bound_trigger_function);

  000c7	68 00 00 00 00	 push	 OFFSET ?key_bound_trigger_function@@YGXPAUEVENT@@@Z ; key_bound_trigger_function
  000cc	8b 45 f8	 mov	 eax, DWORD PTR _state$[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR _modifier$[ebp]
  000d3	51		 push	 ecx
  000d4	8b 55 fc	 mov	 edx, DWORD PTR _key$[ebp]
  000d7	52		 push	 edx
  000d8	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event
$LN4@generate_k:

; 2455 : 				}
; 2456 : 			}
; 2457 : 		}
; 2458 : 
; 2459 : 		this_campaign_trigger = this_campaign_trigger->next;

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  000e0	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e3	89 4d f0	 mov	 DWORD PTR _this_campaign_trigger$[ebp], ecx

; 2460 : 	}

  000e6	e9 26 ff ff ff	 jmp	 $LN2@generate_k
$LN1@generate_k:

; 2461 : }

  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
?generate_key_bound_triggers@@YGXXZ ENDP		; generate_key_bound_triggers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?update_script_triggers@@YGHW4CAMPAIGN_TRIGGER@@@Z
_TEXT	SEGMENT
_event$ = -16						; size = 4
_this_campaign_trigger$ = -12				; size = 4
_return_value$ = -8					; size = 4
_offset$ = -4						; size = 4
_trigger$ = 8						; size = 4
?update_script_triggers@@YGHW4CAMPAIGN_TRIGGER@@@Z PROC	; update_script_triggers, COMDAT

; 2358 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2359 : 
; 2360 : 	int
; 2361 : 		offset,
; 2362 : 		return_value;
; 2363 : 
; 2364 : 	campaign_trigger_type
; 2365 : 		*this_campaign_trigger;
; 2366 : 
; 2367 : 	campaign_event_type
; 2368 : 		*event;
; 2369 : 
; 2370 : 	return_value = 0;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 0

; 2371 : 
; 2372 : 	this_campaign_trigger = campaign_trigger_head;

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A ; campaign_trigger_head
  00015	89 45 f4	 mov	 DWORD PTR _this_campaign_trigger$[ebp], eax
$LN2@update_scr:

; 2373 : 
; 2374 : 	while (this_campaign_trigger)

  00018	83 7d f4 00	 cmp	 DWORD PTR _this_campaign_trigger$[ebp], 0
  0001c	74 71		 je	 SHORT $LN3@update_scr

; 2375 : 	{
; 2376 : 
; 2377 : 		if (this_campaign_trigger->trigger_type == trigger)

  0001e	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00021	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  00025	3b 4d 08	 cmp	 ecx, DWORD PTR _trigger$[ebp]
  00028	75 5a		 jne	 SHORT $LN4@update_scr

; 2378 : 		{
; 2379 : 
; 2380 : 			if (trigger_triggered (this_campaign_trigger))

  0002a	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?trigger_triggered@@YGHPAUCAMPAIGN_TRIGGER_TYPE@@@Z ; trigger_triggered
  00033	85 c0		 test	 eax, eax
  00035	74 4d		 je	 SHORT $LN4@update_scr

; 2381 : 			{
; 2382 : 
; 2383 : 				if (this_campaign_trigger->event_name)

  00037	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  0003a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0003e	74 44		 je	 SHORT $LN4@update_scr

; 2384 : 				{
; 2385 : 
; 2386 : 					event = get_campaign_event (this_campaign_trigger->event_name);

  00040	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00043	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ; get_campaign_event
  0004c	89 45 f0	 mov	 DWORD PTR _event$[ebp], eax

; 2387 : 
; 2388 : 					if (event)

  0004f	83 7d f0 00	 cmp	 DWORD PTR _event$[ebp], 0
  00053	74 2f		 je	 SHORT $LN4@update_scr

; 2389 : 					{
; 2390 : 
; 2391 : 						if (!event->triggered)

  00055	8b 45 f0	 mov	 eax, DWORD PTR _event$[ebp]
  00058	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0005c	75 26		 jne	 SHORT $LN4@update_scr

; 2392 : 						{
; 2393 : 
; 2394 : 							//parser_debug_log ("EXECUTING EVENT %s", this_campaign_trigger->event_name);
; 2395 : 
; 2396 : 							offset = event->file_offset;

  0005e	8b 45 f0	 mov	 eax, DWORD PTR _event$[ebp]
  00061	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00064	89 4d fc	 mov	 DWORD PTR _offset$[ebp], ecx

; 2397 : 
; 2398 : 							event->triggered = FALSE;

  00067	8b 45 f0	 mov	 eax, DWORD PTR _event$[ebp]
  0006a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 2399 : 
; 2400 : 							return_value = parser_campaign_file (event->filename, &offset);

  00071	8d 45 fc	 lea	 eax, DWORD PTR _offset$[ebp]
  00074	50		 push	 eax
  00075	8b 4d f0	 mov	 ecx, DWORD PTR _event$[ebp]
  00078	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007b	52		 push	 edx
  0007c	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  00081	89 45 f8	 mov	 DWORD PTR _return_value$[ebp], eax
$LN4@update_scr:

; 2401 : 						}
; 2402 : 					}
; 2403 : 				}
; 2404 : 			}
; 2405 : 		}
; 2406 : 
; 2407 : 		this_campaign_trigger = this_campaign_trigger->next;

  00084	8b 45 f4	 mov	 eax, DWORD PTR _this_campaign_trigger$[ebp]
  00087	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0008a	89 4d f4	 mov	 DWORD PTR _this_campaign_trigger$[ebp], ecx

; 2408 : 	}

  0008d	eb 89		 jmp	 SHORT $LN2@update_scr
$LN3@update_scr:

; 2409 : 
; 2410 : 	return return_value;

  0008f	8b 45 f8	 mov	 eax, DWORD PTR _return_value$[ebp]

; 2411 : }

  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
?update_script_triggers@@YGHW4CAMPAIGN_TRIGGER@@@Z ENDP	; update_script_triggers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?parser_campaign_file@@YGHPBDPAH@Z
_TEXT	SEGMENT
tv1958 = -2400						; size = 4
tv1564 = -2400						; size = 4
tv1950 = -2396						; size = 4
tv1556 = -2396						; size = 4
tv2264 = -2392						; size = 4
tv2229 = -2392						; size = 4
tv2209 = -2392						; size = 4
tv2189 = -2392						; size = 4
tv2168 = -2392						; size = 4
tv2147 = -2392						; size = 4
tv2127 = -2392						; size = 4
tv2108 = -2392						; size = 4
tv2089 = -2392						; size = 4
tv2070 = -2392						; size = 4
tv2018 = -2392						; size = 4
tv1988 = -2392						; size = 4
tv1937 = -2392						; size = 4
tv1887 = -2392						; size = 4
tv1867 = -2392						; size = 4
tv1847 = -2392						; size = 4
tv1826 = -2392						; size = 4
tv1805 = -2392						; size = 4
tv1785 = -2392						; size = 4
tv1766 = -2392						; size = 4
tv1747 = -2392						; size = 4
tv1728 = -2392						; size = 4
tv1586 = -2392						; size = 4
tv1541 = -2392						; size = 4
tv1495 = -2392						; size = 4
tv1476 = -2392						; size = 4
tv1457 = -2392						; size = 4
tv1335 = -2392						; size = 4
tv1302 = -2392						; size = 4
tv1120 = -2392						; size = 4
tv1034 = -2392						; size = 4
tv1014 = -2392						; size = 4
tv994 = -2392						; size = 4
tv974 = -2392						; size = 4
tv775 = -2392						; size = 4
tv747 = -2392						; size = 4
tv714 = -2392						; size = 4
tv687 = -2392						; size = 4
tv194 = -2392						; size = 4
tv2449 = -2388						; size = 4
tv2256 = -2388						; size = 4
tv2221 = -2388						; size = 4
tv2201 = -2388						; size = 4
tv2181 = -2388						; size = 4
tv2161 = -2388						; size = 4
tv2140 = -2388						; size = 4
tv2120 = -2388						; size = 4
tv2101 = -2388						; size = 4
tv2082 = -2388						; size = 4
tv2062 = -2388						; size = 4
tv2010 = -2388						; size = 4
tv1980 = -2388						; size = 4
tv1929 = -2388						; size = 4
tv1879 = -2388						; size = 4
tv1859 = -2388						; size = 4
tv1839 = -2388						; size = 4
tv1819 = -2388						; size = 4
tv1798 = -2388						; size = 4
tv1778 = -2388						; size = 4
tv1759 = -2388						; size = 4
tv1740 = -2388						; size = 4
tv1720 = -2388						; size = 4
tv1687 = -2388						; size = 4
tv1578 = -2388						; size = 4
tv1533 = -2388						; size = 4
tv1503 = -2388						; size = 4
tv1488 = -2388						; size = 4
tv1469 = -2388						; size = 4
tv1449 = -2388						; size = 4
tv1327 = -2388						; size = 4
tv1294 = -2388						; size = 4
tv1113 = -2388						; size = 4
tv1026 = -2388						; size = 4
tv1006 = -2388						; size = 4
tv986 = -2388						; size = 4
tv966 = -2388						; size = 4
tv767 = -2388						; size = 4
tv739 = -2388						; size = 4
tv706 = -2388						; size = 4
tv679 = -2388						; size = 4
tv333 = -2388						; size = 4
tv186 = -2388						; size = 4
tv88 = -2388						; size = 4
_filename$1 = -2064					; size = 128
_campaign_buffer$2 = -1936				; size = 4
_load_ptr$3 = -1932					; size = 4
_saved_file_ptr$4 = -1928				; size = 4
_campaign_size$5 = -1924				; size = 4
_client_version_number$6 = -1920			; size = 4
_server_version_number$7 = -1916			; size = 4
_season$8 = -1912					; size = 4
_version$9 = -1908					; size = 4
_wp_count$10 = -1904					; size = 4
_count$11 = -1900					; size = 4
_wp_delta_time$12 = -1896				; size = 4
_expire_time$13 = -1892					; size = 4
_stop_time$14 = -1888					; size = 4
_start_time$15 = -1884					; size = 4
_wp_radius$16 = -1880					; size = 4
_side$17 = -1876					; size = 4
_wp_types$18 = -1872					; size = 4
_task_type$19 = -1868					; size = 4
_new_task$20 = -1864					; size = 4
_group_en$21 = -1860					; size = 4
_wp$22 = -1856						; size = 4
_movement_type$23 = -1852				; size = 4
_wp_nodes$24 = -1848					; size = 4
_group$25 = -1844					; size = 4
_formation_component_type$26 = -1840			; size = 4
_group_type$27 = -1836					; size = 4
_formation_components$28 = -1832			; size = 4
_member$29 = -1828					; size = 4
_group$30 = -1824					; size = 4
_count$31 = -1820					; size = 4
_member_type$32 = -1816					; size = 4
_group_type$33 = -1812					; size = 4
_this_type$34 = -1808					; size = 4
_keysite$35 = -1804					; size = 4
_value$36 = -1800					; size = 4
_count$37 = -1796					; size = 4
_value$38 = -1792					; size = 4
_sub_type$39 = -1788					; size = 4
_side$40 = -1784					; size = 4
_side$41 = -1780					; size = 4
_frequency$42 = -1776					; size = 4
_attitude$43 = -1772					; size = 4
_colour$44 = -1768					; size = 4
_title$45 = -1764					; size = 256
_force_raw$46 = -1508					; size = 4
_count$47 = -1504					; size = 4
_hardware_type$48 = -1500				; size = 4
_raw$49 = -1496						; size = 4
_this_type$50 = -1492					; size = 4
_valid$51 = -1488					; size = 4
_wind_effect$52 = -1484					; size = 4
_rain_effect$53 = -1480					; size = 4
_colour$54 = -1476					; size = 4
_faction_side$55 = -1472				; size = 4
_en$56 = -1468						; size = 4
_temp_filename$57 = -1464				; size = 256
_z_size$58 = -1208					; size = 4
_x_size$59 = -1204					; size = 4
_sector_size$60 = -1200					; size = 4
_pos$61 = -1196						; size = 12
_z_max$62 = -1184					; size = 4
_z_min$63 = -1180					; size = 4
_x_max$64 = -1176					; size = 4
_x_min$65 = -1172					; size = 4
_medal$66 = -1168					; size = 4
_flag$67 = -1164					; size = 4
_name$68 = -1160					; size = 257
_variable$69 = -900					; size = 4
_variable_ptr$70 = -896					; size = 4
_event$71 = -892					; size = 4
_type$72 = -888						; size = 4
_value4$73 = -884					; size = 4
_value3$74 = -880					; size = 4
_value2$75 = -876					; size = 4
_value1$76 = -872					; size = 4
_file_offset$77 = -868					; size = 4
_event$78 = -864					; size = 4
_file_offset$79 = -860					; size = 4
_file_offset$80 = -856					; size = 4
_parser_variable$81 = -852				; size = 4
_flag$82 = -848						; size = 4
_file_offset$83 = -844					; size = 4
_file_offset$84 = -840					; size = 4
_campaign_result$85 = -836				; size = 4
_message$86 = -832					; size = 128
_keysite_name$ = -704					; size = 256
_temp_filename$ = -448					; size = 128
_keysite_ammo_supplies$ = -320				; size = 4
_keysite_fuel_supplies$ = -316				; size = 4
_required_landing_types$ = -312				; size = 4
_start_base_count$ = -308				; size = 4
_keysite_type$ = -304					; size = 4
_faction_side$ = -300					; size = 4
_counter$ = -296					; size = 4
_end_wp$ = -292						; size = 4
_current_session$ = -288				; size = 4
_file_ptr$ = -284					; size = 4
_operator_name$ = -280					; size = 64
_variable_name$ = -216					; size = 64
_new_filename$ = -152					; size = 64
_event_name$ = -88					; size = 64
_result$ = -24						; size = 4
_value2$ = -20						; size = 4
_value1$ = -16						; size = 4
_return_value$ = -12					; size = 4
_trigger$ = -8						; size = 4
_tag$ = -4						; size = 4
_filename$ = 8						; size = 4
_offset$ = 12						; size = 4
?parser_campaign_file@@YGHPBDPAH@Z PROC			; parser_campaign_file, COMDAT

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 60 09 00
	00		 sub	 esp, 2400		; 00000960H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 206  : 
; 207  : 	file_tags
; 208  : 		tag;
; 209  : 
; 210  : 	campaign_trigger
; 211  : 		trigger;
; 212  : 
; 213  : 	int
; 214  : 		return_value,
; 215  : 		value1,
; 216  : 		value2,
; 217  : 		result;
; 218  : 
; 219  : 	char
; 220  : 		event_name [64],
; 221  : 		new_filename [64],
; 222  : 		variable_name [64],
; 223  : 		operator_name [64];
; 224  : 
; 225  : 	FILE
; 226  : 		*file_ptr;
; 227  : 
; 228  : 	session_list_data_type
; 229  : 		*current_session;
; 230  : 
; 231  : 	int
; 232  : 		end_wp,
; 233  : 		counter,
; 234  : 		faction_side,
; 235  : 		keysite_type,
; 236  : 		start_base_count,
; 237  : 		required_landing_types;
; 238  : 
; 239  : 	float
; 240  : 		keysite_fuel_supplies,
; 241  : 		keysite_ammo_supplies;
; 242  : 
; 243  : 	char
; 244  : 		temp_filename [128],
; 245  : 		keysite_name [STRING_TYPE_KEYSITE_NAME_MAX_LENGTH];
; 246  : 
; 247  : 	//fcloseall (); // Casm 26NOV09 Looks bad for recursive calls
; 248  : 
; 249  : 	file_ptr = safe_fopen (filename, "r");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00011	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  0001a	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _file_ptr$[ebp], eax

; 250  : 
; 251  : 	ASSERT (get_valid_current_game_session ());

  00020	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A, 0 ; current_game_session
  00027	75 18		 jne	 SHORT $LN46@parser_cam
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0002e	83 c0 2e	 add	 eax, 46			; 0000002eH
  00031	50		 push	 eax
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN46@parser_cam:

; 252  : 
; 253  : 	current_session = get_current_game_session ();

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00046	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _current_session$[ebp], eax

; 254  : 
; 255  : 	start_base_count = 0;

  0004c	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _start_base_count$[ebp], 0

; 256  : 
; 257  : 	if (!file_ptr)

  00056	83 bd e4 fe ff
	ff 00		 cmp	 DWORD PTR _file_ptr$[ebp], 0
  0005d	75 21		 jne	 SHORT $LN47@parser_cam

; 258  : 	{
; 259  : 
; 260  : 		debug_fatal ("PARSER: can't load file %s errno %d", filename, errno);

  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  00065	8b 00		 mov	 eax, DWORD PTR [eax]
  00067	50		 push	 eax
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  0006b	51		 push	 ecx
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@HNJMNPNB@PARSER?3?5can?8t?5load?5file?5?$CFs?5errn@
  00071	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH

; 261  : 
; 262  : 		return 0;

  00079	33 c0		 xor	 eax, eax
  0007b	e9 a1 46 00 00	 jmp	 $LN3@parser_cam
$LN47@parser_cam:

; 263  : 	}
; 264  : 
; 265  : 	fseek (file_ptr, *offset, SEEK_SET);

  00080	6a 00		 push	 0
  00082	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00085	8b 08		 mov	 ecx, DWORD PTR [eax]
  00087	51		 push	 ecx
  00088	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  0008e	52		 push	 edx
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 266  : 
; 267  : 	return_value = 0;

  00098	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 0
$LN395@parser_cam:

; 268  : 
; 269  : 	while (TRUE)

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	85 c0		 test	 eax, eax
  000a6	0f 84 75 46 00
	00		 je	 $LN3@parser_cam

; 270  : 	{
; 271  : 
; 272  : 		tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  000ac	68 af 00 00 00	 push	 175			; 000000afH
  000b1	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  000b6	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  000c2	89 45 fc	 mov	 DWORD PTR _tag$[ebp], eax

; 273  : 
; 274  : 		if (debug_mode)

  000c5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?debug_mode@@3HA, 0 ; debug_mode
  000cc	74 10		 je	 SHORT $LN48@parser_cam

; 275  : 		{
; 276  : 
; 277  : 			debug_parser_message (tag, file_ptr);

  000ce	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000d4	50		 push	 eax
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _tag$[ebp]
  000d8	51		 push	 ecx
  000d9	e8 00 00 00 00	 call	 ?debug_parser_message@@YGXHPAU_iobuf@@@Z ; debug_parser_message
$LN48@parser_cam:

; 278  : 		}
; 279  : 
; 280  : 		switch (tag)

  000de	8b 45 fc	 mov	 eax, DWORD PTR _tag$[ebp]
  000e1	89 85 ac f6 ff
	ff		 mov	 DWORD PTR tv88[ebp], eax
  000e7	8b 8d ac f6 ff
	ff		 mov	 ecx, DWORD PTR tv88[ebp]
  000ed	83 c1 1d	 add	 ecx, 29			; 0000001dH
  000f0	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv88[ebp], ecx
  000f6	81 bd ac f6 ff
	ff cb 00 00 00	 cmp	 DWORD PTR tv88[ebp], 203 ; 000000cbH
  00100	0f 87 09 46 00
	00		 ja	 $LN229@parser_cam
  00106	8b 95 ac f6 ff
	ff		 mov	 edx, DWORD PTR tv88[ebp]
  0010c	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN396@parser_cam[edx]
  00113	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN399@parser_cam[eax*4]
$LN49@parser_cam:

; 281  : 		{
; 282  : 
; 283  : 			case FILE_TAG_START:
; 284  : 			{
; 285  : 
; 286  : 				continue;

  0011a	eb 83		 jmp	 SHORT $LN395@parser_cam
$LN50@parser_cam:

; 287  : 			}
; 288  : 
; 289  : 			case FILE_TAG_ECHO_MESSAGE:
; 290  : 			{
; 291  : 
; 292  : 				char
; 293  : 					message [128];
; 294  : 
; 295  : 				get_next_file_string (file_ptr, message, sizeof (message));

  0011c	68 80 00 00 00	 push	 128			; 00000080H
  00121	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR _message$86[ebp]
  00127	50		 push	 eax
  00128	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0012e	51		 push	 ecx
  0012f	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 296  : 
; 297  : 				parser_debug_log (message);

  00134	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR _message$86[ebp]
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00140	83 c4 04	 add	 esp, 4

; 298  : 				debug_log (message);

  00143	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR _message$86[ebp]
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0014f	83 c4 04	 add	 esp, 4

; 299  : 
; 300  : 				return_value = TRUE;

  00152	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1

; 301  : 
; 302  : 				break;

  00159	e9 be 45 00 00	 jmp	 $LN4@parser_cam
$LN51@parser_cam:

; 303  : 			}
; 304  : 
; 305  : 			case FILE_TAG_END_CAMPAIGN:
; 306  : 			{
; 307  : 
; 308  : 				int
; 309  : 					campaign_result;
; 310  : 
; 311  : 				campaign_result = get_next_file_enum (file_ptr, campaign_result_names, NUM_CAMPAIGN_RESULT_TYPES);

  0015e	6a 06		 push	 6
  00160	68 00 00 00 00	 push	 OFFSET ?campaign_result_names@@3PAPBDA ; campaign_result_names
  00165	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0016b	50		 push	 eax
  0016c	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00171	89 85 bc fc ff
	ff		 mov	 DWORD PTR _campaign_result$85[ebp], eax

; 312  : 
; 313  : 				return_value = TRUE;

  00177	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1

; 314  : 
; 315  : 				break;

  0017e	e9 99 45 00 00	 jmp	 $LN4@parser_cam
$LN52@parser_cam:

; 316  : 			}
; 317  : 
; 318  : 			case FILE_TAG_WHILE:
; 319  : 			{
; 320  : 
; 321  : 				long int
; 322  : 					file_offset;
; 323  : 
; 324  : 				file_offset = ftell (file_ptr);

  00183	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00189	50		 push	 eax
  0018a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00190	83 c4 04	 add	 esp, 4
  00193	89 85 b8 fc ff
	ff		 mov	 DWORD PTR _file_offset$84[ebp], eax

; 325  : 
; 326  : 				add_while_loop (filename, file_offset);

  00199	8b 85 b8 fc ff
	ff		 mov	 eax, DWORD PTR _file_offset$84[ebp]
  0019f	50		 push	 eax
  001a0	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  001a3	51		 push	 ecx
  001a4	e8 00 00 00 00	 call	 ?add_while_loop@@YGPAUCAMPAIGN_WHILE_LOOP_TYPE@@PBDH@Z ; add_while_loop
$LN6@parser_cam:

; 327  : 
; 328  : 				// skip to WHILE_END to induce while_loop
; 329  : 				while (tag = (file_tags) check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  001a9	68 af 00 00 00	 push	 175			; 000000afH
  001ae	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  001b3	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001b9	50		 push	 eax
  001ba	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  001bf	89 45 fc	 mov	 DWORD PTR _tag$[ebp], eax
  001c2	83 7d fc 00	 cmp	 DWORD PTR _tag$[ebp], 0
  001c6	74 23		 je	 SHORT $LN7@parser_cam

; 330  : 				{
; 331  : 
; 332  : 					if (tag == FILE_TAG_END_WHILE)

  001c8	83 7d fc f3	 cmp	 DWORD PTR _tag$[ebp], -13 ; fffffff3H
  001cc	75 02		 jne	 SHORT $LN53@parser_cam

; 333  : 					{
; 334  : 
; 335  : 						break;

  001ce	eb 1b		 jmp	 SHORT $LN7@parser_cam
$LN53@parser_cam:

; 336  : 					}
; 337  : 
; 338  : 					tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  001d0	68 af 00 00 00	 push	 175			; 000000afH
  001d5	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  001da	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001e0	50		 push	 eax
  001e1	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  001e6	89 45 fc	 mov	 DWORD PTR _tag$[ebp], eax

; 339  : 				}

  001e9	eb be		 jmp	 SHORT $LN6@parser_cam
$LN7@parser_cam:

; 340  : 
; 341  : 				break;

  001eb	e9 2c 45 00 00	 jmp	 $LN4@parser_cam
$LN54@parser_cam:

; 342  : 			}
; 343  : 
; 344  : 			case FILE_TAG_END_WHILE:
; 345  : 			{
; 346  : 
; 347  : 				int
; 348  : 					file_offset;
; 349  : 
; 350  : 				file_offset = campaign_while_loop_head->file_offset;

  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A ; campaign_while_loop_head
  001f5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001f8	89 8d b4 fc ff
	ff		 mov	 DWORD PTR _file_offset$83[ebp], ecx

; 351  : 
; 352  : 				fseek (file_ptr, file_offset, SEEK_SET);

  001fe	6a 00		 push	 0
  00200	8b 85 b4 fc ff
	ff		 mov	 eax, DWORD PTR _file_offset$83[ebp]
  00206	50		 push	 eax
  00207	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0020d	51		 push	 ecx
  0020e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  00214	83 c4 0c	 add	 esp, 12			; 0000000cH

; 353  : 
; 354  : 				*offset = ftell (file_ptr);

  00217	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0021d	50		 push	 eax
  0021e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00224	83 c4 04	 add	 esp, 4
  00227	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  0022a	89 01		 mov	 DWORD PTR [ecx], eax

; 355  : 
; 356  : 				value1 = parser_campaign_file (filename, offset);

  0022c	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  0022f	50		 push	 eax
  00230	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  00233	51		 push	 ecx
  00234	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  00239	89 45 f0	 mov	 DWORD PTR _value1$[ebp], eax

; 357  : 
; 358  : 				fseek (file_ptr, *offset, SEEK_SET);

  0023c	6a 00		 push	 0
  0023e	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00241	8b 08		 mov	 ecx, DWORD PTR [eax]
  00243	51		 push	 ecx
  00244	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  0024a	52		 push	 edx
  0024b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  00251	83 c4 0c	 add	 esp, 12			; 0000000cH

; 359  : 
; 360  : 				get_next_file_word (file_ptr, operator_name, sizeof (operator_name));

  00254	6a 40		 push	 64			; 00000040H
  00256	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _operator_name$[ebp]
  0025c	50		 push	 eax
  0025d	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00263	51		 push	 ecx
  00264	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 361  : 
; 362  : 				*offset = ftell (file_ptr);

  00269	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0026f	50		 push	 eax
  00270	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00276	83 c4 04	 add	 esp, 4
  00279	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  0027c	89 01		 mov	 DWORD PTR [ecx], eax

; 363  : 
; 364  : 				value2 = parser_campaign_file (filename, offset);

  0027e	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00281	50		 push	 eax
  00282	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  00285	51		 push	 ecx
  00286	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  0028b	89 45 ec	 mov	 DWORD PTR _value2$[ebp], eax

; 365  : 
; 366  : 				fseek (file_ptr, *offset, SEEK_SET);

  0028e	6a 00		 push	 0
  00290	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00293	8b 08		 mov	 ecx, DWORD PTR [eax]
  00295	51		 push	 ecx
  00296	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  0029c	52		 push	 edx
  0029d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  002a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 367  : 
; 368  : 				if (!if_file_tag_operator (value1, operator_name, value2))

  002a6	8b 45 ec	 mov	 eax, DWORD PTR _value2$[ebp]
  002a9	50		 push	 eax
  002aa	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _operator_name$[ebp]
  002b0	51		 push	 ecx
  002b1	8b 55 f0	 mov	 edx, DWORD PTR _value1$[ebp]
  002b4	52		 push	 edx
  002b5	e8 00 00 00 00	 call	 ?if_file_tag_operator@@YGHHPBDH@Z ; if_file_tag_operator
  002ba	85 c0		 test	 eax, eax
  002bc	75 2e		 jne	 SHORT $LN9@parser_cam

; 369  : 				{
; 370  : 
; 371  : 					destroy_while_loop_head ();

  002be	e8 00 00 00 00	 call	 ?destroy_while_loop_head@@YGXXZ ; destroy_while_loop_head
$LN8@parser_cam:

; 372  : 
; 373  : 					while (tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  002c3	68 af 00 00 00	 push	 175			; 000000afH
  002c8	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  002cd	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  002d9	89 45 fc	 mov	 DWORD PTR _tag$[ebp], eax
  002dc	83 7d fc 00	 cmp	 DWORD PTR _tag$[ebp], 0
  002e0	74 0a		 je	 SHORT $LN9@parser_cam

; 374  : 					{
; 375  : 
; 376  : 						if (tag == FILE_TAG_END_WHILE)

  002e2	83 7d fc f3	 cmp	 DWORD PTR _tag$[ebp], -13 ; fffffff3H
  002e6	75 02		 jne	 SHORT $LN56@parser_cam

; 377  : 						{
; 378  : 
; 379  : 							break;

  002e8	eb 02		 jmp	 SHORT $LN9@parser_cam
$LN56@parser_cam:

; 380  : 						}
; 381  : 					}

  002ea	eb d7		 jmp	 SHORT $LN8@parser_cam
$LN9@parser_cam:

; 382  : 				}
; 383  : 
; 384  : 				break;

  002ec	e9 2b 44 00 00	 jmp	 $LN4@parser_cam
$LN57@parser_cam:

; 385  : 			}
; 386  : 
; 387  : 			case FILE_TAG_AUTO_ASSIGN_GUNSHIP:
; 388  : 			{
; 389  : 
; 390  : 				int
; 391  : 					flag;
; 392  : 
; 393  : 				flag = get_next_file_int (file_ptr);

  002f1	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002f7	50		 push	 eax
  002f8	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  002fd	89 85 b0 fc ff
	ff		 mov	 DWORD PTR _flag$82[ebp], eax

; 394  : 
; 395  : 				set_local_entity_int_value (get_session_entity (), INT_TYPE_AUTO_ASSIGN_GUNSHIP, flag);

  00303	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0030a	74 0f		 je	 SHORT $LN231@parser_cam
  0030c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00311	8b 08		 mov	 ecx, DWORD PTR [eax]
  00313	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv186[ebp], ecx
  00319	eb 27		 jmp	 SHORT $LN232@parser_cam
$LN231@parser_cam:
  0031b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00321	81 c2 be 00 00
	00		 add	 edx, 190		; 000000beH
  00327	52		 push	 edx
  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0032d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00332	50		 push	 eax
  00333	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00338	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv186[ebp], 0
$LN232@parser_cam:
  00342	b9 01 00 00 00	 mov	 ecx, 1
  00347	85 c9		 test	 ecx, ecx
  00349	74 0c		 je	 SHORT $LN233@parser_cam
  0034b	c7 85 a8 f6 ff
	ff 0b 00 00 00	 mov	 DWORD PTR tv194[ebp], 11 ; 0000000bH
  00355	eb 27		 jmp	 SHORT $LN234@parser_cam
$LN233@parser_cam:
  00357	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0035d	81 c2 be 00 00
	00		 add	 edx, 190		; 000000beH
  00363	52		 push	 edx
  00364	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00369	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0036e	50		 push	 eax
  0036f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00374	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv194[ebp], 0
$LN234@parser_cam:
  0037e	8b 8d b0 fc ff
	ff		 mov	 ecx, DWORD PTR _flag$82[ebp]
  00384	51		 push	 ecx
  00385	6a 0b		 push	 11			; 0000000bH
  00387	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0038d	52		 push	 edx
  0038e	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv186[ebp], 1116
  00398	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv194[ebp]
  0039e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  003a5	ff d2		 call	 edx

; 396  : 
; 397  : 				#if DEBUG_MODULE
; 398  : 
; 399  : 				debug_log ("PARSER: auto assign gunship = %d", flag);
; 400  : 
; 401  : 				#endif
; 402  : 
; 403  : 				break;

  003a7	e9 70 43 00 00	 jmp	 $LN4@parser_cam
$LN58@parser_cam:

; 404  : 			}
; 405  : 
; 406  : 
; 407  : 			case FILE_TAG_CALCULATE:
; 408  : 			{
; 409  : 
; 410  : 				*offset = ftell (file_ptr);

  003ac	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003b2	50		 push	 eax
  003b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  003bf	89 01		 mov	 DWORD PTR [ecx], eax

; 411  : 
; 412  : 				value1 = parser_campaign_file (filename, offset);

  003c1	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  003c4	50		 push	 eax
  003c5	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  003c8	51		 push	 ecx
  003c9	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  003ce	89 45 f0	 mov	 DWORD PTR _value1$[ebp], eax

; 413  : 
; 414  : 				fseek (file_ptr, *offset, SEEK_SET);

  003d1	6a 00		 push	 0
  003d3	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  003d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d8	51		 push	 ecx
  003d9	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  003df	52		 push	 edx
  003e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  003e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 415  : 
; 416  : 				get_next_file_word (file_ptr, operator_name, sizeof (operator_name));

  003e9	6a 40		 push	 64			; 00000040H
  003eb	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _operator_name$[ebp]
  003f1	50		 push	 eax
  003f2	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  003f8	51		 push	 ecx
  003f9	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 417  : 
; 418  : 				*offset = ftell (file_ptr);

  003fe	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00404	50		 push	 eax
  00405	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  0040b	83 c4 04	 add	 esp, 4
  0040e	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  00411	89 01		 mov	 DWORD PTR [ecx], eax

; 419  : 
; 420  : 				value2 = parser_campaign_file (filename, offset);

  00413	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00416	50		 push	 eax
  00417	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  00420	89 45 ec	 mov	 DWORD PTR _value2$[ebp], eax

; 421  : 
; 422  : 				fseek (file_ptr, *offset, SEEK_SET);

  00423	6a 00		 push	 0
  00425	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00428	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042a	51		 push	 ecx
  0042b	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  00431	52		 push	 edx
  00432	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  00438	83 c4 0c	 add	 esp, 12			; 0000000cH

; 423  : 
; 424  : 				return_value = calulate_operator (value1, operator_name, value2);

  0043b	8b 45 ec	 mov	 eax, DWORD PTR _value2$[ebp]
  0043e	50		 push	 eax
  0043f	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _operator_name$[ebp]
  00445	51		 push	 ecx
  00446	8b 55 f0	 mov	 edx, DWORD PTR _value1$[ebp]
  00449	52		 push	 edx
  0044a	e8 00 00 00 00	 call	 ?calulate_operator@@YGHHPADH@Z ; calulate_operator
  0044f	89 45 f4	 mov	 DWORD PTR _return_value$[ebp], eax

; 425  : 
; 426  : 				fclose (file_ptr);

  00452	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00458	50		 push	 eax
  00459	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  0045f	83 c4 04	 add	 esp, 4

; 427  : 
; 428  : 				return return_value;

  00462	8b 45 f4	 mov	 eax, DWORD PTR _return_value$[ebp]
  00465	e9 b7 42 00 00	 jmp	 $LN3@parser_cam
$LN59@parser_cam:

; 429  : 			}
; 430  : 
; 431  : 			case FILE_TAG_IF:
; 432  : 			{
; 433  : 
; 434  : 				*offset = ftell (file_ptr);

  0046a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00470	50		 push	 eax
  00471	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00477	83 c4 04	 add	 esp, 4
  0047a	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  0047d	89 01		 mov	 DWORD PTR [ecx], eax

; 435  : 
; 436  : 				value1 = parser_campaign_file (filename, offset);

  0047f	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00482	50		 push	 eax
  00483	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  00486	51		 push	 ecx
  00487	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  0048c	89 45 f0	 mov	 DWORD PTR _value1$[ebp], eax

; 437  : 
; 438  : 				fseek (file_ptr, *offset, SEEK_SET);

  0048f	6a 00		 push	 0
  00491	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00494	8b 08		 mov	 ecx, DWORD PTR [eax]
  00496	51		 push	 ecx
  00497	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  0049d	52		 push	 edx
  0049e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  004a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 439  : 
; 440  : 				get_next_file_word (file_ptr, operator_name, sizeof (operator_name));

  004a7	6a 40		 push	 64			; 00000040H
  004a9	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _operator_name$[ebp]
  004af	50		 push	 eax
  004b0	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  004b6	51		 push	 ecx
  004b7	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 441  : 
; 442  : 				*offset = ftell (file_ptr);

  004bc	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  004c2	50		 push	 eax
  004c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  004c9	83 c4 04	 add	 esp, 4
  004cc	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  004cf	89 01		 mov	 DWORD PTR [ecx], eax

; 443  : 
; 444  : 				value2 = parser_campaign_file (filename, offset);

  004d1	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  004d4	50		 push	 eax
  004d5	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  004d8	51		 push	 ecx
  004d9	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  004de	89 45 ec	 mov	 DWORD PTR _value2$[ebp], eax

; 445  : 
; 446  : 				fseek (file_ptr, *offset, SEEK_SET);

  004e1	6a 00		 push	 0
  004e3	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  004e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  004e8	51		 push	 ecx
  004e9	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  004ef	52		 push	 edx
  004f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  004f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 447  : 
; 448  : 				return_value = if_file_tag_operator (value1, operator_name, value2);

  004f9	8b 45 ec	 mov	 eax, DWORD PTR _value2$[ebp]
  004fc	50		 push	 eax
  004fd	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _operator_name$[ebp]
  00503	51		 push	 ecx
  00504	8b 55 f0	 mov	 edx, DWORD PTR _value1$[ebp]
  00507	52		 push	 edx
  00508	e8 00 00 00 00	 call	 ?if_file_tag_operator@@YGHHPBDH@Z ; if_file_tag_operator
  0050d	89 45 f4	 mov	 DWORD PTR _return_value$[ebp], eax

; 449  : 
; 450  : 				if (!return_value)

  00510	83 7d f4 00	 cmp	 DWORD PTR _return_value$[ebp], 0
  00514	75 2f		 jne	 SHORT $LN11@parser_cam
$LN10@parser_cam:

; 451  : 				{
; 452  : 
; 453  : 					// skip script to ENDIF
; 454  : 					while (tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  00516	68 af 00 00 00	 push	 175			; 000000afH
  0051b	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00520	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00526	50		 push	 eax
  00527	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0052c	89 45 fc	 mov	 DWORD PTR _tag$[ebp], eax
  0052f	83 7d fc 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00533	74 10		 je	 SHORT $LN11@parser_cam

; 455  : 					{
; 456  : 
; 457  : 						if ((tag == FILE_TAG_ENDIF) || (tag == FILE_TAG_ELSE))

  00535	83 7d fc f4	 cmp	 DWORD PTR _tag$[ebp], -12 ; fffffff4H
  00539	74 06		 je	 SHORT $LN62@parser_cam
  0053b	83 7d fc f7	 cmp	 DWORD PTR _tag$[ebp], -9 ; fffffff7H
  0053f	75 02		 jne	 SHORT $LN61@parser_cam
$LN62@parser_cam:

; 458  : 						{
; 459  : 
; 460  : 							break;

  00541	eb 02		 jmp	 SHORT $LN11@parser_cam
$LN61@parser_cam:

; 461  : 						}
; 462  : 					}

  00543	eb d1		 jmp	 SHORT $LN10@parser_cam
$LN11@parser_cam:

; 463  : 				}
; 464  : 
; 465  : 				break;

  00545	e9 d2 41 00 00	 jmp	 $LN4@parser_cam
$LN63@parser_cam:

; 466  : 			}
; 467  : 
; 468  : 			case FILE_TAG_ELSE:
; 469  : 			{
; 470  : 
; 471  : 				// skip script to ENDIF
; 472  : 				while (tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  0054a	68 af 00 00 00	 push	 175			; 000000afH
  0054f	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00554	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0055a	50		 push	 eax
  0055b	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00560	89 45 fc	 mov	 DWORD PTR _tag$[ebp], eax
  00563	83 7d fc 00	 cmp	 DWORD PTR _tag$[ebp], 0
  00567	74 10		 je	 SHORT $LN13@parser_cam

; 473  : 				{
; 474  : 
; 475  : 					if ((tag == FILE_TAG_ENDIF) || (tag == FILE_TAG_ELSE))

  00569	83 7d fc f4	 cmp	 DWORD PTR _tag$[ebp], -12 ; fffffff4H
  0056d	74 06		 je	 SHORT $LN65@parser_cam
  0056f	83 7d fc f7	 cmp	 DWORD PTR _tag$[ebp], -9 ; fffffff7H
  00573	75 02		 jne	 SHORT $LN64@parser_cam
$LN65@parser_cam:

; 476  : 					{
; 477  : 
; 478  : 						break;

  00575	eb 02		 jmp	 SHORT $LN13@parser_cam
$LN64@parser_cam:

; 479  : 					}
; 480  : 				}

  00577	eb d1		 jmp	 SHORT $LN63@parser_cam
$LN13@parser_cam:

; 481  : 
; 482  : 				break;

  00579	e9 9e 41 00 00	 jmp	 $LN4@parser_cam
$LN66@parser_cam:

; 483  : 			}
; 484  : 
; 485  : 			case FILE_TAG_ENDIF:
; 486  : 			{
; 487  : 
; 488  : 				break;

  0057e	e9 99 41 00 00	 jmp	 $LN4@parser_cam
$LN67@parser_cam:

; 489  : 			}
; 490  : 
; 491  : 			case FILE_TAG_CREATE_VARIABLE:
; 492  : 			{
; 493  : 
; 494  : 				int
; 495  : 					*parser_variable;
; 496  : 
; 497  : 				parser_variable = (int *) malloc (sizeof (int));

  00583	6a 04		 push	 4
  00585	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0058b	83 c4 04	 add	 esp, 4
  0058e	89 85 ac fc ff
	ff		 mov	 DWORD PTR _parser_variable$81[ebp], eax

; 498  : 
; 499  : 				get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  00594	6a 40		 push	 64			; 00000040H
  00596	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  0059c	50		 push	 eax
  0059d	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  005a3	51		 push	 ecx
  005a4	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 500  : 
; 501  : 				unregister_file_tag_variable (variable_name);

  005a9	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  005af	50		 push	 eax
  005b0	e8 00 00 00 00	 call	 ?unregister_file_tag_variable@@YGXPBD@Z ; unregister_file_tag_variable

; 502  : 
; 503  : 				*offset = ftell (file_ptr);

  005b5	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  005bb	50		 push	 eax
  005bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  005c2	83 c4 04	 add	 esp, 4
  005c5	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  005c8	89 01		 mov	 DWORD PTR [ecx], eax

; 504  : 
; 505  : 				*parser_variable = parser_campaign_file (filename, offset);

  005ca	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  005cd	50		 push	 eax
  005ce	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  005d1	51		 push	 ecx
  005d2	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  005d7	8b 95 ac fc ff
	ff		 mov	 edx, DWORD PTR _parser_variable$81[ebp]
  005dd	89 02		 mov	 DWORD PTR [edx], eax

; 506  : 
; 507  : 				fseek (file_ptr, *offset, SEEK_SET);

  005df	6a 00		 push	 0
  005e1	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  005e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e6	51		 push	 ecx
  005e7	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  005ed	52		 push	 edx
  005ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  005f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 508  : 
; 509  : 				register_file_tag_variable (variable_name, parser_variable);

  005f7	8b 85 ac fc ff
	ff		 mov	 eax, DWORD PTR _parser_variable$81[ebp]
  005fd	50		 push	 eax
  005fe	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _variable_name$[ebp]
  00604	51		 push	 ecx
  00605	e8 00 00 00 00	 call	 ?register_file_tag_variable@@YGXPBDPAH@Z ; register_file_tag_variable

; 510  : 
; 511  : 				return_value = TRUE;

  0060a	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1

; 512  : 
; 513  : 				break;

  00611	e9 06 41 00 00	 jmp	 $LN4@parser_cam
$LN68@parser_cam:

; 514  : 			}
; 515  : 
; 516  : 			case FILE_TAG_CALL:
; 517  : 			{
; 518  : 
; 519  : 				*offset = ftell (file_ptr);

  00616	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0061c	50		 push	 eax
  0061d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00623	83 c4 04	 add	 esp, 4
  00626	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  00629	89 01		 mov	 DWORD PTR [ecx], eax

; 520  : 
; 521  : 				return_value = parser_campaign_file (filename, offset);

  0062b	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  0062e	50		 push	 eax
  0062f	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  00632	51		 push	 ecx
  00633	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  00638	89 45 f4	 mov	 DWORD PTR _return_value$[ebp], eax

; 522  : 
; 523  : 				fseek (file_ptr, *offset, SEEK_SET);

  0063b	6a 00		 push	 0
  0063d	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00640	8b 08		 mov	 ecx, DWORD PTR [eax]
  00642	51		 push	 ecx
  00643	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  00649	52		 push	 edx
  0064a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  00650	83 c4 0c	 add	 esp, 12			; 0000000cH

; 524  : 
; 525  : 				break;

  00653	e9 c4 40 00 00	 jmp	 $LN4@parser_cam
$LN69@parser_cam:

; 526  : 			}
; 527  : 
; 528  : 			case FILE_TAG_FILENAME:
; 529  : 			{
; 530  : 
; 531  : 				int
; 532  : 					file_offset;
; 533  : 
; 534  : 				get_next_file_word (file_ptr, new_filename, sizeof (new_filename));

  00658	6a 40		 push	 64			; 00000040H
  0065a	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _new_filename$[ebp]
  00660	50		 push	 eax
  00661	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00667	51		 push	 ecx
  00668	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 535  : 
; 536  : 				*offset = ftell (file_ptr);

  0066d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00673	50		 push	 eax
  00674	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  0067a	83 c4 04	 add	 esp, 4
  0067d	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  00680	89 01		 mov	 DWORD PTR [ecx], eax

; 537  : 
; 538  : 				file_offset = 0;

  00682	c7 85 a8 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _file_offset$80[ebp], 0

; 539  : 
; 540  : 				return_value = parser_campaign_file (new_filename, &file_offset);

  0068c	8d 85 a8 fc ff
	ff		 lea	 eax, DWORD PTR _file_offset$80[ebp]
  00692	50		 push	 eax
  00693	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _new_filename$[ebp]
  00699	51		 push	 ecx
  0069a	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  0069f	89 45 f4	 mov	 DWORD PTR _return_value$[ebp], eax

; 541  : 
; 542  : 				fseek (file_ptr, *offset, SEEK_SET);

  006a2	6a 00		 push	 0
  006a4	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  006a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  006a9	51		 push	 ecx
  006aa	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  006b0	52		 push	 edx
  006b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  006b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 543  : 
; 544  : 				break;

  006ba	e9 5d 40 00 00	 jmp	 $LN4@parser_cam
$LN70@parser_cam:

; 545  : 			}
; 546  : 
; 547  : 			case FILE_TAG_EVENT:
; 548  : 			{
; 549  : 
; 550  : 				int
; 551  : 					file_offset;
; 552  : 
; 553  : 				campaign_event_type
; 554  : 					*event;
; 555  : 
; 556  : 				get_next_file_word (file_ptr, event_name, sizeof (event_name));

  006bf	6a 40		 push	 64			; 00000040H
  006c1	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  006c4	50		 push	 eax
  006c5	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  006cb	51		 push	 ecx
  006cc	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 557  : 
; 558  : 				event = get_campaign_event (event_name);

  006d1	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  006d4	50		 push	 eax
  006d5	e8 00 00 00 00	 call	 ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ; get_campaign_event
  006da	89 85 a0 fc ff
	ff		 mov	 DWORD PTR _event$78[ebp], eax

; 559  : 
; 560  : 				*offset = ftell (file_ptr);

  006e0	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  006e6	50		 push	 eax
  006e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  006ed	83 c4 04	 add	 esp, 4
  006f0	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  006f3	89 01		 mov	 DWORD PTR [ecx], eax

; 561  : 
; 562  : 				file_offset = event->file_offset;

  006f5	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _event$78[ebp]
  006fb	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  006fe	89 8d a4 fc ff
	ff		 mov	 DWORD PTR _file_offset$79[ebp], ecx

; 563  : 
; 564  : 				return_value = parser_campaign_file (filename, &file_offset);

  00704	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _file_offset$79[ebp]
  0070a	50		 push	 eax
  0070b	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  0070e	51		 push	 ecx
  0070f	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  00714	89 45 f4	 mov	 DWORD PTR _return_value$[ebp], eax

; 565  : 
; 566  : 				fseek (file_ptr, *offset, SEEK_SET);

  00717	6a 00		 push	 0
  00719	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  0071c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0071e	51		 push	 ecx
  0071f	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  00725	52		 push	 edx
  00726	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  0072c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 567  : 
; 568  : 				fclose (file_ptr);

  0072f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00735	50		 push	 eax
  00736	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  0073c	83 c4 04	 add	 esp, 4

; 569  : 
; 570  : 				return return_value;

  0073f	8b 45 f4	 mov	 eax, DWORD PTR _return_value$[ebp]
  00742	e9 da 3f 00 00	 jmp	 $LN3@parser_cam
$LN71@parser_cam:

; 571  : 			}
; 572  : 
; 573  : 			case FILE_TAG_CREATE_EVENT:
; 574  : 			{
; 575  : 
; 576  : 				long int
; 577  : 					file_offset;
; 578  : 
; 579  : 				get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00747	6a 40		 push	 64			; 00000040H
  00749	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  0074c	50		 push	 eax
  0074d	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00753	51		 push	 ecx
  00754	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 580  : 
; 581  : 				file_offset = ftell (file_ptr);

  00759	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0075f	50		 push	 eax
  00760	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00766	83 c4 04	 add	 esp, 4
  00769	89 85 9c fc ff
	ff		 mov	 DWORD PTR _file_offset$77[ebp], eax

; 582  : 
; 583  : 				add_campaign_event (event_name, filename, file_offset);

  0076f	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR _file_offset$77[ebp]
  00775	50		 push	 eax
  00776	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  00779	51		 push	 ecx
  0077a	8d 55 a8	 lea	 edx, DWORD PTR _event_name$[ebp]
  0077d	52		 push	 edx
  0077e	e8 00 00 00 00	 call	 ?add_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PADPBDH@Z ; add_campaign_event
$LN14@parser_cam:

; 584  : 
; 585  : 				// now skip event script
; 586  : 				while (tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  00783	68 af 00 00 00	 push	 175			; 000000afH
  00788	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0078d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00799	89 45 fc	 mov	 DWORD PTR _tag$[ebp], eax
  0079c	83 7d fc 00	 cmp	 DWORD PTR _tag$[ebp], 0
  007a0	74 0a		 je	 SHORT $LN15@parser_cam

; 587  : 				{
; 588  : 
; 589  : 					if (tag == FILE_TAG_END_EVENT)

  007a2	83 7d fc f5	 cmp	 DWORD PTR _tag$[ebp], -11 ; fffffff5H
  007a6	75 02		 jne	 SHORT $LN72@parser_cam

; 590  : 					{
; 591  : 
; 592  : 						break;

  007a8	eb 02		 jmp	 SHORT $LN15@parser_cam
$LN72@parser_cam:

; 593  : 					}
; 594  : 				}

  007aa	eb d7		 jmp	 SHORT $LN14@parser_cam
$LN15@parser_cam:

; 595  : 
; 596  : 				return_value = TRUE;

  007ac	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1

; 597  : 
; 598  : 				break;

  007b3	e9 64 3f 00 00	 jmp	 $LN4@parser_cam
$LN73@parser_cam:

; 599  : 			}
; 600  : 
; 601  : 			case FILE_TAG_CREATE_TRIGGER:
; 602  : 			{
; 603  : 
; 604  : 				int
; 605  : 					value1,
; 606  : 					value2,
; 607  : 					value3,
; 608  : 					value4,
; 609  : 					type;
; 610  : 
; 611  : 				#if DEBUG_MODULE
; 612  : 
; 613  : 				debug_log ("PARSER: reading campaign trigger");
; 614  : 
; 615  : 				#endif
; 616  : 
; 617  : 				type = get_next_file_enum (file_ptr, campaign_trigger_names, NUM_CAMPAIGN_TRIGGER_TYPES);

  007b8	6a 12		 push	 18			; 00000012H
  007ba	68 00 00 00 00	 push	 OFFSET ?campaign_trigger_names@@3PAPBDA ; campaign_trigger_names
  007bf	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  007c5	50		 push	 eax
  007c6	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  007cb	89 85 88 fc ff
	ff		 mov	 DWORD PTR _type$72[ebp], eax

; 618  : 
; 619  : 				value1 = 0;

  007d1	c7 85 98 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _value1$76[ebp], 0

; 620  : 				value2 = 0;

  007db	c7 85 94 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _value2$75[ebp], 0

; 621  : 				value3 = 0;

  007e5	c7 85 90 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _value3$74[ebp], 0

; 622  : 				value4 = 0;

  007ef	c7 85 8c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _value4$73[ebp], 0

; 623  : 
; 624  : 				switch (type)

  007f9	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _type$72[ebp]
  007ff	89 85 ac f6 ff
	ff		 mov	 DWORD PTR tv333[ebp], eax
  00805	8b 8d ac f6 ff
	ff		 mov	 ecx, DWORD PTR tv333[ebp]
  0080b	83 e9 01	 sub	 ecx, 1
  0080e	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv333[ebp], ecx
  00814	83 bd ac f6 ff
	ff 10		 cmp	 DWORD PTR tv333[ebp], 16 ; 00000010H
  0081b	0f 87 c6 05 00
	00		 ja	 $LN97@parser_cam
  00821	8b 95 ac f6 ff
	ff		 mov	 edx, DWORD PTR tv333[ebp]
  00827	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN397@parser_cam[edx]
  0082e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN400@parser_cam[eax*4]
$LN74@parser_cam:

; 625  : 				{
; 626  : 
; 627  : 					case CAMPAIGN_TRIGGER_BALANCE_OF_POWER:
; 628  : 					{
; 629  : 
; 630  : 						// side
; 631  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00835	68 af 00 00 00	 push	 175			; 000000afH
  0083a	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0083f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00845	50		 push	 eax
  00846	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0084b	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 632  : 						ASSERT (result == FILE_TAG_SIDE);

  0084e	81 7d e8 94 00
	00 00		 cmp	 DWORD PTR _result$[ebp], 148 ; 00000094H
  00855	74 1a		 je	 SHORT $LN75@parser_cam
  00857	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0085c	05 ab 01 00 00	 add	 eax, 427		; 000001abH
  00861	50		 push	 eax
  00862	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00867	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@COBIDFLK@result?5?$DN?$DN?5FILE_TAG_SIDE@
  0086c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN75@parser_cam:

; 633  : 						value1 = get_next_file_int (file_ptr);

  00871	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00877	50		 push	 eax
  00878	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0087d	89 85 98 fc ff
	ff		 mov	 DWORD PTR _value1$76[ebp], eax

; 634  : 
; 635  : 						// goal
; 636  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00883	68 af 00 00 00	 push	 175			; 000000afH
  00888	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0088d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00893	50		 push	 eax
  00894	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00899	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 637  : 						ASSERT (result == FILE_TAG_GOAL);

  0089c	83 7d e8 46	 cmp	 DWORD PTR _result$[ebp], 70 ; 00000046H
  008a0	74 1a		 je	 SHORT $LN76@parser_cam
  008a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  008a7	05 b0 01 00 00	 add	 eax, 432		; 000001b0H
  008ac	50		 push	 eax
  008ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  008b2	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EJBKCCIG@result?5?$DN?$DN?5FILE_TAG_GOAL@
  008b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN76@parser_cam:

; 638  : 						value2 = get_next_file_int (file_ptr);

  008bc	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  008c2	50		 push	 eax
  008c3	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  008c8	89 85 94 fc ff
	ff		 mov	 DWORD PTR _value2$75[ebp], eax

; 639  : 
; 640  : 						// event
; 641  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  008ce	68 af 00 00 00	 push	 175			; 000000afH
  008d3	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  008d8	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  008de	50		 push	 eax
  008df	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  008e4	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 642  : 						ASSERT (result == FILE_TAG_EVENT);

  008e7	83 7d e8 f2	 cmp	 DWORD PTR _result$[ebp], -14 ; fffffff2H
  008eb	74 1a		 je	 SHORT $LN77@parser_cam
  008ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  008f2	05 b5 01 00 00	 add	 eax, 437		; 000001b5H
  008f7	50		 push	 eax
  008f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  008fd	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@
  00902	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN77@parser_cam:

; 643  : 						get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00907	6a 40		 push	 64			; 00000040H
  00909	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  0090c	50		 push	 eax
  0090d	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00913	51		 push	 ecx
  00914	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 644  : 
; 645  : 						// trigger
; 646  : 						trigger = (campaign_trigger) type;

  00919	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _type$72[ebp]
  0091f	89 45 f8	 mov	 DWORD PTR _trigger$[ebp], eax

; 647  : 
; 648  : 						break;

  00922	e9 e1 04 00 00	 jmp	 $LN16@parser_cam
$LN78@parser_cam:

; 649  : 					}
; 650  : 
; 651  : 					case CAMPAIGN_TRIGGER_TASK_COMPLETED:
; 652  : 					case CAMPAIGN_TRIGGER_TASK_FAILED:
; 653  : 					case CAMPAIGN_TRIGGER_OBJECT_DESTROYED:
; 654  : 					case CAMPAIGN_TRIGGER_OBJECT_FIRED:
; 655  : 					case CAMPAIGN_TRIGGER_OBJECT_TARGETED:
; 656  : 					case CAMPAIGN_TRIGGER_OBJECT_LANDED:
; 657  : 					case CAMPAIGN_TRIGGER_USER_LANDED:
; 658  : 					case CAMPAIGN_TRIGGER_INEFFICIENT_KEYSITE:
; 659  : 					case CAMPAIGN_TRIGGER_WAYPOINT_REACHED:
; 660  : 					case CAMPAIGN_TRIGGER_SECTOR_WON:
; 661  : 					case CAMPAIGN_TRIGGER_SECTOR_LOST:
; 662  : 					case CAMPAIGN_TRIGGER_SECTOR_REACHED:
; 663  : 					{
; 664  : 
; 665  : 						// event
; 666  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00927	68 af 00 00 00	 push	 175			; 000000afH
  0092c	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00931	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00937	50		 push	 eax
  00938	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0093d	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 667  : 						ASSERT (result == FILE_TAG_EVENT);

  00940	83 7d e8 f2	 cmp	 DWORD PTR _result$[ebp], -14 ; fffffff2H
  00944	74 1a		 je	 SHORT $LN79@parser_cam
  00946	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0094b	05 ce 01 00 00	 add	 eax, 462		; 000001ceH
  00950	50		 push	 eax
  00951	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00956	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@
  0095b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN79@parser_cam:

; 668  : 						get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00960	6a 40		 push	 64			; 00000040H
  00962	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00965	50		 push	 eax
  00966	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0096c	51		 push	 ecx
  0096d	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 669  : 
; 670  : 						// trigger
; 671  : 						trigger = (campaign_trigger) type;

  00972	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _type$72[ebp]
  00978	89 45 f8	 mov	 DWORD PTR _trigger$[ebp], eax

; 672  : 
; 673  : 						break;

  0097b	e9 88 04 00 00	 jmp	 $LN16@parser_cam
$LN80@parser_cam:

; 674  : 					}
; 675  : 
; 676  : 					case CAMPAIGN_TRIGGER_TIME_DURATION:
; 677  : 					{
; 678  : 
; 679  : 						// days
; 680  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00980	68 af 00 00 00	 push	 175			; 000000afH
  00985	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0098a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00990	50		 push	 eax
  00991	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00996	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 681  : 						ASSERT (result == FILE_TAG_DAYS);

  00999	83 7d e8 19	 cmp	 DWORD PTR _result$[ebp], 25 ; 00000019H
  0099d	74 1a		 je	 SHORT $LN81@parser_cam
  0099f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  009a4	05 dc 01 00 00	 add	 eax, 476		; 000001dcH
  009a9	50		 push	 eax
  009aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  009af	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DBAKNDDD@result?5?$DN?$DN?5FILE_TAG_DAYS@
  009b4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN81@parser_cam:

; 682  : 						value1 = get_next_file_int (file_ptr);

  009b9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  009bf	50		 push	 eax
  009c0	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  009c5	89 85 98 fc ff
	ff		 mov	 DWORD PTR _value1$76[ebp], eax

; 683  : 
; 684  : 						// hours
; 685  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  009cb	68 af 00 00 00	 push	 175			; 000000afH
  009d0	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  009d5	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  009db	50		 push	 eax
  009dc	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  009e1	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 686  : 						ASSERT (result == FILE_TAG_HOURS);

  009e4	83 7d e8 4a	 cmp	 DWORD PTR _result$[ebp], 74 ; 0000004aH
  009e8	74 1a		 je	 SHORT $LN82@parser_cam
  009ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  009ef	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  009f4	50		 push	 eax
  009f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  009fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KNJBMOMH@result?5?$DN?$DN?5FILE_TAG_HOURS@
  009ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN82@parser_cam:

; 687  : 						value2 = get_next_file_int (file_ptr);

  00a04	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00a0a	50		 push	 eax
  00a0b	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00a10	89 85 94 fc ff
	ff		 mov	 DWORD PTR _value2$75[ebp], eax

; 688  : 
; 689  : 						// minutes
; 690  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00a16	68 af 00 00 00	 push	 175			; 000000afH
  00a1b	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00a20	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00a26	50		 push	 eax
  00a27	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00a2c	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 691  : 						ASSERT (result == FILE_TAG_MINUTES);

  00a2f	83 7d e8 64	 cmp	 DWORD PTR _result$[ebp], 100 ; 00000064H
  00a33	74 1a		 je	 SHORT $LN83@parser_cam
  00a35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00a3a	05 e6 01 00 00	 add	 eax, 486		; 000001e6H
  00a3f	50		 push	 eax
  00a40	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a45	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@HCHGGPLM@result?5?$DN?$DN?5FILE_TAG_MINUTES@
  00a4a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN83@parser_cam:

; 692  : 						value3 = get_next_file_int (file_ptr);

  00a4f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00a55	50		 push	 eax
  00a56	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00a5b	89 85 90 fc ff
	ff		 mov	 DWORD PTR _value3$74[ebp], eax

; 693  : 
; 694  : 						// seconds
; 695  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00a61	68 af 00 00 00	 push	 175			; 000000afH
  00a66	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00a6b	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00a71	50		 push	 eax
  00a72	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00a77	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 696  : 						ASSERT (result == FILE_TAG_SECONDS);

  00a7a	81 7d e8 89 00
	00 00		 cmp	 DWORD PTR _result$[ebp], 137 ; 00000089H
  00a81	74 1a		 je	 SHORT $LN84@parser_cam
  00a83	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00a88	05 eb 01 00 00	 add	 eax, 491		; 000001ebH
  00a8d	50		 push	 eax
  00a8e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a93	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@HEEPGHOA@result?5?$DN?$DN?5FILE_TAG_SECONDS@
  00a98	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN84@parser_cam:

; 697  : 						value4 = get_next_file_int (file_ptr);

  00a9d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00aa3	50		 push	 eax
  00aa4	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00aa9	89 85 8c fc ff
	ff		 mov	 DWORD PTR _value4$73[ebp], eax

; 698  : 
; 699  : 						// event
; 700  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00aaf	68 af 00 00 00	 push	 175			; 000000afH
  00ab4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00ab9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00abf	50		 push	 eax
  00ac0	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00ac5	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 701  : 						ASSERT (result == FILE_TAG_EVENT);

  00ac8	83 7d e8 f2	 cmp	 DWORD PTR _result$[ebp], -14 ; fffffff2H
  00acc	74 1a		 je	 SHORT $LN85@parser_cam
  00ace	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00ad3	05 f0 01 00 00	 add	 eax, 496		; 000001f0H
  00ad8	50		 push	 eax
  00ad9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ade	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@
  00ae3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN85@parser_cam:

; 702  : 						get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00ae8	6a 40		 push	 64			; 00000040H
  00aea	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00aed	50		 push	 eax
  00aee	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00af4	51		 push	 ecx
  00af5	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 703  : 
; 704  : 						// trigger
; 705  : 						trigger = CAMPAIGN_TRIGGER_NONE;

  00afa	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _trigger$[ebp], 0

; 706  : 
; 707  : 						break;

  00b01	e9 02 03 00 00	 jmp	 $LN16@parser_cam
$LN86@parser_cam:

; 708  : 					}
; 709  : 
; 710  : 					case CAMPAIGN_TRIGGER_VARIABLE_CONDITION:
; 711  : 					{
; 712  : 
; 713  : 						// if
; 714  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00b06	68 af 00 00 00	 push	 175			; 000000afH
  00b0b	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00b10	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00b16	50		 push	 eax
  00b17	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00b1c	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 715  : 						ASSERT (result == FILE_TAG_IF);

  00b1f	83 7d e8 ef	 cmp	 DWORD PTR _result$[ebp], -17 ; ffffffefH
  00b23	74 1a		 je	 SHORT $LN87@parser_cam
  00b25	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00b2a	05 fe 01 00 00	 add	 eax, 510		; 000001feH
  00b2f	50		 push	 eax
  00b30	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b35	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GDFKICIO@result?5?$DN?$DN?5FILE_TAG_IF@
  00b3a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN87@parser_cam:

; 716  : 
; 717  : 						// variable_name
; 718  : 						get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  00b3f	6a 40		 push	 64			; 00000040H
  00b41	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00b47	50		 push	 eax
  00b48	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00b4e	51		 push	 ecx
  00b4f	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 719  : 						value1 = get_variable_id (variable_name);

  00b54	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00b5a	50		 push	 eax
  00b5b	e8 00 00 00 00	 call	 ?get_variable_id@@YGHPBD@Z ; get_variable_id
  00b60	89 85 98 fc ff
	ff		 mov	 DWORD PTR _value1$76[ebp], eax

; 720  : 
; 721  : 						// operator
; 722  : 						get_next_file_word (file_ptr, operator_name, sizeof (operator_name));

  00b66	6a 40		 push	 64			; 00000040H
  00b68	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _operator_name$[ebp]
  00b6e	50		 push	 eax
  00b6f	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00b75	51		 push	 ecx
  00b76	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 723  : 						value2 = get_operator_id (operator_name);

  00b7b	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _operator_name$[ebp]
  00b81	50		 push	 eax
  00b82	e8 00 00 00 00	 call	 ?get_operator_id@@YGHPBD@Z ; get_operator_id
  00b87	89 85 94 fc ff
	ff		 mov	 DWORD PTR _value2$75[ebp], eax

; 724  : 
; 725  : 						// value
; 726  : 						value3 = get_next_file_int (file_ptr);

  00b8d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00b93	50		 push	 eax
  00b94	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00b99	89 85 90 fc ff
	ff		 mov	 DWORD PTR _value3$74[ebp], eax

; 727  : 
; 728  : 						// event
; 729  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00b9f	68 af 00 00 00	 push	 175			; 000000afH
  00ba4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00ba9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00baf	50		 push	 eax
  00bb0	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00bb5	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 730  : 						ASSERT (result == FILE_TAG_EVENT);

  00bb8	83 7d e8 f2	 cmp	 DWORD PTR _result$[ebp], -14 ; fffffff2H
  00bbc	74 1a		 je	 SHORT $LN88@parser_cam
  00bbe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00bc3	05 0d 02 00 00	 add	 eax, 525		; 0000020dH
  00bc8	50		 push	 eax
  00bc9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bce	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@
  00bd3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN88@parser_cam:

; 731  : 						get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00bd8	6a 40		 push	 64			; 00000040H
  00bda	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00bdd	50		 push	 eax
  00bde	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00be4	51		 push	 ecx
  00be5	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 732  : 
; 733  : 						// trigger
; 734  : 						trigger = CAMPAIGN_TRIGGER_NONE;

  00bea	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _trigger$[ebp], 0

; 735  : 
; 736  : 						break;

  00bf1	e9 12 02 00 00	 jmp	 $LN16@parser_cam
$LN89@parser_cam:

; 737  : 					}
; 738  : 
; 739  : 					case CAMPAIGN_TRIGGER_RANDOM:
; 740  : 					{
; 741  : 
; 742  : 						// value
; 743  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00bf6	68 af 00 00 00	 push	 175			; 000000afH
  00bfb	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00c00	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00c06	50		 push	 eax
  00c07	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00c0c	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 744  : 						ASSERT (result == FILE_TAG_VALUE);

  00c0f	83 7d e8 e5	 cmp	 DWORD PTR _result$[ebp], -27 ; ffffffe5H
  00c13	74 1a		 je	 SHORT $LN90@parser_cam
  00c15	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00c1a	05 1b 02 00 00	 add	 eax, 539		; 0000021bH
  00c1f	50		 push	 eax
  00c20	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c25	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BPLLKIAK@result?5?$DN?$DN?5FILE_TAG_VALUE@
  00c2a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN90@parser_cam:

; 745  : 						value1 = get_next_file_int (file_ptr);

  00c2f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00c35	50		 push	 eax
  00c36	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00c3b	89 85 98 fc ff
	ff		 mov	 DWORD PTR _value1$76[ebp], eax

; 746  : 
; 747  : 						// event
; 748  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00c41	68 af 00 00 00	 push	 175			; 000000afH
  00c46	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00c4b	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00c51	50		 push	 eax
  00c52	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00c57	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 749  : 						ASSERT (result == FILE_TAG_EVENT);

  00c5a	83 7d e8 f2	 cmp	 DWORD PTR _result$[ebp], -14 ; fffffff2H
  00c5e	74 1a		 je	 SHORT $LN91@parser_cam
  00c60	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00c65	05 20 02 00 00	 add	 eax, 544		; 00000220H
  00c6a	50		 push	 eax
  00c6b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c70	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@
  00c75	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN91@parser_cam:

; 750  : 						get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00c7a	6a 40		 push	 64			; 00000040H
  00c7c	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00c7f	50		 push	 eax
  00c80	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00c86	51		 push	 ecx
  00c87	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 751  : 
; 752  : 						// trigger
; 753  : 						trigger = CAMPAIGN_TRIGGER_NONE;

  00c8c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _trigger$[ebp], 0

; 754  : 
; 755  : 						break;

  00c93	e9 70 01 00 00	 jmp	 $LN16@parser_cam
$LN92@parser_cam:

; 756  : 					}
; 757  : 
; 758  : 					case CAMPAIGN_TRIGGER_KEY_PRESS:
; 759  : 					{
; 760  : 
; 761  : 						// key_code
; 762  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00c98	68 af 00 00 00	 push	 175			; 000000afH
  00c9d	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00ca2	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00ca8	50		 push	 eax
  00ca9	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00cae	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 763  : 						ASSERT (result == FILE_TAG_KEY_CODE);

  00cb1	83 7d e8 ed	 cmp	 DWORD PTR _result$[ebp], -19 ; ffffffedH
  00cb5	74 1a		 je	 SHORT $LN93@parser_cam
  00cb7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00cbc	05 2e 02 00 00	 add	 eax, 558		; 0000022eH
  00cc1	50		 push	 eax
  00cc2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cc7	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MMOIMBGI@result?5?$DN?$DN?5FILE_TAG_KEY_CODE@
  00ccc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN93@parser_cam:

; 764  : 						value1 = get_next_file_enum (file_ptr, dik_names, DIK_APPS);

  00cd1	68 dd 00 00 00	 push	 221			; 000000ddH
  00cd6	68 00 00 00 00	 push	 OFFSET ?dik_names@@3PAPBDA ; dik_names
  00cdb	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00ce1	50		 push	 eax
  00ce2	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00ce7	89 85 98 fc ff
	ff		 mov	 DWORD PTR _value1$76[ebp], eax

; 765  : 
; 766  : 						// key_modifier
; 767  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00ced	68 af 00 00 00	 push	 175			; 000000afH
  00cf2	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00cf7	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00cfd	50		 push	 eax
  00cfe	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00d03	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 768  : 						ASSERT (result == FILE_TAG_KEY_MODIFIER);

  00d06	83 7d e8 ec	 cmp	 DWORD PTR _result$[ebp], -20 ; ffffffecH
  00d0a	74 1a		 je	 SHORT $LN94@parser_cam
  00d0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00d11	05 33 02 00 00	 add	 eax, 563		; 00000233H
  00d16	50		 push	 eax
  00d17	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d1c	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@BKPJAFKO@result?5?$DN?$DN?5FILE_TAG_KEY_MODIFIER@
  00d21	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN94@parser_cam:

; 769  : 						//value2 = get_next_file_int (file_ptr);
; 770  : 						value2 = get_next_file_enum (file_ptr, modifier_type_names, NUM_MODIFIER_TYPES);

  00d26	6a 09		 push	 9
  00d28	68 00 00 00 00	 push	 OFFSET ?modifier_type_names@@3PAPBDA ; modifier_type_names
  00d2d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00d33	50		 push	 eax
  00d34	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00d39	89 85 94 fc ff
	ff		 mov	 DWORD PTR _value2$75[ebp], eax

; 771  : 
; 772  : 						// key_state
; 773  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00d3f	68 af 00 00 00	 push	 175			; 000000afH
  00d44	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00d49	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00d4f	50		 push	 eax
  00d50	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00d55	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 774  : 						ASSERT (result == FILE_TAG_KEY_STATE);

  00d58	83 7d e8 eb	 cmp	 DWORD PTR _result$[ebp], -21 ; ffffffebH
  00d5c	74 1a		 je	 SHORT $LN95@parser_cam
  00d5e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00d63	05 39 02 00 00	 add	 eax, 569		; 00000239H
  00d68	50		 push	 eax
  00d69	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d6e	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@PAHHCHJG@result?5?$DN?$DN?5FILE_TAG_KEY_STATE@
  00d73	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN95@parser_cam:

; 775  : 						//value3 = get_next_file_int (file_ptr);
; 776  : 						value3 = get_next_file_enum (file_ptr, button_state_names, KEY_STATE_EITHER);

  00d78	6a 03		 push	 3
  00d7a	68 00 00 00 00	 push	 OFFSET ?button_state_names@@3PAPBDA ; button_state_names
  00d7f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00d85	50		 push	 eax
  00d86	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  00d8b	89 85 90 fc ff
	ff		 mov	 DWORD PTR _value3$74[ebp], eax

; 777  : 
; 778  : 						// event
; 779  : 						result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00d91	68 af 00 00 00	 push	 175			; 000000afH
  00d96	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00d9b	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00da1	50		 push	 eax
  00da2	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00da7	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 780  : 						ASSERT (result == FILE_TAG_EVENT);

  00daa	83 7d e8 f2	 cmp	 DWORD PTR _result$[ebp], -14 ; fffffff2H
  00dae	74 1a		 je	 SHORT $LN96@parser_cam
  00db0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00db5	05 3f 02 00 00	 add	 eax, 575		; 0000023fH
  00dba	50		 push	 eax
  00dbb	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dc0	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGJLLDKG@result?5?$DN?$DN?5FILE_TAG_EVENT@
  00dc5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN96@parser_cam:

; 781  : 						get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00dca	6a 40		 push	 64			; 00000040H
  00dcc	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00dcf	50		 push	 eax
  00dd0	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00dd6	51		 push	 ecx
  00dd7	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 782  : 
; 783  : 						// trigger
; 784  : 						trigger = (campaign_trigger) type;

  00ddc	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _type$72[ebp]
  00de2	89 45 f8	 mov	 DWORD PTR _trigger$[ebp], eax

; 785  : 
; 786  : 						break;

  00de5	eb 21		 jmp	 SHORT $LN16@parser_cam
$LN97@parser_cam:

; 787  : 					}
; 788  : 
; 789  : 					case CAMPAIGN_TRIGGER_NONE:
; 790  : 					default:
; 791  : 					{
; 792  : 
; 793  : 						parser_debug_log ("Reached unknown trigger");

  00de7	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HHAHCEEE@Reached?5unknown?5trigger@
  00dec	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00df1	83 c4 04	 add	 esp, 4

; 794  : 						debug_fatal ("PARSGEN: unknown trigger %d", type);

  00df4	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _type$72[ebp]
  00dfa	50		 push	 eax
  00dfb	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GJCGBAFG@PARSGEN?3?5unknown?5trigger?5?$CFd@
  00e00	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00e05	83 c4 08	 add	 esp, 8
$LN16@parser_cam:

; 795  : 					}
; 796  : 				}
; 797  : 
; 798  : 				add_campaign_trigger ((campaign_trigger) type, value1, value2, value3, value4, event_name, trigger);

  00e08	8b 45 f8	 mov	 eax, DWORD PTR _trigger$[ebp]
  00e0b	50		 push	 eax
  00e0c	8d 4d a8	 lea	 ecx, DWORD PTR _event_name$[ebp]
  00e0f	51		 push	 ecx
  00e10	8b 95 8c fc ff
	ff		 mov	 edx, DWORD PTR _value4$73[ebp]
  00e16	52		 push	 edx
  00e17	8b 85 90 fc ff
	ff		 mov	 eax, DWORD PTR _value3$74[ebp]
  00e1d	50		 push	 eax
  00e1e	8b 8d 94 fc ff
	ff		 mov	 ecx, DWORD PTR _value2$75[ebp]
  00e24	51		 push	 ecx
  00e25	8b 95 98 fc ff
	ff		 mov	 edx, DWORD PTR _value1$76[ebp]
  00e2b	52		 push	 edx
  00e2c	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _type$72[ebp]
  00e32	50		 push	 eax
  00e33	e8 00 00 00 00	 call	 ?add_campaign_trigger@@YGXW4CAMPAIGN_TRIGGER@@HHHHPAD0@Z ; add_campaign_trigger

; 799  : 
; 800  : 				return_value = TRUE;

  00e38	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _return_value$[ebp], 1

; 801  : 
; 802  : 				break;

  00e3f	e9 d8 38 00 00	 jmp	 $LN4@parser_cam
$LN98@parser_cam:

; 803  : 			}
; 804  : 
; 805  : 			case FILE_TAG_SET_EVENT_TRIGGERED:
; 806  : 			{
; 807  : 
; 808  : 				campaign_event_type
; 809  : 					*event;
; 810  : 
; 811  : 				get_next_file_word (file_ptr, event_name, sizeof (event_name));

  00e44	6a 40		 push	 64			; 00000040H
  00e46	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00e49	50		 push	 eax
  00e4a	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00e50	51		 push	 ecx
  00e51	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 812  : 
; 813  : 				event = get_campaign_event (event_name);

  00e56	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00e59	50		 push	 eax
  00e5a	e8 00 00 00 00	 call	 ?get_campaign_event@@YGPAUCAMPAIGN_EVENT_TYPE@@PAD@Z ; get_campaign_event
  00e5f	89 85 84 fc ff
	ff		 mov	 DWORD PTR _event$71[ebp], eax

; 814  : 
; 815  : 				if (!event)

  00e65	83 bd 84 fc ff
	ff 00		 cmp	 DWORD PTR _event$71[ebp], 0
  00e6c	75 22		 jne	 SHORT $LN99@parser_cam

; 816  : 				{
; 817  : 
; 818  : 					parser_debug_log ("Unknown event %s", event_name);

  00e6e	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00e71	50		 push	 eax
  00e72	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HPAHJDLK@Unknown?5event?5?$CFs@
  00e77	e8 00 00 00 00	 call	 ?parser_debug_log@@YAXPADZZ ; parser_debug_log
  00e7c	83 c4 08	 add	 esp, 8

; 819  : 
; 820  : 					debug_fatal ("PARSGEN: unknown event %s", event_name);

  00e7f	8d 45 a8	 lea	 eax, DWORD PTR _event_name$[ebp]
  00e82	50		 push	 eax
  00e83	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@FKJIOENN@PARSGEN?3?5unknown?5event?5?$CFs@
  00e88	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00e8d	83 c4 08	 add	 esp, 8
$LN99@parser_cam:

; 821  : 				}
; 822  : 
; 823  : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  00e90	68 af 00 00 00	 push	 175			; 000000afH
  00e95	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00e9a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00ea0	50		 push	 eax
  00ea1	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00ea6	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 824  : 				ASSERT (result == FILE_TAG_VALUE);

  00ea9	83 7d e8 e5	 cmp	 DWORD PTR _result$[ebp], -27 ; ffffffe5H
  00ead	74 1a		 je	 SHORT $LN100@parser_cam
  00eaf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  00eb4	05 6b 02 00 00	 add	 eax, 619		; 0000026bH
  00eb9	50		 push	 eax
  00eba	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ebf	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BPLLKIAK@result?5?$DN?$DN?5FILE_TAG_VALUE@
  00ec4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN100@parser_cam:

; 825  : 
; 826  : 				value1 = get_next_file_int (file_ptr);

  00ec9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00ecf	50		 push	 eax
  00ed0	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00ed5	89 45 f0	 mov	 DWORD PTR _value1$[ebp], eax

; 827  : 
; 828  : 				event->triggered = value1;

  00ed8	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _event$71[ebp]
  00ede	8b 4d f0	 mov	 ecx, DWORD PTR _value1$[ebp]
  00ee1	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 829  : 
; 830  : 				break;

  00ee4	e9 33 38 00 00	 jmp	 $LN4@parser_cam
$LN101@parser_cam:

; 831  : 			}
; 832  : 
; 833  : 			case FILE_TAG_SET_VARIABLE:
; 834  : 			{
; 835  : 
; 836  : 				int
; 837  : 					*variable_ptr;
; 838  : 
; 839  : 				get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  00ee9	6a 40		 push	 64			; 00000040H
  00eeb	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00ef1	50		 push	 eax
  00ef2	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00ef8	51		 push	 ecx
  00ef9	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 840  : 
; 841  : 				variable_ptr = get_file_tag_variable (variable_name);

  00efe	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00f04	50		 push	 eax
  00f05	e8 00 00 00 00	 call	 ?get_file_tag_variable@@YGPAHPBD@Z ; get_file_tag_variable
  00f0a	89 85 80 fc ff
	ff		 mov	 DWORD PTR _variable_ptr$70[ebp], eax

; 842  : 
; 843  : 				*offset = ftell (file_ptr);

  00f10	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00f16	50		 push	 eax
  00f17	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00f1d	83 c4 04	 add	 esp, 4
  00f20	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  00f23	89 01		 mov	 DWORD PTR [ecx], eax

; 844  : 
; 845  : 				*variable_ptr = parser_campaign_file (filename, offset);

  00f25	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00f28	50		 push	 eax
  00f29	8b 4d 08	 mov	 ecx, DWORD PTR _filename$[ebp]
  00f2c	51		 push	 ecx
  00f2d	e8 00 00 00 00	 call	 ?parser_campaign_file@@YGHPBDPAH@Z ; parser_campaign_file
  00f32	8b 95 80 fc ff
	ff		 mov	 edx, DWORD PTR _variable_ptr$70[ebp]
  00f38	89 02		 mov	 DWORD PTR [edx], eax

; 846  : 
; 847  : 				fseek (file_ptr, *offset, SEEK_SET);

  00f3a	6a 00		 push	 0
  00f3c	8b 45 0c	 mov	 eax, DWORD PTR _offset$[ebp]
  00f3f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f41	51		 push	 ecx
  00f42	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _file_ptr$[ebp]
  00f48	52		 push	 edx
  00f49	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  00f4f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 848  : 
; 849  : 				return_value = *variable_ptr;

  00f52	8b 85 80 fc ff
	ff		 mov	 eax, DWORD PTR _variable_ptr$70[ebp]
  00f58	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f5a	89 4d f4	 mov	 DWORD PTR _return_value$[ebp], ecx

; 850  : 
; 851  : 				break;

  00f5d	e9 ba 37 00 00	 jmp	 $LN4@parser_cam
$LN102@parser_cam:

; 852  : 			}
; 853  : 
; 854  : 			case FILE_TAG_VALUE:
; 855  : 			{
; 856  : 
; 857  : 				return_value = get_next_file_int (file_ptr);

  00f62	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00f68	50		 push	 eax
  00f69	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  00f6e	89 45 f4	 mov	 DWORD PTR _return_value$[ebp], eax

; 858  : 
; 859  : 				*offset = ftell (file_ptr);

  00f71	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00f77	50		 push	 eax
  00f78	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00f7e	83 c4 04	 add	 esp, 4
  00f81	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  00f84	89 01		 mov	 DWORD PTR [ecx], eax

; 860  : 
; 861  : 				fclose (file_ptr);

  00f86	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00f8c	50		 push	 eax
  00f8d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00f93	83 c4 04	 add	 esp, 4

; 862  : 
; 863  : 				return return_value;

  00f96	8b 45 f4	 mov	 eax, DWORD PTR _return_value$[ebp]
  00f99	e9 83 37 00 00	 jmp	 $LN3@parser_cam
$LN103@parser_cam:

; 864  : 			}
; 865  : 
; 866  : 			case FILE_TAG_VARIABLE:
; 867  : 			{
; 868  : 
; 869  : 				int
; 870  : 					*variable;
; 871  : 
; 872  : 				get_next_file_word (file_ptr, variable_name, sizeof (variable_name));

  00f9e	6a 40		 push	 64			; 00000040H
  00fa0	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00fa6	50		 push	 eax
  00fa7	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00fad	51		 push	 ecx
  00fae	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 873  : 
; 874  : 				variable = get_file_tag_variable (variable_name);

  00fb3	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _variable_name$[ebp]
  00fb9	50		 push	 eax
  00fba	e8 00 00 00 00	 call	 ?get_file_tag_variable@@YGPAHPBD@Z ; get_file_tag_variable
  00fbf	89 85 7c fc ff
	ff		 mov	 DWORD PTR _variable$69[ebp], eax

; 875  : 
; 876  : 				return_value = *variable;

  00fc5	8b 85 7c fc ff
	ff		 mov	 eax, DWORD PTR _variable$69[ebp]
  00fcb	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fcd	89 4d f4	 mov	 DWORD PTR _return_value$[ebp], ecx

; 877  : 
; 878  : 				*offset = ftell (file_ptr);

  00fd0	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00fd6	50		 push	 eax
  00fd7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  00fdd	83 c4 04	 add	 esp, 4
  00fe0	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  00fe3	89 01		 mov	 DWORD PTR [ecx], eax

; 879  : 
; 880  : 				fclose (file_ptr);

  00fe5	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00feb	50		 push	 eax
  00fec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00ff2	83 c4 04	 add	 esp, 4

; 881  : 
; 882  : 				return return_value;

  00ff5	8b 45 f4	 mov	 eax, DWORD PTR _return_value$[ebp]
  00ff8	e9 24 37 00 00	 jmp	 $LN3@parser_cam
$LN104@parser_cam:

; 883  : 			}
; 884  : 
; 885  : 			case FILE_TAG_SHORT_TEXT_START:
; 886  : 			case FILE_TAG_LONG_TEXT_START:
; 887  : 			case FILE_TAG_TEXT_END:
; 888  : 			{
; 889  : 
; 890  : 				break;

  00ffd	e9 1a 37 00 00	 jmp	 $LN4@parser_cam
$LN105@parser_cam:

; 891  : 			}
; 892  : 
; 893  : 			case FILE_TAG_END:
; 894  : 			case FILE_TAG_END_EVENT:
; 895  : 			{
; 896  : 
; 897  : 				*offset = ftell (file_ptr);

  01002	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01008	50		 push	 eax
  01009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  0100f	83 c4 04	 add	 esp, 4
  01012	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  01015	89 01		 mov	 DWORD PTR [ecx], eax

; 898  : 
; 899  : 				fclose (file_ptr);

  01017	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0101d	50		 push	 eax
  0101e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  01024	83 c4 04	 add	 esp, 4

; 900  : 
; 901  : 				return return_value;

  01027	8b 45 f4	 mov	 eax, DWORD PTR _return_value$[ebp]
  0102a	e9 f2 36 00 00	 jmp	 $LN3@parser_cam
$LN106@parser_cam:

; 902  : 			}
; 903  : 
; 904  : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 905  : // GAME STUFF
; 906  : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 907  : 
; 908  : 			case FILE_TAG_FORCE_NAME:
; 909  : 			{
; 910  : 
; 911  : 				char
; 912  : 					name [STRING_TYPE_FORCE_NAME_MAX_LENGTH + 1];
; 913  : 
; 914  : 				get_next_file_string (file_ptr, name, sizeof (name));

  0102f	68 01 01 00 00	 push	 257			; 00000101H
  01034	8d 85 78 fb ff
	ff		 lea	 eax, DWORD PTR _name$68[ebp]
  0103a	50		 push	 eax
  0103b	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  01041	51		 push	 ecx
  01042	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 915  : 
; 916  : 				set_local_entity_string (get_parser_force (), STRING_TYPE_FORCE_NAME, name);

  01047	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  0104e	74 0f		 je	 SHORT $LN235@parser_cam
  01050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  01055	8b 08		 mov	 ecx, DWORD PTR [eax]
  01057	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv679[ebp], ecx
  0105d	eb 27		 jmp	 SHORT $LN236@parser_cam
$LN235@parser_cam:
  0105f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01065	81 c2 c7 02 00
	00		 add	 edx, 711		; 000002c7H
  0106b	52		 push	 edx
  0106c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01076	50		 push	 eax
  01077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0107c	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv679[ebp], 0
$LN236@parser_cam:
  01086	b9 01 00 00 00	 mov	 ecx, 1
  0108b	85 c9		 test	 ecx, ecx
  0108d	74 0c		 je	 SHORT $LN237@parser_cam
  0108f	c7 85 a8 f6 ff
	ff 02 00 00 00	 mov	 DWORD PTR tv687[ebp], 2
  01099	eb 27		 jmp	 SHORT $LN238@parser_cam
$LN237@parser_cam:
  0109b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  010a1	81 c2 c7 02 00
	00		 add	 edx, 711		; 000002c7H
  010a7	52		 push	 edx
  010a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  010ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  010b2	50		 push	 eax
  010b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010b8	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv687[ebp], 0
$LN238@parser_cam:
  010c2	8d 8d 78 fb ff
	ff		 lea	 ecx, DWORD PTR _name$68[ebp]
  010c8	51		 push	 ecx
  010c9	6a 02		 push	 2
  010cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  010d1	52		 push	 edx
  010d2	6b 85 ac f6 ff
	ff 34		 imul	 eax, DWORD PTR tv679[ebp], 52
  010d9	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv687[ebp]
  010df	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_string@@3PAY0N@P6GXPAUENTITY@@W4STRING_TYPES@@PBD@ZA[eax+ecx*4]
  010e6	ff d2		 call	 edx

; 917  : 
; 918  : 				break;

  010e8	e9 2f 36 00 00	 jmp	 $LN4@parser_cam
$LN107@parser_cam:

; 919  : 			}
; 920  : 
; 921  : 			case FILE_TAG_CAMPAIGN_REQUIRES_APACHE_HAVOC:
; 922  : 			{
; 923  : 
; 924  : 				int
; 925  : 					flag;
; 926  : 
; 927  : 				ASSERT (get_session_entity ());

  010ed	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  010f4	75 1a		 jne	 SHORT $LN108@parser_cam
  010f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  010fb	05 d2 02 00 00	 add	 eax, 722		; 000002d2H
  01100	50		 push	 eax
  01101	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01106	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  0110b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN108@parser_cam:

; 928  : 
; 929  : 				flag = get_next_file_int (file_ptr);

  01110	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01116	50		 push	 eax
  01117	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0111c	89 85 74 fb ff
	ff		 mov	 DWORD PTR _flag$67[ebp], eax

; 930  : 
; 931  : 				set_client_server_entity_int_value (get_session_entity (), INT_TYPE_CAMPAIGN_REQUIRES_APACHE_HAVOC, flag);

  01122	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01129	74 0f		 je	 SHORT $LN239@parser_cam
  0112b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01130	8b 08		 mov	 ecx, DWORD PTR [eax]
  01132	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv706[ebp], ecx
  01138	eb 27		 jmp	 SHORT $LN240@parser_cam
$LN239@parser_cam:
  0113a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01140	81 c2 d6 02 00
	00		 add	 edx, 726		; 000002d6H
  01146	52		 push	 edx
  01147	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0114c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01151	50		 push	 eax
  01152	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01157	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv706[ebp], 0
$LN240@parser_cam:
  01161	b9 01 00 00 00	 mov	 ecx, 1
  01166	85 c9		 test	 ecx, ecx
  01168	74 0c		 je	 SHORT $LN241@parser_cam
  0116a	c7 85 a8 f6 ff
	ff 16 00 00 00	 mov	 DWORD PTR tv714[ebp], 22 ; 00000016H
  01174	eb 27		 jmp	 SHORT $LN242@parser_cam
$LN241@parser_cam:
  01176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0117c	81 c2 d6 02 00
	00		 add	 edx, 726		; 000002d6H
  01182	52		 push	 edx
  01183	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01188	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0118d	50		 push	 eax
  0118e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01193	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv714[ebp], 0
$LN242@parser_cam:
  0119d	8b 8d 74 fb ff
	ff		 mov	 ecx, DWORD PTR _flag$67[ebp]
  011a3	51		 push	 ecx
  011a4	6a 16		 push	 22			; 00000016H
  011a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  011ac	52		 push	 edx
  011ad	69 85 ac f6 ff
	ff b8 08 00 00	 imul	 eax, DWORD PTR tv706[ebp], 2232
  011b7	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv714[ebp]
  011bd	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*8]
  011c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  011c9	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  011cc	ff d1		 call	 ecx

; 932  : 
; 933  : 				if (flag)

  011ce	83 bd 74 fb ff
	ff 00		 cmp	 DWORD PTR _flag$67[ebp], 0
  011d5	74 0d		 je	 SHORT $LN109@parser_cam

; 934  : 				{
; 935  : 
; 936  : 					debug_log ("PARSGEN: Marking Campaign as requiring Apache Havoc to be installed");

  011d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@GFKCBHAM@PARSGEN?3?5Marking?5Campaign?5as?5re@
  011dc	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  011e1	83 c4 04	 add	 esp, 4
$LN109@parser_cam:

; 937  : 				}
; 938  : 
; 939  : 				break;

  011e4	e9 33 35 00 00	 jmp	 $LN4@parser_cam
$LN110@parser_cam:

; 940  : 			}
; 941  : 
; 942  : 			case FILE_TAG_MEDAL:
; 943  : 			{
; 944  : 
; 945  : 				int
; 946  : 					medal;
; 947  : 
; 948  : 				ASSERT (get_session_entity ());

  011e9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  011f0	75 1a		 jne	 SHORT $LN111@parser_cam
  011f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  011f7	05 e7 02 00 00	 add	 eax, 743		; 000002e7H
  011fc	50		 push	 eax
  011fd	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01202	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  01207	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN111@parser_cam:

; 949  : 
; 950  : 				medal = get_next_file_enum (file_ptr, medal_type_names, NUM_MEDAL_TYPES);

  0120c	6a 0d		 push	 13			; 0000000dH
  0120e	68 00 00 00 00	 push	 OFFSET ?medal_type_names@@3PAPBDA ; medal_type_names
  01213	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01219	50		 push	 eax
  0121a	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0121f	89 85 70 fb ff
	ff		 mov	 DWORD PTR _medal$66[ebp], eax

; 951  : 
; 952  : 				set_client_server_entity_int_value (get_session_entity (), INT_TYPE_CAMPAIGN_MEDAL, medal);

  01225	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0122c	74 0f		 je	 SHORT $LN243@parser_cam
  0122e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01233	8b 08		 mov	 ecx, DWORD PTR [eax]
  01235	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv739[ebp], ecx
  0123b	eb 27		 jmp	 SHORT $LN244@parser_cam
$LN243@parser_cam:
  0123d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01243	81 c2 eb 02 00
	00		 add	 edx, 747		; 000002ebH
  01249	52		 push	 edx
  0124a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0124f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01254	50		 push	 eax
  01255	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0125a	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv739[ebp], 0
$LN244@parser_cam:
  01264	b9 01 00 00 00	 mov	 ecx, 1
  01269	85 c9		 test	 ecx, ecx
  0126b	74 0c		 je	 SHORT $LN245@parser_cam
  0126d	c7 85 a8 f6 ff
	ff 15 00 00 00	 mov	 DWORD PTR tv747[ebp], 21 ; 00000015H
  01277	eb 27		 jmp	 SHORT $LN246@parser_cam
$LN245@parser_cam:
  01279	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0127f	81 c2 eb 02 00
	00		 add	 edx, 747		; 000002ebH
  01285	52		 push	 edx
  01286	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0128b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01290	50		 push	 eax
  01291	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01296	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv747[ebp], 0
$LN246@parser_cam:
  012a0	8b 8d 70 fb ff
	ff		 mov	 ecx, DWORD PTR _medal$66[ebp]
  012a6	51		 push	 ecx
  012a7	6a 15		 push	 21			; 00000015H
  012a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  012af	52		 push	 edx
  012b0	69 85 ac f6 ff
	ff b8 08 00 00	 imul	 eax, DWORD PTR tv739[ebp], 2232
  012ba	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv747[ebp]
  012c0	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*8]
  012c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  012cc	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  012cf	ff d1		 call	 ecx

; 953  : 
; 954  : 				if (medal)

  012d1	83 bd 70 fb ff
	ff 00		 cmp	 DWORD PTR _medal$66[ebp], 0
  012d8	74 1b		 je	 SHORT $LN112@parser_cam

; 955  : 				{
; 956  : 
; 957  : 					debug_log ("PARSGEN: Campaign medal = %s", medal_type_names [medal]);

  012da	8b 85 70 fb ff
	ff		 mov	 eax, DWORD PTR _medal$66[ebp]
  012e0	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?medal_type_names@@3PAPBDA[eax*4]
  012e7	51		 push	 ecx
  012e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@GONHOKBO@PARSGEN?3?5Campaign?5medal?5?$DN?5?$CFs@
  012ed	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  012f2	83 c4 08	 add	 esp, 8
$LN112@parser_cam:

; 958  : 				}
; 959  : 
; 960  : 				break;

  012f5	e9 22 34 00 00	 jmp	 $LN4@parser_cam
$LN113@parser_cam:

; 961  : 			}
; 962  : 
; 963  : 			case FILE_TAG_CAMPAIGN_DATA:
; 964  : 			{
; 965  : 
; 966  : 				float
; 967  : 					x_min,
; 968  : 					x_max,
; 969  : 					z_min,
; 970  : 					z_max;
; 971  : 
; 972  : 				vec3d
; 973  : 					pos;
; 974  : 
; 975  : 				int
; 976  : 					sector_size,
; 977  : 					x_size,
; 978  : 					z_size;
; 979  : 
; 980  : 				char
; 981  : 					temp_filename [256];
; 982  : 
; 983  : 				if (get_gunship_entity ())

  012fa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  01301	0f 84 a3 00 00
	00		 je	 $LN114@parser_cam

; 984  : 				{
; 985  : 
; 986  : 					get_local_entity_vec3d (get_gunship_entity (), VEC3D_TYPE_POSITION, &pos);

  01307	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0130e	74 0f		 je	 SHORT $LN247@parser_cam
  01310	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  01315	8b 08		 mov	 ecx, DWORD PTR [eax]
  01317	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv767[ebp], ecx
  0131d	eb 27		 jmp	 SHORT $LN248@parser_cam
$LN247@parser_cam:
  0131f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01325	81 c2 0d 03 00
	00		 add	 edx, 781		; 0000030dH
  0132b	52		 push	 edx
  0132c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01331	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01336	50		 push	 eax
  01337	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0133c	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv767[ebp], 0
$LN248@parser_cam:
  01346	b9 01 00 00 00	 mov	 ecx, 1
  0134b	85 c9		 test	 ecx, ecx
  0134d	74 0c		 je	 SHORT $LN249@parser_cam
  0134f	c7 85 a8 f6 ff
	ff 08 00 00 00	 mov	 DWORD PTR tv775[ebp], 8
  01359	eb 27		 jmp	 SHORT $LN250@parser_cam
$LN249@parser_cam:
  0135b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01361	81 c2 0d 03 00
	00		 add	 edx, 781		; 0000030dH
  01367	52		 push	 edx
  01368	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0136d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  01372	50		 push	 eax
  01373	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01378	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv775[ebp], 0
$LN250@parser_cam:
  01382	8d 8d 54 fb ff
	ff		 lea	 ecx, DWORD PTR _pos$61[ebp]
  01388	51		 push	 ecx
  01389	6a 08		 push	 8
  0138b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  01391	52		 push	 edx
  01392	6b 85 ac f6 ff
	ff 60		 imul	 eax, DWORD PTR tv767[ebp], 96
  01399	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv775[ebp]
  0139f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  013a6	ff d2		 call	 edx

; 987  : 				}
; 988  : 				else

  013a8	eb 20		 jmp	 SHORT $LN115@parser_cam
$LN114@parser_cam:

; 989  : 				{
; 990  : 
; 991  : 					pos.x = MID_MAP_X;

  013aa	f3 0f 10 05 30
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+48
  013b2	f3 0f 11 85 54
	fb ff ff	 movss	 DWORD PTR _pos$61[ebp], xmm0

; 992  : 					pos.z = MID_MAP_Z;

  013ba	f3 0f 10 05 38
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+56
  013c2	f3 0f 11 85 5c
	fb ff ff	 movss	 DWORD PTR _pos$61[ebp+8], xmm0
$LN115@parser_cam:

; 993  : 				}
; 994  : 
; 995  : //				planner_set_map_zoom (1);
; 996  : //				planner_set_current_viewpoint (&pos);
; 997  : 
; 998  : 				//
; 999  : 				// side data filename
; 1000 : 				//
; 1001 : 
; 1002 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  013ca	68 af 00 00 00	 push	 175			; 000000afH
  013cf	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  013d4	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  013da	50		 push	 eax
  013db	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  013e0	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1003 : 
; 1004 : 				ASSERT (result == FILE_TAG_FILENAME);

  013e3	83 7d e8 f1	 cmp	 DWORD PTR _result$[ebp], -15 ; fffffff1H
  013e7	74 1a		 je	 SHORT $LN116@parser_cam
  013e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  013ee	05 1f 03 00 00	 add	 eax, 799		; 0000031fH
  013f3	50		 push	 eax
  013f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  013f9	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OKDNCJOJ@result?5?$DN?$DN?5FILE_TAG_FILENAME@
  013fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN116@parser_cam:

; 1005 : 
; 1006 : 				memset (&temp_filename, 0, sizeof (temp_filename));

  01403	68 00 01 00 00	 push	 256			; 00000100H
  01408	6a 00		 push	 0
  0140a	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  01410	50		 push	 eax
  01411	e8 00 00 00 00	 call	 _memset
  01416	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1007 : 
; 1008 : 				get_next_file_string (file_ptr, temp_filename, sizeof (temp_filename));

  01419	68 00 01 00 00	 push	 256			; 00000100H
  0141e	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  01424	50		 push	 eax
  01425	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0142b	51		 push	 ecx
  0142c	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 1009 : 
; 1010 : 				if (side_data_filename)

  01431	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?side_data_filename@@3PADA, 0 ; side_data_filename
  01438	74 0b		 je	 SHORT $LN117@parser_cam

; 1011 : 				{
; 1012 : 
; 1013 : 					free_mem (side_data_filename);

  0143a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?side_data_filename@@3PADA ; side_data_filename
  0143f	50		 push	 eax
  01440	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN117@parser_cam:

; 1014 : 				}
; 1015 : 
; 1016 : 				side_data_filename = (char *) malloc_heap_mem (strlen (temp_filename) + 1);

  01445	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  0144b	50		 push	 eax
  0144c	e8 00 00 00 00	 call	 _strlen
  01451	83 c4 04	 add	 esp, 4
  01454	83 c0 01	 add	 eax, 1
  01457	50		 push	 eax
  01458	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0145d	a3 00 00 00 00	 mov	 DWORD PTR ?side_data_filename@@3PADA, eax ; side_data_filename

; 1017 : 
; 1018 : 				sprintf (side_data_filename, "%s", temp_filename);

  01462	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  01468	50		 push	 eax
  01469	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0146e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?side_data_filename@@3PADA ; side_data_filename
  01474	51		 push	 ecx
  01475	e8 00 00 00 00	 call	 _sprintf
  0147a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1019 : 
; 1020 : 				//
; 1021 : 				// Population data filename
; 1022 : 				//
; 1023 : 
; 1024 : 				if (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_FILENAME)

  0147d	68 af 00 00 00	 push	 175			; 000000afH
  01482	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01487	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0148d	50		 push	 eax
  0148e	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  01493	83 f8 f1	 cmp	 eax, -15		; fffffff1H
  01496	0f 85 b3 00 00
	00		 jne	 $LN118@parser_cam

; 1025 : 				{
; 1026 : 
; 1027 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0149c	68 af 00 00 00	 push	 175			; 000000afH
  014a1	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  014a6	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  014ac	50		 push	 eax
  014ad	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  014b2	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1028 : 
; 1029 : 					ASSERT (result == FILE_TAG_FILENAME);

  014b5	83 7d e8 f1	 cmp	 DWORD PTR _result$[ebp], -15 ; fffffff1H
  014b9	74 1a		 je	 SHORT $LN119@parser_cam
  014bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  014c0	05 38 03 00 00	 add	 eax, 824		; 00000338H
  014c5	50		 push	 eax
  014c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  014cb	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OKDNCJOJ@result?5?$DN?$DN?5FILE_TAG_FILENAME@
  014d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN119@parser_cam:

; 1030 : 
; 1031 : 					memset (&temp_filename, 0, sizeof (temp_filename));

  014d5	68 00 01 00 00	 push	 256			; 00000100H
  014da	6a 00		 push	 0
  014dc	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  014e2	50		 push	 eax
  014e3	e8 00 00 00 00	 call	 _memset
  014e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1032 : 
; 1033 : 					get_next_file_string (file_ptr, temp_filename, sizeof (temp_filename));

  014eb	68 00 01 00 00	 push	 256			; 00000100H
  014f0	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  014f6	50		 push	 eax
  014f7	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  014fd	51		 push	 ecx
  014fe	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 1034 : 
; 1035 : 					if (population_placement_filename)

  01503	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?population_placement_filename@@3PADA, 0 ; population_placement_filename
  0150a	74 0b		 je	 SHORT $LN120@parser_cam

; 1036 : 					{
; 1037 : 
; 1038 : 						free_mem (population_placement_filename);

  0150c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?population_placement_filename@@3PADA ; population_placement_filename
  01511	50		 push	 eax
  01512	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem
$LN120@parser_cam:

; 1039 : 					}
; 1040 : 
; 1041 : 					population_placement_filename = (char *) malloc_heap_mem (strlen (temp_filename) + 1);

  01517	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  0151d	50		 push	 eax
  0151e	e8 00 00 00 00	 call	 _strlen
  01523	83 c4 04	 add	 esp, 4
  01526	83 c0 01	 add	 eax, 1
  01529	50		 push	 eax
  0152a	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0152f	a3 00 00 00 00	 mov	 DWORD PTR ?population_placement_filename@@3PADA, eax ; population_placement_filename

; 1042 : 
; 1043 : 					sprintf (population_placement_filename, "%s", temp_filename);

  01534	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _temp_filename$57[ebp]
  0153a	50		 push	 eax
  0153b	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  01540	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?population_placement_filename@@3PADA ; population_placement_filename
  01546	51		 push	 ecx
  01547	e8 00 00 00 00	 call	 _sprintf
  0154c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN118@parser_cam:

; 1044 : 				}
; 1045 : 
; 1046 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0154f	68 af 00 00 00	 push	 175			; 000000afH
  01554	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01559	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0155f	50		 push	 eax
  01560	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01565	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1047 : 
; 1048 : 				ASSERT (result == FILE_TAG_MAP_X_SIZE);

  01568	83 7d e8 5c	 cmp	 DWORD PTR _result$[ebp], 92 ; 0000005cH
  0156c	74 1a		 je	 SHORT $LN121@parser_cam
  0156e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01573	05 4b 03 00 00	 add	 eax, 843		; 0000034bH
  01578	50		 push	 eax
  01579	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0157e	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BOIGCNKA@result?5?$DN?$DN?5FILE_TAG_MAP_X_SIZE@
  01583	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN121@parser_cam:

; 1049 : 
; 1050 : 				x_size = get_next_file_int (file_ptr);

  01588	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0158e	50		 push	 eax
  0158f	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  01594	89 85 4c fb ff
	ff		 mov	 DWORD PTR _x_size$59[ebp], eax

; 1051 : 
; 1052 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0159a	68 af 00 00 00	 push	 175			; 000000afH
  0159f	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  015a4	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  015aa	50		 push	 eax
  015ab	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  015b0	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1053 : 
; 1054 : 				ASSERT (result == FILE_TAG_MAP_Z_SIZE);

  015b3	83 7d e8 5f	 cmp	 DWORD PTR _result$[ebp], 95 ; 0000005fH
  015b7	74 1a		 je	 SHORT $LN122@parser_cam
  015b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  015be	05 51 03 00 00	 add	 eax, 849		; 00000351H
  015c3	50		 push	 eax
  015c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  015c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IJBJDMIJ@result?5?$DN?$DN?5FILE_TAG_MAP_Z_SIZE@
  015ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN122@parser_cam:

; 1055 : 
; 1056 : 				z_size = get_next_file_int (file_ptr);

  015d3	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  015d9	50		 push	 eax
  015da	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  015df	89 85 48 fb ff
	ff		 mov	 DWORD PTR _z_size$58[ebp], eax

; 1057 : 
; 1058 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  015e5	68 af 00 00 00	 push	 175			; 000000afH
  015ea	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  015ef	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  015f5	50		 push	 eax
  015f6	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  015fb	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1059 : 
; 1060 : 				ASSERT (result == FILE_TAG_MAP_SECTOR_SIZE);

  015fe	83 7d e8 59	 cmp	 DWORD PTR _result$[ebp], 89 ; 00000059H
  01602	74 1a		 je	 SHORT $LN123@parser_cam
  01604	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01609	05 57 03 00 00	 add	 eax, 855		; 00000357H
  0160e	50		 push	 eax
  0160f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01614	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@EKBMDJLA@result?5?$DN?$DN?5FILE_TAG_MAP_SECTOR_S@
  01619	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN123@parser_cam:

; 1061 : 
; 1062 : 				sector_size = get_next_file_int (file_ptr);

  0161e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01624	50		 push	 eax
  01625	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0162a	89 85 50 fb ff
	ff		 mov	 DWORD PTR _sector_size$60[ebp], eax

; 1063 : 
; 1064 : 				set_entity_world_map_size (x_size, z_size, sector_size);

  01630	8b 85 50 fb ff
	ff		 mov	 eax, DWORD PTR _sector_size$60[ebp]
  01636	50		 push	 eax
  01637	8b 8d 48 fb ff
	ff		 mov	 ecx, DWORD PTR _z_size$58[ebp]
  0163d	51		 push	 ecx
  0163e	8b 95 4c fb ff
	ff		 mov	 edx, DWORD PTR _x_size$59[ebp]
  01644	52		 push	 edx
  01645	e8 00 00 00 00	 call	 ?set_entity_world_map_size@@YGXHHH@Z ; set_entity_world_map_size

; 1065 : 
; 1066 : 				x_min = MIN_MAP_X;

  0164a	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  01652	f3 0f 11 85 6c
	fb ff ff	 movss	 DWORD PTR _x_min$65[ebp], xmm0

; 1067 : 				x_max = MAX_MAP_X;

  0165a	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  01662	f3 0f 11 85 68
	fb ff ff	 movss	 DWORD PTR _x_max$64[ebp], xmm0

; 1068 : 				z_min = MIN_MAP_Z;

  0166a	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  01672	f3 0f 11 85 64
	fb ff ff	 movss	 DWORD PTR _z_min$63[ebp], xmm0

; 1069 : 				z_max = MAX_MAP_Z;

  0167a	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  01682	f3 0f 11 85 60
	fb ff ff	 movss	 DWORD PTR _z_max$62[ebp], xmm0

; 1070 : 
; 1071 : 				// check for population size
; 1072 : 				if (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_MAP_X_MIN)

  0168a	68 af 00 00 00	 push	 175			; 000000afH
  0168f	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01694	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0169a	50		 push	 eax
  0169b	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  016a0	83 f8 5b	 cmp	 eax, 91			; 0000005bH
  016a3	0f 85 2c 01 00
	00		 jne	 $LN124@parser_cam

; 1073 : 				{
; 1074 : 
; 1075 : 					// x_min
; 1076 : 
; 1077 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  016a9	68 af 00 00 00	 push	 175			; 000000afH
  016ae	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  016b3	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  016b9	50		 push	 eax
  016ba	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  016bf	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1078 : 
; 1079 : 					ASSERT (result == FILE_TAG_MAP_X_MIN);

  016c2	83 7d e8 5b	 cmp	 DWORD PTR _result$[ebp], 91 ; 0000005bH
  016c6	74 1a		 je	 SHORT $LN125@parser_cam
  016c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  016cd	05 6a 03 00 00	 add	 eax, 874		; 0000036aH
  016d2	50		 push	 eax
  016d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  016d8	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@BPABIKHE@result?5?$DN?$DN?5FILE_TAG_MAP_X_MIN@
  016dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN125@parser_cam:

; 1080 : 
; 1081 : 					x_min = get_next_file_float (file_ptr);

  016e2	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  016e8	50		 push	 eax
  016e9	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  016ee	d9 9d 6c fb ff
	ff		 fstp	 DWORD PTR _x_min$65[ebp]

; 1082 : 
; 1083 : 					// z_min
; 1084 : 
; 1085 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  016f4	68 af 00 00 00	 push	 175			; 000000afH
  016f9	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  016fe	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01704	50		 push	 eax
  01705	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0170a	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1086 : 
; 1087 : 					ASSERT (result == FILE_TAG_MAP_Z_MIN);

  0170d	83 7d e8 5e	 cmp	 DWORD PTR _result$[ebp], 94 ; 0000005eH
  01711	74 1a		 je	 SHORT $LN126@parser_cam
  01713	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01718	05 72 03 00 00	 add	 eax, 882		; 00000372H
  0171d	50		 push	 eax
  0171e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01723	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@FCMJCLHP@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MIN@
  01728	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN126@parser_cam:

; 1088 : 
; 1089 : 					z_min = get_next_file_float (file_ptr);

  0172d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01733	50		 push	 eax
  01734	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  01739	d9 9d 64 fb ff
	ff		 fstp	 DWORD PTR _z_min$63[ebp]

; 1090 : 
; 1091 : 					// x_max
; 1092 : 
; 1093 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0173f	68 af 00 00 00	 push	 175			; 000000afH
  01744	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01749	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0174f	50		 push	 eax
  01750	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01755	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1094 : 
; 1095 : 					ASSERT (result == FILE_TAG_MAP_X_MAX);

  01758	83 7d e8 5a	 cmp	 DWORD PTR _result$[ebp], 90 ; 0000005aH
  0175c	74 1a		 je	 SHORT $LN127@parser_cam
  0175e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01763	05 7a 03 00 00	 add	 eax, 890		; 0000037aH
  01768	50		 push	 eax
  01769	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0176e	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@NIKGOBL@result?5?$DN?$DN?5FILE_TAG_MAP_X_MAX@
  01773	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN127@parser_cam:

; 1096 : 
; 1097 : 					x_max = get_next_file_float (file_ptr);

  01778	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0177e	50		 push	 eax
  0177f	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  01784	d9 9d 68 fb ff
	ff		 fstp	 DWORD PTR _x_max$64[ebp]

; 1098 : 
; 1099 : 					// z_max
; 1100 : 
; 1101 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0178a	68 af 00 00 00	 push	 175			; 000000afH
  0178f	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01794	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0179a	50		 push	 eax
  0179b	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  017a0	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1102 : 
; 1103 : 					ASSERT (result == FILE_TAG_MAP_Z_MAX);

  017a3	83 7d e8 5d	 cmp	 DWORD PTR _result$[ebp], 93 ; 0000005dH
  017a7	74 1a		 je	 SHORT $LN128@parser_cam
  017a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  017ae	05 82 03 00 00	 add	 eax, 898		; 00000382H
  017b3	50		 push	 eax
  017b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  017b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@EAECMPBA@result?5?$DN?$DN?5FILE_TAG_MAP_Z_MAX@
  017be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN128@parser_cam:

; 1104 : 
; 1105 : 					z_max = get_next_file_float (file_ptr);

  017c3	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  017c9	50		 push	 eax
  017ca	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  017cf	d9 9d 60 fb ff
	ff		 fstp	 DWORD PTR _z_max$62[ebp]
$LN124@parser_cam:

; 1106 : 				}
; 1107 : 
; 1108 : 				//
; 1109 : 				// remove.............
; 1110 : 				/*
; 1111 : 				if (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_FILENAME)
; 1112 : 				{
; 1113 : 
; 1114 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);
; 1115 : 
; 1116 : 					ASSERT (result == FILE_TAG_FILENAME);
; 1117 : 
; 1118 : 					memset (&temp_filename, 0, sizeof (temp_filename));
; 1119 : 
; 1120 : 					get_next_file_string (file_ptr, temp_filename, sizeof (temp_filename));
; 1121 : 
; 1122 : 					if (campaign_population_filename)
; 1123 : 					{
; 1124 : 
; 1125 : 						free_mem (campaign_population_filename);
; 1126 : 					}
; 1127 : 
; 1128 : 					campaign_population_filename = (char *) malloc_heap_mem (strlen (temp_filename) + 1);
; 1129 : 
; 1130 : 					sprintf (campaign_population_filename, "%s", temp_filename);
; 1131 : 				}
; 1132 : 				*/
; 1133 : 				// remove.............
; 1134 : 				//
; 1135 : 
; 1136 : 				//
; 1137 : 				// Reinitialise the AI systems
; 1138 : 				//
; 1139 : 
; 1140 : 				create_local_only_entities (PACK_MODE_SERVER_SESSION);

  017d5	6a 00		 push	 0
  017d7	e8 00 00 00 00	 call	 ?create_local_only_entities@@YGXW4PACK_MODES@@@Z ; create_local_only_entities

; 1141 : 
; 1142 : 				reinitialise_ai_system ();

  017dc	e8 00 00 00 00	 call	 ?reinitialise_ai_system@@YGXXZ ; reinitialise_ai_system

; 1143 : 
; 1144 : 				load_route_data ();

  017e1	e8 00 00 00 00	 call	 ?load_route_data@@YGXXZ	; load_route_data

; 1145 : 
; 1146 : 				/////////////////////////////////////////////
; 1147 : 				update_gunships_screen_progress_indicator ();

  017e6	e8 00 00 00 00	 call	 ?update_gunships_screen_progress_indicator@@YGXXZ ; update_gunships_screen_progress_indicator

; 1148 : 				/////////////////////////////////////////////
; 1149 : 
; 1150 : 				//
; 1151 : 				// create session
; 1152 : 				//
; 1153 : 
; 1154 : 				if (!get_session_entity ())

  017eb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  017f2	75 20		 jne	 SHORT $LN129@parser_cam

; 1155 : 				{
; 1156 : 					entity
; 1157 : 						*en;
; 1158 : 
; 1159 : 					en = create_local_entity

  017f4	6a 00		 push	 0
  017f6	6a ff		 push	 -1
  017f8	6a 1b		 push	 27			; 0000001bH
  017fa	e8 00 00 00 00	 call	 ?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_local_entity
  017ff	83 c4 0c	 add	 esp, 12			; 0000000cH
  01802	89 85 44 fa ff
	ff		 mov	 DWORD PTR _en$56[ebp], eax

; 1160 : 					(
; 1161 : 						ENTITY_TYPE_SESSION,
; 1162 : 						ENTITY_INDEX_DONT_CARE,
; 1163 : 						ENTITY_ATTR_END
; 1164 : 					);
; 1165 : 
; 1166 : 					set_session_random_weather_mode (en);

  01808	8b 85 44 fa ff
	ff		 mov	 eax, DWORD PTR _en$56[ebp]
  0180e	50		 push	 eax
  0180f	e8 00 00 00 00	 call	 ?set_session_random_weather_mode@@YGXPAUENTITY@@@Z ; set_session_random_weather_mode
$LN129@parser_cam:

; 1167 : 				}
; 1168 : 
; 1169 : 				//
; 1170 : 				// Set population size
; 1171 : 				//
; 1172 : 
; 1173 : 				set_local_entity_float_value (get_session_entity (), FLOAT_TYPE_POPULATION_X_MIN, x_min);

  01814	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0181b	74 0f		 je	 SHORT $LN251@parser_cam
  0181d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01822	8b 08		 mov	 ecx, DWORD PTR [eax]
  01824	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv966[ebp], ecx
  0182a	eb 27		 jmp	 SHORT $LN252@parser_cam
$LN251@parser_cam:
  0182c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01832	81 c2 c8 03 00
	00		 add	 edx, 968		; 000003c8H
  01838	52		 push	 edx
  01839	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0183e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01843	50		 push	 eax
  01844	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01849	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv966[ebp], 0
$LN252@parser_cam:
  01853	b9 01 00 00 00	 mov	 ecx, 1
  01858	85 c9		 test	 ecx, ecx
  0185a	74 0c		 je	 SHORT $LN253@parser_cam
  0185c	c7 85 a8 f6 ff
	ff 57 00 00 00	 mov	 DWORD PTR tv974[ebp], 87 ; 00000057H
  01866	eb 27		 jmp	 SHORT $LN254@parser_cam
$LN253@parser_cam:
  01868	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0186e	81 c2 c8 03 00
	00		 add	 edx, 968		; 000003c8H
  01874	52		 push	 edx
  01875	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0187a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0187f	50		 push	 eax
  01880	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01885	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv974[ebp], 0
$LN254@parser_cam:
  0188f	51		 push	 ecx
  01890	f3 0f 10 85 6c
	fb ff ff	 movss	 xmm0, DWORD PTR _x_min$65[ebp]
  01898	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0189d	6a 57		 push	 87			; 00000057H
  0189f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  018a5	51		 push	 ecx
  018a6	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv966[ebp], 700
  018b0	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv974[ebp]
  018b6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  018bd	ff d1		 call	 ecx

; 1174 : 				set_local_entity_float_value (get_session_entity (), FLOAT_TYPE_POPULATION_X_MAX, x_max);

  018bf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  018c6	74 0f		 je	 SHORT $LN255@parser_cam
  018c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  018cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  018cf	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv986[ebp], ecx
  018d5	eb 27		 jmp	 SHORT $LN256@parser_cam
$LN255@parser_cam:
  018d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  018dd	81 c2 c9 03 00
	00		 add	 edx, 969		; 000003c9H
  018e3	52		 push	 edx
  018e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  018e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  018ee	50		 push	 eax
  018ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  018f4	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv986[ebp], 0
$LN256@parser_cam:
  018fe	b9 01 00 00 00	 mov	 ecx, 1
  01903	85 c9		 test	 ecx, ecx
  01905	74 0c		 je	 SHORT $LN257@parser_cam
  01907	c7 85 a8 f6 ff
	ff 58 00 00 00	 mov	 DWORD PTR tv994[ebp], 88 ; 00000058H
  01911	eb 27		 jmp	 SHORT $LN258@parser_cam
$LN257@parser_cam:
  01913	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01919	81 c2 c9 03 00
	00		 add	 edx, 969		; 000003c9H
  0191f	52		 push	 edx
  01920	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01925	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0192a	50		 push	 eax
  0192b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01930	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv994[ebp], 0
$LN258@parser_cam:
  0193a	51		 push	 ecx
  0193b	f3 0f 10 85 68
	fb ff ff	 movss	 xmm0, DWORD PTR _x_max$64[ebp]
  01943	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01948	6a 58		 push	 88			; 00000058H
  0194a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01950	51		 push	 ecx
  01951	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv986[ebp], 700
  0195b	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv994[ebp]
  01961	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  01968	ff d1		 call	 ecx

; 1175 : 				set_local_entity_float_value (get_session_entity (), FLOAT_TYPE_POPULATION_Z_MIN, z_min);

  0196a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01971	74 0f		 je	 SHORT $LN259@parser_cam
  01973	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01978	8b 08		 mov	 ecx, DWORD PTR [eax]
  0197a	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1006[ebp], ecx
  01980	eb 27		 jmp	 SHORT $LN260@parser_cam
$LN259@parser_cam:
  01982	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01988	81 c2 ca 03 00
	00		 add	 edx, 970		; 000003caH
  0198e	52		 push	 edx
  0198f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01994	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01999	50		 push	 eax
  0199a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0199f	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1006[ebp], 0
$LN260@parser_cam:
  019a9	b9 01 00 00 00	 mov	 ecx, 1
  019ae	85 c9		 test	 ecx, ecx
  019b0	74 0c		 je	 SHORT $LN261@parser_cam
  019b2	c7 85 a8 f6 ff
	ff 59 00 00 00	 mov	 DWORD PTR tv1014[ebp], 89 ; 00000059H
  019bc	eb 27		 jmp	 SHORT $LN262@parser_cam
$LN261@parser_cam:
  019be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  019c4	81 c2 ca 03 00
	00		 add	 edx, 970		; 000003caH
  019ca	52		 push	 edx
  019cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  019d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  019d5	50		 push	 eax
  019d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  019db	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1014[ebp], 0
$LN262@parser_cam:
  019e5	51		 push	 ecx
  019e6	f3 0f 10 85 64
	fb ff ff	 movss	 xmm0, DWORD PTR _z_min$63[ebp]
  019ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019f3	6a 59		 push	 89			; 00000059H
  019f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  019fb	51		 push	 ecx
  019fc	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv1006[ebp], 700
  01a06	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1014[ebp]
  01a0c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  01a13	ff d1		 call	 ecx

; 1176 : 				set_local_entity_float_value (get_session_entity (), FLOAT_TYPE_POPULATION_Z_MAX, z_max);

  01a15	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01a1c	74 0f		 je	 SHORT $LN263@parser_cam
  01a1e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01a23	8b 08		 mov	 ecx, DWORD PTR [eax]
  01a25	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1026[ebp], ecx
  01a2b	eb 27		 jmp	 SHORT $LN264@parser_cam
$LN263@parser_cam:
  01a2d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01a33	81 c2 cb 03 00
	00		 add	 edx, 971		; 000003cbH
  01a39	52		 push	 edx
  01a3a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01a3f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01a44	50		 push	 eax
  01a45	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01a4a	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1026[ebp], 0
$LN264@parser_cam:
  01a54	b9 01 00 00 00	 mov	 ecx, 1
  01a59	85 c9		 test	 ecx, ecx
  01a5b	74 0c		 je	 SHORT $LN265@parser_cam
  01a5d	c7 85 a8 f6 ff
	ff 5a 00 00 00	 mov	 DWORD PTR tv1034[ebp], 90 ; 0000005aH
  01a67	eb 27		 jmp	 SHORT $LN266@parser_cam
$LN265@parser_cam:
  01a69	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01a6f	81 c2 cb 03 00
	00		 add	 edx, 971		; 000003cbH
  01a75	52		 push	 edx
  01a76	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01a7b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01a80	50		 push	 eax
  01a81	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01a86	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1034[ebp], 0
$LN266@parser_cam:
  01a90	51		 push	 ecx
  01a91	f3 0f 10 85 60
	fb ff ff	 movss	 xmm0, DWORD PTR _z_max$62[ebp]
  01a99	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a9e	6a 5a		 push	 90			; 0000005aH
  01aa0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01aa6	51		 push	 ecx
  01aa7	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv1026[ebp], 700
  01ab1	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1034[ebp]
  01ab7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  01abe	ff d1		 call	 ecx
$LN18@parser_cam:

; 1177 : 
; 1178 : 				//
; 1179 : 				// create factions
; 1180 : 				//
; 1181 : 
; 1182 : 				while (get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_FACTION)

  01ac0	68 af 00 00 00	 push	 175			; 000000afH
  01ac5	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01aca	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01ad0	50		 push	 eax
  01ad1	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01ad6	83 f8 21	 cmp	 eax, 33			; 00000021H
  01ad9	0f 85 bf 00 00
	00		 jne	 $LN19@parser_cam

; 1183 : 				{
; 1184 : 
; 1185 : 					int
; 1186 : 						faction_side,
; 1187 : 						colour;
; 1188 : 
; 1189 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  01adf	68 af 00 00 00	 push	 175			; 000000afH
  01ae4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01ae9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01aef	50		 push	 eax
  01af0	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01af5	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1190 : 
; 1191 : 					ASSERT (result == FILE_TAG_SIDE);

  01af8	81 7d e8 94 00
	00 00		 cmp	 DWORD PTR _result$[ebp], 148 ; 00000094H
  01aff	74 1a		 je	 SHORT $LN130@parser_cam
  01b01	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01b06	05 da 03 00 00	 add	 eax, 986		; 000003daH
  01b0b	50		 push	 eax
  01b0c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01b11	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@COBIDFLK@result?5?$DN?$DN?5FILE_TAG_SIDE@
  01b16	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN130@parser_cam:

; 1192 : 
; 1193 : 					faction_side = get_next_file_enum (file_ptr, entity_side_names, NUM_ENTITY_SIDES);

  01b1b	6a 03		 push	 3
  01b1d	68 00 00 00 00	 push	 OFFSET ?entity_side_names@@3PAPBDA ; entity_side_names
  01b22	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01b28	50		 push	 eax
  01b29	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  01b2e	89 85 40 fa ff
	ff		 mov	 DWORD PTR _faction_side$55[ebp], eax

; 1194 : 
; 1195 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  01b34	68 af 00 00 00	 push	 175			; 000000afH
  01b39	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01b3e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01b44	50		 push	 eax
  01b45	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01b4a	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1196 : 
; 1197 : 					ASSERT (result == FILE_TAG_COLOUR);

  01b4d	83 7d e8 11	 cmp	 DWORD PTR _result$[ebp], 17 ; 00000011H
  01b51	74 1a		 je	 SHORT $LN131@parser_cam
  01b53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01b58	05 e0 03 00 00	 add	 eax, 992		; 000003e0H
  01b5d	50		 push	 eax
  01b5e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01b63	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EECJKLPC@result?5?$DN?$DN?5FILE_TAG_COLOUR@
  01b68	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN131@parser_cam:

; 1198 : 
; 1199 : 					colour = get_next_file_enum (file_ptr, sys_colour_names, NUM_SYS_COLOURS);

  01b6d	6a 1b		 push	 27			; 0000001bH
  01b6f	68 00 00 00 00	 push	 OFFSET ?sys_colour_names@@3PAPBDA ; sys_colour_names
  01b74	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01b7a	50		 push	 eax
  01b7b	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  01b80	89 85 3c fa ff
	ff		 mov	 DWORD PTR _colour$54[ebp], eax

; 1200 : 
; 1201 : 					create_faction ((entity_sides) faction_side, colour);

  01b86	8b 85 3c fa ff
	ff		 mov	 eax, DWORD PTR _colour$54[ebp]
  01b8c	50		 push	 eax
  01b8d	8b 8d 40 fa ff
	ff		 mov	 ecx, DWORD PTR _faction_side$55[ebp]
  01b93	51		 push	 ecx
  01b94	e8 00 00 00 00	 call	 ?create_faction@@YGXW4ENTITY_SIDES@@H@Z ; create_faction

; 1202 : 
; 1203 : 					#if DEBUG_MODULE
; 1204 : 
; 1205 : 					debug_log ("PARSER: loading campaign populate: faction id %d, colour %d", faction_side, colour);
; 1206 : 
; 1207 : 					#endif
; 1208 : 				}

  01b99	e9 22 ff ff ff	 jmp	 $LN18@parser_cam
$LN19@parser_cam:

; 1209 : 
; 1210 : 				//
; 1211 : 				// initialise sectors now all factions are declared.
; 1212 : 				//
; 1213 : 
; 1214 : 				/////////////////////////////////////////////
; 1215 : 				update_gunships_screen_progress_indicator ();

  01b9e	e8 00 00 00 00	 call	 ?update_gunships_screen_progress_indicator@@YGXXZ ; update_gunships_screen_progress_indicator

; 1216 : 				/////////////////////////////////////////////
; 1217 : 
; 1218 : 				if (strstr (strupr (side_data_filename), "SID"))

  01ba3	68 00 00 00 00	 push	 OFFSET ??_C@_03OMFNLMOB@SID@
  01ba8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?side_data_filename@@3PADA ; side_data_filename
  01bad	50		 push	 eax
  01bae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strupr
  01bb4	83 c4 04	 add	 esp, 4
  01bb7	50		 push	 eax
  01bb8	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01bbd	83 c4 08	 add	 esp, 8
  01bc0	85 c0		 test	 eax, eax
  01bc2	74 0d		 je	 SHORT $LN132@parser_cam

; 1219 : 				{
; 1220 : 
; 1221 : 					read_sector_side_file (side_data_filename);

  01bc4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?side_data_filename@@3PADA ; side_data_filename
  01bc9	50		 push	 eax
  01bca	e8 00 00 00 00	 call	 ?read_sector_side_file@@YGXPBD@Z ; read_sector_side_file
  01bcf	eb 2c		 jmp	 SHORT $LN134@parser_cam
$LN132@parser_cam:

; 1222 : 				}
; 1223 : 				else if (strstr (strupr (side_data_filename), "DAT"))

  01bd1	68 00 00 00 00	 push	 OFFSET ??_C@_03GFECJACO@DAT@
  01bd6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?side_data_filename@@3PADA ; side_data_filename
  01bdb	50		 push	 eax
  01bdc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___strupr
  01be2	83 c4 04	 add	 esp, 4
  01be5	50		 push	 eax
  01be6	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  01beb	83 c4 08	 add	 esp, 8
  01bee	85 c0		 test	 eax, eax
  01bf0	74 0b		 je	 SHORT $LN134@parser_cam

; 1224 : 				{
; 1225 : 
; 1226 : 					load_ai_sector_data (side_data_filename);

  01bf2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?side_data_filename@@3PADA ; side_data_filename
  01bf7	50		 push	 eax
  01bf8	e8 00 00 00 00	 call	 ?load_ai_sector_data@@YGXPBD@Z ; load_ai_sector_data
$LN134@parser_cam:

; 1227 : 				}
; 1228 : 
; 1229 : 				/////////////////////////////////////////////
; 1230 : 				update_gunships_screen_progress_indicator ();

  01bfd	e8 00 00 00 00	 call	 ?update_gunships_screen_progress_indicator@@YGXXZ ; update_gunships_screen_progress_indicator

; 1231 : 				/////////////////////////////////////////////
; 1232 : 
; 1233 : 				if (population_placement_filename)

  01c02	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?population_placement_filename@@3PADA, 0 ; population_placement_filename
  01c09	74 0b		 je	 SHORT $LN135@parser_cam

; 1234 : 				{
; 1235 : 
; 1236 : 					read_population_placement_file (population_placement_filename);

  01c0b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?population_placement_filename@@3PADA ; population_placement_filename
  01c10	50		 push	 eax
  01c11	e8 00 00 00 00	 call	 ?read_population_placement_file@@YGXPBD@Z ; read_population_placement_file
$LN135@parser_cam:

; 1237 : 				}
; 1238 : 
; 1239 : 				//
; 1240 : 				// Read pop file if there is one
; 1241 : 				//
; 1242 : 
; 1243 : 				/////////////////////////////////////////////
; 1244 : 				update_gunships_screen_progress_indicator ();

  01c16	e8 00 00 00 00	 call	 ?update_gunships_screen_progress_indicator@@YGXXZ ; update_gunships_screen_progress_indicator

; 1245 : 				/////////////////////////////////////////////
; 1246 : 
; 1247 : 				if (campaign_population_filename)
; 1248 : 				{
; 1249 : 
; 1250 : 					//load_campaign_object_population_data (campaign_population_filename);
; 1251 : 				}
; 1252 : 
; 1253 : 				break;

  01c1b	e9 fc 2a 00 00	 jmp	 $LN4@parser_cam
$LN137@parser_cam:

; 1254 : 			}
; 1255 : 
; 1256 : 			case FILE_TAG_WEATHER_RAIN:
; 1257 : 			{
; 1258 : 
; 1259 : 				int
; 1260 : 					rain_effect;
; 1261 : 
; 1262 : 				ASSERT (get_session_entity ());

  01c20	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  01c27	75 1a		 jne	 SHORT $LN138@parser_cam
  01c29	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01c2e	05 21 04 00 00	 add	 eax, 1057		; 00000421H
  01c33	50		 push	 eax
  01c34	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01c39	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  01c3e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN138@parser_cam:

; 1263 : 
; 1264 : 				rain_effect = get_next_file_int (file_ptr);

  01c43	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01c49	50		 push	 eax
  01c4a	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  01c4f	89 85 38 fa ff
	ff		 mov	 DWORD PTR _rain_effect$53[ebp], eax

; 1265 : 				//if (get_global_season() == SESSION_SEASON_WINTER)
; 1266 : 					//rain_effect = 1;
; 1267 : 
; 1268 : 				if (!rain_effect)

  01c55	83 bd 38 fa ff
	ff 00		 cmp	 DWORD PTR _rain_effect$53[ebp], 0
  01c5c	75 0d		 jne	 SHORT $LN139@parser_cam

; 1269 : 				{
; 1270 : 
; 1271 : 					set_session_fixed_weather_mode (get_session_entity (), WEATHERMODE_DRY);

  01c5e	6a 01		 push	 1
  01c60	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  01c65	50		 push	 eax
  01c66	e8 00 00 00 00	 call	 ?set_session_fixed_weather_mode@@YGXPAUENTITY@@W4WEATHERMODES@@@Z ; set_session_fixed_weather_mode
$LN139@parser_cam:

; 1272 : 				}
; 1273 : 
; 1274 : 				debug_log ("PARSGEN: Rain effect %d", rain_effect);

  01c6b	8b 85 38 fa ff
	ff		 mov	 eax, DWORD PTR _rain_effect$53[ebp]
  01c71	50		 push	 eax
  01c72	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@DJEDKMJE@PARSGEN?3?5Rain?5effect?5?$CFd@
  01c77	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  01c7c	83 c4 08	 add	 esp, 8

; 1275 : 
; 1276 : 				break;

  01c7f	e9 98 2a 00 00	 jmp	 $LN4@parser_cam
$LN140@parser_cam:

; 1277 : 			}
; 1278 : 
; 1279 : 			case FILE_TAG_WEATHER_WIND:
; 1280 : 			{
; 1281 : 
; 1282 : 				float
; 1283 : 					wind_effect;
; 1284 : 
; 1285 : 				wind_effect = get_next_file_float (file_ptr);

  01c84	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01c8a	50		 push	 eax
  01c8b	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  01c90	d9 9d 34 fa ff
	ff		 fstp	 DWORD PTR _wind_effect$52[ebp]

; 1286 : 
; 1287 : 				debug_log ("PARSGEN: Wind effect %f", wind_effect);

  01c96	f3 0f 5a 85 34
	fa ff ff	 cvtss2sd xmm0, DWORD PTR _wind_effect$52[ebp]
  01c9e	83 ec 08	 sub	 esp, 8
  01ca1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01ca6	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JMOPIAJC@PARSGEN?3?5Wind?5effect?5?$CFf@
  01cab	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  01cb0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1288 : 
; 1289 : 				break;

  01cb3	e9 64 2a 00 00	 jmp	 $LN4@parser_cam
$LN141@parser_cam:

; 1290 : 			}
; 1291 : 
; 1292 : 			case FILE_TAG_START_BASE:
; 1293 : 			{
; 1294 : 
; 1295 : 				if (get_parser_keysite ())

  01cb8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  01cbf	0f 84 a9 00 00
	00		 je	 $LN143@parser_cam

; 1296 : 				{
; 1297 : 
; 1298 : 					if (get_global_gunship_side () == get_local_entity_int_value (get_parser_keysite (), INT_TYPE_SIDE))

  01cc5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  01ccc	74 0f		 je	 SHORT $LN267@parser_cam
  01cce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  01cd3	8b 08		 mov	 ecx, DWORD PTR [eax]
  01cd5	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1113[ebp], ecx
  01cdb	eb 20		 jmp	 SHORT $LN268@parser_cam
$LN267@parser_cam:
  01cdd	68 12 05 00 00	 push	 1298			; 00000512H
  01ce2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01ce7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01ced	52		 push	 edx
  01cee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01cf3	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1113[ebp], 0
$LN268@parser_cam:
  01cfd	b8 01 00 00 00	 mov	 eax, 1
  01d02	85 c0		 test	 eax, eax
  01d04	74 0c		 je	 SHORT $LN269@parser_cam
  01d06	c7 85 a8 f6 ff
	ff bb 00 00 00	 mov	 DWORD PTR tv1120[ebp], 187 ; 000000bbH
  01d10	eb 20		 jmp	 SHORT $LN270@parser_cam
$LN269@parser_cam:
  01d12	68 12 05 00 00	 push	 1298			; 00000512H
  01d17	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01d1c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01d22	51		 push	 ecx
  01d23	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01d28	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1120[ebp], 0
$LN270@parser_cam:
  01d32	68 bb 00 00 00	 push	 187			; 000000bbH
  01d37	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  01d3d	52		 push	 edx
  01d3e	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1113[ebp], 1116
  01d48	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1120[ebp]
  01d4e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  01d55	ff d2		 call	 edx
  01d57	39 05 08 00 00
	00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8, eax
  01d5d	75 0f		 jne	 SHORT $LN143@parser_cam

; 1299 : 					{
; 1300 : 
; 1301 : 						start_base_count ++;

  01d5f	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _start_base_count$[ebp]
  01d65	83 c0 01	 add	 eax, 1
  01d68	89 85 cc fe ff
	ff		 mov	 DWORD PTR _start_base_count$[ebp], eax
$LN143@parser_cam:

; 1302 : /*
; 1303 : 						if (!get_base_current_keysite ())
; 1304 : 						{
; 1305 : 
; 1306 : 							set_base_current_keysite (get_parser_keysite ());
; 1307 : 						}
; 1308 : 						else if (!(rand16 () % start_base_count))
; 1309 : 						{
; 1310 : 
; 1311 : 							set_base_current_keysite (get_parser_keysite ());
; 1312 : 						}
; 1313 : 						*/
; 1314 : 					}
; 1315 : 				}
; 1316 : 
; 1317 : 				break;

  01d6e	e9 a9 29 00 00	 jmp	 $LN4@parser_cam
$LN144@parser_cam:

; 1318 : 			}
; 1319 : 
; 1320 : 			case FILE_TAG_TASK_GENERATION:
; 1321 : 			{
; 1322 : 				ASSERT (get_parser_force ());

  01d73	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  01d7a	75 1a		 jne	 SHORT $LN145@parser_cam
  01d7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01d81	05 5d 04 00 00	 add	 eax, 1117		; 0000045dH
  01d86	50		 push	 eax
  01d87	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01d8c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@
  01d91	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN145@parser_cam:

; 1323 : 
; 1324 : 				while (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_TYPE)

  01d96	68 af 00 00 00	 push	 175			; 000000afH
  01d9b	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01da0	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01da6	50		 push	 eax
  01da7	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  01dac	83 f8 e6	 cmp	 eax, -26		; ffffffe6H
  01daf	0f 85 e4 00 00
	00		 jne	 $LN21@parser_cam

; 1325 : 				{
; 1326 : 
; 1327 : 					int
; 1328 : 						valid,
; 1329 : 						this_type;
; 1330 : 
; 1331 : 					force
; 1332 : 						*raw;
; 1333 : 
; 1334 : 					raw = (force *) get_local_entity_data (get_parser_force ());

  01db5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  01dba	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01dbd	89 8d 28 fa ff
	ff		 mov	 DWORD PTR _raw$49[ebp], ecx

; 1335 : 
; 1336 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  01dc3	68 af 00 00 00	 push	 175			; 000000afH
  01dc8	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01dcd	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01dd3	50		 push	 eax
  01dd4	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01dd9	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1337 : 
; 1338 : 					ASSERT (result == FILE_TAG_TYPE);

  01ddc	83 7d e8 e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  01de0	74 1a		 je	 SHORT $LN146@parser_cam
  01de2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01de7	05 6d 04 00 00	 add	 eax, 1133		; 0000046dH
  01dec	50		 push	 eax
  01ded	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01df2	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  01df7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN146@parser_cam:

; 1339 : 
; 1340 : 					this_type = get_next_file_enum (file_ptr, entity_sub_type_task_names, NUM_ENTITY_SUB_TYPE_TASKS);

  01dfc	6a 1e		 push	 30			; 0000001eH
  01dfe	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_task_names@@3PAPBDA ; entity_sub_type_task_names
  01e03	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01e09	50		 push	 eax
  01e0a	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  01e0f	89 85 2c fa ff
	ff		 mov	 DWORD PTR _this_type$50[ebp], eax

; 1341 : 
; 1342 : 					valid = get_next_file_int (file_ptr);

  01e15	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01e1b	50		 push	 eax
  01e1c	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  01e21	89 85 30 fa ff
	ff		 mov	 DWORD PTR _valid$51[ebp], eax

; 1343 : 
; 1344 : 					ASSERT ((valid == 0) || (valid == 1));

  01e27	83 bd 30 fa ff
	ff 00		 cmp	 DWORD PTR _valid$51[ebp], 0
  01e2e	74 23		 je	 SHORT $LN147@parser_cam
  01e30	83 bd 30 fa ff
	ff 01		 cmp	 DWORD PTR _valid$51[ebp], 1
  01e37	74 1a		 je	 SHORT $LN147@parser_cam
  01e39	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01e3e	05 73 04 00 00	 add	 eax, 1139		; 00000473H
  01e43	50		 push	 eax
  01e44	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01e49	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HKHPCABM@?$CIvalid?5?$DN?$DN?50?$CJ?5?$HM?$HM?5?$CIvalid?5?$DN?$DN?51?$CJ@
  01e4e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN147@parser_cam:

; 1345 : 
; 1346 : 					raw->task_generation [this_type].valid = valid;

  01e53	8b 85 2c fa ff
	ff		 mov	 eax, DWORD PTR _this_type$50[ebp]
  01e59	c1 e0 04	 shl	 eax, 4
  01e5c	66 8b 8d 30 fa
	ff ff		 mov	 cx, WORD PTR _valid$51[ebp]
  01e63	66 83 e1 01	 and	 cx, 1
  01e67	ba fe ff 00 00	 mov	 edx, 65534		; 0000fffeH
  01e6c	8b b5 28 fa ff
	ff		 mov	 esi, DWORD PTR _raw$49[ebp]
  01e72	66 23 94 06 3c
	01 00 00	 and	 dx, WORD PTR [esi+eax+316]
  01e7a	66 0b d1	 or	 dx, cx
  01e7d	8b 85 2c fa ff
	ff		 mov	 eax, DWORD PTR _this_type$50[ebp]
  01e83	c1 e0 04	 shl	 eax, 4
  01e86	8b 8d 28 fa ff
	ff		 mov	 ecx, DWORD PTR _raw$49[ebp]
  01e8c	66 89 94 01 3c
	01 00 00	 mov	 WORD PTR [ecx+eax+316], dx

; 1347 : 
; 1348 : 					#if DEBUG_MODULE
; 1349 : 
; 1350 : 					debug_log ("PARSER: campaign load : setting %s force %s task generation to ", entity_side_names [get_local_entity_int_value (get_parser_force (), INT_TYPE_SIDE)], entity_sub_type_task_names [this_type], duration, frequency, urgency);
; 1351 : 
; 1352 : 					#endif
; 1353 : 				}

  01e94	e9 fd fe ff ff	 jmp	 $LN145@parser_cam
$LN21@parser_cam:

; 1354 : 
; 1355 : 				break;

  01e99	e9 7e 28 00 00	 jmp	 $LN4@parser_cam
$LN148@parser_cam:

; 1356 : 			}
; 1357 : 
; 1358 : 			case FILE_TAG_HARDWARE_RESERVES:
; 1359 : 			{
; 1360 : 
; 1361 : 				force_info_catagories
; 1362 : 					hardware_type;
; 1363 : 
; 1364 : 				int
; 1365 : 					count;
; 1366 : 
; 1367 : 				force
; 1368 : 					*force_raw;
; 1369 : 
; 1370 : 				ASSERT (get_parser_force ());

  01e9e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  01ea5	75 1a		 jne	 SHORT $LN149@parser_cam
  01ea7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01eac	05 8d 04 00 00	 add	 eax, 1165		; 0000048dH
  01eb1	50		 push	 eax
  01eb2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01eb7	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@
  01ebc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN149@parser_cam:

; 1371 : 
; 1372 : 				force_raw = (force *) get_local_entity_data (get_parser_force ());

  01ec1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  01ec6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01ec9	89 8d 1c fa ff
	ff		 mov	 DWORD PTR _force_raw$46[ebp], ecx
$LN22@parser_cam:

; 1373 : 
; 1374 : 				while (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_TYPE)

  01ecf	68 af 00 00 00	 push	 175			; 000000afH
  01ed4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01ed9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01edf	50		 push	 eax
  01ee0	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  01ee5	83 f8 e6	 cmp	 eax, -26		; ffffffe6H
  01ee8	0f 85 bb 00 00
	00		 jne	 $LN23@parser_cam

; 1375 : 				{
; 1376 : 
; 1377 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  01eee	68 af 00 00 00	 push	 175			; 000000afH
  01ef3	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01ef8	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01efe	50		 push	 eax
  01eff	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01f04	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1378 : 					ASSERT (result == FILE_TAG_TYPE);

  01f07	83 7d e8 e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  01f0b	74 1a		 je	 SHORT $LN150@parser_cam
  01f0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01f12	05 95 04 00 00	 add	 eax, 1173		; 00000495H
  01f17	50		 push	 eax
  01f18	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01f1d	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  01f22	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN150@parser_cam:

; 1379 : 
; 1380 : 					hardware_type = (force_info_catagories) get_next_file_enum (file_ptr, force_info_catagory_names, NUM_FORCE_INFO_CATAGORIES);

  01f27	6a 08		 push	 8
  01f29	68 00 00 00 00	 push	 OFFSET ?force_info_catagory_names@@3PAPBDA ; force_info_catagory_names
  01f2e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01f34	50		 push	 eax
  01f35	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  01f3a	89 85 24 fa ff
	ff		 mov	 DWORD PTR _hardware_type$48[ebp], eax

; 1381 : 
; 1382 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  01f40	68 af 00 00 00	 push	 175			; 000000afH
  01f45	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01f4a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01f50	50		 push	 eax
  01f51	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01f56	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1383 : 					ASSERT (result == FILE_TAG_COUNT);

  01f59	83 7d e8 12	 cmp	 DWORD PTR _result$[ebp], 18 ; 00000012H
  01f5d	74 1a		 je	 SHORT $LN151@parser_cam
  01f5f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01f64	05 9a 04 00 00	 add	 eax, 1178		; 0000049aH
  01f69	50		 push	 eax
  01f6a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01f6f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@
  01f74	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN151@parser_cam:

; 1384 : 
; 1385 : 					count = get_next_file_int (file_ptr);

  01f79	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01f7f	50		 push	 eax
  01f80	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  01f85	89 85 20 fa ff
	ff		 mov	 DWORD PTR _count$47[ebp], eax

; 1386 : 
; 1387 : 					force_raw->force_info_reserve_hardware [hardware_type] = count;

  01f8b	8b 85 24 fa ff
	ff		 mov	 eax, DWORD PTR _hardware_type$48[ebp]
  01f91	8b 8d 1c fa ff
	ff		 mov	 ecx, DWORD PTR _force_raw$46[ebp]
  01f97	8b 95 20 fa ff
	ff		 mov	 edx, DWORD PTR _count$47[ebp]
  01f9d	89 94 81 40 03
	00 00		 mov	 DWORD PTR [ecx+eax*4+832], edx

; 1388 : 
; 1389 : 					#if DEBUG_MODULE
; 1390 : 
; 1391 : 					debug_log ("PARSER: %s reserve %d", force_info_catagory_names [hardware_type], count);
; 1392 : 
; 1393 : 					#endif
; 1394 : 				}

  01fa4	e9 26 ff ff ff	 jmp	 $LN22@parser_cam
$LN23@parser_cam:

; 1395 : 
; 1396 : 				break;

  01fa9	e9 6e 27 00 00	 jmp	 $LN4@parser_cam
$LN152@parser_cam:

; 1397 : 			}
; 1398 : 
; 1399 : 			case FILE_TAG_TITLE:
; 1400 : 			{
; 1401 : 
; 1402 : 				char
; 1403 : 					title [256];
; 1404 : 
; 1405 : 				get_next_file_string (file_ptr, title, 256);

  01fae	68 00 01 00 00	 push	 256			; 00000100H
  01fb3	8d 85 1c f9 ff
	ff		 lea	 eax, DWORD PTR _title$45[ebp]
  01fb9	50		 push	 eax
  01fba	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  01fc0	51		 push	 ecx
  01fc1	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 1406 : 
; 1407 : 				break;

  01fc6	e9 51 27 00 00	 jmp	 $LN4@parser_cam
$LN153@parser_cam:

; 1408 : 			}
; 1409 : 
; 1410 : 			case FILE_TAG_FACTION:
; 1411 : 			{
; 1412 : 
; 1413 : 				int
; 1414 : 					colour;
; 1415 : 
; 1416 : 				entity_force_attitude_types
; 1417 : 					attitude;
; 1418 : 
; 1419 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  01fcb	68 af 00 00 00	 push	 175			; 000000afH
  01fd0	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  01fd5	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  01fdb	50		 push	 eax
  01fdc	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  01fe1	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1420 : 
; 1421 : 				ASSERT (result == FILE_TAG_SIDE);

  01fe4	81 7d e8 94 00
	00 00		 cmp	 DWORD PTR _result$[ebp], 148 ; 00000094H
  01feb	74 1a		 je	 SHORT $LN154@parser_cam
  01fed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  01ff2	05 c0 04 00 00	 add	 eax, 1216		; 000004c0H
  01ff7	50		 push	 eax
  01ff8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01ffd	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@COBIDFLK@result?5?$DN?$DN?5FILE_TAG_SIDE@
  02002	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN154@parser_cam:

; 1422 : 
; 1423 : 				faction_side = get_next_file_enum (file_ptr, entity_side_names, NUM_ENTITY_SIDES);

  02007	6a 03		 push	 3
  02009	68 00 00 00 00	 push	 OFFSET ?entity_side_names@@3PAPBDA ; entity_side_names
  0200e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02014	50		 push	 eax
  02015	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0201a	89 85 d4 fe ff
	ff		 mov	 DWORD PTR _faction_side$[ebp], eax

; 1424 : 
; 1425 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02020	68 af 00 00 00	 push	 175			; 000000afH
  02025	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0202a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02030	50		 push	 eax
  02031	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02036	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1426 : 
; 1427 : 				ASSERT (result == FILE_TAG_COLOUR);

  02039	83 7d e8 11	 cmp	 DWORD PTR _result$[ebp], 17 ; 00000011H
  0203d	74 1a		 je	 SHORT $LN155@parser_cam
  0203f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02044	05 c6 04 00 00	 add	 eax, 1222		; 000004c6H
  02049	50		 push	 eax
  0204a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0204f	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EECJKLPC@result?5?$DN?$DN?5FILE_TAG_COLOUR@
  02054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN155@parser_cam:

; 1428 : 
; 1429 : 				colour = get_next_file_enum (file_ptr, sys_colour_names, NUM_SYS_COLOURS);

  02059	6a 1b		 push	 27			; 0000001bH
  0205b	68 00 00 00 00	 push	 OFFSET ?sys_colour_names@@3PAPBDA ; sys_colour_names
  02060	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02066	50		 push	 eax
  02067	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0206c	89 85 18 f9 ff
	ff		 mov	 DWORD PTR _colour$44[ebp], eax

; 1430 : 
; 1431 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02072	68 af 00 00 00	 push	 175			; 000000afH
  02077	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0207c	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02082	50		 push	 eax
  02083	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02088	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1432 : 
; 1433 : 				ASSERT (result == FILE_TAG_ATTITUDE);

  0208b	83 7d e8 06	 cmp	 DWORD PTR _result$[ebp], 6
  0208f	74 1a		 je	 SHORT $LN156@parser_cam
  02091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02096	05 cc 04 00 00	 add	 eax, 1228		; 000004ccH
  0209b	50		 push	 eax
  0209c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  020a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@LAOLAGGM@result?5?$DN?$DN?5FILE_TAG_ATTITUDE@
  020a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN156@parser_cam:

; 1434 : 
; 1435 : 				attitude = (entity_force_attitude_types) get_next_file_enum (file_ptr, entity_force_attitude_names, NUM_ENTITY_FORCE_ATTITUDES);

  020ab	6a 08		 push	 8
  020ad	68 00 00 00 00	 push	 OFFSET ?entity_force_attitude_names@@3PAPBDA ; entity_force_attitude_names
  020b2	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  020b8	50		 push	 eax
  020b9	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  020be	89 85 14 f9 ff
	ff		 mov	 DWORD PTR _attitude$43[ebp], eax

; 1436 : 
; 1437 : 				set_parser_force (get_local_force_entity ((entity_sides) faction_side));

  020c4	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _faction_side$[ebp]
  020ca	50		 push	 eax
  020cb	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  020d0	a3 00 00 00 00	 mov	 DWORD PTR ?parser_force@@3PAUENTITY@@A, eax ; parser_force

; 1438 : 
; 1439 : 				if (!get_parser_force ())

  020d5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  020dc	75 14		 jne	 SHORT $LN157@parser_cam

; 1440 : 				{
; 1441 : 
; 1442 : 					debug_fatal ("PARSER: campaign load: Undefined Faction %d", faction_side);

  020de	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _faction_side$[ebp]
  020e4	50		 push	 eax
  020e5	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@EJABNHKC@PARSER?3?5campaign?5load?3?5Undefine@
  020ea	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  020ef	83 c4 08	 add	 esp, 8
$LN157@parser_cam:

; 1443 : 				}
; 1444 : 
; 1445 : 				set_local_entity_int_value (get_parser_force (), INT_TYPE_FORCE_ATTITUDE, attitude);

  020f2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  020f9	74 0f		 je	 SHORT $LN271@parser_cam
  020fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  02100	8b 08		 mov	 ecx, DWORD PTR [eax]
  02102	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1294[ebp], ecx
  02108	eb 27		 jmp	 SHORT $LN272@parser_cam
$LN271@parser_cam:
  0210a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02110	81 c2 d8 04 00
	00		 add	 edx, 1240		; 000004d8H
  02116	52		 push	 edx
  02117	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0211c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02121	50		 push	 eax
  02122	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02127	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1294[ebp], 0
$LN272@parser_cam:
  02131	b9 01 00 00 00	 mov	 ecx, 1
  02136	85 c9		 test	 ecx, ecx
  02138	74 0c		 je	 SHORT $LN273@parser_cam
  0213a	c7 85 a8 f6 ff
	ff 3b 00 00 00	 mov	 DWORD PTR tv1302[ebp], 59 ; 0000003bH
  02144	eb 27		 jmp	 SHORT $LN274@parser_cam
$LN273@parser_cam:
  02146	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0214c	81 c2 d8 04 00
	00		 add	 edx, 1240		; 000004d8H
  02152	52		 push	 edx
  02153	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02158	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0215d	50		 push	 eax
  0215e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02163	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1302[ebp], 0
$LN274@parser_cam:
  0216d	8b 8d 14 f9 ff
	ff		 mov	 ecx, DWORD PTR _attitude$43[ebp]
  02173	51		 push	 ecx
  02174	6a 3b		 push	 59			; 0000003bH
  02176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  0217c	52		 push	 edx
  0217d	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1294[ebp], 1116
  02187	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1302[ebp]
  0218d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  02194	ff d2		 call	 edx

; 1446 : 
; 1447 : //				create_frontline (get_parser_force ());
; 1448 : 
; 1449 : 				#if DEBUG_MODULE
; 1450 : 
; 1451 : 				debug_log ("PARSER: campaign load: faction side %s, colour %s, attitude %s",
; 1452 : 								entity_side_names [faction_side],
; 1453 : 								sys_colour_names [colour],
; 1454 : 								entity_force_attitude_names [attitude]);
; 1455 : 
; 1456 : 				#endif
; 1457 : 
; 1458 : 				break;

  02196	e9 81 25 00 00	 jmp	 $LN4@parser_cam
$LN158@parser_cam:

; 1459 : 			}
; 1460 : 
; 1461 : 			case FILE_TAG_REGEN_FREQUENCY:
; 1462 : 			{
; 1463 : 
; 1464 : 				float
; 1465 : 					frequency;
; 1466 : 
; 1467 : 				entity_sides
; 1468 : 					side;
; 1469 : 
; 1470 : 				frequency = get_next_file_float (file_ptr);

  0219b	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  021a1	50		 push	 eax
  021a2	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  021a7	d9 9d 10 f9 ff
	ff		 fstp	 DWORD PTR _frequency$42[ebp]

; 1471 : 
; 1472 : 				ASSERT (get_parser_force ());

  021ad	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  021b4	75 1a		 jne	 SHORT $LN159@parser_cam
  021b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  021bb	05 f3 04 00 00	 add	 eax, 1267		; 000004f3H
  021c0	50		 push	 eax
  021c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  021c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@
  021cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN159@parser_cam:

; 1473 : 
; 1474 : 				ASSERT (frequency > 0.0);

  021d0	f3 0f 5a 85 10
	f9 ff ff	 cvtss2sd xmm0, DWORD PTR _frequency$42[ebp]
  021d8	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  021e0	77 1a		 ja	 SHORT $LN160@parser_cam
  021e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  021e7	05 f5 04 00 00	 add	 eax, 1269		; 000004f5H
  021ec	50		 push	 eax
  021ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  021f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BBFFGFML@frequency?5?$DO?50?40@
  021f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN160@parser_cam:

; 1475 : 
; 1476 : 				side = (entity_sides) get_local_entity_int_value (get_parser_force (), INT_TYPE_SIDE);

  021fc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  02203	74 0f		 je	 SHORT $LN275@parser_cam
  02205	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  0220a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0220c	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1327[ebp], ecx
  02212	eb 27		 jmp	 SHORT $LN276@parser_cam
$LN275@parser_cam:
  02214	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0221a	81 c2 f7 04 00
	00		 add	 edx, 1271		; 000004f7H
  02220	52		 push	 edx
  02221	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0222b	50		 push	 eax
  0222c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02231	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1327[ebp], 0
$LN276@parser_cam:
  0223b	b9 01 00 00 00	 mov	 ecx, 1
  02240	85 c9		 test	 ecx, ecx
  02242	74 0c		 je	 SHORT $LN277@parser_cam
  02244	c7 85 a8 f6 ff
	ff bb 00 00 00	 mov	 DWORD PTR tv1335[ebp], 187 ; 000000bbH
  0224e	eb 27		 jmp	 SHORT $LN278@parser_cam
$LN277@parser_cam:
  02250	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02256	81 c2 f7 04 00
	00		 add	 edx, 1271		; 000004f7H
  0225c	52		 push	 edx
  0225d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02262	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  02267	50		 push	 eax
  02268	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0226d	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1335[ebp], 0
$LN278@parser_cam:
  02277	68 bb 00 00 00	 push	 187			; 000000bbH
  0227c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  02282	51		 push	 ecx
  02283	69 95 ac f6 ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv1327[ebp], 1116
  0228d	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1335[ebp]
  02293	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0229a	ff d1		 call	 ecx
  0229c	89 85 0c f9 ff
	ff		 mov	 DWORD PTR _side$41[ebp], eax

; 1477 : 
; 1478 : 				debug_log ("PARSER: %s setting regen frequency to %f", entity_side_names [side], frequency);

  022a2	f3 0f 5a 85 10
	f9 ff ff	 cvtss2sd xmm0, DWORD PTR _frequency$42[ebp]
  022aa	83 ec 08	 sub	 esp, 8
  022ad	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  022b2	8b 85 0c f9 ff
	ff		 mov	 eax, DWORD PTR _side$41[ebp]
  022b8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?entity_side_names@@3PAPBDA[eax*4]
  022bf	51		 push	 ecx
  022c0	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@MGCKHODB@PARSER?3?5?$CFs?5setting?5regen?5freque@
  022c5	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  022ca	83 c4 10	 add	 esp, 16			; 00000010H

; 1479 : 
; 1480 : 				regen_frequency [side] = frequency;

  022cd	8b 85 0c f9 ff
	ff		 mov	 eax, DWORD PTR _side$41[ebp]
  022d3	f3 0f 10 85 10
	f9 ff ff	 movss	 xmm0, DWORD PTR _frequency$42[ebp]
  022db	f3 0f 11 04 85
	00 00 00 00	 movss	 DWORD PTR ?regen_frequency@@3PAMA[eax*4], xmm0

; 1481 : 
; 1482 : 				break;

  022e4	e9 33 24 00 00	 jmp	 $LN4@parser_cam
$LN161@parser_cam:

; 1483 : 			}
; 1484 : 
; 1485 : 			case FILE_TAG_DIVISION_ID_LIST:
; 1486 : 			{
; 1487 : 
; 1488 : 				entity_sides
; 1489 : 					side;
; 1490 : 
; 1491 : 				entity_sub_types
; 1492 : 					sub_type;
; 1493 : 
; 1494 : 				int
; 1495 : 					value,
; 1496 : 					count;
; 1497 : 
; 1498 : 				static int
; 1499 : 					number_list [128];
; 1500 : 
; 1501 : 				side = (entity_sides) get_next_file_enum (file_ptr, entity_side_names, NUM_ENTITY_SIDES);

  022e9	6a 03		 push	 3
  022eb	68 00 00 00 00	 push	 OFFSET ?entity_side_names@@3PAPBDA ; entity_side_names
  022f0	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  022f6	50		 push	 eax
  022f7	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  022fc	89 85 08 f9 ff
	ff		 mov	 DWORD PTR _side$40[ebp], eax
$LN24@parser_cam:

; 1502 : 
; 1503 : 				while (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_TYPE)

  02302	68 af 00 00 00	 push	 175			; 000000afH
  02307	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0230c	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02312	50		 push	 eax
  02313	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  02318	83 f8 e6	 cmp	 eax, -26		; ffffffe6H
  0231b	0f 85 72 01 00
	00		 jne	 $LN25@parser_cam

; 1504 : 				{
; 1505 : 				 	result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02321	68 af 00 00 00	 push	 175			; 000000afH
  02326	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0232b	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02331	50		 push	 eax
  02332	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02337	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1506 : 
; 1507 : 				   ASSERT (result == FILE_TAG_TYPE);

  0233a	83 7d e8 e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  0233e	74 1a		 je	 SHORT $LN162@parser_cam
  02340	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02345	05 16 05 00 00	 add	 eax, 1302		; 00000516H
  0234a	50		 push	 eax
  0234b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02350	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  02355	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN162@parser_cam:

; 1508 : 
; 1509 : 					sub_type = get_next_file_enum (file_ptr, entity_sub_type_division_names, NUM_ENTITY_SUB_TYPE_DIVISIONS);

  0235a	6a 11		 push	 17			; 00000011H
  0235c	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_division_names@@3PAPBDA ; entity_sub_type_division_names
  02361	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02367	50		 push	 eax
  02368	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0236d	89 85 04 f9 ff
	ff		 mov	 DWORD PTR _sub_type$39[ebp], eax

; 1510 : 
; 1511 : 				   result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02373	68 af 00 00 00	 push	 175			; 000000afH
  02378	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  0237d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02383	50		 push	 eax
  02384	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02389	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1512 : 
; 1513 : 				   ASSERT (result == FILE_TAG_LIST);

  0238c	83 7d e8 57	 cmp	 DWORD PTR _result$[ebp], 87 ; 00000057H
  02390	74 1a		 je	 SHORT $LN163@parser_cam
  02392	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02397	05 1c 05 00 00	 add	 eax, 1308		; 0000051cH
  0239c	50		 push	 eax
  0239d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  023a2	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IGBIKDAM@result?5?$DN?$DN?5FILE_TAG_LIST@
  023a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN163@parser_cam:

; 1514 : 
; 1515 : 					count = 0;

  023ac	c7 85 fc f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _count$37[ebp], 0

; 1516 : 
; 1517 : 					value = get_next_file_int (file_ptr);

  023b6	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  023bc	50		 push	 eax
  023bd	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  023c2	89 85 00 f9 ff
	ff		 mov	 DWORD PTR _value$38[ebp], eax
$LN26@parser_cam:

; 1518 : 
; 1519 : 					while (value != -1 )

  023c8	83 bd 00 f9 ff
	ff ff		 cmp	 DWORD PTR _value$38[ebp], -1
  023cf	0f 84 91 00 00
	00		 je	 $LN27@parser_cam

; 1520 : 					{
; 1521 : 						ASSERT (value > 0);

  023d5	83 bd 00 f9 ff
	ff 00		 cmp	 DWORD PTR _value$38[ebp], 0
  023dc	7f 1a		 jg	 SHORT $LN164@parser_cam
  023de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  023e3	05 24 05 00 00	 add	 eax, 1316		; 00000524H
  023e8	50		 push	 eax
  023e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  023ee	68 00 00 00 00	 push	 OFFSET ??_C@_09PLCJPDKF@value?5?$DO?50@
  023f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN164@parser_cam:

; 1522 : 
; 1523 : 						if (count >= 128)

  023f8	81 bd fc f8 ff
	ff 80 00 00 00	 cmp	 DWORD PTR _count$37[ebp], 128 ; 00000080H
  02402	7c 29		 jl	 SHORT $LN165@parser_cam

; 1524 : 						{
; 1525 : 							debug_fatal ("PARSGEN: Side %s, Division Type %s, Count Exceeded Max (128)",

  02404	8b 85 04 f9 ff
	ff		 mov	 eax, DWORD PTR _sub_type$39[ebp]
  0240a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?entity_sub_type_division_names@@3PAPBDA[eax*4]
  02411	51		 push	 ecx
  02412	8b 95 08 f9 ff
	ff		 mov	 edx, DWORD PTR _side$40[ebp]
  02418	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?entity_side_short_names@@3PAPBDA[edx*4]
  0241f	50		 push	 eax
  02420	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@MLEDPPAM@PARSGEN?3?5Side?5?$CFs?0?5Division?5Type@
  02425	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0242a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN165@parser_cam:

; 1526 : 													entity_side_short_names [side],
; 1527 : 													entity_sub_type_division_names [sub_type]);
; 1528 : 						}
; 1529 : 
; 1530 : 						number_list [count] = value;

  0242d	8b 85 fc f8 ff
	ff		 mov	 eax, DWORD PTR _count$37[ebp]
  02433	8b 8d 00 f9 ff
	ff		 mov	 ecx, DWORD PTR _value$38[ebp]
  02439	89 0c 85 00 00
	00 00		 mov	 DWORD PTR ?number_list@?OL@??parser_campaign_file@@YGHPBDPAH@Z@4PAHA[eax*4], ecx

; 1531 : 
; 1532 : 						count ++;

  02440	8b 85 fc f8 ff
	ff		 mov	 eax, DWORD PTR _count$37[ebp]
  02446	83 c0 01	 add	 eax, 1
  02449	89 85 fc f8 ff
	ff		 mov	 DWORD PTR _count$37[ebp], eax

; 1533 : 
; 1534 : 						value = get_next_file_int (file_ptr);

  0244f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02455	50		 push	 eax
  02456	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0245b	89 85 00 f9 ff
	ff		 mov	 DWORD PTR _value$38[ebp], eax

; 1535 : 					}

  02461	e9 62 ff ff ff	 jmp	 $LN26@parser_cam
$LN27@parser_cam:

; 1536 : 
; 1537 : 					if (count > 0)

  02466	83 bd fc f8 ff
	ff 00		 cmp	 DWORD PTR _count$37[ebp], 0
  0246d	7e 1f		 jle	 SHORT $LN166@parser_cam

; 1538 : 					{
; 1539 : 						add_division_id_data (side, sub_type, count, number_list);

  0246f	68 00 00 00 00	 push	 OFFSET ?number_list@?OL@??parser_campaign_file@@YGHPBDPAH@Z@4PAHA
  02474	8b 85 fc f8 ff
	ff		 mov	 eax, DWORD PTR _count$37[ebp]
  0247a	50		 push	 eax
  0247b	8b 8d 04 f9 ff
	ff		 mov	 ecx, DWORD PTR _sub_type$39[ebp]
  02481	51		 push	 ecx
  02482	8b 95 08 f9 ff
	ff		 mov	 edx, DWORD PTR _side$40[ebp]
  02488	52		 push	 edx
  02489	e8 00 00 00 00	 call	 ?add_division_id_data@@YGXHHHPAH@Z ; add_division_id_data
$LN166@parser_cam:

; 1540 : 					}
; 1541 : 				}

  0248e	e9 6f fe ff ff	 jmp	 $LN24@parser_cam
$LN25@parser_cam:

; 1542 : 
; 1543 : 				break;

  02493	e9 84 22 00 00	 jmp	 $LN4@parser_cam
$LN167@parser_cam:

; 1544 : 			}
; 1545 : 
; 1546 : 			case FILE_TAG_FRONTLINE_FORCES:
; 1547 : 			{
; 1548 : 
; 1549 : 				int
; 1550 : 					value;
; 1551 : 
; 1552 : 				entity
; 1553 : 					*keysite;
; 1554 : 
; 1555 : 				value = get_next_file_int (file_ptr);

  02498	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0249e	50		 push	 eax
  0249f	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  024a4	89 85 f8 f8 ff
	ff		 mov	 DWORD PTR _value$36[ebp], eax

; 1556 : 
; 1557 : 				if (value > 0)

  024aa	83 bd f8 f8 ff
	ff 00		 cmp	 DWORD PTR _value$36[ebp], 0
  024b1	0f 8e af 04 00
	00		 jle	 $LN29@parser_cam

; 1558 : 				{
; 1559 : 
; 1560 : 					place_frontline_forces (get_parser_force (), value);

  024b7	8b 85 f8 f8 ff
	ff		 mov	 eax, DWORD PTR _value$36[ebp]
  024bd	50		 push	 eax
  024be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  024c4	51		 push	 ecx
  024c5	e8 00 00 00 00	 call	 ?place_frontline_forces@@YGXPAUENTITY@@H@Z ; place_frontline_forces

; 1561 : 
; 1562 : 					//
; 1563 : 					// initialise forces at farps
; 1564 : 					//
; 1565 : 
; 1566 : 					keysite = get_local_entity_first_child (get_parser_force (), LIST_TYPE_KEYSITE_FORCE);

  024ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  024d1	74 0f		 je	 SHORT $LN279@parser_cam
  024d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  024d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  024da	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1449[ebp], ecx
  024e0	eb 27		 jmp	 SHORT $LN280@parser_cam
$LN279@parser_cam:
  024e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  024e8	81 c2 51 05 00
	00		 add	 edx, 1361		; 00000551H
  024ee	52		 push	 edx
  024ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  024f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  024f9	50		 push	 eax
  024fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  024ff	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1449[ebp], 0
$LN280@parser_cam:
  02509	b9 01 00 00 00	 mov	 ecx, 1
  0250e	85 c9		 test	 ecx, ecx
  02510	74 0c		 je	 SHORT $LN281@parser_cam
  02512	c7 85 a8 f6 ff
	ff 15 00 00 00	 mov	 DWORD PTR tv1457[ebp], 21 ; 00000015H
  0251c	eb 27		 jmp	 SHORT $LN282@parser_cam
$LN281@parser_cam:
  0251e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02524	81 c2 51 05 00
	00		 add	 edx, 1361		; 00000551H
  0252a	52		 push	 edx
  0252b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02530	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  02535	50		 push	 eax
  02536	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0253b	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1457[ebp], 0
$LN282@parser_cam:
  02545	6a 15		 push	 21			; 00000015H
  02547	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  0254d	51		 push	 ecx
  0254e	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1449[ebp], 180
  02558	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1457[ebp]
  0255e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  02565	ff d1		 call	 ecx
  02567	89 85 f4 f8 ff
	ff		 mov	 DWORD PTR _keysite$35[ebp], eax

; 1567 : 
; 1568 : 					counter = 0;

  0256d	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _counter$[ebp], 0
$LN28@parser_cam:

; 1569 : 
; 1570 : 					while (keysite)

  02577	83 bd f4 f8 ff
	ff 00		 cmp	 DWORD PTR _keysite$35[ebp], 0
  0257e	0f 84 e2 03 00
	00		 je	 $LN29@parser_cam

; 1571 : 					{
; 1572 : 
; 1573 : 						if (get_local_entity_int_value (keysite, INT_TYPE_IN_USE))

  02584	83 bd f4 f8 ff
	ff 00		 cmp	 DWORD PTR _keysite$35[ebp], 0
  0258b	74 10		 je	 SHORT $LN283@parser_cam
  0258d	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  02593	8b 08		 mov	 ecx, DWORD PTR [eax]
  02595	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1469[ebp], ecx
  0259b	eb 20		 jmp	 SHORT $LN284@parser_cam
$LN283@parser_cam:
  0259d	68 25 06 00 00	 push	 1573			; 00000625H
  025a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  025a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  025ad	52		 push	 edx
  025ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  025b3	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1469[ebp], 0
$LN284@parser_cam:
  025bd	b8 01 00 00 00	 mov	 eax, 1
  025c2	85 c0		 test	 eax, eax
  025c4	74 0c		 je	 SHORT $LN285@parser_cam
  025c6	c7 85 a8 f6 ff
	ff 6d 00 00 00	 mov	 DWORD PTR tv1476[ebp], 109 ; 0000006dH
  025d0	eb 20		 jmp	 SHORT $LN286@parser_cam
$LN285@parser_cam:
  025d2	68 25 06 00 00	 push	 1573			; 00000625H
  025d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  025dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  025e2	51		 push	 ecx
  025e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  025e8	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1476[ebp], 0
$LN286@parser_cam:
  025f2	6a 6d		 push	 109			; 0000006dH
  025f4	8b 95 f4 f8 ff
	ff		 mov	 edx, DWORD PTR _keysite$35[ebp]
  025fa	52		 push	 edx
  025fb	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1469[ebp], 1116
  02605	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1476[ebp]
  0260b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  02612	ff d2		 call	 edx
  02614	85 c0		 test	 eax, eax
  02616	0f 84 a1 02 00
	00		 je	 $LN170@parser_cam

; 1574 : 						{
; 1575 : 
; 1576 : 							if (get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_KEYSITE_FARP)

  0261c	83 bd f4 f8 ff
	ff 00		 cmp	 DWORD PTR _keysite$35[ebp], 0
  02623	74 10		 je	 SHORT $LN287@parser_cam
  02625	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  0262b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0262d	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1488[ebp], ecx
  02633	eb 20		 jmp	 SHORT $LN288@parser_cam
$LN287@parser_cam:
  02635	68 28 06 00 00	 push	 1576			; 00000628H
  0263a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0263f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02645	52		 push	 edx
  02646	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0264b	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1488[ebp], 0
$LN288@parser_cam:
  02655	b8 01 00 00 00	 mov	 eax, 1
  0265a	85 c0		 test	 eax, eax
  0265c	74 0c		 je	 SHORT $LN289@parser_cam
  0265e	c7 85 a8 f6 ff
	ff 34 00 00 00	 mov	 DWORD PTR tv1495[ebp], 52 ; 00000034H
  02668	eb 20		 jmp	 SHORT $LN290@parser_cam
$LN289@parser_cam:
  0266a	68 28 06 00 00	 push	 1576			; 00000628H
  0266f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02674	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0267a	51		 push	 ecx
  0267b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02680	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1495[ebp], 0
$LN290@parser_cam:
  0268a	6a 34		 push	 52			; 00000034H
  0268c	8b 95 f4 f8 ff
	ff		 mov	 edx, DWORD PTR _keysite$35[ebp]
  02692	52		 push	 edx
  02693	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1488[ebp], 1116
  0269d	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1495[ebp]
  026a3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  026aa	ff d2		 call	 edx
  026ac	83 f8 03	 cmp	 eax, 3
  026af	0f 85 08 02 00
	00		 jne	 $LN170@parser_cam

; 1577 : 							{
; 1578 : 
; 1579 : 								set_parser_keysite (keysite);

  026b5	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  026bb	a3 00 00 00 00	 mov	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, eax ; parser_keysite

; 1580 : 
; 1581 : 								switch (counter & 0x03)

  026c0	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _counter$[ebp]
  026c6	83 e0 03	 and	 eax, 3
  026c9	89 85 ac f6 ff
	ff		 mov	 DWORD PTR tv1503[ebp], eax
  026cf	83 bd ac f6 ff
	ff 03		 cmp	 DWORD PTR tv1503[ebp], 3
  026d6	0f 87 83 00 00
	00		 ja	 $LN30@parser_cam
  026dc	8b 8d ac f6 ff
	ff		 mov	 ecx, DWORD PTR tv1503[ebp]
  026e2	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN401@parser_cam[ecx*4]
$LN171@parser_cam:

; 1582 : 								{
; 1583 : 									case 0:
; 1584 : 									{
; 1585 : 										create_landed_faction_group (keysite, ENTITY_SUB_TYPE_GROUP_RECON_ATTACK_HELICOPTER, FORMATION_COMPONENT_HELICOPTER_LIGHT_RECON_ATTACK_GROUP);

  026e9	6a 0d		 push	 13			; 0000000dH
  026eb	6a 05		 push	 5
  026ed	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  026f3	50		 push	 eax
  026f4	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group

; 1586 : 										create_landed_faction_group (keysite, ENTITY_SUB_TYPE_GROUP_ASSAULT_HELICOPTER, FORMATION_COMPONENT_HELICOPTER_LIGHT_ASSAULT_GROUP);

  026f9	6a 00		 push	 0
  026fb	6a 02		 push	 2
  026fd	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  02703	50		 push	 eax
  02704	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group

; 1587 : 
; 1588 : 										break;

  02709	eb 54		 jmp	 SHORT $LN30@parser_cam
$LN172@parser_cam:

; 1589 : 									}
; 1590 : 									case 1:
; 1591 : 									{
; 1592 : 										create_landed_faction_group (keysite, ENTITY_SUB_TYPE_GROUP_ATTACK_HELICOPTER, FORMATION_COMPONENT_HELICOPTER_LIGHT_ATTACK_GROUP_A);

  0270b	6a 04		 push	 4
  0270d	6a 00		 push	 0
  0270f	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  02715	50		 push	 eax
  02716	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group

; 1593 : 										create_landed_faction_group (keysite, ENTITY_SUB_TYPE_GROUP_RECON_ATTACK_HELICOPTER, FORMATION_COMPONENT_HELICOPTER_LIGHT_RECON_ATTACK_GROUP);

  0271b	6a 0d		 push	 13			; 0000000dH
  0271d	6a 05		 push	 5
  0271f	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  02725	50		 push	 eax
  02726	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group

; 1594 : 
; 1595 : 										break;

  0272b	eb 32		 jmp	 SHORT $LN30@parser_cam
$LN173@parser_cam:

; 1596 : 									}
; 1597 : 									case 2:
; 1598 : 									{
; 1599 : 										create_landed_faction_group (keysite, ENTITY_SUB_TYPE_GROUP_ATTACK_HELICOPTER, FORMATION_COMPONENT_HELICOPTER_LIGHT_ATTACK_GROUP_A);

  0272d	6a 04		 push	 4
  0272f	6a 00		 push	 0
  02731	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  02737	50		 push	 eax
  02738	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group

; 1600 : 										create_landed_faction_group (keysite, ENTITY_SUB_TYPE_GROUP_ASSAULT_HELICOPTER, FORMATION_COMPONENT_HELICOPTER_LIGHT_ASSAULT_GROUP);

  0273d	6a 00		 push	 0
  0273f	6a 02		 push	 2
  02741	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  02747	50		 push	 eax
  02748	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group

; 1601 : 
; 1602 : 										break;

  0274d	eb 10		 jmp	 SHORT $LN30@parser_cam
$LN174@parser_cam:

; 1603 : 									}
; 1604 : 									case 3:
; 1605 : 									{
; 1606 : 										create_landed_faction_group (keysite, ENTITY_SUB_TYPE_GROUP_RECON_ATTACK_HELICOPTER, FORMATION_COMPONENT_HELICOPTER_LIGHT_RECON_ATTACK_GROUP);

  0274f	6a 0d		 push	 13			; 0000000dH
  02751	6a 05		 push	 5
  02753	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  02759	50		 push	 eax
  0275a	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group
$LN30@parser_cam:

; 1607 : 
; 1608 : 										break;
; 1609 : 									}
; 1610 : 								}
; 1611 : 
; 1612 : 								counter ++;

  0275f	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR _counter$[ebp]
  02765	83 c0 01	 add	 eax, 1
  02768	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _counter$[ebp], eax

; 1613 : 
; 1614 : 								debug_log ("PARSER: placing FARP %s helicopters for side %s", get_local_entity_string (keysite, STRING_TYPE_KEYSITE_NAME), entity_side_names [get_local_entity_int_value (get_parser_force (), INT_TYPE_SIDE)]);

  0276e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  02775	74 0f		 je	 SHORT $LN291@parser_cam
  02777	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  0277c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0277e	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1533[ebp], ecx
  02784	eb 27		 jmp	 SHORT $LN292@parser_cam
$LN291@parser_cam:
  02786	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0278c	81 c2 81 05 00
	00		 add	 edx, 1409		; 00000581H
  02792	52		 push	 edx
  02793	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02798	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0279d	50		 push	 eax
  0279e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  027a3	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1533[ebp], 0
$LN292@parser_cam:
  027ad	b9 01 00 00 00	 mov	 ecx, 1
  027b2	85 c9		 test	 ecx, ecx
  027b4	74 0c		 je	 SHORT $LN293@parser_cam
  027b6	c7 85 a8 f6 ff
	ff bb 00 00 00	 mov	 DWORD PTR tv1541[ebp], 187 ; 000000bbH
  027c0	eb 27		 jmp	 SHORT $LN294@parser_cam
$LN293@parser_cam:
  027c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  027c8	81 c2 81 05 00
	00		 add	 edx, 1409		; 00000581H
  027ce	52		 push	 edx
  027cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  027d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  027d9	50		 push	 eax
  027da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  027df	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1541[ebp], 0
$LN294@parser_cam:
  027e9	83 bd f4 f8 ff
	ff 00		 cmp	 DWORD PTR _keysite$35[ebp], 0
  027f0	74 10		 je	 SHORT $LN295@parser_cam
  027f2	8b 8d f4 f8 ff
	ff		 mov	 ecx, DWORD PTR _keysite$35[ebp]
  027f8	8b 11		 mov	 edx, DWORD PTR [ecx]
  027fa	89 95 a4 f6 ff
	ff		 mov	 DWORD PTR tv1556[ebp], edx
  02800	eb 26		 jmp	 SHORT $LN296@parser_cam
$LN295@parser_cam:
  02802	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02807	05 81 05 00 00	 add	 eax, 1409		; 00000581H
  0280c	50		 push	 eax
  0280d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02812	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02818	51		 push	 ecx
  02819	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0281e	c7 85 a4 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1556[ebp], 0
$LN296@parser_cam:
  02828	ba 01 00 00 00	 mov	 edx, 1
  0282d	85 d2		 test	 edx, edx
  0282f	74 0c		 je	 SHORT $LN297@parser_cam
  02831	c7 85 a0 f6 ff
	ff 07 00 00 00	 mov	 DWORD PTR tv1564[ebp], 7
  0283b	eb 26		 jmp	 SHORT $LN298@parser_cam
$LN297@parser_cam:
  0283d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02842	05 81 05 00 00	 add	 eax, 1409		; 00000581H
  02847	50		 push	 eax
  02848	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0284d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  02853	51		 push	 ecx
  02854	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02859	c7 85 a0 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1564[ebp], 0
$LN298@parser_cam:
  02863	68 bb 00 00 00	 push	 187			; 000000bbH
  02868	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  0286e	52		 push	 edx
  0286f	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1533[ebp], 1116
  02879	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1541[ebp]
  0287f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  02886	ff d2		 call	 edx
  02888	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?entity_side_names@@3PAPBDA[eax*4]
  0288f	50		 push	 eax
  02890	6a 07		 push	 7
  02892	8b 8d f4 f8 ff
	ff		 mov	 ecx, DWORD PTR _keysite$35[ebp]
  02898	51		 push	 ecx
  02899	6b 95 a4 f6 ff
	ff 34		 imul	 edx, DWORD PTR tv1556[ebp], 52
  028a0	8b 85 a0 f6 ff
	ff		 mov	 eax, DWORD PTR tv1564[ebp]
  028a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  028ad	ff d1		 call	 ecx
  028af	50		 push	 eax
  028b0	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@EDGBKKFP@PARSER?3?5placing?5FARP?5?$CFs?5helicop@
  028b5	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  028ba	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN170@parser_cam:

; 1615 : 							}
; 1616 : 						}
; 1617 : 
; 1618 : 						keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  028bd	83 bd f4 f8 ff
	ff 00		 cmp	 DWORD PTR _keysite$35[ebp], 0
  028c4	74 10		 je	 SHORT $LN299@parser_cam
  028c6	8b 85 f4 f8 ff
	ff		 mov	 eax, DWORD PTR _keysite$35[ebp]
  028cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  028ce	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1578[ebp], ecx
  028d4	eb 27		 jmp	 SHORT $LN300@parser_cam
$LN299@parser_cam:
  028d6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  028dc	81 c2 85 05 00
	00		 add	 edx, 1413		; 00000585H
  028e2	52		 push	 edx
  028e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  028e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  028ed	50		 push	 eax
  028ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  028f3	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1578[ebp], 0
$LN300@parser_cam:
  028fd	b9 01 00 00 00	 mov	 ecx, 1
  02902	85 c9		 test	 ecx, ecx
  02904	74 0c		 je	 SHORT $LN301@parser_cam
  02906	c7 85 a8 f6 ff
	ff 15 00 00 00	 mov	 DWORD PTR tv1586[ebp], 21 ; 00000015H
  02910	eb 27		 jmp	 SHORT $LN302@parser_cam
$LN301@parser_cam:
  02912	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02918	81 c2 85 05 00
	00		 add	 edx, 1413		; 00000585H
  0291e	52		 push	 edx
  0291f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02924	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  02929	50		 push	 eax
  0292a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0292f	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1586[ebp], 0
$LN302@parser_cam:
  02939	6a 15		 push	 21			; 00000015H
  0293b	8b 8d f4 f8 ff
	ff		 mov	 ecx, DWORD PTR _keysite$35[ebp]
  02941	51		 push	 ecx
  02942	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1578[ebp], 180
  0294c	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1586[ebp]
  02952	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  02959	ff d1		 call	 ecx
  0295b	89 85 f4 f8 ff
	ff		 mov	 DWORD PTR _keysite$35[ebp], eax

; 1619 : 					}

  02961	e9 11 fc ff ff	 jmp	 $LN28@parser_cam
$LN29@parser_cam:

; 1620 : 				}
; 1621 : 
; 1622 : 				break;

  02966	e9 b1 1d 00 00	 jmp	 $LN4@parser_cam
$LN175@parser_cam:

; 1623 : 			}
; 1624 : 
; 1625 : 			case FILE_TAG_KEYSITE:
; 1626 : 			{
; 1627 : 
; 1628 : 				keysite_type = get_next_file_enum (file_ptr, entity_sub_type_keysite_names, NUM_ENTITY_SUB_TYPE_KEYSITES);

  0296b	6a 09		 push	 9
  0296d	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_keysite_names@@3PAPBDA ; entity_sub_type_keysite_names
  02972	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02978	50		 push	 eax
  02979	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0297e	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _keysite_type$[ebp], eax

; 1629 : 
; 1630 : 				ASSERT (get_parser_force ());

  02984	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  0298b	75 1a		 jne	 SHORT $LN176@parser_cam
  0298d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02992	05 91 05 00 00	 add	 eax, 1425		; 00000591H
  02997	50		 push	 eax
  02998	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0299d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@
  029a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN176@parser_cam:

; 1631 : 
; 1632 : 				set_parser_keysite (NULL);

  029a7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite

; 1633 : 
; 1634 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  029b1	68 af 00 00 00	 push	 175			; 000000afH
  029b6	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  029bb	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  029c1	50		 push	 eax
  029c2	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  029c7	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1635 : 
; 1636 : 				ASSERT (result == FILE_TAG_NAME);

  029ca	83 7d e8 67	 cmp	 DWORD PTR _result$[ebp], 103 ; 00000067H
  029ce	74 1a		 je	 SHORT $LN177@parser_cam
  029d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  029d5	05 97 05 00 00	 add	 eax, 1431		; 00000597H
  029da	50		 push	 eax
  029db	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  029e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HMANHFOJ@result?5?$DN?$DN?5FILE_TAG_NAME@
  029e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN177@parser_cam:

; 1637 : 
; 1638 : 				get_next_file_string (file_ptr, keysite_name, STRING_TYPE_KEYSITE_NAME_MAX_LENGTH);

  029ea	68 00 01 00 00	 push	 256			; 00000100H
  029ef	8d 85 40 fd ff
	ff		 lea	 eax, DWORD PTR _keysite_name$[ebp]
  029f5	50		 push	 eax
  029f6	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  029fc	51		 push	 ecx
  029fd	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 1639 : 
; 1640 : 				//
; 1641 : 				// get what type of landing entities are required
; 1642 : 				//
; 1643 : 
; 1644 : 				required_landing_types = 0;

  02a02	c7 85 c8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _required_landing_types$[ebp], 0
$LN32@parser_cam:

; 1645 : 
; 1646 : 				while (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_TYPE)

  02a0c	68 af 00 00 00	 push	 175			; 000000afH
  02a11	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  02a16	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02a1c	50		 push	 eax
  02a1d	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  02a22	83 f8 e6	 cmp	 eax, -26		; ffffffe6H
  02a25	0f 85 9f 00 00
	00		 jne	 $LN33@parser_cam

; 1647 : 				{
; 1648 : 
; 1649 : 					int
; 1650 : 						this_type;
; 1651 : 
; 1652 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02a2b	68 af 00 00 00	 push	 175			; 000000afH
  02a30	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  02a35	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02a3b	50		 push	 eax
  02a3c	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02a41	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1653 : 
; 1654 : 					ASSERT (result == FILE_TAG_TYPE);

  02a44	83 7d e8 e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  02a48	74 1a		 je	 SHORT $LN178@parser_cam
  02a4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02a4f	05 a9 05 00 00	 add	 eax, 1449		; 000005a9H
  02a54	50		 push	 eax
  02a55	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02a5a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  02a5f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN178@parser_cam:

; 1655 : 
; 1656 : 					this_type = get_next_file_enum (file_ptr, entity_sub_type_landing_names, NUM_ENTITY_SUB_TYPE_LANDINGS);

  02a64	6a 06		 push	 6
  02a66	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_landing_names@@3PAPBDA ; entity_sub_type_landing_names
  02a6b	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02a71	50		 push	 eax
  02a72	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  02a77	89 85 f0 f8 ff
	ff		 mov	 DWORD PTR _this_type$34[ebp], eax

; 1657 : 
; 1658 : 					ASSERT (!(required_landing_types & 1 << this_type));

  02a7d	b8 01 00 00 00	 mov	 eax, 1
  02a82	8b 8d f0 f8 ff
	ff		 mov	 ecx, DWORD PTR _this_type$34[ebp]
  02a88	d3 e0		 shl	 eax, cl
  02a8a	23 85 c8 fe ff
	ff		 and	 eax, DWORD PTR _required_landing_types$[ebp]
  02a90	74 1a		 je	 SHORT $LN179@parser_cam
  02a92	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02a97	05 ad 05 00 00	 add	 eax, 1453		; 000005adH
  02a9c	50		 push	 eax
  02a9d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02aa2	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@LHLNFGEM@?$CB?$CIrequired_landing_types?5?$CG?51?5?$DM?$DM@
  02aa7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN179@parser_cam:

; 1659 : 
; 1660 : 					required_landing_types |= 1 << this_type;

  02aac	b8 01 00 00 00	 mov	 eax, 1
  02ab1	8b 8d f0 f8 ff
	ff		 mov	 ecx, DWORD PTR _this_type$34[ebp]
  02ab7	d3 e0		 shl	 eax, cl
  02ab9	0b 85 c8 fe ff
	ff		 or	 eax, DWORD PTR _required_landing_types$[ebp]
  02abf	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _required_landing_types$[ebp], eax

; 1661 : 				}

  02ac5	e9 42 ff ff ff	 jmp	 $LN32@parser_cam
$LN33@parser_cam:

; 1662 : 
; 1663 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02aca	68 af 00 00 00	 push	 175			; 000000afH
  02acf	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  02ad4	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02ada	50		 push	 eax
  02adb	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02ae0	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1664 : 
; 1665 : 				ASSERT (result == FILE_TAG_AMMO_SUPPLIES);

  02ae3	83 7d e8 03	 cmp	 DWORD PTR _result$[ebp], 3
  02ae7	74 1a		 je	 SHORT $LN180@parser_cam
  02ae9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02aee	05 b4 05 00 00	 add	 eax, 1460		; 000005b4H
  02af3	50		 push	 eax
  02af4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02af9	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@OMBGAOGA@result?5?$DN?$DN?5FILE_TAG_AMMO_SUPPLIE@
  02afe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN180@parser_cam:

; 1666 : 
; 1667 : 				keysite_ammo_supplies = get_next_file_float (file_ptr);

  02b03	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02b09	50		 push	 eax
  02b0a	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  02b0f	d9 9d c0 fe ff
	ff		 fstp	 DWORD PTR _keysite_ammo_supplies$[ebp]

; 1668 : 
; 1669 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02b15	68 af 00 00 00	 push	 175			; 000000afH
  02b1a	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  02b1f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02b25	50		 push	 eax
  02b26	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02b2b	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1670 : 
; 1671 : 				ASSERT (result == FILE_TAG_FUEL_SUPPLIES);

  02b2e	83 7d e8 2b	 cmp	 DWORD PTR _result$[ebp], 43 ; 0000002bH
  02b32	74 1a		 je	 SHORT $LN181@parser_cam
  02b34	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02b39	05 ba 05 00 00	 add	 eax, 1466		; 000005baH
  02b3e	50		 push	 eax
  02b3f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02b44	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@PIDBMBOI@result?5?$DN?$DN?5FILE_TAG_FUEL_SUPPLIE@
  02b49	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN181@parser_cam:

; 1672 : 
; 1673 : 				keysite_fuel_supplies = get_next_file_float (file_ptr);

  02b4e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02b54	50		 push	 eax
  02b55	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  02b5a	d9 9d c4 fe ff
	ff		 fstp	 DWORD PTR _keysite_fuel_supplies$[ebp]

; 1674 : 
; 1675 : 				#if DEBUG_MODULE
; 1676 : 
; 1677 : 				debug_log ("PARSER: campaign load: keysite type %s, ammo %f fuel %f", entity_sub_type_keysite_names [keysite_type], keysite_ammo_supplies, keysite_fuel_supplies);
; 1678 : 
; 1679 : 				#endif
; 1680 : 
; 1681 : 				break;

  02b60	e9 b7 1b 00 00	 jmp	 $LN4@parser_cam
$LN182@parser_cam:

; 1682 : 			}
; 1683 : 
; 1684 : 			case FILE_TAG_CREATE_MEMBERS:
; 1685 : 			{
; 1686 : 
; 1687 : 				int
; 1688 : 					group_type,
; 1689 : 					member_type,
; 1690 : 					count;
; 1691 : 
; 1692 : 				entity
; 1693 : 					*group,
; 1694 : 					*member;
; 1695 : 
; 1696 : 				member = NULL;

  02b65	c7 85 dc f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _member$29[ebp], 0

; 1697 : 
; 1698 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02b6f	68 af 00 00 00	 push	 175			; 000000afH
  02b74	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  02b79	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02b7f	50		 push	 eax
  02b80	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02b85	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1699 : 
; 1700 : 				ASSERT (result == FILE_TAG_GROUP);

  02b88	83 7d e8 47	 cmp	 DWORD PTR _result$[ebp], 71 ; 00000047H
  02b8c	74 1a		 je	 SHORT $LN183@parser_cam
  02b8e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02b93	05 d7 05 00 00	 add	 eax, 1495		; 000005d7H
  02b98	50		 push	 eax
  02b99	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02b9e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NFHBNNJM@result?5?$DN?$DN?5FILE_TAG_GROUP@
  02ba3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN183@parser_cam:

; 1701 : 
; 1702 : 				group_type = get_next_file_enum (file_ptr, entity_sub_type_group_names, NUM_ENTITY_SUB_TYPE_GROUPS);

  02ba8	6a 1a		 push	 26			; 0000001aH
  02baa	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_group_names@@3PAPBDA ; entity_sub_type_group_names
  02baf	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02bb5	50		 push	 eax
  02bb6	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  02bbb	89 85 ec f8 ff
	ff		 mov	 DWORD PTR _group_type$33[ebp], eax

; 1703 : 
; 1704 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02bc1	68 af 00 00 00	 push	 175			; 000000afH
  02bc6	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  02bcb	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02bd1	50		 push	 eax
  02bd2	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02bd7	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1705 : 
; 1706 : 				ASSERT (result == FILE_TAG_MEMBER);

  02bda	83 7d e8 62	 cmp	 DWORD PTR _result$[ebp], 98 ; 00000062H
  02bde	74 1a		 je	 SHORT $LN184@parser_cam
  02be0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02be5	05 dd 05 00 00	 add	 eax, 1501		; 000005ddH
  02bea	50		 push	 eax
  02beb	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02bf0	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GGKBKBNE@result?5?$DN?$DN?5FILE_TAG_MEMBER@
  02bf5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN184@parser_cam:

; 1707 : 
; 1708 : 				switch (group_database [group_type].registry_list_type)

  02bfa	6b 85 ec f8 ff
	ff 64		 imul	 eax, DWORD PTR _group_type$33[ebp], 100
  02c01	8b 88 0c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+12]
  02c07	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1687[ebp], ecx
  02c0d	83 bd ac f6 ff
	ff 02		 cmp	 DWORD PTR tv1687[ebp], 2
  02c14	74 02		 je	 SHORT $LN185@parser_cam
  02c16	eb 1b		 jmp	 SHORT $LN186@parser_cam
$LN185@parser_cam:

; 1709 : 				{
; 1710 : 
; 1711 : 					case LIST_TYPE_AIR_REGISTRY:
; 1712 : 					{
; 1713 : 
; 1714 : 						member_type = get_next_file_enum (file_ptr, entity_sub_type_aircraft_names, NUM_ENTITY_SUB_TYPE_AIRCRAFT);

  02c18	6a 20		 push	 32			; 00000020H
  02c1a	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_aircraft_names@@3PAPBDA ; entity_sub_type_aircraft_names
  02c1f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02c25	50		 push	 eax
  02c26	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  02c2b	89 85 e8 f8 ff
	ff		 mov	 DWORD PTR _member_type$32[ebp], eax

; 1715 : 
; 1716 : 						break;

  02c31	eb 19		 jmp	 SHORT $LN34@parser_cam
$LN186@parser_cam:

; 1717 : 					}
; 1718 : 
; 1719 : 					default:
; 1720 : 					{
; 1721 : 
; 1722 :                   member_type = get_next_file_enum (file_ptr, entity_sub_type_vehicle_names, NUM_ENTITY_SUB_TYPE_VEHICLES);

  02c33	6a 26		 push	 38			; 00000026H
  02c35	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_vehicle_names@@3PAPBDA ; entity_sub_type_vehicle_names
  02c3a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02c40	50		 push	 eax
  02c41	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  02c46	89 85 e8 f8 ff
	ff		 mov	 DWORD PTR _member_type$32[ebp], eax
$LN34@parser_cam:

; 1723 : 
; 1724 : 						break;
; 1725 : 					}
; 1726 : 				}
; 1727 : 
; 1728 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  02c4c	68 af 00 00 00	 push	 175			; 000000afH
  02c51	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  02c56	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02c5c	50		 push	 eax
  02c5d	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  02c62	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1729 : 
; 1730 : 				ASSERT (result == FILE_TAG_COUNT);

  02c65	83 7d e8 12	 cmp	 DWORD PTR _result$[ebp], 18 ; 00000012H
  02c69	74 1a		 je	 SHORT $LN187@parser_cam
  02c6b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02c70	05 f5 05 00 00	 add	 eax, 1525		; 000005f5H
  02c75	50		 push	 eax
  02c76	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02c7b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@
  02c80	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN187@parser_cam:

; 1731 : 
; 1732 : 				count = get_next_file_int (file_ptr);

  02c85	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  02c8b	50		 push	 eax
  02c8c	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  02c91	89 85 e4 f8 ff
	ff		 mov	 DWORD PTR _count$31[ebp], eax

; 1733 : 
; 1734 : 				if (!get_parser_keysite ())

  02c97	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  02c9e	0f 85 d8 05 00
	00		 jne	 $LN37@parser_cam

; 1735 : 				{
; 1736 : 
; 1737 : 					//
; 1738 : 					// local keysite with correct landing entity
; 1739 : 					//
; 1740 : 
; 1741 : 					ASSERT (get_parser_force ());

  02ca4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  02cab	75 1a		 jne	 SHORT $LN189@parser_cam
  02cad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02cb2	05 00 06 00 00	 add	 eax, 1536		; 00000600H
  02cb7	50		 push	 eax
  02cb8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02cbd	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@
  02cc2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN189@parser_cam:

; 1742 : 
; 1743 : 					//
; 1744 : 					// Locate suitable free keysite
; 1745 : 					//
; 1746 : 
; 1747 : 					set_parser_keysite (get_local_entity_first_child (get_parser_force (), LIST_TYPE_KEYSITE_FORCE));

  02cc7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  02cce	74 0f		 je	 SHORT $LN303@parser_cam
  02cd0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  02cd5	8b 08		 mov	 ecx, DWORD PTR [eax]
  02cd7	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1720[ebp], ecx
  02cdd	eb 27		 jmp	 SHORT $LN304@parser_cam
$LN303@parser_cam:
  02cdf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02ce5	81 c2 06 06 00
	00		 add	 edx, 1542		; 00000606H
  02ceb	52		 push	 edx
  02cec	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02cf1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02cf6	50		 push	 eax
  02cf7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02cfc	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1720[ebp], 0
$LN304@parser_cam:
  02d06	b9 01 00 00 00	 mov	 ecx, 1
  02d0b	85 c9		 test	 ecx, ecx
  02d0d	74 0c		 je	 SHORT $LN305@parser_cam
  02d0f	c7 85 a8 f6 ff
	ff 15 00 00 00	 mov	 DWORD PTR tv1728[ebp], 21 ; 00000015H
  02d19	eb 27		 jmp	 SHORT $LN306@parser_cam
$LN305@parser_cam:
  02d1b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  02d21	81 c2 06 06 00
	00		 add	 edx, 1542		; 00000606H
  02d27	52		 push	 edx
  02d28	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02d2d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  02d32	50		 push	 eax
  02d33	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02d38	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1728[ebp], 0
$LN306@parser_cam:
  02d42	6a 15		 push	 21			; 00000015H
  02d44	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  02d4a	51		 push	 ecx
  02d4b	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1720[ebp], 180
  02d55	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1728[ebp]
  02d5b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  02d62	ff d1		 call	 ecx
  02d64	a3 00 00 00 00	 mov	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, eax ; parser_keysite
$LN36@parser_cam:

; 1748 : 
; 1749 : 					while (get_parser_keysite ())

  02d69	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  02d70	0f 84 06 05 00
	00		 je	 $LN37@parser_cam

; 1750 : 					{
; 1751 : 
; 1752 : 						if ((get_local_entity_int_value (get_parser_keysite (), INT_TYPE_ENTITY_SUB_TYPE) == keysite_type) &&
; 1753 : 							(get_local_entity_int_value (get_parser_keysite (), INT_TYPE_IN_USE) == FALSE) &&
; 1754 : 							(get_local_entity_int_value (get_parser_keysite (), INT_TYPE_SIDE) == faction_side) &&

  02d76	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  02d7d	74 0f		 je	 SHORT $LN307@parser_cam
  02d7f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02d84	8b 08		 mov	 ecx, DWORD PTR [eax]
  02d86	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1740[ebp], ecx
  02d8c	eb 20		 jmp	 SHORT $LN308@parser_cam
$LN307@parser_cam:
  02d8e	68 d8 06 00 00	 push	 1752			; 000006d8H
  02d93	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02d98	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02d9e	52		 push	 edx
  02d9f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02da4	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1740[ebp], 0
$LN308@parser_cam:
  02dae	b8 01 00 00 00	 mov	 eax, 1
  02db3	85 c0		 test	 eax, eax
  02db5	74 0c		 je	 SHORT $LN309@parser_cam
  02db7	c7 85 a8 f6 ff
	ff 34 00 00 00	 mov	 DWORD PTR tv1747[ebp], 52 ; 00000034H
  02dc1	eb 20		 jmp	 SHORT $LN310@parser_cam
$LN309@parser_cam:
  02dc3	68 d8 06 00 00	 push	 1752			; 000006d8H
  02dc8	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02dcd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  02dd3	51		 push	 ecx
  02dd4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02dd9	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1747[ebp], 0
$LN310@parser_cam:
  02de3	6a 34		 push	 52			; 00000034H
  02de5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02deb	52		 push	 edx
  02dec	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1740[ebp], 1116
  02df6	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1747[ebp]
  02dfc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  02e03	ff d2		 call	 edx
  02e05	3b 85 d0 fe ff
	ff		 cmp	 eax, DWORD PTR _keysite_type$[ebp]
  02e0b	0f 85 c4 03 00
	00		 jne	 $LN190@parser_cam
  02e11	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  02e18	74 0f		 je	 SHORT $LN311@parser_cam
  02e1a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02e1f	8b 08		 mov	 ecx, DWORD PTR [eax]
  02e21	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1759[ebp], ecx
  02e27	eb 20		 jmp	 SHORT $LN312@parser_cam
$LN311@parser_cam:
  02e29	68 d9 06 00 00	 push	 1753			; 000006d9H
  02e2e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02e33	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02e39	52		 push	 edx
  02e3a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02e3f	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1759[ebp], 0
$LN312@parser_cam:
  02e49	b8 01 00 00 00	 mov	 eax, 1
  02e4e	85 c0		 test	 eax, eax
  02e50	74 0c		 je	 SHORT $LN313@parser_cam
  02e52	c7 85 a8 f6 ff
	ff 6d 00 00 00	 mov	 DWORD PTR tv1766[ebp], 109 ; 0000006dH
  02e5c	eb 20		 jmp	 SHORT $LN314@parser_cam
$LN313@parser_cam:
  02e5e	68 d9 06 00 00	 push	 1753			; 000006d9H
  02e63	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02e68	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  02e6e	51		 push	 ecx
  02e6f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02e74	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1766[ebp], 0
$LN314@parser_cam:
  02e7e	6a 6d		 push	 109			; 0000006dH
  02e80	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02e86	52		 push	 edx
  02e87	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1759[ebp], 1116
  02e91	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1766[ebp]
  02e97	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  02e9e	ff d2		 call	 edx
  02ea0	85 c0		 test	 eax, eax
  02ea2	0f 85 2d 03 00
	00		 jne	 $LN190@parser_cam
  02ea8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  02eaf	74 0f		 je	 SHORT $LN315@parser_cam
  02eb1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02eb6	8b 08		 mov	 ecx, DWORD PTR [eax]
  02eb8	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1778[ebp], ecx
  02ebe	eb 20		 jmp	 SHORT $LN316@parser_cam
$LN315@parser_cam:
  02ec0	68 da 06 00 00	 push	 1754			; 000006daH
  02ec5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02eca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02ed0	52		 push	 edx
  02ed1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02ed6	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1778[ebp], 0
$LN316@parser_cam:
  02ee0	b8 01 00 00 00	 mov	 eax, 1
  02ee5	85 c0		 test	 eax, eax
  02ee7	74 0c		 je	 SHORT $LN317@parser_cam
  02ee9	c7 85 a8 f6 ff
	ff bb 00 00 00	 mov	 DWORD PTR tv1785[ebp], 187 ; 000000bbH
  02ef3	eb 20		 jmp	 SHORT $LN318@parser_cam
$LN317@parser_cam:
  02ef5	68 da 06 00 00	 push	 1754			; 000006daH
  02efa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02eff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  02f05	51		 push	 ecx
  02f06	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02f0b	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1785[ebp], 0
$LN318@parser_cam:
  02f15	68 bb 00 00 00	 push	 187			; 000000bbH
  02f1a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02f20	52		 push	 edx
  02f21	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1778[ebp], 1116
  02f2b	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1785[ebp]
  02f31	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  02f38	ff d2		 call	 edx
  02f3a	3b 85 d4 fe ff
	ff		 cmp	 eax, DWORD PTR _faction_side$[ebp]
  02f40	0f 85 8f 02 00
	00		 jne	 $LN190@parser_cam
  02f46	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  02f4d	74 0f		 je	 SHORT $LN319@parser_cam
  02f4f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02f54	8b 08		 mov	 ecx, DWORD PTR [eax]
  02f56	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1798[ebp], ecx
  02f5c	eb 20		 jmp	 SHORT $LN320@parser_cam
$LN319@parser_cam:
  02f5e	68 db 06 00 00	 push	 1755			; 000006dbH
  02f63	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02f68	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  02f6e	52		 push	 edx
  02f6f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02f74	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1798[ebp], 0
$LN320@parser_cam:
  02f7e	b8 01 00 00 00	 mov	 eax, 1
  02f83	85 c0		 test	 eax, eax
  02f85	74 0c		 je	 SHORT $LN321@parser_cam
  02f87	c7 85 a8 f6 ff
	ff 07 00 00 00	 mov	 DWORD PTR tv1805[ebp], 7
  02f91	eb 20		 jmp	 SHORT $LN322@parser_cam
$LN321@parser_cam:
  02f93	68 db 06 00 00	 push	 1755			; 000006dbH
  02f98	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  02f9d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  02fa3	51		 push	 ecx
  02fa4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  02fa9	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1805[ebp], 0
$LN322@parser_cam:
  02fb3	6a 07		 push	 7
  02fb5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02fbb	52		 push	 edx
  02fbc	6b 85 ac f6 ff
	ff 34		 imul	 eax, DWORD PTR tv1798[ebp], 52
  02fc3	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1805[ebp]
  02fc9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  02fd0	ff d2		 call	 edx
  02fd2	50		 push	 eax
  02fd3	8d 85 40 fd ff
	ff		 lea	 eax, DWORD PTR _keysite_name$[ebp]
  02fd9	50		 push	 eax
  02fda	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  02fe0	83 c4 08	 add	 esp, 8
  02fe3	85 c0		 test	 eax, eax
  02fe5	0f 85 ea 01 00
	00		 jne	 $LN190@parser_cam

; 1755 : 							(strcmpi (keysite_name, get_local_entity_string (get_parser_keysite (), STRING_TYPE_KEYSITE_NAME)) == 0))
; 1756 : 						{
; 1757 : 
; 1758 : 							if (get_local_entity_int_value (get_parser_keysite (), INT_TYPE_LANDING_TYPES) != required_landing_types)

  02feb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  02ff2	74 0f		 je	 SHORT $LN323@parser_cam
  02ff4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  02ff9	8b 08		 mov	 ecx, DWORD PTR [eax]
  02ffb	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1819[ebp], ecx
  03001	eb 20		 jmp	 SHORT $LN324@parser_cam
$LN323@parser_cam:
  03003	68 de 06 00 00	 push	 1758			; 000006deH
  03008	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0300d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03013	52		 push	 edx
  03014	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03019	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1819[ebp], 0
$LN324@parser_cam:
  03023	b8 01 00 00 00	 mov	 eax, 1
  03028	85 c0		 test	 eax, eax
  0302a	74 0c		 je	 SHORT $LN325@parser_cam
  0302c	c7 85 a8 f6 ff
	ff 77 00 00 00	 mov	 DWORD PTR tv1826[ebp], 119 ; 00000077H
  03036	eb 20		 jmp	 SHORT $LN326@parser_cam
$LN325@parser_cam:
  03038	68 de 06 00 00	 push	 1758			; 000006deH
  0303d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  03048	51		 push	 ecx
  03049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0304e	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1826[ebp], 0
$LN326@parser_cam:
  03058	6a 77		 push	 119			; 00000077H
  0305a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03060	52		 push	 edx
  03061	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv1819[ebp], 1116
  0306b	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1826[ebp]
  03071	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  03078	ff d2		 call	 edx

; 1759 : 							{
; 1760 : 
; 1761 : 								#if DEBUG_MODULE
; 1762 : 
; 1763 : 								debug_log ("PARSER: warning ! keysite landing types not fully used");
; 1764 : 
; 1765 : 								#endif
; 1766 : 							}
; 1767 : 
; 1768 : 							//
; 1769 : 							// DONT mark Keysite as used (do it after it has Actually been used!)
; 1770 : 							// set_local_entity_int_value (keysite, INT_TYPE_IN_USE, TRUE);
; 1771 : 							//
; 1772 : 
; 1773 : 							set_local_entity_float_value (get_parser_keysite (), FLOAT_TYPE_AMMO_SUPPLY_LEVEL, keysite_ammo_supplies);

  0307a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03081	74 0f		 je	 SHORT $LN327@parser_cam
  03083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03088	8b 08		 mov	 ecx, DWORD PTR [eax]
  0308a	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1839[ebp], ecx
  03090	eb 27		 jmp	 SHORT $LN328@parser_cam
$LN327@parser_cam:
  03092	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03098	81 c2 20 06 00
	00		 add	 edx, 1568		; 00000620H
  0309e	52		 push	 edx
  0309f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  030a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  030a9	50		 push	 eax
  030aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  030af	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1839[ebp], 0
$LN328@parser_cam:
  030b9	b9 01 00 00 00	 mov	 ecx, 1
  030be	85 c9		 test	 ecx, ecx
  030c0	74 0c		 je	 SHORT $LN329@parser_cam
  030c2	c7 85 a8 f6 ff
	ff 08 00 00 00	 mov	 DWORD PTR tv1847[ebp], 8
  030cc	eb 27		 jmp	 SHORT $LN330@parser_cam
$LN329@parser_cam:
  030ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  030d4	81 c2 20 06 00
	00		 add	 edx, 1568		; 00000620H
  030da	52		 push	 edx
  030db	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  030e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  030e5	50		 push	 eax
  030e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  030eb	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1847[ebp], 0
$LN330@parser_cam:
  030f5	51		 push	 ecx
  030f6	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR _keysite_ammo_supplies$[ebp]
  030fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03103	6a 08		 push	 8
  03105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  0310b	51		 push	 ecx
  0310c	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv1839[ebp], 700
  03116	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1847[ebp]
  0311c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  03123	ff d1		 call	 ecx

; 1774 : 
; 1775 : 							set_local_entity_float_value (get_parser_keysite (), FLOAT_TYPE_FUEL_SUPPLY_LEVEL, keysite_fuel_supplies);

  03125	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  0312c	74 0f		 je	 SHORT $LN331@parser_cam
  0312e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03133	8b 08		 mov	 ecx, DWORD PTR [eax]
  03135	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1859[ebp], ecx
  0313b	eb 27		 jmp	 SHORT $LN332@parser_cam
$LN331@parser_cam:
  0313d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03143	81 c2 22 06 00
	00		 add	 edx, 1570		; 00000622H
  03149	52		 push	 edx
  0314a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0314f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03154	50		 push	 eax
  03155	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0315a	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1859[ebp], 0
$LN332@parser_cam:
  03164	b9 01 00 00 00	 mov	 ecx, 1
  03169	85 c9		 test	 ecx, ecx
  0316b	74 0c		 je	 SHORT $LN333@parser_cam
  0316d	c7 85 a8 f6 ff
	ff 30 00 00 00	 mov	 DWORD PTR tv1867[ebp], 48 ; 00000030H
  03177	eb 27		 jmp	 SHORT $LN334@parser_cam
$LN333@parser_cam:
  03179	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0317f	81 c2 22 06 00
	00		 add	 edx, 1570		; 00000622H
  03185	52		 push	 edx
  03186	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0318b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  03190	50		 push	 eax
  03191	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03196	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1867[ebp], 0
$LN334@parser_cam:
  031a0	51		 push	 ecx
  031a1	f3 0f 10 85 c4
	fe ff ff	 movss	 xmm0, DWORD PTR _keysite_fuel_supplies$[ebp]
  031a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  031ae	6a 30		 push	 48			; 00000030H
  031b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  031b6	51		 push	 ecx
  031b7	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv1859[ebp], 700
  031c1	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1867[ebp]
  031c7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  031ce	ff d1		 call	 ecx

; 1776 : 
; 1777 : 							break;

  031d0	e9 a7 00 00 00	 jmp	 $LN37@parser_cam
$LN190@parser_cam:

; 1778 : 						}
; 1779 : 
; 1780 : 						set_parser_keysite (get_local_entity_child_succ (get_parser_keysite (), LIST_TYPE_KEYSITE_FORCE));

  031d5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  031dc	74 0f		 je	 SHORT $LN335@parser_cam
  031de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  031e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  031e5	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1879[ebp], ecx
  031eb	eb 27		 jmp	 SHORT $LN336@parser_cam
$LN335@parser_cam:
  031ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  031f3	81 c2 27 06 00
	00		 add	 edx, 1575		; 00000627H
  031f9	52		 push	 edx
  031fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  031ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03204	50		 push	 eax
  03205	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0320a	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1879[ebp], 0
$LN336@parser_cam:
  03214	b9 01 00 00 00	 mov	 ecx, 1
  03219	85 c9		 test	 ecx, ecx
  0321b	74 0c		 je	 SHORT $LN337@parser_cam
  0321d	c7 85 a8 f6 ff
	ff 15 00 00 00	 mov	 DWORD PTR tv1887[ebp], 21 ; 00000015H
  03227	eb 27		 jmp	 SHORT $LN338@parser_cam
$LN337@parser_cam:
  03229	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0322f	81 c2 27 06 00
	00		 add	 edx, 1575		; 00000627H
  03235	52		 push	 edx
  03236	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0323b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  03240	50		 push	 eax
  03241	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03246	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1887[ebp], 0
$LN338@parser_cam:
  03250	6a 15		 push	 21			; 00000015H
  03252	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03258	51		 push	 ecx
  03259	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1879[ebp], 180
  03263	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1887[ebp]
  03269	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  03270	ff d1		 call	 ecx
  03272	a3 00 00 00 00	 mov	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, eax ; parser_keysite

; 1781 : 					}

  03277	e9 ed fa ff ff	 jmp	 $LN36@parser_cam
$LN37@parser_cam:

; 1782 : 				}
; 1783 : 
; 1784 :   				if (!get_parser_keysite ())

  0327c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03283	75 22		 jne	 SHORT $LN192@parser_cam

; 1785 : 				{
; 1786 : 
; 1787 : 					debug_fatal ("PARSER: campaign load: Side %s - Can't locate keysite %s", entity_side_short_names [faction_side], keysite_name);

  03285	8d 85 40 fd ff
	ff		 lea	 eax, DWORD PTR _keysite_name$[ebp]
  0328b	50		 push	 eax
  0328c	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _faction_side$[ebp]
  03292	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?entity_side_short_names@@3PAPBDA[ecx*4]
  03299	52		 push	 edx
  0329a	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@KGKGPCAF@PARSER?3?5campaign?5load?3?5Side?5?$CFs?5@
  0329f	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  032a4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN192@parser_cam:

; 1788 : 				}
; 1789 : 
; 1790 : 				if (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) == FILE_TAG_MOBILE_KEYSITE)

  032a7	68 af 00 00 00	 push	 175			; 000000afH
  032ac	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  032b1	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  032b7	50		 push	 eax
  032b8	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  032bd	83 f8 65	 cmp	 eax, 101		; 00000065H
  032c0	0f 85 b0 02 00
	00		 jne	 $LN193@parser_cam

; 1791 : 				{
; 1792 : 
; 1793 : 					formation_component_types
; 1794 : 						formation_components;
; 1795 : 
; 1796 : 					get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  032c6	68 af 00 00 00	 push	 175			; 000000afH
  032cb	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  032d0	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  032d6	50		 push	 eax
  032d7	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag

; 1797 : 
; 1798 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  032dc	68 af 00 00 00	 push	 175			; 000000afH
  032e1	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  032e6	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  032ec	50		 push	 eax
  032ed	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  032f2	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1799 : 
; 1800 : 					ASSERT (result == FILE_TAG_FORMATION_COMPONENT);

  032f5	83 7d e8 29	 cmp	 DWORD PTR _result$[ebp], 41 ; 00000029H
  032f9	74 1a		 je	 SHORT $LN195@parser_cam
  032fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03300	05 3b 06 00 00	 add	 eax, 1595		; 0000063bH
  03305	50		 push	 eax
  03306	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0330b	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@HCMLMDDN@result?5?$DN?$DN?5FILE_TAG_FORMATION_CO@
  03310	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN195@parser_cam:

; 1801 : 
; 1802 : 					formation_components = (formation_component_types) get_next_file_enum (file_ptr, formation_component_names, NUM_FORMATION_COMPONENT_TYPES);

  03315	6a 25		 push	 37			; 00000025H
  03317	68 00 00 00 00	 push	 OFFSET ?formation_component_names@@3PAPBDA ; formation_component_names
  0331c	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03322	50		 push	 eax
  03323	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  03328	89 85 d8 f8 ff
	ff		 mov	 DWORD PTR _formation_components$28[ebp], eax

; 1803 : 
; 1804 : 					group = create_faction_members (get_parser_keysite (), group_type, formation_components, count, (entity_sides) get_local_entity_int_value (get_parser_keysite (), INT_TYPE_SIDE), get_local_entity_vec3d_ptr (get_parser_keysite (), VEC3D_TYPE_POSITION), TRUE, TRUE);

  0332e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03335	74 0f		 je	 SHORT $LN339@parser_cam
  03337	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  0333c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0333e	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1929[ebp], ecx
  03344	eb 27		 jmp	 SHORT $LN340@parser_cam
$LN339@parser_cam:
  03346	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0334c	81 c2 3f 06 00
	00		 add	 edx, 1599		; 0000063fH
  03352	52		 push	 edx
  03353	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03358	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0335d	50		 push	 eax
  0335e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03363	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1929[ebp], 0
$LN340@parser_cam:
  0336d	b9 01 00 00 00	 mov	 ecx, 1
  03372	85 c9		 test	 ecx, ecx
  03374	74 0c		 je	 SHORT $LN341@parser_cam
  03376	c7 85 a8 f6 ff
	ff 08 00 00 00	 mov	 DWORD PTR tv1937[ebp], 8
  03380	eb 27		 jmp	 SHORT $LN342@parser_cam
$LN341@parser_cam:
  03382	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03388	81 c2 3f 06 00
	00		 add	 edx, 1599		; 0000063fH
  0338e	52		 push	 edx
  0338f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03394	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  03399	50		 push	 eax
  0339a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0339f	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1937[ebp], 0
$LN342@parser_cam:
  033a9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  033b0	74 10		 je	 SHORT $LN343@parser_cam
  033b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  033b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  033ba	89 95 a4 f6 ff
	ff		 mov	 DWORD PTR tv1950[ebp], edx
  033c0	eb 26		 jmp	 SHORT $LN344@parser_cam
$LN343@parser_cam:
  033c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  033c7	05 3f 06 00 00	 add	 eax, 1599		; 0000063fH
  033cc	50		 push	 eax
  033cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  033d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  033d8	51		 push	 ecx
  033d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  033de	c7 85 a4 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1950[ebp], 0
$LN344@parser_cam:
  033e8	ba 01 00 00 00	 mov	 edx, 1
  033ed	85 d2		 test	 edx, edx
  033ef	74 0c		 je	 SHORT $LN345@parser_cam
  033f1	c7 85 a0 f6 ff
	ff bb 00 00 00	 mov	 DWORD PTR tv1958[ebp], 187 ; 000000bbH
  033fb	eb 26		 jmp	 SHORT $LN346@parser_cam
$LN345@parser_cam:
  033fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03402	05 3f 06 00 00	 add	 eax, 1599		; 0000063fH
  03407	50		 push	 eax
  03408	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0340d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  03413	51		 push	 ecx
  03414	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03419	c7 85 a0 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1958[ebp], 0
$LN346@parser_cam:
  03423	6a 01		 push	 1
  03425	6a 01		 push	 1
  03427	6a 08		 push	 8
  03429	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  0342f	52		 push	 edx
  03430	6b 85 ac f6 ff
	ff 60		 imul	 eax, DWORD PTR tv1929[ebp], 96
  03437	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1937[ebp]
  0343d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[eax+ecx*4]
  03444	ff d2		 call	 edx
  03446	50		 push	 eax
  03447	68 bb 00 00 00	 push	 187			; 000000bbH
  0344c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03451	50		 push	 eax
  03452	69 8d a4 f6 ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv1950[ebp], 1116
  0345c	8b 95 a0 f6 ff
	ff		 mov	 edx, DWORD PTR tv1958[ebp]
  03462	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  03469	ff d0		 call	 eax
  0346b	50		 push	 eax
  0346c	8b 8d e4 f8 ff
	ff		 mov	 ecx, DWORD PTR _count$31[ebp]
  03472	51		 push	 ecx
  03473	8b 95 d8 f8 ff
	ff		 mov	 edx, DWORD PTR _formation_components$28[ebp]
  03479	52		 push	 edx
  0347a	8b 85 ec f8 ff
	ff		 mov	 eax, DWORD PTR _group_type$33[ebp]
  03480	50		 push	 eax
  03481	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03487	51		 push	 ecx
  03488	e8 00 00 00 00	 call	 ?create_faction_members@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@HW4ENTITY_SIDES@@PAUVEC3D@@HH@Z ; create_faction_members
  0348d	89 85 e0 f8 ff
	ff		 mov	 DWORD PTR _group$30[ebp], eax

; 1805 : 
; 1806 : 					ASSERT (group);

  03493	83 bd e0 f8 ff
	ff 00		 cmp	 DWORD PTR _group$30[ebp], 0
  0349a	75 1a		 jne	 SHORT $LN196@parser_cam
  0349c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  034a1	05 41 06 00 00	 add	 eax, 1601		; 00000641H
  034a6	50		 push	 eax
  034a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  034ac	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  034b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN196@parser_cam:

; 1807 : 
; 1808 : 					member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  034b6	83 bd e0 f8 ff
	ff 00		 cmp	 DWORD PTR _group$30[ebp], 0
  034bd	74 10		 je	 SHORT $LN347@parser_cam
  034bf	8b 85 e0 f8 ff
	ff		 mov	 eax, DWORD PTR _group$30[ebp]
  034c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  034c7	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv1980[ebp], ecx
  034cd	eb 27		 jmp	 SHORT $LN348@parser_cam
$LN347@parser_cam:
  034cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  034d5	81 c2 43 06 00
	00		 add	 edx, 1603		; 00000643H
  034db	52		 push	 edx
  034dc	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  034e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  034e6	50		 push	 eax
  034e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  034ec	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1980[ebp], 0
$LN348@parser_cam:
  034f6	b9 01 00 00 00	 mov	 ecx, 1
  034fb	85 c9		 test	 ecx, ecx
  034fd	74 0c		 je	 SHORT $LN349@parser_cam
  034ff	c7 85 a8 f6 ff
	ff 19 00 00 00	 mov	 DWORD PTR tv1988[ebp], 25 ; 00000019H
  03509	eb 27		 jmp	 SHORT $LN350@parser_cam
$LN349@parser_cam:
  0350b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03511	81 c2 43 06 00
	00		 add	 edx, 1603		; 00000643H
  03517	52		 push	 edx
  03518	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0351d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  03522	50		 push	 eax
  03523	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03528	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv1988[ebp], 0
$LN350@parser_cam:
  03532	6a 19		 push	 25			; 00000019H
  03534	8b 8d e0 f8 ff
	ff		 mov	 ecx, DWORD PTR _group$30[ebp]
  0353a	51		 push	 ecx
  0353b	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv1980[ebp], 180
  03545	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1988[ebp]
  0354b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  03552	ff d1		 call	 ecx
  03554	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _member$29[ebp], eax

; 1809 : 
; 1810 : 					insert_local_entity_into_parents_child_list (get_parser_keysite (), LIST_TYPE_MOVEMENT_DEPENDENT, member, NULL);

  0355a	6a 00		 push	 0
  0355c	8b 85 dc f8 ff
	ff		 mov	 eax, DWORD PTR _member$29[ebp]
  03562	50		 push	 eax
  03563	6a 1a		 push	 26			; 0000001aH
  03565	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  0356b	51		 push	 ecx
  0356c	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 1811 : 				}
; 1812 : 				else

  03571	e9 d7 00 00 00	 jmp	 $LN197@parser_cam
$LN193@parser_cam:

; 1813 : 				{
; 1814 : 
; 1815 : 					group = create_landed_faction_members (get_parser_keysite (), member_type, group_type, count);

  03576	8b 85 e4 f8 ff
	ff		 mov	 eax, DWORD PTR _count$31[ebp]
  0357c	50		 push	 eax
  0357d	8b 8d ec f8 ff
	ff		 mov	 ecx, DWORD PTR _group_type$33[ebp]
  03583	51		 push	 ecx
  03584	8b 95 e8 f8 ff
	ff		 mov	 edx, DWORD PTR _member_type$32[ebp]
  0358a	52		 push	 edx
  0358b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03590	50		 push	 eax
  03591	e8 00 00 00 00	 call	 ?create_landed_faction_members@@YGPAUENTITY@@PAU1@HHH@Z ; create_landed_faction_members
  03596	89 85 e0 f8 ff
	ff		 mov	 DWORD PTR _group$30[ebp], eax

; 1816 : 
; 1817 : 					if (group)

  0359c	83 bd e0 f8 ff
	ff 00		 cmp	 DWORD PTR _group$30[ebp], 0
  035a3	0f 84 a4 00 00
	00		 je	 $LN197@parser_cam

; 1818 : 					{
; 1819 : 
; 1820 : 						member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  035a9	83 bd e0 f8 ff
	ff 00		 cmp	 DWORD PTR _group$30[ebp], 0
  035b0	74 10		 je	 SHORT $LN351@parser_cam
  035b2	8b 85 e0 f8 ff
	ff		 mov	 eax, DWORD PTR _group$30[ebp]
  035b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  035ba	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2010[ebp], ecx
  035c0	eb 27		 jmp	 SHORT $LN352@parser_cam
$LN351@parser_cam:
  035c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  035c8	81 c2 4f 06 00
	00		 add	 edx, 1615		; 0000064fH
  035ce	52		 push	 edx
  035cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  035d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  035d9	50		 push	 eax
  035da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  035df	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2010[ebp], 0
$LN352@parser_cam:
  035e9	b9 01 00 00 00	 mov	 ecx, 1
  035ee	85 c9		 test	 ecx, ecx
  035f0	74 0c		 je	 SHORT $LN353@parser_cam
  035f2	c7 85 a8 f6 ff
	ff 19 00 00 00	 mov	 DWORD PTR tv2018[ebp], 25 ; 00000019H
  035fc	eb 27		 jmp	 SHORT $LN354@parser_cam
$LN353@parser_cam:
  035fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03604	81 c2 4f 06 00
	00		 add	 edx, 1615		; 0000064fH
  0360a	52		 push	 edx
  0360b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03610	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  03615	50		 push	 eax
  03616	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0361b	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2018[ebp], 0
$LN354@parser_cam:
  03625	6a 19		 push	 25			; 00000019H
  03627	8b 8d e0 f8 ff
	ff		 mov	 ecx, DWORD PTR _group$30[ebp]
  0362d	51		 push	 ecx
  0362e	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv2010[ebp], 180
  03638	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv2018[ebp]
  0363e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  03645	ff d1		 call	 ecx
  03647	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _member$29[ebp], eax
$LN197@parser_cam:

; 1821 : 
; 1822 : 						#if DEBUG_MODULE
; 1823 : 
; 1824 : 						debug_log ("PARSER: campaign load: create members, keysite %d, group type %d, entity type %d, member type %d, count %d", get_parser_keysite (), group_type, member_type, count);
; 1825 : 
; 1826 : 						#endif
; 1827 : 					}
; 1828 : 				}
; 1829 : 
; 1830 : 				set_parser_member (member);

  0364d	8b 85 dc f8 ff
	ff		 mov	 eax, DWORD PTR _member$29[ebp]
  03653	a3 00 00 00 00	 mov	 DWORD PTR ?parser_member@@3PAUENTITY@@A, eax ; parser_member

; 1831 : 
; 1832 : 				break;

  03658	e9 bf 10 00 00	 jmp	 $LN4@parser_cam
$LN198@parser_cam:

; 1833 : 			}
; 1834 : 
; 1835 : 			case FILE_TAG_CREATE_GROUP:
; 1836 : 			{
; 1837 : 
; 1838 : 				int
; 1839 : 					group_type,
; 1840 : 					formation_component_type;
; 1841 : 
; 1842 : 				entity
; 1843 : 					*group;
; 1844 : 
; 1845 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  0365d	68 af 00 00 00	 push	 175			; 000000afH
  03662	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03667	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0366d	50		 push	 eax
  0366e	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03673	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1846 : 
; 1847 : 				ASSERT (result == FILE_TAG_GROUP);

  03676	83 7d e8 47	 cmp	 DWORD PTR _result$[ebp], 71 ; 00000047H
  0367a	74 1a		 je	 SHORT $LN199@parser_cam
  0367c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03681	05 6a 06 00 00	 add	 eax, 1642		; 0000066aH
  03686	50		 push	 eax
  03687	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0368c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NFHBNNJM@result?5?$DN?$DN?5FILE_TAG_GROUP@
  03691	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN199@parser_cam:

; 1848 : 
; 1849 : 				group_type = get_next_file_enum (file_ptr, entity_sub_type_group_names, NUM_ENTITY_SUB_TYPE_GROUPS);

  03696	6a 1a		 push	 26			; 0000001aH
  03698	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_group_names@@3PAPBDA ; entity_sub_type_group_names
  0369d	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  036a3	50		 push	 eax
  036a4	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  036a9	89 85 d4 f8 ff
	ff		 mov	 DWORD PTR _group_type$27[ebp], eax

; 1850 : 
; 1851 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  036af	68 af 00 00 00	 push	 175			; 000000afH
  036b4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  036b9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  036bf	50		 push	 eax
  036c0	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  036c5	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1852 : 
; 1853 : 				ASSERT (result == FILE_TAG_TYPE);

  036c8	83 7d e8 e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  036cc	74 1a		 je	 SHORT $LN200@parser_cam
  036ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  036d3	05 70 06 00 00	 add	 eax, 1648		; 00000670H
  036d8	50		 push	 eax
  036d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  036de	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  036e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN200@parser_cam:

; 1854 : 
; 1855 : 				formation_component_type = get_next_file_enum (file_ptr, formation_component_names, NUM_FORMATION_COMPONENT_TYPES);

  036e8	6a 25		 push	 37			; 00000025H
  036ea	68 00 00 00 00	 push	 OFFSET ?formation_component_names@@3PAPBDA ; formation_component_names
  036ef	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  036f5	50		 push	 eax
  036f6	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  036fb	89 85 d0 f8 ff
	ff		 mov	 DWORD PTR _formation_component_type$26[ebp], eax

; 1856 : 
; 1857 : 				if (!get_parser_keysite ())

  03701	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03708	0f 85 d8 05 00
	00		 jne	 $LN39@parser_cam

; 1858 : 				{
; 1859 : 
; 1860 : 					//
; 1861 : 					// local keysite with correct landing entity
; 1862 : 					//
; 1863 : 
; 1864 : 					ASSERT (get_parser_force ());

  0370e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  03715	75 1a		 jne	 SHORT $LN202@parser_cam
  03717	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0371c	05 7b 06 00 00	 add	 eax, 1659		; 0000067bH
  03721	50		 push	 eax
  03722	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03727	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNIOHEI@get_parser_force?5?$CI?$CJ@
  0372c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN202@parser_cam:

; 1865 : 
; 1866 : 					//
; 1867 : 					// Locate suitable free keysite
; 1868 : 					//
; 1869 : 
; 1870 : 					set_parser_keysite (get_local_entity_first_child (get_parser_force (), LIST_TYPE_KEYSITE_FORCE));

  03731	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_force@@3PAUENTITY@@A, 0 ; parser_force
  03738	74 0f		 je	 SHORT $LN355@parser_cam
  0373a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  0373f	8b 08		 mov	 ecx, DWORD PTR [eax]
  03741	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2062[ebp], ecx
  03747	eb 27		 jmp	 SHORT $LN356@parser_cam
$LN355@parser_cam:
  03749	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0374f	81 c2 81 06 00
	00		 add	 edx, 1665		; 00000681H
  03755	52		 push	 edx
  03756	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0375b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03760	50		 push	 eax
  03761	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03766	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2062[ebp], 0
$LN356@parser_cam:
  03770	b9 01 00 00 00	 mov	 ecx, 1
  03775	85 c9		 test	 ecx, ecx
  03777	74 0c		 je	 SHORT $LN357@parser_cam
  03779	c7 85 a8 f6 ff
	ff 15 00 00 00	 mov	 DWORD PTR tv2070[ebp], 21 ; 00000015H
  03783	eb 27		 jmp	 SHORT $LN358@parser_cam
$LN357@parser_cam:
  03785	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0378b	81 c2 81 06 00
	00		 add	 edx, 1665		; 00000681H
  03791	52		 push	 edx
  03792	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03797	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0379c	50		 push	 eax
  0379d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  037a2	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2070[ebp], 0
$LN358@parser_cam:
  037ac	6a 15		 push	 21			; 00000015H
  037ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_force@@3PAUENTITY@@A ; parser_force
  037b4	51		 push	 ecx
  037b5	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv2062[ebp], 180
  037bf	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv2070[ebp]
  037c5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  037cc	ff d1		 call	 ecx
  037ce	a3 00 00 00 00	 mov	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, eax ; parser_keysite
$LN38@parser_cam:

; 1871 : 
; 1872 : 					while (get_parser_keysite ())

  037d3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  037da	0f 84 06 05 00
	00		 je	 $LN39@parser_cam

; 1873 : 					{
; 1874 : 
; 1875 : 						if ((get_local_entity_int_value (get_parser_keysite (), INT_TYPE_ENTITY_SUB_TYPE) == keysite_type) &&
; 1876 : 							(get_local_entity_int_value (get_parser_keysite (), INT_TYPE_IN_USE) == FALSE) &&
; 1877 : 							(get_local_entity_int_value (get_parser_keysite (), INT_TYPE_SIDE) == faction_side) &&

  037e0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  037e7	74 0f		 je	 SHORT $LN359@parser_cam
  037e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  037ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  037f0	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2082[ebp], ecx
  037f6	eb 20		 jmp	 SHORT $LN360@parser_cam
$LN359@parser_cam:
  037f8	68 53 07 00 00	 push	 1875			; 00000753H
  037fd	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03802	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03808	52		 push	 edx
  03809	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0380e	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2082[ebp], 0
$LN360@parser_cam:
  03818	b8 01 00 00 00	 mov	 eax, 1
  0381d	85 c0		 test	 eax, eax
  0381f	74 0c		 je	 SHORT $LN361@parser_cam
  03821	c7 85 a8 f6 ff
	ff 34 00 00 00	 mov	 DWORD PTR tv2089[ebp], 52 ; 00000034H
  0382b	eb 20		 jmp	 SHORT $LN362@parser_cam
$LN361@parser_cam:
  0382d	68 53 07 00 00	 push	 1875			; 00000753H
  03832	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03837	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0383d	51		 push	 ecx
  0383e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03843	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2089[ebp], 0
$LN362@parser_cam:
  0384d	6a 34		 push	 52			; 00000034H
  0384f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03855	52		 push	 edx
  03856	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv2082[ebp], 1116
  03860	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv2089[ebp]
  03866	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0386d	ff d2		 call	 edx
  0386f	3b 85 d0 fe ff
	ff		 cmp	 eax, DWORD PTR _keysite_type$[ebp]
  03875	0f 85 c4 03 00
	00		 jne	 $LN203@parser_cam
  0387b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03882	74 0f		 je	 SHORT $LN363@parser_cam
  03884	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03889	8b 08		 mov	 ecx, DWORD PTR [eax]
  0388b	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2101[ebp], ecx
  03891	eb 20		 jmp	 SHORT $LN364@parser_cam
$LN363@parser_cam:
  03893	68 54 07 00 00	 push	 1876			; 00000754H
  03898	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0389d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  038a3	52		 push	 edx
  038a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  038a9	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2101[ebp], 0
$LN364@parser_cam:
  038b3	b8 01 00 00 00	 mov	 eax, 1
  038b8	85 c0		 test	 eax, eax
  038ba	74 0c		 je	 SHORT $LN365@parser_cam
  038bc	c7 85 a8 f6 ff
	ff 6d 00 00 00	 mov	 DWORD PTR tv2108[ebp], 109 ; 0000006dH
  038c6	eb 20		 jmp	 SHORT $LN366@parser_cam
$LN365@parser_cam:
  038c8	68 54 07 00 00	 push	 1876			; 00000754H
  038cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  038d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  038d8	51		 push	 ecx
  038d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  038de	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2108[ebp], 0
$LN366@parser_cam:
  038e8	6a 6d		 push	 109			; 0000006dH
  038ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  038f0	52		 push	 edx
  038f1	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv2101[ebp], 1116
  038fb	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv2108[ebp]
  03901	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  03908	ff d2		 call	 edx
  0390a	85 c0		 test	 eax, eax
  0390c	0f 85 2d 03 00
	00		 jne	 $LN203@parser_cam
  03912	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03919	74 0f		 je	 SHORT $LN367@parser_cam
  0391b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03920	8b 08		 mov	 ecx, DWORD PTR [eax]
  03922	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2120[ebp], ecx
  03928	eb 20		 jmp	 SHORT $LN368@parser_cam
$LN367@parser_cam:
  0392a	68 55 07 00 00	 push	 1877			; 00000755H
  0392f	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03934	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0393a	52		 push	 edx
  0393b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03940	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2120[ebp], 0
$LN368@parser_cam:
  0394a	b8 01 00 00 00	 mov	 eax, 1
  0394f	85 c0		 test	 eax, eax
  03951	74 0c		 je	 SHORT $LN369@parser_cam
  03953	c7 85 a8 f6 ff
	ff bb 00 00 00	 mov	 DWORD PTR tv2127[ebp], 187 ; 000000bbH
  0395d	eb 20		 jmp	 SHORT $LN370@parser_cam
$LN369@parser_cam:
  0395f	68 55 07 00 00	 push	 1877			; 00000755H
  03964	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03969	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0396f	51		 push	 ecx
  03970	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03975	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2127[ebp], 0
$LN370@parser_cam:
  0397f	68 bb 00 00 00	 push	 187			; 000000bbH
  03984	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  0398a	52		 push	 edx
  0398b	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv2120[ebp], 1116
  03995	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv2127[ebp]
  0399b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  039a2	ff d2		 call	 edx
  039a4	3b 85 d4 fe ff
	ff		 cmp	 eax, DWORD PTR _faction_side$[ebp]
  039aa	0f 85 8f 02 00
	00		 jne	 $LN203@parser_cam
  039b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  039b7	74 0f		 je	 SHORT $LN371@parser_cam
  039b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  039be	8b 08		 mov	 ecx, DWORD PTR [eax]
  039c0	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2140[ebp], ecx
  039c6	eb 20		 jmp	 SHORT $LN372@parser_cam
$LN371@parser_cam:
  039c8	68 56 07 00 00	 push	 1878			; 00000756H
  039cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  039d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  039d8	52		 push	 edx
  039d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  039de	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2140[ebp], 0
$LN372@parser_cam:
  039e8	b8 01 00 00 00	 mov	 eax, 1
  039ed	85 c0		 test	 eax, eax
  039ef	74 0c		 je	 SHORT $LN373@parser_cam
  039f1	c7 85 a8 f6 ff
	ff 07 00 00 00	 mov	 DWORD PTR tv2147[ebp], 7
  039fb	eb 20		 jmp	 SHORT $LN374@parser_cam
$LN373@parser_cam:
  039fd	68 56 07 00 00	 push	 1878			; 00000756H
  03a02	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03a07	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  03a0d	51		 push	 ecx
  03a0e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03a13	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2147[ebp], 0
$LN374@parser_cam:
  03a1d	6a 07		 push	 7
  03a1f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03a25	52		 push	 edx
  03a26	6b 85 ac f6 ff
	ff 34		 imul	 eax, DWORD PTR tv2140[ebp], 52
  03a2d	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv2147[ebp]
  03a33	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  03a3a	ff d2		 call	 edx
  03a3c	50		 push	 eax
  03a3d	8d 85 40 fd ff
	ff		 lea	 eax, DWORD PTR _keysite_name$[ebp]
  03a43	50		 push	 eax
  03a44	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  03a4a	83 c4 08	 add	 esp, 8
  03a4d	85 c0		 test	 eax, eax
  03a4f	0f 85 ea 01 00
	00		 jne	 $LN203@parser_cam

; 1878 : 							(strcmpi (keysite_name, get_local_entity_string (get_parser_keysite (), STRING_TYPE_KEYSITE_NAME)) == 0))
; 1879 : 						{
; 1880 : 
; 1881 : 							if (get_local_entity_int_value (get_parser_keysite (), INT_TYPE_LANDING_TYPES) != required_landing_types)

  03a55	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03a5c	74 0f		 je	 SHORT $LN375@parser_cam
  03a5e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03a63	8b 08		 mov	 ecx, DWORD PTR [eax]
  03a65	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2161[ebp], ecx
  03a6b	eb 20		 jmp	 SHORT $LN376@parser_cam
$LN375@parser_cam:
  03a6d	68 59 07 00 00	 push	 1881			; 00000759H
  03a72	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03a77	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03a7d	52		 push	 edx
  03a7e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03a83	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2161[ebp], 0
$LN376@parser_cam:
  03a8d	b8 01 00 00 00	 mov	 eax, 1
  03a92	85 c0		 test	 eax, eax
  03a94	74 0c		 je	 SHORT $LN377@parser_cam
  03a96	c7 85 a8 f6 ff
	ff 77 00 00 00	 mov	 DWORD PTR tv2168[ebp], 119 ; 00000077H
  03aa0	eb 20		 jmp	 SHORT $LN378@parser_cam
$LN377@parser_cam:
  03aa2	68 59 07 00 00	 push	 1881			; 00000759H
  03aa7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03aac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  03ab2	51		 push	 ecx
  03ab3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03ab8	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2168[ebp], 0
$LN378@parser_cam:
  03ac2	6a 77		 push	 119			; 00000077H
  03ac4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03aca	52		 push	 edx
  03acb	69 85 ac f6 ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv2161[ebp], 1116
  03ad5	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv2168[ebp]
  03adb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  03ae2	ff d2		 call	 edx

; 1882 : 							{
; 1883 : 
; 1884 : 								#if DEBUG_MODULE
; 1885 : 
; 1886 : 								debug_log ("PARSER: warning ! keysite landing types not fully used");
; 1887 : 
; 1888 : 								#endif
; 1889 : 							}
; 1890 : 
; 1891 : 							//
; 1892 : 							// DONT mark Keysite as used (do it after it has Actually been used!)
; 1893 : 							// set_local_entity_int_value (keysite, INT_TYPE_IN_USE, TRUE);
; 1894 : 							//
; 1895 : 
; 1896 : 							set_local_entity_float_value (get_parser_keysite (), FLOAT_TYPE_AMMO_SUPPLY_LEVEL, keysite_ammo_supplies);

  03ae4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03aeb	74 0f		 je	 SHORT $LN379@parser_cam
  03aed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03af2	8b 08		 mov	 ecx, DWORD PTR [eax]
  03af4	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2181[ebp], ecx
  03afa	eb 27		 jmp	 SHORT $LN380@parser_cam
$LN379@parser_cam:
  03afc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03b02	81 c2 9b 06 00
	00		 add	 edx, 1691		; 0000069bH
  03b08	52		 push	 edx
  03b09	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03b0e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03b13	50		 push	 eax
  03b14	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03b19	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2181[ebp], 0
$LN380@parser_cam:
  03b23	b9 01 00 00 00	 mov	 ecx, 1
  03b28	85 c9		 test	 ecx, ecx
  03b2a	74 0c		 je	 SHORT $LN381@parser_cam
  03b2c	c7 85 a8 f6 ff
	ff 08 00 00 00	 mov	 DWORD PTR tv2189[ebp], 8
  03b36	eb 27		 jmp	 SHORT $LN382@parser_cam
$LN381@parser_cam:
  03b38	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03b3e	81 c2 9b 06 00
	00		 add	 edx, 1691		; 0000069bH
  03b44	52		 push	 edx
  03b45	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03b4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  03b4f	50		 push	 eax
  03b50	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03b55	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2189[ebp], 0
$LN382@parser_cam:
  03b5f	51		 push	 ecx
  03b60	f3 0f 10 85 c0
	fe ff ff	 movss	 xmm0, DWORD PTR _keysite_ammo_supplies$[ebp]
  03b68	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03b6d	6a 08		 push	 8
  03b6f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03b75	51		 push	 ecx
  03b76	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv2181[ebp], 700
  03b80	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv2189[ebp]
  03b86	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  03b8d	ff d1		 call	 ecx

; 1897 : 
; 1898 : 							set_local_entity_float_value (get_parser_keysite (), FLOAT_TYPE_FUEL_SUPPLY_LEVEL, keysite_fuel_supplies);

  03b8f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03b96	74 0f		 je	 SHORT $LN383@parser_cam
  03b98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03b9d	8b 08		 mov	 ecx, DWORD PTR [eax]
  03b9f	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2201[ebp], ecx
  03ba5	eb 27		 jmp	 SHORT $LN384@parser_cam
$LN383@parser_cam:
  03ba7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03bad	81 c2 9d 06 00
	00		 add	 edx, 1693		; 0000069dH
  03bb3	52		 push	 edx
  03bb4	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03bb9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03bbe	50		 push	 eax
  03bbf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03bc4	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2201[ebp], 0
$LN384@parser_cam:
  03bce	b9 01 00 00 00	 mov	 ecx, 1
  03bd3	85 c9		 test	 ecx, ecx
  03bd5	74 0c		 je	 SHORT $LN385@parser_cam
  03bd7	c7 85 a8 f6 ff
	ff 30 00 00 00	 mov	 DWORD PTR tv2209[ebp], 48 ; 00000030H
  03be1	eb 27		 jmp	 SHORT $LN386@parser_cam
$LN385@parser_cam:
  03be3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03be9	81 c2 9d 06 00
	00		 add	 edx, 1693		; 0000069dH
  03bef	52		 push	 edx
  03bf0	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03bf5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  03bfa	50		 push	 eax
  03bfb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03c00	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2209[ebp], 0
$LN386@parser_cam:
  03c0a	51		 push	 ecx
  03c0b	f3 0f 10 85 c4
	fe ff ff	 movss	 xmm0, DWORD PTR _keysite_fuel_supplies$[ebp]
  03c13	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  03c18	6a 30		 push	 48			; 00000030H
  03c1a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03c20	51		 push	 ecx
  03c21	69 95 ac f6 ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv2201[ebp], 700
  03c2b	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv2209[ebp]
  03c31	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  03c38	ff d1		 call	 ecx

; 1899 : 
; 1900 : 							break;

  03c3a	e9 a7 00 00 00	 jmp	 $LN39@parser_cam
$LN203@parser_cam:

; 1901 : 						}
; 1902 : 
; 1903 : 						set_parser_keysite (get_local_entity_child_succ (get_parser_keysite (), LIST_TYPE_KEYSITE_FORCE));

  03c3f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03c46	74 0f		 je	 SHORT $LN387@parser_cam
  03c48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03c4d	8b 08		 mov	 ecx, DWORD PTR [eax]
  03c4f	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2221[ebp], ecx
  03c55	eb 27		 jmp	 SHORT $LN388@parser_cam
$LN387@parser_cam:
  03c57	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03c5d	81 c2 a2 06 00
	00		 add	 edx, 1698		; 000006a2H
  03c63	52		 push	 edx
  03c64	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03c69	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03c6e	50		 push	 eax
  03c6f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03c74	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2221[ebp], 0
$LN388@parser_cam:
  03c7e	b9 01 00 00 00	 mov	 ecx, 1
  03c83	85 c9		 test	 ecx, ecx
  03c85	74 0c		 je	 SHORT $LN389@parser_cam
  03c87	c7 85 a8 f6 ff
	ff 15 00 00 00	 mov	 DWORD PTR tv2229[ebp], 21 ; 00000015H
  03c91	eb 27		 jmp	 SHORT $LN390@parser_cam
$LN389@parser_cam:
  03c93	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03c99	81 c2 a2 06 00
	00		 add	 edx, 1698		; 000006a2H
  03c9f	52		 push	 edx
  03ca0	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03ca5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  03caa	50		 push	 eax
  03cab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03cb0	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2229[ebp], 0
$LN390@parser_cam:
  03cba	6a 15		 push	 21			; 00000015H
  03cbc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03cc2	51		 push	 ecx
  03cc3	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv2221[ebp], 180
  03ccd	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv2229[ebp]
  03cd3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  03cda	ff d1		 call	 ecx
  03cdc	a3 00 00 00 00	 mov	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, eax ; parser_keysite

; 1904 : 					}

  03ce1	e9 ed fa ff ff	 jmp	 $LN38@parser_cam
$LN39@parser_cam:

; 1905 : 				}
; 1906 : 
; 1907 :   				if (!get_parser_keysite ())

  03ce6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_keysite@@3PAUENTITY@@A, 0 ; parser_keysite
  03ced	75 22		 jne	 SHORT $LN205@parser_cam

; 1908 : 				{
; 1909 : 
; 1910 : 					debug_fatal ("PARSER: campaign load: Side %s - Can't locate keysite %s", entity_side_short_names [faction_side], keysite_name);

  03cef	8d 85 40 fd ff
	ff		 lea	 eax, DWORD PTR _keysite_name$[ebp]
  03cf5	50		 push	 eax
  03cf6	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _faction_side$[ebp]
  03cfc	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?entity_side_short_names@@3PAPBDA[ecx*4]
  03d03	52		 push	 edx
  03d04	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@KGKGPCAF@PARSER?3?5campaign?5load?3?5Side?5?$CFs?5@
  03d09	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  03d0e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN205@parser_cam:

; 1911 : 				}
; 1912 : 
; 1913 : 				group = create_landed_faction_group (get_parser_keysite (), group_type, (formation_component_types) formation_component_type);

  03d11	8b 85 d0 f8 ff
	ff		 mov	 eax, DWORD PTR _formation_component_type$26[ebp]
  03d17	50		 push	 eax
  03d18	8b 8d d4 f8 ff
	ff		 mov	 ecx, DWORD PTR _group_type$27[ebp]
  03d1e	51		 push	 ecx
  03d1f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?parser_keysite@@3PAUENTITY@@A ; parser_keysite
  03d25	52		 push	 edx
  03d26	e8 00 00 00 00	 call	 ?create_landed_faction_group@@YGPAUENTITY@@PAU1@HW4FORMATION_COMPONENT_TYPES@@@Z ; create_landed_faction_group
  03d2b	89 85 cc f8 ff
	ff		 mov	 DWORD PTR _group$25[ebp], eax

; 1914 : 
; 1915 : 				#if DEBUG_MODULE
; 1916 : 
; 1917 : 				debug_log ("PARSER: campaign load: create group, keysite %d, formation component type %s, entity type %d, member type %d, count %d",
; 1918 : 				get_parser_keysite (),
; 1919 : 				formation_component_names [formation_component_type],
; 1920 : 				member_type,
; 1921 : 				count);
; 1922 : 
; 1923 : 				#endif
; 1924 : 
; 1925 : 				break;

  03d31	e9 e6 09 00 00	 jmp	 $LN4@parser_cam
$LN206@parser_cam:

; 1926 : 			}
; 1927 : 
; 1928 : 			case FILE_TAG_CREATE_TASK:
; 1929 : 			{
; 1930 : 
; 1931 : 				vec3d
; 1932 : 					*wp_nodes;
; 1933 : 
; 1934 : 				movement_types
; 1935 : 					movement_type;
; 1936 : 
; 1937 : 				entity
; 1938 : 					*wp,
; 1939 : 					*group_en,
; 1940 : 					*new_task;
; 1941 : 
; 1942 : 				entity_sub_types
; 1943 : 					task_type,
; 1944 : 					*wp_types;
; 1945 : 
; 1946 : 				entity_sides
; 1947 : 					side;
; 1948 : 
; 1949 : 				float
; 1950 : 					*wp_radius,
; 1951 : 					start_time,
; 1952 : 					stop_time,
; 1953 : 					expire_time;
; 1954 : 
; 1955 : 				int
; 1956 : //					*wp_criteria,
; 1957 : 					*wp_delta_time,
; 1958 : 					count,
; 1959 : 					wp_count;
; 1960 : 
; 1961 : 				ASSERT (get_parser_member ());

  03d36	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_member@@3PAUENTITY@@A, 0 ; parser_member
  03d3d	75 1a		 jne	 SHORT $LN207@parser_cam
  03d3f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03d44	05 dc 06 00 00	 add	 eax, 1756		; 000006dcH
  03d49	50		 push	 eax
  03d4a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03d4f	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@NEMFAJIH@get_parser_member?5?$CI?$CJ@
  03d54	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN207@parser_cam:

; 1962 : 
; 1963 : 				group_en = get_local_entity_parent (get_parser_member (), LIST_TYPE_MEMBER);

  03d59	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?parser_member@@3PAUENTITY@@A, 0 ; parser_member
  03d60	74 0f		 je	 SHORT $LN391@parser_cam
  03d62	a1 00 00 00 00	 mov	 eax, DWORD PTR ?parser_member@@3PAUENTITY@@A ; parser_member
  03d67	8b 08		 mov	 ecx, DWORD PTR [eax]
  03d69	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2256[ebp], ecx
  03d6f	eb 27		 jmp	 SHORT $LN392@parser_cam
$LN391@parser_cam:
  03d71	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03d77	81 c2 de 06 00
	00		 add	 edx, 1758		; 000006deH
  03d7d	52		 push	 edx
  03d7e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03d83	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  03d88	50		 push	 eax
  03d89	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03d8e	c7 85 ac f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2256[ebp], 0
$LN392@parser_cam:
  03d98	b9 01 00 00 00	 mov	 ecx, 1
  03d9d	85 c9		 test	 ecx, ecx
  03d9f	74 0c		 je	 SHORT $LN393@parser_cam
  03da1	c7 85 a8 f6 ff
	ff 19 00 00 00	 mov	 DWORD PTR tv2264[ebp], 25 ; 00000019H
  03dab	eb 27		 jmp	 SHORT $LN394@parser_cam
$LN393@parser_cam:
  03dad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03db3	81 c2 de 06 00
	00		 add	 edx, 1758		; 000006deH
  03db9	52		 push	 edx
  03dba	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03dbf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  03dc4	50		 push	 eax
  03dc5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  03dca	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2264[ebp], 0
$LN394@parser_cam:
  03dd4	6a 19		 push	 25			; 00000019H
  03dd6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?parser_member@@3PAUENTITY@@A ; parser_member
  03ddc	51		 push	 ecx
  03ddd	69 95 ac f6 ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv2256[ebp], 180
  03de7	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv2264[ebp]
  03ded	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  03df4	ff d1		 call	 ecx
  03df6	89 85 bc f8 ff
	ff		 mov	 DWORD PTR _group_en$21[ebp], eax

; 1964 : 
; 1965 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03dfc	68 af 00 00 00	 push	 175			; 000000afH
  03e01	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03e06	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03e0c	50		 push	 eax
  03e0d	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03e12	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1966 : 				ASSERT (result == FILE_TAG_TYPE);

  03e15	83 7d e8 e6	 cmp	 DWORD PTR _result$[ebp], -26 ; ffffffe6H
  03e19	74 1a		 je	 SHORT $LN208@parser_cam
  03e1b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03e20	05 e1 06 00 00	 add	 eax, 1761		; 000006e1H
  03e25	50		 push	 eax
  03e26	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03e2b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NHAOLFJJ@result?5?$DN?$DN?5FILE_TAG_TYPE@
  03e30	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN208@parser_cam:

; 1967 : 				task_type = get_next_file_enum (file_ptr, entity_sub_type_task_names, NUM_ENTITY_SUB_TYPE_TASKS);

  03e35	6a 1e		 push	 30			; 0000001eH
  03e37	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_task_names@@3PAPBDA ; entity_sub_type_task_names
  03e3c	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03e42	50		 push	 eax
  03e43	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  03e48	89 85 b4 f8 ff
	ff		 mov	 DWORD PTR _task_type$19[ebp], eax

; 1968 : 
; 1969 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03e4e	68 af 00 00 00	 push	 175			; 000000afH
  03e53	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03e58	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03e5e	50		 push	 eax
  03e5f	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03e64	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1970 : 				ASSERT (result == FILE_TAG_SIDE);

  03e67	81 7d e8 94 00
	00 00		 cmp	 DWORD PTR _result$[ebp], 148 ; 00000094H
  03e6e	74 1a		 je	 SHORT $LN209@parser_cam
  03e70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03e75	05 e5 06 00 00	 add	 eax, 1765		; 000006e5H
  03e7a	50		 push	 eax
  03e7b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03e80	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@COBIDFLK@result?5?$DN?$DN?5FILE_TAG_SIDE@
  03e85	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN209@parser_cam:

; 1971 : 				side = (entity_sides) get_next_file_enum (file_ptr, entity_side_names, NUM_ENTITY_SIDES);

  03e8a	6a 03		 push	 3
  03e8c	68 00 00 00 00	 push	 OFFSET ?entity_side_names@@3PAPBDA ; entity_side_names
  03e91	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03e97	50		 push	 eax
  03e98	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  03e9d	89 85 ac f8 ff
	ff		 mov	 DWORD PTR _side$17[ebp], eax

; 1972 : 
; 1973 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03ea3	68 af 00 00 00	 push	 175			; 000000afH
  03ea8	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03ead	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03eb3	50		 push	 eax
  03eb4	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03eb9	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1974 : 				ASSERT (result == FILE_TAG_MOVEMENT);

  03ebc	83 7d e8 66	 cmp	 DWORD PTR _result$[ebp], 102 ; 00000066H
  03ec0	74 1a		 je	 SHORT $LN210@parser_cam
  03ec2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03ec7	05 e9 06 00 00	 add	 eax, 1769		; 000006e9H
  03ecc	50		 push	 eax
  03ecd	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03ed2	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PEPEANPN@result?5?$DN?$DN?5FILE_TAG_MOVEMENT@
  03ed7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN210@parser_cam:

; 1975 : 				movement_type = (movement_types) get_next_file_enum (file_ptr, movement_names, NUM_MOVEMENT_TYPES);

  03edc	6a 05		 push	 5
  03ede	68 00 00 00 00	 push	 OFFSET ?movement_names@@3PAPBDA ; movement_names
  03ee3	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03ee9	50		 push	 eax
  03eea	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  03eef	89 85 c4 f8 ff
	ff		 mov	 DWORD PTR _movement_type$23[ebp], eax

; 1976 : 
; 1977 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03ef5	68 af 00 00 00	 push	 175			; 000000afH
  03efa	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03eff	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03f05	50		 push	 eax
  03f06	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03f0b	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1978 : 				//ASSERT (result == FILE_TAG_TIME);
; 1979 : 				start_time = get_next_file_float (file_ptr);

  03f0e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03f14	50		 push	 eax
  03f15	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  03f1a	d9 9d a4 f8 ff
	ff		 fstp	 DWORD PTR _start_time$15[ebp]

; 1980 : 
; 1981 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03f20	68 af 00 00 00	 push	 175			; 000000afH
  03f25	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03f2a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03f30	50		 push	 eax
  03f31	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03f36	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1982 : 				//ASSERT (result == FILE_TAG_TIME);
; 1983 : 				stop_time = get_next_file_float (file_ptr);

  03f39	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03f3f	50		 push	 eax
  03f40	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  03f45	d9 9d a0 f8 ff
	ff		 fstp	 DWORD PTR _stop_time$14[ebp]

; 1984 : 
; 1985 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03f4b	68 af 00 00 00	 push	 175			; 000000afH
  03f50	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03f55	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03f5b	50		 push	 eax
  03f5c	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03f61	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1986 : 				//ASSERT (result == FILE_TAG_TIME);
; 1987 : 				expire_time = get_next_file_float (file_ptr);

  03f64	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03f6a	50		 push	 eax
  03f6b	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  03f70	d9 9d 9c f8 ff
	ff		 fstp	 DWORD PTR _expire_time$13[ebp]

; 1988 : 
; 1989 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03f76	68 af 00 00 00	 push	 175			; 000000afH
  03f7b	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03f80	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03f86	50		 push	 eax
  03f87	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03f8c	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1990 : 				ASSERT (result == FILE_TAG_CREATE_WAYPOINT);

  03f8f	83 7d e8 17	 cmp	 DWORD PTR _result$[ebp], 23 ; 00000017H
  03f93	74 1a		 je	 SHORT $LN211@parser_cam
  03f95	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03f9a	05 f9 06 00 00	 add	 eax, 1785		; 000006f9H
  03f9f	50		 push	 eax
  03fa0	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03fa5	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OIMLNAEI@result?5?$DN?$DN?5FILE_TAG_CREATE_WAYPO@
  03faa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN211@parser_cam:

; 1991 : 
; 1992 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  03faf	68 af 00 00 00	 push	 175			; 000000afH
  03fb4	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  03fb9	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03fbf	50		 push	 eax
  03fc0	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  03fc5	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 1993 : 				ASSERT (result == FILE_TAG_COUNT);

  03fc8	83 7d e8 12	 cmp	 DWORD PTR _result$[ebp], 18 ; 00000012H
  03fcc	74 1a		 je	 SHORT $LN212@parser_cam
  03fce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  03fd3	05 fc 06 00 00	 add	 eax, 1788		; 000006fcH
  03fd8	50		 push	 eax
  03fd9	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  03fde	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JNCLPCNH@result?5?$DN?$DN?5FILE_TAG_COUNT@
  03fe3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN212@parser_cam:

; 1994 : 
; 1995 : 				wp_count = get_next_file_int (file_ptr);

  03fe8	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  03fee	50		 push	 eax
  03fef	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  03ff4	89 85 90 f8 ff
	ff		 mov	 DWORD PTR _wp_count$10[ebp], eax

; 1996 : 				wp_nodes = (vec3d *) malloc_heap_mem (sizeof (vec3d) * wp_count);

  03ffa	6b 85 90 f8 ff
	ff 0c		 imul	 eax, DWORD PTR _wp_count$10[ebp], 12
  04001	50		 push	 eax
  04002	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  04007	89 85 c8 f8 ff
	ff		 mov	 DWORD PTR _wp_nodes$24[ebp], eax

; 1997 : 				wp_types = (entity_sub_types *) malloc_heap_mem (sizeof (entity_sub_types) * wp_count);

  0400d	8b 85 90 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_count$10[ebp]
  04013	c1 e0 02	 shl	 eax, 2
  04016	50		 push	 eax
  04017	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0401c	89 85 b0 f8 ff
	ff		 mov	 DWORD PTR _wp_types$18[ebp], eax

; 1998 : 				wp_radius = (float *) malloc_heap_mem (sizeof (float) * wp_count);

  04022	8b 85 90 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_count$10[ebp]
  04028	c1 e0 02	 shl	 eax, 2
  0402b	50		 push	 eax
  0402c	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  04031	89 85 a8 f8 ff
	ff		 mov	 DWORD PTR _wp_radius$16[ebp], eax

; 1999 : //				wp_criteria = (int *) malloc_heap_mem (sizeof (int) * wp_count);
; 2000 : 				wp_delta_time = (int *) malloc_heap_mem (sizeof (int) * wp_count);

  04037	8b 85 90 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_count$10[ebp]
  0403d	c1 e0 02	 shl	 eax, 2
  04040	50		 push	 eax
  04041	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  04046	89 85 98 f8 ff
	ff		 mov	 DWORD PTR _wp_delta_time$12[ebp], eax

; 2001 : 
; 2002 : 				memset (wp_nodes, 0, sizeof (vec3d) * wp_count);

  0404c	6b 85 90 f8 ff
	ff 0c		 imul	 eax, DWORD PTR _wp_count$10[ebp], 12
  04053	50		 push	 eax
  04054	6a 00		 push	 0
  04056	8b 8d c8 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_nodes$24[ebp]
  0405c	51		 push	 ecx
  0405d	e8 00 00 00 00	 call	 _memset
  04062	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2003 : 				memset (wp_types, 0, sizeof (entity_sub_types) * wp_count);

  04065	8b 85 90 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_count$10[ebp]
  0406b	c1 e0 02	 shl	 eax, 2
  0406e	50		 push	 eax
  0406f	6a 00		 push	 0
  04071	8b 8d b0 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_types$18[ebp]
  04077	51		 push	 ecx
  04078	e8 00 00 00 00	 call	 _memset
  0407d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2004 : 				memset (wp_radius, 0, sizeof (float) * wp_count);

  04080	8b 85 90 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_count$10[ebp]
  04086	c1 e0 02	 shl	 eax, 2
  04089	50		 push	 eax
  0408a	6a 00		 push	 0
  0408c	8b 8d a8 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_radius$16[ebp]
  04092	51		 push	 ecx
  04093	e8 00 00 00 00	 call	 _memset
  04098	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2005 : //				memset (wp_criteria, 0, sizeof (int) * wp_count);
; 2006 : 				memset (wp_delta_time, 0, sizeof (int) * wp_count);

  0409b	8b 85 90 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_count$10[ebp]
  040a1	c1 e0 02	 shl	 eax, 2
  040a4	50		 push	 eax
  040a5	6a 00		 push	 0
  040a7	8b 8d 98 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_delta_time$12[ebp]
  040ad	51		 push	 ecx
  040ae	e8 00 00 00 00	 call	 _memset
  040b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2007 : 
; 2008 : 				wp_count = -1;

  040b6	c7 85 90 f8 ff
	ff ff ff ff ff	 mov	 DWORD PTR _wp_count$10[ebp], -1

; 2009 : 
; 2010 : 				end_wp = FALSE;

  040c0	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _end_wp$[ebp], 0
$LN40@parser_cam:

; 2011 : 
; 2012 : 				while ((!end_wp) && (check_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG) != FILE_TAG_TEXT_END))

  040ca	83 bd dc fe ff
	ff 00		 cmp	 DWORD PTR _end_wp$[ebp], 0
  040d1	0f 85 e2 01 00
	00		 jne	 $LN41@parser_cam
  040d7	68 af 00 00 00	 push	 175			; 000000afH
  040dc	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  040e1	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  040e7	50		 push	 eax
  040e8	e8 00 00 00 00	 call	 ?check_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; check_next_file_tag
  040ed	3d 9f 00 00 00	 cmp	 eax, 159		; 0000009fH
  040f2	0f 84 c1 01 00
	00		 je	 $LN41@parser_cam

; 2013 : 				{
; 2014 : 
; 2015 : 					result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  040f8	68 af 00 00 00	 push	 175			; 000000afH
  040fd	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  04102	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  04108	50		 push	 eax
  04109	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  0410e	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 2016 : 
; 2017 : 					switch (result)

  04111	8b 45 e8	 mov	 eax, DWORD PTR _result$[ebp]
  04114	89 85 ac f6 ff
	ff		 mov	 DWORD PTR tv2449[ebp], eax
  0411a	8b 8d ac f6 ff
	ff		 mov	 ecx, DWORD PTR tv2449[ebp]
  04120	83 c1 1a	 add	 ecx, 26			; 0000001aH
  04123	89 8d ac f6 ff
	ff		 mov	 DWORD PTR tv2449[ebp], ecx
  04129	81 bd ac f6 ff
	ff b9 00 00 00	 cmp	 DWORD PTR tv2449[ebp], 185 ; 000000b9H
  04133	0f 87 7b 01 00
	00		 ja	 $LN42@parser_cam
  04139	8b 95 ac f6 ff
	ff		 mov	 edx, DWORD PTR tv2449[ebp]
  0413f	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN398@parser_cam[edx]
  04146	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN402@parser_cam[eax*4]
$LN213@parser_cam:

; 2018 : 					{
; 2019 : 
; 2020 : 						case FILE_TAG_TYPE:
; 2021 : 						{
; 2022 : 
; 2023 : 							wp_count ++;

  0414d	8b 85 90 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_count$10[ebp]
  04153	83 c0 01	 add	 eax, 1
  04156	89 85 90 f8 ff
	ff		 mov	 DWORD PTR _wp_count$10[ebp], eax

; 2024 : 
; 2025 : 							wp_types [wp_count] = get_next_file_enum (file_ptr, entity_sub_type_waypoint_names, NUM_ENTITY_SUB_TYPE_WAYPOINTS);

  0415c	6a 25		 push	 37			; 00000025H
  0415e	68 00 00 00 00	 push	 OFFSET ?entity_sub_type_waypoint_names@@3PAPBDA ; entity_sub_type_waypoint_names
  04163	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  04169	50		 push	 eax
  0416a	e8 00 00 00 00	 call	 ?get_next_file_enum@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_enum
  0416f	8b 8d 90 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_count$10[ebp]
  04175	8b 95 b0 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_types$18[ebp]
  0417b	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 2026 : 
; 2027 : 							break;

  0417e	e9 31 01 00 00	 jmp	 $LN42@parser_cam
$LN214@parser_cam:

; 2028 : 						}
; 2029 : 
; 2030 : 						case FILE_TAG_POSITION:
; 2031 : 						{
; 2032 : 
; 2033 : 							ASSERT (wp_count >= 0);

  04183	83 bd 90 f8 ff
	ff 00		 cmp	 DWORD PTR _wp_count$10[ebp], 0
  0418a	7d 1a		 jge	 SHORT $LN215@parser_cam
  0418c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  04191	05 24 07 00 00	 add	 eax, 1828		; 00000724H
  04196	50		 push	 eax
  04197	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0419c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CHKCBKBF@wp_count?5?$DO?$DN?50@
  041a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN215@parser_cam:

; 2034 : 
; 2035 : 							wp_nodes [wp_count].x = get_next_file_float (file_ptr);

  041a6	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  041ac	50		 push	 eax
  041ad	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  041b2	6b 8d 90 f8 ff
	ff 0c		 imul	 ecx, DWORD PTR _wp_count$10[ebp], 12
  041b9	8b 95 c8 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_nodes$24[ebp]
  041bf	d9 1c 0a	 fstp	 DWORD PTR [edx+ecx]

; 2036 : 							wp_nodes [wp_count].y = get_next_file_float (file_ptr);

  041c2	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  041c8	50		 push	 eax
  041c9	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  041ce	6b 8d 90 f8 ff
	ff 0c		 imul	 ecx, DWORD PTR _wp_count$10[ebp], 12
  041d5	8b 95 c8 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_nodes$24[ebp]
  041db	d9 5c 0a 04	 fstp	 DWORD PTR [edx+ecx+4]

; 2037 : 							wp_nodes [wp_count].z = get_next_file_float (file_ptr);

  041df	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  041e5	50		 push	 eax
  041e6	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  041eb	6b 8d 90 f8 ff
	ff 0c		 imul	 ecx, DWORD PTR _wp_count$10[ebp], 12
  041f2	8b 95 c8 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_nodes$24[ebp]
  041f8	d9 5c 0a 08	 fstp	 DWORD PTR [edx+ecx+8]

; 2038 : 
; 2039 : 							break;

  041fc	e9 b3 00 00 00	 jmp	 $LN42@parser_cam
$LN216@parser_cam:

; 2040 : 						}
; 2041 : /*
; 2042 : 						case FILE_TAG_CRITERIA:
; 2043 : 						{
; 2044 : 
; 2045 : 							ASSERT (wp_count >= 0);
; 2046 : 
; 2047 : 							wp_criteria [wp_count] |= (1 << (get_next_file_enum (file_ptr, waypoint_criteria_names, NUM_WAYPOINT_CRITERIA_TYPES) - 1));
; 2048 : 
; 2049 : 							break;
; 2050 : 						}
; 2051 : 
; 2052 : */						case FILE_TAG_RADIUS:
; 2053 : 						{
; 2054 : 
; 2055 : 							ASSERT (wp_count >= 0);

  04201	83 bd 90 f8 ff
	ff 00		 cmp	 DWORD PTR _wp_count$10[ebp], 0
  04208	7d 1a		 jge	 SHORT $LN217@parser_cam
  0420a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0420f	05 3a 07 00 00	 add	 eax, 1850		; 0000073aH
  04214	50		 push	 eax
  04215	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0421a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CHKCBKBF@wp_count?5?$DO?$DN?50@
  0421f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN217@parser_cam:

; 2056 : 
; 2057 : 							wp_radius [wp_count] = get_next_file_float (file_ptr);

  04224	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0422a	50		 push	 eax
  0422b	e8 00 00 00 00	 call	 ?get_next_file_float@@YGMPAU_iobuf@@@Z ; get_next_file_float
  04230	8b 8d 90 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_count$10[ebp]
  04236	8b 95 a8 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_radius$16[ebp]
  0423c	d9 1c 8a	 fstp	 DWORD PTR [edx+ecx*4]

; 2058 : 
; 2059 : 							break;

  0423f	eb 73		 jmp	 SHORT $LN42@parser_cam
$LN218@parser_cam:

; 2060 : 						}
; 2061 : 
; 2062 : 						case FILE_TAG_DELTA_TIME:
; 2063 : 						{
; 2064 : 
; 2065 : 							ASSERT (wp_count >= 0);

  04241	83 bd 90 f8 ff
	ff 00		 cmp	 DWORD PTR _wp_count$10[ebp], 0
  04248	7d 1a		 jge	 SHORT $LN219@parser_cam
  0424a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0424f	05 44 07 00 00	 add	 eax, 1860		; 00000744H
  04254	50		 push	 eax
  04255	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0425a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CHKCBKBF@wp_count?5?$DO?$DN?50@
  0425f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN219@parser_cam:

; 2066 : 
; 2067 : 							wp_delta_time [wp_count] = get_next_file_int (file_ptr) * TIME_1_SECOND;

  04264	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0426a	50		 push	 eax
  0426b	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  04270	69 c8 e8 03 00
	00		 imul	 ecx, eax, 1000
  04276	8b 95 90 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_count$10[ebp]
  0427c	8b 85 98 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_delta_time$12[ebp]
  04282	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 2068 : 
; 2069 : 							break;

  04285	eb 2d		 jmp	 SHORT $LN42@parser_cam
$LN220@parser_cam:

; 2070 : 						}
; 2071 : 
; 2072 : 						case FILE_TAG_TEXT_END:
; 2073 : 						{
; 2074 : 
; 2075 : 							ASSERT (wp_count >= 0);

  04287	83 bd 90 f8 ff
	ff 00		 cmp	 DWORD PTR _wp_count$10[ebp], 0
  0428e	7d 1a		 jge	 SHORT $LN221@parser_cam
  04290	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  04295	05 4e 07 00 00	 add	 eax, 1870		; 0000074eH
  0429a	50		 push	 eax
  0429b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  042a0	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CHKCBKBF@wp_count?5?$DO?$DN?50@
  042a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN221@parser_cam:

; 2076 : 
; 2077 : 							end_wp = TRUE;

  042aa	c7 85 dc fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _end_wp$[ebp], 1
$LN42@parser_cam:

; 2078 : 
; 2079 : 							break;
; 2080 : 						}
; 2081 : 					}
; 2082 : 				}

  042b4	e9 11 fe ff ff	 jmp	 $LN40@parser_cam
$LN41@parser_cam:

; 2083 : 
; 2084 : 				new_task = create_task (task_type,

  042b9	6a 00		 push	 0
  042bb	6a 25		 push	 37			; 00000025H
  042bd	6a 00		 push	 0
  042bf	68 00 00 00 00	 push	 OFFSET ?terminator_point@@3UVEC3D@@A ; terminator_point
  042c4	6a 02		 push	 2
  042c6	b8 04 00 00 00	 mov	 eax, 4
  042cb	6b c8 00	 imul	 ecx, eax, 0
  042ce	8b 95 b0 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_types$18[ebp]
  042d4	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  042d7	50		 push	 eax
  042d8	6a 00		 push	 0
  042da	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  042df	6b d1 00	 imul	 edx, ecx, 0
  042e2	03 95 c8 f8 ff
	ff		 add	 edx, DWORD PTR _wp_nodes$24[ebp]
  042e8	52		 push	 edx
  042e9	51		 push	 ecx
  042ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  042f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  042f7	8b 85 bc f8 ff
	ff		 mov	 eax, DWORD PTR _group_en$21[ebp]
  042fd	50		 push	 eax
  042fe	51		 push	 ecx
  042ff	0f 57 c0	 xorps	 xmm0, xmm0
  04302	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  04307	51		 push	 ecx
  04308	f3 0f 10 85 9c
	f8 ff ff	 movss	 xmm0, DWORD PTR _expire_time$13[ebp]
  04310	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  04315	6a 01		 push	 1
  04317	6a 00		 push	 0
  04319	6a 00		 push	 0
  0431b	6a 00		 push	 0
  0431d	8b 8d c4 f8 ff
	ff		 mov	 ecx, DWORD PTR _movement_type$23[ebp]
  04323	51		 push	 ecx
  04324	8b 95 ac f8 ff
	ff		 mov	 edx, DWORD PTR _side$17[ebp]
  0432a	52		 push	 edx
  0432b	8b 85 b4 f8 ff
	ff		 mov	 eax, DWORD PTR _task_type$19[ebp]
  04331	50		 push	 eax
  04332	e8 00 00 00 00	 call	 ?create_task@@YAPAUENTITY@@HW4ENTITY_SIDES@@W4MOVEMENT_TYPES@@PAU1@22HMM2MZZ ; create_task
  04337	83 c4 4c	 add	 esp, 76			; 0000004cH
  0433a	89 85 b8 f8 ff
	ff		 mov	 DWORD PTR _new_task$20[ebp], eax

; 2085 : 									side,
; 2086 : 									movement_type,
; 2087 : 									NULL,
; 2088 : 									NULL,
; 2089 : 									NULL,
; 2090 : 									TRUE,
; 2091 : 									expire_time,
; 2092 : 									0.0,
; 2093 : 									group_en,
; 2094 : 									10.0,
; 2095 : 									&wp_nodes [0], NULL, wp_types [0], FORMATION_ROW_LEFT,
; 2096 : 									&terminator_point, NULL, NUM_ENTITY_SUB_TYPE_WAYPOINTS, FORMATION_NONE);
; 2097 : 
; 2098 : 				count = 0;

  04340	c7 85 94 f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _count$11[ebp], 0

; 2099 : 
; 2100 : 				wp = NULL;

  0434a	c7 85 c0 f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wp$22[ebp], 0
$LN44@parser_cam:

; 2101 : 
; 2102 : 				while (count <= wp_count)

  04354	8b 85 94 f8 ff
	ff		 mov	 eax, DWORD PTR _count$11[ebp]
  0435a	3b 85 90 f8 ff
	ff		 cmp	 eax, DWORD PTR _wp_count$10[ebp]
  04360	0f 8f ca 00 00
	00		 jg	 $LN45@parser_cam

; 2103 : 				{
; 2104 : 					wp = create_local_entity

  04366	6a 00		 push	 0
  04368	6a 00		 push	 0
  0436a	6a 03		 push	 3
  0436c	6a 07		 push	 7
  0436e	6b 85 94 f8 ff
	ff 0c		 imul	 eax, DWORD PTR _count$11[ebp], 12
  04375	8b 8d c8 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_nodes$24[ebp]
  0437b	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  04381	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  04385	83 ec 08	 sub	 esp, 8
  04388	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0438d	6b 95 94 f8 ff
	ff 0c		 imul	 edx, DWORD PTR _count$11[ebp], 12
  04394	8b 85 c8 f8 ff
	ff		 mov	 eax, DWORD PTR _wp_nodes$24[ebp]
  0439a	f3 0f 10 44 10
	04		 movss	 xmm0, DWORD PTR [eax+edx+4]
  043a0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  043a4	83 ec 08	 sub	 esp, 8
  043a7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  043ac	6b 8d 94 f8 ff
	ff 0c		 imul	 ecx, DWORD PTR _count$11[ebp], 12
  043b3	8b 95 c8 f8 ff
	ff		 mov	 edx, DWORD PTR _wp_nodes$24[ebp]
  043b9	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  043be	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  043c2	83 ec 08	 sub	 esp, 8
  043c5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  043ca	6a 08		 push	 8
  043cc	6a 09		 push	 9
  043ce	6a 00		 push	 0
  043d0	68 a1 00 00 00	 push	 161			; 000000a1H
  043d5	6a 05		 push	 5
  043d7	6a 02		 push	 2
  043d9	68 fe 00 00 00	 push	 254			; 000000feH
  043de	6a 05		 push	 5
  043e0	8b 85 94 f8 ff
	ff		 mov	 eax, DWORD PTR _count$11[ebp]
  043e6	8b 8d b0 f8 ff
	ff		 mov	 ecx, DWORD PTR _wp_types$18[ebp]
  043ec	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  043ef	52		 push	 edx
  043f0	6a 34		 push	 52			; 00000034H
  043f2	6a 05		 push	 5
  043f4	8b 85 c0 f8 ff
	ff		 mov	 eax, DWORD PTR _wp$22[ebp]
  043fa	50		 push	 eax
  043fb	6a 2c		 push	 44			; 0000002cH
  043fd	6a 03		 push	 3
  043ff	8b 8d b8 f8 ff
	ff		 mov	 ecx, DWORD PTR _new_task$20[ebp]
  04405	51		 push	 ecx
  04406	6a 2c		 push	 44			; 0000002cH
  04408	6a 06		 push	 6
  0440a	6a ff		 push	 -1
  0440c	6a 24		 push	 36			; 00000024H
  0440e	e8 00 00 00 00	 call	 ?create_local_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_local_entity
  04413	83 c4 74	 add	 esp, 116		; 00000074H
  04416	89 85 c0 f8 ff
	ff		 mov	 DWORD PTR _wp$22[ebp], eax

; 2105 : 					(
; 2106 : 						ENTITY_TYPE_WAYPOINT,
; 2107 : 						ENTITY_INDEX_DONT_CARE,
; 2108 : 						ENTITY_ATTR_PARENT (LIST_TYPE_WAYPOINT, new_task),
; 2109 : 						ENTITY_ATTR_CHILD_PRED (LIST_TYPE_WAYPOINT, wp),
; 2110 : 						ENTITY_ATTR_INT_VALUE (INT_TYPE_ENTITY_SUB_TYPE, wp_types [count]),
; 2111 : 						ENTITY_ATTR_INT_VALUE (INT_TYPE_WAYPOINT_FORMATION, FORMATION_ROW_LEFT),
; 2112 : 						ENTITY_ATTR_INT_VALUE (INT_TYPE_POSITION_TYPE, POSITION_TYPE_ABSOLUTE),
; 2113 : 						ENTITY_ATTR_VEC3D (VEC3D_TYPE_POSITION, wp_nodes [count].x, wp_nodes [count].y, wp_nodes [count].z),
; 2114 : 						ENTITY_ATTR_PTR_VALUE (PTR_TYPE_POSITION_ENTITY, NULL),
; 2115 : 						ENTITY_ATTR_END
; 2116 : 					);
; 2117 : 
; 2118 : 			  		count ++;

  0441c	8b 85 94 f8 ff
	ff		 mov	 eax, DWORD PTR _count$11[ebp]
  04422	83 c0 01	 add	 eax, 1
  04425	89 85 94 f8 ff
	ff		 mov	 DWORD PTR _count$11[ebp], eax

; 2119 : 				}

  0442b	e9 24 ff ff ff	 jmp	 $LN44@parser_cam
$LN45@parser_cam:

; 2120 : 
; 2121 : 				//
; 2122 : 				// Assign task
; 2123 : 				//
; 2124 : 
; 2125 : 				push_task_onto_group_task_stack (group_en, new_task, TASK_ASSIGN_ALL_MEMBERS);

  04430	6a ff		 push	 -1
  04432	8b 85 b8 f8 ff
	ff		 mov	 eax, DWORD PTR _new_task$20[ebp]
  04438	50		 push	 eax
  04439	8b 8d bc f8 ff
	ff		 mov	 ecx, DWORD PTR _group_en$21[ebp]
  0443f	51		 push	 ecx
  04440	e8 00 00 00 00	 call	 ?push_task_onto_group_task_stack@@YGPAUENTITY@@PAU1@0I@Z ; push_task_onto_group_task_stack

; 2126 : 
; 2127 : 				assign_task_to_group_members (group_en, new_task, TASK_ASSIGN_ALL_MEMBERS);

  04445	6a ff		 push	 -1
  04447	8b 85 b8 f8 ff
	ff		 mov	 eax, DWORD PTR _new_task$20[ebp]
  0444d	50		 push	 eax
  0444e	8b 8d bc f8 ff
	ff		 mov	 ecx, DWORD PTR _group_en$21[ebp]
  04454	51		 push	 ecx
  04455	e8 00 00 00 00	 call	 ?assign_task_to_group_members@@YGHPAUENTITY@@0I@Z ; assign_task_to_group_members

; 2128 : 
; 2129 : 				break;

  0445a	e9 bd 02 00 00	 jmp	 $LN4@parser_cam
$LN222@parser_cam:

; 2130 : 			}
; 2131 : 
; 2132 : 			case FILE_TAG_VERSION_NUMBER:
; 2133 : 			{
; 2134 : 
; 2135 : 				int
; 2136 : 					version;
; 2137 : 
; 2138 : 				version = get_next_file_int (file_ptr);

  0445f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  04465	50		 push	 eax
  04466	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0446b	89 85 8c f8 ff
	ff		 mov	 DWORD PTR _version$9[ebp], eax

; 2139 : 
; 2140 : 				#if DEBUG_MODULE
; 2141 : 
; 2142 : 				debug_log ("PARSGEN: version number %d", version);
; 2143 : 
; 2144 : 				#endif
; 2145 : 
; 2146 : 				break;

  04471	e9 a6 02 00 00	 jmp	 $LN4@parser_cam
$LN223@parser_cam:

; 2147 : 			}
; 2148 : 
; 2149 : 	//VJ 051202 add season file tag for winter/summer camo
; 2150 : 			case FILE_TAG_SEASON:
; 2151 : 			{
; 2152 : 				int
; 2153 : 					season = 0;

  04476	c7 85 88 f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _season$8[ebp], 0

; 2154 : 
; 2155 : 				season = get_next_file_int (file_ptr);

  04480	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  04486	50		 push	 eax
  04487	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0448c	89 85 88 f8 ff
	ff		 mov	 DWORD PTR _season$8[ebp], eax

; 2156 : 				//VJ 051227 use set and get global season here
; 2157 : 				set_global_season( season );

  04492	8b 85 88 f8 ff
	ff		 mov	 eax, DWORD PTR _season$8[ebp]
  04498	a3 14 04 00 00	 mov	 DWORD PTR ?current_map_info@@3UCUSTOM_MAP_INFO@@A+1044, eax

; 2158 : 				initialise_noisemaps();

  0449d	e8 00 00 00 00	 call	 ?initialise_noisemaps@@YGXXZ ; initialise_noisemaps

; 2159 : 
; 2160 : 				#if DEBUG_MODULE
; 2161 : 
; 2162 : 				debug_log ("PARSGEN: season %d", get_global_season() );
; 2163 : 
; 2164 : 				#endif
; 2165 : 
; 2166 : 
; 2167 : 				break;

  044a2	e9 75 02 00 00	 jmp	 $LN4@parser_cam
$LN224@parser_cam:

; 2168 : 			}
; 2169 : 
; 2170 : 
; 2171 : 			case FILE_TAG_SAVED_CAMPAIGN:
; 2172 : 			{
; 2173 : 
; 2174 : 				int
; 2175 : 					server_version_number,
; 2176 : 					client_version_number,
; 2177 : 					campaign_size;
; 2178 : 
; 2179 : 				FILE
; 2180 : 					*saved_file_ptr;
; 2181 : 
; 2182 : 				unsigned char
; 2183 : 					*load_ptr,
; 2184 : 					*campaign_buffer;
; 2185 : 				char
; 2186 : 					filename [128];
; 2187 : 
; 2188 : //				comms_model_types
; 2189 : //					comms_model;
; 2190 : 
; 2191 : 				// Data Path
; 2192 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  044a7	68 af 00 00 00	 push	 175			; 000000afH
  044ac	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  044b1	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  044b7	50		 push	 eax
  044b8	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  044bd	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 2193 : 
; 2194 : 				ASSERT (result == FILE_TAG_PATH);

  044c0	83 7d e8 e9	 cmp	 DWORD PTR _result$[ebp], -23 ; ffffffe9H
  044c4	74 1a		 je	 SHORT $LN225@parser_cam
  044c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  044cb	05 c5 07 00 00	 add	 eax, 1989		; 000007c5H
  044d0	50		 push	 eax
  044d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  044d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FIELKLI@result?5?$DN?$DN?5FILE_TAG_PATH@
  044db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN225@parser_cam:

; 2195 : 
; 2196 : 				get_next_file_string (file_ptr, current_session->data_path, sizeof (current_session->data_path));

  044e0	68 00 01 00 00	 push	 256			; 00000100H
  044e5	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _current_session$[ebp]
  044eb	83 c0 1c	 add	 eax, 28			; 0000001cH
  044ee	50		 push	 eax
  044ef	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  044f5	51		 push	 ecx
  044f6	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 2197 : 
; 2198 : 				// Campaign Directory
; 2199 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  044fb	68 af 00 00 00	 push	 175			; 000000afH
  04500	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  04505	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0450b	50		 push	 eax
  0450c	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  04511	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 2200 : 
; 2201 : 				ASSERT (result == FILE_TAG_PATH);

  04514	83 7d e8 e9	 cmp	 DWORD PTR _result$[ebp], -23 ; ffffffe9H
  04518	74 1a		 je	 SHORT $LN226@parser_cam
  0451a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  0451f	05 cc 07 00 00	 add	 eax, 1996		; 000007ccH
  04524	50		 push	 eax
  04525	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0452a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FIELKLI@result?5?$DN?$DN?5FILE_TAG_PATH@
  0452f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN226@parser_cam:

; 2202 : 
; 2203 : 				get_next_file_string (file_ptr, current_session->campaign_directory, sizeof (current_session->campaign_directory));

  04534	6a 40		 push	 64			; 00000040H
  04536	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _current_session$[ebp]
  0453c	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  04541	50		 push	 eax
  04542	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  04548	51		 push	 ecx
  04549	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 2204 : 
; 2205 : 				// Get full pathname for .SAV file (must be done before campaign filename overwritten)
; 2206 : 				strcpy (temp_filename, current_session->campaign_filename);

  0454e	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _current_session$[ebp]
  04554	05 5c 01 00 00	 add	 eax, 348		; 0000015cH
  04559	50		 push	 eax
  0455a	8d 8d 40 fe ff
	ff		 lea	 ecx, DWORD PTR _temp_filename$[ebp]
  04560	51		 push	 ecx
  04561	e8 00 00 00 00	 call	 _strcpy
  04566	83 c4 08	 add	 esp, 8

; 2207 : 
; 2208 : 				load_ptr = (unsigned char *) strrchr (temp_filename, '.');

  04569	6a 2e		 push	 46			; 0000002eH
  0456b	8d 85 40 fe ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  04571	50		 push	 eax
  04572	e8 00 00 00 00	 call	 ?strrchr@@YAPADQADH@Z	; strrchr
  04577	83 c4 08	 add	 esp, 8
  0457a	89 85 74 f8 ff
	ff		 mov	 DWORD PTR _load_ptr$3[ebp], eax

; 2209 : 
; 2210 : 				*load_ptr = 0;

  04580	8b 85 74 f8 ff
	ff		 mov	 eax, DWORD PTR _load_ptr$3[ebp]
  04586	c6 00 00	 mov	 BYTE PTR [eax], 0

; 2211 : 
; 2212 : 				sprintf (filename, "%s\\%s\\%s.sav",

  04589	8d 85 40 fe ff
	ff		 lea	 eax, DWORD PTR _temp_filename$[ebp]
  0458f	50		 push	 eax
  04590	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _current_session$[ebp]
  04596	81 c1 1c 01 00
	00		 add	 ecx, 284		; 0000011cH
  0459c	51		 push	 ecx
  0459d	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _current_session$[ebp]
  045a3	83 c2 1c	 add	 edx, 28			; 0000001cH
  045a6	52		 push	 edx
  045a7	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DKEBAEFF@?$CFs?2?$CFs?2?$CFs?4sav@
  045ac	8d 85 f0 f7 ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  045b2	50		 push	 eax
  045b3	e8 00 00 00 00	 call	 _sprintf
  045b8	83 c4 14	 add	 esp, 20			; 00000014H

; 2213 : 								current_session->data_path,
; 2214 : 								current_session->campaign_directory,
; 2215 : 								temp_filename);
; 2216 : 
; 2217 : 				// Campaign Filename
; 2218 : 				result = get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  045bb	68 af 00 00 00	 push	 175			; 000000afH
  045c0	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  045c5	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _file_ptr$[ebp]
  045cb	50		 push	 eax
  045cc	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  045d1	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax

; 2219 : 
; 2220 : 				ASSERT (result == FILE_TAG_FILENAME);

  045d4	83 7d e8 f1	 cmp	 DWORD PTR _result$[ebp], -15 ; fffffff1H
  045d8	74 1a		 je	 SHORT $LN227@parser_cam
  045da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??parser_campaign_file@@YGHPBDPAH@Z@4JA
  045df	05 df 07 00 00	 add	 eax, 2015		; 000007dfH
  045e4	50		 push	 eax
  045e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@GPLFJNAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  045ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OKDNCJOJ@result?5?$DN?$DN?5FILE_TAG_FILENAME@
  045ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN227@parser_cam:

; 2221 : 
; 2222 : 				get_next_file_string (file_ptr, current_session->campaign_filename, sizeof (current_session->campaign_filename));

  045f4	6a 40		 push	 64			; 00000040H
  045f6	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _current_session$[ebp]
  045fc	05 5c 01 00 00	 add	 eax, 348		; 0000015cH
  04601	50		 push	 eax
  04602	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  04608	51		 push	 ecx
  04609	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 2223 : 
; 2224 : 				// load .save file
; 2225 : 				saved_file_ptr = safe_fopen (filename, "rb");

  0460e	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  04613	8d 85 f0 f7 ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  04619	50		 push	 eax
  0461a	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  0461f	89 85 78 f8 ff
	ff		 mov	 DWORD PTR _saved_file_ptr$4[ebp], eax

; 2226 : 
; 2227 : 				campaign_size = file_size (filename);

  04625	8d 85 f0 f7 ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  0462b	50		 push	 eax
  0462c	e8 00 00 00 00	 call	 ?file_size@@YGHPBD@Z	; file_size
  04631	89 85 7c f8 ff
	ff		 mov	 DWORD PTR _campaign_size$5[ebp], eax

; 2228 : 
; 2229 : 				campaign_buffer = (unsigned char *) malloc_heap_mem (sizeof (char) * (campaign_size + 1));

  04637	8b 85 7c f8 ff
	ff		 mov	 eax, DWORD PTR _campaign_size$5[ebp]
  0463d	83 c0 01	 add	 eax, 1
  04640	50		 push	 eax
  04641	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  04646	89 85 70 f8 ff
	ff		 mov	 DWORD PTR _campaign_buffer$2[ebp], eax

; 2230 : 
; 2231 : 				load_ptr = campaign_buffer;

  0464c	8b 85 70 f8 ff
	ff		 mov	 eax, DWORD PTR _campaign_buffer$2[ebp]
  04652	89 85 74 f8 ff
	ff		 mov	 DWORD PTR _load_ptr$3[ebp], eax

; 2232 : 
; 2233 : 				fread (campaign_buffer, campaign_size + 1, 1, saved_file_ptr);

  04658	8b 85 78 f8 ff
	ff		 mov	 eax, DWORD PTR _saved_file_ptr$4[ebp]
  0465e	50		 push	 eax
  0465f	6a 01		 push	 1
  04661	8b 8d 7c f8 ff
	ff		 mov	 ecx, DWORD PTR _campaign_size$5[ebp]
  04667	83 c1 01	 add	 ecx, 1
  0466a	51		 push	 ecx
  0466b	8b 95 70 f8 ff
	ff		 mov	 edx, DWORD PTR _campaign_buffer$2[ebp]
  04671	52		 push	 edx
  04672	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  04678	83 c4 10	 add	 esp, 16			; 00000010H

; 2234 : 
; 2235 : 				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 2236 : 				// check version number
; 2237 : 				client_version_number = get_global_version_number ();

  0467b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A
  04680	89 85 80 f8 ff
	ff		 mov	 DWORD PTR _client_version_number$6[ebp], eax

; 2238 : 
; 2239 : 				server_version_number = get_list_item (load_ptr, int);

  04686	8b 85 74 f8 ff
	ff		 mov	 eax, DWORD PTR _load_ptr$3[ebp]
  0468c	83 c0 04	 add	 eax, 4
  0468f	89 85 74 f8 ff
	ff		 mov	 DWORD PTR _load_ptr$3[ebp], eax
  04695	8b 8d 74 f8 ff
	ff		 mov	 ecx, DWORD PTR _load_ptr$3[ebp]
  0469b	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0469e	89 95 84 f8 ff
	ff		 mov	 DWORD PTR _server_version_number$7[ebp], edx

; 2240 : 
; 2241 : 				campaign_size -= sizeof (int);

  046a4	8b 85 7c f8 ff
	ff		 mov	 eax, DWORD PTR _campaign_size$5[ebp]
  046aa	83 e8 04	 sub	 eax, 4
  046ad	89 85 7c f8 ff
	ff		 mov	 DWORD PTR _campaign_size$5[ebp], eax

; 2242 : 
; 2243 : 				if (client_version_number != server_version_number)

  046b3	8b 85 80 f8 ff
	ff		 mov	 eax, DWORD PTR _client_version_number$6[ebp]
  046b9	3b 85 84 f8 ff
	ff		 cmp	 eax, DWORD PTR _server_version_number$7[ebp]
  046bf	74 1b		 je	 SHORT $LN228@parser_cam

; 2244 : 				{
; 2245 : 
; 2246 : 					debug_fatal ("COMM_MAN: Server Version No. %d, Client Version No. %d", server_version_number, client_version_number);

  046c1	8b 85 80 f8 ff
	ff		 mov	 eax, DWORD PTR _client_version_number$6[ebp]
  046c7	50		 push	 eax
  046c8	8b 8d 84 f8 ff
	ff		 mov	 ecx, DWORD PTR _server_version_number$7[ebp]
  046ce	51		 push	 ecx
  046cf	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@MDDNANLD@COMM_MAN?3?5Server?5Version?5No?4?5?$CFd@
  046d4	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  046d9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN228@parser_cam:

; 2247 : 				}
; 2248 : 				//
; 2249 : 				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 2250 : 
; 2251 : 				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 2252 : 				// unpack session
; 2253 : 				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 2254 : 				unpack_session (load_ptr, campaign_size, PACK_MODE_SERVER_SESSION);

  046dc	6a 00		 push	 0
  046de	8b 85 7c f8 ff
	ff		 mov	 eax, DWORD PTR _campaign_size$5[ebp]
  046e4	50		 push	 eax
  046e5	8b 8d 74 f8 ff
	ff		 mov	 ecx, DWORD PTR _load_ptr$3[ebp]
  046eb	51		 push	 ecx
  046ec	e8 00 00 00 00	 call	 ?unpack_session@@YGHPAEHW4PACK_MODES@@@Z ; unpack_session

; 2255 : 				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 2256 : 
; 2257 : 				fclose (saved_file_ptr);

  046f1	8b 85 78 f8 ff
	ff		 mov	 eax, DWORD PTR _saved_file_ptr$4[ebp]
  046f7	50		 push	 eax
  046f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  046fe	83 c4 04	 add	 esp, 4

; 2258 : 
; 2259 : 				free_mem (campaign_buffer);

  04701	8b 85 70 f8 ff
	ff		 mov	 eax, DWORD PTR _campaign_buffer$2[ebp]
  04707	50		 push	 eax
  04708	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 2260 : 
; 2261 : 				break;

  0470d	eb 0d		 jmp	 SHORT $LN4@parser_cam
$LN229@parser_cam:

; 2262 : 			}
; 2263 : 
; 2264 : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 2265 : // OLD PARSER
; 2266 : //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
; 2267 : 
; 2268 : 			default:
; 2269 : 			{
; 2270 : 
; 2271 : 				debug_fatal ("PARSGEN: unknown TAG");

  0470f	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JLAKAPEG@PARSGEN?3?5unknown?5TAG@
  04714	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  04719	83 c4 04	 add	 esp, 4
$LN4@parser_cam:

; 2272 : 			}
; 2273 : 		}
; 2274 : 	}

  0471c	e9 7e b9 ff ff	 jmp	 $LN395@parser_cam
$LN3@parser_cam:

; 2275 : }

  04721	5f		 pop	 edi
  04722	5e		 pop	 esi
  04723	5b		 pop	 ebx
  04724	8b e5		 mov	 esp, ebp
  04726	5d		 pop	 ebp
  04727	c2 08 00	 ret	 8
  0472a	66 90		 npad	 2
$LN399@parser_cam:
  0472c	00 00 00 00	 DD	 $LN52@parser_cam
  04730	00 00 00 00	 DD	 $LN103@parser_cam
  04734	00 00 00 00	 DD	 $LN102@parser_cam
  04738	00 00 00 00	 DD	 $LN49@parser_cam
  0473c	00 00 00 00	 DD	 $LN101@parser_cam
  04740	00 00 00 00	 DD	 $LN59@parser_cam
  04744	00 00 00 00	 DD	 $LN69@parser_cam
  04748	00 00 00 00	 DD	 $LN70@parser_cam
  0474c	00 00 00 00	 DD	 $LN54@parser_cam
  04750	00 00 00 00	 DD	 $LN66@parser_cam
  04754	00 00 00 00	 DD	 $LN105@parser_cam
  04758	00 00 00 00	 DD	 $LN63@parser_cam
  0475c	00 00 00 00	 DD	 $LN50@parser_cam
  04760	00 00 00 00	 DD	 $LN67@parser_cam
  04764	00 00 00 00	 DD	 $LN73@parser_cam
  04768	00 00 00 00	 DD	 $LN71@parser_cam
  0476c	00 00 00 00	 DD	 $LN68@parser_cam
  04770	00 00 00 00	 DD	 $LN58@parser_cam
  04774	00 00 00 00	 DD	 $LN57@parser_cam
  04778	00 00 00 00	 DD	 $LN113@parser_cam
  0477c	00 00 00 00	 DD	 $LN107@parser_cam
  04780	00 00 00 00	 DD	 $LN198@parser_cam
  04784	00 00 00 00	 DD	 $LN182@parser_cam
  04788	00 00 00 00	 DD	 $LN206@parser_cam
  0478c	00 00 00 00	 DD	 $LN161@parser_cam
  04790	00 00 00 00	 DD	 $LN51@parser_cam
  04794	00 00 00 00	 DD	 $LN153@parser_cam
  04798	00 00 00 00	 DD	 $LN106@parser_cam
  0479c	00 00 00 00	 DD	 $LN167@parser_cam
  047a0	00 00 00 00	 DD	 $LN148@parser_cam
  047a4	00 00 00 00	 DD	 $LN175@parser_cam
  047a8	00 00 00 00	 DD	 $LN104@parser_cam
  047ac	00 00 00 00	 DD	 $LN110@parser_cam
  047b0	00 00 00 00	 DD	 $LN158@parser_cam
  047b4	00 00 00 00	 DD	 $LN224@parser_cam
  047b8	00 00 00 00	 DD	 $LN98@parser_cam
  047bc	00 00 00 00	 DD	 $LN141@parser_cam
  047c0	00 00 00 00	 DD	 $LN144@parser_cam
  047c4	00 00 00 00	 DD	 $LN152@parser_cam
  047c8	00 00 00 00	 DD	 $LN222@parser_cam
  047cc	00 00 00 00	 DD	 $LN137@parser_cam
  047d0	00 00 00 00	 DD	 $LN140@parser_cam
  047d4	00 00 00 00	 DD	 $LN223@parser_cam
  047d8	00 00 00 00	 DD	 $LN229@parser_cam
$LN396@parser_cam:
  047dc	00		 DB	 0
  047dd	01		 DB	 1
  047de	02		 DB	 2
  047df	2b		 DB	 43			; 0000002bH
  047e0	03		 DB	 3
  047e1	04		 DB	 4
  047e2	2b		 DB	 43			; 0000002bH
  047e3	2b		 DB	 43			; 0000002bH
  047e4	2b		 DB	 43			; 0000002bH
  047e5	2b		 DB	 43			; 0000002bH
  047e6	2b		 DB	 43			; 0000002bH
  047e7	2b		 DB	 43			; 0000002bH
  047e8	05		 DB	 5
  047e9	2b		 DB	 43			; 0000002bH
  047ea	06		 DB	 6
  047eb	07		 DB	 7
  047ec	08		 DB	 8
  047ed	09		 DB	 9
  047ee	0a		 DB	 10			; 0000000aH
  047ef	0a		 DB	 10			; 0000000aH
  047f0	0b		 DB	 11			; 0000000bH
  047f1	0c		 DB	 12			; 0000000cH
  047f2	0d		 DB	 13			; 0000000dH
  047f3	0e		 DB	 14			; 0000000eH
  047f4	0f		 DB	 15			; 0000000fH
  047f5	10		 DB	 16			; 00000010H
  047f6	11		 DB	 17			; 00000011H
  047f7	2b		 DB	 43			; 0000002bH
  047f8	2b		 DB	 43			; 0000002bH
  047f9	2b		 DB	 43			; 0000002bH
  047fa	2b		 DB	 43			; 0000002bH
  047fb	2b		 DB	 43			; 0000002bH
  047fc	2b		 DB	 43			; 0000002bH
  047fd	2b		 DB	 43			; 0000002bH
  047fe	2b		 DB	 43			; 0000002bH
  047ff	2b		 DB	 43			; 0000002bH
  04800	12		 DB	 18			; 00000012H
  04801	2b		 DB	 43			; 0000002bH
  04802	2b		 DB	 43			; 0000002bH
  04803	2b		 DB	 43			; 0000002bH
  04804	2b		 DB	 43			; 0000002bH
  04805	2b		 DB	 43			; 0000002bH
  04806	13		 DB	 19			; 00000013H
  04807	14		 DB	 20			; 00000014H
  04808	2b		 DB	 43			; 0000002bH
  04809	2b		 DB	 43			; 0000002bH
  0480a	2b		 DB	 43			; 0000002bH
  0480b	2b		 DB	 43			; 0000002bH
  0480c	15		 DB	 21			; 00000015H
  0480d	16		 DB	 22			; 00000016H
  0480e	2b		 DB	 43			; 0000002bH
  0480f	17		 DB	 23			; 00000017H
  04810	2b		 DB	 43			; 0000002bH
  04811	2b		 DB	 43			; 0000002bH
  04812	2b		 DB	 43			; 0000002bH
  04813	2b		 DB	 43			; 0000002bH
  04814	2b		 DB	 43			; 0000002bH
  04815	2b		 DB	 43			; 0000002bH
  04816	18		 DB	 24			; 00000018H
  04817	2b		 DB	 43			; 0000002bH
  04818	19		 DB	 25			; 00000019H
  04819	2b		 DB	 43			; 0000002bH
  0481a	1a		 DB	 26			; 0000001aH
  0481b	2b		 DB	 43			; 0000002bH
  0481c	2b		 DB	 43			; 0000002bH
  0481d	2b		 DB	 43			; 0000002bH
  0481e	2b		 DB	 43			; 0000002bH
  0481f	2b		 DB	 43			; 0000002bH
  04820	1b		 DB	 27			; 0000001bH
  04821	2b		 DB	 43			; 0000002bH
  04822	2b		 DB	 43			; 0000002bH
  04823	1c		 DB	 28			; 0000001cH
  04824	2b		 DB	 43			; 0000002bH
  04825	2b		 DB	 43			; 0000002bH
  04826	2b		 DB	 43			; 0000002bH
  04827	2b		 DB	 43			; 0000002bH
  04828	2b		 DB	 43			; 0000002bH
  04829	2b		 DB	 43			; 0000002bH
  0482a	2b		 DB	 43			; 0000002bH
  0482b	2b		 DB	 43			; 0000002bH
  0482c	2b		 DB	 43			; 0000002bH
  0482d	2b		 DB	 43			; 0000002bH
  0482e	2b		 DB	 43			; 0000002bH
  0482f	2b		 DB	 43			; 0000002bH
  04830	2b		 DB	 43			; 0000002bH
  04831	2b		 DB	 43			; 0000002bH
  04832	2b		 DB	 43			; 0000002bH
  04833	2b		 DB	 43			; 0000002bH
  04834	2b		 DB	 43			; 0000002bH
  04835	2b		 DB	 43			; 0000002bH
  04836	2b		 DB	 43			; 0000002bH
  04837	2b		 DB	 43			; 0000002bH
  04838	2b		 DB	 43			; 0000002bH
  04839	2b		 DB	 43			; 0000002bH
  0483a	2b		 DB	 43			; 0000002bH
  0483b	2b		 DB	 43			; 0000002bH
  0483c	2b		 DB	 43			; 0000002bH
  0483d	2b		 DB	 43			; 0000002bH
  0483e	2b		 DB	 43			; 0000002bH
  0483f	2b		 DB	 43			; 0000002bH
  04840	2b		 DB	 43			; 0000002bH
  04841	1d		 DB	 29			; 0000001dH
  04842	2b		 DB	 43			; 0000002bH
  04843	2b		 DB	 43			; 0000002bH
  04844	1e		 DB	 30			; 0000001eH
  04845	2b		 DB	 43			; 0000002bH
  04846	2b		 DB	 43			; 0000002bH
  04847	2b		 DB	 43			; 0000002bH
  04848	2b		 DB	 43			; 0000002bH
  04849	2b		 DB	 43			; 0000002bH
  0484a	2b		 DB	 43			; 0000002bH
  0484b	2b		 DB	 43			; 0000002bH
  0484c	2b		 DB	 43			; 0000002bH
  0484d	2b		 DB	 43			; 0000002bH
  0484e	2b		 DB	 43			; 0000002bH
  0484f	2b		 DB	 43			; 0000002bH
  04850	2b		 DB	 43			; 0000002bH
  04851	1f		 DB	 31			; 0000001fH
  04852	2b		 DB	 43			; 0000002bH
  04853	2b		 DB	 43			; 0000002bH
  04854	2b		 DB	 43			; 0000002bH
  04855	2b		 DB	 43			; 0000002bH
  04856	2b		 DB	 43			; 0000002bH
  04857	2b		 DB	 43			; 0000002bH
  04858	2b		 DB	 43			; 0000002bH
  04859	2b		 DB	 43			; 0000002bH
  0485a	20		 DB	 32			; 00000020H
  0485b	2b		 DB	 43			; 0000002bH
  0485c	2b		 DB	 43			; 0000002bH
  0485d	2b		 DB	 43			; 0000002bH
  0485e	2b		 DB	 43			; 0000002bH
  0485f	2b		 DB	 43			; 0000002bH
  04860	2b		 DB	 43			; 0000002bH
  04861	2b		 DB	 43			; 0000002bH
  04862	2b		 DB	 43			; 0000002bH
  04863	2b		 DB	 43			; 0000002bH
  04864	2b		 DB	 43			; 0000002bH
  04865	2b		 DB	 43			; 0000002bH
  04866	2b		 DB	 43			; 0000002bH
  04867	2b		 DB	 43			; 0000002bH
  04868	2b		 DB	 43			; 0000002bH
  04869	2b		 DB	 43			; 0000002bH
  0486a	2b		 DB	 43			; 0000002bH
  0486b	2b		 DB	 43			; 0000002bH
  0486c	2b		 DB	 43			; 0000002bH
  0486d	2b		 DB	 43			; 0000002bH
  0486e	2b		 DB	 43			; 0000002bH
  0486f	2b		 DB	 43			; 0000002bH
  04870	2b		 DB	 43			; 0000002bH
  04871	2b		 DB	 43			; 0000002bH
  04872	2b		 DB	 43			; 0000002bH
  04873	2b		 DB	 43			; 0000002bH
  04874	2b		 DB	 43			; 0000002bH
  04875	2b		 DB	 43			; 0000002bH
  04876	2b		 DB	 43			; 0000002bH
  04877	2b		 DB	 43			; 0000002bH
  04878	2b		 DB	 43			; 0000002bH
  04879	2b		 DB	 43			; 0000002bH
  0487a	21		 DB	 33			; 00000021H
  0487b	2b		 DB	 43			; 0000002bH
  0487c	2b		 DB	 43			; 0000002bH
  0487d	2b		 DB	 43			; 0000002bH
  0487e	2b		 DB	 43			; 0000002bH
  0487f	22		 DB	 34			; 00000022H
  04880	2b		 DB	 43			; 0000002bH
  04881	2b		 DB	 43			; 0000002bH
  04882	2b		 DB	 43			; 0000002bH
  04883	2b		 DB	 43			; 0000002bH
  04884	2b		 DB	 43			; 0000002bH
  04885	23		 DB	 35			; 00000023H
  04886	2b		 DB	 43			; 0000002bH
  04887	2b		 DB	 43			; 0000002bH
  04888	2b		 DB	 43			; 0000002bH
  04889	2b		 DB	 43			; 0000002bH
  0488a	2b		 DB	 43			; 0000002bH
  0488b	2b		 DB	 43			; 0000002bH
  0488c	1f		 DB	 31			; 0000001fH
  0488d	2b		 DB	 43			; 0000002bH
  0488e	2b		 DB	 43			; 0000002bH
  0488f	24		 DB	 36			; 00000024H
  04890	2b		 DB	 43			; 0000002bH
  04891	2b		 DB	 43			; 0000002bH
  04892	25		 DB	 37			; 00000025H
  04893	2b		 DB	 43			; 0000002bH
  04894	2b		 DB	 43			; 0000002bH
  04895	2b		 DB	 43			; 0000002bH
  04896	2b		 DB	 43			; 0000002bH
  04897	2b		 DB	 43			; 0000002bH
  04898	1f		 DB	 31			; 0000001fH
  04899	26		 DB	 38			; 00000026H
  0489a	2b		 DB	 43			; 0000002bH
  0489b	2b		 DB	 43			; 0000002bH
  0489c	2b		 DB	 43			; 0000002bH
  0489d	2b		 DB	 43			; 0000002bH
  0489e	2b		 DB	 43			; 0000002bH
  0489f	27		 DB	 39			; 00000027H
  048a0	2b		 DB	 43			; 0000002bH
  048a1	2b		 DB	 43			; 0000002bH
  048a2	28		 DB	 40			; 00000028H
  048a3	29		 DB	 41			; 00000029H
  048a4	2b		 DB	 43			; 0000002bH
  048a5	2b		 DB	 43			; 0000002bH
  048a6	2b		 DB	 43			; 0000002bH
  048a7	2a		 DB	 42			; 0000002aH
$LN400@parser_cam:
  048a8	00 00 00 00	 DD	 $LN74@parser_cam
  048ac	00 00 00 00	 DD	 $LN78@parser_cam
  048b0	00 00 00 00	 DD	 $LN80@parser_cam
  048b4	00 00 00 00	 DD	 $LN86@parser_cam
  048b8	00 00 00 00	 DD	 $LN89@parser_cam
  048bc	00 00 00 00	 DD	 $LN92@parser_cam
$LN397@parser_cam:
  048c0	00		 DB	 0
  048c1	01		 DB	 1
  048c2	01		 DB	 1
  048c3	01		 DB	 1
  048c4	01		 DB	 1
  048c5	01		 DB	 1
  048c6	01		 DB	 1
  048c7	01		 DB	 1
  048c8	01		 DB	 1
  048c9	01		 DB	 1
  048ca	01		 DB	 1
  048cb	01		 DB	 1
  048cc	02		 DB	 2
  048cd	03		 DB	 3
  048ce	04		 DB	 4
  048cf	01		 DB	 1
  048d0	05		 DB	 5
  048d1	0f 1f 00	 npad	 3
$LN401@parser_cam:
  048d4	00 00 00 00	 DD	 $LN171@parser_cam
  048d8	00 00 00 00	 DD	 $LN172@parser_cam
  048dc	00 00 00 00	 DD	 $LN173@parser_cam
  048e0	00 00 00 00	 DD	 $LN174@parser_cam
$LN402@parser_cam:
  048e4	00 00 00 00	 DD	 $LN213@parser_cam
  048e8	00 00 00 00	 DD	 $LN218@parser_cam
  048ec	00 00 00 00	 DD	 $LN214@parser_cam
  048f0	00 00 00 00	 DD	 $LN216@parser_cam
  048f4	00 00 00 00	 DD	 $LN220@parser_cam
  048f8	00 00 00 00	 DD	 $LN42@parser_cam
$LN398@parser_cam:
  048fc	00		 DB	 0
  048fd	05		 DB	 5
  048fe	05		 DB	 5
  048ff	05		 DB	 5
  04900	05		 DB	 5
  04901	05		 DB	 5
  04902	05		 DB	 5
  04903	05		 DB	 5
  04904	05		 DB	 5
  04905	05		 DB	 5
  04906	05		 DB	 5
  04907	05		 DB	 5
  04908	05		 DB	 5
  04909	05		 DB	 5
  0490a	05		 DB	 5
  0490b	05		 DB	 5
  0490c	05		 DB	 5
  0490d	05		 DB	 5
  0490e	05		 DB	 5
  0490f	05		 DB	 5
  04910	05		 DB	 5
  04911	05		 DB	 5
  04912	05		 DB	 5
  04913	05		 DB	 5
  04914	05		 DB	 5
  04915	05		 DB	 5
  04916	05		 DB	 5
  04917	05		 DB	 5
  04918	05		 DB	 5
  04919	05		 DB	 5
  0491a	05		 DB	 5
  0491b	05		 DB	 5
  0491c	05		 DB	 5
  0491d	05		 DB	 5
  0491e	05		 DB	 5
  0491f	05		 DB	 5
  04920	05		 DB	 5
  04921	05		 DB	 5
  04922	05		 DB	 5
  04923	05		 DB	 5
  04924	05		 DB	 5
  04925	05		 DB	 5
  04926	05		 DB	 5
  04927	05		 DB	 5
  04928	05		 DB	 5
  04929	05		 DB	 5
  0492a	05		 DB	 5
  0492b	05		 DB	 5
  0492c	05		 DB	 5
  0492d	05		 DB	 5
  0492e	05		 DB	 5
  0492f	05		 DB	 5
  04930	05		 DB	 5
  04931	01		 DB	 1
  04932	05		 DB	 5
  04933	05		 DB	 5
  04934	05		 DB	 5
  04935	05		 DB	 5
  04936	05		 DB	 5
  04937	05		 DB	 5
  04938	05		 DB	 5
  04939	05		 DB	 5
  0493a	05		 DB	 5
  0493b	05		 DB	 5
  0493c	05		 DB	 5
  0493d	05		 DB	 5
  0493e	05		 DB	 5
  0493f	05		 DB	 5
  04940	05		 DB	 5
  04941	05		 DB	 5
  04942	05		 DB	 5
  04943	05		 DB	 5
  04944	05		 DB	 5
  04945	05		 DB	 5
  04946	05		 DB	 5
  04947	05		 DB	 5
  04948	05		 DB	 5
  04949	05		 DB	 5
  0494a	05		 DB	 5
  0494b	05		 DB	 5
  0494c	05		 DB	 5
  0494d	05		 DB	 5
  0494e	05		 DB	 5
  0494f	05		 DB	 5
  04950	05		 DB	 5
  04951	05		 DB	 5
  04952	05		 DB	 5
  04953	05		 DB	 5
  04954	05		 DB	 5
  04955	05		 DB	 5
  04956	05		 DB	 5
  04957	05		 DB	 5
  04958	05		 DB	 5
  04959	05		 DB	 5
  0495a	05		 DB	 5
  0495b	05		 DB	 5
  0495c	05		 DB	 5
  0495d	05		 DB	 5
  0495e	05		 DB	 5
  0495f	05		 DB	 5
  04960	05		 DB	 5
  04961	05		 DB	 5
  04962	05		 DB	 5
  04963	05		 DB	 5
  04964	05		 DB	 5
  04965	05		 DB	 5
  04966	05		 DB	 5
  04967	05		 DB	 5
  04968	05		 DB	 5
  04969	05		 DB	 5
  0496a	05		 DB	 5
  0496b	05		 DB	 5
  0496c	05		 DB	 5
  0496d	05		 DB	 5
  0496e	05		 DB	 5
  0496f	05		 DB	 5
  04970	05		 DB	 5
  04971	05		 DB	 5
  04972	05		 DB	 5
  04973	05		 DB	 5
  04974	05		 DB	 5
  04975	05		 DB	 5
  04976	05		 DB	 5
  04977	05		 DB	 5
  04978	05		 DB	 5
  04979	05		 DB	 5
  0497a	05		 DB	 5
  0497b	05		 DB	 5
  0497c	05		 DB	 5
  0497d	05		 DB	 5
  0497e	05		 DB	 5
  0497f	05		 DB	 5
  04980	05		 DB	 5
  04981	05		 DB	 5
  04982	05		 DB	 5
  04983	05		 DB	 5
  04984	05		 DB	 5
  04985	05		 DB	 5
  04986	05		 DB	 5
  04987	05		 DB	 5
  04988	05		 DB	 5
  04989	05		 DB	 5
  0498a	05		 DB	 5
  0498b	05		 DB	 5
  0498c	05		 DB	 5
  0498d	05		 DB	 5
  0498e	05		 DB	 5
  0498f	05		 DB	 5
  04990	02		 DB	 2
  04991	05		 DB	 5
  04992	05		 DB	 5
  04993	03		 DB	 3
  04994	05		 DB	 5
  04995	05		 DB	 5
  04996	05		 DB	 5
  04997	05		 DB	 5
  04998	05		 DB	 5
  04999	05		 DB	 5
  0499a	05		 DB	 5
  0499b	05		 DB	 5
  0499c	05		 DB	 5
  0499d	05		 DB	 5
  0499e	05		 DB	 5
  0499f	05		 DB	 5
  049a0	05		 DB	 5
  049a1	05		 DB	 5
  049a2	05		 DB	 5
  049a3	05		 DB	 5
  049a4	05		 DB	 5
  049a5	05		 DB	 5
  049a6	05		 DB	 5
  049a7	05		 DB	 5
  049a8	05		 DB	 5
  049a9	05		 DB	 5
  049aa	05		 DB	 5
  049ab	05		 DB	 5
  049ac	05		 DB	 5
  049ad	05		 DB	 5
  049ae	05		 DB	 5
  049af	05		 DB	 5
  049b0	05		 DB	 5
  049b1	05		 DB	 5
  049b2	05		 DB	 5
  049b3	05		 DB	 5
  049b4	05		 DB	 5
  049b5	04		 DB	 4
?parser_campaign_file@@YGHPBDPAH@Z ENDP			; parser_campaign_file
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?update_campaign_triggers@@YGXXZ
_TEXT	SEGMENT
_trigger$ = -4						; size = 4
?update_campaign_triggers@@YGXXZ PROC			; update_campaign_triggers, COMDAT

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 181  : 
; 182  : 	campaign_trigger
; 183  : 		trigger;
; 184  : 
; 185  : 	trigger = CAMPAIGN_TRIGGER_NONE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _trigger$[ebp], 0

; 186  : 
; 187  : 	//while (TRUE)
; 188  : 	{
; 189  : 
; 190  : 		//trigger = ( trigger + 1 ) % NUM_CAMPAIGN_TRIGGER_TYPES;
; 191  : 
; 192  : 		if (!update_script_triggers (trigger))

  00010	8b 45 fc	 mov	 eax, DWORD PTR _trigger$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?update_script_triggers@@YGHW4CAMPAIGN_TRIGGER@@@Z ; update_script_triggers

; 193  : 		{
; 194  : 
; 195  : 			//break;
; 196  : 		}
; 197  : 	}
; 198  : }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?update_campaign_triggers@@YGXXZ ENDP			; update_campaign_triggers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ai\parser\parsgen.c
;	COMDAT ?initialise_parser@@YGXXZ
_TEXT	SEGMENT
?initialise_parser@@YGXXZ PROC				; initialise_parser, COMDAT

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 167  : 
; 168  : 	campaign_trigger_head = NULL;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?campaign_trigger_head@@3PAUCAMPAIGN_TRIGGER_TYPE@@A, 0 ; campaign_trigger_head

; 169  : 
; 170  : 	campaign_event_head = NULL;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?campaign_event_head@@3PAUCAMPAIGN_EVENT_TYPE@@A, 0 ; campaign_event_head

; 171  : 
; 172  : 	campaign_while_loop_head = NULL;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?campaign_while_loop_head@@3PAUCAMPAIGN_WHILE_LOOP_TYPE@@A, 0 ; campaign_while_loop_head

; 173  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?initialise_parser@@YGXXZ ENDP				; initialise_parser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\string.h
;	COMDAT ?strstr@@YAPADQADQBD@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__SubString$ = 12					; size = 4
?strstr@@YAPADQADQBD@Z PROC				; strstr, COMDAT

; 523  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __SubString$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __String$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _strstr
  00016	83 c4 08	 add	 esp, 8

; 525  :     }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?strstr@@YAPADQADQBD@Z ENDP				; strstr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\string.h
;	COMDAT ?strrchr@@YAPADQADH@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADQADH@Z PROC				; strrchr, COMDAT

; 517  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 518  :         return const_cast<char*>(strrchr(static_cast<char const*>(_String), _Ch));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Ch$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __String$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _strrchr
  00016	83 c4 08	 add	 esp, 8

; 519  :     }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?strrchr@@YAPADQADH@Z ENDP				; strrchr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsprintf PROC						; COMDAT

; 1477 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1478 :         #pragma warning(push)
; 1479 :         #pragma warning(disable: 4996) // Deprecation
; 1480 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);

  00009	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	6a ff		 push	 -1
  00015	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 __vsnprintf_l
  0001e	83 c4 14	 add	 esp, 20			; 00000014H

; 1481 :         #pragma warning(pop)
; 1482 :     }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
_vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
