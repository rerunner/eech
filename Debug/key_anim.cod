; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?get_keyframed_animation_state@@YGXMPAHPAM@Z	; get_keyframed_animation_state
PUBLIC	?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_reversable_keyframed_value
PUBLIC	?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_simple_keyframed_value
PUBLIC	?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects
PUBLIC	?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_reversable_keyframed_sub_objects
PUBLIC	?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_keyframed_sub_object_type
PUBLIC	?set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z ; set_entity_keyframe_value_animating_forwards
PUBLIC	?set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z ; set_entity_keyframe_value_animating_reverse
PUBLIC	?__LINE__Var@?0??update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA ; `update_entity_reversable_keyframed_value'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA ; `update_entity_simple_keyframed_value'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z@4JA ; `set_entity_keyframe_value_animating_forwards'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z@4JA ; `set_entity_keyframe_value_animating_reverse'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z@4JA ; `animate_keyframes'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@MHLCDGBO@?$CI?5t?5?$DO?$DN?50?40?5?$CJ?5?$CG?$CG?5?$CI?5t?5?$DM?$DN?51?40?5?$CJ@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@40400000
PUBLIC	__real@406fe00000000000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?fast_modf@@YGMMPAM@Z:PROC			; fast_modf
EXTRN	?calculate_keyframe@@YGXHPAUOBJECT_3D_SUB_OBJECT_KEYFRAME@@0M@Z:PROC ; calculate_keyframe
EXTRN	?calculate_value_keyframe@@YGXHPAUOBJECT_3D_SUB_OBJECT_VALUE_KEYFRAME@@0M@Z:PROC ; calculate_value_keyframe
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	__fltused:DWORD
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0BN@MHLCDGBO@?$CI?5t?5?$DO?$DN?50?40?5?$CJ?5?$CG?$CG?5?$CI?5t?5?$DM?$DN?51?40?5?$CJ@
CONST	SEGMENT
??_C@_0BN@MHLCDGBO@?$CI?5t?5?$DO?$DN?50?40?5?$CJ?5?$CG?$CG?5?$CI?5t?5?$DM?$DN?51?40?5?$CJ@ DB '('
	DB	' t >= 0.0 ) && ( t <= 1.0 )', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z@4JA DD 01dbH ; `animate_keyframes'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z@4JA DD 012fH ; `set_entity_keyframe_value_animating_reverse'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z@4JA DD 0f8H ; `set_entity_keyframe_value_animating_forwards'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA DD 0d5H ; `update_entity_simple_keyframed_value'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_a'
	DB	'nim.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA DD 090H ; `update_entity_reversable_keyframed_value'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z
_TEXT	SEGMENT
_dissolve$1 = -84					; size = 4
_object_value_keyframe$2 = -80				; size = 24
_object_keyframe$3 = -56				; size = 56
_inst3d$ = 8						; size = 4
_scene$ = 12						; size = 4
_t$ = 16						; size = 4
?animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z PROC ; animate_keyframes, COMDAT

; 475  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 476  : 
; 477  : 	ASSERT ( ( t >= 0.0 ) && ( t <= 1.0 ) );

  0000c	f3 0f 5a 45 10	 cvtss2sd xmm0, DWORD PTR _t$[ebp]
  00011	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00019	72 13		 jb	 SHORT $LN3@animate_ke
  0001b	f3 0f 5a 45 10	 cvtss2sd xmm0, DWORD PTR _t$[ebp]
  00020	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00028	66 0f 2f c8	 comisd	 xmm1, xmm0
  0002c	73 18		 jae	 SHORT $LN2@animate_ke
$LN3@animate_ke:
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z@4JA
  00033	83 c0 02	 add	 eax, 2
  00036	50		 push	 eax
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MHLCDGBO@?$CI?5t?5?$DO?$DN?50?40?5?$CJ?5?$CG?$CG?5?$CI?5t?5?$DM?$DN?51?40?5?$CJ@
  00041	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_ke:

; 478  : 
; 479  : 	if ( scene->number_of_keyframes )

  00046	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  00049	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0004d	85 c9		 test	 ecx, ecx
  0004f	0f 84 98 00 00
	00		 je	 $LN4@animate_ke

; 480  : 	{
; 481  : 
; 482  : 		object_3d_sub_object_keyframe
; 483  : 			object_keyframe;
; 484  : 	
; 485  : 		calculate_keyframe ( scene->number_of_keyframes, scene->keyframes, &object_keyframe, t );

  00055	51		 push	 ecx
  00056	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _t$[ebp]
  0005b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00060	8d 45 c8	 lea	 eax, DWORD PTR _object_keyframe$3[ebp]
  00063	50		 push	 eax
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  00067	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0006a	52		 push	 edx
  0006b	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  0006e	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?calculate_keyframe@@YGXHPAUOBJECT_3D_SUB_OBJECT_KEYFRAME@@0M@Z ; calculate_keyframe

; 486  : 		
; 487  : 		inst3d->relative_position.x = object_keyframe.x;

  00078	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0007b	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+8]
  00080	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 488  : 		inst3d->relative_position.y = object_keyframe.y;

  00085	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00088	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+12]
  0008d	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 489  : 		inst3d->relative_position.z = object_keyframe.z;

  00092	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00095	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+16]
  0009a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 490  : 	
; 491  : 		inst3d->relative_scale.x = object_keyframe.scale_x;

  0009f	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000a2	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+32]
  000a7	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 492  : 		inst3d->relative_scale.y = object_keyframe.scale_y;

  000ac	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000af	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+36]
  000b4	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 493  : 		inst3d->relative_scale.z = object_keyframe.scale_z;

  000b9	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000bc	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+40]
  000c1	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 494  : 	
; 495  : 		inst3d->relative_heading = object_keyframe.heading;

  000c6	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000c9	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+20]
  000ce	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 496  : 		inst3d->relative_pitch = object_keyframe.pitch;

  000d3	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000d6	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+24]
  000db	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 497  : 		inst3d->relative_roll = object_keyframe.roll;

  000e0	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  000e3	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _object_keyframe$3[ebp+28]
  000e8	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN4@animate_ke:

; 498  : 	}
; 499  : 
; 500  : 	if ( scene->number_of_object_dissolve_keyframes )

  000ed	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  000f0	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  000f4	85 c9		 test	 ecx, ecx
  000f6	74 6e		 je	 SHORT $LN5@animate_ke

; 501  : 	{
; 502  : 	
; 503  : 		object_3d_sub_object_value_keyframe
; 504  : 			object_value_keyframe;
; 505  : 	
; 506  : 		int
; 507  : 			dissolve;
; 508  : 	
; 509  : 		calculate_value_keyframe ( scene->number_of_object_dissolve_keyframes, scene->object_dissolve_keyframes, &object_value_keyframe, t );

  000f8	51		 push	 ecx
  000f9	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _t$[ebp]
  000fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00103	8d 45 b0	 lea	 eax, DWORD PTR _object_value_keyframe$2[ebp]
  00106	50		 push	 eax
  00107	8b 4d 0c	 mov	 ecx, DWORD PTR _scene$[ebp]
  0010a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0010d	52		 push	 edx
  0010e	8b 45 0c	 mov	 eax, DWORD PTR _scene$[ebp]
  00111	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00115	51		 push	 ecx
  00116	e8 00 00 00 00	 call	 ?calculate_value_keyframe@@YGXHPAUOBJECT_3D_SUB_OBJECT_VALUE_KEYFRAME@@0M@Z ; calculate_value_keyframe

; 510  : 	
; 511  : 		convert_float_to_int ( ( 255.0 - ( object_value_keyframe.value * 255.0 ) ), &dissolve );

  0011b	8d 45 ac	 lea	 eax, DWORD PTR _dissolve$1[ebp]
  0011e	50		 push	 eax
  0011f	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _object_value_keyframe$2[ebp+8]
  00124	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  0012c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@406fe00000000000
  00134	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00138	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0013c	51		 push	 ecx
  0013d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00142	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 512  : 	
; 513  : 		inst3d->object_dissolve_value = dissolve;

  00147	8b 45 ac	 mov	 eax, DWORD PTR _dissolve$1[ebp]
  0014a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014f	c1 e0 04	 shl	 eax, 4
  00152	8b 4d 08	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00155	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00158	81 e2 0f f0 ff
	ff		 and	 edx, -4081		; fffff00fH
  0015e	0b d0		 or	 edx, eax
  00160	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00163	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN5@animate_ke:

; 514  : 	}
; 515  : }

  00166	5f		 pop	 edi
  00167	5e		 pop	 esi
  00168	5b		 pop	 ebx
  00169	8b e5		 mov	 esp, ebp
  0016b	5d		 pop	 ebp
  0016c	c2 0c 00	 ret	 12			; 0000000cH
?animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z ENDP ; animate_keyframes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z
_TEXT	SEGMENT
tv72 = -80						; size = 4
_new_state$ = -12					; size = 4
_anim_scale$ = -8					; size = 4
_int_state$ = -4					; size = 4
_en$ = 8						; size = 4
_animation_state$ = 12					; size = 4
?set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z PROC ; set_entity_keyframe_value_animating_reverse, COMDAT

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 304  : 
; 305  : 	int
; 306  : 		int_state;
; 307  : 
; 308  : 	float
; 309  : 		anim_scale,
; 310  : 		new_state;
; 311  : 
; 312  : 
; 313  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@set_entity
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_entity:

; 314  : 
; 315  : 	//
; 316  : 	// get current state
; 317  : 	//
; 318  : 
; 319  : 	get_keyframed_animation_state( animation_state, &int_state, &anim_scale );

  00027	8d 45 f8	 lea	 eax, DWORD PTR _anim_scale$[ebp]
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR _int_state$[ebp]
  0002e	51		 push	 ecx
  0002f	51		 push	 ecx
  00030	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _animation_state$[ebp]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?get_keyframed_animation_state@@YGXMPAHPAM@Z ; get_keyframed_animation_state

; 320  : 
; 321  : 	switch ( int_state )

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _int_state$[ebp]
  00042	89 45 b0	 mov	 DWORD PTR tv72[ebp], eax
  00045	83 7d b0 03	 cmp	 DWORD PTR tv72[ebp], 3
  00049	77 56		 ja	 SHORT $LN2@set_entity
  0004b	8b 4d b0	 mov	 ecx, DWORD PTR tv72[ebp]
  0004e	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN10@set_entity[ecx*4]
$LN5@set_entity:

; 322  : 	{
; 323  : 		//////////////////////////////////////////////////
; 324  : 		case KEYFRAME_STATE_ANIMATING_REVERSE:
; 325  : 		case KEYFRAME_STATE_START:
; 326  : 		//////////////////////////////////////////////////
; 327  : 		{
; 328  : 			new_state = animation_state;

  00055	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _animation_state$[ebp]
  0005a	f3 0f 11 45 f4	 movss	 DWORD PTR _new_state$[ebp], xmm0

; 329  : 
; 330  : 			break;

  0005f	eb 40		 jmp	 SHORT $LN2@set_entity
$LN6@set_entity:

; 331  : 		}
; 332  : 		//////////////////////////////////////////////////
; 333  : 		case KEYFRAME_STATE_END:
; 334  : 		//////////////////////////////////////////////////
; 335  : 		{
; 336  : 			new_state = KEYFRAME_STATE_ANIMATING_REVERSE_FLOAT_VALUE;

  00061	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  00069	f3 0f 11 45 f4	 movss	 DWORD PTR _new_state$[ebp], xmm0

; 337  : 
; 338  : 			break;

  0006e	eb 31		 jmp	 SHORT $LN2@set_entity
$LN7@set_entity:

; 339  : 		}
; 340  : 		//////////////////////////////////////////////////
; 341  : 		case KEYFRAME_STATE_ANIMATING_FORWARDS:
; 342  : 		//////////////////////////////////////////////////
; 343  : 		{
; 344  : 			new_state = KEYFRAME_STATE_WRAP_FLOAT_VALUE - anim_scale;

  00070	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _anim_scale$[ebp]
  00075	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  0007d	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00081	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00085	f3 0f 11 45 f4	 movss	 DWORD PTR _new_state$[ebp], xmm0

; 345  : 
; 346  : 			if ( new_state >= KEYFRAME_STATE_WRAP_FLOAT_VALUE )

  0008a	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _new_state$[ebp]
  0008f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4010000000000000
  00097	72 08		 jb	 SHORT $LN8@set_entity

; 347  : 			{
; 348  : 				new_state = KEYFRAME_STATE_START_FLOAT_VALUE;

  00099	0f 57 c0	 xorps	 xmm0, xmm0
  0009c	f3 0f 11 45 f4	 movss	 DWORD PTR _new_state$[ebp], xmm0
$LN8@set_entity:
$LN2@set_entity:

; 349  : 			}
; 350  : 
; 351  : 			break;
; 352  : 		}
; 353  : 	}
; 354  : 
; 355  : 	return new_state;

  000a1	d9 45 f4	 fld	 DWORD PTR _new_state$[ebp]

; 356  : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 08 00	 ret	 8
  000ad	0f 1f 00	 npad	 3
$LN10@set_entity:
  000b0	00 00 00 00	 DD	 $LN5@set_entity
  000b4	00 00 00 00	 DD	 $LN7@set_entity
  000b8	00 00 00 00	 DD	 $LN6@set_entity
  000bc	00 00 00 00	 DD	 $LN5@set_entity
?set_entity_keyframe_value_animating_reverse@@YGMPAUENTITY@@M@Z ENDP ; set_entity_keyframe_value_animating_reverse
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z
_TEXT	SEGMENT
tv72 = -80						; size = 4
_new_state$ = -12					; size = 4
_anim_scale$ = -8					; size = 4
_int_state$ = -4					; size = 4
_en$ = 8						; size = 4
_animation_state$ = 12					; size = 4
?set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z PROC ; set_entity_keyframe_value_animating_forwards, COMDAT

; 248  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 249  : 
; 250  : 	int
; 251  : 		int_state;
; 252  : 
; 253  : 	float
; 254  : 		anim_scale,
; 255  : 		new_state;
; 256  : 
; 257  : 
; 258  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@set_entity
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_entity:

; 259  : 
; 260  : 	//
; 261  : 	// get current state
; 262  : 	//
; 263  : 
; 264  : 	get_keyframed_animation_state( animation_state, &int_state, &anim_scale );

  00027	8d 45 f8	 lea	 eax, DWORD PTR _anim_scale$[ebp]
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR _int_state$[ebp]
  0002e	51		 push	 ecx
  0002f	51		 push	 ecx
  00030	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _animation_state$[ebp]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?get_keyframed_animation_state@@YGXMPAHPAM@Z ; get_keyframed_animation_state

; 265  : 
; 266  : 	switch ( int_state )

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _int_state$[ebp]
  00042	89 45 b0	 mov	 DWORD PTR tv72[ebp], eax
  00045	83 7d b0 03	 cmp	 DWORD PTR tv72[ebp], 3
  00049	77 3f		 ja	 SHORT $LN2@set_entity
  0004b	8b 4d b0	 mov	 ecx, DWORD PTR tv72[ebp]
  0004e	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN9@set_entity[ecx*4]
$LN5@set_entity:

; 267  : 	{
; 268  : 		//////////////////////////////////////////////////
; 269  : 		case KEYFRAME_STATE_ANIMATING_FORWARDS:
; 270  : 		case KEYFRAME_STATE_END:
; 271  : 		//////////////////////////////////////////////////
; 272  : 		{
; 273  : 			new_state = animation_state;

  00055	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _animation_state$[ebp]
  0005a	f3 0f 11 45 f4	 movss	 DWORD PTR _new_state$[ebp], xmm0

; 274  : 
; 275  : 			break;

  0005f	eb 29		 jmp	 SHORT $LN2@set_entity
$LN6@set_entity:

; 276  : 		}
; 277  : 		//////////////////////////////////////////////////
; 278  : 		case KEYFRAME_STATE_START:
; 279  : 		//////////////////////////////////////////////////
; 280  : 		{
; 281  : 			new_state = KEYFRAME_STATE_ANIMATING_FORWARDS_FLOAT_VALUE;

  00061	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00069	f3 0f 11 45 f4	 movss	 DWORD PTR _new_state$[ebp], xmm0

; 282  : 
; 283  : 			break;

  0006e	eb 1a		 jmp	 SHORT $LN2@set_entity
$LN7@set_entity:

; 284  : 		}
; 285  : 		//////////////////////////////////////////////////
; 286  : 		case KEYFRAME_STATE_ANIMATING_REVERSE:
; 287  : 		//////////////////////////////////////////////////
; 288  : 		{
; 289  : 			new_state = KEYFRAME_STATE_END_FLOAT_VALUE - anim_scale;

  00070	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _anim_scale$[ebp]
  00075	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  0007d	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00081	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00085	f3 0f 11 45 f4	 movss	 DWORD PTR _new_state$[ebp], xmm0
$LN2@set_entity:

; 290  : 
; 291  : 			break;
; 292  : 		}
; 293  : 	}
; 294  : 
; 295  : 	return new_state;

  0008a	d9 45 f4	 fld	 DWORD PTR _new_state$[ebp]

; 296  : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
  00096	66 90		 npad	 2
$LN9@set_entity:
  00098	00 00 00 00	 DD	 $LN6@set_entity
  0009c	00 00 00 00	 DD	 $LN5@set_entity
  000a0	00 00 00 00	 DD	 $LN5@set_entity
  000a4	00 00 00 00	 DD	 $LN7@set_entity
?set_entity_keyframe_value_animating_forwards@@YGMPAUENTITY@@M@Z ENDP ; set_entity_keyframe_value_animating_forwards
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z
_TEXT	SEGMENT
_found_flag$ = -64					; size = 4
_depth$ = -60						; size = 4
_search$ = -56						; size = 56
_inst3d$ = 8						; size = 4
_sub_object_type$ = 12					; size = 4
_t$ = 16						; size = 4
?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z PROC ; animate_keyframed_sub_object_type, COMDAT

; 431  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 432  : 
; 433  : 	object_3d_sub_object_search_data
; 434  : 		search;
; 435  : 
; 436  : 	int
; 437  : 		depth,
; 438  : 		found_flag;
; 439  : 
; 440  : 
; 441  : 	found_flag = FALSE;

  0000c	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _found_flag$[ebp], 0

; 442  : 
; 443  : 	depth = 0;

  00013	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _depth$[ebp], 0
$LN2@animate_ke:

; 444  : 
; 445  : 	while ( TRUE )

  0001a	b8 01 00 00 00	 mov	 eax, 1
  0001f	85 c0		 test	 eax, eax
  00021	74 4e		 je	 SHORT $LN3@animate_ke

; 446  : 	{
; 447  : 		search.search_object = inst3d;

  00023	8b 45 08	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00026	89 45 c8	 mov	 DWORD PTR _search$[ebp], eax

; 448  : 		search.search_depth = depth;

  00029	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  0002c	89 45 d0	 mov	 DWORD PTR _search$[ebp+8], eax

; 449  : 		search.sub_object_index = sub_object_type;

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _sub_object_type$[ebp]
  00032	89 45 d4	 mov	 DWORD PTR _search$[ebp+12], eax

; 450  : 
; 451  : 		if ( find_object_3d_sub_object ( &search ) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND )

  00035	8d 45 c8	 lea	 eax, DWORD PTR _search$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0003e	83 f8 01	 cmp	 eax, 1
  00041	75 21		 jne	 SHORT $LN4@animate_ke

; 452  : 		{
; 453  : 
; 454  : 			found_flag = TRUE;

  00043	c7 45 c0 01 00
	00 00		 mov	 DWORD PTR _found_flag$[ebp], 1

; 455  : 
; 456  : 			animate_keyframes ( search.result_sub_object, search.object_scene, t );

  0004a	51		 push	 ecx
  0004b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _t$[ebp]
  00050	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00055	8b 45 d8	 mov	 eax, DWORD PTR _search$[ebp+16]
  00058	50		 push	 eax
  00059	8b 4d cc	 mov	 ecx, DWORD PTR _search$[ebp+4]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 ?animate_keyframes@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUOBJECT_3D_DATABASE_ENTRY@@M@Z ; animate_keyframes

; 457  : 		}
; 458  : 		else

  00062	eb 02		 jmp	 SHORT $LN5@animate_ke
$LN4@animate_ke:

; 459  : 		{
; 460  : 			break;

  00064	eb 0b		 jmp	 SHORT $LN3@animate_ke
$LN5@animate_ke:

; 461  : 		}
; 462  : 
; 463  : 		depth++;

  00066	8b 45 c4	 mov	 eax, DWORD PTR _depth$[ebp]
  00069	83 c0 01	 add	 eax, 1
  0006c	89 45 c4	 mov	 DWORD PTR _depth$[ebp], eax

; 464  : 	}

  0006f	eb a9		 jmp	 SHORT $LN2@animate_ke
$LN3@animate_ke:

; 465  : 
; 466  : 	return found_flag;

  00071	8b 45 c0	 mov	 eax, DWORD PTR _found_flag$[ebp]

; 467  : 
; 468  : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 0c 00	 ret	 12			; 0000000cH
?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z ENDP ; animate_keyframed_sub_object_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z
_TEXT	SEGMENT
tv68 = -76						; size = 4
_anim_scale$ = -8					; size = 4
_int_state$ = -4					; size = 4
_inst3d$ = 8						; size = 4
_sub_object_type$ = 12					; size = 4
_animation_state$ = 16					; size = 4
?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z PROC ; animate_entity_reversable_keyframed_sub_objects, COMDAT

; 363  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 364  : 
; 365  : 	int
; 366  : 		int_state;
; 367  : 
; 368  : 	float
; 369  : 		anim_scale;
; 370  : 
; 371  : 	if ( !inst3d )

  00009	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  0000d	75 05		 jne	 SHORT $LN4@animate_en

; 372  : 	{
; 373  : 		return;

  0000f	e9 a9 00 00 00	 jmp	 $LN1@animate_en
$LN4@animate_en:

; 374  : 	}
; 375  : 
; 376  : 	get_keyframed_animation_state( animation_state, &int_state, &anim_scale );

  00014	8d 45 f8	 lea	 eax, DWORD PTR _anim_scale$[ebp]
  00017	50		 push	 eax
  00018	8d 4d fc	 lea	 ecx, DWORD PTR _int_state$[ebp]
  0001b	51		 push	 ecx
  0001c	51		 push	 ecx
  0001d	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _animation_state$[ebp]
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?get_keyframed_animation_state@@YGXMPAHPAM@Z ; get_keyframed_animation_state

; 377  : 
; 378  : 	switch ( int_state )

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _int_state$[ebp]
  0002f	89 45 b4	 mov	 DWORD PTR tv68[ebp], eax
  00032	83 7d b4 03	 cmp	 DWORD PTR tv68[ebp], 3
  00036	0f 87 81 00 00
	00		 ja	 $LN2@animate_en
  0003c	8b 4d b4	 mov	 ecx, DWORD PTR tv68[ebp]
  0003f	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN10@animate_en[ecx*4]
$LN5@animate_en:

; 379  : 	{
; 380  : 		//////////////////////////////////////////////////
; 381  : 		case KEYFRAME_STATE_START:
; 382  : 		//////////////////////////////////////////////////
; 383  : 		{
; 384  : 			animate_keyframed_sub_object_type( inst3d, sub_object_type, 0.0 );

  00046	51		 push	 ecx
  00047	0f 57 c0	 xorps	 xmm0, xmm0
  0004a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004f	8b 45 0c	 mov	 eax, DWORD PTR _sub_object_type$[ebp]
  00052	50		 push	 eax
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_keyframed_sub_object_type

; 385  : 			break;

  0005c	eb 5f		 jmp	 SHORT $LN2@animate_en
$LN6@animate_en:

; 386  : 		}
; 387  : 		//////////////////////////////////////////////////
; 388  : 		case KEYFRAME_STATE_END:
; 389  : 		//////////////////////////////////////////////////
; 390  : 		{
; 391  : 			animate_keyframed_sub_object_type( inst3d, sub_object_type, 1.0 );

  0005e	51		 push	 ecx
  0005f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	8b 45 0c	 mov	 eax, DWORD PTR _sub_object_type$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00073	51		 push	 ecx
  00074	e8 00 00 00 00	 call	 ?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_keyframed_sub_object_type

; 392  : 			break;

  00079	eb 42		 jmp	 SHORT $LN2@animate_en
$LN7@animate_en:

; 393  : 		}
; 394  : 		//////////////////////////////////////////////////
; 395  : 		case KEYFRAME_STATE_ANIMATING_FORWARDS:
; 396  : 		//////////////////////////////////////////////////
; 397  : 		{
; 398  : 			animate_keyframed_sub_object_type( inst3d, sub_object_type, anim_scale );

  0007b	51		 push	 ecx
  0007c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _anim_scale$[ebp]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	8b 45 0c	 mov	 eax, DWORD PTR _sub_object_type$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_keyframed_sub_object_type

; 399  : 			break;

  00093	eb 28		 jmp	 SHORT $LN2@animate_en
$LN8@animate_en:

; 400  : 		}
; 401  : 		//////////////////////////////////////////////////
; 402  : 		case KEYFRAME_STATE_ANIMATING_REVERSE:
; 403  : 		//////////////////////////////////////////////////
; 404  : 		{
; 405  : 			animate_keyframed_sub_object_type( inst3d, sub_object_type, 1.0 - anim_scale );

  00095	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _anim_scale$[ebp]
  0009a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000a2	f2 0f 5c c8	 subsd	 xmm1, xmm0
  000a6	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000aa	51		 push	 ecx
  000ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b0	8b 45 0c	 mov	 eax, DWORD PTR _sub_object_type$[ebp]
  000b3	50		 push	 eax
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 ?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_keyframed_sub_object_type
$LN2@animate_en:
$LN1@animate_en:

; 406  : 			break;
; 407  : 		}
; 408  : 	}
; 409  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 0c 00	 ret	 12			; 0000000cH
  000c6	66 90		 npad	 2
$LN10@animate_en:
  000c8	00 00 00 00	 DD	 $LN5@animate_en
  000cc	00 00 00 00	 DD	 $LN7@animate_en
  000d0	00 00 00 00	 DD	 $LN6@animate_en
  000d4	00 00 00 00	 DD	 $LN8@animate_en
?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ENDP ; animate_entity_reversable_keyframed_sub_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z
_TEXT	SEGMENT
_inst3d$ = 8						; size = 4
_sub_object_type$ = 12					; size = 4
_animation_state$ = 16					; size = 4
?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z PROC ; animate_entity_simple_keyframed_sub_objects, COMDAT

; 416  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 417  : 
; 418  : 	if ( !inst3d )

  00009	83 7d 08 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  0000d	75 02		 jne	 SHORT $LN2@animate_en

; 419  : 	{
; 420  : 		return;

  0000f	eb 18		 jmp	 SHORT $LN1@animate_en
$LN2@animate_en:

; 421  : 	}
; 422  : 
; 423  : 	animate_keyframed_sub_object_type( inst3d, sub_object_type, animation_state );

  00011	51		 push	 ecx
  00012	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _animation_state$[ebp]
  00017	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001c	8b 45 0c	 mov	 eax, DWORD PTR _sub_object_type$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 08	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ?animate_keyframed_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_keyframed_sub_object_type
$LN1@animate_en:

; 424  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ENDP ; animate_entity_simple_keyframed_sub_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z
_TEXT	SEGMENT
_wrapped$ = -8						; size = 4
_state$ = -4						; size = 4
_en$ = 8						; size = 4
_animation_state$ = 12					; size = 4
_animation_rate$ = 16					; size = 4
?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z PROC ; update_entity_simple_keyframed_value, COMDAT

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 214  : 
; 215  : 	float
; 216  : 		state;
; 217  : 
; 218  : 	int
; 219  : 		wrapped;
; 220  : 
; 221  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@update_ent
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_ent:

; 222  : 
; 223  : 	state = (*animation_state) + ( animation_rate * get_delta_time() );

  00027	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _animation_rate$[ebp]
  0002c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00034	8b 45 0c	 mov	 eax, DWORD PTR _animation_state$[ebp]
  00037	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0003b	f3 0f 11 45 fc	 movss	 DWORD PTR _state$[ebp], xmm0

; 224  : 
; 225  : 	//
; 226  : 	// wrap around
; 227  : 	//
; 228  : 
; 229  : 	wrapped = FALSE;

  00040	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _wrapped$[ebp], 0
$LN2@update_ent:

; 230  : 
; 231  : 	while ( state >= 1.0 )

  00047	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _state$[ebp]
  0004c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00054	72 1f		 jb	 SHORT $LN3@update_ent

; 232  : 	{
; 233  : 		state -= 1.0;

  00056	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _state$[ebp]
  0005b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00063	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00067	f3 0f 11 45 fc	 movss	 DWORD PTR _state$[ebp], xmm0

; 234  : 
; 235  : 		wrapped = TRUE;

  0006c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _wrapped$[ebp], 1

; 236  : 	}

  00073	eb d2		 jmp	 SHORT $LN2@update_ent
$LN3@update_ent:

; 237  : 
; 238  : 	*animation_state = state;

  00075	8b 45 0c	 mov	 eax, DWORD PTR _animation_state$[ebp]
  00078	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _state$[ebp]
  0007d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 239  : 
; 240  : 	return wrapped;

  00081	8b 45 f8	 mov	 eax, DWORD PTR _wrapped$[ebp]

; 241  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z ENDP ; update_entity_simple_keyframed_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z
_TEXT	SEGMENT
tv72 = -80						; size = 4
_delta_state$ = -12					; size = 4
_anim_scale$ = -8					; size = 4
_int_state$ = -4					; size = 4
_en$ = 8						; size = 4
_animation_state$ = 12					; size = 4
_animation_rate$ = 16					; size = 4
?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z PROC ; update_entity_reversable_keyframed_value, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 
; 146  : 	int
; 147  : 		int_state;
; 148  : 
; 149  : 	float
; 150  : 		anim_scale,
; 151  : 		delta_state;
; 152  : 
; 153  : 
; 154  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@update_ent
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CPFKOJLB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_ent:

; 155  : 
; 156  : 	//
; 157  : 	// get current state
; 158  : 	//
; 159  : 
; 160  : 	get_keyframed_animation_state( *animation_state, &int_state, &anim_scale );

  00027	8d 45 f8	 lea	 eax, DWORD PTR _anim_scale$[ebp]
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR _int_state$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 0c	 mov	 edx, DWORD PTR _animation_state$[ebp]
  00032	51		 push	 ecx
  00033	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	e8 00 00 00 00	 call	 ?get_keyframed_animation_state@@YGXMPAHPAM@Z ; get_keyframed_animation_state

; 161  : 
; 162  : 	switch ( int_state )

  00041	8b 45 fc	 mov	 eax, DWORD PTR _int_state$[ebp]
  00044	89 45 b0	 mov	 DWORD PTR tv72[ebp], eax
  00047	83 7d b0 01	 cmp	 DWORD PTR tv72[ebp], 1
  0004b	74 0a		 je	 SHORT $LN6@update_ent
  0004d	83 7d b0 03	 cmp	 DWORD PTR tv72[ebp], 3
  00051	74 04		 je	 SHORT $LN6@update_ent
  00053	eb 77		 jmp	 SHORT $LN2@update_ent

; 163  : 	{
; 164  : 		//////////////////////////////////////////////////
; 165  : 		case KEYFRAME_STATE_START:
; 166  : 		case KEYFRAME_STATE_END:
; 167  : 		//////////////////////////////////////////////////
; 168  : 		{
; 169  : 			break;

  00055	eb 75		 jmp	 SHORT $LN2@update_ent
$LN6@update_ent:

; 170  : 		}
; 171  : 		//////////////////////////////////////////////////
; 172  : 		case KEYFRAME_STATE_ANIMATING_FORWARDS:
; 173  : 		case KEYFRAME_STATE_ANIMATING_REVERSE:
; 174  : 		//////////////////////////////////////////////////
; 175  : 		{
; 176  : 			//
; 177  : 			// update float value
; 178  : 			//
; 179  : 
; 180  : 			delta_state = animation_rate * get_delta_time();		//temp

  00057	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _animation_rate$[ebp]
  0005c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00064	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_state$[ebp], xmm0

; 181  : 
; 182  : 			*animation_state += delta_state;

  00069	8b 45 0c	 mov	 eax, DWORD PTR _animation_state$[ebp]
  0006c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00070	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_state$[ebp]
  00075	8b 4d 0c	 mov	 ecx, DWORD PTR _animation_state$[ebp]
  00078	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 183  : 
; 184  : 			//
; 185  : 			// bound check
; 186  : 			//
; 187  : 
; 188  : 			if ( int_state <= KEYFRAME_STATE_END_FLOAT_VALUE )

  0007c	f2 0f 2a 45 fc	 cvtsi2sd xmm0, DWORD PTR _int_state$[ebp]
  00081	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00089	66 0f 2f c8	 comisd	 xmm1, xmm0
  0008d	72 22		 jb	 SHORT $LN7@update_ent

; 189  : 			{
; 190  : 				if ( *animation_state >= KEYFRAME_STATE_END_FLOAT_VALUE )

  0008f	8b 45 0c	 mov	 eax, DWORD PTR _animation_state$[ebp]
  00092	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00096	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4000000000000000
  0009e	72 0f		 jb	 SHORT $LN9@update_ent

; 191  : 				{
; 192  : 					*animation_state = KEYFRAME_STATE_END_FLOAT_VALUE;

  000a0	8b 45 0c	 mov	 eax, DWORD PTR _animation_state$[ebp]
  000a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  000ab	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@update_ent:

; 193  : 				}
; 194  : 			}
; 195  : 			else

  000af	eb 1b		 jmp	 SHORT $LN10@update_ent
$LN7@update_ent:

; 196  : 			{
; 197  : 				if ( *animation_state >= KEYFRAME_STATE_WRAP_FLOAT_VALUE )

  000b1	8b 45 0c	 mov	 eax, DWORD PTR _animation_state$[ebp]
  000b4	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  000b8	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4010000000000000
  000c0	72 0a		 jb	 SHORT $LN10@update_ent

; 198  : 				{
; 199  : 					*animation_state = KEYFRAME_STATE_START_FLOAT_VALUE;

  000c2	8b 45 0c	 mov	 eax, DWORD PTR _animation_state$[ebp]
  000c5	0f 57 c0	 xorps	 xmm0, xmm0
  000c8	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN10@update_ent:
$LN2@update_ent:

; 200  : 				}
; 201  : 			}
; 202  : 		}
; 203  : 	}
; 204  : 
; 205  : 	return int_state;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _int_state$[ebp]

; 206  : }

  000cf	5f		 pop	 edi
  000d0	5e		 pop	 esi
  000d1	5b		 pop	 ebx
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 0c 00	 ret	 12			; 0000000cH
?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z ENDP ; update_entity_reversable_keyframed_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_anim\key_anim.c
;	COMDAT ?get_keyframed_animation_state@@YGXMPAHPAM@Z
_TEXT	SEGMENT
_state_int_part$ = -8					; size = 4
_state_float_part$ = -4					; size = 4
_value$ = 8						; size = 4
_state$ = 12						; size = 4
_remainder$ = 16					; size = 4
?get_keyframed_animation_state@@YGXMPAHPAM@Z PROC	; get_keyframed_animation_state, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 116  : 
; 117  : 	float
; 118  : 		state_float_part,
; 119  : 		state_int_part;
; 120  : 
; 121  : 	//
; 122  : 	// returns the current state of the sub-object as an int,
; 123  : 	// plus a float value between 0 and 1 describing how far between the state and its next state
; 124  : 	//
; 125  : 
; 126  : 	state_float_part = fast_modf( value, &state_int_part );

  00009	8d 45 f8	 lea	 eax, DWORD PTR _state_int_part$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _value$[ebp]
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	e8 00 00 00 00	 call	 ?fast_modf@@YGMMPAM@Z	; fast_modf
  0001d	d9 5d fc	 fstp	 DWORD PTR _state_float_part$[ebp]

; 127  : 
; 128  : 	if (state)

  00020	83 7d 0c 00	 cmp	 DWORD PTR _state$[ebp], 0
  00024	74 14		 je	 SHORT $LN2@get_keyfra

; 129  : 	{
; 130  : 		convert_float_to_int( state_int_part, state );

  00026	8b 45 0c	 mov	 eax, DWORD PTR _state$[ebp]
  00029	50		 push	 eax
  0002a	51		 push	 ecx
  0002b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _state_int_part$[ebp]
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
$LN2@get_keyfra:

; 131  : 	}
; 132  : 
; 133  : 	if (remainder)

  0003a	83 7d 10 00	 cmp	 DWORD PTR _remainder$[ebp], 0
  0003e	74 0c		 je	 SHORT $LN3@get_keyfra

; 134  : 	{
; 135  : 		*remainder = state_float_part;

  00040	8b 45 10	 mov	 eax, DWORD PTR _remainder$[ebp]
  00043	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _state_float_part$[ebp]
  00048	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN3@get_keyfra:

; 136  : 	}
; 137  : }

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 0c 00	 ret	 12			; 0000000cH
?get_keyframed_animation_state@@YGXMPAHPAM@Z ENDP	; get_keyframed_animation_state
_TEXT	ENDS
END
