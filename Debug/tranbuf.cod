; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\tranbuf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?number_of_buffered_translucent_polygons@@3HA	; number_of_buffered_translucent_polygons
PUBLIC	?number_of_buffered_translucent_vertices@@3HA	; number_of_buffered_translucent_vertices
PUBLIC	?number_of_translucent_polygon_buffers@@3HA	; number_of_translucent_polygon_buffers
PUBLIC	?current_number_of_translucent_polygons@@3HA	; current_number_of_translucent_polygons
PUBLIC	?current_number_of_translucent_vertices@@3HA	; current_number_of_translucent_vertices
PUBLIC	?active_translucent_sorted_polygon_buffer@@3PAUPOLYGON_BUFFER@@A ; active_translucent_sorted_polygon_buffer
PUBLIC	?translucent_polygon_buffers@@3PAUPOLYGON_BUFFER@@A ; translucent_polygon_buffers
PUBLIC	?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_head
PUBLIC	?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_tail
PUBLIC	?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_insert
PUBLIC	?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
PUBLIC	?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
_BSS	SEGMENT
?number_of_buffered_translucent_polygons@@3HA DD 01H DUP (?) ; number_of_buffered_translucent_polygons
?number_of_buffered_translucent_vertices@@3HA DD 01H DUP (?) ; number_of_buffered_translucent_vertices
?number_of_translucent_polygon_buffers@@3HA DD 01H DUP (?) ; number_of_translucent_polygon_buffers
?current_number_of_translucent_polygons@@3HA DD 01H DUP (?) ; current_number_of_translucent_polygons
?current_number_of_translucent_vertices@@3HA DD 01H DUP (?) ; current_number_of_translucent_vertices
?active_translucent_sorted_polygon_buffer@@3PAUPOLYGON_BUFFER@@A DD 01H DUP (?) ; active_translucent_sorted_polygon_buffer
?translucent_polygon_buffers@@3PAUPOLYGON_BUFFER@@A DB 03000H DUP (?) ; translucent_polygon_buffers
?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A DD 01H DUP (?) ; buffered_sorted_translucent_polygons_head
?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A DD 01H DUP (?) ; buffered_sorted_translucent_polygons_tail
?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A DD 01H DUP (?) ; buffered_sorted_translucent_polygons_insert
?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A DB 0e000H DUP (?) ; buffered_translucent_polygons_array
?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A DB 040020H DUP (?) ; buffered_translucent_vertices_array
_BSS	ENDS
PUBLIC	?reset_translucent_buffering_system@@YGXXZ	; reset_translucent_buffering_system
PUBLIC	?get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ ; get_translucent_sorted_polygon_buffer
PUBLIC	?finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z ; finalise_translucent_sorted_polygon_buffer
PUBLIC	?remove_translucent_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z ; remove_translucent_polygon_buffer
PUBLIC	?draw_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z	; draw_polygon_buffer
PUBLIC	?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
PUBLIC	?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon
PUBLIC	?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z ; buffer_wbuffered_plain_polygon
PUBLIC	?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z ; buffer_wbuffered_gouraud_shaded_polygon
PUBLIC	?buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z ; buffer_wbuffered_flat_shaded_textured_polygon
PUBLIC	?buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z ; buffer_wbuffered_gouraud_shaded_textured_polygon
PUBLIC	?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z ; buffer_wbuffered_flat_shaded_textured_line
PUBLIC	?buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z ; buffer_wbuffered_gouraud_shaded_textured_line
PUBLIC	?__LINE__Var@?0??get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ@4JA ; `get_translucent_sorted_polygon_buffer'::`1'::__LINE__Var
PUBLIC	??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0EI@JFPAACCM@number_of_translucent_polygon_b@ ; `string'
PUBLIC	?__LINE__Var@?0??finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z@4JA ; `finalise_translucent_sorted_polygon_buffer'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@KCHFAPJI@buffer?5?$DN?$DN?5active_translucent_so@ ; `string'
PUBLIC	?__LINE__Var@?0??add_buffered_sorted_translucent_polygon@@YGXH@Z@4JA ; `add_buffered_sorted_translucent_polygon'::`1'::__LINE__Var
PUBLIC	??_C@_0DO@NJJGFFHF@buffered_translucent_polygons_a@ ; `string'
PUBLIC	??_C@_0EE@DNDFDLGE@buffered_translucent_polygons_a@ ; `string'
PUBLIC	?__LINE__Var@?0??get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ@4JA ; `get_translucent_polygon_vertices'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@BGIPKJBJ@number_of_buffered_translucent_@ ; `string'
PUBLIC	?__LINE__Var@?0??add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z@4JA ; `add_buffered_processed_polygon'::`1'::__LINE__Var
PUBLIC	??_C@_06GPGIDCJA@points@			; `string'
PUBLIC	??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@ ; `string'
PUBLIC	?__LINE__Var@?0??buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z@4JA ; `buffer_wbuffered_plain_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z@4JA ; `buffer_wbuffered_gouraud_shaded_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z@4JA ; `buffer_wbuffered_flat_shaded_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z@4JA ; `buffer_wbuffered_gouraud_shaded_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z@4JA ; `buffer_wbuffered_flat_shaded_textured_line'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z@4JA ; `buffer_wbuffered_gouraud_shaded_textured_line'::`1'::__LINE__Var
PUBLIC	__real@00000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4b40005a
EXTRN	_memcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z:PROC ; draw_fan_primitive
EXTRN	?draw_line_primitive@@YGXPAU_D3DTLVERTEX@@@Z:PROC ; draw_line_primitive
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC	; set_d3d_texture
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z:PROC ; get_d3d_vertices_points_address
EXTRN	?get_d3d_line_vertices_points_address@@YGPAU_D3DTLVERTEX@@XZ:PROC ; get_d3d_line_vertices_points_address
EXTRN	?one_over_table@@3PAMA:DWORD			; one_over_table
EXTRN	?d3d_fog_intensity@@3KA:DWORD			; d3d_fog_intensity
EXTRN	?zbuffer_factor@@3NA:QWORD			; zbuffer_factor
EXTRN	?zbuffer_constant@@3NA:QWORD			; zbuffer_constant
EXTRN	__fltused:DWORD
;	COMDAT __real@4b40005a
CONST	SEGMENT
__real@4b40005a DD 04b40005ar			; 1.2583e+07
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z@4JA DD 0447H ; `buffer_wbuffered_gouraud_shaded_textured_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z@4JA DD 03f2H ; `buffer_wbuffered_flat_shaded_textured_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z@4JA DD 0385H ; `buffer_wbuffered_gouraud_shaded_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z@4JA DD 031fH ; `buffer_wbuffered_flat_shaded_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z@4JA DD 029eH ; `buffer_wbuffered_gouraud_shaded_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z@4JA DD 023bH ; `buffer_wbuffered_plain_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
CONST	SEGMENT
??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@ DB 'number_of_buffere'
	DB	'd_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPGIDCJA@points@
CONST	SEGMENT
??_C@_06GPGIDCJA@points@ DB 'points', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z@4JA DD 020eH ; `add_buffered_processed_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EM@BGIPKJBJ@number_of_buffered_translucent_@
CONST	SEGMENT
??_C@_0EM@BGIPKJBJ@number_of_buffered_translucent_@ DB 'number_of_buffere'
	DB	'd_translucent_vertices < MAX_BUFFERED_TRANSLUCENT_VERTICES', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ@4JA DD 0202H ; `get_translucent_polygon_vertices'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EE@DNDFDLGE@buffered_translucent_polygons_a@
CONST	SEGMENT
??_C@_0EE@DNDFDLGE@buffered_translucent_polygons_a@ DB 'buffered_transluc'
	DB	'ent_polygons_array[index].number_of_vertices < 256', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@NJJGFFHF@buffered_translucent_polygons_a@
CONST	SEGMENT
??_C@_0DO@NJJGFFHF@buffered_translucent_polygons_a@ DB 'buffered_transluc'
	DB	'ent_polygons_array[index].number_of_vertices', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_buffered_sorted_translucent_polygon@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_buffered_sorted_translucent_polygon@@YGXH@Z@4JA DD 012fH ; `add_buffered_sorted_translucent_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DD@KCHFAPJI@buffer?5?$DN?$DN?5active_translucent_so@
CONST	SEGMENT
??_C@_0DD@KCHFAPJI@buffer?5?$DN?$DN?5active_translucent_so@ DB 'buffer =='
	DB	' active_translucent_sorted_polygon_buffer', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z@4JA DD 0b8H ; `finalise_translucent_sorted_polygon_buffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EI@JFPAACCM@number_of_translucent_polygon_b@
CONST	SEGMENT
??_C@_0EI@JFPAACCM@number_of_translucent_polygon_b@ DB 'number_of_translu'
	DB	'cent_polygon_buffers < MAX_TRANSLUCENT_POLYGON_BUFFERS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\graphics\tranbuf.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ@4JA DD 094H ; `get_translucent_sorted_polygon_buffer'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?add_buffered_sorted_translucent_polygon@@YGXH@Z
_TEXT	SEGMENT
_this_polygon$1 = -12					; size = 4
_previous_polygon$2 = -8				; size = 4
_distance$ = -4						; size = 4
_index$ = 8						; size = 4
?add_buffered_sorted_translucent_polygon@@YGXH@Z PROC	; add_buffered_sorted_translucent_polygon, COMDAT

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 304  : 
; 305  : 	unsigned int
; 306  : 		distance;
; 307  : 
; 308  : 	ASSERT ( buffered_translucent_polygons_array[index].number_of_vertices );

  00009	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  0000d	0f b7 88 08 00
	00 00		 movzx	 ecx, WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8]
  00014	85 c9		 test	 ecx, ecx
  00016	75 18		 jne	 SHORT $LN6@add_buffer
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_buffered_sorted_translucent_polygon@@YGXH@Z@4JA
  0001d	83 c0 05	 add	 eax, 5
  00020	50		 push	 eax
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@NJJGFFHF@buffered_translucent_polygons_a@
  0002b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@add_buffer:

; 309  : 	ASSERT ( buffered_translucent_polygons_array[index].number_of_vertices < 256 );

  00030	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00034	0f b7 88 08 00
	00 00		 movzx	 ecx, WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8]
  0003b	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  00041	7c 18		 jl	 SHORT $LN7@add_buffer
  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_buffered_sorted_translucent_polygon@@YGXH@Z@4JA
  00048	83 c0 06	 add	 eax, 6
  0004b	50		 push	 eax
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@DNDFDLGE@buffered_translucent_polygons_a@
  00056	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@add_buffer:

; 310  : 
; 311  : 
; 312  : 	distance = buffered_translucent_polygons_array[index].distance;

  0005b	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  0005f	8b 88 10 00 00
	00		 mov	 ecx, DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16]
  00065	89 4d fc	 mov	 DWORD PTR _distance$[ebp], ecx

; 313  : 
; 314  : 	if ( buffered_sorted_translucent_polygons_insert )

  00068	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_insert
  0006f	0f 84 5c 02 00
	00		 je	 $LN8@add_buffer

; 315  : 	{
; 316  : 
; 317  : 		buffered_polygon
; 318  : 			*previous_polygon,
; 319  : 			*this_polygon;
; 320  : 
; 321  : 		this_polygon = buffered_sorted_translucent_polygons_insert;

  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_insert
  0007a	89 45 f4	 mov	 DWORD PTR _this_polygon$1[ebp], eax

; 322  : 
; 323  : 		previous_polygon = buffered_sorted_translucent_polygons_insert;

  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_insert
  00082	89 45 f8	 mov	 DWORD PTR _previous_polygon$2[ebp], eax

; 324  : 
; 325  : 		if ( distance < this_polygon->distance )

  00085	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _distance$[ebp]
  0008b	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008e	0f 83 20 01 00
	00		 jae	 $LN4@add_buffer
$LN2@add_buffer:

; 326  : 		{
; 327  : 
; 328  : 			//
; 329  : 			// Start searching BACKWARDS ( more distant polygons drawn first )
; 330  : 			//
; 331  : 	
; 332  : 			while ( this_polygon )

  00094	83 7d f4 00	 cmp	 DWORD PTR _this_polygon$1[ebp], 0
  00098	74 20		 je	 SHORT $LN3@add_buffer

; 333  : 			{
; 334  : 	
; 335  : 				if ( distance >= this_polygon->distance )

  0009a	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _distance$[ebp]
  000a0	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a3	72 04		 jb	 SHORT $LN12@add_buffer

; 336  : 				{
; 337  : 	
; 338  : 					break;

  000a5	eb 13		 jmp	 SHORT $LN3@add_buffer

; 339  : 				}
; 340  : 				else

  000a7	eb 0f		 jmp	 SHORT $LN13@add_buffer
$LN12@add_buffer:

; 341  : 				{
; 342  : 	
; 343  : 					previous_polygon = this_polygon;

  000a9	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  000ac	89 45 f8	 mov	 DWORD PTR _previous_polygon$2[ebp], eax

; 344  : 	
; 345  : 					this_polygon = this_polygon->pred;

  000af	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  000b2	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b5	89 4d f4	 mov	 DWORD PTR _this_polygon$1[ebp], ecx
$LN13@add_buffer:

; 346  : 				}
; 347  : 			}

  000b8	eb da		 jmp	 SHORT $LN2@add_buffer
$LN3@add_buffer:

; 348  : 	
; 349  : 			if ( this_polygon )

  000ba	83 7d f4 00	 cmp	 DWORD PTR _this_polygon$1[ebp], 0
  000be	0f 84 9f 00 00
	00		 je	 $LN14@add_buffer

; 350  : 			{
; 351  : 
; 352  : 				//
; 353  : 				// Add new polygon AFTER this_polygon
; 354  : 				//
; 355  : 
; 356  : 				if ( !this_polygon->succ )

  000c4	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  000c7	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  000cb	75 48		 jne	 SHORT $LN16@add_buffer

; 357  : 				{
; 358  : 
; 359  : 					//
; 360  : 					// We are at the tail end of the list
; 361  : 					//
; 362  : 
; 363  : 					buffered_translucent_polygons_array[index].pred = this_polygon;

  000cd	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  000d1	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  000d4	89 88 18 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+24], ecx

; 364  : 
; 365  : 					buffered_translucent_polygons_array[index].succ = NULL;

  000da	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  000de	c7 80 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+20], 0

; 366  : 
; 367  : 					this_polygon->succ = &buffered_translucent_polygons_array[index];

  000e8	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  000ec	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  000f4	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 368  : 
; 369  : 					buffered_sorted_translucent_polygons_tail = &buffered_translucent_polygons_array[index];

  000f7	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  000fb	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00100	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_tail

; 370  : 
; 371  : 					buffered_sorted_translucent_polygons_insert = &buffered_translucent_polygons_array[index];

  00105	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00109	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0010e	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_insert

; 372  : 				}
; 373  : 				else

  00113	eb 4c		 jmp	 SHORT $LN17@add_buffer
$LN16@add_buffer:

; 374  : 				{
; 375  : 
; 376  : 					//
; 377  : 					// Insert into list normally.
; 378  : 					//
; 379  : 
; 380  : 					buffered_translucent_polygons_array[index].succ = this_polygon->succ;

  00115	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00119	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  0011c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011f	89 90 14 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+20], edx

; 381  : 
; 382  : 					buffered_translucent_polygons_array[index].pred = this_polygon;

  00125	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00129	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  0012c	89 88 18 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+24], ecx

; 383  : 
; 384  : 					this_polygon->succ->pred = &buffered_translucent_polygons_array[index];

  00132	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00136	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0013b	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  0013e	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00141	89 42 18	 mov	 DWORD PTR [edx+24], eax

; 385  : 
; 386  : 					this_polygon->succ = &buffered_translucent_polygons_array[index];

  00144	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00148	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0014d	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  00150	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 387  : 
; 388  : 					buffered_sorted_translucent_polygons_insert = &buffered_translucent_polygons_array[index];

  00153	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00157	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0015c	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_insert
$LN17@add_buffer:

; 389  : 				}
; 390  : 			}
; 391  : 			else

  00161	eb 4c		 jmp	 SHORT $LN15@add_buffer
$LN14@add_buffer:

; 392  : 			{
; 393  : 	
; 394  : 				//
; 395  : 				// Add this polygon at the HEAD of the list
; 396  : 				//
; 397  : 
; 398  : 				buffered_translucent_polygons_array[index].succ = buffered_sorted_translucent_polygons_head;

  00163	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00167	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_head
  0016d	89 88 14 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+20], ecx

; 399  : 
; 400  : 				buffered_translucent_polygons_array[index].pred = NULL;

  00173	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00177	c7 80 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+24], 0

; 401  : 
; 402  : 				buffered_sorted_translucent_polygons_head->pred = &buffered_translucent_polygons_array[index];

  00181	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00185	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0018a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_head
  00190	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 403  : 
; 404  : 				buffered_sorted_translucent_polygons_head = &buffered_translucent_polygons_array[index];

  00193	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00197	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0019c	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_head

; 405  : 
; 406  : 				buffered_sorted_translucent_polygons_insert = &buffered_translucent_polygons_array[index];

  001a1	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  001a5	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  001aa	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_insert
$LN15@add_buffer:

; 407  : 			}
; 408  : 		}
; 409  : 		else

  001af	e9 1b 01 00 00	 jmp	 $LN11@add_buffer
$LN4@add_buffer:

; 410  : 		{
; 411  : 
; 412  : 			//
; 413  : 			// Start searching FORWARDS ( less distant polygons drawn last )
; 414  : 			//
; 415  : 	
; 416  : 			while ( this_polygon )

  001b4	83 7d f4 00	 cmp	 DWORD PTR _this_polygon$1[ebp], 0
  001b8	74 20		 je	 SHORT $LN5@add_buffer

; 417  : 			{
; 418  : 	
; 419  : 				if ( distance <= this_polygon->distance )

  001ba	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  001bd	8b 4d fc	 mov	 ecx, DWORD PTR _distance$[ebp]
  001c0	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  001c3	77 04		 ja	 SHORT $LN18@add_buffer

; 420  : 				{
; 421  : 	
; 422  : 					break;

  001c5	eb 13		 jmp	 SHORT $LN5@add_buffer

; 423  : 				}
; 424  : 				else

  001c7	eb 0f		 jmp	 SHORT $LN19@add_buffer
$LN18@add_buffer:

; 425  : 				{
; 426  : 	
; 427  : 					previous_polygon = this_polygon;

  001c9	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  001cc	89 45 f8	 mov	 DWORD PTR _previous_polygon$2[ebp], eax

; 428  : 	
; 429  : 					this_polygon = this_polygon->succ;

  001cf	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  001d2	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  001d5	89 4d f4	 mov	 DWORD PTR _this_polygon$1[ebp], ecx
$LN19@add_buffer:

; 430  : 				}
; 431  : 			}

  001d8	eb da		 jmp	 SHORT $LN4@add_buffer
$LN5@add_buffer:

; 432  : 	
; 433  : 			if ( this_polygon )

  001da	83 7d f4 00	 cmp	 DWORD PTR _this_polygon$1[ebp], 0
  001de	0f 84 9f 00 00
	00		 je	 $LN20@add_buffer

; 434  : 			{
; 435  : 
; 436  : 				//
; 437  : 				// Add new polygon BEFORE this_polygon
; 438  : 				//
; 439  : 
; 440  : 				if ( !this_polygon->pred )

  001e4	8b 45 f4	 mov	 eax, DWORD PTR _this_polygon$1[ebp]
  001e7	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  001eb	75 48		 jne	 SHORT $LN22@add_buffer

; 441  : 				{
; 442  : 
; 443  : 					//
; 444  : 					// We are at the head end of the list
; 445  : 					//
; 446  : 
; 447  : 					buffered_translucent_polygons_array[index].pred = NULL;

  001ed	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  001f1	c7 80 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+24], 0

; 448  : 
; 449  : 					buffered_translucent_polygons_array[index].succ = this_polygon;

  001fb	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  001ff	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  00202	89 88 14 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+20], ecx

; 450  : 
; 451  : 					this_polygon->pred = &buffered_translucent_polygons_array[index];

  00208	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  0020c	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00211	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  00214	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 452  : 
; 453  : 					buffered_sorted_translucent_polygons_head = &buffered_translucent_polygons_array[index];

  00217	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  0021b	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00220	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_head

; 454  : 
; 455  : 					buffered_sorted_translucent_polygons_insert = &buffered_translucent_polygons_array[index];

  00225	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00229	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0022e	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_insert

; 456  : 				}
; 457  : 				else

  00233	eb 4c		 jmp	 SHORT $LN23@add_buffer
$LN22@add_buffer:

; 458  : 				{
; 459  : 
; 460  : 					//
; 461  : 					// Insert into list normally.
; 462  : 					//
; 463  : 
; 464  : 					buffered_translucent_polygons_array[index].pred = this_polygon->pred;

  00235	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00239	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  0023c	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0023f	89 90 18 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+24], edx

; 465  : 
; 466  : 					buffered_translucent_polygons_array[index].succ = this_polygon;

  00245	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00249	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  0024c	89 88 14 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+20], ecx

; 467  : 
; 468  : 					this_polygon->pred->succ = &buffered_translucent_polygons_array[index];

  00252	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00256	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0025b	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  0025e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00261	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 469  : 
; 470  : 					this_polygon->pred = &buffered_translucent_polygons_array[index];

  00264	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00268	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0026d	8b 4d f4	 mov	 ecx, DWORD PTR _this_polygon$1[ebp]
  00270	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 471  : 
; 472  : 					buffered_sorted_translucent_polygons_insert = &buffered_translucent_polygons_array[index];

  00273	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00277	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0027c	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_insert
$LN23@add_buffer:

; 473  : 				}
; 474  : 			}
; 475  : 			else

  00281	eb 4c		 jmp	 SHORT $LN11@add_buffer
$LN20@add_buffer:

; 476  : 			{
; 477  : 	
; 478  : 				//
; 479  : 				// Add this polygon at the TAIL of the list
; 480  : 				//
; 481  : 
; 482  : 				buffered_translucent_polygons_array[index].pred = buffered_sorted_translucent_polygons_tail;

  00283	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00287	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_tail
  0028d	89 88 18 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+24], ecx

; 483  : 
; 484  : 				buffered_translucent_polygons_array[index].succ = NULL;

  00293	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  00297	c7 80 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+20], 0

; 485  : 
; 486  : 				buffered_sorted_translucent_polygons_tail->succ = &buffered_translucent_polygons_array[index];

  002a1	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  002a5	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  002aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_tail
  002b0	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 487  : 
; 488  : 				buffered_sorted_translucent_polygons_tail = &buffered_translucent_polygons_array[index];

  002b3	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  002b7	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  002bc	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_tail

; 489  : 
; 490  : 				buffered_sorted_translucent_polygons_insert = &buffered_translucent_polygons_array[index];

  002c1	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  002c5	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  002ca	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_insert
$LN11@add_buffer:

; 491  : 			}
; 492  : 		}
; 493  : 	}
; 494  : 	else

  002cf	eb 46		 jmp	 SHORT $LN1@add_buffer
$LN8@add_buffer:

; 495  : 	{
; 496  : 
; 497  : 		buffered_translucent_polygons_array[index].succ = NULL;

  002d1	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  002d5	c7 80 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+20], 0

; 498  : 
; 499  : 		buffered_translucent_polygons_array[index].pred = NULL;

  002df	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  002e3	c7 80 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+24], 0

; 500  : 
; 501  : 		buffered_sorted_translucent_polygons_head = &buffered_translucent_polygons_array[index];

  002ed	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  002f1	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  002f6	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_head

; 502  : 
; 503  : 		buffered_sorted_translucent_polygons_tail = &buffered_translucent_polygons_array[index];

  002fb	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  002ff	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00304	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_tail

; 504  : 
; 505  : 		buffered_sorted_translucent_polygons_insert = &buffered_translucent_polygons_array[index];

  00309	6b 45 08 1c	 imul	 eax, DWORD PTR _index$[ebp], 28
  0030d	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00312	a3 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, eax ; buffered_sorted_translucent_polygons_insert
$LN1@add_buffer:

; 506  : 	}
; 507  : }

  00317	5f		 pop	 edi
  00318	5e		 pop	 esi
  00319	5b		 pop	 ebx
  0031a	8b e5		 mov	 esp, ebp
  0031c	5d		 pop	 ebp
  0031d	c2 04 00	 ret	 4
?add_buffered_sorted_translucent_polygon@@YGXH@Z ENDP	; add_buffered_sorted_translucent_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z
_TEXT	SEGMENT
tv219 = -80						; size = 4
_distance$ = -12					; size = 4
_vptr$ = -8						; size = 4
_vert$ = -4						; size = 4
_polygon$ = 8						; size = 4
_texture$ = 12						; size = 4
_filter$ = 16						; size = 4
_mipmap$ = 20						; size = 4
_u$ = 24						; size = 4
_v$ = 28						; size = 4
_additive$ = 32						; size = 4
?buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z PROC ; buffer_wbuffered_gouraud_shaded_textured_line, COMDAT

; 1095 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1096 : 
; 1097 : 	vertex
; 1098 : 		*vert;
; 1099 : 
; 1100 : 	D3DTLVERTEX
; 1101 : 		*vptr;
; 1102 : 
; 1103 : 	float
; 1104 : 		distance;
; 1105 : 
; 1106 : 	ASSERT ( number_of_buffered_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS );

  00009	81 3d 00 00 00
	00 00 08 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 2048 ; number_of_buffered_translucent_polygons, 00000800H
  00013	7c 18		 jl	 SHORT $LN2@buffer_wbu
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z@4JA
  0001a	83 c0 0b	 add	 eax, 11			; 0000000bH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@buffer_wbu:

; 1107 : 
; 1108 : 	current_number_of_translucent_polygons++;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00032	83 c0 01	 add	 eax, 1
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, eax ; current_number_of_translucent_polygons

; 1109 : 
; 1110 : 	current_number_of_translucent_vertices += 2;

  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  0003f	83 c0 02	 add	 eax, 2
  00042	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, eax ; current_number_of_translucent_vertices

; 1111 : 
; 1112 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].shade_mode = D3DSHADE_GOURAUD;

  00047	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0004e	c6 80 04 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+4], 2

; 1113 : 
; 1114 : 	if ( additive )

  00055	83 7d 20 00	 cmp	 DWORD PTR _additive$[ebp], 0
  00059	74 1e		 je	 SHORT $LN3@buffer_wbu

; 1115 : 	{
; 1116 : 
; 1117 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  0005b	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00062	c6 80 06 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 2

; 1118 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  00069	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00070	c6 80 07 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 2

; 1119 : 	}
; 1120 : 	else

  00077	eb 1c		 jmp	 SHORT $LN4@buffer_wbu
$LN3@buffer_wbu:

; 1121 : 	{
; 1122 : 
; 1123 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  00079	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00080	c6 80 06 00 00
	00 05		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 5

; 1124 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  00087	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0008e	c6 80 07 00 00
	00 06		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 6
$LN4@buffer_wbu:

; 1125 : 	}
; 1126 : 
; 1127 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture = texture;

  00095	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR _texture$[ebp]
  0009f	89 88 0c 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+12], ecx

; 1128 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_mag = filter;

  000a5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000ac	8a 4d 10	 mov	 cl, BYTE PTR _filter$[ebp]
  000af	88 88 00 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax], cl

; 1129 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_min = mipmap;

  000b5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000bc	8a 4d 14	 mov	 cl, BYTE PTR _mipmap$[ebp]
  000bf	88 88 01 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+1], cl

; 1130 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_u_address = u;

  000c5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000cc	8a 4d 18	 mov	 cl, BYTE PTR _u$[ebp]
  000cf	88 88 02 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+2], cl

; 1131 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_v_address = v;

  000d5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000dc	8a 4d 1c	 mov	 cl, BYTE PTR _v$[ebp]
  000df	88 88 03 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+3], cl

; 1132 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = FALSE;

  000e5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000ec	c6 80 05 00 00
	00 00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 0

; 1133 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].point_offset = number_of_buffered_translucent_vertices;

  000f3	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000fa	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?number_of_buffered_translucent_vertices@@3HA
  00101	66 89 88 0a 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+10], cx

; 1134 : 
; 1135 : 	distance = 0;

  00108	0f 57 c0	 xorps	 xmm0, xmm0
  0010b	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 1136 : 
; 1137 : 	vert = polygon;

  00110	8b 45 08	 mov	 eax, DWORD PTR _polygon$[ebp]
  00113	89 45 fc	 mov	 DWORD PTR _vert$[ebp], eax

; 1138 : 
; 1139 : 	vptr = &buffered_translucent_vertices_array[number_of_buffered_translucent_vertices];

  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  0011b	c1 e0 05	 shl	 eax, 5
  0011e	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  00123	89 45 f8	 mov	 DWORD PTR _vptr$[ebp], eax

; 1140 : 
; 1141 : 	//
; 1142 : 	// Set up the colour of the polygon
; 1143 : 	//
; 1144 : 
; 1145 : 	distance = vert->q;

  00126	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  00129	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0012e	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 1146 : 	*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  00133	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00139	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0013c	89 10		 mov	 DWORD PTR [eax], edx

; 1147 : 	*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  0013e	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00141	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00144	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00147	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1148 : 	*( ( int * ) &vptr->tu ) = *( ( int * ) &vert->u );

  0014a	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  0014d	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00150	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00153	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 1149 : 	*( ( int * ) &vptr->tv ) = *( ( int * ) &vert->v );

  00156	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  0015c	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0015f	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 1150 : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00162	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  00165	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  0016a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00172	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0017a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0017e	8b 4d f8	 mov	 ecx, DWORD PTR _vptr$[ebp]
  00181	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1151 : 	*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  00186	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00189	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  0018c	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0018f	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1152 : 	vptr->color = RGBA_MAKE ( vert->red, vert->green, vert->blue, 255 );

  00192	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  00195	0f b6 48 32	 movzx	 ecx, BYTE PTR [eax+50]
  00199	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0019c	81 c9 00 00 00
	ff		 or	 ecx, -16777216		; ff000000H
  001a2	8b 55 fc	 mov	 edx, DWORD PTR _vert$[ebp]
  001a5	0f b6 42 31	 movzx	 eax, BYTE PTR [edx+49]
  001a9	c1 e0 08	 shl	 eax, 8
  001ac	0b c8		 or	 ecx, eax
  001ae	8b 55 fc	 mov	 edx, DWORD PTR _vert$[ebp]
  001b1	0f b6 42 30	 movzx	 eax, BYTE PTR [edx+48]
  001b5	0b c8		 or	 ecx, eax
  001b7	8b 55 f8	 mov	 edx, DWORD PTR _vptr$[ebp]
  001ba	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 1153 : 	vptr->specular = d3d_fog_intensity;

  001bd	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001c6	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 1154 : 
; 1155 : 	vptr++;

  001c9	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001cc	83 c0 20	 add	 eax, 32			; 00000020H
  001cf	89 45 f8	 mov	 DWORD PTR _vptr$[ebp], eax

; 1156 : 	vert = vert->next_vertex;

  001d2	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  001d5	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001d8	89 4d fc	 mov	 DWORD PTR _vert$[ebp], ecx

; 1157 : 
; 1158 : 	distance += vert->q;

  001db	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  001de	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _distance$[ebp]
  001e3	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  001e8	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 1159 : 	*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  001ed	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001f0	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  001f3	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  001f6	89 10		 mov	 DWORD PTR [eax], edx

; 1160 : 	*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  001f8	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  001fe	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00201	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1161 : 	*( ( int * ) &vptr->tu ) = *( ( int * ) &vert->u );

  00204	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00207	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  0020a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0020d	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 1162 : 	*( ( int * ) &vptr->tv ) = *( ( int * ) &vert->v );

  00210	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00213	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00216	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00219	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 1163 : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0021c	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  0021f	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00224	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0022c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00234	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00238	8b 4d f8	 mov	 ecx, DWORD PTR _vptr$[ebp]
  0023b	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1164 : 	*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  00240	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00243	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00246	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00249	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1165 : 	vptr->color = RGBA_MAKE ( vert->red, vert->green, vert->blue, 255 );

  0024c	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  0024f	0f b6 48 32	 movzx	 ecx, BYTE PTR [eax+50]
  00253	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00256	81 c9 00 00 00
	ff		 or	 ecx, -16777216		; ff000000H
  0025c	8b 55 fc	 mov	 edx, DWORD PTR _vert$[ebp]
  0025f	0f b6 42 31	 movzx	 eax, BYTE PTR [edx+49]
  00263	c1 e0 08	 shl	 eax, 8
  00266	0b c8		 or	 ecx, eax
  00268	8b 55 fc	 mov	 edx, DWORD PTR _vert$[ebp]
  0026b	0f b6 42 30	 movzx	 eax, BYTE PTR [edx+48]
  0026f	0b c8		 or	 ecx, eax
  00271	8b 55 f8	 mov	 edx, DWORD PTR _vptr$[ebp]
  00274	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 1166 : 	vptr->specular = d3d_fog_intensity;

  00277	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  0027a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00280	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 1167 : 
; 1168 : 	distance /= 2.0;

  00283	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _distance$[ebp]
  00288	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00290	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00294	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 1169 : 
; 1170 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].distance = *( ( int * ) &distance );

  00299	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  002a0	8b 4d f4	 mov	 ecx, DWORD PTR _distance$[ebp]
  002a3	89 88 10 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16], ecx

; 1171 : 
; 1172 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].number_of_vertices = 2;

  002a9	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  002b0	b9 02 00 00 00	 mov	 ecx, 2
  002b5	66 89 88 08 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8], cx

; 1173 : 
; 1174 : 	add_buffered_sorted_translucent_polygon ( number_of_buffered_translucent_polygons );

  002bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  002c1	50		 push	 eax
  002c2	e8 00 00 00 00	 call	 ?add_buffered_sorted_translucent_polygon@@YGXH@Z ; add_buffered_sorted_translucent_polygon

; 1175 : 
; 1176 : 	number_of_buffered_translucent_vertices += 2;

  002c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  002cc	83 c0 02	 add	 eax, 2
  002cf	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 1177 : 
; 1178 : 	return ( &buffered_translucent_polygons_array[number_of_buffered_translucent_polygons++] );

  002d4	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  002db	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  002e0	89 45 b0	 mov	 DWORD PTR tv219[ebp], eax
  002e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  002e9	83 c1 01	 add	 ecx, 1
  002ec	89 0d 00 00 00
	00		 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, ecx ; number_of_buffered_translucent_polygons
  002f2	8b 45 b0	 mov	 eax, DWORD PTR tv219[ebp]

; 1179 : }

  002f5	5f		 pop	 edi
  002f6	5e		 pop	 esi
  002f7	5b		 pop	 ebx
  002f8	8b e5		 mov	 esp, ebp
  002fa	5d		 pop	 ebp
  002fb	c2 1c 00	 ret	 28			; 0000001cH
?buffer_wbuffered_gouraud_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHH@Z ENDP ; buffer_wbuffered_gouraud_shaded_textured_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z
_TEXT	SEGMENT
tv197 = -80						; size = 4
_distance$ = -12					; size = 4
_vptr$ = -8						; size = 4
_vert$ = -4						; size = 4
_polygon$ = 8						; size = 4
_texture$ = 12						; size = 4
_filter$ = 16						; size = 4
_mipmap$ = 20						; size = 4
_u$ = 24						; size = 4
_v$ = 28						; size = 4
_colour$ = 32						; size = 4
_additive$ = 36						; size = 4
?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z PROC ; buffer_wbuffered_flat_shaded_textured_line, COMDAT

; 1010 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1011 : 
; 1012 : 	vertex
; 1013 : 		*vert;
; 1014 : 
; 1015 : 	D3DTLVERTEX
; 1016 : 		*vptr;
; 1017 : 
; 1018 : 	float
; 1019 : 		distance;
; 1020 : 
; 1021 : 	ASSERT ( number_of_buffered_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS );

  00009	81 3d 00 00 00
	00 00 08 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 2048 ; number_of_buffered_translucent_polygons, 00000800H
  00013	7c 18		 jl	 SHORT $LN2@buffer_wbu
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z@4JA
  0001a	83 c0 0b	 add	 eax, 11			; 0000000bH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@buffer_wbu:

; 1022 : 
; 1023 : 	current_number_of_translucent_polygons++;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00032	83 c0 01	 add	 eax, 1
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, eax ; current_number_of_translucent_polygons

; 1024 : 
; 1025 : 	current_number_of_translucent_vertices += 2;

  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  0003f	83 c0 02	 add	 eax, 2
  00042	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, eax ; current_number_of_translucent_vertices

; 1026 : 
; 1027 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].shade_mode = D3DSHADE_FLAT;

  00047	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0004e	c6 80 04 00 00
	00 01		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+4], 1

; 1028 : 
; 1029 : 	if ( additive )

  00055	83 7d 24 00	 cmp	 DWORD PTR _additive$[ebp], 0
  00059	74 1e		 je	 SHORT $LN3@buffer_wbu

; 1030 : 	{
; 1031 : 
; 1032 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  0005b	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00062	c6 80 06 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 2

; 1033 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  00069	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00070	c6 80 07 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 2

; 1034 : 	}
; 1035 : 	else

  00077	eb 1c		 jmp	 SHORT $LN4@buffer_wbu
$LN3@buffer_wbu:

; 1036 : 	{
; 1037 : 
; 1038 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  00079	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00080	c6 80 06 00 00
	00 05		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 5

; 1039 : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  00087	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0008e	c6 80 07 00 00
	00 06		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 6
$LN4@buffer_wbu:

; 1040 : 	}
; 1041 : 
; 1042 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture = texture;

  00095	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR _texture$[ebp]
  0009f	89 88 0c 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+12], ecx

; 1043 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_mag = filter;

  000a5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000ac	8a 4d 10	 mov	 cl, BYTE PTR _filter$[ebp]
  000af	88 88 00 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax], cl

; 1044 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_min = mipmap;

  000b5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000bc	8a 4d 14	 mov	 cl, BYTE PTR _mipmap$[ebp]
  000bf	88 88 01 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+1], cl

; 1045 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_u_address = u;

  000c5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000cc	8a 4d 18	 mov	 cl, BYTE PTR _u$[ebp]
  000cf	88 88 02 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+2], cl

; 1046 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_v_address = v;

  000d5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000dc	8a 4d 1c	 mov	 cl, BYTE PTR _v$[ebp]
  000df	88 88 03 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+3], cl

; 1047 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = FALSE;

  000e5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000ec	c6 80 05 00 00
	00 00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 0

; 1048 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].point_offset = number_of_buffered_translucent_vertices;

  000f3	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000fa	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?number_of_buffered_translucent_vertices@@3HA
  00101	66 89 88 0a 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+10], cx

; 1049 : 
; 1050 : 	vert = polygon;

  00108	8b 45 08	 mov	 eax, DWORD PTR _polygon$[ebp]
  0010b	89 45 fc	 mov	 DWORD PTR _vert$[ebp], eax

; 1051 : 
; 1052 : 	vptr = &buffered_translucent_vertices_array[number_of_buffered_translucent_vertices];

  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  00113	c1 e0 05	 shl	 eax, 5
  00116	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  0011b	89 45 f8	 mov	 DWORD PTR _vptr$[ebp], eax

; 1053 : 
; 1054 : 	distance = vert->q;

  0011e	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  00121	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00126	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 1055 : 	*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  0012b	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  0012e	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00131	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00134	89 10		 mov	 DWORD PTR [eax], edx

; 1056 : 	*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  00136	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00139	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  0013c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0013f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1057 : 	*( ( int * ) &vptr->tu ) = *( ( int * ) &vert->u );

  00142	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00145	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00148	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0014b	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 1058 : 	*( ( int * ) &vptr->tv ) = *( ( int * ) &vert->v );

  0014e	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00151	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00154	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00157	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 1059 : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0015a	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  0015d	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00162	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0016a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00172	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00176	8b 4d f8	 mov	 ecx, DWORD PTR _vptr$[ebp]
  00179	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1060 : 	*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  0017e	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00181	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  00184	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00187	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1061 : 	vptr->color = colour.colour;

  0018a	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  0018d	8b 4d 20	 mov	 ecx, DWORD PTR _colour$[ebp]
  00190	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1062 : 	vptr->specular = d3d_fog_intensity;

  00193	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00196	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0019c	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 1063 : 
; 1064 : 	vptr++;

  0019f	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001a2	83 c0 20	 add	 eax, 32			; 00000020H
  001a5	89 45 f8	 mov	 DWORD PTR _vptr$[ebp], eax

; 1065 : 	vert = vert->next_vertex;

  001a8	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  001ab	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001ae	89 4d fc	 mov	 DWORD PTR _vert$[ebp], ecx

; 1066 : 
; 1067 : 	distance += vert->q;

  001b1	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  001b4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _distance$[ebp]
  001b9	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  001be	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 1068 : 	*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  001c3	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001c6	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  001c9	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  001cc	89 10		 mov	 DWORD PTR [eax], edx

; 1069 : 	*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  001ce	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001d1	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  001d4	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  001d7	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1070 : 	*( ( int * ) &vptr->tu ) = *( ( int * ) &vert->u );

  001da	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001dd	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  001e0	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  001e3	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 1071 : 	*( ( int * ) &vptr->tv ) = *( ( int * ) &vert->v );

  001e6	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  001e9	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  001ec	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  001ef	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 1072 : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  001f2	8b 45 fc	 mov	 eax, DWORD PTR _vert$[ebp]
  001f5	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  001fa	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00202	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0020a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020e	8b 4d f8	 mov	 ecx, DWORD PTR _vptr$[ebp]
  00211	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1073 : 	*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  00216	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00219	8b 4d fc	 mov	 ecx, DWORD PTR _vert$[ebp]
  0021c	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0021f	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1074 : 	vptr->color = colour.colour;

  00222	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00225	8b 4d 20	 mov	 ecx, DWORD PTR _colour$[ebp]
  00228	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1075 : 	vptr->specular = d3d_fog_intensity;

  0022b	8b 45 f8	 mov	 eax, DWORD PTR _vptr$[ebp]
  0022e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00234	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 1076 : 
; 1077 : 	distance /= 2.0;

  00237	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _distance$[ebp]
  0023c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00244	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00248	f3 0f 11 45 f4	 movss	 DWORD PTR _distance$[ebp], xmm0

; 1078 : 
; 1079 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].distance = *( ( int * ) &distance );

  0024d	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00254	8b 4d f4	 mov	 ecx, DWORD PTR _distance$[ebp]
  00257	89 88 10 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16], ecx

; 1080 : 
; 1081 : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].number_of_vertices = 2;

  0025d	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00264	b9 02 00 00 00	 mov	 ecx, 2
  00269	66 89 88 08 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8], cx

; 1082 : 
; 1083 : 	add_buffered_sorted_translucent_polygon ( number_of_buffered_translucent_polygons );

  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?add_buffered_sorted_translucent_polygon@@YGXH@Z ; add_buffered_sorted_translucent_polygon

; 1084 : 
; 1085 : 	number_of_buffered_translucent_vertices += 2;

  0027b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  00280	83 c0 02	 add	 eax, 2
  00283	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 1086 : 
; 1087 : 	return ( &buffered_translucent_polygons_array[number_of_buffered_translucent_polygons++] );

  00288	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0028f	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00294	89 45 b0	 mov	 DWORD PTR tv197[ebp], eax
  00297	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  0029d	83 c1 01	 add	 ecx, 1
  002a0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, ecx ; number_of_buffered_translucent_polygons
  002a6	8b 45 b0	 mov	 eax, DWORD PTR tv197[ebp]

; 1088 : }

  002a9	5f		 pop	 edi
  002aa	5e		 pop	 esi
  002ab	5b		 pop	 ebx
  002ac	8b e5		 mov	 esp, ebp
  002ae	5d		 pop	 ebp
  002af	c2 20 00	 ret	 32			; 00000020H
?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z ENDP ; buffer_wbuffered_flat_shaded_textured_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z
_TEXT	SEGMENT
tv186 = -92						; size = 4
_specular_colour$1 = -24				; size = 4
_colour$2 = -20						; size = 4
_distance$ = -16					; size = 4
_vptr$ = -12						; size = 4
_vert$ = -8						; size = 4
_number_of_vertices$ = -4				; size = 4
_polygon$ = 8						; size = 4
_texture$ = 12						; size = 4
_filter$ = 16						; size = 4
_mipmap$ = 20						; size = 4
_u$ = 24						; size = 4
_v$ = 28						; size = 4
_specular$ = 32						; size = 4
_additive$ = 36						; size = 4
_alpha$ = 40						; size = 4
?buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z PROC ; buffer_wbuffered_gouraud_shaded_textured_polygon, COMDAT

; 901  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 902  : 
; 903  : 	int
; 904  : 		number_of_vertices;
; 905  : 
; 906  : 	vertex
; 907  : 		*vert;
; 908  : 
; 909  : 	D3DTLVERTEX
; 910  : 		*vptr;
; 911  : 
; 912  : 	float
; 913  : 		distance;
; 914  : 
; 915  : 	ASSERT ( number_of_buffered_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS );

  00009	81 3d 00 00 00
	00 00 08 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 2048 ; number_of_buffered_translucent_polygons, 00000800H
  00013	7c 18		 jl	 SHORT $LN4@buffer_wbu
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z@4JA
  0001a	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@buffer_wbu:

; 916  : 
; 917  : 	current_number_of_translucent_polygons++;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00032	83 c0 01	 add	 eax, 1
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, eax ; current_number_of_translucent_polygons

; 918  : 
; 919  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].shade_mode = D3DSHADE_GOURAUD;

  0003a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00041	c6 80 04 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+4], 2

; 920  : 
; 921  : 	if ( additive )

  00048	83 7d 24 00	 cmp	 DWORD PTR _additive$[ebp], 0
  0004c	74 1e		 je	 SHORT $LN5@buffer_wbu

; 922  : 	{
; 923  : 
; 924  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  0004e	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00055	c6 80 06 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 2

; 925  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  0005c	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00063	c6 80 07 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 2

; 926  : 	}
; 927  : 	else

  0006a	eb 1c		 jmp	 SHORT $LN6@buffer_wbu
$LN5@buffer_wbu:

; 928  : 	{
; 929  : 
; 930  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  0006c	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00073	c6 80 06 00 00
	00 05		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 5

; 931  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  0007a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00081	c6 80 07 00 00
	00 06		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 6
$LN6@buffer_wbu:

; 932  : 	}
; 933  : 
; 934  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture = texture;

  00088	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0008f	8b 4d 0c	 mov	 ecx, DWORD PTR _texture$[ebp]
  00092	89 88 0c 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+12], ecx

; 935  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_mag = filter;

  00098	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0009f	8a 4d 10	 mov	 cl, BYTE PTR _filter$[ebp]
  000a2	88 88 00 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax], cl

; 936  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_min = mipmap;

  000a8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000af	8a 4d 14	 mov	 cl, BYTE PTR _mipmap$[ebp]
  000b2	88 88 01 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+1], cl

; 937  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_u_address = u;

  000b8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000bf	8a 4d 18	 mov	 cl, BYTE PTR _u$[ebp]
  000c2	88 88 02 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+2], cl

; 938  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_v_address = v;

  000c8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000cf	8a 4d 1c	 mov	 cl, BYTE PTR _v$[ebp]
  000d2	88 88 03 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+3], cl

; 939  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = specular;

  000d8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000df	8a 4d 20	 mov	 cl, BYTE PTR _specular$[ebp]
  000e2	88 88 05 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], cl

; 940  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].point_offset = number_of_buffered_translucent_vertices;

  000e8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000ef	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?number_of_buffered_translucent_vertices@@3HA
  000f6	66 89 88 0a 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+10], cx

; 941  : 
; 942  : 	distance = 0;

  000fd	0f 57 c0	 xorps	 xmm0, xmm0
  00100	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 943  : 
; 944  : 	number_of_vertices = 0;

  00105	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _number_of_vertices$[ebp], 0

; 945  : 
; 946  : 	vert = polygon;

  0010c	8b 45 08	 mov	 eax, DWORD PTR _polygon$[ebp]
  0010f	89 45 f8	 mov	 DWORD PTR _vert$[ebp], eax

; 947  : 
; 948  : 	vptr = &buffered_translucent_vertices_array[number_of_buffered_translucent_vertices];

  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  00117	c1 e0 05	 shl	 eax, 5
  0011a	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  0011f	89 45 f4	 mov	 DWORD PTR _vptr$[ebp], eax
$LN2@buffer_wbu:

; 949  : 
; 950  : 	//
; 951  : 	// Set up the colour of the polygon
; 952  : 	//
; 953  : 
; 954  : 	while ( vert )

  00122	83 7d f8 00	 cmp	 DWORD PTR _vert$[ebp], 0
  00126	0f 84 e3 00 00
	00		 je	 $LN3@buffer_wbu

; 955  : 	{
; 956  : 
; 957  : 		real_colour
; 958  : 			colour,
; 959  : 			specular_colour;
; 960  : 
; 961  : 		distance += vert->q;

  0012c	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0012f	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00134	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  00139	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 962  : 
; 963  : 		*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  0013e	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00141	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00144	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00147	89 10		 mov	 DWORD PTR [eax], edx

; 964  : 		*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  00149	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  0014c	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  0014f	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00152	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 965  : 		*( ( int * ) &vptr->tu ) = *( ( int * ) &vert->u );

  00155	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00158	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  0015b	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0015e	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 966  : 		*( ( int * ) &vptr->tv ) = *( ( int * ) &vert->v );

  00161	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00164	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00167	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0016a	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 967  : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0016d	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00170	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00175	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0017d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00185	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00189	8b 4d f4	 mov	 ecx, DWORD PTR _vptr$[ebp]
  0018c	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 968  : 		*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  00191	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00194	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00197	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0019a	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 969  : 
; 970  : 		colour.red = vert->red;

  0019d	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001a0	8a 48 32	 mov	 cl, BYTE PTR [eax+50]
  001a3	88 4d ee	 mov	 BYTE PTR _colour$2[ebp+2], cl

; 971  : 		colour.green = vert->green;

  001a6	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001a9	8a 48 31	 mov	 cl, BYTE PTR [eax+49]
  001ac	88 4d ed	 mov	 BYTE PTR _colour$2[ebp+1], cl

; 972  : 		colour.blue = vert->blue;

  001af	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001b2	8a 48 30	 mov	 cl, BYTE PTR [eax+48]
  001b5	88 4d ec	 mov	 BYTE PTR _colour$2[ebp], cl

; 973  : 		colour.alpha = alpha;

  001b8	8a 45 28	 mov	 al, BYTE PTR _alpha$[ebp]
  001bb	88 45 ef	 mov	 BYTE PTR _colour$2[ebp+3], al

; 974  : 
; 975  : 		specular_colour.red = vert->specular;

  001be	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001c1	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  001c4	88 4d ea	 mov	 BYTE PTR _specular_colour$1[ebp+2], cl

; 976  : 		specular_colour.green = vert->specular;

  001c7	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001ca	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  001cd	88 4d e9	 mov	 BYTE PTR _specular_colour$1[ebp+1], cl

; 977  : 		specular_colour.blue = vert->specular;

  001d0	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001d3	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  001d6	88 4d e8	 mov	 BYTE PTR _specular_colour$1[ebp], cl

; 978  : 		specular_colour.alpha = 255;

  001d9	c6 45 eb ff	 mov	 BYTE PTR _specular_colour$1[ebp+3], 255 ; 000000ffH

; 979  : 
; 980  : 		vptr->color = colour.colour;

  001dd	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  001e0	8b 4d ec	 mov	 ecx, DWORD PTR _colour$2[ebp]
  001e3	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 981  : 		vptr->specular = specular_colour.colour;

  001e6	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  001e9	8b 4d e8	 mov	 ecx, DWORD PTR _specular_colour$1[ebp]
  001ec	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 982  : 
; 983  : 		vptr++;

  001ef	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  001f2	83 c0 20	 add	 eax, 32			; 00000020H
  001f5	89 45 f4	 mov	 DWORD PTR _vptr$[ebp], eax

; 984  : 
; 985  : 		vert = vert->next_vertex;

  001f8	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001fb	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001fe	89 4d f8	 mov	 DWORD PTR _vert$[ebp], ecx

; 986  : 
; 987  : 		number_of_vertices++;

  00201	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  00204	83 c0 01	 add	 eax, 1
  00207	89 45 fc	 mov	 DWORD PTR _number_of_vertices$[ebp], eax

; 988  : 	}

  0020a	e9 13 ff ff ff	 jmp	 $LN2@buffer_wbu
$LN3@buffer_wbu:

; 989  : 
; 990  : 	distance *= one_over_table[number_of_vertices];

  0020f	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  00212	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  00218	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  0021d	f3 0f 59 04 81	 mulss	 xmm0, DWORD PTR [ecx+eax*4]
  00222	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 991  : 
; 992  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].distance = *( ( int * ) &distance );

  00227	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0022e	8b 4d f0	 mov	 ecx, DWORD PTR _distance$[ebp]
  00231	89 88 10 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16], ecx

; 993  : 
; 994  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].number_of_vertices = number_of_vertices;

  00237	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0023e	66 8b 4d fc	 mov	 cx, WORD PTR _number_of_vertices$[ebp]
  00242	66 89 88 08 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8], cx

; 995  : 
; 996  : 	add_buffered_sorted_translucent_polygon ( number_of_buffered_translucent_polygons );

  00249	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?add_buffered_sorted_translucent_polygon@@YGXH@Z ; add_buffered_sorted_translucent_polygon

; 997  : 
; 998  : 	number_of_buffered_translucent_vertices += number_of_vertices;

  00254	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  00259	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  0025c	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 999  : 
; 1000 : 	current_number_of_translucent_vertices += number_of_vertices;

  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  00266	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  00269	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, eax ; current_number_of_translucent_vertices

; 1001 : 
; 1002 : 	return ( &buffered_translucent_polygons_array[number_of_buffered_translucent_polygons++] );

  0026e	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00275	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  0027a	89 45 a4	 mov	 DWORD PTR tv186[ebp], eax
  0027d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00283	83 c1 01	 add	 ecx, 1
  00286	89 0d 00 00 00
	00		 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, ecx ; number_of_buffered_translucent_polygons
  0028c	8b 45 a4	 mov	 eax, DWORD PTR tv186[ebp]

; 1003 : }

  0028f	5f		 pop	 edi
  00290	5e		 pop	 esi
  00291	5b		 pop	 ebx
  00292	8b e5		 mov	 esp, ebp
  00294	5d		 pop	 ebp
  00295	c2 24 00	 ret	 36			; 00000024H
?buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z ENDP ; buffer_wbuffered_gouraud_shaded_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z
_TEXT	SEGMENT
tv185 = -84						; size = 4
_distance$ = -16					; size = 4
_vptr$ = -12						; size = 4
_vert$ = -8						; size = 4
_number_of_vertices$ = -4				; size = 4
_polygon$ = 8						; size = 4
_texture$ = 12						; size = 4
_filter$ = 16						; size = 4
_mipmap$ = 20						; size = 4
_u$ = 24						; size = 4
_v$ = 28						; size = 4
_colour$ = 32						; size = 4
_specular$ = 36						; size = 4
_additive$ = 40						; size = 4
?buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z PROC ; buffer_wbuffered_flat_shaded_textured_polygon, COMDAT

; 799  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 800  : 
; 801  : 	int
; 802  : 		number_of_vertices;
; 803  : 
; 804  : 	vertex
; 805  : 		*vert;
; 806  : 
; 807  : 	D3DTLVERTEX
; 808  : 		*vptr;
; 809  : 
; 810  : 	float
; 811  : 		distance;
; 812  : 
; 813  : 	ASSERT ( number_of_buffered_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS );

  00009	81 3d 00 00 00
	00 00 08 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 2048 ; number_of_buffered_translucent_polygons, 00000800H
  00013	7c 18		 jl	 SHORT $LN4@buffer_wbu
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z@4JA
  0001a	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@buffer_wbu:

; 814  : 
; 815  : 	current_number_of_translucent_polygons++;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00032	83 c0 01	 add	 eax, 1
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, eax ; current_number_of_translucent_polygons

; 816  : 
; 817  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].shade_mode = D3DSHADE_FLAT;

  0003a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00041	c6 80 04 00 00
	00 01		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+4], 1

; 818  : 
; 819  : 	if ( additive )

  00048	83 7d 28 00	 cmp	 DWORD PTR _additive$[ebp], 0
  0004c	74 1e		 je	 SHORT $LN5@buffer_wbu

; 820  : 	{
; 821  : 
; 822  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  0004e	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00055	c6 80 06 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 2

; 823  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  0005c	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00063	c6 80 07 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 2

; 824  : 	}
; 825  : 	else

  0006a	eb 1c		 jmp	 SHORT $LN6@buffer_wbu
$LN5@buffer_wbu:

; 826  : 	{
; 827  : 
; 828  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  0006c	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00073	c6 80 06 00 00
	00 05		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 5

; 829  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  0007a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00081	c6 80 07 00 00
	00 06		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 6
$LN6@buffer_wbu:

; 830  : 	}
; 831  : 
; 832  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture = texture;

  00088	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0008f	8b 4d 0c	 mov	 ecx, DWORD PTR _texture$[ebp]
  00092	89 88 0c 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+12], ecx

; 833  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_mag = filter;

  00098	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0009f	8a 4d 10	 mov	 cl, BYTE PTR _filter$[ebp]
  000a2	88 88 00 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax], cl

; 834  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_min = mipmap;

  000a8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000af	8a 4d 14	 mov	 cl, BYTE PTR _mipmap$[ebp]
  000b2	88 88 01 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+1], cl

; 835  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_u_address = u;

  000b8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000bf	8a 4d 18	 mov	 cl, BYTE PTR _u$[ebp]
  000c2	88 88 02 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+2], cl

; 836  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_v_address = v;

  000c8	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000cf	8a 4d 1c	 mov	 cl, BYTE PTR _v$[ebp]
  000d2	88 88 03 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+3], cl

; 837  : 
; 838  : 	if ( specular.red != 0 )

  000d8	0f b6 45 26	 movzx	 eax, BYTE PTR _specular$[ebp+2]
  000dc	85 c0		 test	 eax, eax
  000de	74 10		 je	 SHORT $LN7@buffer_wbu

; 839  : 	{
; 840  : 
; 841  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = TRUE;

  000e0	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000e7	c6 80 05 00 00
	00 01		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 1

; 842  : 	}
; 843  : 	else

  000ee	eb 0e		 jmp	 SHORT $LN8@buffer_wbu
$LN7@buffer_wbu:

; 844  : 	{
; 845  : 
; 846  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = FALSE;

  000f0	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000f7	c6 80 05 00 00
	00 00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 0
$LN8@buffer_wbu:

; 847  : 	}
; 848  : 
; 849  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].point_offset = number_of_buffered_translucent_vertices;

  000fe	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00105	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?number_of_buffered_translucent_vertices@@3HA
  0010c	66 89 88 0a 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+10], cx

; 850  : 
; 851  : 	distance = 0;

  00113	0f 57 c0	 xorps	 xmm0, xmm0
  00116	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 852  : 
; 853  : 	number_of_vertices = 0;

  0011b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _number_of_vertices$[ebp], 0

; 854  : 
; 855  : 	vert = polygon;

  00122	8b 45 08	 mov	 eax, DWORD PTR _polygon$[ebp]
  00125	89 45 f8	 mov	 DWORD PTR _vert$[ebp], eax

; 856  : 
; 857  : 	vptr = &buffered_translucent_vertices_array[number_of_buffered_translucent_vertices];

  00128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  0012d	c1 e0 05	 shl	 eax, 5
  00130	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  00135	89 45 f4	 mov	 DWORD PTR _vptr$[ebp], eax
$LN2@buffer_wbu:

; 858  : 
; 859  : 	while ( vert )

  00138	83 7d f8 00	 cmp	 DWORD PTR _vert$[ebp], 0
  0013c	0f 84 a3 00 00
	00		 je	 $LN3@buffer_wbu

; 860  : 	{
; 861  : 
; 862  : 		distance += vert->q;

  00142	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00145	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  0014a	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  0014f	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 863  : 
; 864  : 		*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  00154	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00157	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  0015a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0015d	89 10		 mov	 DWORD PTR [eax], edx

; 865  : 		*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  0015f	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00162	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00165	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00168	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 866  : 		*( ( int * ) &vptr->tu ) = *( ( int * ) &vert->u );

  0016b	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  0016e	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00171	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00174	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 867  : 		*( ( int * ) &vptr->tv ) = *( ( int * ) &vert->v );

  00177	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  0017a	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  0017d	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00180	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 868  : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00183	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00186	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  0018b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00193	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0019b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019f	8b 4d f4	 mov	 ecx, DWORD PTR _vptr$[ebp]
  001a2	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 869  : 		*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  001a7	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  001aa	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  001ad	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  001b0	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 870  : 
; 871  : 		vptr->color = colour.colour;

  001b3	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  001b6	8b 4d 20	 mov	 ecx, DWORD PTR _colour$[ebp]
  001b9	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 872  : 		vptr->specular = specular.colour;

  001bc	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  001bf	8b 4d 24	 mov	 ecx, DWORD PTR _specular$[ebp]
  001c2	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 873  : 
; 874  : 		vptr++;

  001c5	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  001c8	83 c0 20	 add	 eax, 32			; 00000020H
  001cb	89 45 f4	 mov	 DWORD PTR _vptr$[ebp], eax

; 875  : 
; 876  : 		vert = vert->next_vertex;

  001ce	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001d1	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001d4	89 4d f8	 mov	 DWORD PTR _vert$[ebp], ecx

; 877  : 
; 878  : 		number_of_vertices++;

  001d7	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  001da	83 c0 01	 add	 eax, 1
  001dd	89 45 fc	 mov	 DWORD PTR _number_of_vertices$[ebp], eax

; 879  : 	}

  001e0	e9 53 ff ff ff	 jmp	 $LN2@buffer_wbu
$LN3@buffer_wbu:

; 880  : 
; 881  : 	distance *= one_over_table[number_of_vertices];

  001e5	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  001e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  001ee	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  001f3	f3 0f 59 04 81	 mulss	 xmm0, DWORD PTR [ecx+eax*4]
  001f8	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 882  : 
; 883  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].distance = *( ( int * ) &distance );

  001fd	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00204	8b 4d f0	 mov	 ecx, DWORD PTR _distance$[ebp]
  00207	89 88 10 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16], ecx

; 884  : 
; 885  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].number_of_vertices = number_of_vertices;

  0020d	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00214	66 8b 4d fc	 mov	 cx, WORD PTR _number_of_vertices$[ebp]
  00218	66 89 88 08 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8], cx

; 886  : 
; 887  : 	add_buffered_sorted_translucent_polygon ( number_of_buffered_translucent_polygons );

  0021f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00224	50		 push	 eax
  00225	e8 00 00 00 00	 call	 ?add_buffered_sorted_translucent_polygon@@YGXH@Z ; add_buffered_sorted_translucent_polygon

; 888  : 
; 889  : 	number_of_buffered_translucent_vertices += number_of_vertices;

  0022a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  0022f	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  00232	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 890  : 
; 891  : 	current_number_of_translucent_vertices += number_of_vertices;

  00237	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  0023c	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  0023f	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, eax ; current_number_of_translucent_vertices

; 892  : 
; 893  : 	return ( &buffered_translucent_polygons_array[number_of_buffered_translucent_polygons++] );

  00244	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0024b	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00250	89 45 ac	 mov	 DWORD PTR tv185[ebp], eax
  00253	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00259	83 c1 01	 add	 ecx, 1
  0025c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, ecx ; number_of_buffered_translucent_polygons
  00262	8b 45 ac	 mov	 eax, DWORD PTR tv185[ebp]

; 894  : }

  00265	5f		 pop	 edi
  00266	5e		 pop	 esi
  00267	5b		 pop	 ebx
  00268	8b e5		 mov	 esp, ebp
  0026a	5d		 pop	 ebp
  0026b	c2 24 00	 ret	 36			; 00000024H
?buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z ENDP ; buffer_wbuffered_flat_shaded_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z
_TEXT	SEGMENT
tv189 = -116						; size = 4
_specular$ = -48					; size = 4
_colour$ = -44						; size = 4
_distance$ = -40					; size = 4
_fb$ = -36						; size = 4
_fg$ = -32						; size = 4
_fr$ = -28						; size = 4
_vptr$ = -24						; size = 4
_vert$ = -20						; size = 4
_b$ = -16						; size = 4
_g$ = -12						; size = 4
_r$ = -8						; size = 4
_number_of_vertices$ = -4				; size = 4
_polygon$ = 8						; size = 4
_red$ = 12						; size = 4
_green$ = 16						; size = 4
_blue$ = 20						; size = 4
_alpha$ = 24						; size = 4
_specularity$ = 28					; size = 4
_additive$ = 32						; size = 4
?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z PROC ; buffer_wbuffered_gouraud_shaded_polygon, COMDAT

; 670  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 671  : 
; 672  : 	int
; 673  : 		number_of_vertices,
; 674  : 		r,
; 675  : 		g,
; 676  : 		b;
; 677  : 
; 678  : 	vertex
; 679  : 		*vert;
; 680  : 
; 681  : 	D3DTLVERTEX
; 682  : 		*vptr;
; 683  : 
; 684  : 	float
; 685  : 		fr,
; 686  : 		fg,
; 687  : 		fb,
; 688  : 		distance;
; 689  : 
; 690  : 	real_colour
; 691  : 		colour,
; 692  : 		specular;
; 693  : 
; 694  : 	ASSERT ( number_of_buffered_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS );

  00009	81 3d 00 00 00
	00 00 08 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 2048 ; number_of_buffered_translucent_polygons, 00000800H
  00013	7c 18		 jl	 SHORT $LN4@buffer_wbu
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z@4JA
  0001a	83 c0 18	 add	 eax, 24			; 00000018H
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@buffer_wbu:

; 695  : 
; 696  : 	current_number_of_translucent_polygons++;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00032	83 c0 01	 add	 eax, 1
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, eax ; current_number_of_translucent_polygons

; 697  : 
; 698  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture = NULL;

  0003a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00041	c7 80 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+12], 0

; 699  : 
; 700  : 	if ( additive )

  0004b	83 7d 20 00	 cmp	 DWORD PTR _additive$[ebp], 0
  0004f	74 1e		 je	 SHORT $LN5@buffer_wbu

; 701  : 	{
; 702  : 
; 703  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  00051	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00058	c6 80 06 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 2

; 704  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  0005f	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00066	c6 80 07 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 2

; 705  : 	}
; 706  : 	else

  0006d	eb 1c		 jmp	 SHORT $LN6@buffer_wbu
$LN5@buffer_wbu:

; 707  : 	{
; 708  : 
; 709  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  0006f	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00076	c6 80 06 00 00
	00 05		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 5

; 710  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  0007d	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00084	c6 80 07 00 00
	00 06		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 6
$LN6@buffer_wbu:

; 711  : 	}
; 712  : 
; 713  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].shade_mode = D3DSHADE_GOURAUD;

  0008b	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00092	c6 80 04 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+4], 2

; 714  : 
; 715  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].point_offset = number_of_buffered_translucent_vertices;

  00099	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000a0	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?number_of_buffered_translucent_vertices@@3HA
  000a7	66 89 88 0a 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+10], cx

; 716  : 
; 717  : 	if ( specularity > 0 )

  000ae	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _specularity$[ebp]
  000b3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  000ba	76 10		 jbe	 SHORT $LN7@buffer_wbu

; 718  : 	{
; 719  : 
; 720  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = TRUE;

  000bc	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000c3	c6 80 05 00 00
	00 01		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 1

; 721  : 	}
; 722  : 	else

  000ca	eb 0e		 jmp	 SHORT $LN8@buffer_wbu
$LN7@buffer_wbu:

; 723  : 	{
; 724  : 
; 725  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = FALSE;

  000cc	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000d3	c6 80 05 00 00
	00 00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 0
$LN8@buffer_wbu:

; 726  : 	}
; 727  : 
; 728  : 	distance = 0;

  000da	0f 57 c0	 xorps	 xmm0, xmm0
  000dd	f3 0f 11 45 d8	 movss	 DWORD PTR _distance$[ebp], xmm0

; 729  : 
; 730  : 	number_of_vertices = 0;

  000e2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _number_of_vertices$[ebp], 0

; 731  : 
; 732  : 	vert = polygon;

  000e9	8b 45 08	 mov	 eax, DWORD PTR _polygon$[ebp]
  000ec	89 45 ec	 mov	 DWORD PTR _vert$[ebp], eax

; 733  : 
; 734  : 	vptr = &buffered_translucent_vertices_array[number_of_buffered_translucent_vertices];

  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  000f4	c1 e0 05	 shl	 eax, 5
  000f7	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  000fc	89 45 e8	 mov	 DWORD PTR _vptr$[ebp], eax

; 735  : 
; 736  : 	//
; 737  : 	// Set up the colour of the polygon
; 738  : 	//
; 739  : 
; 740  : 	colour.alpha = alpha;

  000ff	8a 45 18	 mov	 al, BYTE PTR _alpha$[ebp]
  00102	88 45 d7	 mov	 BYTE PTR _colour$[ebp+3], al

; 741  : 	specular.colour = d3d_fog_intensity;

  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0010a	89 45 d0	 mov	 DWORD PTR _specular$[ebp], eax
$LN2@buffer_wbu:

; 742  : 
; 743  : 	while ( vert )

  0010d	83 7d ec 00	 cmp	 DWORD PTR _vert$[ebp], 0
  00111	0f 84 30 01 00
	00		 je	 $LN3@buffer_wbu

; 744  : 	{
; 745  : 
; 746  : 		distance += vert->q;

  00117	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  0011a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _distance$[ebp]
  0011f	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  00124	f3 0f 11 45 d8	 movss	 DWORD PTR _distance$[ebp], xmm0

; 747  : 
; 748  : 		*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  00129	8b 45 e8	 mov	 eax, DWORD PTR _vptr$[ebp]
  0012c	8b 4d ec	 mov	 ecx, DWORD PTR _vert$[ebp]
  0012f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00132	89 10		 mov	 DWORD PTR [eax], edx

; 749  : 		*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  00134	8b 45 e8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00137	8b 4d ec	 mov	 ecx, DWORD PTR _vert$[ebp]
  0013a	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0013d	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 750  : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00140	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  00143	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00148	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00150	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00158	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0015c	8b 4d e8	 mov	 ecx, DWORD PTR _vptr$[ebp]
  0015f	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 751  : 		*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  00164	8b 45 e8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00167	8b 4d ec	 mov	 ecx, DWORD PTR _vert$[ebp]
  0016a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0016d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 752  : 
; 753  : 		fr = ( vert->red * red ) + FLOAT_FLOAT_FACTOR;

  00170	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  00173	0f b6 48 32	 movzx	 ecx, BYTE PTR [eax+50]
  00177	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0017b	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _red$[ebp]
  00180	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  00188	f3 0f 11 45 e4	 movss	 DWORD PTR _fr$[ebp], xmm0

; 754  : 		fg = ( vert->green * green ) + FLOAT_FLOAT_FACTOR;

  0018d	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  00190	0f b6 48 31	 movzx	 ecx, BYTE PTR [eax+49]
  00194	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00198	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _green$[ebp]
  0019d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001a5	f3 0f 11 45 e0	 movss	 DWORD PTR _fg$[ebp], xmm0

; 755  : 		fb = ( vert->blue * blue ) + FLOAT_FLOAT_FACTOR;

  001aa	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  001ad	0f b6 48 30	 movzx	 ecx, BYTE PTR [eax+48]
  001b1	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001b5	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _blue$[ebp]
  001ba	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001c2	f3 0f 11 45 dc	 movss	 DWORD PTR _fb$[ebp], xmm0

; 756  : 
; 757  : 		r = ( *( int * ) &fr ) - INTEGER_FLOAT_FACTOR;

  001c7	8b 45 e4	 mov	 eax, DWORD PTR _fr$[ebp]
  001ca	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  001cf	89 45 f8	 mov	 DWORD PTR _r$[ebp], eax

; 758  : 		g = ( *( int * ) &fg ) - INTEGER_FLOAT_FACTOR;

  001d2	8b 45 e0	 mov	 eax, DWORD PTR _fg$[ebp]
  001d5	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  001da	89 45 f4	 mov	 DWORD PTR _g$[ebp], eax

; 759  : 		b = ( *( int * ) &fb ) - INTEGER_FLOAT_FACTOR;

  001dd	8b 45 dc	 mov	 eax, DWORD PTR _fb$[ebp]
  001e0	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  001e5	89 45 f0	 mov	 DWORD PTR _b$[ebp], eax

; 760  : 
; 761  : 		colour.red = r;

  001e8	8a 45 f8	 mov	 al, BYTE PTR _r$[ebp]
  001eb	88 45 d6	 mov	 BYTE PTR _colour$[ebp+2], al

; 762  : 		colour.green = g;

  001ee	8a 45 f4	 mov	 al, BYTE PTR _g$[ebp]
  001f1	88 45 d5	 mov	 BYTE PTR _colour$[ebp+1], al

; 763  : 		colour.blue = b;

  001f4	8a 45 f0	 mov	 al, BYTE PTR _b$[ebp]
  001f7	88 45 d4	 mov	 BYTE PTR _colour$[ebp], al

; 764  : 
; 765  : 		specular.red = vert->specular;

  001fa	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  001fd	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  00200	88 4d d2	 mov	 BYTE PTR _specular$[ebp+2], cl

; 766  : 		specular.green = vert->specular;

  00203	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  00206	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  00209	88 4d d1	 mov	 BYTE PTR _specular$[ebp+1], cl

; 767  : 		specular.blue = vert->specular;

  0020c	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  0020f	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  00212	88 4d d0	 mov	 BYTE PTR _specular$[ebp], cl

; 768  : 
; 769  : 		vptr->color = colour.colour;

  00215	8b 45 e8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00218	8b 4d d4	 mov	 ecx, DWORD PTR _colour$[ebp]
  0021b	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 770  : 		vptr->specular = specular.colour;

  0021e	8b 45 e8	 mov	 eax, DWORD PTR _vptr$[ebp]
  00221	8b 4d d0	 mov	 ecx, DWORD PTR _specular$[ebp]
  00224	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 771  : 
; 772  : 		vptr++;

  00227	8b 45 e8	 mov	 eax, DWORD PTR _vptr$[ebp]
  0022a	83 c0 20	 add	 eax, 32			; 00000020H
  0022d	89 45 e8	 mov	 DWORD PTR _vptr$[ebp], eax

; 773  : 
; 774  : 		vert = vert->next_vertex;

  00230	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  00233	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00236	89 4d ec	 mov	 DWORD PTR _vert$[ebp], ecx

; 775  : 
; 776  : 		number_of_vertices++;

  00239	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  0023c	83 c0 01	 add	 eax, 1
  0023f	89 45 fc	 mov	 DWORD PTR _number_of_vertices$[ebp], eax

; 777  : 	}

  00242	e9 c6 fe ff ff	 jmp	 $LN2@buffer_wbu
$LN3@buffer_wbu:

; 778  : 
; 779  : 	distance *= one_over_table[number_of_vertices];

  00247	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  0024a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  00250	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00255	f3 0f 59 04 81	 mulss	 xmm0, DWORD PTR [ecx+eax*4]
  0025a	f3 0f 11 45 d8	 movss	 DWORD PTR _distance$[ebp], xmm0

; 780  : 
; 781  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].distance = *( ( int * ) &distance );

  0025f	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00266	8b 4d d8	 mov	 ecx, DWORD PTR _distance$[ebp]
  00269	89 88 10 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16], ecx

; 782  : 
; 783  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].number_of_vertices = number_of_vertices;

  0026f	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00276	66 8b 4d fc	 mov	 cx, WORD PTR _number_of_vertices$[ebp]
  0027a	66 89 88 08 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8], cx

; 784  : 
; 785  : 	add_buffered_sorted_translucent_polygon ( number_of_buffered_translucent_polygons );

  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00286	50		 push	 eax
  00287	e8 00 00 00 00	 call	 ?add_buffered_sorted_translucent_polygon@@YGXH@Z ; add_buffered_sorted_translucent_polygon

; 786  : 
; 787  : 	number_of_buffered_translucent_vertices += number_of_vertices;

  0028c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  00291	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  00294	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 788  : 
; 789  : 	current_number_of_translucent_vertices += number_of_vertices;

  00299	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  0029e	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  002a1	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, eax ; current_number_of_translucent_vertices

; 790  : 
; 791  : 	return ( &buffered_translucent_polygons_array[number_of_buffered_translucent_polygons++] );

  002a6	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  002ad	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  002b2	89 45 8c	 mov	 DWORD PTR tv189[ebp], eax
  002b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  002bb	83 c1 01	 add	 ecx, 1
  002be	89 0d 00 00 00
	00		 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, ecx ; number_of_buffered_translucent_polygons
  002c4	8b 45 8c	 mov	 eax, DWORD PTR tv189[ebp]

; 792  : }

  002c7	5f		 pop	 edi
  002c8	5e		 pop	 esi
  002c9	5b		 pop	 ebx
  002ca	8b e5		 mov	 esp, ebp
  002cc	5d		 pop	 ebp
  002cd	c2 1c 00	 ret	 28			; 0000001cH
?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z ENDP ; buffer_wbuffered_gouraud_shaded_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z
_TEXT	SEGMENT
tv169 = -84						; size = 4
_distance$ = -16					; size = 4
_vptr$ = -12						; size = 4
_vert$ = -8						; size = 4
_number_of_vertices$ = -4				; size = 4
_polygon$ = 8						; size = 4
_colour$ = 12						; size = 4
_specular$ = 16						; size = 4
_additive$ = 20						; size = 4
?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z PROC ; buffer_wbuffered_plain_polygon, COMDAT

; 571  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 572  : 
; 573  : 	int
; 574  : 		number_of_vertices;
; 575  : 
; 576  : 	vertex
; 577  : 		*vert;
; 578  : 
; 579  : 	D3DTLVERTEX
; 580  : 		*vptr;
; 581  : 
; 582  : 	float
; 583  : 		distance;
; 584  : 
; 585  : 	ASSERT ( number_of_buffered_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS );

  00009	81 3d 00 00 00
	00 00 08 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 2048 ; number_of_buffered_translucent_polygons, 00000800H
  00013	7c 18		 jl	 SHORT $LN4@buffer_wbu
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z@4JA
  0001a	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@buffer_wbu:

; 586  : 
; 587  : 	current_number_of_translucent_polygons++;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00032	83 c0 01	 add	 eax, 1
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, eax ; current_number_of_translucent_polygons

; 588  : 
; 589  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture = NULL;

  0003a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00041	c7 80 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+12], 0

; 590  : 
; 591  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].shade_mode = D3DSHADE_FLAT;

  0004b	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00052	c6 80 04 00 00
	00 01		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+4], 1

; 592  : 
; 593  : 	if ( additive )

  00059	83 7d 14 00	 cmp	 DWORD PTR _additive$[ebp], 0
  0005d	74 1e		 je	 SHORT $LN5@buffer_wbu

; 594  : 	{
; 595  : 
; 596  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  0005f	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00066	c6 80 06 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 2

; 597  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  0006d	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00074	c6 80 07 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 2

; 598  : 	}
; 599  : 	else

  0007b	eb 1c		 jmp	 SHORT $LN6@buffer_wbu
$LN5@buffer_wbu:

; 600  : 	{
; 601  : 
; 602  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  0007d	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00084	c6 80 06 00 00
	00 05		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 5

; 603  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  0008b	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00092	c6 80 07 00 00
	00 06		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 6
$LN6@buffer_wbu:

; 604  : 	}
; 605  : 
; 606  : 	if ( specular.red != 0 )

  00099	0f b6 45 12	 movzx	 eax, BYTE PTR _specular$[ebp+2]
  0009d	85 c0		 test	 eax, eax
  0009f	74 10		 je	 SHORT $LN7@buffer_wbu

; 607  : 	{
; 608  : 
; 609  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = TRUE;

  000a1	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000a8	c6 80 05 00 00
	00 01		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 1

; 610  : 	}
; 611  : 	else

  000af	eb 0e		 jmp	 SHORT $LN8@buffer_wbu
$LN7@buffer_wbu:

; 612  : 	{
; 613  : 	
; 614  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = FALSE;

  000b1	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000b8	c6 80 05 00 00
	00 00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], 0
$LN8@buffer_wbu:

; 615  : 	}
; 616  : 
; 617  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].point_offset = number_of_buffered_translucent_vertices;

  000bf	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000c6	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?number_of_buffered_translucent_vertices@@3HA
  000cd	66 89 88 0a 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+10], cx

; 618  : 
; 619  : 	number_of_vertices = 0;

  000d4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _number_of_vertices$[ebp], 0

; 620  : 
; 621  : 	vert = polygon;

  000db	8b 45 08	 mov	 eax, DWORD PTR _polygon$[ebp]
  000de	89 45 f8	 mov	 DWORD PTR _vert$[ebp], eax

; 622  : 
; 623  : 	vptr = &buffered_translucent_vertices_array[number_of_buffered_translucent_vertices];

  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  000e6	c1 e0 05	 shl	 eax, 5
  000e9	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  000ee	89 45 f4	 mov	 DWORD PTR _vptr$[ebp], eax

; 624  : 
; 625  : 	//
; 626  : 	// Set up the colour of the polygon
; 627  : 	//
; 628  : 
; 629  : 	distance = 0;

  000f1	0f 57 c0	 xorps	 xmm0, xmm0
  000f4	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0
$LN2@buffer_wbu:

; 630  : 
; 631  : 	while ( vert )

  000f9	83 7d f8 00	 cmp	 DWORD PTR _vert$[ebp], 0
  000fd	0f 84 8b 00 00
	00		 je	 $LN3@buffer_wbu

; 632  : 	{
; 633  : 
; 634  : 		distance += vert->q;

  00103	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00106	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  0010b	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  00110	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 635  : 
; 636  : 		*( ( int * ) &vptr->sx ) = *( ( int * ) &vert->i );

  00115	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00118	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  0011b	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0011e	89 10		 mov	 DWORD PTR [eax], edx

; 637  : 		*( ( int * ) &vptr->sy ) = *( ( int * ) &vert->j );

  00120	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00123	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00126	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00129	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 638  : 		vptr->sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0012c	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0012f	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00134	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0013c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00144	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00148	8b 4d f4	 mov	 ecx, DWORD PTR _vptr$[ebp]
  0014b	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 639  : 		*( ( int * ) &vptr->rhw ) = *( ( int * ) &vert->q );

  00150	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00153	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00156	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00159	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 640  : 		vptr->color = colour.colour;

  0015c	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  0015f	8b 4d 0c	 mov	 ecx, DWORD PTR _colour$[ebp]
  00162	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 641  : 		vptr->specular = specular.colour;

  00165	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00168	8b 4d 10	 mov	 ecx, DWORD PTR _specular$[ebp]
  0016b	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 642  : 
; 643  : 		vptr++;

  0016e	8b 45 f4	 mov	 eax, DWORD PTR _vptr$[ebp]
  00171	83 c0 20	 add	 eax, 32			; 00000020H
  00174	89 45 f4	 mov	 DWORD PTR _vptr$[ebp], eax

; 644  : 
; 645  : 		vert = vert->next_vertex;

  00177	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0017a	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0017d	89 4d f8	 mov	 DWORD PTR _vert$[ebp], ecx

; 646  : 
; 647  : 		number_of_vertices++;

  00180	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  00183	83 c0 01	 add	 eax, 1
  00186	89 45 fc	 mov	 DWORD PTR _number_of_vertices$[ebp], eax

; 648  : 	}

  00189	e9 6b ff ff ff	 jmp	 $LN2@buffer_wbu
$LN3@buffer_wbu:

; 649  : 
; 650  : 	distance *= one_over_table[number_of_vertices];

  0018e	8b 45 fc	 mov	 eax, DWORD PTR _number_of_vertices$[ebp]
  00191	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  00197	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _distance$[ebp]
  0019c	f3 0f 59 04 81	 mulss	 xmm0, DWORD PTR [ecx+eax*4]
  001a1	f3 0f 11 45 f0	 movss	 DWORD PTR _distance$[ebp], xmm0

; 651  : 
; 652  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].distance = *( ( int * ) &distance );

  001a6	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  001ad	8b 4d f0	 mov	 ecx, DWORD PTR _distance$[ebp]
  001b0	89 88 10 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16], ecx

; 653  : 
; 654  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].number_of_vertices = number_of_vertices;

  001b6	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  001bd	66 8b 4d fc	 mov	 cx, WORD PTR _number_of_vertices$[ebp]
  001c1	66 89 88 08 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8], cx

; 655  : 
; 656  : 	add_buffered_sorted_translucent_polygon ( number_of_buffered_translucent_polygons );

  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?add_buffered_sorted_translucent_polygon@@YGXH@Z ; add_buffered_sorted_translucent_polygon

; 657  : 
; 658  : 	number_of_buffered_translucent_vertices += number_of_vertices;

  001d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  001d8	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  001db	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 659  : 
; 660  : 	current_number_of_translucent_vertices += number_of_vertices;

  001e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  001e5	03 45 fc	 add	 eax, DWORD PTR _number_of_vertices$[ebp]
  001e8	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, eax ; current_number_of_translucent_vertices

; 661  : 
; 662  : 	return ( &buffered_translucent_polygons_array[number_of_buffered_translucent_polygons++] );

  001ed	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  001f4	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  001f9	89 45 ac	 mov	 DWORD PTR tv169[ebp], eax
  001fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00202	83 c1 01	 add	 ecx, 1
  00205	89 0d 00 00 00
	00		 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, ecx ; number_of_buffered_translucent_polygons
  0020b	8b 45 ac	 mov	 eax, DWORD PTR tv169[ebp]

; 663  : }

  0020e	5f		 pop	 edi
  0020f	5e		 pop	 esi
  00210	5b		 pop	 ebx
  00211	8b e5		 mov	 esp, ebp
  00213	5d		 pop	 ebp
  00214	c2 10 00	 ret	 16			; 00000010H
?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z ENDP ; buffer_wbuffered_plain_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z
_TEXT	SEGMENT
tv156 = -68						; size = 4
_points$ = 8						; size = 4
_distance$ = 12						; size = 4
_shading$ = 16						; size = 4
_texture$ = 20						; size = 4
_filter$ = 24						; size = 4
_mipmap$ = 28						; size = 4
_u$ = 32						; size = 4
_v$ = 36						; size = 4
_specular$ = 40						; size = 4
_additive$ = 44						; size = 4
?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z PROC ; add_buffered_processed_polygon, COMDAT

; 526  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 527  : 
; 528  : 	ASSERT ( points );

  00009	83 7d 08 00	 cmp	 DWORD PTR _points$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@add_buffer
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06GPGIDCJA@points@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@add_buffer:

; 529  : 	ASSERT ( number_of_buffered_translucent_polygons < MAX_BUFFERED_TRANSLUCENT_POLYGONS );

  00027	81 3d 00 00 00
	00 00 08 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 2048 ; number_of_buffered_translucent_polygons, 00000800H
  00031	7c 18		 jl	 SHORT $LN3@add_buffer
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IAJMLMJM@number_of_buffered_translucent_@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@add_buffer:

; 530  : 
; 531  : 	current_number_of_translucent_polygons++;

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00050	83 c0 01	 add	 eax, 1
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, eax ; current_number_of_translucent_polygons

; 532  : 	current_number_of_translucent_vertices += points;

  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  0005d	03 45 08	 add	 eax, DWORD PTR _points$[ebp]
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, eax ; current_number_of_translucent_vertices

; 533  : 
; 534  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].shade_mode = shading;

  00065	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0006c	8a 4d 10	 mov	 cl, BYTE PTR _shading$[ebp]
  0006f	88 88 04 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+4], cl

; 535  : 
; 536  : 	if ( additive )

  00075	83 7d 2c 00	 cmp	 DWORD PTR _additive$[ebp], 0
  00079	74 1e		 je	 SHORT $LN4@add_buffer

; 537  : 	{
; 538  : 
; 539  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = ADDITIVE_SOURCE_BLEND;

  0007b	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00082	c6 80 06 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 2

; 540  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = ADDITIVE_DESTINATION_BLEND;

  00089	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00090	c6 80 07 00 00
	00 02		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 2

; 541  : 	}
; 542  : 	else

  00097	eb 1c		 jmp	 SHORT $LN5@add_buffer
$LN4@add_buffer:

; 543  : 	{
; 544  : 
; 545  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].source_alpha_blend = TRANSLUCENT_SOURCE_BLEND;

  00099	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000a0	c6 80 06 00 00
	00 05		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+6], 5

; 546  : 		buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].destination_alpha_blend = TRANSLUCENT_DESTINATION_BLEND;

  000a7	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000ae	c6 80 07 00 00
	00 06		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+7], 6
$LN5@add_buffer:

; 547  : 	}
; 548  : 
; 549  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture = texture;

  000b5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000bc	8b 4d 14	 mov	 ecx, DWORD PTR _texture$[ebp]
  000bf	89 88 0c 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+12], ecx

; 550  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_mag = filter;

  000c5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000cc	8a 4d 18	 mov	 cl, BYTE PTR _filter$[ebp]
  000cf	88 88 00 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax], cl

; 551  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_min = mipmap;

  000d5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000dc	8a 4d 1c	 mov	 cl, BYTE PTR _mipmap$[ebp]
  000df	88 88 01 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+1], cl

; 552  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_u_address = u;

  000e5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000ec	8a 4d 20	 mov	 cl, BYTE PTR _u$[ebp]
  000ef	88 88 02 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+2], cl

; 553  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].texture_v_address = v;

  000f5	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  000fc	8a 4d 24	 mov	 cl, BYTE PTR _v$[ebp]
  000ff	88 88 03 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+3], cl

; 554  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].point_offset = number_of_buffered_translucent_vertices;

  00105	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0010c	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?number_of_buffered_translucent_vertices@@3HA
  00113	66 89 88 0a 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+10], cx

; 555  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].distance = *( ( int * ) &distance );

  0011a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00121	8b 4d 0c	 mov	 ecx, DWORD PTR _distance$[ebp]
  00124	89 88 10 00 00
	00		 mov	 DWORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+16], ecx

; 556  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].specular = specular;

  0012a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00131	8a 4d 28	 mov	 cl, BYTE PTR _specular$[ebp]
  00134	88 88 05 00 00
	00		 mov	 BYTE PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+5], cl

; 557  : 	buffered_translucent_polygons_array[number_of_buffered_translucent_polygons].number_of_vertices = points;

  0013a	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  00141	66 8b 4d 08	 mov	 cx, WORD PTR _points$[ebp]
  00145	66 89 88 08 00
	00 00		 mov	 WORD PTR ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A[eax+8], cx

; 558  : 
; 559  : 	add_buffered_sorted_translucent_polygon ( number_of_buffered_translucent_polygons );

  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ?add_buffered_sorted_translucent_polygon@@YGXH@Z ; add_buffered_sorted_translucent_polygon

; 560  : 
; 561  : 	number_of_buffered_translucent_vertices += points;

  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  0015c	03 45 08	 add	 eax, DWORD PTR _points$[ebp]
  0015f	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 562  : 
; 563  : 	return ( &buffered_translucent_polygons_array[number_of_buffered_translucent_polygons++] );

  00164	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 28 ; number_of_buffered_translucent_polygons
  0016b	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_polygons_array@@3PAUBUFFERED_POLYGON@@A ; buffered_translucent_polygons_array
  00170	89 45 bc	 mov	 DWORD PTR tv156[ebp], eax
  00173	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  00179	83 c1 01	 add	 ecx, 1
  0017c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, ecx ; number_of_buffered_translucent_polygons
  00182	8b 45 bc	 mov	 eax, DWORD PTR tv156[ebp]

; 564  : }

  00185	5f		 pop	 edi
  00186	5e		 pop	 esi
  00187	5b		 pop	 ebx
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c2 28 00	 ret	 40			; 00000028H
?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ENDP ; add_buffered_processed_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ
_TEXT	SEGMENT
?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ PROC ; get_translucent_polygon_vertices, COMDAT

; 514  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 515  : 
; 516  : 	ASSERT ( number_of_buffered_translucent_vertices < MAX_BUFFERED_TRANSLUCENT_VERTICES );

  00009	81 3d 00 00 00
	00 00 20 00 00	 cmp	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, 8192 ; number_of_buffered_translucent_vertices, 00002000H
  00013	7c 18		 jl	 SHORT $LN2@get_transl
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ@4JA
  0001a	83 c0 02	 add	 eax, 2
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BGIPKJBJ@number_of_buffered_translucent_@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_transl:

; 517  : 
; 518  : 	return ( &buffered_translucent_vertices_array[number_of_buffered_translucent_vertices] );

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  00032	c1 e0 05	 shl	 eax, 5
  00035	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array

; 519  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ENDP ; get_translucent_polygon_vertices
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?draw_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z
_TEXT	SEGMENT
_vertices$1 = -8					; size = 4
_polygon$ = -4						; size = 4
_buffer$ = 8						; size = 4
?draw_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z PROC	; draw_polygon_buffer, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 234  : 
; 235  : 	buffered_polygon
; 236  : 		*polygon;
; 237  : 
; 238  : 	//
; 239  : 	// First, flush all the buffered primitives!
; 240  : 	//
; 241  : 
; 242  : 	polygon = buffer->polygons;

  00009	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0000c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000f	89 4d fc	 mov	 DWORD PTR _polygon$[ebp], ecx

; 243  : 
; 244  : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00012	6a 02		 push	 2
  00014	6a 09		 push	 9
  00016	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN2@draw_polyg:

; 245  : 
; 246  : 	while ( polygon )

  0001b	83 7d fc 00	 cmp	 DWORD PTR _polygon$[ebp], 0
  0001f	0f 84 4c 01 00
	00		 je	 $LN1@draw_polyg

; 247  : 	{
; 248  : 
; 249  : 		LPD3DTLVERTEX
; 250  : 			vertices;
; 251  : 
; 252  : 		set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, polygon->specular );

  00025	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00028	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0002c	51		 push	 ecx
  0002d	6a 1d		 push	 29			; 0000001dH
  0002f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 253  : 		set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, polygon->source_alpha_blend );

  00034	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00037	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  0003b	51		 push	 ecx
  0003c	6a 13		 push	 19			; 00000013H
  0003e	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 254  : 		set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, polygon->destination_alpha_blend );

  00043	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00046	0f b6 48 07	 movzx	 ecx, BYTE PTR [eax+7]
  0004a	51		 push	 ecx
  0004b	6a 14		 push	 20			; 00000014H
  0004d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 255  : 
; 256  : 		if ( polygon->texture )

  00052	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00055	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00059	74 6e		 je	 SHORT $LN4@draw_polyg

; 257  : 		{
; 258  : 
; 259  : 			set_d3d_texture ( 0, polygon->texture );

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  0005e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00061	51		 push	 ecx
  00062	6a 00		 push	 0
  00064	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 260  : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00069	6a 04		 push	 4
  0006b	6a 01		 push	 1
  0006d	6a 00		 push	 0
  0006f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 261  : 
; 262  : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, polygon->texture_u_address );

  00074	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00077	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  0007b	51		 push	 ecx
  0007c	6a 0d		 push	 13			; 0000000dH
  0007e	6a 00		 push	 0
  00080	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 263  : 			set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, polygon->texture_v_address );

  00085	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00088	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0008c	51		 push	 ecx
  0008d	6a 0e		 push	 14			; 0000000eH
  0008f	6a 00		 push	 0
  00091	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 264  : 			set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, polygon->texture_mag );

  00096	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00099	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0009c	51		 push	 ecx
  0009d	6a 10		 push	 16			; 00000010H
  0009f	6a 00		 push	 0
  000a1	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 265  : 			set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, polygon->texture_mag );

  000a6	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  000a9	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000ac	51		 push	 ecx
  000ad	6a 11		 push	 17			; 00000011H
  000af	6a 00		 push	 0
  000b1	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 266  : 			set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, polygon->texture_min );

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  000b9	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  000bd	51		 push	 ecx
  000be	6a 12		 push	 18			; 00000012H
  000c0	6a 00		 push	 0
  000c2	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 267  : 		}
; 268  : 		else

  000c7	eb 14		 jmp	 SHORT $LN5@draw_polyg
$LN4@draw_polyg:

; 269  : 		{
; 270  : 
; 271  : 			set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  000c9	6a 01		 push	 1
  000cb	6a 01		 push	 1
  000cd	6a 00		 push	 0
  000cf	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 272  : 			set_d3d_texture ( 0, NULL );

  000d4	6a 00		 push	 0
  000d6	6a 00		 push	 0
  000d8	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture
$LN5@draw_polyg:

; 273  : 		}
; 274  : 
; 275  : 		if ( polygon->number_of_vertices > 2 )

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  000e0	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  000e4	83 f9 02	 cmp	 ecx, 2
  000e7	7e 4a		 jle	 SHORT $LN6@draw_polyg

; 276  : 		{
; 277  : 
; 278  : 			vertices = get_d3d_vertices_points_address ( polygon->number_of_vertices );

  000e9	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  000ec	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  000f0	51		 push	 ecx
  000f1	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  000f6	89 45 f8	 mov	 DWORD PTR _vertices$1[ebp], eax

; 279  : 
; 280  : 			memcpy ( vertices, &buffered_translucent_vertices_array[polygon->point_offset], sizeof ( D3DTLVERTEX ) * polygon->number_of_vertices );

  000f9	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  000fc	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00100	c1 e1 05	 shl	 ecx, 5
  00103	51		 push	 ecx
  00104	8b 55 fc	 mov	 edx, DWORD PTR _polygon$[ebp]
  00107	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  0010b	c1 e0 05	 shl	 eax, 5
  0010e	05 00 00 00 00	 add	 eax, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  00113	50		 push	 eax
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _vertices$1[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 _memcpy
  0011d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 281  : 
; 282  : 			draw_fan_primitive ( polygon->number_of_vertices, vertices );

  00120	8b 45 f8	 mov	 eax, DWORD PTR _vertices$1[ebp]
  00123	50		 push	 eax
  00124	8b 4d fc	 mov	 ecx, DWORD PTR _polygon$[ebp]
  00127	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  0012b	52		 push	 edx
  0012c	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 283  : 		}
; 284  : 		else

  00131	eb 30		 jmp	 SHORT $LN7@draw_polyg
$LN6@draw_polyg:

; 285  : 		{
; 286  : 
; 287  : 			vertices = get_d3d_line_vertices_points_address ();

  00133	e8 00 00 00 00	 call	 ?get_d3d_line_vertices_points_address@@YGPAU_D3DTLVERTEX@@XZ ; get_d3d_line_vertices_points_address
  00138	89 45 f8	 mov	 DWORD PTR _vertices$1[ebp], eax

; 288  : 
; 289  : 			memcpy ( vertices, &buffered_translucent_vertices_array[polygon->point_offset], sizeof ( D3DTLVERTEX ) * 2 );

  0013b	6a 40		 push	 64			; 00000040H
  0013d	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00140	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00144	c1 e1 05	 shl	 ecx, 5
  00147	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?buffered_translucent_vertices_array@@3PAU_D3DTLVERTEX@@A ; buffered_translucent_vertices_array
  0014d	51		 push	 ecx
  0014e	8b 55 f8	 mov	 edx, DWORD PTR _vertices$1[ebp]
  00151	52		 push	 edx
  00152	e8 00 00 00 00	 call	 _memcpy
  00157	83 c4 0c	 add	 esp, 12			; 0000000cH

; 290  : 
; 291  : 			draw_line_primitive ( vertices );

  0015a	8b 45 f8	 mov	 eax, DWORD PTR _vertices$1[ebp]
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 ?draw_line_primitive@@YGXPAU_D3DTLVERTEX@@@Z ; draw_line_primitive
$LN7@draw_polyg:

; 292  : 		}
; 293  : 
; 294  : 		polygon = polygon->succ;

  00163	8b 45 fc	 mov	 eax, DWORD PTR _polygon$[ebp]
  00166	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00169	89 4d fc	 mov	 DWORD PTR _polygon$[ebp], ecx

; 295  : 	}

  0016c	e9 aa fe ff ff	 jmp	 $LN2@draw_polyg
$LN1@draw_polyg:

; 296  : }

  00171	5f		 pop	 edi
  00172	5e		 pop	 esi
  00173	5b		 pop	 ebx
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c2 04 00	 ret	 4
?draw_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z ENDP	; draw_polygon_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?remove_translucent_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?remove_translucent_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z PROC ; remove_translucent_polygon_buffer, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 220  : 
; 221  : 	number_of_buffered_translucent_polygons -= current_number_of_translucent_polygons;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_polygons@@3HA ; number_of_buffered_translucent_polygons
  0000e	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?current_number_of_translucent_polygons@@3HA ; current_number_of_translucent_polygons
  00014	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, eax ; number_of_buffered_translucent_polygons

; 222  : 
; 223  : 	number_of_buffered_translucent_vertices -= current_number_of_translucent_vertices;

  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_buffered_translucent_vertices@@3HA ; number_of_buffered_translucent_vertices
  0001e	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?current_number_of_translucent_vertices@@3HA ; current_number_of_translucent_vertices
  00024	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, eax ; number_of_buffered_translucent_vertices

; 224  : 
; 225  : 	number_of_translucent_polygon_buffers--;

  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_translucent_polygon_buffers@@3HA ; number_of_translucent_polygon_buffers
  0002e	83 e8 01	 sub	 eax, 1
  00031	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, eax ; number_of_translucent_polygon_buffers

; 226  : }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?remove_translucent_polygon_buffer@@YGXPAUPOLYGON_BUFFER@@@Z ENDP ; remove_translucent_polygon_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
?finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z PROC ; finalise_translucent_sorted_polygon_buffer, COMDAT

; 184  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 185  : 
; 186  : 	ASSERT ( buffer == active_translucent_sorted_polygon_buffer );

  00009	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  0000c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?active_translucent_sorted_polygon_buffer@@3PAUPOLYGON_BUFFER@@A ; active_translucent_sorted_polygon_buffer
  00012	74 18		 je	 SHORT $LN2@finalise_t
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z@4JA
  00019	83 c0 02	 add	 eax, 2
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KCHFAPJI@buffer?5?$DN?$DN?5active_translucent_so@
  00027	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@finalise_t:

; 187  : 
; 188  : 	if ( buffered_sorted_translucent_polygons_head )

  0002c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_head
  00033	74 33		 je	 SHORT $LN3@finalise_t

; 189  : 	{
; 190  : 
; 191  : 		buffer->polygons = buffered_sorted_translucent_polygons_head;

  00035	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A ; buffered_sorted_translucent_polygons_head
  0003e	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 192  : 
; 193  : 		buffered_sorted_translucent_polygons_head = NULL;

  00041	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_head

; 194  : 	
; 195  : 		buffered_sorted_translucent_polygons_tail = NULL;

  0004b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_tail

; 196  : 	
; 197  : 		buffered_sorted_translucent_polygons_insert = NULL;

  00055	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_insert

; 198  : 
; 199  : 		return ( TRUE );

  0005f	b8 01 00 00 00	 mov	 eax, 1
  00064	eb 11		 jmp	 SHORT $LN1@finalise_t

; 200  : 	}
; 201  : 	else

  00066	eb 0f		 jmp	 SHORT $LN1@finalise_t
$LN3@finalise_t:

; 202  : 	{
; 203  : 
; 204  : 		//
; 205  : 		// There are no polygons buffered - so unwind back
; 206  : 		//
; 207  : 
; 208  : 		number_of_translucent_polygon_buffers--;

  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_translucent_polygon_buffers@@3HA ; number_of_translucent_polygon_buffers
  0006d	83 e8 01	 sub	 eax, 1
  00070	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, eax ; number_of_translucent_polygon_buffers

; 209  : 
; 210  : 		return ( FALSE );

  00075	33 c0		 xor	 eax, eax
$LN1@finalise_t:

; 211  : 	}
; 212  : }

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
?finalise_translucent_sorted_polygon_buffer@@YGHPAUPOLYGON_BUFFER@@@Z ENDP ; finalise_translucent_sorted_polygon_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ
_TEXT	SEGMENT
?get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ PROC ; get_translucent_sorted_polygon_buffer, COMDAT

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 149  : 
; 150  : 	ASSERT ( number_of_translucent_polygon_buffers < MAX_TRANSLUCENT_POLYGON_BUFFERS );

  00009	81 3d 00 00 00
	00 00 04 00 00	 cmp	 DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, 1024 ; number_of_translucent_polygon_buffers, 00000400H
  00013	7c 18		 jl	 SHORT $LN2@get_transl
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ@4JA
  0001a	83 c0 02	 add	 eax, 2
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@JFPAACCM@number_of_translucent_polygon_b@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_transl:

; 151  : 
; 152  : 	active_translucent_sorted_polygon_buffer = &translucent_polygon_buffers[number_of_translucent_polygon_buffers];

  0002d	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, 12 ; number_of_translucent_polygon_buffers
  00034	05 00 00 00 00	 add	 eax, OFFSET ?translucent_polygon_buffers@@3PAUPOLYGON_BUFFER@@A ; translucent_polygon_buffers
  00039	a3 00 00 00 00	 mov	 DWORD PTR ?active_translucent_sorted_polygon_buffer@@3PAUPOLYGON_BUFFER@@A, eax ; active_translucent_sorted_polygon_buffer

; 153  : 
; 154  : 	translucent_polygon_buffers[number_of_translucent_polygon_buffers].number_of_polygons = 0;

  0003e	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, 12 ; number_of_translucent_polygon_buffers
  00045	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?translucent_polygon_buffers@@3PAUPOLYGON_BUFFER@@A[eax], 0

; 155  : 
; 156  : 	translucent_polygon_buffers[number_of_translucent_polygon_buffers].polygons = NULL;

  0004f	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, 12 ; number_of_translucent_polygon_buffers
  00056	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?translucent_polygon_buffers@@3PAUPOLYGON_BUFFER@@A[eax+8], 0

; 157  : 
; 158  : 	number_of_translucent_polygon_buffers++;

  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_translucent_polygon_buffers@@3HA ; number_of_translucent_polygon_buffers
  00065	83 c0 01	 add	 eax, 1
  00068	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, eax ; number_of_translucent_polygon_buffers

; 159  : 
; 160  : 	//
; 161  : 	// Reset the internal polygon sorting variables
; 162  : 	//
; 163  : 
; 164  : 	buffered_sorted_translucent_polygons_head = NULL;

  0006d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_head

; 165  : 
; 166  : 	buffered_sorted_translucent_polygons_tail = NULL;

  00077	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_tail

; 167  : 
; 168  : 	buffered_sorted_translucent_polygons_insert = NULL;

  00081	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_insert

; 169  : 
; 170  : 	current_number_of_translucent_polygons = 0;

  0008b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_polygons@@3HA, 0 ; current_number_of_translucent_polygons

; 171  : 
; 172  : 	current_number_of_translucent_vertices = 0;

  00095	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_number_of_translucent_vertices@@3HA, 0 ; current_number_of_translucent_vertices

; 173  : 
; 174  : 	ASSERT ( number_of_translucent_polygon_buffers < MAX_TRANSLUCENT_POLYGON_BUFFERS );

  0009f	81 3d 00 00 00
	00 00 04 00 00	 cmp	 DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, 1024 ; number_of_translucent_polygon_buffers, 00000400H
  000a9	7c 18		 jl	 SHORT $LN3@get_transl
  000ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ@4JA
  000b0	83 c0 1a	 add	 eax, 26			; 0000001aH
  000b3	50		 push	 eax
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@GIGGOOFN@c?3?2users?2nhv90?2projects?2eech?2mo@
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@JFPAACCM@number_of_translucent_polygon_b@
  000be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_transl:

; 175  : 
; 176  : 	return ( active_translucent_sorted_polygon_buffer );

  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_translucent_sorted_polygon_buffer@@3PAUPOLYGON_BUFFER@@A ; active_translucent_sorted_polygon_buffer

; 177  : }

  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
?get_translucent_sorted_polygon_buffer@@YGPAUPOLYGON_BUFFER@@XZ ENDP ; get_translucent_sorted_polygon_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\tranbuf.c
;	COMDAT ?reset_translucent_buffering_system@@YGXXZ
_TEXT	SEGMENT
?reset_translucent_buffering_system@@YGXXZ PROC		; reset_translucent_buffering_system, COMDAT

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 123  : 
; 124  : 	number_of_buffered_translucent_polygons = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_polygons@@3HA, 0 ; number_of_buffered_translucent_polygons

; 125  : 
; 126  : 	number_of_buffered_translucent_vertices = 0;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_buffered_translucent_vertices@@3HA, 0 ; number_of_buffered_translucent_vertices

; 127  : 
; 128  : 	number_of_translucent_polygon_buffers = 0;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_translucent_polygon_buffers@@3HA, 0 ; number_of_translucent_polygon_buffers

; 129  : 
; 130  : 	//
; 131  : 	// Reset the sorted polygon buffer
; 132  : 	//
; 133  : 
; 134  : 	active_translucent_sorted_polygon_buffer = NULL;

  00027	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?active_translucent_sorted_polygon_buffer@@3PAUPOLYGON_BUFFER@@A, 0 ; active_translucent_sorted_polygon_buffer

; 135  : 
; 136  : 	buffered_sorted_translucent_polygons_head = NULL;

  00031	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_head@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_head

; 137  : 
; 138  : 	buffered_sorted_translucent_polygons_tail = NULL;

  0003b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_tail@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_tail

; 139  : 
; 140  : 	buffered_sorted_translucent_polygons_insert = NULL;

  00045	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?buffered_sorted_translucent_polygons_insert@@3PAUBUFFERED_POLYGON@@A, 0 ; buffered_sorted_translucent_polygons_insert

; 141  : }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?reset_translucent_buffering_system@@YGXXZ ENDP		; reset_translucent_buffering_system
_TEXT	ENDS
END
