; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\fixed\segment\sg_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_segment_draw_functions@@YGXXZ		; overload_segment_draw_functions
PUBLIC	?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA ; `draw_local_3d_object'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
EXTRN	_memcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z:PROC ; construct_temporary_3d_object
EXTRN	?set_sub_object_type_relative_scale@@YGHPAUOBJECT_3D_INSTANCE@@HPAUVEC3D@@@Z:PROC ; set_sub_object_type_relative_scale
EXTRN	?set_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HMMM@Z:PROC ; set_sub_object_type_heading_pitch_and_roll
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA:BYTE ; fn_draw_local_entity_3d_object
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	__fltused:DWORD
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\fixed\segment\sg_draw'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA DD 050H ; `draw_local_3d_object'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\segment\sg_draw.c
;	COMDAT ?draw_local_3d_object@@YGXPAUENTITY@@M@Z
_TEXT	SEGMENT
tv189 = -104						; size = 4
tv159 = -104						; size = 4
tv95 = -104						; size = 4
tv181 = -100						; size = 4
tv151 = -100						; size = 4
tv87 = -100						; size = 4
_leg_scale$1 = -32					; size = 4
_relative_scale$2 = -28					; size = 12
_pitch$ = -16						; size = 4
_inst3d$ = -12						; size = 4
_parent$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_range$ = 12						; size = 4
?draw_local_3d_object@@YGXPAUENTITY@@M@Z PROC		; draw_local_3d_object, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	segment
; 82   : 		*raw;
; 83   : 
; 84   : 	entity
; 85   : 		*parent;
; 86   : 
; 87   : 	object_3d_instance
; 88   : 		*inst3d;
; 89   : 
; 90   : 	float
; 91   : 		pitch;
; 92   : 
; 93   : 	raw = (segment *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 94   : 
; 95   : 	if (raw->fix.object_3d_shape == OBJECT_3D_INVALID_OBJECT_INDEX)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00018	c1 e9 08	 shr	 ecx, 8
  0001b	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  00021	75 05		 jne	 SHORT $LN2@draw_local

; 96   : 	{
; 97   : 		return;

  00023	e9 a2 02 00 00	 jmp	 $LN1@draw_local
$LN2@draw_local:

; 98   : 	}
; 99   : 
; 100  : 	inst3d = construct_temporary_3d_object (raw->fix.object_3d_shape, TRUE);

  00028	6a 01		 push	 1
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002d	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00030	c1 e9 08	 shr	 ecx, 8
  00033	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z ; construct_temporary_3d_object
  0003f	89 45 f4	 mov	 DWORD PTR _inst3d$[ebp], eax

; 101  : 
; 102  : 	if (inst3d)

  00042	83 7d f4 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00046	0f 84 7e 02 00
	00		 je	 $LN3@draw_local

; 103  : 	{
; 104  : 		inst3d->object_has_shadow = FALSE;

  0004c	8b 45 f4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0004f	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00052	83 e1 fb	 and	 ecx, -5			; fffffffbH
  00055	8b 55 f4	 mov	 edx, DWORD PTR _inst3d$[ebp]
  00058	89 4a 50	 mov	 DWORD PTR [edx+80], ecx

; 105  : 
; 106  : 		parent = get_local_entity_parent (en, LIST_TYPE_SEGMENT);

  0005b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005f	74 0a		 je	 SHORT $LN8@draw_local
  00061	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	89 4d 9c	 mov	 DWORD PTR tv87[ebp], ecx
  00069	eb 21		 jmp	 SHORT $LN9@draw_local
$LN8@draw_local:
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00071	83 c2 1a	 add	 edx, 26			; 0000001aH
  00074	52		 push	 edx
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN9@draw_local:
  0008c	b9 01 00 00 00	 mov	 ecx, 1
  00091	85 c9		 test	 ecx, ecx
  00093	74 09		 je	 SHORT $LN10@draw_local
  00095	c7 45 98 23 00
	00 00		 mov	 DWORD PTR tv95[ebp], 35	; 00000023H
  0009c	eb 21		 jmp	 SHORT $LN11@draw_local
$LN10@draw_local:
  0009e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  000a4	83 c2 1a	 add	 edx, 26			; 0000001aH
  000a7	52		 push	 edx
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b8	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN11@draw_local:
  000bf	6a 23		 push	 35			; 00000023H
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000c4	51		 push	 ecx
  000c5	69 55 9c b4 00
	00 00		 imul	 edx, DWORD PTR tv87[ebp], 180
  000cc	8b 45 98	 mov	 eax, DWORD PTR tv95[ebp]
  000cf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000d6	ff d1		 call	 ecx
  000d8	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 107  : 
; 108  : 		ASSERT (parent);

  000db	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000df	75 18		 jne	 SHORT $LN4@draw_local
  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  000e6	83 c0 1c	 add	 eax, 28			; 0000001cH
  000e9	50		 push	 eax
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  000f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@draw_local:

; 109  : 
; 110  : 		memcpy (&inst3d->vp.position, &raw->fix.position, sizeof (vec3d));

  000f9	6a 0c		 push	 12			; 0000000cH
  000fb	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000fe	50		 push	 eax
  000ff	8b 4d f4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00102	83 c1 08	 add	 ecx, 8
  00105	51		 push	 ecx
  00106	e8 00 00 00 00	 call	 _memcpy
  0010b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 111  : 
; 112  : 		pitch = get_local_entity_float_value (parent, FLOAT_TYPE_PITCH);

  0010e	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00112	74 0a		 je	 SHORT $LN12@draw_local
  00114	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	89 4d 9c	 mov	 DWORD PTR tv151[ebp], ecx
  0011c	eb 21		 jmp	 SHORT $LN13@draw_local
$LN12@draw_local:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00124	83 c2 20	 add	 edx, 32			; 00000020H
  00127	52		 push	 edx
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00138	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN13@draw_local:
  0013f	b9 01 00 00 00	 mov	 ecx, 1
  00144	85 c9		 test	 ecx, ecx
  00146	74 09		 je	 SHORT $LN14@draw_local
  00148	c7 45 98 54 00
	00 00		 mov	 DWORD PTR tv159[ebp], 84 ; 00000054H
  0014f	eb 21		 jmp	 SHORT $LN15@draw_local
$LN14@draw_local:
  00151	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00157	83 c2 20	 add	 edx, 32			; 00000020H
  0015a	52		 push	 edx
  0015b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00160	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016b	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN15@draw_local:
  00172	6a 54		 push	 84			; 00000054H
  00174	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00177	51		 push	 ecx
  00178	69 55 9c bc 02
	00 00		 imul	 edx, DWORD PTR tv151[ebp], 700
  0017f	8b 45 98	 mov	 eax, DWORD PTR tv159[ebp]
  00182	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00189	ff d1		 call	 ecx
  0018b	d9 5d f0	 fstp	 DWORD PTR _pitch$[ebp]

; 113  : 
; 114  : 		get_3d_transformation_matrix (inst3d->vp.attitude, raw->fix.heading, pitch, 0.0);

  0018e	51		 push	 ecx
  0018f	0f 57 c0	 xorps	 xmm0, xmm0
  00192	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00197	51		 push	 ecx
  00198	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0019d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001a5	51		 push	 ecx
  001a6	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  001ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b0	8b 4d f4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  001b3	83 c1 14	 add	 ecx, 20			; 00000014H
  001b6	51		 push	 ecx
  001b7	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 115  : 
; 116  : 		if (parent->type == ENTITY_TYPE_BRIDGE)

  001bc	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  001bf	83 38 02	 cmp	 DWORD PTR [eax], 2
  001c2	0f 85 ee 00 00
	00		 jne	 $LN5@draw_local

; 117  : 		{
; 118  : 			//
; 119  : 			// special case for bridges - scale the legs
; 120  : 			//
; 121  : 
; 122  : 			vec3d
; 123  : 				relative_scale;
; 124  : 
; 125  : 			float
; 126  : 				leg_scale;
; 127  : 
; 128  : 			leg_scale = get_local_entity_float_value (parent, FLOAT_TYPE_SCALE);

  001c8	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  001cc	74 0a		 je	 SHORT $LN16@draw_local
  001ce	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  001d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d3	89 4d 9c	 mov	 DWORD PTR tv181[ebp], ecx
  001d6	eb 21		 jmp	 SHORT $LN17@draw_local
$LN16@draw_local:
  001d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  001de	83 c2 30	 add	 edx, 48			; 00000030H
  001e1	52		 push	 edx
  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f2	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN17@draw_local:
  001f9	b9 01 00 00 00	 mov	 ecx, 1
  001fe	85 c9		 test	 ecx, ecx
  00200	74 09		 je	 SHORT $LN18@draw_local
  00202	c7 45 98 73 00
	00 00		 mov	 DWORD PTR tv189[ebp], 115 ; 00000073H
  00209	eb 21		 jmp	 SHORT $LN19@draw_local
$LN18@draw_local:
  0020b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00211	83 c2 30	 add	 edx, 48			; 00000030H
  00214	52		 push	 edx
  00215	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@EPICCAHB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00225	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN19@draw_local:
  0022c	6a 73		 push	 115			; 00000073H
  0022e	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00231	51		 push	 ecx
  00232	69 55 9c bc 02
	00 00		 imul	 edx, DWORD PTR tv181[ebp], 700
  00239	8b 45 98	 mov	 eax, DWORD PTR tv189[ebp]
  0023c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00243	ff d1		 call	 ecx
  00245	d9 5d e0	 fstp	 DWORD PTR _leg_scale$1[ebp]

; 129  : 
; 130  : 			if (leg_scale != 1.0)

  00248	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _leg_scale$1[ebp]
  0024d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  00255	9f		 lahf
  00256	f6 c4 44	 test	 ah, 68			; 00000044H
  00259	7b 33		 jnp	 SHORT $LN6@draw_local

; 131  : 			{
; 132  : 				relative_scale.x = 1.0;

  0025b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00263	f3 0f 11 45 e4	 movss	 DWORD PTR _relative_scale$2[ebp], xmm0

; 133  : 				relative_scale.y = leg_scale;

  00268	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _leg_scale$1[ebp]
  0026d	f3 0f 11 45 e8	 movss	 DWORD PTR _relative_scale$2[ebp+4], xmm0

; 134  : 				relative_scale.z = 1.0;

  00272	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0027a	f3 0f 11 45 ec	 movss	 DWORD PTR _relative_scale$2[ebp+8], xmm0

; 135  : 
; 136  : 				set_sub_object_type_relative_scale(inst3d, OBJECT_3D_SUB_OBJECT_BRIDGE_LEG, &relative_scale);

  0027f	8d 45 e4	 lea	 eax, DWORD PTR _relative_scale$2[ebp]
  00282	50		 push	 eax
  00283	6a 68		 push	 104			; 00000068H
  00285	8b 4d f4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00288	51		 push	 ecx
  00289	e8 00 00 00 00	 call	 ?set_sub_object_type_relative_scale@@YGHPAUOBJECT_3D_INSTANCE@@HPAUVEC3D@@@Z ; set_sub_object_type_relative_scale
$LN6@draw_local:

; 137  : 			}
; 138  : 
; 139  : 			set_sub_object_type_heading_pitch_and_roll(inst3d, OBJECT_3D_SUB_OBJECT_BRIDGE_LEG, 0.0, pitch, 0.0);

  0028e	51		 push	 ecx
  0028f	0f 57 c0	 xorps	 xmm0, xmm0
  00292	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00297	51		 push	 ecx
  00298	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0029d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a2	51		 push	 ecx
  002a3	0f 57 c0	 xorps	 xmm0, xmm0
  002a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ab	6a 68		 push	 104			; 00000068H
  002ad	8b 45 f4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  002b0	50		 push	 eax
  002b1	e8 00 00 00 00	 call	 ?set_sub_object_type_heading_pitch_and_roll@@YGHPAUOBJECT_3D_INSTANCE@@HMMM@Z ; set_sub_object_type_heading_pitch_and_roll
$LN5@draw_local:

; 140  : 
; 141  : 		}
; 142  : 
; 143  : 		insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, inst3d);

  002b6	51		 push	 ecx
  002b7	0f 57 c0	 xorps	 xmm0, xmm0
  002ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bf	8b 45 f4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  002c2	50		 push	 eax
  002c3	6a 01		 push	 1
  002c5	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene
$LN3@draw_local:
$LN1@draw_local:

; 144  : 	}
; 145  : }

  002ca	5f		 pop	 edi
  002cb	5e		 pop	 esi
  002cc	5b		 pop	 ebx
  002cd	8b e5		 mov	 esp, ebp
  002cf	5d		 pop	 ebp
  002d0	c2 08 00	 ret	 8
?draw_local_3d_object@@YGXPAUENTITY@@M@Z ENDP		; draw_local_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\segment\sg_draw.c
;	COMDAT ?overload_segment_draw_functions@@YGXXZ
_TEXT	SEGMENT
?overload_segment_draw_functions@@YGXXZ PROC		; overload_segment_draw_functions, COMDAT

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  : 	fn_draw_local_entity_3d_object[ENTITY_TYPE_SEGMENT]	= draw_local_3d_object;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 1a	 imul	 ecx, eax, 26
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA[ecx], OFFSET ?draw_local_3d_object@@YGXPAUENTITY@@M@Z ; draw_local_3d_object

; 187  : 
; 188  : 	//fn_draw_local_entity_2d_symbol[ENTITY_TYPE_SEGMENT]	= draw_local_2d_symbol;
; 189  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?overload_segment_draw_functions@@YGXXZ ENDP		; overload_segment_draw_functions
_TEXT	ENDS
END
