; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\waypoint\wp_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_waypoint_pack_functions@@YGXXZ	; overload_waypoint_pack_functions
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	??_C@_0BK@PKMMOEAO@raw?9?$DOwaypoint_link?4parent@ ; `string'
PUBLIC	??_C@_0EG@JIGLADAN@get_local_entity_type?5?$CIraw?9?$DOway@ ; `string'
PUBLIC	??_C@_0DC@OEDOBCDI@WP_PACK?3?5internal?5waypoint?5with@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; pack_list_link
EXTRN	?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; unpack_list_link
EXTRN	?pack_char_value@@YGXPAUENTITY@@W4CHAR_TYPES@@D@Z:PROC ; pack_char_value
EXTRN	?unpack_char_value@@YGDPAUENTITY@@W4CHAR_TYPES@@@Z:PROC ; unpack_char_value
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; pack_vec3d
EXTRN	?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; unpack_vec3d
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	__fltused:DWORD
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 0136H ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DC@OEDOBCDI@WP_PACK?3?5internal?5waypoint?5with@
CONST	SEGMENT
??_C@_0DC@OEDOBCDI@WP_PACK?3?5internal?5waypoint?5with@ DB 'WP_PACK: inte'
	DB	'rnal waypoint with relative position', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@JIGLADAN@get_local_entity_type?5?$CIraw?9?$DOway@
CONST	SEGMENT
??_C@_0EG@JIGLADAN@get_local_entity_type?5?$CIraw?9?$DOway@ DB 'get_local'
	DB	'_entity_type (raw->waypoint_link.parent) == ENTITY_TYPE_TASK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PKMMOEAO@raw?9?$DOwaypoint_link?4parent@
CONST	SEGMENT
??_C@_0BK@PKMMOEAO@raw?9?$DOwaypoint_link?4parent@ DB 'raw->waypoint_link'
	DB	'.parent', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\waypoint\wp_p'
	DB	'ack.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv279 = -84						; size = 4
tv268 = -84						; size = 4
tv260 = -84						; size = 4
tv239 = -84						; size = 4
tv229 = -84						; size = 4
tv199 = -84						; size = 4
tv188 = -84						; size = 4
tv180 = -84						; size = 4
tv159 = -84						; size = 4
tv149 = -84						; size = 4
tv70 = -84						; size = 4
tv250 = -81						; size = 1
tv170 = -81						; size = 1
_raw$1 = -16						; size = 4
_index$2 = -12						; size = 4
_raw$3 = -8						; size = 4
_index$4 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 311  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN9@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN8@unpack_loc
$LN9@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@unpack_loc:

; 312  : 	
; 313  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 ac	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d ac 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	74 0f		 je	 SHORT $LN10@unpack_loc
  00039	83 7d ac 01	 cmp	 DWORD PTR tv70[ebp], 1
  0003d	0f 84 fa 01 00
	00		 je	 $LN15@unpack_loc
  00043	e9 8c 03 00 00	 jmp	 $LN2@unpack_loc
$LN10@unpack_loc:

; 314  : 	{
; 315  : 		////////////////////////////////////////
; 316  : 		case PACK_MODE_SERVER_SESSION:
; 317  : 		////////////////////////////////////////
; 318  : 		{
; 319  : 			int
; 320  : 			index;
; 321  : 			
; 322  : 			waypoint
; 323  : 			*raw;
; 324  : 			
; 325  : 			//
; 326  : 			// create entity
; 327  : 			//
; 328  : 			
; 329  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 fc	 mov	 DWORD PTR _index$4[ebp], eax

; 330  : 			
; 331  : 			en = get_free_entity (index);

  00050	8b 45 fc	 mov	 eax, DWORD PTR _index$4[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 332  : 			
; 333  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 334  : 			
; 335  : 			raw = (waypoint *) malloc_fast_mem (sizeof (waypoint));

  00064	6a 44		 push	 68			; 00000044H
  00066	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0006b	89 45 f8	 mov	 DWORD PTR _raw$3[ebp], eax

; 336  : 			
; 337  : 			set_local_entity_data (en, raw);

  0006e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00071	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00074	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 338  : 			
; 339  : 			memset (raw, 0, sizeof (waypoint));

  00077	6a 44		 push	 68			; 00000044H
  00079	6a 00		 push	 0
  0007b	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 _memset
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 340  : 			
; 341  : 			//
; 342  : 			// unpack data (in exactly the same order as the data was packed)
; 343  : 			//
; 344  : 			
; 345  : 			raw->sub_type = unpack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00087	6a 34		 push	 52			; 00000034H
  00089	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00095	89 01		 mov	 DWORD PTR [ecx], eax

; 346  : 
; 347  : 			unpack_list_link (en, LIST_TYPE_WAYPOINT, &raw->waypoint_link);

  00097	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0009a	83 c0 14	 add	 eax, 20			; 00000014H
  0009d	50		 push	 eax
  0009e	6a 2c		 push	 44			; 0000002cH
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 348  : 			
; 349  : 			/////////////////////////////////////////////////////////////////
; 350  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  000a9	68 ef 00 00 00	 push	 239			; 000000efH
  000ae	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000b7	85 c0		 test	 eax, eax
  000b9	74 12		 je	 SHORT $LN11@unpack_loc

; 351  : 			{
; 352  : 				
; 353  : 				unpack_list_root (en, LIST_TYPE_CURRENT_WAYPOINT, &raw->current_waypoint_root);

  000bb	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000be	83 c0 04	 add	 eax, 4
  000c1	50		 push	 eax
  000c2	6a 09		 push	 9
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root
$LN11@unpack_loc:

; 354  : 			}
; 355  : 			/////////////////////////////////////////////////////////////////
; 356  : 			
; 357  : 			/////////////////////////////////////////////////////////////////
; 358  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  000cd	68 ef 00 00 00	 push	 239			; 000000efH
  000d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000db	85 c0		 test	 eax, eax
  000dd	74 12		 je	 SHORT $LN12@unpack_loc

; 359  : 			{
; 360  : 				
; 361  : 				unpack_list_link (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_link);

  000df	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  000e2	83 c0 08	 add	 eax, 8
  000e5	50		 push	 eax
  000e6	6a 27		 push	 39			; 00000027H
  000e8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link
$LN12@unpack_loc:

; 362  : 			}
; 363  : 			/////////////////////////////////////////////////////////////////
; 364  : 			
; 365  : 			raw->altitude = unpack_float_value (en, FLOAT_TYPE_ALTITUDE);

  000f1	6a 06		 push	 6
  000f3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000fc	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  000ff	d9 59 24	 fstp	 DWORD PTR [ecx+36]

; 366  : 			
; 367  : 			raw->heading = unpack_float_value (en, FLOAT_TYPE_HEADING);

  00102	6a 34		 push	 52			; 00000034H
  00104	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0010d	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00110	d9 59 28	 fstp	 DWORD PTR [ecx+40]

; 368  : 			
; 369  : 			raw->position_type = unpack_int_value (en, INT_TYPE_POSITION_TYPE);

  00113	68 a1 00 00 00	 push	 161			; 000000a1H
  00118	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00121	89 45 ac	 mov	 DWORD PTR tv149[ebp], eax
  00124	8b 4d ac	 mov	 ecx, DWORD PTR tv149[ebp]
  00127	83 e1 03	 and	 ecx, 3
  0012a	c1 e1 04	 shl	 ecx, 4
  0012d	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  00130	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00133	83 e0 cf	 and	 eax, -49		; ffffffcfH
  00136	0b c1		 or	 eax, ecx
  00138	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0013b	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 370  : 			
; 371  : 			raw->route_node = unpack_int_value (en, INT_TYPE_ROUTE_NODE);

  0013e	68 b4 00 00 00	 push	 180			; 000000b4H
  00143	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0014c	89 45 ac	 mov	 DWORD PTR tv159[ebp], eax
  0014f	8b 4d ac	 mov	 ecx, DWORD PTR tv159[ebp]
  00152	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  00158	c1 e1 06	 shl	 ecx, 6
  0015b	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  0015e	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00161	25 3f 00 ff ff	 and	 eax, -65473		; ffff003fH
  00166	0b c1		 or	 eax, ecx
  00168	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0016b	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 372  : 			
; 373  : 			raw->tag = unpack_char_value (en, CHAR_TYPE_TAG);

  0016e	6a 00		 push	 0
  00170	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00173	50		 push	 eax
  00174	e8 00 00 00 00	 call	 ?unpack_char_value@@YGDPAUENTITY@@W4CHAR_TYPES@@@Z ; unpack_char_value
  00179	88 45 af	 mov	 BYTE PTR tv170[ebp], al
  0017c	0f b6 4d af	 movzx	 ecx, BYTE PTR tv170[ebp]
  00180	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00186	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00189	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  0018c	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0018f	25 ff ff 00 ff	 and	 eax, -16711681		; ff00ffffH
  00194	0b c1		 or	 eax, ecx
  00196	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00199	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 374  : 			
; 375  : 			raw->waypoint_formation = unpack_int_value (en, INT_TYPE_WAYPOINT_FORMATION);

  0019c	68 fe 00 00 00	 push	 254			; 000000feH
  001a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001aa	89 45 ac	 mov	 DWORD PTR tv180[ebp], eax
  001ad	8b 4d ac	 mov	 ecx, DWORD PTR tv180[ebp]
  001b0	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  001b6	8b 55 f8	 mov	 edx, DWORD PTR _raw$3[ebp]
  001b9	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  001bc	25 00 00 ff ff	 and	 eax, -65536		; ffff0000H
  001c1	0b c1		 or	 eax, ecx
  001c3	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  001c6	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 376  : 			
; 377  : 			//
; 378  : 			//
; 379  : 			//
; 380  : 			
; 381  : 			switch (raw->position_type)

  001c9	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  001cc	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  001cf	c1 e9 04	 shr	 ecx, 4
  001d2	83 e1 03	 and	 ecx, 3
  001d5	89 4d ac	 mov	 DWORD PTR tv188[ebp], ecx
  001d8	74 1d		 je	 SHORT $LN14@unpack_loc
  001da	83 7d ac 01	 cmp	 DWORD PTR tv188[ebp], 1
  001de	74 08		 je	 SHORT $LN13@unpack_loc
  001e0	83 7d ac 02	 cmp	 DWORD PTR tv188[ebp], 2
  001e4	74 11		 je	 SHORT $LN14@unpack_loc
  001e6	eb 50		 jmp	 SHORT $LN4@unpack_loc
$LN13@unpack_loc:

; 382  : 			{
; 383  : 				
; 384  : 				case POSITION_TYPE_RELATIVE:
; 385  : 				{
; 386  : 					
; 387  : 					debug_fatal ("WP_PACK: internal waypoint with relative position");

  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@OEDOBCDI@WP_PACK?3?5internal?5waypoint?5with@
  001ed	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  001f2	83 c4 04	 add	 esp, 4

; 388  : 					
; 389  : 					break;

  001f5	eb 41		 jmp	 SHORT $LN4@unpack_loc
$LN14@unpack_loc:

; 390  : 				}
; 391  : 				
; 392  : 				case POSITION_TYPE_ABSOLUTE:
; 393  : 				case POSITION_TYPE_VIRTUAL:
; 394  : 				{
; 395  : 					
; 396  : 					unpack_vec3d (en, VEC3D_TYPE_POSITION, &raw->position);

  001f7	8b 45 f8	 mov	 eax, DWORD PTR _raw$3[ebp]
  001fa	83 c0 34	 add	 eax, 52			; 00000034H
  001fd	50		 push	 eax
  001fe	6a 08		 push	 8
  00200	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00203	51		 push	 ecx
  00204	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 397  : 					
; 398  : 					index = unpack_entity_safe_index ();

  00209	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0020e	89 45 fc	 mov	 DWORD PTR _index$4[ebp], eax

; 399  : 					
; 400  : 					raw->position_entity = get_local_entity_safe_ptr (index);

  00211	83 7d fc ff	 cmp	 DWORD PTR _index$4[ebp], -1
  00215	74 11		 je	 SHORT $LN21@unpack_loc
  00217	8b 45 fc	 mov	 eax, DWORD PTR _index$4[ebp]
  0021a	c1 e0 04	 shl	 eax, 4
  0021d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00223	89 45 ac	 mov	 DWORD PTR tv199[ebp], eax
  00226	eb 07		 jmp	 SHORT $LN22@unpack_loc
$LN21@unpack_loc:
  00228	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN22@unpack_loc:
  0022f	8b 4d f8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00232	8b 55 ac	 mov	 edx, DWORD PTR tv199[ebp]
  00235	89 51 40	 mov	 DWORD PTR [ecx+64], edx
$LN4@unpack_loc:

; 401  : 					
; 402  : 					break;
; 403  : 				}
; 404  : 			}
; 405  : 			
; 406  : 			break;

  00238	e9 97 01 00 00	 jmp	 $LN2@unpack_loc
$LN15@unpack_loc:

; 407  : 		}
; 408  : 		////////////////////////////////////////
; 409  : 		case PACK_MODE_CLIENT_SESSION:
; 410  : 		////////////////////////////////////////
; 411  : 		{
; 412  : 			int
; 413  : 				index;
; 414  : 			
; 415  : 			waypoint
; 416  : 				*raw;
; 417  : 			
; 418  : 			//
; 419  : 			// create entity
; 420  : 			//
; 421  : 			
; 422  : 			index = unpack_entity_safe_index ();

  0023d	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  00242	89 45 f4	 mov	 DWORD PTR _index$2[ebp], eax

; 423  : 			
; 424  : 			en = get_free_entity (index);

  00245	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  00248	50		 push	 eax
  00249	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  0024e	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 425  : 			
; 426  : 			set_local_entity_type (en, type);

  00251	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00254	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00257	89 08		 mov	 DWORD PTR [eax], ecx

; 427  : 			
; 428  : 			raw = (waypoint *) malloc_fast_mem (sizeof (waypoint));

  00259	6a 44		 push	 68			; 00000044H
  0025b	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00260	89 45 f0	 mov	 DWORD PTR _raw$1[ebp], eax

; 429  : 			
; 430  : 			set_local_entity_data (en, raw);

  00263	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00266	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00269	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 431  : 			
; 432  : 			memset (raw, 0, sizeof (waypoint));

  0026c	6a 44		 push	 68			; 00000044H
  0026e	6a 00		 push	 0
  00270	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00273	50		 push	 eax
  00274	e8 00 00 00 00	 call	 _memset
  00279	83 c4 0c	 add	 esp, 12			; 0000000cH

; 433  : 			
; 434  : 			//
; 435  : 			// unpack data (in exactly the same order as the data was packed)
; 436  : 			//
; 437  : 			
; 438  : 			raw->sub_type = unpack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  0027c	6a 34		 push	 52			; 00000034H
  0027e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00281	50		 push	 eax
  00282	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00287	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0028a	89 01		 mov	 DWORD PTR [ecx], eax

; 439  : 
; 440  : 			unpack_list_link (en, LIST_TYPE_WAYPOINT, &raw->waypoint_link);

  0028c	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  0028f	83 c0 14	 add	 eax, 20			; 00000014H
  00292	50		 push	 eax
  00293	6a 2c		 push	 44			; 0000002cH
  00295	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00298	51		 push	 ecx
  00299	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 441  : 			
; 442  : 			raw->altitude = unpack_float_value (en, FLOAT_TYPE_ALTITUDE);

  0029e	6a 06		 push	 6
  002a0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002a3	50		 push	 eax
  002a4	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  002a9	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  002ac	d9 59 24	 fstp	 DWORD PTR [ecx+36]

; 443  : 			
; 444  : 			raw->position_type = unpack_int_value (en, INT_TYPE_POSITION_TYPE);

  002af	68 a1 00 00 00	 push	 161			; 000000a1H
  002b4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b7	50		 push	 eax
  002b8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002bd	89 45 ac	 mov	 DWORD PTR tv229[ebp], eax
  002c0	8b 4d ac	 mov	 ecx, DWORD PTR tv229[ebp]
  002c3	83 e1 03	 and	 ecx, 3
  002c6	c1 e1 04	 shl	 ecx, 4
  002c9	8b 55 f0	 mov	 edx, DWORD PTR _raw$1[ebp]
  002cc	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  002cf	83 e0 cf	 and	 eax, -49		; ffffffcfH
  002d2	0b c1		 or	 eax, ecx
  002d4	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  002d7	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 445  : 			
; 446  : 			raw->route_node = unpack_int_value (en, INT_TYPE_ROUTE_NODE);

  002da	68 b4 00 00 00	 push	 180			; 000000b4H
  002df	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002e2	50		 push	 eax
  002e3	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002e8	89 45 ac	 mov	 DWORD PTR tv239[ebp], eax
  002eb	8b 4d ac	 mov	 ecx, DWORD PTR tv239[ebp]
  002ee	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  002f4	c1 e1 06	 shl	 ecx, 6
  002f7	8b 55 f0	 mov	 edx, DWORD PTR _raw$1[ebp]
  002fa	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  002fd	25 3f 00 ff ff	 and	 eax, -65473		; ffff003fH
  00302	0b c1		 or	 eax, ecx
  00304	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00307	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 447  : 			
; 448  : 			raw->tag = unpack_char_value (en, CHAR_TYPE_TAG);

  0030a	6a 00		 push	 0
  0030c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0030f	50		 push	 eax
  00310	e8 00 00 00 00	 call	 ?unpack_char_value@@YGDPAUENTITY@@W4CHAR_TYPES@@@Z ; unpack_char_value
  00315	88 45 af	 mov	 BYTE PTR tv250[ebp], al
  00318	0f b6 4d af	 movzx	 ecx, BYTE PTR tv250[ebp]
  0031c	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00322	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00325	8b 55 f0	 mov	 edx, DWORD PTR _raw$1[ebp]
  00328	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0032b	25 ff ff 00 ff	 and	 eax, -16711681		; ff00ffffH
  00330	0b c1		 or	 eax, ecx
  00332	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00335	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 449  : 			
; 450  : 			raw->waypoint_formation = unpack_int_value (en, INT_TYPE_WAYPOINT_FORMATION);

  00338	68 fe 00 00 00	 push	 254			; 000000feH
  0033d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00340	50		 push	 eax
  00341	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00346	89 45 ac	 mov	 DWORD PTR tv260[ebp], eax
  00349	8b 4d ac	 mov	 ecx, DWORD PTR tv260[ebp]
  0034c	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00352	8b 55 f0	 mov	 edx, DWORD PTR _raw$1[ebp]
  00355	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00358	25 00 00 ff ff	 and	 eax, -65536		; ffff0000H
  0035d	0b c1		 or	 eax, ecx
  0035f	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00362	89 41 30	 mov	 DWORD PTR [ecx+48], eax

; 451  : 			
; 452  : 			//
; 453  : 			//
; 454  : 			//
; 455  : 			
; 456  : 			switch (raw->position_type)

  00365	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00368	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0036b	c1 e9 04	 shr	 ecx, 4
  0036e	83 e1 03	 and	 ecx, 3
  00371	89 4d ac	 mov	 DWORD PTR tv268[ebp], ecx
  00374	74 1d		 je	 SHORT $LN17@unpack_loc
  00376	83 7d ac 01	 cmp	 DWORD PTR tv268[ebp], 1
  0037a	74 08		 je	 SHORT $LN16@unpack_loc
  0037c	83 7d ac 02	 cmp	 DWORD PTR tv268[ebp], 2
  00380	74 11		 je	 SHORT $LN17@unpack_loc
  00382	eb 50		 jmp	 SHORT $LN6@unpack_loc
$LN16@unpack_loc:

; 457  : 			{
; 458  : 				
; 459  : 				case POSITION_TYPE_RELATIVE:
; 460  : 				{
; 461  : 					
; 462  : 					debug_fatal ("WP_PACK: internal waypoint with relative position");

  00384	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@OEDOBCDI@WP_PACK?3?5internal?5waypoint?5with@
  00389	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0038e	83 c4 04	 add	 esp, 4

; 463  : 					
; 464  : 					break;

  00391	eb 41		 jmp	 SHORT $LN6@unpack_loc
$LN17@unpack_loc:

; 465  : 				}
; 466  : 				
; 467  : 				case POSITION_TYPE_ABSOLUTE:
; 468  : 				case POSITION_TYPE_VIRTUAL:
; 469  : 				{
; 470  : 					
; 471  : 					unpack_vec3d (en, VEC3D_TYPE_POSITION, &raw->position);

  00393	8b 45 f0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00396	83 c0 34	 add	 eax, 52			; 00000034H
  00399	50		 push	 eax
  0039a	6a 08		 push	 8
  0039c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0039f	51		 push	 ecx
  003a0	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 472  : 					
; 473  : 					index = unpack_entity_safe_index ();

  003a5	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  003aa	89 45 f4	 mov	 DWORD PTR _index$2[ebp], eax

; 474  : 					
; 475  : 					raw->position_entity = get_local_entity_safe_ptr (index);

  003ad	83 7d f4 ff	 cmp	 DWORD PTR _index$2[ebp], -1
  003b1	74 11		 je	 SHORT $LN23@unpack_loc
  003b3	8b 45 f4	 mov	 eax, DWORD PTR _index$2[ebp]
  003b6	c1 e0 04	 shl	 eax, 4
  003b9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  003bf	89 45 ac	 mov	 DWORD PTR tv279[ebp], eax
  003c2	eb 07		 jmp	 SHORT $LN24@unpack_loc
$LN23@unpack_loc:
  003c4	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv279[ebp], 0
$LN24@unpack_loc:
  003cb	8b 4d f0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  003ce	8b 55 ac	 mov	 edx, DWORD PTR tv279[ebp]
  003d1	89 51 40	 mov	 DWORD PTR [ecx+64], edx
$LN6@unpack_loc:
$LN2@unpack_loc:

; 476  : 					
; 477  : 					break;
; 478  : 				}
; 479  : 			}
; 480  : 			
; 481  : 			break;
; 482  : 		}
; 483  : 		////////////////////////////////////////
; 484  : 		case PACK_MODE_BROWSE_SESSION:
; 485  : 		////////////////////////////////////////
; 486  : 		{
; 487  : 			break;
; 488  : 		}
; 489  : 		////////////////////////////////////////
; 490  : 		case PACK_MODE_UPDATE_ENTITY:
; 491  : 		////////////////////////////////////////
; 492  : 		{
; 493  : 			break;
; 494  : 		}
; 495  : 	}
; 496  : }

  003d4	5f		 pop	 edi
  003d5	5e		 pop	 esi
  003d6	5b		 pop	 ebx
  003d7	8b e5		 mov	 esp, ebp
  003d9	5d		 pop	 ebp
  003da	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv292 = -108						; size = 4
tv151 = -108						; size = 4
tv284 = -104						; size = 4
tv143 = -104						; size = 4
tv343 = -100						; size = 4
tv301 = -100						; size = 4
tv277 = -100						; size = 4
tv262 = -100						; size = 4
tv232 = -100						; size = 4
tv160 = -100						; size = 4
tv136 = -100						; size = 4
tv89 = -100						; size = 4
tv70 = -100						; size = 4
_raw$1 = -32						; size = 4
_position$2 = -28					; size = 12
_raw$3 = -16						; size = 4
_position$4 = -12					; size = 12
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	
; 82   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN13@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN12@pack_local
$LN13@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 02	 add	 eax, 2
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@pack_local:

; 83   : 	
; 84   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 9c	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d 9c 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	74 0f		 je	 SHORT $LN14@pack_local
  00039	83 7d 9c 01	 cmp	 DWORD PTR tv70[ebp], 1
  0003d	0f 84 0a 03 00
	00		 je	 $LN24@pack_local
  00043	e9 82 05 00 00	 jmp	 $LN2@pack_local
$LN14@pack_local:

; 85   : 	{
; 86   : 		////////////////////////////////////////
; 87   : 		case PACK_MODE_SERVER_SESSION:
; 88   : 		////////////////////////////////////////
; 89   : 		{
; 90   : 			
; 91   : 			vec3d
; 92   : 				position;
; 93   : 			
; 94   : 			waypoint
; 95   : 				*raw;
; 96   : 			
; 97   : 			raw = (waypoint *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d f0	 mov	 DWORD PTR _raw$3[ebp], ecx

; 98   : 			
; 99   : 			ASSERT (raw->waypoint_link.parent);

  00051	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  00054	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00058	75 18		 jne	 SHORT $LN15@pack_local
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0005f	83 c0 13	 add	 eax, 19			; 00000013H
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@PKMMOEAO@raw?9?$DOwaypoint_link?4parent@
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN15@pack_local:

; 100  : 				
; 101  : 			ASSERT (get_local_entity_type (raw->waypoint_link.parent) == ENTITY_TYPE_TASK);

  00072	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  00075	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00079	74 0d		 je	 SHORT $LN33@pack_local
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0007e	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00081	8b 02		 mov	 eax, DWORD PTR [edx]
  00083	89 45 9c	 mov	 DWORD PTR tv89[ebp], eax
  00086	eb 22		 jmp	 SHORT $LN34@pack_local
$LN33@pack_local:
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0008e	83 c1 15	 add	 ecx, 21			; 00000015H
  00091	51		 push	 ecx
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00097	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009d	52		 push	 edx
  0009e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a3	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN34@pack_local:
  000aa	83 7d 9c 22	 cmp	 DWORD PTR tv89[ebp], 34	; 00000022H
  000ae	74 18		 je	 SHORT $LN16@pack_local
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  000b5	83 c0 15	 add	 eax, 21			; 00000015H
  000b8	50		 push	 eax
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@JIGLADAN@get_local_entity_type?5?$CIraw?9?$DOway@
  000c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@pack_local:

; 102  : 				
; 103  : 			//
; 104  : 			// do send task's waypoint list (not landing ones)
; 105  : 			//
; 106  : 					
; 107  : 			switch (get_local_entity_int_value (raw->waypoint_link.parent, INT_TYPE_ENTITY_SUB_TYPE))

  000c8	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  000cb	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  000cf	74 0d		 je	 SHORT $LN35@pack_local
  000d1	8b 4d f0	 mov	 ecx, DWORD PTR _raw$3[ebp]
  000d4	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000d7	8b 02		 mov	 eax, DWORD PTR [edx]
  000d9	89 45 9c	 mov	 DWORD PTR tv136[ebp], eax
  000dc	eb 1a		 jmp	 SHORT $LN36@pack_local
$LN35@pack_local:
  000de	6a 6b		 push	 107			; 0000006bH
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f1	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN36@pack_local:
  000f8	ba 01 00 00 00	 mov	 edx, 1
  000fd	85 d2		 test	 edx, edx
  000ff	74 09		 je	 SHORT $LN37@pack_local
  00101	c7 45 98 34 00
	00 00		 mov	 DWORD PTR tv143[ebp], 52 ; 00000034H
  00108	eb 19		 jmp	 SHORT $LN38@pack_local
$LN37@pack_local:
  0010a	6a 6b		 push	 107			; 0000006bH
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN38@pack_local:
  00123	6a 34		 push	 52			; 00000034H
  00125	8b 4d f0	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00128	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0012b	52		 push	 edx
  0012c	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv136[ebp], 1116
  00133	8b 4d 98	 mov	 ecx, DWORD PTR tv143[ebp]
  00136	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0013d	ff d2		 call	 edx
  0013f	89 45 94	 mov	 DWORD PTR tv151[ebp], eax
  00142	8b 45 94	 mov	 eax, DWORD PTR tv151[ebp]
  00145	83 e8 0d	 sub	 eax, 13			; 0000000dH
  00148	89 45 94	 mov	 DWORD PTR tv151[ebp], eax
  0014b	83 7d 94 0a	 cmp	 DWORD PTR tv151[ebp], 10 ; 0000000aH
  0014f	77 16		 ja	 SHORT $LN4@pack_local
  00151	8b 4d 94	 mov	 ecx, DWORD PTR tv151[ebp]
  00154	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN49@pack_local[ecx]
  0015b	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN51@pack_local[edx*4]
$LN17@pack_local:

; 108  : 			{
; 109  : 						
; 110  : 				case ENTITY_SUB_TYPE_TASK_LANDING:
; 111  : 				case ENTITY_SUB_TYPE_TASK_LANDING_HOLDING:
; 112  : 				case ENTITY_SUB_TYPE_TASK_TAKEOFF:
; 113  : 				case ENTITY_SUB_TYPE_TASK_TAKEOFF_HOLDING:
; 114  : 				{
; 115  : 							
; 116  : 					return;

  00162	e9 63 04 00 00	 jmp	 $LN1@pack_local
$LN4@pack_local:

; 117  : 				}
; 118  : 			}
; 119  : 			
; 120  : 			pack_entity_type (get_local_entity_type (en));

  00167	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0016b	74 0a		 je	 SHORT $LN39@pack_local
  0016d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00170	8b 08		 mov	 ecx, DWORD PTR [eax]
  00172	89 4d 9c	 mov	 DWORD PTR tv160[ebp], ecx
  00175	eb 21		 jmp	 SHORT $LN40@pack_local
$LN39@pack_local:
  00177	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0017d	83 c2 28	 add	 edx, 40			; 00000028H
  00180	52		 push	 edx
  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00186	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00191	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN40@pack_local:
  00198	8b 4d 9c	 mov	 ecx, DWORD PTR tv160[ebp]
  0019b	51		 push	 ecx
  0019c	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 121  : 			
; 122  : 			pack_entity_safe_ptr (en);

  001a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 123  : 			
; 124  : 			//
; 125  : 			// pack data (in exactly the same order as the data is unpacked)
; 126  : 			//
; 127  : 			
; 128  : 			pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->sub_type);

  001aa	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  001ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  001af	51		 push	 ecx
  001b0	6a 34		 push	 52			; 00000034H
  001b2	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001b5	52		 push	 edx
  001b6	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 129  : 			
; 130  : 			/////////////////////////////////////////////////////////////////
; 131  : 
; 132  : 			pack_list_link (en, LIST_TYPE_WAYPOINT, &raw->waypoint_link);

  001bb	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  001be	83 c0 14	 add	 eax, 20			; 00000014H
  001c1	50		 push	 eax
  001c2	6a 2c		 push	 44			; 0000002cH
  001c4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001c7	51		 push	 ecx
  001c8	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 133  : 
; 134  : 			/////////////////////////////////////////////////////////////////
; 135  : 			
; 136  : 			/////////////////////////////////////////////////////////////////
; 137  : 			if (raw->current_waypoint_root.first_child)

  001cd	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  001d0	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001d4	74 24		 je	 SHORT $LN18@pack_local

; 138  : 			{
; 139  : 				
; 140  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  001d6	6a 01		 push	 1
  001d8	68 ef 00 00 00	 push	 239			; 000000efH
  001dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001e0	50		 push	 eax
  001e1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 141  : 				
; 142  : 				pack_list_root (en, LIST_TYPE_CURRENT_WAYPOINT, &raw->current_waypoint_root);

  001e6	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  001e9	83 c0 04	 add	 eax, 4
  001ec	50		 push	 eax
  001ed	6a 09		 push	 9
  001ef	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001f2	51		 push	 ecx
  001f3	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 143  : 			}
; 144  : 			else

  001f8	eb 10		 jmp	 SHORT $LN19@pack_local
$LN18@pack_local:

; 145  : 			{
; 146  : 				
; 147  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  001fa	6a 00		 push	 0
  001fc	68 ef 00 00 00	 push	 239			; 000000efH
  00201	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN19@pack_local:

; 148  : 			}
; 149  : 			/////////////////////////////////////////////////////////////////
; 150  : 			
; 151  : 			/////////////////////////////////////////////////////////////////
; 152  : 			if (raw->task_dependent_link.parent)

  0020a	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  0020d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00211	74 24		 je	 SHORT $LN20@pack_local

; 153  : 			{
; 154  : 				
; 155  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  00213	6a 01		 push	 1
  00215	68 ef 00 00 00	 push	 239			; 000000efH
  0021a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0021d	50		 push	 eax
  0021e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 156  : 				
; 157  : 				pack_list_link (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_link);

  00223	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  00226	83 c0 08	 add	 eax, 8
  00229	50		 push	 eax
  0022a	6a 27		 push	 39			; 00000027H
  0022c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0022f	51		 push	 ecx
  00230	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 158  : 			}
; 159  : 			else

  00235	eb 10		 jmp	 SHORT $LN21@pack_local
$LN20@pack_local:

; 160  : 			{
; 161  : 				
; 162  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  00237	6a 00		 push	 0
  00239	68 ef 00 00 00	 push	 239			; 000000efH
  0023e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN21@pack_local:

; 163  : 			}
; 164  : 			/////////////////////////////////////////////////////////////////
; 165  : 			
; 166  : 			pack_float_value (en, FLOAT_TYPE_ALTITUDE, raw->altitude);

  00247	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  0024a	51		 push	 ecx
  0024b	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  00250	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00255	6a 06		 push	 6
  00257	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0025a	51		 push	 ecx
  0025b	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 167  : 			
; 168  : 			pack_float_value (en, FLOAT_TYPE_HEADING, raw->heading);

  00260	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  00263	51		 push	 ecx
  00264	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  00269	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026e	6a 34		 push	 52			; 00000034H
  00270	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00273	51		 push	 ecx
  00274	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 169  : 			
; 170  : 			pack_int_value (en, INT_TYPE_POSITION_TYPE, raw->position_type);

  00279	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  0027c	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0027f	c1 e9 04	 shr	 ecx, 4
  00282	83 e1 03	 and	 ecx, 3
  00285	51		 push	 ecx
  00286	68 a1 00 00 00	 push	 161			; 000000a1H
  0028b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0028e	52		 push	 edx
  0028f	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 171  : 			
; 172  : 			pack_int_value (en, INT_TYPE_ROUTE_NODE, raw->route_node);

  00294	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  00297	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0029a	c1 e9 06	 shr	 ecx, 6
  0029d	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  002a3	51		 push	 ecx
  002a4	68 b4 00 00 00	 push	 180			; 000000b4H
  002a9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002ac	52		 push	 edx
  002ad	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 173  : 			
; 174  : 			pack_char_value (en, CHAR_TYPE_TAG, (char) raw->tag);

  002b2	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  002b5	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  002b8	c1 e9 10	 shr	 ecx, 16			; 00000010H
  002bb	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  002c1	51		 push	 ecx
  002c2	6a 00		 push	 0
  002c4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002c7	52		 push	 edx
  002c8	e8 00 00 00 00	 call	 ?pack_char_value@@YGXPAUENTITY@@W4CHAR_TYPES@@D@Z ; pack_char_value

; 175  : 			
; 176  : 			pack_int_value (en, INT_TYPE_WAYPOINT_FORMATION, raw->waypoint_formation);

  002cd	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  002d0	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  002d3	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  002d9	51		 push	 ecx
  002da	68 fe 00 00 00	 push	 254			; 000000feH
  002df	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002e2	52		 push	 edx
  002e3	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 177  : 			
; 178  : 			switch (raw->position_type)

  002e8	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  002eb	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  002ee	c1 e9 04	 shr	 ecx, 4
  002f1	83 e1 03	 and	 ecx, 3
  002f4	89 4d 9c	 mov	 DWORD PTR tv232[ebp], ecx
  002f7	74 1d		 je	 SHORT $LN23@pack_local
  002f9	83 7d 9c 01	 cmp	 DWORD PTR tv232[ebp], 1
  002fd	74 08		 je	 SHORT $LN22@pack_local
  002ff	83 7d 9c 02	 cmp	 DWORD PTR tv232[ebp], 2
  00303	74 11		 je	 SHORT $LN23@pack_local
  00305	eb 41		 jmp	 SHORT $LN6@pack_local
$LN22@pack_local:

; 179  : 			{
; 180  : 				
; 181  : 				case POSITION_TYPE_RELATIVE:
; 182  : 				{
; 183  : 					
; 184  : 					debug_fatal ("WP_PACK: internal waypoint with relative position");

  00307	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@OEDOBCDI@WP_PACK?3?5internal?5waypoint?5with@
  0030c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00311	83 c4 04	 add	 esp, 4

; 185  : 					
; 186  : 					break;

  00314	eb 32		 jmp	 SHORT $LN6@pack_local
$LN23@pack_local:

; 187  : 				}
; 188  : 				
; 189  : 				case POSITION_TYPE_ABSOLUTE:
; 190  : 				case POSITION_TYPE_VIRTUAL:
; 191  : 				{
; 192  : 					
; 193  : 					position = raw->position;

  00316	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  00319	83 c0 34	 add	 eax, 52			; 00000034H
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	89 4d f4	 mov	 DWORD PTR _position$4[ebp], ecx
  00321	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00324	89 55 f8	 mov	 DWORD PTR _position$4[ebp+4], edx
  00327	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0032a	89 45 fc	 mov	 DWORD PTR _position$4[ebp+8], eax

; 194  : 					
; 195  : 					pack_vec3d (en, VEC3D_TYPE_POSITION, &position);

  0032d	8d 45 f4	 lea	 eax, DWORD PTR _position$4[ebp]
  00330	50		 push	 eax
  00331	6a 08		 push	 8
  00333	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00336	51		 push	 ecx
  00337	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 196  : 					
; 197  : 					pack_entity_safe_ptr (raw->position_entity);

  0033c	8b 45 f0	 mov	 eax, DWORD PTR _raw$3[ebp]
  0033f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00342	51		 push	 ecx
  00343	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr
$LN6@pack_local:

; 198  : 					
; 199  : 					break;
; 200  : 				}
; 201  : 			}
; 202  : 			
; 203  : 			break;

  00348	e9 7d 02 00 00	 jmp	 $LN2@pack_local
$LN24@pack_local:

; 204  : 		}
; 205  : 		////////////////////////////////////////
; 206  : 		case PACK_MODE_CLIENT_SESSION:
; 207  : 		////////////////////////////////////////
; 208  : 		{
; 209  : 			
; 210  : 			vec3d
; 211  : 				position;
; 212  : 			
; 213  : 			waypoint
; 214  : 				*raw;
; 215  : 			
; 216  : 			raw = (waypoint *) get_local_entity_data (en);

  0034d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00350	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00353	89 4d e0	 mov	 DWORD PTR _raw$1[ebp], ecx

; 217  : 			
; 218  : 			ASSERT (raw->waypoint_link.parent);

  00356	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00359	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0035d	75 1a		 jne	 SHORT $LN25@pack_local
  0035f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00364	05 8a 00 00 00	 add	 eax, 138		; 0000008aH
  00369	50		 push	 eax
  0036a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0036f	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@PKMMOEAO@raw?9?$DOwaypoint_link?4parent@
  00374	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN25@pack_local:

; 219  : 				
; 220  : 			ASSERT (get_local_entity_type (raw->waypoint_link.parent) == ENTITY_TYPE_TASK);

  00379	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  0037c	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00380	74 0d		 je	 SHORT $LN41@pack_local
  00382	8b 4d e0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00385	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00388	8b 02		 mov	 eax, DWORD PTR [edx]
  0038a	89 45 9c	 mov	 DWORD PTR tv262[ebp], eax
  0038d	eb 25		 jmp	 SHORT $LN42@pack_local
$LN41@pack_local:
  0038f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00395	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0039b	51		 push	 ecx
  0039c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a7	52		 push	 edx
  003a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ad	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv262[ebp], 0
$LN42@pack_local:
  003b4	83 7d 9c 22	 cmp	 DWORD PTR tv262[ebp], 34 ; 00000022H
  003b8	74 1a		 je	 SHORT $LN26@pack_local
  003ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  003bf	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  003c4	50		 push	 eax
  003c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@JIGLADAN@get_local_entity_type?5?$CIraw?9?$DOway@
  003cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@pack_local:

; 221  : 				
; 222  : 			//
; 223  : 			// do send task's waypoint list (not landing ones)
; 224  : 			//
; 225  : 					
; 226  : 			switch (get_local_entity_int_value (raw->waypoint_link.parent, INT_TYPE_ENTITY_SUB_TYPE))

  003d4	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  003d7	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  003db	74 0d		 je	 SHORT $LN43@pack_local
  003dd	8b 4d e0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  003e0	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  003e3	8b 02		 mov	 eax, DWORD PTR [edx]
  003e5	89 45 9c	 mov	 DWORD PTR tv277[ebp], eax
  003e8	eb 1d		 jmp	 SHORT $LN44@pack_local
$LN43@pack_local:
  003ea	68 e2 00 00 00	 push	 226			; 000000e2H
  003ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003fa	51		 push	 ecx
  003fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00400	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv277[ebp], 0
$LN44@pack_local:
  00407	ba 01 00 00 00	 mov	 edx, 1
  0040c	85 d2		 test	 edx, edx
  0040e	74 09		 je	 SHORT $LN45@pack_local
  00410	c7 45 98 34 00
	00 00		 mov	 DWORD PTR tv284[ebp], 52 ; 00000034H
  00417	eb 1c		 jmp	 SHORT $LN46@pack_local
$LN45@pack_local:
  00419	68 e2 00 00 00	 push	 226			; 000000e2H
  0041e	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00423	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00428	50		 push	 eax
  00429	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042e	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv284[ebp], 0
$LN46@pack_local:
  00435	6a 34		 push	 52			; 00000034H
  00437	8b 4d e0	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0043a	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0043d	52		 push	 edx
  0043e	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv277[ebp], 1116
  00445	8b 4d 98	 mov	 ecx, DWORD PTR tv284[ebp]
  00448	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0044f	ff d2		 call	 edx
  00451	89 45 94	 mov	 DWORD PTR tv292[ebp], eax
  00454	8b 45 94	 mov	 eax, DWORD PTR tv292[ebp]
  00457	83 e8 0d	 sub	 eax, 13			; 0000000dH
  0045a	89 45 94	 mov	 DWORD PTR tv292[ebp], eax
  0045d	83 7d 94 0a	 cmp	 DWORD PTR tv292[ebp], 10 ; 0000000aH
  00461	77 16		 ja	 SHORT $LN8@pack_local
  00463	8b 4d 94	 mov	 ecx, DWORD PTR tv292[ebp]
  00466	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN50@pack_local[ecx]
  0046d	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN52@pack_local[edx*4]
$LN27@pack_local:

; 227  : 			{
; 228  : 						
; 229  : 				case ENTITY_SUB_TYPE_TASK_LANDING:
; 230  : 				case ENTITY_SUB_TYPE_TASK_LANDING_HOLDING:
; 231  : 				case ENTITY_SUB_TYPE_TASK_TAKEOFF:
; 232  : 				case ENTITY_SUB_TYPE_TASK_TAKEOFF_HOLDING:
; 233  : 				{
; 234  : 							
; 235  : 					return;

  00474	e9 51 01 00 00	 jmp	 $LN1@pack_local
$LN8@pack_local:

; 236  : 				}
; 237  : 			}
; 238  : 			
; 239  : 			pack_entity_type (get_local_entity_type (en));

  00479	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0047d	74 0a		 je	 SHORT $LN47@pack_local
  0047f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00482	8b 08		 mov	 ecx, DWORD PTR [eax]
  00484	89 4d 9c	 mov	 DWORD PTR tv301[ebp], ecx
  00487	eb 24		 jmp	 SHORT $LN48@pack_local
$LN47@pack_local:
  00489	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0048f	81 c2 9f 00 00
	00		 add	 edx, 159		; 0000009fH
  00495	52		 push	 edx
  00496	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GLNEHIIC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004a0	50		 push	 eax
  004a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a6	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv301[ebp], 0
$LN48@pack_local:
  004ad	8b 4d 9c	 mov	 ecx, DWORD PTR tv301[ebp]
  004b0	51		 push	 ecx
  004b1	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 240  : 			
; 241  : 			pack_entity_safe_ptr (en);

  004b6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004b9	50		 push	 eax
  004ba	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 242  : 			
; 243  : 			//
; 244  : 			// pack data (in exactly the same order as the data is unpacked)
; 245  : 			//
; 246  : 			
; 247  : 			pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->sub_type);

  004bf	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  004c2	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c4	51		 push	 ecx
  004c5	6a 34		 push	 52			; 00000034H
  004c7	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004ca	52		 push	 edx
  004cb	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 248  : 
; 249  : 			/////////////////////////////////////////////////////////////////
; 250  : 			
; 251  : 			pack_list_link (en, LIST_TYPE_WAYPOINT, &raw->waypoint_link);

  004d0	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  004d3	83 c0 14	 add	 eax, 20			; 00000014H
  004d6	50		 push	 eax
  004d7	6a 2c		 push	 44			; 0000002cH
  004d9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004dc	51		 push	 ecx
  004dd	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 252  : 			
; 253  : 			pack_float_value (en, FLOAT_TYPE_ALTITUDE, raw->altitude);

  004e2	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  004e5	51		 push	 ecx
  004e6	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  004eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f0	6a 06		 push	 6
  004f2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004f5	51		 push	 ecx
  004f6	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 254  : 			
; 255  : 			pack_int_value (en, INT_TYPE_POSITION_TYPE, raw->position_type);

  004fb	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  004fe	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00501	c1 e9 04	 shr	 ecx, 4
  00504	83 e1 03	 and	 ecx, 3
  00507	51		 push	 ecx
  00508	68 a1 00 00 00	 push	 161			; 000000a1H
  0050d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00510	52		 push	 edx
  00511	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 256  : 			
; 257  : 			pack_int_value (en, INT_TYPE_ROUTE_NODE, raw->route_node);

  00516	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00519	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0051c	c1 e9 06	 shr	 ecx, 6
  0051f	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  00525	51		 push	 ecx
  00526	68 b4 00 00 00	 push	 180			; 000000b4H
  0052b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0052e	52		 push	 edx
  0052f	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 258  : 			
; 259  : 			pack_char_value (en, CHAR_TYPE_TAG, (char) raw->tag);

  00534	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00537	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0053a	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0053d	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00543	51		 push	 ecx
  00544	6a 00		 push	 0
  00546	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00549	52		 push	 edx
  0054a	e8 00 00 00 00	 call	 ?pack_char_value@@YGXPAUENTITY@@W4CHAR_TYPES@@D@Z ; pack_char_value

; 260  : 			
; 261  : 			pack_int_value (en, INT_TYPE_WAYPOINT_FORMATION, raw->waypoint_formation);

  0054f	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  00552	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00555	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0055b	51		 push	 ecx
  0055c	68 fe 00 00 00	 push	 254			; 000000feH
  00561	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00564	52		 push	 edx
  00565	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 262  : 			
; 263  : 			switch (raw->position_type)

  0056a	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  0056d	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00570	c1 e9 04	 shr	 ecx, 4
  00573	83 e1 03	 and	 ecx, 3
  00576	89 4d 9c	 mov	 DWORD PTR tv343[ebp], ecx
  00579	74 1d		 je	 SHORT $LN29@pack_local
  0057b	83 7d 9c 01	 cmp	 DWORD PTR tv343[ebp], 1
  0057f	74 08		 je	 SHORT $LN28@pack_local
  00581	83 7d 9c 02	 cmp	 DWORD PTR tv343[ebp], 2
  00585	74 11		 je	 SHORT $LN29@pack_local
  00587	eb 41		 jmp	 SHORT $LN10@pack_local
$LN28@pack_local:

; 264  : 			{
; 265  : 				
; 266  : 				case POSITION_TYPE_RELATIVE:
; 267  : 				{
; 268  : 					
; 269  : 					debug_fatal ("WP_PACK: internal waypoint with relative position");

  00589	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@OEDOBCDI@WP_PACK?3?5internal?5waypoint?5with@
  0058e	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00593	83 c4 04	 add	 esp, 4

; 270  : 					
; 271  : 					break;

  00596	eb 32		 jmp	 SHORT $LN10@pack_local
$LN29@pack_local:

; 272  : 				}
; 273  : 				
; 274  : 				case POSITION_TYPE_ABSOLUTE:
; 275  : 				case POSITION_TYPE_VIRTUAL:
; 276  : 				{
; 277  : 					
; 278  : 					position = raw->position;

  00598	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  0059b	83 c0 34	 add	 eax, 52			; 00000034H
  0059e	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a0	89 4d e4	 mov	 DWORD PTR _position$2[ebp], ecx
  005a3	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  005a6	89 55 e8	 mov	 DWORD PTR _position$2[ebp+4], edx
  005a9	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  005ac	89 45 ec	 mov	 DWORD PTR _position$2[ebp+8], eax

; 279  : 					
; 280  : 					pack_vec3d (en, VEC3D_TYPE_POSITION, &position);

  005af	8d 45 e4	 lea	 eax, DWORD PTR _position$2[ebp]
  005b2	50		 push	 eax
  005b3	6a 08		 push	 8
  005b5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  005b8	51		 push	 ecx
  005b9	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 281  : 					
; 282  : 					pack_entity_safe_ptr (raw->position_entity);

  005be	8b 45 e0	 mov	 eax, DWORD PTR _raw$1[ebp]
  005c1	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  005c4	51		 push	 ecx
  005c5	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr
$LN10@pack_local:
$LN2@pack_local:
$LN1@pack_local:

; 283  : 					
; 284  : 					break;
; 285  : 				}
; 286  : 			}
; 287  : 			
; 288  : 			break;
; 289  : 		}
; 290  : 		////////////////////////////////////////
; 291  : 		case PACK_MODE_BROWSE_SESSION:
; 292  : 		////////////////////////////////////////
; 293  : 		{
; 294  : 			break;
; 295  : 		}
; 296  : 		////////////////////////////////////////
; 297  : 		case PACK_MODE_UPDATE_ENTITY:
; 298  : 		////////////////////////////////////////
; 299  : 		{
; 300  : 			break;
; 301  : 		}
; 302  : 	}
; 303  : }

  005ca	5f		 pop	 edi
  005cb	5e		 pop	 esi
  005cc	5b		 pop	 ebx
  005cd	8b e5		 mov	 esp, ebp
  005cf	5d		 pop	 ebp
  005d0	c2 08 00	 ret	 8
  005d3	90		 npad	 1
$LN51@pack_local:
  005d4	00 00 00 00	 DD	 $LN17@pack_local
  005d8	00 00 00 00	 DD	 $LN4@pack_local
$LN49@pack_local:
  005dc	00		 DB	 0
  005dd	00		 DB	 0
  005de	01		 DB	 1
  005df	01		 DB	 1
  005e0	01		 DB	 1
  005e1	01		 DB	 1
  005e2	01		 DB	 1
  005e3	01		 DB	 1
  005e4	01		 DB	 1
  005e5	00		 DB	 0
  005e6	00		 DB	 0
  005e7	90		 npad	 1
$LN52@pack_local:
  005e8	00 00 00 00	 DD	 $LN27@pack_local
  005ec	00 00 00 00	 DD	 $LN8@pack_local
$LN50@pack_local:
  005f0	00		 DB	 0
  005f1	00		 DB	 0
  005f2	01		 DB	 1
  005f3	01		 DB	 1
  005f4	01		 DB	 1
  005f5	01		 DB	 1
  005f6	01		 DB	 1
  005f7	01		 DB	 1
  005f8	01		 DB	 1
  005f9	00		 DB	 0
  005fa	00		 DB	 0
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\waypoint\wp_pack.c
;	COMDAT ?overload_waypoint_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_waypoint_pack_functions@@YGXXZ PROC		; overload_waypoint_pack_functions, COMDAT

; 503  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 504  : 	fn_pack_local_entity_data[ENTITY_TYPE_WAYPOINT]         = pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 24	 imul	 ecx, eax, 36
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 505  : 	
; 506  : 	fn_unpack_local_entity_data[ENTITY_TYPE_WAYPOINT]       = unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 24	 imul	 ecx, eax, 36
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 507  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_waypoint_pack_functions@@YGXXZ ENDP		; overload_waypoint_pack_functions
_TEXT	ENDS
END
