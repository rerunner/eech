; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3ddisp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?displacement_maps@@3PAUDISPLACEMENT_MAP@@A	; displacement_maps
PUBLIC	?number_of_displacement_maps@@3HA		; number_of_displacement_maps
_BSS	SEGMENT
?displacement_maps@@3PAUDISPLACEMENT_MAP@@A DD 01H DUP (?) ; displacement_maps
?number_of_displacement_maps@@3HA DD 01H DUP (?)	; number_of_displacement_maps
_BSS	ENDS
PUBLIC	?initialise_3d_displacement_maps@@YGXPBD@Z	; initialise_3d_displacement_maps
PUBLIC	?deinitialise_3d_displacement_maps@@YGXXZ	; deinitialise_3d_displacement_maps
PUBLIC	??_C@_02JDPG@rb@				; `string'
EXTRN	__imp__fread:PROC
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3ddisp.c
;	COMDAT ?deinitialise_3d_displacement_maps@@YGXXZ
_TEXT	SEGMENT
_count$1 = -4						; size = 4
?deinitialise_3d_displacement_maps@@YGXXZ PROC		; deinitialise_3d_displacement_maps, COMDAT

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 127  : 
; 128  : 	if ( number_of_displacement_maps )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?number_of_displacement_maps@@3HA, 0 ; number_of_displacement_maps
  00010	74 75		 je	 SHORT $LN1@deinitiali

; 129  : 	{
; 130  : 
; 131  : 		int
; 132  : 			count;
; 133  : 
; 134  : 		for ( count = 0; count < number_of_displacement_maps; count++ )

  00012	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00019	eb 09		 jmp	 SHORT $LN4@deinitiali
$LN2@deinitiali:
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  0001e	83 c0 01	 add	 eax, 1
  00021	89 45 fc	 mov	 DWORD PTR _count$1[ebp], eax
$LN4@deinitiali:
  00024	8b 45 fc	 mov	 eax, DWORD PTR _count$1[ebp]
  00027	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_displacement_maps@@3HA ; number_of_displacement_maps
  0002d	7d 39		 jge	 SHORT $LN3@deinitiali

; 135  : 		{
; 136  : 
; 137  : 			if ( displacement_maps[count].data )

  0002f	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  00039	83 7c 01 08 00	 cmp	 DWORD PTR [ecx+eax+8], 0
  0003e	74 26		 je	 SHORT $LN6@deinitiali

; 138  : 			{
; 139  : 
; 140  : 				safe_free ( displacement_maps[count].data );

  00040	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  0004a	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 141  : 
; 142  : 				displacement_maps[count].data = NULL;

  00054	6b 45 fc 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  0005e	c7 44 01 08 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+8], 0
$LN6@deinitiali:

; 143  : 			}
; 144  : 		}

  00066	eb b3		 jmp	 SHORT $LN2@deinitiali
$LN3@deinitiali:

; 145  : 
; 146  : 		safe_free ( displacement_maps );

  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 147  : 
; 148  : 		displacement_maps = NULL;

  00073	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A, 0 ; displacement_maps

; 149  : 
; 150  : 		number_of_displacement_maps = 0;

  0007d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?number_of_displacement_maps@@3HA, 0 ; number_of_displacement_maps
$LN1@deinitiali:

; 151  : 	}
; 152  : }

  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5b		 pop	 ebx
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?deinitialise_3d_displacement_maps@@YGXXZ ENDP		; deinitialise_3d_displacement_maps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3ddisp.c
;	COMDAT ?initialise_3d_displacement_maps@@YGXPBD@Z
_TEXT	SEGMENT
_height$1 = -16						; size = 4
_width$2 = -12						; size = 4
_count$ = -8						; size = 4
_fp$ = -4						; size = 4
_filename$ = 8						; size = 4
?initialise_3d_displacement_maps@@YGXPBD@Z PROC		; initialise_3d_displacement_maps, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 85   : 
; 86   : 	FILE
; 87   : 		*fp;
; 88   : 
; 89   : 	int
; 90   : 		count;
; 91   : 
; 92   : 	fp = safe_fopen ( filename, "rb" );

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  0000e	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00017	89 45 fc	 mov	 DWORD PTR _fp$[ebp], eax

; 93   : 
; 94   : 	fread ( &number_of_displacement_maps, sizeof ( int ), 1, fp );

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _fp$[ebp]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	68 00 00 00 00	 push	 OFFSET ?number_of_displacement_maps@@3HA ; number_of_displacement_maps
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  0002d	83 c4 10	 add	 esp, 16			; 00000010H

; 95   : 
; 96   : 	if ( number_of_displacement_maps )

  00030	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?number_of_displacement_maps@@3HA, 0 ; number_of_displacement_maps
  00037	0f 84 c2 00 00
	00		 je	 $LN1@initialise

; 97   : 	{
; 98   : 
; 99   : 		displacement_maps = ( displacement_map * ) safe_malloc ( sizeof ( displacement_map ) * number_of_displacement_maps );

  0003d	6b 05 00 00 00
	00 0c		 imul	 eax, DWORD PTR ?number_of_displacement_maps@@3HA, 12 ; number_of_displacement_maps
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0004a	a3 00 00 00 00	 mov	 DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A, eax ; displacement_maps

; 100  : 	
; 101  : 		for ( count = 0; count < number_of_displacement_maps; count++ )

  0004f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00056	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  00058	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0005b	83 c0 01	 add	 eax, 1
  0005e	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@initialise:
  00061	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00064	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_displacement_maps@@3HA ; number_of_displacement_maps
  0006a	0f 8d 8f 00 00
	00		 jge	 $LN1@initialise

; 102  : 		{
; 103  : 
; 104  : 			int
; 105  : 				width,
; 106  : 				height;
; 107  : 	
; 108  : 			fread ( &width, sizeof ( int ), 1, fp );

  00070	8b 45 fc	 mov	 eax, DWORD PTR _fp$[ebp]
  00073	50		 push	 eax
  00074	6a 01		 push	 1
  00076	6a 04		 push	 4
  00078	8d 4d f4	 lea	 ecx, DWORD PTR _width$2[ebp]
  0007b	51		 push	 ecx
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00082	83 c4 10	 add	 esp, 16			; 00000010H

; 109  : 			fread ( &height, sizeof ( int ), 1, fp );

  00085	8b 45 fc	 mov	 eax, DWORD PTR _fp$[ebp]
  00088	50		 push	 eax
  00089	6a 01		 push	 1
  0008b	6a 04		 push	 4
  0008d	8d 4d f0	 lea	 ecx, DWORD PTR _height$1[ebp]
  00090	51		 push	 ecx
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 110  : 
; 111  : 			displacement_maps[count].width = width;

  0009a	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  000a4	8b 55 f4	 mov	 edx, DWORD PTR _width$2[ebp]
  000a7	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 112  : 			displacement_maps[count].height = height;

  000aa	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  000ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  000b4	8b 55 f0	 mov	 edx, DWORD PTR _height$1[ebp]
  000b7	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 113  : 
; 114  : 			displacement_maps[count].data = ( unsigned char * ) safe_malloc ( width * height );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _width$2[ebp]
  000be	0f af 45 f0	 imul	 eax, DWORD PTR _height$1[ebp]
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  000c8	6b 4d f8 0c	 imul	 ecx, DWORD PTR _count$[ebp], 12
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  000d2	89 44 0a 08	 mov	 DWORD PTR [edx+ecx+8], eax

; 115  : 
; 116  : 			fread ( displacement_maps[count].data, width, height, fp );

  000d6	8b 45 fc	 mov	 eax, DWORD PTR _fp$[ebp]
  000d9	50		 push	 eax
  000da	8b 4d f0	 mov	 ecx, DWORD PTR _height$1[ebp]
  000dd	51		 push	 ecx
  000de	8b 55 f4	 mov	 edx, DWORD PTR _width$2[ebp]
  000e1	52		 push	 edx
  000e2	6b 45 f8 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displacement_maps@@3PAUDISPLACEMENT_MAP@@A ; displacement_maps
  000ec	8b 54 01 08	 mov	 edx, DWORD PTR [ecx+eax+8]
  000f0	52		 push	 edx
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  000f7	83 c4 10	 add	 esp, 16			; 00000010H

; 117  : 		}

  000fa	e9 59 ff ff ff	 jmp	 $LN2@initialise
$LN1@initialise:

; 118  : 	}
; 119  : }

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 04 00	 ret	 4
?initialise_3d_displacement_maps@@YGXPBD@Z ENDP		; initialise_3d_displacement_maps
_TEXT	ENDS
END
