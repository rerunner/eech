; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\task\ts_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_task_update_functions@@YGXXZ		; overload_task_update_functions
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0EK@KBGKEFBN@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BJ@JGDBHJMI@raw?9?$DOexpire_timer?5?$DN?$DN?50?40@ ; `string'
PUBLIC	??_C@_0CL@EMGIMDH@task_database?5?$FLraw?9?$DOsub_type?$FN?4p@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?validate_task_entity@@YGXPAUENTITY@@@Z:PROC	; validate_task_entity
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_destroy_local_entity_family@@3PAP6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_local_entity_family
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	?task_database@@3PAUTASK_DATA@@A:BYTE		; task_database
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EMGIMDH@task_database?5?$FLraw?9?$DOsub_type?$FN?4p@
CONST	SEGMENT
??_C@_0CL@EMGIMDH@task_database?5?$FLraw?9?$DOsub_type?$FN?4p@ DB 'task_d'
	DB	'atabase [raw->sub_type].primary_task', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JGDBHJMI@raw?9?$DOexpire_timer?5?$DN?$DN?50?40@
CONST	SEGMENT
??_C@_0BJ@JGDBHJMI@raw?9?$DOexpire_timer?5?$DN?$DN?50?40@ DB 'raw->expire'
	DB	'_timer == 0.0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@KBGKEFBN@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EK@KBGKEFBN@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\task\ts_updt.'
	DB	'c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 050H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv66 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 209  : 	task
; 210  : 		*raw;
; 211  : 
; 212  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 213  : 
; 214  : 	switch (raw->task_state)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00018	89 4d b0	 mov	 DWORD PTR tv66[ebp], ecx
  0001b	83 7d b0 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001f	74 0b		 je	 SHORT $LN4@update_cli
  00021	83 7d b0 01	 cmp	 DWORD PTR tv66[ebp], 1
  00025	74 51		 je	 SHORT $LN6@update_cli
  00027	e9 96 00 00 00	 jmp	 $LN2@update_cli
$LN4@update_cli:

; 215  : 	{
; 216  : 		case TASK_STATE_UNASSIGNED:
; 217  : 		{
; 218  : 			//
; 219  : 			// Only decrement the expire timer if the task requires it (i.e. non-zero expire timer)
; 220  : 			//
; 221  : 			
; 222  : 			if (raw->expire_timer > 0.0)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002f	f3 0f 5a 40 2c	 cvtss2sd xmm0, DWORD PTR [eax+44]
  00034	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0003c	76 38		 jbe	 SHORT $LN5@update_cli

; 223  : 			{
; 224  : 				raw->expire_timer -= get_delta_time ();

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00041	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00046	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00051	f3 0f 11 41 2c	 movss	 DWORD PTR [ecx+44], xmm0

; 225  : 		
; 226  : 				raw->expire_timer = max (raw->expire_timer, 0.0f);

  00056	0f 57 c0	 xorps	 xmm0, xmm0
  00059	f3 0f 11 45 b8	 movss	 DWORD PTR $T2[ebp], xmm0
  0005e	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  00061	50		 push	 eax
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00065	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0006e	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00071	8b 00		 mov	 eax, DWORD PTR [eax]
  00073	89 42 2c	 mov	 DWORD PTR [edx+44], eax
$LN5@update_cli:

; 227  : 			}
; 228  : 
; 229  : 			break;

  00076	eb 4a		 jmp	 SHORT $LN2@update_cli
$LN6@update_cli:

; 230  : 		}
; 231  : 
; 232  : 		case TASK_STATE_ASSIGNED:
; 233  : 		{
; 234  : 			//
; 235  : 			// Only decrement the stop timer if the task requires it (i.e. non-zero stop timer)
; 236  : 			//
; 237  : 			
; 238  : 			if (raw->stop_timer > 0.0)

  00078	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0007b	f3 0f 5a 40 28	 cvtss2sd xmm0, DWORD PTR [eax+40]
  00080	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00088	76 38		 jbe	 SHORT $LN7@update_cli

; 239  : 			{
; 240  : 				raw->stop_timer -= get_delta_time ();

  0008a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008d	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  00092	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0009d	f3 0f 11 41 28	 movss	 DWORD PTR [ecx+40], xmm0

; 241  : 		
; 242  : 				raw->stop_timer = max (raw->stop_timer, 0.0f);

  000a2	0f 57 c0	 xorps	 xmm0, xmm0
  000a5	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  000aa	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  000ad	50		 push	 eax
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000b1	83 c1 28	 add	 ecx, 40			; 00000028H
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000bd	8b 00		 mov	 eax, DWORD PTR [eax]
  000bf	89 42 28	 mov	 DWORD PTR [edx+40], eax
$LN7@update_cli:
$LN2@update_cli:

; 243  : 			}
; 244  : 
; 245  : 			break;
; 246  : 		}
; 247  : 	}
; 248  : }

  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5b		 pop	 ebx
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv169 = -72						; size = 4
tv67 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	task
; 82   : 		*raw;
; 83   : 
; 84   : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 85   : 
; 86   : 	#ifdef DEBUG
; 87   : 
; 88   : 	validate_task_entity (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?validate_task_entity@@YGXPAUENTITY@@@Z ; validate_task_entity

; 89   : 
; 90   : 	#endif
; 91   : 
; 92   : 	//
; 93   : 	// Unassigned tasks terminated if expire time
; 94   : 	//	Assigned tasks terminated if stop time reached
; 95   : 	//
; 96   : 
; 97   : 	switch (raw->task_state)

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	89 4d b8	 mov	 DWORD PTR tv67[ebp], ecx
  00024	83 7d b8 00	 cmp	 DWORD PTR tv67[ebp], 0
  00028	74 15		 je	 SHORT $LN4@update_ser
  0002a	83 7d b8 01	 cmp	 DWORD PTR tv67[ebp], 1
  0002e	74 6e		 je	 SHORT $LN7@update_ser
  00030	83 7d b8 02	 cmp	 DWORD PTR tv67[ebp], 2
  00034	0f 84 04 01 00
	00		 je	 $LN12@update_ser
  0003a	e9 c3 01 00 00	 jmp	 $LN2@update_ser
$LN4@update_ser:

; 98   : 	{
; 99   : 		case TASK_STATE_UNASSIGNED:
; 100  : 		{
; 101  : 			//
; 102  : 			// Only decrement the expire timer if the task requires it (i.e. non-zero expire timer)
; 103  : 			//
; 104  : 			
; 105  : 			if (raw->expire_timer > 0.0)

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00042	f3 0f 5a 40 2c	 cvtss2sd xmm0, DWORD PTR [eax+44]
  00047	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0004f	76 48		 jbe	 SHORT $LN6@update_ser

; 106  : 			{
; 107  : 				raw->expire_timer -= get_delta_time ();

  00051	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00054	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00059	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00064	f3 0f 11 41 2c	 movss	 DWORD PTR [ecx+44], xmm0

; 108  : 		
; 109  : 				if (raw->expire_timer <= 0.0)

  00069	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006c	f3 0f 5a 40 2c	 cvtss2sd xmm0, DWORD PTR [eax+44]
  00071	0f 57 c9	 xorps	 xmm1, xmm1
  00074	66 0f 2f c8	 comisd	 xmm1, xmm0
  00078	72 1f		 jb	 SHORT $LN6@update_ser

; 110  : 				{
; 111  : 					raw->expire_timer = 0.0;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0007d	0f 57 c0	 xorps	 xmm0, xmm0
  00080	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 112  : 		
; 113  : 					#if DEBUG_MODULE
; 114  : 
; 115  : 					debug_log ("TS_UPDT: UNASSIGNED task %d type %s expired", get_local_entity_index (en), entity_sub_type_task_names [raw->sub_type]);
; 116  : 
; 117  : 					#endif
; 118  : 
; 119  : 					notify_local_entity (ENTITY_MESSAGE_TASK_TERMINATED, en, en, TASK_TERMINATED_EXPIRE_TIME_REACHED);

  00085	6a 01		 push	 1
  00087	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0008e	51		 push	 ecx
  0008f	6a 36		 push	 54			; 00000036H
  00091	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00096	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@update_ser:

; 120  : 				}
; 121  : 			}
; 122  : 
; 123  : 			break;

  00099	e9 64 01 00 00	 jmp	 $LN2@update_ser
$LN7@update_ser:

; 124  : 		}
; 125  : 
; 126  : 		case TASK_STATE_ASSIGNED:
; 127  : 		{
; 128  : 			//
; 129  : 			// Only decrement the stop timer if the task requires it (i.e. non-zero stop timer)
; 130  : 			//
; 131  : 
; 132  : 			#ifdef DEBUG
; 133  : 
; 134  : 			//
; 135  : 			//
; 136  : 			//
; 137  : 
; 138  : 			if (task_database [raw->sub_type].primary_task)

  0009e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a1	6b 08 50	 imul	 ecx, DWORD PTR [eax], 80
  000a4	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  000aa	d1 ea		 shr	 edx, 1
  000ac	83 e2 01	 and	 edx, 1
  000af	74 2e		 je	 SHORT $LN9@update_ser

; 139  : 			{
; 140  : 				ASSERT (raw->expire_timer == 0.0);

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b4	f3 0f 5a 40 2c	 cvtss2sd xmm0, DWORD PTR [eax+44]
  000b9	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000c1	9f		 lahf
  000c2	f6 c4 44	 test	 ah, 68			; 00000044H
  000c5	7b 18		 jnp	 SHORT $LN9@update_ser
  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  000cc	83 c0 3c	 add	 eax, 60			; 0000003cH
  000cf	50		 push	 eax
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@KBGKEFBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JGDBHJMI@raw?9?$DOexpire_timer?5?$DN?$DN?50?40@
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@update_ser:

; 141  : 			}
; 142  : 
; 143  : 			#endif
; 144  : 			
; 145  : 			if (raw->stop_timer > 0.0)

  000df	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000e2	f3 0f 5a 40 28	 cvtss2sd xmm0, DWORD PTR [eax+40]
  000e7	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000ef	76 48		 jbe	 SHORT $LN11@update_ser

; 146  : 			{
; 147  : 				raw->stop_timer -= get_delta_time ();

  000f1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000f4	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  000f9	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00104	f3 0f 11 41 28	 movss	 DWORD PTR [ecx+40], xmm0

; 148  : 		
; 149  : 				if (raw->stop_timer <= 0.0)

  00109	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0010c	f3 0f 5a 40 28	 cvtss2sd xmm0, DWORD PTR [eax+40]
  00111	0f 57 c9	 xorps	 xmm1, xmm1
  00114	66 0f 2f c8	 comisd	 xmm1, xmm0
  00118	72 1f		 jb	 SHORT $LN11@update_ser

; 150  : 				{
; 151  : 					raw->stop_timer = 0.0;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0011d	0f 57 c0	 xorps	 xmm0, xmm0
  00120	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 152  : 
; 153  : 					#if DEBUG_MODULE
; 154  : 
; 155  : 					debug_log ("TS_UPDT: ASSIGNED task %d type %s reached stop time", get_local_entity_index (en), entity_sub_type_task_names [raw->sub_type]);
; 156  : 
; 157  : 					#endif
; 158  : 
; 159  : 					notify_local_entity (ENTITY_MESSAGE_TASK_COMPLETED, en, en, TASK_TERMINATED_STOP_TIME_REACHED);

  00125	6a 05		 push	 5
  00127	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0012a	50		 push	 eax
  0012b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0012e	51		 push	 ecx
  0012f	6a 32		 push	 50			; 00000032H
  00131	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00136	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@update_ser:

; 160  : 				}
; 161  : 			}
; 162  : 
; 163  : 			break;

  00139	e9 c4 00 00 00	 jmp	 $LN2@update_ser
$LN12@update_ser:

; 164  : 		}
; 165  : 
; 166  : 		case TASK_STATE_COMPLETED:
; 167  : 		{
; 168  : 			//
; 169  : 			// Expire Timer is used to destroy completed tasks after a certain time 
; 170  : 			//
; 171  : 
; 172  : 			ASSERT (task_database [raw->sub_type].primary_task);

  0013e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00141	6b 08 50	 imul	 ecx, DWORD PTR [eax], 80
  00144	8b 91 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+40]
  0014a	d1 ea		 shr	 edx, 1
  0014c	83 e2 01	 and	 edx, 1
  0014f	75 18		 jne	 SHORT $LN13@update_ser
  00151	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00156	83 c0 5c	 add	 eax, 92			; 0000005cH
  00159	50		 push	 eax
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@KBGKEFBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@EMGIMDH@task_database?5?$FLraw?9?$DOsub_type?$FN?4p@
  00164	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@update_ser:

; 173  : 			
; 174  : 			if (raw->expire_timer > 0.0)

  00169	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016c	f3 0f 5a 40 2c	 cvtss2sd xmm0, DWORD PTR [eax+44]
  00171	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00179	0f 86 83 00 00
	00		 jbe	 $LN15@update_ser

; 175  : 			{
; 176  : 				raw->expire_timer -= get_delta_time ();

  0017f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00182	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00187	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00192	f3 0f 11 41 2c	 movss	 DWORD PTR [ecx+44], xmm0

; 177  : 		
; 178  : 				if (raw->expire_timer <= 0.0)

  00197	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0019a	f3 0f 5a 40 2c	 cvtss2sd xmm0, DWORD PTR [eax+44]
  0019f	0f 57 c9	 xorps	 xmm1, xmm1
  001a2	66 0f 2f c8	 comisd	 xmm1, xmm0
  001a6	72 5a		 jb	 SHORT $LN15@update_ser

; 179  : 				{
; 180  : 					raw->expire_timer = 0.0;

  001a8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001ab	0f 57 c0	 xorps	 xmm0, xmm0
  001ae	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 181  : 		
; 182  : 					#if DEBUG_MODULE
; 183  : 	
; 184  : 					debug_log ("TS_UPDT: COMPLETED task %d type %s expired", get_local_entity_index (en), entity_sub_type_task_names [raw->sub_type]);
; 185  : 	
; 186  : 					#endif
; 187  : 	
; 188  : 					//
; 189  : 					// Destroy task
; 190  : 					//
; 191  : 				
; 192  : 					destroy_local_entity_family (en);

  001b3	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001b7	74 0a		 je	 SHORT $LN17@update_ser
  001b9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001be	89 4d b8	 mov	 DWORD PTR tv169[ebp], ecx
  001c1	eb 21		 jmp	 SHORT $LN18@update_ser
$LN17@update_ser:
  001c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  001c9	83 c2 70	 add	 edx, 112		; 00000070H
  001cc	52		 push	 edx
  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@KBGKEFBN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001dd	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN18@update_ser:
  001e4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001e7	51		 push	 ecx
  001e8	8b 55 b8	 mov	 edx, DWORD PTR tv169[ebp]
  001eb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_destroy_local_entity_family@@3PAP6GXPAUENTITY@@@ZA[edx*4]
  001f2	ff d0		 call	 eax

; 193  : 		
; 194  : 					transmit_entity_comms_message (ENTITY_COMMS_DESTROY_LOCAL_FAMILY, en);

  001f4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001f7	50		 push	 eax
  001f8	6a 14		 push	 20			; 00000014H
  001fa	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  001ff	83 c4 08	 add	 esp, 8
$LN15@update_ser:
$LN2@update_ser:

; 195  : 				}
; 196  : 			}
; 197  : 			
; 198  : 			break;
; 199  : 		}
; 200  : 	}
; 201  : }

  00202	5f		 pop	 edi
  00203	5e		 pop	 esi
  00204	5b		 pop	 ebx
  00205	8b e5		 mov	 esp, ebp
  00207	5d		 pop	 ebp
  00208	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_updt.c
;	COMDAT ?overload_task_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_task_update_functions@@YGXXZ PROC		; overload_task_update_functions, COMDAT

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 256  : 	fn_update_client_server_entity[ENTITY_TYPE_TASK][COMMS_MODEL_SERVER]  	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 22	 imul	 ecx, eax, 34
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 257  : 
; 258  : 	fn_update_client_server_entity[ENTITY_TYPE_TASK][COMMS_MODEL_CLIENT]  	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 22	 imul	 ecx, eax, 34
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 259  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_task_update_functions@@YGXXZ ENDP		; overload_task_update_functions
_TEXT	ENDS
END
