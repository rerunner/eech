; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\number\nu_txt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_number_ui_object_text_functions@@YGXH@Z ; overload_number_ui_object_text_functions
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_text
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\number\nu_txt.c
;	COMDAT ?set_number_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z
_TEXT	SEGMENT
_parent$ = -16						; size = 4
_number$ = -12						; size = 4
_pixel_length$ = -8					; size = 4
_length$ = -4						; size = 4
_obj$ = 8						; size = 4
_text$ = 12						; size = 4
?set_number_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z PROC	; set_number_ui_object_text, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	int
; 77   : 		length;
; 78   : 
; 79   : 	float
; 80   : 		pixel_length;
; 81   : 
; 82   : 	number_ui_object
; 83   : 		*number;
; 84   : 
; 85   : 	ui_object
; 86   : 		*parent;
; 87   : 
; 88   : 	number = (number_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f4	 mov	 DWORD PTR _number$[ebp], ecx

; 89   : 
; 90   : 	if (number->area.text)

  00012	8b 45 f4	 mov	 eax, DWORD PTR _number$[ebp]
  00015	83 78 68 00	 cmp	 DWORD PTR [eax+104], 0
  00019	74 0c		 je	 SHORT $LN4@set_number

; 91   : 	{
; 92   : 
; 93   : 		safe_free (number->area.text);

  0001b	8b 45 f4	 mov	 eax, DWORD PTR _number$[ebp]
  0001e	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free
$LN4@set_number:

; 94   : 	}
; 95   : 
; 96   : 	number->area.text = NULL;

  00027	8b 45 f4	 mov	 eax, DWORD PTR _number$[ebp]
  0002a	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [eax+104], 0

; 97   : 
; 98   : 	if (text)

  00031	83 7d 0c 00	 cmp	 DWORD PTR _text$[ebp], 0
  00035	74 64		 je	 SHORT $LN5@set_number

; 99   : 	{
; 100  : 
; 101  : 		length = strlen (text);

  00037	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _strlen
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 fc	 mov	 DWORD PTR _length$[ebp], eax

; 102  : 	
; 103  : 		pixel_length = ui_get_string_length (text);

  00046	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  0004f	d9 5d f8	 fstp	 DWORD PTR _pixel_length$[ebp]

; 104  : 	
; 105  : 		number->area.x_size_start = pixel_length;

  00052	8b 45 f4	 mov	 eax, DWORD PTR _number$[ebp]
  00055	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pixel_length$[ebp]
  0005a	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 106  : 	
; 107  : 		number->area.y_size_start = ui_get_font_height () + LIST_ITEM_SPACING;

  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00064	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00067	83 c1 04	 add	 ecx, 4
  0006a	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0006e	8b 55 f4	 mov	 edx, DWORD PTR _number$[ebp]
  00071	f3 0f 11 42 1c	 movss	 DWORD PTR [edx+28], xmm0

; 108  : 	
; 109  : 		number->area.text = (char *) safe_malloc ((sizeof (char) * length) + 1);

  00076	8b 45 fc	 mov	 eax, DWORD PTR _length$[ebp]
  00079	83 c0 01	 add	 eax, 1
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00082	8b 4d f4	 mov	 ecx, DWORD PTR _number$[ebp]
  00085	89 41 68	 mov	 DWORD PTR [ecx+104], eax

; 110  : 	
; 111  : 		strcpy (number->area.text, text);

  00088	8b 45 0c	 mov	 eax, DWORD PTR _text$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d f4	 mov	 ecx, DWORD PTR _number$[ebp]
  0008f	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  00092	52		 push	 edx
  00093	e8 00 00 00 00	 call	 _strcpy
  00098	83 c4 08	 add	 esp, 8
$LN5@set_number:

; 112  : 	}
; 113  : 
; 114  : 	parent = get_ui_object_parent (obj);

  0009b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0009e	50		 push	 eax
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000ab	ff d0		 call	 eax
  000ad	89 45 f0	 mov	 DWORD PTR _parent$[ebp], eax

; 115  : 
; 116  :   	if (parent)

  000b0	83 7d f0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000b4	74 63		 je	 SHORT $LN6@set_number

; 117  : 	{
; 118  : 
; 119  : 		set_ui_object_redraw (parent, TRUE);

  000b6	6a 01		 push	 1
  000b8	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  000bb	50		 push	 eax
  000bc	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000c8	ff d0		 call	 eax
$LN2@set_number:

; 120  : 
; 121  : 		while ((parent) && (get_ui_object_clear (parent)))

  000ca	83 7d f0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000ce	74 47		 je	 SHORT $LN3@set_number
  000d0	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  000d3	50		 push	 eax
  000d4	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000e0	ff d0		 call	 eax
  000e2	85 c0		 test	 eax, eax
  000e4	74 31		 je	 SHORT $LN3@set_number

; 122  : 		{
; 123  : 
; 124  : 			parent = get_ui_object_parent (parent);

  000e6	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  000e9	50		 push	 eax
  000ea	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  000ed	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ef	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000f6	ff d0		 call	 eax
  000f8	89 45 f0	 mov	 DWORD PTR _parent$[ebp], eax

; 125  : 
; 126  : 			if (parent)

  000fb	83 7d f0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000ff	74 14		 je	 SHORT $LN8@set_number

; 127  : 			{
; 128  : 
; 129  : 				set_ui_object_redraw (parent, TRUE);

  00101	6a 01		 push	 1
  00103	8b 45 f0	 mov	 eax, DWORD PTR _parent$[ebp]
  00106	50		 push	 eax
  00107	8b 4d f0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0010a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00113	ff d0		 call	 eax
$LN8@set_number:

; 130  : 			}
; 131  : 		}

  00115	eb b3		 jmp	 SHORT $LN2@set_number
$LN3@set_number:

; 132  : 	}
; 133  : 	else

  00117	eb 14		 jmp	 SHORT $LN7@set_number
$LN6@set_number:

; 134  : 	{
; 135  : 
; 136  : 		set_ui_object_redraw (obj, TRUE);

  00119	6a 01		 push	 1
  0011b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0011e	50		 push	 eax
  0011f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00122	8b 11		 mov	 edx, DWORD PTR [ecx]
  00124	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0012b	ff d0		 call	 eax
$LN7@set_number:

; 137  : 	}
; 138  : }

  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	5b		 pop	 ebx
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c2 08 00	 ret	 8
?set_number_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z ENDP	; set_number_ui_object_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\number\nu_txt.c
;	COMDAT ?overload_number_ui_object_text_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_number_ui_object_text_functions@@YGXH@Z PROC	; overload_number_ui_object_text_functions, COMDAT

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 146  : 
; 147  : 	fn_set_ui_object_text [type] = set_number_ui_object_text;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4], OFFSET ?set_number_ui_object_text@@YGXPAUUI_OBJECT@@PBD@Z ; set_number_ui_object_text

; 148  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_number_ui_object_text_functions@@YGXH@Z ENDP	; overload_number_ui_object_text_functions
_TEXT	ENDS
END
