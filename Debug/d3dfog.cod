; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\d3dfog.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?d3d_fog_intensity@@3KA				; d3d_fog_intensity
PUBLIC	?d3d_fog_start@@3MA				; d3d_fog_start
PUBLIC	?d3d_fog_end@@3MA				; d3d_fog_end
PUBLIC	?d3d_fog_factor@@3MA				; d3d_fog_factor
PUBLIC	?d3d_fog_constant@@3MA				; d3d_fog_constant
PUBLIC	?d3d_fog_density@@3MA				; d3d_fog_density
PUBLIC	?d3d_fog_colour@@3UREAL_COLOUR@@A		; d3d_fog_colour
_BSS	SEGMENT
?d3d_fog_intensity@@3KA DD 01H DUP (?)			; d3d_fog_intensity
?d3d_fog_start@@3MA DD 01H DUP (?)			; d3d_fog_start
?d3d_fog_end@@3MA DD 01H DUP (?)			; d3d_fog_end
?d3d_fog_factor@@3MA DD 01H DUP (?)			; d3d_fog_factor
?d3d_fog_constant@@3MA DD 01H DUP (?)			; d3d_fog_constant
?d3d_fog_density@@3MA DD 01H DUP (?)			; d3d_fog_density
?d3d_fog_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; d3d_fog_colour
_BSS	ENDS
PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?get_fog_distance_value@@YGMM@Z			; get_fog_distance_value
PUBLIC	?get_int_fog_distance_value@@YGHM@Z		; get_int_fog_distance_value
PUBLIC	?set_d3d_fog_parameters@@YGXHUREAL_COLOUR@@MM@Z	; set_d3d_fog_parameters
PUBLIC	?set_d3d_fog_renderstates@@YGXXZ		; set_d3d_fog_renderstates
PUBLIC	?set_d3d_fog_face_intensity@@YGXH@Z		; set_d3d_fog_face_intensity
PUBLIC	?suspend_d3d_fog@@YGXXZ				; suspend_d3d_fog
PUBLIC	?reinstate_d3d_fog@@YGXXZ			; reinstate_d3d_fog
PUBLIC	__real@00000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40162e42fef1fccc
PUBLIC	__real@406fe00000000000
PUBLIC	__real@437f0000
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?float_value_zero@@3MB:DWORD			; float_value_zero
EXTRN	?float_value_255@@3MB:DWORD			; float_value_255
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?d3d_fog_enabled@@3HA DD 01H DUP (?)			; d3d_fog_enabled
?d3d_fog_distance@@3MA DD 01H DUP (?)			; d3d_fog_distance
?d3d_fog_distance_reciprocal@@3MA DD 01H DUP (?)	; d3d_fog_distance_reciprocal
?d3d_fog_distance_scaled@@3MA DD 01H DUP (?)		; d3d_fog_distance_scaled
	ALIGN	8

?d3d_fog_start_squared@@3NA DQ 01H DUP (?)		; d3d_fog_start_squared
?d3d_fog_end_squared@@3NA DQ 01H DUP (?)		; d3d_fog_end_squared
?d3d_fog_distance_squared@@3NA DQ 01H DUP (?)		; d3d_fog_distance_squared
?d3d_fog_distance_squared_reciprocal@@3NA DQ 01H DUP (?) ; d3d_fog_distance_squared_reciprocal
_BSS	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@40162e42fef1fccc
CONST	SEGMENT
__real@40162e42fef1fccc DQ 040162e42fef1fcccr	; 5.54518
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dfog.c
;	COMDAT ?reinstate_d3d_fog@@YGXXZ
_TEXT	SEGMENT
?reinstate_d3d_fog@@YGXXZ PROC				; reinstate_d3d_fog, COMDAT

; 322  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 323  : 
; 324  : 	if ( d3d_fog_enabled )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_fog_enabled@@3HA, 0
  00010	74 47		 je	 SHORT $LN2@reinstate_

; 325  : 	{
; 326  : 
; 327  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, TRUE );

  00012	6a 01		 push	 1
  00014	6a 1c		 push	 28			; 0000001cH
  00016	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 328  : 
; 329  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGTABLEMODE, D3DFOG_NONE );

  0001b	6a 00		 push	 0
  0001d	6a 23		 push	 35			; 00000023H
  0001f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 330  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGVERTEXMODE, D3DFOG_NONE );

  00024	6a 00		 push	 0
  00026	68 8c 00 00 00	 push	 140			; 0000008cH
  0002b	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 331  : 
; 332  : 	//	set_d3d_float_state ( D3DRENDERSTATE_FOGSTART, d3d_fog_start );
; 333  : 	//	set_d3d_float_state ( D3DRENDERSTATE_FOGEND, d3d_fog_end );
; 334  : 
; 335  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGCOLOR, RGB_MAKE ( d3d_fog_colour.r, d3d_fog_colour.g, d3d_fog_colour.b ) );

  00030	0f b6 05 02 00
	00 00		 movzx	 eax, BYTE PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A+2
  00037	c1 e0 10	 shl	 eax, 16			; 00000010H
  0003a	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A+1
  00041	c1 e1 08	 shl	 ecx, 8
  00044	0b c1		 or	 eax, ecx
  00046	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A
  0004d	0b c2		 or	 eax, edx
  0004f	50		 push	 eax
  00050	6a 22		 push	 34			; 00000022H
  00052	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 336  : 	}
; 337  : 	else

  00057	eb 09		 jmp	 SHORT $LN1@reinstate_
$LN2@reinstate_:

; 338  : 	{
; 339  : 
; 340  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, FALSE );

  00059	6a 00		 push	 0
  0005b	6a 1c		 push	 28			; 0000001cH
  0005d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN1@reinstate_:

; 341  : 	}
; 342  : }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?reinstate_d3d_fog@@YGXXZ ENDP				; reinstate_d3d_fog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dfog.c
;	COMDAT ?suspend_d3d_fog@@YGXXZ
_TEXT	SEGMENT
?suspend_d3d_fog@@YGXXZ PROC				; suspend_d3d_fog, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 
; 314  : 	set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, FALSE );

  00009	6a 00		 push	 0
  0000b	6a 1c		 push	 28			; 0000001cH
  0000d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 315  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?suspend_d3d_fog@@YGXXZ ENDP				; suspend_d3d_fog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dfog.c
;	COMDAT ?set_d3d_fog_face_intensity@@YGXH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?set_d3d_fog_face_intensity@@YGXH@Z PROC		; set_d3d_fog_face_intensity, COMDAT

; 302  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 303  : 
; 304  : 	d3d_fog_intensity = RGBA_MAKE ( 0, 0, 0, value );

  00009	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  0000c	c1 e0 18	 shl	 eax, 24			; 00000018H
  0000f	a3 00 00 00 00	 mov	 DWORD PTR ?d3d_fog_intensity@@3KA, eax ; d3d_fog_intensity

; 305  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?set_d3d_fog_face_intensity@@YGXH@Z ENDP		; set_d3d_fog_face_intensity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dfog.c
;	COMDAT ?set_d3d_fog_renderstates@@YGXXZ
_TEXT	SEGMENT
?set_d3d_fog_renderstates@@YGXXZ PROC			; set_d3d_fog_renderstates, COMDAT

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 276  : 
; 277  : 	if ( d3d_fog_enabled )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_fog_enabled@@3HA, 0
  00010	74 47		 je	 SHORT $LN2@set_d3d_fo

; 278  : 	{
; 279  : 
; 280  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, TRUE );

  00012	6a 01		 push	 1
  00014	6a 1c		 push	 28			; 0000001cH
  00016	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 281  : 
; 282  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGTABLEMODE, D3DFOG_NONE );

  0001b	6a 00		 push	 0
  0001d	6a 23		 push	 35			; 00000023H
  0001f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 283  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGVERTEXMODE, D3DFOG_NONE );

  00024	6a 00		 push	 0
  00026	68 8c 00 00 00	 push	 140			; 0000008cH
  0002b	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 284  : 
; 285  : //		set_d3d_float_state ( D3DRENDERSTATE_FOGSTART, d3d_fog_start );
; 286  : //		set_d3d_float_state ( D3DRENDERSTATE_FOGEND, d3d_fog_end );
; 287  : 
; 288  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGCOLOR, RGB_MAKE ( d3d_fog_colour.r, d3d_fog_colour.g, d3d_fog_colour.b ) );

  00030	0f b6 05 02 00
	00 00		 movzx	 eax, BYTE PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A+2
  00037	c1 e0 10	 shl	 eax, 16			; 00000010H
  0003a	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A+1
  00041	c1 e1 08	 shl	 ecx, 8
  00044	0b c1		 or	 eax, ecx
  00046	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A
  0004d	0b c2		 or	 eax, edx
  0004f	50		 push	 eax
  00050	6a 22		 push	 34			; 00000022H
  00052	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 289  : 	}
; 290  : 	else

  00057	eb 09		 jmp	 SHORT $LN1@set_d3d_fo
$LN2@set_d3d_fo:

; 291  : 	{
; 292  : 
; 293  : 		set_d3d_int_state ( D3DRENDERSTATE_FOGENABLE, FALSE );

  00059	6a 00		 push	 0
  0005b	6a 1c		 push	 28			; 0000001cH
  0005d	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state
$LN1@set_d3d_fo:

; 294  : 	}
; 295  : }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?set_d3d_fog_renderstates@@YGXXZ ENDP			; set_d3d_fog_renderstates
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dfog.c
;	COMDAT ?set_d3d_fog_parameters@@YGXHUREAL_COLOUR@@MM@Z
_TEXT	SEGMENT
_enabled$ = 8						; size = 4
_colour$ = 12						; size = 4
_start$ = 16						; size = 4
_end$ = 20						; size = 4
?set_d3d_fog_parameters@@YGXHUREAL_COLOUR@@MM@Z PROC	; set_d3d_fog_parameters, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 234  : 
; 235  : 	d3d_fog_start = start;

  00009	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _start$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_start@@3MA, xmm0

; 236  : 
; 237  : 	d3d_fog_end = end;

  00016	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _end$[ebp]
  0001b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_end@@3MA, xmm0

; 238  : 
; 239  : 	d3d_fog_distance = end - start;

  00023	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _end$[ebp]
  00028	f3 0f 5c 45 10	 subss	 xmm0, DWORD PTR _start$[ebp]
  0002d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_distance@@3MA, xmm0

; 240  : 
; 241  : 	d3d_fog_distance_reciprocal = 1.0 / d3d_fog_distance;

  00035	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?d3d_fog_distance@@3MA
  0003d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00045	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00049	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0004d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_distance_reciprocal@@3MA, xmm0

; 242  : 
; 243  : 	d3d_fog_distance_scaled = 255.0 / d3d_fog_distance;

  00055	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?d3d_fog_distance@@3MA
  0005d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@406fe00000000000
  00065	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00069	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0006d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_distance_scaled@@3MA, xmm0

; 244  : 
; 245  : 	d3d_fog_start_squared = start * start;

  00075	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _start$[ebp]
  0007a	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _start$[ebp]
  0007f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00083	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?d3d_fog_start_squared@@3NA, xmm0

; 246  : 
; 247  : 	d3d_fog_end_squared = end * end;

  0008b	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _end$[ebp]
  00090	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _end$[ebp]
  00095	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00099	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?d3d_fog_end_squared@@3NA, xmm0

; 248  : 
; 249  : 	d3d_fog_distance_squared = d3d_fog_distance * d3d_fog_distance;

  000a1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?d3d_fog_distance@@3MA
  000a9	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?d3d_fog_distance@@3MA
  000b1	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000b5	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?d3d_fog_distance_squared@@3NA, xmm0

; 250  : 
; 251  : 	d3d_fog_distance_squared_reciprocal = 1.0 / d3d_fog_distance_squared;

  000bd	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000c5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR ?d3d_fog_distance_squared@@3NA
  000cd	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?d3d_fog_distance_squared_reciprocal@@3NA, xmm0

; 252  : 
; 253  : 	d3d_fog_constant = d3d_fog_distance - d3d_fog_start;

  000d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?d3d_fog_distance@@3MA
  000dd	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?d3d_fog_start@@3MA
  000e5	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_constant@@3MA, xmm0

; 254  : 
; 255  : 	d3d_fog_factor = 255.0 / d3d_fog_distance;

  000ed	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?d3d_fog_distance@@3MA
  000f5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@406fe00000000000
  000fd	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00101	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00105	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_factor@@3MA, xmm0

; 256  : 
; 257  : 	d3d_fog_density = 5.545177444 / d3d_fog_end;

  0010d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?d3d_fog_end@@3MA
  00115	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40162e42fef1fccc
  0011d	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00121	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00125	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?d3d_fog_density@@3MA, xmm0

; 258  : 
; 259  : 	d3d_fog_colour = colour;

  0012d	8b 45 0c	 mov	 eax, DWORD PTR _colour$[ebp]
  00130	a3 00 00 00 00	 mov	 DWORD PTR ?d3d_fog_colour@@3UREAL_COLOUR@@A, eax ; d3d_fog_colour

; 260  : 
; 261  : 	d3d_fog_enabled = enabled;

  00135	8b 45 08	 mov	 eax, DWORD PTR _enabled$[ebp]
  00138	a3 00 00 00 00	 mov	 DWORD PTR ?d3d_fog_enabled@@3HA, eax

; 262  : 
; 263  : 	//
; 264  : 	// Initialise the fog face intensity to no fog.
; 265  : 	//
; 266  : 
; 267  : 	d3d_fog_intensity = RGBA_MAKE ( 0, 0, 0, 255 );

  0013d	c7 05 00 00 00
	00 00 00 00 ff	 mov	 DWORD PTR ?d3d_fog_intensity@@3KA, -16777216 ; d3d_fog_intensity, ff000000H

; 268  : }

  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	5b		 pop	 ebx
  0014a	8b e5		 mov	 esp, ebp
  0014c	5d		 pop	 ebp
  0014d	c2 10 00	 ret	 16			; 00000010H
?set_d3d_fog_parameters@@YGXHUREAL_COLOUR@@MM@Z ENDP	; set_d3d_fog_parameters
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dfog.c
;	COMDAT ?get_int_fog_distance_value@@YGHM@Z
_TEXT	SEGMENT
_ivalue$ = -4						; size = 4
_z$ = 8							; size = 4
?get_int_fog_distance_value@@YGHM@Z PROC		; get_int_fog_distance_value, COMDAT

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 181  : 
; 182  : //	float
; 183  : //		value;
; 184  : 
; 185  : 	int
; 186  : 		ivalue;
; 187  : 
; 188  : 	asm_convert_float_to_int ( ( ( d3d_fog_constant - z ) * d3d_fog_factor ), &ivalue );

  00009	8d 45 fc	 lea	 eax, DWORD PTR _ivalue$[ebp]
  0000c	50		 push	 eax
  0000d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?d3d_fog_constant@@3MA
  00015	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _z$[ebp]
  0001a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?d3d_fog_factor@@3MA
  00022	51		 push	 ecx
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 189  : 
; 190  : //	ivalue = bound ( ivalue, 0, 255 );
; 191  : 
; 192  : 	return ( ivalue );

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _ivalue$[ebp]

; 193  : /*
; 194  : 
; 195  : 
; 196  : 
; 197  : 	value = d3d_fog_constant - z;
; 198  : 
; 199  : 	if ( *( ( int * ) &value ) < *( ( int * ) &float_value_zero ) )
; 200  : 	{
; 201  : 
; 202  : 		return ( 0 );
; 203  : 	}
; 204  : 	else
; 205  : 	{
; 206  : 
; 207  : 		value *= d3d_fog_factor;
; 208  : 
; 209  : 		if ( *( ( int * ) &value ) > *( ( int * ) &float_value_255 ) )
; 210  : 		{
; 211  : 
; 212  : 			return ( 255 );
; 213  : 		}
; 214  : 		else
; 215  : 		{
; 216  : 
; 217  : 			int
; 218  : 				int_value;
; 219  : 
; 220  : 			convert_float_to_int ( value, &int_value );
; 221  : 
; 222  : 			return ( int_value );
; 223  : 		}
; 224  : 	}
; 225  : 	*/
; 226  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
?get_int_fog_distance_value@@YGHM@Z ENDP		; get_int_fog_distance_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\d3dfog.c
;	COMDAT ?get_fog_distance_value@@YGMM@Z
_TEXT	SEGMENT
_value$ = -4						; size = 4
_z$ = 8							; size = 4
?get_fog_distance_value@@YGMM@Z PROC			; get_fog_distance_value, COMDAT

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 118  : 
; 119  : 	float
; 120  : 		value;
; 121  : 
; 122  : 	//
; 123  : 	// The equation for working out the fog value is:
; 124  : 	//
; 125  : 	//    Fog = 255 * ( 1 - ( ( Z - fog_start ) / ( fog_end - fog_start ) ) )
; 126  : 	//
; 127  : 	//	Which simplifies to:
; 128  : 	//
; 129  : 	//		distance = fog_end - fog_start
; 130  : 	//
; 131  : 	//    Fog = ( 255 / distance ) * ( distance - Z - fog_start )
; 132  : 	//
; 133  : 	//
; 134  : 	// Which again simplifies down:
; 135  : 	//
; 136  : 	//    distance = fog_end - fog_start
; 137  : 	//
; 138  : 	//		constant = distance - fog_start
; 139  : 	//
; 140  : 	//    factor = 255 / distance
; 141  : 	//
; 142  : 	//
; 143  : 	//    Fog = factor * ( constant - Z )
; 144  : 	//
; 145  : 	// The value this gives needs to be bounded to between 0 and 255.
; 146  : 	//
; 147  : 	// Optimisation:
; 148  : 	//
; 149  : 	//    because the factor value is always positive, we can do the check for the value of ( constant - Z )
; 150  : 	//     before we multiply by the factor. This means an early out for some cases.
; 151  : 	//
; 152  : 
; 153  : 	value = d3d_fog_constant - z;

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?d3d_fog_constant@@3MA
  00011	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _z$[ebp]
  00016	f3 0f 11 45 fc	 movss	 DWORD PTR _value$[ebp], xmm0

; 154  : 
; 155  : 	if ( *( ( int * ) &value ) < *( ( int * ) &float_value_zero ) )

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _value$[ebp]
  0001e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?float_value_zero@@3MB
  00024	7d 06		 jge	 SHORT $LN2@get_fog_di

; 156  : 	{
; 157  : 
; 158  : 		return ( 0.0 );

  00026	d9 ee		 fldz
  00028	eb 2f		 jmp	 SHORT $LN3@get_fog_di

; 159  : 	}
; 160  : 	else

  0002a	eb 2d		 jmp	 SHORT $LN3@get_fog_di
$LN2@get_fog_di:

; 161  : 	{
; 162  : 
; 163  : 		value *= d3d_fog_factor;

  0002c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _value$[ebp]
  00031	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?d3d_fog_factor@@3MA
  00039	f3 0f 11 45 fc	 movss	 DWORD PTR _value$[ebp], xmm0

; 164  : 
; 165  : 		if ( *( ( int * ) &value ) > *( ( int * ) &float_value_255 ) )

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _value$[ebp]
  00041	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?float_value_255@@3MB
  00047	7e 0d		 jle	 SHORT $LN4@get_fog_di

; 166  : 		{
; 167  : 	
; 168  : 			value = 255;

  00049	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437f0000
  00051	f3 0f 11 45 fc	 movss	 DWORD PTR _value$[ebp], xmm0
$LN4@get_fog_di:

; 169  : 		}
; 170  : 	
; 171  : 		return ( value );

  00056	d9 45 fc	 fld	 DWORD PTR _value$[ebp]
$LN3@get_fog_di:

; 172  : 	}
; 173  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?get_fog_distance_value@@YGMM@Z ENDP			; get_fog_distance_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
END
