; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\sector\sector.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?entity_sector_map@@3PAPAUENTITY@@A		; entity_sector_map
PUBLIC	?null_sector_entity_map_pointer_message@@3PBDB	; null_sector_entity_map_pointer_message
PUBLIC	??_C@_0CI@BOFCPOOM@NULL?5sector?5entity?5in?5entity_se@ ; `string'
_BSS	SEGMENT
?entity_sector_map@@3PAPAUENTITY@@A DD 01H DUP (?)	; entity_sector_map
_BSS	ENDS
;	COMDAT ??_C@_0CI@BOFCPOOM@NULL?5sector?5entity?5in?5entity_se@
CONST	SEGMENT
??_C@_0CI@BOFCPOOM@NULL?5sector?5entity?5in?5entity_se@ DB 'NULL sector e'
	DB	'ntity in entity_sector_map', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?null_sector_entity_map_pointer_message@@3PBDB DD FLAT:??_C@_0CI@BOFCPOOM@NULL?5sector?5entity?5in?5entity_se@ ; null_sector_entity_map_pointer_message
_DATA	ENDS
PUBLIC	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
PUBLIC	?get_local_sector_entity_enemy_surface_to_air_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_sector_entity_enemy_surface_to_air_defence_level
PUBLIC	?get_local_sector_entity_enemy_surface_to_surface_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_sector_entity_enemy_surface_to_surface_defence_level
PUBLIC	?get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z ; get_sector_importance_level
PUBLIC	?get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z ; get_sector_distance_to_friendly_base
PUBLIC	?add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z	; add_mobile_values_to_sector
PUBLIC	?remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z ; remove_mobile_values_from_sector
PUBLIC	?get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z ; get_local_sector_side_ratio
PUBLIC	?set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z	; set_sector_fog_of_war_value
PUBLIC	?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_sector_fog_of_war_value
PUBLIC	?update_sector_fog_of_war@@YGXXZ		; update_sector_fog_of_war
PUBLIC	?update_client_server_sector_fog_of_war@@YGXXZ	; update_client_server_sector_fog_of_war
PUBLIC	?update_sector_side_count@@YGXXZ		; update_sector_side_count
PUBLIC	?update_client_server_sector_side_count@@YGXXZ	; update_client_server_sector_side_count
PUBLIC	?validate_local_sector_entities@@YGXXZ		; validate_local_sector_entities
PUBLIC	?get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z ; get_sector_task_type_count
PUBLIC	?play_sector_air_defences_sighted_speech@@YGXPAUENTITY@@0@Z ; play_sector_air_defences_sighted_speech
PUBLIC	?play_sector_keysite_sighted_speech@@YGXPAUENTITY@@00@Z ; play_sector_keysite_sighted_speech
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$max@N@std@@YGABNABN0@Z			; std::max<double>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z@4JA ; `get_local_sector_entity'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_03PCBNCGFH@pos@				; `string'
PUBLIC	??_C@_0CD@DHOAJGEI@Position?5off?5map?3?5?$CIx?5?$DN?5?$CFf?0?5z?5?$DN?5@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z@4JA ; `get_sector_importance_level'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	?__LINE__Var@?0??get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z@4JA ; `get_sector_distance_to_friendly_base'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z@4JA ; `add_mobile_values_to_sector'::`1'::__LINE__Var
PUBLIC	??_C@_09NAAGAKP@sector_en@			; `string'
PUBLIC	??_C@_09DPLOJPMG@mobile_en@			; `string'
PUBLIC	?__LINE__Var@?0??remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z@4JA ; `remove_mobile_values_from_sector'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z@4JA ; `get_local_sector_side_ratio'::`1'::__LINE__Var
PUBLIC	??_C@_0M@HOAGDBOJ@total?5?$DO?50?40@		; `string'
PUBLIC	?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA ; `validate_local_sector_entities'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@HKBOHMDP@Entity?5is?5in?5the?5wrong?5sector?5?$CI@ ; `string'
PUBLIC	?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA ; `set_sector_fog_of_war_value'::`1'::__LINE__Var
PUBLIC	??_C@_0CD@LPLOEHBC@new_fog_value?5?$DO?$DN?5current_fog_va@ ; `string'
PUBLIC	?__LINE__Var@?0??get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA ; `get_sector_fog_of_war_value'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_sector_fog_of_war@@YGXXZ@4JA ; `update_sector_fog_of_war'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_client_server_sector_fog_of_war@@YGXXZ@4JA ; `update_client_server_sector_fog_of_war'::`1'::__LINE__Var
PUBLIC	??_C@_0CH@HPGJFCEF@SECTOR?3?5Start?5update?5sector?5fog@ ; `string'
PUBLIC	??_C@_0CF@NHKMONHH@SECTOR?3?5End?5update?5sector?5fog?5o@ ; `string'
PUBLIC	?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA ; `update_sector_side_count'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_client_server_sector_side_count@@YGXXZ@4JA ; `update_client_server_sector_side_count'::`1'::__LINE__Var
PUBLIC	??_C@_0CC@FHFLNLIB@SECTOR?3?5Start?5update?5sector?5sid@ ; `string'
PUBLIC	??_C@_0CA@EMLNEOOP@SECTOR?3?5End?5update?5sector?5sides@ ; `string'
PUBLIC	?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA ; `get_sector_task_type_count'::`1'::__LINE__Var
PUBLIC	??_C@_0BP@OFMADIDA@en?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_SECTOR@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@4000000000000000
PUBLIC	__real@403e000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?get_approx_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_approx_3d_range
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?update_imap_surface_to_air_defence_level@@YGXPAUENTITY@@0H@Z:PROC ; update_imap_surface_to_air_defence_level
EXTRN	?update_imap_surface_to_surface_defence_level@@YGXPAUENTITY@@0H@Z:PROC ; update_imap_surface_to_surface_defence_level
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_type_database@@3PAUENTITY_TYPE_DATA@@A:BYTE ; entity_type_database
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@403e000000000000
CONST	SEGMENT
__real@403e000000000000 DQ 0403e000000000000r	; 30
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OFMADIDA@en?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_SECTOR@
CONST	SEGMENT
??_C@_0BP@OFMADIDA@en?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_SECTOR@ DB 'en->ty'
	DB	'pe == ENTITY_TYPE_SECTOR', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA DD 0280H ; `get_sector_task_type_count'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@EMLNEOOP@SECTOR?3?5End?5update?5sector?5sides@
CONST	SEGMENT
??_C@_0CA@EMLNEOOP@SECTOR?3?5End?5update?5sector?5sides@ DB 'SECTOR: End '
	DB	'update sector sides', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FHFLNLIB@SECTOR?3?5Start?5update?5sector?5sid@
CONST	SEGMENT
??_C@_0CC@FHFLNLIB@SECTOR?3?5Start?5update?5sector?5sid@ DB 'SECTOR: Star'
	DB	't update sector sides', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_client_server_sector_side_count@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_client_server_sector_side_count@@YGXXZ@4JA DD 026fH ; `update_client_server_sector_side_count'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA DD 0244H ; `update_sector_side_count'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@NHKMONHH@SECTOR?3?5End?5update?5sector?5fog?5o@
CONST	SEGMENT
??_C@_0CF@NHKMONHH@SECTOR?3?5End?5update?5sector?5fog?5o@ DB 'SECTOR: End'
	DB	' update sector fog of war', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HPGJFCEF@SECTOR?3?5Start?5update?5sector?5fog@
CONST	SEGMENT
??_C@_0CH@HPGJFCEF@SECTOR?3?5Start?5update?5sector?5fog@ DB 'SECTOR: Star'
	DB	't update sector fog of war', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_client_server_sector_fog_of_war@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_client_server_sector_fog_of_war@@YGXXZ@4JA DD 0233H ; `update_client_server_sector_fog_of_war'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_sector_fog_of_war@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_sector_fog_of_war@@YGXXZ@4JA DD 0216H ; `update_sector_fog_of_war'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA DD 01ffH ; `get_sector_fog_of_war_value'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CD@LPLOEHBC@new_fog_value?5?$DO?$DN?5current_fog_va@
CONST	SEGMENT
??_C@_0CD@LPLOEHBC@new_fog_value?5?$DO?$DN?5current_fog_va@ DB 'new_fog_v'
	DB	'alue >= current_fog_value', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA DD 0177H ; `set_sector_fog_of_war_value'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CK@HKBOHMDP@Entity?5is?5in?5the?5wrong?5sector?5?$CI@
CONST	SEGMENT
??_C@_0CK@HKBOHMDP@Entity?5is?5in?5the?5wrong?5sector?5?$CI@ DB 'Entity i'
	DB	's in the wrong sector (type = %s)', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA DD 014aH ; `validate_local_sector_entities'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@HOAGDBOJ@total?5?$DO?50?40@
CONST	SEGMENT
??_C@_0M@HOAGDBOJ@total?5?$DO?50?40@ DB 'total > 0.0', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z@4JA DD 012bH ; `get_local_sector_side_ratio'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z@4JA DD 010dH ; `remove_mobile_values_from_sector'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09DPLOJPMG@mobile_en@
CONST	SEGMENT
??_C@_09DPLOJPMG@mobile_en@ DB 'mobile_en', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NAAGAKP@sector_en@
CONST	SEGMENT
??_C@_09NAAGAKP@sector_en@ DB 'sector_en', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z@4JA DD 0efH ; `add_mobile_values_to_sector'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z@4JA DD 0d8H ; `get_sector_distance_to_friendly_base'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z@4JA DD 0c1H ; `get_sector_importance_level'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DHOAJGEI@Position?5off?5map?3?5?$CIx?5?$DN?5?$CFf?0?5z?5?$DN?5@
CONST	SEGMENT
??_C@_0CD@DHOAJGEI@Position?5off?5map?3?5?$CIx?5?$DN?5?$CFf?0?5z?5?$DN?5@ DB 'P'
	DB	'osition off map: (x = %f, z = %f)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PCBNCGFH@pos@
CONST	SEGMENT
??_C@_03PCBNCGFH@pos@ DB 'pos', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\sector\sector'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z@4JA DD 068H ; `get_local_sector_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@N@std@@YGABNABN0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@N@std@@YGABNABN0@Z PROC				; std::max<double>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00013	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00017	76 65		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00019	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00023	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [ecx]
  00027	77 02		 ja	 SHORT $LN9@max
  00029	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00035	6a 00		 push	 0
  00037	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN12@max
  00051	cc		 int	 3
$LN12@max:
  00052	6a 00		 push	 0
  00054	68 0e 15 00 00	 push	 5390			; 0000150eH
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006e	83 c4 14	 add	 esp, 20			; 00000014H
  00071	33 c0		 xor	 eax, eax
  00073	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00075	33 c0		 xor	 eax, eax
  00077	75 a0		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00079	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007c	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
??$max@N@std@@YGABNABN0@Z ENDP				; std::max<double>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_local_sector_entity_enemy_defence_level@@YGMPAMW4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
_defence_level$ = -8					; size = 4
_loop$ = -4						; size = 4
_array$ = 8						; size = 4
_side$ = 12						; size = 4
?get_local_sector_entity_enemy_defence_level@@YGMPAMW4ENTITY_SIDES@@@Z PROC ; get_local_sector_entity_enemy_defence_level, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 135  : 	int
; 136  : 		loop;
; 137  : 
; 138  : 	float
; 139  : 		defence_level;
; 140  : 
; 141  : 	loop = ENTITY_SIDE_NEUTRAL;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0

; 142  : 
; 143  : 	defence_level = 0;

  00010	0f 57 c0	 xorps	 xmm0, xmm0
  00013	f3 0f 11 45 f8	 movss	 DWORD PTR _defence_level$[ebp], xmm0
$LN6@get_local_:

; 144  : 
; 145  : 	while (++ loop < NUM_ENTITY_SIDES)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
  00021	83 7d fc 03	 cmp	 DWORD PTR _loop$[ebp], 3
  00025	7d 21		 jge	 SHORT $LN3@get_local_

; 146  : 	{
; 147  : 
; 148  : 		if (side == loop)

  00027	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0002a	3b 45 fc	 cmp	 eax, DWORD PTR _loop$[ebp]
  0002d	75 02		 jne	 SHORT $LN4@get_local_

; 149  : 		{
; 150  : 
; 151  : 			continue;

  0002f	eb e7		 jmp	 SHORT $LN6@get_local_
$LN4@get_local_:

; 152  : 		}
; 153  : 
; 154  : 		defence_level += array [loop];

  00031	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _array$[ebp]
  00037	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _defence_level$[ebp]
  0003c	f3 0f 58 04 81	 addss	 xmm0, DWORD PTR [ecx+eax*4]
  00041	f3 0f 11 45 f8	 movss	 DWORD PTR _defence_level$[ebp], xmm0

; 155  : 	}

  00046	eb d0		 jmp	 SHORT $LN6@get_local_
$LN3@get_local_:

; 156  : 
; 157  : 	return defence_level;

  00048	d9 45 f8	 fld	 DWORD PTR _defence_level$[ebp]

; 158  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?get_local_sector_entity_enemy_defence_level@@YGMPAMW4ENTITY_SIDES@@@Z ENDP ; get_local_sector_entity_enemy_defence_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?play_sector_keysite_sighted_speech@@YGXPAUENTITY@@00@Z
_TEXT	SEGMENT
tv95 = -72						; size = 4
tv76 = -72						; size = 4
tv88 = -68						; size = 4
tv69 = -68						; size = 4
_en$ = 8						; size = 4
_sector_en$ = 12					; size = 4
_target_keysite$ = 16					; size = 4
?play_sector_keysite_sighted_speech@@YGXPAUENTITY@@00@Z PROC ; play_sector_keysite_sighted_speech, COMDAT

; 721  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 722  : 	if (get_local_entity_int_value (en, INT_TYPE_IDENTIFY_AIRCRAFT))

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN7@play_secto
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d bc	 mov	 DWORD PTR tv69[ebp], ecx
  00017	eb 1d		 jmp	 SHORT $LN8@play_secto
$LN7@play_secto:
  00019	68 d2 02 00 00	 push	 722			; 000002d2H
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0002f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN8@play_secto:
  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	85 c0		 test	 eax, eax
  0003d	74 09		 je	 SHORT $LN9@play_secto
  0003f	c7 45 b8 57 00
	00 00		 mov	 DWORD PTR tv76[ebp], 87	; 00000057H
  00046	eb 1d		 jmp	 SHORT $LN10@play_secto
$LN9@play_secto:
  00048	68 d2 02 00 00	 push	 722			; 000002d2H
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN10@play_secto:
  00065	6a 57		 push	 87			; 00000057H
  00067	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0006a	52		 push	 edx
  0006b	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  00072	8b 4d b8	 mov	 ecx, DWORD PTR tv76[ebp]
  00075	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0007c	ff d2		 call	 edx
  0007e	85 c0		 test	 eax, eax
  00080	74 78		 je	 SHORT $LN1@play_secto

; 723  : 	{
; 724  : 		if (get_local_entity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00082	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00086	74 0a		 je	 SHORT $LN11@play_secto
  00088	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 4d bc	 mov	 DWORD PTR tv88[ebp], ecx
  00090	eb 1d		 jmp	 SHORT $LN12@play_secto
$LN11@play_secto:
  00092	68 d4 02 00 00	 push	 724			; 000002d4H
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a8	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@play_secto:
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	85 c0		 test	 eax, eax
  000b6	74 09		 je	 SHORT $LN13@play_secto
  000b8	c7 45 b8 9c 00
	00 00		 mov	 DWORD PTR tv95[ebp], 156 ; 0000009cH
  000bf	eb 1d		 jmp	 SHORT $LN14@play_secto
$LN13@play_secto:
  000c1	68 d4 02 00 00	 push	 724			; 000002d4H
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000d1	51		 push	 ecx
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN14@play_secto:
  000de	68 9c 00 00 00	 push	 156			; 0000009cH
  000e3	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000e6	52		 push	 edx
  000e7	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv88[ebp], 1116
  000ee	8b 4d b8	 mov	 ecx, DWORD PTR tv95[ebp]
  000f1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000f8	ff d2		 call	 edx
$LN1@play_secto:

; 725  : 		{
; 726  : 			// PLAY_SPEECH (CPG)
; 727  : 			//
; 728  : 		}
; 729  : 		else
; 730  : 		{
; 731  : 			//
; 732  : 			// PLAY_SPEECH (WINGMAN)
; 733  : 			//
; 734  : 		}
; 735  : 	}
; 736  : 	else
; 737  : 	{
; 738  : 		//
; 739  : 		// PLAY_SPEECH (GC)
; 740  : 		//
; 741  : 	}
; 742  : }

  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 0c 00	 ret	 12			; 0000000cH
?play_sector_keysite_sighted_speech@@YGXPAUENTITY@@00@Z ENDP ; play_sector_keysite_sighted_speech
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?play_sector_air_defences_sighted_speech@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv95 = -72						; size = 4
tv76 = -72						; size = 4
tv88 = -68						; size = 4
tv69 = -68						; size = 4
_en$ = 8						; size = 4
_sector_en$ = 12					; size = 4
?play_sector_air_defences_sighted_speech@@YGXPAUENTITY@@0@Z PROC ; play_sector_air_defences_sighted_speech, COMDAT

; 692  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 693  : 	if (get_local_entity_int_value (en, INT_TYPE_IDENTIFY_AIRCRAFT))

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN7@play_secto
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d bc	 mov	 DWORD PTR tv69[ebp], ecx
  00017	eb 1d		 jmp	 SHORT $LN8@play_secto
$LN7@play_secto:
  00019	68 b5 02 00 00	 push	 693			; 000002b5H
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0002f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN8@play_secto:
  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	85 c0		 test	 eax, eax
  0003d	74 09		 je	 SHORT $LN9@play_secto
  0003f	c7 45 b8 57 00
	00 00		 mov	 DWORD PTR tv76[ebp], 87	; 00000057H
  00046	eb 1d		 jmp	 SHORT $LN10@play_secto
$LN9@play_secto:
  00048	68 b5 02 00 00	 push	 693			; 000002b5H
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN10@play_secto:
  00065	6a 57		 push	 87			; 00000057H
  00067	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0006a	52		 push	 edx
  0006b	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  00072	8b 4d b8	 mov	 ecx, DWORD PTR tv76[ebp]
  00075	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0007c	ff d2		 call	 edx
  0007e	85 c0		 test	 eax, eax
  00080	74 78		 je	 SHORT $LN1@play_secto

; 694  : 	{
; 695  : 		if (get_local_entity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00082	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00086	74 0a		 je	 SHORT $LN11@play_secto
  00088	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 4d bc	 mov	 DWORD PTR tv88[ebp], ecx
  00090	eb 1d		 jmp	 SHORT $LN12@play_secto
$LN11@play_secto:
  00092	68 b7 02 00 00	 push	 695			; 000002b7H
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a8	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@play_secto:
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	85 c0		 test	 eax, eax
  000b6	74 09		 je	 SHORT $LN13@play_secto
  000b8	c7 45 b8 9c 00
	00 00		 mov	 DWORD PTR tv95[ebp], 156 ; 0000009cH
  000bf	eb 1d		 jmp	 SHORT $LN14@play_secto
$LN13@play_secto:
  000c1	68 b7 02 00 00	 push	 695			; 000002b7H
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000d1	51		 push	 ecx
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN14@play_secto:
  000de	68 9c 00 00 00	 push	 156			; 0000009cH
  000e3	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000e6	52		 push	 edx
  000e7	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv88[ebp], 1116
  000ee	8b 4d b8	 mov	 ecx, DWORD PTR tv95[ebp]
  000f1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000f8	ff d2		 call	 edx
$LN1@play_secto:

; 696  : 		{
; 697  : 			//
; 698  : 			// PLAY_SPEECH (CPG)
; 699  : 			//
; 700  : 		}
; 701  : 		else
; 702  : 		{
; 703  : 			//
; 704  : 			// PLAY_SPEECH (WINGMAN)
; 705  : 			//
; 706  : 		}
; 707  : 	}
; 708  : 	else
; 709  : 	{
; 710  : 		//
; 711  : 		// PLAY_SPEECH (GC)
; 712  : 		//
; 713  : 	}
; 714  : }

  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 08 00	 ret	 8
?play_sector_air_defences_sighted_speech@@YGXPAUENTITY@@0@Z ENDP ; play_sector_air_defences_sighted_speech
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv181 = -80						; size = 4
tv159 = -80						; size = 4
tv140 = -80						; size = 4
tv89 = -80						; size = 4
tv173 = -76						; size = 4
tv152 = -76						; size = 4
tv133 = -76						; size = 4
tv81 = -76						; size = 4
_count$ = -8						; size = 4
_task_en$ = -4						; size = 4
_en$ = 8						; size = 4
_task_type$ = 12					; size = 4
_side$ = 16						; size = 4
?get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z PROC ; get_sector_task_type_count, COMDAT

; 640  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 641  : 	entity
; 642  : 		*task_en;
; 643  : 
; 644  : 	int
; 645  : 		count;
; 646  : 
; 647  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_sector
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_sector:

; 648  : 
; 649  : 	ASSERT (en->type == ENTITY_TYPE_SECTOR);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	83 38 19	 cmp	 DWORD PTR [eax], 25	; 00000019H
  0002d	74 18		 je	 SHORT $LN5@get_sector
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00034	83 c0 09	 add	 eax, 9
  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OFMADIDA@en?9?$DOtype?5?$DN?$DN?5ENTITY_TYPE_SECTOR@
  00042	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_sector:

; 650  : 
; 651  : 	count = 0;

  00047	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 652  : 
; 653  : 	task_en = get_local_entity_first_child (en, LIST_TYPE_SECTOR_TASK);

  0004e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00052	74 0a		 je	 SHORT $LN9@get_sector
  00054	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	89 4d b4	 mov	 DWORD PTR tv81[ebp], ecx
  0005c	eb 21		 jmp	 SHORT $LN10@get_sector
$LN9@get_sector:
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00064	83 c2 0d	 add	 edx, 13			; 0000000dH
  00067	52		 push	 edx
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00078	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN10@get_sector:
  0007f	b9 01 00 00 00	 mov	 ecx, 1
  00084	85 c9		 test	 ecx, ecx
  00086	74 09		 je	 SHORT $LN11@get_sector
  00088	c7 45 b0 22 00
	00 00		 mov	 DWORD PTR tv89[ebp], 34	; 00000022H
  0008f	eb 21		 jmp	 SHORT $LN12@get_sector
$LN11@get_sector:
  00091	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00097	83 c2 0d	 add	 edx, 13			; 0000000dH
  0009a	52		 push	 edx
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ab	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN12@get_sector:
  000b2	6a 22		 push	 34			; 00000022H
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b7	51		 push	 ecx
  000b8	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv81[ebp], 180
  000bf	8b 45 b0	 mov	 eax, DWORD PTR tv89[ebp]
  000c2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c9	ff d1		 call	 ecx
  000cb	89 45 fc	 mov	 DWORD PTR _task_en$[ebp], eax
$LN2@get_sector:

; 654  : 
; 655  : 	while (task_en)

  000ce	83 7d fc 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  000d2	0f 84 89 01 00
	00		 je	 $LN3@get_sector

; 656  : 	{
; 657  : 		if (get_local_entity_int_value (task_en, INT_TYPE_ENTITY_SUB_TYPE) == task_type)

  000d8	83 7d fc 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  000dc	74 0a		 je	 SHORT $LN13@get_sector
  000de	8b 45 fc	 mov	 eax, DWORD PTR _task_en$[ebp]
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	89 4d b4	 mov	 DWORD PTR tv133[ebp], ecx
  000e6	eb 1d		 jmp	 SHORT $LN14@get_sector
$LN13@get_sector:
  000e8	68 91 02 00 00	 push	 657			; 00000291H
  000ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f8	52		 push	 edx
  000f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fe	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN14@get_sector:
  00105	b8 01 00 00 00	 mov	 eax, 1
  0010a	85 c0		 test	 eax, eax
  0010c	74 09		 je	 SHORT $LN15@get_sector
  0010e	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv140[ebp], 52 ; 00000034H
  00115	eb 1d		 jmp	 SHORT $LN16@get_sector
$LN15@get_sector:
  00117	68 91 02 00 00	 push	 657			; 00000291H
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00121	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00127	51		 push	 ecx
  00128	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012d	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN16@get_sector:
  00134	6a 34		 push	 52			; 00000034H
  00136	8b 55 fc	 mov	 edx, DWORD PTR _task_en$[ebp]
  00139	52		 push	 edx
  0013a	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv133[ebp], 1116
  00141	8b 4d b0	 mov	 ecx, DWORD PTR tv140[ebp]
  00144	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0014b	ff d2		 call	 edx
  0014d	3b 45 0c	 cmp	 eax, DWORD PTR _task_type$[ebp]
  00150	0f 85 86 00 00
	00		 jne	 $LN6@get_sector

; 658  : 		{
; 659  : 			if (get_local_entity_int_value (task_en, INT_TYPE_SIDE) == side)

  00156	83 7d fc 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  0015a	74 0a		 je	 SHORT $LN17@get_sector
  0015c	8b 45 fc	 mov	 eax, DWORD PTR _task_en$[ebp]
  0015f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00161	89 4d b4	 mov	 DWORD PTR tv152[ebp], ecx
  00164	eb 1d		 jmp	 SHORT $LN18@get_sector
$LN17@get_sector:
  00166	68 93 02 00 00	 push	 659			; 00000293H
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00170	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00176	52		 push	 edx
  00177	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN18@get_sector:
  00183	b8 01 00 00 00	 mov	 eax, 1
  00188	85 c0		 test	 eax, eax
  0018a	74 09		 je	 SHORT $LN19@get_sector
  0018c	c7 45 b0 bb 00
	00 00		 mov	 DWORD PTR tv159[ebp], 187 ; 000000bbH
  00193	eb 1d		 jmp	 SHORT $LN20@get_sector
$LN19@get_sector:
  00195	68 93 02 00 00	 push	 659			; 00000293H
  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a5	51		 push	 ecx
  001a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ab	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN20@get_sector:
  001b2	68 bb 00 00 00	 push	 187			; 000000bbH
  001b7	8b 55 fc	 mov	 edx, DWORD PTR _task_en$[ebp]
  001ba	52		 push	 edx
  001bb	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv152[ebp], 1116
  001c2	8b 4d b0	 mov	 ecx, DWORD PTR tv159[ebp]
  001c5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001cc	ff d2		 call	 edx
  001ce	3b 45 10	 cmp	 eax, DWORD PTR _side$[ebp]
  001d1	75 09		 jne	 SHORT $LN6@get_sector

; 660  : 			{
; 661  : 				count ++;

  001d3	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  001d6	83 c0 01	 add	 eax, 1
  001d9	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN6@get_sector:

; 662  : 			}
; 663  : 		}
; 664  : 
; 665  : 		task_en = get_local_entity_child_succ (task_en, LIST_TYPE_SECTOR_TASK);

  001dc	83 7d fc 00	 cmp	 DWORD PTR _task_en$[ebp], 0
  001e0	74 0a		 je	 SHORT $LN21@get_sector
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _task_en$[ebp]
  001e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e7	89 4d b4	 mov	 DWORD PTR tv173[ebp], ecx
  001ea	eb 21		 jmp	 SHORT $LN22@get_sector
$LN21@get_sector:
  001ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  001f2	83 c2 19	 add	 edx, 25			; 00000019H
  001f5	52		 push	 edx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00206	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN22@get_sector:
  0020d	b9 01 00 00 00	 mov	 ecx, 1
  00212	85 c9		 test	 ecx, ecx
  00214	74 09		 je	 SHORT $LN23@get_sector
  00216	c7 45 b0 22 00
	00 00		 mov	 DWORD PTR tv181[ebp], 34 ; 00000022H
  0021d	eb 21		 jmp	 SHORT $LN24@get_sector
$LN23@get_sector:
  0021f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z@4JA
  00225	83 c2 19	 add	 edx, 25			; 00000019H
  00228	52		 push	 edx
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN24@get_sector:
  00240	6a 22		 push	 34			; 00000022H
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _task_en$[ebp]
  00245	51		 push	 ecx
  00246	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv173[ebp], 180
  0024d	8b 45 b0	 mov	 eax, DWORD PTR tv181[ebp]
  00250	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00257	ff d1		 call	 ecx
  00259	89 45 fc	 mov	 DWORD PTR _task_en$[ebp], eax

; 666  : 	}

  0025c	e9 6d fe ff ff	 jmp	 $LN2@get_sector
$LN3@get_sector:

; 667  : 
; 668  : 	#if DEBUG_MODULE
; 669  : 	{
; 670  : 		sector
; 671  : 			*raw;
; 672  : 			
; 673  : 		raw = (sector *) get_local_entity_data (en);
; 674  : 		
; 675  : 		debug_log ("SECTOR : %d tasks of type %s in sector %d, %d",
; 676  : 						count,
; 677  : 						task_database [task_type].full_name,
; 678  : 						raw->x_sector,
; 679  : 						raw->z_sector
; 680  : 					 );
; 681  : 	}
; 682  : 	#endif
; 683  : 
; 684  : 	return count;

  00261	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]

; 685  : }

  00264	5f		 pop	 edi
  00265	5e		 pop	 esi
  00266	5b		 pop	 ebx
  00267	8b e5		 mov	 esp, ebp
  00269	5d		 pop	 ebp
  0026a	c2 0c 00	 ret	 12			; 0000000cH
?get_sector_task_type_count@@YGHPAUENTITY@@HW4ENTITY_SIDES@@@Z ENDP ; get_sector_task_type_count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?validate_local_sector_entities@@YGXXZ
_TEXT	SEGMENT
tv193 = -100						; size = 4
tv149 = -100						; size = 4
tv128 = -100						; size = 4
tv185 = -96						; size = 4
tv173 = -96						; size = 4
tv141 = -96						; size = 4
tv88 = -96						; size = 4
tv81 = -96						; size = 4
_en$ = -28						; size = 4
_sec$ = -24						; size = 4
_position$ = -20					; size = 4
_entity_z_sector$ = -16					; size = 4
_entity_x_sector$ = -12					; size = 4
_z_sector$ = -8						; size = 4
_x_sector$ = -4						; size = 4
?validate_local_sector_entities@@YGXXZ PROC		; validate_local_sector_entities, COMDAT

; 330  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 331  : 	int
; 332  : 		x_sector,
; 333  : 		z_sector,
; 334  : 		entity_x_sector,
; 335  : 		entity_z_sector;
; 336  : 
; 337  : 	vec3d
; 338  : 		*position;
; 339  : 
; 340  : 	entity
; 341  : 		*sec,
; 342  : 		*en;
; 343  : 
; 344  : 	for (x_sector = 0; x_sector < NUM_MAP_X_SECTORS; x_sector++)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _x_sector$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@validate_l
$LN2@validate_l:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _x_sector$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _x_sector$[ebp], eax
$LN4@validate_l:
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _x_sector$[ebp]
  0001e	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00024	0f 8d b1 02 00
	00		 jge	 $LN3@validate_l

; 345  : 	{
; 346  : 		for (z_sector = 0; z_sector < NUM_MAP_Z_SECTORS; z_sector++)

  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _z_sector$[ebp], 0
  00031	eb 09		 jmp	 SHORT $LN7@validate_l
$LN5@validate_l:
  00033	8b 45 f8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  00036	83 c0 01	 add	 eax, 1
  00039	89 45 f8	 mov	 DWORD PTR _z_sector$[ebp], eax
$LN7@validate_l:
  0003c	8b 45 f8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  0003f	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  00045	0f 8d 8b 02 00
	00		 jge	 $LN6@validate_l

; 347  : 		{
; 348  : 			sec = get_local_raw_sector_entity (x_sector, z_sector);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _z_sector$[ebp]
  0004e	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00055	03 45 fc	 add	 eax, DWORD PTR _x_sector$[ebp]
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0005e	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00062	74 1a		 je	 SHORT $LN13@validate_l
  00064	8b 55 f8	 mov	 edx, DWORD PTR _z_sector$[ebp]
  00067	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0006e	03 55 fc	 add	 edx, DWORD PTR _x_sector$[ebp]
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00076	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00079	89 4d a0	 mov	 DWORD PTR tv81[ebp], ecx
  0007c	eb 21		 jmp	 SHORT $LN14@validate_l
$LN13@validate_l:
  0007e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  00084	83 c2 12	 add	 edx, 18			; 00000012H
  00087	52		 push	 edx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00098	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN14@validate_l:
  0009f	8b 4d a0	 mov	 ecx, DWORD PTR tv81[ebp]
  000a2	89 4d e8	 mov	 DWORD PTR _sec$[ebp], ecx

; 349  : 
; 350  : 			en = get_local_entity_first_child (sec, LIST_TYPE_SECTOR);

  000a5	83 7d e8 00	 cmp	 DWORD PTR _sec$[ebp], 0
  000a9	74 0a		 je	 SHORT $LN15@validate_l
  000ab	8b 45 e8	 mov	 eax, DWORD PTR _sec$[ebp]
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	89 4d a0	 mov	 DWORD PTR tv88[ebp], ecx
  000b3	eb 21		 jmp	 SHORT $LN16@validate_l
$LN15@validate_l:
  000b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  000bb	83 c2 14	 add	 edx, 20			; 00000014H
  000be	52		 push	 edx
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cf	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN16@validate_l:
  000d6	b9 01 00 00 00	 mov	 ecx, 1
  000db	85 c9		 test	 ecx, ecx
  000dd	74 09		 je	 SHORT $LN17@validate_l
  000df	c7 45 9c 21 00
	00 00		 mov	 DWORD PTR tv128[ebp], 33 ; 00000021H
  000e6	eb 21		 jmp	 SHORT $LN18@validate_l
$LN17@validate_l:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  000ee	83 c2 14	 add	 edx, 20			; 00000014H
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN18@validate_l:
  00109	6a 21		 push	 33			; 00000021H
  0010b	8b 4d e8	 mov	 ecx, DWORD PTR _sec$[ebp]
  0010e	51		 push	 ecx
  0010f	69 55 a0 b4 00
	00 00		 imul	 edx, DWORD PTR tv88[ebp], 180
  00116	8b 45 9c	 mov	 eax, DWORD PTR tv128[ebp]
  00119	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00120	ff d1		 call	 ecx
  00122	89 45 e4	 mov	 DWORD PTR _en$[ebp], eax
$LN8@validate_l:

; 351  : 
; 352  : 			while (en)

  00125	83 7d e4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00129	0f 84 a2 01 00
	00		 je	 $LN9@validate_l

; 353  : 			{
; 354  : 				position = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0012f	83 7d e4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00133	74 0a		 je	 SHORT $LN19@validate_l
  00135	8b 45 e4	 mov	 eax, DWORD PTR _en$[ebp]
  00138	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013a	89 4d a0	 mov	 DWORD PTR tv141[ebp], ecx
  0013d	eb 21		 jmp	 SHORT $LN20@validate_l
$LN19@validate_l:
  0013f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  00145	83 c2 18	 add	 edx, 24			; 00000018H
  00148	52		 push	 edx
  00149	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00153	50		 push	 eax
  00154	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00159	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN20@validate_l:
  00160	b9 01 00 00 00	 mov	 ecx, 1
  00165	85 c9		 test	 ecx, ecx
  00167	74 09		 je	 SHORT $LN21@validate_l
  00169	c7 45 9c 08 00
	00 00		 mov	 DWORD PTR tv149[ebp], 8
  00170	eb 21		 jmp	 SHORT $LN22@validate_l
$LN21@validate_l:
  00172	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  00178	83 c2 18	 add	 edx, 24			; 00000018H
  0017b	52		 push	 edx
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00181	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018c	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
$LN22@validate_l:
  00193	6a 08		 push	 8
  00195	8b 4d e4	 mov	 ecx, DWORD PTR _en$[ebp]
  00198	51		 push	 ecx
  00199	6b 55 a0 60	 imul	 edx, DWORD PTR tv141[ebp], 96
  0019d	8b 45 9c	 mov	 eax, DWORD PTR tv149[ebp]
  001a0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001a7	ff d1		 call	 ecx
  001a9	89 45 ec	 mov	 DWORD PTR _position$[ebp], eax

; 355  : 
; 356  : 				get_x_sector (entity_x_sector, position->x);

  001ac	8d 45 f4	 lea	 eax, DWORD PTR _entity_x_sector$[ebp]
  001af	50		 push	 eax
  001b0	8b 4d ec	 mov	 ecx, DWORD PTR _position$[ebp]
  001b3	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  001b7	51		 push	 ecx
  001b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bd	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  001c2	8b 45 f4	 mov	 eax, DWORD PTR _entity_x_sector$[ebp]
  001c5	99		 cdq
  001c6	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  001cc	89 45 f4	 mov	 DWORD PTR _entity_x_sector$[ebp], eax

; 357  : 				get_z_sector (entity_z_sector, position->z);

  001cf	8d 45 f0	 lea	 eax, DWORD PTR _entity_z_sector$[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d ec	 mov	 ecx, DWORD PTR _position$[ebp]
  001d6	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  001db	51		 push	 ecx
  001dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e1	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  001e6	8b 45 f0	 mov	 eax, DWORD PTR _entity_z_sector$[ebp]
  001e9	99		 cdq
  001ea	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  001f0	89 45 f0	 mov	 DWORD PTR _entity_z_sector$[ebp], eax

; 358  : 
; 359  : 				if ((entity_x_sector != x_sector) || (entity_z_sector != z_sector))

  001f3	8b 45 f4	 mov	 eax, DWORD PTR _entity_x_sector$[ebp]
  001f6	3b 45 fc	 cmp	 eax, DWORD PTR _x_sector$[ebp]
  001f9	75 08		 jne	 SHORT $LN11@validate_l
  001fb	8b 45 f0	 mov	 eax, DWORD PTR _entity_z_sector$[ebp]
  001fe	3b 45 f8	 cmp	 eax, DWORD PTR _z_sector$[ebp]
  00201	74 49		 je	 SHORT $LN10@validate_l
$LN11@validate_l:

; 360  : 				{
; 361  : 					debug_fatal ("Entity is in the wrong sector (type = %s)", get_local_entity_type_name (en));

  00203	83 7d e4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00207	74 0a		 je	 SHORT $LN23@validate_l
  00209	8b 45 e4	 mov	 eax, DWORD PTR _en$[ebp]
  0020c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0020e	89 4d a0	 mov	 DWORD PTR tv173[ebp], ecx
  00211	eb 21		 jmp	 SHORT $LN24@validate_l
$LN23@validate_l:
  00213	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  00219	83 c2 1f	 add	 edx, 31			; 0000001fH
  0021c	52		 push	 edx
  0021d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00227	50		 push	 eax
  00228	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022d	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN24@validate_l:
  00234	6b 4d a0 0c	 imul	 ecx, DWORD PTR tv173[ebp], 12
  00238	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[ecx]
  0023e	52		 push	 edx
  0023f	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@HKBOHMDP@Entity?5is?5in?5the?5wrong?5sector?5?$CI@
  00244	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00249	83 c4 08	 add	 esp, 8
$LN10@validate_l:

; 362  : 				}
; 363  : 
; 364  : 				en = get_local_entity_child_succ (en, LIST_TYPE_SECTOR);

  0024c	83 7d e4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00250	74 0a		 je	 SHORT $LN25@validate_l
  00252	8b 45 e4	 mov	 eax, DWORD PTR _en$[ebp]
  00255	8b 08		 mov	 ecx, DWORD PTR [eax]
  00257	89 4d a0	 mov	 DWORD PTR tv185[ebp], ecx
  0025a	eb 21		 jmp	 SHORT $LN26@validate_l
$LN25@validate_l:
  0025c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  00262	83 c2 22	 add	 edx, 34			; 00000022H
  00265	52		 push	 edx
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00270	50		 push	 eax
  00271	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00276	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN26@validate_l:
  0027d	b9 01 00 00 00	 mov	 ecx, 1
  00282	85 c9		 test	 ecx, ecx
  00284	74 09		 je	 SHORT $LN27@validate_l
  00286	c7 45 9c 21 00
	00 00		 mov	 DWORD PTR tv193[ebp], 33 ; 00000021H
  0028d	eb 21		 jmp	 SHORT $LN28@validate_l
$LN27@validate_l:
  0028f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_sector_entities@@YGXXZ@4JA
  00295	83 c2 22	 add	 edx, 34			; 00000022H
  00298	52		 push	 edx
  00299	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002a3	50		 push	 eax
  002a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a9	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN28@validate_l:
  002b0	6a 21		 push	 33			; 00000021H
  002b2	8b 4d e4	 mov	 ecx, DWORD PTR _en$[ebp]
  002b5	51		 push	 ecx
  002b6	69 55 a0 b4 00
	00 00		 imul	 edx, DWORD PTR tv185[ebp], 180
  002bd	8b 45 9c	 mov	 eax, DWORD PTR tv193[ebp]
  002c0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002c7	ff d1		 call	 ecx
  002c9	89 45 e4	 mov	 DWORD PTR _en$[ebp], eax

; 365  : 			}

  002cc	e9 54 fe ff ff	 jmp	 $LN8@validate_l
$LN9@validate_l:

; 366  : 		}

  002d1	e9 5d fd ff ff	 jmp	 $LN5@validate_l
$LN6@validate_l:

; 367  : 	}

  002d6	e9 37 fd ff ff	 jmp	 $LN2@validate_l
$LN3@validate_l:

; 368  : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c3		 ret	 0
?validate_local_sector_entities@@YGXXZ ENDP		; validate_local_sector_entities
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?update_client_server_sector_side_count@@YGXXZ
_TEXT	SEGMENT
?update_client_server_sector_side_count@@YGXXZ PROC	; update_client_server_sector_side_count, COMDAT

; 623  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  : 	debug_log ("SECTOR: Start update sector sides");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@FHFLNLIB@SECTOR?3?5Start?5update?5sector?5sid@
  0000e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00013	83 c4 04	 add	 esp, 4

; 625  : 
; 626  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00016	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0001d	74 18		 je	 SHORT $LN2@update_cli
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_client_server_sector_side_count@@YGXXZ@4JA
  00024	83 c0 03	 add	 eax, 3
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_cli:

; 627  : 
; 628  : 	update_sector_side_count ();

  00037	e8 00 00 00 00	 call	 ?update_sector_side_count@@YGXXZ ; update_sector_side_count

; 629  : 
; 630  : 	transmit_entity_comms_message (ENTITY_COMMS_UPDATE_SECTOR_SIDE_COUNT, NULL);

  0003c	6a 00		 push	 0
  0003e	6a 41		 push	 65			; 00000041H
  00040	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00045	83 c4 08	 add	 esp, 8

; 631  : 
; 632  : 	debug_log ("SECTOR: End update sector sides");

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@EMLNEOOP@SECTOR?3?5End?5update?5sector?5sides@
  0004d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00052	83 c4 04	 add	 esp, 4

; 633  : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?update_client_server_sector_side_count@@YGXXZ ENDP	; update_client_server_sector_side_count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?update_sector_side_count@@YGXXZ
_TEXT	SEGMENT
tv174 = -112						; size = 4
tv138 = -112						; size = 4
tv166 = -108						; size = 4
tv130 = -108						; size = 4
tv91 = -108						; size = 4
_count$ = -40						; size = 12
_side$ = -28						; size = 4
_z$ = -24						; size = 4
_x$ = -20						; size = 4
_force_entity$ = -16					; size = 12
_sec$ = -4						; size = 4
?update_sector_side_count@@YGXXZ PROC			; update_sector_side_count, COMDAT

; 580  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 581  : 	entity
; 582  : 		*sec,
; 583  : 		*force_entity [NUM_ENTITY_SIDES];
; 584  : 
; 585  : 	int
; 586  : 		x, z,
; 587  : 		side,
; 588  : 		count [NUM_ENTITY_SIDES];
; 589  : 
; 590  : 	for (side = 0; side < NUM_ENTITY_SIDES; side ++)

  00009	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@update_sec
$LN2@update_sec:
  00012	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 e4	 mov	 DWORD PTR _side$[ebp], eax
$LN4@update_sec:
  0001b	83 7d e4 03	 cmp	 DWORD PTR _side$[ebp], 3
  0001f	7d 1d		 jge	 SHORT $LN3@update_sec

; 591  : 	{
; 592  : 		count [side] = 0;

  00021	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  00024	c7 44 85 d8 00
	00 00 00	 mov	 DWORD PTR _count$[ebp+eax*4], 0

; 593  : 
; 594  : 		force_entity [side] = get_local_force_entity ((entity_sides) side);

  0002c	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00035	8b 4d e4	 mov	 ecx, DWORD PTR _side$[ebp]
  00038	89 44 8d f0	 mov	 DWORD PTR _force_entity$[ebp+ecx*4], eax

; 595  : 	}

  0003c	eb d4		 jmp	 SHORT $LN2@update_sec
$LN3@update_sec:

; 596  : 
; 597  : 	for (z = NUM_MAP_Z_SECTORS - 1; z >= 0; z --)

  0003e	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  00043	83 e8 01	 sub	 eax, 1
  00046	89 45 e8	 mov	 DWORD PTR _z$[ebp], eax
  00049	eb 09		 jmp	 SHORT $LN7@update_sec
$LN5@update_sec:
  0004b	8b 45 e8	 mov	 eax, DWORD PTR _z$[ebp]
  0004e	83 e8 01	 sub	 eax, 1
  00051	89 45 e8	 mov	 DWORD PTR _z$[ebp], eax
$LN7@update_sec:
  00054	83 7d e8 00	 cmp	 DWORD PTR _z$[ebp], 0
  00058	0f 8c 18 01 00
	00		 jl	 $LN6@update_sec

; 598  : 	{
; 599  : 		for (x = NUM_MAP_X_SECTORS - 1; x >= 0; x --)

  0005e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00063	83 e8 01	 sub	 eax, 1
  00066	89 45 ec	 mov	 DWORD PTR _x$[ebp], eax
  00069	eb 09		 jmp	 SHORT $LN10@update_sec
$LN8@update_sec:
  0006b	8b 45 ec	 mov	 eax, DWORD PTR _x$[ebp]
  0006e	83 e8 01	 sub	 eax, 1
  00071	89 45 ec	 mov	 DWORD PTR _x$[ebp], eax
$LN10@update_sec:
  00074	83 7d ec 00	 cmp	 DWORD PTR _x$[ebp], 0
  00078	0f 8c f3 00 00
	00		 jl	 $LN9@update_sec

; 600  : 		{
; 601  : 			sec = get_local_raw_sector_entity (x, z);

  0007e	8b 45 e8	 mov	 eax, DWORD PTR _z$[ebp]
  00081	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00088	03 45 ec	 add	 eax, DWORD PTR _x$[ebp]
  0008b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00091	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00095	74 1a		 je	 SHORT $LN16@update_sec
  00097	8b 55 e8	 mov	 edx, DWORD PTR _z$[ebp]
  0009a	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  000a1	03 55 ec	 add	 edx, DWORD PTR _x$[ebp]
  000a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  000a9	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  000ac	89 4d 94	 mov	 DWORD PTR tv91[ebp], ecx
  000af	eb 21		 jmp	 SHORT $LN17@update_sec
$LN16@update_sec:
  000b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA
  000b7	83 c2 15	 add	 edx, 21			; 00000015H
  000ba	52		 push	 edx
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cb	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN17@update_sec:
  000d2	8b 4d 94	 mov	 ecx, DWORD PTR tv91[ebp]
  000d5	89 4d fc	 mov	 DWORD PTR _sec$[ebp], ecx

; 602  : 
; 603  : 			side = get_local_entity_int_value (sec, INT_TYPE_SECTOR_SIDE);

  000d8	83 7d fc 00	 cmp	 DWORD PTR _sec$[ebp], 0
  000dc	74 0a		 je	 SHORT $LN18@update_sec
  000de	8b 45 fc	 mov	 eax, DWORD PTR _sec$[ebp]
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	89 4d 94	 mov	 DWORD PTR tv130[ebp], ecx
  000e6	eb 21		 jmp	 SHORT $LN19@update_sec
$LN18@update_sec:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA
  000ee	83 c2 17	 add	 edx, 23			; 00000017H
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN19@update_sec:
  00109	b9 01 00 00 00	 mov	 ecx, 1
  0010e	85 c9		 test	 ecx, ecx
  00110	74 09		 je	 SHORT $LN20@update_sec
  00112	c7 45 90 b7 00
	00 00		 mov	 DWORD PTR tv138[ebp], 183 ; 000000b7H
  00119	eb 21		 jmp	 SHORT $LN21@update_sec
$LN20@update_sec:
  0011b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA
  00121	83 c2 17	 add	 edx, 23			; 00000017H
  00124	52		 push	 edx
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00135	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN21@update_sec:
  0013c	68 b7 00 00 00	 push	 183			; 000000b7H
  00141	8b 4d fc	 mov	 ecx, DWORD PTR _sec$[ebp]
  00144	51		 push	 ecx
  00145	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv130[ebp], 1116
  0014c	8b 45 90	 mov	 eax, DWORD PTR tv138[ebp]
  0014f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00156	ff d1		 call	 ecx
  00158	89 45 e4	 mov	 DWORD PTR _side$[ebp], eax

; 604  : 
; 605  : 			count [side] ++;

  0015b	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  0015e	8b 4c 85 d8	 mov	 ecx, DWORD PTR _count$[ebp+eax*4]
  00162	83 c1 01	 add	 ecx, 1
  00165	8b 55 e4	 mov	 edx, DWORD PTR _side$[ebp]
  00168	89 4c 95 d8	 mov	 DWORD PTR _count$[ebp+edx*4], ecx

; 606  : 		}

  0016c	e9 fa fe ff ff	 jmp	 $LN8@update_sec
$LN9@update_sec:

; 607  : 	}

  00171	e9 d5 fe ff ff	 jmp	 $LN5@update_sec
$LN6@update_sec:

; 608  : 
; 609  : 	for (side = 0; side < NUM_ENTITY_SIDES; side ++)

  00176	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  0017d	eb 09		 jmp	 SHORT $LN13@update_sec
$LN11@update_sec:
  0017f	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e4	 mov	 DWORD PTR _side$[ebp], eax
$LN13@update_sec:
  00188	83 7d e4 03	 cmp	 DWORD PTR _side$[ebp], 3
  0018c	0f 8d a6 00 00
	00		 jge	 $LN1@update_sec

; 610  : 	{
; 611  : 		if (force_entity [side])

  00192	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  00195	83 7c 85 f0 00	 cmp	 DWORD PTR _force_entity$[ebp+eax*4], 0
  0019a	0f 84 93 00 00
	00		 je	 $LN14@update_sec

; 612  : 		{
; 613  : 			set_local_entity_int_value (force_entity [side], INT_TYPE_FORCE_SECTOR_COUNT, count [side]);

  001a0	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  001a3	83 7c 85 f0 00	 cmp	 DWORD PTR _force_entity$[ebp+eax*4], 0
  001a8	74 0e		 je	 SHORT $LN22@update_sec
  001aa	8b 4d e4	 mov	 ecx, DWORD PTR _side$[ebp]
  001ad	8b 54 8d f0	 mov	 edx, DWORD PTR _force_entity$[ebp+ecx*4]
  001b1	8b 02		 mov	 eax, DWORD PTR [edx]
  001b3	89 45 94	 mov	 DWORD PTR tv166[ebp], eax
  001b6	eb 22		 jmp	 SHORT $LN23@update_sec
$LN22@update_sec:
  001b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA
  001be	83 c1 21	 add	 ecx, 33			; 00000021H
  001c1	51		 push	 ecx
  001c2	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001cd	52		 push	 edx
  001ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d3	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN23@update_sec:
  001da	b8 01 00 00 00	 mov	 eax, 1
  001df	85 c0		 test	 eax, eax
  001e1	74 09		 je	 SHORT $LN24@update_sec
  001e3	c7 45 90 3d 00
	00 00		 mov	 DWORD PTR tv174[ebp], 61 ; 0000003dH
  001ea	eb 22		 jmp	 SHORT $LN25@update_sec
$LN24@update_sec:
  001ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??update_sector_side_count@@YGXXZ@4JA
  001f2	83 c1 21	 add	 ecx, 33			; 00000021H
  001f5	51		 push	 ecx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00201	52		 push	 edx
  00202	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00207	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN25@update_sec:
  0020e	8b 45 e4	 mov	 eax, DWORD PTR _side$[ebp]
  00211	8b 4c 85 d8	 mov	 ecx, DWORD PTR _count$[ebp+eax*4]
  00215	51		 push	 ecx
  00216	6a 3d		 push	 61			; 0000003dH
  00218	8b 55 e4	 mov	 edx, DWORD PTR _side$[ebp]
  0021b	8b 44 95 f0	 mov	 eax, DWORD PTR _force_entity$[ebp+edx*4]
  0021f	50		 push	 eax
  00220	69 4d 94 5c 04
	00 00		 imul	 ecx, DWORD PTR tv166[ebp], 1116
  00227	8b 55 90	 mov	 edx, DWORD PTR tv174[ebp]
  0022a	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[ecx+edx*4]
  00231	ff d0		 call	 eax
$LN14@update_sec:

; 614  : 		}
; 615  : 	}

  00233	e9 47 ff ff ff	 jmp	 $LN11@update_sec
$LN1@update_sec:

; 616  : }

  00238	5f		 pop	 edi
  00239	5e		 pop	 esi
  0023a	5b		 pop	 ebx
  0023b	8b e5		 mov	 esp, ebp
  0023d	5d		 pop	 ebp
  0023e	c3		 ret	 0
?update_sector_side_count@@YGXXZ ENDP			; update_sector_side_count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?update_client_server_sector_fog_of_war@@YGXXZ
_TEXT	SEGMENT
?update_client_server_sector_fog_of_war@@YGXXZ PROC	; update_client_server_sector_fog_of_war, COMDAT

; 563  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 564  : 	debug_log ("SECTOR: Start update sector fog of war");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@HPGJFCEF@SECTOR?3?5Start?5update?5sector?5fog@
  0000e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00013	83 c4 04	 add	 esp, 4

; 565  : 
; 566  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00016	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0001d	74 18		 je	 SHORT $LN2@update_cli
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_client_server_sector_fog_of_war@@YGXXZ@4JA
  00024	83 c0 03	 add	 eax, 3
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_cli:

; 567  : 
; 568  : 	update_sector_fog_of_war ();

  00037	e8 00 00 00 00	 call	 ?update_sector_fog_of_war@@YGXXZ ; update_sector_fog_of_war

; 569  : 
; 570  : 	transmit_entity_comms_message (ENTITY_COMMS_UPDATE_FOG_OF_WAR, NULL);

  0003c	6a 00		 push	 0
  0003e	6a 3f		 push	 63			; 0000003fH
  00040	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00045	83 c4 08	 add	 esp, 8

; 571  : 
; 572  : 	debug_log ("SECTOR: End update sector fog of war");

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@NHKMONHH@SECTOR?3?5End?5update?5sector?5fog?5o@
  0004d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00052	83 c4 04	 add	 esp, 4

; 573  : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?update_client_server_sector_fog_of_war@@YGXXZ ENDP	; update_client_server_sector_fog_of_war
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?update_sector_fog_of_war@@YGXXZ
_TEXT	SEGMENT
tv83 = -116						; size = 4
$T1 = -112						; size = 8
$T2 = -104						; size = 8
$T3 = -96						; size = 8
$T4 = -88						; size = 8
_z$ = -16						; size = 4
_x$ = -12						; size = 4
_raw$ = -8						; size = 4
_sec$ = -4						; size = 4
?update_sector_fog_of_war@@YGXXZ PROC			; update_sector_fog_of_war, COMDAT

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 535  : 	entity
; 536  : 		*sec;
; 537  : 
; 538  : 	sector
; 539  : 		*raw;
; 540  : 
; 541  : 	int
; 542  : 		x, z;
; 543  : 
; 544  : 	for (z = NUM_MAP_Z_SECTORS - 1; z >= 0; z --)

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  0000e	83 e8 01	 sub	 eax, 1
  00011	89 45 f0	 mov	 DWORD PTR _z$[ebp], eax
  00014	eb 09		 jmp	 SHORT $LN4@update_sec
$LN2@update_sec:
  00016	8b 45 f0	 mov	 eax, DWORD PTR _z$[ebp]
  00019	83 e8 01	 sub	 eax, 1
  0001c	89 45 f0	 mov	 DWORD PTR _z$[ebp], eax
$LN4@update_sec:
  0001f	83 7d f0 00	 cmp	 DWORD PTR _z$[ebp], 0
  00023	0f 8c 1b 01 00
	00		 jl	 $LN3@update_sec

; 545  : 	{
; 546  : 		for (x = NUM_MAP_X_SECTORS - 1; x >= 0; x --)

  00029	a1 08 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0002e	83 e8 01	 sub	 eax, 1
  00031	89 45 f4	 mov	 DWORD PTR _x$[ebp], eax
  00034	eb 09		 jmp	 SHORT $LN7@update_sec
$LN5@update_sec:
  00036	8b 45 f4	 mov	 eax, DWORD PTR _x$[ebp]
  00039	83 e8 01	 sub	 eax, 1
  0003c	89 45 f4	 mov	 DWORD PTR _x$[ebp], eax
$LN7@update_sec:
  0003f	83 7d f4 00	 cmp	 DWORD PTR _x$[ebp], 0
  00043	0f 8c f6 00 00
	00		 jl	 $LN6@update_sec

; 547  : 		{
; 548  : 			sec = get_local_raw_sector_entity (x, z);

  00049	8b 45 f0	 mov	 eax, DWORD PTR _z$[ebp]
  0004c	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00053	03 45 f4	 add	 eax, DWORD PTR _x$[ebp]
  00056	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0005c	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00060	74 1a		 je	 SHORT $LN9@update_sec
  00062	8b 55 f0	 mov	 edx, DWORD PTR _z$[ebp]
  00065	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0006c	03 55 f4	 add	 edx, DWORD PTR _x$[ebp]
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00074	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00077	89 4d 8c	 mov	 DWORD PTR tv83[ebp], ecx
  0007a	eb 21		 jmp	 SHORT $LN10@update_sec
$LN9@update_sec:
  0007c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_sector_fog_of_war@@YGXXZ@4JA
  00082	83 c2 0e	 add	 edx, 14			; 0000000eH
  00085	52		 push	 edx
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00096	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN10@update_sec:
  0009d	8b 4d 8c	 mov	 ecx, DWORD PTR tv83[ebp]
  000a0	89 4d fc	 mov	 DWORD PTR _sec$[ebp], ecx

; 549  : 
; 550  : 			raw = (sector *) get_local_entity_data (sec);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR _sec$[ebp]
  000a6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a9	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 551  : 
; 552  : 			raw->fog_of_war [ENTITY_SIDE_BLUE_FORCE] = max (0.0, raw->fog_of_war [ENTITY_SIDE_BLUE_FORCE] - FOG_OF_WAR_DECAY_RATE);

  000ac	b8 04 00 00 00	 mov	 eax, 4
  000b1	c1 e0 00	 shl	 eax, 0
  000b4	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000b7	f3 0f 5a 44 01
	20		 cvtss2sd xmm0, DWORD PTR [ecx+eax+32]
  000bd	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@403e000000000000
  000c5	f2 0f 11 45 a8	 movsd	 QWORD PTR $T4[ebp], xmm0
  000ca	0f 57 c0	 xorps	 xmm0, xmm0
  000cd	f2 0f 11 45 a0	 movsd	 QWORD PTR $T3[ebp], xmm0
  000d2	8d 55 a8	 lea	 edx, DWORD PTR $T4[ebp]
  000d5	52		 push	 edx
  000d6	8d 45 a0	 lea	 eax, DWORD PTR $T3[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ??$max@N@std@@YGABNABN0@Z ; std::max<double>
  000df	f2 0f 5a 00	 cvtsd2ss xmm0, QWORD PTR [eax]
  000e3	b9 04 00 00 00	 mov	 ecx, 4
  000e8	c1 e1 00	 shl	 ecx, 0
  000eb	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  000ee	f3 0f 11 44 0a
	20		 movss	 DWORD PTR [edx+ecx+32], xmm0

; 553  : 			raw->fog_of_war [ENTITY_SIDE_RED_FORCE] = max (0.0, raw->fog_of_war [ENTITY_SIDE_RED_FORCE] - FOG_OF_WAR_DECAY_RATE);

  000f4	b8 04 00 00 00	 mov	 eax, 4
  000f9	d1 e0		 shl	 eax, 1
  000fb	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000fe	f3 0f 5a 44 01
	20		 cvtss2sd xmm0, DWORD PTR [ecx+eax+32]
  00104	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@403e000000000000
  0010c	f2 0f 11 45 98	 movsd	 QWORD PTR $T2[ebp], xmm0
  00111	0f 57 c0	 xorps	 xmm0, xmm0
  00114	f2 0f 11 45 90	 movsd	 QWORD PTR $T1[ebp], xmm0
  00119	8d 55 98	 lea	 edx, DWORD PTR $T2[ebp]
  0011c	52		 push	 edx
  0011d	8d 45 90	 lea	 eax, DWORD PTR $T1[ebp]
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ??$max@N@std@@YGABNABN0@Z ; std::max<double>
  00126	f2 0f 5a 00	 cvtsd2ss xmm0, QWORD PTR [eax]
  0012a	b9 04 00 00 00	 mov	 ecx, 4
  0012f	d1 e1		 shl	 ecx, 1
  00131	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  00134	f3 0f 11 44 0a
	20		 movss	 DWORD PTR [edx+ecx+32], xmm0

; 554  : 		}

  0013a	e9 f7 fe ff ff	 jmp	 $LN5@update_sec
$LN6@update_sec:

; 555  : 	}

  0013f	e9 d2 fe ff ff	 jmp	 $LN2@update_sec
$LN3@update_sec:

; 556  : }

  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
?update_sector_fog_of_war@@YGXXZ ENDP			; update_sector_fog_of_war
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv135 = -76						; size = 4
tv82 = -76						; size = 4
tv95 = -72						; size = 4
tv75 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_side$ = 12						; size = 4
?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z PROC ; get_sector_fog_of_war_value, COMDAT

; 511  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 512  : 	sector
; 513  : 		*raw;
; 514  : 		
; 515  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_sector
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_sector:

; 516  : 
; 517  : 	raw = (sector *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 518  : 
; 519  : 	if (get_local_entity_int_value (en, INT_TYPE_SECTOR_SIDE) == side)

  00030	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00034	74 0a		 je	 SHORT $LN6@get_sector
  00036	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d b8	 mov	 DWORD PTR tv75[ebp], ecx
  0003e	eb 1d		 jmp	 SHORT $LN7@get_sector
$LN6@get_sector:
  00040	68 07 02 00 00	 push	 519			; 00000207H
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN7@get_sector:
  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 09		 je	 SHORT $LN8@get_sector
  00066	c7 45 b4 b7 00
	00 00		 mov	 DWORD PTR tv82[ebp], 183 ; 000000b7H
  0006d	eb 1d		 jmp	 SHORT $LN9@get_sector
$LN8@get_sector:
  0006f	68 07 02 00 00	 push	 519			; 00000207H
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN9@get_sector:
  0008c	68 b7 00 00 00	 push	 183			; 000000b7H
  00091	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00094	52		 push	 edx
  00095	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv75[ebp], 1116
  0009c	8b 4d b4	 mov	 ecx, DWORD PTR tv82[ebp]
  0009f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a6	ff d2		 call	 edx
  000a8	3b 45 0c	 cmp	 eax, DWORD PTR _side$[ebp]
  000ab	0f 85 89 00 00
	00		 jne	 $LN3@get_sector

; 520  : 	{
; 521  : 		return get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_FOG_OF_WAR_MAXIMUM_VALUE);

  000b1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  000b8	74 0c		 je	 SHORT $LN10@get_sector
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	89 4d b8	 mov	 DWORD PTR tv95[ebp], ecx
  000c4	eb 21		 jmp	 SHORT $LN11@get_sector
$LN10@get_sector:
  000c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA
  000cc	83 c2 0a	 add	 edx, 10			; 0000000aH
  000cf	52		 push	 edx
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN11@get_sector:
  000e7	b9 01 00 00 00	 mov	 ecx, 1
  000ec	85 c9		 test	 ecx, ecx
  000ee	74 09		 je	 SHORT $LN12@get_sector
  000f0	c7 45 b4 2c 00
	00 00		 mov	 DWORD PTR tv135[ebp], 44 ; 0000002cH
  000f7	eb 21		 jmp	 SHORT $LN13@get_sector
$LN12@get_sector:
  000f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA
  000ff	83 c2 0a	 add	 edx, 10			; 0000000aH
  00102	52		 push	 edx
  00103	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00113	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN13@get_sector:
  0011a	6a 2c		 push	 44			; 0000002cH
  0011c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00122	51		 push	 ecx
  00123	69 55 b8 bc 02
	00 00		 imul	 edx, DWORD PTR tv95[ebp], 700
  0012a	8b 45 b4	 mov	 eax, DWORD PTR tv135[ebp]
  0012d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00134	ff d1		 call	 ecx
  00136	eb 0c		 jmp	 SHORT $LN4@get_sector

; 522  : 	}
; 523  : 	else

  00138	eb 0a		 jmp	 SHORT $LN4@get_sector
$LN3@get_sector:

; 524  : 	{
; 525  : 		return raw->fog_of_war [side];

  0013a	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0013d	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00140	d9 44 81 20	 fld	 DWORD PTR [ecx+eax*4+32]
$LN4@get_sector:

; 526  : 	}
; 527  : }

  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 08 00	 ret	 8
?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ENDP ; get_sector_fog_of_war_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv465 = -172						; size = 8
tv304 = -164						; size = 4
tv297 = -164						; size = 4
tv290 = -164						; size = 4
tv283 = -164						; size = 4
tv272 = -164						; size = 4
tv252 = -164						; size = 4
tv225 = -164						; size = 4
tv200 = -164						; size = 4
tv180 = -164						; size = 4
tv160 = -164						; size = 4
tv140 = -164						; size = 4
tv87 = -164						; size = 4
tv333 = -160						; size = 4
tv305 = -160						; size = 4
tv298 = -160						; size = 4
tv291 = -160						; size = 4
tv284 = -160						; size = 4
tv264 = -160						; size = 4
tv244 = -160						; size = 4
tv217 = -160						; size = 4
tv192 = -160						; size = 4
tv172 = -160						; size = 4
tv152 = -160						; size = 4
tv132 = -160						; size = 4
tv80 = -160						; size = 4
$T1 = -156						; size = 4
_sector_pos$ = -88					; size = 12
_pos$ = -76						; size = 4
_current_fog_value$ = -72				; size = 4
_new_fog_value$ = -68					; size = 4
_sector_radius$ = -64					; size = 4
_max_z$ = -60						; size = 4
_max_x$ = -56						; size = 4
_min_z$ = -52						; size = 4
_min_x$ = -48						; size = 4
_sz$ = -44						; size = 4
_sx$ = -40						; size = 4
_z$ = -36						; size = 4
_x$ = -32						; size = 4
_sector_raw$ = -28					; size = 4
_side$ = -24						; size = 4
_maximum_value$ = -20					; size = 4
_recon_radius$ = -16					; size = 4
_r$ = -12						; size = 4
_group$ = -8						; size = 4
_sec$ = -4						; size = 4
_en$ = 8						; size = 4
_sector_en$ = 12					; size = 4
?set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z PROC	; set_sector_fog_of_war_value, COMDAT

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 376  : 	entity
; 377  : 		*sec,
; 378  : 		*group;
; 379  : 
; 380  : 	float
; 381  : 		r,
; 382  : 		recon_radius,
; 383  : 		maximum_value;
; 384  : 
; 385  : 	entity_sides
; 386  : 		side;
; 387  : 
; 388  : 	sector
; 389  : 		*sector_raw;
; 390  : 
; 391  : 	int
; 392  : 		x, z,
; 393  : 		sx, sz,
; 394  : 		min_x, min_z,
; 395  : 		max_x, max_z,
; 396  : 		sector_radius;
; 397  : 
; 398  : 	float
; 399  : 		new_fog_value,
; 400  : 		current_fog_value;
; 401  : 
; 402  : 	vec3d
; 403  : 		*pos,
; 404  : 		sector_pos;
; 405  : 
; 406  : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN8@set_sector
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00017	83 c0 1f	 add	 eax, 31			; 0000001fH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@set_sector:

; 407  : 
; 408  : 	ASSERT (sector_en);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN9@set_sector
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00035	83 c0 21	 add	 eax, 33			; 00000021H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_09NAAGAKP@sector_en@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@set_sector:

; 409  : 
; 410  : 	if (!get_session_entity ())

  00048	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0004f	75 05		 jne	 SHORT $LN10@set_sector

; 411  : 	{
; 412  : 		return;

  00051	e9 47 08 00 00	 jmp	 $LN1@set_sector
$LN10@set_sector:

; 413  : 	}
; 414  : 
; 415  : 	if (!get_local_entity_int_value (en, INT_TYPE_ALIVE))

  00056	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005a	74 0d		 je	 SHORT $LN19@set_sector
  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00061	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv80[ebp], ecx
  00067	eb 20		 jmp	 SHORT $LN20@set_sector
$LN19@set_sector:
  00069	68 9f 01 00 00	 push	 415			; 0000019fH
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00073	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00079	52		 push	 edx
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv80[ebp], 0
$LN20@set_sector:
  00089	b8 01 00 00 00	 mov	 eax, 1
  0008e	85 c0		 test	 eax, eax
  00090	74 0c		 je	 SHORT $LN21@set_sector
  00092	c7 85 5c ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv87[ebp], 7
  0009c	eb 20		 jmp	 SHORT $LN22@set_sector
$LN21@set_sector:
  0009e	68 9f 01 00 00	 push	 415			; 0000019fH
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ae	51		 push	 ecx
  000af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b4	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv87[ebp], 0
$LN22@set_sector:
  000be	6a 07		 push	 7
  000c0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000c3	52		 push	 edx
  000c4	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv80[ebp], 1116
  000ce	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv87[ebp]
  000d4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000db	ff d2		 call	 edx
  000dd	85 c0		 test	 eax, eax
  000df	75 05		 jne	 SHORT $LN11@set_sector

; 416  : 	{
; 417  : 		return;

  000e1	e9 b7 07 00 00	 jmp	 $LN1@set_sector
$LN11@set_sector:

; 418  : 	}
; 419  : 
; 420  : 	side = (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE);

  000e6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ea	74 0d		 je	 SHORT $LN23@set_sector
  000ec	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv132[ebp], ecx
  000f7	eb 24		 jmp	 SHORT $LN24@set_sector
$LN23@set_sector:
  000f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  000ff	83 c2 2d	 add	 edx, 45			; 0000002dH
  00102	52		 push	 edx
  00103	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00113	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN24@set_sector:
  0011d	b9 01 00 00 00	 mov	 ecx, 1
  00122	85 c9		 test	 ecx, ecx
  00124	74 0c		 je	 SHORT $LN25@set_sector
  00126	c7 85 5c ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv140[ebp], 187 ; 000000bbH
  00130	eb 24		 jmp	 SHORT $LN26@set_sector
$LN25@set_sector:
  00132	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00138	83 c2 2d	 add	 edx, 45			; 0000002dH
  0013b	52		 push	 edx
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00141	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014c	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN26@set_sector:
  00156	68 bb 00 00 00	 push	 187			; 000000bbH
  0015b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0015e	51		 push	 ecx
  0015f	69 95 60 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv132[ebp], 1116
  00169	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv140[ebp]
  0016f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00176	ff d1		 call	 ecx
  00178	89 45 e8	 mov	 DWORD PTR _side$[ebp], eax

; 421  : 
; 422  : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  0017b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0017f	74 0d		 je	 SHORT $LN27@set_sector
  00181	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00184	8b 08		 mov	 ecx, DWORD PTR [eax]
  00186	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv152[ebp], ecx
  0018c	eb 24		 jmp	 SHORT $LN28@set_sector
$LN27@set_sector:
  0018e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00194	83 c2 2f	 add	 edx, 47			; 0000002fH
  00197	52		 push	 edx
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a8	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv152[ebp], 0
$LN28@set_sector:
  001b2	b9 01 00 00 00	 mov	 ecx, 1
  001b7	85 c9		 test	 ecx, ecx
  001b9	74 0c		 je	 SHORT $LN29@set_sector
  001bb	c7 85 5c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv160[ebp], 25 ; 00000019H
  001c5	eb 24		 jmp	 SHORT $LN30@set_sector
$LN29@set_sector:
  001c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  001cd	83 c2 2f	 add	 edx, 47			; 0000002fH
  001d0	52		 push	 edx
  001d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001db	50		 push	 eax
  001dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e1	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv160[ebp], 0
$LN30@set_sector:
  001eb	6a 19		 push	 25			; 00000019H
  001ed	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001f0	51		 push	 ecx
  001f1	69 95 60 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv152[ebp], 180
  001fb	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv160[ebp]
  00201	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00208	ff d1		 call	 ecx
  0020a	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 423  : 
; 424  : 	maximum_value = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_FOG_OF_WAR_MAXIMUM_VALUE);

  0020d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00214	74 0f		 je	 SHORT $LN31@set_sector
  00216	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0021b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021d	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv172[ebp], ecx
  00223	eb 24		 jmp	 SHORT $LN32@set_sector
$LN31@set_sector:
  00225	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  0022b	83 c2 31	 add	 edx, 49			; 00000031H
  0022e	52		 push	 edx
  0022f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00234	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023f	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN32@set_sector:
  00249	b9 01 00 00 00	 mov	 ecx, 1
  0024e	85 c9		 test	 ecx, ecx
  00250	74 0c		 je	 SHORT $LN33@set_sector
  00252	c7 85 5c ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv180[ebp], 44 ; 0000002cH
  0025c	eb 24		 jmp	 SHORT $LN34@set_sector
$LN33@set_sector:
  0025e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00264	83 c2 31	 add	 edx, 49			; 00000031H
  00267	52		 push	 edx
  00268	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00278	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN34@set_sector:
  00282	6a 2c		 push	 44			; 0000002cH
  00284	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0028a	51		 push	 ecx
  0028b	69 95 60 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv172[ebp], 700
  00295	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv180[ebp]
  0029b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002a2	ff d1		 call	 ecx
  002a4	d9 5d ec	 fstp	 DWORD PTR _maximum_value$[ebp]

; 425  : 
; 426  : 	//
; 427  : 	// set surrounding sectors awareness
; 428  : 	//
; 429  : 
; 430  : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  002a7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002ab	74 0d		 je	 SHORT $LN35@set_sector
  002ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b2	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv192[ebp], ecx
  002b8	eb 24		 jmp	 SHORT $LN36@set_sector
$LN35@set_sector:
  002ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  002c0	83 c2 37	 add	 edx, 55			; 00000037H
  002c3	52		 push	 edx
  002c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ce	50		 push	 eax
  002cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d4	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv192[ebp], 0
$LN36@set_sector:
  002de	b9 01 00 00 00	 mov	 ecx, 1
  002e3	85 c9		 test	 ecx, ecx
  002e5	74 0c		 je	 SHORT $LN37@set_sector
  002e7	c7 85 5c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv200[ebp], 8
  002f1	eb 24		 jmp	 SHORT $LN38@set_sector
$LN37@set_sector:
  002f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  002f9	83 c2 37	 add	 edx, 55			; 00000037H
  002fc	52		 push	 edx
  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00307	50		 push	 eax
  00308	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030d	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
$LN38@set_sector:
  00317	6a 08		 push	 8
  00319	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0031c	51		 push	 ecx
  0031d	6b 95 60 ff ff
	ff 60		 imul	 edx, DWORD PTR tv192[ebp], 96
  00324	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv200[ebp]
  0032a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00331	ff d1		 call	 ecx
  00333	89 45 b4	 mov	 DWORD PTR _pos$[ebp], eax

; 431  : 
; 432  : 	ASSERT (pos);

  00336	83 7d b4 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0033a	75 18		 jne	 SHORT $LN12@set_sector
  0033c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00341	83 c0 39	 add	 eax, 57			; 00000039H
  00344	50		 push	 eax
  00345	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034a	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  0034f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@set_sector:

; 433  : 
; 434  : 	recon_radius = get_local_entity_float_value (en, FLOAT_TYPE_RECON_RADIUS) * 2.0;

  00354	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00358	74 0d		 je	 SHORT $LN39@set_sector
  0035a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0035d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0035f	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv217[ebp], ecx
  00365	eb 24		 jmp	 SHORT $LN40@set_sector
$LN39@set_sector:
  00367	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  0036d	83 c2 3b	 add	 edx, 59			; 0000003bH
  00370	52		 push	 edx
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00376	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0037b	50		 push	 eax
  0037c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00381	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv217[ebp], 0
$LN40@set_sector:
  0038b	b9 01 00 00 00	 mov	 ecx, 1
  00390	85 c9		 test	 ecx, ecx
  00392	74 0c		 je	 SHORT $LN41@set_sector
  00394	c7 85 5c ff ff
	ff 6f 00 00 00	 mov	 DWORD PTR tv225[ebp], 111 ; 0000006fH
  0039e	eb 24		 jmp	 SHORT $LN42@set_sector
$LN41@set_sector:
  003a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  003a6	83 c2 3b	 add	 edx, 59			; 0000003bH
  003a9	52		 push	 edx
  003aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  003af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  003b4	50		 push	 eax
  003b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ba	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv225[ebp], 0
$LN42@set_sector:
  003c4	6a 6f		 push	 111			; 0000006fH
  003c6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003c9	51		 push	 ecx
  003ca	69 95 60 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv217[ebp], 700
  003d4	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv225[ebp]
  003da	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  003e1	ff d1		 call	 ecx
  003e3	dd 9d 54 ff ff
	ff		 fstp	 QWORD PTR tv465[ebp]
  003e9	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv465[ebp]
  003f1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  003f9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003fd	f3 0f 11 45 f0	 movss	 DWORD PTR _recon_radius$[ebp], xmm0

; 435  : 
; 436  : 	convert_float_to_int (recon_radius, &sector_radius);

  00402	8d 45 c0	 lea	 eax, DWORD PTR _sector_radius$[ebp]
  00405	50		 push	 eax
  00406	51		 push	 ecx
  00407	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _recon_radius$[ebp]
  0040c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00411	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 437  : 
; 438  : 	sector_radius /= SECTOR_SIDE_LENGTH;

  00416	8b 45 c0	 mov	 eax, DWORD PTR _sector_radius$[ebp]
  00419	99		 cdq
  0041a	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00420	89 45 c0	 mov	 DWORD PTR _sector_radius$[ebp], eax

; 439  : 
; 440  : 	sector_radius += 1;

  00423	8b 45 c0	 mov	 eax, DWORD PTR _sector_radius$[ebp]
  00426	83 c0 01	 add	 eax, 1
  00429	89 45 c0	 mov	 DWORD PTR _sector_radius$[ebp], eax

; 441  : 
; 442  : 	sx = get_local_entity_int_value (sector_en, INT_TYPE_X_SECTOR);

  0042c	83 7d 0c 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  00430	74 0d		 je	 SHORT $LN43@set_sector
  00432	8b 45 0c	 mov	 eax, DWORD PTR _sector_en$[ebp]
  00435	8b 08		 mov	 ecx, DWORD PTR [eax]
  00437	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv244[ebp], ecx
  0043d	eb 24		 jmp	 SHORT $LN44@set_sector
$LN43@set_sector:
  0043f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00445	83 c2 43	 add	 edx, 67			; 00000043H
  00448	52		 push	 edx
  00449	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0044e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00453	50		 push	 eax
  00454	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00459	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv244[ebp], 0
$LN44@set_sector:
  00463	b9 01 00 00 00	 mov	 ecx, 1
  00468	85 c9		 test	 ecx, ecx
  0046a	74 0c		 je	 SHORT $LN45@set_sector
  0046c	c7 85 5c ff ff
	ff 15 01 00 00	 mov	 DWORD PTR tv252[ebp], 277 ; 00000115H
  00476	eb 24		 jmp	 SHORT $LN46@set_sector
$LN45@set_sector:
  00478	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  0047e	83 c2 43	 add	 edx, 67			; 00000043H
  00481	52		 push	 edx
  00482	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00487	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0048c	50		 push	 eax
  0048d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00492	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv252[ebp], 0
$LN46@set_sector:
  0049c	68 15 01 00 00	 push	 277			; 00000115H
  004a1	8b 4d 0c	 mov	 ecx, DWORD PTR _sector_en$[ebp]
  004a4	51		 push	 ecx
  004a5	69 95 60 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv244[ebp], 1116
  004af	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv252[ebp]
  004b5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004bc	ff d1		 call	 ecx
  004be	89 45 d8	 mov	 DWORD PTR _sx$[ebp], eax

; 443  : 	sz = get_local_entity_int_value (sector_en, INT_TYPE_Z_SECTOR);

  004c1	83 7d 0c 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  004c5	74 0d		 je	 SHORT $LN47@set_sector
  004c7	8b 45 0c	 mov	 eax, DWORD PTR _sector_en$[ebp]
  004ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  004cc	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv264[ebp], ecx
  004d2	eb 24		 jmp	 SHORT $LN48@set_sector
$LN47@set_sector:
  004d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  004da	83 c2 44	 add	 edx, 68			; 00000044H
  004dd	52		 push	 edx
  004de	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004e8	50		 push	 eax
  004e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ee	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN48@set_sector:
  004f8	b9 01 00 00 00	 mov	 ecx, 1
  004fd	85 c9		 test	 ecx, ecx
  004ff	74 0c		 je	 SHORT $LN49@set_sector
  00501	c7 85 5c ff ff
	ff 16 01 00 00	 mov	 DWORD PTR tv272[ebp], 278 ; 00000116H
  0050b	eb 24		 jmp	 SHORT $LN50@set_sector
$LN49@set_sector:
  0050d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00513	83 c2 44	 add	 edx, 68			; 00000044H
  00516	52		 push	 edx
  00517	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0051c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00521	50		 push	 eax
  00522	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00527	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
$LN50@set_sector:
  00531	68 16 01 00 00	 push	 278			; 00000116H
  00536	8b 4d 0c	 mov	 ecx, DWORD PTR _sector_en$[ebp]
  00539	51		 push	 ecx
  0053a	69 95 60 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv264[ebp], 1116
  00544	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv272[ebp]
  0054a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00551	ff d1		 call	 ecx
  00553	89 45 d4	 mov	 DWORD PTR _sz$[ebp], eax

; 444  : 
; 445  : 	min_x = bound (sx - sector_radius, MIN_MAP_X_SECTOR, MAX_MAP_X_SECTOR);

  00556	8b 45 d8	 mov	 eax, DWORD PTR _sx$[ebp]
  00559	2b 45 c0	 sub	 eax, DWORD PTR _sector_radius$[ebp]
  0055c	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  00562	7d 0e		 jge	 SHORT $LN53@set_sector
  00564	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  0056a	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv284[ebp], ecx
  00570	eb 33		 jmp	 SHORT $LN54@set_sector
$LN53@set_sector:
  00572	8b 55 d8	 mov	 edx, DWORD PTR _sx$[ebp]
  00575	2b 55 c0	 sub	 edx, DWORD PTR _sector_radius$[ebp]
  00578	3b 15 1c 00 00
	00		 cmp	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  0057e	7e 0d		 jle	 SHORT $LN51@set_sector
  00580	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  00585	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv283[ebp], eax
  0058b	eb 0c		 jmp	 SHORT $LN52@set_sector
$LN51@set_sector:
  0058d	8b 4d d8	 mov	 ecx, DWORD PTR _sx$[ebp]
  00590	2b 4d c0	 sub	 ecx, DWORD PTR _sector_radius$[ebp]
  00593	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv283[ebp], ecx
$LN52@set_sector:
  00599	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv283[ebp]
  0059f	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv284[ebp], edx
$LN54@set_sector:
  005a5	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv284[ebp]
  005ab	89 45 d0	 mov	 DWORD PTR _min_x$[ebp], eax

; 446  : 	min_z = bound (sz - sector_radius, MIN_MAP_Z_SECTOR, MAX_MAP_Z_SECTOR);

  005ae	8b 45 d4	 mov	 eax, DWORD PTR _sz$[ebp]
  005b1	2b 45 c0	 sub	 eax, DWORD PTR _sector_radius$[ebp]
  005b4	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  005ba	7d 0e		 jge	 SHORT $LN57@set_sector
  005bc	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  005c2	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv291[ebp], ecx
  005c8	eb 33		 jmp	 SHORT $LN58@set_sector
$LN57@set_sector:
  005ca	8b 55 d4	 mov	 edx, DWORD PTR _sz$[ebp]
  005cd	2b 55 c0	 sub	 edx, DWORD PTR _sector_radius$[ebp]
  005d0	3b 15 20 00 00
	00		 cmp	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  005d6	7e 0d		 jle	 SHORT $LN55@set_sector
  005d8	a1 20 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  005dd	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv290[ebp], eax
  005e3	eb 0c		 jmp	 SHORT $LN56@set_sector
$LN55@set_sector:
  005e5	8b 4d d4	 mov	 ecx, DWORD PTR _sz$[ebp]
  005e8	2b 4d c0	 sub	 ecx, DWORD PTR _sector_radius$[ebp]
  005eb	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv290[ebp], ecx
$LN56@set_sector:
  005f1	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv290[ebp]
  005f7	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv291[ebp], edx
$LN58@set_sector:
  005fd	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv291[ebp]
  00603	89 45 cc	 mov	 DWORD PTR _min_z$[ebp], eax

; 447  : 
; 448  : 	max_x = bound (sx + sector_radius, MIN_MAP_X_SECTOR, MAX_MAP_X_SECTOR);

  00606	8b 45 d8	 mov	 eax, DWORD PTR _sx$[ebp]
  00609	03 45 c0	 add	 eax, DWORD PTR _sector_radius$[ebp]
  0060c	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  00612	7d 0e		 jge	 SHORT $LN61@set_sector
  00614	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  0061a	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv298[ebp], ecx
  00620	eb 33		 jmp	 SHORT $LN62@set_sector
$LN61@set_sector:
  00622	8b 55 d8	 mov	 edx, DWORD PTR _sx$[ebp]
  00625	03 55 c0	 add	 edx, DWORD PTR _sector_radius$[ebp]
  00628	3b 15 1c 00 00
	00		 cmp	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  0062e	7e 0d		 jle	 SHORT $LN59@set_sector
  00630	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  00635	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv297[ebp], eax
  0063b	eb 0c		 jmp	 SHORT $LN60@set_sector
$LN59@set_sector:
  0063d	8b 4d d8	 mov	 ecx, DWORD PTR _sx$[ebp]
  00640	03 4d c0	 add	 ecx, DWORD PTR _sector_radius$[ebp]
  00643	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv297[ebp], ecx
$LN60@set_sector:
  00649	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv297[ebp]
  0064f	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv298[ebp], edx
$LN62@set_sector:
  00655	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv298[ebp]
  0065b	89 45 c8	 mov	 DWORD PTR _max_x$[ebp], eax

; 449  : 	max_z = bound (sz + sector_radius, MIN_MAP_Z_SECTOR, MAX_MAP_Z_SECTOR);

  0065e	8b 45 d4	 mov	 eax, DWORD PTR _sz$[ebp]
  00661	03 45 c0	 add	 eax, DWORD PTR _sector_radius$[ebp]
  00664	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  0066a	7d 0e		 jge	 SHORT $LN65@set_sector
  0066c	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  00672	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv305[ebp], ecx
  00678	eb 33		 jmp	 SHORT $LN66@set_sector
$LN65@set_sector:
  0067a	8b 55 d4	 mov	 edx, DWORD PTR _sz$[ebp]
  0067d	03 55 c0	 add	 edx, DWORD PTR _sector_radius$[ebp]
  00680	3b 15 20 00 00
	00		 cmp	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  00686	7e 0d		 jle	 SHORT $LN63@set_sector
  00688	a1 20 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  0068d	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv304[ebp], eax
  00693	eb 0c		 jmp	 SHORT $LN64@set_sector
$LN63@set_sector:
  00695	8b 4d d4	 mov	 ecx, DWORD PTR _sz$[ebp]
  00698	03 4d c0	 add	 ecx, DWORD PTR _sector_radius$[ebp]
  0069b	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv304[ebp], ecx
$LN64@set_sector:
  006a1	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv304[ebp]
  006a7	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv305[ebp], edx
$LN66@set_sector:
  006ad	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv305[ebp]
  006b3	89 45 c4	 mov	 DWORD PTR _max_z$[ebp], eax

; 450  : 
; 451  : 	sector_pos.y = 0.0;

  006b6	0f 57 c0	 xorps	 xmm0, xmm0
  006b9	f3 0f 11 45 ac	 movss	 DWORD PTR _sector_pos$[ebp+4], xmm0

; 452  : 	sector_pos.z = (min_z * SECTOR_SIDE_LENGTH) + (SECTOR_SIDE_LENGTH / 2);

  006be	8b 4d cc	 mov	 ecx, DWORD PTR _min_z$[ebp]
  006c1	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  006c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  006cd	99		 cdq
  006ce	2b c2		 sub	 eax, edx
  006d0	d1 f8		 sar	 eax, 1
  006d2	03 c8		 add	 ecx, eax
  006d4	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  006d8	f3 0f 11 45 b0	 movss	 DWORD PTR _sector_pos$[ebp+8], xmm0

; 453  : 
; 454  : 	for (z = min_z; z <= max_z; z++)

  006dd	8b 45 cc	 mov	 eax, DWORD PTR _min_z$[ebp]
  006e0	89 45 dc	 mov	 DWORD PTR _z$[ebp], eax
  006e3	eb 09		 jmp	 SHORT $LN4@set_sector
$LN2@set_sector:
  006e5	8b 45 dc	 mov	 eax, DWORD PTR _z$[ebp]
  006e8	83 c0 01	 add	 eax, 1
  006eb	89 45 dc	 mov	 DWORD PTR _z$[ebp], eax
$LN4@set_sector:
  006ee	8b 45 dc	 mov	 eax, DWORD PTR _z$[ebp]
  006f1	3b 45 c4	 cmp	 eax, DWORD PTR _max_z$[ebp]
  006f4	0f 8f a3 01 00
	00		 jg	 $LN3@set_sector

; 455  : 	{
; 456  : 
; 457  : 		sector_pos.x = (min_x * SECTOR_SIDE_LENGTH) - (SECTOR_SIDE_LENGTH / 2);

  006fa	8b 4d d0	 mov	 ecx, DWORD PTR _min_x$[ebp]
  006fd	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00704	a1 00 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00709	99		 cdq
  0070a	2b c2		 sub	 eax, edx
  0070c	d1 f8		 sar	 eax, 1
  0070e	2b c8		 sub	 ecx, eax
  00710	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00714	f3 0f 11 45 a8	 movss	 DWORD PTR _sector_pos$[ebp], xmm0

; 458  : 
; 459  : 		for (x = min_x; x <= max_x; x++)

  00719	8b 45 d0	 mov	 eax, DWORD PTR _min_x$[ebp]
  0071c	89 45 e0	 mov	 DWORD PTR _x$[ebp], eax
  0071f	eb 09		 jmp	 SHORT $LN7@set_sector
$LN5@set_sector:
  00721	8b 45 e0	 mov	 eax, DWORD PTR _x$[ebp]
  00724	83 c0 01	 add	 eax, 1
  00727	89 45 e0	 mov	 DWORD PTR _x$[ebp], eax
$LN7@set_sector:
  0072a	8b 45 e0	 mov	 eax, DWORD PTR _x$[ebp]
  0072d	3b 45 c8	 cmp	 eax, DWORD PTR _max_x$[ebp]
  00730	0f 8f 50 01 00
	00		 jg	 $LN6@set_sector

; 460  : 		{
; 461  : 
; 462  : 			sector_pos.x += SECTOR_SIDE_LENGTH;

  00736	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0073e	f3 0f 58 45 a8	 addss	 xmm0, DWORD PTR _sector_pos$[ebp]
  00743	f3 0f 11 45 a8	 movss	 DWORD PTR _sector_pos$[ebp], xmm0

; 463  : 
; 464  : 			//
; 465  : 			// get sector data
; 466  : 			//
; 467  : 
; 468  : 			sec = get_local_raw_sector_entity(x, z);

  00748	8b 45 dc	 mov	 eax, DWORD PTR _z$[ebp]
  0074b	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00752	03 45 e0	 add	 eax, DWORD PTR _x$[ebp]
  00755	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0075b	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  0075f	74 1d		 je	 SHORT $LN67@set_sector
  00761	8b 55 dc	 mov	 edx, DWORD PTR _z$[ebp]
  00764	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0076b	03 55 e0	 add	 edx, DWORD PTR _x$[ebp]
  0076e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00773	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00776	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv333[ebp], ecx
  0077c	eb 24		 jmp	 SHORT $LN68@set_sector
$LN67@set_sector:
  0077e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00784	83 c2 5d	 add	 edx, 93			; 0000005dH
  00787	52		 push	 edx
  00788	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0078d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00792	50		 push	 eax
  00793	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00798	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv333[ebp], 0
$LN68@set_sector:
  007a2	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv333[ebp]
  007a8	89 4d fc	 mov	 DWORD PTR _sec$[ebp], ecx

; 469  : 
; 470  : 			sector_raw = (sector *) get_local_entity_data (sec);

  007ab	8b 45 fc	 mov	 eax, DWORD PTR _sec$[ebp]
  007ae	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  007b1	89 4d e4	 mov	 DWORD PTR _sector_raw$[ebp], ecx

; 471  : 
; 472  : 			current_fog_value = sector_raw->fog_of_war [side];

  007b4	8b 45 e8	 mov	 eax, DWORD PTR _side$[ebp]
  007b7	8b 4d e4	 mov	 ecx, DWORD PTR _sector_raw$[ebp]
  007ba	f3 0f 10 44 81
	20		 movss	 xmm0, DWORD PTR [ecx+eax*4+32]
  007c0	f3 0f 11 45 b8	 movss	 DWORD PTR _current_fog_value$[ebp], xmm0

; 473  : 
; 474  : 			//
; 475  : 			// set sector awareness timer
; 476  : 			//
; 477  : 			
; 478  : 			if ((z == sz) && (x == sx))

  007c5	8b 45 dc	 mov	 eax, DWORD PTR _z$[ebp]
  007c8	3b 45 d4	 cmp	 eax, DWORD PTR _sz$[ebp]
  007cb	75 14		 jne	 SHORT $LN13@set_sector
  007cd	8b 45 e0	 mov	 eax, DWORD PTR _x$[ebp]
  007d0	3b 45 d8	 cmp	 eax, DWORD PTR _sx$[ebp]
  007d3	75 0c		 jne	 SHORT $LN13@set_sector

; 479  : 			{
; 480  : 				new_fog_value = maximum_value;

  007d5	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _maximum_value$[ebp]
  007da	f3 0f 11 45 bc	 movss	 DWORD PTR _new_fog_value$[ebp], xmm0

; 481  : 			}
; 482  : 			else

  007df	eb 61		 jmp	 SHORT $LN15@set_sector
$LN13@set_sector:

; 483  : 			{	
; 484  : 				new_fog_value = current_fog_value;

  007e1	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _current_fog_value$[ebp]
  007e6	f3 0f 11 45 bc	 movss	 DWORD PTR _new_fog_value$[ebp], xmm0

; 485  : 
; 486  : 				r = get_approx_3d_range (&sector_pos, pos);

  007eb	8b 45 b4	 mov	 eax, DWORD PTR _pos$[ebp]
  007ee	50		 push	 eax
  007ef	8d 4d a8	 lea	 ecx, DWORD PTR _sector_pos$[ebp]
  007f2	51		 push	 ecx
  007f3	e8 00 00 00 00	 call	 ?get_approx_3d_range@@YGMPBUVEC3D@@0@Z ; get_approx_3d_range
  007f8	d9 5d f4	 fstp	 DWORD PTR _r$[ebp]

; 487  : 
; 488  : 				if (r <= recon_radius)

  007fb	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _recon_radius$[ebp]
  00800	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _r$[ebp]
  00804	72 3c		 jb	 SHORT $LN15@set_sector

; 489  : 				{
; 490  : 					new_fog_value = max (current_fog_value, ((1.0f - (r / recon_radius)) * maximum_value));

  00806	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _r$[ebp]
  0080b	f3 0f 5e 45 f0	 divss	 xmm0, DWORD PTR _recon_radius$[ebp]
  00810	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00818	f3 0f 5c c8	 subss	 xmm1, xmm0
  0081c	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _maximum_value$[ebp]
  00821	f3 0f 11 8d 64
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm1
  00829	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0082f	50		 push	 eax
  00830	8d 4d b8	 lea	 ecx, DWORD PTR _current_fog_value$[ebp]
  00833	51		 push	 ecx
  00834	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00839	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0083d	f3 0f 11 45 bc	 movss	 DWORD PTR _new_fog_value$[ebp], xmm0
$LN15@set_sector:

; 491  : 				}
; 492  : 			}
; 493  : 
; 494  : 			ASSERT (new_fog_value >= current_fog_value);

  00842	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _new_fog_value$[ebp]
  00847	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _current_fog_value$[ebp]
  0084b	73 18		 jae	 SHORT $LN16@set_sector
  0084d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z@4JA
  00852	83 c0 77	 add	 eax, 119		; 00000077H
  00855	50		 push	 eax
  00856	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0085b	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@LPLOEHBC@new_fog_value?5?$DO?$DN?5current_fog_va@
  00860	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@set_sector:

; 495  : 				
; 496  : 			if (new_fog_value > current_fog_value)

  00865	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _new_fog_value$[ebp]
  0086a	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _current_fog_value$[ebp]
  0086e	76 11		 jbe	 SHORT $LN17@set_sector

; 497  : 			{
; 498  : 				sector_raw->fog_of_war [side] = new_fog_value;

  00870	8b 45 e8	 mov	 eax, DWORD PTR _side$[ebp]
  00873	8b 4d e4	 mov	 ecx, DWORD PTR _sector_raw$[ebp]
  00876	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _new_fog_value$[ebp]
  0087b	f3 0f 11 44 81
	20		 movss	 DWORD PTR [ecx+eax*4+32], xmm0
$LN17@set_sector:

; 499  : 			}
; 500  : 		}

  00881	e9 9b fe ff ff	 jmp	 $LN5@set_sector
$LN6@set_sector:

; 501  : 
; 502  : 		sector_pos.z += SECTOR_SIDE_LENGTH;

  00886	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0088e	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _sector_pos$[ebp+8]
  00893	f3 0f 11 45 b0	 movss	 DWORD PTR _sector_pos$[ebp+8], xmm0

; 503  : 	}

  00898	e9 48 fe ff ff	 jmp	 $LN2@set_sector
$LN3@set_sector:
$LN1@set_sector:

; 504  : }

  0089d	5f		 pop	 edi
  0089e	5e		 pop	 esi
  0089f	5b		 pop	 ebx
  008a0	8b e5		 mov	 esp, ebp
  008a2	5d		 pop	 ebp
  008a3	c2 08 00	 ret	 8
?set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z ENDP	; set_sector_fog_of_war_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv77 = -84						; size = 4
_en$ = -16						; size = 4
_raw$ = -12						; size = 4
_total$ = -8						; size = 4
_ratio$ = -4						; size = 4
_sx$ = 8						; size = 4
_sz$ = 12						; size = 4
_side$ = 16						; size = 4
?get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z PROC ; get_local_sector_side_ratio, COMDAT

; 299  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 300  : 	float
; 301  : 		ratio,
; 302  : 		total;
; 303  : 
; 304  : 	sector
; 305  : 		*raw;
; 306  : 
; 307  : 	entity
; 308  : 		*en;
; 309  : 
; 310  : 	en = get_local_raw_sector_entity (sx, sz);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00013	03 45 08	 add	 eax, DWORD PTR _sx$[ebp]
  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0001c	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00020	74 1a		 je	 SHORT $LN5@get_local_
  00022	8b 55 0c	 mov	 edx, DWORD PTR _sz$[ebp]
  00025	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0002c	03 55 08	 add	 edx, DWORD PTR _sx$[ebp]
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00034	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00037	89 4d ac	 mov	 DWORD PTR tv77[ebp], ecx
  0003a	eb 21		 jmp	 SHORT $LN6@get_local_
$LN5@get_local_:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  00042	83 c2 0b	 add	 edx, 11			; 0000000bH
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN6@get_local_:
  0005d	8b 4d ac	 mov	 ecx, DWORD PTR tv77[ebp]
  00060	89 4d f0	 mov	 DWORD PTR _en$[ebp], ecx

; 311  : 
; 312  : 	ASSERT (en);

  00063	83 7d f0 00	 cmp	 DWORD PTR _en$[ebp], 0
  00067	75 18		 jne	 SHORT $LN2@get_local_
  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  0006e	83 c0 0d	 add	 eax, 13			; 0000000dH
  00071	50		 push	 eax
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  0007c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_local_:

; 313  : 
; 314  : 	raw = (sector *) get_local_entity_data (en);

  00081	8b 45 f0	 mov	 eax, DWORD PTR _en$[ebp]
  00084	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00087	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 315  : 
; 316  : 	total = raw->sector_side [ENTITY_SIDE_BLUE_FORCE] + raw->sector_side [ENTITY_SIDE_RED_FORCE];

  0008a	b8 04 00 00 00	 mov	 eax, 4
  0008f	c1 e0 00	 shl	 eax, 0
  00092	b9 04 00 00 00	 mov	 ecx, 4
  00097	d1 e1		 shl	 ecx, 1
  00099	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  0009c	8b 75 f4	 mov	 esi, DWORD PTR _raw$[ebp]
  0009f	f3 0f 10 44 02
	14		 movss	 xmm0, DWORD PTR [edx+eax+20]
  000a5	f3 0f 58 44 0e
	14		 addss	 xmm0, DWORD PTR [esi+ecx+20]
  000ab	f3 0f 11 45 f8	 movss	 DWORD PTR _total$[ebp], xmm0

; 317  : 
; 318  : 	ASSERT (total > 0.0);

  000b0	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _total$[ebp]
  000b5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000bd	77 18		 ja	 SHORT $LN3@get_local_
  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  000c4	83 c0 13	 add	 eax, 19			; 00000013H
  000c7	50		 push	 eax
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HOAGDBOJ@total?5?$DO?50?40@
  000d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_local_:

; 319  : 
; 320  : 	ratio = raw->sector_side [side] / total;

  000d7	8b 45 10	 mov	 eax, DWORD PTR _side$[ebp]
  000da	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  000dd	f3 0f 10 44 81
	14		 movss	 xmm0, DWORD PTR [ecx+eax*4+20]
  000e3	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _total$[ebp]
  000e8	f3 0f 11 45 fc	 movss	 DWORD PTR _ratio$[ebp], xmm0

; 321  : 
; 322  : 	return ratio;

  000ed	d9 45 fc	 fld	 DWORD PTR _ratio$[ebp]

; 323  : }

  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c2 0c 00	 ret	 12			; 0000000cH
?get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z ENDP ; get_local_sector_side_ratio
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv138 = -72						; size = 4
tv87 = -72						; size = 4
tv131 = -68						; size = 4
tv80 = -68						; size = 4
_sector_en$ = 8						; size = 4
_mobile_en$ = 12					; size = 4
?remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z PROC ; remove_mobile_values_from_sector, COMDAT

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 270  : 	ASSERT (sector_en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@remove_mob
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09NAAGAKP@sector_en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@remove_mob:

; 271  : 
; 272  : 	ASSERT (mobile_en);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _mobile_en$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@remove_mob
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_09DPLOJPMG@mobile_en@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@remove_mob:

; 273  : 
; 274  : 	if (get_comms_model () != COMMS_MODEL_SERVER)

  00045	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0004c	74 05		 je	 SHORT $LN4@remove_mob

; 275  : 	{
; 276  : 		return;

  0004e	e9 14 01 00 00	 jmp	 $LN1@remove_mob
$LN4@remove_mob:

; 277  : 	}
; 278  : 
; 279  : 	if (get_local_entity_int_value (mobile_en, INT_TYPE_ALIVE))

  00053	83 7d 0c 00	 cmp	 DWORD PTR _mobile_en$[ebp], 0
  00057	74 0a		 je	 SHORT $LN8@remove_mob
  00059	8b 45 0c	 mov	 eax, DWORD PTR _mobile_en$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d bc	 mov	 DWORD PTR tv80[ebp], ecx
  00061	eb 1d		 jmp	 SHORT $LN9@remove_mob
$LN8@remove_mob:
  00063	68 17 01 00 00	 push	 279			; 00000117H
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00079	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@remove_mob:
  00080	b8 01 00 00 00	 mov	 eax, 1
  00085	85 c0		 test	 eax, eax
  00087	74 09		 je	 SHORT $LN10@remove_mob
  00089	c7 45 b8 07 00
	00 00		 mov	 DWORD PTR tv87[ebp], 7
  00090	eb 1d		 jmp	 SHORT $LN11@remove_mob
$LN10@remove_mob:
  00092	68 17 01 00 00	 push	 279			; 00000117H
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a8	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN11@remove_mob:
  000af	6a 07		 push	 7
  000b1	8b 55 0c	 mov	 edx, DWORD PTR _mobile_en$[ebp]
  000b4	52		 push	 edx
  000b5	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv80[ebp], 1116
  000bc	8b 4d b8	 mov	 ecx, DWORD PTR tv87[ebp]
  000bf	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000c6	ff d2		 call	 edx
  000c8	85 c0		 test	 eax, eax
  000ca	0f 84 97 00 00
	00		 je	 $LN1@remove_mob

; 280  : 	{
; 281  : 		if (get_local_entity_int_value (mobile_en, INT_TYPE_IDENTIFY_VEHICLE))

  000d0	83 7d 0c 00	 cmp	 DWORD PTR _mobile_en$[ebp], 0
  000d4	74 0a		 je	 SHORT $LN12@remove_mob
  000d6	8b 45 0c	 mov	 eax, DWORD PTR _mobile_en$[ebp]
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	89 4d bc	 mov	 DWORD PTR tv131[ebp], ecx
  000de	eb 1d		 jmp	 SHORT $LN13@remove_mob
$LN12@remove_mob:
  000e0	68 19 01 00 00	 push	 281			; 00000119H
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f0	52		 push	 edx
  000f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f6	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN13@remove_mob:
  000fd	b8 01 00 00 00	 mov	 eax, 1
  00102	85 c0		 test	 eax, eax
  00104	74 09		 je	 SHORT $LN14@remove_mob
  00106	c7 45 b8 60 00
	00 00		 mov	 DWORD PTR tv138[ebp], 96 ; 00000060H
  0010d	eb 1d		 jmp	 SHORT $LN15@remove_mob
$LN14@remove_mob:
  0010f	68 19 01 00 00	 push	 281			; 00000119H
  00114	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00119	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0011f	51		 push	 ecx
  00120	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00125	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN15@remove_mob:
  0012c	6a 60		 push	 96			; 00000060H
  0012e	8b 55 0c	 mov	 edx, DWORD PTR _mobile_en$[ebp]
  00131	52		 push	 edx
  00132	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv131[ebp], 1116
  00139	8b 4d b8	 mov	 ecx, DWORD PTR tv138[ebp]
  0013c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00143	ff d2		 call	 edx
  00145	85 c0		 test	 eax, eax
  00147	74 1e		 je	 SHORT $LN1@remove_mob

; 282  : 		{
; 283  : 			// surface to air threat
; 284  : 
; 285  : 			update_imap_surface_to_air_defence_level (mobile_en, sector_en, FALSE);

  00149	6a 00		 push	 0
  0014b	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0014e	50		 push	 eax
  0014f	8b 4d 0c	 mov	 ecx, DWORD PTR _mobile_en$[ebp]
  00152	51		 push	 ecx
  00153	e8 00 00 00 00	 call	 ?update_imap_surface_to_air_defence_level@@YGXPAUENTITY@@0H@Z ; update_imap_surface_to_air_defence_level

; 286  : 
; 287  : 			// surface to surface threat
; 288  : 
; 289  : 			update_imap_surface_to_surface_defence_level (mobile_en, sector_en, FALSE);

  00158	6a 00		 push	 0
  0015a	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0015d	50		 push	 eax
  0015e	8b 4d 0c	 mov	 ecx, DWORD PTR _mobile_en$[ebp]
  00161	51		 push	 ecx
  00162	e8 00 00 00 00	 call	 ?update_imap_surface_to_surface_defence_level@@YGXPAUENTITY@@0H@Z ; update_imap_surface_to_surface_defence_level
$LN1@remove_mob:

; 290  : 		}
; 291  : 	}
; 292  : }

  00167	5f		 pop	 edi
  00168	5e		 pop	 esi
  00169	5b		 pop	 ebx
  0016a	8b e5		 mov	 esp, ebp
  0016c	5d		 pop	 ebp
  0016d	c2 08 00	 ret	 8
?remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z ENDP ; remove_mobile_values_from_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv138 = -72						; size = 4
tv87 = -72						; size = 4
tv131 = -68						; size = 4
tv80 = -68						; size = 4
_sector_en$ = 8						; size = 4
_mobile_en$ = 12					; size = 4
?add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z PROC	; add_mobile_values_to_sector, COMDAT

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 240  : 	ASSERT (sector_en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _sector_en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@add_mobile
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09NAAGAKP@sector_en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@add_mobile:

; 241  : 
; 242  : 	ASSERT (mobile_en);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _mobile_en$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@add_mobile
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_09DPLOJPMG@mobile_en@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@add_mobile:

; 243  : 
; 244  : 	if (get_comms_model () != COMMS_MODEL_SERVER)

  00045	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0004c	74 05		 je	 SHORT $LN4@add_mobile

; 245  : 	{
; 246  : 		return;

  0004e	e9 14 01 00 00	 jmp	 $LN1@add_mobile
$LN4@add_mobile:

; 247  : 	}
; 248  : 
; 249  : 	if (get_local_entity_int_value (mobile_en, INT_TYPE_ALIVE))

  00053	83 7d 0c 00	 cmp	 DWORD PTR _mobile_en$[ebp], 0
  00057	74 0a		 je	 SHORT $LN8@add_mobile
  00059	8b 45 0c	 mov	 eax, DWORD PTR _mobile_en$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d bc	 mov	 DWORD PTR tv80[ebp], ecx
  00061	eb 1d		 jmp	 SHORT $LN9@add_mobile
$LN8@add_mobile:
  00063	68 f9 00 00 00	 push	 249			; 000000f9H
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00079	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@add_mobile:
  00080	b8 01 00 00 00	 mov	 eax, 1
  00085	85 c0		 test	 eax, eax
  00087	74 09		 je	 SHORT $LN10@add_mobile
  00089	c7 45 b8 07 00
	00 00		 mov	 DWORD PTR tv87[ebp], 7
  00090	eb 1d		 jmp	 SHORT $LN11@add_mobile
$LN10@add_mobile:
  00092	68 f9 00 00 00	 push	 249			; 000000f9H
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a8	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN11@add_mobile:
  000af	6a 07		 push	 7
  000b1	8b 55 0c	 mov	 edx, DWORD PTR _mobile_en$[ebp]
  000b4	52		 push	 edx
  000b5	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv80[ebp], 1116
  000bc	8b 4d b8	 mov	 ecx, DWORD PTR tv87[ebp]
  000bf	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000c6	ff d2		 call	 edx
  000c8	85 c0		 test	 eax, eax
  000ca	0f 84 97 00 00
	00		 je	 $LN1@add_mobile

; 250  : 	{
; 251  : 		if (get_local_entity_int_value (mobile_en, INT_TYPE_IDENTIFY_VEHICLE))

  000d0	83 7d 0c 00	 cmp	 DWORD PTR _mobile_en$[ebp], 0
  000d4	74 0a		 je	 SHORT $LN12@add_mobile
  000d6	8b 45 0c	 mov	 eax, DWORD PTR _mobile_en$[ebp]
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	89 4d bc	 mov	 DWORD PTR tv131[ebp], ecx
  000de	eb 1d		 jmp	 SHORT $LN13@add_mobile
$LN12@add_mobile:
  000e0	68 fb 00 00 00	 push	 251			; 000000fbH
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f0	52		 push	 edx
  000f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f6	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN13@add_mobile:
  000fd	b8 01 00 00 00	 mov	 eax, 1
  00102	85 c0		 test	 eax, eax
  00104	74 09		 je	 SHORT $LN14@add_mobile
  00106	c7 45 b8 60 00
	00 00		 mov	 DWORD PTR tv138[ebp], 96 ; 00000060H
  0010d	eb 1d		 jmp	 SHORT $LN15@add_mobile
$LN14@add_mobile:
  0010f	68 fb 00 00 00	 push	 251			; 000000fbH
  00114	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00119	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0011f	51		 push	 ecx
  00120	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00125	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN15@add_mobile:
  0012c	6a 60		 push	 96			; 00000060H
  0012e	8b 55 0c	 mov	 edx, DWORD PTR _mobile_en$[ebp]
  00131	52		 push	 edx
  00132	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv131[ebp], 1116
  00139	8b 4d b8	 mov	 ecx, DWORD PTR tv138[ebp]
  0013c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00143	ff d2		 call	 edx
  00145	85 c0		 test	 eax, eax
  00147	74 1e		 je	 SHORT $LN1@add_mobile

; 252  : 		{
; 253  : 			// surface to air threat
; 254  : 
; 255  : 			update_imap_surface_to_air_defence_level (mobile_en, sector_en, TRUE);

  00149	6a 01		 push	 1
  0014b	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0014e	50		 push	 eax
  0014f	8b 4d 0c	 mov	 ecx, DWORD PTR _mobile_en$[ebp]
  00152	51		 push	 ecx
  00153	e8 00 00 00 00	 call	 ?update_imap_surface_to_air_defence_level@@YGXPAUENTITY@@0H@Z ; update_imap_surface_to_air_defence_level

; 256  : 
; 257  : 			// surface to surface threat
; 258  : 
; 259  : 			update_imap_surface_to_surface_defence_level (mobile_en, sector_en, TRUE);

  00158	6a 01		 push	 1
  0015a	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0015d	50		 push	 eax
  0015e	8b 4d 0c	 mov	 ecx, DWORD PTR _mobile_en$[ebp]
  00161	51		 push	 ecx
  00162	e8 00 00 00 00	 call	 ?update_imap_surface_to_surface_defence_level@@YGXPAUENTITY@@0H@Z ; update_imap_surface_to_surface_defence_level
$LN1@add_mobile:

; 260  : 		}
; 261  : 	}
; 262  : }

  00167	5f		 pop	 edi
  00168	5e		 pop	 esi
  00169	5b		 pop	 ebx
  0016a	8b e5		 mov	 esp, ebp
  0016c	5d		 pop	 ebp
  0016d	c2 08 00	 ret	 8
?add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z ENDP	; add_mobile_values_to_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv82 = -76						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_sx$ = 8						; size = 4
_sz$ = 12						; size = 4
_side$ = 16						; size = 4
?get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z PROC ; get_sector_distance_to_friendly_base, COMDAT

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 217  : 	entity
; 218  : 		*en;
; 219  : 
; 220  : 	sector
; 221  : 		*raw;
; 222  : 		
; 223  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@get_sector
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  00017	83 c0 07	 add	 eax, 7
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_sector:

; 224  : 
; 225  : 	en = get_local_raw_sector_entity (sx, sz);

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0002d	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00034	03 45 08	 add	 eax, DWORD PTR _sx$[ebp]
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0003d	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00041	74 1a		 je	 SHORT $LN5@get_sector
  00043	8b 55 0c	 mov	 edx, DWORD PTR _sz$[ebp]
  00046	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0004d	03 55 08	 add	 edx, DWORD PTR _sx$[ebp]
  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00055	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00058	89 4d b4	 mov	 DWORD PTR tv82[ebp], ecx
  0005b	eb 21		 jmp	 SHORT $LN6@get_sector
$LN5@get_sector:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  00063	83 c2 09	 add	 edx, 9
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN6@get_sector:
  0007e	8b 4d b4	 mov	 ecx, DWORD PTR tv82[ebp]
  00081	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 226  : 
; 227  : 	ASSERT (en);

  00084	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00088	75 18		 jne	 SHORT $LN3@get_sector
  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  0008f	83 c0 0b	 add	 eax, 11			; 0000000bH
  00092	50		 push	 eax
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_sector:

; 228  : 
; 229  : 	raw = (sector *) get_local_entity_data (en);

  000a2	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000a5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a8	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 230  : 
; 231  : 	return raw->distance_to_friendly_base [side];

  000ab	8b 45 10	 mov	 eax, DWORD PTR _side$[ebp]
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000b1	d9 44 81 38	 fld	 DWORD PTR [ecx+eax*4+56]

; 232  : }

  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 0c 00	 ret	 12			; 0000000cH
?get_sector_distance_to_friendly_base@@YGMHHW4ENTITY_SIDES@@@Z ENDP ; get_sector_distance_to_friendly_base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv82 = -76						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_sx$ = 8						; size = 4
_sz$ = 12						; size = 4
_side$ = 16						; size = 4
?get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z PROC ; get_sector_importance_level, COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  : 	entity
; 195  : 		*en;
; 196  : 
; 197  : 	sector
; 198  : 		*raw;
; 199  : 		
; 200  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@get_sector
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  00017	83 c0 07	 add	 eax, 7
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_sector:

; 201  : 
; 202  : 	en = get_local_raw_sector_entity (sx, sz);

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0002d	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00034	03 45 08	 add	 eax, DWORD PTR _sx$[ebp]
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0003d	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00041	74 1a		 je	 SHORT $LN5@get_sector
  00043	8b 55 0c	 mov	 edx, DWORD PTR _sz$[ebp]
  00046	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0004d	03 55 08	 add	 edx, DWORD PTR _sx$[ebp]
  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00055	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00058	89 4d b4	 mov	 DWORD PTR tv82[ebp], ecx
  0005b	eb 21		 jmp	 SHORT $LN6@get_sector
$LN5@get_sector:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  00063	83 c2 09	 add	 edx, 9
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN6@get_sector:
  0007e	8b 4d b4	 mov	 ecx, DWORD PTR tv82[ebp]
  00081	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 203  : 
; 204  : 	ASSERT (en);

  00084	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00088	75 18		 jne	 SHORT $LN3@get_sector
  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z@4JA
  0008f	83 c0 0b	 add	 eax, 11			; 0000000bH
  00092	50		 push	 eax
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_sector:

; 205  : 
; 206  : 	raw = (sector *) get_local_entity_data (en);

  000a2	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000a5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a8	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 207  : 
; 208  : 	return raw->importance_level [side];

  000ab	8b 45 10	 mov	 eax, DWORD PTR _side$[ebp]
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000b1	d9 44 81 2c	 fld	 DWORD PTR [ecx+eax*4+44]

; 209  : }

  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 0c 00	 ret	 12			; 0000000cH
?get_sector_importance_level@@YGMHHW4ENTITY_SIDES@@@Z ENDP ; get_sector_importance_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_local_sector_entity_enemy_surface_to_surface_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_sector_en$ = 8						; size = 4
_side$ = 12						; size = 4
?get_local_sector_entity_enemy_surface_to_surface_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z PROC ; get_local_sector_entity_enemy_surface_to_surface_defence_level, COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 180  : 	sector
; 181  : 		*raw;
; 182  : 
; 183  : 	raw = (sector *) get_local_entity_data (sector_en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 184  : 
; 185  : 	return get_local_sector_entity_enemy_defence_level (raw->surface_to_surface_defence_level, side);

  00012	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00015	50		 push	 eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00019	83 c1 50	 add	 ecx, 80			; 00000050H
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?get_local_sector_entity_enemy_defence_level@@YGMPAMW4ENTITY_SIDES@@@Z ; get_local_sector_entity_enemy_defence_level

; 186  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?get_local_sector_entity_enemy_surface_to_surface_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ENDP ; get_local_sector_entity_enemy_surface_to_surface_defence_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_local_sector_entity_enemy_surface_to_air_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_sector_en$ = 8						; size = 4
_side$ = 12						; size = 4
?get_local_sector_entity_enemy_surface_to_air_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z PROC ; get_local_sector_entity_enemy_surface_to_air_defence_level, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 166  : 	sector
; 167  : 		*raw;
; 168  : 
; 169  : 	raw = (sector *) get_local_entity_data (sector_en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _sector_en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 170  : 
; 171  : 	return get_local_sector_entity_enemy_defence_level (raw->surface_to_air_defence_level, side);

  00012	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00015	50		 push	 eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00019	83 c1 44	 add	 ecx, 68			; 00000044H
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ?get_local_sector_entity_enemy_defence_level@@YGMPAMW4ENTITY_SIDES@@@Z ; get_local_sector_entity_enemy_defence_level

; 172  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?get_local_sector_entity_enemy_surface_to_air_defence_level@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ENDP ; get_local_sector_entity_enemy_surface_to_air_defence_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sector.c
;	COMDAT ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv139 = -80						; size = 4
_z_sec$ = -12						; size = 4
_x_sec$ = -8						; size = 4
_en$ = -4						; size = 4
_pos$ = 8						; size = 4
?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z PROC ; get_local_sector_entity, COMDAT

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 105  : 	entity
; 106  : 		*en;
; 107  : 
; 108  : 	int
; 109  : 		x_sec,
; 110  : 		z_sec;
; 111  : 
; 112  : 	ASSERT (pos);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_local_:

; 113  : 
; 114  : 	if (!point_inside_map_area (pos))

  00027	8b 45 08	 mov	 eax, DWORD PTR _pos$[ebp]
  0002a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002e	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00035	72 32		 jb	 SHORT $LN4@get_local_
  00037	8b 45 08	 mov	 eax, DWORD PTR _pos$[ebp]
  0003a	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00042	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00045	72 22		 jb	 SHORT $LN4@get_local_
  00047	8b 45 08	 mov	 eax, DWORD PTR _pos$[ebp]
  0004a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0004f	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00056	72 11		 jb	 SHORT $LN4@get_local_
  00058	8b 45 08	 mov	 eax, DWORD PTR _pos$[ebp]
  0005b	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00063	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00067	73 2c		 jae	 SHORT $LN3@get_local_
$LN4@get_local_:

; 115  : 	{
; 116  : 		debug_fatal ("Position off map: (x = %f, z = %f)", pos->x, pos->z);

  00069	8b 45 08	 mov	 eax, DWORD PTR _pos$[ebp]
  0006c	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00071	83 ec 08	 sub	 esp, 8
  00074	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00079	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  0007c	f3 0f 5a 01	 cvtss2sd xmm0, DWORD PTR [ecx]
  00080	83 ec 08	 sub	 esp, 8
  00083	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@DHOAJGEI@Position?5off?5map?3?5?$CIx?5?$DN?5?$CFf?0?5z?5?$DN?5@
  0008d	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00092	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@get_local_:

; 117  : 	}
; 118  : 
; 119  : 	get_x_sector (x_sec, pos->x);

  00095	8d 45 f8	 lea	 eax, DWORD PTR _x_sec$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  0009c	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  000a0	51		 push	 ecx
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  000ab	8b 45 f8	 mov	 eax, DWORD PTR _x_sec$[ebp]
  000ae	99		 cdq
  000af	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  000b5	89 45 f8	 mov	 DWORD PTR _x_sec$[ebp], eax

; 120  : 	get_z_sector (z_sec, pos->z);

  000b8	8d 45 f4	 lea	 eax, DWORD PTR _z_sec$[ebp]
  000bb	50		 push	 eax
  000bc	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  000bf	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  000c4	51		 push	 ecx
  000c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ca	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  000cf	8b 45 f4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  000d2	99		 cdq
  000d3	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  000d9	89 45 f4	 mov	 DWORD PTR _z_sec$[ebp], eax

; 121  : 
; 122  : 	en = get_local_raw_sector_entity(x_sec, z_sec);

  000dc	8b 45 f4	 mov	 eax, DWORD PTR _z_sec$[ebp]
  000df	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  000e6	03 45 f8	 add	 eax, DWORD PTR _x_sec$[ebp]
  000e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  000ef	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  000f3	74 1a		 je	 SHORT $LN7@get_local_
  000f5	8b 55 f4	 mov	 edx, DWORD PTR _z_sec$[ebp]
  000f8	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  000ff	03 55 f8	 add	 edx, DWORD PTR _x_sec$[ebp]
  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00107	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0010a	89 4d b0	 mov	 DWORD PTR tv139[ebp], ecx
  0010d	eb 21		 jmp	 SHORT $LN8@get_local_
$LN7@get_local_:
  0010f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z@4JA
  00115	83 c2 12	 add	 edx, 18			; 00000012H
  00118	52		 push	 edx
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00129	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN8@get_local_:
  00130	8b 4d b0	 mov	 ecx, DWORD PTR tv139[ebp]
  00133	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 123  : 
; 124  : 	ASSERT (en);

  00136	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0013a	75 18		 jne	 SHORT $LN5@get_local_
  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z@4JA
  00141	83 c0 14	 add	 eax, 20			; 00000014H
  00144	50		 push	 eax
  00145	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DJFEFGMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  0014f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 125  : 
; 126  : 	return (en);

  00154	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]

; 127  : }

  00157	5f		 pop	 edi
  00158	5e		 pop	 esi
  00159	5b		 pop	 ebx
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c2 04 00	 ret	 4
?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ENDP ; get_local_sector_entity
_TEXT	ENDS
END
