; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\area\ar_org.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_area_ui_object_origin_functions@@YGXH@Z ; overload_area_ui_object_origin_functions
EXTRN	?fn_set_ui_object_x_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_origin
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_set_ui_object_y_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_org.c
;	COMDAT ?get_area_ui_object_y_origin@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv95 = -80						; size = 4
_py$ = -12						; size = 4
_parent$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_y_origin@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_y_origin, COMDAT

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 146  : 	
; 147  : 	area_ui_object
; 148  : 		*area;
; 149  : 
; 150  : 	ui_object
; 151  : 		*parent;
; 152  : 
; 153  : 	float
; 154  : 		py = 0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f4	 movss	 DWORD PTR _py$[ebp], xmm0

; 155  : 
; 156  : 	parent = get_ui_object_parent (obj);

  00011	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 157  : 
; 158  : 	if (parent)

  00026	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0002a	74 15		 je	 SHORT $LN2@get_area_u

; 159  : 	{
; 160  : 
; 161  : 		py = get_ui_object_y_origin (parent);

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0003c	ff d0		 call	 eax
  0003e	d9 5d f4	 fstp	 DWORD PTR _py$[ebp]
$LN2@get_area_u:

; 162  : 	}
; 163  : 
; 164  : 	area = (area_ui_object *) obj->data;

  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00047	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 165  : 
; 166  : 	return area->y_origin + py;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0004d	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00052	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _py$[ebp]
  00057	f3 0f 11 45 b0	 movss	 DWORD PTR tv95[ebp], xmm0
  0005c	d9 45 b0	 fld	 DWORD PTR tv95[ebp]

; 167  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?get_area_ui_object_y_origin@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_y_origin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_org.c
;	COMDAT ?set_area_ui_object_y_origin@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y_origin$ = 12						; size = 4
?set_area_ui_object_y_origin@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_y_origin, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 125  : 	
; 126  : 	area_ui_object
; 127  : 		*area;
; 128  : 
; 129  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 130  : 
; 131  : 	if (area->y_origin != y_origin)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  0001a	0f 2e 45 0c	 ucomiss xmm0, DWORD PTR _y_origin$[ebp]
  0001e	9f		 lahf
  0001f	f6 c4 44	 test	 ah, 68			; 00000044H
  00022	7b 21		 jnp	 SHORT $LN2@set_area_u

; 132  : 	{
; 133  : 						
; 134  : 		area->y_origin = y_origin;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00027	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  0002c	f3 0f 11 40 34	 movss	 DWORD PTR [eax+52], xmm0

; 135  : 	
; 136  : 		set_ui_object_redraw (obj, TRUE);

  00031	6a 01		 push	 1
  00033	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00043	ff d0		 call	 eax
$LN2@set_area_u:

; 137  : 	}
; 138  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?set_area_ui_object_y_origin@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_y_origin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_org.c
;	COMDAT ?get_area_ui_object_x_origin@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv95 = -80						; size = 4
_px$ = -12						; size = 4
_parent$ = -8						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_x_origin@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_x_origin, COMDAT

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 96   : 	
; 97   : 	area_ui_object
; 98   : 		*area;
; 99   : 
; 100  : 	ui_object
; 101  : 		*parent;
; 102  : 
; 103  : 	float
; 104  : 		px = 0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f4	 movss	 DWORD PTR _px$[ebp], xmm0

; 105  : 
; 106  : 	parent = get_ui_object_parent (obj);

  00011	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 107  : 
; 108  : 	if (parent)

  00026	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0002a	74 15		 je	 SHORT $LN2@get_area_u

; 109  : 	{
; 110  : 
; 111  : 		px = get_ui_object_x_origin (parent);

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0003c	ff d0		 call	 eax
  0003e	d9 5d f4	 fstp	 DWORD PTR _px$[ebp]
$LN2@get_area_u:

; 112  : 	}
; 113  : 
; 114  : 	area = (area_ui_object *) obj->data;

  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00047	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 115  : 
; 116  : 	return area->x_origin + px;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  0004d	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  00052	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _px$[ebp]
  00057	f3 0f 11 45 b0	 movss	 DWORD PTR tv95[ebp], xmm0
  0005c	d9 45 b0	 fld	 DWORD PTR tv95[ebp]

; 117  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?get_area_ui_object_x_origin@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_x_origin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_org.c
;	COMDAT ?set_area_ui_object_x_origin@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x_origin$ = 12						; size = 4
?set_area_ui_object_x_origin@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_x_origin, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 	
; 76   : 	area_ui_object
; 77   : 		*area;
; 78   : 
; 79   : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 80   : 
; 81   : 	if (area->x_origin != x_origin)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  0001a	0f 2e 45 0c	 ucomiss xmm0, DWORD PTR _x_origin$[ebp]
  0001e	9f		 lahf
  0001f	f6 c4 44	 test	 ah, 68			; 00000044H
  00022	7b 21		 jnp	 SHORT $LN2@set_area_u

; 82   : 	{
; 83   : 					
; 84   : 		area->x_origin = x_origin;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00027	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_origin$[ebp]
  0002c	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 85   : 	
; 86   : 		set_ui_object_redraw (obj, TRUE);

  00031	6a 01		 push	 1
  00033	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00043	ff d0		 call	 eax
$LN2@set_area_u:

; 87   : 	}
; 88   : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?set_area_ui_object_x_origin@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_x_origin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_org.c
;	COMDAT ?overload_area_ui_object_origin_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_area_ui_object_origin_functions@@YGXH@Z PROC	; overload_area_ui_object_origin_functions, COMDAT

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 175  : 
; 176  : 	fn_set_ui_object_x_origin [type] = set_area_ui_object_x_origin;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_x_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_x_origin@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_x_origin

; 177  : 
; 178  : 	fn_get_ui_object_x_origin [type] = get_area_ui_object_x_origin;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_x_origin@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_x_origin

; 179  : 
; 180  : 	fn_set_ui_object_y_origin [type] = set_area_ui_object_y_origin;

  00025	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00028	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_y_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_y_origin@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_y_origin

; 181  : 
; 182  : 	fn_get_ui_object_y_origin [type] = get_area_ui_object_y_origin;

  00033	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00036	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_y_origin@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_y_origin

; 183  : }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?overload_area_ui_object_origin_functions@@YGXH@Z ENDP	; overload_area_ui_object_origin_functions
_TEXT	ENDS
END
