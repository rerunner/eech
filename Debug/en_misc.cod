; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\en_misc\en_misc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z	; quicksort_entity_list
PUBLIC	?__LINE__Var@?0??quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z@4JA ; `quicksort_entity_list'::`1'::__LINE__Var
PUBLIC	??_C@_0EF@PGFMECHF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_07CDIPELON@en_list@			; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_07CDIPELON@en_list@
CONST	SEGMENT
??_C@_07CDIPELON@en_list@ DB 'en_list', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@PGFMECHF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EF@PGFMECHF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\en_misc\en_misc.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z@4JA DD 07dH ; `quicksort_entity_list'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_misc.c
;	COMDAT ?qs@@YGXPAPAUENTITY@@PAMHH@Z
_TEXT	SEGMENT
_temp$ = -20						; size = 4
_y$ = -16						; size = 4
_x$ = -12						; size = 4
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_en_list$ = 8						; size = 4
_sort_order$ = 12					; size = 4
_left$ = 16						; size = 4
_right$ = 20						; size = 4
?qs@@YGXPAPAUENTITY@@PAMHH@Z PROC			; qs, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   :    int
; 82   :       i, j;
; 83   : 
; 84   :    float
; 85   :       x, y;
; 86   : 
; 87   :    entity
; 88   :       *temp;
; 89   : 
; 90   :    i = left;

  00009	8b 45 10	 mov	 eax, DWORD PTR _left$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax

; 91   :    j = right;

  0000f	8b 45 14	 mov	 eax, DWORD PTR _right$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR _j$[ebp], eax

; 92   : 
; 93   :    x = sort_order [(left + right) / 2];

  00015	8b 45 10	 mov	 eax, DWORD PTR _left$[ebp]
  00018	03 45 14	 add	 eax, DWORD PTR _right$[ebp]
  0001b	99		 cdq
  0001c	2b c2		 sub	 eax, edx
  0001e	d1 f8		 sar	 eax, 1
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _sort_order$[ebp]
  00023	f3 0f 10 04 81	 movss	 xmm0, DWORD PTR [ecx+eax*4]
  00028	f3 0f 11 45 f4	 movss	 DWORD PTR _x$[ebp], xmm0
$LN4@qs:

; 94   : 
; 95   :    do
; 96   :    {
; 97   :       while (sort_order [i] > x && i < right) i++;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00030	8b 4d 0c	 mov	 ecx, DWORD PTR _sort_order$[ebp]
  00033	f3 0f 10 04 81	 movss	 xmm0, DWORD PTR [ecx+eax*4]
  00038	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _x$[ebp]
  0003c	76 13		 jbe	 SHORT $LN6@qs
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00041	3b 45 14	 cmp	 eax, DWORD PTR _right$[ebp]
  00044	7d 0b		 jge	 SHORT $LN6@qs
  00046	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00049	83 c0 01	 add	 eax, 1
  0004c	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
  0004f	eb dc		 jmp	 SHORT $LN4@qs
$LN6@qs:

; 98   :       while (x > sort_order [j] && j > left) j--;

  00051	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR _sort_order$[ebp]
  00057	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  0005c	0f 2f 04 81	 comiss	 xmm0, DWORD PTR [ecx+eax*4]
  00060	76 13		 jbe	 SHORT $LN8@qs
  00062	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  00065	3b 45 10	 cmp	 eax, DWORD PTR _left$[ebp]
  00068	7e 0b		 jle	 SHORT $LN8@qs
  0006a	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  0006d	83 e8 01	 sub	 eax, 1
  00070	89 45 f8	 mov	 DWORD PTR _j$[ebp], eax
  00073	eb dc		 jmp	 SHORT $LN6@qs
$LN8@qs:

; 99   : 
; 100  :       if (i <= j)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00078	3b 45 f8	 cmp	 eax, DWORD PTR _j$[ebp]
  0007b	7f 6e		 jg	 SHORT $LN9@qs

; 101  :       {
; 102  :          y = sort_order [i];

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00080	8b 4d 0c	 mov	 ecx, DWORD PTR _sort_order$[ebp]
  00083	f3 0f 10 04 81	 movss	 xmm0, DWORD PTR [ecx+eax*4]
  00088	f3 0f 11 45 f0	 movss	 DWORD PTR _y$[ebp], xmm0

; 103  :          sort_order [i] = sort_order [j];

  0008d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00090	8b 4d 0c	 mov	 ecx, DWORD PTR _sort_order$[ebp]
  00093	8b 55 f8	 mov	 edx, DWORD PTR _j$[ebp]
  00096	8b 75 0c	 mov	 esi, DWORD PTR _sort_order$[ebp]
  00099	8b 14 96	 mov	 edx, DWORD PTR [esi+edx*4]
  0009c	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx

; 104  :          sort_order [j] = y;

  0009f	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  000a2	8b 4d 0c	 mov	 ecx, DWORD PTR _sort_order$[ebp]
  000a5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y$[ebp]
  000aa	f3 0f 11 04 81	 movss	 DWORD PTR [ecx+eax*4], xmm0

; 105  : 
; 106  :          temp = en_list [i];

  000af	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000b2	8b 4d 08	 mov	 ecx, DWORD PTR _en_list$[ebp]
  000b5	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  000b8	89 55 ec	 mov	 DWORD PTR _temp$[ebp], edx

; 107  :          en_list [i] = en_list [j];

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000be	8b 4d 08	 mov	 ecx, DWORD PTR _en_list$[ebp]
  000c1	8b 55 f8	 mov	 edx, DWORD PTR _j$[ebp]
  000c4	8b 75 08	 mov	 esi, DWORD PTR _en_list$[ebp]
  000c7	8b 14 96	 mov	 edx, DWORD PTR [esi+edx*4]
  000ca	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx

; 108  :          en_list [j] = temp;

  000cd	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _en_list$[ebp]
  000d3	8b 55 ec	 mov	 edx, DWORD PTR _temp$[ebp]
  000d6	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx

; 109  :          
; 110  :          i++;

  000d9	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000dc	83 c0 01	 add	 eax, 1
  000df	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax

; 111  :          j--;

  000e2	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  000e5	83 e8 01	 sub	 eax, 1
  000e8	89 45 f8	 mov	 DWORD PTR _j$[ebp], eax
$LN9@qs:

; 112  :       }
; 113  :    }
; 114  : 	while (i <= j);

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000ee	3b 45 f8	 cmp	 eax, DWORD PTR _j$[ebp]
  000f1	0f 8e 36 ff ff
	ff		 jle	 $LN4@qs

; 115  : 
; 116  :    if (left < j) qs (en_list, sort_order, left, j);

  000f7	8b 45 10	 mov	 eax, DWORD PTR _left$[ebp]
  000fa	3b 45 f8	 cmp	 eax, DWORD PTR _j$[ebp]
  000fd	7d 15		 jge	 SHORT $LN10@qs
  000ff	8b 45 f8	 mov	 eax, DWORD PTR _j$[ebp]
  00102	50		 push	 eax
  00103	8b 4d 10	 mov	 ecx, DWORD PTR _left$[ebp]
  00106	51		 push	 ecx
  00107	8b 55 0c	 mov	 edx, DWORD PTR _sort_order$[ebp]
  0010a	52		 push	 edx
  0010b	8b 45 08	 mov	 eax, DWORD PTR _en_list$[ebp]
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ?qs@@YGXPAPAUENTITY@@PAMHH@Z ; qs
$LN10@qs:

; 117  :    if (i < right) qs (en_list, sort_order, i, right);

  00114	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00117	3b 45 14	 cmp	 eax, DWORD PTR _right$[ebp]
  0011a	7d 15		 jge	 SHORT $LN11@qs
  0011c	8b 45 14	 mov	 eax, DWORD PTR _right$[ebp]
  0011f	50		 push	 eax
  00120	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00123	51		 push	 ecx
  00124	8b 55 0c	 mov	 edx, DWORD PTR _sort_order$[ebp]
  00127	52		 push	 edx
  00128	8b 45 08	 mov	 eax, DWORD PTR _en_list$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?qs@@YGXPAPAUENTITY@@PAMHH@Z ; qs
$LN11@qs:

; 118  : }

  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c2 10 00	 ret	 16			; 00000010H
?qs@@YGXPAPAUENTITY@@PAMHH@Z ENDP			; qs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\en_misc\en_misc.c
;	COMDAT ?quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z
_TEXT	SEGMENT
_en_list$ = 8						; size = 4
_count$ = 12						; size = 4
_sort_order$ = 16					; size = 4
?quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z PROC	; quicksort_entity_list, COMDAT

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 126  : 	ASSERT (en_list);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en_list$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@quicksort_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@PGFMECHF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_07CDIPELON@en_list@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@quicksort_:

; 127  : 
; 128  :    qs (en_list, sort_order, 0, count - 1);

  00027	8b 45 0c	 mov	 eax, DWORD PTR _count$[ebp]
  0002a	83 e8 01	 sub	 eax, 1
  0002d	50		 push	 eax
  0002e	6a 00		 push	 0
  00030	8b 4d 10	 mov	 ecx, DWORD PTR _sort_order$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR _en_list$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ?qs@@YGXPAPAUENTITY@@PAMHH@Z ; qs

; 129  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 0c 00	 ret	 12			; 0000000cH
?quicksort_entity_list@@YGXPAPAUENTITY@@HPAM@Z ENDP	; quicksort_entity_list
_TEXT	ENDS
END
