; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_person_update_functions@@YGXXZ	; overload_person_update_functions
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0FD@DBJIJOKA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA ; `update_client'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?update_entity_weapon_systems@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_systems
EXTRN	?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_system_weapon_and_target_vectors
EXTRN	?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_system_ready
EXTRN	?update_vehicle_target_scan@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_target_scan
EXTRN	?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_fire
EXTRN	?update_vehicle_decoy_release@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_decoy_release
EXTRN	?update_person_animation@@YGXPAUENTITY@@@Z:PROC	; update_person_animation
EXTRN	?person_movement@@YGXPAUENTITY@@@Z:PROC		; person_movement
EXTRN	?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_view_interest_level
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity_family
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA DD 095H ; `update_client'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FD@DBJIJOKA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FD@DBJIJOKA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\person'
	DB	'\ps_updt.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 050H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv138 = -80						; size = 4
$T1 = -76						; size = 4
_raw$ = -8						; size = 4
_loop$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 150  : 	int
; 151  : 		loop;
; 152  : 
; 153  : 	person
; 154  : 		*raw;
; 155  : 
; 156  : 	raw = (person *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 157  : 
; 158  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 159  : 
; 160  : 	raw->vh.sleep -= get_delta_time ();

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  00026	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00031	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 161  : 
; 162  : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  00041	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  00048	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00054	8b 55 f8	 mov	 edx, DWORD PTR _raw$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 163  : 
; 164  : 	if (raw->vh.mob.alive)

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	74 4c		 je	 SHORT $LN5@update_cli

; 165  : 	{
; 166  : 
; 167  : 		//
; 168  : 		// Update
; 169  : 		//
; 170  : 
; 171  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00071	eb 09		 jmp	 SHORT $LN4@update_cli
$LN2@update_cli:
  00073	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00076	83 c0 01	 add	 eax, 1
  00079	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_cli:
  0007c	83 7d fc 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00080	7d 0b		 jge	 SHORT $LN3@update_cli

; 172  : 		{
; 173  : 
; 174  : 			person_movement (en);

  00082	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?person_movement@@YGXPAUENTITY@@@Z ; person_movement

; 175  : 		}

  0008b	eb e6		 jmp	 SHORT $LN2@update_cli
$LN3@update_cli:

; 176  : 
; 177  : 		////////////////////////////////////////
; 178  : 
; 179  : 		update_person_animation (en);

  0008d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?update_person_animation@@YGXPAUENTITY@@@Z ; update_person_animation

; 180  : 
; 181  : 		////////////////////////////////////////
; 182  : 
; 183  : 		////////////////////////////////////////
; 184  : 		//
; 185  : 		// ORDER IS CRITICAL
; 186  : 		//
; 187  : 
; 188  : 		update_vehicle_weapon_system_ready (en);

  00096	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 189  : 
; 190  : 		update_entity_weapon_systems (en);

  0009f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 191  : 
; 192  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  000a8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 193  : 
; 194  : 		//
; 195  : 		////////////////////////////////////////
; 196  : 	}
; 197  : 	else

  000b1	e9 85 00 00 00	 jmp	 $LN7@update_cli
$LN5@update_cli:

; 198  : 	{
; 199  : 		update_person_animation (en);

  000b6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?update_person_animation@@YGXPAUENTITY@@@Z ; update_person_animation

; 200  : 
; 201  : 		raw->vh.death_timer -= get_delta_time ();

  000bf	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000c2	f3 0f 10 80 10
	01 00 00	 movss	 xmm0, DWORD PTR [eax+272]
  000ca	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000d2	8b 4d f8	 mov	 ecx, DWORD PTR _raw$[ebp]
  000d5	f3 0f 11 81 10
	01 00 00	 movss	 DWORD PTR [ecx+272], xmm0

; 202  : 
; 203  : 		if (raw->vh.death_timer <= 0.0)

  000dd	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000e0	f3 0f 5a 80 10
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+272]
  000e8	0f 57 c9	 xorps	 xmm1, xmm1
  000eb	66 0f 2f c8	 comisd	 xmm1, xmm0
  000ef	72 4a		 jb	 SHORT $LN7@update_cli

; 204  : 		{
; 205  : 			destroy_client_server_entity_family (en);

  000f1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000f5	74 0a		 je	 SHORT $LN9@update_cli
  000f7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fc	89 4d b0	 mov	 DWORD PTR tv138[ebp], ecx
  000ff	eb 21		 jmp	 SHORT $LN10@update_cli
$LN9@update_cli:
  00101	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00107	83 c2 38	 add	 edx, 56			; 00000038H
  0010a	52		 push	 edx
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@DBJIJOKA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00110	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN10@update_cli:
  00122	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00125	51		 push	 ecx
  00126	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0012c	c1 e2 02	 shl	 edx, 2
  0012f	8b 45 b0	 mov	 eax, DWORD PTR tv138[ebp]
  00132	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00139	ff d1		 call	 ecx
$LN7@update_cli:

; 206  : 		}
; 207  : 	}
; 208  : }

  0013b	5f		 pop	 edi
  0013c	5e		 pop	 esi
  0013d	5b		 pop	 ebx
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv141 = -80						; size = 4
$T1 = -76						; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	person
; 82   : 		*raw;
; 83   : 
; 84   : 	int
; 85   : 		loop;
; 86   : 
; 87   : 	raw = (person *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 88   : 
; 89   : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 90   : 
; 91   : 	raw->vh.sleep -= get_delta_time ();

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  00026	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00031	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 92   : 
; 93   : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  00041	8d 45 b4	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00048	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00054	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 94   : 
; 95   : 	if (raw->vh.mob.alive)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	74 67		 je	 SHORT $LN5@update_ser

; 96   : 	{
; 97   : 		//
; 98   : 		// Update
; 99   : 		//
; 100  : 
; 101  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00071	eb 09		 jmp	 SHORT $LN4@update_ser
$LN2@update_ser:
  00073	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00076	83 c0 01	 add	 eax, 1
  00079	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_ser:
  0007c	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00080	7d 0b		 jge	 SHORT $LN3@update_ser

; 102  : 		{
; 103  : 
; 104  : 			person_movement (en);

  00082	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?person_movement@@YGXPAUENTITY@@@Z ; person_movement

; 105  : 		}

  0008b	eb e6		 jmp	 SHORT $LN2@update_ser
$LN3@update_ser:

; 106  : 
; 107  : 		////////////////////////////////////////
; 108  : 
; 109  : 		update_person_animation (en);

  0008d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?update_person_animation@@YGXPAUENTITY@@@Z ; update_person_animation

; 110  : 
; 111  : 		////////////////////////////////////////
; 112  : 		//
; 113  : 		// ORDER IS CRITICAL
; 114  : 		//
; 115  : 
; 116  : 		update_vehicle_target_scan (en);

  00096	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?update_vehicle_target_scan@@YGXPAUENTITY@@@Z ; update_vehicle_target_scan

; 117  : 
; 118  : 		update_vehicle_weapon_system_ready (en);

  0009f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 119  : 
; 120  : 		update_entity_weapon_systems (en);

  000a8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 121  : 
; 122  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  000b1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 123  : 
; 124  : 		update_vehicle_weapon_fire (en);

  000ba	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_fire

; 125  : 
; 126  : 		update_vehicle_decoy_release (en);

  000c3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?update_vehicle_decoy_release@@YGXPAUENTITY@@@Z ; update_vehicle_decoy_release

; 127  : 
; 128  : 		//
; 129  : 		////////////////////////////////////////
; 130  : 	}
; 131  : 	else

  000cc	e9 85 00 00 00	 jmp	 $LN7@update_ser
$LN5@update_ser:

; 132  : 	{
; 133  : 		update_person_animation (en);

  000d1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ?update_person_animation@@YGXPAUENTITY@@@Z ; update_person_animation

; 134  : 
; 135  : 		raw->vh.death_timer -= get_delta_time ();

  000da	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000dd	f3 0f 10 80 10
	01 00 00	 movss	 xmm0, DWORD PTR [eax+272]
  000e5	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000f0	f3 0f 11 81 10
	01 00 00	 movss	 DWORD PTR [ecx+272], xmm0

; 136  : 
; 137  : 		if (raw->vh.death_timer <= 0.0)

  000f8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000fb	f3 0f 5a 80 10
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+272]
  00103	0f 57 c9	 xorps	 xmm1, xmm1
  00106	66 0f 2f c8	 comisd	 xmm1, xmm0
  0010a	72 4a		 jb	 SHORT $LN7@update_ser

; 138  : 		{
; 139  : 			destroy_client_server_entity_family (en);

  0010c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00110	74 0a		 je	 SHORT $LN9@update_ser
  00112	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	89 4d b0	 mov	 DWORD PTR tv141[ebp], ecx
  0011a	eb 21		 jmp	 SHORT $LN10@update_ser
$LN9@update_ser:
  0011c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  00122	83 c2 3b	 add	 edx, 59			; 0000003bH
  00125	52		 push	 edx
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@DBJIJOKA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00136	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN10@update_ser:
  0013d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00140	51		 push	 ecx
  00141	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00147	c1 e2 02	 shl	 edx, 2
  0014a	8b 45 b0	 mov	 eax, DWORD PTR tv141[ebp]
  0014d	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  00154	ff d1		 call	 ecx
$LN7@update_ser:

; 140  : 		}
; 141  : 	}
; 142  : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_updt.c
;	COMDAT ?overload_person_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_person_update_functions@@YGXXZ PROC		; overload_person_update_functions, COMDAT

; 215  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 216  : 	fn_update_client_server_entity[ENTITY_TYPE_PERSON][COMMS_MODEL_SERVER]	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 13	 imul	 ecx, eax, 19
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 217  : 
; 218  : 	fn_update_client_server_entity[ENTITY_TYPE_PERSON][COMMS_MODEL_CLIENT]	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 13	 imul	 ecx, eax, 19
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 219  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_person_update_functions@@YGXXZ ENDP		; overload_person_update_functions
_TEXT	ENDS
END
