; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\fixed\pylon\py_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_cosf
PUBLIC	_sinf
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?overload_pylon_draw_functions@@YGXXZ		; overload_pylon_draw_functions
PUBLIC	?draw_local_2d_symbol@@YGXPAUENTITY@@@Z		; draw_local_2d_symbol
PUBLIC	?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA ; `draw_local_3d_object'::`1'::__LINE__Var
PUBLIC	??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	__real@402c000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@4089000000000000
PUBLIC	__real@4099000000000000
PUBLIC	__real@40af400000000000
PUBLIC	__real@40c00000
EXTRN	_memcpy:PROC
EXTRN	_cos:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z:PROC ; get_3d_transformation_matrix_from_face_normal_and_heading
EXTRN	?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z:PROC ; set_2d_instance_position
EXTRN	?draw_2d_square@@YGXUREAL_COLOUR@@@Z:PROC	; draw_2d_square
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?insert_zbiased_polyline_into_3d_scene@@YGHHMHUREAL_COLOUR@@PAUVEC3D@@@Z:PROC ; insert_zbiased_polyline_into_3d_scene
EXTRN	?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z:PROC ; construct_temporary_3d_object
EXTRN	?get_3d_terrain_face_normal@@YGXPAUVEC3D@@MM@Z:PROC ; get_3d_terrain_face_normal
EXTRN	?get_pylon_sag_value@@YGMH@Z:PROC		; get_pylon_sag_value
EXTRN	?get_pylon_sub_type@@YG?AW4PYLON_TYPES@@H@Z:PROC ; get_pylon_sub_type
EXTRN	?sys_col_yellow@@3UREAL_COLOUR@@A:DWORD		; sys_col_yellow
EXTRN	?active_2d_environment@@3PAUENV_2D@@A:DWORD	; active_2d_environment
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA:BYTE ; fn_draw_local_entity_3d_object
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?fixed_database@@3QBUFIXED_DATA@@B:BYTE		; fixed_database
EXTRN	?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A:BYTE ; pylon_attachment_database
EXTRN	__fltused:DWORD
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40af400000000000
CONST	SEGMENT
__real@40af400000000000 DQ 040af400000000000r	; 4000
CONST	ENDS
;	COMDAT __real@4099000000000000
CONST	SEGMENT
__real@4099000000000000 DQ 04099000000000000r	; 1600
CONST	ENDS
;	COMDAT __real@4089000000000000
CONST	SEGMENT
__real@4089000000000000 DQ 04089000000000000r	; 800
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@402c000000000000
CONST	SEGMENT
__real@402c000000000000 DQ 0402c000000000000r	; 14
CONST	ENDS
;	COMDAT ??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\fixed\pylon\py_draw.c'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA DD 050H ; `draw_local_3d_object'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\pylon\py_draw.c
;	COMDAT ?draw_local_2d_symbol@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?draw_local_2d_symbol@@YGXPAUENTITY@@@Z PROC		; draw_local_2d_symbol, COMDAT

; 322  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 323  : 	pylon
; 324  : 		*raw;
; 325  : 
; 326  : 	raw = (pylon *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 327  : 
; 328  : 	if (!raw->fix.alive)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00018	c1 e9 14	 shr	 ecx, 20			; 00000014H
  0001b	83 e1 01	 and	 ecx, 1
  0001e	75 02		 jne	 SHORT $LN2@draw_local

; 329  : 	{
; 330  : 		return;

  00020	eb 43		 jmp	 SHORT $LN1@draw_local
$LN2@draw_local:

; 331  : 	}
; 332  : 
; 333  : 	//
; 334  : 	// Debug
; 335  : 	//
; 336  : 
; 337  : 	if ((int) en % 5)

  00022	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00025	99		 cdq
  00026	b9 05 00 00 00	 mov	 ecx, 5
  0002b	f7 f9		 idiv	 ecx
  0002d	85 d2		 test	 edx, edx
  0002f	74 02		 je	 SHORT $LN3@draw_local

; 338  : 	{
; 339  : 
; 340  : 		return;

  00031	eb 32		 jmp	 SHORT $LN1@draw_local
$LN3@draw_local:

; 341  : 	}
; 342  : 
; 343  : 	//
; 344  : 	//
; 345  : 	//
; 346  : 
; 347  : 	set_2d_instance_position (active_2d_environment, raw->fix.position.x, raw->fix.position.z);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00036	51		 push	 ecx
  00037	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0003c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00044	51		 push	 ecx
  00045	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00049	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_2d_environment@@3PAUENV_2D@@A ; active_2d_environment
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 ?set_2d_instance_position@@YGXPAUENV_2D@@MM@Z ; set_2d_instance_position

; 348  : 
; 349  : 	draw_2d_square (sys_col_yellow);

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_yellow@@3UREAL_COLOUR@@A ; sys_col_yellow
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?draw_2d_square@@YGXUREAL_COLOUR@@@Z ; draw_2d_square
$LN1@draw_local:

; 350  : }

  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
?draw_local_2d_symbol@@YGXPAUENTITY@@@Z ENDP		; draw_local_2d_symbol
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\pylon\py_draw.c
;	COMDAT ?draw_local_3d_object@@YGXPAUENTITY@@M@Z
_TEXT	SEGMENT
tv692 = -236						; size = 8
tv491 = -236						; size = 4
tv208 = -236						; size = 4
tv137 = -236						; size = 4
tv725 = -232						; size = 4
tv712 = -232						; size = 4
tv665 = -232						; size = 4
tv652 = -232						; size = 4
tv642 = -232						; size = 4
tv629 = -232						; size = 4
tv483 = -232						; size = 4
tv200 = -232						; size = 4
tv129 = -232						; size = 4
_cable_colour$ = -164					; size = 4
_cable_detail_level$ = -157				; size = 1
_pos$ = -156						; size = 72
_d$ = -84						; size = 12
_next_pylon_type$ = -72					; size = 4
_this_pylon_type$ = -68					; size = 4
_point_loop$ = -64					; size = 4
_cable_loop$ = -60					; size = 4
_next_pylon_offset$ = -56				; size = 12
_this_pylon_offset$ = -44				; size = 12
_face_normal$ = -32					; size = 12
_next_pylon_heading$ = -20				; size = 4
_this_pylon_heading$ = -16				; size = 4
_inst3d$ = -12						; size = 4
_succ$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_range$ = 12						; size = 4
?draw_local_3d_object@@YGXPAUENTITY@@M@Z PROC		; draw_local_3d_object, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 81   : 	pylon
; 82   : 		*raw,
; 83   : 		*succ;
; 84   : 
; 85   : 	object_3d_instance
; 86   : 		*inst3d;
; 87   : 
; 88   : 	float
; 89   : 		this_pylon_heading,
; 90   : 		next_pylon_heading;
; 91   : 
; 92   : 	vec3d
; 93   : 		face_normal,
; 94   : 		this_pylon_offset,
; 95   : 		next_pylon_offset;
; 96   : 
; 97   : 	int
; 98   : 		cable_loop,
; 99   : 		point_loop,
; 100  : 		this_pylon_type,
; 101  : 		next_pylon_type;
; 102  : 
; 103  : 	vec3d
; 104  : 		d,
; 105  : 		pos [NUMBER_OF_PYLON_CABLE_POINTS];
; 106  : 
; 107  : 	char
; 108  : 		cable_detail_level;
; 109  : 
; 110  : 	rgb_colour
; 111  : 		cable_colour;
; 112  : 
; 113  : 	raw = (pylon *) get_local_entity_data (en);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 114  : 
; 115  : 	if (raw->fix.alive)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00018	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0001b	c1 e9 14	 shr	 ecx, 20			; 00000014H
  0001e	83 e1 01	 and	 ecx, 1
  00021	0f 84 91 07 00
	00		 je	 $LN14@draw_local

; 116  : 	{
; 117  : 		//
; 118  : 		// draw pylon object
; 119  : 		//
; 120  : 
; 121  : 		inst3d = construct_temporary_3d_object (raw->fix.object_3d_shape, FALSE);

  00027	6a 00		 push	 0
  00029	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0002c	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0002f	c1 e9 08	 shr	 ecx, 8
  00032	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z ; construct_temporary_3d_object
  0003e	89 45 f4	 mov	 DWORD PTR _inst3d$[ebp], eax

; 122  : 
; 123  : 		if (inst3d)

  00041	83 7d f4 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00045	0f 84 68 07 00
	00		 je	 $LN12@draw_local

; 124  : 		{
; 125  : 			//
; 126  : 			// cable colour
; 127  : 			//
; 128  : 
; 129  : 			cable_colour.r = 96;

  0004b	c6 85 5e ff ff
	ff 60		 mov	 BYTE PTR _cable_colour$[ebp+2], 96 ; 00000060H

; 130  : 			cable_colour.g = 96;

  00052	c6 85 5d ff ff
	ff 60		 mov	 BYTE PTR _cable_colour$[ebp+1], 96 ; 00000060H

; 131  : 			cable_colour.b = 96;

  00059	c6 85 5c ff ff
	ff 60		 mov	 BYTE PTR _cable_colour$[ebp], 96 ; 00000060H

; 132  : 			cable_colour.a = 255;

  00060	c6 85 5f ff ff
	ff ff		 mov	 BYTE PTR _cable_colour$[ebp+3], 255 ; 000000ffH

; 133  : 
; 134  : 			//
; 135  : 			// cable approximations
; 136  : 			//
; 137  : 
; 138  : 			if (range < CABLE_APPROXIMATION_DISTANCE_1)

  00067	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  0006c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4089000000000000
  00074	66 0f 2f c8	 comisd	 xmm1, xmm0
  00078	76 09		 jbe	 SHORT $LN17@draw_local

; 139  : 			{
; 140  : 				cable_detail_level = 3;

  0007a	c6 85 63 ff ff
	ff 03		 mov	 BYTE PTR _cable_detail_level$[ebp], 3
  00081	eb 3f		 jmp	 SHORT $LN22@draw_local
$LN17@draw_local:

; 141  : 			}
; 142  : 			else if (range < CABLE_APPROXIMATION_DISTANCE_2)

  00083	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  00088	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4099000000000000
  00090	66 0f 2f c8	 comisd	 xmm1, xmm0
  00094	76 09		 jbe	 SHORT $LN19@draw_local

; 143  : 			{
; 144  : 				cable_detail_level = 2;

  00096	c6 85 63 ff ff
	ff 02		 mov	 BYTE PTR _cable_detail_level$[ebp], 2
  0009d	eb 23		 jmp	 SHORT $LN22@draw_local
$LN19@draw_local:

; 145  : 			}
; 146  : 			else if (range < CABLE_APPROXIMATION_DISTANCE_3)

  0009f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  000a4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40af400000000000
  000ac	66 0f 2f c8	 comisd	 xmm1, xmm0
  000b0	76 09		 jbe	 SHORT $LN21@draw_local

; 147  : 			{
; 148  : 				cable_detail_level = 1;

  000b2	c6 85 63 ff ff
	ff 01		 mov	 BYTE PTR _cable_detail_level$[ebp], 1

; 149  : 			}
; 150  : 			else

  000b9	eb 07		 jmp	 SHORT $LN22@draw_local
$LN21@draw_local:

; 151  : 			{
; 152  : 				cable_detail_level = 0;

  000bb	c6 85 63 ff ff
	ff 00		 mov	 BYTE PTR _cable_detail_level$[ebp], 0
$LN22@draw_local:

; 153  : 			}
; 154  : 
; 155  : 			memcpy (&inst3d->vp.position, &raw->fix.position, sizeof (vec3d));

  000c2	6a 0c		 push	 12			; 0000000cH
  000c4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c7	50		 push	 eax
  000c8	8b 4d f4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  000cb	83 c1 08	 add	 ecx, 8
  000ce	51		 push	 ecx
  000cf	e8 00 00 00 00	 call	 _memcpy
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 156  : 
; 157  : 			this_pylon_heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  000d7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000db	74 0d		 je	 SHORT $LN34@draw_local
  000dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e2	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv129[ebp], ecx
  000e8	eb 24		 jmp	 SHORT $LN35@draw_local
$LN34@draw_local:
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  000f0	83 c2 4d	 add	 edx, 77			; 0000004dH
  000f3	52		 push	 edx
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN35@draw_local:
  0010e	b9 01 00 00 00	 mov	 ecx, 1
  00113	85 c9		 test	 ecx, ecx
  00115	74 0c		 je	 SHORT $LN36@draw_local
  00117	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv137[ebp], 52 ; 00000034H
  00121	eb 24		 jmp	 SHORT $LN37@draw_local
$LN36@draw_local:
  00123	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00129	83 c2 4d	 add	 edx, 77			; 0000004dH
  0012c	52		 push	 edx
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013d	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN37@draw_local:
  00147	6a 34		 push	 52			; 00000034H
  00149	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0014c	51		 push	 ecx
  0014d	69 95 18 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv129[ebp], 700
  00157	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  0015d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00164	ff d1		 call	 ecx
  00166	d9 5d f0	 fstp	 DWORD PTR _this_pylon_heading$[ebp]

; 158  : 
; 159  : 			this_pylon_type = get_pylon_sub_type (raw->fix.sub_type);

  00169	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016c	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0016f	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00175	51		 push	 ecx
  00176	e8 00 00 00 00	 call	 ?get_pylon_sub_type@@YG?AW4PYLON_TYPES@@H@Z ; get_pylon_sub_type
  0017b	89 45 bc	 mov	 DWORD PTR _this_pylon_type$[ebp], eax

; 160  : 
; 161  : 			if (fixed_database [raw->fix.sub_type].align_with_terrain)

  0017e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00181	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00184	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0018a	c1 e1 04	 shl	 ecx, 4
  0018d	83 b9 04 00 00
	00 00		 cmp	 DWORD PTR ?fixed_database@@3QBUFIXED_DATA@@B[ecx+4], 0
  00194	74 41		 je	 SHORT $LN23@draw_local

; 162  : 			{
; 163  : 				get_3d_terrain_face_normal (&face_normal, raw->fix.position.x, raw->fix.position.z);

  00196	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00199	51		 push	 ecx
  0019a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0019f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001a7	51		 push	 ecx
  001a8	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  001ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b1	8d 55 e0	 lea	 edx, DWORD PTR _face_normal$[ebp]
  001b4	52		 push	 edx
  001b5	e8 00 00 00 00	 call	 ?get_3d_terrain_face_normal@@YGXPAUVEC3D@@MM@Z ; get_3d_terrain_face_normal

; 164  : 
; 165  : 				get_3d_transformation_matrix_from_face_normal_and_heading (inst3d->vp.attitude, &face_normal, this_pylon_heading);

  001ba	51		 push	 ecx
  001bb	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  001c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c5	8d 45 e0	 lea	 eax, DWORD PTR _face_normal$[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d f4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  001cc	83 c1 14	 add	 ecx, 20			; 00000014H
  001cf	51		 push	 ecx
  001d0	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z ; get_3d_transformation_matrix_from_face_normal_and_heading

; 166  : 			}
; 167  : 			else

  001d5	eb 29		 jmp	 SHORT $LN24@draw_local
$LN23@draw_local:

; 168  : 			{
; 169  : 				get_3d_transformation_matrix (inst3d->vp.attitude, this_pylon_heading, 0.0, 0.0);

  001d7	51		 push	 ecx
  001d8	0f 57 c0	 xorps	 xmm0, xmm0
  001db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e0	51		 push	 ecx
  001e1	0f 57 c0	 xorps	 xmm0, xmm0
  001e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e9	51		 push	 ecx
  001ea	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	8b 45 f4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  001f7	83 c0 14	 add	 eax, 20			; 00000014H
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix
$LN24@draw_local:

; 170  : 			}
; 171  : 
; 172  : 			insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, inst3d);

  00200	51		 push	 ecx
  00201	0f 57 c0	 xorps	 xmm0, xmm0
  00204	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00209	8b 45 f4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0020c	50		 push	 eax
  0020d	6a 01		 push	 1
  0020f	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene

; 173  : 
; 174  : 			//
; 175  : 			// draw connecting wires
; 176  : 			//
; 177  : 
; 178  : 			if (raw->succ)

  00214	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00217	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  0021b	0f 84 92 05 00
	00		 je	 $LN12@draw_local

; 179  : 			{
; 180  : 				succ = (pylon *) get_local_entity_data (raw->succ);

  00221	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00224	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00227	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0022a	89 55 f8	 mov	 DWORD PTR _succ$[ebp], edx

; 181  : 
; 182  : 				if (succ->fix.alive)

  0022d	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00230	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00233	c1 e9 14	 shr	 ecx, 20			; 00000014H
  00236	83 e1 01	 and	 ecx, 1
  00239	0f 84 f4 03 00
	00		 je	 $LN26@draw_local

; 183  : 				{
; 184  : 					next_pylon_type = get_pylon_sub_type (succ->fix.sub_type);

  0023f	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00242	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00245	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0024b	51		 push	 ecx
  0024c	e8 00 00 00 00	 call	 ?get_pylon_sub_type@@YG?AW4PYLON_TYPES@@H@Z ; get_pylon_sub_type
  00251	89 45 b8	 mov	 DWORD PTR _next_pylon_type$[ebp], eax

; 185  : 
; 186  : 					next_pylon_heading = get_local_entity_float_value (raw->succ, FLOAT_TYPE_HEADING);

  00254	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00257	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  0025b	74 10		 je	 SHORT $LN38@draw_local
  0025d	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00260	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00263	8b 02		 mov	 eax, DWORD PTR [edx]
  00265	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv200[ebp], eax
  0026b	eb 25		 jmp	 SHORT $LN39@draw_local
$LN38@draw_local:
  0026d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00273	83 c1 6a	 add	 ecx, 106		; 0000006aH
  00276	51		 push	 ecx
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00282	52		 push	 edx
  00283	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00288	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
$LN39@draw_local:
  00292	b8 01 00 00 00	 mov	 eax, 1
  00297	85 c0		 test	 eax, eax
  00299	74 0c		 je	 SHORT $LN40@draw_local
  0029b	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv208[ebp], 52 ; 00000034H
  002a5	eb 25		 jmp	 SHORT $LN41@draw_local
$LN40@draw_local:
  002a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  002ad	83 c1 6a	 add	 ecx, 106		; 0000006aH
  002b0	51		 push	 ecx
  002b1	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002bc	52		 push	 edx
  002bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c2	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN41@draw_local:
  002cc	6a 34		 push	 52			; 00000034H
  002ce	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002d1	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  002d4	51		 push	 ecx
  002d5	69 95 18 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv200[ebp], 700
  002df	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv208[ebp]
  002e5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002ec	ff d1		 call	 ecx
  002ee	d9 5d ec	 fstp	 DWORD PTR _next_pylon_heading$[ebp]

; 187  : 
; 188  : 					for (cable_loop = NUM_PYLON_ATTACHMENT_POINTS - 1; cable_loop >= 0; cable_loop --)

  002f1	c7 45 c4 05 00
	00 00		 mov	 DWORD PTR _cable_loop$[ebp], 5
  002f8	eb 09		 jmp	 SHORT $LN4@draw_local
$LN2@draw_local:
  002fa	8b 45 c4	 mov	 eax, DWORD PTR _cable_loop$[ebp]
  002fd	83 e8 01	 sub	 eax, 1
  00300	89 45 c4	 mov	 DWORD PTR _cable_loop$[ebp], eax
$LN4@draw_local:
  00303	83 7d c4 00	 cmp	 DWORD PTR _cable_loop$[ebp], 0
  00307	0f 8c 21 03 00
	00		 jl	 $LN3@draw_local

; 189  : 					{
; 190  : 						if (pylon_attachment_level (this_pylon_type, cable_loop) >= cable_detail_level)

  0030d	6b 45 bc 54	 imul	 eax, DWORD PTR _this_pylon_type$[ebp], 84
  00311	8b 4d c4	 mov	 ecx, DWORD PTR _cable_loop$[ebp]
  00314	0f b6 94 08 04
	00 00 00	 movzx	 edx, BYTE PTR ?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A[eax+ecx+4]
  0031c	0f b6 85 63 ff
	ff ff		 movzx	 eax, BYTE PTR _cable_detail_level$[ebp]
  00323	3b d0		 cmp	 edx, eax
  00325	7c 02		 jl	 SHORT $LN28@draw_local

; 191  : 						{
; 192  : 							continue;

  00327	eb d1		 jmp	 SHORT $LN2@draw_local
$LN28@draw_local:

; 193  : 						}
; 194  : 
; 195  : 						this_pylon_offset = pylon_attachment_offset (this_pylon_type, cable_loop);

  00329	6b 45 bc 54	 imul	 eax, DWORD PTR _this_pylon_type$[ebp], 84
  0032d	6b 4d c4 0c	 imul	 ecx, DWORD PTR _cable_loop$[ebp], 12
  00331	8d 94 08 0c 00
	00 00		 lea	 edx, DWORD PTR ?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A[eax+ecx+12]
  00338	8b 02		 mov	 eax, DWORD PTR [edx]
  0033a	89 45 d4	 mov	 DWORD PTR _this_pylon_offset$[ebp], eax
  0033d	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00340	89 4d d8	 mov	 DWORD PTR _this_pylon_offset$[ebp+4], ecx
  00343	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00346	89 55 dc	 mov	 DWORD PTR _this_pylon_offset$[ebp+8], edx

; 196  : 						next_pylon_offset = pylon_attachment_offset (next_pylon_type, cable_loop);

  00349	6b 45 b8 54	 imul	 eax, DWORD PTR _next_pylon_type$[ebp], 84
  0034d	6b 4d c4 0c	 imul	 ecx, DWORD PTR _cable_loop$[ebp], 12
  00351	8d 94 08 0c 00
	00 00		 lea	 edx, DWORD PTR ?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A[eax+ecx+12]
  00358	8b 02		 mov	 eax, DWORD PTR [edx]
  0035a	89 45 c8	 mov	 DWORD PTR _next_pylon_offset$[ebp], eax
  0035d	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00360	89 4d cc	 mov	 DWORD PTR _next_pylon_offset$[ebp+4], ecx
  00363	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00366	89 55 d0	 mov	 DWORD PTR _next_pylon_offset$[ebp+8], edx

; 197  : 
; 198  : 						//
; 199  : 						// get first point
; 200  : 						//
; 201  : 						pos [0].x = raw->fix.position.x + (this_pylon_offset.x * cos (this_pylon_heading));

  00369	51		 push	 ecx
  0036a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  0036f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00374	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00379	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv629[ebp]
  0037f	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv629[ebp]
  00387	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _this_pylon_offset$[ebp]
  0038c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0038f	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00393	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00398	6b d1 00	 imul	 edx, ecx, 0
  0039b	f3 0f 11 84 15
	64 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx], xmm0

; 202  : 						pos [0].y = raw->fix.position.y + this_pylon_offset.y;

  003a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003a7	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  003ac	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _this_pylon_offset$[ebp+4]
  003b1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003b6	6b d1 00	 imul	 edx, ecx, 0
  003b9	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 203  : 						pos [0].z = raw->fix.position.z - (this_pylon_offset.x * sin (this_pylon_heading));

  003c2	51		 push	 ecx
  003c3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  003c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cd	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  003d2	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv642[ebp]
  003d8	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv642[ebp]
  003e0	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _this_pylon_offset$[ebp]
  003e5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003e8	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  003ed	f3 0f 5c c8	 subss	 xmm1, xmm0
  003f1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003f6	6b d1 00	 imul	 edx, ecx, 0
  003f9	f3 0f 11 8c 15
	6c ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+8], xmm1

; 204  : 
; 205  : 						//
; 206  : 						// get last point
; 207  : 						//
; 208  : 						pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].x = succ->fix.position.x + (next_pylon_offset.x * cos (next_pylon_heading));

  00402	51		 push	 ecx
  00403	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _next_pylon_heading$[ebp]
  00408	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040d	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00412	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv652[ebp]
  00418	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv652[ebp]
  00420	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _next_pylon_offset$[ebp]
  00425	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00428	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0042c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00431	6b d1 05	 imul	 edx, ecx, 5
  00434	f3 0f 11 84 15
	64 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx], xmm0

; 209  : 						pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].y = succ->fix.position.y + next_pylon_offset.y;

  0043d	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00440	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00445	f3 0f 58 45 cc	 addss	 xmm0, DWORD PTR _next_pylon_offset$[ebp+4]
  0044a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0044f	6b d1 05	 imul	 edx, ecx, 5
  00452	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 210  : 						pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].z = succ->fix.position.z - (next_pylon_offset.x * sin (next_pylon_heading));

  0045b	51		 push	 ecx
  0045c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _next_pylon_heading$[ebp]
  00461	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00466	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0046b	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv665[ebp]
  00471	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv665[ebp]
  00479	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _next_pylon_offset$[ebp]
  0047e	8b 45 f8	 mov	 eax, DWORD PTR _succ$[ebp]
  00481	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00486	f3 0f 5c c8	 subss	 xmm1, xmm0
  0048a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0048f	6b d1 05	 imul	 edx, ecx, 5
  00492	f3 0f 11 8c 15
	6c ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+8], xmm1

; 211  : 
; 212  : 						//
; 213  : 						// calculate intermediate points
; 214  : 						//
; 215  : 
; 216  : 						d.x = (pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].x - pos [0].x) / NUMBER_OF_PYLON_CABLE_POINTS;

  0049b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004a0	6b c8 05	 imul	 ecx, eax, 5
  004a3	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004a8	6b c2 00	 imul	 eax, edx, 0
  004ab	f3 0f 10 84 0d
	64 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx]
  004b4	f3 0f 5c 84 05
	64 ff ff ff	 subss	 xmm0, DWORD PTR _pos$[ebp+eax]
  004bd	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40c00000
  004c5	f3 0f 11 45 ac	 movss	 DWORD PTR _d$[ebp], xmm0

; 217  : 						d.y = (pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].y - pos [0].y) / NUMBER_OF_PYLON_CABLE_POINTS;

  004ca	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004cf	6b c8 05	 imul	 ecx, eax, 5
  004d2	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004d7	6b c2 00	 imul	 eax, edx, 0
  004da	f3 0f 10 84 0d
	68 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+4]
  004e3	f3 0f 5c 84 05
	68 ff ff ff	 subss	 xmm0, DWORD PTR _pos$[ebp+eax+4]
  004ec	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40c00000
  004f4	f3 0f 11 45 b0	 movss	 DWORD PTR _d$[ebp+4], xmm0

; 218  : 						d.z = (pos [NUMBER_OF_PYLON_CABLE_POINTS - 1].z - pos [0].z) / NUMBER_OF_PYLON_CABLE_POINTS;

  004f9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004fe	6b c8 05	 imul	 ecx, eax, 5
  00501	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00506	6b c2 00	 imul	 eax, edx, 0
  00509	f3 0f 10 84 0d
	6c ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+8]
  00512	f3 0f 5c 84 05
	6c ff ff ff	 subss	 xmm0, DWORD PTR _pos$[ebp+eax+8]
  0051b	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40c00000
  00523	f3 0f 11 45 b4	 movss	 DWORD PTR _d$[ebp+8], xmm0

; 219  : 
; 220  : 						for (point_loop = 1 ; point_loop < NUMBER_OF_PYLON_CABLE_POINTS - 1 ; point_loop++)

  00528	c7 45 c0 01 00
	00 00		 mov	 DWORD PTR _point_loop$[ebp], 1
  0052f	eb 09		 jmp	 SHORT $LN7@draw_local
$LN5@draw_local:
  00531	8b 45 c0	 mov	 eax, DWORD PTR _point_loop$[ebp]
  00534	83 c0 01	 add	 eax, 1
  00537	89 45 c0	 mov	 DWORD PTR _point_loop$[ebp], eax
$LN7@draw_local:
  0053a	83 7d c0 05	 cmp	 DWORD PTR _point_loop$[ebp], 5
  0053e	7d 6e		 jge	 SHORT $LN6@draw_local

; 221  : 						{
; 222  : 							pos [point_loop].x = pos [point_loop - 1].x + d.x;

  00540	8b 45 c0	 mov	 eax, DWORD PTR _point_loop$[ebp]
  00543	83 e8 01	 sub	 eax, 1
  00546	6b c8 0c	 imul	 ecx, eax, 12
  00549	f3 0f 10 84 0d
	64 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx]
  00552	f3 0f 58 45 ac	 addss	 xmm0, DWORD PTR _d$[ebp]
  00557	6b 55 c0 0c	 imul	 edx, DWORD PTR _point_loop$[ebp], 12
  0055b	f3 0f 11 84 15
	64 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx], xmm0

; 223  : 							pos [point_loop].y = pos [point_loop - 1].y + d.y;

  00564	8b 45 c0	 mov	 eax, DWORD PTR _point_loop$[ebp]
  00567	83 e8 01	 sub	 eax, 1
  0056a	6b c8 0c	 imul	 ecx, eax, 12
  0056d	f3 0f 10 84 0d
	68 ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+4]
  00576	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR _d$[ebp+4]
  0057b	6b 55 c0 0c	 imul	 edx, DWORD PTR _point_loop$[ebp], 12
  0057f	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 224  : 							pos [point_loop].z = pos [point_loop - 1].z + d.z;

  00588	8b 45 c0	 mov	 eax, DWORD PTR _point_loop$[ebp]
  0058b	83 e8 01	 sub	 eax, 1
  0058e	6b c8 0c	 imul	 ecx, eax, 12
  00591	f3 0f 10 84 0d
	6c ff ff ff	 movss	 xmm0, DWORD PTR _pos$[ebp+ecx+8]
  0059a	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _d$[ebp+8]
  0059f	6b 55 c0 0c	 imul	 edx, DWORD PTR _point_loop$[ebp], 12
  005a3	f3 0f 11 84 15
	6c ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+8], xmm0

; 225  : 						}

  005ac	eb 83		 jmp	 SHORT $LN5@draw_local
$LN6@draw_local:

; 226  : 
; 227  : 						//
; 228  : 						// add "sag"
; 229  : 						//
; 230  : 
; 231  : 						for (point_loop = 1 ; point_loop < NUMBER_OF_PYLON_CABLE_POINTS - 1 ; point_loop++)

  005ae	c7 45 c0 01 00
	00 00		 mov	 DWORD PTR _point_loop$[ebp], 1
  005b5	eb 09		 jmp	 SHORT $LN10@draw_local
$LN8@draw_local:
  005b7	8b 45 c0	 mov	 eax, DWORD PTR _point_loop$[ebp]
  005ba	83 c0 01	 add	 eax, 1
  005bd	89 45 c0	 mov	 DWORD PTR _point_loop$[ebp], eax
$LN10@draw_local:
  005c0	83 7d c0 05	 cmp	 DWORD PTR _point_loop$[ebp], 5
  005c4	7d 43		 jge	 SHORT $LN9@draw_local

; 232  : 						{
; 233  : 							pos [point_loop].y -= (get_pylon_sag_value (point_loop) * MAX_PYLON_CABLE_SAG);

  005c6	6b 75 c0 0c	 imul	 esi, DWORD PTR _point_loop$[ebp], 12
  005ca	8b 45 c0	 mov	 eax, DWORD PTR _point_loop$[ebp]
  005cd	50		 push	 eax
  005ce	e8 00 00 00 00	 call	 ?get_pylon_sag_value@@YGMH@Z ; get_pylon_sag_value
  005d3	dd 9d 14 ff ff
	ff		 fstp	 QWORD PTR tv692[ebp]
  005d9	f2 0f 10 85 14
	ff ff ff	 movsd	 xmm0, QWORD PTR tv692[ebp]
  005e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@402c000000000000
  005e9	f3 0f 5a 8c 35
	68 ff ff ff	 cvtss2sd xmm1, DWORD PTR _pos$[ebp+esi+4]
  005f2	f2 0f 5c c8	 subsd	 xmm1, xmm0
  005f6	6b 4d c0 0c	 imul	 ecx, DWORD PTR _point_loop$[ebp], 12
  005fa	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  005fe	f3 0f 11 84 0d
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+ecx+4], xmm0

; 234  : 						}

  00607	eb ae		 jmp	 SHORT $LN8@draw_local
$LN9@draw_local:

; 235  : 
; 236  : 						//
; 237  : 						// draw cable
; 238  : 						//
; 239  : 
; 240  : 						insert_zbiased_polyline_into_3d_scene (NUMBER_OF_PYLON_CABLE_POINTS, 0.0, TRUE, cable_colour, pos );

  00609	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _pos$[ebp]
  0060f	50		 push	 eax
  00610	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _cable_colour$[ebp]
  00616	51		 push	 ecx
  00617	6a 01		 push	 1
  00619	51		 push	 ecx
  0061a	0f 57 c0	 xorps	 xmm0, xmm0
  0061d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00622	6a 06		 push	 6
  00624	e8 00 00 00 00	 call	 ?insert_zbiased_polyline_into_3d_scene@@YGHHMHUREAL_COLOUR@@PAUVEC3D@@@Z ; insert_zbiased_polyline_into_3d_scene

; 241  : 
; 242  : 					}

  00629	e9 cc fc ff ff	 jmp	 $LN2@draw_local
$LN3@draw_local:

; 243  : 				}
; 244  : 				else

  0062e	e9 80 01 00 00	 jmp	 $LN12@draw_local
$LN26@draw_local:

; 245  : 				{
; 246  : 					//
; 247  : 					// next pylon is not alive, so make cables "hang loose"
; 248  : 					//
; 249  : 
; 250  : 					for (cable_loop = NUM_PYLON_ATTACHMENT_POINTS - 1; cable_loop >= 0; cable_loop --)

  00633	c7 45 c4 05 00
	00 00		 mov	 DWORD PTR _cable_loop$[ebp], 5
  0063a	eb 09		 jmp	 SHORT $LN13@draw_local
$LN11@draw_local:
  0063c	8b 45 c4	 mov	 eax, DWORD PTR _cable_loop$[ebp]
  0063f	83 e8 01	 sub	 eax, 1
  00642	89 45 c4	 mov	 DWORD PTR _cable_loop$[ebp], eax
$LN13@draw_local:
  00645	83 7d c4 00	 cmp	 DWORD PTR _cable_loop$[ebp], 0
  00649	0f 8c 64 01 00
	00		 jl	 $LN12@draw_local

; 251  : 					{
; 252  : 						if (pylon_attachment_level (this_pylon_type, cable_loop) >= cable_detail_level)

  0064f	6b 45 bc 54	 imul	 eax, DWORD PTR _this_pylon_type$[ebp], 84
  00653	8b 4d c4	 mov	 ecx, DWORD PTR _cable_loop$[ebp]
  00656	0f b6 94 08 04
	00 00 00	 movzx	 edx, BYTE PTR ?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A[eax+ecx+4]
  0065e	0f b6 85 63 ff
	ff ff		 movzx	 eax, BYTE PTR _cable_detail_level$[ebp]
  00665	3b d0		 cmp	 edx, eax
  00667	7c 02		 jl	 SHORT $LN29@draw_local

; 253  : 						{
; 254  : 							continue;

  00669	eb d1		 jmp	 SHORT $LN11@draw_local
$LN29@draw_local:

; 255  : 						}
; 256  : 
; 257  : 						this_pylon_offset = pylon_attachment_offset (this_pylon_type, cable_loop);

  0066b	6b 45 bc 54	 imul	 eax, DWORD PTR _this_pylon_type$[ebp], 84
  0066f	6b 4d c4 0c	 imul	 ecx, DWORD PTR _cable_loop$[ebp], 12
  00673	8d 94 08 0c 00
	00 00		 lea	 edx, DWORD PTR ?pylon_attachment_database@@3PAUPYLON_ATTACHMENT_DATA@@A[eax+ecx+12]
  0067a	8b 02		 mov	 eax, DWORD PTR [edx]
  0067c	89 45 d4	 mov	 DWORD PTR _this_pylon_offset$[ebp], eax
  0067f	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00682	89 4d d8	 mov	 DWORD PTR _this_pylon_offset$[ebp+4], ecx
  00685	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00688	89 55 dc	 mov	 DWORD PTR _this_pylon_offset$[ebp+8], edx

; 258  : 
; 259  : 						//
; 260  : 						// get first point
; 261  : 						//
; 262  : 
; 263  : 						pos [0].x = raw->fix.position.x + (this_pylon_offset.x * cos (this_pylon_heading));

  0068b	51		 push	 ecx
  0068c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  00691	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00696	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0069b	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv712[ebp]
  006a1	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv712[ebp]
  006a9	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _this_pylon_offset$[ebp]
  006ae	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006b1	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  006b5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006ba	6b d1 00	 imul	 edx, ecx, 0
  006bd	f3 0f 11 84 15
	64 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx], xmm0

; 264  : 						pos [0].y = raw->fix.position.y + this_pylon_offset.y;

  006c6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006c9	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  006ce	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _this_pylon_offset$[ebp+4]
  006d3	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006d8	6b d1 00	 imul	 edx, ecx, 0
  006db	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 265  : 						pos [0].z = raw->fix.position.z - (this_pylon_offset.x * sin (this_pylon_heading));

  006e4	51		 push	 ecx
  006e5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  006ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ef	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  006f4	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv725[ebp]
  006fa	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR tv725[ebp]
  00702	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _this_pylon_offset$[ebp]
  00707	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0070a	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  0070f	f3 0f 5c c8	 subss	 xmm1, xmm0
  00713	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00718	6b d1 00	 imul	 edx, ecx, 0
  0071b	f3 0f 11 8c 15
	6c ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+8], xmm1

; 266  : 
; 267  : 						//
; 268  : 						// get last point
; 269  : 						//
; 270  : 
; 271  : 						pos [1].x = pos [0].x;

  00724	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00729	6b c8 00	 imul	 ecx, eax, 0
  0072c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00731	c1 e2 00	 shl	 edx, 0
  00734	8b 84 0d 64 ff
	ff ff		 mov	 eax, DWORD PTR _pos$[ebp+ecx]
  0073b	89 84 15 64 ff
	ff ff		 mov	 DWORD PTR _pos$[ebp+edx], eax

; 272  : 						pos [1].y = pos [0].y - 20.0;

  00742	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00747	6b c8 00	 imul	 ecx, eax, 0
  0074a	f3 0f 5a 84 0d
	68 ff ff ff	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+ecx+4]
  00753	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  0075b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0075f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00764	c1 e2 00	 shl	 edx, 0
  00767	f3 0f 11 84 15
	68 ff ff ff	 movss	 DWORD PTR _pos$[ebp+edx+4], xmm0

; 273  : 						pos [1].z = pos [0].z;

  00770	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00775	6b c8 00	 imul	 ecx, eax, 0
  00778	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0077d	c1 e2 00	 shl	 edx, 0
  00780	8b 84 0d 6c ff
	ff ff		 mov	 eax, DWORD PTR _pos$[ebp+ecx+8]
  00787	89 84 15 6c ff
	ff ff		 mov	 DWORD PTR _pos$[ebp+edx+8], eax

; 274  : 
; 275  : 						//
; 276  : 						// draw cable
; 277  : 						//
; 278  : 
; 279  : 						insert_zbiased_polyline_into_3d_scene (2, 0.0, TRUE, cable_colour, pos );

  0078e	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _pos$[ebp]
  00794	50		 push	 eax
  00795	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _cable_colour$[ebp]
  0079b	51		 push	 ecx
  0079c	6a 01		 push	 1
  0079e	51		 push	 ecx
  0079f	0f 57 c0	 xorps	 xmm0, xmm0
  007a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a7	6a 02		 push	 2
  007a9	e8 00 00 00 00	 call	 ?insert_zbiased_polyline_into_3d_scene@@YGHHMHUREAL_COLOUR@@PAUVEC3D@@@Z ; insert_zbiased_polyline_into_3d_scene

; 280  : 
; 281  : 					}

  007ae	e9 89 fe ff ff	 jmp	 $LN11@draw_local
$LN12@draw_local:

; 282  : 				}
; 283  : 			}
; 284  : 		}
; 285  : 	}
; 286  : 	else

  007b3	e9 67 01 00 00	 jmp	 $LN30@draw_local
$LN14@draw_local:

; 287  : 	{
; 288  : 		//
; 289  : 		// draw destroyed pylon object
; 290  : 		//
; 291  : 
; 292  : 		inst3d = construct_temporary_3d_object (raw->fix.object_3d_shape, FALSE);

  007b8	6a 00		 push	 0
  007ba	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007bd	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  007c0	c1 e9 08	 shr	 ecx, 8
  007c3	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  007c9	51		 push	 ecx
  007ca	e8 00 00 00 00	 call	 ?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z ; construct_temporary_3d_object
  007cf	89 45 f4	 mov	 DWORD PTR _inst3d$[ebp], eax

; 293  : 
; 294  : 		if (inst3d)

  007d2	83 7d f4 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  007d6	0f 84 43 01 00
	00		 je	 $LN30@draw_local

; 295  : 		{
; 296  : 
; 297  : 			memcpy (&inst3d->vp.position, &raw->fix.position, sizeof (vec3d));

  007dc	6a 0c		 push	 12			; 0000000cH
  007de	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007e1	50		 push	 eax
  007e2	8b 4d f4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  007e5	83 c1 08	 add	 ecx, 8
  007e8	51		 push	 ecx
  007e9	e8 00 00 00 00	 call	 _memcpy
  007ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 298  : 
; 299  : 			this_pylon_heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  007f1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  007f5	74 0d		 je	 SHORT $LN42@draw_local
  007f7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  007fc	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv483[ebp], ecx
  00802	eb 27		 jmp	 SHORT $LN43@draw_local
$LN42@draw_local:
  00804	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  0080a	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  00810	52		 push	 edx
  00811	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00816	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0081b	50		 push	 eax
  0081c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00821	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv483[ebp], 0
$LN43@draw_local:
  0082b	b9 01 00 00 00	 mov	 ecx, 1
  00830	85 c9		 test	 ecx, ecx
  00832	74 0c		 je	 SHORT $LN44@draw_local
  00834	c7 85 14 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv491[ebp], 52 ; 00000034H
  0083e	eb 27		 jmp	 SHORT $LN45@draw_local
$LN44@draw_local:
  00840	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00846	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  0084c	52		 push	 edx
  0084d	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@CPJJIIGK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00852	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00857	50		 push	 eax
  00858	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0085d	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv491[ebp], 0
$LN45@draw_local:
  00867	6a 34		 push	 52			; 00000034H
  00869	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0086c	51		 push	 ecx
  0086d	69 95 18 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv483[ebp], 700
  00877	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv491[ebp]
  0087d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00884	ff d1		 call	 ecx
  00886	d9 5d f0	 fstp	 DWORD PTR _this_pylon_heading$[ebp]

; 300  : 
; 301  : 			if (fixed_database [raw->fix.sub_type].align_with_terrain)

  00889	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0088c	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0088f	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00895	c1 e1 04	 shl	 ecx, 4
  00898	83 b9 04 00 00
	00 00		 cmp	 DWORD PTR ?fixed_database@@3QBUFIXED_DATA@@B[ecx+4], 0
  0089f	74 41		 je	 SHORT $LN31@draw_local

; 302  : 			{
; 303  : 				get_3d_terrain_face_normal (&face_normal, raw->fix.position.x, raw->fix.position.z);

  008a1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008a4	51		 push	 ecx
  008a5	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  008aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008af	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  008b2	51		 push	 ecx
  008b3	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  008b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008bc	8d 55 e0	 lea	 edx, DWORD PTR _face_normal$[ebp]
  008bf	52		 push	 edx
  008c0	e8 00 00 00 00	 call	 ?get_3d_terrain_face_normal@@YGXPAUVEC3D@@MM@Z ; get_3d_terrain_face_normal

; 304  : 
; 305  : 				get_3d_transformation_matrix_from_face_normal_and_heading (inst3d->vp.attitude, &face_normal, this_pylon_heading);

  008c5	51		 push	 ecx
  008c6	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  008cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008d0	8d 45 e0	 lea	 eax, DWORD PTR _face_normal$[ebp]
  008d3	50		 push	 eax
  008d4	8b 4d f4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  008d7	83 c1 14	 add	 ecx, 20			; 00000014H
  008da	51		 push	 ecx
  008db	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z ; get_3d_transformation_matrix_from_face_normal_and_heading

; 306  : 			}
; 307  : 			else

  008e0	eb 29		 jmp	 SHORT $LN32@draw_local
$LN31@draw_local:

; 308  : 			{
; 309  : 				get_3d_transformation_matrix (inst3d->vp.attitude, this_pylon_heading, 0.0, 0.0);

  008e2	51		 push	 ecx
  008e3	0f 57 c0	 xorps	 xmm0, xmm0
  008e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008eb	51		 push	 ecx
  008ec	0f 57 c0	 xorps	 xmm0, xmm0
  008ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008f4	51		 push	 ecx
  008f5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _this_pylon_heading$[ebp]
  008fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ff	8b 45 f4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00902	83 c0 14	 add	 eax, 20			; 00000014H
  00905	50		 push	 eax
  00906	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix
$LN32@draw_local:

; 310  : 			}
; 311  : 
; 312  : 			insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, inst3d);

  0090b	51		 push	 ecx
  0090c	0f 57 c0	 xorps	 xmm0, xmm0
  0090f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00914	8b 45 f4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00917	50		 push	 eax
  00918	6a 01		 push	 1
  0091a	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene
$LN30@draw_local:

; 313  : 		}
; 314  : 	}
; 315  : }

  0091f	5f		 pop	 edi
  00920	5e		 pop	 esi
  00921	5b		 pop	 ebx
  00922	8b e5		 mov	 esp, ebp
  00924	5d		 pop	 ebp
  00925	c2 08 00	 ret	 8
?draw_local_3d_object@@YGXPAUENTITY@@M@Z ENDP		; draw_local_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\pylon\py_draw.c
;	COMDAT ?overload_pylon_draw_functions@@YGXXZ
_TEXT	SEGMENT
?overload_pylon_draw_functions@@YGXXZ PROC		; overload_pylon_draw_functions, COMDAT

; 357  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 358  : 	fn_draw_local_entity_3d_object [ENTITY_TYPE_PYLON]	 = draw_local_3d_object;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 15	 imul	 ecx, eax, 21
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA[ecx], OFFSET ?draw_local_3d_object@@YGXPAUENTITY@@M@Z ; draw_local_3d_object

; 359  : 
; 360  : 	//fn_draw_local_entity_2d_symbol [ENTITY_TYPE_PYLON]	 = draw_local_2d_symbol;
; 361  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?overload_pylon_draw_functions@@YGXXZ ENDP		; overload_pylon_draw_functions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
END
