; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\input\in_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_input_ui_object_draw_functions@@YGXH@Z ; overload_input_ui_object_draw_functions
PUBLIC	??_C@_01IDAFKMJL@_@				; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	_strlen:PROC
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?set_ui_repaint_area@@YGXHHHH@Z:PROC		; set_ui_repaint_area
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?ui_save_current_font@@YGXXZ:PROC		; ui_save_current_font
EXTRN	?ui_restore_current_font@@YGXXZ:PROC		; ui_restore_current_font
EXTRN	?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z:PROC	; ui_set_object_font
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?system_ticks@@3HC:DWORD			; system_ticks
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_01IDAFKMJL@_@
CONST	SEGMENT
??_C@_01IDAFKMJL@_@ DB '_', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\input\in_draw.c
;	COMDAT ?draw_input_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv345 = -124						; size = 8
tv342 = -116						; size = 4
tv217 = -116						; size = 4
_temp_obj$ = -48					; size = 4
_parent$ = -44						; size = 4
_input_obj$ = -40					; size = 4
_y1$ = -36						; size = 4
_x1$ = -32						; size = 4
_y_origin$ = -28					; size = 4
_x_origin$ = -24					; size = 4
_y_size$ = -20						; size = 4
_x_size$ = -16						; size = 4
_len$ = -12						; size = 4
_cursor_width$ = -8					; size = 4
_old_active_screen$ = -4				; size = 4
_obj$ = 8						; size = 4
?draw_input_ui_object@@YGXPAUUI_OBJECT@@@Z PROC		; draw_input_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	struct SCREEN
; 77   : 		*old_active_screen;
; 78   : 
; 79   :    float
; 80   :       cursor_width,
; 81   :       len,
; 82   :       x_size = 0,

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f0	 movss	 DWORD PTR _x_size$[ebp], xmm0

; 83   :       y_size = 0,

  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	f3 0f 11 45 ec	 movss	 DWORD PTR _y_size$[ebp], xmm0

; 84   :       x_origin,
; 85   :       y_origin,
; 86   :       x1,
; 87   :       y1;
; 88   : 
; 89   :    input_ui_object
; 90   :       *input_obj;
; 91   : 
; 92   : 	ui_object
; 93   : 		*parent,
; 94   : 		*temp_obj;
; 95   : 
; 96   : 	temp_obj = obj;

  00019	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0001c	89 45 d0	 mov	 DWORD PTR _temp_obj$[ebp], eax
$LN2@draw_input:

; 97   : 
; 98   : 	while (temp_obj)

  0001f	83 7d d0 00	 cmp	 DWORD PTR _temp_obj$[ebp], 0
  00023	74 3d		 je	 SHORT $LN3@draw_input

; 99   : 	{
; 100  : 
; 101  : 		set_ui_object_redraw (temp_obj, TRUE);

  00025	6a 01		 push	 1
  00027	8b 45 d0	 mov	 eax, DWORD PTR _temp_obj$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d d0	 mov	 ecx, DWORD PTR _temp_obj$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00037	ff d0		 call	 eax

; 102  : 
; 103  : 		if (!get_ui_object_clear (temp_obj))

  00039	8b 45 d0	 mov	 eax, DWORD PTR _temp_obj$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d d0	 mov	 ecx, DWORD PTR _temp_obj$[ebp]
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00049	ff d0		 call	 eax

; 104  : 		{
; 105  : 
; 106  : 			//break;
; 107  : 		}
; 108  : 
; 109  : 		temp_obj = get_ui_object_parent (temp_obj);

  0004b	8b 45 d0	 mov	 eax, DWORD PTR _temp_obj$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d d0	 mov	 ecx, DWORD PTR _temp_obj$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0005b	ff d0		 call	 eax
  0005d	89 45 d0	 mov	 DWORD PTR _temp_obj$[ebp], eax

; 110  : 	}

  00060	eb bd		 jmp	 SHORT $LN2@draw_input
$LN3@draw_input:

; 111  : 
; 112  :    input_obj = (input_ui_object *) obj->data;

  00062	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00065	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00068	89 4d d8	 mov	 DWORD PTR _input_obj$[ebp], ecx

; 113  : 
; 114  : 	ui_save_current_font ();

  0006b	e8 00 00 00 00	 call	 ?ui_save_current_font@@YGXXZ ; ui_save_current_font

; 115  : 
; 116  : 	ui_set_object_font (obj);

  00070	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z ; ui_set_object_font

; 117  : 		
; 118  :    cursor_width = ui_get_string_length ("_");

  00079	68 00 00 00 00	 push	 OFFSET ??_C@_01IDAFKMJL@_@
  0007e	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00083	d9 5d f8	 fstp	 DWORD PTR _cursor_width$[ebp]

; 119  :       
; 120  :    x1 = get_ui_object_x (obj);

  00086	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0008d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00096	ff d0		 call	 eax
  00098	d9 5d e0	 fstp	 DWORD PTR _x1$[ebp]

; 121  : 
; 122  :    y1 = get_ui_object_y (obj);

  0009b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0009e	50		 push	 eax
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ab	ff d0		 call	 eax
  000ad	d9 5d dc	 fstp	 DWORD PTR _y1$[ebp]

; 123  :       
; 124  :    x_size = ui_get_string_length (get_ui_object_text (obj));

  000b0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000b3	50		 push	 eax
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  000c0	ff d0		 call	 eax
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  000c8	d9 5d f0	 fstp	 DWORD PTR _x_size$[ebp]

; 125  : 
; 126  :    y_size = ui_get_font_height ();

  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  000d0	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  000d5	f3 0f 11 45 ec	 movss	 DWORD PTR _y_size$[ebp], xmm0

; 127  : 
; 128  :    x_origin = get_ui_object_x_origin (obj);

  000da	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000e1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ea	ff d0		 call	 eax
  000ec	d9 5d e8	 fstp	 DWORD PTR _x_origin$[ebp]

; 129  : 
; 130  :    y_origin = get_ui_object_y_origin (obj);

  000ef	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000f2	50		 push	 eax
  000f3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ff	ff d0		 call	 eax
  00101	d9 5d e4	 fstp	 DWORD PTR _y_origin$[ebp]

; 131  :       
; 132  :    ui_set_origin (x_origin, y_origin);

  00104	51		 push	 ecx
  00105	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  0010a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010f	51		 push	 ecx
  00110	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x_origin$[ebp]
  00115	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011a	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 133  : 
; 134  : 	old_active_screen = get_active_screen ();

  0011f	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  00124	89 45 fc	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 135  : 
; 136  :    if (get_ui_object_text (obj))

  00127	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0012a	50		 push	 eax
  0012b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0012e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00130	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00137	ff d0		 call	 eax
  00139	85 c0		 test	 eax, eax
  0013b	0f 84 40 01 00
	00		 je	 $LN8@draw_input

; 137  :    {
; 138  : 
; 139  :       len = strlen (get_ui_object_text (obj));

  00141	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00144	50		 push	 eax
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00148	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00151	ff d0		 call	 eax
  00153	50		 push	 eax
  00154	e8 00 00 00 00	 call	 _strlen
  00159	83 c4 04	 add	 esp, 4
  0015c	89 45 8c	 mov	 DWORD PTR tv342[ebp], eax
  0015f	f2 0f 2a 45 8c	 cvtsi2sd xmm0, DWORD PTR tv342[ebp]
  00164	8b 4d 8c	 mov	 ecx, DWORD PTR tv342[ebp]
  00167	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0016a	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  00173	f2 0f 11 45 84	 movsd	 QWORD PTR tv345[ebp], xmm0
  00178	f2 0f 5a 45 84	 cvtsd2ss xmm0, QWORD PTR tv345[ebp]
  0017d	f3 0f 11 45 f4	 movss	 DWORD PTR _len$[ebp], xmm0

; 140  :    
; 141  :       if ((get_ui_object_redraw (obj)) && (len > 0))

  00182	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00185	50		 push	 eax
  00186	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00189	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00192	ff d0		 call	 eax
  00194	85 c0		 test	 eax, eax
  00196	0f 84 e5 00 00
	00		 je	 $LN8@draw_input
  0019c	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _len$[ebp]
  001a1	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  001a8	0f 86 d3 00 00
	00		 jbe	 $LN8@draw_input

; 142  :       {
; 143  : 
; 144  : 			if (get_ui_object_active_screen (obj))

  001ae	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  001be	ff d0		 call	 eax
  001c0	85 c0		 test	 eax, eax
  001c2	74 1a		 je	 SHORT $LN9@draw_input

; 145  : 			{
; 146  : 		
; 147  : 				set_active_screen (get_ui_object_active_screen (obj));

  001c4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001c7	50		 push	 eax
  001c8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  001cd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  001d4	ff d0		 call	 eax
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 148  : 			}
; 149  : 			else

  001dc	eb 0b		 jmp	 SHORT $LN10@draw_input
$LN9@draw_input:

; 150  : 			{
; 151  : 	
; 152  : 				set_active_screen (video_screen);

  001de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  001e3	50		 push	 eax
  001e4	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN10@draw_input:

; 153  : 			}
; 154  :    
; 155  :          //if (lock_screen (active_screen))
; 156  : 			{
; 157  : 		
; 158  : 				ui_display_text (input_obj->area.text, x1, y1);

  001e9	51		 push	 ecx
  001ea	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	51		 push	 ecx
  001f5	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ff	8b 45 d8	 mov	 eax, DWORD PTR _input_obj$[ebp]
  00202	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00205	51		 push	 ecx
  00206	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0020b	dd d8		 fstp	 ST(0)

; 159  : 	
; 160  : 				//unlock_screen (active_screen);
; 161  : 			}
; 162  : 
; 163  : 			set_active_screen (old_active_screen);

  0020d	8b 45 fc	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 164  :       
; 165  :          set_ui_object_redraw (obj, FALSE);

  00216	6a 00		 push	 0
  00218	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0021b	50		 push	 eax
  0021c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0021f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00221	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00228	ff d0		 call	 eax

; 166  :    
; 167  :          set_ui_repaint_area (x1 - 2, y1 - 1, x1 + x_size + 1, y1 + y_size + 1);

  0022a	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0022f	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  00234	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0023c	f3 0f 2c c0	 cvttss2si eax, xmm0
  00240	50		 push	 eax
  00241	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00246	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  0024b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00253	f3 0f 2c c8	 cvttss2si ecx, xmm0
  00257	51		 push	 ecx
  00258	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0025d	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00265	f3 0f 2c d0	 cvttss2si edx, xmm0
  00269	52		 push	 edx
  0026a	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0026f	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40000000
  00277	f3 0f 2c c0	 cvttss2si eax, xmm0
  0027b	50		 push	 eax
  0027c	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area
$LN8@draw_input:

; 168  :       }
; 169  :    }
; 170  :       
; 171  :    if (input_obj->cursor_timer < system_ticks)

  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_ticks@@3HC ; system_ticks
  00286	8b 4d d8	 mov	 ecx, DWORD PTR _input_obj$[ebp]
  00289	39 81 ec 00 00
	00		 cmp	 DWORD PTR [ecx+236], eax
  0028f	7d 39		 jge	 SHORT $LN11@draw_input

; 172  :    {
; 173  : 
; 174  :       input_obj->cursor_timer = system_ticks + CURSOR_FLASH_SPEED;

  00291	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_ticks@@3HC ; system_ticks
  00296	83 c0 19	 add	 eax, 25			; 00000019H
  00299	8b 4d d8	 mov	 ecx, DWORD PTR _input_obj$[ebp]
  0029c	89 81 ec 00 00
	00		 mov	 DWORD PTR [ecx+236], eax

; 175  : 
; 176  :       input_obj->draw_cursor = !input_obj->draw_cursor;

  002a2	8b 45 d8	 mov	 eax, DWORD PTR _input_obj$[ebp]
  002a5	83 b8 e8 00 00
	00 00		 cmp	 DWORD PTR [eax+232], 0
  002ac	75 09		 jne	 SHORT $LN17@draw_input
  002ae	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR tv217[ebp], 1
  002b5	eb 07		 jmp	 SHORT $LN18@draw_input
$LN17@draw_input:
  002b7	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv217[ebp], 0
$LN18@draw_input:
  002be	8b 4d d8	 mov	 ecx, DWORD PTR _input_obj$[ebp]
  002c1	8b 55 8c	 mov	 edx, DWORD PTR tv217[ebp]
  002c4	89 91 e8 00 00
	00		 mov	 DWORD PTR [ecx+232], edx
$LN11@draw_input:

; 177  : 	}
; 178  : 
; 179  : 	set_active_screen (video_screen);

  002ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  002cf	50		 push	 eax
  002d0	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 180  : 
; 181  : 	//if (lock_screen (active_screen))
; 182  : 	{
; 183  : 
; 184  : 		if (input_obj->draw_cursor)

  002d5	8b 45 d8	 mov	 eax, DWORD PTR _input_obj$[ebp]
  002d8	83 b8 e8 00 00
	00 00		 cmp	 DWORD PTR [eax+232], 0
  002df	74 29		 je	 SHORT $LN12@draw_input

; 185  : 		{
; 186  : 
; 187  : 			ui_display_text ("_", x1 + x_size, y1);

  002e1	51		 push	 ecx
  002e2	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  002e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ec	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  002f1	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  002f6	51		 push	 ecx
  002f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_01IDAFKMJL@_@
  00301	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00306	dd d8		 fstp	 ST(0)

; 188  : 		}
; 189  : 		else

  00308	eb 68		 jmp	 SHORT $LN5@draw_input
$LN12@draw_input:

; 190  : 		{
; 191  : 
; 192  : 			parent = get_ui_object_parent (obj);

  0030a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0030d	50		 push	 eax
  0030e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00311	8b 11		 mov	 edx, DWORD PTR [ecx]
  00313	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0031a	ff d0		 call	 eax
  0031c	89 45 d4	 mov	 DWORD PTR _parent$[ebp], eax

; 193  : 
; 194  : 			if (parent)

  0031f	83 7d d4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00323	74 4d		 je	 SHORT $LN5@draw_input
$LN4@draw_input:

; 195  : 			{
; 196  : 	
; 197  : 				//set_ui_object_redraw (parent, TRUE);
; 198  : 
; 199  : 				while ((parent) && (get_ui_object_clear (parent)))

  00325	83 7d d4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00329	74 47		 je	 SHORT $LN5@draw_input
  0032b	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  0032e	50		 push	 eax
  0032f	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  00332	8b 11		 mov	 edx, DWORD PTR [ecx]
  00334	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0033b	ff d0		 call	 eax
  0033d	85 c0		 test	 eax, eax
  0033f	74 31		 je	 SHORT $LN5@draw_input

; 200  : 				{
; 201  : 	
; 202  : 					parent = get_ui_object_parent (parent);

  00341	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  00344	50		 push	 eax
  00345	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  00348	8b 11		 mov	 edx, DWORD PTR [ecx]
  0034a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00351	ff d0		 call	 eax
  00353	89 45 d4	 mov	 DWORD PTR _parent$[ebp], eax

; 203  : 	
; 204  : 					if (parent)

  00356	83 7d d4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0035a	74 14		 je	 SHORT $LN15@draw_input

; 205  : 					{
; 206  : 	
; 207  : 						set_ui_object_redraw (parent, TRUE);

  0035c	6a 01		 push	 1
  0035e	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  00361	50		 push	 eax
  00362	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  00365	8b 11		 mov	 edx, DWORD PTR [ecx]
  00367	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0036e	ff d0		 call	 eax
$LN15@draw_input:

; 208  : 					}
; 209  : 				}

  00370	eb b3		 jmp	 SHORT $LN4@draw_input
$LN5@draw_input:

; 210  : 			}
; 211  : 		}
; 212  : 
; 213  : 		//unlock_screen (active_screen);
; 214  : 	}
; 215  : 
; 216  : 	set_ui_repaint_area (x1 + x_size, y1 - 1, x1 + x_size + cursor_width, y1 + y_size + 1);

  00372	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00377	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  0037c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00384	f3 0f 2c c0	 cvttss2si eax, xmm0
  00388	50		 push	 eax
  00389	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0038e	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  00393	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _cursor_width$[ebp]
  00398	f3 0f 2c c8	 cvttss2si ecx, xmm0
  0039c	51		 push	 ecx
  0039d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  003a2	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  003aa	f3 0f 2c d0	 cvttss2si edx, xmm0
  003ae	52		 push	 edx
  003af	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  003b4	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  003b9	f3 0f 2c c0	 cvttss2si eax, xmm0
  003bd	50		 push	 eax
  003be	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area

; 217  : 	
; 218  : 	ui_restore_current_font ();

  003c3	e8 00 00 00 00	 call	 ?ui_restore_current_font@@YGXXZ ; ui_restore_current_font

; 219  : 
; 220  : 	set_active_screen (old_active_screen);

  003c8	8b 45 fc	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  003cb	50		 push	 eax
  003cc	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 221  : }

  003d1	5f		 pop	 edi
  003d2	5e		 pop	 esi
  003d3	5b		 pop	 ebx
  003d4	8b e5		 mov	 esp, ebp
  003d6	5d		 pop	 ebp
  003d7	c2 04 00	 ret	 4
?draw_input_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP		; draw_input_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\input\in_draw.c
;	COMDAT ?overload_input_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_input_ui_object_draw_functions@@YGXH@Z PROC	; overload_input_ui_object_draw_functions, COMDAT

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 229  : 
; 230  :    fn_draw_ui_object [type] = draw_input_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?draw_input_ui_object@@YGXPAUUI_OBJECT@@@Z ; draw_input_ui_object

; 231  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_input_ui_object_draw_functions@@YGXH@Z ENDP	; overload_input_ui_object_draw_functions
_TEXT	ENDS
END
