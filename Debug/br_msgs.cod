; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\bridge\br_msgs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_bridge_message_responses@@YGXXZ	; overload_bridge_message_responses
PUBLIC	?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_child_killed'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0DG@BAFJDHGM@get_local_entity_type?5?$CIsender?$CJ?5@ ; `string'
PUBLIC	??_C@_0FB@OPFKFHEG@BR_MSGS?3?5Breaking?5bridge?5and?5ro@ ; `string'
PUBLIC	??_C@_03KHPNBODO@sec@				; `string'
PUBLIC	??_C@_0CF@CMBMMHMC@BR_MSGS?3?5can?8t?5create?5repair?5mi@ ; `string'
PUBLIC	??_C@_0DA@NKHFIJJF@BR_MSGS?3?5created?5repair?5mission@ ; `string'
PUBLIC	?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_collision'::`1'::__LINE__Var
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?get_bridge_segment_damaged_object@@YGHPAUENTITY@@00@Z:PROC ; get_bridge_segment_damaged_object
EXTRN	?stop_vehicles_on_route@@YGXHH@Z:PROC		; stop_vehicles_on_route
EXTRN	?create_client_server_object_killed_explosion_effect@@YGXPAUENTITY@@@Z:PROC ; create_client_server_object_killed_explosion_effect
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?create_repair_task@@YGPAUENTITY@@W4ENTITY_SIDES@@PAUVEC3D@@PAU1@M22@Z:PROC ; create_repair_task
EXTRN	?set_road_link_breaks@@YGHHHH@Z:PROC		; set_road_link_breaks
EXTRN	?get_road_link_breaks@@YGHHH@Z:PROC		; get_road_link_breaks
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA:BYTE ; message_responses
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_pred
EXTRN	?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_kill_client_server_entity
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?task_database@@3PAUTASK_DATA@@A:BYTE		; task_database
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 0b6H ; `response_to_collision'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DA@NKHFIJJF@BR_MSGS?3?5created?5repair?5mission@
CONST	SEGMENT
??_C@_0DA@NKHFIJJF@BR_MSGS?3?5created?5repair?5mission@ DB 'BR_MSGS: crea'
	DB	'ted repair mission to [%f, %f, %f]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CMBMMHMC@BR_MSGS?3?5can?8t?5create?5repair?5mi@
CONST	SEGMENT
??_C@_0CF@CMBMMHMC@BR_MSGS?3?5can?8t?5create?5repair?5mi@ DB 'BR_MSGS: ca'
	DB	'n''t create repair mission', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KHPNBODO@sec@
CONST	SEGMENT
??_C@_03KHPNBODO@sec@ DB 'sec', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@OPFKFHEG@BR_MSGS?3?5Breaking?5bridge?5and?5ro@
CONST	SEGMENT
??_C@_0FB@OPFKFHEG@BR_MSGS?3?5Breaking?5bridge?5and?5ro@ DB 'BR_MSGS: Bre'
	DB	'aking bridge and route between %d and %d... broken bridge cou'
	DB	'nt = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BAFJDHGM@get_local_entity_type?5?$CIsender?$CJ?5@
CONST	SEGMENT
??_C@_0DG@BAFJDHGM@get_local_entity_type?5?$CIsender?$CJ?5@ DB 'get_local'
	DB	'_entity_type (sender) == ENTITY_TYPE_SEGMENT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\bridge\br_msg'
	DB	's.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 053H ; `response_to_child_killed'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_msgs.c
;	COMDAT ?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv204 = -84						; size = 4
tv184 = -84						; size = 4
tv164 = -84						; size = 4
tv129 = -84						; size = 4
tv78 = -84						; size = 4
tv196 = -80						; size = 4
tv176 = -80						; size = 4
tv156 = -80						; size = 4
tv143 = -80						; size = 4
tv90 = -80						; size = 4
tv70 = -80						; size = 4
_sub_type$ = -12					; size = 4
_succ$ = -8						; size = 4
_pred$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_collision, COMDAT

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 183  : 	entity
; 184  : 		*pred,
; 185  : 		*succ;
; 186  : 
; 187  : 	entity_sub_types
; 188  : 		sub_type;
; 189  : 
; 190  : 	//
; 191  : 	// Special case for bridge collision ( actual collision is handled by segments )
; 192  : 	//
; 193  : 	// This fn called by a segment when either of its neighbours have been killed, or it has been hit but not killed
; 194  : 	//
; 195  : 
; 196  : 	sub_type = get_local_entity_int_value (sender, INT_TYPE_ENTITY_SUB_TYPE);

  00009	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN6@response_t
  0000f	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN7@response_t
$LN6@response_t:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0001f	83 c2 0e	 add	 edx, 14			; 0000000eH
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN7@response_t:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN8@response_t
  00043	c7 45 ac 34 00
	00 00		 mov	 DWORD PTR tv78[ebp], 52	; 00000034H
  0004a	eb 21		 jmp	 SHORT $LN9@response_t
$LN8@response_t:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00052	83 c2 0e	 add	 edx, 14			; 0000000eH
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN9@response_t:
  0006d	6a 34		 push	 52			; 00000034H
  0006f	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00072	51		 push	 ecx
  00073	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 1116
  0007a	8b 45 ac	 mov	 eax, DWORD PTR tv78[ebp]
  0007d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00084	ff d1		 call	 ecx
  00086	89 45 f4	 mov	 DWORD PTR _sub_type$[ebp], eax

; 197  : 
; 198  : 	if (sub_type == ENTITY_SUB_TYPE_FIXED_BRIDGE_UNSUPPORTED_MID_SECTION)

  00089	83 7d f4 03	 cmp	 DWORD PTR _sub_type$[ebp], 3
  0008d	0f 85 d5 00 00
	00		 jne	 $LN2@response_t

; 199  : 	{
; 200  : 		if (get_local_entity_int_value (sender, INT_TYPE_ALIVE))

  00093	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00097	74 0a		 je	 SHORT $LN10@response_t
  00099	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0009c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009e	89 4d b0	 mov	 DWORD PTR tv90[ebp], ecx
  000a1	eb 1d		 jmp	 SHORT $LN11@response_t
$LN10@response_t:
  000a3	68 c8 00 00 00	 push	 200			; 000000c8H
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b3	52		 push	 edx
  000b4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b9	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN11@response_t:
  000c0	b8 01 00 00 00	 mov	 eax, 1
  000c5	85 c0		 test	 eax, eax
  000c7	74 09		 je	 SHORT $LN12@response_t
  000c9	c7 45 ac 07 00
	00 00		 mov	 DWORD PTR tv129[ebp], 7
  000d0	eb 1d		 jmp	 SHORT $LN13@response_t
$LN12@response_t:
  000d2	68 c8 00 00 00	 push	 200			; 000000c8H
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e8	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN13@response_t:
  000ef	6a 07		 push	 7
  000f1	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  000f4	52		 push	 edx
  000f5	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 1116
  000fc	8b 4d ac	 mov	 ecx, DWORD PTR tv129[ebp]
  000ff	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00106	ff d2		 call	 edx
  00108	85 c0		 test	 eax, eax
  0010a	74 5c		 je	 SHORT $LN2@response_t

; 201  : 		{
; 202  : 			//
; 203  : 			// Bridge section has nothing to support it, so kill it
; 204  : 			//
; 205  : 		
; 206  : 			if (get_comms_model() == COMMS_MODEL_SERVER)

  0010c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00113	75 53		 jne	 SHORT $LN2@response_t

; 207  : 			{
; 208  : 				kill_client_server_entity (sender);

  00115	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00119	74 0a		 je	 SHORT $LN14@response_t
  0011b	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0011e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00120	89 4d b0	 mov	 DWORD PTR tv143[ebp], ecx
  00123	eb 21		 jmp	 SHORT $LN15@response_t
$LN14@response_t:
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0012b	83 c2 1a	 add	 edx, 26			; 0000001aH
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN15@response_t:
  00146	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00149	51		 push	 ecx
  0014a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00150	c1 e2 02	 shl	 edx, 2
  00153	8b 45 b0	 mov	 eax, DWORD PTR tv143[ebp]
  00156	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  0015d	ff d1		 call	 ecx

; 209  : 
; 210  : 				create_client_server_object_killed_explosion_effect (sender);

  0015f	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?create_client_server_object_killed_explosion_effect@@YGXPAUENTITY@@@Z ; create_client_server_object_killed_explosion_effect
$LN2@response_t:

; 211  : 			}
; 212  : 		}
; 213  : 	}
; 214  : 
; 215  : 	//
; 216  : 	// change object shape ( depending on state of its neighbours )
; 217  : 	//
; 218  : 
; 219  : 	pred = get_local_entity_child_pred (sender, LIST_TYPE_SEGMENT);

  00168	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0016c	74 0a		 je	 SHORT $LN16@response_t
  0016e	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00171	8b 08		 mov	 ecx, DWORD PTR [eax]
  00173	89 4d b0	 mov	 DWORD PTR tv156[ebp], ecx
  00176	eb 21		 jmp	 SHORT $LN17@response_t
$LN16@response_t:
  00178	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0017e	83 c2 25	 add	 edx, 37			; 00000025H
  00181	52		 push	 edx
  00182	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00187	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00192	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN17@response_t:
  00199	b9 01 00 00 00	 mov	 ecx, 1
  0019e	85 c9		 test	 ecx, ecx
  001a0	74 09		 je	 SHORT $LN18@response_t
  001a2	c7 45 ac 23 00
	00 00		 mov	 DWORD PTR tv164[ebp], 35 ; 00000023H
  001a9	eb 21		 jmp	 SHORT $LN19@response_t
$LN18@response_t:
  001ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001b1	83 c2 25	 add	 edx, 37			; 00000025H
  001b4	52		 push	 edx
  001b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c5	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN19@response_t:
  001cc	6a 23		 push	 35			; 00000023H
  001ce	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  001d1	51		 push	 ecx
  001d2	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv156[ebp], 180
  001d9	8b 45 ac	 mov	 eax, DWORD PTR tv164[ebp]
  001dc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001e3	ff d1		 call	 ecx
  001e5	89 45 fc	 mov	 DWORD PTR _pred$[ebp], eax

; 220  : 
; 221  : 	succ = get_local_entity_child_succ (sender, LIST_TYPE_SEGMENT);

  001e8	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  001ec	74 0a		 je	 SHORT $LN20@response_t
  001ee	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  001f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f3	89 4d b0	 mov	 DWORD PTR tv176[ebp], ecx
  001f6	eb 21		 jmp	 SHORT $LN21@response_t
$LN20@response_t:
  001f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001fe	83 c2 27	 add	 edx, 39			; 00000027H
  00201	52		 push	 edx
  00202	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00207	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0020c	50		 push	 eax
  0020d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00212	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN21@response_t:
  00219	b9 01 00 00 00	 mov	 ecx, 1
  0021e	85 c9		 test	 ecx, ecx
  00220	74 09		 je	 SHORT $LN22@response_t
  00222	c7 45 ac 23 00
	00 00		 mov	 DWORD PTR tv184[ebp], 35 ; 00000023H
  00229	eb 21		 jmp	 SHORT $LN23@response_t
$LN22@response_t:
  0022b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00231	83 c2 27	 add	 edx, 39			; 00000027H
  00234	52		 push	 edx
  00235	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00245	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN23@response_t:
  0024c	6a 23		 push	 35			; 00000023H
  0024e	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00251	51		 push	 ecx
  00252	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv176[ebp], 180
  00259	8b 45 ac	 mov	 eax, DWORD PTR tv184[ebp]
  0025c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00263	ff d1		 call	 ecx
  00265	89 45 f8	 mov	 DWORD PTR _succ$[ebp], eax

; 222  : 
; 223  : 	set_local_entity_int_value (sender, INT_TYPE_OBJECT_3D_SHAPE, get_bridge_segment_damaged_object (sender, pred, succ));

  00268	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0026c	74 0a		 je	 SHORT $LN24@response_t
  0026e	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00271	8b 08		 mov	 ecx, DWORD PTR [eax]
  00273	89 4d b0	 mov	 DWORD PTR tv196[ebp], ecx
  00276	eb 21		 jmp	 SHORT $LN25@response_t
$LN24@response_t:
  00278	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0027e	83 c2 29	 add	 edx, 41			; 00000029H
  00281	52		 push	 edx
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00287	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0028c	50		 push	 eax
  0028d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00292	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN25@response_t:
  00299	b9 01 00 00 00	 mov	 ecx, 1
  0029e	85 c9		 test	 ecx, ecx
  002a0	74 09		 je	 SHORT $LN26@response_t
  002a2	c7 45 ac 92 00
	00 00		 mov	 DWORD PTR tv204[ebp], 146 ; 00000092H
  002a9	eb 21		 jmp	 SHORT $LN27@response_t
$LN26@response_t:
  002ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002b1	83 c2 29	 add	 edx, 41			; 00000029H
  002b4	52		 push	 edx
  002b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002bf	50		 push	 eax
  002c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c5	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv204[ebp], 0
$LN27@response_t:
  002cc	8b 4d f8	 mov	 ecx, DWORD PTR _succ$[ebp]
  002cf	51		 push	 ecx
  002d0	8b 55 fc	 mov	 edx, DWORD PTR _pred$[ebp]
  002d3	52		 push	 edx
  002d4	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  002d7	50		 push	 eax
  002d8	e8 00 00 00 00	 call	 ?get_bridge_segment_damaged_object@@YGHPAUENTITY@@00@Z ; get_bridge_segment_damaged_object
  002dd	50		 push	 eax
  002de	68 92 00 00 00	 push	 146			; 00000092H
  002e3	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  002e6	51		 push	 ecx
  002e7	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv196[ebp], 1116
  002ee	8b 45 ac	 mov	 eax, DWORD PTR tv204[ebp]
  002f1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  002f8	ff d1		 call	 ecx

; 224  : 
; 225  : 	return (TRUE);

  002fa	b8 01 00 00 00	 mov	 eax, 1

; 226  : }

  002ff	5f		 pop	 edi
  00300	5e		 pop	 esi
  00301	5b		 pop	 ebx
  00302	8b e5		 mov	 esp, ebp
  00304	5d		 pop	 ebp
  00305	c2 10 00	 ret	 16			; 00000010H
?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_collision
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_msgs.c
;	COMDAT ?response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv267 = -96						; size = 4
tv233 = -96						; size = 4
tv202 = -96						; size = 4
tv181 = -96						; size = 4
tv150 = -96						; size = 4
tv130 = -96						; size = 4
tv78 = -96						; size = 4
tv260 = -92						; size = 4
tv225 = -92						; size = 4
tv194 = -92						; size = 4
tv174 = -92						; size = 4
tv163 = -92						; size = 4
tv142 = -92						; size = 4
tv90 = -92						; size = 4
tv70 = -92						; size = 4
_count$1 = -24						; size = 4
_position$ = -20					; size = 4
_sec$ = -16						; size = 4
_bridge_type$ = -12					; size = 4
_end_node$ = -8						; size = 4
_start_node$ = -4					; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_child_killed, COMDAT

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 84   : 	int
; 85   : 		start_node,
; 86   : 		end_node;
; 87   : 
; 88   : 	entity_sub_types
; 89   : 		bridge_type;
; 90   : 
; 91   : 	entity
; 92   : 		*sec;
; 93   : 
; 94   : 	vec3d
; 95   : 		*position;
; 96   : 
; 97   : 	bridge_type = get_local_entity_int_value (receiver, INT_TYPE_ENTITY_SUB_TYPE);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN9@response_t
  0000f	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d a4	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN10@response_t
$LN9@response_t:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0001f	83 c2 0e	 add	 edx, 14			; 0000000eH
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN10@response_t:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN11@response_t
  00043	c7 45 a0 34 00
	00 00		 mov	 DWORD PTR tv78[ebp], 52	; 00000034H
  0004a	eb 21		 jmp	 SHORT $LN12@response_t
$LN11@response_t:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00052	83 c2 0e	 add	 edx, 14			; 0000000eH
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN12@response_t:
  0006d	6a 34		 push	 52			; 00000034H
  0006f	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00072	51		 push	 ecx
  00073	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 1116
  0007a	8b 45 a0	 mov	 eax, DWORD PTR tv78[ebp]
  0007d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00084	ff d1		 call	 ecx
  00086	89 45 f4	 mov	 DWORD PTR _bridge_type$[ebp], eax

; 98   : 
; 99   : 	#if DEBUG_MODULE >= 2
; 100  : 
; 101  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 102  : 
; 103  : 	#endif
; 104  : 
; 105  : 	start_node = get_local_entity_int_value (receiver, INT_TYPE_START_NODE);

  00089	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0008d	74 0a		 je	 SHORT $LN13@response_t
  0008f	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00092	8b 08		 mov	 ecx, DWORD PTR [eax]
  00094	89 4d a4	 mov	 DWORD PTR tv90[ebp], ecx
  00097	eb 21		 jmp	 SHORT $LN14@response_t
$LN13@response_t:
  00099	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0009f	83 c2 16	 add	 edx, 22			; 00000016H
  000a2	52		 push	 edx
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN14@response_t:
  000ba	b9 01 00 00 00	 mov	 ecx, 1
  000bf	85 c9		 test	 ecx, ecx
  000c1	74 09		 je	 SHORT $LN15@response_t
  000c3	c7 45 a0 ca 00
	00 00		 mov	 DWORD PTR tv130[ebp], 202 ; 000000caH
  000ca	eb 21		 jmp	 SHORT $LN16@response_t
$LN15@response_t:
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000d2	83 c2 16	 add	 edx, 22			; 00000016H
  000d5	52		 push	 edx
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e6	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN16@response_t:
  000ed	68 ca 00 00 00	 push	 202			; 000000caH
  000f2	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  000f5	51		 push	 ecx
  000f6	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv90[ebp], 1116
  000fd	8b 45 a0	 mov	 eax, DWORD PTR tv130[ebp]
  00100	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00107	ff d1		 call	 ecx
  00109	89 45 fc	 mov	 DWORD PTR _start_node$[ebp], eax

; 106  : 
; 107  : 	end_node = get_local_entity_int_value (receiver, INT_TYPE_END_NODE);

  0010c	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00110	74 0a		 je	 SHORT $LN17@response_t
  00112	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	89 4d a4	 mov	 DWORD PTR tv142[ebp], ecx
  0011a	eb 21		 jmp	 SHORT $LN18@response_t
$LN17@response_t:
  0011c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00122	83 c2 18	 add	 edx, 24			; 00000018H
  00125	52		 push	 edx
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00136	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN18@response_t:
  0013d	b9 01 00 00 00	 mov	 ecx, 1
  00142	85 c9		 test	 ecx, ecx
  00144	74 09		 je	 SHORT $LN19@response_t
  00146	c7 45 a0 32 00
	00 00		 mov	 DWORD PTR tv150[ebp], 50 ; 00000032H
  0014d	eb 21		 jmp	 SHORT $LN20@response_t
$LN19@response_t:
  0014f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00155	83 c2 18	 add	 edx, 24			; 00000018H
  00158	52		 push	 edx
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00169	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN20@response_t:
  00170	6a 32		 push	 50			; 00000032H
  00172	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00175	51		 push	 ecx
  00176	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv142[ebp], 1116
  0017d	8b 45 a0	 mov	 eax, DWORD PTR tv150[ebp]
  00180	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00187	ff d1		 call	 ecx
  00189	89 45 f8	 mov	 DWORD PTR _end_node$[ebp], eax

; 108  : 
; 109  : 	#if DEBUG_MODULE
; 110  : 
; 111  : 	debug_log ("BR_MSGS : Bridge Segment Killed ! Breaking link between nodes %d and %d", start_node, end_node);
; 112  : 
; 113  : 	#endif
; 114  : 
; 115  : 	//
; 116  : 	// Break route link
; 117  : 	//
; 118  : 
; 119  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  0018c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00193	0f 85 23 03 00
	00		 jne	 $LN7@response_t

; 120  : 	{
; 121  : 		ASSERT (get_local_entity_type (sender) == ENTITY_TYPE_SEGMENT);

  00199	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0019d	74 0a		 je	 SHORT $LN21@response_t
  0019f	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  001a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a4	89 4d a4	 mov	 DWORD PTR tv163[ebp], ecx
  001a7	eb 21		 jmp	 SHORT $LN22@response_t
$LN21@response_t:
  001a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001af	83 c2 26	 add	 edx, 38			; 00000026H
  001b2	52		 push	 edx
  001b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN22@response_t:
  001ca	83 7d a4 1a	 cmp	 DWORD PTR tv163[ebp], 26 ; 0000001aH
  001ce	74 18		 je	 SHORT $LN3@response_t
  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001d5	83 c0 26	 add	 eax, 38			; 00000026H
  001d8	50		 push	 eax
  001d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001de	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@BAFJDHGM@get_local_entity_type?5?$CIsender?$CJ?5@
  001e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@response_t:

; 122  : 	
; 123  : 		if (get_local_entity_int_value (receiver, INT_TYPE_ALIVE))

  001e8	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  001ec	74 0a		 je	 SHORT $LN23@response_t
  001ee	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  001f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f3	89 4d a4	 mov	 DWORD PTR tv174[ebp], ecx
  001f6	eb 1a		 jmp	 SHORT $LN24@response_t
$LN23@response_t:
  001f8	6a 7b		 push	 123			; 0000007bH
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN24@response_t:
  00212	b8 01 00 00 00	 mov	 eax, 1
  00217	85 c0		 test	 eax, eax
  00219	74 09		 je	 SHORT $LN25@response_t
  0021b	c7 45 a0 07 00
	00 00		 mov	 DWORD PTR tv181[ebp], 7
  00222	eb 1a		 jmp	 SHORT $LN26@response_t
$LN25@response_t:
  00224	6a 7b		 push	 123			; 0000007bH
  00226	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00231	51		 push	 ecx
  00232	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00237	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN26@response_t:
  0023e	6a 07		 push	 7
  00240	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00243	52		 push	 edx
  00244	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv174[ebp], 1116
  0024b	8b 4d a0	 mov	 ecx, DWORD PTR tv181[ebp]
  0024e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00255	ff d2		 call	 edx
  00257	85 c0		 test	 eax, eax
  00259	0f 84 5d 02 00
	00		 je	 $LN7@response_t

; 124  : 		{
; 125  : 
; 126  : 			int
; 127  : 				count;
; 128  : 
; 129  : 			set_local_entity_int_value (receiver, INT_TYPE_ALIVE, FALSE);

  0025f	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00263	74 0a		 je	 SHORT $LN27@response_t
  00265	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00268	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026a	89 4d a4	 mov	 DWORD PTR tv194[ebp], ecx
  0026d	eb 21		 jmp	 SHORT $LN28@response_t
$LN27@response_t:
  0026f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00275	83 c2 2e	 add	 edx, 46			; 0000002eH
  00278	52		 push	 edx
  00279	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00289	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN28@response_t:
  00290	b9 01 00 00 00	 mov	 ecx, 1
  00295	85 c9		 test	 ecx, ecx
  00297	74 09		 je	 SHORT $LN29@response_t
  00299	c7 45 a0 07 00
	00 00		 mov	 DWORD PTR tv202[ebp], 7
  002a0	eb 21		 jmp	 SHORT $LN30@response_t
$LN29@response_t:
  002a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002a8	83 c2 2e	 add	 edx, 46			; 0000002eH
  002ab	52		 push	 edx
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002b6	50		 push	 eax
  002b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bc	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv202[ebp], 0
$LN30@response_t:
  002c3	6a 00		 push	 0
  002c5	6a 07		 push	 7
  002c7	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002ca	51		 push	 ecx
  002cb	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv194[ebp], 1116
  002d2	8b 45 a0	 mov	 eax, DWORD PTR tv202[ebp]
  002d5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  002dc	ff d1		 call	 ecx

; 130  : 
; 131  : 			count = get_road_link_breaks (start_node, end_node);

  002de	8b 45 f8	 mov	 eax, DWORD PTR _end_node$[ebp]
  002e1	50		 push	 eax
  002e2	8b 4d fc	 mov	 ecx, DWORD PTR _start_node$[ebp]
  002e5	51		 push	 ecx
  002e6	e8 00 00 00 00	 call	 ?get_road_link_breaks@@YGHHH@Z ; get_road_link_breaks
  002eb	89 45 e8	 mov	 DWORD PTR _count$1[ebp], eax

; 132  : 
; 133  : 			count ++;

  002ee	8b 45 e8	 mov	 eax, DWORD PTR _count$1[ebp]
  002f1	83 c0 01	 add	 eax, 1
  002f4	89 45 e8	 mov	 DWORD PTR _count$1[ebp], eax

; 134  : 
; 135  : 			set_road_link_breaks (start_node, end_node, count);

  002f7	8b 45 e8	 mov	 eax, DWORD PTR _count$1[ebp]
  002fa	50		 push	 eax
  002fb	8b 4d f8	 mov	 ecx, DWORD PTR _end_node$[ebp]
  002fe	51		 push	 ecx
  002ff	8b 55 fc	 mov	 edx, DWORD PTR _start_node$[ebp]
  00302	52		 push	 edx
  00303	e8 00 00 00 00	 call	 ?set_road_link_breaks@@YGHHHH@Z ; set_road_link_breaks

; 136  : 
; 137  : 			debug_log ("BR_MSGS: Breaking bridge and route between %d and %d... broken bridge count = %d", count);

  00308	8b 45 e8	 mov	 eax, DWORD PTR _count$1[ebp]
  0030b	50		 push	 eax
  0030c	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OPFKFHEG@BR_MSGS?3?5Breaking?5bridge?5and?5ro@
  00311	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00316	83 c4 08	 add	 esp, 8

; 138  : 	
; 139  : 			//
; 140  : 			// Stop any vehicle on route
; 141  : 			//
; 142  : 	
; 143  : 			stop_vehicles_on_route (start_node, end_node);

  00319	8b 45 f8	 mov	 eax, DWORD PTR _end_node$[ebp]
  0031c	50		 push	 eax
  0031d	8b 4d fc	 mov	 ecx, DWORD PTR _start_node$[ebp]
  00320	51		 push	 ecx
  00321	e8 00 00 00 00	 call	 ?stop_vehicles_on_route@@YGXHH@Z ; stop_vehicles_on_route

; 144  : 
; 145  : 			//
; 146  : 			// Create Repair task
; 147  : 			//
; 148  : 
; 149  : 			position = get_local_entity_vec3d_ptr (sender, VEC3D_TYPE_POSITION);

  00326	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0032a	74 0a		 je	 SHORT $LN31@response_t
  0032c	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0032f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00331	89 4d a4	 mov	 DWORD PTR tv225[ebp], ecx
  00334	eb 21		 jmp	 SHORT $LN32@response_t
$LN31@response_t:
  00336	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0033c	83 c2 42	 add	 edx, 66			; 00000042H
  0033f	52		 push	 edx
  00340	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00345	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0034a	50		 push	 eax
  0034b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00350	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv225[ebp], 0
$LN32@response_t:
  00357	b9 01 00 00 00	 mov	 ecx, 1
  0035c	85 c9		 test	 ecx, ecx
  0035e	74 09		 je	 SHORT $LN33@response_t
  00360	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv233[ebp], 8
  00367	eb 21		 jmp	 SHORT $LN34@response_t
$LN33@response_t:
  00369	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0036f	83 c2 42	 add	 edx, 66			; 00000042H
  00372	52		 push	 edx
  00373	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00378	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0037d	50		 push	 eax
  0037e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00383	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv233[ebp], 0
$LN34@response_t:
  0038a	6a 08		 push	 8
  0038c	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  0038f	51		 push	 ecx
  00390	6b 55 a4 60	 imul	 edx, DWORD PTR tv225[ebp], 96
  00394	8b 45 a0	 mov	 eax, DWORD PTR tv233[ebp]
  00397	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0039e	ff d1		 call	 ecx
  003a0	89 45 ec	 mov	 DWORD PTR _position$[ebp], eax

; 150  : 				
; 151  : 			sec = get_local_sector_entity (position);

  003a3	8b 45 ec	 mov	 eax, DWORD PTR _position$[ebp]
  003a6	50		 push	 eax
  003a7	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  003ac	89 45 f0	 mov	 DWORD PTR _sec$[ebp], eax

; 152  : 
; 153  : 			ASSERT (sec);

  003af	83 7d f0 00	 cmp	 DWORD PTR _sec$[ebp], 0
  003b3	75 18		 jne	 SHORT $LN5@response_t
  003b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  003ba	83 c0 46	 add	 eax, 70			; 00000046H
  003bd	50		 push	 eax
  003be	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c3	68 00 00 00 00	 push	 OFFSET ??_C@_03KHPNBODO@sec@
  003c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@response_t:

; 154  : 			
; 155  : 			if (!create_repair_task ((entity_sides) get_local_entity_int_value (sec, INT_TYPE_SIDE), position, receiver, task_database [ENTITY_SUB_TYPE_TASK_REPAIR].task_priority, NULL, NULL))

  003cd	83 7d f0 00	 cmp	 DWORD PTR _sec$[ebp], 0
  003d1	74 0a		 je	 SHORT $LN35@response_t
  003d3	8b 45 f0	 mov	 eax, DWORD PTR _sec$[ebp]
  003d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d8	89 4d a4	 mov	 DWORD PTR tv260[ebp], ecx
  003db	eb 1d		 jmp	 SHORT $LN36@response_t
$LN35@response_t:
  003dd	68 9b 00 00 00	 push	 155			; 0000009bH
  003e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003ed	52		 push	 edx
  003ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv260[ebp], 0
$LN36@response_t:
  003fa	b8 01 00 00 00	 mov	 eax, 1
  003ff	85 c0		 test	 eax, eax
  00401	74 09		 je	 SHORT $LN37@response_t
  00403	c7 45 a0 bb 00
	00 00		 mov	 DWORD PTR tv267[ebp], 187 ; 000000bbH
  0040a	eb 1d		 jmp	 SHORT $LN38@response_t
$LN37@response_t:
  0040c	68 9b 00 00 00	 push	 155			; 0000009bH
  00411	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LJJOFNCI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00416	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0041c	51		 push	 ecx
  0041d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00422	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv267[ebp], 0
$LN38@response_t:
  00429	6a 00		 push	 0
  0042b	6a 00		 push	 0
  0042d	ba 50 00 00 00	 mov	 edx, 80			; 00000050H
  00432	6b c2 12	 imul	 eax, edx, 18
  00435	51		 push	 ecx
  00436	f3 0f 10 80 10
	00 00 00	 movss	 xmm0, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+16]
  0043e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00443	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00446	51		 push	 ecx
  00447	8b 55 ec	 mov	 edx, DWORD PTR _position$[ebp]
  0044a	52		 push	 edx
  0044b	68 bb 00 00 00	 push	 187			; 000000bbH
  00450	8b 45 f0	 mov	 eax, DWORD PTR _sec$[ebp]
  00453	50		 push	 eax
  00454	69 4d a4 5c 04
	00 00		 imul	 ecx, DWORD PTR tv260[ebp], 1116
  0045b	8b 55 a0	 mov	 edx, DWORD PTR tv267[ebp]
  0045e	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  00465	ff d0		 call	 eax
  00467	50		 push	 eax
  00468	e8 00 00 00 00	 call	 ?create_repair_task@@YGPAUENTITY@@W4ENTITY_SIDES@@PAUVEC3D@@PAU1@M22@Z ; create_repair_task
  0046d	85 c0		 test	 eax, eax
  0046f	75 0f		 jne	 SHORT $LN6@response_t

; 156  : 			{
; 157  : 				debug_log ("BR_MSGS: can't create repair mission");

  00471	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@CMBMMHMC@BR_MSGS?3?5can?8t?5create?5repair?5mi@
  00476	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0047b	83 c4 04	 add	 esp, 4

; 158  : 			}
; 159  : 			else

  0047e	eb 3c		 jmp	 SHORT $LN7@response_t
$LN6@response_t:

; 160  : 			{
; 161  : 				debug_log ("BR_MSGS: created repair mission to [%f, %f, %f]", position->x, position->y, position->z);

  00480	8b 45 ec	 mov	 eax, DWORD PTR _position$[ebp]
  00483	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00488	83 ec 08	 sub	 esp, 8
  0048b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00490	8b 4d ec	 mov	 ecx, DWORD PTR _position$[ebp]
  00493	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  00498	83 ec 08	 sub	 esp, 8
  0049b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004a0	8b 55 ec	 mov	 edx, DWORD PTR _position$[ebp]
  004a3	f3 0f 5a 02	 cvtss2sd xmm0, DWORD PTR [edx]
  004a7	83 ec 08	 sub	 esp, 8
  004aa	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004af	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NKHFIJJF@BR_MSGS?3?5created?5repair?5mission@
  004b4	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  004b9	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN7@response_t:

; 162  : 			}
; 163  : 		}
; 164  : 	}
; 165  : 
; 166  : 	//
; 167  : 	// insert segment into the update list ( so that it can fall to the floor etc. )
; 168  : 	//
; 169  : 
; 170  : 	insert_local_entity_into_parents_child_list (sender, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  004bc	6a 00		 push	 0
  004be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  004c3	50		 push	 eax
  004c4	6a 29		 push	 41			; 00000029H
  004c6	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  004c9	51		 push	 ecx
  004ca	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 171  : 
; 172  : 	return (TRUE);

  004cf	b8 01 00 00 00	 mov	 eax, 1

; 173  : }

  004d4	5f		 pop	 edi
  004d5	5e		 pop	 esi
  004d6	5b		 pop	 ebx
  004d7	8b e5		 mov	 esp, ebp
  004d9	5d		 pop	 ebp
  004da	c2 10 00	 ret	 16			; 00000010H
?response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_child_killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\bridge\br_msgs.c
;	COMDAT ?overload_bridge_message_responses@@YGXXZ
_TEXT	SEGMENT
?overload_bridge_message_responses@@YGXXZ PROC		; overload_bridge_message_responses, COMDAT

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 294  : 	message_responses[ENTITY_TYPE_BRIDGE][ENTITY_MESSAGE_CHILD_KILLED] 			= response_to_child_killed;

  00009	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  0000e	d1 e0		 shl	 eax, 1
  00010	b9 04 00 00 00	 mov	 ecx, 4
  00015	6b d1 05	 imul	 edx, ecx, 5
  00018	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[eax+edx], OFFSET ?response_to_child_killed@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_child_killed

; 295  : 
; 296  : 	message_responses[ENTITY_TYPE_BRIDGE][ENTITY_MESSAGE_COLLISION] 				= response_to_collision;

  00023	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00028	d1 e0		 shl	 eax, 1
  0002a	b9 04 00 00 00	 mov	 ecx, 4
  0002f	6b d1 07	 imul	 edx, ecx, 7
  00032	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[eax+edx], OFFSET ?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_collision

; 297  : 
; 298  : 	#if DEBUG_MODULE
; 299  : 
; 300  : 	message_responses[ENTITY_TYPE_BRIDGE][ENTITY_MESSAGE_LINK_CHILD]				= response_to_link_child;
; 301  : 
; 302  : 	message_responses[ENTITY_TYPE_BRIDGE][ENTITY_MESSAGE_UNLINK_CHILD]			= response_to_unlink_child;
; 303  : 
; 304  : 	message_responses[ENTITY_TYPE_BRIDGE][ENTITY_MESSAGE_LINK_PARENT]				= response_to_link_parent;
; 305  : 
; 306  : 	message_responses[ENTITY_TYPE_BRIDGE][ENTITY_MESSAGE_UNLINK_PARENT]			= response_to_unlink_parent;
; 307  : 
; 308  : 	#endif
; 309  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
?overload_bridge_message_responses@@YGXXZ ENDP		; overload_bridge_message_responses
_TEXT	ENDS
END
