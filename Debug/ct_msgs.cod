; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\fixed\city\ct_msgs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_city_message_responses@@YGXXZ		; overload_city_message_responses
PUBLIC	?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA ; `update_city_bounding_box'::`1'::__LINE__Var
PUBLIC	??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_09NOCJONPE@this_city@			; `string'
PUBLIC	??_C@_0O@KGAHIOHE@this_building@		; `string'
PUBLIC	??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@ ; `string'
PUBLIC	??_C@_0N@LOLJEHA@bounding_box@			; `string'
PUBLIC	??_C@_0DD@NCJIGJOL@raw?9?$DObounding_box_min?4x?5?$DM?$DN?5raw?9@ ; `string'
PUBLIC	??_C@_0DD@KIIEIBIO@raw?9?$DObounding_box_min?4y?5?$DM?$DN?5raw?9@ ; `string'
PUBLIC	??_C@_0DD@CGKBLJCB@raw?9?$DObounding_box_min?4z?5?$DM?$DN?5raw?9@ ; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?get_object_3d_bounding_box_without_lines@@YGPAUOBJECT_3D_BOUNDS@@H@Z:PROC ; get_object_3d_bounding_box_without_lines
EXTRN	?overload_fixed_message_responses@@YGXW4ENTITY_TYPES@@@Z:PROC ; overload_fixed_message_responses
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA:BYTE ; message_responses
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0DD@CGKBLJCB@raw?9?$DObounding_box_min?4z?5?$DM?$DN?5raw?9@
CONST	SEGMENT
??_C@_0DD@CGKBLJCB@raw?9?$DObounding_box_min?4z?5?$DM?$DN?5raw?9@ DB 'raw'
	DB	'->bounding_box_min.z <= raw->bounding_box_max.z', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KIIEIBIO@raw?9?$DObounding_box_min?4y?5?$DM?$DN?5raw?9@
CONST	SEGMENT
??_C@_0DD@KIIEIBIO@raw?9?$DObounding_box_min?4y?5?$DM?$DN?5raw?9@ DB 'raw'
	DB	'->bounding_box_min.y <= raw->bounding_box_max.y', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@NCJIGJOL@raw?9?$DObounding_box_min?4x?5?$DM?$DN?5raw?9@
CONST	SEGMENT
??_C@_0DD@NCJIGJOL@raw?9?$DObounding_box_min?4x?5?$DM?$DN?5raw?9@ DB 'raw'
	DB	'->bounding_box_min.x <= raw->bounding_box_max.x', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LOLJEHA@bounding_box@
CONST	SEGMENT
??_C@_0N@LOLJEHA@bounding_box@ DB 'bounding_box', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@
CONST	SEGMENT
??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@ DB 'object_3d'
	DB	'_index != OBJECT_3D_INVALID_OBJECT_INDEX', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KGAHIOHE@this_building@
CONST	SEGMENT
??_C@_0O@KGAHIOHE@this_building@ DB 'this_building', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NOCJONPE@this_city@
CONST	SEGMENT
??_C@_09NOCJONPE@this_city@ DB 'this_city', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\fixed\city\ct_msgs.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA DD 050H ; `update_city_bounding_box'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\city\ct_msgs.c
;	COMDAT ?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
_list_type$ = -4					; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_link_child, COMDAT

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 190  : 	list_types
; 191  : 		list_type;
; 192  : 
; 193  : 	#if DEBUG_MODULE
; 194  : 
; 195  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 196  : 
; 197  : 	#endif
; 198  : 
; 199  : 	list_type = va_arg (pargs, list_types);

  00009	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00012	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00015	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00018	89 55 fc	 mov	 DWORD PTR _list_type$[ebp], edx

; 200  : 
; 201  : 	switch (list_type)

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _list_type$[ebp]
  0001e	89 45 b8	 mov	 DWORD PTR tv66[ebp], eax
  00021	83 7d b8 07	 cmp	 DWORD PTR tv66[ebp], 7
  00025	74 02		 je	 SHORT $LN4@response_t
  00027	eb 0d		 jmp	 SHORT $LN2@response_t
$LN4@response_t:

; 202  : 	{
; 203  : 		////////////////////////////////////////
; 204  : 		case LIST_TYPE_CITY_BUILDING:
; 205  : 		////////////////////////////////////////
; 206  : 		{
; 207  : 			update_city_bounding_box (receiver, sender);

  00029	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ?update_city_bounding_box@@YGXPAUENTITY@@0@Z ; update_city_bounding_box
$LN2@response_t:

; 208  : 
; 209  : 			break;
; 210  : 		}
; 211  : 	}
; 212  : 
; 213  : 	return (TRUE);

  00036	b8 01 00 00 00	 mov	 eax, 1

; 214  : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 10 00	 ret	 16			; 00000010H
?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_link_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\city\ct_msgs.c
;	COMDAT ?update_city_bounding_box@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv189 = -164						; size = 4
tv159 = -164						; size = 4
tv89 = -164						; size = 4
tv181 = -160						; size = 4
tv151 = -160						; size = 4
tv81 = -160						; size = 4
_heading$ = -92						; size = 4
_attitude$ = -88					; size = 36
_p2$ = -52						; size = 12
_p1$ = -40						; size = 12
_position_offset$ = -28					; size = 12
_building_position$ = -16				; size = 4
_bounding_box$ = -12					; size = 4
_object_3d_index$ = -8					; size = 4
_raw$ = -4						; size = 4
_this_city$ = 8						; size = 4
_this_building$ = 12					; size = 4
?update_city_bounding_box@@YGXPAUENTITY@@0@Z PROC	; update_city_bounding_box, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 81   : 	city
; 82   : 		*raw;
; 83   : 
; 84   : 	object_3d_index_numbers
; 85   : 		object_3d_index;
; 86   : 
; 87   : 	object_3d_bounds
; 88   : 		*bounding_box;
; 89   : 
; 90   : 	vec3d
; 91   : 		*building_position,
; 92   : 		position_offset,
; 93   : 		p1,
; 94   : 		p2;
; 95   : 
; 96   : 	matrix3x3
; 97   : 		attitude;
; 98   : 
; 99   : 	float
; 100  : 		heading;
; 101  : 
; 102  : 	ASSERT (this_city);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _this_city$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@update_cit
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  00017	83 c0 16	 add	 eax, 22			; 00000016H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_09NOCJONPE@this_city@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_cit:

; 103  : 
; 104  : 	ASSERT (this_building);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _this_building$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@update_cit
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  00035	83 c0 18	 add	 eax, 24			; 00000018H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KGAHIOHE@this_building@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@update_cit:

; 105  : 
; 106  : 	raw = (city *) get_local_entity_data (this_city);

  00048	8b 45 08	 mov	 eax, DWORD PTR _this_city$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 107  : 
; 108  : 	//
; 109  : 	// get building bounding box minmax points (assume on flat ground)
; 110  : 	//
; 111  : 
; 112  : 	object_3d_index = get_local_entity_int_value (this_building, INT_TYPE_OBJECT_3D_SHAPE);

  00051	83 7d 0c 00	 cmp	 DWORD PTR _this_building$[ebp], 0
  00055	74 0d		 je	 SHORT $LN22@update_cit
  00057	8b 45 0c	 mov	 eax, DWORD PTR _this_building$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv81[ebp], ecx
  00062	eb 24		 jmp	 SHORT $LN23@update_cit
$LN22@update_cit:
  00064	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  0006a	83 c2 20	 add	 edx, 32			; 00000020H
  0006d	52		 push	 edx
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007e	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN23@update_cit:
  00088	b9 01 00 00 00	 mov	 ecx, 1
  0008d	85 c9		 test	 ecx, ecx
  0008f	74 0c		 je	 SHORT $LN24@update_cit
  00091	c7 85 5c ff ff
	ff 92 00 00 00	 mov	 DWORD PTR tv89[ebp], 146 ; 00000092H
  0009b	eb 24		 jmp	 SHORT $LN25@update_cit
$LN24@update_cit:
  0009d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  000a3	83 c2 20	 add	 edx, 32			; 00000020H
  000a6	52		 push	 edx
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b7	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN25@update_cit:
  000c1	68 92 00 00 00	 push	 146			; 00000092H
  000c6	8b 4d 0c	 mov	 ecx, DWORD PTR _this_building$[ebp]
  000c9	51		 push	 ecx
  000ca	69 95 60 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv81[ebp], 1116
  000d4	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv89[ebp]
  000da	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000e1	ff d1		 call	 ecx
  000e3	89 45 f8	 mov	 DWORD PTR _object_3d_index$[ebp], eax

; 113  : 
; 114  : 	ASSERT (object_3d_index != OBJECT_3D_INVALID_OBJECT_INDEX);

  000e6	83 7d f8 00	 cmp	 DWORD PTR _object_3d_index$[ebp], 0
  000ea	75 18		 jne	 SHORT $LN4@update_cit
  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  000f1	83 c0 22	 add	 eax, 34			; 00000022H
  000f4	50		 push	 eax
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@BJJCPMFI@object_3d_index?5?$CB?$DN?5OBJECT_3D_IN@
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_cit:

; 115  : 
; 116  : 	bounding_box = get_object_3d_bounding_box_without_lines (object_3d_index);

  00104	8b 45 f8	 mov	 eax, DWORD PTR _object_3d_index$[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box_without_lines@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box_without_lines
  0010d	89 45 f4	 mov	 DWORD PTR _bounding_box$[ebp], eax

; 117  : 
; 118  : 	ASSERT (bounding_box);

  00110	83 7d f4 00	 cmp	 DWORD PTR _bounding_box$[ebp], 0
  00114	75 18		 jne	 SHORT $LN5@update_cit
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  0011b	83 c0 26	 add	 eax, 38			; 00000026H
  0011e	50		 push	 eax
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LOLJEHA@bounding_box@
  00129	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@update_cit:

; 119  : 
; 120  : 	p1.x = bounding_box->xmin;

  0012e	8b 45 f4	 mov	 eax, DWORD PTR _bounding_box$[ebp]
  00131	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00135	f3 0f 11 45 d8	 movss	 DWORD PTR _p1$[ebp], xmm0

; 121  : 	p1.y = bounding_box->ymin;

  0013a	8b 45 f4	 mov	 eax, DWORD PTR _bounding_box$[ebp]
  0013d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00142	f3 0f 11 45 dc	 movss	 DWORD PTR _p1$[ebp+4], xmm0

; 122  : 	p1.z = bounding_box->zmin;

  00147	8b 45 f4	 mov	 eax, DWORD PTR _bounding_box$[ebp]
  0014a	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0014f	f3 0f 11 45 e0	 movss	 DWORD PTR _p1$[ebp+8], xmm0

; 123  : 
; 124  : 	p2.x = bounding_box->xmax;

  00154	8b 45 f4	 mov	 eax, DWORD PTR _bounding_box$[ebp]
  00157	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0015c	f3 0f 11 45 cc	 movss	 DWORD PTR _p2$[ebp], xmm0

; 125  : 	p2.y = bounding_box->ymax;

  00161	8b 45 f4	 mov	 eax, DWORD PTR _bounding_box$[ebp]
  00164	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00169	f3 0f 11 45 d0	 movss	 DWORD PTR _p2$[ebp+4], xmm0

; 126  : 	p2.z = bounding_box->zmax;

  0016e	8b 45 f4	 mov	 eax, DWORD PTR _bounding_box$[ebp]
  00171	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00176	f3 0f 11 45 d4	 movss	 DWORD PTR _p2$[ebp+8], xmm0

; 127  : 
; 128  : 	//
; 129  : 	// rotate minmax points (no longer minmax after rotate)
; 130  : 	//
; 131  : 
; 132  : 	heading = get_local_entity_float_value (this_building, FLOAT_TYPE_HEADING);

  0017b	83 7d 0c 00	 cmp	 DWORD PTR _this_building$[ebp], 0
  0017f	74 0d		 je	 SHORT $LN26@update_cit
  00181	8b 45 0c	 mov	 eax, DWORD PTR _this_building$[ebp]
  00184	8b 08		 mov	 ecx, DWORD PTR [eax]
  00186	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv151[ebp], ecx
  0018c	eb 24		 jmp	 SHORT $LN27@update_cit
$LN26@update_cit:
  0018e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  00194	83 c2 34	 add	 edx, 52			; 00000034H
  00197	52		 push	 edx
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a8	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv151[ebp], 0
$LN27@update_cit:
  001b2	b9 01 00 00 00	 mov	 ecx, 1
  001b7	85 c9		 test	 ecx, ecx
  001b9	74 0c		 je	 SHORT $LN28@update_cit
  001bb	c7 85 5c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv159[ebp], 52 ; 00000034H
  001c5	eb 24		 jmp	 SHORT $LN29@update_cit
$LN28@update_cit:
  001c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  001cd	83 c2 34	 add	 edx, 52			; 00000034H
  001d0	52		 push	 edx
  001d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001db	50		 push	 eax
  001dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e1	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv159[ebp], 0
$LN29@update_cit:
  001eb	6a 34		 push	 52			; 00000034H
  001ed	8b 4d 0c	 mov	 ecx, DWORD PTR _this_building$[ebp]
  001f0	51		 push	 ecx
  001f1	69 95 60 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv151[ebp], 700
  001fb	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv159[ebp]
  00201	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00208	ff d1		 call	 ecx
  0020a	d9 5d a4	 fstp	 DWORD PTR _heading$[ebp]

; 133  : 
; 134  : 	get_3d_transformation_matrix (attitude, heading, 0.0, 0.0);

  0020d	51		 push	 ecx
  0020e	0f 57 c0	 xorps	 xmm0, xmm0
  00211	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00216	51		 push	 ecx
  00217	0f 57 c0	 xorps	 xmm0, xmm0
  0021a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021f	51		 push	 ecx
  00220	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00225	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022a	8d 45 a8	 lea	 eax, DWORD PTR _attitude$[ebp]
  0022d	50		 push	 eax
  0022e	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 135  : 
; 136  : 	multiply_matrix3x3_vec3d (&p1, attitude, &p1);

  00233	8d 45 d8	 lea	 eax, DWORD PTR _p1$[ebp]
  00236	50		 push	 eax
  00237	8d 4d a8	 lea	 ecx, DWORD PTR _attitude$[ebp]
  0023a	51		 push	 ecx
  0023b	8d 55 d8	 lea	 edx, DWORD PTR _p1$[ebp]
  0023e	52		 push	 edx
  0023f	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 137  : 	multiply_matrix3x3_vec3d (&p2, attitude, &p2);

  00244	8d 45 cc	 lea	 eax, DWORD PTR _p2$[ebp]
  00247	50		 push	 eax
  00248	8d 4d a8	 lea	 ecx, DWORD PTR _attitude$[ebp]
  0024b	51		 push	 ecx
  0024c	8d 55 cc	 lea	 edx, DWORD PTR _p2$[ebp]
  0024f	52		 push	 edx
  00250	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 138  : 
; 139  : 	//
; 140  : 	// get building position offset from city centre
; 141  : 	//
; 142  : 
; 143  : 	building_position = get_local_entity_vec3d_ptr (this_building, VEC3D_TYPE_POSITION);

  00255	83 7d 0c 00	 cmp	 DWORD PTR _this_building$[ebp], 0
  00259	74 0d		 je	 SHORT $LN30@update_cit
  0025b	8b 45 0c	 mov	 eax, DWORD PTR _this_building$[ebp]
  0025e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00260	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv181[ebp], ecx
  00266	eb 24		 jmp	 SHORT $LN31@update_cit
$LN30@update_cit:
  00268	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  0026e	83 c2 3f	 add	 edx, 63			; 0000003fH
  00271	52		 push	 edx
  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00277	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00282	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
$LN31@update_cit:
  0028c	b9 01 00 00 00	 mov	 ecx, 1
  00291	85 c9		 test	 ecx, ecx
  00293	74 0c		 je	 SHORT $LN32@update_cit
  00295	c7 85 5c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv189[ebp], 8
  0029f	eb 24		 jmp	 SHORT $LN33@update_cit
$LN32@update_cit:
  002a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  002a7	83 c2 3f	 add	 edx, 63			; 0000003fH
  002aa	52		 push	 edx
  002ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bb	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv189[ebp], 0
$LN33@update_cit:
  002c5	6a 08		 push	 8
  002c7	8b 4d 0c	 mov	 ecx, DWORD PTR _this_building$[ebp]
  002ca	51		 push	 ecx
  002cb	6b 95 60 ff ff
	ff 60		 imul	 edx, DWORD PTR tv181[ebp], 96
  002d2	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv189[ebp]
  002d8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  002df	ff d1		 call	 ecx
  002e1	89 45 f0	 mov	 DWORD PTR _building_position$[ebp], eax

; 144  : 
; 145  : 	position_offset.x = building_position->x - raw->fix.position.x;

  002e4	8b 45 f0	 mov	 eax, DWORD PTR _building_position$[ebp]
  002e7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002ea	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002ee	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  002f2	f3 0f 11 45 e4	 movss	 DWORD PTR _position_offset$[ebp], xmm0

; 146  : 	position_offset.y = building_position->y - raw->fix.position.y;

  002f7	8b 45 f0	 mov	 eax, DWORD PTR _building_position$[ebp]
  002fa	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002fd	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00302	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00307	f3 0f 11 45 e8	 movss	 DWORD PTR _position_offset$[ebp+4], xmm0

; 147  : 	position_offset.z = building_position->z - raw->fix.position.z;

  0030c	8b 45 f0	 mov	 eax, DWORD PTR _building_position$[ebp]
  0030f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00312	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00317	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0031c	f3 0f 11 45 ec	 movss	 DWORD PTR _position_offset$[ebp+8], xmm0

; 148  : 
; 149  : 	//
; 150  : 	// offset p1 and p2
; 151  : 	//
; 152  : 
; 153  : 	p1.x += position_offset.x;

  00321	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _p1$[ebp]
  00326	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _position_offset$[ebp]
  0032b	f3 0f 11 45 d8	 movss	 DWORD PTR _p1$[ebp], xmm0

; 154  : 	p1.y += position_offset.y;

  00330	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _p1$[ebp+4]
  00335	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _position_offset$[ebp+4]
  0033a	f3 0f 11 45 dc	 movss	 DWORD PTR _p1$[ebp+4], xmm0

; 155  : 	p1.z += position_offset.z;

  0033f	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _p1$[ebp+8]
  00344	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _position_offset$[ebp+8]
  00349	f3 0f 11 45 e0	 movss	 DWORD PTR _p1$[ebp+8], xmm0

; 156  : 
; 157  : 	p2.x += position_offset.x;

  0034e	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _p2$[ebp]
  00353	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _position_offset$[ebp]
  00358	f3 0f 11 45 cc	 movss	 DWORD PTR _p2$[ebp], xmm0

; 158  : 	p2.y += position_offset.y;

  0035d	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _p2$[ebp+4]
  00362	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _position_offset$[ebp+4]
  00367	f3 0f 11 45 d0	 movss	 DWORD PTR _p2$[ebp+4], xmm0

; 159  : 	p2.z += position_offset.z;

  0036c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _p2$[ebp+8]
  00371	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _position_offset$[ebp+8]
  00376	f3 0f 11 45 d4	 movss	 DWORD PTR _p2$[ebp+8], xmm0

; 160  : 
; 161  : 	//
; 162  : 	// adjust city bounding box
; 163  : 	//
; 164  : 
; 165  : 	if (p1.x < raw->bounding_box_min.x) raw->bounding_box_min.x = p1.x;

  0037b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0037e	f3 0f 10 40 44	 movss	 xmm0, DWORD PTR [eax+68]
  00383	0f 2f 45 d8	 comiss	 xmm0, DWORD PTR _p1$[ebp]
  00387	76 0d		 jbe	 SHORT $LN6@update_cit
  00389	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0038c	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _p1$[ebp]
  00391	f3 0f 11 40 44	 movss	 DWORD PTR [eax+68], xmm0
$LN6@update_cit:

; 166  : 	if (p1.y < raw->bounding_box_min.y) raw->bounding_box_min.y = p1.y;

  00396	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00399	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
  0039e	0f 2f 45 dc	 comiss	 xmm0, DWORD PTR _p1$[ebp+4]
  003a2	76 0d		 jbe	 SHORT $LN7@update_cit
  003a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003a7	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _p1$[ebp+4]
  003ac	f3 0f 11 40 48	 movss	 DWORD PTR [eax+72], xmm0
$LN7@update_cit:

; 167  : 	if (p1.z < raw->bounding_box_min.z) raw->bounding_box_min.z = p1.z;

  003b1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003b4	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  003b9	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _p1$[ebp+8]
  003bd	76 0d		 jbe	 SHORT $LN8@update_cit
  003bf	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003c2	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _p1$[ebp+8]
  003c7	f3 0f 11 40 4c	 movss	 DWORD PTR [eax+76], xmm0
$LN8@update_cit:

; 168  : 	if (p1.x > raw->bounding_box_max.x) raw->bounding_box_max.x = p1.x;

  003cc	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003cf	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _p1$[ebp]
  003d4	0f 2f 40 50	 comiss	 xmm0, DWORD PTR [eax+80]
  003d8	76 0d		 jbe	 SHORT $LN9@update_cit
  003da	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003dd	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _p1$[ebp]
  003e2	f3 0f 11 40 50	 movss	 DWORD PTR [eax+80], xmm0
$LN9@update_cit:

; 169  : 	if (p1.y > raw->bounding_box_max.y) raw->bounding_box_max.y = p1.y;

  003e7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003ea	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _p1$[ebp+4]
  003ef	0f 2f 40 54	 comiss	 xmm0, DWORD PTR [eax+84]
  003f3	76 0d		 jbe	 SHORT $LN10@update_cit
  003f5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003f8	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _p1$[ebp+4]
  003fd	f3 0f 11 40 54	 movss	 DWORD PTR [eax+84], xmm0
$LN10@update_cit:

; 170  : 	if (p1.z > raw->bounding_box_max.z) raw->bounding_box_max.z = p1.z;

  00402	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00405	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _p1$[ebp+8]
  0040a	0f 2f 40 58	 comiss	 xmm0, DWORD PTR [eax+88]
  0040e	76 0d		 jbe	 SHORT $LN11@update_cit
  00410	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00413	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _p1$[ebp+8]
  00418	f3 0f 11 40 58	 movss	 DWORD PTR [eax+88], xmm0
$LN11@update_cit:

; 171  : 
; 172  : 	if (p2.x < raw->bounding_box_min.x) raw->bounding_box_min.x = p2.x;

  0041d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00420	f3 0f 10 40 44	 movss	 xmm0, DWORD PTR [eax+68]
  00425	0f 2f 45 cc	 comiss	 xmm0, DWORD PTR _p2$[ebp]
  00429	76 0d		 jbe	 SHORT $LN12@update_cit
  0042b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0042e	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _p2$[ebp]
  00433	f3 0f 11 40 44	 movss	 DWORD PTR [eax+68], xmm0
$LN12@update_cit:

; 173  : 	if (p2.y < raw->bounding_box_min.y) raw->bounding_box_min.y = p2.y;

  00438	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0043b	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
  00440	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _p2$[ebp+4]
  00444	76 0d		 jbe	 SHORT $LN13@update_cit
  00446	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00449	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _p2$[ebp+4]
  0044e	f3 0f 11 40 48	 movss	 DWORD PTR [eax+72], xmm0
$LN13@update_cit:

; 174  : 	if (p2.z < raw->bounding_box_min.z) raw->bounding_box_min.z = p2.z;

  00453	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00456	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  0045b	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _p2$[ebp+8]
  0045f	76 0d		 jbe	 SHORT $LN14@update_cit
  00461	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00464	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _p2$[ebp+8]
  00469	f3 0f 11 40 4c	 movss	 DWORD PTR [eax+76], xmm0
$LN14@update_cit:

; 175  : 	if (p2.x > raw->bounding_box_max.x) raw->bounding_box_max.x = p2.x;

  0046e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00471	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _p2$[ebp]
  00476	0f 2f 40 50	 comiss	 xmm0, DWORD PTR [eax+80]
  0047a	76 0d		 jbe	 SHORT $LN15@update_cit
  0047c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0047f	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _p2$[ebp]
  00484	f3 0f 11 40 50	 movss	 DWORD PTR [eax+80], xmm0
$LN15@update_cit:

; 176  : 	if (p2.y > raw->bounding_box_max.y) raw->bounding_box_max.y = p2.y;

  00489	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0048c	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _p2$[ebp+4]
  00491	0f 2f 40 54	 comiss	 xmm0, DWORD PTR [eax+84]
  00495	76 0d		 jbe	 SHORT $LN16@update_cit
  00497	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0049a	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _p2$[ebp+4]
  0049f	f3 0f 11 40 54	 movss	 DWORD PTR [eax+84], xmm0
$LN16@update_cit:

; 177  : 	if (p2.z > raw->bounding_box_max.z) raw->bounding_box_max.z = p2.z;

  004a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004a7	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _p2$[ebp+8]
  004ac	0f 2f 40 58	 comiss	 xmm0, DWORD PTR [eax+88]
  004b0	76 0d		 jbe	 SHORT $LN17@update_cit
  004b2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004b5	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _p2$[ebp+8]
  004ba	f3 0f 11 40 58	 movss	 DWORD PTR [eax+88], xmm0
$LN17@update_cit:

; 178  : 
; 179  : 	ASSERT (raw->bounding_box_min.x <= raw->bounding_box_max.x);

  004bf	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004c2	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  004c5	f3 0f 10 40 50	 movss	 xmm0, DWORD PTR [eax+80]
  004ca	0f 2f 41 44	 comiss	 xmm0, DWORD PTR [ecx+68]
  004ce	73 18		 jae	 SHORT $LN18@update_cit
  004d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  004d5	83 c0 63	 add	 eax, 99			; 00000063H
  004d8	50		 push	 eax
  004d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  004de	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@NCJIGJOL@raw?9?$DObounding_box_min?4x?5?$DM?$DN?5raw?9@
  004e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@update_cit:

; 180  : 	ASSERT (raw->bounding_box_min.y <= raw->bounding_box_max.y);

  004e8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004eb	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  004ee	f3 0f 10 40 54	 movss	 xmm0, DWORD PTR [eax+84]
  004f3	0f 2f 41 48	 comiss	 xmm0, DWORD PTR [ecx+72]
  004f7	73 18		 jae	 SHORT $LN19@update_cit
  004f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  004fe	83 c0 64	 add	 eax, 100		; 00000064H
  00501	50		 push	 eax
  00502	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00507	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KIIEIBIO@raw?9?$DObounding_box_min?4y?5?$DM?$DN?5raw?9@
  0050c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@update_cit:

; 181  : 	ASSERT (raw->bounding_box_min.z <= raw->bounding_box_max.z);

  00511	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00514	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00517	f3 0f 10 40 58	 movss	 xmm0, DWORD PTR [eax+88]
  0051c	0f 2f 41 4c	 comiss	 xmm0, DWORD PTR [ecx+76]
  00520	73 18		 jae	 SHORT $LN20@update_cit
  00522	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_city_bounding_box@@YGXPAUENTITY@@0@Z@4JA
  00527	83 c0 65	 add	 eax, 101		; 00000065H
  0052a	50		 push	 eax
  0052b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MCENBNFD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00530	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@CGKBLJCB@raw?9?$DObounding_box_min?4z?5?$DM?$DN?5raw?9@
  00535	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN20@update_cit:

; 182  : }

  0053a	5f		 pop	 edi
  0053b	5e		 pop	 esi
  0053c	5b		 pop	 ebx
  0053d	8b e5		 mov	 esp, ebp
  0053f	5d		 pop	 ebp
  00540	c2 08 00	 ret	 8
?update_city_bounding_box@@YGXPAUENTITY@@0@Z ENDP	; update_city_bounding_box
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\fixed\city\ct_msgs.c
;	COMDAT ?overload_city_message_responses@@YGXXZ
_TEXT	SEGMENT
?overload_city_message_responses@@YGXXZ PROC		; overload_city_message_responses, COMDAT

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 267  : 	overload_fixed_message_responses (ENTITY_TYPE_CITY);

  00009	6a 05		 push	 5
  0000b	e8 00 00 00 00	 call	 ?overload_fixed_message_responses@@YGXW4ENTITY_TYPES@@@Z ; overload_fixed_message_responses

; 268  : 
; 269  : 	message_responses[ENTITY_TYPE_CITY][ENTITY_MESSAGE_LINK_CHILD]		= response_to_link_child;

  00010	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00015	6b c8 05	 imul	 ecx, eax, 5
  00018	ba 04 00 00 00	 mov	 edx, 4
  0001d	6b c2 23	 imul	 eax, edx, 35
  00020	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_link_child

; 270  : 
; 271  : 	#if DEBUG_MODULE
; 272  : 
; 273  : 	message_responses[ENTITY_TYPE_CITY][ENTITY_MESSAGE_UNLINK_CHILD]	= response_to_unlink_child;
; 274  : 
; 275  : 	message_responses[ENTITY_TYPE_CITY][ENTITY_MESSAGE_LINK_PARENT]	= response_to_link_parent;
; 276  : 
; 277  : 	message_responses[ENTITY_TYPE_CITY][ENTITY_MESSAGE_UNLINK_PARENT]	= response_to_unlink_parent;
; 278  : 
; 279  : 	#endif
; 280  : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?overload_city_message_responses@@YGXXZ ENDP		; overload_city_message_responses
_TEXT	ENDS
END
