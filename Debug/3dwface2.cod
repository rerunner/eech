; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3dwface2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_textured_polygon
PUBLIC	?wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_gouraud_textured_polygon
PUBLIC	?wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon
PUBLIC	?wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_polygon
PUBLIC	?wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_gouraud_polygon
PUBLIC	?wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_white_polygon
PUBLIC	?wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_white_textured_polygon
PUBLIC	?wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_gouraud_white_polygon
PUBLIC	?wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_textured_lightmap_polygon
PUBLIC	?wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon
PUBLIC	?wrender_unclipped_3d_object_textured_line@@YGXXZ ; wrender_unclipped_3d_object_textured_line
PUBLIC	?wrender_unclipped_3d_object_plain_line@@YGXXZ	; wrender_unclipped_3d_object_plain_line
PUBLIC	?wrender_unclipped_3d_object_plain_white_line@@YGXXZ ; wrender_unclipped_3d_object_plain_white_line
PUBLIC	?wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_unclipped_3d_object_textured_polygon
PUBLIC	?wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_unclipped_3d_object_gouraud_textured_polygon
PUBLIC	?wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_unclipped_3d_object_polygon
PUBLIC	?wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_unclipped_3d_object_gouraud_polygon
PUBLIC	?wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_unclipped_3d_object_reflective_polygon
PUBLIC	?wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_textured_polygon'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@ ; `string'
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_white_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_white_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_gouraud_white_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_textured_lightmap_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_textured_line@@YGXXZ@4JA ; `wrender_unclipped_3d_object_textured_line'::`1'::__LINE__Var
PUBLIC	??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@ ; `string'
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_plain_line@@YGXXZ@4JA ; `wrender_unclipped_3d_object_plain_line'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_unclipped_3d_object_plain_white_line@@YGXXZ@4JA ; `wrender_unclipped_3d_object_plain_white_line'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_unclipped_3d_object_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_unclipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_unclipped_3d_object_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_unclipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_unclipped_3d_object_reflective_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon'::`1'::__LINE__Var
PUBLIC	__real@3f800000
PUBLIC	__real@406fe00000000000
PUBLIC	__real@437f0000
PUBLIC	__real@4b40005a
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z:PROC ; draw_fan_primitive
EXTRN	?commit_deferred_state_changes@@YGXXZ:PROC	; commit_deferred_state_changes
EXTRN	?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z:PROC ; get_d3d_vertices_points_address
EXTRN	?draw_wbuffered_plain_line@@YGXPAUVERTEX@@UREAL_COLOUR@@@Z:PROC ; draw_wbuffered_plain_line
EXTRN	?draw_wbuffered_flat_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@UREAL_COLOUR@@@Z:PROC ; draw_wbuffered_flat_shaded_textured_line
EXTRN	?draw_wbuffered_gouraud_shaded_line@@YGXPAUVERTEX@@MMM@Z:PROC ; draw_wbuffered_gouraud_shaded_line
EXTRN	?draw_wbuffered_gouraud_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@@Z:PROC ; draw_wbuffered_gouraud_shaded_textured_line
EXTRN	?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ:PROC ; get_translucent_polygon_vertices
EXTRN	?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z:PROC ; add_buffered_processed_polygon
EXTRN	?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z:PROC ; buffer_wbuffered_plain_polygon
EXTRN	?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z:PROC ; buffer_wbuffered_gouraud_shaded_polygon
EXTRN	?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z:PROC ; buffer_wbuffered_flat_shaded_textured_line
EXTRN	?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ:PROC ; get_temporary_translucent_polygon_vertices
EXTRN	?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z:PROC ; add_temporary_buffered_processed_polygon
EXTRN	?construct_3d_surface_polygon@@YGPAUVERTEX@@HH@Z:PROC ; construct_3d_surface_polygon
EXTRN	?construct_3d_surface_unclipped_gouraud_triangle_fan@@YGPAUVERTEX@@HMH@Z:PROC ; construct_3d_surface_unclipped_gouraud_triangle_fan
EXTRN	?construct_3d_surface_unclipped_line@@YGPAUVERTEX@@H@Z:PROC ; construct_3d_surface_unclipped_line
EXTRN	?construct_3d_surface_unclipped_textured_line@@YGPAUVERTEX@@H@Z:PROC ; construct_3d_surface_unclipped_textured_line
EXTRN	?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z:PROC ; calculate_luminous_colour
EXTRN	?calculate_lightmap_luminous_colour@@YGXPAUREAL_COLOUR@@@Z:PROC ; calculate_lightmap_luminous_colour
EXTRN	?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z:PROC ; calculate_line_colour
EXTRN	?generate_environment_coordinates@@YGXHPAUOBJECT_SHORT_3D_POINT@@PAUVEC3D@@1QAY02MPAM3@Z:PROC ; generate_environment_coordinates
EXTRN	?generate_object_3d_point_normal@@YGXPAUOBJECT_3D_HEADING_PITCH_NORMAL@@PAUVEC3D@@@Z:PROC ; generate_object_3d_point_normal
EXTRN	?one_over_table@@3PAMA:DWORD			; one_over_table
EXTRN	?clip_3d_coord@@3HA:DWORD			; clip_3d_coord
EXTRN	?d3d_fog_intensity@@3KA:DWORD			; d3d_fog_intensity
EXTRN	?system_textures@@3PAPAUSCREEN@@A:BYTE		; system_textures
EXTRN	?zbuffer_factor@@3NA:QWORD			; zbuffer_factor
EXTRN	?zbuffer_constant@@3NA:QWORD			; zbuffer_constant
EXTRN	?objects_3d_data@@3PAUOBJECT_3D@@A:DWORD	; objects_3d_data
EXTRN	?current_object_3d_luminosity_texture@@3PAUSCREEN@@A:DWORD ; current_object_3d_luminosity_texture
EXTRN	?current_object_3d_luminosity_texture_u_address@@3HA:DWORD ; current_object_3d_luminosity_texture_u_address
EXTRN	?current_object_3d_luminosity_texture_v_address@@3HA:DWORD ; current_object_3d_luminosity_texture_v_address
EXTRN	?current_object_3d_luminosity_texture_filter@@3HA:DWORD ; current_object_3d_luminosity_texture_filter
EXTRN	?current_object_3d_luminosity_texture_mipmap@@3HA:DWORD ; current_object_3d_luminosity_texture_mipmap
EXTRN	?current_object_3d_light_maps_enabled@@3HA:DWORD ; current_object_3d_light_maps_enabled
EXTRN	?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A:DWORD ; current_object_3d_surface
EXTRN	?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A:DWORD ; current_object_3d_point_list
EXTRN	?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_face_normal_list
EXTRN	?current_object_3d_texture@@3PAUSCREEN@@A:DWORD	; current_object_3d_texture
EXTRN	?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A:DWORD ; current_object_3d_transformed_normals
EXTRN	?current_object_3d_texture_u_address@@3HA:DWORD	; current_object_3d_texture_u_address
EXTRN	?current_object_3d_texture_v_address@@3HA:DWORD	; current_object_3d_texture_v_address
EXTRN	?current_object_3d_texture_filter@@3HA:DWORD	; current_object_3d_texture_filter
EXTRN	?current_object_3d_texture_mipmap@@3HA:DWORD	; current_object_3d_texture_mipmap
EXTRN	?current_object_3d_specular@@3HA:DWORD		; current_object_3d_specular
EXTRN	?current_object_3d_dissolve_factor@@3MA:DWORD	; current_object_3d_dissolve_factor
EXTRN	?current_object_3d_dissolve_value@@3EA:BYTE	; current_object_3d_dissolve_value
EXTRN	?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A:DWORD ; current_object_3d_surface_point_texture_list
EXTRN	?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_surface_point_list
EXTRN	?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_surface_point_normal_list
EXTRN	?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A:DWORD ; current_object_3d_object_base
EXTRN	?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A:BYTE ; transformed_3d_2d_points
EXTRN	__fltused:DWORD
;	COMDAT __real@4b40005a
CONST	SEGMENT
__real@4b40005a DD 04b40005ar			; 1.2583e+07
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 098cH ; `wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0939H ; `wrender_translucent_unclipped_3d_object_reflective_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 08d4H ; `wrender_translucent_unclipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 086cH ; `wrender_translucent_unclipped_3d_object_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 081dH ; `wrender_translucent_unclipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 07b3H ; `wrender_translucent_unclipped_3d_object_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_plain_white_line@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_plain_white_line@@YGXXZ@4JA DD 078fH ; `wrender_unclipped_3d_object_plain_white_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_plain_line@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_plain_line@@YGXXZ@4JA DD 076bH ; `wrender_unclipped_3d_object_plain_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
CONST	SEGMENT
??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@ DB '!current_o'
	DB	'bject_3d_surface->polygons', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_textured_line@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_textured_line@@YGXXZ@4JA DD 0733H ; `wrender_unclipped_3d_object_textured_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0687H ; `wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 05b6H ; `wrender_unclipped_3d_object_textured_lightmap_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0561H ; `wrender_unclipped_3d_object_gouraud_white_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0508H ; `wrender_unclipped_3d_object_white_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 04aaH ; `wrender_unclipped_3d_object_white_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 03beH ; `wrender_unclipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 02ddH ; `wrender_unclipped_3d_object_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0208H ; `wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0130H ; `wrender_unclipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
CONST	SEGMENT
??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@ DB 'current_objec'
	DB	't_3d_surface->polygons', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3dwface2.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 04aH ; `wrender_unclipped_3d_object_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_object_point_index$1 = -72				; size = 4
_surface_point_normal_index$2 = -68			; size = 4
_surface_point_index$3 = -64				; size = 4
_object_index$4 = -60					; size = 4
_transformed_points$ = -56				; size = 4
_vert$ = -52						; size = 4
_destination_vertices$ = -48				; size = 4
_this_colour$ = -44					; size = 4
_v$ = -40						; size = 4
_u$ = -36						; size = 4
_camera_position$ = -32					; size = 12
_normal$ = -20						; size = 12
_point_normal$ = -8					; size = 4
_count$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon, COMDAT

; 2444 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2445 : 
; 2446 : 	int
; 2447 : 		count;
; 2448 : 
; 2449 : 	object_3d_heading_pitch_normal
; 2450 : 		*point_normal;
; 2451 : 
; 2452 : 	vec3d
; 2453 : 		normal,
; 2454 : 		camera_position;
; 2455 : 
; 2456 : 	float
; 2457 : 		u,
; 2458 : 		v;
; 2459 : 
; 2460 : 	real_colour
; 2461 : 		this_colour;
; 2462 : 
; 2463 : 	LPD3DTLVERTEX
; 2464 : 		destination_vertices;
; 2465 : 
; 2466 : 	object_transformed_2d_point
; 2467 : 		*vert,
; 2468 : 		*transformed_points;
; 2469 : 
; 2470 : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN5@wrender_tr
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 1a	 add	 eax, 26			; 0000001aH
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2471 : 
; 2472 : 	destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00037	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0003a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00043	89 45 d0	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2473 : 
; 2474 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0004b	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0004e	c1 e1 04	 shl	 ecx, 4
  00051	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00057	89 4d c8	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2475 : 	
; 2476 : 	camera_position = current_object_3d_object_base->camera_position;

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0005f	83 c0 08	 add	 eax, 8
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	89 4d e0	 mov	 DWORD PTR _camera_position$[ebp], ecx
  00067	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0006a	89 55 e4	 mov	 DWORD PTR _camera_position$[ebp+4], edx
  0006d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00070	89 45 e8	 mov	 DWORD PTR _camera_position$[ebp+8], eax

; 2477 : 
; 2478 : 	//
; 2479 : 	// Now get the u,v coordinates
; 2480 : 	//
; 2481 : 
; 2482 : 	for ( count = 0; count < this_face->number_of_points; count++ )

  00073	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0007a	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0007f	83 c0 01	 add	 eax, 1
  00082	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_tr:
  00085	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00088	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0008b	39 4d fc	 cmp	 DWORD PTR _count$[ebp], ecx
  0008e	0f 8d 78 01 00
	00		 jge	 $LN3@wrender_tr

; 2483 : 	{
; 2484 : 
; 2485 : 		int
; 2486 : 			object_index,
; 2487 : 			surface_point_index,
; 2488 : 			surface_point_normal_index,
; 2489 : 			object_point_index;
; 2490 : 
; 2491 : 		object_index = current_object_3d_object_base->object_number;

  00094	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00099	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0009c	89 4d c4	 mov	 DWORD PTR _object_index$4[ebp], ecx

; 2492 : 		surface_point_index = current_object_3d_point_list[count].point;

  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  000a4	03 45 fc	 add	 eax, DWORD PTR _count$[ebp]
  000a7	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000aa	89 4d c0	 mov	 DWORD PTR _surface_point_index$3[ebp], ecx

; 2493 : 		surface_point_normal_index = current_object_3d_surface_point_normal_list[surface_point_index].point;

  000ad	8b 45 c0	 mov	 eax, DWORD PTR _surface_point_index$3[ebp]
  000b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  000b6	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000ba	89 55 bc	 mov	 DWORD PTR _surface_point_normal_index$2[ebp], edx

; 2494 : 		object_point_index = current_object_3d_surface_point_list[surface_point_index].point;

  000bd	8b 45 c0	 mov	 eax, DWORD PTR _surface_point_index$3[ebp]
  000c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  000c6	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000ca	89 55 b8	 mov	 DWORD PTR _object_point_index$1[ebp], edx

; 2495 : 		point_normal = &objects_3d_data[object_index].point_normals[surface_point_normal_index];

  000cd	6b 45 c4 68	 imul	 eax, DWORD PTR _object_index$4[ebp], 104
  000d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  000d7	8b 54 01 48	 mov	 edx, DWORD PTR [ecx+eax+72]
  000db	8b 45 bc	 mov	 eax, DWORD PTR _surface_point_normal_index$2[ebp]
  000de	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  000e1	89 4d f8	 mov	 DWORD PTR _point_normal$[ebp], ecx

; 2496 : 		generate_object_3d_point_normal ( point_normal, &normal );

  000e4	8d 45 ec	 lea	 eax, DWORD PTR _normal$[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _point_normal$[ebp]
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 ?generate_object_3d_point_normal@@YGXPAUOBJECT_3D_HEADING_PITCH_NORMAL@@PAUVEC3D@@@Z ; generate_object_3d_point_normal

; 2497 : //		normal.x = point_normal->x / 32767.0;
; 2498 : //		normal.y = point_normal->y / 32767.0;
; 2499 : //		normal.z = point_normal->z / 32767.0;
; 2500 : 
; 2501 : 		this_colour.colour = current_object_3d_transformed_normals[surface_point_normal_index].colour;

  000f1	8b 45 bc	 mov	 eax, DWORD PTR _surface_point_normal_index$2[ebp]
  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000fa	8b 14 c1	 mov	 edx, DWORD PTR [ecx+eax*8]
  000fd	89 55 d4	 mov	 DWORD PTR _this_colour$[ebp], edx

; 2502 : 		this_colour.alpha = current_object_3d_surface->reflectivity;

  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00105	8a 48 0a	 mov	 cl, BYTE PTR [eax+10]
  00108	88 4d d7	 mov	 BYTE PTR _this_colour$[ebp+3], cl

; 2503 : 
; 2504 : 		generate_environment_coordinates ( object_index, &objects_3d_data[object_index].points[object_point_index],

  0010b	8d 45 d8	 lea	 eax, DWORD PTR _v$[ebp]
  0010e	50		 push	 eax
  0010f	8d 4d dc	 lea	 ecx, DWORD PTR _u$[ebp]
  00112	51		 push	 ecx
  00113	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00119	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0011c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0011f	50		 push	 eax
  00120	8d 4d e0	 lea	 ecx, DWORD PTR _camera_position$[ebp]
  00123	51		 push	 ecx
  00124	8d 55 ec	 lea	 edx, DWORD PTR _normal$[ebp]
  00127	52		 push	 edx
  00128	6b 45 c4 68	 imul	 eax, DWORD PTR _object_index$4[ebp], 104
  0012c	6b 4d b8 06	 imul	 ecx, DWORD PTR _object_point_index$1[ebp], 6
  00130	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00136	03 4c 02 40	 add	 ecx, DWORD PTR [edx+eax+64]
  0013a	51		 push	 ecx
  0013b	8b 45 c4	 mov	 eax, DWORD PTR _object_index$4[ebp]
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 ?generate_environment_coordinates@@YGXHPAUOBJECT_SHORT_3D_POINT@@PAUVEC3D@@1QAY02MPAM3@Z ; generate_environment_coordinates

; 2505 : 														&normal, &camera_position, current_object_3d_object_base->object_vp->attitude, &u, &v );
; 2506 : 
; 2507 : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00144	8b 45 c0	 mov	 eax, DWORD PTR _surface_point_index$3[ebp]
  00147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0014d	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00151	c1 e2 04	 shl	 edx, 4
  00154	03 55 c8	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00157	89 55 cc	 mov	 DWORD PTR _vert$[ebp], edx

; 2508 : 
; 2509 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  0015a	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0015d	c1 e0 05	 shl	 eax, 5
  00160	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00163	8b 55 cc	 mov	 edx, DWORD PTR _vert$[ebp]
  00166	8b 12		 mov	 edx, DWORD PTR [edx]
  00168	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2510 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  0016b	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0016e	c1 e0 05	 shl	 eax, 5
  00171	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00174	8b 55 cc	 mov	 edx, DWORD PTR _vert$[ebp]
  00177	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0017a	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2511 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0017e	8b 45 cc	 mov	 eax, DWORD PTR _vert$[ebp]
  00181	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00186	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0018e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  0019d	c1 e1 05	 shl	 ecx, 5
  001a0	8b 55 d0	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  001a3	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 2512 : 		destination_vertices[count].rhw = vert->q;

  001a9	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001ac	c1 e0 05	 shl	 eax, 5
  001af	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001b2	8b 55 cc	 mov	 edx, DWORD PTR _vert$[ebp]
  001b5	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001b8	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2513 : 		destination_vertices[count].tu = u;

  001bc	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001bf	c1 e0 05	 shl	 eax, 5
  001c2	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001c5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _u$[ebp]
  001ca	f3 0f 11 44 01
	18		 movss	 DWORD PTR [ecx+eax+24], xmm0

; 2514 : 		destination_vertices[count].tv = v;

  001d0	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001d3	c1 e0 05	 shl	 eax, 5
  001d6	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001d9	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _v$[ebp]
  001de	f3 0f 11 44 01
	1c		 movss	 DWORD PTR [ecx+eax+28], xmm0

; 2515 : 		destination_vertices[count].color = this_colour.colour;

  001e4	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001e7	c1 e0 05	 shl	 eax, 5
  001ea	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001ed	8b 55 d4	 mov	 edx, DWORD PTR _this_colour$[ebp]
  001f0	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 2516 : 		destination_vertices[count].specular = d3d_fog_intensity;

  001f4	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001f7	c1 e0 05	 shl	 eax, 5
  001fa	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00203	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2517 : 	}

  00207	e9 70 fe ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2518 : 
; 2519 : 	draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  0020c	8b 45 d0	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  0020f	50		 push	 eax
  00210	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00213	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00216	52		 push	 edx
  00217	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 2520 : }

  0021c	5f		 pop	 edi
  0021d	5e		 pop	 esi
  0021e	5b		 pop	 ebx
  0021f	8b e5		 mov	 esp, ebp
  00221	5d		 pop	 ebp
  00222	c2 04 00	 ret	 4
?wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_unclipped_3d_object_reflective_gouraud_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_object_point_index$1 = -68				; size = 4
_surface_point_index$2 = -64				; size = 4
_object_index$3 = -60					; size = 4
_transformed_points$ = -56				; size = 4
_vert$ = -52						; size = 4
_destination_vertices$ = -48				; size = 4
_this_colour$ = -44					; size = 4
_v$ = -40						; size = 4
_u$ = -36						; size = 4
_camera_position$ = -32					; size = 12
_normal$ = -20						; size = 12
_point_normal$ = -8					; size = 4
_count$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_unclipped_3d_object_reflective_polygon, COMDAT

; 2361 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2362 : 
; 2363 : 	int
; 2364 : 		count;
; 2365 : 
; 2366 : 	object_3d_heading_pitch_normal
; 2367 : 		*point_normal;
; 2368 : 
; 2369 : 	vec3d
; 2370 : 		normal,
; 2371 : 		camera_position;
; 2372 : 
; 2373 : 	float
; 2374 : 		u,
; 2375 : 		v;
; 2376 : 
; 2377 : 	real_colour
; 2378 : 		this_colour;
; 2379 : 
; 2380 : 	LPD3DTLVERTEX
; 2381 : 		destination_vertices;
; 2382 : 
; 2383 : 	object_transformed_2d_point
; 2384 : 		*vert,
; 2385 : 		*transformed_points;
; 2386 : 
; 2387 : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN5@wrender_tr
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 1a	 add	 eax, 26			; 0000001aH
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2388 : 
; 2389 : 	destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00037	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0003a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00043	89 45 d0	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2390 : 
; 2391 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0004b	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0004e	c1 e1 04	 shl	 ecx, 4
  00051	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00057	89 4d c8	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2392 : 	
; 2393 : 	camera_position = current_object_3d_object_base->camera_position;

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0005f	83 c0 08	 add	 eax, 8
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	89 4d e0	 mov	 DWORD PTR _camera_position$[ebp], ecx
  00067	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0006a	89 55 e4	 mov	 DWORD PTR _camera_position$[ebp+4], edx
  0006d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00070	89 45 e8	 mov	 DWORD PTR _camera_position$[ebp+8], eax

; 2394 : 
; 2395 : 	point_normal = &objects_3d_data[current_object_3d_object_base->object_number].point_normals[current_object_3d_face_normal_list->point];

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00078	6b 48 20 68	 imul	 ecx, DWORD PTR [eax+32], 104
  0007c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00082	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00085	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0008b	8b 4c 0a 48	 mov	 ecx, DWORD PTR [edx+ecx+72]
  0008f	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00092	89 55 f8	 mov	 DWORD PTR _point_normal$[ebp], edx

; 2396 : 	generate_object_3d_point_normal ( point_normal, &normal );

  00095	8d 45 ec	 lea	 eax, DWORD PTR _normal$[ebp]
  00098	50		 push	 eax
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _point_normal$[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?generate_object_3d_point_normal@@YGXPAUOBJECT_3D_HEADING_PITCH_NORMAL@@PAUVEC3D@@@Z ; generate_object_3d_point_normal

; 2397 : //	normal.x = point_normal->x / 32767.0;
; 2398 : //	normal.y = point_normal->y / 32767.0;
; 2399 : //	normal.z = point_normal->z / 32767.0;
; 2400 : 
; 2401 : 	this_colour.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000a7	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000b0	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  000b3	89 45 d4	 mov	 DWORD PTR _this_colour$[ebp], eax

; 2402 : 	this_colour.alpha = current_object_3d_surface->reflectivity;

  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000bb	8a 48 0a	 mov	 cl, BYTE PTR [eax+10]
  000be	88 4d d7	 mov	 BYTE PTR _this_colour$[ebp+3], cl

; 2403 : 
; 2404 : 	//
; 2405 : 	// Now get the u,v coordinates
; 2406 : 	//
; 2407 : 
; 2408 : 	for ( count = 0; count < this_face->number_of_points; count++ )

  000c1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  000c8	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  000ca	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000cd	83 c0 01	 add	 eax, 1
  000d0	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_tr:
  000d3	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000d6	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000d9	39 4d fc	 cmp	 DWORD PTR _count$[ebp], ecx
  000dc	0f 8d 2f 01 00
	00		 jge	 $LN3@wrender_tr

; 2409 : 	{
; 2410 : 
; 2411 : 		int
; 2412 : 			object_index,
; 2413 : 			surface_point_index,
; 2414 : 			object_point_index;
; 2415 : 
; 2416 : 		object_index = current_object_3d_object_base->object_number;

  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000e7	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000ea	89 4d c4	 mov	 DWORD PTR _object_index$3[ebp], ecx

; 2417 : 		surface_point_index = current_object_3d_point_list[count].point;

  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  000f2	03 45 fc	 add	 eax, DWORD PTR _count$[ebp]
  000f5	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000f8	89 4d c0	 mov	 DWORD PTR _surface_point_index$2[ebp], ecx

; 2418 : 		object_point_index = current_object_3d_surface_point_list[surface_point_index].point;

  000fb	8b 45 c0	 mov	 eax, DWORD PTR _surface_point_index$2[ebp]
  000fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00104	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00108	89 55 bc	 mov	 DWORD PTR _object_point_index$1[ebp], edx

; 2419 : 
; 2420 : 		generate_environment_coordinates ( current_object_3d_object_base->object_number,

  0010b	8d 45 d8	 lea	 eax, DWORD PTR _v$[ebp]
  0010e	50		 push	 eax
  0010f	8d 4d dc	 lea	 ecx, DWORD PTR _u$[ebp]
  00112	51		 push	 ecx
  00113	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00119	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0011c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0011f	50		 push	 eax
  00120	8d 4d e0	 lea	 ecx, DWORD PTR _camera_position$[ebp]
  00123	51		 push	 ecx
  00124	8d 55 ec	 lea	 edx, DWORD PTR _normal$[ebp]
  00127	52		 push	 edx
  00128	6b 45 c4 68	 imul	 eax, DWORD PTR _object_index$3[ebp], 104
  0012c	6b 4d bc 06	 imul	 ecx, DWORD PTR _object_point_index$1[ebp], 6
  00130	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  00136	03 4c 02 40	 add	 ecx, DWORD PTR [edx+eax+64]
  0013a	51		 push	 ecx
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00140	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00143	51		 push	 ecx
  00144	e8 00 00 00 00	 call	 ?generate_environment_coordinates@@YGXHPAUOBJECT_SHORT_3D_POINT@@PAUVEC3D@@1QAY02MPAM3@Z ; generate_environment_coordinates

; 2421 : 														&objects_3d_data[object_index].points[object_point_index],
; 2422 : 														&normal, &camera_position, current_object_3d_object_base->object_vp->attitude, &u, &v );
; 2423 : 
; 2424 : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00149	8b 45 c0	 mov	 eax, DWORD PTR _surface_point_index$2[ebp]
  0014c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00152	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00156	c1 e2 04	 shl	 edx, 4
  00159	03 55 c8	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0015c	89 55 cc	 mov	 DWORD PTR _vert$[ebp], edx

; 2425 : 
; 2426 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  0015f	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00162	c1 e0 05	 shl	 eax, 5
  00165	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00168	8b 55 cc	 mov	 edx, DWORD PTR _vert$[ebp]
  0016b	8b 12		 mov	 edx, DWORD PTR [edx]
  0016d	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2427 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  00170	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00173	c1 e0 05	 shl	 eax, 5
  00176	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00179	8b 55 cc	 mov	 edx, DWORD PTR _vert$[ebp]
  0017c	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0017f	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2428 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00183	8b 45 cc	 mov	 eax, DWORD PTR _vert$[ebp]
  00186	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0018b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00193	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0019b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019f	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  001a2	c1 e1 05	 shl	 ecx, 5
  001a5	8b 55 d0	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  001a8	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 2429 : 		destination_vertices[count].rhw = vert->q;

  001ae	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001b1	c1 e0 05	 shl	 eax, 5
  001b4	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001b7	8b 55 cc	 mov	 edx, DWORD PTR _vert$[ebp]
  001ba	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001bd	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2430 : 		destination_vertices[count].tu = u;

  001c1	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001c4	c1 e0 05	 shl	 eax, 5
  001c7	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001ca	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _u$[ebp]
  001cf	f3 0f 11 44 01
	18		 movss	 DWORD PTR [ecx+eax+24], xmm0

; 2431 : 		destination_vertices[count].tv = v;

  001d5	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001d8	c1 e0 05	 shl	 eax, 5
  001db	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001de	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _v$[ebp]
  001e3	f3 0f 11 44 01
	1c		 movss	 DWORD PTR [ecx+eax+28], xmm0

; 2432 : 		destination_vertices[count].color = this_colour.colour;

  001e9	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001ec	c1 e0 05	 shl	 eax, 5
  001ef	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001f2	8b 55 d4	 mov	 edx, DWORD PTR _this_colour$[ebp]
  001f5	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 2433 : 		destination_vertices[count].specular = d3d_fog_intensity;

  001f9	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  001fc	c1 e0 05	 shl	 eax, 5
  001ff	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00202	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00208	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2434 : 	}

  0020c	e9 b9 fe ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2435 : 
; 2436 : 	draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00211	8b 45 d0	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  00214	50		 push	 eax
  00215	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00218	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0021b	52		 push	 edx
  0021c	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 2437 : }

  00221	5f		 pop	 edi
  00222	5e		 pop	 esi
  00223	5b		 pop	 ebx
  00224	8b e5		 mov	 esp, ebp
  00226	5d		 pop	 ebp
  00227	c2 04 00	 ret	 4
?wrender_translucent_unclipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_unclipped_3d_object_reflective_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_normal$1 = -80						; size = 4
_specular_colour$ = -76					; size = 4
_specular$ = -72					; size = 4
_surface_specular$ = -68				; size = 4
_surface_blue$ = -64					; size = 4
_surface_green$ = -60					; size = 4
_surface_red$ = -56					; size = 4
_blue$ = -52						; size = 4
_green$ = -48						; size = 4
_red$ = -44						; size = 4
_polygon_alpha$ = -40					; size = 4
_surface_point_index$ = -36				; size = 4
_count$ = -32						; size = 4
_b$ = -28						; size = 4
_g$ = -24						; size = 4
_r$ = -20						; size = 4
_ispecular$ = -16					; size = 4
_transformed_points$ = -12				; size = 4
_vert$ = -8						; size = 4
_destination_vertices$ = -4				; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_unclipped_3d_object_gouraud_polygon, COMDAT

; 2260 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2261 : 
; 2262 : 	LPD3DTLVERTEX
; 2263 : 		destination_vertices;
; 2264 : 
; 2265 : 	object_transformed_2d_point
; 2266 : 		*vert,
; 2267 : 		*transformed_points;
; 2268 : 
; 2269 : 	int
; 2270 : 		ispecular,
; 2271 : 		r,
; 2272 : 		g,
; 2273 : 		b,
; 2274 : 		count,
; 2275 : 		surface_point_index,
; 2276 : 		polygon_alpha;
; 2277 : 
; 2278 : 	float
; 2279 : 		red,
; 2280 : 		green,
; 2281 : 		blue;
; 2282 : 
; 2283 : 	float
; 2284 : 		surface_red,
; 2285 : 		surface_green,
; 2286 : 		surface_blue,
; 2287 : 		surface_specular,
; 2288 : 		specular;
; 2289 : 
; 2290 : 	real_colour
; 2291 : 		specular_colour;
; 2292 : 
; 2293 : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN5@wrender_tr
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 21	 add	 eax, 33			; 00000021H
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2294 : 
; 2295 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0003c	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0003f	c1 e1 04	 shl	 ecx, 4
  00042	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00048	89 4d f4	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2296 : 	
; 2297 : 	surface_red = ( ( float ) current_object_3d_surface->red ) / 255.0;

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00050	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  00054	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00058	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0005c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00064	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00068	f3 0f 11 45 c8	 movss	 DWORD PTR _surface_red$[ebp], xmm0

; 2298 : 	surface_green = ( ( float ) current_object_3d_surface->green ) / 255.0;

  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00072	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00076	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0007a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0007e	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00086	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0008a	f3 0f 11 45 c4	 movss	 DWORD PTR _surface_green$[ebp], xmm0

; 2299 : 	surface_blue = ( ( float ) current_object_3d_surface->blue ) / 255.0;

  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00094	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00098	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0009c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000a0	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ac	f3 0f 11 45 c0	 movss	 DWORD PTR _surface_blue$[ebp], xmm0

; 2300 : 
; 2301 : 	if ( current_object_3d_specular )

  000b1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
  000b8	74 14		 je	 SHORT $LN6@wrender_tr

; 2302 : 	{
; 2303 : 
; 2304 : 		surface_specular = ( float ) current_object_3d_surface->specularity;

  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000bf	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  000c3	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000c7	f3 0f 11 45 bc	 movss	 DWORD PTR _surface_specular$[ebp], xmm0

; 2305 : 	}
; 2306 : 	else

  000cc	eb 08		 jmp	 SHORT $LN7@wrender_tr
$LN6@wrender_tr:

; 2307 : 	{
; 2308 : 
; 2309 : 		surface_specular = 0;

  000ce	0f 57 c0	 xorps	 xmm0, xmm0
  000d1	f3 0f 11 45 bc	 movss	 DWORD PTR _surface_specular$[ebp], xmm0
$LN7@wrender_tr:

; 2310 : 	}
; 2311 : 
; 2312 : 	//
; 2313 : 	// Should draw a gouraud shaded translucent polygon
; 2314 : 	//
; 2315 : 
; 2316 : 	asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &polygon_alpha );

  000d6	8d 45 d8	 lea	 eax, DWORD PTR _polygon_alpha$[ebp]
  000d9	50		 push	 eax
  000da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000e0	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000e4	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000e8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000f0	51		 push	 ecx
  000f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f6	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2317 : 
; 2318 : 	destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  000fb	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000fe	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00107	89 45 fc	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2319 : 
; 2320 : 	for ( count = 0; count < this_face->number_of_points; count++ )

  0010a	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00111	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  00113	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00116	83 c0 01	 add	 eax, 1
  00119	89 45 e0	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_tr:
  0011c	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0011f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00122	39 4d e0	 cmp	 DWORD PTR _count$[ebp], ecx
  00125	0f 8d 90 01 00
	00		 jge	 $LN3@wrender_tr

; 2321 : 	{
; 2322 : 
; 2323 : 		object_3d_transformed_point_normal
; 2324 : 			*normal;
; 2325 : 
; 2326 : 		surface_point_index = current_object_3d_point_list[count].point;

  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00130	03 45 e0	 add	 eax, DWORD PTR _count$[ebp]
  00133	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00136	89 4d dc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 2327 : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00139	8b 45 dc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  0013c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00142	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00146	c1 e2 04	 shl	 edx, 4
  00149	03 55 f4	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0014c	89 55 f8	 mov	 DWORD PTR _vert$[ebp], edx

; 2328 : 		normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  0014f	8b 45 dc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00152	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00158	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0015c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00161	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  00164	89 4d b0	 mov	 DWORD PTR _normal$1[ebp], ecx

; 2329 : 	
; 2330 : 		destination_vertices[count].sx = vert->i;

  00167	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  0016a	c1 e0 05	 shl	 eax, 5
  0016d	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00170	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  00173	8b 12		 mov	 edx, DWORD PTR [edx]
  00175	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2331 : 		destination_vertices[count].sy = vert->j;

  00178	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  0017b	c1 e0 05	 shl	 eax, 5
  0017e	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00181	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  00184	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00187	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2332 : 		destination_vertices[count].rhw = vert->q;

  0018b	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  0018e	c1 e0 05	 shl	 eax, 5
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00194	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  00197	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0019a	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2333 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0019e	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  001a1	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  001a6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  001ae	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  001b6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ba	8b 4d e0	 mov	 ecx, DWORD PTR _count$[ebp]
  001bd	c1 e1 05	 shl	 ecx, 5
  001c0	8b 55 fc	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  001c3	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 2334 : 		red = ( normal->r * surface_red ) + FLOAT_FLOAT_FACTOR;

  001c9	8b 45 b0	 mov	 eax, DWORD PTR _normal$1[ebp]
  001cc	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  001d0	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001d4	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _surface_red$[ebp]
  001d9	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001e1	f3 0f 11 45 d4	 movss	 DWORD PTR _red$[ebp], xmm0

; 2335 : 		green = ( normal->g * surface_green ) + FLOAT_FLOAT_FACTOR;

  001e6	8b 45 b0	 mov	 eax, DWORD PTR _normal$1[ebp]
  001e9	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  001ed	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001f1	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _surface_green$[ebp]
  001f6	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001fe	f3 0f 11 45 d0	 movss	 DWORD PTR _green$[ebp], xmm0

; 2336 : 		blue = ( normal->b * surface_blue ) + FLOAT_FLOAT_FACTOR;

  00203	8b 45 b0	 mov	 eax, DWORD PTR _normal$1[ebp]
  00206	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00209	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0020d	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _surface_blue$[ebp]
  00212	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  0021a	f3 0f 11 45 cc	 movss	 DWORD PTR _blue$[ebp], xmm0

; 2337 : 		r = ( *( int * ) &red ) - INTEGER_FLOAT_FACTOR;

  0021f	8b 45 d4	 mov	 eax, DWORD PTR _red$[ebp]
  00222	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00227	89 45 ec	 mov	 DWORD PTR _r$[ebp], eax

; 2338 : 		g = ( *( int * ) &green ) - INTEGER_FLOAT_FACTOR;

  0022a	8b 45 d0	 mov	 eax, DWORD PTR _green$[ebp]
  0022d	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00232	89 45 e8	 mov	 DWORD PTR _g$[ebp], eax

; 2339 : 		b = ( *( int * ) &blue ) - INTEGER_FLOAT_FACTOR;

  00235	8b 45 cc	 mov	 eax, DWORD PTR _blue$[ebp]
  00238	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  0023d	89 45 e4	 mov	 DWORD PTR _b$[ebp], eax

; 2340 : 
; 2341 : 		destination_vertices[count].color = RGBA_MAKE ( r, g, b, polygon_alpha );

  00240	8b 45 d8	 mov	 eax, DWORD PTR _polygon_alpha$[ebp]
  00243	c1 e0 18	 shl	 eax, 24			; 00000018H
  00246	8b 4d ec	 mov	 ecx, DWORD PTR _r$[ebp]
  00249	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0024c	0b c1		 or	 eax, ecx
  0024e	8b 55 e8	 mov	 edx, DWORD PTR _g$[ebp]
  00251	c1 e2 08	 shl	 edx, 8
  00254	0b c2		 or	 eax, edx
  00256	0b 45 e4	 or	 eax, DWORD PTR _b$[ebp]
  00259	8b 4d e0	 mov	 ecx, DWORD PTR _count$[ebp]
  0025c	c1 e1 05	 shl	 ecx, 5
  0025f	8b 55 fc	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00262	89 44 0a 10	 mov	 DWORD PTR [edx+ecx+16], eax

; 2342 : 
; 2343 : 		specular = normal->specular;

  00266	8b 45 b0	 mov	 eax, DWORD PTR _normal$1[ebp]
  00269	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0026e	f3 0f 11 45 b8	 movss	 DWORD PTR _specular$[ebp], xmm0

; 2344 : 		asm_convert_float_to_int ( ( specular * surface_specular ), &ispecular );

  00273	8d 45 f0	 lea	 eax, DWORD PTR _ispecular$[ebp]
  00276	50		 push	 eax
  00277	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _specular$[ebp]
  0027c	f3 0f 59 45 bc	 mulss	 xmm0, DWORD PTR _surface_specular$[ebp]
  00281	51		 push	 ecx
  00282	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00287	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2345 : 		specular_colour.colour = d3d_fog_intensity;

  0028c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00291	89 45 b4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2346 : 		specular_colour.red = ispecular;

  00294	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  00297	88 45 b6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 2347 : 		specular_colour.green = ispecular;

  0029a	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  0029d	88 45 b5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 2348 : 		specular_colour.blue = ispecular;

  002a0	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  002a3	88 45 b4	 mov	 BYTE PTR _specular_colour$[ebp], al

; 2349 : 
; 2350 : 		destination_vertices[count].specular = specular_colour.colour;

  002a6	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  002a9	c1 e0 05	 shl	 eax, 5
  002ac	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002af	8b 55 b4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  002b2	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2351 : 	}

  002b6	e9 58 fe ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2352 : 
; 2353 : 	draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  002bb	8b 45 fc	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  002be	50		 push	 eax
  002bf	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  002c2	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  002c5	52		 push	 edx
  002c6	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 2354 : }

  002cb	5f		 pop	 edi
  002cc	5e		 pop	 esi
  002cd	5b		 pop	 ebx
  002ce	8b e5		 mov	 esp, ebp
  002d0	5d		 pop	 ebp
  002d1	c2 04 00	 ret	 4
?wrender_translucent_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_unclipped_3d_object_gouraud_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_imixed_dissolve$1 = -64				; size = 4
_ispecular$2 = -60					; size = 4
_ib$3 = -56						; size = 4
_ig$4 = -52						; size = 4
_ir$5 = -48						; size = 4
_specular$6 = -44					; size = 4
_blue$7 = -40						; size = 4
_green$8 = -36						; size = 4
_red$9 = -32						; size = 4
_transformed_points$ = -28				; size = 4
_vert$ = -24						; size = 4
_surface_point_index$ = -20				; size = 4
_count$ = -16						; size = 4
_destination_vertices$ = -12				; size = 4
_specular_colour$ = -8					; size = 4
_colour$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_unclipped_3d_object_polygon, COMDAT

; 2156 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2157 : 
; 2158 : 	real_colour
; 2159 : 		colour,
; 2160 : 		specular_colour;
; 2161 : 
; 2162 : 	LPD3DTLVERTEX
; 2163 : 		destination_vertices;
; 2164 : 
; 2165 : 	int
; 2166 : 		count,
; 2167 : 		surface_point_index;
; 2168 : 
; 2169 : 	object_transformed_2d_point
; 2170 : 		*vert,
; 2171 : 		*transformed_points;
; 2172 : 
; 2173 : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN5@wrender_tr
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 11	 add	 eax, 17			; 00000011H
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2174 : 
; 2175 : 	if ( current_object_3d_surface->luminous )

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0003c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003f	66 c1 e9 07	 shr	 cx, 7
  00043	66 83 e1 01	 and	 cx, 1
  00047	0f b7 d1	 movzx	 edx, cx
  0004a	85 d2		 test	 edx, edx
  0004c	74 16		 je	 SHORT $LN6@wrender_tr

; 2176 : 	{
; 2177 : 
; 2178 : 		calculate_luminous_colour ( &colour );

  0004e	8d 45 fc	 lea	 eax, DWORD PTR _colour$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 2179 : 	
; 2180 : 		specular_colour.colour = d3d_fog_intensity;

  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0005c	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2181 : 	}
; 2182 : 	else

  0005f	e9 62 01 00 00	 jmp	 $LN7@wrender_tr
$LN6@wrender_tr:

; 2183 : 	{
; 2184 : 
; 2185 : 		float
; 2186 : 			red,
; 2187 : 			green,
; 2188 : 			blue,
; 2189 : 			specular;
; 2190 : 
; 2191 : 		int
; 2192 : 			ir,
; 2193 : 			ig,
; 2194 : 			ib,
; 2195 : 			ispecular;
; 2196 : 
; 2197 : 		//
; 2198 : 		// Look up the colour of the face normal
; 2199 : 		//
; 2200 : 	
; 2201 : 		red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00069	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0006c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00072	0f b6 44 ca 02	 movzx	 eax, BYTE PTR [edx+ecx*8+2]
  00077	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0007b	f3 0f 11 45 e0	 movss	 DWORD PTR _red$9[ebp], xmm0

; 2202 : 		green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00085	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0008e	0f b6 44 ca 01	 movzx	 eax, BYTE PTR [edx+ecx*8+1]
  00093	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00097	f3 0f 11 45 dc	 movss	 DWORD PTR _green$8[ebp], xmm0

; 2203 : 		blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000a1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000aa	0f b6 04 ca	 movzx	 eax, BYTE PTR [edx+ecx*8]
  000ae	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000b2	f3 0f 11 45 d8	 movss	 DWORD PTR _blue$7[ebp], xmm0

; 2204 : 		specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000bc	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000c5	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000cb	f3 0f 11 45 d4	 movss	 DWORD PTR _specular$6[ebp], xmm0

; 2205 : 	
; 2206 : 		red /= 255.0;

  000d0	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _red$9[ebp]
  000d5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000dd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e1	f3 0f 11 45 e0	 movss	 DWORD PTR _red$9[ebp], xmm0

; 2207 : 		green /= 255.0;

  000e6	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _green$8[ebp]
  000eb	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f7	f3 0f 11 45 dc	 movss	 DWORD PTR _green$8[ebp], xmm0

; 2208 : 		blue /= 255.0;

  000fc	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _blue$7[ebp]
  00101	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00109	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010d	f3 0f 11 45 d8	 movss	 DWORD PTR _blue$7[ebp], xmm0

; 2209 : 	
; 2210 : 		asm_convert_float_to_int ( ( red * current_object_3d_surface->red ), &ir );

  00112	8d 45 d0	 lea	 eax, DWORD PTR _ir$5[ebp]
  00115	50		 push	 eax
  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0011c	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  00120	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00124	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _red$9[ebp]
  00129	51		 push	 ecx
  0012a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012f	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2211 : 		asm_convert_float_to_int ( ( green * current_object_3d_surface->green ), &ig );

  00134	8d 45 cc	 lea	 eax, DWORD PTR _ig$4[ebp]
  00137	50		 push	 eax
  00138	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0013e	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  00142	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00146	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _green$8[ebp]
  0014b	51		 push	 ecx
  0014c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00151	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2212 : 		asm_convert_float_to_int ( ( blue * current_object_3d_surface->blue ), &ib );

  00156	8d 45 c8	 lea	 eax, DWORD PTR _ib$3[ebp]
  00159	50		 push	 eax
  0015a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00160	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  00164	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00168	f3 0f 59 45 d8	 mulss	 xmm0, DWORD PTR _blue$7[ebp]
  0016d	51		 push	 ecx
  0016e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00173	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2213 : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  00178	8d 45 c4	 lea	 eax, DWORD PTR _ispecular$2[ebp]
  0017b	50		 push	 eax
  0017c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00182	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00186	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0018a	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _specular$6[ebp]
  0018f	51		 push	 ecx
  00190	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00195	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2214 : 	
; 2215 : 		colour.red = ir;

  0019a	8a 45 d0	 mov	 al, BYTE PTR _ir$5[ebp]
  0019d	88 45 fe	 mov	 BYTE PTR _colour$[ebp+2], al

; 2216 : 		colour.green = ig;

  001a0	8a 45 cc	 mov	 al, BYTE PTR _ig$4[ebp]
  001a3	88 45 fd	 mov	 BYTE PTR _colour$[ebp+1], al

; 2217 : 		colour.blue = ib;

  001a6	8a 45 c8	 mov	 al, BYTE PTR _ib$3[ebp]
  001a9	88 45 fc	 mov	 BYTE PTR _colour$[ebp], al

; 2218 : 
; 2219 : 		specular_colour.colour = d3d_fog_intensity;

  001ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001b1	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2220 : 		specular_colour.red = ispecular;

  001b4	8a 45 c4	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001b7	88 45 fa	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 2221 : 		specular_colour.green = ispecular;

  001ba	8a 45 c4	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001bd	88 45 f9	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 2222 : 		specular_colour.blue = ispecular;

  001c0	8a 45 c4	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001c3	88 45 f8	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN7@wrender_tr:

; 2223 : 	}
; 2224 : 
; 2225 : 	{
; 2226 : 
; 2227 : 		int
; 2228 : 			imixed_dissolve;
; 2229 : 
; 2230 : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  001c6	8d 45 c0	 lea	 eax, DWORD PTR _imixed_dissolve$1[ebp]
  001c9	50		 push	 eax
  001ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001d0	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  001d4	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001d8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001e0	51		 push	 ecx
  001e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e6	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2231 : 		colour.alpha = imixed_dissolve;

  001eb	8a 45 c0	 mov	 al, BYTE PTR _imixed_dissolve$1[ebp]
  001ee	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 2232 : 	}
; 2233 : 
; 2234 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  001f6	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  001f9	c1 e1 04	 shl	 ecx, 4
  001fc	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00202	89 4d e4	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2235 : 
; 2236 : 	destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00205	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00208	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0020b	51		 push	 ecx
  0020c	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00211	89 45 f4	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2237 : 
; 2238 : 	for ( count = 0; count < this_face->number_of_points; count++ )

  00214	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0021b	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  0021d	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  00220	83 c0 01	 add	 eax, 1
  00223	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_tr:
  00226	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00229	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0022c	39 4d f0	 cmp	 DWORD PTR _count$[ebp], ecx
  0022f	0f 8d ab 00 00
	00		 jge	 $LN3@wrender_tr

; 2239 : 	{
; 2240 : 
; 2241 : 		surface_point_index = current_object_3d_point_list[count].point;

  00235	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0023a	03 45 f0	 add	 eax, DWORD PTR _count$[ebp]
  0023d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00240	89 4d ec	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 2242 : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00243	8b 45 ec	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00246	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0024c	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00250	c1 e2 04	 shl	 edx, 4
  00253	03 55 e4	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00256	89 55 e8	 mov	 DWORD PTR _vert$[ebp], edx

; 2243 : 
; 2244 : 		destination_vertices[count].sx = vert->i;

  00259	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0025c	c1 e0 05	 shl	 eax, 5
  0025f	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00262	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  00265	8b 12		 mov	 edx, DWORD PTR [edx]
  00267	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2245 : 		destination_vertices[count].sy = vert->j;

  0026a	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0026d	c1 e0 05	 shl	 eax, 5
  00270	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00273	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  00276	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00279	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2246 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0027d	8b 45 e8	 mov	 eax, DWORD PTR _vert$[ebp]
  00280	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00285	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0028d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00295	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00299	8b 4d f0	 mov	 ecx, DWORD PTR _count$[ebp]
  0029c	c1 e1 05	 shl	 ecx, 5
  0029f	8b 55 f4	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  002a2	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 2247 : 		destination_vertices[count].rhw = vert->q;

  002a8	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  002ab	c1 e0 05	 shl	 eax, 5
  002ae	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002b1	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  002b4	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  002b7	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2248 : 		destination_vertices[count].color = colour.colour;

  002bb	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  002be	c1 e0 05	 shl	 eax, 5
  002c1	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002c4	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  002c7	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 2249 : 		destination_vertices[count].specular = specular_colour.colour;

  002cb	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  002ce	c1 e0 05	 shl	 eax, 5
  002d1	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002d4	8b 55 f8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  002d7	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2250 : 	}

  002db	e9 3d ff ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2251 : 
; 2252 : 	draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  002e0	8b 45 f4	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  002e3	50		 push	 eax
  002e4	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  002e7	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  002ea	52		 push	 edx
  002eb	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 2253 : }

  002f0	5f		 pop	 edi
  002f1	5e		 pop	 esi
  002f2	5b		 pop	 ebx
  002f3	8b e5		 mov	 esp, ebp
  002f5	5d		 pop	 ebp
  002f6	c2 04 00	 ret	 4
?wrender_translucent_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_unclipped_3d_object_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_col$1 = -44						; size = 4
_normal$2 = -40						; size = 4
_specular$ = -36					; size = 4
_specular_colour$ = -32					; size = 4
_destination_vertices$ = -28				; size = 4
_transformed_points$ = -24				; size = 4
_vert$ = -20						; size = 4
_alpha$ = -16						; size = 4
_count$ = -12						; size = 4
_ispecular$ = -8					; size = 4
_surface_point_index$ = -4				; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_unclipped_3d_object_gouraud_textured_polygon, COMDAT

; 2077 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2078 : 
; 2079 : 	int
; 2080 : 		surface_point_index,
; 2081 : 		ispecular,
; 2082 : 		count,
; 2083 : 		alpha;
; 2084 : 
; 2085 : 	object_transformed_2d_point
; 2086 : 		*vert,
; 2087 : 		*transformed_points;
; 2088 : 
; 2089 : 	LPD3DTLVERTEX
; 2090 : 		destination_vertices;
; 2091 : 
; 2092 : 	real_colour
; 2093 : 		specular_colour;
; 2094 : 
; 2095 : 	float
; 2096 : 		specular;
; 2097 : 
; 2098 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 15	 add	 eax, 21			; 00000015H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2099 : 
; 2100 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00039	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0003c	c1 e1 04	 shl	 ecx, 4
  0003f	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00045	89 4d e8	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2101 : 
; 2102 : 	destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00048	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0004b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00054	89 45 e4	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2103 : 
; 2104 : 	if ( current_object_3d_surface->translucent )

  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0005c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0005f	66 c1 e9 06	 shr	 cx, 6
  00063	66 83 e1 01	 and	 cx, 1
  00067	0f b7 d1	 movzx	 edx, cx
  0006a	85 d2		 test	 edx, edx
  0006c	74 27		 je	 SHORT $LN6@wrender_tr

; 2105 : 	{
; 2106 : 
; 2107 : 		asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &alpha );

  0006e	8d 45 f0	 lea	 eax, DWORD PTR _alpha$[ebp]
  00071	50		 push	 eax
  00072	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00078	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  0007c	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00080	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00088	51		 push	 ecx
  00089	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008e	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2108 : 	}
; 2109 : 	else

  00093	eb 0a		 jmp	 SHORT $LN7@wrender_tr
$LN6@wrender_tr:

; 2110 : 	{
; 2111 : 
; 2112 : 		alpha = current_object_3d_dissolve_value;

  00095	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  0009c	89 45 f0	 mov	 DWORD PTR _alpha$[ebp], eax
$LN7@wrender_tr:

; 2113 : 	}
; 2114 : 
; 2115 : 	for ( count = 0; count < this_face->number_of_points; count++ )

  0009f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  000a6	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  000a8	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000ab	83 c0 01	 add	 eax, 1
  000ae	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_tr:
  000b1	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000b4	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000b7	39 4d f4	 cmp	 DWORD PTR _count$[ebp], ecx
  000ba	0f 8d 4d 01 00
	00		 jge	 $LN3@wrender_tr

; 2116 : 	{
; 2117 : 
; 2118 : 		object_3d_transformed_point_normal
; 2119 : 			*normal;
; 2120 : 
; 2121 : 		real_colour
; 2122 : 			col;
; 2123 : 
; 2124 : 		surface_point_index = current_object_3d_point_list[count].point;

  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  000c5	03 45 f4	 add	 eax, DWORD PTR _count$[ebp]
  000c8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000cb	89 4d fc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 2125 : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  000d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  000d7	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000db	c1 e2 04	 shl	 edx, 4
  000de	03 55 e8	 add	 edx, DWORD PTR _transformed_points$[ebp]
  000e1	89 55 ec	 mov	 DWORD PTR _vert$[ebp], edx

; 2126 : 		normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  000ed	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000f6	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  000f9	89 4d d8	 mov	 DWORD PTR _normal$2[ebp], ecx

; 2127 : 		col.colour = normal->colour;

  000fc	8b 45 d8	 mov	 eax, DWORD PTR _normal$2[ebp]
  000ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00101	89 4d d4	 mov	 DWORD PTR _col$1[ebp], ecx

; 2128 : 		col.alpha = alpha;

  00104	8a 45 f0	 mov	 al, BYTE PTR _alpha$[ebp]
  00107	88 45 d7	 mov	 BYTE PTR _col$1[ebp+3], al

; 2129 : 
; 2130 : 		destination_vertices[count].sx = vert->i;

  0010a	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0010d	c1 e0 05	 shl	 eax, 5
  00110	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00113	8b 55 ec	 mov	 edx, DWORD PTR _vert$[ebp]
  00116	8b 12		 mov	 edx, DWORD PTR [edx]
  00118	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2131 : 		destination_vertices[count].sy = vert->j;

  0011b	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0011e	c1 e0 05	 shl	 eax, 5
  00121	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00124	8b 55 ec	 mov	 edx, DWORD PTR _vert$[ebp]
  00127	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0012a	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2132 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0012e	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  00131	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00136	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0013e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00146	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014a	8b 4d f4	 mov	 ecx, DWORD PTR _count$[ebp]
  0014d	c1 e1 05	 shl	 ecx, 5
  00150	8b 55 e4	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00153	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 2133 : 		destination_vertices[count].rhw = vert->q;

  00159	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0015c	c1 e0 05	 shl	 eax, 5
  0015f	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00162	8b 55 ec	 mov	 edx, DWORD PTR _vert$[ebp]
  00165	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00168	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2134 : 		destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  0016c	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0016f	c1 e0 05	 shl	 eax, 5
  00172	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00175	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00178	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0017e	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00181	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 2135 : 		destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  00185	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00188	c1 e0 05	 shl	 eax, 5
  0018b	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0018e	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00191	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00197	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  0019b	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 2136 : 		destination_vertices[count].color = col.colour;

  0019f	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  001a2	c1 e0 05	 shl	 eax, 5
  001a5	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001a8	8b 55 d4	 mov	 edx, DWORD PTR _col$1[ebp]
  001ab	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 2137 : 
; 2138 : 		specular = normal->specular;

  001af	8b 45 d8	 mov	 eax, DWORD PTR _normal$2[ebp]
  001b2	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  001b7	f3 0f 11 45 dc	 movss	 DWORD PTR _specular$[ebp], xmm0

; 2139 : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  001bc	8d 45 f8	 lea	 eax, DWORD PTR _ispecular$[ebp]
  001bf	50		 push	 eax
  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001c6	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  001ca	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001ce	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _specular$[ebp]
  001d3	51		 push	 ecx
  001d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d9	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2140 : 		specular_colour.colour = d3d_fog_intensity;

  001de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001e3	89 45 e0	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2141 : 		specular_colour.red = ispecular;

  001e6	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  001e9	88 45 e2	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 2142 : 		specular_colour.green = ispecular;

  001ec	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  001ef	88 45 e1	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 2143 : 		specular_colour.blue = ispecular;

  001f2	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  001f5	88 45 e0	 mov	 BYTE PTR _specular_colour$[ebp], al

; 2144 : 
; 2145 : 		destination_vertices[count].specular = specular_colour.colour;

  001f8	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  001fb	c1 e0 05	 shl	 eax, 5
  001fe	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00201	8b 55 e0	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00204	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2146 : 	}

  00208	e9 9b fe ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2147 : 
; 2148 : 	draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  0020d	8b 45 e4	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  00210	50		 push	 eax
  00211	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00214	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00217	52		 push	 edx
  00218	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 2149 : }

  0021d	5f		 pop	 edi
  0021e	5e		 pop	 esi
  0021f	5b		 pop	 ebx
  00220	8b e5		 mov	 esp, ebp
  00222	5d		 pop	 ebp
  00223	c2 04 00	 ret	 4
?wrender_translucent_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_unclipped_3d_object_gouraud_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_specular$1 = -40					; size = 4
_ispecular$2 = -36					; size = 4
_ialpha$3 = -32						; size = 4
_destination_vertices$ = -28				; size = 4
_transformed_points$ = -24				; size = 4
_vert$ = -20						; size = 4
_count$ = -16						; size = 4
_surface_point_index$ = -12				; size = 4
_specular_colour$ = -8					; size = 4
_colour$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_unclipped_3d_object_textured_polygon, COMDAT

; 1971 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1972 : 
; 1973 : 	real_colour
; 1974 : 		colour;
; 1975 : 
; 1976 : 	real_colour
; 1977 : 		specular_colour;
; 1978 : 
; 1979 : 	int
; 1980 : 		surface_point_index;
; 1981 : 
; 1982 : 	int
; 1983 : 		count;
; 1984 : 
; 1985 : 	object_transformed_2d_point
; 1986 : 		*vert,
; 1987 : 		*transformed_points;
; 1988 : 
; 1989 : 	LPD3DTLVERTEX
; 1990 : 		destination_vertices;
; 1991 : 
; 1992 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 15	 add	 eax, 21			; 00000015H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 1993 : 
; 1994 : 	colour.alpha = current_object_3d_dissolve_value;

  00034	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00039	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 1995 : 
; 1996 : 	specular_colour.colour = d3d_fog_intensity;

  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00041	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1997 : 
; 1998 : 	if ( current_object_3d_surface->luminous )

  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00049	66 8b 08	 mov	 cx, WORD PTR [eax]
  0004c	66 c1 e9 07	 shr	 cx, 7
  00050	66 83 e1 01	 and	 cx, 1
  00054	0f b7 d1	 movzx	 edx, cx
  00057	85 d2		 test	 edx, edx
  00059	74 0e		 je	 SHORT $LN6@wrender_tr

; 1999 : 	{
; 2000 : 
; 2001 : 		calculate_luminous_colour ( &colour );

  0005b	8d 45 fc	 lea	 eax, DWORD PTR _colour$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 2002 : 	}
; 2003 : 	else

  00064	e9 b6 00 00 00	 jmp	 $LN10@wrender_tr
$LN6@wrender_tr:

; 2004 : 	{
; 2005 : 
; 2006 : 		//
; 2007 : 		// Look up the colour of the face normal
; 2008 : 		//
; 2009 : 
; 2010 : 		colour.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0006e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00077	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  0007a	89 45 fc	 mov	 DWORD PTR _colour$[ebp], eax

; 2011 : 
; 2012 : 		if ( current_object_3d_surface->translucent )

  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00082	66 8b 08	 mov	 cx, WORD PTR [eax]
  00085	66 c1 e9 06	 shr	 cx, 6
  00089	66 83 e1 01	 and	 cx, 1
  0008d	0f b7 d1	 movzx	 edx, cx
  00090	85 d2		 test	 edx, edx
  00092	74 2d		 je	 SHORT $LN8@wrender_tr

; 2013 : 		{
; 2014 : 
; 2015 : 			int
; 2016 : 				ialpha;
; 2017 : 
; 2018 : 			asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &ialpha );

  00094	8d 45 e0	 lea	 eax, DWORD PTR _ialpha$3[ebp]
  00097	50		 push	 eax
  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0009e	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000a2	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000a6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000ae	51		 push	 ecx
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2019 : 
; 2020 : 			colour.alpha = ialpha;

  000b9	8a 45 e0	 mov	 al, BYTE PTR _ialpha$3[ebp]
  000bc	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 2021 : 		}
; 2022 : 		else

  000bf	eb 08		 jmp	 SHORT $LN9@wrender_tr
$LN8@wrender_tr:

; 2023 : 		{
; 2024 : 
; 2025 : 			colour.alpha = current_object_3d_dissolve_value;

  000c1	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  000c6	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al
$LN9@wrender_tr:

; 2026 : 		}
; 2027 : 
; 2028 : 		if ( current_object_3d_specular )

  000c9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
  000d0	74 4d		 je	 SHORT $LN10@wrender_tr

; 2029 : 		{
; 2030 : 	
; 2031 : 			int
; 2032 : 				ispecular;
; 2033 : 	
; 2034 : 			float
; 2035 : 				specular;
; 2036 : 	
; 2037 : 			specular = current_object_3d_surface->specularity * current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000d7	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  000db	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000e5	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000ee	f3 0f 59 44 c1
	04		 mulss	 xmm0, DWORD PTR [ecx+eax*8+4]
  000f4	f3 0f 11 45 d8	 movss	 DWORD PTR _specular$1[ebp], xmm0

; 2038 : 	
; 2039 : 			asm_convert_float_to_int ( specular, &ispecular );

  000f9	8d 45 dc	 lea	 eax, DWORD PTR _ispecular$2[ebp]
  000fc	50		 push	 eax
  000fd	51		 push	 ecx
  000fe	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _specular$1[ebp]
  00103	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00108	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2040 : 	
; 2041 : 			specular_colour.red = ispecular;

  0010d	8a 45 dc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  00110	88 45 fa	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 2042 : 			specular_colour.green = ispecular;

  00113	8a 45 dc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  00116	88 45 f9	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 2043 : 			specular_colour.blue = ispecular;

  00119	8a 45 dc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  0011c	88 45 f8	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN10@wrender_tr:

; 2044 : 		}
; 2045 : 	}
; 2046 : 
; 2047 : 
; 2048 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  0011f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00124	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00127	c1 e1 04	 shl	 ecx, 4
  0012a	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00130	89 4d e8	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2049 : 
; 2050 : 	destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00133	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00136	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00139	51		 push	 ecx
  0013a	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  0013f	89 45 e4	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2051 : 
; 2052 : 	for ( count = 0; count < this_face->number_of_points; count++ )

  00142	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00149	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  0014b	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0014e	83 c0 01	 add	 eax, 1
  00151	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_tr:
  00154	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00157	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0015a	39 4d f0	 cmp	 DWORD PTR _count$[ebp], ecx
  0015d	0f 8d de 00 00
	00		 jge	 $LN3@wrender_tr

; 2053 : 	{
; 2054 : 
; 2055 : 		surface_point_index = current_object_3d_point_list[count].point;

  00163	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00168	03 45 f0	 add	 eax, DWORD PTR _count$[ebp]
  0016b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0016e	89 4d f4	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 2056 : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00171	8b 45 f4	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00174	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0017a	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0017e	c1 e2 04	 shl	 edx, 4
  00181	03 55 e8	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00184	89 55 ec	 mov	 DWORD PTR _vert$[ebp], edx

; 2057 : 
; 2058 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  00187	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0018a	c1 e0 05	 shl	 eax, 5
  0018d	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00190	8b 55 ec	 mov	 edx, DWORD PTR _vert$[ebp]
  00193	8b 12		 mov	 edx, DWORD PTR [edx]
  00195	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2059 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  00198	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0019b	c1 e0 05	 shl	 eax, 5
  0019e	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001a1	8b 55 ec	 mov	 edx, DWORD PTR _vert$[ebp]
  001a4	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001a7	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2060 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  001ab	8b 45 ec	 mov	 eax, DWORD PTR _vert$[ebp]
  001ae	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  001b3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  001bb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  001c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c7	8b 4d f0	 mov	 ecx, DWORD PTR _count$[ebp]
  001ca	c1 e1 05	 shl	 ecx, 5
  001cd	8b 55 e4	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  001d0	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 2061 : 		destination_vertices[count].rhw = vert->q;

  001d6	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  001d9	c1 e0 05	 shl	 eax, 5
  001dc	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001df	8b 55 ec	 mov	 edx, DWORD PTR _vert$[ebp]
  001e2	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001e5	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2062 : 		destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  001e9	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  001ec	c1 e0 05	 shl	 eax, 5
  001ef	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001f2	8b 55 f4	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  001f5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  001fb	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  001fe	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 2063 : 		destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  00202	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  00205	c1 e0 05	 shl	 eax, 5
  00208	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0020b	8b 55 f4	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  0020e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00214	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00218	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 2064 : 		destination_vertices[count].color = colour.colour;

  0021c	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0021f	c1 e0 05	 shl	 eax, 5
  00222	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00225	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  00228	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 2065 : 		destination_vertices[count].specular = specular_colour.colour;

  0022c	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0022f	c1 e0 05	 shl	 eax, 5
  00232	8b 4d e4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00235	8b 55 f8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00238	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2066 : 	}

  0023c	e9 0a ff ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2067 : 
; 2068 : 	draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00241	8b 45 e4	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  00244	50		 push	 eax
  00245	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00248	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0024b	52		 push	 edx
  0024c	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 2069 : }

  00251	5f		 pop	 edi
  00252	5e		 pop	 esi
  00253	5b		 pop	 ebx
  00254	8b e5		 mov	 esp, ebp
  00256	5d		 pop	 ebp
  00257	c2 04 00	 ret	 4
?wrender_translucent_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_unclipped_3d_object_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_plain_white_line@@YGXXZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_colour$2 = -8						; size = 4
_line$ = -4						; size = 4
?wrender_unclipped_3d_object_plain_white_line@@YGXXZ PROC ; wrender_unclipped_3d_object_plain_white_line, COMDAT

; 1935 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1936 : 
; 1937 : 	vertex
; 1938 : 		*line;
; 1939 : 
; 1940 : 	ASSERT ( !current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	74 18		 je	 SHORT $LN2@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_plain_white_line@@YGXXZ@4JA
  00021	83 c0 05	 add	 eax, 5
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@wrender_un:

; 1941 : 
; 1942 : 	clip_3d_coord = 0;

  00034	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1943 : 
; 1944 : 	commit_deferred_state_changes ();

  0003e	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1945 : 
; 1946 : 	line = construct_3d_surface_unclipped_line ( current_object_3d_object_base->points_base );

  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00048	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?construct_3d_surface_unclipped_line@@YGPAUVERTEX@@H@Z ; construct_3d_surface_unclipped_line
  00051	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1947 : 
; 1948 : 	if ( current_object_3d_surface->smoothed )

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00059	66 8b 08	 mov	 cx, WORD PTR [eax]
  0005c	66 c1 e9 02	 shr	 cx, 2
  00060	66 83 e1 01	 and	 cx, 1
  00064	0f b7 d1	 movzx	 edx, cx
  00067	85 d2		 test	 edx, edx
  00069	74 35		 je	 SHORT $LN3@wrender_un

; 1949 : 	{
; 1950 : 
; 1951 : 		draw_wbuffered_gouraud_shaded_line ( line, 255, 255, 255 );

  0006b	51		 push	 ecx
  0006c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437f0000
  00074	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00079	51		 push	 ecx
  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437f0000
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	51		 push	 ecx
  00088	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437f0000
  00090	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00095	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_line@@YGXPAUVERTEX@@MMM@Z ; draw_wbuffered_gouraud_shaded_line

; 1952 : 	}
; 1953 : 	else

  0009e	eb 21		 jmp	 SHORT $LN4@wrender_un
$LN3@wrender_un:

; 1954 : 	{
; 1955 : 
; 1956 : 		real_colour
; 1957 : 			colour;
; 1958 : 
; 1959 : 		colour = calculate_line_colour ( current_object_3d_object_base );

  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z ; calculate_line_colour
  000ab	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  000ae	8b 4d b4	 mov	 ecx, DWORD PTR $T1[ebp]
  000b1	89 4d f8	 mov	 DWORD PTR _colour$2[ebp], ecx

; 1960 : 
; 1961 : 		draw_wbuffered_plain_line ( line, colour );

  000b4	8b 45 f8	 mov	 eax, DWORD PTR _colour$2[ebp]
  000b7	50		 push	 eax
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  000bb	51		 push	 ecx
  000bc	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_line@@YGXPAUVERTEX@@UREAL_COLOUR@@@Z ; draw_wbuffered_plain_line
$LN4@wrender_un:

; 1962 : 	}
; 1963 : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
?wrender_unclipped_3d_object_plain_white_line@@YGXXZ ENDP ; wrender_unclipped_3d_object_plain_white_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_plain_line@@YGXXZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_colour$2 = -8						; size = 4
_line$ = -4						; size = 4
?wrender_unclipped_3d_object_plain_line@@YGXXZ PROC	; wrender_unclipped_3d_object_plain_line, COMDAT

; 1899 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1900 : 
; 1901 : 	vertex
; 1902 : 		*line;
; 1903 : 
; 1904 : 	ASSERT ( !current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	74 18		 je	 SHORT $LN2@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_plain_line@@YGXXZ@4JA
  00021	83 c0 05	 add	 eax, 5
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@wrender_un:

; 1905 : 
; 1906 : 	clip_3d_coord = 0;

  00034	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1907 : 
; 1908 : 	commit_deferred_state_changes ();

  0003e	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1909 : 
; 1910 : 	line = construct_3d_surface_unclipped_line ( current_object_3d_object_base->points_base );

  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00048	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?construct_3d_surface_unclipped_line@@YGPAUVERTEX@@H@Z ; construct_3d_surface_unclipped_line
  00051	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1911 : 
; 1912 : 	if ( current_object_3d_surface->smoothed )

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00059	66 8b 08	 mov	 cx, WORD PTR [eax]
  0005c	66 c1 e9 02	 shr	 cx, 2
  00060	66 83 e1 01	 and	 cx, 1
  00064	0f b7 d1	 movzx	 edx, cx
  00067	85 d2		 test	 edx, edx
  00069	74 46		 je	 SHORT $LN3@wrender_un

; 1913 : 	{
; 1914 : 
; 1915 : 		draw_wbuffered_gouraud_shaded_line ( line, current_object_3d_surface->red, current_object_3d_surface->green, current_object_3d_surface->blue );

  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00070	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00074	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00078	51		 push	 ecx
  00079	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00084	0f b6 42 0d	 movzx	 eax, BYTE PTR [edx+13]
  00088	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0008c	51		 push	 ecx
  0008d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00098	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  0009c	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000a0	51		 push	 ecx
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_line@@YGXPAUVERTEX@@MMM@Z ; draw_wbuffered_gouraud_shaded_line

; 1916 : 	}
; 1917 : 	else

  000af	eb 21		 jmp	 SHORT $LN4@wrender_un
$LN3@wrender_un:

; 1918 : 	{
; 1919 : 
; 1920 : 		real_colour
; 1921 : 			colour;
; 1922 : 
; 1923 : 		colour = calculate_line_colour ( current_object_3d_object_base );

  000b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z ; calculate_line_colour
  000bc	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  000bf	8b 4d b4	 mov	 ecx, DWORD PTR $T1[ebp]
  000c2	89 4d f8	 mov	 DWORD PTR _colour$2[ebp], ecx

; 1924 : 
; 1925 : 		draw_wbuffered_plain_line ( line, colour );

  000c5	8b 45 f8	 mov	 eax, DWORD PTR _colour$2[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  000cc	51		 push	 ecx
  000cd	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_line@@YGXPAUVERTEX@@UREAL_COLOUR@@@Z ; draw_wbuffered_plain_line
$LN4@wrender_un:

; 1926 : 	}
; 1927 : }

  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
?wrender_unclipped_3d_object_plain_line@@YGXXZ ENDP	; wrender_unclipped_3d_object_plain_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_textured_line@@YGXXZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_colour$2 = -8						; size = 4
_line$ = -4						; size = 4
?wrender_unclipped_3d_object_textured_line@@YGXXZ PROC	; wrender_unclipped_3d_object_textured_line, COMDAT

; 1843 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1844 : 
; 1845 : 	vertex
; 1846 : 		*line;
; 1847 : 
; 1848 : 	ASSERT ( !current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	74 18		 je	 SHORT $LN2@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_textured_line@@YGXXZ@4JA
  00021	83 c0 05	 add	 eax, 5
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@wrender_un:

; 1849 : 
; 1850 : 	line = construct_3d_surface_unclipped_textured_line ( current_object_3d_object_base->points_base );

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00039	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?construct_3d_surface_unclipped_textured_line@@YGPAUVERTEX@@H@Z ; construct_3d_surface_unclipped_textured_line
  00042	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1851 : 
; 1852 : 	if ( current_object_3d_surface->smoothed )

  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0004a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0004d	66 c1 e9 02	 shr	 cx, 2
  00051	66 83 e1 01	 and	 cx, 1
  00055	0f b7 d1	 movzx	 edx, cx
  00058	85 d2		 test	 edx, edx
  0005a	74 24		 je	 SHORT $LN3@wrender_un

; 1853 : 	{
; 1854 : 
; 1855 : 		commit_deferred_state_changes ();

  0005c	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1856 : 
; 1857 : 		draw_wbuffered_gouraud_shaded_textured_line ( line, system_textures[current_object_3d_surface->texture_index] );

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00066	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0006a	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  00071	52		 push	 edx
  00072	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@@Z ; draw_wbuffered_gouraud_shaded_textured_line

; 1858 : 	}
; 1859 : 	else

  0007b	e9 af 00 00 00	 jmp	 $LN1@wrender_un
$LN3@wrender_un:

; 1860 : 	{
; 1861 : 
; 1862 : 		real_colour
; 1863 : 			colour;
; 1864 : 
; 1865 : 		if ( current_object_3d_surface->luminous )

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00085	66 8b 08	 mov	 cx, WORD PTR [eax]
  00088	66 c1 e9 07	 shr	 cx, 7
  0008c	66 83 e1 01	 and	 cx, 1
  00090	0f b7 d1	 movzx	 edx, cx
  00093	85 d2		 test	 edx, edx
  00095	74 0b		 je	 SHORT $LN5@wrender_un

; 1866 : 		{
; 1867 : 
; 1868 : 			calculate_luminous_colour ( &colour );

  00097	8d 45 f8	 lea	 eax, DWORD PTR _colour$2[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 1869 : 		}
; 1870 : 		else

  000a0	eb 14		 jmp	 SHORT $LN6@wrender_un
$LN5@wrender_un:

; 1871 : 		{
; 1872 : 
; 1873 : 			colour = calculate_line_colour ( current_object_3d_object_base );

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z ; calculate_line_colour
  000ad	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  000b0	8b 4d b4	 mov	 ecx, DWORD PTR $T1[ebp]
  000b3	89 4d f8	 mov	 DWORD PTR _colour$2[ebp], ecx
$LN6@wrender_un:

; 1874 : 		}
; 1875 : 
; 1876 : 		if ( current_object_3d_surface->additive )

  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000bb	66 8b 08	 mov	 cx, WORD PTR [eax]
  000be	66 c1 e9 05	 shr	 cx, 5
  000c2	66 83 e1 01	 and	 cx, 1
  000c6	0f b7 d1	 movzx	 edx, cx
  000c9	85 d2		 test	 edx, edx
  000cb	74 3e		 je	 SHORT $LN7@wrender_un

; 1877 : 		{
; 1878 : 
; 1879 : 			buffer_wbuffered_flat_shaded_textured_line ( line, system_textures[current_object_3d_surface->texture_index],

  000cd	6a 01		 push	 1
  000cf	8b 45 f8	 mov	 eax, DWORD PTR _colour$2[ebp]
  000d2	50		 push	 eax
  000d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  000d9	51		 push	 ecx
  000da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  000e0	52		 push	 edx
  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  000e6	50		 push	 eax
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  000ed	51		 push	 ecx
  000ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000f4	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  000f8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  000ff	51		 push	 ecx
  00100	8b 55 fc	 mov	 edx, DWORD PTR _line$[ebp]
  00103	52		 push	 edx
  00104	e8 00 00 00 00	 call	 ?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z ; buffer_wbuffered_flat_shaded_textured_line

; 1880 : 																		current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 1881 : 																		current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 1882 : 																		colour, TRUE );
; 1883 : 		}
; 1884 : 		else

  00109	eb 24		 jmp	 SHORT $LN1@wrender_un
$LN7@wrender_un:

; 1885 : 		{
; 1886 : 	
; 1887 : 			commit_deferred_state_changes ();

  0010b	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1888 : 
; 1889 : 			draw_wbuffered_flat_shaded_textured_line ( line, system_textures[current_object_3d_surface->texture_index], colour );

  00110	8b 45 f8	 mov	 eax, DWORD PTR _colour$2[ebp]
  00113	50		 push	 eax
  00114	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0011a	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0011e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[edx*4]
  00125	50		 push	 eax
  00126	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  00129	51		 push	 ecx
  0012a	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@UREAL_COLOUR@@@Z ; draw_wbuffered_flat_shaded_textured_line
$LN1@wrender_un:

; 1890 : 		}
; 1891 : 	}
; 1892 : }

  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c3		 ret	 0
?wrender_unclipped_3d_object_textured_line@@YGXXZ ENDP	; wrender_unclipped_3d_object_textured_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
tv292 = -136						; size = 4
_normal$1 = -68						; size = 4
_surface_texture_index$2 = -64				; size = 4
_surface_point_index$3 = -60				; size = 4
_normal$4 = -56						; size = 4
_surface_texture_index$5 = -52				; size = 4
_surface_point_index$6 = -48				; size = 4
_translucent_colour$7 = -44				; size = 4
_distance$8 = -40					; size = 4
_lightmap_colour$ = -36					; size = 4
_specular$ = -32					; size = 4
_specular_colour$ = -28					; size = 4
_lightmap_vertices$ = -24				; size = 4
_destination_vertices$ = -20				; size = 4
_transformed_points$ = -16				; size = 4
_vert$ = -12						; size = 4
_count$ = -8						; size = 4
_ispecular$ = -4					; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon, COMDAT

; 1671 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1672 : 
; 1673 : 	int
; 1674 : 		ispecular,
; 1675 : 		count;
; 1676 : 
; 1677 : 	object_transformed_2d_point
; 1678 : 		*vert,
; 1679 : 		*transformed_points;
; 1680 : 
; 1681 : 	LPD3DTLVERTEX
; 1682 : 		destination_vertices,
; 1683 : 		lightmap_vertices;
; 1684 : 
; 1685 : 	real_colour
; 1686 : 		specular_colour;
; 1687 : 
; 1688 : 	float
; 1689 : 		specular;
; 1690 : 
; 1691 : 	real_colour
; 1692 : 		lightmap_colour;
; 1693 : 
; 1694 : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN8@wrender_un
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 17	 add	 eax, 23			; 00000017H
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 1695 : 
; 1696 : 	//
; 1697 : 	// Figure out the lightmap colours
; 1698 : 	//
; 1699 : 
; 1700 : 	lightmap_colour.red = current_object_3d_surface->red;

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0003c	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  0003f	88 4d de	 mov	 BYTE PTR _lightmap_colour$[ebp+2], cl

; 1701 : 	lightmap_colour.green = current_object_3d_surface->green;

  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00047	8a 48 0d	 mov	 cl, BYTE PTR [eax+13]
  0004a	88 4d dd	 mov	 BYTE PTR _lightmap_colour$[ebp+1], cl

; 1702 : 	lightmap_colour.blue = current_object_3d_surface->blue;

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00052	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  00055	88 4d dc	 mov	 BYTE PTR _lightmap_colour$[ebp], cl

; 1703 : 	lightmap_colour.alpha = 255;

  00058	c6 45 df ff	 mov	 BYTE PTR _lightmap_colour$[ebp+3], 255 ; 000000ffH

; 1704 : 
; 1705 : 	calculate_lightmap_luminous_colour ( &lightmap_colour );

  0005c	8d 45 dc	 lea	 eax, DWORD PTR _lightmap_colour$[ebp]
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?calculate_lightmap_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_lightmap_luminous_colour

; 1706 : 
; 1707 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0006a	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0006d	c1 e1 04	 shl	 ecx, 4
  00070	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00076	89 4d f0	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 1708 : 
; 1709 : 	if ( current_object_3d_texture->contains_alpha )

  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0007e	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00082	66 c1 e9 07	 shr	 cx, 7
  00086	66 83 e1 01	 and	 cx, 1
  0008a	0f b7 d1	 movzx	 edx, cx
  0008d	85 d2		 test	 edx, edx
  0008f	0f 84 fd 01 00
	00		 je	 $LN9@wrender_un

; 1710 : 	{
; 1711 : 
; 1712 : 		float
; 1713 : 			distance;
; 1714 : 
; 1715 : 		real_colour
; 1716 : 			translucent_colour;
; 1717 : 
; 1718 : 		//
; 1719 : 		// Should draw a gouraud shaded TRANSLUCENT polygon
; 1720 : 		//
; 1721 : 
; 1722 : 		distance = 0;

  00095	0f 57 c0	 xorps	 xmm0, xmm0
  00098	f3 0f 11 45 d8	 movss	 DWORD PTR _distance$8[ebp], xmm0

; 1723 : 
; 1724 : 		destination_vertices = get_translucent_polygon_vertices ();

  0009d	e8 00 00 00 00	 call	 ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
  000a2	89 45 ec	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 1725 : 	
; 1726 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  000a5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  000ac	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  000ae	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000b1	83 c0 01	 add	 eax, 1
  000b4	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_un:
  000b7	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000ba	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000bd	39 4d f8	 cmp	 DWORD PTR _count$[ebp], ecx
  000c0	0f 8d 69 01 00
	00		 jge	 $LN3@wrender_un

; 1727 : 		{
; 1728 : 
; 1729 : 			int
; 1730 : 				surface_point_index,
; 1731 : 				surface_texture_index;
; 1732 : 
; 1733 : 			object_3d_transformed_point_normal
; 1734 : 				*normal;
; 1735 : 
; 1736 : 			surface_point_index = current_object_3d_point_list[count].point;

  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  000cb	03 45 f8	 add	 eax, DWORD PTR _count$[ebp]
  000ce	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000d1	89 4d d0	 mov	 DWORD PTR _surface_point_index$6[ebp], ecx

; 1737 : 			surface_texture_index = surface_point_index * 2;

  000d4	8b 45 d0	 mov	 eax, DWORD PTR _surface_point_index$6[ebp]
  000d7	d1 e0		 shl	 eax, 1
  000d9	89 45 cc	 mov	 DWORD PTR _surface_texture_index$5[ebp], eax

; 1738 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  000dc	8b 45 d0	 mov	 eax, DWORD PTR _surface_point_index$6[ebp]
  000df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  000e5	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000e9	c1 e2 04	 shl	 edx, 4
  000ec	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  000ef	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 1739 : 			normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  000f2	8b 45 d0	 mov	 eax, DWORD PTR _surface_point_index$6[ebp]
  000f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  000fb	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00104	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  00107	89 4d c8	 mov	 DWORD PTR _normal$4[ebp], ecx

; 1740 : 
; 1741 : 			destination_vertices[count].sx = vert->i;

  0010a	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0010d	c1 e0 05	 shl	 eax, 5
  00110	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00113	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00116	8b 12		 mov	 edx, DWORD PTR [edx]
  00118	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1742 : 			destination_vertices[count].sy = vert->j;

  0011b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0011e	c1 e0 05	 shl	 eax, 5
  00121	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00124	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00127	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0012a	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1743 : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0012e	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  00131	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00136	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0013e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00146	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014a	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  0014d	c1 e1 05	 shl	 ecx, 5
  00150	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00153	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1744 : 			destination_vertices[count].rhw = vert->q;

  00159	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0015c	c1 e0 05	 shl	 eax, 5
  0015f	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00162	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00165	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00168	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1745 : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_texture_index].u;

  0016c	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0016f	c1 e0 05	 shl	 eax, 5
  00172	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00175	8b 55 cc	 mov	 edx, DWORD PTR _surface_texture_index$5[ebp]
  00178	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0017e	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00181	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1746 : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_texture_index].v;

  00185	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00188	c1 e0 05	 shl	 eax, 5
  0018b	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0018e	8b 55 cc	 mov	 edx, DWORD PTR _surface_texture_index$5[ebp]
  00191	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00197	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  0019b	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1747 : 			translucent_colour.colour = normal->colour;

  0019f	8b 45 c8	 mov	 eax, DWORD PTR _normal$4[ebp]
  001a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a4	89 4d d4	 mov	 DWORD PTR _translucent_colour$7[ebp], ecx

; 1748 : 			translucent_colour.alpha = current_object_3d_dissolve_value;

  001a7	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  001ac	88 45 d7	 mov	 BYTE PTR _translucent_colour$7[ebp+3], al

; 1749 : 			destination_vertices[count].color = translucent_colour.colour;

  001af	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  001b2	c1 e0 05	 shl	 eax, 5
  001b5	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001b8	8b 55 d4	 mov	 edx, DWORD PTR _translucent_colour$7[ebp]
  001bb	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1750 : 
; 1751 : 			specular = normal->specular;

  001bf	8b 45 c8	 mov	 eax, DWORD PTR _normal$4[ebp]
  001c2	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  001c7	f3 0f 11 45 e0	 movss	 DWORD PTR _specular$[ebp], xmm0

; 1752 : 			asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  001cc	8d 45 fc	 lea	 eax, DWORD PTR _ispecular$[ebp]
  001cf	50		 push	 eax
  001d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001d6	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  001da	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001de	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _specular$[ebp]
  001e3	51		 push	 ecx
  001e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e9	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1753 : 			specular_colour.colour = d3d_fog_intensity;

  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001f3	89 45 e4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1754 : 			specular_colour.red = ispecular;

  001f6	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  001f9	88 45 e6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 1755 : 			specular_colour.green = ispecular;

  001fc	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  001ff	88 45 e5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 1756 : 			specular_colour.blue = ispecular;

  00202	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  00205	88 45 e4	 mov	 BYTE PTR _specular_colour$[ebp], al

; 1757 : 
; 1758 : 			destination_vertices[count].specular = specular_colour.colour;

  00208	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0020b	c1 e0 05	 shl	 eax, 5
  0020e	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00211	8b 55 e4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00214	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1759 : 
; 1760 : 			distance += vert->q;

  00218	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  0021b	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _distance$8[ebp]
  00220	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00225	f3 0f 11 45 d8	 movss	 DWORD PTR _distance$8[ebp], xmm0

; 1761 : 		}

  0022a	e9 7f fe ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 1762 : 
; 1763 : 		distance *= one_over_table[this_face->number_of_points];

  0022f	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00232	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00235	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  0023b	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _distance$8[ebp]
  00240	f3 0f 59 04 8a	 mulss	 xmm0, DWORD PTR [edx+ecx*4]
  00245	f3 0f 11 45 d8	 movss	 DWORD PTR _distance$8[ebp], xmm0

; 1764 : 
; 1765 : 		add_buffered_processed_polygon ( this_face->number_of_points, distance, D3DSHADE_GOURAUD, current_object_3d_texture,

  0024a	6a 00		 push	 0
  0024c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  00251	50		 push	 eax
  00252	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  00258	51		 push	 ecx
  00259	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  0025f	52		 push	 edx
  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00265	50		 push	 eax
  00266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  0026c	51		 push	 ecx
  0026d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00273	52		 push	 edx
  00274	6a 02		 push	 2
  00276	51		 push	 ecx
  00277	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _distance$8[ebp]
  0027c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00281	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00284	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00287	51		 push	 ecx
  00288	e8 00 00 00 00	 call	 ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon

; 1766 : 																	current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 1767 : 																	current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 1768 : 																	current_object_3d_specular, FALSE );
; 1769 : 	}
; 1770 : 	else

  0028d	e9 98 02 00 00	 jmp	 $LN11@wrender_un
$LN9@wrender_un:

; 1771 : 	{
; 1772 : 
; 1773 : 		//
; 1774 : 		// Should draw a gouraud shaded polygon - with a lightmap
; 1775 : 		//
; 1776 : 
; 1777 : 		commit_deferred_state_changes ();

  00292	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1778 : 
; 1779 : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00297	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0029a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0029d	51		 push	 ecx
  0029e	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  002a3	89 45 ec	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 1780 : 	
; 1781 : 		lightmap_vertices = get_temporary_translucent_polygon_vertices ();

  002a6	e8 00 00 00 00	 call	 ?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_temporary_translucent_polygon_vertices
  002ab	89 45 e8	 mov	 DWORD PTR _lightmap_vertices$[ebp], eax

; 1782 : 	
; 1783 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  002ae	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  002b5	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  002b7	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  002ba	83 c0 01	 add	 eax, 1
  002bd	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@wrender_un:
  002c0	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  002c3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002c6	39 4d f8	 cmp	 DWORD PTR _count$[ebp], ecx
  002c9	0f 8d 13 02 00
	00		 jge	 $LN6@wrender_un

; 1784 : 		{
; 1785 : 
; 1786 : 			int
; 1787 : 				surface_point_index,
; 1788 : 				surface_texture_index;
; 1789 : 
; 1790 : 			object_3d_transformed_point_normal
; 1791 : 				*normal;
; 1792 : 
; 1793 : 			surface_point_index = current_object_3d_point_list[count].point;

  002cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  002d4	03 45 f8	 add	 eax, DWORD PTR _count$[ebp]
  002d7	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002da	89 4d c4	 mov	 DWORD PTR _surface_point_index$3[ebp], ecx

; 1794 : 			surface_texture_index = surface_point_index * 2;

  002dd	8b 45 c4	 mov	 eax, DWORD PTR _surface_point_index$3[ebp]
  002e0	d1 e0		 shl	 eax, 1
  002e2	89 45 c0	 mov	 DWORD PTR _surface_texture_index$2[ebp], eax

; 1795 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  002e5	8b 45 c4	 mov	 eax, DWORD PTR _surface_point_index$3[ebp]
  002e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  002ee	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  002f2	c1 e2 04	 shl	 edx, 4
  002f5	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  002f8	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 1796 : 			normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  002fb	8b 45 c4	 mov	 eax, DWORD PTR _surface_point_index$3[ebp]
  002fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00304	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00308	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0030d	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  00310	89 4d bc	 mov	 DWORD PTR _normal$1[ebp], ecx

; 1797 : 
; 1798 : 			destination_vertices[count].sx = lightmap_vertices[count].sx = vert->i;

  00313	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00316	c1 e0 05	 shl	 eax, 5
  00319	8b 4d e8	 mov	 ecx, DWORD PTR _lightmap_vertices$[ebp]
  0031c	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  0031f	8b 12		 mov	 edx, DWORD PTR [edx]
  00321	89 14 01	 mov	 DWORD PTR [ecx+eax], edx
  00324	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00327	c1 e0 05	 shl	 eax, 5
  0032a	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  0032d	c1 e1 05	 shl	 ecx, 5
  00330	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00333	8b 75 e8	 mov	 esi, DWORD PTR _lightmap_vertices$[ebp]
  00336	8b 04 06	 mov	 eax, DWORD PTR [esi+eax]
  00339	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1799 : 			destination_vertices[count].sy = lightmap_vertices[count].sy = vert->j;

  0033c	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0033f	c1 e0 05	 shl	 eax, 5
  00342	8b 4d e8	 mov	 ecx, DWORD PTR _lightmap_vertices$[ebp]
  00345	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00348	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0034b	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx
  0034f	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00352	c1 e0 05	 shl	 eax, 5
  00355	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  00358	c1 e1 05	 shl	 ecx, 5
  0035b	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  0035e	8b 75 e8	 mov	 esi, DWORD PTR _lightmap_vertices$[ebp]
  00361	8b 44 06 04	 mov	 eax, DWORD PTR [esi+eax+4]
  00365	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 1800 : 			destination_vertices[count].sz = lightmap_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00369	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  0036c	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00371	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00379	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00381	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00385	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR tv292[ebp], xmm0
  0038d	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  00390	c1 e1 05	 shl	 ecx, 5
  00393	8b 55 e8	 mov	 edx, DWORD PTR _lightmap_vertices$[ebp]
  00396	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv292[ebp]
  0039e	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0
  003a4	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  003a7	c1 e0 05	 shl	 eax, 5
  003aa	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  003ad	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv292[ebp]
  003b5	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 1801 : 			destination_vertices[count].rhw = lightmap_vertices[count].rhw = vert->q;

  003bb	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  003be	c1 e0 05	 shl	 eax, 5
  003c1	8b 4d e8	 mov	 ecx, DWORD PTR _lightmap_vertices$[ebp]
  003c4	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  003c7	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  003ca	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx
  003ce	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  003d1	c1 e0 05	 shl	 eax, 5
  003d4	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  003d7	c1 e1 05	 shl	 ecx, 5
  003da	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  003dd	8b 75 e8	 mov	 esi, DWORD PTR _lightmap_vertices$[ebp]
  003e0	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  003e4	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 1802 : 
; 1803 : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_texture_index].u;

  003e8	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  003eb	c1 e0 05	 shl	 eax, 5
  003ee	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  003f1	8b 55 c0	 mov	 edx, DWORD PTR _surface_texture_index$2[ebp]
  003f4	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  003fa	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  003fd	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1804 : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_texture_index].v;

  00401	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00404	c1 e0 05	 shl	 eax, 5
  00407	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0040a	8b 55 c0	 mov	 edx, DWORD PTR _surface_texture_index$2[ebp]
  0040d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00413	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00417	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1805 : 
; 1806 : 			lightmap_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_texture_index+1].u;

  0041b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0041e	c1 e0 05	 shl	 eax, 5
  00421	8b 4d e8	 mov	 ecx, DWORD PTR _lightmap_vertices$[ebp]
  00424	8b 55 c0	 mov	 edx, DWORD PTR _surface_texture_index$2[ebp]
  00427	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0042d	8b 54 d6 08	 mov	 edx, DWORD PTR [esi+edx*8+8]
  00431	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1807 : 			lightmap_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_texture_index+1].v;

  00435	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00438	c1 e0 05	 shl	 eax, 5
  0043b	8b 4d e8	 mov	 ecx, DWORD PTR _lightmap_vertices$[ebp]
  0043e	8b 55 c0	 mov	 edx, DWORD PTR _surface_texture_index$2[ebp]
  00441	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00447	8b 54 d6 0c	 mov	 edx, DWORD PTR [esi+edx*8+12]
  0044b	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1808 : 
; 1809 : 			destination_vertices[count].color = normal->colour;

  0044f	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00452	c1 e0 05	 shl	 eax, 5
  00455	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00458	8b 55 bc	 mov	 edx, DWORD PTR _normal$1[ebp]
  0045b	8b 12		 mov	 edx, DWORD PTR [edx]
  0045d	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1810 : 			lightmap_vertices[count].color = lightmap_colour.colour;

  00461	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00464	c1 e0 05	 shl	 eax, 5
  00467	8b 4d e8	 mov	 ecx, DWORD PTR _lightmap_vertices$[ebp]
  0046a	8b 55 dc	 mov	 edx, DWORD PTR _lightmap_colour$[ebp]
  0046d	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1811 : 
; 1812 : 			specular = normal->specular;

  00471	8b 45 bc	 mov	 eax, DWORD PTR _normal$1[ebp]
  00474	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00479	f3 0f 11 45 e0	 movss	 DWORD PTR _specular$[ebp], xmm0

; 1813 : 			asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  0047e	8d 45 fc	 lea	 eax, DWORD PTR _ispecular$[ebp]
  00481	50		 push	 eax
  00482	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00488	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  0048c	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00490	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _specular$[ebp]
  00495	51		 push	 ecx
  00496	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049b	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1814 : 			specular_colour.colour = d3d_fog_intensity;

  004a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  004a5	89 45 e4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1815 : 			specular_colour.red = ispecular;

  004a8	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  004ab	88 45 e6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 1816 : 			specular_colour.green = ispecular;

  004ae	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  004b1	88 45 e5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 1817 : 			specular_colour.blue = ispecular;

  004b4	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  004b7	88 45 e4	 mov	 BYTE PTR _specular_colour$[ebp], al

; 1818 : 
; 1819 : 			destination_vertices[count].specular = specular_colour.colour;

  004ba	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  004bd	c1 e0 05	 shl	 eax, 5
  004c0	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  004c3	8b 55 e4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  004c6	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1820 : 			lightmap_vertices[count].specular = d3d_fog_intensity;

  004ca	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  004cd	c1 e0 05	 shl	 eax, 5
  004d0	8b 4d e8	 mov	 ecx, DWORD PTR _lightmap_vertices$[ebp]
  004d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  004d9	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1821 : 		}

  004dd	e9 d5 fd ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 1822 : 	
; 1823 : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  004e2	8b 45 ec	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  004e5	50		 push	 eax
  004e6	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  004e9	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  004ec	52		 push	 edx
  004ed	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1824 : 
; 1825 : 		if ( current_object_3d_light_maps_enabled )

  004f2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, 0 ; current_object_3d_light_maps_enabled
  004f9	74 2f		 je	 SHORT $LN11@wrender_un

; 1826 : 		{
; 1827 : 
; 1828 : 			add_temporary_buffered_processed_polygon ( this_face->number_of_points, current_object_3d_luminosity_texture,

  004fb	6a 01		 push	 1
  004fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_v_address@@3HA ; current_object_3d_luminosity_texture_v_address
  00502	50		 push	 eax
  00503	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture_u_address@@3HA ; current_object_3d_luminosity_texture_u_address
  00509	51		 push	 ecx
  0050a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_luminosity_texture_mipmap@@3HA ; current_object_3d_luminosity_texture_mipmap
  00510	52		 push	 edx
  00511	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA ; current_object_3d_luminosity_texture_filter
  00516	50		 push	 eax
  00517	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A ; current_object_3d_luminosity_texture
  0051d	51		 push	 ecx
  0051e	8b 55 08	 mov	 edx, DWORD PTR _this_face$[ebp]
  00521	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  00524	50		 push	 eax
  00525	e8 00 00 00 00	 call	 ?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z ; add_temporary_buffered_processed_polygon
$LN11@wrender_un:

; 1829 : 																			current_object_3d_luminosity_texture_filter,
; 1830 : 																			current_object_3d_luminosity_texture_mipmap,
; 1831 : 																			current_object_3d_luminosity_texture_u_address,
; 1832 : 																			current_object_3d_luminosity_texture_v_address,
; 1833 : 																			TRUE );
; 1834 : 		}
; 1835 : 	}
; 1836 : }

  0052a	5f		 pop	 edi
  0052b	5e		 pop	 esi
  0052c	5b		 pop	 ebx
  0052d	8b e5		 mov	 esp, ebp
  0052f	5d		 pop	 ebp
  00530	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_gouraud_textured_lightmap_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
tv351 = -148						; size = 4
tv220 = -148						; size = 4
_surface_texture_index$1 = -80				; size = 4
_surface_point_index$2 = -76				; size = 4
_lightmap_vertices$3 = -72				; size = 4
_destination_vertices$4 = -68				; size = 4
_transformed_points$5 = -64				; size = 4
_vert$6 = -60						; size = 4
_count$7 = -56						; size = 4
_surface_texture_index$8 = -52				; size = 4
_surface_point_index$9 = -48				; size = 4
_distance$10 = -44					; size = 4
_lightmap_vertices$11 = -40				; size = 4
_destination_vertices$12 = -36				; size = 4
_transformed_points$13 = -32				; size = 4
_vert$14 = -28						; size = 4
_count$15 = -24						; size = 4
_ispecular$16 = -20					; size = 4
_specular$17 = -16					; size = 4
_specular_colour$ = -12					; size = 4
_lightmap_colour$ = -8					; size = 4
_colour$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_textured_lightmap_polygon, COMDAT

; 1462 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1463 : 
; 1464 : 	real_colour
; 1465 : 		colour,
; 1466 : 		lightmap_colour,
; 1467 : 		specular_colour;
; 1468 : 
; 1469 : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN8@wrender_un
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 07	 add	 eax, 7
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 1470 : 
; 1471 : 	specular_colour.colour = d3d_fog_intensity;

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0003c	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1472 : 
; 1473 : 	if ( current_object_3d_surface->luminous )

  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00044	66 8b 08	 mov	 cx, WORD PTR [eax]
  00047	66 c1 e9 07	 shr	 cx, 7
  0004b	66 83 e1 01	 and	 cx, 1
  0004f	0f b7 d1	 movzx	 edx, cx
  00052	85 d2		 test	 edx, edx
  00054	74 2b		 je	 SHORT $LN9@wrender_un

; 1474 : 	{
; 1475 : 	
; 1476 : 		colour.red = current_object_3d_surface->red;

  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0005b	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  0005e	88 4d fe	 mov	 BYTE PTR _colour$[ebp+2], cl

; 1477 : 		colour.green = current_object_3d_surface->green;

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00066	8a 48 0d	 mov	 cl, BYTE PTR [eax+13]
  00069	88 4d fd	 mov	 BYTE PTR _colour$[ebp+1], cl

; 1478 : 		colour.blue = current_object_3d_surface->blue;

  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00071	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  00074	88 4d fc	 mov	 BYTE PTR _colour$[ebp], cl

; 1479 : 		colour.alpha = current_object_3d_dissolve_value;

  00077	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  0007c	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 1480 : 	}
; 1481 : 	else

  0007f	eb 71		 jmp	 SHORT $LN10@wrender_un
$LN9@wrender_un:

; 1482 : 	{
; 1483 : 
; 1484 : 		float
; 1485 : 			specular;
; 1486 : 
; 1487 : 		int
; 1488 : 			ispecular;
; 1489 : 
; 1490 : 		//
; 1491 : 		// Look up the colour of the face normal
; 1492 : 		//
; 1493 : 
; 1494 : 		colour.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00086	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00089	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0008f	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  00092	89 45 fc	 mov	 DWORD PTR _colour$[ebp], eax

; 1495 : 		colour.alpha = current_object_3d_dissolve_value;

  00095	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  0009a	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 1496 : 
; 1497 : 		//
; 1498 : 		// Construct the specular colour
; 1499 : 		//
; 1500 : 	
; 1501 : 		specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  0009d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000a2	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000ab	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000b1	f3 0f 11 45 f0	 movss	 DWORD PTR _specular$17[ebp], xmm0

; 1502 : 	
; 1503 : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  000b6	8d 45 ec	 lea	 eax, DWORD PTR _ispecular$16[ebp]
  000b9	50		 push	 eax
  000ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000c0	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  000c4	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000c8	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _specular$17[ebp]
  000cd	51		 push	 ecx
  000ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1504 : 	
; 1505 : 		specular_colour.colour = d3d_fog_intensity;

  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000dd	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1506 : 		specular_colour.red = ispecular;

  000e0	8a 45 ec	 mov	 al, BYTE PTR _ispecular$16[ebp]
  000e3	88 45 f6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 1507 : 		specular_colour.green = ispecular;

  000e6	8a 45 ec	 mov	 al, BYTE PTR _ispecular$16[ebp]
  000e9	88 45 f5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 1508 : 		specular_colour.blue = ispecular;

  000ec	8a 45 ec	 mov	 al, BYTE PTR _ispecular$16[ebp]
  000ef	88 45 f4	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN10@wrender_un:

; 1509 : 	}
; 1510 : 
; 1511 : 	//
; 1512 : 	// Now figure out the lightmap colours
; 1513 : 	//
; 1514 : 
; 1515 : 	lightmap_colour.red = current_object_3d_surface->red;

  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000f7	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  000fa	88 4d fa	 mov	 BYTE PTR _lightmap_colour$[ebp+2], cl

; 1516 : 	lightmap_colour.green = current_object_3d_surface->green;

  000fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00102	8a 48 0d	 mov	 cl, BYTE PTR [eax+13]
  00105	88 4d f9	 mov	 BYTE PTR _lightmap_colour$[ebp+1], cl

; 1517 : 	lightmap_colour.blue = current_object_3d_surface->blue;

  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0010d	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  00110	88 4d f8	 mov	 BYTE PTR _lightmap_colour$[ebp], cl

; 1518 : 	lightmap_colour.alpha = 255;

  00113	c6 45 fb ff	 mov	 BYTE PTR _lightmap_colour$[ebp+3], 255 ; 000000ffH

; 1519 : 
; 1520 : 	calculate_lightmap_luminous_colour ( &lightmap_colour );

  00117	8d 45 f8	 lea	 eax, DWORD PTR _lightmap_colour$[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?calculate_lightmap_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_lightmap_luminous_colour

; 1521 : 
; 1522 : 	if ( current_object_3d_texture->contains_alpha )

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00125	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00129	66 c1 e9 07	 shr	 cx, 7
  0012d	66 83 e1 01	 and	 cx, 1
  00131	0f b7 d1	 movzx	 edx, cx
  00134	85 d2		 test	 edx, edx
  00136	0f 84 aa 02 00
	00		 je	 $LN11@wrender_un

; 1523 : 	{
; 1524 : 
; 1525 : 		int
; 1526 : 			count;
; 1527 : 
; 1528 : 		object_transformed_2d_point
; 1529 : 			*vert,
; 1530 : 			*transformed_points;
; 1531 : 	
; 1532 : 		LPD3DTLVERTEX
; 1533 : 			destination_vertices,
; 1534 : 			lightmap_vertices;
; 1535 : 	
; 1536 : 		float
; 1537 : 			distance;
; 1538 : 
; 1539 : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00141	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00144	c1 e1 04	 shl	 ecx, 4
  00147	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  0014d	89 4d e0	 mov	 DWORD PTR _transformed_points$13[ebp], ecx

; 1540 : 	
; 1541 : 		destination_vertices = get_translucent_polygon_vertices ();

  00150	e8 00 00 00 00	 call	 ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
  00155	89 45 dc	 mov	 DWORD PTR _destination_vertices$12[ebp], eax

; 1542 : 	
; 1543 : 		lightmap_vertices = get_temporary_translucent_polygon_vertices ();

  00158	e8 00 00 00 00	 call	 ?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_temporary_translucent_polygon_vertices
  0015d	89 45 d8	 mov	 DWORD PTR _lightmap_vertices$11[ebp], eax

; 1544 : 	
; 1545 : 		distance = 0;

  00160	0f 57 c0	 xorps	 xmm0, xmm0
  00163	f3 0f 11 45 d4	 movss	 DWORD PTR _distance$10[ebp], xmm0

; 1546 : 
; 1547 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  00168	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _count$15[ebp], 0
  0016f	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  00171	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  00174	83 c0 01	 add	 eax, 1
  00177	89 45 e8	 mov	 DWORD PTR _count$15[ebp], eax
$LN4@wrender_un:
  0017a	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0017d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00180	39 4d e8	 cmp	 DWORD PTR _count$15[ebp], ecx
  00183	0f 8d c2 01 00
	00		 jge	 $LN3@wrender_un

; 1548 : 		{
; 1549 : 
; 1550 : 			int
; 1551 : 				surface_point_index,
; 1552 : 				surface_texture_index;
; 1553 : 
; 1554 : 			surface_point_index = current_object_3d_point_list[count].point;

  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0018e	03 45 e8	 add	 eax, DWORD PTR _count$15[ebp]
  00191	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00194	89 4d d0	 mov	 DWORD PTR _surface_point_index$9[ebp], ecx

; 1555 : 			surface_texture_index = surface_point_index * 2;

  00197	8b 45 d0	 mov	 eax, DWORD PTR _surface_point_index$9[ebp]
  0019a	d1 e0		 shl	 eax, 1
  0019c	89 45 cc	 mov	 DWORD PTR _surface_texture_index$8[ebp], eax

; 1556 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  0019f	8b 45 d0	 mov	 eax, DWORD PTR _surface_point_index$9[ebp]
  001a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  001a8	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  001ac	c1 e2 04	 shl	 edx, 4
  001af	03 55 e0	 add	 edx, DWORD PTR _transformed_points$13[ebp]
  001b2	89 55 e4	 mov	 DWORD PTR _vert$14[ebp], edx

; 1557 : 		
; 1558 : 			destination_vertices[count].sx = lightmap_vertices[count].sx = vert->i;

  001b5	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  001b8	c1 e0 05	 shl	 eax, 5
  001bb	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$11[ebp]
  001be	8b 55 e4	 mov	 edx, DWORD PTR _vert$14[ebp]
  001c1	8b 12		 mov	 edx, DWORD PTR [edx]
  001c3	89 14 01	 mov	 DWORD PTR [ecx+eax], edx
  001c6	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  001c9	c1 e0 05	 shl	 eax, 5
  001cc	8b 4d e8	 mov	 ecx, DWORD PTR _count$15[ebp]
  001cf	c1 e1 05	 shl	 ecx, 5
  001d2	8b 55 dc	 mov	 edx, DWORD PTR _destination_vertices$12[ebp]
  001d5	8b 75 d8	 mov	 esi, DWORD PTR _lightmap_vertices$11[ebp]
  001d8	8b 04 06	 mov	 eax, DWORD PTR [esi+eax]
  001db	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1559 : 			destination_vertices[count].sy = lightmap_vertices[count].sy = vert->j;

  001de	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  001e1	c1 e0 05	 shl	 eax, 5
  001e4	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$11[ebp]
  001e7	8b 55 e4	 mov	 edx, DWORD PTR _vert$14[ebp]
  001ea	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001ed	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx
  001f1	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  001f4	c1 e0 05	 shl	 eax, 5
  001f7	8b 4d e8	 mov	 ecx, DWORD PTR _count$15[ebp]
  001fa	c1 e1 05	 shl	 ecx, 5
  001fd	8b 55 dc	 mov	 edx, DWORD PTR _destination_vertices$12[ebp]
  00200	8b 75 d8	 mov	 esi, DWORD PTR _lightmap_vertices$11[ebp]
  00203	8b 44 06 04	 mov	 eax, DWORD PTR [esi+eax+4]
  00207	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 1560 : 			destination_vertices[count].sz = lightmap_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0020b	8b 45 e4	 mov	 eax, DWORD PTR _vert$14[ebp]
  0020e	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00213	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0021b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00223	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00227	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR tv220[ebp], xmm0
  0022f	8b 4d e8	 mov	 ecx, DWORD PTR _count$15[ebp]
  00232	c1 e1 05	 shl	 ecx, 5
  00235	8b 55 d8	 mov	 edx, DWORD PTR _lightmap_vertices$11[ebp]
  00238	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv220[ebp]
  00240	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0
  00246	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  00249	c1 e0 05	 shl	 eax, 5
  0024c	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$12[ebp]
  0024f	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv220[ebp]
  00257	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 1561 : 			destination_vertices[count].rhw = lightmap_vertices[count].rhw = vert->q;

  0025d	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  00260	c1 e0 05	 shl	 eax, 5
  00263	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$11[ebp]
  00266	8b 55 e4	 mov	 edx, DWORD PTR _vert$14[ebp]
  00269	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0026c	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx
  00270	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  00273	c1 e0 05	 shl	 eax, 5
  00276	8b 4d e8	 mov	 ecx, DWORD PTR _count$15[ebp]
  00279	c1 e1 05	 shl	 ecx, 5
  0027c	8b 55 dc	 mov	 edx, DWORD PTR _destination_vertices$12[ebp]
  0027f	8b 75 d8	 mov	 esi, DWORD PTR _lightmap_vertices$11[ebp]
  00282	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  00286	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 1562 : 
; 1563 : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_texture_index].u;

  0028a	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  0028d	c1 e0 05	 shl	 eax, 5
  00290	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$12[ebp]
  00293	8b 55 cc	 mov	 edx, DWORD PTR _surface_texture_index$8[ebp]
  00296	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0029c	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  0029f	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1564 : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_texture_index].v;

  002a3	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  002a6	c1 e0 05	 shl	 eax, 5
  002a9	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$12[ebp]
  002ac	8b 55 cc	 mov	 edx, DWORD PTR _surface_texture_index$8[ebp]
  002af	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  002b5	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  002b9	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1565 : 
; 1566 : 			lightmap_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_texture_index+1].u;

  002bd	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  002c0	c1 e0 05	 shl	 eax, 5
  002c3	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$11[ebp]
  002c6	8b 55 cc	 mov	 edx, DWORD PTR _surface_texture_index$8[ebp]
  002c9	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  002cf	8b 54 d6 08	 mov	 edx, DWORD PTR [esi+edx*8+8]
  002d3	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1567 : 			lightmap_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_texture_index+1].v;

  002d7	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  002da	c1 e0 05	 shl	 eax, 5
  002dd	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$11[ebp]
  002e0	8b 55 cc	 mov	 edx, DWORD PTR _surface_texture_index$8[ebp]
  002e3	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  002e9	8b 54 d6 0c	 mov	 edx, DWORD PTR [esi+edx*8+12]
  002ed	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1568 : 
; 1569 : 			destination_vertices[count].color = colour.colour;

  002f1	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  002f4	c1 e0 05	 shl	 eax, 5
  002f7	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$12[ebp]
  002fa	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  002fd	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1570 : 			destination_vertices[count].specular = specular_colour.colour;

  00301	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  00304	c1 e0 05	 shl	 eax, 5
  00307	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$12[ebp]
  0030a	8b 55 f4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  0030d	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1571 : 			lightmap_vertices[count].color = lightmap_colour.colour;

  00311	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  00314	c1 e0 05	 shl	 eax, 5
  00317	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$11[ebp]
  0031a	8b 55 f8	 mov	 edx, DWORD PTR _lightmap_colour$[ebp]
  0031d	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1572 : 			lightmap_vertices[count].specular = d3d_fog_intensity;

  00321	8b 45 e8	 mov	 eax, DWORD PTR _count$15[ebp]
  00324	c1 e0 05	 shl	 eax, 5
  00327	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$11[ebp]
  0032a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00330	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1573 : 
; 1574 : 			distance += vert->q;

  00334	8b 45 e4	 mov	 eax, DWORD PTR _vert$14[ebp]
  00337	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _distance$10[ebp]
  0033c	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00341	f3 0f 11 45 d4	 movss	 DWORD PTR _distance$10[ebp], xmm0

; 1575 : 		}

  00346	e9 26 fe ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 1576 : 	
; 1577 : 		distance *= one_over_table[this_face->number_of_points];

  0034b	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0034e	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00351	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  00357	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _distance$10[ebp]
  0035c	f3 0f 59 04 8a	 mulss	 xmm0, DWORD PTR [edx+ecx*4]
  00361	f3 0f 11 45 d4	 movss	 DWORD PTR _distance$10[ebp], xmm0

; 1578 : 
; 1579 : 		add_buffered_processed_polygon ( this_face->number_of_points, distance, D3DSHADE_FLAT, current_object_3d_texture,

  00366	6a 00		 push	 0
  00368	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  0036d	50		 push	 eax
  0036e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  00374	51		 push	 ecx
  00375	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  0037b	52		 push	 edx
  0037c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00381	50		 push	 eax
  00382	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00388	51		 push	 ecx
  00389	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0038f	52		 push	 edx
  00390	6a 01		 push	 1
  00392	51		 push	 ecx
  00393	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _distance$10[ebp]
  00398	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039d	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  003a0	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003a3	51		 push	 ecx
  003a4	e8 00 00 00 00	 call	 ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon

; 1580 : 																	current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 1581 : 																	current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 1582 : 																	current_object_3d_specular, FALSE );
; 1583 : 
; 1584 : 		if ( current_object_3d_light_maps_enabled )

  003a9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, 0 ; current_object_3d_light_maps_enabled
  003b0	74 2f		 je	 SHORT $LN13@wrender_un

; 1585 : 		{
; 1586 : 
; 1587 : 			add_temporary_buffered_processed_polygon ( this_face->number_of_points, current_object_3d_luminosity_texture,

  003b2	6a 01		 push	 1
  003b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_v_address@@3HA ; current_object_3d_luminosity_texture_v_address
  003b9	50		 push	 eax
  003ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture_u_address@@3HA ; current_object_3d_luminosity_texture_u_address
  003c0	51		 push	 ecx
  003c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_luminosity_texture_mipmap@@3HA ; current_object_3d_luminosity_texture_mipmap
  003c7	52		 push	 edx
  003c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA ; current_object_3d_luminosity_texture_filter
  003cd	50		 push	 eax
  003ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A ; current_object_3d_luminosity_texture
  003d4	51		 push	 ecx
  003d5	8b 55 08	 mov	 edx, DWORD PTR _this_face$[ebp]
  003d8	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  003db	50		 push	 eax
  003dc	e8 00 00 00 00	 call	 ?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z ; add_temporary_buffered_processed_polygon
$LN13@wrender_un:

; 1588 : 																			current_object_3d_luminosity_texture_filter,
; 1589 : 																			current_object_3d_luminosity_texture_mipmap,
; 1590 : 																			current_object_3d_luminosity_texture_u_address,
; 1591 : 																			current_object_3d_luminosity_texture_v_address,
; 1592 : 																			TRUE );
; 1593 : 		}
; 1594 : 	}
; 1595 : 	else

  003e1	e9 49 02 00 00	 jmp	 $LN14@wrender_un
$LN11@wrender_un:

; 1596 : 	{
; 1597 : 
; 1598 : 		int
; 1599 : 			count;
; 1600 : 	
; 1601 : 		object_transformed_2d_point
; 1602 : 			*vert,
; 1603 : 			*transformed_points;
; 1604 : 	
; 1605 : 		LPD3DTLVERTEX
; 1606 : 			destination_vertices,
; 1607 : 			lightmap_vertices;
; 1608 : 	
; 1609 : 		//
; 1610 : 		// Should draw a flat shaded polygon - with a lightmap
; 1611 : 		//
; 1612 : 
; 1613 : 		commit_deferred_state_changes ();

  003e6	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1614 : 
; 1615 : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  003eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  003f0	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  003f3	c1 e1 04	 shl	 ecx, 4
  003f6	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  003fc	89 4d c0	 mov	 DWORD PTR _transformed_points$5[ebp], ecx

; 1616 : 	
; 1617 : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  003ff	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00402	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00405	51		 push	 ecx
  00406	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  0040b	89 45 bc	 mov	 DWORD PTR _destination_vertices$4[ebp], eax

; 1618 : 
; 1619 : 		lightmap_vertices = get_temporary_translucent_polygon_vertices ();

  0040e	e8 00 00 00 00	 call	 ?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_temporary_translucent_polygon_vertices
  00413	89 45 b8	 mov	 DWORD PTR _lightmap_vertices$3[ebp], eax

; 1620 : 	
; 1621 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  00416	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _count$7[ebp], 0
  0041d	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  0041f	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  00422	83 c0 01	 add	 eax, 1
  00425	89 45 c8	 mov	 DWORD PTR _count$7[ebp], eax
$LN7@wrender_un:
  00428	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0042b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0042e	39 4d c8	 cmp	 DWORD PTR _count$7[ebp], ecx
  00431	0f 8d b0 01 00
	00		 jge	 $LN6@wrender_un

; 1622 : 		{
; 1623 : 
; 1624 : 			int
; 1625 : 				surface_point_index,
; 1626 : 				surface_texture_index;
; 1627 : 
; 1628 : 			surface_point_index = current_object_3d_point_list[count].point;

  00437	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0043c	03 45 c8	 add	 eax, DWORD PTR _count$7[ebp]
  0043f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00442	89 4d b4	 mov	 DWORD PTR _surface_point_index$2[ebp], ecx

; 1629 : 			surface_texture_index = surface_point_index * 2;

  00445	8b 45 b4	 mov	 eax, DWORD PTR _surface_point_index$2[ebp]
  00448	d1 e0		 shl	 eax, 1
  0044a	89 45 b0	 mov	 DWORD PTR _surface_texture_index$1[ebp], eax

; 1630 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  0044d	8b 45 b4	 mov	 eax, DWORD PTR _surface_point_index$2[ebp]
  00450	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00456	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0045a	c1 e2 04	 shl	 edx, 4
  0045d	03 55 c0	 add	 edx, DWORD PTR _transformed_points$5[ebp]
  00460	89 55 c4	 mov	 DWORD PTR _vert$6[ebp], edx

; 1631 : 		
; 1632 : 			destination_vertices[count].sx = lightmap_vertices[count].sx = vert->i;

  00463	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  00466	c1 e0 05	 shl	 eax, 5
  00469	8b 4d b8	 mov	 ecx, DWORD PTR _lightmap_vertices$3[ebp]
  0046c	8b 55 c4	 mov	 edx, DWORD PTR _vert$6[ebp]
  0046f	8b 12		 mov	 edx, DWORD PTR [edx]
  00471	89 14 01	 mov	 DWORD PTR [ecx+eax], edx
  00474	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  00477	c1 e0 05	 shl	 eax, 5
  0047a	8b 4d c8	 mov	 ecx, DWORD PTR _count$7[ebp]
  0047d	c1 e1 05	 shl	 ecx, 5
  00480	8b 55 bc	 mov	 edx, DWORD PTR _destination_vertices$4[ebp]
  00483	8b 75 b8	 mov	 esi, DWORD PTR _lightmap_vertices$3[ebp]
  00486	8b 04 06	 mov	 eax, DWORD PTR [esi+eax]
  00489	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1633 : 			destination_vertices[count].sy = lightmap_vertices[count].sy = vert->j;

  0048c	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  0048f	c1 e0 05	 shl	 eax, 5
  00492	8b 4d b8	 mov	 ecx, DWORD PTR _lightmap_vertices$3[ebp]
  00495	8b 55 c4	 mov	 edx, DWORD PTR _vert$6[ebp]
  00498	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0049b	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx
  0049f	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  004a2	c1 e0 05	 shl	 eax, 5
  004a5	8b 4d c8	 mov	 ecx, DWORD PTR _count$7[ebp]
  004a8	c1 e1 05	 shl	 ecx, 5
  004ab	8b 55 bc	 mov	 edx, DWORD PTR _destination_vertices$4[ebp]
  004ae	8b 75 b8	 mov	 esi, DWORD PTR _lightmap_vertices$3[ebp]
  004b1	8b 44 06 04	 mov	 eax, DWORD PTR [esi+eax+4]
  004b5	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 1634 : 			destination_vertices[count].sz = lightmap_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  004b9	8b 45 c4	 mov	 eax, DWORD PTR _vert$6[ebp]
  004bc	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  004c1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  004c9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  004d1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d5	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR tv351[ebp], xmm0
  004dd	8b 4d c8	 mov	 ecx, DWORD PTR _count$7[ebp]
  004e0	c1 e1 05	 shl	 ecx, 5
  004e3	8b 55 b8	 mov	 edx, DWORD PTR _lightmap_vertices$3[ebp]
  004e6	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv351[ebp]
  004ee	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0
  004f4	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  004f7	c1 e0 05	 shl	 eax, 5
  004fa	8b 4d bc	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  004fd	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv351[ebp]
  00505	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 1635 : 			destination_vertices[count].rhw = lightmap_vertices[count].rhw = vert->q;

  0050b	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  0050e	c1 e0 05	 shl	 eax, 5
  00511	8b 4d b8	 mov	 ecx, DWORD PTR _lightmap_vertices$3[ebp]
  00514	8b 55 c4	 mov	 edx, DWORD PTR _vert$6[ebp]
  00517	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0051a	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx
  0051e	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  00521	c1 e0 05	 shl	 eax, 5
  00524	8b 4d c8	 mov	 ecx, DWORD PTR _count$7[ebp]
  00527	c1 e1 05	 shl	 ecx, 5
  0052a	8b 55 bc	 mov	 edx, DWORD PTR _destination_vertices$4[ebp]
  0052d	8b 75 b8	 mov	 esi, DWORD PTR _lightmap_vertices$3[ebp]
  00530	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  00534	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 1636 : 
; 1637 : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_texture_index].u;

  00538	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  0053b	c1 e0 05	 shl	 eax, 5
  0053e	8b 4d bc	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00541	8b 55 b0	 mov	 edx, DWORD PTR _surface_texture_index$1[ebp]
  00544	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0054a	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  0054d	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1638 : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_texture_index].v;

  00551	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  00554	c1 e0 05	 shl	 eax, 5
  00557	8b 4d bc	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  0055a	8b 55 b0	 mov	 edx, DWORD PTR _surface_texture_index$1[ebp]
  0055d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00563	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00567	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1639 : 
; 1640 : 			lightmap_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_texture_index+1].u;

  0056b	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  0056e	c1 e0 05	 shl	 eax, 5
  00571	8b 4d b8	 mov	 ecx, DWORD PTR _lightmap_vertices$3[ebp]
  00574	8b 55 b0	 mov	 edx, DWORD PTR _surface_texture_index$1[ebp]
  00577	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0057d	8b 54 d6 08	 mov	 edx, DWORD PTR [esi+edx*8+8]
  00581	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1641 : 			lightmap_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_texture_index+1].v;

  00585	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  00588	c1 e0 05	 shl	 eax, 5
  0058b	8b 4d b8	 mov	 ecx, DWORD PTR _lightmap_vertices$3[ebp]
  0058e	8b 55 b0	 mov	 edx, DWORD PTR _surface_texture_index$1[ebp]
  00591	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00597	8b 54 d6 0c	 mov	 edx, DWORD PTR [esi+edx*8+12]
  0059b	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1642 : 
; 1643 : 			destination_vertices[count].color = colour.colour;

  0059f	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  005a2	c1 e0 05	 shl	 eax, 5
  005a5	8b 4d bc	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  005a8	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  005ab	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1644 : 			destination_vertices[count].specular = specular_colour.colour;

  005af	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  005b2	c1 e0 05	 shl	 eax, 5
  005b5	8b 4d bc	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  005b8	8b 55 f4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  005bb	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1645 : 
; 1646 : 			lightmap_vertices[count].color = lightmap_colour.colour;

  005bf	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  005c2	c1 e0 05	 shl	 eax, 5
  005c5	8b 4d b8	 mov	 ecx, DWORD PTR _lightmap_vertices$3[ebp]
  005c8	8b 55 f8	 mov	 edx, DWORD PTR _lightmap_colour$[ebp]
  005cb	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1647 : 			lightmap_vertices[count].specular = d3d_fog_intensity;

  005cf	8b 45 c8	 mov	 eax, DWORD PTR _count$7[ebp]
  005d2	c1 e0 05	 shl	 eax, 5
  005d5	8b 4d b8	 mov	 ecx, DWORD PTR _lightmap_vertices$3[ebp]
  005d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  005de	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1648 : 		}

  005e2	e9 38 fe ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 1649 : 	
; 1650 : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  005e7	8b 45 bc	 mov	 eax, DWORD PTR _destination_vertices$4[ebp]
  005ea	50		 push	 eax
  005eb	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  005ee	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  005f1	52		 push	 edx
  005f2	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1651 : 
; 1652 : 		if ( current_object_3d_light_maps_enabled )

  005f7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, 0 ; current_object_3d_light_maps_enabled
  005fe	74 2f		 je	 SHORT $LN14@wrender_un

; 1653 : 		{
; 1654 : 
; 1655 : 			add_temporary_buffered_processed_polygon ( this_face->number_of_points, current_object_3d_luminosity_texture,

  00600	6a 01		 push	 1
  00602	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_v_address@@3HA ; current_object_3d_luminosity_texture_v_address
  00607	50		 push	 eax
  00608	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture_u_address@@3HA ; current_object_3d_luminosity_texture_u_address
  0060e	51		 push	 ecx
  0060f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_luminosity_texture_mipmap@@3HA ; current_object_3d_luminosity_texture_mipmap
  00615	52		 push	 edx
  00616	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA ; current_object_3d_luminosity_texture_filter
  0061b	50		 push	 eax
  0061c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A ; current_object_3d_luminosity_texture
  00622	51		 push	 ecx
  00623	8b 55 08	 mov	 edx, DWORD PTR _this_face$[ebp]
  00626	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  00629	50		 push	 eax
  0062a	e8 00 00 00 00	 call	 ?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z ; add_temporary_buffered_processed_polygon
$LN14@wrender_un:

; 1656 : 																			current_object_3d_luminosity_texture_filter,
; 1657 : 																			current_object_3d_luminosity_texture_mipmap,
; 1658 : 																			current_object_3d_luminosity_texture_u_address,
; 1659 : 																			current_object_3d_luminosity_texture_v_address,
; 1660 : 																			TRUE );
; 1661 : 		}
; 1662 : 	}
; 1663 : }

  0062f	5f		 pop	 edi
  00630	5e		 pop	 esi
  00631	5b		 pop	 ebx
  00632	8b e5		 mov	 esp, ebp
  00634	5d		 pop	 ebp
  00635	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_textured_lightmap_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_polygon_alpha$1 = -36					; size = 4
_triangle_count$2 = -32					; size = 4
_normal$3 = -28						; size = 4
_surface_point_index$4 = -24				; size = 4
_transformed_points$5 = -20				; size = 4
_vert$6 = -16						; size = 4
_destination_vertices$7 = -12				; size = 4
_count$8 = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_gouraud_white_polygon, COMDAT

; 1377 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1378 : 
; 1379 : 	vertex
; 1380 : 		*poly;
; 1381 : 
; 1382 : 	//
; 1383 : 	// The face is a true polygon - triangle or above
; 1384 : 	//
; 1385 : 
; 1386 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN8@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 09	 add	 eax, 9
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 1387 : 
; 1388 : 	{
; 1389 : 
; 1390 : 		if ( !current_object_3d_surface->translucent )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 06	 shr	 cx, 6
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	0f 85 26 01 00
	00		 jne	 $LN9@wrender_un

; 1391 : 		{
; 1392 : 
; 1393 : 			int
; 1394 : 				count;
; 1395 : 		
; 1396 : 			LPD3DTLVERTEX
; 1397 : 				destination_vertices;
; 1398 : 
; 1399 : 			object_transformed_2d_point
; 1400 : 				*vert,
; 1401 : 				*transformed_points;
; 1402 : 	
; 1403 : 			commit_deferred_state_changes ();

  0004f	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1404 : 
; 1405 : 			transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00059	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0005c	c1 e1 04	 shl	 ecx, 4
  0005f	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00065	89 4d ec	 mov	 DWORD PTR _transformed_points$5[ebp], ecx

; 1406 : 	
; 1407 : 			destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00068	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0006b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00074	89 45 f4	 mov	 DWORD PTR _destination_vertices$7[ebp], eax

; 1408 : 
; 1409 : 			for ( count = 0; count < this_face->number_of_points; count++ )

  00077	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$8[ebp], 0
  0007e	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  00080	8b 45 f8	 mov	 eax, DWORD PTR _count$8[ebp]
  00083	83 c0 01	 add	 eax, 1
  00086	89 45 f8	 mov	 DWORD PTR _count$8[ebp], eax
$LN4@wrender_un:
  00089	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0008c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0008f	39 4d f8	 cmp	 DWORD PTR _count$8[ebp], ecx
  00092	0f 8d c8 00 00
	00		 jge	 $LN3@wrender_un

; 1410 : 			{
; 1411 : 
; 1412 : 				int
; 1413 : 					surface_point_index;
; 1414 : 
; 1415 : 				object_3d_transformed_point_normal
; 1416 : 					*normal;
; 1417 : 
; 1418 : 				surface_point_index = current_object_3d_point_list[count].point;

  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0009d	03 45 f8	 add	 eax, DWORD PTR _count$8[ebp]
  000a0	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000a3	89 4d e8	 mov	 DWORD PTR _surface_point_index$4[ebp], ecx

; 1419 : 
; 1420 : 				vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  000a6	8b 45 e8	 mov	 eax, DWORD PTR _surface_point_index$4[ebp]
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  000af	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000b3	c1 e2 04	 shl	 edx, 4
  000b6	03 55 ec	 add	 edx, DWORD PTR _transformed_points$5[ebp]
  000b9	89 55 f0	 mov	 DWORD PTR _vert$6[ebp], edx

; 1421 : 				normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  000bc	8b 45 e8	 mov	 eax, DWORD PTR _surface_point_index$4[ebp]
  000bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  000c5	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000ce	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  000d1	89 4d e4	 mov	 DWORD PTR _normal$3[ebp], ecx

; 1422 : 			
; 1423 : 				*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  000d4	8b 45 f8	 mov	 eax, DWORD PTR _count$8[ebp]
  000d7	c1 e0 05	 shl	 eax, 5
  000da	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$7[ebp]
  000dd	8b 55 f0	 mov	 edx, DWORD PTR _vert$6[ebp]
  000e0	8b 12		 mov	 edx, DWORD PTR [edx]
  000e2	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1424 : 				*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  000e5	8b 45 f8	 mov	 eax, DWORD PTR _count$8[ebp]
  000e8	c1 e0 05	 shl	 eax, 5
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$7[ebp]
  000ee	8b 55 f0	 mov	 edx, DWORD PTR _vert$6[ebp]
  000f1	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000f4	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1425 : 				destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  000f8	8b 45 f0	 mov	 eax, DWORD PTR _vert$6[ebp]
  000fb	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00100	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00108	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00110	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _count$8[ebp]
  00117	c1 e1 05	 shl	 ecx, 5
  0011a	8b 55 f4	 mov	 edx, DWORD PTR _destination_vertices$7[ebp]
  0011d	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1426 : 				destination_vertices[count].rhw = vert->q;

  00123	8b 45 f8	 mov	 eax, DWORD PTR _count$8[ebp]
  00126	c1 e0 05	 shl	 eax, 5
  00129	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$7[ebp]
  0012c	8b 55 f0	 mov	 edx, DWORD PTR _vert$6[ebp]
  0012f	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00132	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1427 : 				destination_vertices[count].color = normal->colour;

  00136	8b 45 f8	 mov	 eax, DWORD PTR _count$8[ebp]
  00139	c1 e0 05	 shl	 eax, 5
  0013c	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$7[ebp]
  0013f	8b 55 e4	 mov	 edx, DWORD PTR _normal$3[ebp]
  00142	8b 12		 mov	 edx, DWORD PTR [edx]
  00144	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1428 : 				destination_vertices[count].specular = d3d_fog_intensity;

  00148	8b 45 f8	 mov	 eax, DWORD PTR _count$8[ebp]
  0014b	c1 e0 05	 shl	 eax, 5
  0014e	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$7[ebp]
  00151	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00157	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1429 : 			}

  0015b	e9 20 ff ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 1430 : 		
; 1431 : 			draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00160	8b 45 f4	 mov	 eax, DWORD PTR _destination_vertices$7[ebp]
  00163	50		 push	 eax
  00164	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00167	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0016a	52		 push	 edx
  0016b	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1432 : 		}
; 1433 : 		else

  00170	e9 bc 00 00 00	 jmp	 $LN6@wrender_un
$LN9@wrender_un:

; 1434 : 		{
; 1435 : 		
; 1436 : 			int
; 1437 : 				triangle_count,
; 1438 : 				polygon_alpha;
; 1439 : 	
; 1440 : 			asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &polygon_alpha );

  00175	8d 45 dc	 lea	 eax, DWORD PTR _polygon_alpha$1[ebp]
  00178	50		 push	 eax
  00179	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0017f	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  00183	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00187	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  0018f	51		 push	 ecx
  00190	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00195	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1441 : 
; 1442 : 			for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  0019a	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _triangle_count$2[ebp], 0
  001a1	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  001a3	8b 45 e0	 mov	 eax, DWORD PTR _triangle_count$2[ebp]
  001a6	83 c0 01	 add	 eax, 1
  001a9	89 45 e0	 mov	 DWORD PTR _triangle_count$2[ebp], eax
$LN7@wrender_un:
  001ac	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  001af	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001b2	83 e9 02	 sub	 ecx, 2
  001b5	39 4d e0	 cmp	 DWORD PTR _triangle_count$2[ebp], ecx
  001b8	7d 77		 jge	 SHORT $LN6@wrender_un

; 1443 : 			{
; 1444 : 		
; 1445 : 				//
; 1446 : 				// Should draw a translucent gouraud shaded polygon
; 1447 : 				//
; 1448 : 		
; 1449 : 				poly = construct_3d_surface_unclipped_gouraud_triangle_fan ( triangle_count, 0, current_object_3d_object_base->points_base );

  001ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  001bf	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  001c2	51		 push	 ecx
  001c3	51		 push	 ecx
  001c4	0f 57 c0	 xorps	 xmm0, xmm0
  001c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cc	8b 55 e0	 mov	 edx, DWORD PTR _triangle_count$2[ebp]
  001cf	52		 push	 edx
  001d0	e8 00 00 00 00	 call	 ?construct_3d_surface_unclipped_gouraud_triangle_fan@@YGPAUVERTEX@@HMH@Z ; construct_3d_surface_unclipped_gouraud_triangle_fan
  001d5	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1450 : 		
; 1451 : 				buffer_wbuffered_gouraud_shaded_polygon ( poly, 1, 1, 1, polygon_alpha, 0, current_object_3d_surface->additive );

  001d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001dd	66 8b 08	 mov	 cx, WORD PTR [eax]
  001e0	66 c1 e9 05	 shr	 cx, 5
  001e4	66 83 e1 01	 and	 cx, 1
  001e8	0f b7 d1	 movzx	 edx, cx
  001eb	52		 push	 edx
  001ec	51		 push	 ecx
  001ed	0f 57 c0	 xorps	 xmm0, xmm0
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	8b 45 dc	 mov	 eax, DWORD PTR _polygon_alpha$1[ebp]
  001f8	50		 push	 eax
  001f9	51		 push	 ecx
  001fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00202	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00207	51		 push	 ecx
  00208	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00210	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00215	51		 push	 ecx
  00216	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0021e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00223	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00226	51		 push	 ecx
  00227	e8 00 00 00 00	 call	 ?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z ; buffer_wbuffered_gouraud_shaded_polygon

; 1452 : 			}

  0022c	e9 72 ff ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 1453 : 		}
; 1454 : 	}
; 1455 : }

  00231	5f		 pop	 edi
  00232	5e		 pop	 esi
  00233	5b		 pop	 ebx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_gouraud_white_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_surface_point_index$1 = -32				; size = 4
_transformed_points$2 = -28				; size = 4
_vert$3 = -24						; size = 4
_destination_vertices$4 = -20				; size = 4
_count$5 = -16						; size = 4
_imixed_dissolve$6 = -12				; size = 4
_specular_colour$ = -8					; size = 4
_colour$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_white_textured_polygon, COMDAT

; 1288 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1289 : 
; 1290 : 	real_colour
; 1291 : 		colour,
; 1292 : 		specular_colour;
; 1293 : 
; 1294 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 06	 add	 eax, 6
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_un:

; 1295 : 
; 1296 : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 13		 je	 SHORT $LN6@wrender_un

; 1297 : 	{
; 1298 : 
; 1299 : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 fc	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 1300 : 	
; 1301 : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1302 : 	}
; 1303 : 	else

  0005c	eb 46		 jmp	 SHORT $LN7@wrender_un
$LN6@wrender_un:

; 1304 : 	{
; 1305 : 
; 1306 : 		//
; 1307 : 		// Look up the colour of the face normal
; 1308 : 		//
; 1309 : 	
; 1310 : 		colour.red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00063	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006c	8a 44 ca 02	 mov	 al, BYTE PTR [edx+ecx*8+2]
  00070	88 45 fe	 mov	 BYTE PTR _colour$[ebp+2], al

; 1311 : 		colour.green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00078	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00081	8a 44 ca 01	 mov	 al, BYTE PTR [edx+ecx*8+1]
  00085	88 45 fd	 mov	 BYTE PTR _colour$[ebp+1], al

; 1312 : 		colour.blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0008d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00096	8a 04 ca	 mov	 al, BYTE PTR [edx+ecx*8]
  00099	88 45 fc	 mov	 BYTE PTR _colour$[ebp], al

; 1313 : 	
; 1314 : 		specular_colour.colour = d3d_fog_intensity;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000a1	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax
$LN7@wrender_un:

; 1315 : 	}
; 1316 : 
; 1317 : 	calculate_luminous_colour ( &colour );

  000a4	8d 45 fc	 lea	 eax, DWORD PTR _colour$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 1318 : 
; 1319 : 	specular_colour.colour = d3d_fog_intensity;

  000ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000b2	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1320 : 
; 1321 : 	{
; 1322 : 
; 1323 : 		int
; 1324 : 			imixed_dissolve;
; 1325 : 
; 1326 : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  000b5	8d 45 f4	 lea	 eax, DWORD PTR _imixed_dissolve$6[ebp]
  000b8	50		 push	 eax
  000b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000bf	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000c3	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000c7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000cf	51		 push	 ecx
  000d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d5	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1327 : 		colour.alpha = imixed_dissolve;

  000da	8a 45 f4	 mov	 al, BYTE PTR _imixed_dissolve$6[ebp]
  000dd	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 1328 : 	}
; 1329 : 
; 1330 : 	{
; 1331 : 
; 1332 : 		int
; 1333 : 			count;
; 1334 : 	
; 1335 : 		LPD3DTLVERTEX
; 1336 : 			destination_vertices;
; 1337 : 
; 1338 : 		object_transformed_2d_point
; 1339 : 			*vert,
; 1340 : 			*transformed_points;
; 1341 : 
; 1342 : 		commit_deferred_state_changes ();

  000e0	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1343 : 
; 1344 : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  000e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000ea	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000ed	c1 e1 04	 shl	 ecx, 4
  000f0	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  000f6	89 4d e4	 mov	 DWORD PTR _transformed_points$2[ebp], ecx

; 1345 : 
; 1346 : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  000f9	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000fc	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000ff	51		 push	 ecx
  00100	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00105	89 45 ec	 mov	 DWORD PTR _destination_vertices$4[ebp], eax

; 1347 : 
; 1348 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  00108	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$5[ebp], 0
  0010f	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  00111	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  00114	83 c0 01	 add	 eax, 1
  00117	89 45 f0	 mov	 DWORD PTR _count$5[ebp], eax
$LN4@wrender_un:
  0011a	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0011d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00120	39 4d f0	 cmp	 DWORD PTR _count$5[ebp], ecx
  00123	0f 8d de 00 00
	00		 jge	 $LN3@wrender_un

; 1349 : 		{
; 1350 : 
; 1351 : 			int
; 1352 : 				surface_point_index;
; 1353 : 
; 1354 : 			surface_point_index = current_object_3d_point_list[count].point;

  00129	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0012e	03 45 f0	 add	 eax, DWORD PTR _count$5[ebp]
  00131	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00134	89 4d e0	 mov	 DWORD PTR _surface_point_index$1[ebp], ecx

; 1355 : 
; 1356 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00137	8b 45 e0	 mov	 eax, DWORD PTR _surface_point_index$1[ebp]
  0013a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00140	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00144	c1 e2 04	 shl	 edx, 4
  00147	03 55 e4	 add	 edx, DWORD PTR _transformed_points$2[ebp]
  0014a	89 55 e8	 mov	 DWORD PTR _vert$3[ebp], edx

; 1357 : 			
; 1358 : 			*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  0014d	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  00150	c1 e0 05	 shl	 eax, 5
  00153	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00156	8b 55 e8	 mov	 edx, DWORD PTR _vert$3[ebp]
  00159	8b 12		 mov	 edx, DWORD PTR [edx]
  0015b	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1359 : 			*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  0015e	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  00161	c1 e0 05	 shl	 eax, 5
  00164	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00167	8b 55 e8	 mov	 edx, DWORD PTR _vert$3[ebp]
  0016a	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0016d	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1360 : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00171	8b 45 e8	 mov	 eax, DWORD PTR _vert$3[ebp]
  00174	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00179	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00181	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00189	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0018d	8b 4d f0	 mov	 ecx, DWORD PTR _count$5[ebp]
  00190	c1 e1 05	 shl	 ecx, 5
  00193	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$4[ebp]
  00196	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1361 : 			destination_vertices[count].rhw = vert->q;

  0019c	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  0019f	c1 e0 05	 shl	 eax, 5
  001a2	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  001a5	8b 55 e8	 mov	 edx, DWORD PTR _vert$3[ebp]
  001a8	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001ab	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1362 : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  001af	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  001b2	c1 e0 05	 shl	 eax, 5
  001b5	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  001b8	8b 55 e0	 mov	 edx, DWORD PTR _surface_point_index$1[ebp]
  001bb	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  001c1	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  001c4	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1363 : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  001c8	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  001cb	c1 e0 05	 shl	 eax, 5
  001ce	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  001d1	8b 55 e0	 mov	 edx, DWORD PTR _surface_point_index$1[ebp]
  001d4	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  001da	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  001de	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1364 : 			destination_vertices[count].color = colour.colour;

  001e2	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  001e5	c1 e0 05	 shl	 eax, 5
  001e8	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  001eb	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  001ee	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1365 : 			destination_vertices[count].specular = specular_colour.colour;

  001f2	8b 45 f0	 mov	 eax, DWORD PTR _count$5[ebp]
  001f5	c1 e0 05	 shl	 eax, 5
  001f8	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  001fb	8b 55 f8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  001fe	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1366 : 		}

  00202	e9 0a ff ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 1367 : 	
; 1368 : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00207	8b 45 ec	 mov	 eax, DWORD PTR _destination_vertices$4[ebp]
  0020a	50		 push	 eax
  0020b	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  0020e	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00211	52		 push	 edx
  00212	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1369 : 	}
; 1370 : }

  00217	5f		 pop	 edi
  00218	5e		 pop	 esi
  00219	5b		 pop	 ebx
  0021a	8b e5		 mov	 esp, ebp
  0021c	5d		 pop	 ebp
  0021d	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_white_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_surface_point_index$1 = -36				; size = 4
_transformed_points$2 = -32				; size = 4
_vert$3 = -28						; size = 4
_destination_vertices$4 = -24				; size = 4
_count$5 = -20						; size = 4
_imixed_dissolve$6 = -16				; size = 4
_specular_colour$ = -12					; size = 4
_colour$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_white_polygon, COMDAT

; 1194 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1195 : 
; 1196 : 	vertex
; 1197 : 		*poly;
; 1198 : 
; 1199 : 	real_colour
; 1200 : 		colour,
; 1201 : 		specular_colour;
; 1202 : 
; 1203 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 09	 add	 eax, 9
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_un:

; 1204 : 
; 1205 : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 13		 je	 SHORT $LN6@wrender_un

; 1206 : 	{
; 1207 : 
; 1208 : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 f8	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 1209 : 	
; 1210 : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1211 : 	}
; 1212 : 	else

  0005c	eb 46		 jmp	 SHORT $LN7@wrender_un
$LN6@wrender_un:

; 1213 : 	{
; 1214 : 
; 1215 : 		//
; 1216 : 		// Look up the colour of the face normal
; 1217 : 		//
; 1218 : 	
; 1219 : 		colour.red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00063	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006c	8a 44 ca 02	 mov	 al, BYTE PTR [edx+ecx*8+2]
  00070	88 45 fa	 mov	 BYTE PTR _colour$[ebp+2], al

; 1220 : 		colour.green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00078	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00081	8a 44 ca 01	 mov	 al, BYTE PTR [edx+ecx*8+1]
  00085	88 45 f9	 mov	 BYTE PTR _colour$[ebp+1], al

; 1221 : 		colour.blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0008d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00096	8a 04 ca	 mov	 al, BYTE PTR [edx+ecx*8]
  00099	88 45 f8	 mov	 BYTE PTR _colour$[ebp], al

; 1222 : 	
; 1223 : 		specular_colour.colour = d3d_fog_intensity;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000a1	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax
$LN7@wrender_un:

; 1224 : 	}
; 1225 : 
; 1226 : 	{
; 1227 : 
; 1228 : 		int
; 1229 : 			imixed_dissolve;
; 1230 : 
; 1231 : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  000a4	8d 45 f0	 lea	 eax, DWORD PTR _imixed_dissolve$6[ebp]
  000a7	50		 push	 eax
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000ae	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000b2	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000be	51		 push	 ecx
  000bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c4	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1232 : 		colour.alpha = imixed_dissolve;

  000c9	8a 45 f0	 mov	 al, BYTE PTR _imixed_dissolve$6[ebp]
  000cc	88 45 fb	 mov	 BYTE PTR _colour$[ebp+3], al

; 1233 : 	}
; 1234 : 
; 1235 : 	if ( current_object_3d_surface->translucent )

  000cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000d4	66 8b 08	 mov	 cx, WORD PTR [eax]
  000d7	66 c1 e9 06	 shr	 cx, 6
  000db	66 83 e1 01	 and	 cx, 1
  000df	0f b7 d1	 movzx	 edx, cx
  000e2	85 d2		 test	 edx, edx
  000e4	74 42		 je	 SHORT $LN8@wrender_un

; 1236 : 	{
; 1237 : 
; 1238 : 		poly = construct_3d_surface_polygon ( this_face->number_of_points, current_object_3d_object_base->points_base );

  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000eb	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000ee	51		 push	 ecx
  000ef	8b 55 08	 mov	 edx, DWORD PTR _this_face$[ebp]
  000f2	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?construct_3d_surface_polygon@@YGPAUVERTEX@@HH@Z ; construct_3d_surface_polygon
  000fb	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1239 : 
; 1240 : 		buffer_wbuffered_plain_polygon ( poly, colour, specular_colour, current_object_3d_surface->additive );

  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00103	66 8b 08	 mov	 cx, WORD PTR [eax]
  00106	66 c1 e9 05	 shr	 cx, 5
  0010a	66 83 e1 01	 and	 cx, 1
  0010e	0f b7 d1	 movzx	 edx, cx
  00111	52		 push	 edx
  00112	8b 45 f4	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  00115	50		 push	 eax
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _colour$[ebp]
  00119	51		 push	 ecx
  0011a	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  0011d	52		 push	 edx
  0011e	e8 00 00 00 00	 call	 ?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z ; buffer_wbuffered_plain_polygon

; 1241 : 	}
; 1242 : 	else

  00123	e9 04 01 00 00	 jmp	 $LN9@wrender_un
$LN8@wrender_un:

; 1243 : 	{
; 1244 : 
; 1245 : 		int
; 1246 : 			count;
; 1247 : 	
; 1248 : 		LPD3DTLVERTEX
; 1249 : 			destination_vertices;
; 1250 : 
; 1251 : 		object_transformed_2d_point
; 1252 : 			*vert,
; 1253 : 			*transformed_points;
; 1254 : 
; 1255 : 		commit_deferred_state_changes ();

  00128	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1256 : 
; 1257 : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  0012d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00132	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00135	c1 e1 04	 shl	 ecx, 4
  00138	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  0013e	89 4d e0	 mov	 DWORD PTR _transformed_points$2[ebp], ecx

; 1258 : 
; 1259 : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00141	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00144	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00147	51		 push	 ecx
  00148	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  0014d	89 45 e8	 mov	 DWORD PTR _destination_vertices$4[ebp], eax

; 1260 : 
; 1261 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  00150	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$5[ebp], 0
  00157	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  00159	8b 45 ec	 mov	 eax, DWORD PTR _count$5[ebp]
  0015c	83 c0 01	 add	 eax, 1
  0015f	89 45 ec	 mov	 DWORD PTR _count$5[ebp], eax
$LN4@wrender_un:
  00162	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00165	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00168	39 4d ec	 cmp	 DWORD PTR _count$5[ebp], ecx
  0016b	0f 8d ab 00 00
	00		 jge	 $LN3@wrender_un

; 1262 : 		{
; 1263 : 
; 1264 : 			int
; 1265 : 				surface_point_index;
; 1266 : 
; 1267 : 			surface_point_index = current_object_3d_point_list[count].point;

  00171	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00176	03 45 ec	 add	 eax, DWORD PTR _count$5[ebp]
  00179	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0017c	89 4d dc	 mov	 DWORD PTR _surface_point_index$1[ebp], ecx

; 1268 : 
; 1269 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  0017f	8b 45 dc	 mov	 eax, DWORD PTR _surface_point_index$1[ebp]
  00182	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00188	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0018c	c1 e2 04	 shl	 edx, 4
  0018f	03 55 e0	 add	 edx, DWORD PTR _transformed_points$2[ebp]
  00192	89 55 e4	 mov	 DWORD PTR _vert$3[ebp], edx

; 1270 : 			
; 1271 : 			*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  00195	8b 45 ec	 mov	 eax, DWORD PTR _count$5[ebp]
  00198	c1 e0 05	 shl	 eax, 5
  0019b	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  0019e	8b 55 e4	 mov	 edx, DWORD PTR _vert$3[ebp]
  001a1	8b 12		 mov	 edx, DWORD PTR [edx]
  001a3	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1272 : 			*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  001a6	8b 45 ec	 mov	 eax, DWORD PTR _count$5[ebp]
  001a9	c1 e0 05	 shl	 eax, 5
  001ac	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  001af	8b 55 e4	 mov	 edx, DWORD PTR _vert$3[ebp]
  001b2	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001b5	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1273 : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  001b9	8b 45 e4	 mov	 eax, DWORD PTR _vert$3[ebp]
  001bc	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  001c1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  001c9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  001d1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d5	8b 4d ec	 mov	 ecx, DWORD PTR _count$5[ebp]
  001d8	c1 e1 05	 shl	 ecx, 5
  001db	8b 55 e8	 mov	 edx, DWORD PTR _destination_vertices$4[ebp]
  001de	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1274 : 			destination_vertices[count].rhw = vert->q;

  001e4	8b 45 ec	 mov	 eax, DWORD PTR _count$5[ebp]
  001e7	c1 e0 05	 shl	 eax, 5
  001ea	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  001ed	8b 55 e4	 mov	 edx, DWORD PTR _vert$3[ebp]
  001f0	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001f3	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1275 : 			destination_vertices[count].color = colour.colour;

  001f7	8b 45 ec	 mov	 eax, DWORD PTR _count$5[ebp]
  001fa	c1 e0 05	 shl	 eax, 5
  001fd	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00200	8b 55 f8	 mov	 edx, DWORD PTR _colour$[ebp]
  00203	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1276 : 			destination_vertices[count].specular = specular_colour.colour;

  00207	8b 45 ec	 mov	 eax, DWORD PTR _count$5[ebp]
  0020a	c1 e0 05	 shl	 eax, 5
  0020d	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00210	8b 55 f4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00213	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1277 : 		}

  00217	e9 3d ff ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 1278 : 	
; 1279 : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  0021c	8b 45 e8	 mov	 eax, DWORD PTR _destination_vertices$4[ebp]
  0021f	50		 push	 eax
  00220	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00223	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00226	52		 push	 edx
  00227	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive
$LN9@wrender_un:

; 1280 : 	}
; 1281 : }

  0022c	5f		 pop	 edi
  0022d	5e		 pop	 esi
  0022e	5b		 pop	 ebx
  0022f	8b e5		 mov	 esp, ebp
  00231	5d		 pop	 ebp
  00232	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_white_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_normal$1 = -88						; size = 4
_distance$2 = -84					; size = 4
_polygon_alpha$3 = -80					; size = 4
_normal$4 = -76						; size = 4
_specular_colour$ = -72					; size = 4
_specular$ = -68					; size = 4
_surface_specular$ = -64				; size = 4
_surface_blue$ = -60					; size = 4
_surface_green$ = -56					; size = 4
_surface_red$ = -52					; size = 4
_blue$ = -48						; size = 4
_green$ = -44						; size = 4
_red$ = -40						; size = 4
_surface_point_index$ = -36				; size = 4
_count$ = -32						; size = 4
_b$ = -28						; size = 4
_g$ = -24						; size = 4
_r$ = -20						; size = 4
_ispecular$ = -16					; size = 4
_transformed_points$ = -12				; size = 4
_vert$ = -8						; size = 4
_destination_vertices$ = -4				; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_gouraud_polygon, COMDAT

; 958  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 959  : 
; 960  : 	LPD3DTLVERTEX
; 961  : 		destination_vertices;
; 962  : 
; 963  : 	object_transformed_2d_point
; 964  : 		*vert,
; 965  : 		*transformed_points;
; 966  : 
; 967  : 	int
; 968  : 		ispecular,
; 969  : 		r,
; 970  : 		g,
; 971  : 		b,
; 972  : 		count,
; 973  : 		surface_point_index;
; 974  : 
; 975  : 	float
; 976  : 		red,
; 977  : 		green,
; 978  : 		blue;
; 979  : 
; 980  : 	float
; 981  : 		surface_red,
; 982  : 		surface_green,
; 983  : 		surface_blue,
; 984  : 		surface_specular,
; 985  : 		specular;
; 986  : 
; 987  : 	real_colour
; 988  : 		specular_colour;
; 989  : 
; 990  : 	//
; 991  : 	// The face is a true polygon - triangle or above
; 992  : 	//
; 993  : 
; 994  : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN8@wrender_un
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 24	 add	 eax, 36			; 00000024H
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 995  : 
; 996  : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0003c	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0003f	c1 e1 04	 shl	 ecx, 4
  00042	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00048	89 4d f4	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 997  : 	
; 998  : 	surface_red = ( ( float ) current_object_3d_surface->red ) / 255.0;

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00050	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  00054	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00058	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0005c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00064	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00068	f3 0f 11 45 cc	 movss	 DWORD PTR _surface_red$[ebp], xmm0

; 999  : 	surface_green = ( ( float ) current_object_3d_surface->green ) / 255.0;

  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00072	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00076	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0007a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0007e	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00086	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0008a	f3 0f 11 45 c8	 movss	 DWORD PTR _surface_green$[ebp], xmm0

; 1000 : 	surface_blue = ( ( float ) current_object_3d_surface->blue ) / 255.0;

  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00094	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00098	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0009c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000a0	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ac	f3 0f 11 45 c4	 movss	 DWORD PTR _surface_blue$[ebp], xmm0

; 1001 : 
; 1002 : 	if ( current_object_3d_specular )

  000b1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
  000b8	74 14		 je	 SHORT $LN9@wrender_un

; 1003 : 	{
; 1004 : 
; 1005 : 		surface_specular = ( float ) current_object_3d_surface->specularity;

  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000bf	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  000c3	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000c7	f3 0f 11 45 c0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0

; 1006 : 	}
; 1007 : 	else

  000cc	eb 08		 jmp	 SHORT $LN10@wrender_un
$LN9@wrender_un:

; 1008 : 	{
; 1009 : 
; 1010 : 		surface_specular = 0;

  000ce	0f 57 c0	 xorps	 xmm0, xmm0
  000d1	f3 0f 11 45 c0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0
$LN10@wrender_un:

; 1011 : 	}
; 1012 : 
; 1013 : 	if ( !current_object_3d_surface->translucent )

  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000db	66 8b 08	 mov	 cx, WORD PTR [eax]
  000de	66 c1 e9 06	 shr	 cx, 6
  000e2	66 83 e1 01	 and	 cx, 1
  000e6	0f b7 d1	 movzx	 edx, cx
  000e9	85 d2		 test	 edx, edx
  000eb	0f 85 d2 01 00
	00		 jne	 $LN11@wrender_un

; 1014 : 	{
; 1015 : 
; 1016 : 		commit_deferred_state_changes ();

  000f1	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1017 : 
; 1018 : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  000f6	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000f9	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00102	89 45 fc	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 1019 : 
; 1020 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  00105	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0010c	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  0010e	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00111	83 c0 01	 add	 eax, 1
  00114	89 45 e0	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_un:
  00117	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0011a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0011d	39 4d e0	 cmp	 DWORD PTR _count$[ebp], ecx
  00120	0f 8d 88 01 00
	00		 jge	 $LN3@wrender_un

; 1021 : 		{
; 1022 : 
; 1023 : 			object_3d_transformed_point_normal
; 1024 : 				*normal;
; 1025 : 
; 1026 : 			surface_point_index = current_object_3d_point_list[count].point;

  00126	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0012b	03 45 e0	 add	 eax, DWORD PTR _count$[ebp]
  0012e	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00131	89 4d dc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 1027 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00134	8b 45 dc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00137	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0013d	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00141	c1 e2 04	 shl	 edx, 4
  00144	03 55 f4	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00147	89 55 f8	 mov	 DWORD PTR _vert$[ebp], edx

; 1028 : 			normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  0014a	8b 45 dc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  0014d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00153	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0015c	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  0015f	89 4d b4	 mov	 DWORD PTR _normal$4[ebp], ecx

; 1029 : 		
; 1030 : 			destination_vertices[count].sx = vert->i;

  00162	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00165	c1 e0 05	 shl	 eax, 5
  00168	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0016b	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  0016e	8b 12		 mov	 edx, DWORD PTR [edx]
  00170	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1031 : 			destination_vertices[count].sy = vert->j;

  00173	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00176	c1 e0 05	 shl	 eax, 5
  00179	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0017c	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  0017f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00182	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1032 : 			destination_vertices[count].rhw = vert->q;

  00186	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00189	c1 e0 05	 shl	 eax, 5
  0018c	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0018f	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  00192	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00195	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1033 : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00199	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0019c	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  001a1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  001a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  001b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001b5	8b 4d e0	 mov	 ecx, DWORD PTR _count$[ebp]
  001b8	c1 e1 05	 shl	 ecx, 5
  001bb	8b 55 fc	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  001be	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1034 : 			red = ( normal->r * surface_red ) + FLOAT_FLOAT_FACTOR;

  001c4	8b 45 b4	 mov	 eax, DWORD PTR _normal$4[ebp]
  001c7	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  001cb	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001cf	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _surface_red$[ebp]
  001d4	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001dc	f3 0f 11 45 d8	 movss	 DWORD PTR _red$[ebp], xmm0

; 1035 : 			green = ( normal->g * surface_green ) + FLOAT_FLOAT_FACTOR;

  001e1	8b 45 b4	 mov	 eax, DWORD PTR _normal$4[ebp]
  001e4	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  001e8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  001ec	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _surface_green$[ebp]
  001f1	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001f9	f3 0f 11 45 d4	 movss	 DWORD PTR _green$[ebp], xmm0

; 1036 : 			blue = ( normal->b * surface_blue ) + FLOAT_FLOAT_FACTOR;

  001fe	8b 45 b4	 mov	 eax, DWORD PTR _normal$4[ebp]
  00201	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00204	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00208	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _surface_blue$[ebp]
  0020d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  00215	f3 0f 11 45 d0	 movss	 DWORD PTR _blue$[ebp], xmm0

; 1037 : 			r = ( *( int * ) &red ) - INTEGER_FLOAT_FACTOR;

  0021a	8b 45 d8	 mov	 eax, DWORD PTR _red$[ebp]
  0021d	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00222	89 45 ec	 mov	 DWORD PTR _r$[ebp], eax

; 1038 : 			g = ( *( int * ) &green ) - INTEGER_FLOAT_FACTOR;

  00225	8b 45 d4	 mov	 eax, DWORD PTR _green$[ebp]
  00228	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  0022d	89 45 e8	 mov	 DWORD PTR _g$[ebp], eax

; 1039 : 			b = ( *( int * ) &blue ) - INTEGER_FLOAT_FACTOR;

  00230	8b 45 d0	 mov	 eax, DWORD PTR _blue$[ebp]
  00233	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00238	89 45 e4	 mov	 DWORD PTR _b$[ebp], eax

; 1040 : 			destination_vertices[count].color = RGB_MAKE ( r, g, b );

  0023b	8b 45 ec	 mov	 eax, DWORD PTR _r$[ebp]
  0023e	c1 e0 10	 shl	 eax, 16			; 00000010H
  00241	8b 4d e8	 mov	 ecx, DWORD PTR _g$[ebp]
  00244	c1 e1 08	 shl	 ecx, 8
  00247	0b c1		 or	 eax, ecx
  00249	0b 45 e4	 or	 eax, DWORD PTR _b$[ebp]
  0024c	8b 55 e0	 mov	 edx, DWORD PTR _count$[ebp]
  0024f	c1 e2 05	 shl	 edx, 5
  00252	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00255	89 44 11 10	 mov	 DWORD PTR [ecx+edx+16], eax

; 1041 : 
; 1042 : 			specular = normal->specular;

  00259	8b 45 b4	 mov	 eax, DWORD PTR _normal$4[ebp]
  0025c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00261	f3 0f 11 45 bc	 movss	 DWORD PTR _specular$[ebp], xmm0

; 1043 : 			asm_convert_float_to_int ( ( specular * surface_specular ), &ispecular );

  00266	8d 45 f0	 lea	 eax, DWORD PTR _ispecular$[ebp]
  00269	50		 push	 eax
  0026a	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _specular$[ebp]
  0026f	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _surface_specular$[ebp]
  00274	51		 push	 ecx
  00275	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027a	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1044 : 			specular_colour.colour = d3d_fog_intensity;

  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00284	89 45 b8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1045 : 			specular_colour.red = ispecular;

  00287	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  0028a	88 45 ba	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 1046 : 			specular_colour.green = ispecular;

  0028d	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  00290	88 45 b9	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 1047 : 			specular_colour.blue = ispecular;

  00293	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  00296	88 45 b8	 mov	 BYTE PTR _specular_colour$[ebp], al

; 1048 : 
; 1049 : 			destination_vertices[count].specular = specular_colour.colour;

  00299	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  0029c	c1 e0 05	 shl	 eax, 5
  0029f	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002a2	8b 55 b8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  002a5	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1050 : 		}

  002a9	e9 60 fe ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 1051 : 	
; 1052 : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  002ae	8b 45 fc	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  002b1	50		 push	 eax
  002b2	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  002b5	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1053 : /*
; 1054 : //		if ( current_object_3d_surface->reflectivity != 0.0 )
; 1055 : 		{
; 1056 : 	
; 1057 : 			int
; 1058 : 				count;
; 1059 : 	
; 1060 : 			vec3d
; 1061 : 				camera_position;
; 1062 : 	
; 1063 : 			real_colour
; 1064 : 				this_colour;
; 1065 : 	
; 1066 : 			LPD3DTLVERTEX
; 1067 : 				reflection_vertices;
; 1068 : 
; 1069 : 			gouraud_list = current_object_3d_gouraud_list;
; 1070 : 
; 1071 : 			reflection_vertices = get_temporary_translucent_polygon_vertices ();
; 1072 : 	
; 1073 : 			camera_position = current_object_3d_object_base->camera_position;
; 1074 : 
; 1075 : 			this_colour.red = 255;
; 1076 : 			this_colour.green = 0;
; 1077 : 			this_colour.blue = 0;
; 1078 : 			this_colour.alpha = 255;
; 1079 : 	
; 1080 : 			//
; 1081 : 			// Now get the u,v coordinates
; 1082 : 			//
; 1083 : 	
; 1084 : 			for ( count = 0; count < this_face->number_of_points; count++ )
; 1085 : 			{
; 1086 : 
; 1087 : 				object_3d_point_normal
; 1088 : 					*point_normal;
; 1089 : 
; 1090 : 				vec3d
; 1091 : 					normal;
; 1092 : 
; 1093 : 				float
; 1094 : 					u,
; 1095 : 					v;
; 1096 : 
; 1097 : 				point_normal = &objects_3d_data[current_object_3d_object_base->object_number].point_normals[gouraud_list->point];
; 1098 : 
; 1099 : 				normal.x = point_normal->x / 32767.0;
; 1100 : 				normal.y = point_normal->y / 32767.0;
; 1101 : 				normal.z = point_normal->z / 32767.0;
; 1102 : 
; 1103 : 				generate_environment_coordinates ( &objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point],
; 1104 : 																&normal, &camera_position, current_object_3d_object_base->object_vp->attitude,
; 1105 : 																&u, &v );
; 1106 : 
; 1107 : 				vert = transformed_points + current_object_3d_point_list[count].point;
; 1108 : 		
; 1109 : 				*( ( int * ) &reflection_vertices[count].sx ) = *( ( int * ) &vert->i );
; 1110 : 				*( ( int * ) &reflection_vertices[count].sy ) = *( ( int * ) &vert->j );
; 1111 : 				reflection_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;
; 1112 : 				reflection_vertices[count].rhw = vert->q;
; 1113 : 				reflection_vertices[count].tu = v;
; 1114 : 				reflection_vertices[count].tv = u;
; 1115 : 				reflection_vertices[count].color = this_colour.colour;
; 1116 : 				reflection_vertices[count].specular = d3d_fog_intensity;
; 1117 : 
; 1118 : 				gouraud_list++;
; 1119 : 			}
; 1120 : 
; 1121 : 			add_temporary_buffered_processed_polygon ( this_face->number_of_points, &system_textures[TEXTURE_INDEX_AH1_REFLECTMAP],
; 1122 : 																			D3DFILTER_LINEAR,
; 1123 : 																			D3DFILTER_NEAREST,
; 1124 : 																			D3DTADDRESS_WRAP,
; 1125 : 																			D3DTADDRESS_WRAP,
; 1126 : 																			FALSE );
; 1127 : 		}
; 1128 : 		*/
; 1129 : 	}
; 1130 : 	else

  002be	e9 3e 02 00 00	 jmp	 $LN12@wrender_un
$LN11@wrender_un:

; 1131 : 	{
; 1132 : 	
; 1133 : 		int
; 1134 : 			polygon_alpha;
; 1135 : 
; 1136 : 		float
; 1137 : 			distance;
; 1138 : 
; 1139 : 		//
; 1140 : 		// Should draw a gouraud shaded translucent polygon
; 1141 : 		//
; 1142 : 
; 1143 : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &polygon_alpha );

  002c3	8d 45 b0	 lea	 eax, DWORD PTR _polygon_alpha$3[ebp]
  002c6	50		 push	 eax
  002c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  002cd	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  002d1	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  002d5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  002dd	51		 push	 ecx
  002de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1144 : 
; 1145 : 		distance = 0;

  002e8	0f 57 c0	 xorps	 xmm0, xmm0
  002eb	f3 0f 11 45 ac	 movss	 DWORD PTR _distance$2[ebp], xmm0

; 1146 : 
; 1147 : 		destination_vertices = get_translucent_polygon_vertices ();

  002f0	e8 00 00 00 00	 call	 ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
  002f5	89 45 fc	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 1148 : 	
; 1149 : 		for ( count = 0; count < this_face->number_of_points; count++ )

  002f8	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  002ff	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  00301	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00304	83 c0 01	 add	 eax, 1
  00307	89 45 e0	 mov	 DWORD PTR _count$[ebp], eax
$LN7@wrender_un:
  0030a	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0030d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00310	39 4d e0	 cmp	 DWORD PTR _count$[ebp], ecx
  00313	0f 8d a2 01 00
	00		 jge	 $LN6@wrender_un

; 1150 : 		{
; 1151 : 
; 1152 : 			object_3d_transformed_point_normal
; 1153 : 				*normal;
; 1154 : 
; 1155 : 			surface_point_index = current_object_3d_point_list[count].point;

  00319	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0031e	03 45 e0	 add	 eax, DWORD PTR _count$[ebp]
  00321	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00324	89 4d dc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 1156 : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00327	8b 45 dc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  0032a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00330	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00334	c1 e2 04	 shl	 edx, 4
  00337	03 55 f4	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0033a	89 55 f8	 mov	 DWORD PTR _vert$[ebp], edx

; 1157 : 			normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  0033d	8b 45 dc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00340	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00346	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0034a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0034f	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  00352	89 4d a8	 mov	 DWORD PTR _normal$1[ebp], ecx

; 1158 : 		
; 1159 : 			destination_vertices[count].sx = vert->i;

  00355	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00358	c1 e0 05	 shl	 eax, 5
  0035b	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0035e	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  00361	8b 12		 mov	 edx, DWORD PTR [edx]
  00363	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1160 : 			destination_vertices[count].sy = vert->j;

  00366	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00369	c1 e0 05	 shl	 eax, 5
  0036c	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0036f	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  00372	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00375	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1161 : 			destination_vertices[count].rhw = vert->q;

  00379	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  0037c	c1 e0 05	 shl	 eax, 5
  0037f	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00382	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  00385	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00388	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1162 : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0038c	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0038f	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00394	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0039c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  003a4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003a8	8b 4d e0	 mov	 ecx, DWORD PTR _count$[ebp]
  003ab	c1 e1 05	 shl	 ecx, 5
  003ae	8b 55 fc	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  003b1	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1163 : 			red = ( normal->r * surface_red ) + FLOAT_FLOAT_FACTOR;

  003b7	8b 45 a8	 mov	 eax, DWORD PTR _normal$1[ebp]
  003ba	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  003be	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003c2	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _surface_red$[ebp]
  003c7	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  003cf	f3 0f 11 45 d8	 movss	 DWORD PTR _red$[ebp], xmm0

; 1164 : 			green = ( normal->g * surface_green ) + FLOAT_FLOAT_FACTOR;

  003d4	8b 45 a8	 mov	 eax, DWORD PTR _normal$1[ebp]
  003d7	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  003db	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003df	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _surface_green$[ebp]
  003e4	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  003ec	f3 0f 11 45 d4	 movss	 DWORD PTR _green$[ebp], xmm0

; 1165 : 			blue = ( normal->b * surface_blue ) + FLOAT_FLOAT_FACTOR;

  003f1	8b 45 a8	 mov	 eax, DWORD PTR _normal$1[ebp]
  003f4	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003f7	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003fb	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _surface_blue$[ebp]
  00400	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  00408	f3 0f 11 45 d0	 movss	 DWORD PTR _blue$[ebp], xmm0

; 1166 : 			r = ( *( int * ) &red ) - INTEGER_FLOAT_FACTOR;

  0040d	8b 45 d8	 mov	 eax, DWORD PTR _red$[ebp]
  00410	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00415	89 45 ec	 mov	 DWORD PTR _r$[ebp], eax

; 1167 : 			g = ( *( int * ) &green ) - INTEGER_FLOAT_FACTOR;

  00418	8b 45 d4	 mov	 eax, DWORD PTR _green$[ebp]
  0041b	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00420	89 45 e8	 mov	 DWORD PTR _g$[ebp], eax

; 1168 : 			b = ( *( int * ) &blue ) - INTEGER_FLOAT_FACTOR;

  00423	8b 45 d0	 mov	 eax, DWORD PTR _blue$[ebp]
  00426	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  0042b	89 45 e4	 mov	 DWORD PTR _b$[ebp], eax

; 1169 : 			destination_vertices[count].color = RGBA_MAKE ( r, g, b, polygon_alpha );

  0042e	8b 45 b0	 mov	 eax, DWORD PTR _polygon_alpha$3[ebp]
  00431	c1 e0 18	 shl	 eax, 24			; 00000018H
  00434	8b 4d ec	 mov	 ecx, DWORD PTR _r$[ebp]
  00437	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0043a	0b c1		 or	 eax, ecx
  0043c	8b 55 e8	 mov	 edx, DWORD PTR _g$[ebp]
  0043f	c1 e2 08	 shl	 edx, 8
  00442	0b c2		 or	 eax, edx
  00444	0b 45 e4	 or	 eax, DWORD PTR _b$[ebp]
  00447	8b 4d e0	 mov	 ecx, DWORD PTR _count$[ebp]
  0044a	c1 e1 05	 shl	 ecx, 5
  0044d	8b 55 fc	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00450	89 44 0a 10	 mov	 DWORD PTR [edx+ecx+16], eax

; 1170 : 
; 1171 : 			specular = normal->specular;

  00454	8b 45 a8	 mov	 eax, DWORD PTR _normal$1[ebp]
  00457	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0045c	f3 0f 11 45 bc	 movss	 DWORD PTR _specular$[ebp], xmm0

; 1172 : 			asm_convert_float_to_int ( ( specular * surface_specular ), &ispecular );

  00461	8d 45 f0	 lea	 eax, DWORD PTR _ispecular$[ebp]
  00464	50		 push	 eax
  00465	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _specular$[ebp]
  0046a	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR _surface_specular$[ebp]
  0046f	51		 push	 ecx
  00470	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00475	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1173 : 			specular_colour.colour = d3d_fog_intensity;

  0047a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0047f	89 45 b8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1174 : 			specular_colour.red = ispecular;

  00482	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  00485	88 45 ba	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 1175 : 			specular_colour.green = ispecular;

  00488	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  0048b	88 45 b9	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 1176 : 			specular_colour.blue = ispecular;

  0048e	8a 45 f0	 mov	 al, BYTE PTR _ispecular$[ebp]
  00491	88 45 b8	 mov	 BYTE PTR _specular_colour$[ebp], al

; 1177 : 
; 1178 : 			destination_vertices[count].specular = specular_colour.colour;

  00494	8b 45 e0	 mov	 eax, DWORD PTR _count$[ebp]
  00497	c1 e0 05	 shl	 eax, 5
  0049a	8b 4d fc	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0049d	8b 55 b8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  004a0	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1179 : 
; 1180 : 			distance += vert->q;

  004a4	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  004a7	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _distance$2[ebp]
  004ac	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  004b1	f3 0f 11 45 ac	 movss	 DWORD PTR _distance$2[ebp], xmm0

; 1181 : 		}

  004b6	e9 46 fe ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 1182 : 
; 1183 : 		distance *= one_over_table[this_face->number_of_points];

  004bb	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  004be	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  004c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  004c7	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _distance$2[ebp]
  004cc	f3 0f 59 04 8a	 mulss	 xmm0, DWORD PTR [edx+ecx*4]
  004d1	f3 0f 11 45 ac	 movss	 DWORD PTR _distance$2[ebp], xmm0

; 1184 : 
; 1185 : 		add_buffered_processed_polygon ( this_face->number_of_points, distance, D3DSHADE_GOURAUD, NULL, 0, 0, 0, 0, current_object_3d_specular, 0 );

  004d6	6a 00		 push	 0
  004d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  004dd	50		 push	 eax
  004de	6a 00		 push	 0
  004e0	6a 00		 push	 0
  004e2	6a 00		 push	 0
  004e4	6a 00		 push	 0
  004e6	6a 00		 push	 0
  004e8	6a 02		 push	 2
  004ea	51		 push	 ecx
  004eb	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _distance$2[ebp]
  004f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f5	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  004f8	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  004fb	52		 push	 edx
  004fc	e8 00 00 00 00	 call	 ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon
$LN12@wrender_un:

; 1186 : 	}
; 1187 : }

  00501	5f		 pop	 edi
  00502	5e		 pop	 esi
  00503	5b		 pop	 ebx
  00504	8b e5		 mov	 esp, ebp
  00506	5d		 pop	 ebp
  00507	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_gouraud_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_distance$1 = -68					; size = 4
_imixed_dissolve$2 = -64				; size = 4
_ispecular$3 = -60					; size = 4
_ib$4 = -56						; size = 4
_ig$5 = -52						; size = 4
_ir$6 = -48						; size = 4
_specular$7 = -44					; size = 4
_blue$8 = -40						; size = 4
_green$9 = -36						; size = 4
_red$10 = -32						; size = 4
_transformed_points$ = -28				; size = 4
_vert$ = -24						; size = 4
_surface_point_index$ = -20				; size = 4
_count$ = -16						; size = 4
_destination_vertices$ = -12				; size = 4
_specular_colour$ = -8					; size = 4
_colour$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_polygon, COMDAT

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 734  : 
; 735  : 	real_colour
; 736  : 		colour,
; 737  : 		specular_colour;
; 738  : 
; 739  : 	LPD3DTLVERTEX
; 740  : 		destination_vertices;
; 741  : 
; 742  : 	int
; 743  : 		count,
; 744  : 		surface_point_index;
; 745  : 
; 746  : 	object_transformed_2d_point
; 747  : 		*vert,
; 748  : 		*transformed_points;
; 749  : 
; 750  : 	ASSERT ( current_object_3d_surface->polygons );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 83 e1 01	 and	 cx, 1
  00018	0f b7 d1	 movzx	 edx, cx
  0001b	85 d2		 test	 edx, edx
  0001d	75 18		 jne	 SHORT $LN8@wrender_un
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00024	83 c0 11	 add	 eax, 17			; 00000011H
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  00032	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 751  : 
; 752  : 	if ( current_object_3d_surface->luminous )

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0003c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003f	66 c1 e9 07	 shr	 cx, 7
  00043	66 83 e1 01	 and	 cx, 1
  00047	0f b7 d1	 movzx	 edx, cx
  0004a	85 d2		 test	 edx, edx
  0004c	74 16		 je	 SHORT $LN9@wrender_un

; 753  : 	{
; 754  : 
; 755  : 		calculate_luminous_colour ( &colour );

  0004e	8d 45 fc	 lea	 eax, DWORD PTR _colour$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 756  : 	
; 757  : 		specular_colour.colour = d3d_fog_intensity;

  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0005c	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 758  : 	}
; 759  : 	else

  0005f	e9 66 01 00 00	 jmp	 $LN10@wrender_un
$LN9@wrender_un:

; 760  : 	{
; 761  : 
; 762  : 		float
; 763  : 			red,
; 764  : 			green,
; 765  : 			blue,
; 766  : 			specular;
; 767  : 
; 768  : 		int
; 769  : 			ir,
; 770  : 			ig,
; 771  : 			ib,
; 772  : 			ispecular;
; 773  : 
; 774  : 		//
; 775  : 		// Look up the colour of the face normal
; 776  : 		//
; 777  : 	
; 778  : 		red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00069	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0006c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00072	0f b6 44 ca 02	 movzx	 eax, BYTE PTR [edx+ecx*8+2]
  00077	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0007b	f3 0f 11 45 e0	 movss	 DWORD PTR _red$10[ebp], xmm0

; 779  : 		green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00085	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0008e	0f b6 44 ca 01	 movzx	 eax, BYTE PTR [edx+ecx*8+1]
  00093	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00097	f3 0f 11 45 dc	 movss	 DWORD PTR _green$9[ebp], xmm0

; 780  : 		blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000a1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000aa	0f b6 04 ca	 movzx	 eax, BYTE PTR [edx+ecx*8]
  000ae	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000b2	f3 0f 11 45 d8	 movss	 DWORD PTR _blue$8[ebp], xmm0

; 781  : 		specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000bc	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000c5	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000cb	f3 0f 11 45 d4	 movss	 DWORD PTR _specular$7[ebp], xmm0

; 782  : 	
; 783  : 		red /= 255.0;

  000d0	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _red$10[ebp]
  000d5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000dd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e1	f3 0f 11 45 e0	 movss	 DWORD PTR _red$10[ebp], xmm0

; 784  : 		green /= 255.0;

  000e6	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _green$9[ebp]
  000eb	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f7	f3 0f 11 45 dc	 movss	 DWORD PTR _green$9[ebp], xmm0

; 785  : 		blue /= 255.0;

  000fc	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _blue$8[ebp]
  00101	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00109	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010d	f3 0f 11 45 d8	 movss	 DWORD PTR _blue$8[ebp], xmm0

; 786  : 	
; 787  : 		asm_convert_float_to_int ( ( red * current_object_3d_surface->red ), &ir );

  00112	8d 45 d0	 lea	 eax, DWORD PTR _ir$6[ebp]
  00115	50		 push	 eax
  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0011c	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  00120	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00124	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _red$10[ebp]
  00129	51		 push	 ecx
  0012a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012f	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 788  : 		asm_convert_float_to_int ( ( green * current_object_3d_surface->green ), &ig );

  00134	8d 45 cc	 lea	 eax, DWORD PTR _ig$5[ebp]
  00137	50		 push	 eax
  00138	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0013e	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  00142	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00146	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _green$9[ebp]
  0014b	51		 push	 ecx
  0014c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00151	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 789  : 		asm_convert_float_to_int ( ( blue * current_object_3d_surface->blue ), &ib );

  00156	8d 45 c8	 lea	 eax, DWORD PTR _ib$4[ebp]
  00159	50		 push	 eax
  0015a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00160	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  00164	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00168	f3 0f 59 45 d8	 mulss	 xmm0, DWORD PTR _blue$8[ebp]
  0016d	51		 push	 ecx
  0016e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00173	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 790  : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  00178	8d 45 c4	 lea	 eax, DWORD PTR _ispecular$3[ebp]
  0017b	50		 push	 eax
  0017c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00182	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00186	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0018a	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _specular$7[ebp]
  0018f	51		 push	 ecx
  00190	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00195	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 791  : 	
; 792  : 		colour.red = ir;

  0019a	8a 45 d0	 mov	 al, BYTE PTR _ir$6[ebp]
  0019d	88 45 fe	 mov	 BYTE PTR _colour$[ebp+2], al

; 793  : 		colour.green = ig;

  001a0	8a 45 cc	 mov	 al, BYTE PTR _ig$5[ebp]
  001a3	88 45 fd	 mov	 BYTE PTR _colour$[ebp+1], al

; 794  : 		colour.blue = ib;

  001a6	8a 45 c8	 mov	 al, BYTE PTR _ib$4[ebp]
  001a9	88 45 fc	 mov	 BYTE PTR _colour$[ebp], al

; 795  : 		colour.alpha = 255;

  001ac	c6 45 ff ff	 mov	 BYTE PTR _colour$[ebp+3], 255 ; 000000ffH

; 796  : 
; 797  : 		specular_colour.colour = d3d_fog_intensity;

  001b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001b5	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 798  : 		specular_colour.red = ispecular;

  001b8	8a 45 c4	 mov	 al, BYTE PTR _ispecular$3[ebp]
  001bb	88 45 fa	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 799  : 		specular_colour.green = ispecular;

  001be	8a 45 c4	 mov	 al, BYTE PTR _ispecular$3[ebp]
  001c1	88 45 f9	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 800  : 		specular_colour.blue = ispecular;

  001c4	8a 45 c4	 mov	 al, BYTE PTR _ispecular$3[ebp]
  001c7	88 45 f8	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN10@wrender_un:

; 801  : 	}
; 802  : 
; 803  : 	{
; 804  : 
; 805  : 		int
; 806  : 			imixed_dissolve;
; 807  : 
; 808  : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  001ca	8d 45 c0	 lea	 eax, DWORD PTR _imixed_dissolve$2[ebp]
  001cd	50		 push	 eax
  001ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001d4	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  001d8	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001dc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001e4	51		 push	 ecx
  001e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ea	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 809  : 		colour.alpha = imixed_dissolve;

  001ef	8a 45 c0	 mov	 al, BYTE PTR _imixed_dissolve$2[ebp]
  001f2	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 810  : 	}
; 811  : 
; 812  : 	if ( current_object_3d_surface->translucent )

  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001fa	66 8b 08	 mov	 cx, WORD PTR [eax]
  001fd	66 c1 e9 06	 shr	 cx, 6
  00201	66 83 e1 01	 and	 cx, 1
  00205	0f b7 d1	 movzx	 edx, cx
  00208	85 d2		 test	 edx, edx
  0020a	0f 84 4c 01 00
	00		 je	 $LN11@wrender_un

; 813  : 	{
; 814  : 
; 815  : 		float
; 816  : 			distance;
; 817  : 
; 818  : 		//
; 819  : 		// Should draw a plain shaded TRANSLUCENT polygon
; 820  : 		//
; 821  : 
; 822  : 		distance = 0;

  00210	0f 57 c0	 xorps	 xmm0, xmm0
  00213	f3 0f 11 45 bc	 movss	 DWORD PTR _distance$1[ebp], xmm0

; 823  : 
; 824  : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0021d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00220	c1 e1 04	 shl	 ecx, 4
  00223	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00229	89 4d e4	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 825  : 
; 826  : 		destination_vertices = get_translucent_polygon_vertices ();

  0022c	e8 00 00 00 00	 call	 ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
  00231	89 45 f4	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 827  : 	
; 828  : 		for ( count = 0; count < this_face->number_of_points; count++ )

  00234	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0023b	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  0023d	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  00240	83 c0 01	 add	 eax, 1
  00243	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_un:
  00246	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00249	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0024c	39 4d f0	 cmp	 DWORD PTR _count$[ebp], ecx
  0024f	0f 8d c0 00 00
	00		 jge	 $LN3@wrender_un

; 829  : 		{
; 830  : 
; 831  : 			surface_point_index = current_object_3d_point_list[count].point;

  00255	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0025a	03 45 f0	 add	 eax, DWORD PTR _count$[ebp]
  0025d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00260	89 4d ec	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 832  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00263	8b 45 ec	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0026c	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00270	c1 e2 04	 shl	 edx, 4
  00273	03 55 e4	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00276	89 55 e8	 mov	 DWORD PTR _vert$[ebp], edx

; 833  : 
; 834  : 			destination_vertices[count].sx = vert->i;

  00279	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0027c	c1 e0 05	 shl	 eax, 5
  0027f	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00282	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  00285	8b 12		 mov	 edx, DWORD PTR [edx]
  00287	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 835  : 			destination_vertices[count].sy = vert->j;

  0028a	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0028d	c1 e0 05	 shl	 eax, 5
  00290	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00293	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  00296	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00299	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 836  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0029d	8b 45 e8	 mov	 eax, DWORD PTR _vert$[ebp]
  002a0	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  002a5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  002ad	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  002b5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b9	8b 4d f0	 mov	 ecx, DWORD PTR _count$[ebp]
  002bc	c1 e1 05	 shl	 ecx, 5
  002bf	8b 55 f4	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  002c2	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 837  : 			destination_vertices[count].rhw = vert->q;

  002c8	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  002cb	c1 e0 05	 shl	 eax, 5
  002ce	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002d1	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  002d4	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  002d7	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 838  : 			destination_vertices[count].color = colour.colour;

  002db	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  002de	c1 e0 05	 shl	 eax, 5
  002e1	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002e4	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  002e7	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 839  : 			destination_vertices[count].specular = d3d_fog_intensity;

  002eb	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  002ee	c1 e0 05	 shl	 eax, 5
  002f1	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  002f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  002fa	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 840  : 
; 841  : 			distance += vert->q;

  002fe	8b 45 e8	 mov	 eax, DWORD PTR _vert$[ebp]
  00301	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _distance$1[ebp]
  00306	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  0030b	f3 0f 11 45 bc	 movss	 DWORD PTR _distance$1[ebp], xmm0

; 842  : 		}

  00310	e9 28 ff ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 843  : 
; 844  : 		distance *= one_over_table[this_face->number_of_points];

  00315	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00318	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0031b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  00321	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _distance$1[ebp]
  00326	f3 0f 59 04 8a	 mulss	 xmm0, DWORD PTR [edx+ecx*4]
  0032b	f3 0f 11 45 bc	 movss	 DWORD PTR _distance$1[ebp], xmm0

; 845  : 
; 846  : 		add_buffered_processed_polygon ( this_face->number_of_points, distance, D3DSHADE_FLAT, NULL, 0, 0, 0, 0, 0, FALSE );

  00330	6a 00		 push	 0
  00332	6a 00		 push	 0
  00334	6a 00		 push	 0
  00336	6a 00		 push	 0
  00338	6a 00		 push	 0
  0033a	6a 00		 push	 0
  0033c	6a 00		 push	 0
  0033e	6a 01		 push	 1
  00340	51		 push	 ecx
  00341	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _distance$1[ebp]
  00346	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034b	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0034e	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00351	51		 push	 ecx
  00352	e8 00 00 00 00	 call	 ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon

; 847  : 	}
; 848  : 	else

  00357	e9 04 01 00 00	 jmp	 $LN12@wrender_un
$LN11@wrender_un:

; 849  : 	{
; 850  : 
; 851  : 		commit_deferred_state_changes ();

  0035c	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 852  : 
; 853  : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00361	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00366	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00369	c1 e1 04	 shl	 ecx, 4
  0036c	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00372	89 4d e4	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 854  : 
; 855  : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00375	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00378	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0037b	51		 push	 ecx
  0037c	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00381	89 45 f4	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 856  : 
; 857  : 		for ( count = 0; count < this_face->number_of_points; count++ )

  00384	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0038b	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  0038d	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  00390	83 c0 01	 add	 eax, 1
  00393	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax
$LN7@wrender_un:
  00396	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00399	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0039c	39 4d f0	 cmp	 DWORD PTR _count$[ebp], ecx
  0039f	0f 8d ab 00 00
	00		 jge	 $LN6@wrender_un

; 858  : 		{
; 859  : 
; 860  : 			surface_point_index = current_object_3d_point_list[count].point;

  003a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  003aa	03 45 f0	 add	 eax, DWORD PTR _count$[ebp]
  003ad	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003b0	89 4d ec	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 861  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  003b3	8b 45 ec	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  003b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  003bc	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  003c0	c1 e2 04	 shl	 edx, 4
  003c3	03 55 e4	 add	 edx, DWORD PTR _transformed_points$[ebp]
  003c6	89 55 e8	 mov	 DWORD PTR _vert$[ebp], edx

; 862  : 		
; 863  : 			*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  003c9	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  003cc	c1 e0 05	 shl	 eax, 5
  003cf	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  003d2	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  003d5	8b 12		 mov	 edx, DWORD PTR [edx]
  003d7	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 864  : 			*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  003da	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  003dd	c1 e0 05	 shl	 eax, 5
  003e0	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  003e3	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  003e6	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  003e9	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 865  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  003ed	8b 45 e8	 mov	 eax, DWORD PTR _vert$[ebp]
  003f0	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  003f5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  003fd	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00405	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00409	8b 4d f0	 mov	 ecx, DWORD PTR _count$[ebp]
  0040c	c1 e1 05	 shl	 ecx, 5
  0040f	8b 55 f4	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00412	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 866  : 			destination_vertices[count].rhw = vert->q;

  00418	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0041b	c1 e0 05	 shl	 eax, 5
  0041e	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00421	8b 55 e8	 mov	 edx, DWORD PTR _vert$[ebp]
  00424	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00427	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 867  : 			destination_vertices[count].color = colour.colour;

  0042b	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0042e	c1 e0 05	 shl	 eax, 5
  00431	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00434	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  00437	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 868  : 			destination_vertices[count].specular = specular_colour.colour;

  0043b	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0043e	c1 e0 05	 shl	 eax, 5
  00441	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00444	8b 55 f8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00447	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 869  : 		}

  0044b	e9 3d ff ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 870  : 
; 871  : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00450	8b 45 f4	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  00453	50		 push	 eax
  00454	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00457	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0045a	52		 push	 edx
  0045b	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive
$LN12@wrender_un:

; 872  : 	}
; 873  : 	
; 874  : /*
; 875  : 	if ( current_object_3d_surface->reflectivity != 0.0 )
; 876  : 	{
; 877  : 
; 878  : 		matrix3x3
; 879  : 			reflection_matrix;
; 880  : 
; 881  : 		int
; 882  : 			count,
; 883  : 			normal_index;
; 884  : 
; 885  : 		vec3d
; 886  : 			reflected_ray,
; 887  : 			camera_position;
; 888  : 
; 889  : 		float
; 890  : 			model_x,
; 891  : 			model_y,
; 892  : 			model_z,
; 893  : 			u,
; 894  : 			v;
; 895  : 
; 896  : 		vertex
; 897  : 			*this_point;
; 898  : 
; 899  : 		real_colour
; 900  : 			this_colour;
; 901  : 
; 902  : 		normal_index = current_object_3d_face_normal_list->point;
; 903  : 
; 904  : 		get_reflection_matrix ( reflection_matrix, &objects_3d_data[current_object_3d_object_base->object_number].point_normals[normal_index] );
; 905  : 
; 906  : 		camera_position = current_object_3d_object_base->camera_position;
; 907  : 
; 908  : 		//
; 909  : 		// Now get the u,v coordinates
; 910  : 		//
; 911  : 
; 912  : 		this_point = poly;
; 913  : 
; 914  : 		for ( count = 0; count < this_face->number_of_points; count++ )
; 915  : 		{
; 916  : 
; 917  : 			vec3d
; 918  : 				ray;
; 919  : 
; 920  : 			model_x = objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point].x;
; 921  : 			model_y = objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point].y;
; 922  : 			model_z = objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point].z;
; 923  : 	
; 924  : 			ray.x = camera_position.x - model_x;
; 925  : 			ray.y = camera_position.y - model_y;
; 926  : 			ray.z = camera_position.z - model_z;
; 927  : 
; 928  : 			multiply_matrix3x3_vec3d ( &reflected_ray, reflection_matrix, &ray );
; 929  : 	
; 930  : 			normalise_any_3d_vector ( &reflected_ray );
; 931  : 	
; 932  : 			u = atan2 ( reflected_ray.x, reflected_ray.z );
; 933  : 			v = asin ( reflected_ray.y );
; 934  : 
; 935  : 			this_point->u = u / PI2;
; 936  : 			this_point->v = v / PI2;
; 937  : 
; 938  : 			this_point = this_point->next_vertex;
; 939  : 		}
; 940  : 
; 941  : 		this_colour.red = 255;
; 942  : 		this_colour.green = 255;
; 943  : 		this_colour.blue = 255;
; 944  : 		this_colour.alpha = 255;
; 945  : 
; 946  : 		buffer_sorted_translucent_flat_shaded_textured_polygon ( poly, &system_textures[TEXTURE_INDEX_SPHERMAP],
; 947  : 																					D3DFILTER_LINEAR, D3DFILTER_NEAREST, D3DTADDRESS_WRAP,
; 948  : 																					this_colour, FALSE );
; 949  : 	}
; 950  : 	*/
; 951  : }

  00460	5f		 pop	 edi
  00461	5e		 pop	 esi
  00462	5b		 pop	 ebx
  00463	8b e5		 mov	 esp, ebp
  00465	5d		 pop	 ebp
  00466	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_normal$1 = -36						; size = 4
_col$2 = -32						; size = 4
_normal$3 = -28						; size = 4
_distance$4 = -24					; size = 4
_destination_vertices$ = -20				; size = 4
_transformed_points$ = -16				; size = 4
_vert$ = -12						; size = 4
_count$ = -8						; size = 4
_surface_point_index$ = -4				; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon, COMDAT

; 520  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 521  : 
; 522  : 	int
; 523  : 		surface_point_index,
; 524  : 		count;
; 525  : 
; 526  : 	object_transformed_2d_point
; 527  : 		*vert,
; 528  : 		*transformed_points;
; 529  : 
; 530  : 	LPD3DTLVERTEX
; 531  : 		destination_vertices;
; 532  : 
; 533  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN8@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 534  : 
; 535  : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00039	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0003c	c1 e1 04	 shl	 ecx, 4
  0003f	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00045	89 4d f0	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 536  : 
; 537  : 	if ( ( current_object_3d_texture->contains_alpha ) || ( current_object_3d_surface->translucent ) )

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0004d	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00051	66 c1 e9 07	 shr	 cx, 7
  00055	66 83 e1 01	 and	 cx, 1
  00059	0f b7 d1	 movzx	 edx, cx
  0005c	85 d2		 test	 edx, edx
  0005e	75 1b		 jne	 SHORT $LN11@wrender_un
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00065	66 8b 08	 mov	 cx, WORD PTR [eax]
  00068	66 c1 e9 06	 shr	 cx, 6
  0006c	66 83 e1 01	 and	 cx, 1
  00070	0f b7 d1	 movzx	 edx, cx
  00073	85 d2		 test	 edx, edx
  00075	0f 84 b2 01 00
	00		 je	 $LN9@wrender_un
$LN11@wrender_un:

; 538  : 	{
; 539  : 
; 540  : 		float
; 541  : 			distance;
; 542  : 
; 543  : 		//
; 544  : 		// Should draw a gouraud shaded TRANSLUCENT polygon
; 545  : 		//
; 546  : 
; 547  : 		distance = 0;

  0007b	0f 57 c0	 xorps	 xmm0, xmm0
  0007e	f3 0f 11 45 e8	 movss	 DWORD PTR _distance$4[ebp], xmm0

; 548  : 
; 549  : 		destination_vertices = get_translucent_polygon_vertices ();

  00083	e8 00 00 00 00	 call	 ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
  00088	89 45 ec	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 550  : 	
; 551  : 		for ( count = 0; count < this_face->number_of_points; count++ )

  0008b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00092	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  00094	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00097	83 c0 01	 add	 eax, 1
  0009a	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_un:
  0009d	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000a0	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000a3	39 4d f8	 cmp	 DWORD PTR _count$[ebp], ecx
  000a6	0f 8d 1e 01 00
	00		 jge	 $LN3@wrender_un

; 552  : 		{
; 553  : 
; 554  : 			object_3d_transformed_point_normal
; 555  : 				*normal;
; 556  : 
; 557  : 			real_colour
; 558  : 				col;
; 559  : 
; 560  : 			surface_point_index = current_object_3d_point_list[count].point;

  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  000b1	03 45 f8	 add	 eax, DWORD PTR _count$[ebp]
  000b4	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000b7	89 4d fc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 561  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  000bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  000c3	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000c7	c1 e2 04	 shl	 edx, 4
  000ca	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  000cd	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 562  : 			normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  000d0	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  000d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  000d9	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000e2	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  000e5	89 4d e4	 mov	 DWORD PTR _normal$3[ebp], ecx

; 563  : 			col.colour = normal->colour;

  000e8	8b 45 e4	 mov	 eax, DWORD PTR _normal$3[ebp]
  000eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ed	89 4d e0	 mov	 DWORD PTR _col$2[ebp], ecx

; 564  : 			col.alpha = current_object_3d_surface->alpha;

  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000f5	8a 48 0f	 mov	 cl, BYTE PTR [eax+15]
  000f8	88 4d e3	 mov	 BYTE PTR _col$2[ebp+3], cl

; 565  : 
; 566  : 			*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  000fb	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000fe	c1 e0 05	 shl	 eax, 5
  00101	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00104	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00107	8b 12		 mov	 edx, DWORD PTR [edx]
  00109	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 567  : 			*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  0010c	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0010f	c1 e0 05	 shl	 eax, 5
  00112	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00115	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00118	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0011b	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 568  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0011f	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  00122	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00127	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0012f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00137	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013b	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  0013e	c1 e1 05	 shl	 ecx, 5
  00141	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00144	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 569  : 			destination_vertices[count].rhw = vert->q;

  0014a	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0014d	c1 e0 05	 shl	 eax, 5
  00150	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00153	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00156	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00159	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 570  : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  0015d	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00160	c1 e0 05	 shl	 eax, 5
  00163	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00166	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00169	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0016f	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00172	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 571  : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  00176	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00179	c1 e0 05	 shl	 eax, 5
  0017c	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0017f	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00182	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00188	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  0018c	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 572  : 			destination_vertices[count].color = col.colour;

  00190	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00193	c1 e0 05	 shl	 eax, 5
  00196	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _col$2[ebp]
  0019c	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 573  : 			destination_vertices[count].specular = d3d_fog_intensity;

  001a0	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  001a3	c1 e0 05	 shl	 eax, 5
  001a6	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001af	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 574  : 
; 575  : 			distance += vert->q;

  001b3	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  001b6	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _distance$4[ebp]
  001bb	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  001c0	f3 0f 11 45 e8	 movss	 DWORD PTR _distance$4[ebp], xmm0

; 576  : 		}

  001c5	e9 ca fe ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 577  : 
; 578  : 		distance *= one_over_table[this_face->number_of_points];

  001ca	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  001cd	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  001d6	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _distance$4[ebp]
  001db	f3 0f 59 04 8a	 mulss	 xmm0, DWORD PTR [edx+ecx*4]
  001e0	f3 0f 11 45 e8	 movss	 DWORD PTR _distance$4[ebp], xmm0

; 579  : 
; 580  : 		add_buffered_processed_polygon ( this_face->number_of_points, distance, D3DSHADE_GOURAUD, current_object_3d_texture,

  001e5	6a 00		 push	 0
  001e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  001ec	50		 push	 eax
  001ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  001f3	51		 push	 ecx
  001f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  001fa	52		 push	 edx
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00200	50		 push	 eax
  00201	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00207	51		 push	 ecx
  00208	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0020e	52		 push	 edx
  0020f	6a 02		 push	 2
  00211	51		 push	 ecx
  00212	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _distance$4[ebp]
  00217	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021c	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0021f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon

; 581  : 																	current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 582  : 																	current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 583  : 																	current_object_3d_specular, FALSE );
; 584  : 	}
; 585  : 	else

  00228	e9 48 04 00 00	 jmp	 $LN10@wrender_un
$LN9@wrender_un:

; 586  : 	{
; 587  : 
; 588  : 		//
; 589  : 		// Commit renderstates, and inline the first 3 vertices data copying
; 590  : 		//
; 591  : 
; 592  : 		commit_deferred_state_changes ();

  0022d	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 593  : 
; 594  : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00232	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00235	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00238	51		 push	 ecx
  00239	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  0023e	89 45 ec	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 595  : 	
; 596  : 		surface_point_index = current_object_3d_point_list[0].point;

  00241	b8 01 00 00 00	 mov	 eax, 1
  00246	6b c8 00	 imul	 ecx, eax, 0
  00249	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0024f	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  00253	89 45 fc	 mov	 DWORD PTR _surface_point_index$[ebp], eax

; 597  : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00256	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00259	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0025f	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00263	c1 e2 04	 shl	 edx, 4
  00266	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00269	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 598  : 		destination_vertices[0].sx = vert->i;

  0026c	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00271	6b c8 00	 imul	 ecx, eax, 0
  00274	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00277	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  0027a	8b 00		 mov	 eax, DWORD PTR [eax]
  0027c	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 599  : 		destination_vertices[0].sy = vert->j;

  0027f	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00284	6b c8 00	 imul	 ecx, eax, 0
  00287	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  0028a	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  0028d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00290	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 600  : 		destination_vertices[0].rhw = vert->q;

  00294	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00299	6b c8 00	 imul	 ecx, eax, 0
  0029c	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  0029f	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  002a2	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  002a5	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 601  : 		destination_vertices[0].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  002a9	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  002ac	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  002b1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  002b9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  002c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c5	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  002ca	6b d1 00	 imul	 edx, ecx, 0
  002cd	8b 45 ec	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  002d0	f3 0f 11 44 10
	08		 movss	 DWORD PTR [eax+edx+8], xmm0

; 602  : 		destination_vertices[0].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  002d6	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  002db	6b c8 00	 imul	 ecx, eax, 0
  002de	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  002e1	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  002e4	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  002ea	8b 04 c6	 mov	 eax, DWORD PTR [esi+eax*8]
  002ed	89 44 0a 18	 mov	 DWORD PTR [edx+ecx+24], eax

; 603  : 		destination_vertices[0].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  002f1	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  002f6	6b c8 00	 imul	 ecx, eax, 0
  002f9	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  002fc	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  002ff	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00305	8b 44 c6 04	 mov	 eax, DWORD PTR [esi+eax*8+4]
  00309	89 44 0a 1c	 mov	 DWORD PTR [edx+ecx+28], eax

; 604  : 		destination_vertices[0].color = current_object_3d_transformed_normals[current_object_3d_surface_point_normal_list[surface_point_index].point].colour;

  0030d	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00310	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00316	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0031a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0031f	6b c8 00	 imul	 ecx, eax, 0
  00322	8b 45 ec	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  00325	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0032b	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  0032e	89 54 08 10	 mov	 DWORD PTR [eax+ecx+16], edx

; 605  : 		destination_vertices[0].specular = d3d_fog_intensity;

  00332	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00337	6b c8 00	 imul	 ecx, eax, 0
  0033a	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00342	89 44 0a 14	 mov	 DWORD PTR [edx+ecx+20], eax

; 606  : 
; 607  : 		surface_point_index = current_object_3d_point_list[1].point;

  00346	b8 01 00 00 00	 mov	 eax, 1
  0034b	c1 e0 00	 shl	 eax, 0
  0034e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00354	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  00358	89 55 fc	 mov	 DWORD PTR _surface_point_index$[ebp], edx

; 608  : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  0035b	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  0035e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00364	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00368	c1 e2 04	 shl	 edx, 4
  0036b	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0036e	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 609  : 		destination_vertices[1].sx = vert->i;

  00371	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00376	c1 e0 00	 shl	 eax, 0
  00379	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0037c	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  0037f	8b 12		 mov	 edx, DWORD PTR [edx]
  00381	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 610  : 		destination_vertices[1].sy = vert->j;

  00384	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00389	c1 e0 00	 shl	 eax, 0
  0038c	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0038f	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00392	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00395	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 611  : 		destination_vertices[1].rhw = vert->q;

  00399	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0039e	c1 e0 00	 shl	 eax, 0
  003a1	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  003a4	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  003a7	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  003aa	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 612  : 		destination_vertices[1].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  003ae	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  003b1	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  003b6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  003be	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  003c6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003ca	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  003cf	c1 e1 00	 shl	 ecx, 0
  003d2	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  003d5	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 613  : 		destination_vertices[1].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  003db	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  003e0	c1 e0 00	 shl	 eax, 0
  003e3	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  003e6	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  003e9	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  003ef	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  003f2	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 614  : 		destination_vertices[1].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  003f6	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  003fb	c1 e0 00	 shl	 eax, 0
  003fe	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00401	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00404	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0040a	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  0040e	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 615  : 		destination_vertices[1].color = current_object_3d_transformed_normals[current_object_3d_surface_point_normal_list[surface_point_index].point].colour;

  00412	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00415	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  0041b	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0041f	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00424	c1 e0 00	 shl	 eax, 0
  00427	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0042a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00430	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00433	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 616  : 		destination_vertices[1].specular = d3d_fog_intensity;

  00437	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0043c	c1 e0 00	 shl	 eax, 0
  0043f	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00442	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00448	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 617  : 
; 618  : 		surface_point_index = current_object_3d_point_list[2].point;

  0044c	b8 01 00 00 00	 mov	 eax, 1
  00451	d1 e0		 shl	 eax, 1
  00453	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00459	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  0045d	89 55 fc	 mov	 DWORD PTR _surface_point_index$[ebp], edx

; 619  : 		vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00460	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00463	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00469	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0046d	c1 e2 04	 shl	 edx, 4
  00470	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00473	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 620  : 		destination_vertices[2].sx = vert->i;

  00476	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0047b	d1 e0		 shl	 eax, 1
  0047d	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00480	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00483	8b 12		 mov	 edx, DWORD PTR [edx]
  00485	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 621  : 		destination_vertices[2].sy = vert->j;

  00488	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0048d	d1 e0		 shl	 eax, 1
  0048f	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00492	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00495	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00498	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 622  : 		destination_vertices[2].rhw = vert->q;

  0049c	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  004a1	d1 e0		 shl	 eax, 1
  004a3	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  004a6	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  004a9	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  004ac	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 623  : 		destination_vertices[2].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  004b0	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  004b3	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  004b8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  004c0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  004c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004cc	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  004d1	d1 e1		 shl	 ecx, 1
  004d3	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  004d6	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 624  : 		destination_vertices[2].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  004dc	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  004e1	d1 e0		 shl	 eax, 1
  004e3	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  004e6	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  004e9	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  004ef	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  004f2	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 625  : 		destination_vertices[2].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  004f6	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  004fb	d1 e0		 shl	 eax, 1
  004fd	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00500	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00503	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00509	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  0050d	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 626  : 		destination_vertices[2].color = current_object_3d_transformed_normals[current_object_3d_surface_point_normal_list[surface_point_index].point].colour;

  00511	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00514	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  0051a	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0051e	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00523	d1 e0		 shl	 eax, 1
  00525	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00528	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0052e	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00531	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 627  : 		destination_vertices[2].specular = d3d_fog_intensity;

  00535	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0053a	d1 e0		 shl	 eax, 1
  0053c	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0053f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00545	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 628  : 
; 629  : 		for ( count = 3; count < this_face->number_of_points; count++ )

  00549	c7 45 f8 03 00
	00 00		 mov	 DWORD PTR _count$[ebp], 3
  00550	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  00552	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00555	83 c0 01	 add	 eax, 1
  00558	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@wrender_un:
  0055b	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0055e	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00561	39 4d f8	 cmp	 DWORD PTR _count$[ebp], ecx
  00564	0f 8d fb 00 00
	00		 jge	 $LN6@wrender_un

; 630  : 		{
; 631  : 
; 632  : 			object_3d_transformed_point_normal
; 633  : 				*normal;
; 634  : 
; 635  : 			surface_point_index = current_object_3d_point_list[count].point;

  0056a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  0056f	03 45 f8	 add	 eax, DWORD PTR _count$[ebp]
  00572	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00575	89 4d fc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 636  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00578	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  0057b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00581	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00585	c1 e2 04	 shl	 edx, 4
  00588	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0058b	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 637  : 			normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  0058e	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00591	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00597	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0059b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  005a0	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  005a3	89 4d dc	 mov	 DWORD PTR _normal$1[ebp], ecx

; 638  : 
; 639  : 			destination_vertices[count].sx = vert->i;

  005a6	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  005a9	c1 e0 05	 shl	 eax, 5
  005ac	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  005af	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  005b2	8b 12		 mov	 edx, DWORD PTR [edx]
  005b4	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 640  : 			destination_vertices[count].sy = vert->j;

  005b7	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  005ba	c1 e0 05	 shl	 eax, 5
  005bd	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  005c0	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  005c3	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  005c6	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 641  : 			destination_vertices[count].rhw = vert->q;

  005ca	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  005cd	c1 e0 05	 shl	 eax, 5
  005d0	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  005d3	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  005d6	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  005d9	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 642  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  005dd	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  005e0	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  005e5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  005ed	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  005f5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f9	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  005fc	c1 e1 05	 shl	 ecx, 5
  005ff	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00602	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 643  : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  00608	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0060b	c1 e0 05	 shl	 eax, 5
  0060e	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00611	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00614	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0061a	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  0061d	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 644  : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  00621	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00624	c1 e0 05	 shl	 eax, 5
  00627	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0062a	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  0062d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00633	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00637	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 645  : 			destination_vertices[count].color = normal->colour;

  0063b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0063e	c1 e0 05	 shl	 eax, 5
  00641	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00644	8b 55 dc	 mov	 edx, DWORD PTR _normal$1[ebp]
  00647	8b 12		 mov	 edx, DWORD PTR [edx]
  00649	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 646  : 			destination_vertices[count].specular = d3d_fog_intensity;

  0064d	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00650	c1 e0 05	 shl	 eax, 5
  00653	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00656	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0065c	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 647  : 		}

  00660	e9 ed fe ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 648  : 	
; 649  : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00665	8b 45 ec	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  00668	50		 push	 eax
  00669	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  0066c	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0066f	52		 push	 edx
  00670	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive
$LN10@wrender_un:

; 650  : /*
; 651  : //		if ( current_object_3d_surface->reflectivity != 0.0 )
; 652  : 		{
; 653  : 	
; 654  : 			int
; 655  : 				count;
; 656  : 	
; 657  : 			vec3d
; 658  : 				camera_position;
; 659  : 	
; 660  : 			real_colour
; 661  : 				this_colour;
; 662  : 	
; 663  : 			LPD3DTLVERTEX
; 664  : 				reflection_vertices;
; 665  : 
; 666  : 			gouraud_list = current_object_3d_gouraud_list;
; 667  : 
; 668  : 			reflection_vertices = get_temporary_translucent_polygon_vertices ();
; 669  : 	
; 670  : 			camera_position = current_object_3d_object_base->camera_position;
; 671  : 
; 672  : 			this_colour.red = 255;
; 673  : 			this_colour.green = 255;
; 674  : 			this_colour.blue = 255;
; 675  : 			this_colour.alpha = 16;
; 676  : 	
; 677  : 			//
; 678  : 			// Now get the u,v coordinates
; 679  : 			//
; 680  : 	
; 681  : 			for ( count = 0; count < this_face->number_of_points; count++ )
; 682  : 			{
; 683  : 
; 684  : 				object_3d_point_normal
; 685  : 					*point_normal;
; 686  : 
; 687  : 				vec3d
; 688  : 					normal;
; 689  : 
; 690  : 				float
; 691  : 					u,
; 692  : 					v;
; 693  : 
; 694  : 				point_normal = &objects_3d_data[current_object_3d_object_base->object_number].point_normals[gouraud_list->point];
; 695  : 
; 696  : 				normal.x = point_normal->x / 32767.0;
; 697  : 				normal.y = point_normal->y / 32767.0;
; 698  : 				normal.z = point_normal->z / 32767.0;
; 699  : 
; 700  : 				generate_environment_coordinates ( &objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point],
; 701  : 																&normal, &camera_position, current_object_3d_object_base->object_vp->attitude, &u, &v );
; 702  : 
; 703  : 				vert = transformed_points + current_object_3d_point_list[count].point;
; 704  : 		
; 705  : 				*( ( int * ) &reflection_vertices[count].sx ) = *( ( int * ) &vert->i );
; 706  : 				*( ( int * ) &reflection_vertices[count].sy ) = *( ( int * ) &vert->j );
; 707  : 				reflection_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;
; 708  : 				reflection_vertices[count].rhw = vert->q;
; 709  : 				reflection_vertices[count].tu = v;
; 710  : 				reflection_vertices[count].tv = u;
; 711  : 				reflection_vertices[count].color = this_colour.colour;
; 712  : 				reflection_vertices[count].specular = d3d_fog_intensity;
; 713  : 
; 714  : 				gouraud_list++;
; 715  : 			}
; 716  : 
; 717  : 			add_temporary_buffered_processed_polygon ( this_face->number_of_points, &system_textures[TEXTURE_INDEX_AH1_REFLECTMAP],
; 718  : 																			D3DFILTER_LINEAR,
; 719  : 																			D3DFILTER_NEAREST,
; 720  : 																			D3DTADDRESS_CLAMP,
; 721  : 																			D3DTADDRESS_CLAMP,
; 722  : 																			FALSE );
; 723  : 		}
; 724  : 		*/
; 725  : 	}
; 726  : }

  00675	5f		 pop	 edi
  00676	5e		 pop	 esi
  00677	5b		 pop	 ebx
  00678	8b e5		 mov	 esp, ebp
  0067a	5d		 pop	 ebp
  0067b	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_gouraud_textured_nospecular_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_specular_colour$1 = -52				; size = 4
_col$2 = -48						; size = 4
_normal$3 = -44						; size = 4
_alpha$4 = -40						; size = 4
_distance$5 = -36					; size = 4
_specular$ = -32					; size = 4
_specular_colour$ = -28					; size = 4
_destination_vertices$ = -24				; size = 4
_transformed_points$ = -20				; size = 4
_vert$ = -16						; size = 4
_count$ = -12						; size = 4
_ispecular$ = -8					; size = 4
_surface_point_index$ = -4				; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_gouraud_textured_polygon, COMDAT

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 305  : 
; 306  : 	int
; 307  : 		surface_point_index,
; 308  : 		ispecular,
; 309  : 		count;
; 310  : 
; 311  : 	object_transformed_2d_point
; 312  : 		*vert,
; 313  : 		*transformed_points;
; 314  : 
; 315  : 	LPD3DTLVERTEX
; 316  : 		destination_vertices;
; 317  : 
; 318  : 	real_colour
; 319  : 		specular_colour;
; 320  : 
; 321  : 	float
; 322  : 		specular;
; 323  : 
; 324  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN8@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 14	 add	 eax, 20			; 00000014H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 325  : 
; 326  : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00039	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0003c	c1 e1 04	 shl	 ecx, 4
  0003f	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00045	89 4d ec	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 327  : 
; 328  : 	if ( ( current_object_3d_texture->contains_alpha ) || ( current_object_3d_surface->translucent ) )

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0004d	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00051	66 c1 e9 07	 shr	 cx, 7
  00055	66 83 e1 01	 and	 cx, 1
  00059	0f b7 d1	 movzx	 edx, cx
  0005c	85 d2		 test	 edx, edx
  0005e	75 1b		 jne	 SHORT $LN11@wrender_un
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00065	66 8b 08	 mov	 cx, WORD PTR [eax]
  00068	66 c1 e9 06	 shr	 cx, 6
  0006c	66 83 e1 01	 and	 cx, 1
  00070	0f b7 d1	 movzx	 edx, cx
  00073	85 d2		 test	 edx, edx
  00075	0f 84 3b 02 00
	00		 je	 $LN9@wrender_un
$LN11@wrender_un:

; 329  : 	{
; 330  : 
; 331  : 		float
; 332  : 			distance;
; 333  : 
; 334  : 		int
; 335  : 			alpha;
; 336  : 
; 337  : 		//
; 338  : 		// Should draw a gouraud shaded TRANSLUCENT polygon
; 339  : 		//
; 340  : 
; 341  : 		distance = 0;

  0007b	0f 57 c0	 xorps	 xmm0, xmm0
  0007e	f3 0f 11 45 dc	 movss	 DWORD PTR _distance$5[ebp], xmm0

; 342  : 
; 343  : 		destination_vertices = get_translucent_polygon_vertices ();

  00083	e8 00 00 00 00	 call	 ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
  00088	89 45 e8	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 344  : 
; 345  : 		if ( current_object_3d_surface->translucent )

  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00090	66 8b 08	 mov	 cx, WORD PTR [eax]
  00093	66 c1 e9 06	 shr	 cx, 6
  00097	66 83 e1 01	 and	 cx, 1
  0009b	0f b7 d1	 movzx	 edx, cx
  0009e	85 d2		 test	 edx, edx
  000a0	74 27		 je	 SHORT $LN12@wrender_un

; 346  : 		{
; 347  : 
; 348  : 			asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &alpha );

  000a2	8d 45 d8	 lea	 eax, DWORD PTR _alpha$4[ebp]
  000a5	50		 push	 eax
  000a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000ac	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000b0	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000b4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000bc	51		 push	 ecx
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 349  : 		}
; 350  : 		else

  000c7	eb 0a		 jmp	 SHORT $LN13@wrender_un
$LN12@wrender_un:

; 351  : 		{
; 352  : 
; 353  : 			alpha = current_object_3d_dissolve_value;

  000c9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  000d0	89 45 d8	 mov	 DWORD PTR _alpha$4[ebp], eax
$LN13@wrender_un:

; 354  : 		}
; 355  : 	
; 356  : 		for ( count = 0; count < this_face->number_of_points; count++ )

  000d3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  000da	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  000dc	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  000df	83 c0 01	 add	 eax, 1
  000e2	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_un:
  000e5	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000e8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000eb	39 4d f4	 cmp	 DWORD PTR _count$[ebp], ecx
  000ee	0f 8d 5f 01 00
	00		 jge	 $LN3@wrender_un

; 357  : 		{
; 358  : 
; 359  : 			object_3d_transformed_point_normal
; 360  : 				*normal;
; 361  : 
; 362  : 			real_colour
; 363  : 				col;
; 364  : 
; 365  : 			surface_point_index = current_object_3d_point_list[count].point;

  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  000f9	03 45 f4	 add	 eax, DWORD PTR _count$[ebp]
  000fc	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000ff	89 4d fc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 366  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  00102	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  00105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0010b	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0010f	c1 e2 04	 shl	 edx, 4
  00112	03 55 ec	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00115	89 55 f0	 mov	 DWORD PTR _vert$[ebp], edx

; 367  : 			normal = &current_object_3d_transformed_normals[ current_object_3d_surface_point_normal_list[surface_point_index].point ];

  00118	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  0011b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00121	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00125	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0012a	8d 0c d0	 lea	 ecx, DWORD PTR [eax+edx*8]
  0012d	89 4d d4	 mov	 DWORD PTR _normal$3[ebp], ecx

; 368  : 			col.colour = normal->colour;

  00130	8b 45 d4	 mov	 eax, DWORD PTR _normal$3[ebp]
  00133	8b 08		 mov	 ecx, DWORD PTR [eax]
  00135	89 4d d0	 mov	 DWORD PTR _col$2[ebp], ecx

; 369  : 			col.alpha = alpha;

  00138	8a 45 d8	 mov	 al, BYTE PTR _alpha$4[ebp]
  0013b	88 45 d3	 mov	 BYTE PTR _col$2[ebp+3], al

; 370  : 
; 371  : 			destination_vertices[count].sx = vert->i;

  0013e	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00141	c1 e0 05	 shl	 eax, 5
  00144	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00147	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  0014a	8b 12		 mov	 edx, DWORD PTR [edx]
  0014c	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 372  : 			destination_vertices[count].sy = vert->j;

  0014f	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00152	c1 e0 05	 shl	 eax, 5
  00155	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00158	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  0015b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0015e	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 373  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00162	8b 45 f0	 mov	 eax, DWORD PTR _vert$[ebp]
  00165	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0016a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00172	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0017a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0017e	8b 4d f4	 mov	 ecx, DWORD PTR _count$[ebp]
  00181	c1 e1 05	 shl	 ecx, 5
  00184	8b 55 e8	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00187	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 374  : 			destination_vertices[count].rhw = vert->q;

  0018d	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00190	c1 e0 05	 shl	 eax, 5
  00193	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00196	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  00199	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0019c	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 375  : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  001a0	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  001a3	c1 e0 05	 shl	 eax, 5
  001a6	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001a9	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  001ac	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  001b2	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  001b5	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 376  : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  001b9	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  001bc	c1 e0 05	 shl	 eax, 5
  001bf	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001c2	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  001c5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  001cb	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  001cf	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 377  : 			destination_vertices[count].color = col.colour;

  001d3	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  001d6	c1 e0 05	 shl	 eax, 5
  001d9	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  001dc	8b 55 d0	 mov	 edx, DWORD PTR _col$2[ebp]
  001df	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 378  : 
; 379  : 			specular = normal->specular;

  001e3	8b 45 d4	 mov	 eax, DWORD PTR _normal$3[ebp]
  001e6	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  001eb	f3 0f 11 45 e0	 movss	 DWORD PTR _specular$[ebp], xmm0

; 380  : 			asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  001f0	8d 45 f8	 lea	 eax, DWORD PTR _ispecular$[ebp]
  001f3	50		 push	 eax
  001f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001fa	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  001fe	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00202	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _specular$[ebp]
  00207	51		 push	 ecx
  00208	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020d	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 381  : 			specular_colour.colour = d3d_fog_intensity;

  00212	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00217	89 45 e4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 382  : 			specular_colour.red = ispecular;

  0021a	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  0021d	88 45 e6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 383  : 			specular_colour.green = ispecular;

  00220	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  00223	88 45 e5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 384  : 			specular_colour.blue = ispecular;

  00226	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  00229	88 45 e4	 mov	 BYTE PTR _specular_colour$[ebp], al

; 385  : 
; 386  : 			destination_vertices[count].specular = specular_colour.colour;

  0022c	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0022f	c1 e0 05	 shl	 eax, 5
  00232	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00235	8b 55 e4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00238	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 387  : 
; 388  : 			distance += vert->q;

  0023c	8b 45 f0	 mov	 eax, DWORD PTR _vert$[ebp]
  0023f	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _distance$5[ebp]
  00244	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00249	f3 0f 11 45 dc	 movss	 DWORD PTR _distance$5[ebp], xmm0

; 389  : 		}

  0024e	e9 89 fe ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 390  : 
; 391  : 		distance *= one_over_table[this_face->number_of_points];

  00253	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00256	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00259	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  0025f	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _distance$5[ebp]
  00264	f3 0f 59 04 8a	 mulss	 xmm0, DWORD PTR [edx+ecx*4]
  00269	f3 0f 11 45 dc	 movss	 DWORD PTR _distance$5[ebp], xmm0

; 392  : 
; 393  : 		add_buffered_processed_polygon ( this_face->number_of_points, distance, D3DSHADE_GOURAUD, current_object_3d_texture,

  0026e	6a 00		 push	 0
  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  00275	50		 push	 eax
  00276	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  0027c	51		 push	 ecx
  0027d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  00283	52		 push	 edx
  00284	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00289	50		 push	 eax
  0028a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00290	51		 push	 ecx
  00291	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00297	52		 push	 edx
  00298	6a 02		 push	 2
  0029a	51		 push	 ecx
  0029b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _distance$5[ebp]
  002a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a5	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  002a8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002ab	51		 push	 ecx
  002ac	e8 00 00 00 00	 call	 ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon

; 394  : 																	current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 395  : 																	current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 396  : 																	current_object_3d_specular, FALSE );
; 397  : 	}
; 398  : 	else

  002b1	e9 8f 01 00 00	 jmp	 $LN10@wrender_un
$LN9@wrender_un:

; 399  : 	{
; 400  : 
; 401  : 		//
; 402  : 		// Should draw a gouraud shaded polygon
; 403  : 		//
; 404  : 
; 405  : 		commit_deferred_state_changes ();

  002b6	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 406  : 
; 407  : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  002bb	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  002be	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002c1	51		 push	 ecx
  002c2	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  002c7	89 45 e8	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 408  : 	
; 409  : 		for ( count = 0; count < this_face->number_of_points; count++ )

  002ca	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  002d1	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  002d3	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  002d6	83 c0 01	 add	 eax, 1
  002d9	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax
$LN7@wrender_un:
  002dc	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  002df	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002e2	39 4d f4	 cmp	 DWORD PTR _count$[ebp], ecx
  002e5	0f 8d 4a 01 00
	00		 jge	 $LN6@wrender_un

; 410  : 		{
; 411  : 
; 412  : 			real_colour
; 413  : 				specular_colour;
; 414  : 
; 415  : 			surface_point_index = current_object_3d_point_list[count].point;

  002eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  002f0	03 45 f4	 add	 eax, DWORD PTR _count$[ebp]
  002f3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002f6	89 4d fc	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 416  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  002f9	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  002fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00302	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00306	c1 e2 04	 shl	 edx, 4
  00309	03 55 ec	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0030c	89 55 f0	 mov	 DWORD PTR _vert$[ebp], edx

; 417  : 
; 418  : 			*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  0030f	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00312	c1 e0 05	 shl	 eax, 5
  00315	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00318	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  0031b	8b 12		 mov	 edx, DWORD PTR [edx]
  0031d	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 419  : 			*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  00320	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00323	c1 e0 05	 shl	 eax, 5
  00326	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00329	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  0032c	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0032f	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 420  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00333	8b 45 f0	 mov	 eax, DWORD PTR _vert$[ebp]
  00336	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0033b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00343	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0034b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0034f	8b 4d f4	 mov	 ecx, DWORD PTR _count$[ebp]
  00352	c1 e1 05	 shl	 ecx, 5
  00355	8b 55 e8	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00358	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 421  : 			destination_vertices[count].rhw = vert->q;

  0035e	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00361	c1 e0 05	 shl	 eax, 5
  00364	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00367	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  0036a	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0036d	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 422  : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  00371	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00374	c1 e0 05	 shl	 eax, 5
  00377	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0037a	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  0037d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00383	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00386	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 423  : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  0038a	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  0038d	c1 e0 05	 shl	 eax, 5
  00390	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00393	8b 55 fc	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00396	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0039c	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  003a0	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 424  : 			destination_vertices[count].color = current_object_3d_transformed_normals[current_object_3d_surface_point_normal_list[surface_point_index].point].colour;

  003a4	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  003a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  003ad	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  003b1	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  003b4	c1 e0 05	 shl	 eax, 5
  003b7	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  003ba	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  003c0	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  003c3	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 425  : 
; 426  : 			specular = current_object_3d_transformed_normals[current_object_3d_surface_point_normal_list[surface_point_index].point].specular;

  003c7	8b 45 fc	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  003ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  003d0	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  003d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  003d9	f3 0f 10 44 d0
	04		 movss	 xmm0, DWORD PTR [eax+edx*8+4]
  003df	f3 0f 11 45 e0	 movss	 DWORD PTR _specular$[ebp], xmm0

; 427  : 			asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  003e4	8d 45 f8	 lea	 eax, DWORD PTR _ispecular$[ebp]
  003e7	50		 push	 eax
  003e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  003ee	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  003f2	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  003f6	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _specular$[ebp]
  003fb	51		 push	 ecx
  003fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00401	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 428  : 			specular_colour.colour = d3d_fog_intensity;

  00406	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0040b	89 45 cc	 mov	 DWORD PTR _specular_colour$1[ebp], eax

; 429  : 			specular_colour.red = ispecular;

  0040e	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  00411	88 45 ce	 mov	 BYTE PTR _specular_colour$1[ebp+2], al

; 430  : 			specular_colour.green = ispecular;

  00414	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  00417	88 45 cd	 mov	 BYTE PTR _specular_colour$1[ebp+1], al

; 431  : 			specular_colour.blue = ispecular;

  0041a	8a 45 f8	 mov	 al, BYTE PTR _ispecular$[ebp]
  0041d	88 45 cc	 mov	 BYTE PTR _specular_colour$1[ebp], al

; 432  : 
; 433  : 			destination_vertices[count].specular = specular_colour.colour;

  00420	8b 45 f4	 mov	 eax, DWORD PTR _count$[ebp]
  00423	c1 e0 05	 shl	 eax, 5
  00426	8b 4d e8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00429	8b 55 cc	 mov	 edx, DWORD PTR _specular_colour$1[ebp]
  0042c	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 434  : 		}

  00430	e9 9e fe ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 435  : 	
; 436  : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00435	8b 45 e8	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  00438	50		 push	 eax
  00439	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  0043c	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0043f	52		 push	 edx
  00440	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive
$LN10@wrender_un:

; 437  : /*
; 438  : //		if ( current_object_3d_surface->reflectivity != 0.0 )
; 439  : 		{
; 440  : 	
; 441  : 			int
; 442  : 				count;
; 443  : 	
; 444  : 			vec3d
; 445  : 				camera_position;
; 446  : 	
; 447  : 			real_colour
; 448  : 				this_colour;
; 449  : 	
; 450  : 			LPD3DTLVERTEX
; 451  : 				reflection_vertices;
; 452  : 
; 453  : 			gouraud_list = current_object_3d_gouraud_list;
; 454  : 
; 455  : 			reflection_vertices = get_temporary_translucent_polygon_vertices ();
; 456  : 	
; 457  : 			camera_position = current_object_3d_object_base->camera_position;
; 458  : 
; 459  : 			this_colour.red = 255;
; 460  : 			this_colour.green = 255;
; 461  : 			this_colour.blue = 255;
; 462  : 			this_colour.alpha = 16;
; 463  : 	
; 464  : 			//
; 465  : 			// Now get the u,v coordinates
; 466  : 			//
; 467  : 	
; 468  : 			for ( count = 0; count < this_face->number_of_points; count++ )
; 469  : 			{
; 470  : 
; 471  : 				object_3d_point_normal
; 472  : 					*point_normal;
; 473  : 
; 474  : 				vec3d
; 475  : 					normal;
; 476  : 
; 477  : 				float
; 478  : 					u,
; 479  : 					v;
; 480  : 
; 481  : 				point_normal = &objects_3d_data[current_object_3d_object_base->object_number].point_normals[gouraud_list->point];
; 482  : 
; 483  : 				normal.x = point_normal->x / 32767.0;
; 484  : 				normal.y = point_normal->y / 32767.0;
; 485  : 				normal.z = point_normal->z / 32767.0;
; 486  : 
; 487  : 				generate_environment_coordinates ( &objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point],
; 488  : 																&normal, &camera_position, current_object_3d_object_base->object_vp->attitude, &u, &v );
; 489  : 
; 490  : 				vert = transformed_points + current_object_3d_point_list[count].point;
; 491  : 		
; 492  : 				*( ( int * ) &reflection_vertices[count].sx ) = *( ( int * ) &vert->i );
; 493  : 				*( ( int * ) &reflection_vertices[count].sy ) = *( ( int * ) &vert->j );
; 494  : 				reflection_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;
; 495  : 				reflection_vertices[count].rhw = vert->q;
; 496  : 				reflection_vertices[count].tu = v;
; 497  : 				reflection_vertices[count].tv = u;
; 498  : 				reflection_vertices[count].color = this_colour.colour;
; 499  : 				reflection_vertices[count].specular = d3d_fog_intensity;
; 500  : 
; 501  : 				gouraud_list++;
; 502  : 			}
; 503  : 
; 504  : 			add_temporary_buffered_processed_polygon ( this_face->number_of_points, &system_textures[TEXTURE_INDEX_AH1_REFLECTMAP],
; 505  : 																			D3DFILTER_LINEAR,
; 506  : 																			D3DFILTER_NEAREST,
; 507  : 																			D3DTADDRESS_CLAMP,
; 508  : 																			D3DTADDRESS_CLAMP,
; 509  : 																			FALSE );
; 510  : 		}
; 511  : 		*/
; 512  : 	}
; 513  : }

  00445	5f		 pop	 edi
  00446	5e		 pop	 esi
  00447	5b		 pop	 ebx
  00448	8b e5		 mov	 esp, ebp
  0044a	5d		 pop	 ebp
  0044b	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_gouraud_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface2.c
;	COMDAT ?wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_destination_vertices$1 = -60				; size = 4
_transformed_points$2 = -56				; size = 4
_vert$3 = -52						; size = 4
_count$4 = -48						; size = 4
_distance$5 = -44					; size = 4
_destination_vertices$6 = -40				; size = 4
_transformed_points$7 = -36				; size = 4
_vert$8 = -32						; size = 4
_count$9 = -28						; size = 4
_specular$10 = -24					; size = 4
_ispecular$11 = -20					; size = 4
_ialpha$12 = -16					; size = 4
_surface_point_index$ = -12				; size = 4
_specular_colour$ = -8					; size = 4
_colour$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_unclipped_3d_object_textured_polygon, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	real_colour
; 77   : 		colour;
; 78   : 
; 79   : 	real_colour
; 80   : 		specular_colour;
; 81   : 
; 82   : 	int
; 83   : 		surface_point_index;
; 84   : 
; 85   : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN8@wrender_un
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0b	 add	 eax, 11			; 0000000bH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ODAILDBN@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_un:

; 86   : 
; 87   : 	colour.alpha = current_object_3d_dissolve_value;

  00034	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00039	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 88   : 
; 89   : 	specular_colour.colour = d3d_fog_intensity;

  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00041	89 45 f8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 90   : 
; 91   : 	if ( current_object_3d_surface->luminous )

  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00049	66 8b 08	 mov	 cx, WORD PTR [eax]
  0004c	66 c1 e9 07	 shr	 cx, 7
  00050	66 83 e1 01	 and	 cx, 1
  00054	0f b7 d1	 movzx	 edx, cx
  00057	85 d2		 test	 edx, edx
  00059	74 0e		 je	 SHORT $LN9@wrender_un

; 92   : 	{
; 93   : 
; 94   : 		calculate_luminous_colour ( &colour );

  0005b	8d 45 fc	 lea	 eax, DWORD PTR _colour$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 95   : 	}
; 96   : 	else

  00064	e9 b6 00 00 00	 jmp	 $LN13@wrender_un
$LN9@wrender_un:

; 97   : 	{
; 98   : 
; 99   : 		//
; 100  : 		// Look up the colour of the face normal
; 101  : 		//
; 102  : 
; 103  : 		colour.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0006e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00077	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  0007a	89 45 fc	 mov	 DWORD PTR _colour$[ebp], eax

; 104  : 
; 105  : 		if ( current_object_3d_surface->translucent )

  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00082	66 8b 08	 mov	 cx, WORD PTR [eax]
  00085	66 c1 e9 06	 shr	 cx, 6
  00089	66 83 e1 01	 and	 cx, 1
  0008d	0f b7 d1	 movzx	 edx, cx
  00090	85 d2		 test	 edx, edx
  00092	74 2d		 je	 SHORT $LN11@wrender_un

; 106  : 		{
; 107  : 
; 108  : 			int
; 109  : 				ialpha;
; 110  : 
; 111  : 			asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &ialpha );

  00094	8d 45 f0	 lea	 eax, DWORD PTR _ialpha$12[ebp]
  00097	50		 push	 eax
  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0009e	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000a2	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000a6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000ae	51		 push	 ecx
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 112  : 
; 113  : 			colour.alpha = ialpha;

  000b9	8a 45 f0	 mov	 al, BYTE PTR _ialpha$12[ebp]
  000bc	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al

; 114  : 		}
; 115  : 		else

  000bf	eb 08		 jmp	 SHORT $LN12@wrender_un
$LN11@wrender_un:

; 116  : 		{
; 117  : 
; 118  : 			colour.alpha = current_object_3d_dissolve_value;

  000c1	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  000c6	88 45 ff	 mov	 BYTE PTR _colour$[ebp+3], al
$LN12@wrender_un:

; 119  : 		}
; 120  : 
; 121  : 		if ( current_object_3d_specular )

  000c9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
  000d0	74 4d		 je	 SHORT $LN13@wrender_un

; 122  : 		{
; 123  : 	
; 124  : 			int
; 125  : 				ispecular;
; 126  : 	
; 127  : 			float
; 128  : 				specular;
; 129  : 	
; 130  : 			specular = current_object_3d_surface->specularity * current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000d7	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  000db	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000e5	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000ee	f3 0f 59 44 c1
	04		 mulss	 xmm0, DWORD PTR [ecx+eax*8+4]
  000f4	f3 0f 11 45 e8	 movss	 DWORD PTR _specular$10[ebp], xmm0

; 131  : 	
; 132  : 			asm_convert_float_to_int ( specular, &ispecular );

  000f9	8d 45 ec	 lea	 eax, DWORD PTR _ispecular$11[ebp]
  000fc	50		 push	 eax
  000fd	51		 push	 ecx
  000fe	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _specular$10[ebp]
  00103	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00108	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 133  : 	
; 134  : 			specular_colour.red = ispecular;

  0010d	8a 45 ec	 mov	 al, BYTE PTR _ispecular$11[ebp]
  00110	88 45 fa	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 135  : 			specular_colour.green = ispecular;

  00113	8a 45 ec	 mov	 al, BYTE PTR _ispecular$11[ebp]
  00116	88 45 f9	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 136  : 			specular_colour.blue = ispecular;

  00119	8a 45 ec	 mov	 al, BYTE PTR _ispecular$11[ebp]
  0011c	88 45 f8	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN13@wrender_un:

; 137  : 		}
; 138  : 	}
; 139  : 
; 140  : 	if ( ( current_object_3d_surface->additive ) || ( current_object_3d_surface->translucent ) || ( current_object_3d_texture->contains_alpha ) )

  0011f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00124	66 8b 08	 mov	 cx, WORD PTR [eax]
  00127	66 c1 e9 05	 shr	 cx, 5
  0012b	66 83 e1 01	 and	 cx, 1
  0012f	0f b7 d1	 movzx	 edx, cx
  00132	85 d2		 test	 edx, edx
  00134	75 33		 jne	 SHORT $LN16@wrender_un
  00136	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0013b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0013e	66 c1 e9 06	 shr	 cx, 6
  00142	66 83 e1 01	 and	 cx, 1
  00146	0f b7 d1	 movzx	 edx, cx
  00149	85 d2		 test	 edx, edx
  0014b	75 1c		 jne	 SHORT $LN16@wrender_un
  0014d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00152	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00156	66 c1 e9 07	 shr	 cx, 7
  0015a	66 83 e1 01	 and	 cx, 1
  0015e	0f b7 d1	 movzx	 edx, cx
  00161	85 d2		 test	 edx, edx
  00163	0f 84 aa 01 00
	00		 je	 $LN14@wrender_un
$LN16@wrender_un:

; 141  : 	{
; 142  : 
; 143  : 		int
; 144  : 			count;
; 145  : 
; 146  : 		object_transformed_2d_point
; 147  : 			*vert,
; 148  : 			*transformed_points;
; 149  : 	
; 150  : 		LPD3DTLVERTEX
; 151  : 			destination_vertices;
; 152  : 	
; 153  : 		float
; 154  : 			distance;
; 155  : 
; 156  : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00169	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0016e	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00171	c1 e1 04	 shl	 ecx, 4
  00174	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  0017a	89 4d dc	 mov	 DWORD PTR _transformed_points$7[ebp], ecx

; 157  : 	
; 158  : 		destination_vertices = get_translucent_polygon_vertices ();

  0017d	e8 00 00 00 00	 call	 ?get_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_translucent_polygon_vertices
  00182	89 45 d8	 mov	 DWORD PTR _destination_vertices$6[ebp], eax

; 159  : 	
; 160  : 		distance = 0;

  00185	0f 57 c0	 xorps	 xmm0, xmm0
  00188	f3 0f 11 45 d4	 movss	 DWORD PTR _distance$5[ebp], xmm0

; 161  : 
; 162  : 		for ( count = 0; count < this_face->number_of_points; count++ )

  0018d	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _count$9[ebp], 0
  00194	eb 09		 jmp	 SHORT $LN4@wrender_un
$LN2@wrender_un:
  00196	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  00199	83 c0 01	 add	 eax, 1
  0019c	89 45 e4	 mov	 DWORD PTR _count$9[ebp], eax
$LN4@wrender_un:
  0019f	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  001a2	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001a5	39 4d e4	 cmp	 DWORD PTR _count$9[ebp], ecx
  001a8	0f 8d f0 00 00
	00		 jge	 $LN3@wrender_un

; 163  : 		{
; 164  : 
; 165  : 			surface_point_index = current_object_3d_point_list[count].point;

  001ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  001b3	03 45 e4	 add	 eax, DWORD PTR _count$9[ebp]
  001b6	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001b9	89 4d f4	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 166  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  001bc	8b 45 f4	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  001bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  001c5	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  001c9	c1 e2 04	 shl	 edx, 4
  001cc	03 55 dc	 add	 edx, DWORD PTR _transformed_points$7[ebp]
  001cf	89 55 e0	 mov	 DWORD PTR _vert$8[ebp], edx

; 167  : 
; 168  : 			*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  001d2	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  001d5	c1 e0 05	 shl	 eax, 5
  001d8	8b 4d d8	 mov	 ecx, DWORD PTR _destination_vertices$6[ebp]
  001db	8b 55 e0	 mov	 edx, DWORD PTR _vert$8[ebp]
  001de	8b 12		 mov	 edx, DWORD PTR [edx]
  001e0	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 169  : 			*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  001e3	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  001e6	c1 e0 05	 shl	 eax, 5
  001e9	8b 4d d8	 mov	 ecx, DWORD PTR _destination_vertices$6[ebp]
  001ec	8b 55 e0	 mov	 edx, DWORD PTR _vert$8[ebp]
  001ef	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001f2	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 170  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  001f6	8b 45 e0	 mov	 eax, DWORD PTR _vert$8[ebp]
  001f9	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  001fe	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00206	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0020e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00212	8b 4d e4	 mov	 ecx, DWORD PTR _count$9[ebp]
  00215	c1 e1 05	 shl	 ecx, 5
  00218	8b 55 d8	 mov	 edx, DWORD PTR _destination_vertices$6[ebp]
  0021b	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 171  : 			destination_vertices[count].rhw = vert->q;

  00221	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  00224	c1 e0 05	 shl	 eax, 5
  00227	8b 4d d8	 mov	 ecx, DWORD PTR _destination_vertices$6[ebp]
  0022a	8b 55 e0	 mov	 edx, DWORD PTR _vert$8[ebp]
  0022d	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00230	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 172  : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  00234	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  00237	c1 e0 05	 shl	 eax, 5
  0023a	8b 4d d8	 mov	 ecx, DWORD PTR _destination_vertices$6[ebp]
  0023d	8b 55 f4	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00240	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00246	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00249	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 173  : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  0024d	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  00250	c1 e0 05	 shl	 eax, 5
  00253	8b 4d d8	 mov	 ecx, DWORD PTR _destination_vertices$6[ebp]
  00256	8b 55 f4	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00259	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0025f	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00263	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 174  : 			destination_vertices[count].color = colour.colour;

  00267	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  0026a	c1 e0 05	 shl	 eax, 5
  0026d	8b 4d d8	 mov	 ecx, DWORD PTR _destination_vertices$6[ebp]
  00270	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  00273	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 175  : 			destination_vertices[count].specular = specular_colour.colour;

  00277	8b 45 e4	 mov	 eax, DWORD PTR _count$9[ebp]
  0027a	c1 e0 05	 shl	 eax, 5
  0027d	8b 4d d8	 mov	 ecx, DWORD PTR _destination_vertices$6[ebp]
  00280	8b 55 f8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00283	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 176  : 
; 177  : 			distance += vert->q;

  00287	8b 45 e0	 mov	 eax, DWORD PTR _vert$8[ebp]
  0028a	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _distance$5[ebp]
  0028f	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00294	f3 0f 11 45 d4	 movss	 DWORD PTR _distance$5[ebp], xmm0

; 178  : 		}

  00299	e9 f8 fe ff ff	 jmp	 $LN2@wrender_un
$LN3@wrender_un:

; 179  : 	
; 180  : 		distance *= one_over_table[this_face->number_of_points];

  0029e	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  002a1	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?one_over_table@@3PAMA ; one_over_table
  002aa	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _distance$5[ebp]
  002af	f3 0f 59 04 8a	 mulss	 xmm0, DWORD PTR [edx+ecx*4]
  002b4	f3 0f 11 45 d4	 movss	 DWORD PTR _distance$5[ebp], xmm0

; 181  : 
; 182  : 		add_buffered_processed_polygon ( this_face->number_of_points, distance, D3DSHADE_FLAT, current_object_3d_texture,

  002b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  002be	66 8b 08	 mov	 cx, WORD PTR [eax]
  002c1	66 c1 e9 05	 shr	 cx, 5
  002c5	66 83 e1 01	 and	 cx, 1
  002c9	0f b7 d1	 movzx	 edx, cx
  002cc	52		 push	 edx
  002cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  002d2	50		 push	 eax
  002d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  002d9	51		 push	 ecx
  002da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  002e0	52		 push	 edx
  002e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  002e6	50		 push	 eax
  002e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  002ed	51		 push	 ecx
  002ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  002f4	52		 push	 edx
  002f5	6a 01		 push	 1
  002f7	51		 push	 ecx
  002f8	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _distance$5[ebp]
  002fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00302	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00305	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00308	51		 push	 ecx
  00309	e8 00 00 00 00	 call	 ?add_buffered_processed_polygon@@YGPAUBUFFERED_POLYGON@@HMHPAUSCREEN@@HHHHHH@Z ; add_buffered_processed_polygon

; 183  : 																	current_object_3d_texture_filter,
; 184  : 																	current_object_3d_texture_mipmap,
; 185  : 																	current_object_3d_texture_u_address,
; 186  : 																	current_object_3d_texture_v_address,
; 187  : 																	current_object_3d_specular,
; 188  : 																	current_object_3d_surface->additive );
; 189  : 	}
; 190  : 	else

  0030e	e9 37 01 00 00	 jmp	 $LN15@wrender_un
$LN14@wrender_un:

; 191  : 	{
; 192  : 
; 193  : 		int
; 194  : 			count;
; 195  : 	
; 196  : 		object_transformed_2d_point
; 197  : 			*vert,
; 198  : 			*transformed_points;
; 199  : 	
; 200  : 		LPD3DTLVERTEX
; 201  : 			destination_vertices;
; 202  : 	
; 203  : 		commit_deferred_state_changes ();

  00313	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 204  : 
; 205  : 		transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00318	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0031d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00320	c1 e1 04	 shl	 ecx, 4
  00323	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00329	89 4d c8	 mov	 DWORD PTR _transformed_points$2[ebp], ecx

; 206  : 	
; 207  : 		destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  0032c	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0032f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00332	51		 push	 ecx
  00333	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00338	89 45 c4	 mov	 DWORD PTR _destination_vertices$1[ebp], eax

; 208  : 	
; 209  : 		for ( count = 0; count < this_face->number_of_points; count++ )

  0033b	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _count$4[ebp], 0
  00342	eb 09		 jmp	 SHORT $LN7@wrender_un
$LN5@wrender_un:
  00344	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  00347	83 c0 01	 add	 eax, 1
  0034a	89 45 d0	 mov	 DWORD PTR _count$4[ebp], eax
$LN7@wrender_un:
  0034d	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00350	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00353	39 4d d0	 cmp	 DWORD PTR _count$4[ebp], ecx
  00356	0f 8d de 00 00
	00		 jge	 $LN6@wrender_un

; 210  : 		{
; 211  : 
; 212  : 			surface_point_index = current_object_3d_point_list[count].point;

  0035c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00361	03 45 d0	 add	 eax, DWORD PTR _count$4[ebp]
  00364	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00367	89 4d f4	 mov	 DWORD PTR _surface_point_index$[ebp], ecx

; 213  : 			vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  0036a	8b 45 f4	 mov	 eax, DWORD PTR _surface_point_index$[ebp]
  0036d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00373	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00377	c1 e2 04	 shl	 edx, 4
  0037a	03 55 c8	 add	 edx, DWORD PTR _transformed_points$2[ebp]
  0037d	89 55 cc	 mov	 DWORD PTR _vert$3[ebp], edx

; 214  : 
; 215  : 			*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  00380	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  00383	c1 e0 05	 shl	 eax, 5
  00386	8b 4d c4	 mov	 ecx, DWORD PTR _destination_vertices$1[ebp]
  00389	8b 55 cc	 mov	 edx, DWORD PTR _vert$3[ebp]
  0038c	8b 12		 mov	 edx, DWORD PTR [edx]
  0038e	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 216  : 			*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  00391	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  00394	c1 e0 05	 shl	 eax, 5
  00397	8b 4d c4	 mov	 ecx, DWORD PTR _destination_vertices$1[ebp]
  0039a	8b 55 cc	 mov	 edx, DWORD PTR _vert$3[ebp]
  0039d	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  003a0	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 217  : 			destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  003a4	8b 45 cc	 mov	 eax, DWORD PTR _vert$3[ebp]
  003a7	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  003ac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  003b4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  003bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003c0	8b 4d d0	 mov	 ecx, DWORD PTR _count$4[ebp]
  003c3	c1 e1 05	 shl	 ecx, 5
  003c6	8b 55 c4	 mov	 edx, DWORD PTR _destination_vertices$1[ebp]
  003c9	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 218  : 			destination_vertices[count].rhw = vert->q;

  003cf	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  003d2	c1 e0 05	 shl	 eax, 5
  003d5	8b 4d c4	 mov	 ecx, DWORD PTR _destination_vertices$1[ebp]
  003d8	8b 55 cc	 mov	 edx, DWORD PTR _vert$3[ebp]
  003db	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  003de	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 219  : 			destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  003e2	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  003e5	c1 e0 05	 shl	 eax, 5
  003e8	8b 4d c4	 mov	 ecx, DWORD PTR _destination_vertices$1[ebp]
  003eb	8b 55 f4	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  003ee	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  003f4	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  003f7	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 220  : 			destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  003fb	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  003fe	c1 e0 05	 shl	 eax, 5
  00401	8b 4d c4	 mov	 ecx, DWORD PTR _destination_vertices$1[ebp]
  00404	8b 55 f4	 mov	 edx, DWORD PTR _surface_point_index$[ebp]
  00407	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0040d	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00411	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 221  : 			destination_vertices[count].color = colour.colour;

  00415	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  00418	c1 e0 05	 shl	 eax, 5
  0041b	8b 4d c4	 mov	 ecx, DWORD PTR _destination_vertices$1[ebp]
  0041e	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  00421	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 222  : 			destination_vertices[count].specular = specular_colour.colour;

  00425	8b 45 d0	 mov	 eax, DWORD PTR _count$4[ebp]
  00428	c1 e0 05	 shl	 eax, 5
  0042b	8b 4d c4	 mov	 ecx, DWORD PTR _destination_vertices$1[ebp]
  0042e	8b 55 f8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00431	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 223  : 		}

  00435	e9 0a ff ff ff	 jmp	 $LN5@wrender_un
$LN6@wrender_un:

; 224  : 	
; 225  : 		draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  0043a	8b 45 c4	 mov	 eax, DWORD PTR _destination_vertices$1[ebp]
  0043d	50		 push	 eax
  0043e	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  00441	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00444	52		 push	 edx
  00445	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive
$LN15@wrender_un:

; 226  : /*
; 227  : //		if ( current_object_3d_surface->reflectivity != 0.0 )
; 228  : 		{
; 229  : 	
; 230  : 			int
; 231  : 				count;
; 232  : 
; 233  : 			object_3d_point_normal
; 234  : 				*point_normal;
; 235  : 
; 236  : 			vec3d
; 237  : 				normal,
; 238  : 				camera_position;
; 239  : 	
; 240  : 			float
; 241  : 				u,
; 242  : 				v;
; 243  : 	
; 244  : 			real_colour
; 245  : 				this_colour;
; 246  : 	
; 247  : 			LPD3DTLVERTEX
; 248  : 				reflection_vertices;
; 249  : 
; 250  : 			reflection_vertices = get_temporary_translucent_polygon_vertices ();
; 251  : 	
; 252  : 			camera_position = current_object_3d_object_base->camera_position;
; 253  : 
; 254  : 			point_normal = &objects_3d_data[current_object_3d_object_base->object_number].point_normals[current_object_3d_face_normal_list->point];
; 255  : 
; 256  : 			normal.x = point_normal->x / 32767.0;
; 257  : 			normal.y = point_normal->y / 32767.0;
; 258  : 			normal.z = point_normal->z / 32767.0;
; 259  : 
; 260  : 			this_colour.red = 255;
; 261  : 			this_colour.green = 255;
; 262  : 			this_colour.blue = 255;
; 263  : 			this_colour.alpha = 16;
; 264  : 
; 265  : 			//
; 266  : 			// Now get the u,v coordinates
; 267  : 			//
; 268  : 	
; 269  : 			for ( count = 0; count < this_face->number_of_points; count++ )
; 270  : 			{
; 271  : 	
; 272  : 				generate_environment_coordinates ( &objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point],
; 273  : 																&normal, &camera_position, current_object_3d_object_base->object_vp->attitude, &u, &v );
; 274  : 
; 275  : 				vert = transformed_points + current_object_3d_point_list[count].point;
; 276  : 		
; 277  : 				*( ( int * ) &reflection_vertices[count].sx ) = *( ( int * ) &vert->i );
; 278  : 				*( ( int * ) &reflection_vertices[count].sy ) = *( ( int * ) &vert->j );
; 279  : 				reflection_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;
; 280  : 				reflection_vertices[count].rhw = vert->q;
; 281  : 				reflection_vertices[count].tu = v;
; 282  : 				reflection_vertices[count].tv = u;
; 283  : 				reflection_vertices[count].color = this_colour.colour;
; 284  : 				reflection_vertices[count].specular = d3d_fog_intensity;
; 285  : 			}
; 286  : 	
; 287  : 			add_temporary_buffered_processed_polygon ( this_face->number_of_points, &system_textures[TEXTURE_INDEX_AH1_REFLECTMAP],
; 288  : 																			D3DFILTER_LINEAR,
; 289  : 																			D3DFILTER_NEAREST,
; 290  : 																			D3DTADDRESS_CLAMP,
; 291  : 																			D3DTADDRESS_CLAMP,
; 292  : 																			FALSE );
; 293  : 		}
; 294  : 		*/
; 295  : 	}
; 296  : }

  0044a	5f		 pop	 edi
  0044b	5e		 pop	 esi
  0044c	5b		 pop	 ebx
  0044d	8b e5		 mov	 esp, ebp
  0044f	5d		 pop	 ebp
  00450	c2 04 00	 ret	 4
?wrender_unclipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_unclipped_3d_object_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
END
