; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\area\ar_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?tool_tips@@3PAUUI_OBJECT@@A			; tool_tips
_BSS	SEGMENT
?tool_tips@@3PAUUI_OBJECT@@A DD 01H DUP (?)		; tool_tips
_BSS	ENDS
PUBLIC	?overload_area_ui_object_draw_functions@@YGXH@Z	; overload_area_ui_object_draw_functions
PUBLIC	?reset_tool_tips@@YGXXZ				; reset_tool_tips
PUBLIC	__real@3f800000
PUBLIC	__real@4014000000000000
PUBLIC	__real@41200000
EXTRN	_strchr:PROC
EXTRN	?get_mouse_x@@YGHXZ:PROC			; get_mouse_x
EXTRN	?get_mouse_y@@YGHXZ:PROC			; get_mouse_y
EXTRN	?get_system_time@@YGIXZ:PROC			; get_system_time
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?get_screen_data@@YGPAEPAUSCREEN@@@Z:PROC	; get_screen_data
EXTRN	?get_screen_pitch@@YGHPAUSCREEN@@@Z:PROC	; get_screen_pitch
EXTRN	?get_screen_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_width
EXTRN	?get_screen_height@@YGHPAUSCREEN@@@Z:PROC	; get_screen_height
EXTRN	?draw_zoomable_graphic@@YGXPAUZOOMABLE_GRAPHIC@@HHHHHHH@Z:PROC ; draw_zoomable_graphic
EXTRN	?set_ui_repaint_area@@YGXHHHH@Z:PROC		; set_ui_repaint_area
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?get_ui_font_type@@YG?AW4FONT_TYPES@@XZ:PROC	; get_ui_font_type
EXTRN	?ui_save_current_font@@YGXXZ:PROC		; ui_save_current_font
EXTRN	?ui_restore_current_font@@YGXXZ:PROC		; ui_restore_current_font
EXTRN	?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z:PROC	; ui_set_object_font
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?get_text_y_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@H@Z:PROC ; get_text_y_position
EXTRN	?get_text_x_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@@Z:PROC ; get_text_x_position
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z:PROC	; ui_draw_area
EXTRN	?ui_draw_graphic@@YGXMMMMPAG@Z:PROC		; ui_draw_graphic
EXTRN	?ui_draw_part_graphic@@YGXMMMMHHPAG@Z:PROC	; ui_draw_part_graphic
EXTRN	?ui_draw_memory_graphic@@YGXPAUUI_OBJECT@@MMMMHHHH@Z:PROC ; ui_draw_memory_graphic
EXTRN	?ui_draw_alpha_graphic@@YGXMMMMPAG@Z:PROC	; ui_draw_alpha_graphic
EXTRN	?ui_draw_part_alpha_graphic@@YGXMMMMHHPAG@Z:PROC ; ui_draw_part_alpha_graphic
EXTRN	?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z:PROC ; ui_draw_texture_graphic
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_tool_tips_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_tool_tips_draw_ui_object
EXTRN	?fn_set_ui_object_x@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_set_ui_object_y@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_set_ui_object_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_size
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_set_ui_object_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_state
EXTRN	?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_drawable
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_tool_tips_timer@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_tool_tips_timer
EXTRN	?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted
EXTRN	?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_colour
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_call_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_call_ui_object_draw_function
EXTRN	?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_text
EXTRN	?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text
EXTRN	?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text_justify
EXTRN	?fn_get_ui_object_tool_tips@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_tool_tips
EXTRN	?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_graphic
EXTRN	?fn_get_ui_object_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_texture_graphic
EXTRN	?fn_get_ui_object_highlighted_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_texture_graphic
EXTRN	?fn_get_ui_object_selected_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_selected_texture_graphic
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	?fn_get_ui_object_memory_graphic@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_memory_graphic
EXTRN	?fn_get_ui_object_zoomable_palette_graphic@@3PAP6GPAUZOOMABLE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_zoomable_palette_graphic
EXTRN	?fn_get_ui_object_graphic_type@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_graphic_type
EXTRN	?current_screen@@3PAUUI_OBJECT@@A:DWORD		; current_screen
EXTRN	?ui_x_origin@@3MA:DWORD				; ui_x_origin
EXTRN	?ui_y_origin@@3MA:DWORD				; ui_y_origin
EXTRN	__fltused:DWORD
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_draw.c
;	COMDAT ?tool_tips_draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv165 = -116						; size = 8
tv142 = -116						; size = 8
tv319 = -108						; size = 8
tv317 = -108						; size = 8
tv166 = -100						; size = 8
tv143 = -100						; size = 8
tv259 = -96						; size = 4
_y_size$1 = -28						; size = 4
_x_size$2 = -24						; size = 4
_y$3 = -20						; size = 4
_x$4 = -16						; size = 4
_text$5 = -12						; size = 4
_timer$6 = -8						; size = 4
_old_font$7 = -4					; size = 4
_obj$ = 8						; size = 4
?tool_tips_draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z PROC ; tool_tips_draw_area_ui_object, COMDAT

; 533  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 534  : 
; 535  : 	if (get_ui_object_tool_tips (obj))

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_tool_tips@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 03 03 00
	00		 je	 $LN3@tool_tips_

; 536  : 	{
; 537  : 
; 538  : 		font_types
; 539  : 			old_font;
; 540  : 
; 541  : 		int
; 542  : 			timer;
; 543  : 
; 544  : 		timer = get_ui_object_tool_tips_timer (obj);

  00023	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_tool_tips_timer@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00033	ff d0		 call	 eax
  00035	89 45 f8	 mov	 DWORD PTR _timer$6[ebp], eax

; 545  : 
; 546  : 		//debug_log ("AR_DRAW: %d tool_tips_timer = %f", obj, (float) (timer / TIME_1_SECOND));
; 547  : 	
; 548  : 		if (timer < (int)get_system_time ())

  00038	e8 00 00 00 00	 call	 ?get_system_time@@YGIXZ	; get_system_time
  0003d	39 45 f8	 cmp	 DWORD PTR _timer$6[ebp], eax
  00040	0f 8d e0 02 00
	00		 jge	 $LN3@tool_tips_

; 549  : 		{
; 550  : 
; 551  : 			const char
; 552  : 				*text;
; 553  : 
; 554  : 			float
; 555  : 				x,
; 556  : 				y,
; 557  : 				x_size,
; 558  : 				y_size;
; 559  : 
; 560  : 			//debug_log ("AR_DRAW: drawing tool tips for object %d = %s", obj, get_ui_object_tool_tips (obj));
; 561  : 
; 562  : 			// font
; 563  : 			old_font = get_ui_font_type ();

  00046	e8 00 00 00 00	 call	 ?get_ui_font_type@@YG?AW4FONT_TYPES@@XZ ; get_ui_font_type
  0004b	89 45 fc	 mov	 DWORD PTR _old_font$7[ebp], eax

; 564  : 			set_ui_font_type (UI_FONT_ARIAL_14);

  0004e	6a 01		 push	 1
  00050	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 565  : 			//
; 566  : 
; 567  : 			text = get_ui_object_tool_tips (obj);

  00055	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00058	50		 push	 eax
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0005c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_tool_tips@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00065	ff d0		 call	 eax
  00067	89 45 f4	 mov	 DWORD PTR _text$5[ebp], eax

; 568  : 
; 569  : 			x_size = ui_get_string_length (text) + 10;

  0006a	8b 45 f4	 mov	 eax, DWORD PTR _text$5[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00073	d9 5d a0	 fstp	 DWORD PTR tv259[ebp]
  00076	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv259[ebp]
  0007b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41200000
  00083	f3 0f 11 45 e8	 movss	 DWORD PTR _x_size$2[ebp], xmm0

; 570  : 			y_size = ui_get_font_height () + 10;

  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  0008d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00090	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00093	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00097	f3 0f 11 45 e4	 movss	 DWORD PTR _y_size$1[ebp], xmm0

; 571  : 
; 572  : 			x = bound (get_mouse_x (), 5.0, get_screen_width (video_screen) - (x_size + 5.0));

  0009c	e8 00 00 00 00	 call	 ?get_mouse_x@@YGHXZ	; get_mouse_x
  000a1	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000a5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  000ad	66 0f 2f c8	 comisd	 xmm1, xmm0
  000b1	76 0f		 jbe	 SHORT $LN9@tool_tips_
  000b3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4014000000000000
  000bb	f2 0f 11 45 9c	 movsd	 QWORD PTR tv143[ebp], xmm0
  000c0	eb 79		 jmp	 SHORT $LN10@tool_tips_
$LN9@tool_tips_:
  000c2	e8 00 00 00 00	 call	 ?get_mouse_x@@YGHXZ	; get_mouse_x
  000c7	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000d0	50		 push	 eax
  000d1	f2 0f 11 45 94	 movsd	 QWORD PTR tv317[ebp], xmm0
  000d6	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  000db	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000df	f3 0f 5a 4d e8	 cvtss2sd xmm1, DWORD PTR _x_size$2[ebp]
  000e4	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@4014000000000000
  000ec	f2 0f 5c c1	 subsd	 xmm0, xmm1
  000f0	f2 0f 10 4d 94	 movsd	 xmm1, QWORD PTR tv317[ebp]
  000f5	66 0f 2f c8	 comisd	 xmm1, xmm0
  000f9	76 28		 jbe	 SHORT $LN7@tool_tips_
  000fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00107	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0010b	f3 0f 5a 4d e8	 cvtss2sd xmm1, DWORD PTR _x_size$2[ebp]
  00110	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@4014000000000000
  00118	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0011c	f2 0f 11 45 8c	 movsd	 QWORD PTR tv142[ebp], xmm0
  00121	eb 0e		 jmp	 SHORT $LN8@tool_tips_
$LN7@tool_tips_:
  00123	e8 00 00 00 00	 call	 ?get_mouse_x@@YGHXZ	; get_mouse_x
  00128	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0012c	f2 0f 11 45 8c	 movsd	 QWORD PTR tv142[ebp], xmm0
$LN8@tool_tips_:
  00131	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv142[ebp]
  00136	f2 0f 11 45 9c	 movsd	 QWORD PTR tv143[ebp], xmm0
$LN10@tool_tips_:
  0013b	f2 0f 5a 45 9c	 cvtsd2ss xmm0, QWORD PTR tv143[ebp]
  00140	f3 0f 11 45 f0	 movss	 DWORD PTR _x$4[ebp], xmm0

; 573  : 			y = bound (get_mouse_y (), 5.0, get_screen_height (video_screen) - (y_size + 5.0));

  00145	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  0014a	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0014e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00156	66 0f 2f c8	 comisd	 xmm1, xmm0
  0015a	76 0f		 jbe	 SHORT $LN13@tool_tips_
  0015c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4014000000000000
  00164	f2 0f 11 45 9c	 movsd	 QWORD PTR tv166[ebp], xmm0
  00169	eb 79		 jmp	 SHORT $LN14@tool_tips_
$LN13@tool_tips_:
  0016b	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  00170	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00174	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00179	50		 push	 eax
  0017a	f2 0f 11 45 94	 movsd	 QWORD PTR tv319[ebp], xmm0
  0017f	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00184	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00188	f3 0f 5a 4d e4	 cvtss2sd xmm1, DWORD PTR _y_size$1[ebp]
  0018d	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@4014000000000000
  00195	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00199	f2 0f 10 4d 94	 movsd	 xmm1, QWORD PTR tv319[ebp]
  0019e	66 0f 2f c8	 comisd	 xmm1, xmm0
  001a2	76 28		 jbe	 SHORT $LN11@tool_tips_
  001a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  001aa	51		 push	 ecx
  001ab	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  001b0	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  001b4	f3 0f 5a 4d e4	 cvtss2sd xmm1, DWORD PTR _y_size$1[ebp]
  001b9	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@4014000000000000
  001c1	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001c5	f2 0f 11 45 8c	 movsd	 QWORD PTR tv165[ebp], xmm0
  001ca	eb 0e		 jmp	 SHORT $LN12@tool_tips_
$LN11@tool_tips_:
  001cc	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  001d1	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  001d5	f2 0f 11 45 8c	 movsd	 QWORD PTR tv165[ebp], xmm0
$LN12@tool_tips_:
  001da	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv165[ebp]
  001df	f2 0f 11 45 9c	 movsd	 QWORD PTR tv166[ebp], xmm0
$LN14@tool_tips_:
  001e4	f2 0f 5a 45 9c	 cvtsd2ss xmm0, QWORD PTR tv166[ebp]
  001e9	f3 0f 11 45 ec	 movss	 DWORD PTR _y$3[ebp], xmm0

; 574  : 
; 575  : 			if (!tool_tips)

  001ee	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A, 0 ; tool_tips
  001f5	75 69		 jne	 SHORT $LN4@tool_tips_

; 576  : 			{
; 577  : 	
; 578  : 				tool_tips = create_ui_object

  001f7	6a 11		 push	 17			; 00000011H
  001f9	6a 00		 push	 0
  001fb	6a 2f		 push	 47			; 0000002fH
  001fd	6a 01		 push	 1
  001ff	6a 10		 push	 16			; 00000010H
  00201	6a 01		 push	 1
  00203	6a 12		 push	 18			; 00000012H
  00205	8b 45 f4	 mov	 eax, DWORD PTR _text$5[ebp]
  00208	50		 push	 eax
  00209	6a 4a		 push	 74			; 0000004aH
  0020b	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _y_size$1[ebp]
  00210	83 ec 08	 sub	 esp, 8
  00213	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00218	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _x_size$2[ebp]
  0021d	83 ec 08	 sub	 esp, 8
  00220	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00225	6a 42		 push	 66			; 00000042H
  00227	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y$3[ebp]
  0022c	83 ec 08	 sub	 esp, 8
  0022f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00234	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x$4[ebp]
  00239	83 ec 08	 sub	 esp, 8
  0023c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00241	6a 34		 push	 52			; 00000034H
  00243	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_screen@@3PAUUI_OBJECT@@A ; current_screen
  00249	51		 push	 ecx
  0024a	6a 32		 push	 50			; 00000032H
  0024c	6a 02		 push	 2
  0024e	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00253	83 c4 58	 add	 esp, 88			; 00000058H
  00256	a3 00 00 00 00	 mov	 DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A, eax ; tool_tips

; 579  : 					(
; 580  : 						UI_TYPE_BUTTON,
; 581  : 						UI_ATTR_PARENT (current_screen),
; 582  : 						UI_ATTR_POSITION (x, y),
; 583  : 						UI_ATTR_SIZE (x_size, y_size),
; 584  : 						UI_ATTR_TEXT (text),
; 585  : 						UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_14),
; 586  : 						UI_ATTR_DRAWABLE (TRUE),
; 587  : 						UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_NONE),
; 588  : 						UI_ATTR_END
; 589  : 					);
; 590  : 			}
; 591  : 			else

  0025b	e9 bd 00 00 00	 jmp	 $LN5@tool_tips_
$LN4@tool_tips_:

; 592  : 			{
; 593  : 
; 594  : 				set_ui_object_x (tool_tips, x);

  00260	51		 push	 ecx
  00261	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x$4[ebp]
  00266	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  00270	50		 push	 eax
  00271	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  00277	8b 11		 mov	 edx, DWORD PTR [ecx]
  00279	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00280	ff d0		 call	 eax

; 595  : 				set_ui_object_y (tool_tips, y);

  00282	51		 push	 ecx
  00283	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y$3[ebp]
  00288	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  00292	50		 push	 eax
  00293	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  00299	8b 11		 mov	 edx, DWORD PTR [ecx]
  0029b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  002a2	ff d0		 call	 eax

; 596  : 
; 597  : 				set_ui_object_x_size (tool_tips, x_size);

  002a4	51		 push	 ecx
  002a5	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x_size$2[ebp]
  002aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  002b4	50		 push	 eax
  002b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  002bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  002bd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  002c4	ff d0		 call	 eax

; 598  : 				set_ui_object_y_size (tool_tips, y_size);

  002c6	51		 push	 ecx
  002c7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y_size$1[ebp]
  002cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  002d6	50		 push	 eax
  002d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  002dd	8b 11		 mov	 edx, DWORD PTR [ecx]
  002df	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  002e6	ff d0		 call	 eax

; 599  : 
; 600  : 				set_ui_object_text (tool_tips, text);

  002e8	8b 45 f4	 mov	 eax, DWORD PTR _text$5[ebp]
  002eb	50		 push	 eax
  002ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  002f2	51		 push	 ecx
  002f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  002f9	8b 02		 mov	 eax, DWORD PTR [edx]
  002fb	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  00302	ff d1		 call	 ecx

; 601  : 				set_ui_object_drawable (tool_tips, TRUE);

  00304	6a 01		 push	 1
  00306	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  0030b	50		 push	 eax
  0030c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  00312	8b 11		 mov	 edx, DWORD PTR [ecx]
  00314	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0031b	ff d0		 call	 eax
$LN5@tool_tips_:

; 602  : 			}
; 603  : 
; 604  : 			// font
; 605  : 			set_ui_font_type (old_font);

  0031d	8b 45 fc	 mov	 eax, DWORD PTR _old_font$7[ebp]
  00320	50		 push	 eax
  00321	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type
$LN3@tool_tips_:

; 606  : 			//
; 607  : 		}
; 608  : 	}
; 609  : }

  00326	5f		 pop	 edi
  00327	5e		 pop	 esi
  00328	5b		 pop	 ebx
  00329	8b e5		 mov	 esp, ebp
  0032b	5d		 pop	 ebp
  0032c	c2 04 00	 ret	 4
?tool_tips_draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP ; tool_tips_draw_area_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_draw.c
;	COMDAT ?draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv580 = -180						; size = 4
tv572 = -180						; size = 4
tv157 = -180						; size = 4
$T1 = -176						; size = 4
_count$2 = -108						; size = 4
_text_ptr$3 = -104					; size = 4
_old_state$4 = -100					; size = 4
_zoomable_graphic$5 = -96				; size = 4
_graphic$6 = -92					; size = 4
_text_colour$7 = -88					; size = 4
_colour$8 = -84						; size = 4
_graphic$9 = -80					; size = 4
_graphic$10 = -76					; size = 4
_parent$ = -72						; size = 4
_data$ = -68						; size = 4
_memory_graphic$ = -64					; size = 4
_old_active_screen$ = -60				; size = 4
_area$ = -56						; size = 4
_pitch$ = -52						; size = 4
_height$ = -48						; size = 4
_width$ = -44						; size = 4
_masked$ = -40						; size = 4
_redraw_flag$ = -36					; size = 4
_y3$ = -32						; size = 4
_y2$ = -28						; size = 4
_x2$ = -24						; size = 4
_y1$ = -20						; size = 4
_x1$ = -16						; size = 4
_x$ = -12						; size = 4
_y_origin$ = -8						; size = 4
_x_origin$ = -4						; size = 4
_obj$ = 8						; size = 4
?draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z PROC		; draw_area_ui_object, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 82   : 
; 83   : 	float
; 84   : 		x_origin,
; 85   : 		y_origin,
; 86   : 		x,
; 87   : 		//y,
; 88   : 		x1,
; 89   : 		y1,
; 90   : 		x2,
; 91   : 		y2,
; 92   : 		y3;
; 93   : 
; 94   : 	int
; 95   : 		redraw_flag = FALSE,

  0000c	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 0

; 96   : 		masked,
; 97   : 		width,
; 98   : 		height,
; 99   : 		pitch;
; 100  : 
; 101  : 	area_ui_object
; 102  : 		*area;
; 103  : 
; 104  : 	struct SCREEN
; 105  : 		*old_active_screen,
; 106  : 		*memory_graphic;
; 107  : /*
; 108  : 	unsigned short int
; 109  : 		*graphic;
; 110  : 
; 111  : */
; 112  : 	unsigned char
; 113  : 		*data;
; 114  : 
; 115  : 	ui_object
; 116  : 		*parent;
; 117  : 
; 118  : 	if (get_ui_object_redraw (obj))

  00013	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00023	ff d0		 call	 eax
  00025	85 c0		 test	 eax, eax
  00027	0f 84 7c 08 00
	00		 je	 $LN8@draw_area_

; 119  : 	{
; 120  : 
; 121  : 		area = (area_ui_object *) obj->data;

  0002d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00030	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00033	89 4d c8	 mov	 DWORD PTR _area$[ebp], ecx

; 122  : 
; 123  : 		//debug_log ("AR_DRAW: drawing area %f, %f  %f, %f", area->x, area->y, area->x_size, area->y_size);
; 124  : 
; 125  : 		x1 = get_ui_object_x (obj);

  00036	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00046	ff d0		 call	 eax
  00048	d9 5d f0	 fstp	 DWORD PTR _x1$[ebp]

; 126  : 		y1 = get_ui_object_y (obj);

  0004b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0005b	ff d0		 call	 eax
  0005d	d9 5d ec	 fstp	 DWORD PTR _y1$[ebp]

; 127  : 
; 128  : 		x2 = x1 + get_ui_object_x_size (obj);

  00060	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00063	50		 push	 eax
  00064	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00067	8b 11		 mov	 edx, DWORD PTR [ecx]
  00069	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00070	ff d0		 call	 eax
  00072	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv572[ebp]
  00078	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv572[ebp]
  00080	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x1$[ebp]
  00085	f3 0f 11 45 e8	 movss	 DWORD PTR _x2$[ebp], xmm0

; 129  : 		y2 = y1 + get_ui_object_y_size (obj);

  0008a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00091	8b 11		 mov	 edx, DWORD PTR [ecx]
  00093	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0009a	ff d0		 call	 eax
  0009c	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv580[ebp]
  000a2	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv580[ebp]
  000aa	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y1$[ebp]
  000af	f3 0f 11 45 e4	 movss	 DWORD PTR _y2$[ebp], xmm0

; 130  : 	
; 131  :   		// test
; 132  : 		x_origin = get_ui_object_x_origin (obj);

  000b4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000b7	50		 push	 eax
  000b8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000c4	ff d0		 call	 eax
  000c6	d9 5d fc	 fstp	 DWORD PTR _x_origin$[ebp]

; 133  : 		y_origin = get_ui_object_y_origin (obj);

  000c9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000cc	50		 push	 eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000d9	ff d0		 call	 eax
  000db	d9 5d f8	 fstp	 DWORD PTR _y_origin$[ebp]

; 134  : 	
; 135  : 		ui_set_origin (x_origin, y_origin);

  000de	51		 push	 ecx
  000df	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  000e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e9	51		 push	 ecx
  000ea	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_origin$[ebp]
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 136  : 		// test
; 137  : 
; 138  : 		old_active_screen = get_active_screen ();

  000f9	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  000fe	89 45 c4	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 139  : 
; 140  : 		if (get_ui_object_active_screen (obj))

  00101	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00104	50		 push	 eax
  00105	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00108	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  00111	ff d0		 call	 eax
  00113	85 c0		 test	 eax, eax
  00115	74 1a		 je	 SHORT $LN9@draw_area_

; 141  : 		{
; 142  : 	
; 143  : 			set_active_screen (get_ui_object_active_screen (obj));

  00117	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0011a	50		 push	 eax
  0011b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0011e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00120	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  00127	ff d0		 call	 eax
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 144  : 		}
; 145  : 		else

  0012f	eb 0b		 jmp	 SHORT $LN10@draw_area_
$LN9@draw_area_:

; 146  : 		{
; 147  : 
; 148  : 			set_active_screen (video_screen);

  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN10@draw_area_:

; 149  : 		}
; 150  : 
; 151  : 		// debug
; 152  : 		set_active_screen (video_screen);

  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 153  : 		// debug
; 154  : 
; 155  : 		//if (lock_screen (active_screen))
; 156  : 		{
; 157  : 	
; 158  : 			switch (get_ui_object_graphic_type (obj))

  00147	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0014a	50		 push	 eax
  0014b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0014e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00150	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic_type@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00157	ff d0		 call	 eax
  00159	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv157[ebp], eax
  0015f	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv157[ebp]
  00165	83 e9 01	 sub	 ecx, 1
  00168	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv157[ebp], ecx
  0016e	83 bd 4c ff ff
	ff 04		 cmp	 DWORD PTR tv157[ebp], 4
  00175	0f 87 65 04 00
	00		 ja	 $LN30@draw_area_
  0017b	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv157[ebp]
  00181	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN38@draw_area_[edx*4]
$LN11@draw_area_:

; 159  : 			{
; 160  : 	
; 161  : 				case UI_OBJECT_GRAPHIC:
; 162  : 				{
; 163  : 		
; 164  : 					unsigned short int
; 165  : 						*graphic;
; 166  : 	
; 167  : 					if (!get_ui_object_clear (obj))

  00188	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0018b	50		 push	 eax
  0018c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0018f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00191	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00198	ff d0		 call	 eax
  0019a	85 c0		 test	 eax, eax
  0019c	75 53		 jne	 SHORT $LN12@draw_area_

; 168  : 					{
; 169  : 
; 170  : 						graphic = get_ui_object_graphic (obj);

  0019e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001a1	50		 push	 eax
  001a2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA[edx*4]
  001ae	ff d0		 call	 eax
  001b0	89 45 b4	 mov	 DWORD PTR _graphic$10[ebp], eax

; 171  : 	
; 172  : 						ui_draw_graphic (x1, y1, x2, y2, graphic);

  001b3	8b 45 b4	 mov	 eax, DWORD PTR _graphic$10[ebp]
  001b6	50		 push	 eax
  001b7	51		 push	 ecx
  001b8	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c2	51		 push	 ecx
  001c3	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cd	51		 push	 ecx
  001ce	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d8	51		 push	 ecx
  001d9	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e3	e8 00 00 00 00	 call	 ?ui_draw_graphic@@YGXMMMMPAG@Z ; ui_draw_graphic

; 173  : 	
; 174  : 						redraw_flag = TRUE;

  001e8	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1

; 175  : 					}
; 176  : 					else

  001ef	eb 78		 jmp	 SHORT $LN14@draw_area_
$LN12@draw_area_:

; 177  : 					{
; 178  : 	
; 179  : 						parent = get_ui_object_parent (obj);

  001f1	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001f4	50		 push	 eax
  001f5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001f8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fa	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00201	ff d0		 call	 eax
  00203	89 45 b8	 mov	 DWORD PTR _parent$[ebp], eax

; 180  : 	
; 181  : 						if (parent)

  00206	83 7d b8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0020a	74 5d		 je	 SHORT $LN14@draw_area_

; 182  : 						{
; 183  : 	
; 184  : 							graphic = get_ui_object_graphic (parent);

  0020c	8b 45 b8	 mov	 eax, DWORD PTR _parent$[ebp]
  0020f	50		 push	 eax
  00210	8b 4d b8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00213	8b 11		 mov	 edx, DWORD PTR [ecx]
  00215	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA[edx*4]
  0021c	ff d0		 call	 eax
  0021e	89 45 b4	 mov	 DWORD PTR _graphic$10[ebp], eax

; 185  : 	
; 186  : 							ui_draw_part_graphic (x1, y1, x2, y2, x1, y1, graphic);

  00221	8b 45 b4	 mov	 eax, DWORD PTR _graphic$10[ebp]
  00224	50		 push	 eax
  00225	f3 0f 2c 4d ec	 cvttss2si ecx, DWORD PTR _y1$[ebp]
  0022a	51		 push	 ecx
  0022b	f3 0f 2c 55 f0	 cvttss2si edx, DWORD PTR _x1$[ebp]
  00230	52		 push	 edx
  00231	51		 push	 ecx
  00232	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00237	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023c	51		 push	 ecx
  0023d	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00242	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00247	51		 push	 ecx
  00248	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0024d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00252	51		 push	 ecx
  00253	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00258	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025d	e8 00 00 00 00	 call	 ?ui_draw_part_graphic@@YGXMMMMHHPAG@Z ; ui_draw_part_graphic

; 187  : 	
; 188  : 							redraw_flag = TRUE;

  00262	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1
$LN14@draw_area_:

; 189  : 						}
; 190  : 					}
; 191  : 	
; 192  : 					break;

  00269	e9 23 04 00 00	 jmp	 $LN2@draw_area_
$LN15@draw_area_:

; 193  : 				}
; 194  : 
; 195  : 				case UI_OBJECT_TEXTURE_GRAPHIC:
; 196  : 				{
; 197  : 		
; 198  : 					if (!get_ui_object_clear (obj))

  0026e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00271	50		 push	 eax
  00272	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00275	8b 11		 mov	 edx, DWORD PTR [ecx]
  00277	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0027e	ff d0		 call	 eax
  00280	85 c0		 test	 eax, eax
  00282	0f 85 51 01 00
	00		 jne	 $LN22@draw_area_

; 199  : 					{
; 200  : 					
; 201  : 						texture_graphic
; 202  : 							*graphic;
; 203  : 
; 204  : 						if ((get_ui_object_state (obj) == UI_OBJECT_STATE_ON) && (get_ui_object_selected_texture_graphic (obj)))

  00288	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0028b	50		 push	 eax
  0028c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0028f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00291	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00298	ff d0		 call	 eax
  0029a	83 f8 01	 cmp	 eax, 1
  0029d	75 2d		 jne	 SHORT $LN17@draw_area_
  0029f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002a2	50		 push	 eax
  002a3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_selected_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  002af	ff d0		 call	 eax
  002b1	85 c0		 test	 eax, eax
  002b3	74 17		 je	 SHORT $LN17@draw_area_

; 205  : 						{
; 206  : 					
; 207  : 							graphic = get_ui_object_selected_texture_graphic (obj);

  002b5	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002b8	50		 push	 eax
  002b9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002bc	8b 11		 mov	 edx, DWORD PTR [ecx]
  002be	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_selected_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  002c5	ff d0		 call	 eax
  002c7	89 45 b0	 mov	 DWORD PTR _graphic$9[ebp], eax
  002ca	eb 58		 jmp	 SHORT $LN20@draw_area_
$LN17@draw_area_:

; 208  : 						}
; 209  : 						else if ((get_ui_object_highlighted (obj)) && (get_ui_object_highlighted_texture_graphic (obj)))

  002cc	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002cf	50		 push	 eax
  002d0	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002d3	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  002dc	ff d0		 call	 eax
  002de	85 c0		 test	 eax, eax
  002e0	74 2d		 je	 SHORT $LN19@draw_area_
  002e2	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002e5	50		 push	 eax
  002e6	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002e9	8b 11		 mov	 edx, DWORD PTR [ecx]
  002eb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  002f2	ff d0		 call	 eax
  002f4	85 c0		 test	 eax, eax
  002f6	74 17		 je	 SHORT $LN19@draw_area_

; 210  : 						{
; 211  : 					
; 212  : 							graphic = get_ui_object_highlighted_texture_graphic (obj);

  002f8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002fb	50		 push	 eax
  002fc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002ff	8b 11		 mov	 edx, DWORD PTR [ecx]
  00301	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  00308	ff d0		 call	 eax
  0030a	89 45 b0	 mov	 DWORD PTR _graphic$9[ebp], eax

; 213  : 						}
; 214  : 						else

  0030d	eb 15		 jmp	 SHORT $LN20@draw_area_
$LN19@draw_area_:

; 215  : 						{
; 216  : 					
; 217  : 							graphic = get_ui_object_texture_graphic (obj);

  0030f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00312	50		 push	 eax
  00313	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00316	8b 11		 mov	 edx, DWORD PTR [ecx]
  00318	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  0031f	ff d0		 call	 eax
  00321	89 45 b0	 mov	 DWORD PTR _graphic$9[ebp], eax
$LN20@draw_area_:

; 218  : 						}
; 219  : 			
; 220  : 						if (graphic)

  00324	83 7d b0 00	 cmp	 DWORD PTR _graphic$9[ebp], 0
  00328	74 74		 je	 SHORT $LN21@draw_area_

; 221  : 						{
; 222  : 
; 223  : 							rgb_colour
; 224  : 								colour;
; 225  : 
; 226  : 							real_colour
; 227  : 								text_colour;
; 228  : 
; 229  : 							colour = get_ui_object_colour ( obj );

  0032a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0032d	50		 push	 eax
  0032e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00331	8b 11		 mov	 edx, DWORD PTR [ecx]
  00333	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[edx*4]
  0033a	ff d0		 call	 eax
  0033c	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00342	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00348	89 4d ac	 mov	 DWORD PTR _colour$8[ebp], ecx

; 230  : 
; 231  : 							text_colour.red = colour.r;

  0034b	8a 45 ae	 mov	 al, BYTE PTR _colour$8[ebp+2]
  0034e	88 45 aa	 mov	 BYTE PTR _text_colour$7[ebp+2], al

; 232  : 							text_colour.green = colour.g;

  00351	8a 45 ad	 mov	 al, BYTE PTR _colour$8[ebp+1]
  00354	88 45 a9	 mov	 BYTE PTR _text_colour$7[ebp+1], al

; 233  : 							text_colour.blue = colour.b;

  00357	8a 45 ac	 mov	 al, BYTE PTR _colour$8[ebp]
  0035a	88 45 a8	 mov	 BYTE PTR _text_colour$7[ebp], al

; 234  : 							text_colour.alpha = colour.a;

  0035d	8a 45 af	 mov	 al, BYTE PTR _colour$8[ebp+3]
  00360	88 45 ab	 mov	 BYTE PTR _text_colour$7[ebp+3], al

; 235  : 
; 236  : 							ui_draw_texture_graphic (x1, y1, x2, y2, graphic, text_colour);

  00363	8b 45 a8	 mov	 eax, DWORD PTR _text_colour$7[ebp]
  00366	50		 push	 eax
  00367	8b 4d b0	 mov	 ecx, DWORD PTR _graphic$9[ebp]
  0036a	51		 push	 ecx
  0036b	51		 push	 ecx
  0036c	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00371	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00376	51		 push	 ecx
  00377	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0037c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00381	51		 push	 ecx
  00382	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00387	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038c	51		 push	 ecx
  0038d	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00392	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00397	e8 00 00 00 00	 call	 ?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z ; ui_draw_texture_graphic

; 237  : 						}
; 238  : 						else

  0039c	eb 3b		 jmp	 SHORT $LN22@draw_area_
$LN21@draw_area_:

; 239  : 						{
; 240  : 				
; 241  : 							ui_draw_area (0, 0, x2 - x1, y2 - y1, obj);

  0039e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003a1	50		 push	 eax
  003a2	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  003a7	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _y1$[ebp]
  003ac	51		 push	 ecx
  003ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b2	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  003b7	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _x1$[ebp]
  003bc	51		 push	 ecx
  003bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c2	51		 push	 ecx
  003c3	0f 57 c0	 xorps	 xmm0, xmm0
  003c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003cb	51		 push	 ecx
  003cc	0f 57 c0	 xorps	 xmm0, xmm0
  003cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d4	e8 00 00 00 00	 call	 ?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z ; ui_draw_area
$LN22@draw_area_:

; 242  : 						}
; 243  : 					}
; 244  : 			
; 245  : 					break;

  003d9	e9 b3 02 00 00	 jmp	 $LN2@draw_area_
$LN23@draw_area_:

; 246  : 				}
; 247  : /*				{
; 248  : 
; 249  : 					if (!get_ui_object_clear (obj))
; 250  : 					{
; 251  : 
; 252  : 						real_colour
; 253  : 							start,
; 254  : 							end,
; 255  : 							colour;
; 256  : 
; 257  : 						int
; 258  : 							start_time,
; 259  : 							current_time,
; 260  : 							current_length,
; 261  : 							time_length;
; 262  : 
; 263  : 						int
; 264  : 							dr,
; 265  : 							dg,
; 266  : 							db,
; 267  : 							da;
; 268  : 
; 269  : 						float
; 270  : 							dx,
; 271  : 							dy,
; 272  : 							anim_x1,
; 273  : 							anim_y1,
; 274  : 							anim_x2,
; 275  : 							anim_y2;
; 276  : 
; 277  : 						float
; 278  : 							t;
; 279  : 
; 280  : 						texture_graphic
; 281  : 							*graphic;
; 282  : 		
; 283  : 						graphic = get_ui_object_texture_graphic (obj);
; 284  : 
; 285  : 						start_time = get_ui_object_start_time (obj);
; 286  : 
; 287  : 						start_time += get_ui_object_offset_time (obj);
; 288  : 
; 289  : 						current_time = get_system_time ();
; 290  : 
; 291  : 						current_length = current_time - start_time;
; 292  : 
; 293  : 						time_length = get_ui_object_time_length (obj);
; 294  : 
; 295  : 						t = ( float ) current_length / ( float ) time_length;
; 296  : 
; 297  : 						t = bound ( t, 0, 1 );
; 298  : 
; 299  : 						get_ui_object_start_real_colour ( obj, &start.red, &start.green, &start.blue, &start.alpha );
; 300  : 
; 301  : 						get_ui_object_end_real_colour ( obj, &end.red, &end.green, &end.blue, &end.alpha );
; 302  : 
; 303  : 						dr = ( int ) end.red - ( int ) start.red;
; 304  : 						dg = ( int ) end.green - ( int ) start.green;
; 305  : 						db = ( int ) end.blue - ( int ) start.blue;
; 306  : 						da = ( int ) end.alpha - ( int ) start.alpha;
; 307  : 
; 308  : 						dr *= t;
; 309  : 						dg *= t;
; 310  : 						db *= t;
; 311  : 						da *= t;
; 312  : 
; 313  : 						colour.red = ( ( int ) start.red + dr );
; 314  : 						colour.green = ( ( int ) start.green + dg );
; 315  : 						colour.blue = ( ( int ) start.blue + db );
; 316  : 						colour.alpha = ( ( int ) start.alpha + da );
; 317  : 
; 318  : 						anim_x1 = get_ui_object_anim_start_x (obj);
; 319  : 						anim_y1 = get_ui_object_anim_start_y (obj);
; 320  : 
; 321  : 						dx = get_ui_object_anim_end_x (obj) - anim_x1;
; 322  : 						dy = get_ui_object_anim_end_y (obj) - anim_y1;
; 323  : 
; 324  : 						anim_x1 += dx * t;
; 325  : 						anim_y1 += dy * t;
; 326  : 						anim_x2 = anim_x1 + get_ui_object_x_size (obj);
; 327  : 						anim_y2 = anim_y1 + get_ui_object_y_size (obj);
; 328  : 
; 329  : 						ui_draw_texture_graphic ( anim_x1, anim_y1, anim_x2, anim_y2, graphic, colour);
; 330  : 					}
; 331  : 
; 332  : 					break;
; 333  : 				}
; 334  : 				*/
; 335  : 	
; 336  : 				case UI_OBJECT_MEMORY_GRAPHIC:
; 337  : 				{
; 338  : 	
; 339  : 					memory_graphic = get_ui_object_memory_graphic (obj);

  003de	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003e1	50		 push	 eax
  003e2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  003e5	8b 11		 mov	 edx, DWORD PTR [ecx]
  003e7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_memory_graphic@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  003ee	ff d0		 call	 eax
  003f0	89 45 c0	 mov	 DWORD PTR _memory_graphic$[ebp], eax

; 340  : 
; 341  : 					//if (lock_screen (memory_graphic))
; 342  : 					{
; 343  : 		
; 344  : 						width = get_screen_width (memory_graphic);

  003f3	8b 45 c0	 mov	 eax, DWORD PTR _memory_graphic$[ebp]
  003f6	50		 push	 eax
  003f7	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  003fc	89 45 d4	 mov	 DWORD PTR _width$[ebp], eax

; 345  : 		
; 346  : 						height = get_screen_height (memory_graphic);

  003ff	8b 45 c0	 mov	 eax, DWORD PTR _memory_graphic$[ebp]
  00402	50		 push	 eax
  00403	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00408	89 45 d0	 mov	 DWORD PTR _height$[ebp], eax

; 347  : 		
; 348  : 						data = get_screen_data (memory_graphic);

  0040b	8b 45 c0	 mov	 eax, DWORD PTR _memory_graphic$[ebp]
  0040e	50		 push	 eax
  0040f	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  00414	89 45 bc	 mov	 DWORD PTR _data$[ebp], eax

; 349  : 		
; 350  : 						pitch = get_screen_pitch (memory_graphic);

  00417	8b 45 c0	 mov	 eax, DWORD PTR _memory_graphic$[ebp]
  0041a	50		 push	 eax
  0041b	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  00420	89 45 cc	 mov	 DWORD PTR _pitch$[ebp], eax

; 351  : 		
; 352  : 						masked = get_ui_object_clear (obj);

  00423	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00426	50		 push	 eax
  00427	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0042a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0042c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00433	ff d0		 call	 eax
  00435	89 45 d8	 mov	 DWORD PTR _masked$[ebp], eax

; 353  : 		
; 354  : 						ui_draw_memory_graphic (obj, x1, y1, x2, y2, width, height, pitch, masked);

  00438	8b 45 d8	 mov	 eax, DWORD PTR _masked$[ebp]
  0043b	50		 push	 eax
  0043c	8b 4d cc	 mov	 ecx, DWORD PTR _pitch$[ebp]
  0043f	51		 push	 ecx
  00440	8b 55 d0	 mov	 edx, DWORD PTR _height$[ebp]
  00443	52		 push	 edx
  00444	8b 45 d4	 mov	 eax, DWORD PTR _width$[ebp]
  00447	50		 push	 eax
  00448	51		 push	 ecx
  00449	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0044e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00453	51		 push	 ecx
  00454	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00459	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045e	51		 push	 ecx
  0045f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00464	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00469	51		 push	 ecx
  0046a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0046f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00474	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00477	51		 push	 ecx
  00478	e8 00 00 00 00	 call	 ?ui_draw_memory_graphic@@YGXPAUUI_OBJECT@@MMMMHHHH@Z ; ui_draw_memory_graphic

; 355  : 
; 356  : 						//unlock_screen (memory_graphic);
; 357  : 					}
; 358  : 	
; 359  : 					redraw_flag = TRUE;

  0047d	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1

; 360  : 	
; 361  : 					break;

  00484	e9 08 02 00 00	 jmp	 $LN2@draw_area_
$LN24@draw_area_:

; 362  : 				}
; 363  : 	
; 364  : 				case UI_OBJECT_ALPHA_GRAPHIC:
; 365  : 				{
; 366  : 
; 367  : 					unsigned short int
; 368  : 						*graphic;
; 369  : 
; 370  : 					if (!get_ui_object_clear (obj))

  00489	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0048c	50		 push	 eax
  0048d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00490	8b 11		 mov	 edx, DWORD PTR [ecx]
  00492	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00499	ff d0		 call	 eax
  0049b	85 c0		 test	 eax, eax
  0049d	75 53		 jne	 SHORT $LN25@draw_area_

; 371  : 					{
; 372  : 		
; 373  : 						graphic = get_ui_object_graphic (obj);

  0049f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  004a2	50		 push	 eax
  004a3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  004a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  004a8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA[edx*4]
  004af	ff d0		 call	 eax
  004b1	89 45 a4	 mov	 DWORD PTR _graphic$6[ebp], eax

; 374  : 	
; 375  : 						ui_draw_alpha_graphic (x1, y1, x2, y2, graphic);

  004b4	8b 45 a4	 mov	 eax, DWORD PTR _graphic$6[ebp]
  004b7	50		 push	 eax
  004b8	51		 push	 ecx
  004b9	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  004be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c3	51		 push	 ecx
  004c4	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  004c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ce	51		 push	 ecx
  004cf	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  004d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d9	51		 push	 ecx
  004da	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  004df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e4	e8 00 00 00 00	 call	 ?ui_draw_alpha_graphic@@YGXMMMMPAG@Z ; ui_draw_alpha_graphic

; 376  : 	
; 377  : 						redraw_flag = TRUE;

  004e9	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1

; 378  : 					}
; 379  : 					else

  004f0	eb 78		 jmp	 SHORT $LN27@draw_area_
$LN25@draw_area_:

; 380  : 					{
; 381  : 	
; 382  : 						parent = get_ui_object_parent (obj);

  004f2	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  004f5	50		 push	 eax
  004f6	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  004f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  004fb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00502	ff d0		 call	 eax
  00504	89 45 b8	 mov	 DWORD PTR _parent$[ebp], eax

; 383  : 	
; 384  : 						if (parent)

  00507	83 7d b8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0050b	74 5d		 je	 SHORT $LN27@draw_area_

; 385  : 						{
; 386  : 	
; 387  : 							graphic = get_ui_object_graphic (parent);

  0050d	8b 45 b8	 mov	 eax, DWORD PTR _parent$[ebp]
  00510	50		 push	 eax
  00511	8b 4d b8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00514	8b 11		 mov	 edx, DWORD PTR [ecx]
  00516	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA[edx*4]
  0051d	ff d0		 call	 eax
  0051f	89 45 a4	 mov	 DWORD PTR _graphic$6[ebp], eax

; 388  : 	
; 389  : 							ui_draw_part_alpha_graphic (x1, y1, x2, y2, x1, y1, graphic);

  00522	8b 45 a4	 mov	 eax, DWORD PTR _graphic$6[ebp]
  00525	50		 push	 eax
  00526	f3 0f 2c 4d ec	 cvttss2si ecx, DWORD PTR _y1$[ebp]
  0052b	51		 push	 ecx
  0052c	f3 0f 2c 55 f0	 cvttss2si edx, DWORD PTR _x1$[ebp]
  00531	52		 push	 edx
  00532	51		 push	 ecx
  00533	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00538	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053d	51		 push	 ecx
  0053e	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00543	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00548	51		 push	 ecx
  00549	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0054e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00553	51		 push	 ecx
  00554	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00559	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055e	e8 00 00 00 00	 call	 ?ui_draw_part_alpha_graphic@@YGXMMMMHHPAG@Z ; ui_draw_part_alpha_graphic

; 390  : 	
; 391  : 							redraw_flag = TRUE;

  00563	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1
$LN27@draw_area_:

; 392  : 						}
; 393  : 					}
; 394  : 	
; 395  : 					break;

  0056a	e9 22 01 00 00	 jmp	 $LN2@draw_area_
$LN28@draw_area_:

; 396  : 				}
; 397  : 	
; 398  : 				case UI_OBJECT_ZOOMABLE_PALETTE_GRAPHIC:
; 399  : 				{
; 400  : 		
; 401  : 					struct ZOOMABLE_GRAPHIC
; 402  : 						*zoomable_graphic;
; 403  : 
; 404  : 					if (!get_ui_object_clear (obj))

  0056f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00572	50		 push	 eax
  00573	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00576	8b 11		 mov	 edx, DWORD PTR [ecx]
  00578	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0057f	ff d0		 call	 eax
  00581	85 c0		 test	 eax, eax
  00583	75 56		 jne	 SHORT $LN29@draw_area_

; 405  : 					{
; 406  : 	
; 407  : 						zoomable_graphic = get_ui_object_zoomable_palette_graphic (obj);

  00585	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00588	50		 push	 eax
  00589	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0058c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0058e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_zoomable_palette_graphic@@3PAP6GPAUZOOMABLE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  00595	ff d0		 call	 eax
  00597	89 45 a0	 mov	 DWORD PTR _zoomable_graphic$5[ebp], eax

; 408  : 	
; 409  : 						draw_zoomable_graphic (zoomable_graphic, area->cx, area->cy, x1, y1, x2, y2, area->zoom);

  0059a	8b 45 c8	 mov	 eax, DWORD PTR _area$[ebp]
  0059d	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  005a0	51		 push	 ecx
  005a1	f3 0f 2c 55 e4	 cvttss2si edx, DWORD PTR _y2$[ebp]
  005a6	52		 push	 edx
  005a7	f3 0f 2c 45 e8	 cvttss2si eax, DWORD PTR _x2$[ebp]
  005ac	50		 push	 eax
  005ad	f3 0f 2c 4d ec	 cvttss2si ecx, DWORD PTR _y1$[ebp]
  005b2	51		 push	 ecx
  005b3	f3 0f 2c 55 f0	 cvttss2si edx, DWORD PTR _x1$[ebp]
  005b8	52		 push	 edx
  005b9	8b 45 c8	 mov	 eax, DWORD PTR _area$[ebp]
  005bc	f3 0f 2c 48 24	 cvttss2si ecx, DWORD PTR [eax+36]
  005c1	51		 push	 ecx
  005c2	8b 55 c8	 mov	 edx, DWORD PTR _area$[ebp]
  005c5	f3 0f 2c 42 20	 cvttss2si eax, DWORD PTR [edx+32]
  005ca	50		 push	 eax
  005cb	8b 4d a0	 mov	 ecx, DWORD PTR _zoomable_graphic$5[ebp]
  005ce	51		 push	 ecx
  005cf	e8 00 00 00 00	 call	 ?draw_zoomable_graphic@@YGXPAUZOOMABLE_GRAPHIC@@HHHHHHH@Z ; draw_zoomable_graphic

; 410  : 	
; 411  : 						redraw_flag = TRUE;

  005d4	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1
$LN29@draw_area_:

; 412  : 					}
; 413  : 	
; 414  : 					break;

  005db	e9 b1 00 00 00	 jmp	 $LN2@draw_area_
$LN30@draw_area_:

; 415  : 				}
; 416  : 	
; 417  : 				case UI_OBJECT_NO_GRAPHIC:
; 418  : 				default:
; 419  : 				{
; 420  : 	
; 421  : 					if (!get_ui_object_clear (obj))

  005e0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  005e3	50		 push	 eax
  005e4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  005e7	8b 11		 mov	 edx, DWORD PTR [ecx]
  005e9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  005f0	ff d0		 call	 eax
  005f2	85 c0		 test	 eax, eax
  005f4	0f 85 97 00 00
	00		 jne	 $LN31@draw_area_

; 422  : 					{
; 423  : 
; 424  : 						int
; 425  : 							old_state;
; 426  : 
; 427  : 						old_state = get_ui_object_state (obj);

  005fa	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  005fd	50		 push	 eax
  005fe	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00601	8b 11		 mov	 edx, DWORD PTR [ecx]
  00603	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0060a	ff d0		 call	 eax
  0060c	89 45 9c	 mov	 DWORD PTR _old_state$4[ebp], eax

; 428  : 
; 429  : 						if ((old_state == UI_OBJECT_STATE_OFF) && (get_ui_object_highlighted (obj)))

  0060f	83 7d 9c 00	 cmp	 DWORD PTR _old_state$4[ebp], 0
  00613	75 2a		 jne	 SHORT $LN32@draw_area_
  00615	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00618	50		 push	 eax
  00619	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0061c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0061e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00625	ff d0		 call	 eax
  00627	85 c0		 test	 eax, eax
  00629	74 14		 je	 SHORT $LN32@draw_area_

; 430  : 						{
; 431  : 
; 432  : 							set_ui_object_state (obj, UI_OBJECT_STATE_HIGHLIGHTED);

  0062b	6a 02		 push	 2
  0062d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00630	50		 push	 eax
  00631	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00634	8b 11		 mov	 edx, DWORD PTR [ecx]
  00636	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0063d	ff d0		 call	 eax
$LN32@draw_area_:

; 433  : 						}
; 434  : 	
; 435  : 						ui_draw_area (x1, y1, x2, y2, obj);

  0063f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00642	50		 push	 eax
  00643	51		 push	 ecx
  00644	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00649	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064e	51		 push	 ecx
  0064f	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00654	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00659	51		 push	 ecx
  0065a	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0065f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00664	51		 push	 ecx
  00665	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0066a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066f	e8 00 00 00 00	 call	 ?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z ; ui_draw_area

; 436  : 
; 437  : 						set_ui_object_state (obj, old_state);

  00674	8b 45 9c	 mov	 eax, DWORD PTR _old_state$4[ebp]
  00677	50		 push	 eax
  00678	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0067b	51		 push	 ecx
  0067c	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0067f	8b 02		 mov	 eax, DWORD PTR [edx]
  00681	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00688	ff d1		 call	 ecx

; 438  : 	
; 439  : 						redraw_flag = TRUE;

  0068a	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1
$LN31@draw_area_:
$LN2@draw_area_:

; 440  : 					}
; 441  : 				}
; 442  : 			}
; 443  : 	
; 444  : 			// text position
; 445  : 	
; 446  : 			if (get_ui_object_text (obj))

  00691	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00694	50		 push	 eax
  00695	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00698	8b 11		 mov	 edx, DWORD PTR [ecx]
  0069a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  006a1	ff d0		 call	 eax
  006a3	85 c0		 test	 eax, eax
  006a5	0f 84 50 01 00
	00		 je	 $LN33@draw_area_

; 447  : 			{
; 448  : 
; 449  : 				const char
; 450  : 					*text_ptr;
; 451  : 
; 452  : 				int
; 453  : 					count;
; 454  : 	
; 455  : 				ui_save_current_font ();

  006ab	e8 00 00 00 00	 call	 ?ui_save_current_font@@YGXXZ ; ui_save_current_font

; 456  : 
; 457  : 				ui_set_object_font (obj);

  006b0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  006b3	50		 push	 eax
  006b4	e8 00 00 00 00	 call	 ?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z ; ui_set_object_font

; 458  : 
; 459  : 				// count number of lines spanned
; 460  : 
; 461  : 				text_ptr = get_ui_object_text (obj);

  006b9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  006bc	50		 push	 eax
  006bd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  006c2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  006c9	ff d0		 call	 eax
  006cb	89 45 98	 mov	 DWORD PTR _text_ptr$3[ebp], eax

; 462  : 
; 463  : 				count = 0;

  006ce	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _count$2[ebp], 0
$LN4@draw_area_:

; 464  : 
; 465  : 				while (text_ptr)

  006d5	83 7d 98 00	 cmp	 DWORD PTR _text_ptr$3[ebp], 0
  006d9	74 2b		 je	 SHORT $LN5@draw_area_

; 466  : 				{
; 467  : 
; 468  : 					count ++;

  006db	8b 45 94	 mov	 eax, DWORD PTR _count$2[ebp]
  006de	83 c0 01	 add	 eax, 1
  006e1	89 45 94	 mov	 DWORD PTR _count$2[ebp], eax

; 469  : 
; 470  : 					text_ptr = strchr (text_ptr, '\n');

  006e4	6a 0a		 push	 10			; 0000000aH
  006e6	8b 45 98	 mov	 eax, DWORD PTR _text_ptr$3[ebp]
  006e9	50		 push	 eax
  006ea	e8 00 00 00 00	 call	 _strchr
  006ef	83 c4 08	 add	 esp, 8
  006f2	89 45 98	 mov	 DWORD PTR _text_ptr$3[ebp], eax

; 471  : 
; 472  : 					// if found, step over it and display the next part of string
; 473  : 					if (text_ptr)

  006f5	83 7d 98 00	 cmp	 DWORD PTR _text_ptr$3[ebp], 0
  006f9	74 09		 je	 SHORT $LN34@draw_area_

; 474  : 					{
; 475  : 
; 476  : 						text_ptr ++;

  006fb	8b 45 98	 mov	 eax, DWORD PTR _text_ptr$3[ebp]
  006fe	83 c0 01	 add	 eax, 1
  00701	89 45 98	 mov	 DWORD PTR _text_ptr$3[ebp], eax
$LN34@draw_area_:

; 477  : 					}
; 478  : 				}

  00704	eb cf		 jmp	 SHORT $LN4@draw_area_
$LN5@draw_area_:

; 479  : 
; 480  : 				// now draw text
; 481  : 
; 482  : 				text_ptr = get_ui_object_text (obj);

  00706	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00709	50		 push	 eax
  0070a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0070d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0070f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00716	ff d0		 call	 eax
  00718	89 45 98	 mov	 DWORD PTR _text_ptr$3[ebp], eax

; 483  : 			
; 484  : 				get_text_y_position (&y3, y1, y2, text_ptr, get_ui_object_text_justify (obj), count);

  0071b	8b 45 94	 mov	 eax, DWORD PTR _count$2[ebp]
  0071e	50		 push	 eax
  0071f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00722	51		 push	 ecx
  00723	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00726	8b 02		 mov	 eax, DWORD PTR [edx]
  00728	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA[eax*4]
  0072f	ff d1		 call	 ecx
  00731	50		 push	 eax
  00732	8b 55 98	 mov	 edx, DWORD PTR _text_ptr$3[ebp]
  00735	52		 push	 edx
  00736	51		 push	 ecx
  00737	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0073c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00741	51		 push	 ecx
  00742	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00747	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0074c	8d 45 e0	 lea	 eax, DWORD PTR _y3$[ebp]
  0074f	50		 push	 eax
  00750	e8 00 00 00 00	 call	 ?get_text_y_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@H@Z ; get_text_y_position
$LN6@draw_area_:

; 485  : 
; 486  : 				while (text_ptr)

  00755	83 7d 98 00	 cmp	 DWORD PTR _text_ptr$3[ebp], 0
  00759	0f 84 90 00 00
	00		 je	 $LN7@draw_area_

; 487  : 				{
; 488  : 			
; 489  : 					get_text_x_position (&x, x1, x2, text_ptr, get_ui_object_text_justify (obj));

  0075f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00762	50		 push	 eax
  00763	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00766	8b 11		 mov	 edx, DWORD PTR [ecx]
  00768	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  0076f	ff d0		 call	 eax
  00771	50		 push	 eax
  00772	8b 4d 98	 mov	 ecx, DWORD PTR _text_ptr$3[ebp]
  00775	51		 push	 ecx
  00776	51		 push	 ecx
  00777	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0077c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00781	51		 push	 ecx
  00782	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00787	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0078c	8d 55 f4	 lea	 edx, DWORD PTR _x$[ebp]
  0078f	52		 push	 edx
  00790	e8 00 00 00 00	 call	 ?get_text_x_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@@Z ; get_text_x_position

; 490  : 			
; 491  : 					ui_display_text (text_ptr, x, y3);

  00795	51		 push	 ecx
  00796	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y3$[ebp]
  0079b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a0	51		 push	 ecx
  007a1	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  007a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ab	8b 45 98	 mov	 eax, DWORD PTR _text_ptr$3[ebp]
  007ae	50		 push	 eax
  007af	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  007b4	dd d8		 fstp	 ST(0)

; 492  : 
; 493  : 					y3 += ui_get_font_height ();

  007b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  007bb	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  007c0	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _y3$[ebp]
  007c5	f3 0f 11 45 e0	 movss	 DWORD PTR _y3$[ebp], xmm0

; 494  : 
; 495  : 					// check for carriage return
; 496  : 					text_ptr = strchr (text_ptr, '\n');

  007ca	6a 0a		 push	 10			; 0000000aH
  007cc	8b 45 98	 mov	 eax, DWORD PTR _text_ptr$3[ebp]
  007cf	50		 push	 eax
  007d0	e8 00 00 00 00	 call	 _strchr
  007d5	83 c4 08	 add	 esp, 8
  007d8	89 45 98	 mov	 DWORD PTR _text_ptr$3[ebp], eax

; 497  : 
; 498  : 					// if found, step over it and display the next part of string
; 499  : 					if (text_ptr)

  007db	83 7d 98 00	 cmp	 DWORD PTR _text_ptr$3[ebp], 0
  007df	74 09		 je	 SHORT $LN35@draw_area_

; 500  : 					{
; 501  : 
; 502  : 						text_ptr ++;

  007e1	8b 45 98	 mov	 eax, DWORD PTR _text_ptr$3[ebp]
  007e4	83 c0 01	 add	 eax, 1
  007e7	89 45 98	 mov	 DWORD PTR _text_ptr$3[ebp], eax
$LN35@draw_area_:

; 503  : 					}
; 504  : 				}

  007ea	e9 66 ff ff ff	 jmp	 $LN6@draw_area_
$LN7@draw_area_:

; 505  : 
; 506  : 				ui_restore_current_font ();

  007ef	e8 00 00 00 00	 call	 ?ui_restore_current_font@@YGXXZ ; ui_restore_current_font

; 507  : 	
; 508  : 				redraw_flag = TRUE;

  007f4	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1
$LN33@draw_area_:

; 509  : 			}
; 510  : 	
; 511  : 			if (redraw_flag)

  007fb	83 7d dc 00	 cmp	 DWORD PTR _redraw_flag$[ebp], 0
  007ff	74 5d		 je	 SHORT $LN36@draw_area_

; 512  : 			{
; 513  : 		
; 514  : 				set_ui_repaint_area (x1 + ui_x_origin, y1 + ui_y_origin, x2 + ui_x_origin + 1, y2 + ui_y_origin + 1);

  00801	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00806	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_y_origin@@3MA
  0080e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00816	f3 0f 2c c0	 cvttss2si eax, xmm0
  0081a	50		 push	 eax
  0081b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00820	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_x_origin@@3MA
  00828	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00830	f3 0f 2c c8	 cvttss2si ecx, xmm0
  00834	51		 push	 ecx
  00835	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0083a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_y_origin@@3MA
  00842	f3 0f 2c d0	 cvttss2si edx, xmm0
  00846	52		 push	 edx
  00847	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0084c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_x_origin@@3MA
  00854	f3 0f 2c c0	 cvttss2si eax, xmm0
  00858	50		 push	 eax
  00859	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area
$LN36@draw_area_:

; 515  : 			}
; 516  : 	
; 517  : 			//unlock_screen (active_screen);
; 518  : 		}
; 519  : 
; 520  : 		set_active_screen (old_active_screen);

  0085e	8b 45 c4	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  00861	50		 push	 eax
  00862	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 521  : 
; 522  : 		area->redraw --;

  00867	8b 45 c8	 mov	 eax, DWORD PTR _area$[ebp]
  0086a	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0086d	c1 e9 07	 shr	 ecx, 7
  00870	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00876	83 e9 01	 sub	 ecx, 1
  00879	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0087f	c1 e1 07	 shl	 ecx, 7
  00882	8b 55 c8	 mov	 edx, DWORD PTR _area$[ebp]
  00885	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00888	25 7f 80 ff ff	 and	 eax, -32641		; ffff807fH
  0088d	0b c1		 or	 eax, ecx
  0088f	8b 4d c8	 mov	 ecx, DWORD PTR _area$[ebp]
  00892	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 523  : 
; 524  : 		call_ui_object_draw_function (obj, NULL);

  00895	6a 00		 push	 0
  00897	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0089a	50		 push	 eax
  0089b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0089e	8b 11		 mov	 edx, DWORD PTR [ecx]
  008a0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_call_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[edx*4]
  008a7	ff d0		 call	 eax
$LN8@draw_area_:

; 525  : 	}
; 526  : }

  008a9	5f		 pop	 edi
  008aa	5e		 pop	 esi
  008ab	5b		 pop	 ebx
  008ac	8b e5		 mov	 esp, ebp
  008ae	5d		 pop	 ebp
  008af	c2 04 00	 ret	 4
  008b2	66 90		 npad	 2
$LN38@draw_area_:
  008b4	00 00 00 00	 DD	 $LN11@draw_area_
  008b8	00 00 00 00	 DD	 $LN23@draw_area_
  008bc	00 00 00 00	 DD	 $LN24@draw_area_
  008c0	00 00 00 00	 DD	 $LN28@draw_area_
  008c4	00 00 00 00	 DD	 $LN15@draw_area_
?draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP		; draw_area_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_draw.c
;	COMDAT ?reset_tool_tips@@YGXXZ
_TEXT	SEGMENT
?reset_tool_tips@@YGXXZ PROC				; reset_tool_tips, COMDAT

; 628  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  : 
; 630  : 	if (tool_tips)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A, 0 ; tool_tips
  00010	74 19		 je	 SHORT $LN1@reset_tool

; 631  : 	{
; 632  : 
; 633  : 		set_ui_object_drawable (tool_tips, FALSE);

  00012	6a 00		 push	 0
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  00019	50		 push	 eax
  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tool_tips@@3PAUUI_OBJECT@@A ; tool_tips
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00029	ff d0		 call	 eax
$LN1@reset_tool:

; 634  : 	}
; 635  : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?reset_tool_tips@@YGXXZ ENDP				; reset_tool_tips
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_draw.c
;	COMDAT ?overload_area_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_area_ui_object_draw_functions@@YGXH@Z PROC	; overload_area_ui_object_draw_functions, COMDAT

; 616  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 617  : 
; 618  : 	fn_draw_ui_object [type] = draw_area_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z ; draw_area_ui_object

; 619  : 
; 620  : 	fn_tool_tips_draw_ui_object [type] = tool_tips_draw_area_ui_object;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_tool_tips_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?tool_tips_draw_area_ui_object@@YGXPAUUI_OBJECT@@@Z ; tool_tips_draw_area_ui_object

; 621  : }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?overload_area_ui_object_draw_functions@@YGXH@Z ENDP	; overload_area_ui_object_draw_functions
_TEXT	ENDS
END
