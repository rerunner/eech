; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\cockpits\apache\ap_lamps.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A		; apache_lamps
PUBLIC	??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@ ; `string'
_BSS	SEGMENT
?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A DD 01H DUP (?)	; apache_lamps
_BSS	ENDS
;	COMDAT ??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@
CONST	SEGMENT
??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@ DB 'Cannot draw lamps '
	DB	'on panel', 00H				; `string'
CONST	ENDS
PUBLIC	?initialise_apache_lamps@@YGXXZ			; initialise_apache_lamps
PUBLIC	?draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z ; draw_apache_indicator_lamps
PUBLIC	?draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z ; draw_apache_fire_detector_lamps
PUBLIC	?draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z ; draw_apache_armament_lamps
PUBLIC	?draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z	; draw_apache_mfd_lamps
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4018000000000000
PUBLIC	__real@401c000000000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@4022000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4026000000000000
EXTRN	_memset:PROC
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z:PROC ; blit_rgb_alpha_masked_sprite
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?graphics_files@@3PAUFILE_DATA@@A:BYTE		; graphics_files
EXTRN	?ix_640_480@@3HA:DWORD				; ix_640_480
EXTRN	?iy_640_480@@3HA:DWORD				; iy_640_480
EXTRN	?test_cockpit_instruments@@3HA:DWORD		; test_cockpit_instruments
EXTRN	?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A:DWORD ; base_cockpit_graphics_file
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A DB 01cH DUP (?) ; sprite_values
?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_apache_indicator_lamps'::`5'::timer
?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_apache_fire_detector_lamps'::`5'::timer
?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_apache_armament_lamps'::`5'::timer
?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_apache_mfd_lamps'::`5'::timer
_BSS	ENDS
;	COMDAT __real@4026000000000000
CONST	SEGMENT
__real@4026000000000000 DQ 04026000000000000r	; 11
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4022000000000000
CONST	SEGMENT
__real@4022000000000000 DQ 04022000000000000r	; 9
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@401c000000000000
CONST	SEGMENT
__real@401c000000000000 DQ 0401c000000000000r	; 7
CONST	ENDS
;	COMDAT __real@4018000000000000
CONST	SEGMENT
__real@4018000000000000 DQ 04018000000000000r	; 6
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
_DATA	SEGMENT
?lamp_error@@3PADA DD FLAT:??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@ ; lamp_error
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_lamps.c
;	COMDAT ?draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv88 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z PROC	; draw_apache_mfd_lamps, COMDAT

; 589  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 590  : 	unsigned char
; 591  : 		*sprite_data,
; 592  : 		*mask_data;
; 593  : 
; 594  : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 595  : 
; 596  : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 597  : 
; 598  : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 e0 00 00
	00		 je	 $LN12@draw_apach

; 599  : 	{
; 600  : 		static float
; 601  : 			timer = 0.0;
; 602  : 
; 603  : 		timer += get_delta_time ();

  0003e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00046	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0004e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 604  : 
; 605  : 		apache_lamps.mfd_lamp_1 = 0;

  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0005b	25 ff bf ff ff	 and	 eax, -16385		; ffffbfffH
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 606  : 		apache_lamps.mfd_lamp_2 = 0;

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0006a	25 ff 7f ff ff	 and	 eax, -32769		; ffff7fffH
  0006f	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 607  : 
; 608  : 		if (timer < (ONE_SECOND * 1.0))

  00074	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0007c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00084	66 0f 2f c8	 comisd	 xmm1, xmm0
  00088	76 05		 jbe	 SHORT $LN5@draw_apach
  0008a	e9 8f 00 00 00	 jmp	 $LN12@draw_apach
$LN5@draw_apach:

; 609  : 		{
; 610  : 		}
; 611  : 		else if (timer < (ONE_SECOND * 2.0))

  0008f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00097	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  0009f	66 0f 2f c8	 comisd	 xmm1, xmm0
  000a3	76 11		 jbe	 SHORT $LN7@draw_apach

; 612  : 		{
; 613  : 			apache_lamps.mfd_lamp_1 = 1;

  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000aa	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  000af	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  000b4	eb 68		 jmp	 SHORT $LN12@draw_apach
$LN7@draw_apach:

; 614  : 		}
; 615  : 		else if (timer < (ONE_SECOND * 3.0))

  000b6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000be	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  000c6	66 0f 2f c8	 comisd	 xmm1, xmm0
  000ca	76 11		 jbe	 SHORT $LN9@draw_apach

; 616  : 		{
; 617  : 			apache_lamps.mfd_lamp_2 = 1;

  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000d1	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  000d6	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  000db	eb 41		 jmp	 SHORT $LN12@draw_apach
$LN9@draw_apach:

; 618  : 		}
; 619  : 		else if (timer < (ONE_SECOND * 4.0))

  000dd	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000e5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  000ed	66 0f 2f c8	 comisd	 xmm1, xmm0
  000f1	76 20		 jbe	 SHORT $LN11@draw_apach

; 620  : 		{
; 621  : 			apache_lamps.mfd_lamp_1 = 1;

  000f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000f8	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  000fd	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 622  : 			apache_lamps.mfd_lamp_2 = 1;

  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00107	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  0010c	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 623  : 		}
; 624  : 		else

  00111	eb 0b		 jmp	 SHORT $LN12@draw_apach
$LN11@draw_apach:

; 625  : 		{
; 626  : 			timer = 0.0;

  00113	0f 57 c0	 xorps	 xmm0, xmm0
  00116	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN12@draw_apach:

; 627  : 		}
; 628  : 	}
; 629  : 
; 630  : 	switch (panel)

  0011e	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00121	89 45 b4	 mov	 DWORD PTR tv88[ebp], eax
  00124	8b 4d b4	 mov	 ecx, DWORD PTR tv88[ebp]
  00127	83 e9 17	 sub	 ecx, 23			; 00000017H
  0012a	89 4d b4	 mov	 DWORD PTR tv88[ebp], ecx
  0012d	83 7d b4 06	 cmp	 DWORD PTR tv88[ebp], 6
  00131	0f 87 48 04 00
	00		 ja	 $LN28@draw_apach
  00137	8b 55 b4	 mov	 edx, DWORD PTR tv88[ebp]
  0013a	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN30@draw_apach[edx*4]
$LN13@draw_apach:

; 631  : 	{
; 632  : 		////////////////////////////////////////
; 633  : 		case COCKPIT_PANEL_DOWN20_LEFT30:
; 634  : 		////////////////////////////////////////
; 635  : 		{
; 636  : 			#define X_ORG (577)
; 637  : 			#define Y_ORG (309)
; 638  : 
; 639  : 			draw_lamp (apache_lamps.mfd_lamp_1 , X_ORG +  11, Y_ORG +   7,  51, 187,  31,  29,   0);	// (100% alpha)

  00141	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00146	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  00149	83 e0 01	 and	 eax, 1
  0014c	74 5f		 je	 SHORT $LN14@draw_apach
  0014e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00153	05 4c 02 00 00	 add	 eax, 588		; 0000024cH
  00158	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0015d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00162	05 3c 01 00 00	 add	 eax, 316		; 0000013cH
  00167	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0016c	c7 05 08 00 00
	00 33 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 51 ; 00000033H
  00176	c7 05 0c 00 00
	00 bb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 187 ; 000000bbH
  00180	c7 05 10 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 31 ; 0000001fH
  0018a	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  00194	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  0019b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  001a0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  001a3	50		 push	 eax
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  001a7	51		 push	 ecx
  001a8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN14@draw_apach:

; 640  : 			draw_lamp (apache_lamps.mfd_lamp_2 , X_ORG +   7, Y_ORG +  30,  47, 210,  29,  30,  13);	// (95% alpha)

  001ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  001b2	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  001b5	83 e0 01	 and	 eax, 1
  001b8	74 5f		 je	 SHORT $LN15@draw_apach
  001ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  001bf	05 48 02 00 00	 add	 eax, 584		; 00000248H
  001c4	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  001c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  001ce	05 53 01 00 00	 add	 eax, 339		; 00000153H
  001d3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  001d8	c7 05 08 00 00
	00 2f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 47 ; 0000002fH
  001e2	c7 05 0c 00 00
	00 d2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 210 ; 000000d2H
  001ec	c7 05 10 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 29 ; 0000001dH
  001f6	c7 05 14 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 30 ; 0000001eH
  00200	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  00207	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0020c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0020f	50		 push	 eax
  00210	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00213	51		 push	 ecx
  00214	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN15@draw_apach:

; 641  : 
; 642  : 			#undef X_ORG
; 643  : 			#undef Y_ORG
; 644  : 
; 645  : 			break;

  00219	e9 6f 03 00 00	 jmp	 $LN2@draw_apach
$LN16@draw_apach:

; 646  : 		}
; 647  : 		////////////////////////////////////////
; 648  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 649  : 		////////////////////////////////////////
; 650  : 		{
; 651  : 			#define X_ORG (305)
; 652  : 			#define Y_ORG (283)
; 653  : 
; 654  : 			draw_lamp (apache_lamps.mfd_lamp_1 , X_ORG +   3, Y_ORG +   3,   3, 183,  24,  22,   0);	// (100% alpha)

  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00223	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  00226	83 e0 01	 and	 eax, 1
  00229	74 5f		 je	 SHORT $LN17@draw_apach
  0022b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00230	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00235	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0023f	05 1e 01 00 00	 add	 eax, 286		; 0000011eH
  00244	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00249	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 3
  00253	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  0025d	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00267	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  00271	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  00278	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0027d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00280	50		 push	 eax
  00281	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00284	51		 push	 ecx
  00285	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN17@draw_apach:

; 655  : 			draw_lamp (apache_lamps.mfd_lamp_2 , X_ORG +   3, Y_ORG +  25,   3, 205,  24,  21,  13);	// (95% alpha)

  0028a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0028f	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  00292	83 e0 01	 and	 eax, 1
  00295	74 5f		 je	 SHORT $LN18@draw_apach
  00297	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0029c	05 34 01 00 00	 add	 eax, 308		; 00000134H
  002a1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  002a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  002ab	05 34 01 00 00	 add	 eax, 308		; 00000134H
  002b0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  002b5	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 3
  002bf	c7 05 0c 00 00
	00 cd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 205 ; 000000cdH
  002c9	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  002d3	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  002dd	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  002e4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  002e9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  002ec	50		 push	 eax
  002ed	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  002f0	51		 push	 ecx
  002f1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN18@draw_apach:

; 656  : 
; 657  : 			#undef X_ORG
; 658  : 			#undef Y_ORG
; 659  : 
; 660  : 			break;

  002f6	e9 92 02 00 00	 jmp	 $LN2@draw_apach
$LN19@draw_apach:

; 661  : 		}
; 662  : 		////////////////////////////////////////
; 663  : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 664  : 		////////////////////////////////////////
; 665  : 		{
; 666  : 			#define X_ORG (17)
; 667  : 			#define Y_ORG (311)
; 668  : 
; 669  : 			draw_lamp (apache_lamps.mfd_lamp_1 , X_ORG +   3, Y_ORG +   3,  93, 183,  33,  31,   0);	// (100% alpha)

  002fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00300	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  00303	83 e0 01	 and	 eax, 1
  00306	74 5d		 je	 SHORT $LN20@draw_apach
  00308	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0030d	83 c0 14	 add	 eax, 20			; 00000014H
  00310	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00315	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0031a	05 3a 01 00 00	 add	 eax, 314		; 0000013aH
  0031f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00324	c7 05 08 00 00
	00 5d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 93 ; 0000005dH
  0032e	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  00338	c7 05 10 00 00
	00 21 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 33 ; 00000021H
  00342	c7 05 14 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 31 ; 0000001fH
  0034c	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  00353	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00358	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0035b	50		 push	 eax
  0035c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0035f	51		 push	 ecx
  00360	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN20@draw_apach:

; 670  : 			draw_lamp (apache_lamps.mfd_lamp_2 , X_ORG +   8, Y_ORG +  27,  98, 207,  33,  31,  13);	// (95% alpha)

  00365	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0036a	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  0036d	83 e0 01	 and	 eax, 1
  00370	74 5d		 je	 SHORT $LN21@draw_apach
  00372	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00377	83 c0 19	 add	 eax, 25			; 00000019H
  0037a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00384	05 52 01 00 00	 add	 eax, 338		; 00000152H
  00389	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0038e	c7 05 08 00 00
	00 62 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 98 ; 00000062H
  00398	c7 05 0c 00 00
	00 cf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 207 ; 000000cfH
  003a2	c7 05 10 00 00
	00 21 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 33 ; 00000021H
  003ac	c7 05 14 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 31 ; 0000001fH
  003b6	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  003bd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  003c2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  003c5	50		 push	 eax
  003c6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  003c9	51		 push	 ecx
  003ca	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN21@draw_apach:

; 671  : 
; 672  : 			#undef X_ORG
; 673  : 			#undef Y_ORG
; 674  : 
; 675  : 			break;

  003cf	e9 b9 01 00 00	 jmp	 $LN2@draw_apach
$LN22@draw_apach:

; 676  : 		}
; 677  : 		////////////////////////////////////////
; 678  : 		case COCKPIT_PANEL_SPECIAL_APACHE_LHS_MFD:
; 679  : 		////////////////////////////////////////
; 680  : 		{
; 681  : 			#define X_ORG (536)
; 682  : 			#define Y_ORG (9)
; 683  : 
; 684  : 			draw_lamp (apache_lamps.mfd_lamp_1 , X_ORG +   2, Y_ORG +   8, 142, 188,  63,  56,   0);	// (100% alpha)

  003d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  003d9	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  003dc	83 e0 01	 and	 eax, 1
  003df	74 5d		 je	 SHORT $LN23@draw_apach
  003e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  003e6	05 1a 02 00 00	 add	 eax, 538		; 0000021aH
  003eb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  003f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  003f5	83 c0 11	 add	 eax, 17			; 00000011H
  003f8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  003fd	c7 05 08 00 00
	00 8e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 142 ; 0000008eH
  00407	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  00411	c7 05 10 00 00
	00 3f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 63 ; 0000003fH
  0041b	c7 05 14 00 00
	00 38 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 56 ; 00000038H
  00425	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  0042c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00431	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00434	50		 push	 eax
  00435	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00438	51		 push	 ecx
  00439	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN23@draw_apach:

; 685  : 			draw_lamp (apache_lamps.mfd_lamp_2 , X_ORG +   2, Y_ORG +  64, 142, 244,  63,  56,  13);	// (95% alpha)

  0043e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00443	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  00446	83 e0 01	 and	 eax, 1
  00449	74 5d		 je	 SHORT $LN24@draw_apach
  0044b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00450	05 1a 02 00 00	 add	 eax, 538		; 0000021aH
  00455	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0045a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0045f	83 c0 49	 add	 eax, 73			; 00000049H
  00462	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00467	c7 05 08 00 00
	00 8e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 142 ; 0000008eH
  00471	c7 05 0c 00 00
	00 f4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 244 ; 000000f4H
  0047b	c7 05 10 00 00
	00 3f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 63 ; 0000003fH
  00485	c7 05 14 00 00
	00 38 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 56 ; 00000038H
  0048f	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  00496	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0049b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0049e	50		 push	 eax
  0049f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  004a2	51		 push	 ecx
  004a3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN24@draw_apach:

; 686  : 
; 687  : 			#undef X_ORG
; 688  : 			#undef Y_ORG
; 689  : 
; 690  : 			break;

  004a8	e9 e0 00 00 00	 jmp	 $LN2@draw_apach
$LN25@draw_apach:

; 691  : 		}
; 692  : 		////////////////////////////////////////
; 693  : 		case COCKPIT_PANEL_SPECIAL_APACHE_RHS_MFD:
; 694  : 		////////////////////////////////////////
; 695  : 		{
; 696  : 			#define X_ORG (35)
; 697  : 			#define Y_ORG (11)
; 698  : 
; 699  : 			draw_lamp (apache_lamps.mfd_lamp_1 , X_ORG +   4, Y_ORG +   8, 214, 188,  63,  56,   0);	// (100% alpha)

  004ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  004b2	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  004b5	83 e0 01	 and	 eax, 1
  004b8	74 5b		 je	 SHORT $LN26@draw_apach
  004ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  004bf	83 c0 27	 add	 eax, 39			; 00000027H
  004c2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  004c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  004cc	83 c0 13	 add	 eax, 19			; 00000013H
  004cf	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  004d4	c7 05 08 00 00
	00 d6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 214 ; 000000d6H
  004de	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  004e8	c7 05 10 00 00
	00 3f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 63 ; 0000003fH
  004f2	c7 05 14 00 00
	00 38 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 56 ; 00000038H
  004fc	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  00503	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00508	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0050b	50		 push	 eax
  0050c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0050f	51		 push	 ecx
  00510	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN26@draw_apach:

; 700  : 			draw_lamp (apache_lamps.mfd_lamp_2 , X_ORG +   4, Y_ORG +  64, 214, 244,  63,  56,  13);	// (95% alpha)

  00515	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0051a	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  0051d	83 e0 01	 and	 eax, 1
  00520	74 5b		 je	 SHORT $LN27@draw_apach
  00522	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00527	83 c0 27	 add	 eax, 39			; 00000027H
  0052a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0052f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00534	83 c0 4b	 add	 eax, 75			; 0000004bH
  00537	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0053c	c7 05 08 00 00
	00 d6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 214 ; 000000d6H
  00546	c7 05 0c 00 00
	00 f4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 244 ; 000000f4H
  00550	c7 05 10 00 00
	00 3f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 63 ; 0000003fH
  0055a	c7 05 14 00 00
	00 38 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 56 ; 00000038H
  00564	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  0056b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00570	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00573	50		 push	 eax
  00574	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00577	51		 push	 ecx
  00578	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN27@draw_apach:

; 701  : 
; 702  : 			#undef X_ORG
; 703  : 			#undef Y_ORG
; 704  : 
; 705  : 			break;

  0057d	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN28@draw_apach:

; 706  : 		}
; 707  : 		////////////////////////////////////////
; 708  : 		default:
; 709  : 		////////////////////////////////////////
; 710  : 		{
; 711  : 			debug_fatal (lamp_error);

  0057f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PADA
  00584	50		 push	 eax
  00585	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0058a	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 712  : 
; 713  : 			break;
; 714  : 		}
; 715  : 	}
; 716  : }

  0058d	5f		 pop	 edi
  0058e	5e		 pop	 esi
  0058f	5b		 pop	 ebx
  00590	8b e5		 mov	 esp, ebp
  00592	5d		 pop	 ebp
  00593	c2 04 00	 ret	 4
  00596	66 90		 npad	 2
$LN30@draw_apach:
  00598	00 00 00 00	 DD	 $LN13@draw_apach
  0059c	00 00 00 00	 DD	 $LN16@draw_apach
  005a0	00 00 00 00	 DD	 $LN19@draw_apach
  005a4	00 00 00 00	 DD	 $LN28@draw_apach
  005a8	00 00 00 00	 DD	 $LN28@draw_apach
  005ac	00 00 00 00	 DD	 $LN22@draw_apach
  005b0	00 00 00 00	 DD	 $LN25@draw_apach
?draw_apache_mfd_lamps@@YGXW4COCKPIT_PANELS@@@Z ENDP	; draw_apache_mfd_lamps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_lamps.c
;	COMDAT ?draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv88 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_apache_armament_lamps, COMDAT

; 472  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 473  : 	unsigned char
; 474  : 		*sprite_data,
; 475  : 		*mask_data;
; 476  : 
; 477  : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 478  : 
; 479  : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 480  : 
; 481  : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 e0 00 00
	00		 je	 $LN12@draw_apach

; 482  : 	{
; 483  : 		static float
; 484  : 			timer = 0.0;
; 485  : 
; 486  : 		timer += get_delta_time ();

  0003e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00046	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0004e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 487  : 
; 488  : 		apache_lamps.armament_lamp_1 = 0;

  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0005b	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 489  : 		apache_lamps.armament_lamp_2 = 0;

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0006a	25 ff df ff ff	 and	 eax, -8193		; ffffdfffH
  0006f	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 490  : 
; 491  : 		if (timer < (ONE_SECOND * 1.0))

  00074	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0007c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00084	66 0f 2f c8	 comisd	 xmm1, xmm0
  00088	76 05		 jbe	 SHORT $LN5@draw_apach
  0008a	e9 8f 00 00 00	 jmp	 $LN12@draw_apach
$LN5@draw_apach:

; 492  : 		{
; 493  : 		}
; 494  : 		else if (timer < (ONE_SECOND * 2.0))

  0008f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00097	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  0009f	66 0f 2f c8	 comisd	 xmm1, xmm0
  000a3	76 11		 jbe	 SHORT $LN7@draw_apach

; 495  : 		{
; 496  : 			apache_lamps.armament_lamp_1 = 1;

  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000aa	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  000af	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  000b4	eb 68		 jmp	 SHORT $LN12@draw_apach
$LN7@draw_apach:

; 497  : 		}
; 498  : 		else if (timer < (ONE_SECOND * 3.0))

  000b6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000be	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  000c6	66 0f 2f c8	 comisd	 xmm1, xmm0
  000ca	76 11		 jbe	 SHORT $LN9@draw_apach

; 499  : 		{
; 500  : 			apache_lamps.armament_lamp_2 = 1;

  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000d1	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  000d6	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  000db	eb 41		 jmp	 SHORT $LN12@draw_apach
$LN9@draw_apach:

; 501  : 		}
; 502  : 		else if (timer < (ONE_SECOND * 4.0))

  000dd	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000e5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  000ed	66 0f 2f c8	 comisd	 xmm1, xmm0
  000f1	76 20		 jbe	 SHORT $LN11@draw_apach

; 503  : 		{
; 504  : 			apache_lamps.armament_lamp_1 = 1;

  000f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000f8	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  000fd	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 505  : 			apache_lamps.armament_lamp_2 = 1;

  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00107	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0010c	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 506  : 		}
; 507  : 		else

  00111	eb 0b		 jmp	 SHORT $LN12@draw_apach
$LN11@draw_apach:

; 508  : 		{
; 509  : 			timer = 0.0;

  00113	0f 57 c0	 xorps	 xmm0, xmm0
  00116	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN12@draw_apach:

; 510  : 		}
; 511  : 	}
; 512  : 
; 513  : 	switch (panel)

  0011e	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00121	89 45 b4	 mov	 DWORD PTR tv88[ebp], eax
  00124	8b 4d b4	 mov	 ecx, DWORD PTR tv88[ebp]
  00127	83 e9 16	 sub	 ecx, 22			; 00000016H
  0012a	89 4d b4	 mov	 DWORD PTR tv88[ebp], ecx
  0012d	83 7d b4 06	 cmp	 DWORD PTR tv88[ebp], 6
  00131	0f 87 9a 02 00
	00		 ja	 $LN23@draw_apach
  00137	8b 55 b4	 mov	 edx, DWORD PTR tv88[ebp]
  0013a	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN25@draw_apach[edx*4]
$LN13@draw_apach:

; 514  : 	{
; 515  : 		////////////////////////////////////////
; 516  : 		case COCKPIT_PANEL_DOWN20_LEFT60:
; 517  : 		////////////////////////////////////////
; 518  : 		{
; 519  : 			#define X_ORG (613)
; 520  : 			#define Y_ORG (395)
; 521  : 
; 522  : 			draw_lamp (apache_lamps.armament_lamp_1 , X_ORG +   4, Y_ORG +   8, 134, 328,  23,  31,   0);	// (100% alpha)

  00141	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00146	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  00149	83 e0 01	 and	 eax, 1
  0014c	74 5f		 je	 SHORT $LN14@draw_apach
  0014e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00153	05 69 02 00 00	 add	 eax, 617		; 00000269H
  00158	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0015d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00162	05 93 01 00 00	 add	 eax, 403		; 00000193H
  00167	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0016c	c7 05 08 00 00
	00 86 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 134 ; 00000086H
  00176	c7 05 0c 00 00
	00 48 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 328 ; 00000148H
  00180	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  0018a	c7 05 14 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 31 ; 0000001fH
  00194	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  0019b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  001a0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  001a3	50		 push	 eax
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  001a7	51		 push	 ecx
  001a8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN14@draw_apach:

; 523  : 
; 524  : 			#undef X_ORG
; 525  : 			#undef Y_ORG
; 526  : 
; 527  : 			break;

  001ad	e9 2d 02 00 00	 jmp	 $LN2@draw_apach
$LN15@draw_apach:

; 528  : 		}
; 529  : 		////////////////////////////////////////
; 530  : 		case COCKPIT_PANEL_DOWN20_LEFT30:
; 531  : 		////////////////////////////////////////
; 532  : 		{
; 533  : 			#define X_ORG (339)
; 534  : 			#define Y_ORG (347)
; 535  : 
; 536  : 			draw_lamp (apache_lamps.armament_lamp_1 , X_ORG +   4, Y_ORG +   6,  74, 325,  23,  25,   0);	// (100% alpha)

  001b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  001b7	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  001ba	83 e0 01	 and	 eax, 1
  001bd	74 5f		 je	 SHORT $LN16@draw_apach
  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  001c4	05 57 01 00 00	 add	 eax, 343		; 00000157H
  001c9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  001ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  001d3	05 61 01 00 00	 add	 eax, 353		; 00000161H
  001d8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  001dd	c7 05 08 00 00
	00 4a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 74 ; 0000004aH
  001e7	c7 05 0c 00 00
	00 45 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 325 ; 00000145H
  001f1	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  001fb	c7 05 14 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 25 ; 00000019H
  00205	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  0020c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00211	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00214	50		 push	 eax
  00215	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00218	51		 push	 ecx
  00219	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN16@draw_apach:

; 537  : 			draw_lamp (apache_lamps.armament_lamp_2 , X_ORG +  23, Y_ORG +  13,  93, 332,  23,  25,  13);	// (95% alpha)

  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00223	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  00226	83 e0 01	 and	 eax, 1
  00229	74 5f		 je	 SHORT $LN17@draw_apach
  0022b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00230	05 6a 01 00 00	 add	 eax, 362		; 0000016aH
  00235	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0023f	05 68 01 00 00	 add	 eax, 360		; 00000168H
  00244	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00249	c7 05 08 00 00
	00 5d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 93 ; 0000005dH
  00253	c7 05 0c 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 332 ; 0000014cH
  0025d	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00267	c7 05 14 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 25 ; 00000019H
  00271	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  00278	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0027d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00280	50		 push	 eax
  00281	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00284	51		 push	 ecx
  00285	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN17@draw_apach:

; 538  : 
; 539  : 			#undef X_ORG
; 540  : 			#undef Y_ORG
; 541  : 
; 542  : 			break;

  0028a	e9 50 01 00 00	 jmp	 $LN2@draw_apach
$LN18@draw_apach:

; 543  : 		}
; 544  : 		////////////////////////////////////////
; 545  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 546  : 		////////////////////////////////////////
; 547  : 		{
; 548  : 			#define X_ORG (72)
; 549  : 			#define Y_ORG (375)
; 550  : 
; 551  : 			draw_lamp (apache_lamps.armament_lamp_1 , X_ORG +   9, Y_ORG +   7,   9, 327,  22,  23,   0);	// (100% alpha)

  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00294	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  00297	83 e0 01	 and	 eax, 1
  0029a	74 5d		 je	 SHORT $LN19@draw_apach
  0029c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  002a1	83 c0 51	 add	 eax, 81			; 00000051H
  002a4	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  002a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  002ae	05 7e 01 00 00	 add	 eax, 382		; 0000017eH
  002b3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  002b8	c7 05 08 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 9
  002c2	c7 05 0c 00 00
	00 47 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 327 ; 00000147H
  002cc	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  002d6	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  002e0	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  002e7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  002ec	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  002ef	50		 push	 eax
  002f0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  002f3	51		 push	 ecx
  002f4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN19@draw_apach:

; 552  : 			draw_lamp (apache_lamps.armament_lamp_2 , X_ORG +  31, Y_ORG +   7,  31, 327,  22,  23,  13);	// (95% alpha)

  002f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  002fe	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  00301	83 e0 01	 and	 eax, 1
  00304	74 5d		 je	 SHORT $LN20@draw_apach
  00306	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0030b	83 c0 67	 add	 eax, 103		; 00000067H
  0030e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00313	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00318	05 7e 01 00 00	 add	 eax, 382		; 0000017eH
  0031d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00322	c7 05 08 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 31 ; 0000001fH
  0032c	c7 05 0c 00 00
	00 47 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 327 ; 00000147H
  00336	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00340	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  0034a	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  00351	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00356	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00359	50		 push	 eax
  0035a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0035d	51		 push	 ecx
  0035e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN20@draw_apach:

; 553  : 
; 554  : 			#undef X_ORG
; 555  : 			#undef Y_ORG
; 556  : 
; 557  : 			break;

  00363	eb 7a		 jmp	 SHORT $LN2@draw_apach
$LN21@draw_apach:

; 558  : 		}
; 559  : 		////////////////////////////////////////
; 560  : 		case COCKPIT_PANEL_SPECIAL_APACHE_LHS_MFD:
; 561  : 		////////////////////////////////////////
; 562  : 		{
; 563  : 			#define X_ORG (0)
; 564  : 			#define Y_ORG (277)
; 565  : 
; 566  : 			draw_lamp (apache_lamps.armament_lamp_2 , X_ORG +   4, Y_ORG +   4, 164, 324,  64,  59,  13);	// (95% alpha)

  00365	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0036a	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  0036d	83 e0 01	 and	 eax, 1
  00370	74 5d		 je	 SHORT $LN22@draw_apach
  00372	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00377	83 c0 04	 add	 eax, 4
  0037a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00384	05 19 01 00 00	 add	 eax, 281		; 00000119H
  00389	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0038e	c7 05 08 00 00
	00 a4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 164 ; 000000a4H
  00398	c7 05 0c 00 00
	00 44 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 324 ; 00000144H
  003a2	c7 05 10 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 64 ; 00000040H
  003ac	c7 05 14 00 00
	00 3b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 59 ; 0000003bH
  003b6	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  003bd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  003c2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  003c5	50		 push	 eax
  003c6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  003c9	51		 push	 ecx
  003ca	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN22@draw_apach:

; 567  : 
; 568  : 			#undef X_ORG
; 569  : 			#undef Y_ORG
; 570  : 
; 571  : 			break;

  003cf	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN23@draw_apach:

; 572  : 		}
; 573  : 		////////////////////////////////////////
; 574  : 		default:
; 575  : 		////////////////////////////////////////
; 576  : 		{
; 577  : 			debug_fatal (lamp_error);

  003d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PADA
  003d6	50		 push	 eax
  003d7	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  003dc	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 578  : 
; 579  : 			break;
; 580  : 		}
; 581  : 	}
; 582  : }

  003df	5f		 pop	 edi
  003e0	5e		 pop	 esi
  003e1	5b		 pop	 ebx
  003e2	8b e5		 mov	 esp, ebp
  003e4	5d		 pop	 ebp
  003e5	c2 04 00	 ret	 4
$LN25@draw_apach:
  003e8	00 00 00 00	 DD	 $LN13@draw_apach
  003ec	00 00 00 00	 DD	 $LN15@draw_apach
  003f0	00 00 00 00	 DD	 $LN18@draw_apach
  003f4	00 00 00 00	 DD	 $LN23@draw_apach
  003f8	00 00 00 00	 DD	 $LN23@draw_apach
  003fc	00 00 00 00	 DD	 $LN23@draw_apach
  00400	00 00 00 00	 DD	 $LN21@draw_apach
?draw_apache_armament_lamps@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_apache_armament_lamps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_lamps.c
;	COMDAT ?draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv93 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_apache_fire_detector_lamps, COMDAT

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 344  : 	unsigned char
; 345  : 		*sprite_data,
; 346  : 		*mask_data;
; 347  : 
; 348  : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 349  : 
; 350  : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 351  : 
; 352  : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 28 01 00
	00		 je	 $LN14@draw_apach

; 353  : 	{
; 354  : 		static float
; 355  : 			timer = 0.0;
; 356  : 
; 357  : 		timer += get_delta_time ();

  0003e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00046	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0004e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 358  : 
; 359  : 		apache_lamps.engine_1_fire = 0;

  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0005b	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 360  : 		apache_lamps.apu_fire = 0;

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0006a	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  0006f	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 361  : 		apache_lamps.engine_2_fire = 0;

  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00079	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 362  : 
; 363  : 		if (timer < (ONE_SECOND * 1.0))

  00083	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0008b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00093	66 0f 2f c8	 comisd	 xmm1, xmm0
  00097	76 05		 jbe	 SHORT $LN5@draw_apach
  00099	e9 c8 00 00 00	 jmp	 $LN14@draw_apach
$LN5@draw_apach:

; 364  : 		{
; 365  : 		}
; 366  : 		else if (timer < (ONE_SECOND * 2.0))

  0009e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000a6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  000ae	66 0f 2f c8	 comisd	 xmm1, xmm0
  000b2	76 14		 jbe	 SHORT $LN7@draw_apach

; 367  : 		{
; 368  : 			apache_lamps.engine_1_fire = 1;

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000b9	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  000be	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  000c3	e9 9e 00 00 00	 jmp	 $LN14@draw_apach
$LN7@draw_apach:

; 369  : 		}
; 370  : 		else if (timer < (ONE_SECOND * 3.0))

  000c8	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000d0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  000d8	66 0f 2f c8	 comisd	 xmm1, xmm0
  000dc	76 11		 jbe	 SHORT $LN9@draw_apach

; 371  : 		{
; 372  : 			apache_lamps.apu_fire = 1;

  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000e3	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  000e8	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  000ed	eb 77		 jmp	 SHORT $LN14@draw_apach
$LN9@draw_apach:

; 373  : 		}
; 374  : 		else if (timer < (ONE_SECOND * 4.0))

  000ef	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000f7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  000ff	66 0f 2f c8	 comisd	 xmm1, xmm0
  00103	76 11		 jbe	 SHORT $LN11@draw_apach

; 375  : 		{
; 376  : 			apache_lamps.engine_2_fire = 1;

  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0010a	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  0010f	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  00114	eb 50		 jmp	 SHORT $LN14@draw_apach
$LN11@draw_apach:

; 377  : 		}
; 378  : 		else if (timer < (ONE_SECOND * 5.0))

  00116	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0011e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00126	66 0f 2f c8	 comisd	 xmm1, xmm0
  0012a	76 2f		 jbe	 SHORT $LN13@draw_apach

; 379  : 		{
; 380  : 			apache_lamps.engine_1_fire = 1;

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00131	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  00136	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 381  : 			apache_lamps.apu_fire = 1;

  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00140	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  00145	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 382  : 			apache_lamps.engine_2_fire = 1;

  0014a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0014f	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  00154	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 383  : 		}
; 384  : 		else

  00159	eb 0b		 jmp	 SHORT $LN14@draw_apach
$LN13@draw_apach:

; 385  : 		{
; 386  : 			timer = 0.0;

  0015b	0f 57 c0	 xorps	 xmm0, xmm0
  0015e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN14@draw_apach:

; 387  : 		}
; 388  : 	}
; 389  : 
; 390  : 	switch (panel)

  00166	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00169	89 45 b4	 mov	 DWORD PTR tv93[ebp], eax
  0016c	8b 4d b4	 mov	 ecx, DWORD PTR tv93[ebp]
  0016f	83 e9 10	 sub	 ecx, 16			; 00000010H
  00172	89 4d b4	 mov	 DWORD PTR tv93[ebp], ecx
  00175	83 7d b4 08	 cmp	 DWORD PTR tv93[ebp], 8
  00179	0f 87 2b 05 00
	00		 ja	 $LN31@draw_apach
  0017f	8b 55 b4	 mov	 edx, DWORD PTR tv93[ebp]
  00182	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN33@draw_apach[edx*4]
$LN15@draw_apach:

; 391  : 	{
; 392  : 		////////////////////////////////////////
; 393  : 		case COCKPIT_PANEL_LEVEL_LEFT30:
; 394  : 		////////////////////////////////////////
; 395  : 		{
; 396  : 			#define X_ORG (461)
; 397  : 			#define Y_ORG (417)
; 398  : 
; 399  : 			draw_lamp (apache_lamps.engine_1_fire	, X_ORG +  11, Y_ORG +   5, 371,  95,  26,  28,   0);	// (100% alpha)

  00189	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0018e	c1 e8 09	 shr	 eax, 9
  00191	83 e0 01	 and	 eax, 1
  00194	74 5f		 je	 SHORT $LN16@draw_apach
  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0019b	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  001a0	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  001aa	05 a6 01 00 00	 add	 eax, 422		; 000001a6H
  001af	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  001b4	c7 05 08 00 00
	00 73 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 371 ; 00000173H
  001be	c7 05 0c 00 00
	00 5f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 95 ; 0000005fH
  001c8	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  001d2	c7 05 14 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 28 ; 0000001cH
  001dc	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  001e3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  001e8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  001eb	50		 push	 eax
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  001ef	51		 push	 ecx
  001f0	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN16@draw_apach:

; 400  : 			draw_lamp (apache_lamps.apu_fire			, X_ORG +  45, Y_ORG +  10, 405, 100,  26,  29,  13);	// (95% alpha)

  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  001fa	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  001fd	83 e0 01	 and	 eax, 1
  00200	74 5f		 je	 SHORT $LN17@draw_apach
  00202	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00207	05 fa 01 00 00	 add	 eax, 506		; 000001faH
  0020c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00211	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00216	05 ab 01 00 00	 add	 eax, 427		; 000001abH
  0021b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00220	c7 05 08 00 00
	00 95 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 405 ; 00000195H
  0022a	c7 05 0c 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 100 ; 00000064H
  00234	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  0023e	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  00248	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  0024f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00254	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00257	50		 push	 eax
  00258	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0025b	51		 push	 ecx
  0025c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN17@draw_apach:

; 401  : 			draw_lamp (apache_lamps.engine_2_fire	, X_ORG +  82, Y_ORG +  16, 442, 106,  26,  29,  25);	// (90% alpha)

  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00266	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00269	83 e0 01	 and	 eax, 1
  0026c	74 5f		 je	 SHORT $LN18@draw_apach
  0026e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00273	05 1f 02 00 00	 add	 eax, 543		; 0000021fH
  00278	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0027d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00282	05 b1 01 00 00	 add	 eax, 433		; 000001b1H
  00287	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0028c	c7 05 08 00 00
	00 ba 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 442 ; 000001baH
  00296	c7 05 0c 00 00
	00 6a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 106 ; 0000006aH
  002a0	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  002aa	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  002b4	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  002bb	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  002c0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  002c3	50		 push	 eax
  002c4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  002c7	51		 push	 ecx
  002c8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN18@draw_apach:

; 402  : 
; 403  : 			#undef X_ORG
; 404  : 			#undef Y_ORG
; 405  : 
; 406  : 			break;

  002cd	e9 e6 03 00 00	 jmp	 $LN2@draw_apach
$LN19@draw_apach:

; 407  : 		}
; 408  : 		////////////////////////////////////////
; 409  : 		case COCKPIT_PANEL_LEVEL_AHEAD:
; 410  : 		////////////////////////////////////////
; 411  : 		{
; 412  : 			#define X_ORG (164)
; 413  : 			#define Y_ORG (408)
; 414  : 
; 415  : 			draw_lamp (apache_lamps.engine_1_fire	, X_ORG +  10, Y_ORG +  12,  10, 102,  26,  27,   0);	// (100% alpha)

  002d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  002d7	c1 e8 09	 shr	 eax, 9
  002da	83 e0 01	 and	 eax, 1
  002dd	74 5f		 je	 SHORT $LN20@draw_apach
  002df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  002e4	05 ae 00 00 00	 add	 eax, 174		; 000000aeH
  002e9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  002ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  002f3	05 a4 01 00 00	 add	 eax, 420		; 000001a4H
  002f8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  002fd	c7 05 08 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 10 ; 0000000aH
  00307	c7 05 0c 00 00
	00 66 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 102 ; 00000066H
  00311	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  0031b	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  00325	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  0032c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00331	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00334	50		 push	 eax
  00335	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00338	51		 push	 ecx
  00339	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN20@draw_apach:

; 416  : 			draw_lamp (apache_lamps.apu_fire			, X_ORG +  42, Y_ORG +  12,  42, 102,  26,  27,  13);	// (95% alpha)

  0033e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00343	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00346	83 e0 01	 and	 eax, 1
  00349	74 5f		 je	 SHORT $LN21@draw_apach
  0034b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00350	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  00355	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0035a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0035f	05 a4 01 00 00	 add	 eax, 420		; 000001a4H
  00364	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00369	c7 05 08 00 00
	00 2a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 42 ; 0000002aH
  00373	c7 05 0c 00 00
	00 66 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 102 ; 00000066H
  0037d	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  00387	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  00391	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  00398	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0039d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  003a0	50		 push	 eax
  003a1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  003a4	51		 push	 ecx
  003a5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN21@draw_apach:

; 417  : 			draw_lamp (apache_lamps.engine_2_fire	, X_ORG +  75, Y_ORG +  12,  75, 102,  26,  27,  25);	// (90% alpha)

  003aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  003af	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  003b2	83 e0 01	 and	 eax, 1
  003b5	74 5f		 je	 SHORT $LN22@draw_apach
  003b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  003bc	05 ef 00 00 00	 add	 eax, 239		; 000000efH
  003c1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  003c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  003cb	05 a4 01 00 00	 add	 eax, 420		; 000001a4H
  003d0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  003d5	c7 05 08 00 00
	00 4b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 75 ; 0000004bH
  003df	c7 05 0c 00 00
	00 66 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 102 ; 00000066H
  003e9	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  003f3	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  003fd	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  00404	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00409	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0040c	50		 push	 eax
  0040d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00410	51		 push	 ecx
  00411	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN22@draw_apach:

; 418  : 
; 419  : 			#undef X_ORG
; 420  : 			#undef Y_ORG
; 421  : 
; 422  : 			break;

  00416	e9 9d 02 00 00	 jmp	 $LN2@draw_apach
$LN23@draw_apach:

; 423  : 		}
; 424  : 		////////////////////////////////////////
; 425  : 		case COCKPIT_PANEL_DOWN20_LEFT30:
; 426  : 		////////////////////////////////////////
; 427  : 		{
; 428  : 			#define X_ORG (446)
; 429  : 			#define Y_ORG (214)
; 430  : 
; 431  : 			draw_lamp (apache_lamps.engine_1_fire	, X_ORG +  16, Y_ORG +   7, 256,  97,  26,  27,   0);	// (100% alpha)

  0041b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00420	c1 e8 09	 shr	 eax, 9
  00423	83 e0 01	 and	 eax, 1
  00426	74 5f		 je	 SHORT $LN24@draw_apach
  00428	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0042d	05 ce 01 00 00	 add	 eax, 462		; 000001ceH
  00432	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00437	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0043c	05 dd 00 00 00	 add	 eax, 221		; 000000ddH
  00441	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00446	c7 05 08 00 00
	00 00 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 256 ; 00000100H
  00450	c7 05 0c 00 00
	00 61 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 97 ; 00000061H
  0045a	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  00464	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  0046e	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  00475	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0047a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0047d	50		 push	 eax
  0047e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00481	51		 push	 ecx
  00482	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN24@draw_apach:

; 432  : 			draw_lamp (apache_lamps.apu_fire			, X_ORG +  48, Y_ORG +  12, 288, 102,  26,  27,  13);	// (95% alpha)

  00487	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0048c	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  0048f	83 e0 01	 and	 eax, 1
  00492	74 5f		 je	 SHORT $LN25@draw_apach
  00494	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00499	05 ee 01 00 00	 add	 eax, 494		; 000001eeH
  0049e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  004a8	05 e2 00 00 00	 add	 eax, 226		; 000000e2H
  004ad	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  004b2	c7 05 08 00 00
	00 20 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 288 ; 00000120H
  004bc	c7 05 0c 00 00
	00 66 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 102 ; 00000066H
  004c6	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  004d0	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  004da	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  004e1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  004e6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  004e9	50		 push	 eax
  004ea	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  004ed	51		 push	 ecx
  004ee	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN25@draw_apach:

; 433  : 			draw_lamp (apache_lamps.engine_2_fire	, X_ORG +  82, Y_ORG +  18, 322, 108,  26,  27,  25);	// (90% alpha)

  004f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  004f8	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  004fb	83 e0 01	 and	 eax, 1
  004fe	74 5f		 je	 SHORT $LN26@draw_apach
  00500	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00505	05 10 02 00 00	 add	 eax, 528		; 00000210H
  0050a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0050f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00514	05 e8 00 00 00	 add	 eax, 232		; 000000e8H
  00519	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0051e	c7 05 08 00 00
	00 42 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 322 ; 00000142H
  00528	c7 05 0c 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 108 ; 0000006cH
  00532	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  0053c	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  00546	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  0054d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00552	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00555	50		 push	 eax
  00556	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00559	51		 push	 ecx
  0055a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN26@draw_apach:

; 434  : 
; 435  : 			#undef X_ORG
; 436  : 			#undef Y_ORG
; 437  : 
; 438  : 			break;

  0055f	e9 54 01 00 00	 jmp	 $LN2@draw_apach
$LN27@draw_apach:

; 439  : 		}
; 440  : 		////////////////////////////////////////
; 441  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 442  : 		////////////////////////////////////////
; 443  : 		{
; 444  : 			#define X_ORG (172)
; 445  : 			#define Y_ORG (213)
; 446  : 
; 447  : 			draw_lamp (apache_lamps.engine_1_fire	, X_ORG +   9, Y_ORG +   5, 129,  95,  26,  27,   0);	// (100% alpha)

  00564	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00569	c1 e8 09	 shr	 eax, 9
  0056c	83 e0 01	 and	 eax, 1
  0056f	74 5f		 je	 SHORT $LN28@draw_apach
  00571	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00576	05 b5 00 00 00	 add	 eax, 181		; 000000b5H
  0057b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00580	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00585	05 da 00 00 00	 add	 eax, 218		; 000000daH
  0058a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0058f	c7 05 08 00 00
	00 81 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 129 ; 00000081H
  00599	c7 05 0c 00 00
	00 5f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 95 ; 0000005fH
  005a3	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  005ad	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  005b7	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  005be	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  005c3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  005c6	50		 push	 eax
  005c7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  005ca	51		 push	 ecx
  005cb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN28@draw_apach:

; 448  : 			draw_lamp (apache_lamps.apu_fire			, X_ORG +  40, Y_ORG +   5, 160,  95,  26,  27,  13);	// (95% alpha)

  005d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  005d5	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  005d8	83 e0 01	 and	 eax, 1
  005db	74 5f		 je	 SHORT $LN29@draw_apach
  005dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  005e2	05 d4 00 00 00	 add	 eax, 212		; 000000d4H
  005e7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  005ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  005f1	05 da 00 00 00	 add	 eax, 218		; 000000daH
  005f6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  005fb	c7 05 08 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 160 ; 000000a0H
  00605	c7 05 0c 00 00
	00 5f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 95 ; 0000005fH
  0060f	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  00619	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  00623	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  0062a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0062f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00632	50		 push	 eax
  00633	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00636	51		 push	 ecx
  00637	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN29@draw_apach:

; 449  : 			draw_lamp (apache_lamps.engine_2_fire	, X_ORG +  70, Y_ORG +   5, 190,  95,  26,  27,  25);	// (90% alpha)

  0063c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00641	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00644	83 e0 01	 and	 eax, 1
  00647	74 5f		 je	 SHORT $LN30@draw_apach
  00649	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0064e	05 f2 00 00 00	 add	 eax, 242		; 000000f2H
  00653	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00658	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0065d	05 da 00 00 00	 add	 eax, 218		; 000000daH
  00662	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00667	c7 05 08 00 00
	00 be 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 190 ; 000000beH
  00671	c7 05 0c 00 00
	00 5f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 95 ; 0000005fH
  0067b	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  00685	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  0068f	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  00696	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0069b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0069e	50		 push	 eax
  0069f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  006a2	51		 push	 ecx
  006a3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN30@draw_apach:

; 450  : 
; 451  : 			#undef X_ORG
; 452  : 			#undef Y_ORG
; 453  : 
; 454  : 			break;

  006a8	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN31@draw_apach:

; 455  : 		}
; 456  : 		////////////////////////////////////////
; 457  : 		default:
; 458  : 		////////////////////////////////////////
; 459  : 		{
; 460  : 			debug_fatal (lamp_error);

  006aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PADA
  006af	50		 push	 eax
  006b0	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  006b5	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 461  : 
; 462  : 			break;
; 463  : 		}
; 464  : 	}
; 465  : }

  006b8	5f		 pop	 edi
  006b9	5e		 pop	 esi
  006ba	5b		 pop	 ebx
  006bb	8b e5		 mov	 esp, ebp
  006bd	5d		 pop	 ebp
  006be	c2 04 00	 ret	 4
  006c1	0f 1f 00	 npad	 3
$LN33@draw_apach:
  006c4	00 00 00 00	 DD	 $LN15@draw_apach
  006c8	00 00 00 00	 DD	 $LN19@draw_apach
  006cc	00 00 00 00	 DD	 $LN31@draw_apach
  006d0	00 00 00 00	 DD	 $LN31@draw_apach
  006d4	00 00 00 00	 DD	 $LN31@draw_apach
  006d8	00 00 00 00	 DD	 $LN31@draw_apach
  006dc	00 00 00 00	 DD	 $LN31@draw_apach
  006e0	00 00 00 00	 DD	 $LN23@draw_apach
  006e4	00 00 00 00	 DD	 $LN27@draw_apach
?draw_apache_fire_detector_lamps@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_apache_fire_detector_lamps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_lamps.c
;	COMDAT ?draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv155 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_apache_indicator_lamps, COMDAT

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 127  : 	unsigned char
; 128  : 		*sprite_data,
; 129  : 		*mask_data;
; 130  : 
; 131  : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 132  : 
; 133  : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_APACHE_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 134  : 
; 135  : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 b4 02 00
	00		 je	 $LN26@draw_apach

; 136  : 	{
; 137  : 		static float
; 138  : 			timer = 0.0;
; 139  : 
; 140  : 		apache_lamps.indicator_lamp_1 = 0;

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00043	83 e0 fe	 and	 eax, -2			; fffffffeH
  00046	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 141  : 		apache_lamps.indicator_lamp_2 = 0;

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00050	83 e0 fd	 and	 eax, -3			; fffffffdH
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 142  : 		apache_lamps.indicator_lamp_3 = 0;

  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0005d	83 e0 fb	 and	 eax, -5			; fffffffbH
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 143  : 		apache_lamps.indicator_lamp_4 = 0;

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0006a	83 e0 f7	 and	 eax, -9			; fffffff7H
  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 144  : 		apache_lamps.indicator_lamp_5 = 0;

  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00077	83 e0 ef	 and	 eax, -17		; ffffffefH
  0007a	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 145  : 		apache_lamps.indicator_lamp_6 = 0;

  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00084	83 e0 df	 and	 eax, -33		; ffffffdfH
  00087	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 146  : 		apache_lamps.indicator_lamp_7 = 0;

  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00091	83 e0 bf	 and	 eax, -65		; ffffffbfH
  00094	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 147  : 		apache_lamps.indicator_lamp_8 = 0;

  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0009e	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  000a3	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 148  : 		apache_lamps.indicator_lamp_9 = 0;

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  000ad	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  000b2	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 149  : 
; 150  : 		timer += get_delta_time ();

  000b7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000bf	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000c7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 151  : 
; 152  : 		if (timer < (ONE_SECOND * 1.0))

  000cf	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000d7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000df	66 0f 2f c8	 comisd	 xmm1, xmm0
  000e3	76 05		 jbe	 SHORT $LN5@draw_apach
  000e5	e9 08 02 00 00	 jmp	 $LN26@draw_apach
$LN5@draw_apach:

; 153  : 		{
; 154  : 		}
; 155  : 		else if (timer < (ONE_SECOND * 2.0))

  000ea	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000f2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  000fa	66 0f 2f c8	 comisd	 xmm1, xmm0
  000fe	76 12		 jbe	 SHORT $LN7@draw_apach

; 156  : 		{
; 157  : 			apache_lamps.indicator_lamp_1 = 1;

  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00105	83 c8 01	 or	 eax, 1
  00108	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  0010d	e9 e0 01 00 00	 jmp	 $LN26@draw_apach
$LN7@draw_apach:

; 158  : 		}
; 159  : 		else if (timer < (ONE_SECOND * 3.0))

  00112	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0011a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00122	66 0f 2f c8	 comisd	 xmm1, xmm0
  00126	76 12		 jbe	 SHORT $LN9@draw_apach

; 160  : 		{
; 161  : 			apache_lamps.indicator_lamp_2 = 1;

  00128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0012d	83 c8 02	 or	 eax, 2
  00130	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  00135	e9 b8 01 00 00	 jmp	 $LN26@draw_apach
$LN9@draw_apach:

; 162  : 		}
; 163  : 		else if (timer < (ONE_SECOND * 4.0))

  0013a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00142	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  0014a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0014e	76 12		 jbe	 SHORT $LN11@draw_apach

; 164  : 		{
; 165  : 			apache_lamps.indicator_lamp_3 = 1;

  00150	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00155	83 c8 04	 or	 eax, 4
  00158	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  0015d	e9 90 01 00 00	 jmp	 $LN26@draw_apach
$LN11@draw_apach:

; 166  : 		}
; 167  : 		else if (timer < (ONE_SECOND * 5.0))

  00162	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0016a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00172	66 0f 2f c8	 comisd	 xmm1, xmm0
  00176	76 12		 jbe	 SHORT $LN13@draw_apach

; 168  : 		{
; 169  : 			apache_lamps.indicator_lamp_4 = 1;

  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0017d	83 c8 08	 or	 eax, 8
  00180	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  00185	e9 68 01 00 00	 jmp	 $LN26@draw_apach
$LN13@draw_apach:

; 170  : 		}
; 171  : 		else if (timer < (ONE_SECOND * 6.0))

  0018a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00192	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  0019a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0019e	76 12		 jbe	 SHORT $LN15@draw_apach

; 172  : 		{
; 173  : 			apache_lamps.indicator_lamp_5 = 1;

  001a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  001a5	83 c8 10	 or	 eax, 16			; 00000010H
  001a8	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  001ad	e9 40 01 00 00	 jmp	 $LN26@draw_apach
$LN15@draw_apach:

; 174  : 		}
; 175  : 		else if (timer < (ONE_SECOND * 7.0))

  001b2	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001ba	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  001c2	66 0f 2f c8	 comisd	 xmm1, xmm0
  001c6	76 12		 jbe	 SHORT $LN17@draw_apach

; 176  : 		{
; 177  : 			apache_lamps.indicator_lamp_6 = 1;

  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  001cd	83 c8 20	 or	 eax, 32			; 00000020H
  001d0	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  001d5	e9 18 01 00 00	 jmp	 $LN26@draw_apach
$LN17@draw_apach:

; 178  : 		}
; 179  : 		else if (timer < (ONE_SECOND * 8.0))

  001da	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001e2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  001ea	66 0f 2f c8	 comisd	 xmm1, xmm0
  001ee	76 12		 jbe	 SHORT $LN19@draw_apach

; 180  : 		{
; 181  : 			apache_lamps.indicator_lamp_7 = 1;

  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  001f5	83 c8 40	 or	 eax, 64			; 00000040H
  001f8	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  001fd	e9 f0 00 00 00	 jmp	 $LN26@draw_apach
$LN19@draw_apach:

; 182  : 		}
; 183  : 		else if (timer < (ONE_SECOND * 9.0))

  00202	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0020a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  00212	66 0f 2f c8	 comisd	 xmm1, xmm0
  00216	76 14		 jbe	 SHORT $LN21@draw_apach

; 184  : 		{
; 185  : 			apache_lamps.indicator_lamp_8 = 1;

  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0021d	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00222	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  00227	e9 c6 00 00 00	 jmp	 $LN26@draw_apach
$LN21@draw_apach:

; 186  : 		}
; 187  : 		else if (timer < (ONE_SECOND * 10.0))

  0022c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00234	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4024000000000000
  0023c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00240	76 14		 jbe	 SHORT $LN23@draw_apach

; 188  : 		{
; 189  : 			apache_lamps.indicator_lamp_9 = 1;

  00242	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00247	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  0024c	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps
  00251	e9 9c 00 00 00	 jmp	 $LN26@draw_apach
$LN23@draw_apach:

; 190  : 		}
; 191  : 		else if (timer < (ONE_SECOND * 11.0))

  00256	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0025e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4026000000000000
  00266	66 0f 2f c8	 comisd	 xmm1, xmm0
  0026a	76 7b		 jbe	 SHORT $LN25@draw_apach

; 192  : 		{
; 193  : 			apache_lamps.indicator_lamp_1 = 1;

  0026c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00271	83 c8 01	 or	 eax, 1
  00274	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 194  : 			apache_lamps.indicator_lamp_2 = 1;

  00279	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0027e	83 c8 02	 or	 eax, 2
  00281	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 195  : 			apache_lamps.indicator_lamp_3 = 1;

  00286	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0028b	83 c8 04	 or	 eax, 4
  0028e	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 196  : 			apache_lamps.indicator_lamp_4 = 1;

  00293	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00298	83 c8 08	 or	 eax, 8
  0029b	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 197  : 			apache_lamps.indicator_lamp_5 = 1;

  002a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  002a5	83 c8 10	 or	 eax, 16			; 00000010H
  002a8	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 198  : 			apache_lamps.indicator_lamp_6 = 1;

  002ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  002b2	83 c8 20	 or	 eax, 32			; 00000020H
  002b5	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 199  : 			apache_lamps.indicator_lamp_7 = 1;

  002ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  002bf	83 c8 40	 or	 eax, 64			; 00000040H
  002c2	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 200  : 			apache_lamps.indicator_lamp_8 = 1;

  002c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  002cc	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  002d1	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 201  : 			apache_lamps.indicator_lamp_9 = 1;

  002d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  002db	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  002e0	a3 00 00 00 00	 mov	 DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A, eax ; apache_lamps

; 202  : 		}
; 203  : 		else

  002e5	eb 0b		 jmp	 SHORT $LN26@draw_apach
$LN25@draw_apach:

; 204  : 		{
; 205  : 			timer = 0.0;

  002e7	0f 57 c0	 xorps	 xmm0, xmm0
  002ea	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN26@draw_apach:

; 206  : 		}
; 207  : 	}
; 208  : 
; 209  : 	switch (panel)

  002f2	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  002f5	89 45 b4	 mov	 DWORD PTR tv155[ebp], eax
  002f8	8b 4d b4	 mov	 ecx, DWORD PTR tv155[ebp]
  002fb	83 e9 10	 sub	 ecx, 16			; 00000010H
  002fe	89 4d b4	 mov	 DWORD PTR tv155[ebp], ecx
  00301	83 7d b4 09	 cmp	 DWORD PTR tv155[ebp], 9
  00305	0f 87 03 10 00
	00		 ja	 $LN71@draw_apach
  0030b	8b 55 b4	 mov	 edx, DWORD PTR tv155[ebp]
  0030e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN73@draw_apach[edx*4]
$LN27@draw_apach:

; 210  : 	{
; 211  : 		////////////////////////////////////////
; 212  : 		case COCKPIT_PANEL_LEVEL_LEFT30:
; 213  : 		////////////////////////////////////////
; 214  : 		{
; 215  : 			#define X_ORG (524)
; 216  : 			#define Y_ORG (378)
; 217  : 
; 218  : 			draw_lamp (apache_lamps.indicator_lamp_1, X_ORG +   9, Y_ORG +   5,   9,  45,  22,  21,   0);	// (100% alpha)

  00315	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0031a	83 e0 01	 and	 eax, 1
  0031d	74 5f		 je	 SHORT $LN28@draw_apach
  0031f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00324	05 15 02 00 00	 add	 eax, 533		; 00000215H
  00329	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0032e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00333	05 7f 01 00 00	 add	 eax, 383		; 0000017fH
  00338	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0033d	c7 05 08 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 9
  00347	c7 05 0c 00 00
	00 2d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 45 ; 0000002dH
  00351	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  0035b	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  00365	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  0036c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00371	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00374	50		 push	 eax
  00375	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00378	51		 push	 ecx
  00379	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN28@draw_apach:

; 219  : 			draw_lamp (apache_lamps.indicator_lamp_2, X_ORG +  32, Y_ORG +   8,  32,  48,  22,  22,  13);	// (95% alpha)

  0037e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00383	d1 e8		 shr	 eax, 1
  00385	83 e0 01	 and	 eax, 1
  00388	74 5f		 je	 SHORT $LN29@draw_apach
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0038f	05 2c 02 00 00	 add	 eax, 556		; 0000022cH
  00394	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00399	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0039e	05 82 01 00 00	 add	 eax, 386		; 00000182H
  003a3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  003a8	c7 05 08 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 32 ; 00000020H
  003b2	c7 05 0c 00 00
	00 30 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 48 ; 00000030H
  003bc	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  003c6	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  003d0	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  003d7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  003dc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  003df	50		 push	 eax
  003e0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  003e3	51		 push	 ecx
  003e4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN29@draw_apach:

; 220  : 			draw_lamp (apache_lamps.indicator_lamp_3, X_ORG +  55, Y_ORG +  11,  55,  51,  23,  22,  25);	// (90% alpha)

  003e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  003ee	c1 e8 02	 shr	 eax, 2
  003f1	83 e0 01	 and	 eax, 1
  003f4	74 5f		 je	 SHORT $LN30@draw_apach
  003f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  003fb	05 43 02 00 00	 add	 eax, 579		; 00000243H
  00400	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00405	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0040a	05 85 01 00 00	 add	 eax, 389		; 00000185H
  0040f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00414	c7 05 08 00 00
	00 37 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 55 ; 00000037H
  0041e	c7 05 0c 00 00
	00 33 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 51 ; 00000033H
  00428	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00432	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  0043c	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  00443	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00448	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0044b	50		 push	 eax
  0044c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0044f	51		 push	 ecx
  00450	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN30@draw_apach:

; 221  : 			draw_lamp (apache_lamps.indicator_lamp_4, X_ORG +  79, Y_ORG +  14,  79,  54,  24,  22,  38);	// (85% alpha)

  00455	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0045a	c1 e8 03	 shr	 eax, 3
  0045d	83 e0 01	 and	 eax, 1
  00460	74 5f		 je	 SHORT $LN31@draw_apach
  00462	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00467	05 5b 02 00 00	 add	 eax, 603		; 0000025bH
  0046c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00471	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00476	05 88 01 00 00	 add	 eax, 392		; 00000188H
  0047b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00480	c7 05 08 00 00
	00 4f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 79 ; 0000004fH
  0048a	c7 05 0c 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 54 ; 00000036H
  00494	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  0049e	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  004a8	c6 05 18 00 00
	00 26		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 38 ; 00000026H
  004af	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  004b4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  004b7	50		 push	 eax
  004b8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  004bb	51		 push	 ecx
  004bc	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN31@draw_apach:

; 222  : 			draw_lamp (apache_lamps.indicator_lamp_5, X_ORG + 104, Y_ORG +  16, 104,  56,  12,  22,  51);	// (80% alpha)

  004c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  004c6	c1 e8 04	 shr	 eax, 4
  004c9	83 e0 01	 and	 eax, 1
  004cc	74 5f		 je	 SHORT $LN32@draw_apach
  004ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  004d3	05 74 02 00 00	 add	 eax, 628		; 00000274H
  004d8	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  004e2	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  004e7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  004ec	c7 05 08 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 104 ; 00000068H
  004f6	c7 05 0c 00 00
	00 38 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 56 ; 00000038H
  00500	c7 05 10 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 12 ; 0000000cH
  0050a	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  00514	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  0051b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00520	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00523	50		 push	 eax
  00524	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00527	51		 push	 ecx
  00528	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN32@draw_apach:

; 223  : 
; 224  : 			#undef X_ORG
; 225  : 			#undef Y_ORG
; 226  : 
; 227  : 			break;

  0052d	e9 ea 0d 00 00	 jmp	 $LN2@draw_apach
$LN33@draw_apach:

; 228  : 		}
; 229  : 		////////////////////////////////////////
; 230  : 		case COCKPIT_PANEL_LEVEL_AHEAD:
; 231  : 		////////////////////////////////////////
; 232  : 		{
; 233  : 			#define X_ORG (225)
; 234  : 			#define Y_ORG (370)
; 235  : 
; 236  : 			draw_lamp (apache_lamps.indicator_lamp_1, X_ORG +   7, Y_ORG +   4,   7,   4,  19,  19,   0);	// (100% alpha)

  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00537	83 e0 01	 and	 eax, 1
  0053a	74 5f		 je	 SHORT $LN34@draw_apach
  0053c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00541	05 e8 00 00 00	 add	 eax, 232		; 000000e8H
  00546	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00550	05 76 01 00 00	 add	 eax, 374		; 00000176H
  00555	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0055a	c7 05 08 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 7
  00564	c7 05 0c 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 4
  0056e	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  00578	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  00582	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  00589	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0058e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00591	50		 push	 eax
  00592	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00595	51		 push	 ecx
  00596	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN34@draw_apach:

; 237  : 			draw_lamp (apache_lamps.indicator_lamp_2, X_ORG +  27, Y_ORG +   4,  27,   4,  18,  19,  13);	// (95% alpha)

  0059b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  005a0	d1 e8		 shr	 eax, 1
  005a2	83 e0 01	 and	 eax, 1
  005a5	74 5f		 je	 SHORT $LN35@draw_apach
  005a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  005ac	05 fc 00 00 00	 add	 eax, 252		; 000000fcH
  005b1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  005b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  005bb	05 76 01 00 00	 add	 eax, 374		; 00000176H
  005c0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  005c5	c7 05 08 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 27 ; 0000001bH
  005cf	c7 05 0c 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 4
  005d9	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  005e3	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  005ed	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  005f4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  005f9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  005fc	50		 push	 eax
  005fd	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00600	51		 push	 ecx
  00601	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN35@draw_apach:

; 238  : 			draw_lamp (apache_lamps.indicator_lamp_3, X_ORG +  47, Y_ORG +   5,  47,   5,  18,  18,  25);	// (90% alpha)

  00606	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0060b	c1 e8 02	 shr	 eax, 2
  0060e	83 e0 01	 and	 eax, 1
  00611	74 5f		 je	 SHORT $LN36@draw_apach
  00613	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00618	05 10 01 00 00	 add	 eax, 272		; 00000110H
  0061d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00622	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00627	05 77 01 00 00	 add	 eax, 375		; 00000177H
  0062c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00631	c7 05 08 00 00
	00 2f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 47 ; 0000002fH
  0063b	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00645	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  0064f	c7 05 14 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 18 ; 00000012H
  00659	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  00660	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00665	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00668	50		 push	 eax
  00669	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0066c	51		 push	 ecx
  0066d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN36@draw_apach:

; 239  : 			draw_lamp (apache_lamps.indicator_lamp_4, X_ORG +  66, Y_ORG +   5,  66,   5,  18,  18,  38);	// (85% alpha)

  00672	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00677	c1 e8 03	 shr	 eax, 3
  0067a	83 e0 01	 and	 eax, 1
  0067d	74 5f		 je	 SHORT $LN37@draw_apach
  0067f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00684	05 23 01 00 00	 add	 eax, 291		; 00000123H
  00689	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0068e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00693	05 77 01 00 00	 add	 eax, 375		; 00000177H
  00698	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0069d	c7 05 08 00 00
	00 42 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 66 ; 00000042H
  006a7	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  006b1	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  006bb	c7 05 14 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 18 ; 00000012H
  006c5	c6 05 18 00 00
	00 26		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 38 ; 00000026H
  006cc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  006d1	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  006d4	50		 push	 eax
  006d5	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  006d8	51		 push	 ecx
  006d9	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN37@draw_apach:

; 240  : 			draw_lamp (apache_lamps.indicator_lamp_5, X_ORG +  86, Y_ORG +   5,  86,   5,  18,  18,  51);	// (80% alpha)

  006de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  006e3	c1 e8 04	 shr	 eax, 4
  006e6	83 e0 01	 and	 eax, 1
  006e9	74 5f		 je	 SHORT $LN38@draw_apach
  006eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  006f0	05 37 01 00 00	 add	 eax, 311		; 00000137H
  006f5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  006fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  006ff	05 77 01 00 00	 add	 eax, 375		; 00000177H
  00704	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00709	c7 05 08 00 00
	00 56 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 86 ; 00000056H
  00713	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  0071d	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00727	c7 05 14 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 18 ; 00000012H
  00731	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  00738	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0073d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00740	50		 push	 eax
  00741	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00744	51		 push	 ecx
  00745	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN38@draw_apach:

; 241  : 			draw_lamp (apache_lamps.indicator_lamp_6, X_ORG + 106, Y_ORG +   5, 106,   5,  18,  18,  64);	// (75% alpha)

  0074a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0074f	c1 e8 05	 shr	 eax, 5
  00752	83 e0 01	 and	 eax, 1
  00755	74 5f		 je	 SHORT $LN39@draw_apach
  00757	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0075c	05 4b 01 00 00	 add	 eax, 331		; 0000014bH
  00761	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00766	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0076b	05 77 01 00 00	 add	 eax, 375		; 00000177H
  00770	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00775	c7 05 08 00 00
	00 6a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 106 ; 0000006aH
  0077f	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00789	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00793	c7 05 14 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 18 ; 00000012H
  0079d	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  007a4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  007a9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  007ac	50		 push	 eax
  007ad	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  007b0	51		 push	 ecx
  007b1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN39@draw_apach:

; 242  : 			draw_lamp (apache_lamps.indicator_lamp_7, X_ORG + 125, Y_ORG +   5, 125,   5,  18,  18,  76);	// (70% alpha)

  007b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  007bb	c1 e8 06	 shr	 eax, 6
  007be	83 e0 01	 and	 eax, 1
  007c1	74 5f		 je	 SHORT $LN40@draw_apach
  007c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  007c8	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  007cd	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  007d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  007d7	05 77 01 00 00	 add	 eax, 375		; 00000177H
  007dc	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  007e1	c7 05 08 00 00
	00 7d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 125 ; 0000007dH
  007eb	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  007f5	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  007ff	c7 05 14 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 18 ; 00000012H
  00809	c6 05 18 00 00
	00 4c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 76 ; 0000004cH
  00810	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00815	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00818	50		 push	 eax
  00819	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0081c	51		 push	 ecx
  0081d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN40@draw_apach:

; 243  : 			draw_lamp (apache_lamps.indicator_lamp_8, X_ORG + 144, Y_ORG +   5, 144,   5,  19,  18,  89);	// (65% alpha)

  00822	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00827	c1 e8 07	 shr	 eax, 7
  0082a	83 e0 01	 and	 eax, 1
  0082d	74 5f		 je	 SHORT $LN41@draw_apach
  0082f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00834	05 71 01 00 00	 add	 eax, 369		; 00000171H
  00839	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0083e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00843	05 77 01 00 00	 add	 eax, 375		; 00000177H
  00848	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0084d	c7 05 08 00 00
	00 90 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 144 ; 00000090H
  00857	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00861	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  0086b	c7 05 14 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 18 ; 00000012H
  00875	c6 05 18 00 00
	00 59		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 89 ; 00000059H
  0087c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00881	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00884	50		 push	 eax
  00885	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00888	51		 push	 ecx
  00889	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN41@draw_apach:

; 244  : 			draw_lamp (apache_lamps.indicator_lamp_9, X_ORG + 164, Y_ORG +   4, 164,   4,  19,  19, 102);	// (60% alpha)

  0088e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00893	c1 e8 08	 shr	 eax, 8
  00896	83 e0 01	 and	 eax, 1
  00899	74 5f		 je	 SHORT $LN42@draw_apach
  0089b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  008a0	05 85 01 00 00	 add	 eax, 389		; 00000185H
  008a5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  008aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  008af	05 76 01 00 00	 add	 eax, 374		; 00000176H
  008b4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  008b9	c7 05 08 00 00
	00 a4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 164 ; 000000a4H
  008c3	c7 05 0c 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 4
  008cd	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  008d7	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  008e1	c6 05 18 00 00
	00 66		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 102 ; 00000066H
  008e8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  008ed	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  008f0	50		 push	 eax
  008f1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  008f4	51		 push	 ecx
  008f5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN42@draw_apach:

; 245  : 
; 246  : 			#undef X_ORG
; 247  : 			#undef Y_ORG
; 248  : 
; 249  : 			break;

  008fa	e9 1d 0a 00 00	 jmp	 $LN2@draw_apach
$LN43@draw_apach:

; 250  : 		}
; 251  : 		////////////////////////////////////////
; 252  : 		case COCKPIT_PANEL_LEVEL_RIGHT30:
; 253  : 		////////////////////////////////////////
; 254  : 		{
; 255  : 			#define X_ORG (0)
; 256  : 			#define Y_ORG (380)
; 257  : 
; 258  : 			draw_lamp (apache_lamps.indicator_lamp_5, X_ORG +   0, Y_ORG +  14, 120,  54,  12,  22,  51);	// (80% alpha)

  008ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00904	c1 e8 04	 shr	 eax, 4
  00907	83 e0 01	 and	 eax, 1
  0090a	74 5a		 je	 SHORT $LN44@draw_apach
  0090c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00911	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00916	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0091b	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  00920	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00925	c7 05 08 00 00
	00 78 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 120 ; 00000078H
  0092f	c7 05 0c 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 54 ; 00000036H
  00939	c7 05 10 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 12 ; 0000000cH
  00943	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  0094d	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  00954	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00959	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0095c	50		 push	 eax
  0095d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00960	51		 push	 ecx
  00961	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN44@draw_apach:

; 259  : 			draw_lamp (apache_lamps.indicator_lamp_6, X_ORG +  13, Y_ORG +  12, 133,  52,  24,  22,  64);	// (75% alpha)

  00966	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0096b	c1 e8 05	 shr	 eax, 5
  0096e	83 e0 01	 and	 eax, 1
  00971	74 5d		 je	 SHORT $LN45@draw_apach
  00973	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00978	83 c0 0d	 add	 eax, 13			; 0000000dH
  0097b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00980	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00985	05 88 01 00 00	 add	 eax, 392		; 00000188H
  0098a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0098f	c7 05 08 00 00
	00 85 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 133 ; 00000085H
  00999	c7 05 0c 00 00
	00 34 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 52 ; 00000034H
  009a3	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  009ad	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  009b7	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  009be	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  009c3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  009c6	50		 push	 eax
  009c7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  009ca	51		 push	 ecx
  009cb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN45@draw_apach:

; 260  : 			draw_lamp (apache_lamps.indicator_lamp_7, X_ORG +  38, Y_ORG +   8, 158,  48,  23,  23,  76);	// (70% alpha)

  009d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  009d5	c1 e8 06	 shr	 eax, 6
  009d8	83 e0 01	 and	 eax, 1
  009db	74 5d		 je	 SHORT $LN46@draw_apach
  009dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  009e2	83 c0 26	 add	 eax, 38			; 00000026H
  009e5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  009ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  009ef	05 84 01 00 00	 add	 eax, 388		; 00000184H
  009f4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  009f9	c7 05 08 00 00
	00 9e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 158 ; 0000009eH
  00a03	c7 05 0c 00 00
	00 30 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 48 ; 00000030H
  00a0d	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00a17	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  00a21	c6 05 18 00 00
	00 4c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 76 ; 0000004cH
  00a28	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a2d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a30	50		 push	 eax
  00a31	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a34	51		 push	 ecx
  00a35	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN46@draw_apach:

; 261  : 			draw_lamp (apache_lamps.indicator_lamp_8, X_ORG +  62, Y_ORG +   6, 182,  46,  22,  22,  89);	// (65% alpha)

  00a3a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00a3f	c1 e8 07	 shr	 eax, 7
  00a42	83 e0 01	 and	 eax, 1
  00a45	74 5d		 je	 SHORT $LN47@draw_apach
  00a47	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00a4c	83 c0 3e	 add	 eax, 62			; 0000003eH
  00a4f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00a54	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00a59	05 82 01 00 00	 add	 eax, 386		; 00000182H
  00a5e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00a63	c7 05 08 00 00
	00 b6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 182 ; 000000b6H
  00a6d	c7 05 0c 00 00
	00 2e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 46 ; 0000002eH
  00a77	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00a81	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  00a8b	c6 05 18 00 00
	00 59		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 89 ; 00000059H
  00a92	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a97	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a9a	50		 push	 eax
  00a9b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a9e	51		 push	 ecx
  00a9f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN47@draw_apach:

; 262  : 			draw_lamp (apache_lamps.indicator_lamp_9, X_ORG +  85, Y_ORG +   3, 205,  43,  22,  21, 102);	// (60% alpha)

  00aa4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00aa9	c1 e8 08	 shr	 eax, 8
  00aac	83 e0 01	 and	 eax, 1
  00aaf	74 5d		 je	 SHORT $LN48@draw_apach
  00ab1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00ab6	83 c0 55	 add	 eax, 85			; 00000055H
  00ab9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00abe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ac3	05 7f 01 00 00	 add	 eax, 383		; 0000017fH
  00ac8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00acd	c7 05 08 00 00
	00 cd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 205 ; 000000cdH
  00ad7	c7 05 0c 00 00
	00 2b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 43 ; 0000002bH
  00ae1	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00aeb	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  00af5	c6 05 18 00 00
	00 66		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 102 ; 00000066H
  00afc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00b01	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00b04	50		 push	 eax
  00b05	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00b08	51		 push	 ecx
  00b09	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN48@draw_apach:

; 263  : 
; 264  : 			#undef X_ORG
; 265  : 			#undef Y_ORG
; 266  : 
; 267  : 			break;

  00b0e	e9 09 08 00 00	 jmp	 $LN2@draw_apach
$LN49@draw_apach:

; 268  : 		}
; 269  : 		////////////////////////////////////////
; 270  : 		case COCKPIT_PANEL_DOWN20_LEFT30:
; 271  : 		////////////////////////////////////////
; 272  : 		{
; 273  : 			#define X_ORG (512)
; 274  : 			#define Y_ORG (174)
; 275  : 
; 276  : 			draw_lamp (apache_lamps.indicator_lamp_1, X_ORG +  13, Y_ORG +  12, 393,  12,  23,  20,   0);	// (100% alpha)

  00b13	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00b18	83 e0 01	 and	 eax, 1
  00b1b	74 5f		 je	 SHORT $LN50@draw_apach
  00b1d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b22	05 0d 02 00 00	 add	 eax, 525		; 0000020dH
  00b27	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b2c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b31	05 ba 00 00 00	 add	 eax, 186		; 000000baH
  00b36	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b3b	c7 05 08 00 00
	00 89 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 393 ; 00000189H
  00b45	c7 05 0c 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 12 ; 0000000cH
  00b4f	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00b59	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  00b63	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  00b6a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00b6f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00b72	50		 push	 eax
  00b73	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00b76	51		 push	 ecx
  00b77	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN50@draw_apach:

; 277  : 			draw_lamp (apache_lamps.indicator_lamp_2, X_ORG +  34, Y_ORG +  14, 414,  14,  24,  21,  13);	// (95% alpha)

  00b7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00b81	d1 e8		 shr	 eax, 1
  00b83	83 e0 01	 and	 eax, 1
  00b86	74 5f		 je	 SHORT $LN51@draw_apach
  00b88	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b8d	05 22 02 00 00	 add	 eax, 546		; 00000222H
  00b92	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b97	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b9c	05 bc 00 00 00	 add	 eax, 188		; 000000bcH
  00ba1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ba6	c7 05 08 00 00
	00 9e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 414 ; 0000019eH
  00bb0	c7 05 0c 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 14 ; 0000000eH
  00bba	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00bc4	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  00bce	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  00bd5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00bda	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00bdd	50		 push	 eax
  00bde	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00be1	51		 push	 ecx
  00be2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN51@draw_apach:

; 278  : 			draw_lamp (apache_lamps.indicator_lamp_3, X_ORG +  56, Y_ORG +  17, 436,  17,  25,  21,  25);	// (90% alpha)

  00be7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00bec	c1 e8 02	 shr	 eax, 2
  00bef	83 e0 01	 and	 eax, 1
  00bf2	74 5f		 je	 SHORT $LN52@draw_apach
  00bf4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00bf9	05 38 02 00 00	 add	 eax, 568		; 00000238H
  00bfe	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00c03	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00c08	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  00c0d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00c12	c7 05 08 00 00
	00 b4 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 436 ; 000001b4H
  00c1c	c7 05 0c 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 17 ; 00000011H
  00c26	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  00c30	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  00c3a	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  00c41	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00c46	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00c49	50		 push	 eax
  00c4a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00c4d	51		 push	 ecx
  00c4e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN52@draw_apach:

; 279  : 			draw_lamp (apache_lamps.indicator_lamp_4, X_ORG +  79, Y_ORG +  20, 459,  20,  25,  21,  38);	// (85% alpha)

  00c53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00c58	c1 e8 03	 shr	 eax, 3
  00c5b	83 e0 01	 and	 eax, 1
  00c5e	74 5f		 je	 SHORT $LN53@draw_apach
  00c60	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00c65	05 4f 02 00 00	 add	 eax, 591		; 0000024fH
  00c6a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00c6f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00c74	05 c2 00 00 00	 add	 eax, 194		; 000000c2H
  00c79	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00c7e	c7 05 08 00 00
	00 cb 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 459 ; 000001cbH
  00c88	c7 05 0c 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 20 ; 00000014H
  00c92	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  00c9c	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  00ca6	c6 05 18 00 00
	00 26		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 38 ; 00000026H
  00cad	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00cb2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00cb5	50		 push	 eax
  00cb6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00cb9	51		 push	 ecx
  00cba	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN53@draw_apach:

; 280  : 			draw_lamp (apache_lamps.indicator_lamp_5, X_ORG + 103, Y_ORG +  23, 483,  23,  25,  21,  51);	// (80% alpha)

  00cbf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00cc4	c1 e8 04	 shr	 eax, 4
  00cc7	83 e0 01	 and	 eax, 1
  00cca	74 5f		 je	 SHORT $LN54@draw_apach
  00ccc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00cd1	05 67 02 00 00	 add	 eax, 615		; 00000267H
  00cd6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00cdb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ce0	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  00ce5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00cea	c7 05 08 00 00
	00 e3 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 483 ; 000001e3H
  00cf4	c7 05 0c 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 23 ; 00000017H
  00cfe	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  00d08	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  00d12	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  00d19	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d1e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d21	50		 push	 eax
  00d22	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d25	51		 push	 ecx
  00d26	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN54@draw_apach:

; 281  : 
; 282  : 			#undef X_ORG
; 283  : 			#undef Y_ORG
; 284  : 
; 285  : 			break;

  00d2b	e9 ec 05 00 00	 jmp	 $LN2@draw_apach
$LN55@draw_apach:

; 286  : 		}
; 287  : 		////////////////////////////////////////
; 288  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 289  : 		////////////////////////////////////////
; 290  : 		{
; 291  : 			#define X_ORG (229)
; 292  : 			#define Y_ORG (173)
; 293  : 
; 294  : 			draw_lamp (apache_lamps.indicator_lamp_1, X_ORG +   6, Y_ORG +   5, 196,   5,  18,  17,   0);	// (100% alpha)

  00d30	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00d35	83 e0 01	 and	 eax, 1
  00d38	74 5f		 je	 SHORT $LN56@draw_apach
  00d3a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00d3f	05 eb 00 00 00	 add	 eax, 235		; 000000ebH
  00d44	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00d49	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00d4e	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00d53	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00d58	c7 05 08 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 196 ; 000000c4H
  00d62	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00d6c	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00d76	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00d80	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 0
  00d87	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d8c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d8f	50		 push	 eax
  00d90	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d93	51		 push	 ecx
  00d94	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN56@draw_apach:

; 295  : 			draw_lamp (apache_lamps.indicator_lamp_2, X_ORG +  25, Y_ORG +   5, 215,   5,  18,  17,  13);	// (95% alpha)

  00d99	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00d9e	d1 e8		 shr	 eax, 1
  00da0	83 e0 01	 and	 eax, 1
  00da3	74 5f		 je	 SHORT $LN57@draw_apach
  00da5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00daa	05 fe 00 00 00	 add	 eax, 254		; 000000feH
  00daf	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00db4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00db9	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00dbe	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00dc3	c7 05 08 00 00
	00 d7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 215 ; 000000d7H
  00dcd	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00dd7	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00de1	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00deb	c6 05 18 00 00
	00 0d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 13 ; 0000000dH
  00df2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00df7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00dfa	50		 push	 eax
  00dfb	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00dfe	51		 push	 ecx
  00dff	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN57@draw_apach:

; 296  : 			draw_lamp (apache_lamps.indicator_lamp_3, X_ORG +  44, Y_ORG +   5, 234,   5,  18,  17,  25);	// (90% alpha)

  00e04	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00e09	c1 e8 02	 shr	 eax, 2
  00e0c	83 e0 01	 and	 eax, 1
  00e0f	74 5f		 je	 SHORT $LN58@draw_apach
  00e11	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e16	05 11 01 00 00	 add	 eax, 273		; 00000111H
  00e1b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e20	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e25	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00e2a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e2f	c7 05 08 00 00
	00 ea 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 234 ; 000000eaH
  00e39	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00e43	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00e4d	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00e57	c6 05 18 00 00
	00 19		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 25 ; 00000019H
  00e5e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00e63	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00e66	50		 push	 eax
  00e67	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00e6a	51		 push	 ecx
  00e6b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN58@draw_apach:

; 297  : 			draw_lamp (apache_lamps.indicator_lamp_4, X_ORG +  63, Y_ORG +   5, 253,   5,  18,  17,  38);	// (85% alpha)

  00e70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00e75	c1 e8 03	 shr	 eax, 3
  00e78	83 e0 01	 and	 eax, 1
  00e7b	74 5f		 je	 SHORT $LN59@draw_apach
  00e7d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e82	05 24 01 00 00	 add	 eax, 292		; 00000124H
  00e87	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e8c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e91	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00e96	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e9b	c7 05 08 00 00
	00 fd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 253 ; 000000fdH
  00ea5	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00eaf	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00eb9	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00ec3	c6 05 18 00 00
	00 26		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 38 ; 00000026H
  00eca	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ecf	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00ed2	50		 push	 eax
  00ed3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00ed6	51		 push	 ecx
  00ed7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN59@draw_apach:

; 298  : 			draw_lamp (apache_lamps.indicator_lamp_5, X_ORG +  82, Y_ORG +   5, 272,   5,  18,  17,  51);	// (80% alpha)

  00edc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00ee1	c1 e8 04	 shr	 eax, 4
  00ee4	83 e0 01	 and	 eax, 1
  00ee7	74 5f		 je	 SHORT $LN60@draw_apach
  00ee9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00eee	05 37 01 00 00	 add	 eax, 311		; 00000137H
  00ef3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00ef8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00efd	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00f02	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00f07	c7 05 08 00 00
	00 10 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 272 ; 00000110H
  00f11	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00f1b	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00f25	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00f2f	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  00f36	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f3b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f3e	50		 push	 eax
  00f3f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f42	51		 push	 ecx
  00f43	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN60@draw_apach:

; 299  : 			draw_lamp (apache_lamps.indicator_lamp_6, X_ORG + 101, Y_ORG +   5, 291,   5,  18,  17,  64);	// (75% alpha)

  00f48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00f4d	c1 e8 05	 shr	 eax, 5
  00f50	83 e0 01	 and	 eax, 1
  00f53	74 5f		 je	 SHORT $LN61@draw_apach
  00f55	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00f5a	05 4a 01 00 00	 add	 eax, 330		; 0000014aH
  00f5f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00f64	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00f69	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00f6e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00f73	c7 05 08 00 00
	00 23 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 291 ; 00000123H
  00f7d	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00f87	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00f91	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00f9b	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  00fa2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00fa7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00faa	50		 push	 eax
  00fab	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00fae	51		 push	 ecx
  00faf	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN61@draw_apach:

; 300  : 			draw_lamp (apache_lamps.indicator_lamp_7, X_ORG + 120, Y_ORG +   5, 310,   5,  18,  17,  76);	// (70% alpha)

  00fb4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00fb9	c1 e8 06	 shr	 eax, 6
  00fbc	83 e0 01	 and	 eax, 1
  00fbf	74 5f		 je	 SHORT $LN62@draw_apach
  00fc1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00fc6	05 5d 01 00 00	 add	 eax, 349		; 0000015dH
  00fcb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00fd0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00fd5	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00fda	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00fdf	c7 05 08 00 00
	00 36 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 310 ; 00000136H
  00fe9	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  00ff3	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  00ffd	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  01007	c6 05 18 00 00
	00 4c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 76 ; 0000004cH
  0100e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01013	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01016	50		 push	 eax
  01017	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0101a	51		 push	 ecx
  0101b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN62@draw_apach:

; 301  : 			draw_lamp (apache_lamps.indicator_lamp_8, X_ORG + 139, Y_ORG +   5, 329,   5,  18,  17,  89);	// (65% alpha)

  01020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  01025	c1 e8 07	 shr	 eax, 7
  01028	83 e0 01	 and	 eax, 1
  0102b	74 5f		 je	 SHORT $LN63@draw_apach
  0102d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01032	05 70 01 00 00	 add	 eax, 368		; 00000170H
  01037	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0103c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01041	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  01046	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0104b	c7 05 08 00 00
	00 49 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 329 ; 00000149H
  01055	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  0105f	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  01069	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  01073	c6 05 18 00 00
	00 59		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 89 ; 00000059H
  0107a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0107f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01082	50		 push	 eax
  01083	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01086	51		 push	 ecx
  01087	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN63@draw_apach:

; 302  : 			draw_lamp (apache_lamps.indicator_lamp_9, X_ORG + 158, Y_ORG +   5, 348,   5,  18,  17, 102);	// (60% alpha)

  0108c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  01091	c1 e8 08	 shr	 eax, 8
  01094	83 e0 01	 and	 eax, 1
  01097	74 5f		 je	 SHORT $LN64@draw_apach
  01099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0109e	05 83 01 00 00	 add	 eax, 387		; 00000183H
  010a3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  010a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  010ad	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  010b2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  010b7	c7 05 08 00 00
	00 5c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 348 ; 0000015cH
  010c1	c7 05 0c 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 5
  010cb	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  010d5	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  010df	c6 05 18 00 00
	00 66		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 102 ; 00000066H
  010e6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  010eb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  010ee	50		 push	 eax
  010ef	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  010f2	51		 push	 ecx
  010f3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN64@draw_apach:

; 303  : 
; 304  : 			#undef X_ORG
; 305  : 			#undef Y_ORG
; 306  : 
; 307  : 			break;

  010f8	e9 1f 02 00 00	 jmp	 $LN2@draw_apach
$LN65@draw_apach:

; 308  : 		}
; 309  : 		////////////////////////////////////////
; 310  : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 311  : 		////////////////////////////////////////
; 312  : 		{
; 313  : 			#define X_ORG (0)
; 314  : 			#define Y_ORG (177)
; 315  : 
; 316  : 			draw_lamp (apache_lamps.indicator_lamp_5, X_ORG +   0, Y_ORG +  20, 510,  20,  25,  21,  51);	// (80% alpha)

  010fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  01102	c1 e8 04	 shr	 eax, 4
  01105	83 e0 01	 and	 eax, 1
  01108	74 5a		 je	 SHORT $LN66@draw_apach
  0110a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0110f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01114	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01119	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  0111e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01123	c7 05 08 00 00
	00 fe 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 510 ; 000001feH
  0112d	c7 05 0c 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 20 ; 00000014H
  01137	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  01141	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  0114b	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  01152	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01157	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0115a	50		 push	 eax
  0115b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0115e	51		 push	 ecx
  0115f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN66@draw_apach:

; 317  : 			draw_lamp (apache_lamps.indicator_lamp_6, X_ORG +  24, Y_ORG +  17, 534,  17,  25,  21,  64);	// (75% alpha)

  01164	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  01169	c1 e8 05	 shr	 eax, 5
  0116c	83 e0 01	 and	 eax, 1
  0116f	74 5d		 je	 SHORT $LN67@draw_apach
  01171	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01176	83 c0 18	 add	 eax, 24			; 00000018H
  01179	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0117e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01183	05 c2 00 00 00	 add	 eax, 194		; 000000c2H
  01188	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0118d	c7 05 08 00 00
	00 16 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 534 ; 00000216H
  01197	c7 05 0c 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 17 ; 00000011H
  011a1	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  011ab	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  011b5	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  011bc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  011c1	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  011c4	50		 push	 eax
  011c5	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  011c8	51		 push	 ecx
  011c9	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN67@draw_apach:

; 318  : 			draw_lamp (apache_lamps.indicator_lamp_7, X_ORG +  48, Y_ORG +  14, 558,  14,  23,  21,  76);	// (70% alpha)

  011ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  011d3	c1 e8 06	 shr	 eax, 6
  011d6	83 e0 01	 and	 eax, 1
  011d9	74 5d		 je	 SHORT $LN68@draw_apach
  011db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  011e0	83 c0 30	 add	 eax, 48			; 00000030H
  011e3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  011e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  011ed	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  011f2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  011f7	c7 05 08 00 00
	00 2e 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 558 ; 0000022eH
  01201	c7 05 0c 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 14 ; 0000000eH
  0120b	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  01215	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  0121f	c6 05 18 00 00
	00 4c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 76 ; 0000004cH
  01226	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0122b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0122e	50		 push	 eax
  0122f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01232	51		 push	 ecx
  01233	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN68@draw_apach:

; 319  : 			draw_lamp (apache_lamps.indicator_lamp_8, X_ORG +  70, Y_ORG +  12, 580,  12,  24,  20,  89);	// (65% alpha)

  01238	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  0123d	c1 e8 07	 shr	 eax, 7
  01240	83 e0 01	 and	 eax, 1
  01243	74 5d		 je	 SHORT $LN69@draw_apach
  01245	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0124a	83 c0 46	 add	 eax, 70			; 00000046H
  0124d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01257	05 bd 00 00 00	 add	 eax, 189		; 000000bdH
  0125c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01261	c7 05 08 00 00
	00 44 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 580 ; 00000244H
  0126b	c7 05 0c 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 12 ; 0000000cH
  01275	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  0127f	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  01289	c6 05 18 00 00
	00 59		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 89 ; 00000059H
  01290	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01295	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01298	50		 push	 eax
  01299	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0129c	51		 push	 ecx
  0129d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN69@draw_apach:

; 320  : 			draw_lamp (apache_lamps.indicator_lamp_9, X_ORG +  92, Y_ORG +   8, 602,   8,  23,  21, 102);	// (60% alpha)

  012a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  012a7	c1 e8 08	 shr	 eax, 8
  012aa	83 e0 01	 and	 eax, 1
  012ad	74 5d		 je	 SHORT $LN70@draw_apach
  012af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  012b4	83 c0 5c	 add	 eax, 92			; 0000005cH
  012b7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  012bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  012c1	05 b9 00 00 00	 add	 eax, 185		; 000000b9H
  012c6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  012cb	c7 05 08 00 00
	00 5a 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 602 ; 0000025aH
  012d5	c7 05 0c 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 8
  012df	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  012e9	c7 05 14 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 21 ; 00000015H
  012f3	c6 05 18 00 00
	00 66		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 102 ; 00000066H
  012fa	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  012ff	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01302	50		 push	 eax
  01303	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01306	51		 push	 ecx
  01307	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN70@draw_apach:

; 321  : 
; 322  : 			#undef X_ORG
; 323  : 			#undef Y_ORG
; 324  : 
; 325  : 			break;

  0130c	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN71@draw_apach:

; 326  : 		}
; 327  : 		////////////////////////////////////////
; 328  : 		default:
; 329  : 		////////////////////////////////////////
; 330  : 		{
; 331  : 			debug_fatal (lamp_error);

  0130e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PADA
  01313	50		 push	 eax
  01314	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  01319	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 332  : 
; 333  : 			break;
; 334  : 		}
; 335  : 	}
; 336  : }

  0131c	5f		 pop	 edi
  0131d	5e		 pop	 esi
  0131e	5b		 pop	 ebx
  0131f	8b e5		 mov	 esp, ebp
  01321	5d		 pop	 ebp
  01322	c2 04 00	 ret	 4
  01325	0f 1f 00	 npad	 3
$LN73@draw_apach:
  01328	00 00 00 00	 DD	 $LN27@draw_apach
  0132c	00 00 00 00	 DD	 $LN33@draw_apach
  01330	00 00 00 00	 DD	 $LN43@draw_apach
  01334	00 00 00 00	 DD	 $LN71@draw_apach
  01338	00 00 00 00	 DD	 $LN71@draw_apach
  0133c	00 00 00 00	 DD	 $LN71@draw_apach
  01340	00 00 00 00	 DD	 $LN71@draw_apach
  01344	00 00 00 00	 DD	 $LN49@draw_apach
  01348	00 00 00 00	 DD	 $LN55@draw_apach
  0134c	00 00 00 00	 DD	 $LN65@draw_apach
?draw_apache_indicator_lamps@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_apache_indicator_lamps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_lamps.c
;	COMDAT ?initialise_apache_lamps@@YGXXZ
_TEXT	SEGMENT
?initialise_apache_lamps@@YGXXZ PROC			; initialise_apache_lamps, COMDAT

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 118  : 	memset (&apache_lamps, 0, sizeof (apache_lamp_flags));

  00009	6a 04		 push	 4
  0000b	6a 00		 push	 0
  0000d	68 00 00 00 00	 push	 OFFSET ?apache_lamps@@3UAPACHE_LAMP_FLAGS@@A ; apache_lamps
  00012	e8 00 00 00 00	 call	 _memset
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 119  : }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?initialise_apache_lamps@@YGXXZ ENDP			; initialise_apache_lamps
_TEXT	ENDS
END
