; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ui_menu\ingame\fflight\ff_map.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?initialise_free_flight_screen_map_page_objects@@YGXXZ ; initialise_free_flight_screen_map_page_objects
PUBLIC	?define_free_flight_screen_map_page_objects@@YGXXZ ; define_free_flight_screen_map_page_objects
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??initialise_free_flight_screen_map_page_objects@@YGXXZ@4JA ; `initialise_free_flight_screen_map_page_objects'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `free_flight_map_left_click_function'::`1'::__LINE__Var
PUBLIC	??_C@_03GJLPFLNF@obj@				; `string'
PUBLIC	??_C@_0P@GMAOGINM@map_dimensions@		; `string'
PUBLIC	??_C@_0BF@PKPDAIBO@move?5waypoint?5events@	; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3f63d70a
PUBLIC	__real@3f800000
PUBLIC	__real@46fa0000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?push_event@@YGXP6GXXZPBD@Z:PROC		; push_event
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z:PROC	; draw_2d_map
EXTRN	?set_active_map_object@@YGXPAUUI_OBJECT@@@Z:PROC ; set_active_map_object
EXTRN	?clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z:PROC ; clear_map_mouse_over_object
EXTRN	?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z:PROC ; get_map_mouse_over_entity
EXTRN	?define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU1@@Z:PROC ; define_map_objects
EXTRN	?map_goto_function@@YGXPAUUI_OBJECT@@@Z:PROC	; map_goto_function
EXTRN	?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z:PROC ; map_centralise_function
EXTRN	?map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z:PROC ; map_insert_waypoint_function
EXTRN	?map_move_waypoint_events@@YGXXZ:PROC		; map_move_waypoint_events
EXTRN	?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_user_ptr
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?pilot_entity@@3PAUENTITY@@A:DWORD		; pilot_entity
EXTRN	?free_flight_screen@@3PAUUI_OBJECT@@A:DWORD	; free_flight_screen
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?page_map_area@@3PAUUI_OBJECT@@A DD 01H DUP (?)		; page_map_area
?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A DB 06cH DUP (?) ; page_map_dimensions
_BSS	ENDS
;	COMDAT __real@46fa0000
CONST	SEGMENT
__real@46fa0000 DD 046fa0000r			; 32000
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f63d70a
CONST	SEGMENT
__real@3f63d70a DD 03f63d70ar			; 0.89
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PKPDAIBO@move?5waypoint?5events@
CONST	SEGMENT
??_C@_0BF@PKPDAIBO@move?5waypoint?5events@ DB 'move waypoint events', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GMAOGINM@map_dimensions@
CONST	SEGMENT
??_C@_0P@GMAOGINM@map_dimensions@ DB 'map_dimensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GJLPFLNF@obj@
CONST	SEGMENT
??_C@_03GJLPFLNF@obj@ DB 'obj', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 084H ; `free_flight_map_left_click_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ui_menu\ingame\fflight\ff_ma'
	DB	'p.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_free_flight_screen_map_page_objects@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_free_flight_screen_map_page_objects@@YGXXZ@4JA DD 05aH ; `initialise_free_flight_screen_map_page_objects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\fflight\ff_map.c
;	COMDAT ?free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv155 = -84						; size = 4
tv142 = -84						; size = 4
tv95 = -84						; size = 4
tv148 = -80						; size = 4
tv141 = -80						; size = 4
tv87 = -80						; size = 4
_side$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_en$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; free_flight_map_left_click_function, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 133  : 	entity
; 134  : 		*en;
; 135  : 
; 136  : 	map_dimension_type
; 137  : 		*map_dimensions;
; 138  : 
; 139  : 	entity_sides
; 140  : 		side;
; 141  : 
; 142  : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@free_fligh
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@free_fligh:

; 143  : 
; 144  : 	if ((int)arg != BUTTON_STATE_DOWN)

  00027	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  0002b	74 05		 je	 SHORT $LN5@free_fligh

; 145  : 	{
; 146  : 		return;

  0002d	e9 d3 01 00 00	 jmp	 $LN1@free_fligh
$LN5@free_fligh:

; 147  : 	}
; 148  : 
; 149  : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00032	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00035	50		 push	 eax
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00039	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00042	ff d0		 call	 eax
  00044	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 150  : 
; 151  : 	ASSERT (map_dimensions);

  00047	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  0004b	75 18		 jne	 SHORT $LN6@free_fligh
  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00052	83 c0 13	 add	 eax, 19			; 00000013H
  00055	50		 push	 eax
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00060	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@free_fligh:

; 152  : 
; 153  : 	map_dimensions->selected_entity = NULL;

  00065	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00068	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 154  : 
; 155  : 	side = (entity_sides) get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  0006f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00076	74 0c		 je	 SHORT $LN12@free_fligh
  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	89 4d b0	 mov	 DWORD PTR tv87[ebp], ecx
  00082	eb 21		 jmp	 SHORT $LN13@free_fligh
$LN12@free_fligh:
  00084	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0008a	83 c2 17	 add	 edx, 23			; 00000017H
  0008d	52		 push	 edx
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00093	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN13@free_fligh:
  000a5	b9 01 00 00 00	 mov	 ecx, 1
  000aa	85 c9		 test	 ecx, ecx
  000ac	74 09		 je	 SHORT $LN14@free_fligh
  000ae	c7 45 ac bb 00
	00 00		 mov	 DWORD PTR tv95[ebp], 187 ; 000000bbH
  000b5	eb 21		 jmp	 SHORT $LN15@free_fligh
$LN14@free_fligh:
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  000bd	83 c2 17	 add	 edx, 23			; 00000017H
  000c0	52		 push	 edx
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN15@free_fligh:
  000d8	68 bb 00 00 00	 push	 187			; 000000bbH
  000dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000e3	51		 push	 ecx
  000e4	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv87[ebp], 1116
  000eb	8b 45 ac	 mov	 eax, DWORD PTR tv95[ebp]
  000ee	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000f5	ff d1		 call	 ecx
  000f7	89 45 f4	 mov	 DWORD PTR _side$[ebp], eax

; 156  : 	
; 157  : 	//
; 158  : 	// Get current mouse-over entity
; 159  : 	//
; 160  : 
; 161  : 	en = get_map_mouse_over_entity (map_dimensions);

  000fa	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 ?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z ; get_map_mouse_over_entity
  00103	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 162  : 
; 163  : 	if (en)

  00106	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0010a	0f 84 dd 00 00
	00		 je	 $LN7@free_fligh

; 164  : 	{
; 165  : 		switch (get_local_entity_type (en))

  00110	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00114	74 0a		 je	 SHORT $LN16@free_fligh
  00116	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00119	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011b	89 4d b0	 mov	 DWORD PTR tv141[ebp], ecx
  0011e	eb 1d		 jmp	 SHORT $LN17@free_fligh
$LN16@free_fligh:
  00120	68 a5 00 00 00	 push	 165			; 000000a5H
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00130	52		 push	 edx
  00131	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00136	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN17@free_fligh:
  0013d	8b 45 b0	 mov	 eax, DWORD PTR tv141[ebp]
  00140	89 45 ac	 mov	 DWORD PTR tv142[ebp], eax
  00143	83 7d ac 24	 cmp	 DWORD PTR tv142[ebp], 36 ; 00000024H
  00147	74 05		 je	 SHORT $LN8@free_fligh
  00149	e9 9d 00 00 00	 jmp	 $LN2@free_fligh
$LN8@free_fligh:

; 166  : 		{
; 167  : 			case ENTITY_TYPE_WAYPOINT:
; 168  : 			{
; 169  : 				if (get_local_entity_int_value (en, INT_TYPE_PLANNER_MOVEABLE))

  0014e	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00152	74 0a		 je	 SHORT $LN18@free_fligh
  00154	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00157	8b 08		 mov	 ecx, DWORD PTR [eax]
  00159	89 4d b0	 mov	 DWORD PTR tv148[ebp], ecx
  0015c	eb 1d		 jmp	 SHORT $LN19@free_fligh
$LN18@free_fligh:
  0015e	68 a9 00 00 00	 push	 169			; 000000a9H
  00163	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00168	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016e	52		 push	 edx
  0016f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00174	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN19@free_fligh:
  0017b	b8 01 00 00 00	 mov	 eax, 1
  00180	85 c0		 test	 eax, eax
  00182	74 09		 je	 SHORT $LN20@free_fligh
  00184	c7 45 ac 9b 00
	00 00		 mov	 DWORD PTR tv155[ebp], 155 ; 0000009bH
  0018b	eb 1d		 jmp	 SHORT $LN21@free_fligh
$LN20@free_fligh:
  0018d	68 a9 00 00 00	 push	 169			; 000000a9H
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00197	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0019d	51		 push	 ecx
  0019e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN21@free_fligh:
  001aa	68 9b 00 00 00	 push	 155			; 0000009bH
  001af	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  001b2	52		 push	 edx
  001b3	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv148[ebp], 1116
  001ba	8b 4d ac	 mov	 ecx, DWORD PTR tv155[ebp]
  001bd	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001c4	ff d2		 call	 edx
  001c6	85 c0		 test	 eax, eax
  001c8	74 21		 je	 SHORT $LN2@free_fligh

; 170  : 				{
; 171  : 					set_active_map_object (obj);

  001ca	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?set_active_map_object@@YGXPAUUI_OBJECT@@@Z ; set_active_map_object

; 172  : 	
; 173  : 					map_dimensions->selected_entity = en;

  001d3	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  001d6	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  001d9	89 48 48	 mov	 DWORD PTR [eax+72], ecx

; 174  : 	
; 175  : 					push_event (map_move_waypoint_events, "move waypoint events");

  001dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PKPDAIBO@move?5waypoint?5events@
  001e1	68 00 00 00 00	 push	 OFFSET ?map_move_waypoint_events@@YGXXZ ; map_move_waypoint_events
  001e6	e8 00 00 00 00	 call	 ?push_event@@YGXP6GXXZPBD@Z ; push_event
$LN2@free_fligh:

; 176  : 				}
; 177  : 				
; 178  : 				break;
; 179  : 			}
; 180  : 		}
; 181  : 		
; 182  : 		return;

  001eb	eb 18		 jmp	 SHORT $LN1@free_fligh
$LN7@free_fligh:

; 183  : 	}
; 184  : 		
; 185  : 	
; 186  : 	//
; 187  : 	// Check Insert Waypoint Icons
; 188  : 	//
; 189  : 
; 190  : 	if (map_insert_waypoint_function (obj))

  001ed	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z ; map_insert_waypoint_function
  001f6	85 c0		 test	 eax, eax
  001f8	74 02		 je	 SHORT $LN10@free_fligh

; 191  : 	{
; 192  : 		return;

  001fa	eb 09		 jmp	 SHORT $LN1@free_fligh
$LN10@free_fligh:

; 193  : 	}
; 194  : 	
; 195  : 
; 196  : 	//
; 197  : 	// Goto
; 198  : 	//
; 199  : 
; 200  : 	map_goto_function (obj);

  001fc	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001ff	50		 push	 eax
  00200	e8 00 00 00 00	 call	 ?map_goto_function@@YGXPAUUI_OBJECT@@@Z ; map_goto_function
$LN1@free_fligh:

; 201  : }

  00205	5f		 pop	 edi
  00206	5e		 pop	 esi
  00207	5b		 pop	 ebx
  00208	8b e5		 mov	 esp, ebp
  0020a	5d		 pop	 ebp
  0020b	c2 08 00	 ret	 8
?free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; free_flight_map_left_click_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\fflight\ff_map.c
;	COMDAT ?draw_page_map@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?draw_page_map@@YGXPAUUI_OBJECT@@PAX@Z PROC		; draw_page_map, COMDAT

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 124  : 	draw_2d_map (obj, arg);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z ; draw_2d_map

; 125  : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?draw_page_map@@YGXPAUUI_OBJECT@@PAX@Z ENDP		; draw_page_map
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\fflight\ff_map.c
;	COMDAT ?define_free_flight_screen_map_page_objects@@YGXXZ
_TEXT	SEGMENT
_y2$ = -16						; size = 4
_x2$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
?define_free_flight_screen_map_page_objects@@YGXXZ PROC	; define_free_flight_screen_map_page_objects, COMDAT

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 209  : 	float
; 210  : 		x1,
; 211  : 		y1,
; 212  : 		x2,
; 213  : 		y2;
; 214  : 
; 215  : 	/////////////////////////////////////////////////////////////////
; 216  : 	// Map Area
; 217  : 
; 218  : 	x1 = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 219  : 	y1 = 0.0;

  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 220  : 	x2 = 1.0;

  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00021	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 221  : 	y2 = 0.89;

  00026	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f63d70a
  0002e	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 222  : 
; 223  : 	page_map_area = create_ui_object

  00033	6a 11		 push	 17			; 00000011H
  00035	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0003a	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  0003f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00043	83 ec 08	 sub	 esp, 8
  00046	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0004b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00050	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  00055	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00059	83 ec 08	 sub	 esp, 8
  0005c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00061	6a 59		 push	 89			; 00000059H
  00063	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00068	83 ec 08	 sub	 esp, 8
  0006b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00070	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00075	83 ec 08	 sub	 esp, 8
  00078	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0007d	6a 58		 push	 88			; 00000058H
  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?free_flight_screen@@3PAUUI_OBJECT@@A ; free_flight_screen
  00084	50		 push	 eax
  00085	6a 32		 push	 50			; 00000032H
  00087	6a 01		 push	 1
  00089	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0008e	83 c4 38	 add	 esp, 56			; 00000038H
  00091	a3 00 00 00 00	 mov	 DWORD PTR ?page_map_area@@3PAUUI_OBJECT@@A, eax

; 224  : 		(
; 225  : 			UI_TYPE_AREA,
; 226  : 			UI_ATTR_PARENT (free_flight_screen),
; 227  : 			UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 228  : 			UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 229  : 			UI_ATTR_END
; 230  : 		);
; 231  : 
; 232  : 	/////////////////////////////////////////////////////////////////
; 233  : 	// Map Objects
; 234  : 
; 235  : 	define_map_objects (page_map_area, &page_map_dimensions, draw_page_map, free_flight_map_left_click_function, map_centralise_function, NULL);

  00096	6a 00		 push	 0
  00098	68 00 00 00 00	 push	 OFFSET ?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_centralise_function
  0009d	68 00 00 00 00	 push	 OFFSET ?free_flight_map_left_click_function@@YGXPAUUI_OBJECT@@PAX@Z ; free_flight_map_left_click_function
  000a2	68 00 00 00 00	 push	 OFFSET ?draw_page_map@@YGXPAUUI_OBJECT@@PAX@Z ; draw_page_map
  000a7	68 00 00 00 00	 push	 OFFSET ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A
  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?page_map_area@@3PAUUI_OBJECT@@A
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU1@@Z ; define_map_objects

; 236  : }

  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c3		 ret	 0
?define_free_flight_screen_map_page_objects@@YGXXZ ENDP	; define_free_flight_screen_map_page_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\fflight\ff_map.c
;	COMDAT ?initialise_free_flight_screen_map_page_objects@@YGXXZ
_TEXT	SEGMENT
tv80 = -84						; size = 4
tv72 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_pos$ = -4						; size = 4
?initialise_free_flight_screen_map_page_objects@@YGXXZ PROC ; initialise_free_flight_screen_map_page_objects, COMDAT

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 91   : 	vec3d
; 92   : 		*pos;
; 93   : 		
; 94   : 	set_active_map_object (NULL);

  00009	6a 00		 push	 0
  0000b	e8 00 00 00 00	 call	 ?set_active_map_object@@YGXPAUUI_OBJECT@@@Z ; set_active_map_object

; 95   : 
; 96   : 	if (get_gunship_entity ())

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00017	0f 84 b6 00 00
	00		 je	 $LN2@initialise

; 97   : 	{
; 98   : 		pos = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN5@initialise
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b0	 mov	 DWORD PTR tv72[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN6@initialise
$LN5@initialise:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_free_flight_screen_map_page_objects@@YGXXZ@4JA
  00038	83 c2 08	 add	 edx, 8
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN6@initialise:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN7@initialise
  0005c	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv80[ebp], 8
  00063	eb 21		 jmp	 SHORT $LN8@initialise
$LN7@initialise:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initialise_free_flight_screen_map_page_objects@@YGXXZ@4JA
  0006b	83 c2 08	 add	 edx, 8
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@HACFKFIG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN8@initialise:
  00086	6a 08		 push	 8
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	6b 55 b0 60	 imul	 edx, DWORD PTR tv72[ebp], 96
  00093	8b 45 ac	 mov	 eax, DWORD PTR tv80[ebp]
  00096	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0009d	ff d1		 call	 ecx
  0009f	89 45 fc	 mov	 DWORD PTR _pos$[ebp], eax

; 99   : 
; 100  : 		page_map_dimensions.x = pos->x;

  000a2	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  000a5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000a9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A, xmm0

; 101  : 		page_map_dimensions.z = pos->z;

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  000b4	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000b9	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A+4, xmm0

; 102  : 
; 103  : 		page_map_dimensions.size = 32.0 * KILOMETRE;

  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46fa0000
  000c9	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A+8, xmm0

; 104  : 	}
; 105  : 	else

  000d1	eb 63		 jmp	 SHORT $LN3@initialise
$LN2@initialise:

; 106  : 	{
; 107  : 		page_map_dimensions.x = MID_MAP_X;

  000d3	f3 0f 10 05 30
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+48
  000db	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A, xmm0

; 108  : 		page_map_dimensions.z = MID_MAP_Z;

  000e3	f3 0f 10 05 38
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+56
  000eb	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A+4, xmm0

; 109  : 
; 110  : 		page_map_dimensions.size = min (MAX_MAP_X - MIN_MAP_X, MAX_MAP_Z - MIN_MAP_Z);

  000f3	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000fb	f3 0f 5c 05 2c
	00 00 00	 subss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00103	f3 0f 11 45 b8	 movss	 DWORD PTR $T2[ebp], xmm0
  00108	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00110	f3 0f 5c 05 24
	00 00 00	 subss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00118	f3 0f 11 45 b4	 movss	 DWORD PTR $T1[ebp], xmm0
  0011d	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  00120	50		 push	 eax
  00121	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  00124	51		 push	 ecx
  00125	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0012a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0012e	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A+8, xmm0
$LN3@initialise:

; 111  : 	}
; 112  : 	
; 113  : 	page_map_dimensions.selected_entity = NULL;

  00136	c7 05 48 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A+72, 0

; 114  : 
; 115  : 	clear_map_mouse_over_object (&page_map_dimensions);

  00140	68 00 00 00 00	 push	 OFFSET ?page_map_dimensions@@3UMAP_DIMENSION_TYPE@@A
  00145	e8 00 00 00 00	 call	 ?clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z ; clear_map_mouse_over_object

; 116  : }

  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c3		 ret	 0
?initialise_free_flight_screen_map_page_objects@@YGXXZ ENDP ; initialise_free_flight_screen_map_page_objects
_TEXT	ENDS
END
