; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\app3d\3d_data.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?ix_640_480@@3HA				; ix_640_480
PUBLIC	?iy_640_480@@3HA				; iy_640_480
PUBLIC	?fx_640_480@@3MA				; fx_640_480
PUBLIC	?fy_640_480@@3MA				; fy_640_480
PUBLIC	?full_screen_width@@3MA				; full_screen_width
PUBLIC	?full_screen_height@@3MA			; full_screen_height
PUBLIC	?full_screen_x_min@@3MA				; full_screen_x_min
PUBLIC	?full_screen_y_min@@3MA				; full_screen_y_min
PUBLIC	?full_screen_x_mid@@3MA				; full_screen_x_mid
PUBLIC	?full_screen_y_mid@@3MA				; full_screen_y_mid
PUBLIC	?full_screen_x_max@@3MA				; full_screen_x_max
PUBLIC	?full_screen_y_max@@3MA				; full_screen_y_max
PUBLIC	?full_screen_aspect_ratio@@3MA			; full_screen_aspect_ratio
PUBLIC	?full_screen_width_view_angle@@3MA		; full_screen_width_view_angle
PUBLIC	?full_screen_height_view_angle@@3MA		; full_screen_height_view_angle
PUBLIC	?int_full_screen_width@@3HA			; int_full_screen_width
PUBLIC	?int_full_screen_height@@3HA			; int_full_screen_height
PUBLIC	?full_screen_hi_res@@3HA			; full_screen_hi_res
PUBLIC	?full_screen_colourdepth@@3HA			; full_screen_colourdepth
PUBLIC	?full_screen_3d_information@@3HA		; full_screen_3d_information
PUBLIC	?original_d3d_can_render_to_texture@@3HA	; original_d3d_can_render_to_texture
PUBLIC	?main_3d_env@@3PAUENV_3D@@A			; main_3d_env
PUBLIC	?main_3d_single_light_env@@3PAUENV_3D@@A	; main_3d_single_light_env
PUBLIC	?main_vp@@3UVIEWPOINT@@A			; main_vp
PUBLIC	?current_3d_display_tint@@3W4DISPLAY_3D_TINTS@@A ; current_3d_display_tint
PUBLIC	?current_3d_light_level@@3W4DISPLAY_3D_LIGHT_LEVELS@@A ; current_3d_light_level
PUBLIC	?current_3d_noise_level@@3W4DISPLAY_3D_NOISE_LEVELS@@A ; current_3d_noise_level
_BSS	SEGMENT
?ix_640_480@@3HA DD 01H DUP (?)				; ix_640_480
?iy_640_480@@3HA DD 01H DUP (?)				; iy_640_480
?fx_640_480@@3MA DD 01H DUP (?)				; fx_640_480
?fy_640_480@@3MA DD 01H DUP (?)				; fy_640_480
?full_screen_x_min@@3MA DD 01H DUP (?)			; full_screen_x_min
?full_screen_y_min@@3MA DD 01H DUP (?)			; full_screen_y_min
?full_screen_hi_res@@3HA DD 01H DUP (?)			; full_screen_hi_res
?full_screen_3d_information@@3HA DD 01H DUP (?)		; full_screen_3d_information
?original_d3d_can_render_to_texture@@3HA DD 01H DUP (?)	; original_d3d_can_render_to_texture
?main_3d_env@@3PAUENV_3D@@A DD 01H DUP (?)		; main_3d_env
?main_3d_single_light_env@@3PAUENV_3D@@A DD 01H DUP (?)	; main_3d_single_light_env
?main_vp@@3UVIEWPOINT@@A DB 030H DUP (?)		; main_vp
?current_3d_display_tint@@3W4DISPLAY_3D_TINTS@@A DD 01H DUP (?) ; current_3d_display_tint
?current_3d_light_level@@3W4DISPLAY_3D_LIGHT_LEVELS@@A DD 01H DUP (?) ; current_3d_light_level
?current_3d_noise_level@@3W4DISPLAY_3D_NOISE_LEVELS@@A DD 01H DUP (?) ; current_3d_noise_level
_BSS	ENDS
_DATA	SEGMENT
?full_screen_width@@3MA DD 044200000r		; 640	; full_screen_width
?full_screen_height@@3MA DD 043f00000r		; 480	; full_screen_height
?full_screen_x_mid@@3MA DD 043a00000r		; 320	; full_screen_x_mid
?full_screen_y_mid@@3MA DD 043700000r		; 240	; full_screen_y_mid
?full_screen_x_max@@3MA DD 0441ffff0r		; 639.999 ; full_screen_x_max
?full_screen_y_max@@3MA DD 043efffdfr		; 479.999 ; full_screen_y_max
?full_screen_aspect_ratio@@3MA DD 03fa40150r	; 1.28129 ; full_screen_aspect_ratio
?full_screen_width_view_angle@@3MA DD 03f8604dar ; 1.04702 ; full_screen_width_view_angle
?full_screen_height_view_angle@@3MA DD 03f51319br ; 0.817163 ; full_screen_height_view_angle
?int_full_screen_width@@3HA DD 0280H			; int_full_screen_width
?int_full_screen_height@@3HA DD 01e0H			; int_full_screen_height
?full_screen_colourdepth@@3HA DD 010H			; full_screen_colourdepth
_DATA	ENDS
PUBLIC	_atanf
PUBLIC	_tanf
PUBLIC	?atan@@YGMM@Z					; atan
PUBLIC	?tan@@YGMM@Z					; tan
PUBLIC	?set_3d_resolutions@@YGXMM@Z			; set_3d_resolutions
PUBLIC	?increase_3d_resolutions@@YGXPAUEVENT@@@Z	; increase_3d_resolutions
PUBLIC	?decrease_3d_resolutions@@YGXPAUEVENT@@@Z	; decrease_3d_resolutions
PUBLIC	?cycle_3d_colourdepth@@YGXPAUEVENT@@@Z		; cycle_3d_colourdepth
PUBLIC	?toggle_3d_information@@YGXPAUEVENT@@@Z		; toggle_3d_information
PUBLIC	?toggle_3d_object_lod_calculations@@YGXPAUEVENT@@@Z ; toggle_3d_object_lod_calculations
PUBLIC	?get_integer_screen_width@@YGHXZ		; get_integer_screen_width
PUBLIC	?get_integer_screen_height@@YGHXZ		; get_integer_screen_height
PUBLIC	?get_integer_screen_x_min@@YGHXZ		; get_integer_screen_x_min
PUBLIC	?get_integer_screen_y_min@@YGHXZ		; get_integer_screen_y_min
PUBLIC	?get_integer_screen_x_mid@@YGHXZ		; get_integer_screen_x_mid
PUBLIC	?get_integer_screen_y_mid@@YGHXZ		; get_integer_screen_y_mid
PUBLIC	?get_integer_screen_x_max@@YGHXZ		; get_integer_screen_x_max
PUBLIC	?get_integer_screen_y_max@@YGHXZ		; get_integer_screen_y_max
PUBLIC	?get_height_view_angle@@YGMM@Z			; get_height_view_angle
PUBLIC	?set_view_angles@@YGXM@Z			; set_view_angles
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@407e000000000000
PUBLIC	__real@4084000000000000
PUBLIC	__real@43f00000
PUBLIC	__real@44200000
EXTRN	_atan:PROC
EXTRN	_tan:PROC
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?get_graphics_resolution_index@@YGHHH@Z:PROC	; get_graphics_resolution_index
EXTRN	?set_ui_font_resolution@@YGXHH@Z:PROC		; set_ui_font_resolution
EXTRN	?reinitialise_ui_fonts@@YGXXZ:PROC		; reinitialise_ui_fonts
EXTRN	?number_of_graphics_resolution_modes_available@@3HA:DWORD ; number_of_graphics_resolution_modes_available
EXTRN	?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A:BYTE ; graphics_resolution_modes_available
EXTRN	?object_3d_perform_lod_calculations@@3HA:DWORD	; object_3d_perform_lod_calculations
EXTRN	?command_line_force_resolution@@3HA:DWORD	; command_line_force_resolution
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	__fltused:DWORD
;	COMDAT __real@44200000
CONST	SEGMENT
__real@44200000 DD 044200000r			; 640
CONST	ENDS
;	COMDAT __real@43f00000
CONST	SEGMENT
__real@43f00000 DD 043f00000r			; 480
CONST	ENDS
;	COMDAT __real@4084000000000000
CONST	SEGMENT
__real@4084000000000000 DQ 04084000000000000r	; 640
CONST	ENDS
;	COMDAT __real@407e000000000000
CONST	SEGMENT
__real@407e000000000000 DQ 0407e000000000000r	; 480
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?set_view_angles@@YGXM@Z
_TEXT	SEGMENT
_width_view_angle$ = 8					; size = 4
?set_view_angles@@YGXM@Z PROC				; set_view_angles, COMDAT

; 441  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 442  : 	full_screen_width_view_angle = width_view_angle;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _width_view_angle$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_width_view_angle@@3MA, xmm0

; 443  : 	full_screen_height_view_angle = get_height_view_angle ( width_view_angle );

  00016	51		 push	 ecx
  00017	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _width_view_angle$[ebp]
  0001c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00021	e8 00 00 00 00	 call	 ?get_height_view_angle@@YGMM@Z ; get_height_view_angle
  00026	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?full_screen_height_view_angle@@3MA ; full_screen_height_view_angle

; 444  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?set_view_angles@@YGXM@Z ENDP				; set_view_angles
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_height_view_angle@@YGMM@Z
_TEXT	SEGMENT
tv86 = -76						; size = 4
tv83 = -72						; size = 4
tv78 = -68						; size = 4
_width_view_angle$ = 8					; size = 4
?get_height_view_angle@@YGMM@Z PROC			; get_height_view_angle, COMDAT

; 432  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 433  : 	return 2 * atan ( tan ( width_view_angle / 2 ) / full_screen_aspect_ratio );

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _width_view_angle$[ebp]
  0000e	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00016	51		 push	 ecx
  00017	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001c	e8 00 00 00 00	 call	 ?tan@@YGMM@Z		; tan
  00021	d9 5d bc	 fstp	 DWORD PTR tv78[ebp]
  00024	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR tv78[ebp]
  00029	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?full_screen_aspect_ratio@@3MA
  00031	51		 push	 ecx
  00032	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00037	e8 00 00 00 00	 call	 ?atan@@YGMM@Z		; atan
  0003c	d9 5d b8	 fstp	 DWORD PTR tv83[ebp]
  0003f	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv83[ebp]
  00044	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  0004c	f3 0f 11 45 b4	 movss	 DWORD PTR tv86[ebp], xmm0
  00051	d9 45 b4	 fld	 DWORD PTR tv86[ebp]

; 434  : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?get_height_view_angle@@YGMM@Z ENDP			; get_height_view_angle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_y_max@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_y_max@@YGHXZ PROC			; get_integer_screen_y_max, COMDAT

; 416  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 417  : 	int
; 418  : 		result;
; 419  : 
; 420  : 	convert_float_to_int (full_screen_y_max, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 421  : 
; 422  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 423  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_y_max@@YGHXZ ENDP			; get_integer_screen_y_max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_x_max@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_x_max@@YGHXZ PROC			; get_integer_screen_x_max, COMDAT

; 402  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 403  : 	int
; 404  : 		result;
; 405  : 
; 406  : 	convert_float_to_int (full_screen_x_max, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_max@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 407  : 
; 408  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 409  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_x_max@@YGHXZ ENDP			; get_integer_screen_x_max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_y_mid@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_y_mid@@YGHXZ PROC			; get_integer_screen_y_mid, COMDAT

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 389  : 	int
; 390  : 		result;
; 391  : 
; 392  : 	convert_float_to_int (full_screen_y_mid, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 393  : 
; 394  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 395  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_y_mid@@YGHXZ ENDP			; get_integer_screen_y_mid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_x_mid@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_x_mid@@YGHXZ PROC			; get_integer_screen_x_mid, COMDAT

; 374  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 375  : 	int
; 376  : 		result;
; 377  : 
; 378  : 	convert_float_to_int (full_screen_x_mid, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 379  : 
; 380  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 381  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_x_mid@@YGHXZ ENDP			; get_integer_screen_x_mid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_y_min@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_y_min@@YGHXZ PROC			; get_integer_screen_y_min, COMDAT

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 361  : 	int
; 362  : 		result;
; 363  : 
; 364  : 	convert_float_to_int (full_screen_y_min, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 365  : 
; 366  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 367  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_y_min@@YGHXZ ENDP			; get_integer_screen_y_min
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_x_min@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_x_min@@YGHXZ PROC			; get_integer_screen_x_min, COMDAT

; 346  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 347  : 	int
; 348  : 		result;
; 349  : 
; 350  : 	convert_float_to_int (full_screen_x_min, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_min@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 351  : 
; 352  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 353  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_x_min@@YGHXZ ENDP			; get_integer_screen_x_min
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_height@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_height@@YGHXZ PROC			; get_integer_screen_height, COMDAT

; 332  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 333  : 	int
; 334  : 		result;
; 335  : 
; 336  : 	convert_float_to_int (full_screen_height, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_height@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 337  : 
; 338  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 339  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_height@@YGHXZ ENDP			; get_integer_screen_height
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?get_integer_screen_width@@YGHXZ
_TEXT	SEGMENT
_result$ = -4						; size = 4
?get_integer_screen_width@@YGHXZ PROC			; get_integer_screen_width, COMDAT

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 319  : 	int
; 320  : 		result;
; 321  : 
; 322  : 	convert_float_to_int (full_screen_width, &result);

  00009	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_width@@3MA
  00016	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001b	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 323  : 
; 324  : 	return result;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 325  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?get_integer_screen_width@@YGHXZ ENDP			; get_integer_screen_width
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?toggle_3d_object_lod_calculations@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?toggle_3d_object_lod_calculations@@YGXPAUEVENT@@@Z PROC ; toggle_3d_object_lod_calculations, COMDAT

; 299  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 300  : 
; 301  : 	if ( object_3d_perform_lod_calculations )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?object_3d_perform_lod_calculations@@3HA, 0 ; object_3d_perform_lod_calculations
  00010	74 0c		 je	 SHORT $LN2@toggle_3d_

; 302  : 	{
; 303  : 
; 304  : 		object_3d_perform_lod_calculations = FALSE;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?object_3d_perform_lod_calculations@@3HA, 0 ; object_3d_perform_lod_calculations

; 305  : 	}
; 306  : 	else

  0001c	eb 0a		 jmp	 SHORT $LN1@toggle_3d_
$LN2@toggle_3d_:

; 307  : 	{
; 308  : 
; 309  : 		object_3d_perform_lod_calculations = TRUE;

  0001e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?object_3d_perform_lod_calculations@@3HA, 1 ; object_3d_perform_lod_calculations
$LN1@toggle_3d_:

; 310  : 	}
; 311  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?toggle_3d_object_lod_calculations@@YGXPAUEVENT@@@Z ENDP ; toggle_3d_object_lod_calculations
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?toggle_3d_information@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?toggle_3d_information@@YGXPAUEVENT@@@Z PROC		; toggle_3d_information, COMDAT

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 281  : 
; 282  : 	if ( full_screen_3d_information )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?full_screen_3d_information@@3HA, 0 ; full_screen_3d_information
  00010	74 0c		 je	 SHORT $LN2@toggle_3d_

; 283  : 	{
; 284  : 
; 285  : 		full_screen_3d_information = FALSE;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?full_screen_3d_information@@3HA, 0 ; full_screen_3d_information

; 286  : 	}
; 287  : 	else

  0001c	eb 0a		 jmp	 SHORT $LN1@toggle_3d_
$LN2@toggle_3d_:

; 288  : 	{
; 289  : 
; 290  : 		full_screen_3d_information = TRUE;

  0001e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?full_screen_3d_information@@3HA, 1 ; full_screen_3d_information
$LN1@toggle_3d_:

; 291  : 	}
; 292  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?toggle_3d_information@@YGXPAUEVENT@@@Z ENDP		; toggle_3d_information
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?cycle_3d_colourdepth@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_ev$ = 8						; size = 4
?cycle_3d_colourdepth@@YGXPAUEVENT@@@Z PROC		; cycle_3d_colourdepth, COMDAT

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 262  : 
; 263  : 	if ( full_screen_colourdepth == 16 )

  00009	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?full_screen_colourdepth@@3HA, 16 ; full_screen_colourdepth, 00000010H
  00010	75 0c		 jne	 SHORT $LN2@cycle_3d_c

; 264  : 	{
; 265  : 
; 266  : 		full_screen_colourdepth = 32;

  00012	c7 05 00 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?full_screen_colourdepth@@3HA, 32 ; full_screen_colourdepth, 00000020H

; 267  : 	}
; 268  : 	else

  0001c	eb 0a		 jmp	 SHORT $LN1@cycle_3d_c
$LN2@cycle_3d_c:

; 269  : 	{
; 270  : 
; 271  : 		full_screen_colourdepth = 16;

  0001e	c7 05 00 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?full_screen_colourdepth@@3HA, 16 ; full_screen_colourdepth, 00000010H
$LN1@cycle_3d_c:

; 272  : 	}
; 273  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?cycle_3d_colourdepth@@YGXPAUEVENT@@@Z ENDP		; cycle_3d_colourdepth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?decrease_3d_resolutions@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_index$ = -4						; size = 4
_ev$ = 8						; size = 4
?decrease_3d_resolutions@@YGXPAUEVENT@@@Z PROC		; decrease_3d_resolutions, COMDAT

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 241  : 
; 242  : 	int
; 243  : 		index;
; 244  : 
; 245  : 	index = get_graphics_resolution_index ( full_screen_width, full_screen_height );

  00009	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?full_screen_height@@3MA
  00011	50		 push	 eax
  00012	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?full_screen_width@@3MA
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?get_graphics_resolution_index@@YGHHH@Z ; get_graphics_resolution_index
  00020	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 246  : 
; 247  : 	index -= 1;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00026	83 e8 01	 sub	 eax, 1
  00029	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 248  : 
; 249  : 	if ( index >= 0 )

  0002c	78 29		 js	 SHORT $LN2@decrease_3

; 250  : 	{
; 251  : 
; 252  : 		set_3d_resolutions ( ( float ) graphics_resolution_modes_available[index].width, ( float ) graphics_resolution_modes_available[index].height );

  0002e	6b 45 fc 0c	 imul	 eax, DWORD PTR _index$[ebp], 12
  00032	f3 0f 2a 80 04
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4]
  0003a	51		 push	 ecx
  0003b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00040	6b 4d fc 0c	 imul	 ecx, DWORD PTR _index$[ebp], 12
  00044	f3 0f 2a 81 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx]
  0004c	51		 push	 ecx
  0004d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00052	e8 00 00 00 00	 call	 ?set_3d_resolutions@@YGXMM@Z ; set_3d_resolutions
$LN2@decrease_3:

; 253  : 	}
; 254  : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?decrease_3d_resolutions@@YGXPAUEVENT@@@Z ENDP		; decrease_3d_resolutions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?increase_3d_resolutions@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_index$ = -4						; size = 4
_ev$ = 8						; size = 4
?increase_3d_resolutions@@YGXPAUEVENT@@@Z PROC		; increase_3d_resolutions, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 220  : 
; 221  : 	int
; 222  : 		index;
; 223  : 
; 224  : 	index = get_graphics_resolution_index ( full_screen_width, full_screen_height );

  00009	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?full_screen_height@@3MA
  00011	50		 push	 eax
  00012	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?full_screen_width@@3MA
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ?get_graphics_resolution_index@@YGHHH@Z ; get_graphics_resolution_index
  00020	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 225  : 
; 226  : 	index += 1;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00026	83 c0 01	 add	 eax, 1
  00029	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 227  : 
; 228  : 	if ( index < number_of_graphics_resolution_modes_available )

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  0002f	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA ; number_of_graphics_resolution_modes_available
  00035	7d 29		 jge	 SHORT $LN2@increase_3

; 229  : 	{
; 230  : 
; 231  : 		set_3d_resolutions ( ( float ) graphics_resolution_modes_available[index].width, ( float ) graphics_resolution_modes_available[index].height );

  00037	6b 45 fc 0c	 imul	 eax, DWORD PTR _index$[ebp], 12
  0003b	f3 0f 2a 80 04
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4]
  00043	51		 push	 ecx
  00044	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00049	6b 4d fc 0c	 imul	 ecx, DWORD PTR _index$[ebp], 12
  0004d	f3 0f 2a 81 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx]
  00055	51		 push	 ecx
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	e8 00 00 00 00	 call	 ?set_3d_resolutions@@YGXMM@Z ; set_3d_resolutions
$LN2@increase_3:

; 232  : 	}
; 233  : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
?increase_3d_resolutions@@YGXPAUEVENT@@@Z ENDP		; increase_3d_resolutions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\app3d\3d_data.c
;	COMDAT ?set_3d_resolutions@@YGXMM@Z
_TEXT	SEGMENT
tv81 = -68						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?set_3d_resolutions@@YGXMM@Z PROC			; set_3d_resolutions, COMDAT

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 153  : 	//
; 154  : 	// Validate the resolution now
; 155  : 	// (except when command_line_force_resolution is enabled, then we'll use the resolution
; 156  : 	// whether the gfx card thinks it's supported or not)
; 157  : 	//
; 158  : 
; 159  : 	if (!command_line_force_resolution && get_graphics_resolution_index((int)width, (int)height) == -1)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_force_resolution@@3HA, 0 ; command_line_force_resolution
  00010	75 30		 jne	 SHORT $LN2@set_3d_res
  00012	f3 0f 2c 45 0c	 cvttss2si eax, DWORD PTR _height$[ebp]
  00017	50		 push	 eax
  00018	f3 0f 2c 4d 08	 cvttss2si ecx, DWORD PTR _width$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ?get_graphics_resolution_index@@YGHHH@Z ; get_graphics_resolution_index
  00023	83 f8 ff	 cmp	 eax, -1
  00026	75 1a		 jne	 SHORT $LN2@set_3d_res

; 160  : 	{
; 161  : 
; 162  : 		//
; 163  : 		// Default resolution
; 164  : 		//
; 165  : 
; 166  : 		width = 640.0;

  00028	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44200000
  00030	f3 0f 11 45 08	 movss	 DWORD PTR _width$[ebp], xmm0

; 167  : 
; 168  : 		height = 480.0;

  00035	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43f00000
  0003d	f3 0f 11 45 0c	 movss	 DWORD PTR _height$[ebp], xmm0
$LN2@set_3d_res:

; 169  : 	}
; 170  : 
; 171  : 
; 172  : 	// reset ui fonts
; 173  : 
; 174  : 	if ((width != get_global_3d_visual_screen_width ()) ||

  00042	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _width$[ebp]
  00047	0f 2e 05 c4 01
	00 00		 ucomiss xmm0, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+452
  0004e	9f		 lahf
  0004f	f6 c4 44	 test	 ah, 68			; 00000044H
  00052	7a 12		 jp	 SHORT $LN4@set_3d_res
  00054	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _height$[ebp]
  00059	0f 2e 05 c8 01
	00 00		 ucomiss xmm0, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+456
  00060	9f		 lahf
  00061	f6 c4 44	 test	 ah, 68			; 00000044H
  00064	7b 16		 jnp	 SHORT $LN3@set_3d_res
$LN4@set_3d_res:

; 175  : 		 (height != get_global_3d_visual_screen_height ()))
; 176  : 	{
; 177  : 		set_ui_font_resolution (width, height);

  00066	f3 0f 2c 45 0c	 cvttss2si eax, DWORD PTR _height$[ebp]
  0006b	50		 push	 eax
  0006c	f3 0f 2c 4d 08	 cvttss2si ecx, DWORD PTR _width$[ebp]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ?set_ui_font_resolution@@YGXHH@Z ; set_ui_font_resolution

; 178  : 
; 179  : 		reinitialise_ui_fonts ();

  00077	e8 00 00 00 00	 call	 ?reinitialise_ui_fonts@@YGXXZ ; reinitialise_ui_fonts
$LN3@set_3d_res:

; 180  : 	}
; 181  : 
; 182  : 
; 183  : 	// set resolution
; 184  : 
; 185  : 	set_global_3d_visual_screen_width (width);

  0007c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _width$[ebp]
  00081	f3 0f 11 05 c4
	01 00 00	 movss	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+452, xmm0

; 186  : 	set_global_3d_visual_screen_height (height);

  00089	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _height$[ebp]
  0008e	f3 0f 11 05 c8
	01 00 00	 movss	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+456, xmm0

; 187  : 
; 188  : 	// arneh - calulate aspect from width and height, and use aspect to set view angle
; 189  : 	full_screen_aspect_ratio = width / height;

  00096	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _width$[ebp]
  0009b	f3 0f 5e 45 0c	 divss	 xmm0, DWORD PTR _height$[ebp]
  000a0	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_aspect_ratio@@3MA, xmm0

; 190  : 	set_view_angles ( full_screen_width_view_angle );

  000a8	51		 push	 ecx
  000a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_width_view_angle@@3MA
  000b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b6	e8 00 00 00 00	 call	 ?set_view_angles@@YGXM@Z ; set_view_angles

; 191  : 
; 192  : 	full_screen_hi_res		= width > 640.0;

  000bb	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _width$[ebp]
  000c0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4084000000000000
  000c8	76 09		 jbe	 SHORT $LN6@set_3d_res
  000ca	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv81[ebp], 1
  000d1	eb 07		 jmp	 SHORT $LN7@set_3d_res
$LN6@set_3d_res:
  000d3	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN7@set_3d_res:
  000da	8b 45 bc	 mov	 eax, DWORD PTR tv81[ebp]
  000dd	a3 00 00 00 00	 mov	 DWORD PTR ?full_screen_hi_res@@3HA, eax ; full_screen_hi_res

; 193  : 
; 194  : 	full_screen_width			= width;

  000e2	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _width$[ebp]
  000e7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_width@@3MA, xmm0

; 195  : 	full_screen_height		= height;

  000ef	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _height$[ebp]
  000f4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_height@@3MA, xmm0

; 196  : 
; 197  : 	int_full_screen_width	= (int) width;

  000fc	f3 0f 2c 45 08	 cvttss2si eax, DWORD PTR _width$[ebp]
  00101	a3 00 00 00 00	 mov	 DWORD PTR ?int_full_screen_width@@3HA, eax ; int_full_screen_width

; 198  : 	int_full_screen_height	= (int) height;

  00106	f3 0f 2c 45 0c	 cvttss2si eax, DWORD PTR _height$[ebp]
  0010b	a3 00 00 00 00	 mov	 DWORD PTR ?int_full_screen_height@@3HA, eax ; int_full_screen_height

; 199  : 
; 200  : 	full_screen_x_min			= 0.0;

  00110	0f 57 c0	 xorps	 xmm0, xmm0
  00113	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_x_min@@3MA, xmm0

; 201  : 	full_screen_y_min			= 0.0;

  0011b	0f 57 c0	 xorps	 xmm0, xmm0
  0011e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_y_min@@3MA, xmm0

; 202  : 	full_screen_x_mid	  		= width / 2.0;

  00126	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _width$[ebp]
  0012b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00133	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00137	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_x_mid@@3MA, xmm0

; 203  : 	full_screen_y_mid	  		= height / 2.0;

  0013f	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _height$[ebp]
  00144	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0014c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00150	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_y_mid@@3MA, xmm0

; 204  : 	full_screen_x_max	  		= width - 0.001;

  00158	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _width$[ebp]
  0015d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00165	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00169	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_x_max@@3MA, xmm0

; 205  : 	full_screen_y_max	  		= height - 0.001;

  00171	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _height$[ebp]
  00176	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0017e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00182	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?full_screen_y_max@@3MA, xmm0

; 206  : 
; 207  : 	ix_640_480			  		= ((int) width - 640) / 2;

  0018a	f3 0f 2c 45 08	 cvttss2si eax, DWORD PTR _width$[ebp]
  0018f	2d 80 02 00 00	 sub	 eax, 640		; 00000280H
  00194	99		 cdq
  00195	2b c2		 sub	 eax, edx
  00197	d1 f8		 sar	 eax, 1
  00199	a3 00 00 00 00	 mov	 DWORD PTR ?ix_640_480@@3HA, eax ; ix_640_480

; 208  : 	iy_640_480			  		= ((int) height - 480) / 2;

  0019e	f3 0f 2c 45 0c	 cvttss2si eax, DWORD PTR _height$[ebp]
  001a3	2d e0 01 00 00	 sub	 eax, 480		; 000001e0H
  001a8	99		 cdq
  001a9	2b c2		 sub	 eax, edx
  001ab	d1 f8		 sar	 eax, 1
  001ad	a3 00 00 00 00	 mov	 DWORD PTR ?iy_640_480@@3HA, eax ; iy_640_480

; 209  : 
; 210  : 	fx_640_480			 		= (width - 640.0) / 2.0;

  001b2	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _width$[ebp]
  001b7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4084000000000000
  001bf	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  001c7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001cb	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?fx_640_480@@3MA, xmm0

; 211  : 	fy_640_480			  		= (height - 480.0) / 2.0;

  001d3	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _height$[ebp]
  001d8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@407e000000000000
  001e0	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  001e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ec	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?fy_640_480@@3MA, xmm0

; 212  : }

  001f4	5f		 pop	 edi
  001f5	5e		 pop	 esi
  001f6	5b		 pop	 ebx
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 08 00	 ret	 8
?set_3d_resolutions@@YGXMM@Z ENDP			; set_3d_resolutions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?tan@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?tan@@YGMM@Z PROC					; tan, COMDAT

; 299  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 300  : 	return (_CSTD tanf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _tanf
  00019	83 c4 04	 add	 esp, 4

; 301  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?tan@@YGMM@Z ENDP					; tan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?atan@@YGMM@Z PROC					; atan, COMDAT

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 47   : 	return (_CSTD atanf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _atanf
  00019	83 c4 04	 add	 esp, 4

; 48   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?atan@@YGMM@Z ENDP					; atan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _tanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_tanf	PROC						; COMDAT

; 764  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 765  :             return (float)tan(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _tan
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 766  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_tanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT

; 638  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 639  :             return (float)atan(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _atan
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 640  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_atanf	ENDP
_TEXT	ENDS
END
