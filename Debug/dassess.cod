; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\graphics\dassess.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?shading_assessment_flags@@3PAUASSESSMENT_STRUCT@@A ; shading_assessment_flags
PUBLIC	?texture_assessment_flags@@3PAUASSESSMENT_STRUCT@@A ; texture_assessment_flags
PUBLIC	?texture_filter_assessment_flags@@3PAUASSESSMENT_STRUCT@@A ; texture_filter_assessment_flags
PUBLIC	?texture_blend_assessment_flags@@3PAUASSESSMENT_STRUCT@@A ; texture_blend_assessment_flags
PUBLIC	?texture_address_assessment_flags@@3PAUASSESSMENT_STRUCT@@A ; texture_address_assessment_flags
PUBLIC	?zbuffer_assessment_flags@@3PAUASSESSMENT_STRUCT@@A ; zbuffer_assessment_flags
_DATA	SEGMENT
?shading_assessment_flags@@3PAUASSESSMENT_STRUCT@@A DD 01000H ; shading_assessment_flags
	DD	0aH
	DD	0fffffff6H
	DD	04000H
	DD	0aH
	DD	0fffffff6H
	DD	02H
	DD	0aH
	DD	0fffffff6H
	DD	08H
	DD	0aH
	DD	0ffffd8f0H
	DD	040000H
	DD	0aH
	DD	0fffffff6H
	DD	080000H
	DD	0aH
	DD	0fffffff6H
?texture_assessment_flags@@3PAUASSESSMENT_STRUCT@@A DD 04H ; texture_assessment_flags
	DD	0aH
	DD	0fffffff6H
	DD	01H
	DD	0aH
	DD	0fffffff6H
	DD	02H
	DD	00H
	DD	0fffffff6H
	DD	020H
	DD	00H
	DD	0fffffff6H
	DD	08H
	DD	0aH
	DD	0fffffff6H
?texture_address_assessment_flags@@3PAUASSESSMENT_STRUCT@@A DD 04H ; texture_address_assessment_flags
	DD	0aH
	DD	0fffffff6H
	DD	02H
	DD	0aH
	DD	0fffffff6H
	DD	01H
	DD	0aH
	DD	0ffffd8f0H
?texture_filter_assessment_flags@@3PAUASSESSMENT_STRUCT@@A DD 02H ; texture_filter_assessment_flags
	DD	0aH
	DD	0fffffff6H
	DD	020H
	DD	0aH
	DD	0fffffff6H
	DD	010H
	DD	0aH
	DD	0fffffff6H
	DD	08H
	DD	0aH
	DD	0fffffff6H
	DD	04H
	DD	0aH
	DD	0fffffff6H
	DD	01H
	DD	0aH
	DD	0fffffff6H
?texture_blend_assessment_flags@@3PAUASSESSMENT_STRUCT@@A DD 040H ; texture_blend_assessment_flags
	DD	0aH
	DD	0fffffff6H
	DD	01H
	DD	0aH
	DD	0fffffff6H
	DD	04H
	DD	0aH
	DD	0fffffff6H
	DD	010H
	DD	0aH
	DD	0fffffff6H
	DD	02H
	DD	0aH
	DD	0fffffff6H
	DD	08H
	DD	0aH
	DD	0fffffff6H
	DD	020H
	DD	0aH
	DD	0fffffff6H
?zbuffer_assessment_flags@@3PAUASSESSMENT_STRUCT@@A DD 00H ; zbuffer_assessment_flags
	DD	064H
	DD	0ffffd8f0H
_DATA	ENDS
PUBLIC	?ddraw_internal_assess_3d_capabilities@@YGHPAUIDirectDraw7@@@Z ; ddraw_internal_assess_3d_capabilities
PUBLIC	?ddraw_assess_enum_3d_devices@@YGJPAD0PAU_D3DDeviceDesc7@@PAX@Z ; ddraw_assess_enum_3d_devices
EXTRN	_IID_IDirect3D7:BYTE
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\dassess.c
;	COMDAT ?ddraw_assess_enum_3d_devices@@YGJPAD0PAU_D3DDeviceDesc7@@PAX@Z
_TEXT	SEGMENT
_count$1 = -12						; size = 4
_best_yet_assessment$ = -8				; size = 4
_assessment$ = -4					; size = 4
_DevDesc$ = 8						; size = 4
_DevName$ = 12						; size = 4
_lpHWDesc$ = 16						; size = 4
_lpContext$ = 20					; size = 4
?ddraw_assess_enum_3d_devices@@YGJPAD0PAU_D3DDeviceDesc7@@PAX@Z PROC ; ddraw_assess_enum_3d_devices, COMDAT

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 238  : 
; 239  : 	int
; 240  : 		assessment,
; 241  : 		*best_yet_assessment;
; 242  : 
; 243  : 	best_yet_assessment = ( int * ) lpContext;

  00009	8b 45 14	 mov	 eax, DWORD PTR _lpContext$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR _best_yet_assessment$[ebp], eax

; 244  : 
; 245  : 	assessment = 0;

  0000f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _assessment$[ebp], 0

; 246  : 
; 247  : 	//
; 248  : 	// Is this driver hardware ?
; 249  : 	//
; 250  : 
; 251  : 	{
; 252  : 
; 253  : 		if ( lpHWDesc->dwDevCaps & D3DDD_TRICAPS )

  00016	8b 45 10	 mov	 eax, DWORD PTR _lpHWDesc$[ebp]
  00019	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001b	83 e1 40	 and	 ecx, 64			; 00000040H
  0001e	0f 84 b9 01 00
	00		 je	 $LN17@ddraw_asse

; 254  : 		{
; 255  : 
; 256  : 			int
; 257  : 				count;
; 258  : 
; 259  : 			//
; 260  : 			// Assess the rendering primitives available
; 261  : 			//
; 262  : 
; 263  : 			//
; 264  : 			// First, the shading capabilities
; 265  : 			//
; 266  : 
; 267  : 			for ( count = 0; count < ( sizeof ( shading_assessment_flags ) / sizeof ( assessment_struct ) ); count ++ )

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  0002b	eb 09		 jmp	 SHORT $LN4@ddraw_asse
$LN2@ddraw_asse:
  0002d	8b 45 f4	 mov	 eax, DWORD PTR _count$1[ebp]
  00030	83 c0 01	 add	 eax, 1
  00033	89 45 f4	 mov	 DWORD PTR _count$1[ebp], eax
$LN4@ddraw_asse:
  00036	83 7d f4 06	 cmp	 DWORD PTR _count$1[ebp], 6
  0003a	73 36		 jae	 SHORT $LN3@ddraw_asse

; 268  : 			{
; 269  : 
; 270  : 				if ( lpHWDesc->dpcTriCaps.dwShadeCaps & shading_assessment_flags[count].flag )

  0003c	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00040	8b 4d 10	 mov	 ecx, DWORD PTR _lpHWDesc$[ebp]
  00043	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  00046	23 90 00 00 00
	00		 and	 edx, DWORD PTR ?shading_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax]
  0004c	74 12		 je	 SHORT $LN18@ddraw_asse

; 271  : 				{
; 272  : 
; 273  : 					assessment += shading_assessment_flags[count].positive;

  0004e	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  00055	03 88 04 00 00
	00		 add	 ecx, DWORD PTR ?shading_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+4]
  0005b	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx

; 274  : 				}
; 275  : 				else

  0005e	eb 10		 jmp	 SHORT $LN19@ddraw_asse
$LN18@ddraw_asse:

; 276  : 				{
; 277  : 
; 278  : 					assessment += shading_assessment_flags[count].negative;

  00060	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  00067	03 88 08 00 00
	00		 add	 ecx, DWORD PTR ?shading_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+8]
  0006d	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx
$LN19@ddraw_asse:

; 279  : 				}
; 280  : 			}

  00070	eb bb		 jmp	 SHORT $LN2@ddraw_asse
$LN3@ddraw_asse:

; 281  : 
; 282  : 			//
; 283  : 			// Next, the texturing capabilities
; 284  : 			//
; 285  : 
; 286  : 			for ( count = 0; count < ( sizeof ( texture_assessment_flags ) / sizeof ( assessment_struct ) ); count ++ )

  00072	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00079	eb 09		 jmp	 SHORT $LN7@ddraw_asse
$LN5@ddraw_asse:
  0007b	8b 45 f4	 mov	 eax, DWORD PTR _count$1[ebp]
  0007e	83 c0 01	 add	 eax, 1
  00081	89 45 f4	 mov	 DWORD PTR _count$1[ebp], eax
$LN7@ddraw_asse:
  00084	83 7d f4 05	 cmp	 DWORD PTR _count$1[ebp], 5
  00088	73 36		 jae	 SHORT $LN6@ddraw_asse

; 287  : 			{
; 288  : 
; 289  : 				if ( lpHWDesc->dpcTriCaps.dwTextureCaps & texture_assessment_flags[count].flag )

  0008a	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0008e	8b 4d 10	 mov	 ecx, DWORD PTR _lpHWDesc$[ebp]
  00091	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  00094	23 90 00 00 00
	00		 and	 edx, DWORD PTR ?texture_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax]
  0009a	74 12		 je	 SHORT $LN20@ddraw_asse

; 290  : 				{
; 291  : 
; 292  : 					assessment += texture_assessment_flags[count].positive;

  0009c	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  000a3	03 88 04 00 00
	00		 add	 ecx, DWORD PTR ?texture_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+4]
  000a9	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx

; 293  : 				}
; 294  : 				else

  000ac	eb 10		 jmp	 SHORT $LN21@ddraw_asse
$LN20@ddraw_asse:

; 295  : 				{
; 296  : 
; 297  : 					assessment += texture_assessment_flags[count].negative;

  000ae	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  000b2	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  000b5	03 88 08 00 00
	00		 add	 ecx, DWORD PTR ?texture_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+8]
  000bb	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx
$LN21@ddraw_asse:

; 298  : 				}
; 299  : 			}

  000be	eb bb		 jmp	 SHORT $LN5@ddraw_asse
$LN6@ddraw_asse:

; 300  : 
; 301  : 			//
; 302  : 			// Next, the texture filtering capabilities
; 303  : 			//
; 304  : 
; 305  : 			for ( count = 0; count < ( sizeof ( texture_filter_assessment_flags ) / sizeof ( assessment_struct ) ); count ++ )

  000c0	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  000c7	eb 09		 jmp	 SHORT $LN10@ddraw_asse
$LN8@ddraw_asse:
  000c9	8b 45 f4	 mov	 eax, DWORD PTR _count$1[ebp]
  000cc	83 c0 01	 add	 eax, 1
  000cf	89 45 f4	 mov	 DWORD PTR _count$1[ebp], eax
$LN10@ddraw_asse:
  000d2	83 7d f4 06	 cmp	 DWORD PTR _count$1[ebp], 6
  000d6	73 36		 jae	 SHORT $LN9@ddraw_asse

; 306  : 			{
; 307  : 
; 308  : 				if ( lpHWDesc->dpcTriCaps.dwTextureFilterCaps & texture_filter_assessment_flags[count].flag )

  000d8	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  000dc	8b 4d 10	 mov	 ecx, DWORD PTR _lpHWDesc$[ebp]
  000df	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  000e2	23 90 00 00 00
	00		 and	 edx, DWORD PTR ?texture_filter_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax]
  000e8	74 12		 je	 SHORT $LN22@ddraw_asse

; 309  : 				{
; 310  : 
; 311  : 					assessment += texture_filter_assessment_flags[count].positive;

  000ea	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  000f1	03 88 04 00 00
	00		 add	 ecx, DWORD PTR ?texture_filter_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+4]
  000f7	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx

; 312  : 				}
; 313  : 				else

  000fa	eb 10		 jmp	 SHORT $LN23@ddraw_asse
$LN22@ddraw_asse:

; 314  : 				{
; 315  : 
; 316  : 					assessment += texture_filter_assessment_flags[count].negative;

  000fc	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00100	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  00103	03 88 08 00 00
	00		 add	 ecx, DWORD PTR ?texture_filter_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+8]
  00109	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx
$LN23@ddraw_asse:

; 317  : 				}
; 318  : 			}

  0010c	eb bb		 jmp	 SHORT $LN8@ddraw_asse
$LN9@ddraw_asse:

; 319  : 
; 320  : 			//
; 321  : 			// Next, the texture blending capabilities
; 322  : 			//
; 323  : 
; 324  : 			for ( count = 0; count < ( sizeof ( texture_blend_assessment_flags ) / sizeof ( assessment_struct ) ); count ++ )

  0010e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00115	eb 09		 jmp	 SHORT $LN13@ddraw_asse
$LN11@ddraw_asse:
  00117	8b 45 f4	 mov	 eax, DWORD PTR _count$1[ebp]
  0011a	83 c0 01	 add	 eax, 1
  0011d	89 45 f4	 mov	 DWORD PTR _count$1[ebp], eax
$LN13@ddraw_asse:
  00120	83 7d f4 07	 cmp	 DWORD PTR _count$1[ebp], 7
  00124	73 36		 jae	 SHORT $LN12@ddraw_asse

; 325  : 			{
; 326  : 
; 327  : 				if ( lpHWDesc->dpcTriCaps.dwTextureBlendCaps & texture_blend_assessment_flags[count].flag )

  00126	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0012a	8b 4d 10	 mov	 ecx, DWORD PTR _lpHWDesc$[ebp]
  0012d	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  00130	23 90 00 00 00
	00		 and	 edx, DWORD PTR ?texture_blend_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax]
  00136	74 12		 je	 SHORT $LN24@ddraw_asse

; 328  : 				{
; 329  : 
; 330  : 					assessment += texture_blend_assessment_flags[count].positive;

  00138	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0013c	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  0013f	03 88 04 00 00
	00		 add	 ecx, DWORD PTR ?texture_blend_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+4]
  00145	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx

; 331  : 				}
; 332  : 				else

  00148	eb 10		 jmp	 SHORT $LN25@ddraw_asse
$LN24@ddraw_asse:

; 333  : 				{
; 334  : 
; 335  : 					assessment += texture_blend_assessment_flags[count].negative;

  0014a	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  00151	03 88 08 00 00
	00		 add	 ecx, DWORD PTR ?texture_blend_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+8]
  00157	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx
$LN25@ddraw_asse:

; 336  : 				}
; 337  : 			}

  0015a	eb bb		 jmp	 SHORT $LN11@ddraw_asse
$LN12@ddraw_asse:

; 338  : 
; 339  : 			//
; 340  : 			// Next, the texture addressing capabilities
; 341  : 			//
; 342  : 
; 343  : 			for ( count = 0; count < ( sizeof ( texture_address_assessment_flags ) / sizeof ( assessment_struct ) ); count ++ )

  0015c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$1[ebp], 0
  00163	eb 09		 jmp	 SHORT $LN16@ddraw_asse
$LN14@ddraw_asse:
  00165	8b 45 f4	 mov	 eax, DWORD PTR _count$1[ebp]
  00168	83 c0 01	 add	 eax, 1
  0016b	89 45 f4	 mov	 DWORD PTR _count$1[ebp], eax
$LN16@ddraw_asse:
  0016e	83 7d f4 03	 cmp	 DWORD PTR _count$1[ebp], 3
  00172	73 36		 jae	 SHORT $LN15@ddraw_asse

; 344  : 			{
; 345  : 
; 346  : 				if ( lpHWDesc->dpcTriCaps.dwTextureAddressCaps & texture_address_assessment_flags[count].flag )

  00174	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  00178	8b 4d 10	 mov	 ecx, DWORD PTR _lpHWDesc$[ebp]
  0017b	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  0017e	23 90 00 00 00
	00		 and	 edx, DWORD PTR ?texture_address_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax]
  00184	74 12		 je	 SHORT $LN26@ddraw_asse

; 347  : 				{
; 348  : 
; 349  : 					assessment += texture_address_assessment_flags[count].positive;

  00186	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0018a	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  0018d	03 88 04 00 00
	00		 add	 ecx, DWORD PTR ?texture_address_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+4]
  00193	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx

; 350  : 				}
; 351  : 				else

  00196	eb 10		 jmp	 SHORT $LN27@ddraw_asse
$LN26@ddraw_asse:

; 352  : 				{
; 353  : 
; 354  : 					assessment += texture_address_assessment_flags[count].negative;

  00198	6b 45 f4 0c	 imul	 eax, DWORD PTR _count$1[ebp], 12
  0019c	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  0019f	03 88 08 00 00
	00		 add	 ecx, DWORD PTR ?texture_address_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[eax+8]
  001a5	89 4d fc	 mov	 DWORD PTR _assessment$[ebp], ecx
$LN27@ddraw_asse:

; 355  : 				}
; 356  : 			}

  001a8	eb bb		 jmp	 SHORT $LN14@ddraw_asse
$LN15@ddraw_asse:

; 357  : 
; 358  : 			//
; 359  : 			// Next, the zbuffering capabilities
; 360  : 			//
; 361  : 
; 362  : 			if ( lpHWDesc->dwDeviceZBufferBitDepth )

  001aa	8b 45 10	 mov	 eax, DWORD PTR _lpHWDesc$[ebp]
  001ad	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  001b1	74 16		 je	 SHORT $LN28@ddraw_asse

; 363  : 			{
; 364  : 
; 365  : 				assessment += zbuffer_assessment_flags[0].positive;

  001b3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001b8	6b c8 00	 imul	 ecx, eax, 0
  001bb	8b 55 fc	 mov	 edx, DWORD PTR _assessment$[ebp]
  001be	03 91 04 00 00
	00		 add	 edx, DWORD PTR ?zbuffer_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[ecx+4]
  001c4	89 55 fc	 mov	 DWORD PTR _assessment$[ebp], edx

; 366  : 			}
; 367  : 			else

  001c7	eb 14		 jmp	 SHORT $LN17@ddraw_asse
$LN28@ddraw_asse:

; 368  : 			{
; 369  : 
; 370  : 				assessment += zbuffer_assessment_flags[0].negative;

  001c9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ce	6b c8 00	 imul	 ecx, eax, 0
  001d1	8b 55 fc	 mov	 edx, DWORD PTR _assessment$[ebp]
  001d4	03 91 08 00 00
	00		 add	 edx, DWORD PTR ?zbuffer_assessment_flags@@3PAUASSESSMENT_STRUCT@@A[ecx+8]
  001da	89 55 fc	 mov	 DWORD PTR _assessment$[ebp], edx
$LN17@ddraw_asse:

; 371  : 			}
; 372  : 		}
; 373  : 	}
; 374  : 
; 375  : 	if ( assessment > *best_yet_assessment )

  001dd	8b 45 f8	 mov	 eax, DWORD PTR _best_yet_assessment$[ebp]
  001e0	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  001e3	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001e5	7e 08		 jle	 SHORT $LN30@ddraw_asse

; 376  : 	{
; 377  : 
; 378  : 		*best_yet_assessment = assessment;

  001e7	8b 45 f8	 mov	 eax, DWORD PTR _best_yet_assessment$[ebp]
  001ea	8b 4d fc	 mov	 ecx, DWORD PTR _assessment$[ebp]
  001ed	89 08		 mov	 DWORD PTR [eax], ecx
$LN30@ddraw_asse:

; 379  : 	}
; 380  : 
; 381  : 	return ( D3DENUMRET_OK );

  001ef	b8 01 00 00 00	 mov	 eax, 1

; 382  : }

  001f4	5f		 pop	 edi
  001f5	5e		 pop	 esi
  001f6	5b		 pop	 ebx
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 10 00	 ret	 16			; 00000010H
?ddraw_assess_enum_3d_devices@@YGJPAD0PAU_D3DDeviceDesc7@@PAX@Z ENDP ; ddraw_assess_enum_3d_devices
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\dassess.c
;	COMDAT ?ddraw_internal_assess_3d_capabilities@@YGHPAUIDirectDraw7@@@Z
_TEXT	SEGMENT
_assessment$ = -12					; size = 4
_lpD3D$ = -8						; size = 4
_d3drval$ = -4						; size = 4
_lpDD$ = 8						; size = 4
?ddraw_internal_assess_3d_capabilities@@YGHPAUIDirectDraw7@@@Z PROC ; ddraw_internal_assess_3d_capabilities, COMDAT

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 175  : 
; 176  : 	HRESULT
; 177  : 		d3drval;
; 178  : 
; 179  : 	LPDIRECT3DX
; 180  : 		lpD3D;
; 181  : 
; 182  : 	int
; 183  : 		assessment;
; 184  : 
; 185  : 	//
; 186  : 	// Create the direct3d device from this direct draw object
; 187  : 	//
; 188  : 
; 189  : 	d3drval = IDirectDraw7_QueryInterface ( lpDD, GUID_PREFIX IID_IDirect3D7, ( LPVOID FAR * ) &lpD3D );

  00009	8d 45 f8	 lea	 eax, DWORD PTR _lpD3D$[ebp]
  0000c	50		 push	 eax
  0000d	68 00 00 00 00	 push	 OFFSET _IID_IDirect3D7
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _lpDD$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	8b 45 08	 mov	 eax, DWORD PTR _lpDD$[ebp]
  0001a	50		 push	 eax
  0001b	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001d	ff d1		 call	 ecx
  0001f	89 45 fc	 mov	 DWORD PTR _d3drval$[ebp], eax

; 190  : 
; 191  : #if ( DEBUG_MODULE )
; 192  : 	debug_log ( "Created Direct3D: %08x", lpD3D );
; 193  : #endif
; 194  : 
; 195  : 	//
; 196  : 	// If we can't then we don't have 3D capability. Assessment is 0.
; 197  : 	//
; 198  : 
; 199  : 	if ( d3drval != DD_OK )

  00022	83 7d fc 00	 cmp	 DWORD PTR _d3drval$[ebp], 0
  00026	74 07		 je	 SHORT $LN2@ddraw_inte

; 200  : 	{
; 201  : 
; 202  : 		return ( -10000 );

  00028	b8 f0 d8 ff ff	 mov	 eax, -10000		; ffffd8f0H
  0002d	eb 2f		 jmp	 SHORT $LN1@ddraw_inte
$LN2@ddraw_inte:

; 203  : 	}
; 204  : 
; 205  : 	//
; 206  : 	// Default assessment is 0.
; 207  : 	//
; 208  : 
; 209  : 	assessment = 0;

  0002f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _assessment$[ebp], 0

; 210  : 
; 211  : 	//
; 212  : 	// Enumerate the devices from this 3d object, assessing them, and setting the assessment to the best
; 213  : 	//
; 214  : 
; 215  : 	IDirect3D7_EnumDevices ( lpD3D, ddraw_assess_enum_3d_devices, &assessment );

  00036	8d 45 f4	 lea	 eax, DWORD PTR _assessment$[ebp]
  00039	50		 push	 eax
  0003a	68 00 00 00 00	 push	 OFFSET ?ddraw_assess_enum_3d_devices@@YGJPAD0PAU_D3DDeviceDesc7@@PAX@Z ; ddraw_assess_enum_3d_devices
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _lpD3D$[ebp]
  00042	8b 11		 mov	 edx, DWORD PTR [ecx]
  00044	8b 45 f8	 mov	 eax, DWORD PTR _lpD3D$[ebp]
  00047	50		 push	 eax
  00048	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0004b	ff d1		 call	 ecx

; 216  : 
; 217  : 	//
; 218  : 	// Release the D3D interface.
; 219  : 	//
; 220  : 
; 221  : 	IDirect3D7_Release ( lpD3D );

  0004d	8b 45 f8	 mov	 eax, DWORD PTR _lpD3D$[ebp]
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	8b 55 f8	 mov	 edx, DWORD PTR _lpD3D$[ebp]
  00055	52		 push	 edx
  00056	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00059	ff d0		 call	 eax

; 222  : 
; 223  : 	return ( assessment );

  0005b	8b 45 f4	 mov	 eax, DWORD PTR _assessment$[ebp]
$LN1@ddraw_inte:

; 224  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?ddraw_internal_assess_3d_capabilities@@YGHPAUIDirectDraw7@@@Z ENDP ; ddraw_internal_assess_3d_capabilities
_TEXT	ENDS
END
