; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; animate_aircraft_loading_doors
PUBLIC	?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; update_aircraft_loading_doors
PUBLIC	?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z	; animate_aircraft_cargo_doors
PUBLIC	?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z	; update_aircraft_cargo_doors
PUBLIC	?animate_aircraft_rudder@@YGXPAUENTITY@@@Z	; animate_aircraft_rudder
PUBLIC	?update_aircraft_rudder@@YGXPAUENTITY@@@Z	; update_aircraft_rudder
PUBLIC	?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; animate_aircraft_undercarriage
PUBLIC	?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; update_aircraft_undercarriage
PUBLIC	?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; animate_aircraft_weapon_system_ready
PUBLIC	?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_aircraft_weapon_system_ready
PUBLIC	?animate_aircraft_shadow@@YGXPAUENTITY@@@Z	; animate_aircraft_shadow
PUBLIC	?initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z ; initiate_aircraft_crew_ejection
PUBLIC	?uneject_aircraft_crew@@YGXPAUENTITY@@@Z	; uneject_aircraft_crew
PUBLIC	?__LINE__Var@?0??animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA ; `animate_aircraft_loading_doors'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??update_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA ; `update_aircraft_loading_doors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA ; `animate_aircraft_cargo_doors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA ; `update_aircraft_cargo_doors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA ; `animate_aircraft_rudder'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA ; `update_aircraft_rudder'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA ; `animate_aircraft_undercarriage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA ; `update_aircraft_undercarriage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA ; `animate_aircraft_weapon_system_ready'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA ; `update_aircraft_weapon_system_ready'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??animate_aircraft_shadow@@YGXPAUENTITY@@@Z@4JA ; `animate_aircraft_shadow'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA ; `initiate_aircraft_crew_ejection'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@OCMNGDGA@Cannot?5view?5player?8s?5gunship@ ; `string'
PUBLIC	?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA ; `uneject_aircraft_crew'::`1'::__LINE__Var
PUBLIC	__real@0000000000000000
PUBLIC	__real@3e2aa8eb
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40a00000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?open_client_server_entity_loading_doors@@YGXPAUENTITY@@@Z:PROC ; open_client_server_entity_loading_doors
EXTRN	?close_client_server_entity_loading_doors@@YGXPAUENTITY@@@Z:PROC ; close_client_server_entity_loading_doors
EXTRN	?open_client_server_entity_cargo_doors@@YGXPAUENTITY@@@Z:PROC ; open_client_server_entity_cargo_doors
EXTRN	?close_client_server_entity_cargo_doors@@YGXPAUENTITY@@@Z:PROC ; close_client_server_entity_cargo_doors
EXTRN	?lower_client_server_entity_undercarriage@@YGXPAUENTITY@@@Z:PROC ; lower_client_server_entity_undercarriage
EXTRN	?raise_client_server_entity_undercarriage@@YGXPAUENTITY@@@Z:PROC ; raise_client_server_entity_undercarriage
EXTRN	?open_entity_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; open_entity_weapon_system_ready
EXTRN	?close_entity_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; close_entity_weapon_system_ready
EXTRN	?get_keyframed_animation_state@@YGXMPAHPAM@Z:PROC ; get_keyframed_animation_state
EXTRN	?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z:PROC ; update_entity_reversable_keyframed_value
EXTRN	?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z:PROC ; update_entity_simple_keyframed_value
EXTRN	?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z:PROC ; animate_entity_simple_keyframed_sub_objects
EXTRN	?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z:PROC ; animate_entity_reversable_keyframed_sub_objects
EXTRN	?launch_client_server_weapon@@YGXPAUENTITY@@H@Z:PROC ; launch_client_server_weapon
EXTRN	?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z:PROC ; play_client_server_cpg_message
EXTRN	?set_view_mode@@YGHW4VIEW_MODES@@@Z:PROC	; set_view_mode
EXTRN	?select_view_menu_view_players_gunship@@YGHXZ:PROC ; select_view_menu_view_players_gunship
EXTRN	?set_view_menu_display_visible_status@@YGXH@Z:PROC ; set_view_menu_display_visible_status
EXTRN	?reset_hokum_crew_eject_sequence@@YGXXZ:PROC	; reset_hokum_crew_eject_sequence
EXTRN	?exit_game@@YGXPAUEVENT@@@Z:PROC		; exit_game
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?in_flight_articulation_test@@3HA:DWORD		; in_flight_articulation_test
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e2aa8eb
CONST	SEGMENT
__real@3e2aa8eb DD 03e2aa8ebr			; 0.16666
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA DD 02a8H ; `uneject_aircraft_crew'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@OCMNGDGA@Cannot?5view?5player?8s?5gunship@
CONST	SEGMENT
??_C@_0BN@OCMNGDGA@Cannot?5view?5player?8s?5gunship@ DB 'Cannot view play'
	DB	'er''s gunship', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA DD 0255H ; `initiate_aircraft_crew_ejection'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_aircraft_shadow@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_aircraft_shadow@@YGXPAUENTITY@@@Z@4JA DD 0226H ; `animate_aircraft_shadow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA DD 01f8H ; `update_aircraft_weapon_system_ready'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA DD 01dfH ; `animate_aircraft_weapon_system_ready'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA DD 0166H ; `update_aircraft_undercarriage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA DD 014cH ; `animate_aircraft_undercarriage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA DD 0126H ; `update_aircraft_rudder'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA DD 010cH ; `animate_aircraft_rudder'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA DD 0d8H ; `update_aircraft_cargo_doors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA DD 0bfH ; `animate_aircraft_cargo_doors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA DD 07fH ; `update_aircraft_loading_doors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_an'
	DB	'im.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA DD 066H ; `animate_aircraft_loading_doors'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?uneject_aircraft_crew@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv196 = -76						; size = 4
tv176 = -76						; size = 4
tv154 = -76						; size = 4
tv132 = -76						; size = 4
tv81 = -76						; size = 4
tv188 = -72						; size = 4
tv168 = -72						; size = 4
tv146 = -72						; size = 4
tv93 = -72						; size = 4
tv74 = -72						; size = 4
_config_type$ = -4					; size = 4
_en$ = 8						; size = 4
?uneject_aircraft_crew@@YGXPAUENTITY@@@Z PROC		; uneject_aircraft_crew, COMDAT

; 680  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 681  : 	weapon_config_types
; 682  : 		config_type;
; 683  : 
; 684  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@uneject_ai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@uneject_ai:

; 685  : 
; 686  : 	//
; 687  : 	// eject only implemented for Ka-52 Hokum B
; 688  : 	//
; 689  : 
; 690  : 	if (get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B)

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN7@uneject_ai
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN8@uneject_ai
$LN7@uneject_ai:
  00037	68 b2 02 00 00	 push	 690			; 000002b2H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN8@uneject_ai:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN9@uneject_ai
  0005d	c7 45 b4 34 00
	00 00		 mov	 DWORD PTR tv81[ebp], 52	; 00000034H
  00064	eb 1d		 jmp	 SHORT $LN10@uneject_ai
$LN9@uneject_ai:
  00066	68 b2 02 00 00	 push	 690			; 000002b2H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN10@uneject_ai:
  00083	6a 34		 push	 52			; 00000034H
  00085	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00088	52		 push	 edx
  00089	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	83 f8 03	 cmp	 eax, 3
  0009f	0f 85 24 02 00
	00		 jne	 $LN1@uneject_ai

; 691  : 	{
; 692  : 		if (get_local_entity_int_value (en, INT_TYPE_EJECTED))

  000a5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a9	74 0a		 je	 SHORT $LN11@uneject_ai
  000ab	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	89 4d b8	 mov	 DWORD PTR tv93[ebp], ecx
  000b3	eb 1d		 jmp	 SHORT $LN12@uneject_ai
$LN11@uneject_ai:
  000b5	68 b4 02 00 00	 push	 692			; 000002b4H
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cb	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN12@uneject_ai:
  000d2	b8 01 00 00 00	 mov	 eax, 1
  000d7	85 c0		 test	 eax, eax
  000d9	74 09		 je	 SHORT $LN13@uneject_ai
  000db	c7 45 b4 31 00
	00 00		 mov	 DWORD PTR tv132[ebp], 49 ; 00000031H
  000e2	eb 1d		 jmp	 SHORT $LN14@uneject_ai
$LN13@uneject_ai:
  000e4	68 b4 02 00 00	 push	 692			; 000002b4H
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f4	51		 push	 ecx
  000f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fa	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN14@uneject_ai:
  00101	6a 31		 push	 49			; 00000031H
  00103	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00106	52		 push	 edx
  00107	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 1116
  0010e	8b 4d b4	 mov	 ecx, DWORD PTR tv132[ebp]
  00111	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00118	ff d2		 call	 edx
  0011a	85 c0		 test	 eax, eax
  0011c	0f 84 a7 01 00
	00		 je	 $LN1@uneject_ai

; 693  : 		{
; 694  : 			if (en == get_gunship_entity ())

  00122	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00125	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0012b	75 05		 jne	 SHORT $LN5@uneject_ai

; 695  : 			{
; 696  : 				reset_hokum_crew_eject_sequence ();

  0012d	e8 00 00 00 00	 call	 ?reset_hokum_crew_eject_sequence@@YGXXZ ; reset_hokum_crew_eject_sequence
$LN5@uneject_ai:

; 697  : 			}
; 698  : 
; 699  : 			set_client_server_entity_int_value (en, INT_TYPE_EJECTED, FALSE);

  00132	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00136	74 0a		 je	 SHORT $LN15@uneject_ai
  00138	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013d	89 4d b8	 mov	 DWORD PTR tv146[ebp], ecx
  00140	eb 21		 jmp	 SHORT $LN16@uneject_ai
$LN15@uneject_ai:
  00142	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
  00148	83 c2 13	 add	 edx, 19			; 00000013H
  0014b	52		 push	 edx
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00151	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN16@uneject_ai:
  00163	b9 01 00 00 00	 mov	 ecx, 1
  00168	85 c9		 test	 ecx, ecx
  0016a	74 09		 je	 SHORT $LN17@uneject_ai
  0016c	c7 45 b4 31 00
	00 00		 mov	 DWORD PTR tv154[ebp], 49 ; 00000031H
  00173	eb 21		 jmp	 SHORT $LN18@uneject_ai
$LN17@uneject_ai:
  00175	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
  0017b	83 c2 13	 add	 edx, 19			; 00000013H
  0017e	52		 push	 edx
  0017f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00189	50		 push	 eax
  0018a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN18@uneject_ai:
  00196	6a 00		 push	 0
  00198	6a 31		 push	 49			; 00000031H
  0019a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0019d	51		 push	 ecx
  0019e	69 55 b8 b8 08
	00 00		 imul	 edx, DWORD PTR tv146[ebp], 2232
  001a5	8b 45 b4	 mov	 eax, DWORD PTR tv154[ebp]
  001a8	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  001af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  001b5	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  001b8	ff d0		 call	 eax

; 700  : 
; 701  : 			//
; 702  : 			// reload weapons
; 703  : 			//
; 704  : 
; 705  : 			config_type = (weapon_config_types) get_local_entity_int_value (en, INT_TYPE_WEAPON_CONFIG_TYPE);

  001ba	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001be	74 0a		 je	 SHORT $LN19@uneject_ai
  001c0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c5	89 4d b8	 mov	 DWORD PTR tv168[ebp], ecx
  001c8	eb 21		 jmp	 SHORT $LN20@uneject_ai
$LN19@uneject_ai:
  001ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
  001d0	83 c2 19	 add	 edx, 25			; 00000019H
  001d3	52		 push	 edx
  001d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e4	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN20@uneject_ai:
  001eb	b9 01 00 00 00	 mov	 ecx, 1
  001f0	85 c9		 test	 ecx, ecx
  001f2	74 09		 je	 SHORT $LN21@uneject_ai
  001f4	c7 45 b4 05 01
	00 00		 mov	 DWORD PTR tv176[ebp], 261 ; 00000105H
  001fb	eb 21		 jmp	 SHORT $LN22@uneject_ai
$LN21@uneject_ai:
  001fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
  00203	83 c2 19	 add	 edx, 25			; 00000019H
  00206	52		 push	 edx
  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00217	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN22@uneject_ai:
  0021e	68 05 01 00 00	 push	 261			; 00000105H
  00223	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00226	51		 push	 ecx
  00227	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv168[ebp], 1116
  0022e	8b 45 b4	 mov	 eax, DWORD PTR tv176[ebp]
  00231	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00238	ff d1		 call	 ecx
  0023a	89 45 fc	 mov	 DWORD PTR _config_type$[ebp], eax

; 706  : 
; 707  : 			set_client_server_entity_int_value (en, INT_TYPE_WEAPON_CONFIG_TYPE, config_type);

  0023d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00241	74 0a		 je	 SHORT $LN23@uneject_ai
  00243	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00246	8b 08		 mov	 ecx, DWORD PTR [eax]
  00248	89 4d b8	 mov	 DWORD PTR tv188[ebp], ecx
  0024b	eb 21		 jmp	 SHORT $LN24@uneject_ai
$LN23@uneject_ai:
  0024d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
  00253	83 c2 1b	 add	 edx, 27			; 0000001bH
  00256	52		 push	 edx
  00257	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00261	50		 push	 eax
  00262	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00267	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN24@uneject_ai:
  0026e	b9 01 00 00 00	 mov	 ecx, 1
  00273	85 c9		 test	 ecx, ecx
  00275	74 09		 je	 SHORT $LN25@uneject_ai
  00277	c7 45 b4 05 01
	00 00		 mov	 DWORD PTR tv196[ebp], 261 ; 00000105H
  0027e	eb 21		 jmp	 SHORT $LN26@uneject_ai
$LN25@uneject_ai:
  00280	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??uneject_aircraft_crew@@YGXPAUENTITY@@@Z@4JA
  00286	83 c2 1b	 add	 edx, 27			; 0000001bH
  00289	52		 push	 edx
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00294	50		 push	 eax
  00295	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029a	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN26@uneject_ai:
  002a1	8b 4d fc	 mov	 ecx, DWORD PTR _config_type$[ebp]
  002a4	51		 push	 ecx
  002a5	68 05 01 00 00	 push	 261			; 00000105H
  002aa	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002ad	52		 push	 edx
  002ae	69 45 b8 b8 08
	00 00		 imul	 eax, DWORD PTR tv188[ebp], 2232
  002b5	8b 4d b4	 mov	 ecx, DWORD PTR tv196[ebp]
  002b8	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*8]
  002bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  002c4	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  002c7	ff d1		 call	 ecx
$LN1@uneject_ai:

; 708  : 		}
; 709  : 	}
; 710  : }

  002c9	5f		 pop	 edi
  002ca	5e		 pop	 esi
  002cb	5b		 pop	 ebx
  002cc	8b e5		 mov	 esp, ebp
  002ce	5d		 pop	 ebp
  002cf	c2 04 00	 ret	 4
?uneject_aircraft_crew@@YGXPAUENTITY@@@Z ENDP		; uneject_aircraft_crew
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv87 = -76						; size = 4
tv262 = -72						; size = 4
tv234 = -72						; size = 4
tv212 = -72						; size = 4
tv182 = -72						; size = 4
tv154 = -72						; size = 4
tv132 = -72						; size = 4
tv81 = -72						; size = 4
tv254 = -68						; size = 4
tv226 = -68						; size = 4
tv205 = -68						; size = 4
tv174 = -68						; size = 4
tv146 = -68						; size = 4
tv93 = -68						; size = 4
tv74 = -68						; size = 4
_en$ = 8						; size = 4
?initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z PROC	; initiate_aircraft_crew_ejection, COMDAT

; 597  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 598  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@initiate_a
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@initiate_a:

; 599  : 
; 600  : 	//
; 601  : 	// eject only implemented for Ka-52 Hokum B
; 602  : 	//
; 603  : 
; 604  : 	switch (get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN18@initiate_a
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d bc	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN19@initiate_a
$LN18@initiate_a:
  00037	68 5c 02 00 00	 push	 604			; 0000025cH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN19@initiate_a:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN20@initiate_a
  0005d	c7 45 b8 34 00
	00 00		 mov	 DWORD PTR tv81[ebp], 52	; 00000034H
  00064	eb 1d		 jmp	 SHORT $LN21@initiate_a
$LN20@initiate_a:
  00066	68 5c 02 00 00	 push	 604			; 0000025cH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN21@initiate_a:
  00083	6a 34		 push	 52			; 00000034H
  00085	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00088	52		 push	 edx
  00089	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b8	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	89 45 b4	 mov	 DWORD PTR tv87[ebp], eax
  0009f	83 7d b4 03	 cmp	 DWORD PTR tv87[ebp], 3
  000a3	74 0f		 je	 SHORT $LN5@initiate_a
  000a5	83 7d b4 15	 cmp	 DWORD PTR tv87[ebp], 21	; 00000015H
  000a9	0f 84 0f 02 00
	00		 je	 $LN11@initiate_a
  000af	e9 f9 03 00 00	 jmp	 $LN1@initiate_a
$LN5@initiate_a:

; 605  : 	{
; 606  : 	case ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B:
; 607  : 	{
; 608  : 		if (!get_local_entity_int_value (en, INT_TYPE_EJECTED))

  000b4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b8	74 0a		 je	 SHORT $LN22@initiate_a
  000ba	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	89 4d bc	 mov	 DWORD PTR tv93[ebp], ecx
  000c2	eb 1d		 jmp	 SHORT $LN23@initiate_a
$LN22@initiate_a:
  000c4	68 60 02 00 00	 push	 608			; 00000260H
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000da	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN23@initiate_a:
  000e1	b8 01 00 00 00	 mov	 eax, 1
  000e6	85 c0		 test	 eax, eax
  000e8	74 09		 je	 SHORT $LN24@initiate_a
  000ea	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR tv132[ebp], 49 ; 00000031H
  000f1	eb 1d		 jmp	 SHORT $LN25@initiate_a
$LN24@initiate_a:
  000f3	68 60 02 00 00	 push	 608			; 00000260H
  000f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00109	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN25@initiate_a:
  00110	6a 31		 push	 49			; 00000031H
  00112	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00115	52		 push	 edx
  00116	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 1116
  0011d	8b 4d b8	 mov	 ecx, DWORD PTR tv132[ebp]
  00120	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00127	ff d2		 call	 edx
  00129	85 c0		 test	 eax, eax
  0012b	0f 85 88 01 00
	00		 jne	 $LN6@initiate_a

; 609  : 		{
; 610  : 			if (en == get_gunship_entity ())

  00131	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00134	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0013a	0f 85 ba 00 00
	00		 jne	 $LN7@initiate_a

; 611  : 			{
; 612  : 				set_client_server_entity_int_value (en, INT_TYPE_EJECTED, TRUE);

  00140	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00144	74 0a		 je	 SHORT $LN26@initiate_a
  00146	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00149	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014b	89 4d bc	 mov	 DWORD PTR tv146[ebp], ecx
  0014e	eb 21		 jmp	 SHORT $LN27@initiate_a
$LN26@initiate_a:
  00150	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  00156	83 c2 0f	 add	 edx, 15			; 0000000fH
  00159	52		 push	 edx
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN27@initiate_a:
  00171	b9 01 00 00 00	 mov	 ecx, 1
  00176	85 c9		 test	 ecx, ecx
  00178	74 09		 je	 SHORT $LN28@initiate_a
  0017a	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR tv154[ebp], 49 ; 00000031H
  00181	eb 21		 jmp	 SHORT $LN29@initiate_a
$LN28@initiate_a:
  00183	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  00189	83 c2 0f	 add	 edx, 15			; 0000000fH
  0018c	52		 push	 edx
  0018d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00197	50		 push	 eax
  00198	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN29@initiate_a:
  001a4	6a 01		 push	 1
  001a6	6a 31		 push	 49			; 00000031H
  001a8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ab	51		 push	 ecx
  001ac	69 55 bc b8 08
	00 00		 imul	 edx, DWORD PTR tv146[ebp], 2232
  001b3	8b 45 b8	 mov	 eax, DWORD PTR tv154[ebp]
  001b6	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  001bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  001c3	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  001c6	ff d0		 call	 eax

; 613  : 
; 614  : 				exit_game (NULL);

  001c8	6a 00		 push	 0
  001ca	e8 00 00 00 00	 call	 ?exit_game@@YGXPAUEVENT@@@Z ; exit_game

; 615  : 
; 616  : 				if (select_view_menu_view_players_gunship ())

  001cf	e8 00 00 00 00	 call	 ?select_view_menu_view_players_gunship@@YGHXZ ; select_view_menu_view_players_gunship
  001d4	85 c0		 test	 eax, eax
  001d6	74 10		 je	 SHORT $LN9@initiate_a

; 617  : 				{
; 618  : 					set_view_menu_display_visible_status (FALSE);

  001d8	6a 00		 push	 0
  001da	e8 00 00 00 00	 call	 ?set_view_menu_display_visible_status@@YGXH@Z ; set_view_menu_display_visible_status

; 619  : 
; 620  : 					set_view_mode (VIEW_MODE_VIRTUAL_COCKPIT_CREW);

  001df	6a 23		 push	 35			; 00000023H
  001e1	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode

; 621  : 				}
; 622  : 				else

  001e6	eb 0d		 jmp	 SHORT $LN10@initiate_a
$LN9@initiate_a:

; 623  : 				{
; 624  : 					debug_fatal ("Cannot view player's gunship");

  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@OCMNGDGA@Cannot?5view?5player?8s?5gunship@
  001ed	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  001f2	83 c4 04	 add	 esp, 4
$LN10@initiate_a:

; 625  : 				}
; 626  : 			}
; 627  : 			else

  001f5	e9 bf 00 00 00	 jmp	 $LN6@initiate_a
$LN7@initiate_a:

; 628  : 			{
; 629  : 				set_client_server_entity_int_value (en, INT_TYPE_EJECTED, TRUE);

  001fa	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001fe	74 0a		 je	 SHORT $LN30@initiate_a
  00200	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00203	8b 08		 mov	 ecx, DWORD PTR [eax]
  00205	89 4d bc	 mov	 DWORD PTR tv174[ebp], ecx
  00208	eb 21		 jmp	 SHORT $LN31@initiate_a
$LN30@initiate_a:
  0020a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  00210	83 c2 20	 add	 edx, 32			; 00000020H
  00213	52		 push	 edx
  00214	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00219	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00224	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN31@initiate_a:
  0022b	b9 01 00 00 00	 mov	 ecx, 1
  00230	85 c9		 test	 ecx, ecx
  00232	74 09		 je	 SHORT $LN32@initiate_a
  00234	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR tv182[ebp], 49 ; 00000031H
  0023b	eb 21		 jmp	 SHORT $LN33@initiate_a
$LN32@initiate_a:
  0023d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  00243	83 c2 20	 add	 edx, 32			; 00000020H
  00246	52		 push	 edx
  00247	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00257	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv182[ebp], 0
$LN33@initiate_a:
  0025e	6a 01		 push	 1
  00260	6a 31		 push	 49			; 00000031H
  00262	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00265	51		 push	 ecx
  00266	69 55 bc b8 08
	00 00		 imul	 edx, DWORD PTR tv174[ebp], 2232
  0026d	8b 45 b8	 mov	 eax, DWORD PTR tv182[ebp]
  00270	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  00277	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0027d	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00280	ff d0		 call	 eax

; 630  : 
; 631  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_BLADE);

  00282	6a 47		 push	 71			; 00000047H
  00284	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon

; 632  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_PILOT);

  0028d	6a 48		 push	 72			; 00000048H
  0028f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00292	50		 push	 eax
  00293	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon

; 633  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_CO_PILOT);

  00298	6a 49		 push	 73			; 00000049H
  0029a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon

; 634  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_LH_DOOR);

  002a3	6a 4a		 push	 74			; 0000004aH
  002a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002a8	50		 push	 eax
  002a9	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon

; 635  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_RH_DOOR);

  002ae	6a 4b		 push	 75			; 0000004bH
  002b0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b3	50		 push	 eax
  002b4	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon
$LN6@initiate_a:

; 636  : 			}
; 637  : 		}
; 638  : 		break;

  002b9	e9 ef 01 00 00	 jmp	 $LN1@initiate_a
$LN11@initiate_a:

; 639  : 	}
; 640  : 	case ENTITY_SUB_TYPE_AIRCRAFT_KA50_HOKUM:
; 641  : 	{
; 642  : 		if (!get_local_entity_int_value (en, INT_TYPE_EJECTED))

  002be	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002c2	74 0a		 je	 SHORT $LN34@initiate_a
  002c4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c9	89 4d bc	 mov	 DWORD PTR tv205[ebp], ecx
  002cc	eb 1d		 jmp	 SHORT $LN35@initiate_a
$LN34@initiate_a:
  002ce	68 82 02 00 00	 push	 642			; 00000282H
  002d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002de	52		 push	 edx
  002df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e4	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN35@initiate_a:
  002eb	b8 01 00 00 00	 mov	 eax, 1
  002f0	85 c0		 test	 eax, eax
  002f2	74 09		 je	 SHORT $LN36@initiate_a
  002f4	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR tv212[ebp], 49 ; 00000031H
  002fb	eb 1d		 jmp	 SHORT $LN37@initiate_a
$LN36@initiate_a:
  002fd	68 82 02 00 00	 push	 642			; 00000282H
  00302	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00307	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0030d	51		 push	 ecx
  0030e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00313	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN37@initiate_a:
  0031a	6a 31		 push	 49			; 00000031H
  0031c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0031f	52		 push	 edx
  00320	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv205[ebp], 1116
  00327	8b 4d b8	 mov	 ecx, DWORD PTR tv212[ebp]
  0032a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00331	ff d2		 call	 edx
  00333	85 c0		 test	 eax, eax
  00335	0f 85 72 01 00
	00		 jne	 $LN1@initiate_a

; 643  : 		{
; 644  : 			if (en == get_gunship_entity ())

  0033b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0033e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00344	0f 85 ba 00 00
	00		 jne	 $LN13@initiate_a

; 645  : 			{
; 646  : 				set_client_server_entity_int_value (en, INT_TYPE_EJECTED, TRUE);

  0034a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0034e	74 0a		 je	 SHORT $LN38@initiate_a
  00350	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00353	8b 08		 mov	 ecx, DWORD PTR [eax]
  00355	89 4d bc	 mov	 DWORD PTR tv226[ebp], ecx
  00358	eb 21		 jmp	 SHORT $LN39@initiate_a
$LN38@initiate_a:
  0035a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  00360	83 c2 31	 add	 edx, 49			; 00000031H
  00363	52		 push	 edx
  00364	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00369	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0036e	50		 push	 eax
  0036f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00374	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv226[ebp], 0
$LN39@initiate_a:
  0037b	b9 01 00 00 00	 mov	 ecx, 1
  00380	85 c9		 test	 ecx, ecx
  00382	74 09		 je	 SHORT $LN40@initiate_a
  00384	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR tv234[ebp], 49 ; 00000031H
  0038b	eb 21		 jmp	 SHORT $LN41@initiate_a
$LN40@initiate_a:
  0038d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  00393	83 c2 31	 add	 edx, 49			; 00000031H
  00396	52		 push	 edx
  00397	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003a1	50		 push	 eax
  003a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv234[ebp], 0
$LN41@initiate_a:
  003ae	6a 01		 push	 1
  003b0	6a 31		 push	 49			; 00000031H
  003b2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003b5	51		 push	 ecx
  003b6	69 55 bc b8 08
	00 00		 imul	 edx, DWORD PTR tv226[ebp], 2232
  003bd	8b 45 b8	 mov	 eax, DWORD PTR tv234[ebp]
  003c0	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  003c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  003cd	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  003d0	ff d0		 call	 eax

; 647  : 
; 648  : 				exit_game (NULL);

  003d2	6a 00		 push	 0
  003d4	e8 00 00 00 00	 call	 ?exit_game@@YGXPAUEVENT@@@Z ; exit_game

; 649  : 
; 650  : 				if (select_view_menu_view_players_gunship ())

  003d9	e8 00 00 00 00	 call	 ?select_view_menu_view_players_gunship@@YGHXZ ; select_view_menu_view_players_gunship
  003de	85 c0		 test	 eax, eax
  003e0	74 10		 je	 SHORT $LN15@initiate_a

; 651  : 				{
; 652  : 					set_view_menu_display_visible_status (FALSE);

  003e2	6a 00		 push	 0
  003e4	e8 00 00 00 00	 call	 ?set_view_menu_display_visible_status@@YGXH@Z ; set_view_menu_display_visible_status

; 653  : 
; 654  : 					set_view_mode (VIEW_MODE_VIRTUAL_COCKPIT_CREW);

  003e9	6a 23		 push	 35			; 00000023H
  003eb	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode

; 655  : 				}
; 656  : 				else

  003f0	eb 0d		 jmp	 SHORT $LN16@initiate_a
$LN15@initiate_a:

; 657  : 				{
; 658  : 					debug_fatal ("Cannot view player's gunship");

  003f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@OCMNGDGA@Cannot?5view?5player?8s?5gunship@
  003f7	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  003fc	83 c4 04	 add	 esp, 4
$LN16@initiate_a:

; 659  : 				}
; 660  : 			}
; 661  : 			else

  003ff	e9 a9 00 00 00	 jmp	 $LN1@initiate_a
$LN13@initiate_a:

; 662  : 			{
; 663  : 				set_client_server_entity_int_value (en, INT_TYPE_EJECTED, TRUE);

  00404	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00408	74 0a		 je	 SHORT $LN42@initiate_a
  0040a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0040d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0040f	89 4d bc	 mov	 DWORD PTR tv254[ebp], ecx
  00412	eb 21		 jmp	 SHORT $LN43@initiate_a
$LN42@initiate_a:
  00414	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  0041a	83 c2 42	 add	 edx, 66			; 00000042H
  0041d	52		 push	 edx
  0041e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00423	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00428	50		 push	 eax
  00429	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042e	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv254[ebp], 0
$LN43@initiate_a:
  00435	b9 01 00 00 00	 mov	 ecx, 1
  0043a	85 c9		 test	 ecx, ecx
  0043c	74 09		 je	 SHORT $LN44@initiate_a
  0043e	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR tv262[ebp], 49 ; 00000031H
  00445	eb 21		 jmp	 SHORT $LN45@initiate_a
$LN44@initiate_a:
  00447	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z@4JA
  0044d	83 c2 42	 add	 edx, 66			; 00000042H
  00450	52		 push	 edx
  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00456	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0045b	50		 push	 eax
  0045c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00461	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv262[ebp], 0
$LN45@initiate_a:
  00468	6a 01		 push	 1
  0046a	6a 31		 push	 49			; 00000031H
  0046c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0046f	51		 push	 ecx
  00470	69 55 bc b8 08
	00 00		 imul	 edx, DWORD PTR tv254[ebp], 2232
  00477	8b 45 b8	 mov	 eax, DWORD PTR tv262[ebp]
  0047a	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  00481	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00487	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0048a	ff d0		 call	 eax

; 664  : 
; 665  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_BLADE);

  0048c	6a 47		 push	 71			; 00000047H
  0048e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon

; 666  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_PILOT);

  00497	6a 48		 push	 72			; 00000048H
  00499	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0049c	50		 push	 eax
  0049d	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon

; 667  : 				launch_client_server_weapon (en, ENTITY_SUB_TYPE_WEAPON_HOKUM_LH_DOOR);

  004a2	6a 4a		 push	 74			; 0000004aH
  004a4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004a7	50		 push	 eax
  004a8	e8 00 00 00 00	 call	 ?launch_client_server_weapon@@YGXPAUENTITY@@H@Z ; launch_client_server_weapon
$LN1@initiate_a:

; 668  : 			}
; 669  : 		}
; 670  : 		break;
; 671  : 	}
; 672  : 	}
; 673  : }

  004ad	5f		 pop	 edi
  004ae	5e		 pop	 esi
  004af	5b		 pop	 ebx
  004b0	8b e5		 mov	 esp, ebp
  004b2	5d		 pop	 ebp
  004b3	c2 04 00	 ret	 4
?initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z ENDP	; initiate_aircraft_crew_ejection
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?animate_aircraft_shadow@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv258 = -96						; size = 4
tv263 = -92						; size = 4
tv251 = -88						; size = 4
tv184 = -84						; size = 4
tv177 = -80						; size = 4
tv166 = -76						; size = 4
tv138 = -76						; size = 4
tv81 = -76						; size = 4
tv159 = -72						; size = 4
tv153 = -72						; size = 4
tv131 = -72						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_aircraft_shadow@@YGXPAUENTITY@@@Z PROC		; animate_aircraft_shadow, COMDAT

; 550  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 551  : 	aircraft
; 552  : 		*raw;
; 553  : 
; 554  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@animate_ai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_aircraft_shadow@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@animate_ai:

; 555  : 
; 556  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN10@animate_ai
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN11@animate_ai
$LN10@animate_ai:
  00037	68 2c 02 00 00	 push	 556			; 0000022cH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN11@animate_ai:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN12@animate_ai
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN13@animate_ai
$LN12@animate_ai:
  00066	68 2c 02 00 00	 push	 556			; 0000022cH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN13@animate_ai:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 05		 je	 SHORT $LN5@animate_ai

; 557  : 	{
; 558  : 		return;

  000a3	e9 08 02 00 00	 jmp	 $LN1@animate_ai
$LN5@animate_ai:

; 559  : 	}
; 560  : 
; 561  : 	raw = (aircraft *) get_local_entity_data (en);

  000a8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ae	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 562  : 
; 563  : 	raw->inst3d->object_has_shadow = TRUE;

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b4	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000ba	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  000bd	83 ca 04	 or	 edx, 4
  000c0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c3	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000c9	89 51 50	 mov	 DWORD PTR [ecx+80], edx

; 564  : 
; 565  : 	//
; 566  : 	// don't draw shadow of aircraft landed on carriers
; 567  : 	//
; 568  : 
; 569  : 	if (get_local_entity_int_value (en, INT_TYPE_LANDED_ON_CARRIER))

  000cc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000d0	74 0a		 je	 SHORT $LN14@animate_ai
  000d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d7	89 4d b8	 mov	 DWORD PTR tv131[ebp], ecx
  000da	eb 1d		 jmp	 SHORT $LN15@animate_ai
$LN14@animate_ai:
  000dc	68 39 02 00 00	 push	 569			; 00000239H
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ec	52		 push	 edx
  000ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f2	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN15@animate_ai:
  000f9	b8 01 00 00 00	 mov	 eax, 1
  000fe	85 c0		 test	 eax, eax
  00100	74 09		 je	 SHORT $LN16@animate_ai
  00102	c7 45 b4 75 00
	00 00		 mov	 DWORD PTR tv138[ebp], 117 ; 00000075H
  00109	eb 1d		 jmp	 SHORT $LN17@animate_ai
$LN16@animate_ai:
  0010b	68 39 02 00 00	 push	 569			; 00000239H
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00115	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0011b	51		 push	 ecx
  0011c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00121	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN17@animate_ai:
  00128	6a 75		 push	 117			; 00000075H
  0012a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0012d	52		 push	 edx
  0012e	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv131[ebp], 1116
  00135	8b 4d b4	 mov	 ecx, DWORD PTR tv138[ebp]
  00138	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0013f	ff d2		 call	 edx
  00141	85 c0		 test	 eax, eax
  00143	74 1b		 je	 SHORT $LN6@animate_ai

; 570  : 	{
; 571  : 		raw->inst3d->object_has_shadow = FALSE;

  00145	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00148	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0014e	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00151	83 e2 fb	 and	 edx, -5			; fffffffbH
  00154	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00157	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0015d	89 51 50	 mov	 DWORD PTR [ecx+80], edx
$LN6@animate_ai:

; 572  : 	}
; 573  : 
; 574  : 	//
; 575  : 	// don't draw shadow of dead things below terrain
; 576  : 	//
; 577  : 
; 578  : 	switch (raw->operational_state)

  00160	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00163	8b 88 2c 01 00
	00		 mov	 ecx, DWORD PTR [eax+300]
  00169	c1 e9 05	 shr	 ecx, 5
  0016c	83 e1 1f	 and	 ecx, 31			; 0000001fH
  0016f	89 4d b8	 mov	 DWORD PTR tv153[ebp], ecx
  00172	83 7d b8 02	 cmp	 DWORD PTR tv153[ebp], 2
  00176	0f 82 34 01 00
	00		 jb	 $LN2@animate_ai
  0017c	83 7d b8 03	 cmp	 DWORD PTR tv153[ebp], 3
  00180	76 0b		 jbe	 SHORT $LN7@animate_ai
  00182	83 7d b8 08	 cmp	 DWORD PTR tv153[ebp], 8
  00186	74 05		 je	 SHORT $LN7@animate_ai
  00188	e9 23 01 00 00	 jmp	 $LN2@animate_ai
$LN7@animate_ai:

; 579  : 	{
; 580  : 	 	case OPERATIONAL_STATE_STOPPED:
; 581  : 	 	case OPERATIONAL_STATE_DYING:
; 582  : 	 	case OPERATIONAL_STATE_DEAD:
; 583  : 		{
; 584  : 			if (get_local_entity_float_value (en, FLOAT_TYPE_RADAR_ALTITUDE) < get_local_entity_float_value (en, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE))

  0018d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00191	74 0a		 je	 SHORT $LN18@animate_ai
  00193	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00196	8b 08		 mov	 ecx, DWORD PTR [eax]
  00198	89 4d b8	 mov	 DWORD PTR tv159[ebp], ecx
  0019b	eb 1d		 jmp	 SHORT $LN19@animate_ai
$LN18@animate_ai:
  0019d	68 48 02 00 00	 push	 584			; 00000248H
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ad	52		 push	 edx
  001ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN19@animate_ai:
  001ba	b8 01 00 00 00	 mov	 eax, 1
  001bf	85 c0		 test	 eax, eax
  001c1	74 09		 je	 SHORT $LN20@animate_ai
  001c3	c7 45 b4 68 00
	00 00		 mov	 DWORD PTR tv166[ebp], 104 ; 00000068H
  001ca	eb 1d		 jmp	 SHORT $LN21@animate_ai
$LN20@animate_ai:
  001cc	68 48 02 00 00	 push	 584			; 00000248H
  001d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001dc	51		 push	 ecx
  001dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e2	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN21@animate_ai:
  001e9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ed	74 0a		 je	 SHORT $LN22@animate_ai
  001ef	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001f2	8b 02		 mov	 eax, DWORD PTR [edx]
  001f4	89 45 b0	 mov	 DWORD PTR tv177[ebp], eax
  001f7	eb 1d		 jmp	 SHORT $LN23@animate_ai
$LN22@animate_ai:
  001f9	68 48 02 00 00	 push	 584			; 00000248H
  001fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00203	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00209	51		 push	 ecx
  0020a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN23@animate_ai:
  00216	ba 01 00 00 00	 mov	 edx, 1
  0021b	85 d2		 test	 edx, edx
  0021d	74 09		 je	 SHORT $LN24@animate_ai
  0021f	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv184[ebp], 18 ; 00000012H
  00226	eb 1c		 jmp	 SHORT $LN25@animate_ai
$LN24@animate_ai:
  00228	68 48 02 00 00	 push	 584			; 00000248H
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00232	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN25@animate_ai:
  00244	6a 68		 push	 104			; 00000068H
  00246	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00249	51		 push	 ecx
  0024a	69 55 b8 bc 02
	00 00		 imul	 edx, DWORD PTR tv159[ebp], 700
  00251	8b 45 b4	 mov	 eax, DWORD PTR tv166[ebp]
  00254	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0025b	ff d1		 call	 ecx
  0025d	d9 5d a8	 fstp	 DWORD PTR tv251[ebp]
  00260	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv251[ebp]
  00265	6a 12		 push	 18			; 00000012H
  00267	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0026a	52		 push	 edx
  0026b	69 45 b0 bc 02
	00 00		 imul	 eax, DWORD PTR tv177[ebp], 700
  00272	8b 4d ac	 mov	 ecx, DWORD PTR tv184[ebp]
  00275	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  0027c	f3 0f 11 45 a4	 movss	 DWORD PTR tv263[ebp], xmm0
  00281	ff d2		 call	 edx
  00283	d9 5d a0	 fstp	 DWORD PTR tv258[ebp]
  00286	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv258[ebp]
  0028b	f3 0f 10 4d a4	 movss	 xmm1, DWORD PTR tv263[ebp]
  00290	0f 2f c1	 comiss	 xmm0, xmm1
  00293	76 1b		 jbe	 SHORT $LN8@animate_ai

; 585  : 			{
; 586  : 				raw->inst3d->object_has_shadow = FALSE;

  00295	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00298	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0029e	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  002a1	83 e2 fb	 and	 edx, -5			; fffffffbH
  002a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002a7	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  002ad	89 51 50	 mov	 DWORD PTR [ecx+80], edx
$LN8@animate_ai:
$LN2@animate_ai:
$LN1@animate_ai:

; 587  : 			}
; 588  : 		}
; 589  : 	}
; 590  : }

  002b0	5f		 pop	 edi
  002b1	5e		 pop	 esi
  002b2	5b		 pop	 ebx
  002b3	8b e5		 mov	 esp, ebp
  002b5	5d		 pop	 ebp
  002b6	c2 04 00	 ret	 4
?animate_aircraft_shadow@@YGXPAUENTITY@@@Z ENDP		; animate_aircraft_shadow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv76 = -76						; size = 4
_wsr_state$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z PROC ; update_aircraft_weapon_system_ready, COMDAT

; 504  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 505  : 	aircraft
; 506  : 		*raw;
; 507  : 
; 508  : 	int
; 509  : 		wsr_state;
; 510  : 
; 511  : 	//
; 512  : 	// updates the weapon system ready status ( regardless of whether the aircraft is drawn or not )
; 513  : 	//
; 514  : 
; 515  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@update_air
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_air:

; 516  : 
; 517  : 	raw = (aircraft *) get_local_entity_data( en );

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 518  : 
; 519  : 	wsr_state = update_entity_reversable_keyframed_value( en, &raw->weapon_system_ready_state, 0.5 );

  00030	51		 push	 ecx
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00039	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00041	05 08 01 00 00	 add	 eax, 264		; 00000108H
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_reversable_keyframed_value
  00050	89 45 f8	 mov	 DWORD PTR _wsr_state$[ebp], eax

; 520  : 
; 521  : 	if ( in_flight_articulation_test )

  00053	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  0005a	74 28		 je	 SHORT $LN2@update_air

; 522  : 	{
; 523  : 		switch ( wsr_state )

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _wsr_state$[ebp]
  0005f	89 45 b4	 mov	 DWORD PTR tv76[ebp], eax
  00062	83 7d b4 00	 cmp	 DWORD PTR tv76[ebp], 0
  00066	74 08		 je	 SHORT $LN6@update_air
  00068	83 7d b4 02	 cmp	 DWORD PTR tv76[ebp], 2
  0006c	74 0d		 je	 SHORT $LN7@update_air
  0006e	eb 14		 jmp	 SHORT $LN2@update_air
$LN6@update_air:

; 524  : 		{
; 525  : 			//////////////////////////////////////////////////
; 526  : 			case 0:
; 527  : 			//////////////////////////////////////////////////
; 528  : 			{
; 529  : 				open_entity_weapon_system_ready( en );

  00070	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?open_entity_weapon_system_ready@@YGXPAUENTITY@@@Z ; open_entity_weapon_system_ready

; 530  : 
; 531  : 				break;

  00079	eb 09		 jmp	 SHORT $LN2@update_air
$LN7@update_air:

; 532  : 			}
; 533  : 			//////////////////////////////////////////////////
; 534  : 			case 2:
; 535  : 			//////////////////////////////////////////////////
; 536  : 			{
; 537  : 				close_entity_weapon_system_ready( en );

  0007b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?close_entity_weapon_system_ready@@YGXPAUENTITY@@@Z ; close_entity_weapon_system_ready
$LN2@update_air:

; 538  : 
; 539  : 				break;
; 540  : 			}
; 541  : 		}
; 542  : 	}
; 543  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?update_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ENDP ; update_aircraft_weapon_system_ready
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z PROC ; animate_aircraft_weapon_system_ready, COMDAT

; 479  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 480  : 	aircraft
; 481  : 		*raw;
; 482  : 
; 483  : 	//
; 484  : 	// articulate the "weapon system readies" on the 3d objects
; 485  : 	//
; 486  : 
; 487  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_ai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_ai:

; 488  : 
; 489  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN5@animate_ai
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN6@animate_ai
$LN5@animate_ai:
  00037	68 e9 01 00 00	 push	 489			; 000001e9H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@animate_ai:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN7@animate_ai
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN8@animate_ai
$LN7@animate_ai:
  00066	68 e9 01 00 00	 push	 489			; 000001e9H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@animate_ai:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 02		 je	 SHORT $LN3@animate_ai

; 490  : 	{
; 491  : 		return;

  000a3	eb 2e		 jmp	 SHORT $LN1@animate_ai
$LN3@animate_ai:

; 492  : 	}
; 493  : 
; 494  : 	raw = (aircraft *) get_local_entity_data( en );

  000a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 495  : 
; 496  : 	animate_entity_reversable_keyframed_sub_objects( raw->inst3d, OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_READY, raw->weapon_system_ready_state );

  000ae	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b1	51		 push	 ecx
  000b2	f3 0f 10 80 08
	01 00 00	 movss	 xmm0, DWORD PTR [eax+264]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	68 e3 00 00 00	 push	 227			; 000000e3H
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c7	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 ?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_reversable_keyframed_sub_objects
$LN1@animate_ai:

; 497  : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ENDP ; animate_aircraft_weapon_system_ready
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv237 = -100						; size = 4
tv202 = -100						; size = 4
tv162 = -100						; size = 4
tv235 = -96						; size = 8
tv200 = -96						; size = 8
tv160 = -96						; size = 8
tv236 = -88						; size = 8
tv201 = -88						; size = 8
tv182 = -88						; size = 4
tv161 = -88						; size = 8
tv93 = -88						; size = 4
tv183 = -84						; size = 4
tv143 = -84						; size = 4
tv133 = -84						; size = 4
tv85 = -84						; size = 4
_val$ = -16						; size = 4
_uc_state$ = -12					; size = 4
_old_uc_state$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z PROC	; update_aircraft_undercarriage, COMDAT

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 359  : 	aircraft
; 360  : 		*raw;
; 361  : 
; 362  : 	int
; 363  : 		old_uc_state,
; 364  : 		uc_state;
; 365  : 
; 366  : 	float
; 367  : 		val;
; 368  : 
; 369  : 	//
; 370  : 	// updates the undercarriage status ( regardless of whether the aircraft is drawn or not )
; 371  : 	//
; 372  : 
; 373  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@update_air
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0f	 add	 eax, 15			; 0000000fH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@update_air:

; 374  : 
; 375  : 	raw = (aircraft *) get_local_entity_data( en );

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 376  : 
; 377  : 	old_uc_state = raw->undercarriage_state;

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	f3 0f 2c 88 fc
	00 00 00	 cvttss2si ecx, DWORD PTR [eax+252]
  0003b	89 4d f8	 mov	 DWORD PTR _old_uc_state$[ebp], ecx

; 378  : 
; 379  : 	uc_state = update_entity_reversable_keyframed_value( en, &raw->undercarriage_state, 0.5 );

  0003e	51		 push	 ecx
  0003f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0004f	05 fc 00 00 00	 add	 eax, 252		; 000000fcH
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_reversable_keyframed_value
  0005e	89 45 f4	 mov	 DWORD PTR _uc_state$[ebp], eax

; 380  : 
; 381  : 	if ((uc_state == 1) || (uc_state == 3))

  00061	83 7d f4 01	 cmp	 DWORD PTR _uc_state$[ebp], 1
  00065	74 0a		 je	 SHORT $LN8@update_air
  00067	83 7d f4 03	 cmp	 DWORD PTR _uc_state$[ebp], 3
  0006b	0f 85 8e 00 00
	00		 jne	 $LN7@update_air
$LN8@update_air:

; 382  : 	{
; 383  : 
; 384  : 		set_local_entity_float_value (en, FLOAT_TYPE_VIEW_INTEREST_LEVEL, DEFAULT_VIEW_INTEREST_LEVEL);

  00071	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00075	74 0a		 je	 SHORT $LN20@update_air
  00077	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007c	89 4d ac	 mov	 DWORD PTR tv85[ebp], ecx
  0007f	eb 21		 jmp	 SHORT $LN21@update_air
$LN20@update_air:
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA
  00087	83 c2 1a	 add	 edx, 26			; 0000001aH
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN21@update_air:
  000a2	b9 01 00 00 00	 mov	 ecx, 1
  000a7	85 c9		 test	 ecx, ecx
  000a9	74 09		 je	 SHORT $LN22@update_air
  000ab	c7 45 a8 95 00
	00 00		 mov	 DWORD PTR tv93[ebp], 149 ; 00000095H
  000b2	eb 21		 jmp	 SHORT $LN23@update_air
$LN22@update_air:
  000b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA
  000ba	83 c2 1a	 add	 edx, 26			; 0000001aH
  000bd	52		 push	 edx
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ce	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN23@update_air:
  000d5	51		 push	 ecx
  000d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  000de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e3	68 95 00 00 00	 push	 149			; 00000095H
  000e8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000eb	51		 push	 ecx
  000ec	69 55 ac bc 02
	00 00		 imul	 edx, DWORD PTR tv85[ebp], 700
  000f3	8b 45 a8	 mov	 eax, DWORD PTR tv93[ebp]
  000f6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  000fd	ff d1		 call	 ecx
$LN7@update_air:

; 385  : 	}
; 386  : 
; 387  : 	if ( ( in_flight_articulation_test ) && ( get_comms_model() == COMMS_MODEL_SERVER ) )

  000ff	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  00106	74 31		 je	 SHORT $LN2@update_air
  00108	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0010f	75 28		 jne	 SHORT $LN2@update_air

; 388  : 	{
; 389  : 		switch ( uc_state )

  00111	8b 45 f4	 mov	 eax, DWORD PTR _uc_state$[ebp]
  00114	89 45 ac	 mov	 DWORD PTR tv133[ebp], eax
  00117	83 7d ac 00	 cmp	 DWORD PTR tv133[ebp], 0
  0011b	74 08		 je	 SHORT $LN10@update_air
  0011d	83 7d ac 02	 cmp	 DWORD PTR tv133[ebp], 2
  00121	74 0d		 je	 SHORT $LN11@update_air
  00123	eb 14		 jmp	 SHORT $LN2@update_air
$LN10@update_air:

; 390  : 		{
; 391  : 			//////////////////////////////////////////////////
; 392  : 			case 0:
; 393  : 			//////////////////////////////////////////////////
; 394  : 			{
; 395  : 				lower_client_server_entity_undercarriage( en );

  00125	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 ?lower_client_server_entity_undercarriage@@YGXPAUENTITY@@@Z ; lower_client_server_entity_undercarriage

; 396  : 
; 397  : 				break;

  0012e	eb 09		 jmp	 SHORT $LN2@update_air
$LN11@update_air:

; 398  : 			}
; 399  : 			//////////////////////////////////////////////////
; 400  : 			case 2:
; 401  : 			//////////////////////////////////////////////////
; 402  : 			{
; 403  : 				raise_client_server_entity_undercarriage( en );

  00130	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00133	50		 push	 eax
  00134	e8 00 00 00 00	 call	 ?raise_client_server_entity_undercarriage@@YGXPAUENTITY@@@Z ; raise_client_server_entity_undercarriage
$LN2@update_air:

; 404  : 
; 405  : 				break;
; 406  : 			}
; 407  : 		}
; 408  : 	}
; 409  : 
; 410  : 	//
; 411  : 	// Notify Flight Dynamics of u/c state
; 412  : 	//
; 413  : 
; 414  : 	if (en == get_gunship_entity ())

  00139	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00142	0f 85 01 03 00
	00		 jne	 $LN4@update_air

; 415  : 	{
; 416  : 		get_keyframed_animation_state (raw->undercarriage_state, &uc_state, &val);

  00148	8d 45 f0	 lea	 eax, DWORD PTR _val$[ebp]
  0014b	50		 push	 eax
  0014c	8d 4d f4	 lea	 ecx, DWORD PTR _uc_state$[ebp]
  0014f	51		 push	 ecx
  00150	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00153	51		 push	 ecx
  00154	f3 0f 10 82 fc
	00 00 00	 movss	 xmm0, DWORD PTR [edx+252]
  0015c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00161	e8 00 00 00 00	 call	 ?get_keyframed_animation_state@@YGXMPAHPAM@Z ; get_keyframed_animation_state

; 417  : 
; 418  : 		switch ( uc_state )

  00166	8b 45 f4	 mov	 eax, DWORD PTR _uc_state$[ebp]
  00169	89 45 ac	 mov	 DWORD PTR tv143[ebp], eax
  0016c	83 7d ac 03	 cmp	 DWORD PTR tv143[ebp], 3
  00170	0f 87 d3 02 00
	00		 ja	 $LN4@update_air
  00176	8b 4d ac	 mov	 ecx, DWORD PTR tv143[ebp]
  00179	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN40@update_air[ecx*4]
$LN13@update_air:

; 419  : 		{
; 420  : 			case AIRCRAFT_UNDERCARRIAGE_UP:
; 421  : 			{
; 422  : 				set_current_flight_dynamics_undercarriage_state (0.0);

  00180	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00185	f3 0f 5a 80 6c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7276]
  0018d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00195	76 15		 jbe	 SHORT $LN26@update_air
  00197	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0019d	f3 0f 5a 81 6c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+7276]
  001a5	f2 0f 11 45 a8	 movsd	 QWORD PTR tv161[ebp], xmm0
  001aa	eb 3d		 jmp	 SHORT $LN27@update_air
$LN26@update_air:
  001ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001b2	f3 0f 5a 82 70
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [edx+7280]
  001ba	0f 57 c9	 xorps	 xmm1, xmm1
  001bd	66 0f 2f c8	 comisd	 xmm1, xmm0
  001c1	76 14		 jbe	 SHORT $LN24@update_air
  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001c8	f3 0f 5a 80 70
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7280]
  001d0	f2 0f 11 45 a0	 movsd	 QWORD PTR tv160[ebp], xmm0
  001d5	eb 08		 jmp	 SHORT $LN25@update_air
$LN24@update_air:
  001d7	0f 57 c0	 xorps	 xmm0, xmm0
  001da	f2 0f 11 45 a0	 movsd	 QWORD PTR tv160[ebp], xmm0
$LN25@update_air:
  001df	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv160[ebp]
  001e4	f2 0f 11 45 a8	 movsd	 QWORD PTR tv161[ebp], xmm0
$LN27@update_air:
  001e9	f2 0f 5a 45 a8	 cvtsd2ss xmm0, QWORD PTR tv161[ebp]
  001ee	f3 0f 11 45 9c	 movss	 DWORD PTR tv162[ebp], xmm0
  001f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f9	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv162[ebp]
  001fe	f3 0f 11 81 64
	1c 00 00	 movss	 DWORD PTR [ecx+7268], xmm0

; 423  : 
; 424  : 				if (old_uc_state == AIRCRAFT_UNDERCARRIAGE_RAISING)

  00206	83 7d f8 03	 cmp	 DWORD PTR _old_uc_state$[ebp], 3
  0020a	75 39		 jne	 SHORT $LN14@update_air

; 425  : 				{
; 426  : 					play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_GEAR_UP);

  0020c	6a 03		 push	 3
  0020e	51		 push	 ecx
  0020f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00217	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021c	6a 04		 push	 4
  0021e	51		 push	 ecx
  0021f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00227	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022c	51		 push	 ecx
  0022d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00235	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN14@update_air:

; 427  : 				}
; 428  : 
; 429  : 				break;

  00245	e9 ff 01 00 00	 jmp	 $LN4@update_air
$LN15@update_air:

; 430  : 			}
; 431  : 			case AIRCRAFT_UNDERCARRIAGE_LOWERING:
; 432  : 			{
; 433  : 				set_current_flight_dynamics_undercarriage_state (val);

  0024a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0024f	f3 0f 10 80 6c
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7276]
  00257	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _val$[ebp]
  0025b	76 15		 jbe	 SHORT $LN30@update_air
  0025d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00263	f3 0f 10 81 6c
	1c 00 00	 movss	 xmm0, DWORD PTR [ecx+7276]
  0026b	f3 0f 11 45 ac	 movss	 DWORD PTR tv183[ebp], xmm0
  00270	eb 3c		 jmp	 SHORT $LN31@update_air
$LN30@update_air:
  00272	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00278	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _val$[ebp]
  0027d	0f 2f 82 70 1c
	00 00		 comiss	 xmm0, DWORD PTR [edx+7280]
  00284	76 14		 jbe	 SHORT $LN28@update_air
  00286	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0028b	f3 0f 10 80 70
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7280]
  00293	f3 0f 11 45 a8	 movss	 DWORD PTR tv182[ebp], xmm0
  00298	eb 0a		 jmp	 SHORT $LN29@update_air
$LN28@update_air:
  0029a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _val$[ebp]
  0029f	f3 0f 11 45 a8	 movss	 DWORD PTR tv182[ebp], xmm0
$LN29@update_air:
  002a4	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv182[ebp]
  002a9	f3 0f 11 45 ac	 movss	 DWORD PTR tv183[ebp], xmm0
$LN31@update_air:
  002ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002b4	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv183[ebp]
  002b9	f3 0f 11 81 64
	1c 00 00	 movss	 DWORD PTR [ecx+7268], xmm0

; 434  : 				break;

  002c1	e9 83 01 00 00	 jmp	 $LN4@update_air
$LN16@update_air:

; 435  : 			}
; 436  : 			case AIRCRAFT_UNDERCARRIAGE_DOWN:
; 437  : 			{
; 438  : 				set_current_flight_dynamics_undercarriage_state (1.0);

  002c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002cb	f3 0f 5a 80 6c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7276]
  002d3	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  002db	76 15		 jbe	 SHORT $LN34@update_air
  002dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002e3	f3 0f 5a 81 6c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+7276]
  002eb	f2 0f 11 45 a8	 movsd	 QWORD PTR tv201[ebp], xmm0
  002f0	eb 47		 jmp	 SHORT $LN35@update_air
$LN34@update_air:
  002f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002f8	f3 0f 5a 82 70
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [edx+7280]
  00300	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00308	66 0f 2f c8	 comisd	 xmm1, xmm0
  0030c	76 14		 jbe	 SHORT $LN32@update_air
  0030e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00313	f3 0f 5a 80 70
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7280]
  0031b	f2 0f 11 45 a0	 movsd	 QWORD PTR tv200[ebp], xmm0
  00320	eb 0d		 jmp	 SHORT $LN33@update_air
$LN32@update_air:
  00322	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0032a	f2 0f 11 45 a0	 movsd	 QWORD PTR tv200[ebp], xmm0
$LN33@update_air:
  0032f	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv200[ebp]
  00334	f2 0f 11 45 a8	 movsd	 QWORD PTR tv201[ebp], xmm0
$LN35@update_air:
  00339	f2 0f 5a 45 a8	 cvtsd2ss xmm0, QWORD PTR tv201[ebp]
  0033e	f3 0f 11 45 9c	 movss	 DWORD PTR tv202[ebp], xmm0
  00343	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00349	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv202[ebp]
  0034e	f3 0f 11 81 64
	1c 00 00	 movss	 DWORD PTR [ecx+7268], xmm0

; 439  : 
; 440  : 				if (old_uc_state == AIRCRAFT_UNDERCARRIAGE_LOWERING)

  00356	83 7d f8 01	 cmp	 DWORD PTR _old_uc_state$[ebp], 1
  0035a	75 39		 jne	 SHORT $LN17@update_air

; 441  : 				{
; 442  : 					play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_GEAR_DOWN);

  0035c	6a 02		 push	 2
  0035e	51		 push	 ecx
  0035f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00367	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036c	6a 04		 push	 4
  0036e	51		 push	 ecx
  0036f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00377	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0037c	51		 push	 ecx
  0037d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00385	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0038f	50		 push	 eax
  00390	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN17@update_air:

; 443  : 				}
; 444  : 
; 445  : 				break;

  00395	e9 af 00 00 00	 jmp	 $LN4@update_air
$LN18@update_air:

; 446  : 			}
; 447  : 			case AIRCRAFT_UNDERCARRIAGE_RAISING:
; 448  : 			{
; 449  : 				set_current_flight_dynamics_undercarriage_state (1.0 - val);

  0039a	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _val$[ebp]
  0039f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  003a7	f2 0f 5c c8	 subsd	 xmm1, xmm0
  003ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003b0	f3 0f 5a 80 6c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7276]
  003b8	66 0f 2f c1	 comisd	 xmm0, xmm1
  003bc	76 15		 jbe	 SHORT $LN38@update_air
  003be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003c4	f3 0f 5a 81 6c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+7276]
  003cc	f2 0f 11 45 a8	 movsd	 QWORD PTR tv236[ebp], xmm0
  003d1	eb 59		 jmp	 SHORT $LN39@update_air
$LN38@update_air:
  003d3	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _val$[ebp]
  003d8	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  003e0	f2 0f 5c c8	 subsd	 xmm1, xmm0
  003e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003ea	f3 0f 5a 82 70
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [edx+7280]
  003f2	66 0f 2f c8	 comisd	 xmm1, xmm0
  003f6	76 14		 jbe	 SHORT $LN36@update_air
  003f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003fd	f3 0f 5a 80 70
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7280]
  00405	f2 0f 11 45 a0	 movsd	 QWORD PTR tv235[ebp], xmm0
  0040a	eb 16		 jmp	 SHORT $LN37@update_air
$LN36@update_air:
  0040c	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _val$[ebp]
  00411	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00419	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0041d	f2 0f 11 4d a0	 movsd	 QWORD PTR tv235[ebp], xmm1
$LN37@update_air:
  00422	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv235[ebp]
  00427	f2 0f 11 45 a8	 movsd	 QWORD PTR tv236[ebp], xmm0
$LN39@update_air:
  0042c	f2 0f 5a 45 a8	 cvtsd2ss xmm0, QWORD PTR tv236[ebp]
  00431	f3 0f 11 45 9c	 movss	 DWORD PTR tv237[ebp], xmm0
  00436	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0043c	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv237[ebp]
  00441	f3 0f 11 81 64
	1c 00 00	 movss	 DWORD PTR [ecx+7268], xmm0
$LN4@update_air:

; 450  : 				break;
; 451  : 			}
; 452  : 		}
; 453  : 	}
; 454  : }

  00449	5f		 pop	 edi
  0044a	5e		 pop	 esi
  0044b	5b		 pop	 ebx
  0044c	8b e5		 mov	 esp, ebp
  0044e	5d		 pop	 ebp
  0044f	c2 04 00	 ret	 4
  00452	66 90		 npad	 2
$LN40@update_air:
  00454	00 00 00 00	 DD	 $LN13@update_air
  00458	00 00 00 00	 DD	 $LN15@update_air
  0045c	00 00 00 00	 DD	 $LN16@update_air
  00460	00 00 00 00	 DD	 $LN18@update_air
?update_aircraft_undercarriage@@YGXPAUENTITY@@@Z ENDP	; update_aircraft_undercarriage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z PROC	; animate_aircraft_undercarriage, COMDAT

; 332  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 333  : 	aircraft
; 334  : 		*raw;
; 335  : 
; 336  : 	//
; 337  : 	// articulate the landing gear on the 3d objects
; 338  : 	//
; 339  : 
; 340  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_ai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_ai:

; 341  : 
; 342  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN5@animate_ai
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN6@animate_ai
$LN5@animate_ai:
  00037	68 56 01 00 00	 push	 342			; 00000156H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@animate_ai:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN7@animate_ai
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN8@animate_ai
$LN7@animate_ai:
  00066	68 56 01 00 00	 push	 342			; 00000156H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@animate_ai:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 02		 je	 SHORT $LN3@animate_ai

; 343  : 	{
; 344  : 		return;

  000a3	eb 2b		 jmp	 SHORT $LN1@animate_ai
$LN3@animate_ai:

; 345  : 	}
; 346  : 
; 347  : 	raw = (aircraft *) get_local_entity_data( en );

  000a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 348  : 
; 349  : 	animate_entity_reversable_keyframed_sub_objects( raw->inst3d, OBJECT_3D_SUB_OBJECT_UNDERCARRIAGE, raw->undercarriage_state );

  000ae	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b1	51		 push	 ecx
  000b2	f3 0f 10 80 fc
	00 00 00	 movss	 xmm0, DWORD PTR [eax+252]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	6a 35		 push	 53			; 00000035H
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c4	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  000ca	52		 push	 edx
  000cb	e8 00 00 00 00	 call	 ?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_reversable_keyframed_sub_objects
$LN1@animate_ai:

; 350  : 
; 351  : }

  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 04 00	 ret	 4
?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z ENDP	; animate_aircraft_undercarriage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?update_aircraft_rudder@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_aircraft_rudder@@YGXPAUENTITY@@@Z PROC		; update_aircraft_rudder, COMDAT

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	aircraft
; 296  : 		*raw;
; 297  : 
; 298  : 	//
; 299  : 	// updates the rudder on an aircraft
; 300  : 	//
; 301  : 
; 302  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@update_air
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_air:

; 303  : 
; 304  : 	raw = (aircraft *) get_local_entity_data( en );

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 305  : 
; 306  : 	update_entity_simple_keyframed_value( en, &raw->rudder_state, 0.16666 );

  00030	51		 push	 ecx
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e2aa8eb
  00039	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00041	05 18 01 00 00	 add	 eax, 280		; 00000118H
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_simple_keyframed_value

; 307  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?update_aircraft_rudder@@YGXPAUENTITY@@@Z ENDP		; update_aircraft_rudder
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?animate_aircraft_rudder@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_aircraft_rudder@@YGXPAUENTITY@@@Z PROC		; animate_aircraft_rudder, COMDAT

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 269  : 	aircraft
; 270  : 		*raw;
; 271  : 
; 272  : 	//
; 273  : 	// articulate the rudder on aircraft
; 274  : 	//
; 275  : 
; 276  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_ai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_aircraft_rudder@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_ai:

; 277  : 
; 278  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN5@animate_ai
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN6@animate_ai
$LN5@animate_ai:
  00037	68 16 01 00 00	 push	 278			; 00000116H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@animate_ai:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN7@animate_ai
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN8@animate_ai
$LN7@animate_ai:
  00066	68 16 01 00 00	 push	 278			; 00000116H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@animate_ai:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 02		 je	 SHORT $LN3@animate_ai

; 279  : 	{
; 280  : 		return;

  000a3	eb 53		 jmp	 SHORT $LN1@animate_ai
$LN3@animate_ai:

; 281  : 	}
; 282  : 
; 283  : 	raw = (aircraft *) get_local_entity_data (en);

  000a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 284  : 
; 285  : 	animate_entity_simple_keyframed_sub_objects( raw->inst3d, OBJECT_3D_SUB_OBJECT_RUDDER, raw->rudder_state );

  000ae	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b1	51		 push	 ecx
  000b2	f3 0f 10 80 18
	01 00 00	 movss	 xmm0, DWORD PTR [eax+280]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	68 07 01 00 00	 push	 263			; 00000107H
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c7	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 286  : 	animate_entity_simple_keyframed_sub_objects( raw->inst3d, OBJECT_3D_SUB_OBJECT_KA52_RUDDER, raw->rudder_state );

  000d3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000d6	51		 push	 ecx
  000d7	f3 0f 10 80 18
	01 00 00	 movss	 xmm0, DWORD PTR [eax+280]
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	68 e4 00 00 00	 push	 228			; 000000e4H
  000e9	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000ec	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  000f2	52		 push	 edx
  000f3	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects
$LN1@animate_ai:

; 287  : }

  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 04 00	 ret	 4
?animate_aircraft_rudder@@YGXPAUENTITY@@@Z ENDP		; animate_aircraft_rudder
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv77 = -76						; size = 4
_door_state$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z PROC	; update_aircraft_cargo_doors, COMDAT

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 217  : 	aircraft
; 218  : 		*raw;
; 219  : 
; 220  : 	int
; 221  : 		door_state;
; 222  : 
; 223  : 	//
; 224  : 	// updates the doors status ( regardless of whether the aircraft is drawn or not )
; 225  : 	//
; 226  : 
; 227  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@update_air
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_air:

; 228  : 
; 229  : 	raw = (aircraft *) get_local_entity_data( en );

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 230  : 
; 231  : 	door_state = update_entity_reversable_keyframed_value( en, &raw->cargo_door_state, 0.5 );

  00030	51		 push	 ecx
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00039	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00041	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_reversable_keyframed_value
  00050	89 45 f8	 mov	 DWORD PTR _door_state$[ebp], eax

; 232  : 
; 233  : 	if ( ( in_flight_articulation_test ) && ( get_comms_model() == COMMS_MODEL_SERVER ) )

  00053	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  0005a	74 31		 je	 SHORT $LN2@update_air
  0005c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00063	75 28		 jne	 SHORT $LN2@update_air

; 234  : 	{
; 235  : 		switch ( door_state )

  00065	8b 45 f8	 mov	 eax, DWORD PTR _door_state$[ebp]
  00068	89 45 b4	 mov	 DWORD PTR tv77[ebp], eax
  0006b	83 7d b4 00	 cmp	 DWORD PTR tv77[ebp], 0
  0006f	74 08		 je	 SHORT $LN6@update_air
  00071	83 7d b4 02	 cmp	 DWORD PTR tv77[ebp], 2
  00075	74 0d		 je	 SHORT $LN7@update_air
  00077	eb 14		 jmp	 SHORT $LN2@update_air
$LN6@update_air:

; 236  : 		{
; 237  : 			//////////////////////////////////////////////////
; 238  : 			case 0:
; 239  : 			//////////////////////////////////////////////////
; 240  : 			{
; 241  : 				open_client_server_entity_cargo_doors( en );

  00079	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?open_client_server_entity_cargo_doors@@YGXPAUENTITY@@@Z ; open_client_server_entity_cargo_doors

; 242  : 
; 243  : 				break;

  00082	eb 09		 jmp	 SHORT $LN2@update_air
$LN7@update_air:

; 244  : 			}
; 245  : 			//////////////////////////////////////////////////
; 246  : 			case 2:
; 247  : 			//////////////////////////////////////////////////
; 248  : 			{
; 249  : 				close_client_server_entity_cargo_doors( en );

  00084	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?close_client_server_entity_cargo_doors@@YGXPAUENTITY@@@Z ; close_client_server_entity_cargo_doors
$LN2@update_air:

; 250  : 
; 251  : 				break;
; 252  : 			}
; 253  : 		}
; 254  : 	}
; 255  : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?update_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ENDP	; update_aircraft_cargo_doors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z PROC	; animate_aircraft_cargo_doors, COMDAT

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 192  : 	aircraft
; 193  : 		*raw;
; 194  : 
; 195  : 	//
; 196  : 	// articulate the doors on the 3d objects
; 197  : 	//
; 198  : 
; 199  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_ai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_ai:

; 200  : 
; 201  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN5@animate_ai
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN6@animate_ai
$LN5@animate_ai:
  00037	68 c9 00 00 00	 push	 201			; 000000c9H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@animate_ai:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN7@animate_ai
  0005d	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00064	eb 1d		 jmp	 SHORT $LN8@animate_ai
$LN7@animate_ai:
  00066	68 c9 00 00 00	 push	 201			; 000000c9H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@animate_ai:
  00083	68 93 00 00 00	 push	 147			; 00000093H
  00088	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0008b	52		 push	 edx
  0008c	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00093	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00096	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009d	ff d2		 call	 edx
  0009f	85 c0		 test	 eax, eax
  000a1	74 02		 je	 SHORT $LN3@animate_ai

; 202  : 	{
; 203  : 		return;

  000a3	eb 2e		 jmp	 SHORT $LN1@animate_ai
$LN3@animate_ai:

; 204  : 	}
; 205  : 
; 206  : 	raw = (aircraft *) get_local_entity_data( en );

  000a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 207  : 
; 208  : 	animate_entity_reversable_keyframed_sub_objects( raw->inst3d, OBJECT_3D_SUB_OBJECT_CARGO_DOOR, raw->cargo_door_state );

  000ae	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b1	51		 push	 ecx
  000b2	f3 0f 10 80 f0
	00 00 00	 movss	 xmm0, DWORD PTR [eax+240]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	68 88 00 00 00	 push	 136			; 00000088H
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c7	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 ?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_reversable_keyframed_sub_objects
$LN1@animate_ai:

; 209  : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ENDP	; animate_aircraft_cargo_doors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv77 = -76						; size = 4
_door_state$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z PROC	; update_aircraft_loading_doors, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 128  : 	aircraft
; 129  : 		*raw;
; 130  : 
; 131  : 	int
; 132  : 		door_state;
; 133  : 
; 134  : 	//
; 135  : 	// updates the doors status ( regardless of whether the aircraft is drawn or not )
; 136  : 	//
; 137  : 
; 138  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@update_air
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_air:

; 139  : 
; 140  : 	raw = (aircraft *) get_local_entity_data( en );

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 141  : 
; 142  : 	door_state = update_entity_reversable_keyframed_value( en, &raw->loading_door_state, 0.5 );

  00030	51		 push	 ecx
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00039	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00041	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ?update_entity_reversable_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_reversable_keyframed_value
  00050	89 45 f8	 mov	 DWORD PTR _door_state$[ebp], eax

; 143  : 
; 144  : 	if ( ( in_flight_articulation_test ) && ( get_comms_model() == COMMS_MODEL_SERVER ) )

  00053	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_articulation_test@@3HA, 0 ; in_flight_articulation_test
  0005a	74 31		 je	 SHORT $LN2@update_air
  0005c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00063	75 28		 jne	 SHORT $LN2@update_air

; 145  : 	{
; 146  : 		switch ( door_state )

  00065	8b 45 f8	 mov	 eax, DWORD PTR _door_state$[ebp]
  00068	89 45 b4	 mov	 DWORD PTR tv77[ebp], eax
  0006b	83 7d b4 00	 cmp	 DWORD PTR tv77[ebp], 0
  0006f	74 08		 je	 SHORT $LN6@update_air
  00071	83 7d b4 02	 cmp	 DWORD PTR tv77[ebp], 2
  00075	74 0d		 je	 SHORT $LN7@update_air
  00077	eb 14		 jmp	 SHORT $LN2@update_air
$LN6@update_air:

; 147  : 		{
; 148  : 			//////////////////////////////////////////////////
; 149  : 			case 0:
; 150  : 			//////////////////////////////////////////////////
; 151  : 			{
; 152  : 				open_client_server_entity_loading_doors( en );

  00079	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?open_client_server_entity_loading_doors@@YGXPAUENTITY@@@Z ; open_client_server_entity_loading_doors

; 153  : 
; 154  : 				break;

  00082	eb 09		 jmp	 SHORT $LN2@update_air
$LN7@update_air:

; 155  : 			}
; 156  : 			//////////////////////////////////////////////////
; 157  : 			case 2:
; 158  : 			//////////////////////////////////////////////////
; 159  : 			{
; 160  : 				close_client_server_entity_loading_doors( en );

  00084	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?close_client_server_entity_loading_doors@@YGXPAUENTITY@@@Z ; close_client_server_entity_loading_doors
$LN2@update_air:

; 161  : 
; 162  : 				break;
; 163  : 			}
; 164  : 		}
; 165  : 	}
; 166  : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?update_aircraft_loading_doors@@YGXPAUENTITY@@@Z ENDP	; update_aircraft_loading_doors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_anim.c
;	COMDAT ?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv74 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z PROC	; animate_aircraft_loading_doors, COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 103  : 	aircraft
; 104  : 		*raw;
; 105  : 
; 106  : 	//
; 107  : 	// articulate the doors on the 3d objects
; 108  : 	//
; 109  : 
; 110  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_ai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_ai:

; 111  : 
; 112  : 	if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN5@animate_ai
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1a		 jmp	 SHORT $LN6@animate_ai
$LN5@animate_ai:
  00037	6a 70		 push	 112			; 00000070H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@animate_ai:
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	85 c0		 test	 eax, eax
  00058	74 09		 je	 SHORT $LN7@animate_ai
  0005a	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv81[ebp], 147 ; 00000093H
  00061	eb 1a		 jmp	 SHORT $LN8@animate_ai
$LN7@animate_ai:
  00063	6a 70		 push	 112			; 00000070H
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@PNPJBAPB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00076	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@animate_ai:
  0007d	68 93 00 00 00	 push	 147			; 00000093H
  00082	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00085	52		 push	 edx
  00086	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  0008d	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00090	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00097	ff d2		 call	 edx
  00099	85 c0		 test	 eax, eax
  0009b	74 02		 je	 SHORT $LN3@animate_ai

; 113  : 	{
; 114  : 		return;

  0009d	eb 2b		 jmp	 SHORT $LN1@animate_ai
$LN3@animate_ai:

; 115  : 	}
; 116  : 
; 117  : 	raw = (aircraft *) get_local_entity_data( en );

  0009f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a5	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 118  : 
; 119  : 	animate_entity_reversable_keyframed_sub_objects( raw->inst3d, OBJECT_3D_SUB_OBJECT_LOADING_DOOR, raw->loading_door_state );

  000a8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ab	51		 push	 ecx
  000ac	f3 0f 10 80 f4
	00 00 00	 movss	 xmm0, DWORD PTR [eax+244]
  000b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b9	6a 31		 push	 49			; 00000031H
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000be	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  000c4	52		 push	 edx
  000c5	e8 00 00 00 00	 call	 ?animate_entity_reversable_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_reversable_keyframed_sub_objects
$LN1@animate_ai:

; 120  : }

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 04 00	 ret	 4
?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z ENDP	; animate_aircraft_loading_doors
_TEXT	ENDS
END
