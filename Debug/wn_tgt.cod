; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\weapon\wn_tgt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z	; get_best_weapon_for_target
PUBLIC	?get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z ; get_local_entity_max_weapon_range
PUBLIC	?get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z ; get_local_group_max_weapon_range
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA ; `get_best_weapon_for_target'::`1'::__LINE__Var
PUBLIC	??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_08EAFLGIKM@launcher@			; `string'
PUBLIC	??_C@_06JJLAMBGK@target@			; `string'
PUBLIC	??_C@_0CF@PAEHEJFI@criteria?5?$DM?$DN?5BEST_WEAPON_CRITERI@ ; `string'
PUBLIC	??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@ ; `string'
PUBLIC	??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@ ; `string'
PUBLIC	??_C@_0BI@BEDOIAD@target_damage_level?5?$DO?50@	; `string'
PUBLIC	?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA ; `get_local_entity_max_weapon_range'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA ; `get_local_group_max_weapon_range'::`1'::__LINE__Var
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_approx_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_approx_3d_range
EXTRN	?check_entity_line_of_sight@@YGHPAUENTITY@@0W4MOBILE_LOS_CHECK_CRITERIA@@@Z:PROC ; check_entity_line_of_sight
EXTRN	?weapon_is_capable_of_damage@@YGHH@Z:PROC	; weapon_is_capable_of_damage
EXTRN	?weapon_is_suitable_for_damaging_target@@YGHHPAUENTITY@@H@Z:PROC ; weapon_is_suitable_for_damaging_target
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A:BYTE ; weapon_config_database
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA DD 027eH ; `get_local_group_max_weapon_range'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA DD 022cH ; `get_local_entity_max_weapon_range'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BI@BEDOIAD@target_damage_level?5?$DO?50@
CONST	SEGMENT
??_C@_0BI@BEDOIAD@target_damage_level?5?$DO?50@ DB 'target_damage_level >'
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
CONST	SEGMENT
??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@ DB 'package_s'
	DB	'tatus[package].number <= weapon_config_database[config_type]['
	DB	'package].number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
CONST	SEGMENT
??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@ DB 'weapon_config'
	DB	'_type_valid (config_type)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PAEHEJFI@criteria?5?$DM?$DN?5BEST_WEAPON_CRITERI@
CONST	SEGMENT
??_C@_0CF@PAEHEJFI@criteria?5?$DM?$DN?5BEST_WEAPON_CRITERI@ DB 'criteria '
	DB	'<= BEST_WEAPON_CRITERIA_ALL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJLAMBGK@target@
CONST	SEGMENT
??_C@_06JJLAMBGK@target@ DB 'target', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EAFLGIKM@launcher@
CONST	SEGMENT
??_C@_08EAFLGIKM@launcher@ DB 'launcher', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_tgt.'
	DB	'c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA DD 050H ; `get_best_weapon_for_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_tgt.c
;	COMDAT ?get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z
_TEXT	SEGMENT
tv141 = -84						; size = 4
tv83 = -84						; size = 4
tv133 = -80						; size = 4
tv75 = -80						; size = 4
$T1 = -76						; size = 4
_max_range$ = -8					; size = 4
_en$ = -4						; size = 4
_group$ = 8						; size = 4
?get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z PROC ; get_local_group_max_weapon_range, COMDAT

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 639  : 	entity
; 640  : 		*en;
; 641  : 
; 642  : 	float
; 643  : 		max_range;
; 644  : 
; 645  : 	ASSERT (group);

  00009	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_local_:

; 646  : 
; 647  : 	max_range = 0;

  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f3 0f 11 45 f8	 movss	 DWORD PTR _max_range$[ebp], xmm0

; 648  : 
; 649  : 	en = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  0002f	83 7d 08 00	 cmp	 DWORD PTR _group$[ebp], 0
  00033	74 0a		 je	 SHORT $LN6@get_local_
  00035	8b 45 08	 mov	 eax, DWORD PTR _group$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  0003d	eb 21		 jmp	 SHORT $LN7@get_local_
$LN6@get_local_:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00045	83 c2 0b	 add	 edx, 11			; 0000000bH
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN7@get_local_:
  00060	b9 01 00 00 00	 mov	 ecx, 1
  00065	85 c9		 test	 ecx, ecx
  00067	74 09		 je	 SHORT $LN8@get_local_
  00069	c7 45 ac 19 00
	00 00		 mov	 DWORD PTR tv83[ebp], 25	; 00000019H
  00070	eb 21		 jmp	 SHORT $LN9@get_local_
$LN8@get_local_:
  00072	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00078	83 c2 0b	 add	 edx, 11			; 0000000bH
  0007b	52		 push	 edx
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN9@get_local_:
  00093	6a 19		 push	 25			; 00000019H
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  00098	51		 push	 ecx
  00099	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  000a0	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  000a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000aa	ff d1		 call	 ecx
  000ac	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@get_local_:

; 650  : 
; 651  : 	while (en)

  000af	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b3	0f 84 a7 00 00
	00		 je	 $LN3@get_local_

; 652  : 	{
; 653  : 		max_range = max (max_range, get_local_entity_max_weapon_range (en));

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z ; get_local_entity_max_weapon_range
  000c2	d9 5d b4	 fstp	 DWORD PTR $T1[ebp]
  000c5	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  000c8	51		 push	 ecx
  000c9	8d 55 f8	 lea	 edx, DWORD PTR _max_range$[ebp]
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000d2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000d6	f3 0f 11 45 f8	 movss	 DWORD PTR _max_range$[ebp], xmm0

; 654  : 
; 655  : 		en = get_local_entity_child_succ (en, LIST_TYPE_MEMBER);

  000db	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000df	74 0a		 je	 SHORT $LN10@get_local_
  000e1	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e6	89 4d b0	 mov	 DWORD PTR tv133[ebp], ecx
  000e9	eb 21		 jmp	 SHORT $LN11@get_local_
$LN10@get_local_:
  000eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  000f1	83 c2 11	 add	 edx, 17			; 00000011H
  000f4	52		 push	 edx
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00105	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN11@get_local_:
  0010c	b9 01 00 00 00	 mov	 ecx, 1
  00111	85 c9		 test	 ecx, ecx
  00113	74 09		 je	 SHORT $LN12@get_local_
  00115	c7 45 ac 19 00
	00 00		 mov	 DWORD PTR tv141[ebp], 25 ; 00000019H
  0011c	eb 21		 jmp	 SHORT $LN13@get_local_
$LN12@get_local_:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00124	83 c2 11	 add	 edx, 17			; 00000011H
  00127	52		 push	 edx
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00138	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN13@get_local_:
  0013f	6a 19		 push	 25			; 00000019H
  00141	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00144	51		 push	 ecx
  00145	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv133[ebp], 180
  0014c	8b 45 ac	 mov	 eax, DWORD PTR tv141[ebp]
  0014f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00156	ff d1		 call	 ecx
  00158	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 656  : 	}

  0015b	e9 4f ff ff ff	 jmp	 $LN2@get_local_
$LN3@get_local_:

; 657  : 
; 658  : 	return max_range;

  00160	d9 45 f8	 fld	 DWORD PTR _max_range$[ebp]

; 659  : }

  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 04 00	 ret	 4
?get_local_group_max_weapon_range@@YGMPAUENTITY@@@Z ENDP ; get_local_group_max_weapon_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_tgt.c
;	COMDAT ?get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z
_TEXT	SEGMENT
tv136 = -96						; size = 4
tv83 = -96						; size = 4
tv128 = -92						; size = 4
tv75 = -92						; size = 4
_weapon_type$ = -24					; size = 4
_max_range$ = -20					; size = 4
_range$ = -16						; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
?get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z PROC ; get_local_entity_max_weapon_range, COMDAT

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 557  : 	weapon_package_status
; 558  : 		*package_status;
; 559  : 
; 560  : 	weapon_config_types
; 561  : 		config_type;
; 562  : 
; 563  : 	int
; 564  : 		package;
; 565  : 
; 566  : 	float
; 567  : 		range,
; 568  : 		max_range;
; 569  : 
; 570  : 	entity_sub_types
; 571  : 		weapon_type;
; 572  : 
; 573  : 	ASSERT (launcher);

  00009	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 574  : 
; 575  : 	max_range = 0.0;

  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f3 0f 11 45 ec	 movss	 DWORD PTR _max_range$[ebp], xmm0

; 576  : 
; 577  : 	//
; 578  : 	// get list of weapons available on the launcher
; 579  : 	//
; 580  : 
; 581  : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  0002f	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00033	74 0a		 je	 SHORT $LN16@get_local_
  00035	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d a4	 mov	 DWORD PTR tv75[ebp], ecx
  0003d	eb 21		 jmp	 SHORT $LN17@get_local_
$LN16@get_local_:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00045	83 c2 19	 add	 edx, 25			; 00000019H
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN17@get_local_:
  00060	b9 01 00 00 00	 mov	 ecx, 1
  00065	85 c9		 test	 ecx, ecx
  00067	74 09		 je	 SHORT $LN18@get_local_
  00069	c7 45 a0 13 00
	00 00		 mov	 DWORD PTR tv83[ebp], 19	; 00000013H
  00070	eb 21		 jmp	 SHORT $LN19@get_local_
$LN18@get_local_:
  00072	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00078	83 c2 19	 add	 edx, 25			; 00000019H
  0007b	52		 push	 edx
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN19@get_local_:
  00093	6a 13		 push	 19			; 00000013H
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00098	51		 push	 ecx
  00099	6b 55 a4 50	 imul	 edx, DWORD PTR tv75[ebp], 80
  0009d	8b 45 a0	 mov	 eax, DWORD PTR tv83[ebp]
  000a0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000a7	ff d1		 call	 ecx
  000a9	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 582  : 
; 583  : 	if (!package_status)

  000ac	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000b0	75 07		 jne	 SHORT $LN6@get_local_

; 584  : 	{
; 585  : 		return 0.0;

  000b2	d9 ee		 fldz
  000b4	e9 7f 01 00 00	 jmp	 $LN1@get_local_
$LN6@get_local_:

; 586  : 	}
; 587  : 
; 588  : 	config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  000b9	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  000bd	74 0a		 je	 SHORT $LN20@get_local_
  000bf	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  000c2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c4	89 4d a4	 mov	 DWORD PTR tv128[ebp], ecx
  000c7	eb 21		 jmp	 SHORT $LN21@get_local_
$LN20@get_local_:
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  000cf	83 c2 20	 add	 edx, 32			; 00000020H
  000d2	52		 push	 edx
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN21@get_local_:
  000ea	b9 01 00 00 00	 mov	 ecx, 1
  000ef	85 c9		 test	 ecx, ecx
  000f1	74 09		 je	 SHORT $LN22@get_local_
  000f3	c7 45 a0 05 01
	00 00		 mov	 DWORD PTR tv136[ebp], 261 ; 00000105H
  000fa	eb 21		 jmp	 SHORT $LN23@get_local_
$LN22@get_local_:
  000fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00102	83 c2 20	 add	 edx, 32			; 00000020H
  00105	52		 push	 edx
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00116	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN23@get_local_:
  0011d	68 05 01 00 00	 push	 261			; 00000105H
  00122	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00125	51		 push	 ecx
  00126	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 1116
  0012d	8b 45 a0	 mov	 eax, DWORD PTR tv136[ebp]
  00130	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00137	ff d1		 call	 ecx
  00139	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 589  : 
; 590  : 	ASSERT (weapon_config_type_valid (config_type));

  0013c	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  00140	7c 09		 jl	 SHORT $LN8@get_local_
  00142	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  00149	7c 18		 jl	 SHORT $LN7@get_local_
$LN8@get_local_:
  0014b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  00150	83 c0 22	 add	 eax, 34			; 00000022H
  00153	50		 push	 eax
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  0015e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_local_:

; 591  : 
; 592  : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00163	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  0016a	eb 09		 jmp	 SHORT $LN4@get_local_
$LN2@get_local_:
  0016c	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  0016f	83 c0 01	 add	 eax, 1
  00172	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_local_:
  00175	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00179	0f 8d b6 00 00
	00		 jge	 $LN3@get_local_

; 593  : 	{
; 594  : 		weapon_type = weapon_config_database[config_type][package].sub_type;

  0017f	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00186	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0018a	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00191	89 55 e8	 mov	 DWORD PTR _weapon_type$[ebp], edx

; 595  : 
; 596  : 		if (weapon_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00194	83 7d e8 00	 cmp	 DWORD PTR _weapon_type$[ebp], 0
  00198	0f 84 92 00 00
	00		 je	 $LN14@get_local_

; 597  : 		{
; 598  : 			ASSERT (package_status[package].number <= weapon_config_database[config_type][package].number);

  0019e	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001a1	c1 e0 04	 shl	 eax, 4
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  001a7	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  001ab	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001b2	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001b6	3b 94 08 04 00
	00 00		 cmp	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  001bd	7e 18		 jle	 SHORT $LN10@get_local_
  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z@4JA
  001c4	83 c0 2a	 add	 eax, 42			; 0000002aH
  001c7	50		 push	 eax
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
  001d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@get_local_:

; 599  : 
; 600  : 			range = weapon_database [weapon_type].max_range;

  001d7	69 45 e8 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  001de	f3 0f 10 80 90
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+144]
  001e6	f3 0f 11 45 f0	 movss	 DWORD PTR _range$[ebp], xmm0

; 601  : 
; 602  : 			if (range > max_range)

  001eb	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _range$[ebp]
  001f0	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _max_range$[ebp]
  001f4	76 3a		 jbe	 SHORT $LN14@get_local_

; 603  : 			{
; 604  : 				//
; 605  : 				// check warhead is capable of damage
; 606  : 				//
; 607  : 
; 608  : 				if (weapon_is_capable_of_damage (weapon_type))

  001f6	8b 45 e8	 mov	 eax, DWORD PTR _weapon_type$[ebp]
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?weapon_is_capable_of_damage@@YGHH@Z ; weapon_is_capable_of_damage
  001ff	85 c0		 test	 eax, eax
  00201	74 2d		 je	 SHORT $LN14@get_local_

; 609  : 				{
; 610  : 					//
; 611  : 					// check package is not damaged
; 612  : 					//
; 613  : 
; 614  : 					if (!package_status[package].damaged)

  00203	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00206	c1 e0 04	 shl	 eax, 4
  00209	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0020c	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  00211	85 d2		 test	 edx, edx
  00213	75 1b		 jne	 SHORT $LN14@get_local_

; 615  : 					{
; 616  : 						//
; 617  : 						// check package has rounds left
; 618  : 						//
; 619  : 
; 620  : 						if (package_status[package].number > 0)

  00215	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00218	c1 e0 04	 shl	 eax, 4
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0021e	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00222	85 d2		 test	 edx, edx
  00224	7e 0a		 jle	 SHORT $LN14@get_local_

; 621  : 						{
; 622  : 							max_range = range;

  00226	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _range$[ebp]
  0022b	f3 0f 11 45 ec	 movss	 DWORD PTR _max_range$[ebp], xmm0
$LN14@get_local_:

; 623  : 						}
; 624  : 					}
; 625  : 				}
; 626  : 			}
; 627  : 		}
; 628  : 	}

  00230	e9 37 ff ff ff	 jmp	 $LN2@get_local_
$LN3@get_local_:

; 629  : 
; 630  : 	return max_range;

  00235	d9 45 ec	 fld	 DWORD PTR _max_range$[ebp]
$LN1@get_local_:

; 631  : }

  00238	5f		 pop	 edi
  00239	5e		 pop	 esi
  0023a	5b		 pop	 ebx
  0023b	8b e5		 mov	 esp, ebp
  0023d	5d		 pop	 ebp
  0023e	c2 04 00	 ret	 4
?get_local_entity_max_weapon_range@@YGMPAUENTITY@@@Z ENDP ; get_local_entity_max_weapon_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\wn_tgt.c
;	COMDAT ?get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z
_TEXT	SEGMENT
tv729 = -276						; size = 4
tv716 = -276						; size = 4
tv582 = -272						; size = 4
tv563 = -272						; size = 4
tv483 = -272						; size = 4
tv438 = -272						; size = 4
tv418 = -272						; size = 4
tv377 = -272						; size = 4
tv352 = -272						; size = 4
tv327 = -272						; size = 4
tv308 = -272						; size = 4
tv290 = -272						; size = 4
tv269 = -272						; size = 4
tv250 = -272						; size = 4
tv211 = -272						; size = 4
tv146 = -272						; size = 4
tv93 = -272						; size = 4
tv575 = -268						; size = 4
tv556 = -268						; size = 4
tv475 = -268						; size = 4
tv430 = -268						; size = 4
tv410 = -268						; size = 4
tv369 = -268						; size = 4
tv345 = -268						; size = 4
tv320 = -268						; size = 4
tv301 = -268						; size = 4
tv282 = -268						; size = 4
tv262 = -268						; size = 4
tv243 = -268						; size = 4
tv204 = -268						; size = 4
tv138 = -268						; size = 4
tv85 = -268						; size = 4
_highest_suitability$1 = -200				; size = 4
_total_damage_possible$2 = -196				; size = 4
_damage_capability$3 = -192				; size = 4
_target_damage_level$4 = -188				; size = 4
_target_pos$5 = -184					; size = 4
_launcher_pos$6 = -180					; size = 4
_max_weapon_range$7 = -176				; size = 4
_min_weapon_range$8 = -172				; size = 4
_target_range$9 = -168					; size = 4
_target_altitude$10 = -164				; size = 4
_suitable_weapon_classes$11 = -160			; size = 4
_weapon_class$12 = -156					; size = 4
_weapon_type$ = -152					; size = 4
_suitable_weapon_count$ = -148				; size = 4
_suitability$ = -144					; size = 128
_los_to_target$ = -16					; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
_target$ = 12						; size = 4
_criteria$ = 16						; size = 4
?get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z PROC	; get_best_weapon_for_target, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 81   : 	weapon_package_status
; 82   : 		*package_status;
; 83   : 
; 84   : 	weapon_config_types
; 85   : 		config_type;
; 86   : 
; 87   : 	int
; 88   : 		package,
; 89   : 		los_to_target,
; 90   : 		suitability[NUM_WEAPON_PACKAGES],
; 91   : 		suitable_weapon_count;
; 92   : 
; 93   : 	entity_sub_types
; 94   : 		weapon_type;
; 95   : 
; 96   : 	ASSERT (launcher);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00010	75 18		 jne	 SHORT $LN26@get_best_w
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00017	83 c0 10	 add	 eax, 16			; 00000010H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@get_best_w:

; 97   : 
; 98   : 	ASSERT (target);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN27@get_best_w
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00035	83 c0 12	 add	 eax, 18			; 00000012H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN27@get_best_w:

; 99   : 
; 100  : 	ASSERT (criteria <= BEST_WEAPON_CRITERIA_ALL);

  00048	83 7d 10 07	 cmp	 DWORD PTR _criteria$[ebp], 7
  0004c	76 18		 jbe	 SHORT $LN28@get_best_w
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00053	83 c0 14	 add	 eax, 20			; 00000014H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@PAEHEJFI@criteria?5?$DM?$DN?5BEST_WEAPON_CRITERI@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN28@get_best_w:

; 101  : 
; 102  : 	//
; 103  : 	// get list of weapons available on the launcher
; 104  : 	//
; 105  : 
; 106  : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00066	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0006a	74 0d		 je	 SHORT $LN71@get_best_w
  0006c	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv85[ebp], ecx
  00077	eb 24		 jmp	 SHORT $LN72@get_best_w
$LN71@get_best_w:
  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  0007f	83 c2 1a	 add	 edx, 26			; 0000001aH
  00082	52		 push	 edx
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00093	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv85[ebp], 0
$LN72@get_best_w:
  0009d	b9 01 00 00 00	 mov	 ecx, 1
  000a2	85 c9		 test	 ecx, ecx
  000a4	74 0c		 je	 SHORT $LN73@get_best_w
  000a6	c7 85 f0 fe ff
	ff 13 00 00 00	 mov	 DWORD PTR tv93[ebp], 19	; 00000013H
  000b0	eb 24		 jmp	 SHORT $LN74@get_best_w
$LN73@get_best_w:
  000b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  000b8	83 c2 1a	 add	 edx, 26			; 0000001aH
  000bb	52		 push	 edx
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cc	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN74@get_best_w:
  000d6	6a 13		 push	 19			; 00000013H
  000d8	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  000db	51		 push	 ecx
  000dc	6b 95 f4 fe ff
	ff 50		 imul	 edx, DWORD PTR tv85[ebp], 80
  000e3	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv93[ebp]
  000e9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000f0	ff d1		 call	 ecx
  000f2	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 107  : 
; 108  : 	if (!package_status)

  000f5	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000f9	75 07		 jne	 SHORT $LN29@get_best_w

; 109  : 	{
; 110  : 		return ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  000fb	33 c0		 xor	 eax, eax
  000fd	e9 16 0e 00 00	 jmp	 $LN1@get_best_w
$LN29@get_best_w:

; 111  : 	}
; 112  : 
; 113  : 	config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  00102	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00106	74 0d		 je	 SHORT $LN75@get_best_w
  00108	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0010b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010d	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
  00113	eb 24		 jmp	 SHORT $LN76@get_best_w
$LN75@get_best_w:
  00115	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  0011b	83 c2 21	 add	 edx, 33			; 00000021H
  0011e	52		 push	 edx
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012f	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], 0
$LN76@get_best_w:
  00139	b9 01 00 00 00	 mov	 ecx, 1
  0013e	85 c9		 test	 ecx, ecx
  00140	74 0c		 je	 SHORT $LN77@get_best_w
  00142	c7 85 f0 fe ff
	ff 05 01 00 00	 mov	 DWORD PTR tv146[ebp], 261 ; 00000105H
  0014c	eb 24		 jmp	 SHORT $LN78@get_best_w
$LN77@get_best_w:
  0014e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00154	83 c2 21	 add	 edx, 33			; 00000021H
  00157	52		 push	 edx
  00158	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00168	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
$LN78@get_best_w:
  00172	68 05 01 00 00	 push	 261			; 00000105H
  00177	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0017a	51		 push	 ecx
  0017b	69 95 f4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv138[ebp], 1116
  00185	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv146[ebp]
  0018b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00192	ff d1		 call	 ecx
  00194	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 114  : 
; 115  : 	ASSERT (weapon_config_type_valid (config_type));

  00197	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  0019b	7c 09		 jl	 SHORT $LN31@get_best_w
  0019d	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  001a4	7c 18		 jl	 SHORT $LN30@get_best_w
$LN31@get_best_w:
  001a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  001ab	83 c0 23	 add	 eax, 35			; 00000023H
  001ae	50		 push	 eax
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  001b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN30@get_best_w:

; 116  : 
; 117  : 	suitable_weapon_count = 0;

  001be	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _suitable_weapon_count$[ebp], 0

; 118  : 
; 119  : 	#if DEBUG_MODULE
; 120  : 
; 121  : 	if (launcher == get_external_view_entity ())
; 122  : 	{
; 123  : 		debug_log ("WN_TGT : Get Suitable Weapon ( Launcher %s , Target %s )", get_local_entity_string (launcher, STRING_TYPE_FULL_NAME), get_local_entity_string (target, STRING_TYPE_FULL_NAME));
; 124  : 
; 125  : 		debug_log ("WN_TGT : Available Weapon List :");
; 126  : 	}
; 127  : 
; 128  : 	#endif
; 129  : 
; 130  : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  001c8	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  001cf	eb 09		 jmp	 SHORT $LN4@get_best_w
$LN2@get_best_w:
  001d1	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001d4	83 c0 01	 add	 eax, 1
  001d7	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_best_w:
  001da	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  001de	0f 8d c1 00 00
	00		 jge	 $LN3@get_best_w

; 131  : 	{
; 132  : 		suitability[package] = FALSE;

  001e4	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001e7	c7 84 85 70 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _suitability$[ebp+eax*4], 0

; 133  : 
; 134  : 		weapon_type = weapon_config_database[config_type][package].sub_type;

  001f2	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001f9	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001fd	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00204	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 135  : 
; 136  : 		//
; 137  : 		// check package is valid
; 138  : 		//
; 139  : 
; 140  : 		if (weapon_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0020a	83 bd 68 ff ff
	ff 00		 cmp	 DWORD PTR _weapon_type$[ebp], 0
  00211	0f 84 89 00 00
	00		 je	 $LN36@get_best_w

; 141  : 		{
; 142  : 			ASSERT (package_status[package].number <= weapon_config_database[config_type][package].number);

  00217	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  0021a	c1 e0 04	 shl	 eax, 4
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00220	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00224	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0022b	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0022f	3b 94 08 04 00
	00 00		 cmp	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  00236	7e 18		 jle	 SHORT $LN33@get_best_w
  00238	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  0023d	83 c0 3e	 add	 eax, 62			; 0000003eH
  00240	50		 push	 eax
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
  0024b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN33@get_best_w:

; 143  : 
; 144  : 			//
; 145  : 			// check warhead is capable of damage
; 146  : 			//
; 147  : 
; 148  : 			if (weapon_is_capable_of_damage (weapon_type))

  00250	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_type$[ebp]
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?weapon_is_capable_of_damage@@YGHH@Z ; weapon_is_capable_of_damage
  0025c	85 c0		 test	 eax, eax
  0025e	74 40		 je	 SHORT $LN36@get_best_w

; 149  : 			{
; 150  : 				//
; 151  : 				// check package is not damaged
; 152  : 				//
; 153  : 
; 154  : 				if (!package_status[package].damaged)

  00260	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00263	c1 e0 04	 shl	 eax, 4
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00269	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  0026e	85 d2		 test	 edx, edx
  00270	75 2e		 jne	 SHORT $LN36@get_best_w

; 155  : 				{
; 156  : 					//
; 157  : 					// check package has rounds left
; 158  : 					//
; 159  : 
; 160  : 					if (package_status[package].number > 0)

  00272	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00275	c1 e0 04	 shl	 eax, 4
  00278	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0027b	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  0027f	85 d2		 test	 edx, edx
  00281	7e 1d		 jle	 SHORT $LN36@get_best_w

; 161  : 					{
; 162  : 						suitability[package] = TRUE;

  00283	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00286	c7 84 85 70 ff
	ff ff 01 00 00
	00		 mov	 DWORD PTR _suitability$[ebp+eax*4], 1

; 163  : 
; 164  : 						suitable_weapon_count ++;

  00291	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _suitable_weapon_count$[ebp]
  00297	83 c0 01	 add	 eax, 1
  0029a	89 85 6c ff ff
	ff		 mov	 DWORD PTR _suitable_weapon_count$[ebp], eax
$LN36@get_best_w:

; 165  : 
; 166  : 						#if DEBUG_MODULE
; 167  : 
; 168  : 						if (launcher == get_external_view_entity ())
; 169  : 						{
; 170  : 							debug_log ("WN_TGT : (%d) %s :", package, weapon_database[weapon_type].full_name);
; 171  : 						}
; 172  : 
; 173  : 						#endif
; 174  : 					}
; 175  : 				}
; 176  : 			}
; 177  : 		}
; 178  : 	}

  002a0	e9 2c ff ff ff	 jmp	 $LN2@get_best_w
$LN3@get_best_w:

; 179  : 
; 180  : 	if (suitable_weapon_count == 0)

  002a5	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR _suitable_weapon_count$[ebp], 0
  002ac	75 07		 jne	 SHORT $LN37@get_best_w

; 181  : 	{
; 182  : 		return ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  002ae	33 c0		 xor	 eax, eax
  002b0	e9 63 0c 00 00	 jmp	 $LN1@get_best_w
$LN37@get_best_w:

; 183  : 	}
; 184  : 
; 185  : 	//
; 186  : 	// filter out unsuitables with respect to weapon class
; 187  : 	//
; 188  : 
; 189  : 	{
; 190  : 		int
; 191  : 			weapon_class,
; 192  : 			suitable_weapon_classes;
; 193  : 
; 194  : 		#if DEBUG_MODULE
; 195  : 
; 196  : 		if (launcher == get_external_view_entity ())
; 197  : 		{
; 198  : 			debug_log ("WN_TGT : Suitable Weapon List After Class Filter:");
; 199  : 		}
; 200  : 
; 201  : 		#endif
; 202  : 
; 203  : 		if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  002b5	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  002b9	74 0d		 je	 SHORT $LN79@get_best_w
  002bb	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv204[ebp], ecx
  002c6	eb 20		 jmp	 SHORT $LN80@get_best_w
$LN79@get_best_w:
  002c8	68 cb 00 00 00	 push	 203			; 000000cbH
  002cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002d8	52		 push	 edx
  002d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002de	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv204[ebp], 0
$LN80@get_best_w:
  002e8	b8 01 00 00 00	 mov	 eax, 1
  002ed	85 c0		 test	 eax, eax
  002ef	74 0c		 je	 SHORT $LN81@get_best_w
  002f1	c7 85 f0 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR tv211[ebp], 4
  002fb	eb 20		 jmp	 SHORT $LN82@get_best_w
$LN81@get_best_w:
  002fd	68 cb 00 00 00	 push	 203			; 000000cbH
  00302	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00307	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0030d	51		 push	 ecx
  0030e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00313	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv211[ebp], 0
$LN82@get_best_w:
  0031d	6a 04		 push	 4
  0031f	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  00322	52		 push	 edx
  00323	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv204[ebp], 1116
  0032d	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv211[ebp]
  00333	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0033a	ff d2		 call	 edx
  0033c	85 c0		 test	 eax, eax
  0033e	74 0c		 je	 SHORT $LN38@get_best_w

; 204  : 		{
; 205  : 			//
; 206  : 			// target is an aircraft in the air
; 207  : 			//
; 208  : 
; 209  : 			suitable_weapon_classes = WEAPON_CLASS_AIR_TO_AIR + WEAPON_CLASS_SURFACE_TO_AIR;

  00340	c7 85 60 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR _suitable_weapon_classes$11[ebp], 5

; 210  : 		}
; 211  : 		else

  0034a	eb 0a		 jmp	 SHORT $LN39@get_best_w
$LN38@get_best_w:

; 212  : 		{
; 213  : 			//
; 214  : 			// target is an aircraft or a vehicle on the ground
; 215  : 			//
; 216  : 
; 217  : 			suitable_weapon_classes = WEAPON_CLASS_AIR_TO_SURFACE + WEAPON_CLASS_SURFACE_TO_SURFACE;

  0034c	c7 85 60 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR _suitable_weapon_classes$11[ebp], 10 ; 0000000aH
$LN39@get_best_w:

; 218  : 		}
; 219  : 
; 220  : 		for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00356	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  0035d	eb 09		 jmp	 SHORT $LN7@get_best_w
$LN5@get_best_w:
  0035f	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00362	83 c0 01	 add	 eax, 1
  00365	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN7@get_best_w:
  00368	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  0036c	0f 8d 96 03 00
	00		 jge	 $LN6@get_best_w

; 221  : 		{
; 222  : 			if (suitability[package])

  00372	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00375	83 bc 85 70 ff
	ff ff 00	 cmp	 DWORD PTR _suitability$[ebp+eax*4], 0
  0037d	0f 84 80 03 00
	00		 je	 $LN45@get_best_w

; 223  : 			{
; 224  : 				weapon_type = weapon_config_database[config_type][package].sub_type;

  00383	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0038a	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0038e	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00395	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 225  : 
; 226  : 				weapon_class = weapon_database[weapon_type].weapon_class;

  0039b	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  003a5	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  003ab	89 8d 64 ff ff
	ff		 mov	 DWORD PTR _weapon_class$12[ebp], ecx

; 227  : 
; 228  : 				//
; 229  : 				// bitwise AND to test weapon class compatibility
; 230  : 				//
; 231  : 
; 232  : 				if ((suitable_weapon_classes & weapon_class) == 0)

  003b1	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _suitable_weapon_classes$11[ebp]
  003b7	23 85 64 ff ff
	ff		 and	 eax, DWORD PTR _weapon_class$12[ebp]
  003bd	75 22		 jne	 SHORT $LN41@get_best_w

; 233  : 				{
; 234  : 					suitability[package] = FALSE;

  003bf	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  003c2	c7 84 85 70 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _suitability$[ebp+eax*4], 0

; 235  : 
; 236  : 					suitable_weapon_count --;

  003cd	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _suitable_weapon_count$[ebp]
  003d3	83 e8 01	 sub	 eax, 1
  003d6	89 85 6c ff ff
	ff		 mov	 DWORD PTR _suitable_weapon_count$[ebp], eax

; 237  : 				}
; 238  : 				else

  003dc	e9 22 03 00 00	 jmp	 $LN45@get_best_w
$LN41@get_best_w:

; 239  : 				{
; 240  : 					if (criteria & BEST_WEAPON_ALTITUDE_CHECK)

  003e1	8b 45 10	 mov	 eax, DWORD PTR _criteria$[ebp]
  003e4	83 e0 01	 and	 eax, 1
  003e7	0f 84 16 03 00
	00		 je	 $LN45@get_best_w

; 241  : 					{
; 242  : 						//
; 243  : 						// if target is airborne, and launcher is a vehicle - check launchers floor and ceiling scanning ability
; 244  : 						//
; 245  : 
; 246  : 						if ((get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT)) && (get_local_entity_int_value (launcher, INT_TYPE_IDENTIFY_VEHICLE)))

  003ed	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  003f1	74 0d		 je	 SHORT $LN83@get_best_w
  003f3	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  003f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f8	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv243[ebp], ecx
  003fe	eb 20		 jmp	 SHORT $LN84@get_best_w
$LN83@get_best_w:
  00400	68 f6 00 00 00	 push	 246			; 000000f6H
  00405	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00410	52		 push	 edx
  00411	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00416	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv243[ebp], 0
$LN84@get_best_w:
  00420	b8 01 00 00 00	 mov	 eax, 1
  00425	85 c0		 test	 eax, eax
  00427	74 0c		 je	 SHORT $LN85@get_best_w
  00429	c7 85 f0 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR tv250[ebp], 4
  00433	eb 20		 jmp	 SHORT $LN86@get_best_w
$LN85@get_best_w:
  00435	68 f6 00 00 00	 push	 246			; 000000f6H
  0043a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00445	51		 push	 ecx
  00446	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044b	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv250[ebp], 0
$LN86@get_best_w:
  00455	6a 04		 push	 4
  00457	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  0045a	52		 push	 edx
  0045b	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv243[ebp], 1116
  00465	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv250[ebp]
  0046b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00472	ff d2		 call	 edx
  00474	85 c0		 test	 eax, eax
  00476	0f 84 87 02 00
	00		 je	 $LN45@get_best_w
  0047c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00480	74 0d		 je	 SHORT $LN87@get_best_w
  00482	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00485	8b 08		 mov	 ecx, DWORD PTR [eax]
  00487	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv262[ebp], ecx
  0048d	eb 20		 jmp	 SHORT $LN88@get_best_w
$LN87@get_best_w:
  0048f	68 f6 00 00 00	 push	 246			; 000000f6H
  00494	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00499	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0049f	52		 push	 edx
  004a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a5	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv262[ebp], 0
$LN88@get_best_w:
  004af	b8 01 00 00 00	 mov	 eax, 1
  004b4	85 c0		 test	 eax, eax
  004b6	74 0c		 je	 SHORT $LN89@get_best_w
  004b8	c7 85 f0 fe ff
	ff 60 00 00 00	 mov	 DWORD PTR tv269[ebp], 96 ; 00000060H
  004c2	eb 20		 jmp	 SHORT $LN90@get_best_w
$LN89@get_best_w:
  004c4	68 f6 00 00 00	 push	 246			; 000000f6H
  004c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004d4	51		 push	 ecx
  004d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004da	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv269[ebp], 0
$LN90@get_best_w:
  004e4	6a 60		 push	 96			; 00000060H
  004e6	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  004e9	52		 push	 edx
  004ea	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv262[ebp], 1116
  004f4	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv269[ebp]
  004fa	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00501	ff d2		 call	 edx
  00503	85 c0		 test	 eax, eax
  00505	0f 84 f8 01 00
	00		 je	 $LN45@get_best_w

; 247  : 						{
; 248  : 							float
; 249  : 								target_altitude;
; 250  : 
; 251  : 							target_altitude = get_local_entity_float_value (target, FLOAT_TYPE_RADAR_ALTITUDE);

  0050b	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  0050f	74 0d		 je	 SHORT $LN91@get_best_w
  00511	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00514	8b 08		 mov	 ecx, DWORD PTR [eax]
  00516	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv282[ebp], ecx
  0051c	eb 27		 jmp	 SHORT $LN92@get_best_w
$LN91@get_best_w:
  0051e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00524	81 c2 ab 00 00
	00		 add	 edx, 171		; 000000abH
  0052a	52		 push	 edx
  0052b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00530	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00535	50		 push	 eax
  00536	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0053b	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv282[ebp], 0
$LN92@get_best_w:
  00545	b9 01 00 00 00	 mov	 ecx, 1
  0054a	85 c9		 test	 ecx, ecx
  0054c	74 0c		 je	 SHORT $LN93@get_best_w
  0054e	c7 85 f0 fe ff
	ff 68 00 00 00	 mov	 DWORD PTR tv290[ebp], 104 ; 00000068H
  00558	eb 27		 jmp	 SHORT $LN94@get_best_w
$LN93@get_best_w:
  0055a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00560	81 c2 ab 00 00
	00		 add	 edx, 171		; 000000abH
  00566	52		 push	 edx
  00567	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0056c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00571	50		 push	 eax
  00572	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00577	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv290[ebp], 0
$LN94@get_best_w:
  00581	6a 68		 push	 104			; 00000068H
  00583	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  00586	51		 push	 ecx
  00587	69 95 f4 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv282[ebp], 700
  00591	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv290[ebp]
  00597	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0059e	ff d1		 call	 ecx
  005a0	d9 9d 5c ff ff
	ff		 fstp	 DWORD PTR _target_altitude$10[ebp]

; 252  : 
; 253  : 							if ((target_altitude > get_local_entity_float_value (launcher, FLOAT_TYPE_AIR_SCAN_CEILING)) ||

  005a6	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  005aa	74 0d		 je	 SHORT $LN95@get_best_w
  005ac	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  005af	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b1	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv301[ebp], ecx
  005b7	eb 20		 jmp	 SHORT $LN96@get_best_w
$LN95@get_best_w:
  005b9	68 fd 00 00 00	 push	 253			; 000000fdH
  005be	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c9	52		 push	 edx
  005ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005cf	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv301[ebp], 0
$LN96@get_best_w:
  005d9	b8 01 00 00 00	 mov	 eax, 1
  005de	85 c0		 test	 eax, eax
  005e0	74 0c		 je	 SHORT $LN97@get_best_w
  005e2	c7 85 f0 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR tv308[ebp], 3
  005ec	eb 20		 jmp	 SHORT $LN98@get_best_w
$LN97@get_best_w:
  005ee	68 fd 00 00 00	 push	 253			; 000000fdH
  005f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  005fe	51		 push	 ecx
  005ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00604	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv308[ebp], 0
$LN98@get_best_w:
  0060e	6a 03		 push	 3
  00610	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00613	52		 push	 edx
  00614	69 85 f4 fe ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv301[ebp], 700
  0061e	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv308[ebp]
  00624	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  0062b	ff d2		 call	 edx
  0062d	d9 9d ec fe ff
	ff		 fstp	 DWORD PTR tv716[ebp]
  00633	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR _target_altitude$10[ebp]
  0063b	0f 2f 85 ec fe
	ff ff		 comiss	 xmm0, DWORD PTR tv716[ebp]
  00642	0f 87 9e 00 00
	00		 ja	 $LN46@get_best_w
  00648	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0064c	74 0d		 je	 SHORT $LN99@get_best_w
  0064e	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00651	8b 08		 mov	 ecx, DWORD PTR [eax]
  00653	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv320[ebp], ecx
  00659	eb 20		 jmp	 SHORT $LN100@get_best_w
$LN99@get_best_w:
  0065b	68 fe 00 00 00	 push	 254			; 000000feH
  00660	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00665	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0066b	52		 push	 edx
  0066c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00671	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv320[ebp], 0
$LN100@get_best_w:
  0067b	b8 01 00 00 00	 mov	 eax, 1
  00680	85 c0		 test	 eax, eax
  00682	74 0c		 je	 SHORT $LN101@get_best_w
  00684	c7 85 f0 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR tv327[ebp], 4
  0068e	eb 20		 jmp	 SHORT $LN102@get_best_w
$LN101@get_best_w:
  00690	68 fe 00 00 00	 push	 254			; 000000feH
  00695	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0069a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  006a0	51		 push	 ecx
  006a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006a6	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv327[ebp], 0
$LN102@get_best_w:
  006b0	6a 04		 push	 4
  006b2	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  006b5	52		 push	 edx
  006b6	69 85 f4 fe ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv320[ebp], 700
  006c0	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv327[ebp]
  006c6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  006cd	ff d2		 call	 edx
  006cf	d9 9d ec fe ff
	ff		 fstp	 DWORD PTR tv729[ebp]
  006d5	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR tv729[ebp]
  006dd	0f 2f 85 5c ff
	ff ff		 comiss	 xmm0, DWORD PTR _target_altitude$10[ebp]
  006e4	76 1d		 jbe	 SHORT $LN45@get_best_w
$LN46@get_best_w:

; 254  : 									(target_altitude < get_local_entity_float_value (launcher, FLOAT_TYPE_AIR_SCAN_FLOOR)))
; 255  : 							{
; 256  : 								suitability[package] = FALSE;

  006e6	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  006e9	c7 84 85 70 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _suitability$[ebp+eax*4], 0

; 257  : 
; 258  : 								suitable_weapon_count --;

  006f4	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _suitable_weapon_count$[ebp]
  006fa	83 e8 01	 sub	 eax, 1
  006fd	89 85 6c ff ff
	ff		 mov	 DWORD PTR _suitable_weapon_count$[ebp], eax
$LN45@get_best_w:

; 259  : 							}
; 260  : 						}
; 261  : 					}
; 262  : 
; 263  : #if 0  // disable until we have a way of aborting attacking other targets until air defences are out of the way
; 264  : 					// TODO: not do for some criteria?
; 265  : 					if (get_local_entity_int_value(launcher, INT_TYPE_AIRBORNE_AIRCRAFT)
; 266  : 							 && get_local_entity_int_value(target, INT_TYPE_VIEW_CATEGORY) == VIEW_CATEGORY_AIR_DEFENCE_UNITS)
; 267  : 					{
; 268  : 						// don't try to take out anti-aircaft systems with unguided weapons, it's suicide
; 269  : 						if (weapon_database[weapon_type].guidance_type == WEAPON_GUIDANCE_TYPE_NONE)
; 270  : 						{
; 271  : 							suitability[package] = FALSE;
; 272  : 							suitable_weapon_count --;
; 273  : 						}
; 274  : 					}
; 275  : #endif
; 276  : 				}
; 277  : 				#if DEBUG_MODULE
; 278  : 
; 279  : 				if (launcher == get_external_view_entity ())
; 280  : 				{
; 281  : 					if (suitability [package])
; 282  : 					{
; 283  : 						debug_log ("WN_TGT : (%d) %s :", package, weapon_database[weapon_type].full_name);
; 284  : 					}
; 285  : 				}
; 286  : 
; 287  : 				#endif
; 288  : 			}
; 289  : 		}

  00703	e9 57 fc ff ff	 jmp	 $LN5@get_best_w
$LN6@get_best_w:

; 290  : 	}
; 291  : 
; 292  : 	if (suitable_weapon_count == 0)

  00708	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR _suitable_weapon_count$[ebp], 0
  0070f	75 07		 jne	 SHORT $LN47@get_best_w

; 293  : 	{
; 294  : 		return ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  00711	33 c0		 xor	 eax, eax
  00713	e9 00 08 00 00	 jmp	 $LN1@get_best_w
$LN47@get_best_w:

; 295  : 	}
; 296  : 
; 297  : 	//
; 298  : 	// special case for vehicles - only fire projectiles if no line of sight
; 299  : 	//
; 300  : 
; 301  : 	if (criteria & BEST_WEAPON_LOS_CHECK)

  00718	8b 45 10	 mov	 eax, DWORD PTR _criteria$[ebp]
  0071b	83 e0 02	 and	 eax, 2
  0071e	0f 84 c2 01 00
	00		 je	 $LN53@get_best_w

; 302  : 	{
; 303  : 		if (get_local_entity_int_value (launcher, INT_TYPE_IDENTIFY_VEHICLE))

  00724	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00728	74 0d		 je	 SHORT $LN103@get_best_w
  0072a	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0072d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0072f	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv345[ebp], ecx
  00735	eb 20		 jmp	 SHORT $LN104@get_best_w
$LN103@get_best_w:
  00737	68 2f 01 00 00	 push	 303			; 0000012fH
  0073c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00741	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00747	52		 push	 edx
  00748	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0074d	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv345[ebp], 0
$LN104@get_best_w:
  00757	b8 01 00 00 00	 mov	 eax, 1
  0075c	85 c0		 test	 eax, eax
  0075e	74 0c		 je	 SHORT $LN105@get_best_w
  00760	c7 85 f0 fe ff
	ff 60 00 00 00	 mov	 DWORD PTR tv352[ebp], 96 ; 00000060H
  0076a	eb 20		 jmp	 SHORT $LN106@get_best_w
$LN105@get_best_w:
  0076c	68 2f 01 00 00	 push	 303			; 0000012fH
  00771	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00776	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0077c	51		 push	 ecx
  0077d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00782	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv352[ebp], 0
$LN106@get_best_w:
  0078c	6a 60		 push	 96			; 00000060H
  0078e	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00791	52		 push	 edx
  00792	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv345[ebp], 1116
  0079c	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv352[ebp]
  007a2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  007a9	ff d2		 call	 edx
  007ab	85 c0		 test	 eax, eax
  007ad	0f 84 23 01 00
	00		 je	 $LN9@get_best_w

; 304  : 		{
; 305  : 			los_to_target = check_entity_line_of_sight (launcher, target, MOBILE_LOS_CHECK_COURSE_TERRAIN);

  007b3	6a 01		 push	 1
  007b5	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  007b8	50		 push	 eax
  007b9	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  007bc	51		 push	 ecx
  007bd	e8 00 00 00 00	 call	 ?check_entity_line_of_sight@@YGHPAUENTITY@@0W4MOBILE_LOS_CHECK_CRITERIA@@@Z ; check_entity_line_of_sight
  007c2	89 45 f0	 mov	 DWORD PTR _los_to_target$[ebp], eax

; 306  : 
; 307  : 			set_local_entity_int_value (launcher, INT_TYPE_LOS_TO_TARGET, los_to_target);

  007c5	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  007c9	74 0d		 je	 SHORT $LN107@get_best_w
  007cb	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  007ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  007d0	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv369[ebp], ecx
  007d6	eb 27		 jmp	 SHORT $LN108@get_best_w
$LN107@get_best_w:
  007d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  007de	81 c2 e3 00 00
	00		 add	 edx, 227		; 000000e3H
  007e4	52		 push	 edx
  007e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  007ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ef	50		 push	 eax
  007f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007f5	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv369[ebp], 0
$LN108@get_best_w:
  007ff	b9 01 00 00 00	 mov	 ecx, 1
  00804	85 c9		 test	 ecx, ecx
  00806	74 0c		 je	 SHORT $LN109@get_best_w
  00808	c7 85 f0 fe ff
	ff 80 00 00 00	 mov	 DWORD PTR tv377[ebp], 128 ; 00000080H
  00812	eb 27		 jmp	 SHORT $LN110@get_best_w
$LN109@get_best_w:
  00814	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  0081a	81 c2 e3 00 00
	00		 add	 edx, 227		; 000000e3H
  00820	52		 push	 edx
  00821	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00826	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0082b	50		 push	 eax
  0082c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00831	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv377[ebp], 0
$LN110@get_best_w:
  0083b	8b 4d f0	 mov	 ecx, DWORD PTR _los_to_target$[ebp]
  0083e	51		 push	 ecx
  0083f	68 80 00 00 00	 push	 128			; 00000080H
  00844	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00847	52		 push	 edx
  00848	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv369[ebp], 1116
  00852	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv377[ebp]
  00858	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  0085f	ff d2		 call	 edx

; 308  : 
; 309  : 			if (!los_to_target)

  00861	83 7d f0 00	 cmp	 DWORD PTR _los_to_target$[ebp], 0
  00865	75 6f		 jne	 SHORT $LN9@get_best_w

; 310  : 			{
; 311  : 				#if DEBUG_MODULE
; 312  : 
; 313  : 				if (launcher == get_external_view_entity ())
; 314  : 				{
; 315  : 					debug_log ("WN_TGT : Suitable Weapon List After LOS Filter :");
; 316  : 				}
; 317  : 
; 318  : 				#endif
; 319  : 
; 320  : 				for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00867	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  0086e	eb 09		 jmp	 SHORT $LN10@get_best_w
$LN8@get_best_w:
  00870	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00873	83 c0 01	 add	 eax, 1
  00876	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN10@get_best_w:
  00879	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  0087d	7d 57		 jge	 SHORT $LN9@get_best_w

; 321  : 				{
; 322  : 					if (suitability[package])

  0087f	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00882	83 bc 85 70 ff
	ff ff 00	 cmp	 DWORD PTR _suitability$[ebp+eax*4], 0
  0088a	74 48		 je	 SHORT $LN52@get_best_w

; 323  : 					{
; 324  : 						weapon_type = weapon_config_database[config_type][package].sub_type;

  0088c	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00893	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00897	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  0089e	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 325  : 
; 326  : 						if (weapon_database[weapon_type].aiming_type != WEAPON_AIMING_TYPE_CALC_ANGLE_OF_PROJECTION)

  008a4	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  008ae	83 b8 1c 00 00
	00 02		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+28], 2
  008b5	74 1d		 je	 SHORT $LN52@get_best_w

; 327  : 						{
; 328  : 							suitability[package] = FALSE;

  008b7	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  008ba	c7 84 85 70 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _suitability$[ebp+eax*4], 0

; 329  : 
; 330  : 							suitable_weapon_count --;

  008c5	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _suitable_weapon_count$[ebp]
  008cb	83 e8 01	 sub	 eax, 1
  008ce	89 85 6c ff ff
	ff		 mov	 DWORD PTR _suitable_weapon_count$[ebp], eax
$LN52@get_best_w:

; 331  : 						}
; 332  : 						#if DEBUG_MODULE
; 333  : 						else
; 334  : 						{
; 335  : 							if (launcher == get_external_view_entity ())
; 336  : 							{
; 337  : 								debug_log ("WN_TGT : (%d) %s :", package, weapon_database[weapon_type].full_name);
; 338  : 							}
; 339  : 						}
; 340  : 						#endif
; 341  : 					}
; 342  : 				}

  008d4	eb 9a		 jmp	 SHORT $LN8@get_best_w
$LN9@get_best_w:

; 343  : 			}
; 344  : 		}
; 345  : 
; 346  : 		if (suitable_weapon_count == 0)

  008d6	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR _suitable_weapon_count$[ebp], 0
  008dd	75 07		 jne	 SHORT $LN53@get_best_w

; 347  : 		{
; 348  : 			return ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  008df	33 c0		 xor	 eax, eax
  008e1	e9 32 06 00 00	 jmp	 $LN1@get_best_w
$LN53@get_best_w:

; 349  : 		}
; 350  : 	}
; 351  : 
; 352  : 	//
; 353  : 	// filter out unsuitables with respect to range
; 354  : 	//
; 355  : 
; 356  : 	if (criteria & BEST_WEAPON_RANGE_CHECK)

  008e6	8b 45 10	 mov	 eax, DWORD PTR _criteria$[ebp]
  008e9	83 e0 04	 and	 eax, 4
  008ec	0f 84 16 02 00
	00		 je	 $LN58@get_best_w

; 357  : 	{
; 358  : 		float
; 359  : 			target_range,
; 360  : 			min_weapon_range,
; 361  : 			max_weapon_range;
; 362  : 
; 363  : 		vec3d
; 364  : 			*launcher_pos,
; 365  : 			*target_pos;
; 366  : 
; 367  : 		launcher_pos = get_local_entity_vec3d_ptr (launcher, VEC3D_TYPE_POSITION);

  008f2	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  008f6	74 0d		 je	 SHORT $LN111@get_best_w
  008f8	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  008fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  008fd	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv410[ebp], ecx
  00903	eb 27		 jmp	 SHORT $LN112@get_best_w
$LN111@get_best_w:
  00905	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  0090b	81 c2 1f 01 00
	00		 add	 edx, 287		; 0000011fH
  00911	52		 push	 edx
  00912	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00917	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0091c	50		 push	 eax
  0091d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00922	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv410[ebp], 0
$LN112@get_best_w:
  0092c	b9 01 00 00 00	 mov	 ecx, 1
  00931	85 c9		 test	 ecx, ecx
  00933	74 0c		 je	 SHORT $LN113@get_best_w
  00935	c7 85 f0 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv418[ebp], 8
  0093f	eb 27		 jmp	 SHORT $LN114@get_best_w
$LN113@get_best_w:
  00941	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00947	81 c2 1f 01 00
	00		 add	 edx, 287		; 0000011fH
  0094d	52		 push	 edx
  0094e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00953	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00958	50		 push	 eax
  00959	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0095e	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv418[ebp], 0
$LN114@get_best_w:
  00968	6a 08		 push	 8
  0096a	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0096d	51		 push	 ecx
  0096e	6b 95 f4 fe ff
	ff 60		 imul	 edx, DWORD PTR tv410[ebp], 96
  00975	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv418[ebp]
  0097b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00982	ff d1		 call	 ecx
  00984	89 85 4c ff ff
	ff		 mov	 DWORD PTR _launcher_pos$6[ebp], eax

; 368  : 
; 369  : 		target_pos = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  0098a	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  0098e	74 0d		 je	 SHORT $LN115@get_best_w
  00990	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00993	8b 08		 mov	 ecx, DWORD PTR [eax]
  00995	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv430[ebp], ecx
  0099b	eb 27		 jmp	 SHORT $LN116@get_best_w
$LN115@get_best_w:
  0099d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  009a3	81 c2 21 01 00
	00		 add	 edx, 289		; 00000121H
  009a9	52		 push	 edx
  009aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  009af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009b4	50		 push	 eax
  009b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009ba	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv430[ebp], 0
$LN116@get_best_w:
  009c4	b9 01 00 00 00	 mov	 ecx, 1
  009c9	85 c9		 test	 ecx, ecx
  009cb	74 0c		 je	 SHORT $LN117@get_best_w
  009cd	c7 85 f0 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv438[ebp], 8
  009d7	eb 27		 jmp	 SHORT $LN118@get_best_w
$LN117@get_best_w:
  009d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  009df	81 c2 21 01 00
	00		 add	 edx, 289		; 00000121H
  009e5	52		 push	 edx
  009e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  009eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  009f0	50		 push	 eax
  009f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f6	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv438[ebp], 0
$LN118@get_best_w:
  00a00	6a 08		 push	 8
  00a02	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  00a05	51		 push	 ecx
  00a06	6b 95 f4 fe ff
	ff 60		 imul	 edx, DWORD PTR tv430[ebp], 96
  00a0d	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv438[ebp]
  00a13	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00a1a	ff d1		 call	 ecx
  00a1c	89 85 48 ff ff
	ff		 mov	 DWORD PTR _target_pos$5[ebp], eax

; 370  : 
; 371  : 		target_range = get_approx_3d_range (launcher_pos, target_pos);

  00a22	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _target_pos$5[ebp]
  00a28	50		 push	 eax
  00a29	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _launcher_pos$6[ebp]
  00a2f	51		 push	 ecx
  00a30	e8 00 00 00 00	 call	 ?get_approx_3d_range@@YGMPBUVEC3D@@0@Z ; get_approx_3d_range
  00a35	d9 9d 58 ff ff
	ff		 fstp	 DWORD PTR _target_range$9[ebp]

; 372  : 
; 373  : 		#if DEBUG_MODULE
; 374  : 
; 375  : 		if (launcher == get_external_view_entity ())
; 376  : 		{
; 377  : 			debug_log ("WN_TGT : Suitable Weapon List After Range Filter ( Range = %f ) :", target_range);
; 378  : 		}
; 379  : 
; 380  : 		#endif
; 381  : 
; 382  : 		for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00a3b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00a42	eb 09		 jmp	 SHORT $LN13@get_best_w
$LN11@get_best_w:
  00a44	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00a47	83 c0 01	 add	 eax, 1
  00a4a	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN13@get_best_w:
  00a4d	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00a51	0f 8d a1 00 00
	00		 jge	 $LN12@get_best_w

; 383  : 		{
; 384  : 			if (suitability[package])

  00a57	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00a5a	83 bc 85 70 ff
	ff ff 00	 cmp	 DWORD PTR _suitability$[ebp+eax*4], 0
  00a62	0f 84 8b 00 00
	00		 je	 $LN56@get_best_w

; 385  : 			{
; 386  : 				weapon_type = weapon_config_database[config_type][package].sub_type;

  00a68	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00a6f	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00a73	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00a7a	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 387  : 
; 388  : 				min_weapon_range = weapon_database[weapon_type].min_range;

  00a80	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  00a8a	f3 0f 10 80 8c
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+140]
  00a92	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _min_weapon_range$8[ebp], xmm0

; 389  : //				max_weapon_range = weapon_database[weapon_type].max_range;
; 390  : 				max_weapon_range = weapon_database[weapon_type].effective_range;

  00a9a	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  00aa4	f3 0f 10 80 94
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+148]
  00aac	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _max_weapon_range$7[ebp], xmm0

; 391  : 
; 392  : 				if ((target_range < min_weapon_range) || (target_range > max_weapon_range))

  00ab4	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _min_weapon_range$8[ebp]
  00abc	0f 2f 85 58 ff
	ff ff		 comiss	 xmm0, DWORD PTR _target_range$9[ebp]
  00ac3	77 11		 ja	 SHORT $LN57@get_best_w
  00ac5	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _target_range$9[ebp]
  00acd	0f 2f 85 50 ff
	ff ff		 comiss	 xmm0, DWORD PTR _max_weapon_range$7[ebp]
  00ad4	76 1d		 jbe	 SHORT $LN56@get_best_w
$LN57@get_best_w:

; 393  : 				{
; 394  : 					suitability[package] = FALSE;

  00ad6	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00ad9	c7 84 85 70 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _suitability$[ebp+eax*4], 0

; 395  : 
; 396  : 					suitable_weapon_count --;

  00ae4	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _suitable_weapon_count$[ebp]
  00aea	83 e8 01	 sub	 eax, 1
  00aed	89 85 6c ff ff
	ff		 mov	 DWORD PTR _suitable_weapon_count$[ebp], eax
$LN56@get_best_w:

; 397  : 				}
; 398  : 				#if DEBUG_MODULE
; 399  : 				else
; 400  : 				{
; 401  : 					if (launcher == get_external_view_entity ())
; 402  : 					{
; 403  : 						debug_log ("WN_TGT : (%d) %s :", package, weapon_database[weapon_type].full_name);
; 404  : 					}
; 405  : 				}
; 406  : 				#endif
; 407  : 			}
; 408  : 		}

  00af3	e9 4c ff ff ff	 jmp	 $LN11@get_best_w
$LN12@get_best_w:

; 409  : 
; 410  : 		if (suitable_weapon_count == 0)

  00af8	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR _suitable_weapon_count$[ebp], 0
  00aff	75 07		 jne	 SHORT $LN58@get_best_w

; 411  : 		{
; 412  : 			return ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  00b01	33 c0		 xor	 eax, eax
  00b03	e9 10 04 00 00	 jmp	 $LN1@get_best_w
$LN58@get_best_w:

; 413  : 		}
; 414  : 	}
; 415  : 
; 416  : 	//
; 417  : 	// find how much damage each weapon could possibly cause
; 418  : 	//
; 419  : 
; 420  : 	{
; 421  : 		int
; 422  : 			target_damage_level,
; 423  : 			damage_capability,
; 424  : 			total_damage_possible;
; 425  : 
; 426  : 		target_damage_level = get_local_entity_int_value (target, INT_TYPE_DAMAGE_LEVEL);

  00b08	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b0c	74 0d		 je	 SHORT $LN119@get_best_w
  00b0e	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00b11	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b13	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv475[ebp], ecx
  00b19	eb 27		 jmp	 SHORT $LN120@get_best_w
$LN119@get_best_w:
  00b1b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00b21	81 c2 5a 01 00
	00		 add	 edx, 346		; 0000015aH
  00b27	52		 push	 edx
  00b28	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b2d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b32	50		 push	 eax
  00b33	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b38	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv475[ebp], 0
$LN120@get_best_w:
  00b42	b9 01 00 00 00	 mov	 ecx, 1
  00b47	85 c9		 test	 ecx, ecx
  00b49	74 0c		 je	 SHORT $LN121@get_best_w
  00b4b	c7 85 f0 fe ff
	ff 25 00 00 00	 mov	 DWORD PTR tv483[ebp], 37 ; 00000025H
  00b55	eb 27		 jmp	 SHORT $LN122@get_best_w
$LN121@get_best_w:
  00b57	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00b5d	81 c2 5a 01 00
	00		 add	 edx, 346		; 0000015aH
  00b63	52		 push	 edx
  00b64	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b69	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b6e	50		 push	 eax
  00b6f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b74	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv483[ebp], 0
$LN122@get_best_w:
  00b7e	6a 25		 push	 37			; 00000025H
  00b80	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  00b83	51		 push	 ecx
  00b84	69 95 f4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv475[ebp], 1116
  00b8e	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv483[ebp]
  00b94	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00b9b	ff d1		 call	 ecx
  00b9d	89 85 44 ff ff
	ff		 mov	 DWORD PTR _target_damage_level$4[ebp], eax

; 427  : 
; 428  : 		ASSERT (target_damage_level > 0);

  00ba3	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _target_damage_level$4[ebp], 0
  00baa	7f 1a		 jg	 SHORT $LN59@get_best_w
  00bac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z@4JA
  00bb1	05 5c 01 00 00	 add	 eax, 348		; 0000015cH
  00bb6	50		 push	 eax
  00bb7	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bbc	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BEDOIAD@target_damage_level?5?$DO?50@
  00bc1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN59@get_best_w:

; 429  : 
; 430  : 		#if DEBUG_MODULE
; 431  : 
; 432  : 		if (launcher == get_external_view_entity ())
; 433  : 		{
; 434  : 			debug_log ("WN_TGT : Suitable Weapon List After Damage Filter ( current damage level = %d ) :", target_damage_level);
; 435  : 		}
; 436  : 
; 437  : 		#endif
; 438  : 
; 439  : 		for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00bc6	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00bcd	eb 09		 jmp	 SHORT $LN16@get_best_w
$LN14@get_best_w:
  00bcf	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00bd2	83 c0 01	 add	 eax, 1
  00bd5	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN16@get_best_w:
  00bd8	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00bdc	0f 8d ef 00 00
	00		 jge	 $LN15@get_best_w

; 440  : 		{
; 441  : 			if (suitability[package])

  00be2	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00be5	83 bc 85 70 ff
	ff ff 00	 cmp	 DWORD PTR _suitability$[ebp+eax*4], 0
  00bed	0f 84 d9 00 00
	00		 je	 $LN63@get_best_w

; 442  : 			{
; 443  : 				weapon_type = weapon_config_database[config_type][package].sub_type;

  00bf3	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00bfa	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00bfe	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00c05	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 444  : 
; 445  : 				if (weapon_database[weapon_type].rate_of_fire == FIRE_SINGLE_WEAPON)

  00c0b	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  00c15	f3 0f 5a 80 c8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+200]
  00c1d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00c25	9f		 lahf
  00c26	f6 c4 44	 test	 ah, 68			; 00000044H
  00c29	7a 1a		 jp	 SHORT $LN61@get_best_w

; 446  : 				{
; 447  : 					damage_capability = weapon_is_suitable_for_damaging_target (weapon_type, target, TRUE);

  00c2b	6a 01		 push	 1
  00c2d	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00c30	50		 push	 eax
  00c31	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon_type$[ebp]
  00c37	51		 push	 ecx
  00c38	e8 00 00 00 00	 call	 ?weapon_is_suitable_for_damaging_target@@YGHHPAUENTITY@@H@Z ; weapon_is_suitable_for_damaging_target
  00c3d	89 85 40 ff ff
	ff		 mov	 DWORD PTR _damage_capability$3[ebp], eax

; 448  : 				}
; 449  : 				else

  00c43	eb 44		 jmp	 SHORT $LN62@get_best_w
$LN61@get_best_w:

; 450  : 				{
; 451  : 					damage_capability = weapon_is_suitable_for_damaging_target (weapon_type, target, TRUE)

  00c45	6a 01		 push	 1
  00c47	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00c4a	50		 push	 eax
  00c4b	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon_type$[ebp]
  00c51	51		 push	 ecx
  00c52	e8 00 00 00 00	 call	 ?weapon_is_suitable_for_damaging_target@@YGHHPAUENTITY@@H@Z ; weapon_is_suitable_for_damaging_target
  00c57	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00c5b	69 95 68 ff ff
	ff e0 00 00 00	 imul	 edx, DWORD PTR _weapon_type$[ebp], 224
  00c65	f3 0f 59 82 c8
	00 00 00	 mulss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[edx+200]
  00c6d	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  00c77	f3 0f 59 80 c4
	00 00 00	 mulss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+196]
  00c7f	f3 0f 2c c8	 cvttss2si ecx, xmm0
  00c83	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _damage_capability$3[ebp], ecx
$LN62@get_best_w:

; 452  : 											* weapon_database[weapon_type].rate_of_fire
; 453  : 											* weapon_database[weapon_type].burst_duration;
; 454  : 				}
; 455  : 
; 456  : 				total_damage_possible = min (damage_capability, target_damage_level);

  00c89	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _target_damage_level$4[ebp]
  00c8f	50		 push	 eax
  00c90	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _damage_capability$3[ebp]
  00c96	51		 push	 ecx
  00c97	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00c9c	8b 10		 mov	 edx, DWORD PTR [eax]
  00c9e	89 95 3c ff ff
	ff		 mov	 DWORD PTR _total_damage_possible$2[ebp], edx

; 457  : 
; 458  : 				suitability[package] = total_damage_possible;

  00ca4	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00ca7	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _total_damage_possible$2[ebp]
  00cad	89 8c 85 70 ff
	ff ff		 mov	 DWORD PTR _suitability$[ebp+eax*4], ecx

; 459  : 
; 460  : 				if (total_damage_possible == 0)

  00cb4	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR _total_damage_possible$2[ebp], 0
  00cbb	75 0f		 jne	 SHORT $LN63@get_best_w

; 461  : 				{
; 462  : 					suitable_weapon_count --;

  00cbd	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _suitable_weapon_count$[ebp]
  00cc3	83 e8 01	 sub	 eax, 1
  00cc6	89 85 6c ff ff
	ff		 mov	 DWORD PTR _suitable_weapon_count$[ebp], eax
$LN63@get_best_w:

; 463  : 				}
; 464  : 				#if DEBUG_MODULE
; 465  : 				else
; 466  : 				{
; 467  : 					if (launcher == get_external_view_entity ())
; 468  : 					{
; 469  : 						debug_log ("WN_TGT : (%d) %s - damage %d", package, weapon_database[weapon_type].full_name, total_damage_possible);
; 470  : 					}
; 471  : 				}
; 472  : 				#endif
; 473  : 			}
; 474  : 		}

  00ccc	e9 fe fe ff ff	 jmp	 $LN14@get_best_w
$LN15@get_best_w:

; 475  : 	}
; 476  : 
; 477  : 	if (suitable_weapon_count == 0)

  00cd1	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR _suitable_weapon_count$[ebp], 0
  00cd8	75 07		 jne	 SHORT $LN64@get_best_w

; 478  : 	{
; 479  : 		return ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  00cda	33 c0		 xor	 eax, eax
  00cdc	e9 37 02 00 00	 jmp	 $LN1@get_best_w
$LN64@get_best_w:

; 480  : 	}
; 481  : 
; 482  : 	//
; 483  : 	// guided weapons are generally more suitable...
; 484  : 	//
; 485  : 
; 486  : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00ce1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00ce8	eb 09		 jmp	 SHORT $LN19@get_best_w
$LN17@get_best_w:
  00cea	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00ced	83 c0 01	 add	 eax, 1
  00cf0	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN19@get_best_w:
  00cf3	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00cf7	7d 44		 jge	 SHORT $LN18@get_best_w

; 487  : 	{
; 488  : 		weapon_type = weapon_config_database[config_type][package].sub_type;

  00cf9	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00d00	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00d04	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00d0b	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 489  : 
; 490  : 		if (weapon_database[weapon_type].guidance_type != WEAPON_GUIDANCE_TYPE_NONE)

  00d11	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  00d1b	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+24], 0
  00d22	74 17		 je	 SHORT $LN65@get_best_w

; 491  : 		{
; 492  : 			suitability[package] *= 4;

  00d24	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00d27	8b 8c 85 70 ff
	ff ff		 mov	 ecx, DWORD PTR _suitability$[ebp+eax*4]
  00d2e	c1 e1 02	 shl	 ecx, 2
  00d31	8b 55 f4	 mov	 edx, DWORD PTR _package$[ebp]
  00d34	89 8c 95 70 ff
	ff ff		 mov	 DWORD PTR _suitability$[ebp+edx*4], ecx
$LN65@get_best_w:

; 493  : 		}
; 494  : 	}

  00d3b	eb ad		 jmp	 SHORT $LN17@get_best_w
$LN18@get_best_w:

; 495  : 
; 496  : 	//
; 497  : 	// Special case :- Aircraft should only use guided missiles against other aircraft
; 498  : 	//
; 499  : 
; 500  : 	if (get_local_entity_int_value (launcher, INT_TYPE_IDENTIFY_AIRCRAFT))

  00d3d	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00d41	74 0d		 je	 SHORT $LN123@get_best_w
  00d43	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00d46	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d48	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv556[ebp], ecx
  00d4e	eb 20		 jmp	 SHORT $LN124@get_best_w
$LN123@get_best_w:
  00d50	68 f4 01 00 00	 push	 500			; 000001f4H
  00d55	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d5a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d60	52		 push	 edx
  00d61	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d66	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv556[ebp], 0
$LN124@get_best_w:
  00d70	b8 01 00 00 00	 mov	 eax, 1
  00d75	85 c0		 test	 eax, eax
  00d77	74 0c		 je	 SHORT $LN125@get_best_w
  00d79	c7 85 f0 fe ff
	ff 57 00 00 00	 mov	 DWORD PTR tv563[ebp], 87 ; 00000057H
  00d83	eb 20		 jmp	 SHORT $LN126@get_best_w
$LN125@get_best_w:
  00d85	68 f4 01 00 00	 push	 500			; 000001f4H
  00d8a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d8f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00d95	51		 push	 ecx
  00d96	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d9b	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv563[ebp], 0
$LN126@get_best_w:
  00da5	6a 57		 push	 87			; 00000057H
  00da7	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00daa	52		 push	 edx
  00dab	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv556[ebp], 1116
  00db5	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv563[ebp]
  00dbb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00dc2	ff d2		 call	 edx
  00dc4	85 c0		 test	 eax, eax
  00dc6	0f 84 de 00 00
	00		 je	 $LN21@get_best_w

; 501  : 	{
; 502  : 		if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  00dcc	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  00dd0	74 0d		 je	 SHORT $LN127@get_best_w
  00dd2	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00dd5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00dd7	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv575[ebp], ecx
  00ddd	eb 20		 jmp	 SHORT $LN128@get_best_w
$LN127@get_best_w:
  00ddf	68 f6 01 00 00	 push	 502			; 000001f6H
  00de4	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00de9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00def	52		 push	 edx
  00df0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00df5	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv575[ebp], 0
$LN128@get_best_w:
  00dff	b8 01 00 00 00	 mov	 eax, 1
  00e04	85 c0		 test	 eax, eax
  00e06	74 0c		 je	 SHORT $LN129@get_best_w
  00e08	c7 85 f0 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR tv582[ebp], 4
  00e12	eb 20		 jmp	 SHORT $LN130@get_best_w
$LN129@get_best_w:
  00e14	68 f6 01 00 00	 push	 502			; 000001f6H
  00e19	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@ILGONJIF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e1e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e24	51		 push	 ecx
  00e25	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e2a	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv582[ebp], 0
$LN130@get_best_w:
  00e34	6a 04		 push	 4
  00e36	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  00e39	52		 push	 edx
  00e3a	69 85 f4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv575[ebp], 1116
  00e44	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv582[ebp]
  00e4a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00e51	ff d2		 call	 edx
  00e53	85 c0		 test	 eax, eax
  00e55	74 53		 je	 SHORT $LN21@get_best_w

; 503  : 		{
; 504  : 			for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00e57	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00e5e	eb 09		 jmp	 SHORT $LN22@get_best_w
$LN20@get_best_w:
  00e60	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00e63	83 c0 01	 add	 eax, 1
  00e66	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN22@get_best_w:
  00e69	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00e6d	7d 3b		 jge	 SHORT $LN21@get_best_w

; 505  : 			{
; 506  : 				weapon_type = weapon_config_database[config_type][package].sub_type;

  00e6f	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00e76	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00e7a	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00e81	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 507  : 
; 508  : 				if (weapon_database[weapon_type].guidance_type == WEAPON_GUIDANCE_TYPE_NONE)

  00e87	69 85 68 ff ff
	ff e0 00 00 00	 imul	 eax, DWORD PTR _weapon_type$[ebp], 224
  00e91	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+24], 0
  00e98	75 0e		 jne	 SHORT $LN68@get_best_w

; 509  : 				{
; 510  : 					suitability[package] = 0;

  00e9a	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00e9d	c7 84 85 70 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _suitability$[ebp+eax*4], 0
$LN68@get_best_w:

; 511  : 				}
; 512  : 			}

  00ea8	eb b6		 jmp	 SHORT $LN20@get_best_w
$LN21@get_best_w:

; 513  : 		}
; 514  : 	}
; 515  : 
; 516  : 	//
; 517  : 	// find the most suitable weapon
; 518  : 	//
; 519  : 
; 520  : 	{
; 521  : 		int
; 522  : 			highest_suitability;
; 523  : 
; 524  : 		highest_suitability = 0;

  00eaa	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _highest_suitability$1[ebp], 0

; 525  : 
; 526  : 		weapon_type = ENTITY_SUB_TYPE_WEAPON_NO_WEAPON;

  00eb4	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _weapon_type$[ebp], 0

; 527  : 
; 528  : 		for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00ebe	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00ec5	eb 09		 jmp	 SHORT $LN25@get_best_w
$LN23@get_best_w:
  00ec7	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00eca	83 c0 01	 add	 eax, 1
  00ecd	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN25@get_best_w:
  00ed0	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00ed4	7d 3c		 jge	 SHORT $LN24@get_best_w

; 529  : 		{
; 530  : 			if (suitability[package] > highest_suitability)

  00ed6	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00ed9	8b 8c 85 70 ff
	ff ff		 mov	 ecx, DWORD PTR _suitability$[ebp+eax*4]
  00ee0	3b 8d 38 ff ff
	ff		 cmp	 ecx, DWORD PTR _highest_suitability$1[ebp]
  00ee6	7e 28		 jle	 SHORT $LN69@get_best_w

; 531  : 			{
; 532  : 				weapon_type = weapon_config_database[config_type][package].sub_type;

  00ee8	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00eef	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00ef3	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00efa	89 95 68 ff ff
	ff		 mov	 DWORD PTR _weapon_type$[ebp], edx

; 533  : 
; 534  : 				highest_suitability = suitability[package];

  00f00	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00f03	8b 8c 85 70 ff
	ff ff		 mov	 ecx, DWORD PTR _suitability$[ebp+eax*4]
  00f0a	89 8d 38 ff ff
	ff		 mov	 DWORD PTR _highest_suitability$1[ebp], ecx
$LN69@get_best_w:

; 535  : 			}
; 536  : 		}

  00f10	eb b5		 jmp	 SHORT $LN23@get_best_w
$LN24@get_best_w:

; 537  : 
; 538  : 		#if DEBUG_MODULE
; 539  : 
; 540  : 		if (launcher == get_external_view_entity ())
; 541  : 		{
; 542  : 			debug_log ("WN_TGT : BEST WEAPON %s - damage %d", weapon_database[weapon_type].full_name, highest_suitability);
; 543  : 		}
; 544  : 
; 545  : 		#endif
; 546  : 	}
; 547  : 
; 548  : 	return weapon_type;

  00f12	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_type$[ebp]
$LN1@get_best_w:

; 549  : }

  00f18	5f		 pop	 edi
  00f19	5e		 pop	 esi
  00f1a	5b		 pop	 ebx
  00f1b	8b e5		 mov	 esp, ebp
  00f1d	5d		 pop	 ebp
  00f1e	c2 0c 00	 ret	 12			; 0000000cH
?get_best_weapon_for_target@@YGHPAUENTITY@@0I@Z ENDP	; get_best_weapon_for_target
_TEXT	ENDS
END
