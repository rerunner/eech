; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\force\fc_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_force_pack_functions@@YGXXZ		; overload_force_pack_functions
PUBLIC	?pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_force_data
PUBLIC	?unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; unpack_local_force_data
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_force_data'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `unpack_local_force_data'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@BCDABIBG@get_free_entity?5?$CIget_local_enti@ ; `string'
PUBLIC	??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ ; `string'
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; pack_list_link
EXTRN	?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; unpack_list_link
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PBD@Z:PROC ; pack_string
EXTRN	?unpack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PAD@Z:PROC ; unpack_string
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ DB 'ASSERT %s (%s'
	DB	':%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@BCDABIBG@get_free_entity?5?$CIget_local_enti@
CONST	SEGMENT
??_C@_0DD@BCDABIBG@get_free_entity?5?$CIget_local_enti@ DB 'get_free_enti'
	DB	'ty (get_local_entity_safe_index (en))', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 019fH ; `unpack_local_force_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 099H ; `pack_local_force_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 06dH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\force\fc_pack'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\force\fc_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 110  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 111  : 
; 112  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax

; 113  : 	{
; 114  : 		////////////////////////////////////////
; 115  : 		case PACK_MODE_SERVER_SESSION:
; 116  : 		case PACK_MODE_CLIENT_SESSION:
; 117  : 		case PACK_MODE_BROWSE_SESSION:
; 118  : 		////////////////////////////////////////
; 119  : 		{
; 120  : 
; 121  : 			break;
; 122  : 		}
; 123  : 
; 124  : 		////////////////////////////////////////
; 125  : 		case PACK_MODE_UPDATE_ENTITY:
; 126  : 		////////////////////////////////////////
; 127  : 		{
; 128  : 			//
; 129  : 			// always use access functions to set the data
; 130  : 			//
; 131  : 
; 132  : 			break;
; 133  : 		}
; 134  : 	}
; 135  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\force\fc_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		case PACK_MODE_CLIENT_SESSION:
; 88   : 		case PACK_MODE_BROWSE_SESSION:
; 89   : 		////////////////////////////////////////
; 90   : 		{
; 91   : 
; 92   : 			break;
; 93   : 		}
; 94   : 
; 95   : 		////////////////////////////////////////
; 96   : 		case PACK_MODE_UPDATE_ENTITY:
; 97   : 		////////////////////////////////////////
; 98   : 		{
; 99   : 			break;
; 100  : 		}
; 101  : 	}
; 102  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\force\fc_pack.c
;	COMDAT ?unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv492 = -88						; size = 4
tv482 = -88						; size = 4
tv473 = -88						; size = 4
tv442 = -88						; size = 4
tv428 = -88						; size = 4
tv418 = -88						; size = 4
tv405 = -88						; size = 4
tv304 = -88						; size = 4
tv259 = -88						; size = 4
tv249 = -88						; size = 4
tv239 = -88						; size = 4
tv230 = -88						; size = 4
tv131 = -88						; size = 4
tv76 = -88						; size = 4
_campaign_criteria$ = -20				; size = 4
_last_campaign_criteria$ = -16				; size = 4
_raw$ = -12						; size = 4
_loop$ = -8						; size = 4
_count$ = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC ; unpack_local_force_data, COMDAT

; 415  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 416  : 
; 417  : 	int
; 418  : 		count,
; 419  : 		loop;
; 420  : 
; 421  : 	force
; 422  : 		*raw;
; 423  : 
; 424  : 	campaign_criteria_type
; 425  : 		*last_campaign_criteria,
; 426  : 		*campaign_criteria;
; 427  : 
; 428  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN27@unpack_loc
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN26@unpack_loc
$LN27@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 0d	 add	 eax, 13			; 0000000dH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@unpack_loc:

; 429  : 
; 430  : 	ASSERT (en);

  0002d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00031	75 18		 jne	 SHORT $LN28@unpack_loc
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00038	83 c0 0f	 add	 eax, 15			; 0000000fH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN28@unpack_loc:

; 431  : 
; 432  : 	raw = (force *) get_local_entity_data (en);

  0004b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00051	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 433  : 		
; 434  : 	switch (mode)

  00054	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00057	89 45 a8	 mov	 DWORD PTR tv76[ebp], eax
  0005a	83 7d a8 00	 cmp	 DWORD PTR tv76[ebp], 0
  0005e	74 19		 je	 SHORT $LN29@unpack_loc
  00060	83 7d a8 01	 cmp	 DWORD PTR tv76[ebp], 1
  00064	0f 84 ef 02 00
	00		 je	 $LN30@unpack_loc
  0006a	83 7d a8 02	 cmp	 DWORD PTR tv76[ebp], 2
  0006e	0f 84 99 06 00
	00		 je	 $LN32@unpack_loc
  00074	e9 dd 07 00 00	 jmp	 $LN2@unpack_loc
$LN29@unpack_loc:

; 435  : 	{
; 436  : 		////////////////////////////////////////
; 437  : 		case PACK_MODE_SERVER_SESSION:
; 438  : 		////////////////////////////////////////
; 439  : 		{
; 440  :          unpack_string (en, STRING_TYPE_FORCE_NAME, raw->force_name);

  00079	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0007c	50		 push	 eax
  0007d	6a 02		 push	 2
  0007f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?unpack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PAD@Z ; unpack_string

; 441  : 
; 442  : 			// keysite_force
; 443  : 		
; 444  : 			// pilot root
; 445  : 		
; 446  : 			unpack_list_root (en, LIST_TYPE_DIVISION, &raw->division_root);

  00088	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0008b	05 10 01 00 00	 add	 eax, 272		; 00000110H
  00090	50		 push	 eax
  00091	6a 0b		 push	 11			; 0000000bH
  00093	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 447  : 	
; 448  : 			unpack_list_root (en, LIST_TYPE_CAMPAIGN_OBJECTIVE, &raw->campaign_objective_root);

  0009c	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0009f	05 14 01 00 00	 add	 eax, 276		; 00000114H
  000a4	50		 push	 eax
  000a5	6a 05		 push	 5
  000a7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000aa	51		 push	 ecx
  000ab	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 449  : 	
; 450  : 			// air_registry_root
; 451  : 			// ground_registry_root
; 452  : 			// sea_registry_root
; 453  : 	
; 454  : //			unpack_list_root (en, LIST_TYPE_INDEPENDENT_GROUP, &raw->independent_group_root);
; 455  : 	
; 456  : 			// force_link
; 457  : 		
; 458  : 			// update link
; 459  : 		
; 460  : 			// task generation //////////////////////////////////////////////
; 461  : 		
; 462  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_TASKS; loop ++)

  000b0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  000b7	eb 09		 jmp	 SHORT $LN6@unpack_loc
$LN4@unpack_loc:
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  000bc	83 c0 01	 add	 eax, 1
  000bf	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN6@unpack_loc:
  000c2	83 7d f8 1e	 cmp	 DWORD PTR _loop$[ebp], 30 ; 0000001eH
  000c6	7d 63		 jge	 SHORT $LN5@unpack_loc

; 463  : 			{
; 464  : 				raw->task_generation [loop].valid = unpack_int_value (en, INT_TYPE_VALID);

  000c8	68 ef 00 00 00	 push	 239			; 000000efH
  000cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000d6	89 45 a8	 mov	 DWORD PTR tv131[ebp], eax
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  000dc	c1 e1 04	 shl	 ecx, 4
  000df	66 8b 55 a8	 mov	 dx, WORD PTR tv131[ebp]
  000e3	66 83 e2 01	 and	 dx, 1
  000e7	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  000ec	8b 75 f4	 mov	 esi, DWORD PTR _raw$[ebp]
  000ef	66 23 84 0e 3c
	01 00 00	 and	 ax, WORD PTR [esi+ecx+316]
  000f7	66 0b c2	 or	 ax, dx
  000fa	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  000fd	c1 e1 04	 shl	 ecx, 4
  00100	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00103	66 89 84 0a 3c
	01 00 00	 mov	 WORD PTR [edx+ecx+316], ax

; 465  : 
; 466  : 				raw->task_generation [loop].created = unpack_int_value (en, INT_TYPE_TASK_GENERATION);

  0010b	68 db 00 00 00	 push	 219			; 000000dbH
  00110	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  0011c	c1 e1 04	 shl	 ecx, 4
  0011f	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00122	89 84 0a 40 01
	00 00		 mov	 DWORD PTR [edx+ecx+320], eax

; 467  : 			}

  00129	eb 8e		 jmp	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:

; 468  : 			/////////////////////////////////////////////////////////////////
; 469  : 		
; 470  : 			// campaign criteria ////////////////////////////////////////////
; 471  : 		
; 472  : 			count = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_COUNT);

  0012b	6a 11		 push	 17			; 00000011H
  0012d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00136	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 473  : 	
; 474  : 			last_campaign_criteria = NULL;

  00139	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _last_campaign_criteria$[ebp], 0
$LN7@unpack_loc:

; 475  : 	
; 476  : 			while (count)

  00140	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  00144	0f 84 c3 00 00
	00		 je	 $LN8@unpack_loc

; 477  : 			{
; 478  : 	
; 479  : 				campaign_criteria = (campaign_criteria_type *) malloc_heap_mem (sizeof (campaign_criteria_type));

  0014a	6a 24		 push	 36			; 00000024H
  0014c	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00151	89 45 ec	 mov	 DWORD PTR _campaign_criteria$[ebp], eax

; 480  : 	
; 481  : 				memset (campaign_criteria, 0, sizeof (campaign_criteria_type));

  00154	6a 24		 push	 36			; 00000024H
  00156	6a 00		 push	 0
  00158	8b 45 ec	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 _memset
  00161	83 c4 0c	 add	 esp, 12			; 0000000cH

; 482  : 		
; 483  : 				campaign_criteria->criteria_type = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_TYPE);

  00164	6a 13		 push	 19			; 00000013H
  00166	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0016f	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  00172	66 89 01	 mov	 WORD PTR [ecx], ax

; 484  : 		
; 485  : 				campaign_criteria->valid = unpack_int_value (en, INT_TYPE_VALID);

  00175	68 ef 00 00 00	 push	 239			; 000000efH
  0017a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00183	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  00186	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 486  : 		
; 487  : 				campaign_criteria->result = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_RESULT);

  0018a	6a 12		 push	 18			; 00000012H
  0018c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00195	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  00198	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 488  : 		
; 489  : 				campaign_criteria->value1 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  0019c	6a 14		 push	 20			; 00000014H
  0019e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001a7	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  001aa	66 89 41 18	 mov	 WORD PTR [ecx+24], ax

; 490  : 		
; 491  : 				campaign_criteria->value2 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  001ae	6a 14		 push	 20			; 00000014H
  001b0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001b9	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  001bc	66 89 41 1a	 mov	 WORD PTR [ecx+26], ax

; 492  : 		
; 493  : 				campaign_criteria->value3 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  001c0	6a 14		 push	 20			; 00000014H
  001c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001c5	50		 push	 eax
  001c6	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001cb	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  001ce	66 89 41 1c	 mov	 WORD PTR [ecx+28], ax

; 494  : 		
; 495  : 				campaign_criteria->value4 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  001d2	6a 14		 push	 20			; 00000014H
  001d4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001dd	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  001e0	66 89 41 1e	 mov	 WORD PTR [ecx+30], ax

; 496  : 		
; 497  : 				campaign_criteria->next = last_campaign_criteria;

  001e4	8b 45 ec	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  001e7	8b 4d f0	 mov	 ecx, DWORD PTR _last_campaign_criteria$[ebp]
  001ea	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 498  : 	
; 499  : 				raw->campaign_criteria = campaign_criteria;

  001ed	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  001f0	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  001f3	89 88 1c 03 00
	00		 mov	 DWORD PTR [eax+796], ecx

; 500  : 	
; 501  : 				last_campaign_criteria = campaign_criteria;

  001f9	8b 45 ec	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  001fc	89 45 f0	 mov	 DWORD PTR _last_campaign_criteria$[ebp], eax

; 502  : 	
; 503  : 				count --;

  001ff	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00202	83 e8 01	 sub	 eax, 1
  00205	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 504  : 			}

  00208	e9 33 ff ff ff	 jmp	 $LN7@unpack_loc
$LN8@unpack_loc:

; 505  : 			/////////////////////////////////////////////////////////////////
; 506  : 		
; 507  : 			// force_info_criteria
; 508  : 		
; 509  : 			for (loop = 0; loop < NUM_FORCE_INFO_CATAGORIES; loop ++)

  0020d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00214	eb 09		 jmp	 SHORT $LN11@unpack_loc
$LN9@unpack_loc:
  00216	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00219	83 c0 01	 add	 eax, 1
  0021c	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN11@unpack_loc:
  0021f	83 7d f8 08	 cmp	 DWORD PTR _loop$[ebp], 8
  00223	7d 38		 jge	 SHORT $LN10@unpack_loc

; 510  : 			{
; 511  : 				raw->force_info_current_hardware [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  00225	68 f2 00 00 00	 push	 242			; 000000f2H
  0022a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0022d	50		 push	 eax
  0022e	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00233	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00236	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00239	89 84 8a 20 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+800], eax

; 512  : 		
; 513  : 				raw->force_info_reserve_hardware [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  00240	68 f2 00 00 00	 push	 242			; 000000f2H
  00245	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00248	50		 push	 eax
  00249	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0024e	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00251	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00254	89 84 8a 40 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+832], eax

; 514  : 			}

  0025b	eb b9		 jmp	 SHORT $LN9@unpack_loc
$LN10@unpack_loc:

; 515  : 			/////////////////////////////////////////////////////////////////
; 516  : 	
; 517  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_GROUPS; loop ++)

  0025d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00264	eb 09		 jmp	 SHORT $LN14@unpack_loc
$LN12@unpack_loc:
  00266	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00269	83 c0 01	 add	 eax, 1
  0026c	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN14@unpack_loc:
  0026f	83 7d f8 1a	 cmp	 DWORD PTR _loop$[ebp], 26 ; 0000001aH
  00273	7d 38		 jge	 SHORT $LN13@unpack_loc

; 518  : 			{
; 519  : 				raw->kills [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  00275	68 f2 00 00 00	 push	 242			; 000000f2H
  0027a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0027d	50		 push	 eax
  0027e	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00283	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00286	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00289	89 84 8a 60 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+864], eax

; 520  : 				raw->losses [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  00290	68 f2 00 00 00	 push	 242			; 000000f2H
  00295	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00298	50		 push	 eax
  00299	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0029e	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  002a1	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  002a4	89 84 8a c8 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+968], eax

; 521  : //				raw->group_count [loop] = unpack_int_value (en, INT_TYPE_VALUE);
; 522  : 			}

  002ab	eb b9		 jmp	 SHORT $LN12@unpack_loc
$LN13@unpack_loc:

; 523  : 
; 524  : 			raw->sleep = unpack_float_value (en, FLOAT_TYPE_SLEEP);

  002ad	6a 75		 push	 117			; 00000075H
  002af	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b2	50		 push	 eax
  002b3	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  002b8	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  002bb	d9 99 9c 04 00
	00		 fstp	 DWORD PTR [ecx+1180]

; 525  : 		
; 526  : 			raw->force_attitude = unpack_int_value (en, INT_TYPE_FORCE_ATTITUDE);

  002c1	6a 3b		 push	 59			; 0000003bH
  002c3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002c6	50		 push	 eax
  002c7	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002cc	89 45 a8	 mov	 DWORD PTR tv230[ebp], eax
  002cf	8b 4d a8	 mov	 ecx, DWORD PTR tv230[ebp]
  002d2	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  002d8	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  002db	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  002e1	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  002e6	0b c1		 or	 eax, ecx
  002e8	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  002eb	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 527  : 		
; 528  : 			// sector_count
; 529  : 		
; 530  : 			raw->colour = unpack_int_value (en, INT_TYPE_COLOUR);

  002f1	6a 1c		 push	 28			; 0000001cH
  002f3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002f6	50		 push	 eax
  002f7	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002fc	89 45 a8	 mov	 DWORD PTR tv239[ebp], eax
  002ff	8b 4d a8	 mov	 ecx, DWORD PTR tv239[ebp]
  00302	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00305	c1 e1 08	 shl	 ecx, 8
  00308	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  0030b	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  00311	25 ff f0 ff ff	 and	 eax, -3841		; fffff0ffH
  00316	0b c1		 or	 eax, ecx
  00318	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  0031b	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 531  : 		
; 532  : 			raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  00321	68 bb 00 00 00	 push	 187			; 000000bbH
  00326	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00329	50		 push	 eax
  0032a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0032f	89 45 a8	 mov	 DWORD PTR tv249[ebp], eax
  00332	8b 4d a8	 mov	 ecx, DWORD PTR tv249[ebp]
  00335	83 e1 03	 and	 ecx, 3
  00338	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  0033b	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  0033e	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  00344	25 ff cf ff ff	 and	 eax, -12289		; ffffcfffH
  00349	0b c1		 or	 eax, ecx
  0034b	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  0034e	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 533  : 	
; 534  : 			break;

  00354	e9 fd 04 00 00	 jmp	 $LN2@unpack_loc
$LN30@unpack_loc:

; 535  : 		}
; 536  : 		////////////////////////////////////////
; 537  : 		case PACK_MODE_CLIENT_SESSION:
; 538  : 		////////////////////////////////////////
; 539  : 		{
; 540  : 			//
; 541  : 			// create entity
; 542  : 			//
; 543  : 
; 544  : 			debug_assert (get_free_entity (get_local_entity_safe_index (en)));

  00359	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0035d	74 11		 je	 SHORT $LN35@unpack_loc
  0035f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00362	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00368	c1 f8 04	 sar	 eax, 4
  0036b	89 45 a8	 mov	 DWORD PTR tv259[ebp], eax
  0036e	eb 07		 jmp	 SHORT $LN36@unpack_loc
$LN35@unpack_loc:
  00370	c7 45 a8 ff ff
	ff ff		 mov	 DWORD PTR tv259[ebp], -1
$LN36@unpack_loc:
  00377	8b 4d a8	 mov	 ecx, DWORD PTR tv259[ebp]
  0037a	51		 push	 ecx
  0037b	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00380	85 c0		 test	 eax, eax
  00382	75 22		 jne	 SHORT $LN31@unpack_loc
  00384	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00389	05 81 00 00 00	 add	 eax, 129		; 00000081H
  0038e	50		 push	 eax
  0038f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00394	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BCDABIBG@get_free_entity?5?$CIget_local_enti@
  00399	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  0039e	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  003a3	83 c4 10	 add	 esp, 16			; 00000010H
$LN31@unpack_loc:

; 545  : 
; 546  : 			set_local_entity_type (en, ENTITY_TYPE_FORCE);

  003a6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003a9	c7 00 0b 00 00
	00		 mov	 DWORD PTR [eax], 11	; 0000000bH

; 547  : 
; 548  : 			raw = (force *) malloc_fast_mem (sizeof (force));

  003af	68 a4 04 00 00	 push	 1188			; 000004a4H
  003b4	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  003b9	89 45 f4	 mov	 DWORD PTR _raw$[ebp], eax

; 549  : 
; 550  : 			set_local_entity_data (en, raw);

  003bc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003bf	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  003c2	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 551  : 
; 552  : 			memset (raw, 0, sizeof (force));

  003c5	68 a4 04 00 00	 push	 1188			; 000004a4H
  003ca	6a 00		 push	 0
  003cc	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 _memset
  003d5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 553  : 
; 554  : 			//
; 555  : 			// unpack data (in exactly the same order as the data was packed)
; 556  : 			//
; 557  : 
; 558  :          unpack_string (en, STRING_TYPE_FORCE_NAME, raw->force_name);

  003d8	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  003db	50		 push	 eax
  003dc	6a 02		 push	 2
  003de	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003e1	51		 push	 ecx
  003e2	e8 00 00 00 00	 call	 ?unpack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PAD@Z ; unpack_string

; 559  : 
; 560  : 			// keysite_force
; 561  : 	
; 562  : 			unpack_list_root (en, LIST_TYPE_PILOT, &raw->pilot_root);

  003e7	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  003ea	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  003ef	50		 push	 eax
  003f0	6a 1c		 push	 28			; 0000001cH
  003f2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003f5	51		 push	 ecx
  003f6	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 563  : 
; 564  : 			unpack_list_root (en, LIST_TYPE_DIVISION, &raw->division_root);

  003fb	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  003fe	05 10 01 00 00	 add	 eax, 272		; 00000110H
  00403	50		 push	 eax
  00404	6a 0b		 push	 11			; 0000000bH
  00406	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00409	51		 push	 ecx
  0040a	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 565  : 
; 566  : 			unpack_list_root (en, LIST_TYPE_CAMPAIGN_OBJECTIVE, &raw->campaign_objective_root);

  0040f	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00412	05 14 01 00 00	 add	 eax, 276		; 00000114H
  00417	50		 push	 eax
  00418	6a 05		 push	 5
  0041a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0041d	51		 push	 ecx
  0041e	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 567  : 
; 568  : 			//	air_registry_root
; 569  : 			//	ground_registry_root
; 570  : 			//	sea_registry_root
; 571  : 
; 572  : //			unpack_list_root (en, LIST_TYPE_INDEPENDENT_GROUP, &raw->independent_group_root);
; 573  : 	
; 574  : 			unpack_list_link (en, LIST_TYPE_FORCE, &raw->force_link);

  00423	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00426	05 24 01 00 00	 add	 eax, 292		; 00000124H
  0042b	50		 push	 eax
  0042c	6a 0e		 push	 14			; 0000000eH
  0042e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00431	51		 push	 ecx
  00432	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 575  : 
; 576  : 			// update_link
; 577  : 
; 578  : 			////////////////////////////////////////////
; 579  : 			// task_generation
; 580  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_TASKS; loop ++)

  00437	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0043e	eb 09		 jmp	 SHORT $LN17@unpack_loc
$LN15@unpack_loc:
  00440	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00443	83 c0 01	 add	 eax, 1
  00446	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN17@unpack_loc:
  00449	83 7d f8 1e	 cmp	 DWORD PTR _loop$[ebp], 30 ; 0000001eH
  0044d	7d 63		 jge	 SHORT $LN16@unpack_loc

; 581  : 			{
; 582  : 				raw->task_generation [loop].valid = unpack_int_value (en, INT_TYPE_VALID);

  0044f	68 ef 00 00 00	 push	 239			; 000000efH
  00454	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00457	50		 push	 eax
  00458	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0045d	89 45 a8	 mov	 DWORD PTR tv304[ebp], eax
  00460	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00463	c1 e1 04	 shl	 ecx, 4
  00466	66 8b 55 a8	 mov	 dx, WORD PTR tv304[ebp]
  0046a	66 83 e2 01	 and	 dx, 1
  0046e	b8 fe ff 00 00	 mov	 eax, 65534		; 0000fffeH
  00473	8b 75 f4	 mov	 esi, DWORD PTR _raw$[ebp]
  00476	66 23 84 0e 3c
	01 00 00	 and	 ax, WORD PTR [esi+ecx+316]
  0047e	66 0b c2	 or	 ax, dx
  00481	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00484	c1 e1 04	 shl	 ecx, 4
  00487	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  0048a	66 89 84 0a 3c
	01 00 00	 mov	 WORD PTR [edx+ecx+316], ax

; 583  : 
; 584  : 				raw->task_generation [loop].created = unpack_int_value (en, INT_TYPE_TASK_GENERATION);

  00492	68 db 00 00 00	 push	 219			; 000000dbH
  00497	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0049a	50		 push	 eax
  0049b	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  004a0	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  004a3	c1 e1 04	 shl	 ecx, 4
  004a6	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  004a9	89 84 0a 40 01
	00 00		 mov	 DWORD PTR [edx+ecx+320], eax

; 585  : 			}

  004b0	eb 8e		 jmp	 SHORT $LN15@unpack_loc
$LN16@unpack_loc:

; 586  : 			////////////////////////////////////////////
; 587  : 
; 588  : 			////////////////////////////////////////////
; 589  : 			// campaign criteria 
; 590  : 			raw->campaign_criteria = NULL;

  004b2	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  004b5	c7 80 1c 03 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+796], 0

; 591  : 
; 592  : 			count = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_COUNT);

  004bf	6a 11		 push	 17			; 00000011H
  004c1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004c4	50		 push	 eax
  004c5	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  004ca	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN18@unpack_loc:

; 593  : 
; 594  : 			while (count)

  004cd	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  004d1	0f 84 c3 00 00
	00		 je	 $LN19@unpack_loc

; 595  : 			{
; 596  : 
; 597  : 				count --;

  004d7	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  004da	83 e8 01	 sub	 eax, 1
  004dd	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 598  : 
; 599  : 				campaign_criteria = (campaign_criteria_type *) malloc_heap_mem (sizeof (campaign_criteria_type));

  004e0	6a 24		 push	 36			; 00000024H
  004e2	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  004e7	89 45 ec	 mov	 DWORD PTR _campaign_criteria$[ebp], eax

; 600  : 
; 601  : 				memset (campaign_criteria, 0, sizeof (campaign_criteria_type));

  004ea	6a 24		 push	 36			; 00000024H
  004ec	6a 00		 push	 0
  004ee	8b 45 ec	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  004f1	50		 push	 eax
  004f2	e8 00 00 00 00	 call	 _memset
  004f7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 602  : 
; 603  : 				campaign_criteria->next = raw->campaign_criteria;

  004fa	8b 45 ec	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  004fd	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00500	8b 91 1c 03 00
	00		 mov	 edx, DWORD PTR [ecx+796]
  00506	89 50 20	 mov	 DWORD PTR [eax+32], edx

; 604  : 
; 605  : 				raw->campaign_criteria = campaign_criteria;

  00509	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0050c	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  0050f	89 88 1c 03 00
	00		 mov	 DWORD PTR [eax+796], ecx

; 606  : 
; 607  : 				campaign_criteria->criteria_type = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_TYPE);

  00515	6a 13		 push	 19			; 00000013H
  00517	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0051a	50		 push	 eax
  0051b	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00520	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  00523	66 89 01	 mov	 WORD PTR [ecx], ax

; 608  : 
; 609  : 				campaign_criteria->valid = unpack_int_value (en, INT_TYPE_VALID);

  00526	68 ef 00 00 00	 push	 239			; 000000efH
  0052b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0052e	50		 push	 eax
  0052f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00534	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  00537	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 610  : 
; 611  : 				campaign_criteria->result = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_RESULT);

  0053b	6a 12		 push	 18			; 00000012H
  0053d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00540	50		 push	 eax
  00541	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00546	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  00549	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 612  : 
; 613  : 				campaign_criteria->value1 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  0054d	6a 14		 push	 20			; 00000014H
  0054f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00552	50		 push	 eax
  00553	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00558	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  0055b	66 89 41 18	 mov	 WORD PTR [ecx+24], ax

; 614  : 
; 615  : 				campaign_criteria->value2 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  0055f	6a 14		 push	 20			; 00000014H
  00561	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00564	50		 push	 eax
  00565	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0056a	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  0056d	66 89 41 1a	 mov	 WORD PTR [ecx+26], ax

; 616  : 
; 617  : 				campaign_criteria->value3 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  00571	6a 14		 push	 20			; 00000014H
  00573	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00576	50		 push	 eax
  00577	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0057c	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  0057f	66 89 41 1c	 mov	 WORD PTR [ecx+28], ax

; 618  : 
; 619  : 				campaign_criteria->value4 = unpack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE);

  00583	6a 14		 push	 20			; 00000014H
  00585	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00588	50		 push	 eax
  00589	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0058e	8b 4d ec	 mov	 ecx, DWORD PTR _campaign_criteria$[ebp]
  00591	66 89 41 1e	 mov	 WORD PTR [ecx+30], ax

; 620  : 			}

  00595	e9 33 ff ff ff	 jmp	 $LN18@unpack_loc
$LN19@unpack_loc:

; 621  : 			/////////////////////////////////////////////////////////////////
; 622  : 
; 623  : 			////////////////////////////////////////////
; 624  : 			// force_info_criteria
; 625  : 			for (loop = 0; loop < NUM_FORCE_INFO_CATAGORIES; loop ++)

  0059a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  005a1	eb 09		 jmp	 SHORT $LN22@unpack_loc
$LN20@unpack_loc:
  005a3	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  005a6	83 c0 01	 add	 eax, 1
  005a9	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN22@unpack_loc:
  005ac	83 7d f8 08	 cmp	 DWORD PTR _loop$[ebp], 8
  005b0	7d 38		 jge	 SHORT $LN21@unpack_loc

; 626  : 			{
; 627  : 				raw->force_info_current_hardware [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  005b2	68 f2 00 00 00	 push	 242			; 000000f2H
  005b7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005ba	50		 push	 eax
  005bb	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  005c0	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  005c3	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  005c6	89 84 8a 20 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+800], eax

; 628  : 
; 629  : 				raw->force_info_reserve_hardware [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  005cd	68 f2 00 00 00	 push	 242			; 000000f2H
  005d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005d5	50		 push	 eax
  005d6	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  005db	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  005de	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  005e1	89 84 8a 40 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+832], eax

; 630  : 			}

  005e8	eb b9		 jmp	 SHORT $LN20@unpack_loc
$LN21@unpack_loc:

; 631  : 			// force_info_criteria
; 632  : 
; 633  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_GROUPS; loop ++)

  005ea	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  005f1	eb 09		 jmp	 SHORT $LN25@unpack_loc
$LN23@unpack_loc:
  005f3	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  005f6	83 c0 01	 add	 eax, 1
  005f9	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN25@unpack_loc:
  005fc	83 7d f8 1a	 cmp	 DWORD PTR _loop$[ebp], 26 ; 0000001aH
  00600	7d 38		 jge	 SHORT $LN24@unpack_loc

; 634  : 			{
; 635  : 				raw->kills [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  00602	68 f2 00 00 00	 push	 242			; 000000f2H
  00607	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0060a	50		 push	 eax
  0060b	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00610	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  00613	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00616	89 84 8a 60 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+864], eax

; 636  : 				raw->losses [loop] = unpack_int_value (en, INT_TYPE_VALUE);

  0061d	68 f2 00 00 00	 push	 242			; 000000f2H
  00622	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00625	50		 push	 eax
  00626	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0062b	8b 4d f8	 mov	 ecx, DWORD PTR _loop$[ebp]
  0062e	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00631	89 84 8a c8 03
	00 00		 mov	 DWORD PTR [edx+ecx*4+968], eax

; 637  : //				raw->group_count [loop] = unpack_int_value (en, INT_TYPE_VALUE);
; 638  : 			}

  00638	eb b9		 jmp	 SHORT $LN23@unpack_loc
$LN24@unpack_loc:

; 639  : 
; 640  : 			raw->sleep = unpack_float_value (en, FLOAT_TYPE_SLEEP);

  0063a	6a 75		 push	 117			; 00000075H
  0063c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0063f	50		 push	 eax
  00640	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00645	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00648	d9 99 9c 04 00
	00		 fstp	 DWORD PTR [ecx+1180]

; 641  : 
; 642  : 			raw->force_attitude = unpack_int_value (en, INT_TYPE_FORCE_ATTITUDE);

  0064e	6a 3b		 push	 59			; 0000003bH
  00650	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00653	50		 push	 eax
  00654	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00659	89 45 a8	 mov	 DWORD PTR tv405[ebp], eax
  0065c	8b 4d a8	 mov	 ecx, DWORD PTR tv405[ebp]
  0065f	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00665	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00668	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  0066e	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  00673	0b c1		 or	 eax, ecx
  00675	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00678	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 643  : 
; 644  : 			raw->sector_count = unpack_int_value (en, INT_TYPE_FORCE_SECTOR_COUNT);

  0067e	6a 3d		 push	 61			; 0000003dH
  00680	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00683	50		 push	 eax
  00684	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00689	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  0068c	89 81 98 04 00
	00		 mov	 DWORD PTR [ecx+1176], eax

; 645  : 
; 646  : 			raw->colour = unpack_int_value (en, INT_TYPE_COLOUR);

  00692	6a 1c		 push	 28			; 0000001cH
  00694	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0069d	89 45 a8	 mov	 DWORD PTR tv418[ebp], eax
  006a0	8b 4d a8	 mov	 ecx, DWORD PTR tv418[ebp]
  006a3	83 e1 0f	 and	 ecx, 15			; 0000000fH
  006a6	c1 e1 08	 shl	 ecx, 8
  006a9	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  006ac	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  006b2	25 ff f0 ff ff	 and	 eax, -3841		; fffff0ffH
  006b7	0b c1		 or	 eax, ecx
  006b9	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  006bc	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 647  : 
; 648  : 			raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  006c2	68 bb 00 00 00	 push	 187			; 000000bbH
  006c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006ca	50		 push	 eax
  006cb	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  006d0	89 45 a8	 mov	 DWORD PTR tv428[ebp], eax
  006d3	8b 4d a8	 mov	 ecx, DWORD PTR tv428[ebp]
  006d6	83 e1 03	 and	 ecx, 3
  006d9	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  006dc	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  006df	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  006e5	25 ff cf ff ff	 and	 eax, -12289		; ffffcfffH
  006ea	0b c1		 or	 eax, ecx
  006ec	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  006ef	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 649  : 
; 650  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  006f5	6a 00		 push	 0
  006f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  006fc	50		 push	 eax
  006fd	6a 29		 push	 41			; 00000029H
  006ff	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00702	51		 push	 ecx
  00703	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 651  : 
; 652  : 			break;

  00708	e9 49 01 00 00	 jmp	 $LN2@unpack_loc
$LN32@unpack_loc:

; 653  : 		}
; 654  : 		////////////////////////////////////////
; 655  : 		case PACK_MODE_BROWSE_SESSION:
; 656  : 		////////////////////////////////////////
; 657  : 		{
; 658  : 			//
; 659  : 			// create entity
; 660  : 			//
; 661  : 
; 662  : 			debug_assert (get_free_entity (get_local_entity_safe_index (en)));

  0070d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00711	74 11		 je	 SHORT $LN37@unpack_loc
  00713	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00716	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  0071c	c1 f8 04	 sar	 eax, 4
  0071f	89 45 a8	 mov	 DWORD PTR tv442[ebp], eax
  00722	eb 07		 jmp	 SHORT $LN38@unpack_loc
$LN37@unpack_loc:
  00724	c7 45 a8 ff ff
	ff ff		 mov	 DWORD PTR tv442[ebp], -1
$LN38@unpack_loc:
  0072b	8b 4d a8	 mov	 ecx, DWORD PTR tv442[ebp]
  0072e	51		 push	 ecx
  0072f	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00734	85 c0		 test	 eax, eax
  00736	75 22		 jne	 SHORT $LN33@unpack_loc
  00738	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0073d	05 f7 00 00 00	 add	 eax, 247		; 000000f7H
  00742	50		 push	 eax
  00743	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00748	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@BCDABIBG@get_free_entity?5?$CIget_local_enti@
  0074d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  00752	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00757	83 c4 10	 add	 esp, 16			; 00000010H
$LN33@unpack_loc:

; 663  : 
; 664  : 			set_local_entity_type (en, ENTITY_TYPE_FORCE);

  0075a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0075d	c7 00 0b 00 00
	00		 mov	 DWORD PTR [eax], 11	; 0000000bH

; 665  : 
; 666  : 			raw = (force *) malloc_fast_mem (sizeof (force));

  00763	68 a4 04 00 00	 push	 1188			; 000004a4H
  00768	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0076d	89 45 f4	 mov	 DWORD PTR _raw$[ebp], eax

; 667  : 
; 668  : 			set_local_entity_data (en, raw);

  00770	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00773	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00776	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 669  : 
; 670  : 			memset (raw, 0, sizeof (force));

  00779	68 a4 04 00 00	 push	 1188			; 000004a4H
  0077e	6a 00		 push	 0
  00780	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00783	50		 push	 eax
  00784	e8 00 00 00 00	 call	 _memset
  00789	83 c4 0c	 add	 esp, 12			; 0000000cH

; 671  : 
; 672  : 			//
; 673  : 			// unpack data (in exactly the same order as the data was packed)
; 674  : 			//
; 675  : 
; 676  :          unpack_string (en, STRING_TYPE_FORCE_NAME, raw->force_name);

  0078c	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0078f	50		 push	 eax
  00790	6a 02		 push	 2
  00792	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00795	51		 push	 ecx
  00796	e8 00 00 00 00	 call	 ?unpack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PAD@Z ; unpack_string

; 677  : 
; 678  : 			// keysite_force_root
; 679  : 
; 680  : 			unpack_list_root (en, LIST_TYPE_PILOT, &raw->pilot_root);

  0079b	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0079e	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  007a3	50		 push	 eax
  007a4	6a 1c		 push	 28			; 0000001cH
  007a6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  007a9	51		 push	 ecx
  007aa	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 681  : 
; 682  : 			unpack_list_link (en, LIST_TYPE_FORCE, &raw->force_link);

  007af	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  007b2	05 24 01 00 00	 add	 eax, 292		; 00000124H
  007b7	50		 push	 eax
  007b8	6a 0e		 push	 14			; 0000000eH
  007ba	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  007bd	51		 push	 ecx
  007be	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 683  : 
; 684  : 			// update_link
; 685  : 
; 686  : 			// task_generation
; 687  : 
; 688  : 			// campaign_criteria
; 689  : 
; 690  : 			// force_info_catagories
; 691  : 
; 692  : 			// sleep
; 693  : 
; 694  : 			raw->force_attitude = unpack_int_value (en, INT_TYPE_FORCE_ATTITUDE);

  007c3	6a 3b		 push	 59			; 0000003bH
  007c5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007c8	50		 push	 eax
  007c9	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  007ce	89 45 a8	 mov	 DWORD PTR tv473[ebp], eax
  007d1	8b 4d a8	 mov	 ecx, DWORD PTR tv473[ebp]
  007d4	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  007da	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  007dd	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  007e3	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  007e8	0b c1		 or	 eax, ecx
  007ea	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  007ed	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 695  : 
; 696  : 			raw->colour = unpack_int_value (en, INT_TYPE_COLOUR);

  007f3	6a 1c		 push	 28			; 0000001cH
  007f5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007f8	50		 push	 eax
  007f9	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  007fe	89 45 a8	 mov	 DWORD PTR tv482[ebp], eax
  00801	8b 4d a8	 mov	 ecx, DWORD PTR tv482[ebp]
  00804	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00807	c1 e1 08	 shl	 ecx, 8
  0080a	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  0080d	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  00813	25 ff f0 ff ff	 and	 eax, -3841		; fffff0ffH
  00818	0b c1		 or	 eax, ecx
  0081a	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  0081d	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax

; 697  : 
; 698  : 			raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  00823	68 bb 00 00 00	 push	 187			; 000000bbH
  00828	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0082b	50		 push	 eax
  0082c	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00831	89 45 a8	 mov	 DWORD PTR tv492[ebp], eax
  00834	8b 4d a8	 mov	 ecx, DWORD PTR tv492[ebp]
  00837	83 e1 03	 and	 ecx, 3
  0083a	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  0083d	8b 55 f4	 mov	 edx, DWORD PTR _raw$[ebp]
  00840	8b 82 a0 04 00
	00		 mov	 eax, DWORD PTR [edx+1184]
  00846	25 ff cf ff ff	 and	 eax, -12289		; ffffcfffH
  0084b	0b c1		 or	 eax, ecx
  0084d	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00850	89 81 a0 04 00
	00		 mov	 DWORD PTR [ecx+1184], eax
$LN2@unpack_loc:

; 699  : 
; 700  : 			break;
; 701  : 		}
; 702  : 	}
; 703  : }

  00856	5f		 pop	 edi
  00857	5e		 pop	 esi
  00858	5b		 pop	 ebx
  00859	8b e5		 mov	 esp, ebp
  0085b	5d		 pop	 ebp
  0085c	c2 08 00	 ret	 8
?unpack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP ; unpack_local_force_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\force\fc_pack.c
;	COMDAT ?pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv76 = -84						; size = 4
_campaign_criteria$ = -16				; size = 4
_raw$ = -12						; size = 4
_loop$ = -8						; size = 4
_count$ = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC ; pack_local_force_data, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 154  : 
; 155  : 	int
; 156  : 		count,
; 157  : 		loop;
; 158  : 
; 159  : 	force
; 160  : 		*raw;
; 161  : 
; 162  : 	campaign_criteria_type
; 163  : 		*campaign_criteria;
; 164  : 
; 165  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN31@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN30@pack_local
$LN31@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN30@pack_local:

; 166  : 
; 167  : 	ASSERT (en);

  0002d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00031	75 18		 jne	 SHORT $LN32@pack_local
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00038	83 c0 0e	 add	 eax, 14			; 0000000eH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OEOBAGCF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN32@pack_local:

; 168  : 
; 169  : 	raw = (force *) get_local_entity_data (en);

  0004b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00051	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 170  : 	
; 171  : 	switch (mode)

  00054	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00057	89 45 ac	 mov	 DWORD PTR tv76[ebp], eax
  0005a	83 7d ac 00	 cmp	 DWORD PTR tv76[ebp], 0
  0005e	74 19		 je	 SHORT $LN33@pack_local
  00060	83 7d ac 01	 cmp	 DWORD PTR tv76[ebp], 1
  00064	0f 84 a6 02 00
	00		 je	 $LN34@pack_local
  0006a	83 7d ac 02	 cmp	 DWORD PTR tv76[ebp], 2
  0006e	0f 84 70 05 00
	00		 je	 $LN35@pack_local
  00074	e9 f6 05 00 00	 jmp	 $LN2@pack_local
$LN33@pack_local:

; 172  : 	{
; 173  : 		////////////////////////////////////////
; 174  : 		case PACK_MODE_SERVER_SESSION:
; 175  : 		////////////////////////////////////////
; 176  : 		{
; 177  :          pack_string (en, STRING_TYPE_FORCE_NAME, raw->force_name);

  00079	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0007c	50		 push	 eax
  0007d	6a 02		 push	 2
  0007f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ?pack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PBD@Z ; pack_string

; 178  : 
; 179  : 			// keysite_force
; 180  : 	
; 181  : 			// pilot	root
; 182  : 	
; 183  : 			pack_list_root (en, LIST_TYPE_DIVISION, &raw->division_root);

  00088	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0008b	05 10 01 00 00	 add	 eax, 272		; 00000110H
  00090	50		 push	 eax
  00091	6a 0b		 push	 11			; 0000000bH
  00093	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 184  : 	
; 185  : 			pack_list_root (en, LIST_TYPE_CAMPAIGN_OBJECTIVE, &raw->campaign_objective_root);

  0009c	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0009f	05 14 01 00 00	 add	 eax, 276		; 00000114H
  000a4	50		 push	 eax
  000a5	6a 05		 push	 5
  000a7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000aa	51		 push	 ecx
  000ab	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 186  : 	
; 187  : 			// air_registry_root
; 188  : 			// ground_registry_root
; 189  : 			// sea_registry_root
; 190  : 
; 191  : //			pack_list_root (en, LIST_TYPE_INDEPENDENT_GROUP, &raw->independent_group_root);
; 192  : 	
; 193  : 			// force_link
; 194  : 		
; 195  : 			// update link
; 196  : 		
; 197  : 			// task generation //////////////////////////////////////////////
; 198  : 		
; 199  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_TASKS; loop ++)

  000b0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  000b7	eb 09		 jmp	 SHORT $LN6@pack_local
$LN4@pack_local:
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  000bc	83 c0 01	 add	 eax, 1
  000bf	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN6@pack_local:
  000c2	83 7d f8 1e	 cmp	 DWORD PTR _loop$[ebp], 30 ; 0000001eH
  000c6	7d 48		 jge	 SHORT $LN5@pack_local

; 200  : 			{
; 201  : 				pack_int_value (en, INT_TYPE_VALID, raw->task_generation [loop].valid);

  000c8	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  000cb	c1 e0 04	 shl	 eax, 4
  000ce	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  000d1	66 8b 94 01 3c
	01 00 00	 mov	 dx, WORD PTR [ecx+eax+316]
  000d9	66 83 e2 01	 and	 dx, 1
  000dd	0f b7 c2	 movzx	 eax, dx
  000e0	50		 push	 eax
  000e1	68 ef 00 00 00	 push	 239			; 000000efH
  000e6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000e9	51		 push	 ecx
  000ea	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 202  : 
; 203  : 				pack_int_value (en, INT_TYPE_TASK_GENERATION, raw->task_generation [loop].created);

  000ef	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  000f2	c1 e0 04	 shl	 eax, 4
  000f5	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  000f8	8b 94 01 40 01
	00 00		 mov	 edx, DWORD PTR [ecx+eax+320]
  000ff	52		 push	 edx
  00100	68 db 00 00 00	 push	 219			; 000000dbH
  00105	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 204  : 			}

  0010e	eb a9		 jmp	 SHORT $LN4@pack_local
$LN5@pack_local:

; 205  : 			/////////////////////////////////////////////////////////////////
; 206  : 		
; 207  : 			// campaign criteria ////////////////////////////////////////////
; 208  : 		
; 209  : 			count = 0;

  00110	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 210  : 		
; 211  : 			campaign_criteria = raw->campaign_criteria;

  00117	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0011a	8b 88 1c 03 00
	00		 mov	 ecx, DWORD PTR [eax+796]
  00120	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx
$LN7@pack_local:

; 212  : 		
; 213  : 			while (campaign_criteria)

  00123	83 7d f0 00	 cmp	 DWORD PTR _campaign_criteria$[ebp], 0
  00127	74 14		 je	 SHORT $LN8@pack_local

; 214  : 			{
; 215  : 				count ++;

  00129	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0012c	83 c0 01	 add	 eax, 1
  0012f	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 216  : 		
; 217  : 				campaign_criteria = campaign_criteria->next;

  00132	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00135	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00138	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx

; 218  : 			}

  0013b	eb e6		 jmp	 SHORT $LN7@pack_local
$LN8@pack_local:

; 219  : 		
; 220  : 			pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_COUNT, count);

  0013d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00140	50		 push	 eax
  00141	6a 11		 push	 17			; 00000011H
  00143	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00146	51		 push	 ecx
  00147	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 221  : 		
; 222  : 			campaign_criteria = raw->campaign_criteria;

  0014c	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0014f	8b 88 1c 03 00
	00		 mov	 ecx, DWORD PTR [eax+796]
  00155	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx
$LN9@pack_local:

; 223  : 		
; 224  : 			while (campaign_criteria)

  00158	83 7d f0 00	 cmp	 DWORD PTR _campaign_criteria$[ebp], 0
  0015c	0f 84 95 00 00
	00		 je	 $LN10@pack_local

; 225  : 			{
; 226  : 		
; 227  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_TYPE, campaign_criteria->criteria_type);

  00162	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00165	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00168	51		 push	 ecx
  00169	6a 13		 push	 19			; 00000013H
  0016b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0016e	52		 push	 edx
  0016f	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 228  : 		
; 229  : 				pack_int_value (en, INT_TYPE_VALID, campaign_criteria->valid);

  00174	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00177	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  0017b	51		 push	 ecx
  0017c	68 ef 00 00 00	 push	 239			; 000000efH
  00181	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00184	52		 push	 edx
  00185	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 230  : 		
; 231  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_RESULT, campaign_criteria->result);

  0018a	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  0018d	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00191	51		 push	 ecx
  00192	6a 12		 push	 18			; 00000012H
  00194	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00197	52		 push	 edx
  00198	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 232  : 		
; 233  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value1);

  0019d	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  001a0	0f bf 48 18	 movsx	 ecx, WORD PTR [eax+24]
  001a4	51		 push	 ecx
  001a5	6a 14		 push	 20			; 00000014H
  001a7	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001aa	52		 push	 edx
  001ab	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 234  : 		
; 235  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value2);

  001b0	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  001b3	0f bf 48 1a	 movsx	 ecx, WORD PTR [eax+26]
  001b7	51		 push	 ecx
  001b8	6a 14		 push	 20			; 00000014H
  001ba	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001bd	52		 push	 edx
  001be	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 236  : 		
; 237  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value3);

  001c3	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  001c6	0f bf 48 1c	 movsx	 ecx, WORD PTR [eax+28]
  001ca	51		 push	 ecx
  001cb	6a 14		 push	 20			; 00000014H
  001cd	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001d0	52		 push	 edx
  001d1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 238  : 		
; 239  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value4);

  001d6	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  001d9	0f bf 48 1e	 movsx	 ecx, WORD PTR [eax+30]
  001dd	51		 push	 ecx
  001de	6a 14		 push	 20			; 00000014H
  001e0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 240  : 		
; 241  : 				campaign_criteria = campaign_criteria->next;

  001e9	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  001ec	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  001ef	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx

; 242  : 			}

  001f2	e9 61 ff ff ff	 jmp	 $LN9@pack_local
$LN10@pack_local:

; 243  : 			/////////////////////////////////////////////////////////////////
; 244  : 		
; 245  : 			// force_info_criteria
; 246  : 		
; 247  : 			for (loop = 0; loop < NUM_FORCE_INFO_CATAGORIES; loop ++)

  001f7	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  001fe	eb 09		 jmp	 SHORT $LN13@pack_local
$LN11@pack_local:
  00200	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00203	83 c0 01	 add	 eax, 1
  00206	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN13@pack_local:
  00209	83 7d f8 08	 cmp	 DWORD PTR _loop$[ebp], 8
  0020d	7d 3a		 jge	 SHORT $LN12@pack_local

; 248  : 			{
; 249  : 				pack_int_value (en, INT_TYPE_VALUE, raw->force_info_current_hardware [loop]);

  0020f	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00212	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00215	8b 94 81 20 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+800]
  0021c	52		 push	 edx
  0021d	68 f2 00 00 00	 push	 242			; 000000f2H
  00222	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00225	50		 push	 eax
  00226	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 250  : 		
; 251  : 				pack_int_value (en, INT_TYPE_VALUE, raw->force_info_reserve_hardware [loop]);

  0022b	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0022e	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00231	8b 94 81 40 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+832]
  00238	52		 push	 edx
  00239	68 f2 00 00 00	 push	 242			; 000000f2H
  0023e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00241	50		 push	 eax
  00242	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 252  : 			}

  00247	eb b7		 jmp	 SHORT $LN11@pack_local
$LN12@pack_local:

; 253  : 			/////////////////////////////////////////////////////////////////
; 254  : 	
; 255  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_GROUPS; loop ++)

  00249	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00250	eb 09		 jmp	 SHORT $LN16@pack_local
$LN14@pack_local:
  00252	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00255	83 c0 01	 add	 eax, 1
  00258	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN16@pack_local:
  0025b	83 7d f8 1a	 cmp	 DWORD PTR _loop$[ebp], 26 ; 0000001aH
  0025f	7d 3a		 jge	 SHORT $LN15@pack_local

; 256  : 			{
; 257  : 				pack_int_value (en, INT_TYPE_VALUE, raw->kills [loop]);

  00261	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00264	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00267	8b 94 81 60 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+864]
  0026e	52		 push	 edx
  0026f	68 f2 00 00 00	 push	 242			; 000000f2H
  00274	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00277	50		 push	 eax
  00278	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 258  : 				pack_int_value (en, INT_TYPE_VALUE, raw->losses [loop]);

  0027d	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00280	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00283	8b 94 81 c8 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+968]
  0028a	52		 push	 edx
  0028b	68 f2 00 00 00	 push	 242			; 000000f2H
  00290	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 259  : //				pack_int_value (en, INT_TYPE_VALUE, raw->group_count [loop]);
; 260  : 			}

  00299	eb b7		 jmp	 SHORT $LN14@pack_local
$LN15@pack_local:

; 261  : 
; 262  : 			pack_float_value (en, FLOAT_TYPE_SLEEP, raw->sleep);

  0029b	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0029e	51		 push	 ecx
  0029f	f3 0f 10 80 9c
	04 00 00	 movss	 xmm0, DWORD PTR [eax+1180]
  002a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ac	6a 75		 push	 117			; 00000075H
  002ae	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002b1	51		 push	 ecx
  002b2	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 263  : 		
; 264  : 			pack_int_value (en, INT_TYPE_FORCE_ATTITUDE, raw->force_attitude);

  002b7	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  002ba	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  002c0	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  002c6	51		 push	 ecx
  002c7	6a 3b		 push	 59			; 0000003bH
  002c9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002cc	52		 push	 edx
  002cd	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 265  : 
; 266  : 			// sector_count
; 267  : 		
; 268  : 			pack_int_value (en, INT_TYPE_COLOUR, raw->colour);

  002d2	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  002d5	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  002db	c1 e9 08	 shr	 ecx, 8
  002de	83 e1 0f	 and	 ecx, 15			; 0000000fH
  002e1	51		 push	 ecx
  002e2	6a 1c		 push	 28			; 0000001cH
  002e4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002e7	52		 push	 edx
  002e8	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 269  : 		
; 270  : 			pack_int_value (en, INT_TYPE_SIDE, raw->side);

  002ed	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  002f0	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  002f6	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  002f9	83 e1 03	 and	 ecx, 3
  002fc	51		 push	 ecx
  002fd	68 bb 00 00 00	 push	 187			; 000000bbH
  00302	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00305	52		 push	 edx
  00306	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 271  : 	
; 272  : 			break;

  0030b	e9 5f 03 00 00	 jmp	 $LN2@pack_local
$LN34@pack_local:

; 273  : 		}
; 274  : 
; 275  : 		////////////////////////////////////////
; 276  : 		case PACK_MODE_CLIENT_SESSION:
; 277  : 		////////////////////////////////////////
; 278  : 		{
; 279  : 
; 280  :          pack_string (en, STRING_TYPE_FORCE_NAME, raw->force_name);

  00310	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00313	50		 push	 eax
  00314	6a 02		 push	 2
  00316	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00319	51		 push	 ecx
  0031a	e8 00 00 00 00	 call	 ?pack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PBD@Z ; pack_string

; 281  : 
; 282  : 			// keysite_force
; 283  : 	
; 284  : 			pack_list_root (en, LIST_TYPE_PILOT, &raw->pilot_root);

  0031f	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00322	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00327	50		 push	 eax
  00328	6a 1c		 push	 28			; 0000001cH
  0032a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0032d	51		 push	 ecx
  0032e	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 285  : 
; 286  : 			pack_list_root (en, LIST_TYPE_DIVISION, &raw->division_root);

  00333	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00336	05 10 01 00 00	 add	 eax, 272		; 00000110H
  0033b	50		 push	 eax
  0033c	6a 0b		 push	 11			; 0000000bH
  0033e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00341	51		 push	 ecx
  00342	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 287  : 
; 288  : 			pack_list_root (en, LIST_TYPE_CAMPAIGN_OBJECTIVE, &raw->campaign_objective_root);

  00347	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0034a	05 14 01 00 00	 add	 eax, 276		; 00000114H
  0034f	50		 push	 eax
  00350	6a 05		 push	 5
  00352	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00355	51		 push	 ecx
  00356	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 289  : 
; 290  : 			//	air_registry_root
; 291  : 			//	ground_registry_root
; 292  : 			//	sea_registry_root
; 293  : 
; 294  : //			pack_list_root (en, LIST_TYPE_INDEPENDENT_GROUP, &raw->independent_group_root);
; 295  : 	
; 296  : 			pack_list_link (en, LIST_TYPE_FORCE, &raw->force_link);

  0035b	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0035e	05 24 01 00 00	 add	 eax, 292		; 00000124H
  00363	50		 push	 eax
  00364	6a 0e		 push	 14			; 0000000eH
  00366	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00369	51		 push	 ecx
  0036a	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 297  : 
; 298  : 			// update link
; 299  : 
; 300  : 			// task generation //////////////////////////////////////////////
; 301  : 
; 302  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_TASKS; loop ++)

  0036f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00376	eb 09		 jmp	 SHORT $LN19@pack_local
$LN17@pack_local:
  00378	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0037b	83 c0 01	 add	 eax, 1
  0037e	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN19@pack_local:
  00381	83 7d f8 1e	 cmp	 DWORD PTR _loop$[ebp], 30 ; 0000001eH
  00385	7d 48		 jge	 SHORT $LN18@pack_local

; 303  : 			{
; 304  : 				pack_int_value (en, INT_TYPE_VALID, raw->task_generation [loop].valid);

  00387	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0038a	c1 e0 04	 shl	 eax, 4
  0038d	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00390	66 8b 94 01 3c
	01 00 00	 mov	 dx, WORD PTR [ecx+eax+316]
  00398	66 83 e2 01	 and	 dx, 1
  0039c	0f b7 c2	 movzx	 eax, dx
  0039f	50		 push	 eax
  003a0	68 ef 00 00 00	 push	 239			; 000000efH
  003a5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003a8	51		 push	 ecx
  003a9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 305  : 
; 306  : 				pack_int_value (en, INT_TYPE_TASK_GENERATION, raw->task_generation [loop].created);

  003ae	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  003b1	c1 e0 04	 shl	 eax, 4
  003b4	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  003b7	8b 94 01 40 01
	00 00		 mov	 edx, DWORD PTR [ecx+eax+320]
  003be	52		 push	 edx
  003bf	68 db 00 00 00	 push	 219			; 000000dbH
  003c4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003c7	50		 push	 eax
  003c8	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 307  : 			}

  003cd	eb a9		 jmp	 SHORT $LN17@pack_local
$LN18@pack_local:

; 308  : 			/////////////////////////////////////////////////////////////////
; 309  : 
; 310  : 			// campaign criteria ////////////////////////////////////////////
; 311  : 
; 312  : 			count = 0;

  003cf	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 313  : 
; 314  : 			campaign_criteria = raw->campaign_criteria;

  003d6	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  003d9	8b 88 1c 03 00
	00		 mov	 ecx, DWORD PTR [eax+796]
  003df	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx
$LN20@pack_local:

; 315  : 
; 316  : 			while (campaign_criteria)

  003e2	83 7d f0 00	 cmp	 DWORD PTR _campaign_criteria$[ebp], 0
  003e6	74 14		 je	 SHORT $LN21@pack_local

; 317  : 			{
; 318  : 				count ++;

  003e8	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  003eb	83 c0 01	 add	 eax, 1
  003ee	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax

; 319  : 
; 320  : 				campaign_criteria = campaign_criteria->next;

  003f1	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  003f4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  003f7	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx

; 321  : 			}

  003fa	eb e6		 jmp	 SHORT $LN20@pack_local
$LN21@pack_local:

; 322  : 
; 323  : 			pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_COUNT, count);

  003fc	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  003ff	50		 push	 eax
  00400	6a 11		 push	 17			; 00000011H
  00402	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00405	51		 push	 ecx
  00406	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 324  : 
; 325  : 			campaign_criteria = raw->campaign_criteria;

  0040b	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0040e	8b 88 1c 03 00
	00		 mov	 ecx, DWORD PTR [eax+796]
  00414	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx
$LN22@pack_local:

; 326  : 
; 327  : 			while (campaign_criteria)

  00417	83 7d f0 00	 cmp	 DWORD PTR _campaign_criteria$[ebp], 0
  0041b	0f 84 95 00 00
	00		 je	 $LN23@pack_local

; 328  : 			{
; 329  : 
; 330  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_TYPE, campaign_criteria->criteria_type);

  00421	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00424	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00427	51		 push	 ecx
  00428	6a 13		 push	 19			; 00000013H
  0042a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0042d	52		 push	 edx
  0042e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 331  : 
; 332  : 				pack_int_value (en, INT_TYPE_VALID, campaign_criteria->valid);

  00433	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00436	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  0043a	51		 push	 ecx
  0043b	68 ef 00 00 00	 push	 239			; 000000efH
  00440	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00443	52		 push	 edx
  00444	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 333  : 
; 334  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_RESULT, campaign_criteria->result);

  00449	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  0044c	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00450	51		 push	 ecx
  00451	6a 12		 push	 18			; 00000012H
  00453	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 335  : 
; 336  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value1);

  0045c	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  0045f	0f bf 48 18	 movsx	 ecx, WORD PTR [eax+24]
  00463	51		 push	 ecx
  00464	6a 14		 push	 20			; 00000014H
  00466	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00469	52		 push	 edx
  0046a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 337  : 
; 338  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value2);

  0046f	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00472	0f bf 48 1a	 movsx	 ecx, WORD PTR [eax+26]
  00476	51		 push	 ecx
  00477	6a 14		 push	 20			; 00000014H
  00479	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0047c	52		 push	 edx
  0047d	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 339  : 
; 340  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value3);

  00482	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00485	0f bf 48 1c	 movsx	 ecx, WORD PTR [eax+28]
  00489	51		 push	 ecx
  0048a	6a 14		 push	 20			; 00000014H
  0048c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0048f	52		 push	 edx
  00490	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 341  : 
; 342  : 				pack_int_value (en, INT_TYPE_CAMPAIGN_CRITERIA_VALUE, campaign_criteria->value4);

  00495	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  00498	0f bf 48 1e	 movsx	 ecx, WORD PTR [eax+30]
  0049c	51		 push	 ecx
  0049d	6a 14		 push	 20			; 00000014H
  0049f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004a2	52		 push	 edx
  004a3	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 343  : 
; 344  : 				campaign_criteria = campaign_criteria->next;

  004a8	8b 45 f0	 mov	 eax, DWORD PTR _campaign_criteria$[ebp]
  004ab	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  004ae	89 4d f0	 mov	 DWORD PTR _campaign_criteria$[ebp], ecx

; 345  : 			}

  004b1	e9 61 ff ff ff	 jmp	 $LN22@pack_local
$LN23@pack_local:

; 346  : 			/////////////////////////////////////////////////////////////////
; 347  : 
; 348  : 			// force_info_criteria
; 349  : 
; 350  : 			for (loop = 0; loop < NUM_FORCE_INFO_CATAGORIES; loop ++)

  004b6	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  004bd	eb 09		 jmp	 SHORT $LN26@pack_local
$LN24@pack_local:
  004bf	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  004c2	83 c0 01	 add	 eax, 1
  004c5	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN26@pack_local:
  004c8	83 7d f8 08	 cmp	 DWORD PTR _loop$[ebp], 8
  004cc	7d 3a		 jge	 SHORT $LN25@pack_local

; 351  : 			{
; 352  : 				pack_int_value (en, INT_TYPE_VALUE, raw->force_info_current_hardware [loop]);

  004ce	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  004d1	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  004d4	8b 94 81 20 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+800]
  004db	52		 push	 edx
  004dc	68 f2 00 00 00	 push	 242			; 000000f2H
  004e1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004e4	50		 push	 eax
  004e5	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 353  : 
; 354  : 				pack_int_value (en, INT_TYPE_VALUE, raw->force_info_reserve_hardware [loop]);

  004ea	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  004ed	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  004f0	8b 94 81 40 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+832]
  004f7	52		 push	 edx
  004f8	68 f2 00 00 00	 push	 242			; 000000f2H
  004fd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00500	50		 push	 eax
  00501	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 355  : 			}

  00506	eb b7		 jmp	 SHORT $LN24@pack_local
$LN25@pack_local:

; 356  : 			/////////////////////////////////////////////////////////////////
; 357  : 
; 358  : 			for (loop = 0; loop < NUM_ENTITY_SUB_TYPE_GROUPS; loop ++)

  00508	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0050f	eb 09		 jmp	 SHORT $LN29@pack_local
$LN27@pack_local:
  00511	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00514	83 c0 01	 add	 eax, 1
  00517	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN29@pack_local:
  0051a	83 7d f8 1a	 cmp	 DWORD PTR _loop$[ebp], 26 ; 0000001aH
  0051e	7d 3a		 jge	 SHORT $LN28@pack_local

; 359  : 			{
; 360  : 				pack_int_value (en, INT_TYPE_VALUE, raw->kills [loop]);

  00520	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00523	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00526	8b 94 81 60 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+864]
  0052d	52		 push	 edx
  0052e	68 f2 00 00 00	 push	 242			; 000000f2H
  00533	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00536	50		 push	 eax
  00537	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 361  : 				pack_int_value (en, INT_TYPE_VALUE, raw->losses [loop]);

  0053c	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0053f	8b 4d f4	 mov	 ecx, DWORD PTR _raw$[ebp]
  00542	8b 94 81 c8 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+968]
  00549	52		 push	 edx
  0054a	68 f2 00 00 00	 push	 242			; 000000f2H
  0054f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00552	50		 push	 eax
  00553	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 362  : //				pack_int_value (en, INT_TYPE_VALUE, raw->group_count [loop]);
; 363  : 			}

  00558	eb b7		 jmp	 SHORT $LN27@pack_local
$LN28@pack_local:

; 364  : 
; 365  : 			pack_float_value (en, FLOAT_TYPE_SLEEP, raw->sleep);

  0055a	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0055d	51		 push	 ecx
  0055e	f3 0f 10 80 9c
	04 00 00	 movss	 xmm0, DWORD PTR [eax+1180]
  00566	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0056b	6a 75		 push	 117			; 00000075H
  0056d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00570	51		 push	 ecx
  00571	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 366  : 
; 367  : 			pack_int_value (en, INT_TYPE_FORCE_ATTITUDE, raw->force_attitude);

  00576	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00579	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  0057f	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00585	51		 push	 ecx
  00586	6a 3b		 push	 59			; 0000003bH
  00588	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0058b	52		 push	 edx
  0058c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 368  : 
; 369  : 			pack_int_value (en, INT_TYPE_FORCE_SECTOR_COUNT, raw->sector_count);

  00591	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00594	8b 88 98 04 00
	00		 mov	 ecx, DWORD PTR [eax+1176]
  0059a	51		 push	 ecx
  0059b	6a 3d		 push	 61			; 0000003dH
  0059d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005a0	52		 push	 edx
  005a1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 370  : 
; 371  : 			pack_int_value (en, INT_TYPE_COLOUR, raw->colour);

  005a6	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  005a9	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  005af	c1 e9 08	 shr	 ecx, 8
  005b2	83 e1 0f	 and	 ecx, 15			; 0000000fH
  005b5	51		 push	 ecx
  005b6	6a 1c		 push	 28			; 0000001cH
  005b8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005bb	52		 push	 edx
  005bc	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 372  : 
; 373  : 			pack_int_value (en, INT_TYPE_SIDE, raw->side);

  005c1	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  005c4	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  005ca	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  005cd	83 e1 03	 and	 ecx, 3
  005d0	51		 push	 ecx
  005d1	68 bb 00 00 00	 push	 187			; 000000bbH
  005d6	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005d9	52		 push	 edx
  005da	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 374  : 
; 375  : 			break;

  005df	e9 8b 00 00 00	 jmp	 $LN2@pack_local
$LN35@pack_local:

; 376  : 		}
; 377  : 		////////////////////////////////////////
; 378  : 		case PACK_MODE_BROWSE_SESSION:
; 379  : 		////////////////////////////////////////
; 380  : 		{
; 381  :          pack_string (en, STRING_TYPE_FORCE_NAME, raw->force_name);

  005e4	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  005e7	50		 push	 eax
  005e8	6a 02		 push	 2
  005ea	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  005ed	51		 push	 ecx
  005ee	e8 00 00 00 00	 call	 ?pack_string@@YGXPAUENTITY@@W4STRING_TYPES@@PBD@Z ; pack_string

; 382  : 
; 383  : 			// keysite_force_root
; 384  : 
; 385  : 			pack_list_root (en, LIST_TYPE_PILOT, &raw->pilot_root);

  005f3	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  005f6	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  005fb	50		 push	 eax
  005fc	6a 1c		 push	 28			; 0000001cH
  005fe	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00601	51		 push	 ecx
  00602	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 386  : 
; 387  : 			pack_list_link (en, LIST_TYPE_FORCE, &raw->force_link);

  00607	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0060a	05 24 01 00 00	 add	 eax, 292		; 00000124H
  0060f	50		 push	 eax
  00610	6a 0e		 push	 14			; 0000000eH
  00612	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00615	51		 push	 ecx
  00616	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 388  : 
; 389  : 			// update link
; 390  : 
; 391  : 			// task_generation
; 392  : 
; 393  : 			// campaign_criteria
; 394  : 
; 395  : 			// force_info_catagories
; 396  : 
; 397  : 			// sleep
; 398  : 
; 399  : 			pack_int_value (en, INT_TYPE_FORCE_ATTITUDE, raw->force_attitude);

  0061b	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  0061e	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  00624	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0062a	51		 push	 ecx
  0062b	6a 3b		 push	 59			; 0000003bH
  0062d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00630	52		 push	 edx
  00631	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 400  : 
; 401  : 			pack_int_value (en, INT_TYPE_COLOUR, raw->colour);

  00636	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00639	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  0063f	c1 e9 08	 shr	 ecx, 8
  00642	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00645	51		 push	 ecx
  00646	6a 1c		 push	 28			; 0000001cH
  00648	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0064b	52		 push	 edx
  0064c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 402  : 
; 403  : 			pack_int_value (en, INT_TYPE_SIDE, raw->side);

  00651	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00654	8b 88 a0 04 00
	00		 mov	 ecx, DWORD PTR [eax+1184]
  0065a	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  0065d	83 e1 03	 and	 ecx, 3
  00660	51		 push	 ecx
  00661	68 bb 00 00 00	 push	 187			; 000000bbH
  00666	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00669	52		 push	 edx
  0066a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN2@pack_local:

; 404  : 
; 405  : 			break;
; 406  : 		}
; 407  : 	}
; 408  : }

  0066f	5f		 pop	 edi
  00670	5e		 pop	 esi
  00671	5b		 pop	 ebx
  00672	8b e5		 mov	 esp, ebp
  00674	5d		 pop	 ebp
  00675	c2 08 00	 ret	 8
?pack_local_force_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP ; pack_local_force_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\force\fc_pack.c
;	COMDAT ?overload_force_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_force_pack_functions@@YGXXZ PROC		; overload_force_pack_functions, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 143  : 	fn_pack_local_entity_data[ENTITY_TYPE_FORCE]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 0b	 imul	 ecx, eax, 11
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 144  : 
; 145  : 	fn_unpack_local_entity_data[ENTITY_TYPE_FORCE]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 0b	 imul	 ecx, eax, 11
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 146  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_force_pack_functions@@YGXXZ ENDP		; overload_force_pack_functions
_TEXT	ENDS
END
